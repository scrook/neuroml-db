// Cell: cACint209_L23_LBC_fece30537a_0_0
/*
{
  "id" : "cACint209_L23_LBC_fece30537a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.590925, 11.8388, 0.583371, 4.09309", "-0.499792, 10.635, 0.506458, 6.93288", "-0.40866, 9.43111, 0.429545, 11.0621", "-0.317527, 8.22727, 0.352632, 13.312", "-0.226395, 7.02342, 0.275719, 15.0574", "-0.135262, 5.81958, 0.198806, 15.7423", "-0.0441295, 4.61573, 0.121893, 16.0301", "0.0470031, 3.41189, 0.0449796, 16.2674", "0.138136, 2.20804, -0.0319334, 16.5571", "0.229268, 1.0042, -0.108846, 16.6041", "0.320401, -0.199646, -0.18576, 16.1727", "0.411533, -1.40349, -0.262673, 15.6872", "0.502666, -2.60734, -0.339586, 14.7845", "0.593799, -3.81118, -0.416499, 13.704", "0.684931, -5.01503, -0.493412, 12.4251", "0.776064, -6.21887, -0.570325, 11.0595", "0.867196, -7.42271, -0.647238, 9.34375", "0.958329, -8.62656, -0.724151, 7.38881", "1.04946, -9.8304, -0.801064, 5.96404", "1.14059, -11.0342, -0.877977, 4.44305", "1.23173, -12.2381, -0.95489, 2.74669" ]
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "0.199429, 5.54716, -20.411, 1.25", "0.199429, 5.54716, -20.411, 1.25", "-0.74753, 6.13951, -20.411, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "4.00943, -0.952345, -23.221, 1.99", "5.23349, -1.96611, -22.7771, 1.99", "6.59972, -3.09762, -22.2815, 2.06", "8.29364, -4.50052, -21.6672, 2.36", "9.33802, -5.36548, -21.2884, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.81943, 8.11966, -14.791, 1.33", "3.15503, 8.73191, -14.791, 1.33", "3.27925, 8.94509, -14.791, 1.33", "3.75605, 9.71891, -14.791, 1.33", "4.6041, 11.1644, -14.7753, 1.55", "4.65507, 11.2536, -14.7739, 1.55", "5.21157, 12.3013, -14.7553, 1.55", "5.26178, 12.408, -14.7532, 1.55", "5.7859, 13.7176, -14.5223, 1.69", "6.15905, 14.84, -14.1638, 1.69", "6.17825, 14.9138, -14.1306, 1.69", "6.34309, 15.6595, -13.7613, 1.55", "6.57786, 17.1614, -12.8939, 1.77", "6.88472, 19.7124, -11.1952, 1.47", "6.88924, 19.8056, -11.1143, 1.47", "6.8938, 19.953, -10.9528, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-7.34057, 6.61816, -4.97108, 1.84", "-7.34057, 6.61816, -4.97108, 1.84", "-7.74298, 7.15502, -4.97108, 1.77", "-8.34089, 7.95459, -4.97108, 1.77", "-8.37332, 7.99938, -4.97108, 1.77", "-8.80805, 8.61591, -4.97108, 1.47", "-9.20156, 9.20859, -4.97108, 1.55", "-9.58795, 9.83861, -4.97108, 1.92", "-9.77974, 10.1678, -4.97108, 1.92", "-10.0898, 10.7318, -4.97108, 1.77", "-10.1465, 10.8366, -4.97108, 1.77", "-10.5928, 11.655, -4.97108, 1.62", "-11.0567, 12.506, -4.97108, 1.4", "-11.4109, 13.1522, -4.97108, 1.4", "-11.7229, 13.708, -4.97108, 1.47", "-12.0766, 14.3071, -4.97108, 1.69", "-12.7096, 15.3172, -4.97108, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.74943, 8.53966, 6.46892, 1.4", "3.79664, 8.5797, 6.47764, 1.4", "4.58516, 9.12963, 6.54628, 1.18", "5.44275, 9.61721, 6.56795, 1.03", "6.38973, 9.98061, 6.51419, 0.88", "7.29587, 10.2617, 6.42644, 0.81", "7.61311, 10.3384, 6.40215, 0.81", "8.86445, 10.5359, 6.31056, 0.96", "9.56873, 10.5661, 6.33713, 0.96", "11.2029, 10.4315, 6.59801, 0.96", "11.314, 10.4025, 6.63979, 0.96", "12.5122, 9.98041, 7.42442, 0.96", "12.6256, 9.93581, 7.52117, 0.96", "14.0711, 9.35912, 9.07095, 1.47", "14.7154, 9.12042, 9.84066, 1.47", "15.9622, 8.76912, 11.3672, 0.66", "17.0501, 8.58178, 12.5615, 1.11", "17.1721, 8.57324, 12.6784, 1.11", "17.7025, 8.59178, 13.1002, 1.11", "18.7316, 8.77713, 13.7064, 0.81", "19.9396, 9.14858, 14.263, 0.66", "21.1341, 9.59001, 14.6579, 0.88", "21.7959, 9.81961, 14.8281, 0.88", "21.9529, 9.87151, 14.8657, 0.88", "22.8137, 10.1352, 15.0713, 1.11", "23.9589, 10.4941, 15.3402, 0.88", "24.8145, 10.7806, 15.5967, 0.81", "24.8769, 10.8064, 15.6212, 0.81", "25.6224, 11.1821, 15.9939, 1.03", "26.5039, 11.7931, 16.7049, 0.81", "26.5438, 11.8319, 16.7509, 0.81", "27.1919, 12.7273, 17.7747, 0.52", "27.6244, 13.5272, 18.6459, 1.03", "27.783, 13.9303, 19.0836, 1.25", "28.1826, 15.6871, 20.9777, 0.29", "28.2212, 16.1671, 21.4634, 0.29", "28.2217, 16.5953, 21.8811, 0.29", "28.2143, 16.6428, 21.921, 0.29", "28.0052, 17.4205, 22.481, 0.29", "27.9888, 17.4721, 22.5126, 0.29", "27.7059, 18.0579, 22.7572, 0.29", "27.6721, 18.1173, 22.7846, 0.29", "27.2656, 18.8467, 23.1171, 0.29", "27.0738, 19.2235, 23.2703, 0.44", "26.4681, 20.5511, 23.7563, 0.29", "25.9845, 21.5331, 24.0878, 0.22", "25.8012, 21.8669, 24.2029, 0.22", "25.7031, 22.0617, 24.2766, 0.22", "25.4606, 22.5894, 24.4881, 0.22", "25.4368, 22.656, 24.5109, 0.22", "25.2417, 23.4796, 24.7309, 0.22", "25.2207, 23.6724, 24.7847, 0.22", "25.1339, 25.1869, 25.2145, 0.22", "25.1155, 25.4006, 25.2746, 0.22", "24.9844, 26.3543, 25.5386, 0.22", "24.977, 26.4151, 25.5554, 0.22", "24.9217, 27.0604, 25.7334, 0.37", "24.8665, 27.5891, 25.8399, 0.37", "24.7164, 28.3613, 25.8584, 0.22", "24.5774, 28.8852, 25.866, 0.22", "30.5421, 34.3085, 32.2977, 0.22", "37.3941, 40.1597, 37.3836, 0.22", "43.9245, 46.6463, 42.1873, 0.22", "50.7066, 52.6964, 47.1557, 0.22", "57.2696, 58.3191, 52.8145, 0.22", "62.7903, 63.563, 59.7503, 0.22", "66.7645, 69.7937, 66.9816, 0.22", "69.1537, 76.1224, 74.7911, 0.22", "70.971, 81.7992, 83.1833, 0.22", "73.9, 87.7442, 91.0877, 0.22", "77.018, 92.757, 99.4925, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.49943, -4.25984, 10.469, 1.62", "7.54503, -4.77935, 10.4136, 1.62", "8.98166, -5.49313, 10.3375, 1.84", "9.9828, -5.99054, 10.2844, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.57943, 1.58866, -5.66108, 1.18", "9.55813, 1.74624, -5.95233, 1.18", "11.3823, 1.96601, -6.62975, 1.11", "12.6172, 2.04001, -7.09907, 1.55", "12.7937, 2.04273, -7.16569, 1.55", "15.7155, 1.99493, -8.20531, 1.4", "17.2762, 1.93429, -8.68539, 1.03", "17.3327, 1.92853, -8.70368, 1.03", "18.5612, 1.712, -9.02204, 0.88", "19.6956, 1.46994, -9.15593, 1.62", "20.656, 1.30019, -9.04367, 1.92", "21.5867, 1.19628, -8.69416, 1.92", "21.652, 1.19316, -8.66826, 1.92", "23.6205, 1.18668, -7.9451, 0.96", "24.7388, 1.22654, -7.56328, 0.52", "26.1244, 1.26748, -7.13694, 1.03", "27.0022, 1.26583, -6.92144, 1.92", "28.5529, 1.12497, -6.66194, 1.11", "29.1961, 1.01956, -6.59475, 0.74", "30.1078, 0.809609, -6.58658, 0.81", "30.7849, 0.597899, -6.58235, 1.18", "31.4739, 0.340475, -6.57702, 0.96", "32.8074, -0.192816, -6.499, 0.44", "33.6549, -0.436414, -6.38354, 0.59", "34.5412, -0.487352, -6.29175, 1.55", "34.6199, -0.473742, -6.28645, 1.55", "35.4498, -0.1958, -6.25459, 1.55", "35.5134, -0.167181, -6.25354, 1.55", "36.7282, 0.489499, -6.2547, 0.81", "37.742, 1.05192, -6.26535, 1.11", "38.2444, 1.36282, -6.29244, 1.4", "38.6094, 1.60532, -6.32776, 1.4", "38.6664, 1.64574, -6.33588, 1.4", "39.3005, 2.12206, -6.42741, 1.18", "40.0006, 2.66167, -6.51015, 0.88", "41.2368, 3.58989, -6.61574, 0.66", "41.7631, 3.95196, -6.64174, 0.59", "41.867, 4.01138, -6.63345, 0.59", "42.8448, 4.44117, -6.43714, 0.52", "43.6833, 4.70431, -6.16903, 1.33", "44.0473, 4.7738, -6.01788, 1.69", "44.3686, 4.80895, -5.8622, 1.69", "45.947, 4.97298, -5.19161, 0.74", "46.7925, 5.09215, -4.927, 0.29", "46.8505, 5.10373, -4.91979, 0.29", "47.4229, 5.26797, -4.95962, 0.29", "47.8172, 5.4137, -5.0389, 0.74", "48.9699, 5.91905, -5.41866, 0.59", "49.7615, 6.3083, -5.7798, 0.37", "50.5902, 6.73538, -6.19603, 1.47", "51.385, 7.15374, -6.59096, 2.06", "51.809, 7.38177, -6.79867, 1.69", "52.7138, 7.86734, -7.21882, 1.03", "53.7006, 8.40687, -7.56851, 0.37", "54.7433, 8.99995, -7.85162, 0.37", "55.4636, 9.44561, -7.94154, 0.44", "55.9888, 9.79671, -7.93848, 1.18", "56.438, 10.1098, -7.87866, 1.47", "57.6352, 11.0096, -7.54374, 1.4", "58.5184, 11.6792, -7.25439, 0.66", "59.4346, 12.3465, -6.98389, 0.29", "59.4835, 12.38, -6.9741, 0.29", "60.2254, 12.8134, -6.96036, 0.29", "60.959, 13.1778, -7.06476, 0.74", "62.1611, 13.6856, -7.38751, 1.69", "62.9838, 13.9904, -7.60857, 2.06", "63.4999, 14.1645, -7.74128, 1.69", "65.0927, 14.6704, -8.08655, 0.59", "66.0585, 14.9607, -8.25615, 0.44", "66.8729, 15.1935, -8.35276, 0.44", "68.3405, 15.6087, -8.4098, 0.74", "68.9113, 15.763, -8.40223, 1.33", "69.3386, 15.8545, -8.37163, 1.33", "69.6933, 15.9106, -8.31447, 1.4", "70.3542, 15.9387, -8.23224, 1.18", "71.3761, 15.8794, -8.20168, 0.29", "72.1657, 15.753, -8.31242, 0.29", "73.4081, 15.5371, -8.60645, 0.29", "73.4717, 15.5239, -8.63164, 0.29", "74.8879, 15.2059, -9.27317, 0.29", "75.5423, 15.0526, -9.59474, 1.4", "76.6713, 14.7926, -10.1555, 2.06", "77.1561, 14.6913, -10.3867, 2.06", "79.3101, 14.3145, -11.3115, 0.74", "80.2844, 14.1422, -11.6695, 0.44", "81.4719, 13.9333, -12.021, 0.74", "82.193, 13.8215, -12.1859, 0.52", "82.8467, 13.745, -12.2947, 0.29", "84.0169, 13.6643, -12.422, 0.81", "84.6023, 13.6686, -12.4616, 0.81", "86.1148, 13.781, -12.5954, 0.44", "87.3081, 13.9456, -12.7173, 1.47", "88.1547, 14.1119, -12.8597, 2.21", "89.2167, 14.3736, -13.1217, 0.29", "90.189, 14.6685, -13.4446, 0.44", "90.7016, 14.8468, -13.6534, 0.44", "90.8114, 14.8877, -13.704, 0.44", "91.8451, 15.2231, -14.2018, 0.29", "92.4229, 15.3538, -14.4643, 0.96", "92.4869, 15.3622, -14.4901, 0.96", "92.9099, 15.4022, -14.6298, 1.11", "93.9416, 15.4869, -14.9305, 0.59", "94.8684, 15.5735, -15.1738, 0.29", "96.023, 15.6923, -15.4581, 0.81", "96.0799, 15.6993, -15.4743, 0.81", "97.2467, 15.8335, -15.9174, 0.37", "97.6535, 15.8809, -16.1032, 0.37", "98.7505, 16.0381, -16.6762, 1.4", "99.3839, 16.1539, -17.0266, 1.69", "99.7107, 16.2248, -17.2037, 1.69", "101.419, 16.5767, -18.1084, 0.37", "101.479, 16.587, -18.1418, 0.37", "102.092, 16.6827, -18.5162, 0.29", "102.66, 16.7065, -18.8762, 0.29", "102.728, 16.7073, -18.9182, 0.29", "103.939, 16.7085, -19.6462, 1.55", "104.721, 16.695, -20.1124, 1.92", "105.542, 16.6897, -20.6077, 1.69", "107.355, 16.6737, -21.6846, 0.29", "108.225, 16.6745, -22.1771, 0.37", "108.502, 16.6875, -22.3264, 0.37", "108.566, 16.6957, -22.3543, 0.37", "109.744, 16.9376, -22.6506, 0.29", "110.322, 17.0842, -22.7066, 0.66", "110.673, 17.1939, -22.7306, 0.66", "110.815, 17.2385, -22.7424, 0.66", "111.972, 17.6379, -22.8567, 0.29", "113.282, 18.1594, -23.0251, 1.77", "113.899, 18.4215, -23.1144, 2.21", "115.601, 19.1891, -23.4148, 0.29", "116.2, 19.4471, -23.5333, 0.88", "116.548, 19.5896, -23.6095, 0.88", "117.584, 20.0041, -23.8801, 0.22", "118.098, 20.2049, -24.006, 0.81", "118.576, 20.3852, -24.1041, 0.81", "119.908, 20.8277, -24.2943, 0.29", "120.248, 20.9286, -24.3467, 0.29", "120.324, 20.951, -24.36, 0.29", "121.098, 21.2103, -24.5138, 0.29", "121.784, 21.5304, -24.7132, 1.18", "122.094, 21.6927, -24.8182, 1.4", "122.195, 21.7513, -24.8469, 1.4", "122.571, 21.9508, -24.9246, 1.4", "123.08, 22.1791, -24.9908, 1.18", "124.428, 22.6524, -24.9661, 0.29", "125.059, 22.8461, -24.8899, 0.29", "126.005, 23.1488, -24.7195, 0.96", "126.478, 23.3025, -24.6182, 1.47", "126.974, 23.4607, -24.4967, 1.18", "128.312, 23.8803, -24.1327, 0.29", "128.91, 24.0947, -23.9549, 0.29", "129.355, 24.3194, -23.8324, 0.66", "130.042, 24.7486, -23.6774, 0.22", "130.566, 25.1372, -23.5599, 0.22", "130.618, 25.1827, -23.5467, 0.22", "131.216, 25.7551, -23.3966, 0.22", "132.233, 26.6932, -23.106, 0.96", "132.307, 26.7573, -23.0843, 1.33", "132.812, 27.197, -22.9393, 1.55", "133.701, 27.9781, -22.7867, 0.22", "134.074, 28.2924, -22.7589, 0.37", "134.426, 28.5777, -22.7757, 0.37", "135.048, 29.1115, -22.8957, 0.29", "135.577, 29.5958, -23.0307, 0.59", "136.535, 30.5434, -23.3509, 0.29", "136.583, 30.5928, -23.3706, 0.29", "137.409, 31.4921, -23.7121, 0.29", "138.083, 32.2532, -23.9814, 1.11", "138.328, 32.5228, -24.0669, 1.4", "138.384, 32.5802, -24.0785, 1.4", "138.763, 32.9499, -24.1109, 1.4", "139.604, 33.841, -24.1636, 0.22", "139.915, 34.1971, -24.1758, 0.22", "140.391, 34.7749, -24.1851, 0.59", "141.227, 35.8477, -24.1962, 0.22", "141.317, 35.9717, -24.1972, 0.22", "141.97, 37.0937, -24.1556, 0.22", "142.298, 37.818, -24.0953, 0.22", "142.327, 37.8955, -24.0886, 0.22", "142.493, 38.3971, -24.046, 1.03", "142.646, 38.9223, -24.0041, 1.25", "143.161, 40.6666, -23.8376, 0.22", "143.324, 41.2256, -23.769, 0.37", "143.626, 42.374, -23.6103, 0.22", "143.767, 42.9059, -23.5324, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.80057, 3.53116, -6.85108, 0.88", "-7.86663, 3.5596, -6.88945, 0.88", "-8.53476, 3.93629, -7.28387, 0.88", "-9.73305, 4.66839, -7.98187, 0.88", "-9.91684, 4.78805, -8.08034, 0.88", "-10.4304, 5.13407, -8.34168, 1.03", "-11.3961, 5.79976, -8.7732, 1.11", "-12.3767, 6.51583, -9.12675, 1.11", "-12.5322, 6.6324, -9.17486, 1.11", "-13.3185, 7.19551, -9.31512, 1.11", "-13.4235, 7.2633, -9.32002, 1.11", "-14.6734, 7.9706, -9.22662, 1.11", "-15.9415, 8.58414, -9.0062, 1.55", "-16.649, 8.8819, -8.83008, 1.55", "-18.063, 9.43284, -8.43716, 1.18", "-19.504, 9.96201, -8.00222, 0.96", "-20.5494, 10.3493, -7.67542, 1.25", "-21.3253, 10.6404, -7.42023, 1.25", "-22.2179, 11.015, -7.14898, 0.81", "-23.1945, 11.508, -6.90511, 0.81", "-23.7683, 11.8525, -6.83134, 1.18", "-24.623, 12.448, -6.83818, 1.18", "-25.0141, 12.7556, -6.86746, 1.47", "-25.8953, 13.4962, -6.98, 1.47", "-26.6807, 14.1729, -7.1155, 1.47", "-27.319, 14.6752, -7.1888, 1.47", "-28.1571, 15.2053, -7.24582, 1.18", "-29.0997, 15.6496, -7.26518, 0.81", "-29.2566, 15.6942, -7.25748, 0.81", "-30.5678, 15.8544, -7.10725, 0.66", "-32.1083, 15.8991, -6.89017, 0.66", "-33.3545, 15.8815, -6.68786, 0.59", "-33.7649, 15.8671, -6.61324, 0.44", "-34.7905, 15.8416, -6.47036, 0.44", "-35.7454, 15.9005, -6.39513, 1.33", "-36.5323, 16.0508, -6.41736, 1.69", "-37.0519, 16.2365, -6.46266, 2.06", "-37.4955, 16.4339, -6.48914, 2.21", "-38.3496, 16.823, -6.56374, 2.14", "-39.554, 17.3276, -6.67353, 0.81", "-41.0477, 17.8378, -6.75439, 0.44", "-42.1028, 18.1088, -6.77741, 0.44", "-43.0113, 18.2547, -6.73767, 0.44", "-44.2789, 18.3546, -6.59655, 0.44", "-45.3423, 18.3701, -6.40447, 1.03", "-46.2749, 18.3293, -6.18489, 1.33", "-46.9335, 18.2691, -5.99341, 1.33", "-48.3801, 18.1441, -5.5566, 0.44", "-49.2276, 18.1365, -5.27356, 0.29", "-49.4766, 18.1776, -5.16925, 0.29", "-49.7938, 18.3449, -5.06178, 0.29", "-49.8664, 18.4041, -5.04378, 0.29", "-50.3523, 18.8865, -4.95731, 0.29", "-50.8967, 19.4031, -4.94124, 0.29", "-51.4203, 19.8151, -4.95183, 0.29", "-52.6799, 20.5821, -4.97109, 1.84", "-53.1034, 20.7752, -4.978, 2.5", "-53.8317, 20.9945, -4.96974, 2.43", "-55.8395, 21.3079, -4.90577, 0.29", "-56.5665, 21.3438, -4.86899, 0.29", "-57.5092, 21.3121, -4.8049, 0.52", "-58.1205, 21.2444, -4.75086, 0.52", "-59.1451, 21.1128, -4.62617, 0.29", "-59.6469, 21.0462, -4.5653, 0.29", "-60.6064, 21.0036, -4.28083, 1.25", "-61.0813, 21.0471, -4.09722, 1.77", "-61.2293, 21.0821, -4.01212, 1.77", "-61.79, 21.2616, -3.61833, 1.77", "-62.5106, 21.541, -3.06791, 1.77", "-64.823, 22.5209, -1.3019, 0.29", "-64.8759, 22.5455, -1.26318, 0.29", "-66.7531, 23.4893, 0.00648699, 1.03", "-67.1365, 23.7012, 0.270177, 1.69", "-67.7399, 24.0508, 0.692989, 1.84", "-69.2046, 24.9165, 1.69883, 0.29", "-70.1332, 25.476, 2.2405, 0.96", "-70.7523, 25.827, 2.57809, 1.03", "-72.4314, 26.6827, 3.40393, 0.37", "-73.4157, 27.0788, 3.85185, 0.29", "-74.1119, 27.2548, 4.12384, 1.03", "-74.6334, 27.2897, 4.26958, 1.33", "-75.2359, 27.2481, 4.33627, 1.33", "-75.9226, 27.1668, 4.31835, 1.03", "-77.4244, 26.9141, 4.09857, 0.37", "-78.3418, 26.7495, 3.90964, 0.29", "-78.834, 26.6674, 3.80041, 0.29", "-80.4202, 26.4449, 3.42864, 0.29", "-81.1163, 26.3722, 3.25739, 0.88", "-91.4512, 30.5701, 6.69666, 0.88", "-101.046, 36.467, 10.0427, 0.88", "-108.896, 43.7923, 15.0149, 0.88", "-115.07, 51.8137, 21.2288, 0.88", "-119.589, 60.3494, 28.1983, 0.88", "-122.64, 69.0328, 35.7705, 0.88", "-125.404, 78.5814, 42.4528, 0.88", "-126.451, 88.4701, 49.1653, 0.88", "-127.862, 98.2544, 55.9524, 0.88", "-129.14, 107.215, 63.7272, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.90057, 11.1646, 1.64892, 2.43", "-2.90057, 11.1646, 1.64892, 2.43", "-3.2169, 11.646, 1.70097, 2.43", "-3.86753, 12.6904, 1.79581, 1.77", "-4.2959, 13.5234, 1.85779, 1.55", "-4.32743, 13.5968, 1.86239, 1.55", "-4.57083, 14.2708, 1.93911, 1.55", "-4.5928, 14.3473, 1.9497, 1.55", "-4.82918, 15.5116, 2.12317, 1.55", "-5.00947, 17.0917, 2.43724, 1.4", "-5.03992, 17.9902, 2.63717, 1.4", "-5.01796, 19.4272, 2.98963, 1.4", "-4.94874, 20.3347, 3.23166, 1.55", "-4.77893, 21.4347, 3.57635, 1.99", "-4.42971, 22.7314, 4.05108, 2.14", "-4.1798, 23.3906, 4.36458, 1.92", "-4.14759, 23.465, 4.40653, 1.92", "-3.96399, 23.8429, 4.6441, 1.77", "-3.46293, 24.8666, 5.38125, 1.18", "-3.15539, 25.4829, 5.86796, 0.81", "-2.61755, 26.6577, 6.8039, 0.81", "-2.36545, 27.2736, 7.32921, 1.4", "-2.34726, 27.3225, 7.37202, 1.4", "-2.19241, 27.8307, 7.84512, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.289429, -13.1219, 1.14892, 3.76", "0.289429, -13.1219, 1.14892, 3.76", "0.0806727, -14.9786, 1.36707, 3.17", "-0.164924, -17.1631, 1.62371, 3.17", "-0.399816, -19.2523, 1.86917, 2.95", "-0.518507, -20.308, 1.9932, 2.95", "-0.736849, -22.2501, 2.22137, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998321236409
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.23173, -12.2381, -0.95489, 0.701622", "2.36401, -27.1953, -0.95489, 0.701622", "3.49629, -42.1525, -0.95489, 0.701622" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-0.74753, 6.13951, -20.411, 0.66", "-3.39968, 4.45508, -18.3975, 0.66", "-3.45966, 4.4229, -18.3467, 0.66", "-5.88788, 3.39756, -16.1897, 0.66", "-7.13587, 3.07802, -15.0975, 0.66", "-7.26238, 3.06615, -14.9878, 0.66", "-8.47044, 3.18154, -13.9619, 1.18", "-10.3765, 3.9842, -12.1085, 1.03", "-11.1684, 4.59528, -11.508, 1.18", "-12.3272, 5.86971, -10.8912, 0.59", "-13.2074, 6.94441, -10.5118, 0.37", "-14.1166, 8.06985, -10.2054, 0.37", "-14.8193, 8.90645, -10.0452, 1.33", "-16.3057, 10.4124, -9.8693, 2.43", "-16.9899, 10.9607, -9.80476, 2.87", "-17.7657, 11.4553, -9.7707, 3.02", "-18.9824, 12.1002, -9.76416, 2.65", "-21.1311, 13.0647, -9.87227, 0.96", "-22.7523, 13.7256, -10.0263, 0.66", "-23.4672, 13.9912, -10.125, 0.88", "-24.8905, 14.5249, -10.3216, 0.88", "-24.9674, 14.5557, -10.3325, 0.88", "-26.1661, 15.1614, -10.4215, 0.37", "-26.9029, 15.6453, -10.3823, 0.37", "-26.9702, 15.6949, -10.3749, 0.37", "-28.2506, 16.6946, -10.1656, 1.11", "-28.6923, 17.0413, -10.1019, 1.25", "-30.4164, 18.3632, -9.9688, 0.22", "-31.0503, 18.8388, -9.99099, 0.66", "-32.4471, 19.8417, -10.2979, 0.66", "-32.5237, 19.8961, -10.3254, 0.66", "-33.6072, 20.6276, -11.0118, 0.66", "-33.6664, 20.6622, -11.0597, 0.66", "-34.6806, 21.1609, -11.9691, 1.69", "-35.4604, 21.5506, -12.6497, 2.28", "-36.059, 21.837, -13.1436, 2.65", "-38.6513, 23.0328, -15.1482, 0.52", "-40.3722, 23.8128, -16.4508, 0.37", "-41.4764, 24.3022, -17.28, 2.5", "-42.4315, 24.7132, -17.9756, 3.02", "-43.9352, 25.3557, -19.0074, 0.37", "-44.7848, 25.7493, -19.5451, 0.29", "-45.9772, 26.4194, -20.1066, 0.59", "-46.0437, 26.4614, -20.1354, 0.59", "-46.7527, 26.8943, -20.4425, 1.11", "-47.0488, 27.0583, -20.5651, 1.4", "-47.8238, 27.4771, -20.8431, 1.4", "-48.8049, 27.9485, -21.1369, 0.52", "-50.619, 28.8302, -21.5381, 0.52", "-51.3222, 29.2378, -21.6808, 0.96", "-51.9786, 29.6673, -21.8415, 0.22", "-52.0669, 29.7322, -21.8642, 0.22", "-53.2939, 30.7897, -22.2134, 0.22", "-54.1174, 31.6005, -22.4451, 0.22", "-55.4337, 32.9789, -22.752, 1.77", "-56.1868, 33.7622, -22.9299, 2.06", "-56.7192, 34.3194, -23.0543, 2.06", "-58.2703, 35.989, -23.4267, 0.29", "-58.7634, 36.5324, -23.5504, 0.29", "-59.6186, 37.4301, -23.7384, 0.29", "-60.3899, 38.2172, -23.9034, 0.66", "-60.999, 38.7793, -24.0811, 0.66", "-61.8655, 39.5159, -24.4221, 0.37", "-62.9076, 40.2887, -24.9034, 1.11", "-63.5708, 40.7198, -25.245, 1.99", "-64.2489, 41.1117, -25.6209, 1.99", "-66.8147, 42.3266, -26.9937, 0.37", "-67.5107, 42.6021, -27.334, 0.59", "-68.1559, 42.8233, -27.6084, 0.29", "-69.096, 43.1544, -27.9441, 1.25", "-69.5159, 43.3299, -28.0542, 1.55", "-70.5356, 43.854, -28.1809, 0.88", "-71.4331, 44.5176, -28.164, 0.29", "-72.112, 45.1498, -28.1497, 0.44", "-72.892, 46.0192, -28.1459, 0.44", "-73.5628, 46.8235, -28.1623, 0.88", "-74.0546, 47.4328, -28.1892, 1.4", "-74.9633, 48.5817, -28.298, 0.59", "-75.8548, 49.6211, -28.431, 0.37", "-75.9789, 49.754, -28.4521, 0.37", "-77.1032, 50.905, -28.6698, 1.4", "-77.4682, 51.2884, -28.7849, 1.84", "-78.2992, 52.1942, -29.11, 1.55", "-79.2604, 53.2255, -29.5122, 0.22", "-79.9715, 53.9638, -29.7891, 0.22", "-80.7709, 54.792, -30.0696, 0.22", "-82.265, 56.377, -30.5583, 1.33", "-82.9267, 57.07, -30.7639, 1.92", "-84.8107, 59.0708, -31.2279, 0.37", "-85.885, 60.2138, -31.4331, 0.37", "-86.8162, 61.1807, -31.5447, 0.88", "-87.3345, 61.7004, -31.5615, 1.18", "-87.9144, 62.2928, -31.5514, 0.88", "-89.1537, 63.6377, -31.5934, 0.22", "-90.0163, 64.6699, -31.6657, 1.03", "-90.4273, 65.1956, -31.7296, 1.62", "-91.0676, 66.0126, -31.862, 1.62", "-92.3924, 67.6738, -32.1916, 0.44", "-93.3103, 68.7994, -32.479, 0.37", "-93.3968, 68.905, -32.5148, 0.37", "-93.8501, 69.473, -32.7198, 0.37", "-94.2591, 70.0164, -32.8987, 0.66", "-94.6232, 70.5127, -33.023, 0.66", "-95.3423, 71.5084, -33.1696, 0.44", "-95.8352, 72.1634, -33.2372, 0.44", "-95.9064, 72.2507, -33.2454, 0.44", "-96.7965, 73.234, -33.3175, 0.37", "-97.9064, 74.3616, -33.3713, 1.11", "-97.9777, 74.4293, -33.3719, 1.11", "-98.3703, 74.7699, -33.3755, 1.4", "-99.0837, 75.3505, -33.401, 1.18", "-100.229, 76.3282, -33.5409, 0.29", "-100.649, 76.6898, -33.6092, 0.59", "-101.256, 77.2201, -33.7201, 0.81", "-101.989, 77.8365, -33.839, 0.29", "-102.398, 78.1315, -33.8886, 0.29", "-103.608, 78.8847, -33.9886, 0.29", "-104.491, 79.3949, -34.0375, 0.29", "-105.298, 79.8593, -34.0466, 0.96", "-106.106, 80.331, -34.0177, 0.96", "-107.339, 81.0455, -33.9126, 0.29", "-107.434, 81.1028, -33.9029, 0.29", "-108.468, 81.7619, -33.7776, 0.29", "-109.698, 82.6603, -33.6718, 1.18", "-110.443, 83.2962, -33.6098, 1.55", "-111.319, 84.1885, -33.5392, 0.37", "-112.036, 85.0589, -33.4827, 0.22", "-112.252, 85.3331, -33.4652, 0.59", "-112.32, 85.4228, -33.4593, 0.59", "-112.633, 85.8474, -33.4294, 0.59", "-113.178, 86.4859, -33.4293, 0.29", "-113.713, 87.0042, -33.424, 0.22", "-114.429, 87.573, -33.3911, 0.81", "-114.865, 87.8846, -33.3614, 1.11", "-115.642, 88.3997, -33.2933, 0.96", "-117.128, 89.3772, -33.1403, 0.29", "-118.332, 90.2123, -33.0026, 0.29", "-119.033, 90.7549, -32.916, 1.18", "-119.63, 91.2648, -32.8303, 1.69", "-120.241, 91.8584, -32.7727, 1.03", "-121.557, 93.3088, -32.6598, 0.22", "-122.606, 94.6122, -32.5497, 0.22", "-123.487, 95.8106, -32.4795, 1.18", "-123.89, 96.3981, -32.4421, 1.47", "-124.997, 98.1797, -32.3048, 0.22", "-125.477, 99.0241, -32.2321, 0.22", "-125.957, 99.9403, -32.1163, 0.81", "-126.265, 100.559, -32.0139, 0.88", "-126.519, 101.082, -31.9079, 0.88", "-127.18, 102.445, -31.5828, 0.29", "-127.643, 103.394, -31.3033, 0.29", "-128.274, 104.574, -30.9843, 0.88", "-128.672, 105.209, -30.8126, 1.25", "-128.895, 105.516, -30.7195, 1.4", "-128.953, 105.593, -30.6958, 1.4", "-129.487, 106.347, -30.4698, 1.4", "-130.458, 107.845, -29.9331, 0.22", "-131.061, 108.85, -29.5447, 0.22", "-131.509, 109.615, -29.2319, 0.29", "-132.221, 110.792, -28.608, 0.29", "-132.889, 111.892, -27.9461, 0.29", "-133.929, 113.642, -26.7926, 1.33", "-134.06, 113.875, -26.6318, 1.77", "-134.487, 114.671, -26.0648, 1.77", "-135.636, 116.752, -24.5937, 0.22", "-136.169, 117.637, -24.0239, 0.22", "-136.592, 118.344, -23.6706, 0.22", "-136.975, 119.022, -23.4539, 0.74", "-137.371, 119.738, -23.2962, 1.03", "-137.741, 120.44, -23.2195, 0.96", "-138.683, 122.199, -23.272, 0.22", "-139.247, 123.15, -23.3111, 0.37", "-139.301, 123.233, -23.3152, 0.37", "-139.838, 123.947, -23.3452, 0.37", "-140.109, 124.273, -23.3528, 0.88", "-140.632, 124.854, -23.3272, 1.18", "-140.957, 125.196, -23.2952, 1.18", "-141.43, 125.7, -23.2487, 0.81", "-142.181, 126.599, -23.1759, 0.29", "-142.671, 127.252, -23.129, 0.59", "-143.032, 127.799, -23.0952, 0.59", "-143.725, 129.092, -23.0915, 0.22", "-143.771, 129.197, -23.0962, 0.22", "-144.16, 130.297, -23.1897, 0.66", "-144.188, 130.393, -23.2007, 0.66", "-144.326, 130.905, -23.2636, 0.66", "-144.67, 132.329, -23.4488, 0.22", "-144.846, 133.062, -23.5568, 0.44", "-145.001, 133.568, -23.653, 0.44", "-145.36, 134.523, -23.8508, 0.22", "-145.82, 135.609, -24.0679, 0.96", "-146.019, 136.04, -24.1504, 1.33", "-146.395, 136.835, -24.2863, 1.33", "-147.132, 138.473, -24.5932, 0.29", "-147.646, 139.663, -24.8233, 0.29", "-148.021, 140.551, -25.0102, 0.29", "-148.109, 140.76, -25.0552, 0.29", "-148.399, 141.49, -25.1945, 0.29", "-149.024, 143.158, -25.4721, 1.11", "-149.232, 143.74, -25.5471, 1.47", "-149.983, 145.97, -25.8696, 0.29", "-150.015, 146.064, -25.8834, 0.29", "-150.626, 147.909, -26.1391, 0.29", "-150.658, 148.005, -26.1515, 0.29", "-151.367, 150.348, -26.4117, 0.88", "-151.969, 152.484, -26.6419, 0.22", "-152.198, 153.338, -26.7216, 0.22", "-152.402, 154.075, -26.7901, 0.96", "-152.56, 154.615, -26.8402, 1.18", "-152.816, 155.439, -26.9078, 0.66", "-153.485, 157.302, -27.06, 0.29", "-154.006, 158.545, -27.142, 0.29", "-154.412, 159.424, -27.2047, 0.96", "-154.701, 159.967, -27.2408, 1.33", "-155.132, 160.692, -27.2817, 1.4", "-156.554, 162.665, -27.3872, 0.22", "-156.617, 162.741, -27.3907, 0.22", "-157.386, 163.567, -27.4311, 0.22", "-158.481, 164.645, -27.4947, 0.74", "-159.231, 165.346, -27.537, 0.88", "-160.776, 166.774, -27.7281, 0.22", "-160.858, 166.849, -27.7416, 0.22", "-161.585, 167.56, -27.8904, 0.22", "-162.236, 168.246, -28.0543, 1.18", "-162.74, 168.859, -28.2074, 1.4", "-164.335, 171.08, -28.7235, 0.29", "-164.876, 171.945, -28.9333, 0.29", "-165.619, 173.177, -29.2299, 0.29", "-165.784, 173.449, -29.2932, 0.29", "-166.372, 174.336, -29.4766, 0.29", "-167.053, 175.338, -29.6686, 0.88", "-168.093, 176.806, -29.8748, 0.22", "-168.757, 177.7, -30.0278, 0.22", "-169.354, 178.419, -30.1765, 0.59", "-170.197, 179.319, -30.3776, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-0.74753, 6.13951, -20.411, 0.52", "0.546394, 7.19269, -20.5073, 0.52", "1.25923, 7.97251, -20.5297, 0.52", "1.31599, 8.05685, -20.5293, 0.52", "1.61755, 8.69484, -20.5137, 0.52", "1.86506, 9.42492, -20.489, 1.03", "2.105, 10.3534, -20.4581, 1.47", "2.17185, 11.0423, -20.4253, 1.77", "2.18916, 11.8146, -20.4013, 1.99", "2.20078, 12.912, -20.4132, 1.11", "2.2162, 13.7191, -20.4521, 0.81", "2.26659, 14.4437, -20.5482, 0.81", "2.27586, 14.5032, -20.5609, 0.81", "2.61018, 15.7326, -20.883, 1.33", "2.93232, 16.5653, -21.1891, 1.84", "3.2673, 17.2795, -21.5083, 1.84", "3.69677, 18.1207, -21.9634, 1.18", "4.19751, 19.1187, -22.5391, 0.88", "4.64572, 20.062, -23.0912, 0.52", "5.38178, 21.7353, -24.0729, 0.52", "5.42017, 21.8358, -24.131, 0.52", "5.94403, 23.3065, -24.915, 0.52", "6.20511, 24.0583, -25.3506, 0.44", "6.32472, 24.4223, -25.627, 0.44", "6.50514, 24.9889, -26.1135, 0.44", "6.57113, 25.1629, -26.2834, 0.44", "7.02007, 26.1911, -27.2757, 0.44", "7.92992, 28.0635, -29.0019, 1.77", "8.6113, 29.3805, -30.1754, 2.43", "8.92616, 29.9799, -30.6627, 2.43", "9.83784, 31.6906, -31.958, 0.37", "10.3557, 32.7035, -32.635, 0.96", "10.7191, 33.5068, -33.1696, 1.25", "10.8993, 33.9392, -33.4052, 1.47", "11.3315, 35.0415, -33.9776, 0.52", "11.8931, 36.5969, -34.8241, 1.92", "12.0781, 37.1676, -35.148, 2.06", "12.7763, 39.2155, -36.535, 1.03", "13.103, 40.0913, -37.181, 0.29", "13.1495, 40.208, -37.2675, 0.29", "13.3436, 40.6792, -37.5977, 0.29", "13.3778, 40.7564, -37.6393, 0.29", "13.7915, 41.5482, -37.9336, 0.29", "14.0728, 42.0641, -37.9958, 0.29", "14.463, 42.8839, -38.1338, 0.81", "14.6292, 43.3306, -38.2253, 1.03", "14.6621, 43.4302, -38.2552, 1.03", "14.8496, 43.9764, -38.4505, 0.74", "15.2113, 44.9365, -38.9301, 0.22", "15.235, 44.9818, -38.9632, 0.22", "15.7631, 45.7939, -39.6998, 1.47", "16.2438, 46.374, -40.3235, 2.36", "16.578, 46.7168, -40.7417, 2.5", "17.4896, 47.5871, -41.8885, 1.4", "18.3605, 48.4389, -43.0197, 0.37", "18.4552, 48.5398, -43.1509, 0.37", "18.9327, 49.1479, -43.9045, 0.29", "18.9543, 49.1858, -43.9463, 0.29", "19.2319, 49.8869, -44.6215, 0.29", "19.4094, 50.6731, -45.272, 0.29", "19.423, 50.7796, -45.348, 0.29", "19.5363, 51.7909, -46.0574, 1.18", "19.6124, 52.6249, -46.6433, 1.77", "19.6615, 53.2776, -47.1192, 1.18", "19.7512, 54.6055, -48.1168, 0.52", "19.7936, 55.411, -48.6923, 0.81", "19.8281, 56.4997, -49.4192, 0.81", "19.8286, 56.5519, -49.4503, 0.81", "19.8504, 57.709, -50.0384, 0.29", "19.8843, 58.2834, -50.2876, 0.29", "20.004, 59.1367, -50.5516, 0.74", "20.0185, 59.2055, -50.5694, 0.74", "20.217, 59.9118, -50.7274, 0.96", "20.4787, 60.6734, -50.9408, 0.52", "20.8862, 61.7365, -51.3231, 1.47", "21.1049, 62.3205, -51.5836, 2.21", "21.1235, 62.381, -51.6165, 2.21", "21.3629, 63.3587, -52.204, 2.21", "21.6837, 64.8558, -53.1922, 0.37", "21.8783, 65.7789, -53.849, 0.37", "21.9, 65.8812, -53.9286, 0.37", "22.0352, 66.7536, -54.7028, 0.44", "22.0687, 67.0347, -54.9519, 0.44", "22.1408, 67.6662, -55.5226, 0.22", "22.2055, 68.1346, -55.957, 0.22", "22.3581, 69.04, -56.7939, 1.47", "22.6913, 70.7416, -58.4651, 0.52", "22.8328, 71.3976, -59.1252, 0.66", "23.1117, 72.795, -60.5535, 1.33", "23.214, 73.4203, -61.1755, 1.77", "23.2205, 73.4633, -61.2173, 1.77", "23.4935, 74.8997, -62.521, 0.29", "23.6059, 75.3275, -62.8929, 0.22", "23.8793, 76.2754, -63.7453, 0.96", "24.0317, 76.7601, -64.1734, 1.25", "24.3747, 77.6348, -64.9671, 0.66", "24.6547, 78.1658, -65.5214, 0.29", "25.044, 78.7579, -66.2078, 0.29", "25.2658, 79.0394, -66.5937, 0.96", "25.4385, 79.2597, -66.9322, 1.25", "25.8227, 79.7581, -67.7718, 1.11", "26.3793, 80.5255, -69.1504, 0.29", "26.6065, 80.8478, -69.7666, 0.29", "26.6236, 80.8752, -69.8169, 0.29", "26.9957, 81.6366, -71.0586, 1.4", "27.1105, 81.9332, -71.4807, 1.62", "27.3333, 82.8391, -72.5033, 0.88", "27.5349, 83.7391, -73.2398, 0.29", "27.5836, 83.8976, -73.3649, 0.29", "27.9077, 84.6286, -73.9546, 0.29", "27.9484, 84.7067, -74.0275, 0.29", "28.1858, 85.326, -74.7483, 0.29", "28.3592, 85.9421, -75.5175, 0.29", "28.5751, 86.7348, -76.4845, 0.29", "28.8399, 87.5306, -77.443, 1.62", "29.2923, 88.6542, -78.9035, 1.84", "29.8307, 89.9059, -80.4999, 0.37", "29.9877, 90.2948, -81.0028, 0.37", "30.3006, 91.2538, -82.1827, 1.18", "30.4316, 91.7677, -82.732, 1.47", "30.7451, 93.5313, -84.5087, 0.37", "30.8388, 94.1219, -85.0499, 0.37", "30.9796, 95.2405, -86.0307, 1.55", "30.9982, 95.4823, -86.2587, 1.92", "31.002, 95.9647, -86.7267, 1.92", "31.0249, 97.3494, -88.0579, 0.29", "31.0658, 98.0546, -88.6655, 0.29", "31.1042, 98.3469, -88.9238, 0.29", "31.2171, 98.8991, -89.4126, 0.96", "31.2818, 99.3326, -89.8374, 0.96", "31.3906, 100.349, -90.9127, 0.29", "31.406, 100.583, -91.1479, 0.29", "31.3979, 100.883, -91.4492, 0.88", "31.2331, 101.569, -92.4082, 1.4", "30.9564, 102.233, -93.5266, 0.29", "30.938, 102.264, -93.5862, 0.29", "30.7223, 102.558, -94.206, 0.29", "30.2824, 103.111, -95.4933, 0.88", "29.2792, 104.312, -98.3268, 1.11", "29.2557, 104.338, -98.3862, 1.11", "28.9404, 104.637, -99.0277, 1.33", "28.9137, 104.662, -99.0739, 1.33", "28.1419, 105.388, -100.221, 0.37", "27.7773, 105.854, -100.779, 0.81", "27.5718, 106.283, -101.125, 0.96", "27.1701, 107.283, -101.913, 0.22", "26.9959, 107.852, -102.338, 0.74", "26.9111, 108.192, -102.58, 1.03", "26.557, 110.277, -103.934, 0.29", "26.4809, 110.913, -104.324, 0.81", "26.4332, 111.448, -104.614, 1.33", "26.373, 112.089, -104.897, 1.03", "26.2743, 112.746, -105.164, 0.44", "26.1475, 113.456, -105.417, 0.29", "26.0065, 114.273, -105.637, 0.29", "25.9439, 114.772, -105.784, 1.11", "25.9021, 115.335, -105.955, 1.62", "25.864, 116.511, -106.297, 1.55", "25.8693, 117.789, -106.689, 0.29", "25.8869, 118.537, -106.959, 0.52", "25.9292, 119.168, -107.205, 0.37", "25.9747, 119.584, -107.367, 0.37", "26.1189, 120.458, -107.689, 1.18", "26.3168, 121.444, -107.999, 0.96", "26.6012, 122.706, -108.379, 0.15", "26.731, 123.368, -108.62, 0.44", "26.8249, 123.979, -108.863, 0.52", "26.91, 124.678, -109.149, 0.15", "26.9732, 125.357, -109.425, 0.66", "26.9938, 125.649, -109.55, 0.81", "27.0021, 126.984, -110.177, 0.37", "26.9819, 127.476, -110.413, 0.37", "26.969, 127.707, -110.523, 0.88", "26.9447, 128.183, -110.738, 1.18", "26.948, 129.665, -111.344, 0.15", "26.9509, 130.318, -111.561, 0.15", "26.9697, 131.364, -111.83, 1.11", "26.9819, 131.667, -111.903, 1.33", "27.0304, 132.292, -112.036, 0.96", "27.1995, 133.565, -112.252, 0.15", "27.379, 134.684, -112.454, 0.15", "27.3972, 134.781, -112.477, 0.15", "27.5507, 135.575, -112.705, 1.11", "27.65, 136.132, -112.864, 1.33", "27.7865, 136.854, -113.06, 0.59", "28.1991, 138.673, -113.622, 0.29", "28.4078, 139.474, -113.896, 0.29", "28.4251, 139.539, -113.919, 0.29", "28.7604, 140.94, -114.413, 0.96", "28.9949, 141.987, -114.762, 0.29", "29.2702, 143.119, -115.106, 0.66", "29.2945, 143.207, -115.131, 0.66", "29.4901, 143.934, -115.365, 0.29", "29.6872, 144.755, -115.706, 0.29", "29.8173, 145.471, -116.068, 0.29", "29.8788, 146.204, -116.445, 0.96", "29.8971, 146.996, -116.823, 1.18", "29.8979, 147.051, -116.849, 1.18", "29.8939, 148.397, -117.575, 0.22", "29.9044, 148.776, -117.794, 0.22", "29.9299, 149.348, -118.135, 0.74", "29.9461, 149.605, -118.28, 0.74", "30.0261, 150.367, -118.756, 0.22", "30.2034, 151.432, -119.488, 1.11", "30.2737, 151.724, -119.696, 1.4", "30.2962, 151.801, -119.756, 1.4", "30.3976, 152.139, -120.029, 1.4", "30.8431, 153.649, -121.272, 0.29", "30.9809, 154.133, -121.678, 0.29", "31.1235, 154.654, -122.073, 0.44", "31.1696, 154.845, -122.213, 0.44", "31.2914, 155.424, -122.59, 0.22", "31.2992, 155.478, -122.618, 0.22", "31.3675, 156.419, -122.912, 0.66", "31.3683, 156.783, -123.027, 0.66", "31.3668, 156.852, -123.048, 0.66", "31.3291, 157.294, -123.217, 0.29", "31.2824, 157.927, -123.51, 0.22", "31.2444, 158.659, -123.865, 0.66", "31.2497, 158.834, -123.964, 0.96", "31.2812, 159.103, -124.139, 0.96", "31.5124, 160.365, -125.036, 0.22", "31.7128, 161.122, -125.617, 0.88", "31.8393, 161.435, -125.906, 0.88", "32.2803, 162.348, -126.805, 0.22", "32.4035, 162.587, -127.049, 0.81", "32.4291, 162.632, -127.097, 0.81", "32.6098, 162.916, -127.387, 0.81", "33.0943, 163.919, -128.494, 0.22", "33.1849, 164.262, -128.88, 0.22", "33.2145, 164.689, -129.325, 0.88", "33.215, 164.747, -129.381, 0.88", "33.2236, 165.179, -129.793, 0.88", "33.2219, 166.423, -130.915, 0.22", "33.2145, 167.152, -131.483, 0.22", "33.2251, 167.816, -131.998, 1.03", "33.2367, 168.345, -132.404, 1.25", "33.314, 169.614, -133.362, 0.22", "33.3792, 170.132, -133.728, 0.22", "33.5045, 170.739, -134.113, 0.88", "33.7445, 171.539, -134.619, 0.29", "33.9354, 172.212, -134.99, 0.29", "34.0917, 172.826, -135.271, 0.22", "34.2225, 173.585, -135.579, 0.22", "34.239, 173.706, -135.631, 0.22", "34.2942, 174.328, -135.892, 0.74", "34.3419, 175.631, -136.385, 0.22", "34.3265, 176.033, -136.529, 0.66", "34.1686, 177.597, -137.261, 0.22", "34.162, 177.659, -137.294, 0.22", "34.1258, 178.111, -137.554, 0.74", "34.1224, 178.172, -137.592, 0.74", "34.1244, 178.504, -137.818, 0.74", "34.1954, 179.966, -138.734, 0.22", "34.2031, 181.001, -139.293, 0.22", "34.2001, 181.065, -139.324, 0.22", "34.1715, 181.526, -139.533, 0.22", "34.1687, 181.583, -139.556, 0.22", "34.1355, 182.46, -139.89, 0.88", "34.0246, 184.136, -140.426, 0.22", "33.9613, 184.92, -140.695, 0.59", "33.9055, 185.63, -140.941, 0.22", "33.8524, 186.373, -141.202, 0.44", "33.8365, 186.662, -141.3, 0.44" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "9.33802, -5.36548, -21.2884, 0.74", "10.3764, -5.52128, -20.5638, 0.74", "13.0684, -5.83038, -19.2513, 1.03", "14.9218, -6.07762, -18.5911, 0.29", "16.5467, -6.31099, -18.1152, 1.18", "17.6135, -6.50783, -17.8762, 1.4", "19.3794, -6.89801, -17.5664, 0.29", "20.7321, -7.32354, -17.5063, 0.29", "21.657, -7.71588, -17.6721, 0.44", "21.7134, -7.74643, -17.6871, 0.44", "22.6528, -8.46892, -17.8992, 1.18", "23.0789, -8.90977, -17.9945, 2.06", "23.4107, -9.36801, -18.047, 2.36", "23.7759, -9.99394, -18.1205, 2.43", "24.4358, -11.1574, -18.2935, 1.03", "25.0186, -12.1707, -18.4617, 0.52", "25.4799, -12.9682, -18.6036, 0.52", "25.8817, -13.6193, -18.7342, 1.18", "26.2689, -14.1859, -18.8635, 1.47", "27.0297, -15.0569, -19.1016, 0.29", "27.3297, -15.2383, -19.1776, 0.29", "27.4613, -15.2703, -19.2014, 0.29", "28.414, -15.3417, -19.3272, 0.29", "28.4792, -15.3438, -19.3331, 0.29", "29.4425, -15.4644, -19.3803, 0.29", "30.7928, -15.8542, -19.3968, 1.77", "31.0658, -15.9894, -19.4125, 2.36", "31.127, -16.0314, -19.4206, 2.36", "31.6731, -16.4786, -19.5407, 2.36", "32.6732, -17.3435, -19.8417, 0.59", "33.2084, -17.8212, -20.0312, 0.29", "34.1096, -18.5463, -20.4003, 0.29", "34.8373, -19.0296, -20.7286, 0.29", "35.7199, -19.5053, -21.1667, 1.69", "36.5476, -19.8409, -21.5815, 2.36", "37.3169, -20.0596, -21.9678, 1.47", "38.5406, -20.2961, -22.5458, 0.59", "39.6771, -20.4162, -23.0327, 0.52", "40.5321, -20.4769, -23.352, 0.29", "41.313, -20.5243, -23.6164, 0.59", "41.3754, -20.5318, -23.634, 0.59", "41.7794, -20.6692, -23.7009, 0.81", "41.8645, -20.7326, -23.6927, 0.81", "42.3248, -21.1791, -23.5935, 0.74", "42.3722, -21.2249, -23.5875, 0.74", "43.133, -21.8924, -23.5485, 0.52", "43.9196, -22.5401, -23.539, 0.29", "44.9411, -23.3564, -23.5551, 1.99", "45.4603, -23.7688, -23.5745, 2.8", "46.8461, -24.8477, -23.6548, 0.52", "47.8356, -25.6193, -23.7829, 0.37", "48.4982, -26.0977, -23.9118, 0.29", "48.9682, -26.4227, -24.0352, 0.74", "49.5233, -26.7809, -24.2051, 1.03", "49.6415, -26.8457, -24.2433, 1.03", "51.0024, -27.3833, -24.6389, 0.29", "51.8108, -27.5695, -24.8702, 0.29", "51.8739, -27.5724, -24.887, 0.29", "52.6416, -27.5961, -25.0843, 0.88", "53.3297, -27.6108, -25.2507, 1.47", "53.9125, -27.6252, -25.3766, 1.77", "54.1226, -27.6305, -25.4126, 1.77", "55.2806, -27.721, -25.6599, 0.44", "56.3606, -27.8151, -25.9217, 0.22", "56.4238, -27.8184, -25.9407, 0.22", "57.0471, -27.8411, -26.1315, 0.81", "57.1018, -27.8455, -26.1461, 0.81", "57.5009, -27.9046, -26.2307, 0.81", "57.5537, -27.9173, -26.2439, 0.81", "58.7344, -28.2327, -26.5874, 0.29", "59.5702, -28.472, -26.8294, 0.29", "60.7064, -28.8324, -27.1585, 1.33", "61.5038, -29.0776, -27.371, 1.77", "62.866, -29.504, -27.703, 0.37", "62.9259, -29.5245, -27.7183, 0.37", "63.874, -29.9233, -27.9811, 0.37", "63.9309, -29.9473, -28.0019, 0.37", "64.6871, -30.2684, -28.3488, 0.37", "64.9074, -30.3706, -28.4873, 0.37", "65.6422, -30.8141, -29.091, 0.29", "66.0217, -31.0708, -29.4517, 0.29", "66.6783, -31.5616, -30.1474, 1.55", "67.0202, -31.8165, -30.5206, 1.55", "68.0234, -32.5422, -31.6241, 0.66", "68.8527, -32.9981, -32.4635, 0.29", "69.1128, -33.0941, -32.7274, 0.66", "69.3598, -33.1572, -32.9656, 0.74", "69.4758, -33.1768, -33.0779, 0.74", "69.9116, -33.2079, -33.502, 0.44", "71.4352, -33.1044, -35.1325, 2.21", "73.3225, -32.8595, -37.2698, 0.22", "73.8525, -32.7882, -37.9002, 0.22", "74.4386, -32.678, -38.5991, 0.74", "74.7896, -32.5791, -38.9974, 0.74", "76.5013, -32.0248, -40.8371, 0.29", "77.0364, -31.8211, -41.3528, 0.29", "77.4809, -31.662, -41.726, 0.29", "78.4775, -31.3974, -42.5185, 2.14", "80.4339, -31.0769, -43.8608, 0.29", "81.1624, -31.0318, -44.2893, 0.29", "81.2301, -31.0327, -44.3221, 0.29", "81.9245, -31.0958, -44.679, 0.29", "82.4459, -31.218, -44.955, 1.33", "82.7322, -31.3212, -45.1289, 1.47", "83.2327, -31.5082, -45.4336, 1.03", "84.5849, -31.8976, -46.2549, 0.29", "85.4523, -32.0865, -46.794, 0.29", "86.4144, -32.1941, -47.3683, 0.96", "87.8304, -32.278, -48.1884, 0.29", "88.4038, -32.2614, -48.4986, 0.88", "88.677, -32.2284, -48.6245, 1.18", "89.923, -31.9801, -49.0753, 0.22", "91.2633, -31.5444, -49.4549, 2.43", "91.654, -31.3801, -49.5155, 2.21", "92.9871, -30.7173, -49.4997, 0.37", "93.9758, -30.161, -49.3777, 0.37", "94.0318, -30.127, -49.3627, 0.37", "94.7697, -29.644, -49.0362, 0.22", "95.1656, -29.3827, -48.8284, 1.11", "95.8188, -28.9807, -48.4797, 1.55", "96.1471, -28.8095, -48.3267, 1.4", "97.3984, -28.2636, -47.9036, 0.22", "97.4503, -28.2439, -47.8903, 0.22", "98.1325, -28.0167, -47.7715, 0.96", "98.6101, -27.8546, -47.72, 1.4", "99.652, -27.4789, -47.655, 0.22", "99.745, -27.4389, -47.6505, 0.22", "100.412, -27.0978, -47.6161, 0.22", "100.879, -26.8484, -47.5857, 0.22", "101.355, -26.6069, -47.549, 1.03", "101.791, -26.3896, -47.532, 1.03", "102.658, -25.9871, -47.5191, 0.22", "103.246, -25.7431, -47.5589, 0.37", "103.71, -25.5833, -47.615, 0.37", "104.588, -25.3486, -47.7313, 0.22", "105.529, -25.1457, -47.8586, 1.33", "106.109, -25.0435, -47.9372, 1.47", "107.493, -24.8549, -48.0929, 0.29", "108.315, -24.7494, -48.1742, 0.29", "109.566, -24.5559, -48.2958, 1.55", "109.869, -24.4935, -48.3327, 1.84", "109.934, -24.481, -48.3408, 1.84", "111.473, -24.1634, -48.5599, 0.22", "111.536, -24.1487, -48.5713, 0.22", "112.407, -23.9277, -48.7897, 0.44", "113.609, -23.631, -49.1586, 0.22", "114.318, -23.4816, -49.3863, 0.96", "114.637, -23.4297, -49.4972, 1.33", "115.377, -23.3147, -49.7638, 0.29", "115.994, -23.2387, -49.957, 0.15", "116.404, -23.2163, -50.0501, 0.66", "116.81, -23.2126, -50.112, 0.66", "117.646, -23.1508, -50.2549, 0.22", "118.557, -23.0491, -50.3907, 0.22", "118.623, -23.0384, -50.3976, 0.22", "119.409, -22.8629, -50.4664, 1.18", "119.949, -22.7309, -50.5202, 1.69", "120.823, -22.5308, -50.6074, 1.55", "121.884, -22.3456, -50.7493, 0.52", "122.465, -22.2606, -50.8471, 0.52", "123.368, -22.1134, -51.009, 0.22", "124.501, -21.9234, -51.2146, 1.11", "125.041, -21.8409, -51.3146, 1.33", "126.404, -21.6836, -51.5519, 0.22", "126.837, -21.6604, -51.6328, 0.29", "127.351, -21.655, -51.7276, 0.29", "128.187, -21.6717, -51.8674, 0.22", "129.166, -21.7133, -51.9933, 1.47", "129.623, -21.745, -52.0382, 1.77", "131.752, -21.9595, -52.1582, 0.22", "131.817, -21.9687, -52.1611, 0.52", "132.255, -22.0472, -52.1742, 0.22", "132.658, -22.1282, -52.1777, 0.59", "133.753, -22.405, -52.1517, 0.15", "134.363, -22.6141, -52.1337, 0.44", "135.243, -23.0287, -52.0992, 0.22", "135.778, -23.3279, -52.0638, 1.03", "135.965, -23.445, -52.0467, 1.03", "136.883, -24.0773, -51.9398, 0.22", "137.649, -24.6649, -51.8304, 0.37", "138.173, -25.0914, -51.7446, 0.22", "139.078, -25.8514, -51.5737, 0.22", "139.429, -26.1459, -51.5046, 0.66", "139.471, -26.1824, -51.4968, 0.66", "139.703, -26.3902, -51.4542, 0.37", "140.216, -26.8521, -51.3804, 0.22", "140.361, -26.9877, -51.3701, 0.22", "140.968, -27.6001, -51.3838, 0.22", "141.535, -28.1359, -51.4436, 0.52", "141.592, -28.185, -51.4513, 0.52", "142.047, -28.5276, -51.5145, 0.22", "142.633, -28.9031, -51.593, 0.96", "143.246, -29.2018, -51.6941, 1.18", "144.646, -29.7513, -51.9569, 0.22", "145.217, -29.9502, -52.0707, 0.22", "145.846, -30.1683, -52.2017, 0.81", "146.233, -30.3003, -52.3038, 0.81", "147.531, -30.7175, -52.7213, 0.22", "147.914, -30.8531, -52.8955, 0.52", "148.446, -31.0626, -53.1829, 0.22", "148.848, -31.2392, -53.4291, 0.81", "149.992, -31.7882, -54.1953, 0.22", "150.842, -32.2099, -54.776, 1.47", "152.235, -32.9241, -55.6995, 0.22", "152.713, -33.1569, -56.0118, 0.81", "152.764, -33.1817, -56.0427, 0.81", "153.7, -33.6614, -56.5401, 0.22", "154.201, -33.9534, -56.7477, 0.22", "154.756, -34.3074, -56.9274, 0.88", "155.108, -34.5389, -57.0096, 0.74", "156.149, -35.2821, -57.2691, 0.22", "156.615, -35.6204, -57.3785, 0.22", "157.248, -36.0997, -57.5181, 0.74", "157.299, -36.14, -57.5304, 0.74", "158.086, -36.807, -57.7293, 0.22", "158.128, -36.8432, -57.7391, 0.22", "159.199, -37.8005, -58.0199, 0.22", "159.241, -37.8366, -58.0302, 0.22", "159.708, -38.24, -58.144, 0.37", "160.14, -38.6187, -58.244, 0.22", "160.602, -39.0351, -58.3362, 0.22", "161.164, -39.5824, -58.4525, 0.81", "161.341, -39.7982, -58.4987, 0.81" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "9.33802, -5.36548, -21.2884, 2.06", "8.88877, -7.08214, -21.3627, 2.06", "8.5035, -8.71149, -21.451, 1.99", "8.04755, -10.8103, -21.5787, 1.62", "7.52141, -13.2321, -21.7261, 1.62", "7.23424, -14.554, -21.8066, 2.43", "6.85835, -16.2842, -21.9119, 3.02", "6.57077, -17.6109, -22.0527, 3.46", "6.4088, -18.6019, -22.1552, 3.39" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "6.8938, 19.953, -10.9528, 0.66", "6.43568, 22.5583, -11.7731, 0.66", "6.13991, 23.5553, -12.0428, 0.66", "5.69795, 24.7335, -12.3987, 0.66", "5.6248, 24.9147, -12.4555, 0.66", "4.89506, 26.7808, -13.0362, 1.55", "4.52163, 27.8946, -13.3671, 1.55", "4.1299, 29.1497, -13.6429, 1.4", "3.74469, 31.1149, -14.0906, 0.59", "3.73997, 31.2206, -14.117, 0.59", "3.90256, 31.9526, -14.3781, 0.59", "4.50849, 33.1603, -14.978, 0.96", "5.16809, 34.1926, -15.5911, 0.66", "5.81169, 35.1549, -16.2818, 0.59", "6.07004, 35.5641, -16.6128, 0.59", "7.11041, 37.6256, -18.5547, 1.25", "7.43846, 38.5816, -19.5026, 1.92", "7.6954, 39.7867, -20.6723, 1.4", "7.88262, 41.4013, -22.1901, 1.03", "7.92573, 42.3063, -23.0474, 0.88", "7.93998, 43.8532, -24.4661, 0.52", "7.909, 45.2791, -25.6634, 0.44", "7.88577, 46.5172, -26.6479, 1.47", "7.88845, 46.5947, -26.7014, 1.47", "8.26711, 49.0479, -27.9152, 1.62", "8.28971, 49.1347, -27.9461, 1.62", "8.8315, 50.6801, -28.4122, 1.33", "8.8688, 50.778, -28.4426, 1.33", "9.37028, 52.351, -28.8539, 0.96", "9.89314, 54.1045, -29.3648, 0.96", "9.92841, 54.2295, -29.3993, 0.96", "10.3669, 55.9322, -29.9305, 0.74", "10.6466, 57.1245, -30.3383, 0.44", "11.0785, 58.9693, -30.9625, 0.37", "11.6622, 61.4457, -31.7837, 0.37", "12.0685, 63.0891, -32.2386, 0.37", "12.37, 64.2248, -32.4748, 1.55", "12.6228, 65.1023, -32.6014, 1.99", "12.9018, 66.0118, -32.707, 2.06", "13.2809, 67.1839, -32.7907, 1.77", "13.9356, 69.1868, -32.8625, 0.37", "14.3049, 70.2858, -32.9334, 0.37", "14.8162, 71.8084, -33.066, 1.47", "15.0498, 72.5585, -33.1467, 1.92", "15.2785, 73.4028, -33.2771, 1.55", "15.8351, 75.7063, -33.7969, 0.29", "16.0381, 76.5191, -34.1123, 0.29", "16.1162, 76.8245, -34.2614, 0.29", "16.2483, 77.3725, -34.5791, 0.29", "16.4855, 78.3182, -35.213, 0.29", "16.7043, 79.2844, -36.0003, 0.88", "17.0795, 80.9604, -37.5451, 0.29", "17.2708, 81.8886, -38.4102, 0.29", "17.5513, 83.2648, -39.613, 2.28", "17.7792, 84.2356, -40.3802, 2.58", "18.284, 86.2104, -41.7393, 2.43", "18.3066, 86.3002, -41.7943, 2.43", "18.7995, 88.1206, -42.7798, 0.29", "19.1776, 89.2565, -43.3801, 0.29", "19.9246, 91.0096, -44.1999, 1.62", "20.3252, 91.8432, -44.539, 2.28", "21.1445, 93.4224, -45.0817, 2.14", "21.9744, 95.0248, -45.6106, 0.59", "22.1534, 95.3676, -45.7208, 0.59", "22.8331, 96.8014, -46.1986, 0.37", "22.8657, 96.8868, -46.2268, 0.37", "23.4285, 98.7033, -46.7757, 0.66", "23.6839, 99.7313, -47.0268, 0.81", "23.8403, 100.499, -47.1878, 0.66", "23.855, 100.578, -47.2034, 0.66", "24.1434, 101.966, -47.4254, 0.52", "24.5286, 103.217, -47.5708, 0.96", "24.8214, 103.972, -47.6245, 1.33", "25.0942, 104.637, -47.6484, 1.47", "25.4854, 105.631, -47.6571, 0.96", "26.1842, 107.576, -47.6483, 0.29", "26.7998, 109.399, -47.6132, 2.21", "27.0988, 110.357, -47.5965, 2.5", "27.8076, 112.771, -47.5602, 0.37", "28.1596, 114.051, -47.5514, 0.44", "28.3895, 114.979, -47.5538, 0.37", "28.458, 115.296, -47.5604, 0.37", "28.626, 116.141, -47.5829, 0.66", "28.8265, 117.034, -47.6184, 0.66", "29.1211, 118.209, -47.6841, 0.29", "29.3475, 119.078, -47.7548, 0.29", "29.603, 120.089, -47.88, 1.03", "29.7834, 120.861, -48.0206, 1.33", "29.9019, 121.421, -48.145, 1.47", "30.0681, 122.278, -48.3593, 0.88", "30.2489, 123.231, -48.6152, 0.29", "30.5128, 124.53, -48.9986, 0.29", "30.8494, 126.141, -49.4977, 1.11", "30.9941, 126.799, -49.6978, 1.4", "31.06, 127.09, -49.7834, 1.4", "31.1869, 127.656, -49.9355, 1.4", "31.54, 129.34, -50.3087, 0.29", "31.5762, 129.538, -50.3503, 0.29", "31.7954, 130.799, -50.6127, 0.29", "31.9956, 131.939, -50.8615, 1.11", "32.141, 132.711, -51.0325, 1.62", "32.2737, 133.378, -51.1771, 1.62", "32.6801, 135.209, -51.5923, 0.29", "32.7995, 135.717, -51.7348, 0.74", "32.8192, 135.804, -51.7684, 0.74", "32.9288, 136.363, -52.0523, 0.74", "33.0345, 136.96, -52.4063, 0.52", "33.2147, 138.136, -53.1458, 0.22", "33.3639, 139.354, -53.9339, 0.59", "33.4894, 140.614, -54.7444, 0.37", "33.6331, 142.255, -55.7699, 0.22", "33.6352, 142.325, -55.8104, 0.22", "33.6383, 143.219, -56.2575, 0.88", "33.6359, 143.596, -56.4005, 1.25", "33.6471, 144.182, -56.5555, 1.4", "33.7336, 145.384, -56.7682, 0.44", "33.9457, 146.935, -57.0244, 0.22", "34.1209, 147.946, -57.2122, 0.37", "34.3615, 149.153, -57.4442, 1.25", "34.4771, 149.672, -57.5514, 1.55", "34.7204, 150.646, -57.7678, 0.96", "35.2303, 152.508, -58.3051, 0.22", "35.3099, 152.777, -58.4057, 0.22", "35.6343, 154.003, -58.9211, 1.25", "35.7831, 154.636, -59.205, 1.25", "35.7981, 154.708, -59.2382, 1.25", "36.215, 157.088, -60.3382, 0.29", "36.4597, 158.695, -61.0494, 0.66", "36.5319, 159.234, -61.2975, 1.03", "36.5458, 159.405, -61.3773, 1.03", "36.5427, 159.866, -61.5782, 1.03", "36.5352, 159.955, -61.6131, 1.03", "36.3938, 161.063, -62.0416, 0.59", "36.2252, 162.459, -62.6194, 0.29", "36.1821, 163.328, -62.9687, 0.29", "36.2296, 164.668, -63.4756, 1.11", "36.3102, 165.514, -63.7821, 1.47", "36.6805, 167.919, -64.6101, 0.29", "36.7413, 168.197, -64.698, 0.29", "37.2321, 169.973, -65.2127, 0.29", "37.7716, 171.688, -65.7004, 1.11", "37.9021, 172.077, -65.8055, 1.62", "38.0403, 172.544, -65.9246, 1.33", "38.2138, 173.296, -66.1349, 0.88", "38.4489, 174.632, -66.6105, 0.37", "38.5758, 175.438, -66.9783, 0.66", "38.5899, 175.52, -67.0245, 0.66", "38.7815, 176.376, -67.5534, 0.66", "39.2187, 177.96, -68.5987, 0.29", "39.2439, 178.034, -68.6527, 0.29", "39.6017, 178.947, -69.3902, 0.29", "40.0269, 180.138, -70.3659, 1.25", "40.1083, 180.4, -70.5712, 1.25", "40.1908, 180.733, -70.8137, 1.4", "40.4102, 182.211, -71.8111, 0.66", "40.5039, 183.665, -72.7513, 0.29", "40.4807, 184.914, -73.5885, 0.81", "40.4521, 185.279, -73.8239, 0.88", "40.353, 186.065, -74.3111, 0.52", "40.1406, 187.338, -75.0697, 0.29", "39.9519, 188.284, -75.5782, 0.81", "39.6452, 189.66, -76.244, 0.81", "39.4208, 190.863, -76.7886, 0.29", "39.3181, 191.793, -77.1936, 0.29", "39.3139, 191.881, -77.229, 0.29", "39.2932, 193.198, -77.6692, 1.03", "39.3093, 194.055, -77.9301, 1.47", "39.3671, 195.174, -78.218, 0.96", "39.4407, 197.028, -78.7727, 0.29", "39.442, 197.507, -78.9284, 0.29", "39.4114, 198.312, -79.1805, 0.81", "39.3815, 198.808, -79.3393, 0.81", "39.3756, 198.885, -79.3643, 0.81", "39.1583, 201.004, -80.0204, 0.37", "38.9783, 202.883, -80.5982, 0.29", "38.8817, 204.687, -81.1687, 0.96", "38.883, 205.318, -81.3752, 1.47", "38.9105, 205.885, -81.5672, 1.47", "39.005, 206.616, -81.8393, 1.18", "39.2763, 207.805, -82.3168, 0.52", "39.4752, 208.641, -82.702, 0.44", "39.6123, 209.211, -82.9997, 0.44", "39.6525, 209.507, -83.1581, 0.44", "39.753, 211.019, -83.9414, 0.29", "39.7723, 211.795, -84.312, 0.66", "39.7599, 212.667, -84.6832, 0.52", "39.7546, 212.801, -84.7355, 0.52", "39.6838, 215.129, -85.4611, 0.29", "39.6648, 216.476, -85.8034, 1.11", "39.6623, 217.226, -85.9431, 1.33", "39.6662, 217.334, -85.9608, 1.33", "39.7143, 218.119, -86.0663, 1.11", "39.8633, 219.922, -86.2787, 0.29", "39.8746, 220.016, -86.2864, 0.29", "40.0787, 221.609, -86.4537, 0.29", "40.1079, 221.808, -86.4885, 0.29", "40.2075, 222.372, -86.6176, 0.22", "40.4356, 223.492, -86.9553, 0.66", "40.4511, 223.566, -86.984, 0.66", "40.5497, 224.017, -87.1745, 0.88", "40.9225, 225.645, -87.9151, 0.22", "40.9425, 225.727, -87.9592, 0.22", "41.1776, 226.682, -88.5172, 0.22", "41.3551, 227.457, -88.9808, 0.88", "41.3776, 227.567, -89.0521, 0.88", "41.4693, 228.131, -89.434, 0.88", "41.7123, 229.943, -90.6757, 0.29", "41.7313, 230.098, -90.7816, 0.29", "41.834, 230.693, -91.1893, 0.29", "42.0599, 231.487, -91.6799, 1.11", "42.2712, 231.982, -91.9723, 1.25", "42.4321, 232.292, -92.1452, 1.25", "42.5722, 232.546, -92.2667, 1.25", "43.6852, 234.516, -93.2295, 0.29", "44.4153, 235.817, -93.8709, 0.52", "45.3887, 237.549, -94.7189, 0.29", "45.4725, 237.7, -94.7947, 0.29", "45.8354, 238.337, -95.1276, 0.29", "46.3853, 239.302, -95.6429, 1.18", "46.905, 240.164, -96.1066, 1.4", "46.956, 240.247, -96.1538, 1.4", "47.2815, 240.697, -96.4296, 1.4", "48.365, 241.934, -97.2432, 0.15", "48.4354, 241.998, -97.2891, 0.15", "49.1202, 242.529, -97.7066, 0.15", "49.2295, 242.607, -97.774, 0.15", "50.1248, 243.319, -98.3841, 0.74", "50.6098, 243.738, -98.7277, 0.74", "50.6666, 243.798, -98.7701, 0.74", "51.5428, 244.818, -99.4354, 0.22", "51.842, 245.163, -99.6387, 0.22", "52.6055, 245.982, -100.073, 1.25", "53.1179, 246.529, -100.31, 1.03", "54.4137, 247.961, -100.883, 0.29", "54.4733, 248.03, -100.908, 0.29", "55.3948, 249.228, -101.278, 0.29", "55.7261, 249.758, -101.429, 0.29", "56.2327, 250.709, -101.663, 0.74", "56.4681, 251.24, -101.786, 0.74", "56.524, 251.388, -101.821, 0.74", "56.9106, 252.5, -102.104, 0.29", "57.391, 253.933, -102.586, 0.29", "57.7721, 254.937, -102.978, 0.29", "57.8038, 255.006, -103.007, 0.29", "58.3285, 256.077, -103.522, 0.96", "58.6455, 256.696, -103.852, 1.4", "59.4931, 258.261, -104.795, 0.22", "59.5482, 258.37, -104.868, 0.22", "59.8142, 259.012, -105.298, 0.22", "60.2231, 260.09, -105.976, 0.74", "60.2803, 260.259, -106.071, 0.74", "60.3913, 260.634, -106.262, 0.74", "60.7608, 261.786, -106.701, 0.29", "60.812, 261.857, -106.736, 0.29", "61.146, 262.147, -106.935, 0.29", "61.6732, 262.491, -107.24, 0.96", "61.7423, 262.533, -107.284, 0.96", "62.3245, 262.878, -107.665, 1.18", "64.2774, 264.135, -108.962, 0.29", "65.2624, 264.843, -109.614, 1.03", "66.9605, 266.148, -110.74, 0.29", "67.6625, 266.715, -111.196, 1.11", "67.9403, 266.953, -111.373, 1.33", "69.0669, 268.008, -112.074, 0.22", "69.6347, 268.632, -112.399, 0.88", "69.7494, 268.799, -112.632, 0.88", "69.8571, 269.083, -114.048, 0.29", "69.8383, 269.243, -115.486, 1.11", "69.8297, 269.256, -115.668, 1.11", "69.7772, 269.297, -116.475, 1.18", "69.023, 269.638, -125.485, 0.96", "68.2063, 269.855, -133.429, 0.74", "67.8306, 269.885, -136.375, 0.81", "67.7733, 269.882, -136.775, 0.81" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "6.8938, 19.953, -10.9528, 1.11", "6.99811, 20.6155, -10.7539, 1.11", "7.28081, 21.8633, -10.436, 0.96", "7.29509, 21.9174, -10.4233, 0.96", "7.7129, 23.0814, -10.2004, 1.33", "8.0137, 23.8164, -10.0788, 1.62", "8.07555, 23.9435, -10.0551, 1.62", "8.5466, 24.6616, -9.94242, 0.96", "8.5867, 24.7142, -9.93906, 0.96", "9.3146, 25.6413, -9.93087, 0.66", "9.34947, 25.686, -9.9328, 0.66", "10.0053, 26.6635, -9.97997, 0.74", "10.4421, 27.5189, -10.0284, 0.66", "10.8625, 28.7046, -10.1048, 0.74", "10.8749, 28.7801, -10.1094, 0.74", "10.8485, 29.4429, -10.1497, 0.74", "10.6539, 30.317, -10.1595, 0.74", "10.3091, 31.03, -10.1162, 0.74", "10.2727, 31.0847, -10.1059, 0.74", "9.80144, 31.7615, -9.89855, 0.74", "9.76724, 31.8157, -9.88094, 0.74", "9.25971, 32.7683, -9.55062, 0.74", "8.90674, 33.6651, -9.24428, 0.66", "8.48387, 35.2639, -8.73314, 0.81", "8.31185, 36.3225, -8.43384, 0.81", "8.2672, 37.1497, -8.2351, 1.47", "8.28849, 38.1756, -8.02894, 2.06", "8.4126, 39.3725, -7.8385, 2.28", "8.57531, 40.3376, -7.70827, 1.84", "8.79896, 41.354, -7.59785, 1.03", "9.03215, 42.4569, -7.51308, 0.66", "9.13445, 43.091, -7.46781, 0.88", "9.14006, 43.1578, -7.46507, 0.88", "9.12477, 43.6881, -7.44772, 0.96", "9.10409, 43.83, -7.4441, 0.96", "9.01989, 44.1634, -7.43922, 0.96", "8.82864, 44.837, -7.42159, 0.88", "8.68679, 45.4327, -7.40192, 0.59", "8.59178, 45.924, -7.38322, 0.44", "8.58249, 45.9909, -7.38047, 0.44", "8.53463, 46.6109, -7.33616, 0.44", "8.56556, 47.8935, -7.21377, 1.03", "8.61589, 48.3185, -7.16368, 1.11", "8.63941, 48.4497, -7.14506, 1.11", "8.72199, 48.8016, -7.09496, 1.25", "8.87879, 49.376, -7.00566, 1.25", "9.09502, 50.16, -6.87594, 1.03", "9.25928, 50.7621, -6.77228, 0.81", "9.27391, 50.8273, -6.761, 0.81", "9.34437, 51.2289, -6.70906, 0.52", "9.52143, 52.5918, -6.5604, 0.37", "9.58172, 53.3639, -6.49312, 0.37", "9.61062, 54.0737, -6.4405, 0.88", "9.64335, 54.7737, -6.40018, 1.25", "9.69729, 55.8295, -6.35409, 1.84", "9.73453, 56.4536, -6.33798, 1.92", "9.81164, 57.4725, -6.34297, 1.69", "9.94585, 58.66, -6.41095, 0.37", "10.0684, 59.564, -6.50504, 0.29", "10.0787, 59.6303, -6.51424, 0.29", "10.1472, 60.0941, -6.56766, 0.29", "10.1683, 60.2733, -6.59127, 0.29", "10.1923, 61.2743, -6.69263, 0.44", "10.1776, 61.3395, -6.69133, 0.44", "9.92501, 61.9381, -6.61665, 0.59", "9.55155, 62.7819, -6.49878, 0.96", "9.42446, 63.0565, -6.45343, 0.96", "9.20914, 63.5541, -6.36055, 0.88", "8.8219, 64.4901, -6.16102, 0.44", "8.57036, 65.1938, -6.04233, 0.29", "8.32761, 65.9894, -5.95197, 0.37", "8.30101, 66.1202, -5.93939, 0.37", "8.24801, 66.745, -5.85526, 0.52", "8.25394, 66.8446, -5.83499, 0.52", "8.34412, 67.3759, -5.6979, 0.74", "8.35815, 67.4481, -5.67695, 0.74", "8.52515, 68.5181, -5.33225, 0.96", "8.57929, 68.9181, -5.21128, 1.4", "8.70699, 69.9287, -4.91576, 1.92", "8.75599, 70.3248, -4.8109, 2.14", "8.85667, 71.0224, -4.6372, 1.62", "9.10839, 72.487, -4.29407, 0.59", "9.33856, 73.6994, -4.03731, 0.44", "9.35922, 73.7972, -4.01765, 0.44", "9.59801, 74.7989, -3.80667, 0.66", "9.85991, 75.8709, -3.56973, 1.25", "10.1361, 77.0008, -3.31817, 2.28", "10.1826, 77.2017, -3.27429, 2.87", "10.2997, 77.782, -3.14649, 2.73", "10.4997, 79.015, -2.8816, 1.4", "10.6195, 80.1262, -2.65078, 0.44", "10.6494, 80.9611, -2.50015, 0.74", "10.6479, 81.5341, -2.4108, 0.81", "10.6436, 81.8242, -2.3686, 0.96", "10.6392, 82.3227, -2.30719, 0.66", "10.6407, 82.7334, -2.27646, 0.52", "10.6734, 83.6892, -2.2116, 0.52", "10.7448, 84.8089, -2.14401, 0.44", "10.7508, 84.8764, -2.14043, 0.44", "10.9053, 86.2052, -2.07586, 0.44", "11.0281, 87.0407, -2.04174, 0.96", "11.0424, 87.1167, -2.0394, 0.96", "11.159, 87.6611, -2.03222, 1.4", "11.1736, 87.7371, -2.03191, 1.4", "11.2144, 88.0226, -2.02246, 1.4", "11.2231, 88.111, -2.01708, 1.4", "11.279, 88.8186, -1.95966, 0.74", "11.3335, 89.6162, -1.89321, 0.37", "11.3933, 90.5274, -1.81503, 0.29", "11.4514, 91.3968, -1.73987, 0.29", "11.456, 91.4635, -1.73393, 0.29", "11.5108, 92.1506, -1.67369, 0.59", "11.5682, 92.7918, -1.61942, 0.88", "11.5895, 92.953, -1.60764, 0.88", "11.676, 93.4351, -1.59249, 0.88", "11.6975, 93.5347, -1.59453, 0.88", "11.7721, 93.8872, -1.60105, 0.88", "11.7827, 93.9532, -1.59499, 0.88", "11.814, 94.2868, -1.51123, 0.66", "11.8026, 94.5513, -1.40147, 0.52", "11.7456, 94.9032, -1.20321, 0.29", "11.638, 95.3124, -0.952097, 0.29", "11.3437, 96.1685, -0.380416, 0.29", "11.3093, 96.2681, -0.317973, 0.29", "11.1861, 96.7494, 0.0255239, 0.81", "11.1794, 96.8051, 0.0607274, 0.81", "11.1682, 97.301, 0.331316, 0.81", "11.1728, 97.3618, 0.358236, 0.81", "11.2486, 97.8877, 0.55017, 0.52", "11.5241, 99.2936, 1.00575, 0.88", "11.7811, 100.284, 1.27321, 1.62", "11.8948, 100.746, 1.38377, 1.62", "12.0672, 101.445, 1.53678, 1.33", "12.0805, 101.51, 1.54776, 1.33", "12.2428, 102.484, 1.6553, 0.74", "12.392, 103.779, 1.68292, 0.29", "12.461, 104.787, 1.68928, 0.29", "12.4636, 104.844, 1.69068, 0.29", "12.4916, 105.654, 1.7202, 0.29", "12.4942, 105.721, 1.72323, 0.29", "12.5442, 106.766, 1.7782, 0.44", "12.644, 107.958, 1.84642, 0.59", "12.7737, 108.893, 1.89936, 1.55", "12.8543, 109.328, 1.928, 1.84", "12.9175, 109.598, 1.95047, 1.77", "13.1553, 110.545, 2.02412, 1.03", "13.3787, 111.426, 2.08841, 0.29", "13.3967, 111.501, 2.09306, 0.29", "13.5577, 112.293, 2.12004, 0.29", "13.6315, 112.787, 2.14128, 0.29", "13.6387, 112.853, 2.14462, 0.29", "13.6492, 113.456, 2.18386, 0.74", "13.6248, 113.812, 2.21214, 0.88", "13.5751, 114.209, 2.24751, 0.59", "13.4916, 114.647, 2.29122, 0.37", "13.4802, 114.713, 2.29764, 0.37", "13.3845, 115.341, 2.35636, 0.29", "13.3756, 115.407, 2.36235, 0.29", "13.3109, 115.968, 2.40501, 0.29", "13.2434, 116.618, 2.44974, 0.96", "13.1854, 117.245, 2.51629, 1.55", "13.144, 117.715, 2.57594, 1.99", "13.1027, 118.239, 2.6494, 1.84", "12.9927, 119.637, 2.8586, 0.29", "12.9146, 120.799, 3.03769, 0.29", "12.8772, 121.84, 3.17994, 1.11", "12.8756, 122.284, 3.2334, 1.55", "12.8837, 122.561, 3.26272, 1.77", "12.9394, 123.363, 3.33325, 0.74", "13.0422, 124.336, 3.39749, 0.37", "13.2224, 125.81, 3.44829, 0.29", "13.2831, 126.325, 3.45018, 0.66", "13.3048, 126.535, 3.45188, 0.66", "13.3556, 127.13, 3.46009, 0.29", "13.3882, 127.707, 3.47378, 0.29", "13.3633, 128.562, 3.51358, 0.29", "13.3101, 128.994, 3.5482, 0.66", "13.2555, 129.338, 3.57681, 0.81", "13.232, 129.48, 3.58839, 0.81", "13.1614, 129.874, 3.62059, 0.52", "13.0812, 130.473, 3.66379, 0.29", "13.0663, 130.962, 3.69133, 0.29", "13.0662, 131.526, 3.72205, 0.88", "13.0674, 131.871, 3.74176, 1.18", "13.0648, 131.947, 3.74689, 1.18", "13.0437, 132.371, 3.77771, 0.81", "12.933, 133.557, 3.85687, 0.29", "12.8335, 134.244, 3.9004, 0.44", "12.7274, 134.801, 3.93514, 0.44", "12.4566, 135.903, 3.94016, 0.29", "12.4342, 135.976, 3.93784, 0.29", "12.0865, 136.9, 3.88385, 1.4", "11.94, 137.231, 3.85686, 1.92", "11.7204, 137.712, 3.8116, 1.92", "11.0536, 139.036, 3.75093, 0.37", "10.6772, 139.76, 3.75296, 0.37", "10.3845, 140.32, 3.78094, 0.59", "10.165, 140.754, 3.8283, 0.66", "9.96689, 141.171, 3.89306, 0.52", "9.47617, 142.318, 4.13863, 0.22", "9.28092, 142.889, 4.31177, 0.22", "9.25575, 142.977, 4.33711, 0.22", "9.03458, 143.849, 4.56574, 1.18", "8.95473, 144.183, 4.64503, 1.77", "8.82626, 144.723, 4.75974, 2.14", "8.44498, 146.267, 4.97361, 0.29", "8.15469, 147.254, 5.08466, 0.29", "7.87562, 148.116, 5.1614, 0.88", "7.68887, 148.64, 5.1923, 1.4", "7.53261, 149.068, 5.20489, 1.4", "7.09668, 150.258, 5.19532, 0.44", "6.9354, 150.732, 5.16854, 0.29", "6.80824, 151.149, 5.14177, 0.44", "6.59773, 152.01, 5.09504, 0.44", "6.46179, 152.865, 5.07064, 0.59", "6.45592, 152.932, 5.06793, 0.59", "6.43549, 153.977, 5.03129, 0.59", "6.43731, 154.044, 5.0273, 0.59", "6.47304, 154.883, 4.93604, 0.37", "6.53081, 155.784, 4.81139, 0.37", "6.62799, 157.162, 4.59959, 1.33", "6.68235, 157.772, 4.50427, 1.62", "6.76178, 158.477, 4.39264, 1.69", "6.93508, 159.735, 4.20421, 0.59", "7.09423, 160.695, 4.06626, 0.44", "7.23021, 161.377, 3.98374, 0.29", "7.45228, 162.257, 3.93884, 0.22", "7.62939, 162.9, 3.92828, 0.74", "7.7893, 163.44, 3.9482, 0.96", "7.82285, 163.543, 3.95896, 0.96", "8.03079, 164.206, 4.04288, 0.96", "8.38903, 165.487, 4.22916, 0.29", "8.40254, 165.553, 4.23996, 0.29", "8.51246, 166.319, 4.37243, 0.37", "8.5221, 166.46, 4.39982, 0.37", "8.53306, 166.939, 4.49695, 0.37", "8.52486, 167.431, 4.59589, 1.11", "8.49924, 167.924, 4.68912, 1.25", "8.50114, 168.293, 4.75629, 1.4", "8.63018, 169.907, 5.03211, 0.29", "8.64732, 169.982, 5.04293, 0.29", "8.84341, 170.647, 5.13784, 0.29", "8.86842, 170.709, 5.14579, 0.29", "9.32517, 171.501, 5.22313, 0.44", "9.58151, 171.804, 5.23199, 0.44", "10.3966, 172.322, 5.13098, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.7096, 15.3172, -4.97108, 0.96", "-13.504, 15.7229, -6.00241, 0.96", "-14.1328, 16.1913, -6.86942, 0.74", "-14.2421, 16.2954, -7.02057, 0.74", "-15.2762, 17.5409, -8.52895, 0.66", "-15.8585, 18.3924, -9.47644, 0.74", "-16.2146, 18.971, -10.0668, 0.74", "-16.49, 19.5727, -10.6051, 1.03", "-16.6848, 20.0846, -11.0512, 1.25", "-16.9521, 20.7668, -11.5856, 1.25", "-17.4567, 21.9607, -12.3961, 1.03", "-17.7293, 22.5109, -12.7715, 0.88", "-18.4637, 23.6723, -13.7591, 0.88", "-18.5013, 23.7196, -13.8102, 0.88", "-19.3762, 24.5103, -15.0184, 0.52", "-19.8251, 24.6288, -15.6839, 0.52", "-19.958, 24.5362, -15.9113, 0.52", "-20.6667, 23.7243, -17.1293, 0.81", "-20.7301, 23.6409, -17.2319, 0.81", "-21.2418, 23.0, -18.0378, 0.88", "-21.8686, 22.2202, -19.0099, 0.44", "-22.3171, 22.0279, -19.4527, 0.44", "-23.0873, 22.1454, -19.8416, 0.81", "-23.9153, 22.3449, -20.1572, 1.18", "-24.3975, 22.44, -20.3427, 1.47", "-25.0498, 22.4913, -20.6587, 1.18", "-26.0888, 22.3611, -21.2776, 0.74", "-27.1364, 21.9622, -22.0102, 0.44", "-27.8827, 21.5375, -22.5623, 1.99", "-28.7961, 20.9034, -23.2514, 2.8", "-30.4341, 19.5991, -24.5415, 1.4", "-31.4407, 18.7427, -25.3557, 0.44", "-32.1395, 18.1297, -25.937, 0.29", "-32.6091, 17.7555, -26.313, 0.29", "-32.9493, 17.5655, -26.5598, 0.29", "-33.0159, 17.5567, -26.5993, 0.29", "-34.0237, 17.8033, -27.0742, 1.77", "-34.6655, 18.0366, -27.3782, 1.99", "-35.2278, 18.2481, -27.6578, 2.06", "-35.7525, 18.4241, -27.9286, 1.99", "-37.2754, 18.7919, -28.7114, 0.52", "-37.8566, 18.8298, -29.0177, 0.52", "-38.417, 18.4846, -29.3367, 0.66", "-38.7298, 17.9805, -29.6566, 0.88", "-38.8603, 17.7053, -29.8643, 1.03", "-39.0816, 17.1553, -30.3305, 0.88", "-39.3354, 16.641, -31.054, 0.52", "-39.7006, 16.2565, -31.9881, 0.37", "-40.5734, 15.7944, -34.0106, 1.03", "-41.0925, 15.6838, -34.9991, 1.25", "-41.2983, 15.669, -35.3426, 1.47", "-42.7171, 15.6932, -37.4323, 0.44", "-43.2552, 15.7234, -38.1498, 0.44", "-43.3413, 15.7299, -38.2514, 0.44", "-44.9795, 15.7977, -39.8446, 2.65", "-45.6618, 15.8136, -40.4452, 2.87", "-46.1446, 15.84, -40.8422, 2.73", "-48.002, 16.0483, -42.2375, 0.66", "-48.728, 16.2226, -42.7847, 0.74", "-49.3805, 16.4916, -43.2395, 0.88", "-50.69, 17.3049, -44.0961, 0.37", "-51.3995, 17.8065, -44.5737, 0.29", "-51.9837, 18.2593, -44.982, 0.29", "-52.8036, 18.9197, -45.5434, 0.29", "-53.7959, 19.7002, -46.2654, 1.99", "-54.6009, 20.3167, -46.8629, 2.58", "-55.8237, 21.2018, -47.7998, 0.29", "-55.8766, 21.2389, -47.8446, 0.29", "-56.5126, 21.6875, -48.4274, 0.29", "-57.1166, 22.1878, -49.0467, 0.96", "-57.2991, 22.3819, -49.2388, 1.25", "-57.8308, 22.984, -49.7329, 1.11", "-58.5942, 23.6927, -50.4458, 0.29", "-58.6448, 23.7276, -50.4959, 0.29", "-59.2292, 24.0127, -51.1424, 0.52", "-59.7228, 24.1997, -51.6717, 0.74", "-60.61, 24.5122, -52.5451, 0.74", "-62.2625, 25.0257, -54.0121, 2.14", "-63.0669, 25.2631, -54.6708, 2.43", "-64.6453, 25.7813, -55.9168, 0.29", "-65.5077, 26.0858, -56.5787, 0.29", "-66.3114, 26.4081, -57.1617, 0.81", "-66.8434, 26.6368, -57.5041, 1.03", "-67.6428, 26.9736, -57.9355, 0.29", "-68.388, 27.2645, -58.3365, 0.88", "-68.9379, 27.4498, -58.6588, 1.47", "-69.7478, 27.6681, -59.1671, 1.47", "-71.5765, 28.0863, -60.3625, 0.29", "-72.5505, 28.2854, -61.0009, 2.06", "-73.3366, 28.4191, -61.481, 2.21", "-75.783, 28.7761, -62.834, 0.29", "-76.8989, 28.9253, -63.3702, 0.37", "-76.9699, 28.9337, -63.4011, 0.37", "-77.582, 28.9689, -63.6376, 0.29", "-78.6608, 28.9549, -64.0264, 0.29", "-79.225, 28.9003, -64.213, 0.88", "-79.7681, 28.779, -64.3961, 1.25", "-81.171, 28.4817, -64.9811, 0.59", "-82.0527, 28.3366, -65.3784, 0.22", "-82.4138, 28.3006, -65.5485, 0.22", "-82.8682, 28.2915, -65.7585, 0.52", "-83.3204, 28.3323, -65.9432, 0.52", "-84.1317, 28.5197, -66.2103, 0.22", "-84.6624, 28.6963, -66.3389, 0.22", "-85.5511, 29.0729, -66.547, 1.4", "-86.0808, 29.332, -66.6712, 1.84", "-86.851, 29.7528, -66.8445, 1.84", "-88.1374, 30.5304, -67.1494, 0.29", "-88.2023, 30.5715, -67.167, 0.29", "-88.6835, 30.8783, -67.3071, 0.29", "-89.3001, 31.2869, -67.4975, 0.81", "-89.7833, 31.5792, -67.6341, 0.81", "-90.3116, 31.851, -67.7687, 0.37", "-91.1575, 32.2193, -68.032, 0.29", "-91.9815, 32.5392, -68.3143, 0.29", "-92.079, 32.5757, -68.3516, 0.29", "-92.9702, 32.9041, -68.7117, 0.29", "-94.0008, 33.3222, -69.1322, 1.25", "-94.5768, 33.5823, -69.3657, 1.62", "-94.9649, 33.8005, -69.5165, 1.69", "-96.6714, 35.0343, -70.1783, 0.29", "-96.8062, 35.1533, -70.2315, 0.29", "-97.2196, 35.5792, -70.3859, 0.29", "-97.2729, 35.6372, -70.4028, 0.29", "-97.881, 36.1828, -70.5689, 0.29", "-98.4246, 36.5614, -70.708, 0.29", "-99.2634, 36.9909, -70.9042, 0.29", "-100.377, 37.3852, -71.1575, 1.62", "-100.698, 37.4473, -71.2272, 1.84", "-102.428, 37.5469, -71.578, 0.29", "-103.068, 37.4593, -71.7522, 0.66", "-103.337, 37.373, -71.8396, 0.66", "-103.914, 37.0927, -72.0537, 0.29", "-104.465, 36.749, -72.2938, 0.81", "-104.873, 36.4753, -72.5127, 0.96", "-106.197, 35.5004, -73.3769, 0.44", "-106.739, 35.0863, -73.7681, 0.29", "-106.854, 34.9992, -73.8563, 0.81", "-107.299, 34.6514, -74.2295, 1.03", "-108.289, 33.836, -75.0796, 0.29", "-108.331, 33.7982, -75.1164, 0.29", "-108.959, 33.2398, -75.6961, 0.29", "-108.997, 33.2077, -75.7421, 0.29", "-109.662, 32.6618, -76.5585, 1.03", "-109.98, 32.4031, -76.9758, 1.03", "-110.893, 31.7153, -78.3415, 0.22", "-111.996, 30.9928, -80.0625, 1.92", "-114.018, 29.8255, -83.3308, 0.37", "-114.67, 29.4948, -84.3955, 0.22", "-115.561, 29.1123, -85.8782, 1.33", "-117.7, 28.422, -89.3601, 0.29", "-118.149, 28.3205, -90.0449, 0.22", "-118.188, 28.3134, -90.0986, 0.22", "-118.714, 28.2341, -90.7213, 0.22", "-118.757, 28.2246, -90.7717, 0.22", "-119.951, 27.8793, -92.0522, 1.18", "-121.956, 27.1522, -93.9991, 0.29", "-122.585, 26.8916, -94.6272, 1.4", "-124.477, 25.9747, -96.5556, 0.29", "-125.664, 25.236, -97.8271, 0.29", "-125.708, 25.1989, -97.8805, 0.29", "-126.27, 24.4736, -98.7283, 0.29", "-126.296, 24.4299, -98.7735, 0.29", "-126.772, 23.4083, -99.7358, 0.29", "-127.086, 22.2915, -100.534, 0.29", "-127.495, 20.7167, -101.553, 1.4", "-127.607, 20.1244, -101.93, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-12.7096, 15.3172, -4.97108, 0.74", "-12.2354, 17.0572, -4.90475, 0.74", "-11.7583, 18.6926, -4.86711, 0.74", "-11.736, 18.7681, -4.86578, 0.74", "-11.478, 19.636, -4.85268, 0.74", "-11.1671, 20.8453, -4.83515, 0.74", "-11.0267, 21.5622, -4.82464, 0.74", "-11.011, 21.7099, -4.82964, 0.74", "-11.0519, 22.6571, -4.8973, 0.74", "-11.0614, 22.7254, -4.90321, 0.74", "-11.3416, 23.8121, -5.00403, 0.96", "-11.6619, 24.7609, -5.08049, 1.25", "-12.0801, 25.9221, -5.16035, 1.55", "-12.3369, 26.5892, -5.20318, 1.55", "-12.3632, 26.6533, -5.20862, 1.55", "-12.6883, 27.4593, -5.29635, 1.03", "-13.0572, 28.3246, -5.40985, 1.03", "-13.0889, 28.3963, -5.42012, 1.03", "-13.5646, 29.3985, -5.56956, 0.96", "-14.0001, 30.2084, -5.71541, 0.96", "-14.5297, 31.0756, -5.89016, 0.52", "-15.1465, 31.9399, -6.08633, 0.44", "-15.1878, 31.9925, -6.09818, 0.44", "-15.6397, 32.5446, -6.21029, 0.88", "-16.0883, 33.0755, -6.29798, 1.11", "-16.4883, 33.5294, -6.34644, 1.33", "-16.963, 34.0643, -6.38375, 1.4", "-17.4381, 34.6282, -6.41196, 1.03", "-17.8521, 35.1347, -6.42824, 0.59", "-18.3211, 35.7583, -6.46133, 0.59", "-18.5129, 36.0463, -6.49159, 0.96", "-18.7021, 36.3558, -6.53652, 1.11", "-18.8545, 36.6327, -6.58398, 1.11", "-19.1003, 37.1268, -6.70609, 0.96", "-19.4131, 37.9138, -6.92018, 0.59", "-19.6427, 38.7091, -7.1526, 0.81", "-19.7613, 39.2877, -7.3145, 1.11", "-19.8304, 39.7698, -7.43974, 1.11", "-19.9151, 40.7446, -7.66924, 0.66", "-19.942, 41.7496, -7.87076, 0.37", "-19.9081, 42.8367, -8.05921, 0.74", "-19.8406, 43.5377, -8.199, 0.96", "-19.7591, 44.0898, -8.32345, 1.47", "-19.6971, 44.4628, -8.40878, 1.77", "-19.6092, 44.957, -8.51697, 1.77", "-19.4851, 45.6428, -8.67843, 1.77", "-19.2741, 46.8177, -8.97891, 0.66", "-19.047, 48.1845, -9.3451, 0.37", "-18.961, 48.8089, -9.50597, 0.29", "-18.8894, 49.522, -9.66693, 0.81", "-18.8503, 50.1103, -9.77318, 0.88", "-18.8382, 50.7228, -9.8439, 0.74", "-18.8614, 51.4447, -9.8907, 0.37", "-18.9358, 52.2589, -9.93123, 0.29", "-19.0504, 53.0527, -9.97874, 1.03", "-19.1633, 53.6142, -10.0127, 1.69", "-19.2778, 54.095, -10.0418, 1.69", "-19.5182, 55.0556, -10.0867, 0.37", "-19.7296, 55.9056, -10.1449, 0.29", "-19.8501, 56.401, -10.1851, 0.29", "-20.0636, 57.2965, -10.2601, 0.66", "-20.1308, 57.5792, -10.2572, 0.96", "-20.2835, 58.2828, -10.1966, 0.44", "-20.4893, 59.3812, -10.0404, 1.4", "-20.5845, 59.9605, -9.94188, 1.99", "-20.6688, 60.5377, -9.83249, 2.28", "-20.943, 62.5468, -9.43942, 0.37", "-21.1058, 63.7411, -9.20164, 0.37", "-21.2369, 64.7382, -8.99572, 0.96", "-21.282, 65.1051, -8.91484, 1.11", "-21.3482, 65.6728, -8.79453, 1.11", "-21.4881, 67.026, -8.53565, 0.37", "-21.5383, 67.6508, -8.44515, 0.37", "-21.5438, 67.719, -8.43484, 0.37", "-21.6016, 69.0023, -8.24321, 1.55", "-21.6021, 69.4144, -8.18434, 2.21", "-21.5901, 69.8451, -8.12546, 2.43", "-21.5432, 70.7779, -8.00716, 1.18", "-21.4749, 72.0745, -7.86338, 0.37", "-21.4315, 73.3384, -7.742, 0.37", "-21.4043, 74.2864, -7.66753, 0.37", "-21.4027, 74.4348, -7.65611, 0.37", "-21.4136, 75.0195, -7.61271, 0.29", "-21.4579, 75.8649, -7.55253, 0.29", "-21.5347, 76.9435, -7.47761, 1.18", "-21.5574, 77.2292, -7.45902, 1.47", "-21.5799, 77.6661, -7.43072, 1.33", "-21.5827, 78.0223, -7.40696, 1.03", "-21.5359, 78.9604, -7.34101, 0.37", "-21.4552, 79.9315, -7.23934, 0.29", "-21.3943, 80.5955, -7.15179, 1.11", "-21.3641, 81.0254, -7.08751, 1.55", "-21.338, 81.532, -7.00383, 1.25", "-21.32, 82.2547, -6.87483, 0.52", "-21.3288, 83.089, -6.71875, 0.29", "-21.3431, 83.4732, -6.64521, 0.29", "-21.3715, 84.193, -6.51084, 0.81", "-21.3777, 84.3979, -6.47531, 1.03", "-21.396, 84.9076, -6.40021, 1.03", "-21.4455, 85.9109, -6.28604, 0.52", "-21.4691, 86.5013, -6.23581, 0.44", "-21.5023, 87.084, -6.19001, 0.59", "-21.53, 87.4385, -6.16428, 0.52", "-21.6411, 88.6188, -6.08475, 0.37", "-21.8087, 89.8844, -6.00888, 0.29", "-21.823, 89.9628, -6.00478, 0.29", "-22.0418, 90.9295, -5.96016, 1.62", "-22.1643, 91.4195, -5.9448, 1.99", "-22.2918, 91.9074, -5.93397, 2.28", "-22.7604, 93.6813, -5.90615, 0.37", "-23.2378, 95.532, -5.8817, 0.37", "-23.3996, 96.1799, -5.87293, 0.37", "-23.6865, 97.3818, -5.85644, 1.25", "-23.8004, 97.8843, -5.85001, 2.06", "-23.9121, 98.4473, -5.84182, 1.47", "-24.0678, 99.4444, -5.82373, 0.66", "-24.1283, 99.9363, -5.81004, 0.44", "-24.1398, 100.034, -5.8076, 0.44", "-24.2218, 100.614, -5.79237, 0.37", "-24.3807, 101.541, -5.78158, 0.15", "-24.5071, 102.145, -5.78235, 0.37", "-24.5904, 102.497, -5.78595, 0.37", "-24.8317, 103.478, -5.79568, 0.22", "-25.0571, 104.346, -5.80069, 1.11", "-25.1376, 104.654, -5.80107, 1.69", "-25.2456, 105.069, -5.79904, 1.84", "-25.5656, 106.443, -5.79983, 0.37", "-25.7305, 107.224, -5.79996, 0.37", "-25.9334, 108.3, -5.79396, 0.37", "-26.0117, 108.809, -5.79878, 0.66", "-26.066, 109.259, -5.80878, 0.66", "-26.1743, 110.558, -5.86598, 0.29", "-26.2077, 111.12, -5.90406, 0.29", "-26.225, 111.71, -5.95037, 1.03", "-26.2199, 112.289, -5.99446, 1.4", "-26.2087, 112.581, -6.01264, 1.55", "-26.1297, 113.417, -6.01007, 0.22", "-26.0347, 113.991, -5.96822, 0.22", "-25.8571, 114.837, -5.87498, 0.22", "-25.6699, 115.616, -5.76421, 1.03", "-25.5223, 116.18, -5.66653, 1.33", "-25.1624, 117.479, -5.417, 0.29", "-24.8663, 118.481, -5.20574, 0.29", "-24.7259, 118.975, -5.10374, 0.29", "-24.7107, 119.041, -5.08921, 0.29", "-24.6277, 119.535, -4.97708, 0.81", "-24.5736, 120.05, -4.86231, 0.88", "-24.5586, 120.599, -4.70638, 0.44", "-24.5665, 121.245, -4.47964, 0.29", "-24.5818, 122.061, -4.16809, 0.29", "-24.5904, 122.541, -3.98131, 0.66", "-24.5991, 122.994, -3.80303, 0.29", "-24.6212, 124.357, -3.26869, 0.52", "-24.643, 124.893, -3.06709, 0.66", "-24.6934, 125.434, -2.88484, 0.29", "-24.8021, 126.131, -2.69267, 0.88", "-24.8931, 126.549, -2.59387, 1.4", "-24.9672, 126.821, -2.54286, 1.55", "-25.1838, 127.534, -2.45123, 0.66", "-25.6228, 128.834, -2.27492, 0.29", "-25.8333, 129.402, -2.1934, 0.81", "-25.9481, 129.682, -2.15069, 0.88", "-26.1535, 130.159, -2.07627, 0.52" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "9.9828, -5.99054, 10.2844, 0.74", "10.4823, -6.10065, 9.37749, 0.74", "10.8994, -6.12322, 8.67817, 0.37", "12.068, -5.99584, 6.89248, 1.03", "12.2856, -5.94234, 6.59434, 1.03", "13.3506, -5.51674, 5.33438, 0.74", "13.796, -5.29341, 4.90414, 0.96", "14.1968, -5.00547, 4.61175, 1.25", "14.6993, -4.59356, 4.40133, 1.55", "15.1548, -4.23385, 4.35534, 1.4", "15.9424, -3.67636, 4.37618, 0.74", "16.6998, -3.20007, 4.45272, 0.81", "16.7548, -3.16857, 4.45524, 0.81", "17.5691, -2.71359, 4.45888, 0.59", "18.3616, -2.26734, 4.4163, 0.44", "19.0064, -1.86783, 4.34867, 0.81", "19.8984, -1.26895, 4.21024, 0.96", "20.7382, -0.600526, 4.03809, 1.18", "21.2901, -0.0892378, 3.91799, 1.62", "21.7401, 0.391665, 3.80701, 1.4", "22.3608, 1.10662, 3.65309, 0.74", "22.4014, 1.15601, 3.64487, 0.74", "22.9011, 1.76265, 3.63102, 1.25", "23.5211, 2.42978, 3.73681, 1.4", "24.1174, 2.95753, 3.94983, 1.25", "24.8572, 3.49181, 4.33379, 1.18", "25.4168, 3.7955, 4.70032, 0.96", "26.4079, 4.23174, 5.43875, 0.59", "27.5649, 4.58226, 6.4187, 0.59", "28.2285, 4.73764, 7.02377, 0.88", "28.7299, 4.82946, 7.49902, 1.03", "29.6516, 4.96032, 8.37367, 0.74", "29.7213, 4.97101, 8.4361, 0.74", "30.5685, 5.19777, 9.10097, 0.52", "31.2264, 5.52885, 9.55333, 0.96", "31.4921, 5.72704, 9.7103, 1.18", "31.7614, 6.03283, 9.83941, 1.33", "32.0471, 6.49152, 9.93766, 1.4", "32.3784, 7.12464, 10.0527, 1.03", "32.6354, 7.71974, 10.1385, 0.88", "32.947, 8.45007, 10.2384, 0.74", "33.2242, 9.05404, 10.3141, 0.88", "33.4392, 9.45461, 10.362, 0.88", "34.0111, 10.3286, 10.4741, 0.81", "34.4869, 10.9616, 10.5314, 1.18", "35.1013, 11.7228, 10.5713, 0.52", "35.4769, 12.1809, 10.5682, 1.03", "35.8963, 12.7096, 10.5137, 0.74", "36.3498, 13.3215, 10.3928, 0.74", "36.9543, 14.1923, 10.1589, 0.66", "37.3544, 14.7525, 9.99446, 0.96", "37.8606, 15.4683, 9.7776, 1.62", "38.2538, 15.9817, 9.61556, 1.92", "38.6947, 16.4797, 9.43785, 1.69", "39.4589, 17.1694, 9.18919, 0.37", "40.18, 17.6269, 9.03215, 0.52", "40.2296, 17.6502, 9.02471, 0.52", "41.0574, 17.9917, 9.045, 0.66", "41.7538, 18.2758, 9.16345, 0.29", "42.2759, 18.4904, 9.30558, 0.29", "42.317, 18.5093, 9.31961, 0.29", "42.7544, 18.7808, 9.48745, 0.74", "43.8982, 19.5203, 9.90477, 0.52", "44.2949, 19.781, 10.0436, 0.88", "44.8316, 20.0968, 10.2318, 0.88", "44.8797, 20.1215, 10.2463, 0.88", "45.838, 20.5685, 10.5034, 0.52", "46.6917, 20.9144, 10.6949, 0.59", "47.2262, 21.1118, 10.7807, 0.44", "48.0465, 21.4626, 10.9339, 0.29", "48.0936, 21.4899, 10.9445, 0.29", "48.4013, 21.7429, 11.0252, 0.52", "48.446, 21.7871, 11.0399, 0.52", "48.6567, 22.1063, 11.1229, 0.52", "48.9725, 22.7852, 11.2494, 0.22", "49.2739, 23.6894, 11.3421, 0.22", "49.4933, 24.4461, 11.413, 0.22", "56.2546, 28.5503, 12.049, 0.22", "63.0437, 32.5167, 13.0714, 0.22", "69.8353, 36.1964, 14.8077, 0.22", "77.2944, 38.7134, 15.0549, 0.22", "85.0041, 40.0765, 15.6606, 0.22", "92.7858, 39.79, 14.6939, 0.22", "100.629, 39.9472, 14.7365, 0.22", "108.35, 40.6259, 15.9567, 0.22", "115.955, 42.6011, 16.2705, 0.22", "123.227, 45.5327, 17.1357, 0.22", "130.375, 48.4673, 18.7288, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "9.9828, -5.99054, 10.2844, 1.18", "9.80215, -7.92131, 10.7784, 1.18", "9.77084, -9.03404, 10.9271, 1.03", "9.77487, -9.83173, 10.9836, 0.81", "9.87998, -11.1352, 11.0502, 0.81", "10.0386, -12.3778, 11.1728, 0.74", "10.2976, -14.0708, 11.3868, 0.96", "10.511, -15.0216, 11.4413, 0.96", "10.5266, -15.0745, 11.4445, 0.96", "10.9822, -16.3052, 11.6293, 0.96", "11.5543, -17.5626, 11.8653, 1.69", "11.5818, -17.6174, 11.8832, 1.69", "11.956, -18.417, 12.2847, 1.62", "12.2832, -19.2616, 12.7323, 1.62", "12.6548, -20.3416, 13.2624, 1.99" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.19241, 27.8307, 7.84512, 1.33", "-2.32533, 28.5865, 7.41592, 1.33", "-2.45741, 29.2562, 6.99905, 0.96", "-2.65207, 30.1069, 6.46516, 0.88", "-2.95353, 31.4376, 5.67943, 1.18", "-3.03268, 31.8406, 5.46297, 1.18", "-3.08634, 32.1668, 5.30172, 1.18", "-3.17608, 32.9431, 4.9567, 0.96", "-3.23128, 33.6038, 4.69515, 0.96", "-3.26207, 34.4449, 4.44093, 0.74", "-3.26722, 35.2521, 4.26819, 1.25", "-3.25849, 35.8026, 4.15651, 1.69", "-3.23359, 36.2831, 4.07185, 1.92", "-3.17552, 36.9483, 3.99339, 2.06", "-3.09189, 37.6105, 3.918, 2.06", "-3.00326, 38.3552, 3.82382, 1.99" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.19241, 27.8307, 7.84512, 0.81", "-3.29526, 27.7971, 8.43474, 0.81", "-4.31553, 27.9051, 8.96267, 0.66", "-4.36731, 27.919, 8.98866, 0.66", "-4.97486, 28.1527, 9.28443, 0.66", "-5.41144, 28.3957, 9.48833, 0.88", "-5.50558, 28.4699, 9.53761, 0.88", "-5.77882, 28.8907, 9.69339, 1.03", "-5.94932, 29.2501, 9.7834, 1.03", "-5.97742, 29.3133, 9.79723, 1.03", "-6.15982, 29.8115, 9.89629, 0.74", "-6.42641, 30.6378, 10.0609, 0.74", "-6.58389, 31.2113, 10.1695, 0.74", "-6.73685, 31.9155, 10.289, 0.88", "-6.83757, 32.5045, 10.3864, 1.18", "-6.96184, 33.2955, 10.5031, 0.88", "-7.05732, 33.8703, 10.578, 0.88", "-7.13468, 34.3592, 10.6275, 1.03", "-7.26086, 35.1863, 10.7484, 0.88", "-7.3548, 35.8023, 10.8598, 0.88", "-7.51783, 36.8439, 11.1204, 0.88", "-7.64044, 37.4418, 11.3678, 1.11", "-7.77759, 37.9174, 11.653, 1.33", "-8.05207, 38.6228, 12.2477, 1.25", "-8.27826, 38.9467, 12.7367, 1.11", "-8.66145, 39.2371, 13.5689, 1.03", "-9.438, 39.4244, 15.0886, 0.88", "-9.85241, 39.457, 15.7652, 0.74", "-9.90323, 39.4579, 15.8322, 0.74", "-10.8183, 39.4459, 16.7913, 1.03", "-10.8577, 39.4479, 16.8235, 1.03", "-11.9659, 39.6158, 17.5059, 0.66", "-13.0038, 39.9214, 18.0017, 0.59", "-13.5695, 40.1582, 18.2507, 0.44", "-14.0425, 40.4113, 18.4315, 0.37", "-15.0022, 41.0108, 18.7132, 0.37", "-15.286, 41.2, 18.7791, 0.74", "-15.581, 41.4322, 18.8012, 1.18", "-15.9937, 41.8164, 18.7747, 1.03", "-16.3411, 42.2442, 18.7488, 0.74", "-22.8877, 47.3925, 21.018, 0.74", "-29.5445, 52.7256, 22.4075, 0.74", "-36.6551, 57.3215, 23.9332, 0.74", "-43.9799, 61.4642, 25.6163, 0.74", "-52.0923, 63.8219, 26.721, 0.74", "-59.8896, 67.3431, 26.6279, 0.74", "-67.8862, 70.2119, 27.4366, 0.74", "-76.1833, 71.7078, 28.5399, 0.74", "-84.4618, 73.5634, 29.1914, 0.74", "-92.4402, 76.5652, 29.6755, 0.74", "-100.315, 79.7511, 30.594, 0.74", "-107.903, 83.678, 29.8982, 0.74", "-115.604, 87.3137, 29.0375, 0.74", "-123.293, 90.7776, 27.6026, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.736849, -22.2501, 2.22137, 2.14", "-1.16488, -23.1512, 2.28649, 2.14", "-1.504, -23.8651, 2.33808, 2.14", "-1.5279, -23.9155, 2.34172, 2.14", "-1.89974, -24.6983, 2.39829, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.736849, -22.2501, 2.22137, 1.03", "-3.20024, -21.6907, 3.87558, 1.03", "-3.86772, -21.5549, 4.24865, 1.03", "-3.97133, -21.5444, 4.3094, 1.03", "-4.71729, -21.5486, 4.78487, 1.03", "-5.22714, -21.5977, 5.12852, 1.18", "-5.91395, -21.7361, 5.61474, 1.18", "-7.12222, -22.395, 6.57188, 1.11", "-7.97608, -23.1985, 7.40714, 1.11", "-8.42636, -23.8573, 7.9791, 1.33", "-8.59685, -24.2296, 8.25521, 1.62", "-8.85192, -25.0076, 8.74798, 1.62", "-9.1546, -26.2778, 9.46981, 1.69", "-9.30292, -26.9614, 9.80654, 1.47", "-9.64095, -28.1656, 10.3381, 1.33", "-9.8945, -28.8159, 10.6298, 1.18", "-10.2635, -29.5968, 10.9899, 0.88", "-11.057, -30.9374, 11.6126, 0.74", "-11.633, -31.7333, 11.9439, 1.55", "-12.2234, -32.4319, 12.2179, 1.92", "-13.3108, -33.546, 12.5926, 1.92", "-13.3556, -33.5865, 12.6042, 1.92", "-14.2153, -34.2554, 12.7873, 1.62", "-15.3559, -35.0376, 12.9563, 1.18", "-16.0664, -35.477, 13.0914, 1.47", "-16.6839, -35.8017, 13.2121, 1.47", "-17.9031, -36.4086, 13.4242, 0.88", "-19.0176, -36.9912, 13.6773, 1.18", "-19.6222, -37.3146, 13.846, 1.55", "-20.9124, -38.093, 14.2795, 1.4", "-21.8987, -38.8104, 14.6664, 2.21", "-23.0839, -39.9305, 15.2133, 1.18", "-24.0186, -41.1584, 15.7291, 0.96", "-24.0474, -41.2226, 15.7485, 0.96", "-24.3195, -42.3889, 16.0687, 0.74", "-24.4146, -43.5468, 16.3317, 0.66", "-24.4302, -44.4102, 16.578, 0.74", "-24.4296, -44.4898, 16.6046, 0.74", "-24.4851, -45.3813, 16.9441, 0.66", "-24.674, -46.6186, 17.5007, 1.4", "-24.8278, -47.1845, 17.786, 1.33", "-25.3647, -48.6945, 18.5552, 0.74", "-25.3889, -48.7563, 18.5865, 0.74", "-25.8513, -49.9868, 19.1685, 0.88", "-25.8759, -50.0606, 19.1986, 0.88", "-26.0815, -51.0391, 19.4779, 0.88", "-26.1664, -51.7024, 19.622, 1.11", "-26.1699, -51.7863, 19.6299, 1.11", "-26.1673, -52.5034, 19.6595, 1.11", "-26.1187, -53.5899, 19.5879, 0.81", "-26.1099, -54.7676, 19.5494, 0.96", "-26.111, -54.8414, 19.5483, 0.96", "-26.207, -55.8582, 19.5414, 1.18", "-26.3846, -56.8425, 19.5403, 0.81", "-26.7924, -58.2014, 19.6045, 0.59", "-27.5435, -59.8974, 19.7541, 0.59", "-27.575, -59.9509, 19.7604, 0.59", "-28.2567, -60.8952, 19.9737, 0.66", "-28.8333, -61.5742, 20.192, 1.11", "-29.6968, -62.5149, 20.5338, 1.33", "-30.1594, -63.0417, 20.7252, 0.88", "-30.7133, -63.7358, 20.9273, 0.88", "-31.5823, -64.9504, 21.2823, 1.18", "-32.0925, -65.8316, 21.5589, 0.52", "-32.4837, -66.739, 21.8426, 0.52", "-32.7085, -67.8974, 22.1612, 0.52", "-32.7007, -68.0119, 22.192, 0.52", "-32.5148, -68.6028, 22.3372, 0.52", "-32.0068, -69.6485, 22.5238, 0.52", "-31.6094, -70.3038, 22.6654, 0.52", "-31.4038, -70.6708, 22.7443, 0.52", "-31.2466, -71.4426, 22.8537, 0.52", "-31.3657, -71.8175, 22.8605, 1.25", "-31.6788, -72.3544, 22.8356, 1.25", "-31.9414, -72.7425, 22.8045, 1.25", "-32.6161, -73.718, 22.7214, 0.59", "-33.064, -74.3526, 22.6643, 0.88", "-33.3153, -74.7033, 22.631, 0.88", "-33.8717, -75.4676, 22.5548, 0.52", "-34.4501, -76.2739, 22.4756, 0.52", "-35.0395, -77.0958, 22.4145, 0.52", "-35.4839, -77.6971, 22.3906, 0.52", "-36.1247, -78.5641, 22.3785, 1.99", "-36.525, -79.0851, 22.3806, 2.65", "-36.7959, -79.419, 22.3865, 2.65", "-37.9055, -80.7273, 22.4181, 0.44", "-38.5356, -81.4597, 22.4379, 0.29", "-39.0177, -82.0364, 22.4604, 0.29", "-39.063, -82.0927, 22.4632, 0.29", "-39.797, -83.041, 22.5101, 0.29", "-40.291, -83.6975, 22.5315, 1.47", "-40.6223, -84.1895, 22.515, 1.99", "-46.9996, -91.5115, 25.9041, 1.99", "-52.629, -98.5531, 30.8172, 1.99", "-58.4352, -105.734, 35.3245, 1.99", "-63.9973, -112.136, 41.0433, 1.99", "-69.6289, -118.999, 46.1785, 1.99", "-75.8903, -126.145, 50.0846, 1.99", "-83.0405, -132.965, 52.8158, 1.99", "-91.1236, -138.946, 54.5463, 1.99", "-99.7736, -143.534, 57.1682, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.49629, -42.1525, -0.95489, 0.44", "4.62857, -57.1097, -0.95489, 0.44", "5.76086, -72.0669, -0.95489, 0.44" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "6.4088, -18.6019, -22.1552, 0.81", "7.45541, -18.4561, -22.6808, 0.81", "7.96311, -18.3696, -22.9601, 0.59", "8.00584, -18.3608, -22.9891, 0.59", "9.1224, -18.1325, -23.7483, 0.81", "10.3801, -17.8754, -24.6034, 1.03", "10.6837, -17.8133, -24.8098, 1.25", "11.6457, -17.4861, -25.5324, 1.99", "12.5056, -17.1419, -26.216, 1.92" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "6.4088, -18.6019, -22.1552, 0.88", "5.12149, -19.5096, -22.7913, 0.88", "4.43823, -20.1488, -23.3033, 0.52", "3.9876, -20.8411, -23.9002, 0.52", "3.9702, -20.8956, -23.945, 0.52", "3.82169, -21.7839, -24.5794, 0.66", "3.81476, -21.8455, -24.6179, 0.66", "3.90014, -23.0404, -25.2494, 0.59", "3.98376, -23.817, -25.5886, 0.44", "4.04322, -24.5425, -25.8542, 0.44", "4.04312, -25.5707, -26.1608, 1.4", "3.9867, -26.291, -26.3445, 2.14", "3.82644, -27.406, -26.615, 2.8", "3.72112, -27.8539, -26.7112, 2.87", "3.48064, -28.7553, -26.8504, 2.65", "3.27899, -29.4987, -26.938, 1.99", "3.05028, -30.4952, -26.9775, 1.03", "3.03643, -30.5674, -26.9747, 1.03", "2.90337, -31.742, -26.7547, 0.59", "2.82301, -33.4015, -26.2766, 0.59", "2.82289, -33.4526, -26.2576, 0.59", "2.83944, -34.5152, -25.8075, 0.59", "2.84, -34.6144, -25.7628, 0.59", "2.81441, -35.8607, -25.2562, 0.52", "2.74761, -36.6835, -24.9465, 1.25", "2.66946, -37.1385, -24.8149, 1.84", "2.52287, -37.7131, -24.6796, 1.99", "2.34753, -38.2108, -24.6023, 2.14", "2.11361, -38.7563, -24.483, 2.14", "1.48031, -39.9256, -24.1775, 1.11", "1.44452, -39.9864, -24.1571, 1.11", "1.10618, -40.5574, -23.9431, 0.66", "0.619351, -41.3558, -23.6214, 0.59", "-0.284674, -42.7884, -23.0081, 1.47", "-0.901873, -43.7338, -22.5876, 2.36", "-1.35621, -44.4122, -22.2931, 2.87", "-2.01366, -45.4023, -21.8418, 3.02" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.6548, -20.3416, 13.2624, 0.66", "12.1632, -22.1567, 13.7265, 0.66", "12.1546, -22.2189, 13.7499, 0.66", "12.1317, -23.4953, 14.3087, 0.88", "12.2027, -24.245, 14.6628, 1.11", "12.2135, -24.304, 14.6927, 1.11", "12.7819, -26.4027, 15.8641, 0.74", "13.1468, -27.2746, 16.4908, 0.88", "13.9535, -28.5139, 17.5073, 0.59", "14.5879, -29.144, 18.1276, 0.52", "15.0447, -29.4475, 18.5137, 0.81", "15.7397, -29.7582, 19.0371, 0.81", "15.8496, -29.7737, 19.1054, 0.81", "17.0069, -29.807, 19.8251, 0.66", "17.0636, -29.8086, 19.857, 0.66", "18.2059, -30.0194, 20.4595, 0.52", "18.2609, -30.0421, 20.4871, 0.52", "19.1717, -30.6103, 20.9156, 0.74", "19.9324, -31.1326, 21.2603, 0.74", "20.9957, -31.991, 21.7214, 0.66", "21.6639, -32.5718, 21.9788, 0.66", "22.6983, -33.599, 22.2906, 0.52", "23.2246, -34.178, 22.4439, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.6548, -20.3416, 13.2624, 0.66", "14.4137, -20.9629, 12.9771, 0.66", "15.3038, -21.1647, 12.7759, 0.66", "16.6252, -21.3356, 12.4441, 0.59", "16.6905, -21.3395, 12.4326, 0.59", "17.6461, -21.3748, 12.3338, 0.81", "18.4169, -21.3944, 12.2852, 0.66", "19.3956, -21.3892, 12.3263, 0.59", "19.8905, -21.4165, 12.4357, 0.59", "21.2524, -21.556, 12.9173, 0.59", "22.2094, -21.7416, 13.3084, 0.59", "22.2694, -21.7582, 13.3322, 0.59", "23.893, -22.3192, 13.9255, 0.59", "25.3185, -22.822, 14.4037, 1.11", "25.7714, -22.9623, 14.5268, 1.4", "27.0113, -23.1961, 14.7545, 0.81", "28.553, -23.2656, 14.9545, 0.74", "28.8204, -23.2444, 14.9762, 1.25", "29.8477, -23.0056, 14.9958, 0.81", "30.6687, -22.7745, 14.9885, 0.66", "32.2023, -22.3772, 14.992, 0.52", "32.9363, -22.2284, 14.9891, 0.81", "33.0602, -22.2117, 14.9848, 0.81", "34.1958, -22.1283, 14.9218, 1.11", "35.2133, -22.1756, 14.8279, 0.74", "36.4773, -22.3971, 14.6595, 0.37", "37.7216, -22.7964, 14.4239, 0.29", "38.5715, -23.1211, 14.2289, 0.29", "49.5727, -23.0215, 13.1127, 0.29", "60.3719, -20.9117, 14.1919, 0.29", "70.7856, -17.4073, 15.5962, 0.29", "80.1469, -12.3528, 18.8564, 0.29", "89.6261, -6.78265, 20.6576, 0.29", "99.4172, -1.73945, 22.1948, 0.29", "109.641, 2.56571, 22.2913, 0.29", "120.419, 4.99143, 22.7756, 0.29", "130.942, 8.3372, 21.9749, 0.29", "141.58, 10.0482, 19.5143, 0.29", "152.014, 13.6944, 18.7872, 0.29", "162.073, 18.3757, 18.3573, 0.29", "172.237, 22.8292, 18.492, 0.29", "182.616, 26.1787, 16.6004, 0.29", "193.016, 28.8235, 13.9284, 0.29", "203.671, 31.3629, 12.4039, 0.29", "214.211, 34.7026, 11.8518, 0.29", "224.045, 39.8966, 11.797, 0.29", "233.499, 45.7822, 11.3234, 0.29", "243.281, 50.8698, 9.92944, 0.29", "252.146, 57.4544, 8.2184, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-3.00326, 38.3552, 3.82382, 0.59", "-4.50271, 39.6931, 5.32232, 0.59", "-5.36967, 40.5756, 6.40904, 0.44", "-6.28469, 41.7085, 7.84647, 0.96", "-6.64472, 42.2822, 8.54402, 1.11", "-7.00195, 43.069, 9.45507, 0.81", "-7.17829, 43.606, 10.027, 0.59", "-7.48995, 45.445, 11.6733, 0.59", "-7.46864, 46.2484, 12.2889, 0.96", "-7.33906, 47.1016, 12.7898, 1.18", "-7.07875, 48.2123, 13.419, 0.59", "-6.82949, 49.041, 13.8622, 0.44", "-6.49045, 50.137, 14.3622, 1.33", "-6.35255, 50.7805, 14.5197, 1.92", "-6.26126, 51.3543, 14.6215, 2.06" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.00326, 38.3552, 3.82382, 0.81", "-6.64019, 39.6168, 2.09247, 0.81", "-7.49327, 39.9064, 1.9251, 0.66", "-8.2407, 40.1659, 1.95008, 0.88", "-8.3231, 40.1969, 1.96454, 0.88", "-9.13919, 40.5362, 2.22546, 0.88", "-10.0411, 40.9559, 2.5899, 0.66", "-10.7981, 41.4048, 3.1108, 0.66", "-11.3393, 41.7838, 3.4516, 1.03", "-11.9196, 42.2669, 3.7667, 1.25", "-12.6867, 43.0249, 4.07196, 0.66", "-13.3604, 43.837, 4.2255, 0.44", "-14.1207, 44.8824, 4.22233, 0.96", "-14.5604, 45.5333, 4.14944, 1.11", "-14.9879, 46.152, 4.04791, 1.11", "-15.6173, 47.0389, 3.90287, 0.96", "-16.2373, 47.862, 3.79606, 0.59", "-16.896, 48.6711, 3.76906, 0.59", "-17.5288, 49.3782, 3.84353, 0.59", "-18.4098, 50.3052, 4.09233, 1.18", "-19.1048, 51.0275, 4.38491, 1.47", "-19.9398, 51.9148, 4.83395, 1.25", "-20.401, 52.4437, 5.1184, 1.77", "-20.8723, 53.0457, 5.42389, 1.99", "-21.4695, 53.9383, 5.79092, 1.62", "-22.0109, 54.8993, 6.07472, 0.96", "-22.2278, 55.3547, 6.1543, 0.59", "-22.5323, 56.1863, 6.18243, 0.59", "-22.832, 57.184, 6.11334, 0.96", "-22.9805, 57.7598, 6.02495, 1.11", "-23.1095, 58.2358, 5.91159, 1.11", "-23.3207, 58.9244, 5.71314, 0.66", "-23.7765, 60.3382, 5.29477, 0.59", "-23.8046, 60.4225, 5.27178, 0.59", "-24.0357, 61.1216, 5.12481, 0.59", "-24.4409, 62.364, 4.89893, 0.52", "-24.749, 63.4034, 4.81141, 0.44", "-24.9585, 64.2152, 4.83313, 0.44", "-25.2187, 65.4106, 4.96963, 1.62", "-25.361, 66.1305, 5.05471, 1.99", "-25.493, 66.8745, 5.15025, 1.84", "-25.7753, 68.5367, 5.35344, 1.03", "-26.098, 70.331, 5.54732, 0.44", "-26.3325, 71.5098, 5.63278, 0.44", "-26.6111, 72.8084, 5.65029, 0.44", "-26.8435, 73.8429, 5.58723, 1.25", "-27.0619, 74.815, 5.4698, 1.84", "-27.1465, 75.2143, 5.39475, 2.06", "-27.2558, 75.7777, 5.2673, 1.69", "-27.454, 76.8833, 5.00105, 0.81", "-27.661, 78.1971, 4.66516, 0.66", "-27.8397, 79.4048, 4.33318, 1.84", "-27.9565, 80.2593, 4.10626, 2.14", "-28.1186, 81.3663, 3.80233, 1.77", "-28.1306, 81.4432, 3.78156, 1.77", "-28.3298, 82.7011, 3.45561, 0.59", "-28.4367, 83.2807, 3.2945, 0.37", "-28.629, 84.2375, 3.02543, 0.37", "-28.864, 85.4188, 2.72552, 0.29", "-29.0109, 86.2515, 2.55287, 0.81", "-29.0796, 86.6543, 2.47846, 1.03", "-29.2726, 87.7201, 2.28723, 0.96", "-29.3799, 88.3143, 2.17314, 0.66", "-29.5398, 89.2057, 1.99884, 0.44", "-29.6799, 90.0201, 1.83785, 0.44", "-29.8098, 90.8364, 1.68038, 0.44", "-29.959, 91.8561, 1.50038, 0.29", "-30.019, 92.343, 1.42556, 0.81", "-30.0581, 92.7667, 1.38544, 0.96", "-30.1808, 94.369, 1.31974, 0.29", "-30.2489, 95.4647, 1.32899, 1.11", "-30.2717, 95.8795, 1.35019, 1.77", "-30.3008, 96.3968, 1.3986, 1.77", "-30.5128, 98.6398, 1.66604, 0.29", "-30.6053, 99.4, 1.77104, 0.29", "-30.8048, 100.811, 1.99335, 2.06", "-30.9067, 101.434, 2.08672, 2.43", "-31.0258, 102.092, 2.17598, 2.5", "-31.44, 104.078, 2.40513, 0.52", "-31.6626, 104.982, 2.4758, 0.37", "-31.7865, 105.472, 2.51809, 1.11", "-31.9428, 106.035, 2.58192, 1.25", "-32.1102, 106.612, 2.65822, 0.74", "-32.3141, 107.317, 2.76249, 0.29", "-32.5484, 108.102, 2.89691, 0.29", "-32.738, 108.713, 3.00998, 0.37", "-33.0208, 109.698, 3.18081, 0.37", "-33.1932, 110.383, 3.28223, 0.29", "-33.3178, 110.968, 3.35179, 0.44", "-33.3329, 111.058, 3.35985, 0.44", "-33.4157, 111.641, 3.3766, 0.44", "-33.544, 112.659, 3.36108, 0.29", "-33.6851, 113.854, 3.30972, 1.47", "-33.7407, 114.282, 3.29062, 1.92", "-33.8003, 114.697, 3.27344, 1.92", "-34.1347, 116.612, 3.21464, 0.29", "-34.3418, 117.605, 3.19588, 0.66", "-34.5063, 118.279, 3.1926, 1.11", "-34.8334, 119.41, 3.18283, 1.11", "-35.1017, 120.207, 3.18181, 0.44", "-35.5824, 121.46, 3.19585, 0.29", "-35.7062, 121.736, 3.20588, 0.44", "-35.946, 122.209, 3.22693, 0.44", "-36.6318, 123.42, 3.25957, 0.29", "-37.1005, 124.188, 3.27286, 0.81", "-37.3803, 124.643, 3.2765, 1.03", "-37.649, 125.1, 3.27685, 0.96", "-37.862, 125.482, 3.27801, 0.96", "-38.5301, 126.81, 3.28312, 0.29", "-38.9479, 127.728, 3.29637, 0.88", "-39.0764, 128.067, 3.29151, 1.25", "-39.25, 128.606, 3.27518, 1.25", "-39.3901, 129.192, 3.24652, 0.88", "-39.5991, 130.453, 3.17885, 0.29", "-39.6077, 130.546, 3.17438, 0.29", "-39.7077, 131.762, 3.16104, 0.29", "-39.7155, 131.843, 3.163, 0.29", "-39.798, 132.566, 3.2012, 0.29", "-39.9707, 133.882, 3.30335, 1.84", "-40.0778, 134.551, 3.37423, 2.14", "-40.4474, 136.329, 3.60064, 0.37", "-40.6379, 137.048, 3.71068, 0.37", "-40.9934, 138.268, 3.93338, 0.29", "-41.0171, 138.343, 3.94899, 0.29", "-41.2641, 139.112, 4.11675, 0.29", "-41.5701, 140.059, 4.3163, 0.29", "-41.8362, 140.948, 4.47374, 0.22", "-42.1582, 142.132, 4.67283, 0.88", "-42.2868, 142.7, 4.75651, 1.18", "-42.4126, 143.465, 4.8607, 0.96", "-42.4933, 144.306, 4.9619, 0.52", "-42.5504, 145.728, 5.10684, 0.29", "-42.5514, 145.901, 5.12092, 0.29", "-42.5614, 146.76, 5.17386, 0.29", "-42.606, 147.403, 5.19316, 0.29", "-42.6274, 147.563, 5.19405, 0.29", "-42.833, 148.6, 5.18594, 0.29", "-43.0169, 149.246, 5.16715, 0.59", "-43.395, 150.279, 5.11866, 0.59", "-44.1053, 151.825, 5.00208, 0.37", "-44.5691, 152.691, 4.9228, 1.4", "-44.8802, 153.152, 4.84921, 1.99", "-45.4385, 153.816, 4.70497, 1.99", "-46.4177, 154.795, 4.44935, 0.44", "-47.1993, 155.454, 4.24577, 0.52", "-47.9124, 155.958, 4.08378, 0.81", "-49.7678, 157.114, 3.65529, 0.29", "-50.3921, 157.478, 3.52608, 0.29", "-50.4982, 157.536, 3.50435, 0.59", "-50.5661, 157.571, 3.49104, 0.59", "-51.1415, 157.879, 3.38772, 0.59", "-52.0963, 158.444, 3.22627, 0.29", "-52.8451, 159.008, 3.18002, 1.25", "-53.6064, 159.584, 3.0965, 1.69", "-53.9787, 159.863, 3.04972, 1.84" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.89974, -24.6983, 2.39829, 0.81", "-2.57155, -24.3539, -3.41733, 0.81", "-2.58637, -24.3523, -3.49689, 0.81", "-3.31859, -24.5546, -6.56913, 0.81", "-3.34006, -24.5658, -6.64644, 0.81", "-3.80019, -25.0062, -8.29628, 0.88", "-3.81887, -25.0423, -8.36715, 0.88", "-3.89778, -26.7157, -8.53721, 0.66", "-3.73775, -28.464, -8.55485, 0.88", "-3.68462, -28.7956, -8.53965, 0.88", "-2.89738, -31.7838, -8.33242, 0.88", "-2.40097, -33.058, -8.21545, 1.18", "-2.35789, -33.1459, -8.20768, 1.18", "-1.38517, -34.6651, -8.02292, 1.4", "-1.3285, -34.7443, -8.00895, 1.4", "-0.47043, -35.992, -7.74539, 1.69", "0.201017, -37.0766, -7.4303, 1.55", "0.877224, -38.3638, -6.96527, 1.4", "1.65862, -40.2333, -6.16843, 1.03", "2.35358, -42.3268, -5.11893, 0.81", "2.90551, -44.2274, -4.09135, 1.03", "3.44557, -46.4245, -2.8161, 1.33", "3.84194, -48.2686, -1.69428, 1.18", "4.26447, -50.5452, -0.259992, 0.88", "4.60365, -52.4676, 0.947925, 1.18", "4.83582, -53.6398, 1.69961, 1.33", "4.85675, -53.7205, 1.75218, 1.33", "5.2808, -54.9592, 2.51566, 1.18", "5.31231, -55.0369, 2.56512, 1.18", "5.76342, -56.0552, 3.2823, 0.96", "5.8276, -56.2121, 3.40356, 0.96", "6.51941, -58.0101, 4.88452, 0.66", "6.59469, -58.2107, 5.03797, 0.66", "7.20361, -59.8936, 6.16775, 0.88", "8.0178, -62.1585, 7.44273, 0.81", "8.06515, -62.3039, 7.51206, 0.81", "8.65843, -64.1388, 8.27068, 1.18", "9.16746, -65.8195, 8.88027, 1.77", "9.71127, -67.749, 9.52825, 1.77", "10.1587, -69.6755, 9.87391, 1.25", "10.6109, -72.2328, 10.0322, 0.96", "10.6291, -72.4156, 10.0225, 0.96", "10.6261, -75.731, 9.3175, 0.96", "10.6123, -75.9035, 9.25765, 0.96", "9.96676, -80.6411, 6.90903, 0.81", "9.95572, -80.7124, 6.86639, 0.81", "9.63596, -82.8921, 5.42446, 0.44", "9.38241, -84.7618, 4.17098, 0.44", "9.37551, -84.8297, 4.12283, 0.44", "9.36479, -86.2662, 3.31692, 0.88", "9.51417, -87.7437, 2.77659, 1.33", "9.70307, -88.7915, 2.41094, 2.21", "9.73021, -88.8808, 2.38016, 2.21", "10.4372, -90.7661, 1.64418, 1.99", "11.1909, -92.5983, 0.918742, 0.88", "11.2336, -92.6939, 0.879508, 0.88", "12.1233, -94.5657, 0.263409, 0.88", "13.0356, -96.4314, -0.0551056, 0.66", "13.9174, -98.2323, -0.118012, 0.59", "14.8872, -100.253, 0.145551, 0.59", "14.9219, -100.327, 0.165953, 0.59", "16.2755, -103.266, 1.28269, 0.52", "17.381, -105.695, 2.515, 0.96", "17.4103, -105.763, 2.55473, 0.96", "17.9158, -106.923, 3.27264, 0.81", "18.7876, -108.951, 4.42325, 0.74", "19.1495, -109.827, 4.80363, 1.11", "19.1913, -109.928, 4.82975, 1.11", "19.6086, -110.904, 4.98129, 1.11", "20.18, -112.174, 5.13883, 0.96", "20.8787, -113.61, 5.26208, 0.88", "21.7527, -115.291, 5.41429, 0.59", "22.6363, -116.857, 5.5944, 0.44", "22.748, -117.034, 5.61365, 0.44", "23.662, -118.251, 5.72042, 0.74", "24.519, -119.232, 5.78648, 1.33", "25.6745, -120.375, 5.83612, 1.47", "26.7427, -121.317, 5.85896, 1.25", "28.1612, -122.507, 5.80492, 0.74", "29.4973, -123.654, 5.70666, 1.33", "30.1064, -124.185, 5.65455, 1.47", "30.1885, -124.259, 5.6462, 1.47", "30.6972, -124.766, 5.58362, 1.62", "32.1162, -126.513, 5.48916, 0.88", "32.9311, -127.943, 5.55635, 0.66", "33.4794, -129.345, 5.69773, 1.03", "33.5031, -129.44, 5.7096, 1.03", "33.6458, -130.741, 5.88728, 0.81", "33.5664, -132.385, 6.11789, 0.44", "33.2439, -134.161, 6.37733, 1.18", "33.0625, -134.924, 6.46669, 1.62", "32.7425, -136.265, 6.59956, 0.88", "32.4311, -137.714, 6.73814, 0.52", "32.1517, -139.406, 6.92058, 0.52", "32.1455, -139.49, 6.93005, 0.52", "32.2737, -140.58, 7.11444, 0.52", "32.7037, -141.917, 7.44911, 0.88", "32.7451, -142.002, 7.47474, 0.88", "33.3662, -143.15, 7.85606, 1.11", "33.4028, -143.222, 7.87919, 1.11", "34.2038, -145.101, 8.41876, 0.52", "34.7505, -146.681, 8.73262, 0.37", "35.0765, -148.036, 8.84695, 0.37", "35.3402, -149.756, 8.85174, 1.11", "35.4335, -151.195, 8.74788, 1.62", "35.4285, -152.334, 8.60639, 1.92", "35.2391, -154.246, 8.25784, 1.25", "34.8533, -156.471, 7.82061, 0.29", "34.6403, -157.452, 7.62862, 0.81", "34.3789, -158.552, 7.42086, 1.03", "34.1474, -159.561, 7.27639, 1.11", "33.9008, -160.779, 7.18566, 0.52", "33.6463, -162.326, 7.19169, 0.37", "33.5154, -163.465, 7.27013, 1.47", "33.4328, -164.392, 7.35762, 2.06", "33.3422, -165.718, 7.50929, 1.47", "33.2442, -167.657, 7.75997, 0.52", "33.2109, -169.298, 7.99168, 0.52", "33.2022, -171.16, 8.26461, 0.88", "33.2041, -171.679, 8.33928, 1.25", "33.2124, -172.299, 8.4246, 1.55", "33.2484, -173.34, 8.55189, 1.03", "33.5181, -175.748, 8.79384, 0.44", "33.6851, -176.551, 8.85157, 0.96", "33.8796, -177.246, 8.86867, 0.96", "34.2998, -178.54, 8.88089, 0.81", "34.7607, -179.806, 8.81273, 0.37", "35.5595, -181.743, 8.59003, 0.29", "36.1392, -183.005, 8.36628, 0.29", "36.4718, -183.671, 8.22232, 1.03", "36.9026, -184.493, 8.02398, 1.33", "37.76, -186.177, 7.54545, 0.66", "38.3272, -187.417, 7.16814, 0.29", "38.3631, -187.518, 7.13286, 0.29", "38.6828, -188.536, 6.78662, 0.29", "39.1675, -190.094, 6.28115, 0.29", "39.5595, -191.311, 5.90211, 1.4", "39.8789, -192.293, 5.62341, 2.06", "40.7393, -194.963, 4.84891, 0.66", "41.2393, -196.485, 4.4192, 0.29", "41.2741, -196.589, 4.39112, 0.29", "41.5637, -197.29, 4.21802, 0.29", "41.6164, -197.389, 4.20498, 0.29", "42.05, -198.083, 4.19162, 0.81", "42.3708, -198.553, 4.25538, 1.11", "42.7653, -199.238, 4.35566, 1.33", "43.2785, -200.283, 4.50672, 0.74", "43.9417, -201.818, 4.7779, 0.29", "44.1091, -202.221, 4.85649, 0.52", "44.4277, -202.956, 5.00866, 0.59", "44.8794, -203.901, 5.19784, 0.29", "44.9295, -204.0, 5.2201, 0.29", "45.6455, -205.4, 5.5442, 0.29", "45.983, -206.024, 5.68199, 0.59", "46.5314, -207.046, 5.89413, 0.59", "47.3966, -208.716, 6.19114, 0.29", "47.8858, -209.781, 6.34472, 1.18", "48.239, -210.81, 6.4504, 1.77", "48.423, -211.569, 6.4991, 1.77", "48.7015, -213.128, 6.5755, 1.33", "48.8809, -214.519, 6.61931, 0.37", "49.0377, -215.78, 6.56561, 0.29", "49.2923, -217.552, 6.36933, 0.29", "49.3091, -217.648, 6.35402, 0.29", "49.5631, -218.772, 6.12954, 0.81", "49.7864, -219.419, 5.89363, 0.81", "50.659, -221.335, 4.9364, 0.29", "50.7035, -221.41, 4.8925, 0.29", "51.1903, -222.164, 4.40551, 1.11", "51.5571, -222.761, 4.01814, 1.4", "52.8221, -225.159, 2.38124, 0.29", "52.8794, -225.281, 2.29771, 0.29", "53.5056, -226.822, 1.30578, 0.29", "53.8236, -227.685, 0.764907, 1.4", "53.9895, -228.22, 0.445924, 1.4", "54.4865, -230.345, -0.69571, 0.29", "54.5002, -230.449, -0.736412, 0.29", "54.5707, -231.426, -1.09254, 0.29", "54.5702, -231.533, -1.12726, 0.29", "54.5813, -232.243, -1.2644, 0.66", "54.5968, -232.455, -1.28598, 0.66", "54.6991, -233.583, -1.30713, 0.29", "54.7695, -234.373, -1.3204, 1.62", "54.8207, -234.984, -1.32922, 1.92", "54.9798, -237.182, -1.35425, 0.29", "55.0809, -238.677, -1.36681, 0.29", "55.1488, -239.704, -1.37209, 0.88", "55.194, -240.426, -1.37278, 1.18", "55.2715, -241.771, -1.37931, 0.29", "55.3277, -243.018, -1.38785, 0.29", "55.3478, -243.955, -1.39774, 1.25", "55.3427, -244.582, -1.40671, 1.62", "55.3467, -245.32, -1.42047, 1.84", "55.3889, -248.028, -1.4869, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.89974, -24.6983, 2.39829, 2.14", "-5.0086, -26.9239, 2.96971, 2.14", "-6.72562, -28.1561, 3.32179, 1.84", "-8.15647, -29.2221, 3.65317, 1.84", "-10.1027, -30.6811, 4.09089, 1.92", "-11.5801, -31.7886, 4.42316, 2.21", "-13.3006, -33.0783, 4.81009, 2.43", "-14.9304, -34.3273, 5.32585, 2.5", "-17.3192, -36.1789, 5.97538, 2.58", "-18.632, -37.1895, 6.30522, 2.65" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "12.5056, -17.1419, -26.216, 0.52", "14.4828, -17.7575, -28.3115, 0.52", "16.1866, -18.2708, -29.9159, 2.14", "18.2136, -18.8833, -31.5591, 0.29", "18.9326, -19.1042, -32.1064, 1.03", "19.6309, -19.35, -32.6713, 1.62", "19.696, -19.3745, -32.7253, 1.62", "20.2891, -19.605, -33.2002, 1.33", "21.0311, -19.9714, -33.827, 0.74", "22.0606, -20.8095, -34.9912, 0.37", "22.9584, -21.6548, -36.228, 1.62", "22.9996, -21.7002, -36.2922, 1.62", "23.7371, -22.6267, -37.5171, 2.28", "24.0803, -23.1801, -38.1293, 1.47", "24.1093, -23.2422, -38.1872, 1.47", "24.7257, -24.9303, -39.4543, 0.29", "25.0986, -26.3019, -40.3866, 1.62", "25.2499, -27.2534, -40.9856, 1.99", "25.2097, -29.002, -42.0915, 0.66", "25.0728, -29.9704, -42.8183, 0.52", "24.9558, -30.5545, -43.2808, 1.55", "24.7046, -31.7412, -44.3492, 2.43", "24.5753, -32.6698, -45.2762, 1.77", "24.4537, -34.6369, -47.4054, 0.59", "24.6153, -36.4962, -49.6975, 1.92", "24.7574, -37.1148, -50.4632, 2.21", "25.5361, -39.1285, -52.8684, 0.81", "26.0718, -40.0626, -53.9045, 0.59", "26.1203, -40.1227, -53.9708, 0.59", "27.1821, -41.2006, -55.0526, 0.37", "28.0853, -42.0903, -55.8674, 0.29", "28.954, -42.9309, -56.6389, 1.84", "29.4317, -43.3885, -57.0289, 2.21", "31.4439, -45.3151, -58.7528, 0.52", "32.2575, -46.1021, -59.452, 0.44", "33.2944, -47.1443, -60.3513, 2.95" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "12.5056, -17.1419, -26.216, 0.37", "13.2816, -16.0157, -26.8978, 0.37", "13.8256, -15.3966, -27.4709, 1.18", "14.2826, -15.0173, -27.9854, 1.18", "14.7229, -14.7032, -28.4662, 0.59", "15.2698, -14.3398, -29.0575, 0.37", "16.608, -13.4529, -30.5017, 1.18", "17.5874, -12.9173, -31.5803, 2.14", "18.7186, -12.2926, -32.9587, 0.37", "19.1971, -12.0199, -33.6107, 0.29", "19.2274, -12.001, -33.6579, 0.29", "19.5648, -11.773, -34.2424, 0.29", "19.5972, -11.7498, -34.2989, 0.29", "20.9392, -10.8751, -36.5928, 1.99", "21.0, -10.8429, -36.6889, 1.99", "22.3201, -10.28, -38.6639, 0.66", "23.0246, -10.003, -39.6333, 2.36", "23.4181, -9.86293, -40.1308, 2.95", "24.8998, -9.29928, -41.7728, 0.37", "25.6093, -8.99454, -42.4302, 0.37", "26.2528, -8.65053, -43.0664, 0.37", "26.8544, -8.25414, -43.7664, 1.33", "27.0295, -8.11462, -44.0059, 1.62", "27.7329, -7.4647, -45.119, 0.15", "28.5767, -6.57044, -46.6255, 2.5", "29.58, -5.47145, -48.569, 1.84", "30.6229, -4.39528, -50.7254, 0.81", "30.8987, -4.14537, -51.3076, 0.74", "30.9311, -4.11837, -51.3743, 0.74", "31.3275, -3.83312, -52.1462, 0.96", "31.361, -3.81145, -52.2025, 0.96", "32.5988, -3.03836, -53.8651, 0.59", "33.3458, -2.59104, -54.7626, 0.22", "34.2299, -2.06127, -55.7798, 2.21", "34.6439, -1.81053, -56.2298, 2.36", "36.3824, -0.75122, -58.0007, 0.44", "37.048, -0.347858, -58.608, 0.29", "37.1054, -0.314252, -58.651, 0.29", "37.5556, -0.0495743, -58.9598, 0.29", "37.9952, 0.169426, -59.2276, 0.29", "38.0521, 0.195006, -59.2588, 0.29", "39.1656, 0.512939, -59.6914, 1.4", "39.6262, 0.600939, -59.8681, 1.77", "39.9544, 0.649369, -59.991, 1.92", "41.4612, 0.823469, -60.538, 0.44", "41.5258, 0.833099, -60.5613, 0.44", "42.6147, 1.06526, -60.9565, 0.44", "43.2845, 1.28056, -61.2409, 0.29", "43.344, 1.3034, -61.2691, 0.29", "43.8373, 1.49454, -61.5112, 0.22", "44.5694, 1.73388, -61.8966, 0.88", "45.0945, 1.79199, -62.2344, 1.11", "46.3029, 1.60682, -63.1164, 0.22", "46.7303, 1.43582, -63.4256, 0.22", "47.3245, 1.08631, -63.8676, 1.18", "48.0735, 0.560969, -64.4256, 1.11", "49.0776, -0.186742, -65.1544, 0.22", "49.6738, -0.600872, -65.5944, 0.74", "50.0828, -0.855975, -65.8937, 0.74", "51.1352, -1.33131, -66.7024, 0.22", "51.5272, -1.44727, -67.005, 0.22", "52.0818, -1.53223, -67.4124, 0.81", "53.0981, -1.56402, -68.1573, 0.29", "53.5038, -1.5879, -68.5456, 0.29", "53.5499, -1.59242, -68.5962, 0.29", "54.0765, -1.66511, -69.2113, 0.88", "54.4376, -1.76231, -69.6693, 0.88", "54.4742, -1.77237, -69.7144, 0.88", "55.6931, -2.01503, -71.0699, 0.22", "55.7657, -2.01127, -71.1537, 0.22", "56.124, -1.97363, -71.5304, 0.22", "56.1809, -1.96193, -71.5833, 0.22", "56.9113, -1.78824, -72.1581, 1.03", "57.3232, -1.69506, -72.4289, 1.62", "59.2911, -1.29505, -73.4857, 0.22", "60.0666, -1.17458, -73.869, 0.22", "60.9815, -1.08924, -74.2866, 0.22", "61.65, -1.04993, -74.5742, 1.33", "62.2574, -1.04034, -74.8273, 1.33", "63.4044, -1.04205, -75.276, 0.29", "64.2979, -1.07741, -75.5677, 0.29", "65.2531, -1.13983, -75.9283, 0.88", "65.3161, -1.14733, -75.9548, 0.88", "66.751, -1.33923, -76.6059, 0.29", "66.8122, -1.34811, -76.6358, 0.29", "67.4947, -1.46721, -76.9785, 0.29", "68.4333, -1.64744, -77.4683, 1.18", "68.4938, -1.65964, -77.4988, 1.18", "68.7992, -1.73054, -77.6891, 1.33", "69.7032, -1.96392, -78.3112, 0.22", "70.1419, -2.07546, -78.6348, 0.22", "70.8354, -2.22392, -79.1715, 1.25", "71.0586, -2.2663, -79.344, 1.25", "73.0707, -2.48814, -80.8409, 0.29", "73.5349, -2.51087, -81.1832, 0.29", "73.5923, -2.50958, -81.2221, 0.29", "74.4822, -2.41493, -81.753, 1.03", "74.8691, -2.34372, -81.9473, 1.25", "76.2061, -1.99078, -82.5712, 0.22", "76.2675, -1.96877, -82.5958, 0.22", "77.2664, -1.57092, -83.0315, 0.22", "78.0563, -1.24919, -83.3947, 0.74", "78.4045, -1.10762, -83.596, 1.03", "80.1251, -0.407898, -84.743, 0.15", "80.7889, -0.175453, -85.2329, 1.47", "80.8347, -0.162373, -85.2678, 1.47", "81.3523, -0.0452523, -85.6851, 1.69", "83.3027, 0.172384, -87.2469, 0.22", "83.3576, 0.173498, -87.2881, 0.22", "84.1458, 0.146843, -87.7771, 0.22", "84.7817, 0.123269, -88.1282, 0.74", "84.9294, 0.124822, -88.1957, 0.74", "86.2198, 0.206649, -88.6764, 0.22", "86.6336, 0.259579, -88.7891, 0.52", "88.0805, 0.527459, -89.1789, 0.22", "88.4265, 0.613059, -89.2718, 0.52", "89.9725, 1.05536, -89.6673, 0.22", "90.3056, 1.15947, -89.7399, 0.44", "91.138, 1.42145, -89.8046, 0.22", "91.239, 1.44796, -89.8022, 0.29", "91.3067, 1.4512, -89.7872, 0.29", "91.952, 1.29435, -89.4806, 0.22", "92.59, 0.988929, -89.0484, 1.03", "93.8134, 0.243881, -88.1419, 0.37", "94.2041, -0.0314063, -87.827, 0.22", "95.3825, -0.937548, -86.835, 0.22", "96.2529, -1.6919, -86.0553, 0.59", "96.2925, -1.73396, -86.0157, 0.59", "96.4644, -1.95643, -85.8287, 0.59" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-2.01366, -45.4023, -21.8418, 0.66", "-1.85025, -48.1501, -22.3672, 0.66", "-1.84616, -48.2251, -22.3822, 0.66", "-1.81307, -49.2194, -22.5827, 0.88", "-1.81704, -50.1495, -22.7647, 0.96", "-1.88352, -51.6836, -23.1816, 0.52", "-1.95615, -52.7019, -23.5245, 0.74", "-1.96299, -52.7634, -23.5506, 0.74", "-2.10648, -53.7151, -23.9918, 0.59", "-2.38648, -55.1309, -24.7376, 0.52", "-2.7944, -56.8994, -25.7345, 1.4", "-3.04082, -57.9185, -26.3094, 1.92", "-3.12786, -58.3354, -26.5499, 2.14", "-3.19727, -58.746, -26.7872, 1.62", "-3.46445, -60.7439, -27.9378, 0.59", "-3.58951, -62.139, -28.7373, 0.59", "-3.66143, -63.2628, -29.3552, 0.59", "-3.7244, -64.387, -30.0004, 0.44", "-3.76279, -65.2039, -30.4885, 1.03", "-3.77777, -65.5655, -30.7066, 1.33", "-3.80804, -66.6855, -31.3651, 0.52", "-3.8292, -67.7924, -31.977, 0.29", "-3.84102, -68.5981, -32.3693, 1.11", "-3.85456, -69.0871, -32.5743, 1.69", "-3.8862, -69.8989, -32.8821, 1.84", "-3.95921, -70.9915, -33.2608, 0.59", "-4.07216, -72.1098, -33.5961, 0.37", "-4.23078, -73.4425, -33.9657, 0.29", "-4.24028, -73.5064, -33.9849, 0.29", "-4.4547, -74.7947, -34.458, 0.29", "-4.64156, -75.6951, -34.8399, 0.29", "-4.84847, -76.5163, -35.2277, 1.62", "-4.97063, -77.0103, -35.4996, 2.14", "-5.12885, -77.7391, -35.9283, 1.84", "-5.34669, -79.2489, -36.8041, 0.37", "-5.38094, -79.8219, -37.1296, 0.37", "-5.38284, -79.8814, -37.1616, 0.37", "-5.48332, -81.1615, -37.7996, 0.29", "-5.55913, -81.6656, -38.0263, 0.29", "-5.68173, -82.2245, -38.2398, 0.59", "-5.84353, -82.7358, -38.3994, 0.59", "-6.28944, -83.9607, -38.7552, 0.37", "-6.77289, -85.0888, -39.0591, 1.69", "-7.05156, -85.6669, -39.1971, 2.28", "-7.17497, -85.918, -39.269, 2.43", "-7.7621, -87.1017, -39.649, 0.59", "-8.32808, -88.262, -40.0487, 0.37", "-8.6243, -88.8931, -40.2758, 0.37", "-8.83098, -89.3554, -40.4412, 0.59", "-9.35111, -90.5089, -40.8449, 0.52", "-9.75679, -91.3805, -41.1412, 0.29", "-10.0703, -92.0095, -41.3611, 0.81", "-10.3639, -92.5376, -41.5575, 0.81", "-10.7057, -93.1097, -41.7785, 0.44", "-11.475, -94.4105, -42.3043, 0.29", "-11.7726, -94.9463, -42.5145, 0.96", "-12.1229, -95.6438, -42.8025, 0.96", "-12.7025, -96.8298, -43.3679, 0.29", "-12.7331, -96.8925, -43.3998, 0.29", "-13.3752, -98.2396, -44.1018, 0.29", "-13.6321, -98.8129, -44.3948, 1.55", "-13.9346, -99.5145, -44.7357, 1.92", "-14.8675, -101.816, -45.8263, 0.29", "-15.1581, -102.544, -46.1615, 0.81", "-15.3919, -103.149, -46.4312, 0.96", "-15.6637, -103.889, -46.7401, 0.74", "-15.7076, -104.032, -46.7956, 0.74", "-16.0013, -105.368, -47.2573, 0.44", "-16.1066, -106.291, -47.5736, 0.44", "-16.1806, -107.076, -47.882, 0.29", "-16.2452, -107.972, -48.2573, 0.74", "-16.2801, -108.587, -48.5148, 0.96", "-16.2822, -108.649, -48.5419, 0.96", "-16.2866, -110.486, -49.3623, 0.15", "-16.2814, -111.057, -49.6326, 1.03", "-16.2758, -111.68, -49.9287, 1.03", "-16.2776, -113.234, -50.6285, 0.29", "-16.2818, -114.626, -51.2843, 0.29", "-16.2894, -115.124, -51.5138, 1.03", "-16.2964, -115.576, -51.7235, 1.25", "-16.3894, -117.033, -52.4564, 0.22", "-16.5135, -118.08, -53.0053, 0.22", "-16.7222, -119.375, -53.6947, 1.11", "-16.8762, -120.171, -54.1107, 1.11", "-17.2644, -122.001, -55.0764, 0.22", "-17.4821, -122.989, -55.5983, 0.22", "-17.6304, -123.604, -55.9129, 0.74", "-17.7111, -123.938, -56.068, 0.74", "-18.0033, -125.057, -56.4824, 0.22", "-18.1435, -125.559, -56.6568, 0.37", "-18.1676, -125.63, -56.678, 0.37", "-18.3887, -126.349, -56.8866, 0.22", "-18.521, -126.763, -56.9847, 1.11", "-18.667, -127.179, -57.0554, 1.4", "-18.8276, -127.588, -57.105, 1.03", "-19.417, -129.0, -57.2539, 0.29", "-20.0806, -130.408, -57.3829, 0.29", "-20.6732, -131.519, -57.4764, 0.29", "-21.1779, -132.396, -57.5455, 1.4", "-21.589, -133.067, -57.5919, 1.62", "-22.3326, -134.197, -57.6556, 0.29", "-23.2029, -135.409, -57.7127, 0.22", "-23.758, -136.111, -57.7612, 0.22", "-24.1668, -136.601, -57.8176, 0.81", "-24.5702, -137.084, -57.8849, 1.18", "-24.7938, -137.363, -57.9232, 1.18", "-25.5654, -138.402, -58.0473, 0.22", "-25.6075, -138.467, -58.0544, 0.22", "-26.308, -139.64, -58.1698, 0.22", "-26.3784, -139.766, -58.1814, 0.22", "-26.901, -140.834, -58.3049, 0.22", "-27.2089, -141.559, -58.4002, 0.96", "-27.4251, -142.15, -58.4839, 1.4", "-27.5725, -142.627, -58.5523, 1.4", "-27.7323, -143.249, -58.6427, 0.88", "-28.0706, -144.595, -58.8508, 0.22", "-28.3417, -145.604, -59.0225, 0.59", "-28.4401, -145.939, -59.0978, 0.74", "-28.8063, -147.088, -59.3928, 0.22", "-28.942, -147.475, -59.5035, 0.44", "-29.0659, -147.794, -59.6035, 0.44", "-29.5231, -148.835, -59.9395, 0.22", "-29.9148, -149.675, -60.2211, 1.03", "-30.1092, -150.063, -60.3517, 1.33", "-30.1693, -150.179, -60.3882, 1.33", "-30.4125, -150.663, -60.5247, 1.33", "-31.0374, -151.967, -60.8446, 0.22", "-31.2984, -152.548, -60.937, 0.59", "-31.5039, -153.015, -60.981, 0.59", "-32.0639, -154.314, -61.0797, 0.22", "-32.3399, -154.961, -61.121, 1.03", "-32.5535, -155.477, -61.1486, 1.33", "-33.2638, -157.22, -61.2266, 0.15", "-33.7713, -158.442, -61.2798, 0.15", "-34.0448, -159.091, -61.31, 0.44", "-34.218, -159.478, -61.3311, 0.44", "-34.6626, -160.431, -61.399, 0.22", "-34.8951, -160.923, -61.4506, 0.52", "-35.0468, -161.247, -61.5021, 0.52", "-35.3845, -161.994, -61.626, 0.22", "-35.5865, -162.457, -61.7015, 0.52", "-35.6673, -162.657, -61.733, 0.52", "-36.1721, -163.968, -61.935, 0.15", "-36.2492, -164.2, -61.9686, 0.37", "-36.3847, -164.681, -62.0341, 0.15", "-36.4025, -164.756, -62.0437, 0.15", "-36.4695, -165.128, -62.0878, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-2.01366, -45.4023, -21.8418, 0.74", "-2.25997, -47.4176, -21.8486, 0.74", "-2.35071, -48.4071, -21.8716, 0.52", "-2.47607, -49.6945, -21.8569, 0.59", "-2.564, -50.4472, -21.8343, 0.88", "-2.65863, -51.114, -21.8072, 0.88", "-2.82273, -52.0204, -21.7666, 0.44", "-2.97469, -52.7059, -21.7052, 0.37", "-3.32476, -53.8352, -21.5232, 0.37", "-3.48201, -54.1954, -21.4433, 0.66", "-3.7623, -54.6977, -21.3237, 0.74", "-4.41318, -55.6423, -21.08, 0.66", "-5.30325, -56.7683, -20.7807, 1.99", "-5.70862, -57.2523, -20.6625, 2.58", "-6.21471, -57.8842, -20.5478, 1.92", "-6.8279, -58.7432, -20.4262, 0.37", "-7.28968, -59.5099, -20.3469, 0.29", "-7.59038, -60.1091, -20.318, 0.44", "-7.81944, -60.6383, -20.3151, 0.88", "-8.25654, -61.7302, -20.2944, 1.11", "-8.534, -62.4697, -20.273, 0.59", "-8.93272, -63.5205, -20.2346, 0.59", "-9.30568, -64.4945, -20.186, 0.81", "-9.73418, -65.5546, -20.0919, 1.18", "-9.8703, -65.8773, -20.0523, 1.18", "-10.1555, -66.5336, -19.9333, 0.81", "-10.5587, -67.5323, -19.7211, 0.44", "-10.9121, -68.6281, -19.4376, 0.44", "-11.0686, -69.3317, -19.2263, 1.11", "-11.1266, -69.8043, -19.0792, 1.47", "-11.1796, -70.6922, -18.8107, 1.47", "-11.1906, -71.4202, -18.6012, 0.88", "-11.1678, -72.5332, -18.3108, 0.52", "-11.167, -72.5896, -18.299, 0.52", "-11.1532, -73.7782, -18.1165, 0.37", "-11.1501, -75.2905, -17.9571, 1.18", "-11.1576, -75.9957, -17.9186, 2.06", "-11.191, -76.7371, -17.9062, 2.36", "-11.2848, -77.6534, -17.9284, 1.99", "-11.4725, -78.6857, -17.9685, 1.47", "-11.7855, -79.7733, -18.0277, 0.96", "-12.1888, -80.8517, -18.097, 0.66", "-12.5664, -81.7493, -18.1673, 0.52", "-12.9971, -82.7026, -18.2529, 0.52", "-13.5318, -83.8813, -18.3694, 0.66", "-13.9472, -84.8327, -18.4735, 0.66", "-14.3504, -85.9595, -18.6434, 0.66", "-14.5628, -86.8606, -18.8279, 0.66", "-14.6384, -87.4695, -18.9747, 0.81", "-14.6581, -88.0976, -19.1552, 0.96", "-14.6484, -88.6602, -19.3386, 0.96", "-14.6201, -89.7939, -19.6805, 0.37", "-14.6437, -90.6379, -19.8875, 0.37", "-14.7457, -91.6953, -20.0371, 0.37", "-14.7658, -91.8192, -20.0347, 0.37", "-14.9848, -92.7849, -19.9023, 0.37", "-15.2611, -93.8191, -19.655, 1.62", "-15.5485, -94.8861, -19.3248, 2.21", "-15.7516, -95.7724, -18.9947, 2.28", "-16.1217, -97.3922, -18.34, 0.96", "-16.2874, -98.0166, -18.0886, 0.66", "-16.6211, -99.1434, -17.6305, 0.59", "-16.9586, -100.046, -17.2294, 0.44", "-17.6449, -101.511, -16.4497, 0.44", "-18.1105, -102.341, -15.96, 1.03", "-18.5638, -103.019, -15.5006, 1.55", "-18.5921, -103.058, -15.4707, 1.55", "-19.6994, -104.431, -14.3327, 0.66", "-20.2357, -105.163, -13.7177, 0.44", "-20.2651, -105.21, -13.6814, 0.37", "-20.6834, -106.069, -13.0486, 1.33", "-20.8985, -106.543, -12.7027, 1.69", "-21.1706, -107.122, -12.3109, 1.69", "-21.9498, -108.621, -11.2493, 0.44", "-22.326, -109.167, -10.7882, 0.44", "-22.3566, -109.202, -10.7559, 0.44", "-23.1214, -109.87, -10.0586, 1.18", "-23.4889, -110.145, -9.76809, 1.55", "-24.7413, -111.053, -8.82784, 1.33", "-25.4926, -111.577, -8.31556, 0.88", "-26.093, -112.075, -7.89222, 0.59", "-26.4838, -112.45, -7.6077, 0.66", "-27.0733, -113.11, -7.18291, 0.44", "-28.243, -114.57, -6.35931, 0.37", "-28.28, -114.62, -6.33549, 0.37", "-29.3166, -116.097, -5.62255, 0.29", "-29.7923, -116.798, -5.30149, 0.96", "-30.2457, -117.53, -5.00013, 1.33", "-30.5663, -118.08, -4.79962, 1.62", "-30.9099, -118.781, -4.58562, 1.77", "-31.451, -120.15, -4.1924, 0.59", "-31.8325, -121.456, -3.85982, 0.52", "-32.1269, -122.678, -3.5677, 0.52", "-32.1386, -122.733, -3.55471, 0.52", "-32.426, -124.145, -3.24964, 0.29", "-32.5797, -124.959, -3.07685, 0.29", "-32.7252, -125.785, -2.90868, 0.88", "-32.8139, -126.274, -2.81038, 1.11", "-32.9428, -127.079, -2.64471, 1.11", "-33.1571, -128.681, -2.30144, 0.29", "-33.2713, -129.959, -2.01104, 0.29", "-33.308, -130.665, -1.8611, 1.33", "-33.325, -131.135, -1.77282, 1.77", "-33.3628, -132.538, -1.54875, 1.62", "-33.365, -132.596, -1.54187, 1.62", "-33.4923, -134.828, -1.39303, 0.29", "-33.6285, -136.336, -1.3782, 0.29", "-33.7367, -137.265, -1.37851, 0.44", "-33.7942, -137.686, -1.38424, 0.44", "-33.9815, -138.807, -1.42713, 0.29", "-34.1046, -139.524, -1.45015, 1.25", "-34.2341, -140.267, -1.46842, 1.99", "-34.4052, -141.375, -1.45215, 1.55", "-34.5695, -142.426, -1.43854, 0.59", "-34.705, -143.208, -1.43226, 0.37", "-34.8473, -143.922, -1.4159, 0.59", "-35.0264, -144.674, -1.39334, 0.59", "-35.208, -145.427, -1.37581, 1.11", "-35.3415, -145.981, -1.37289, 1.11", "-35.4449, -146.53, -1.32502, 1.11", "-35.6209, -147.734, -1.05726, 0.37", "-35.6281, -147.797, -1.03535, 0.37", "-35.7489, -148.786, -0.57563, 0.29", "-35.7644, -148.878, -0.520968, 0.29", "-36.1228, -150.105, 0.388837, 0.29", "-36.5588, -150.853, 1.04925, 0.29", "-36.5984, -150.881, 1.07709, 0.29", "-37.1281, -151.137, 1.31778, 1.03", "-37.7507, -151.387, 1.50582, 1.55", "-38.5097, -151.712, 1.63767, 0.37", "-39.2996, -152.127, 1.75436, 0.37", "-40.0912, -152.685, 1.89195, 0.37", "-40.3793, -152.939, 1.9577, 0.96", "-40.9667, -153.522, 2.11606, 1.25", "-41.4324, -154.009, 2.23693, 1.47", "-42.6422, -155.306, 2.5329, 0.44", "-43.2808, -155.999, 2.67709, 0.81", "-44.1813, -156.988, 2.85662, 0.59", "-44.8557, -157.724, 2.96632, 0.88", "-45.5039, -158.437, 3.04853, 0.59", "-46.1296, -159.178, 3.10482, 0.44", "-46.7265, -159.981, 3.11338, 0.88", "-47.0997, -160.577, 3.12648, 1.47", "-47.326, -161.013, 3.13993, 1.47", "-47.647, -161.725, 3.15482, 0.88", "-48.0857, -162.773, 3.14668, 0.59", "-48.5845, -163.939, 3.0767, 0.59", "-48.752, -164.311, 3.03842, 1.18", "-49.0284, -164.87, 2.95832, 1.47", "-49.5311, -165.796, 2.80271, 0.88", "-50.185, -166.864, 2.59214, 0.52", "-50.7828, -167.747, 2.44635, 0.52", "-50.8217, -167.802, 2.44648, 0.52", "-51.137, -168.287, 2.56067, 0.52", "-51.4209, -168.749, 2.74054, 1.03", "-51.6862, -169.228, 2.95373, 1.03", "-52.3715, -170.549, 3.58635, 0.66", "-53.0368, -171.959, 4.21494, 1.84", "-53.7305, -173.562, 4.84529, 0.44", "-54.1189, -174.542, 5.13076, 0.44", "-54.6385, -175.939, 5.40454, 0.37", "-54.6581, -175.994, 5.40869, 0.37", "-54.9548, -176.789, 5.32898, 0.88", "-55.1319, -177.233, 5.21393, 0.88", "-55.7335, -178.67, 4.75595, 0.44", "-55.7591, -178.732, 4.74096, 0.44", "-56.1501, -179.678, 4.65827, 1.33", "-56.4701, -180.464, 4.62067, 1.77", "-56.4896, -180.518, 4.618, 1.77", "-56.7579, -181.49, 4.59332, 2.28", "-56.9847, -182.594, 4.65705, 0.81", "-57.1988, -183.835, 4.7514, 0.44", "-57.3678, -185.075, 4.85071, 0.44", "-57.5595, -186.661, 4.99462, 0.44", "-57.6918, -187.824, 5.10244, 0.74", "-57.8441, -189.332, 5.22654, 0.74", "-57.8832, -189.899, 5.27402, 1.25", "-57.9008, -190.552, 5.31557, 1.4", "-57.9078, -190.898, 5.34481, 1.4", "-57.9592, -191.895, 5.38883, 1.03", "-58.0362, -192.907, 5.35191, 0.74", "-58.1218, -193.918, 5.26322, 0.59", "-58.2684, -195.171, 5.15093, 0.59", "-58.4825, -196.458, 5.03878, 0.37", "-58.6518, -197.258, 4.96515, 0.96", "-58.8767, -198.076, 4.88802, 1.33", "-59.2158, -199.009, 4.82851, 0.81", "-59.7951, -200.249, 4.79075, 0.74", "-60.3288, -201.227, 4.78988, 0.66", "-60.6913, -201.853, 4.80228, 1.11", "-61.2817, -202.798, 4.85142, 0.66", "-61.9457, -203.746, 4.9326, 0.52", "-62.3804, -204.289, 4.99831, 0.44", "-62.9856, -204.957, 5.15049, 0.44", "-63.6103, -205.644, 5.41778, 0.44", "-64.0409, -206.118, 5.65879, 1.25", "-64.4101, -206.563, 5.95926, 1.25", "-64.8462, -207.231, 6.50671, 0.88", "-65.3753, -208.25, 7.46333, 0.52", "-65.8382, -209.352, 8.59941, 0.81", "-65.852, -209.395, 8.64659, 0.81", "-66.0937, -210.382, 9.69304, 0.44", "-66.3023, -211.319, 10.6083, 0.52", "-66.4217, -211.886, 11.0921, 0.52", "-66.5056, -212.379, 11.4227, 0.81", "-66.5152, -212.428, 11.4496, 0.81", "-66.6582, -213.34, 11.8645, 0.81", "-66.8244, -214.385, 12.2067, 0.44", "-66.9537, -215.675, 12.5645, 0.29", "-66.6327, -216.712, 12.861, 0.29", "-66.5724, -216.735, 12.8657, 0.29", "-65.6492, -216.929, 12.7423, 0.29", "-65.4421, -216.958, 12.6905, 0.29", "-64.2069, -217.145, 12.2015, 0.29", "-64.1525, -217.156, 12.1692, 0.29", "-63.6645, -217.442, 11.7057, 0.29", "-63.0317, -218.534, 10.5516, 0.29", "-63.0338, -218.633, 10.4775, 0.29", "-63.1984, -219.789, 9.69603, 0.29", "-63.4099, -220.576, 9.2212, 0.29", "-63.804, -221.69, 8.62948, 0.29", "-64.058, -222.224, 8.40461, 0.52", "-64.3444, -222.677, 8.31187, 0.52", "-66.5424, -231.81, 10.3778, 0.52" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "23.2246, -34.178, 22.4439, 0.29", "23.8627, -34.5805, 22.6709, 0.29", "25.0124, -35.3056, 23.0798, 0.37", "25.0674, -35.3403, 23.0994, 0.37", "25.9425, -35.8922, 23.4107, 0.29", "26.7582, -36.4067, 23.7008, 0.22", "26.8215, -36.4466, 23.7233, 0.22", "35.1048, -41.2616, 25.2477, 0.22", "43.1197, -46.1982, 27.5713, 0.22", "51.4343, -49.8089, 30.7976, 0.22", "59.7966, -54.3164, 32.6646, 0.22", "68.2655, -59.0772, 32.8094, 0.22", "76.7969, -63.5943, 33.7039, 0.22", "85.455, -67.9409, 34.0171, 0.22", "93.6233, -72.965, 35.5535, 0.22", "100.658, -79.1142, 38.3357, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "23.2246, -34.178, 22.4439, 0.37", "24.1084, -33.9869, 22.7809, 0.37", "24.9328, -33.8085, 23.0952, 1.03", "25.4378, -33.6993, 23.2877, 1.03", "25.9195, -33.5951, 23.4713, 0.88", "25.9844, -33.581, 23.4961, 0.88" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.26126, 51.3543, 14.6215, 0.81", "-6.53361, 52.3078, 14.2732, 0.81", "-6.78072, 53.0659, 14.0531, 0.66", "-7.18178, 54.2166, 13.7822, 0.59", "-7.38434, 54.7912, 13.6603, 0.44", "-7.62146, 55.5021, 13.5308, 0.29", "-7.81258, 56.1148, 13.4081, 0.88", "-7.97266, 56.6051, 13.3129, 1.11", "-8.11096, 57.0734, 13.23, 1.18", "-8.30832, 57.7998, 13.0853, 1.03", "-8.53463, 58.6929, 12.8377, 1.03", "-8.76765, 59.5753, 12.5499, 0.88", "-8.78262, 59.6299, 12.5291, 0.88", "-8.94652, 60.1431, 12.304, 0.88", "-9.2791, 61.0286, 11.8783, 0.74", "-9.56041, 61.6308, 11.5726, 0.74", "-9.82219, 62.1092, 11.3175, 1.03", "-9.8536, 62.1639, 11.2911, 1.03", "-10.2133, 62.7931, 10.9965, 1.03", "-10.2401, 62.8413, 10.9734, 1.03", "-10.4623, 63.348, 10.7656, 1.03", "-10.6424, 63.992, 10.5114, 1.03", "-10.694, 64.3588, 10.385, 1.03", "-10.698, 64.4291, 10.3642, 1.03", "-10.6871, 65.1233, 10.2157, 0.88", "-10.6371, 66.0243, 10.1054, 0.88", "-10.5204, 67.3157, 10.0292, 0.59", "-10.4369, 68.1451, 10.0331, 0.59", "-10.3666, 68.9041, 10.0442, 0.88", "-10.2924, 69.8334, 10.072, 0.81", "-10.2242, 70.9352, 10.0459, 0.81", "-10.2223, 70.9956, 10.0394, 0.81", "-10.1952, 72.3722, 9.79051, 1.03", "-10.1907, 73.4778, 9.51883, 1.99", "-10.1814, 73.8614, 9.39527, 2.65", "-10.0999, 75.7421, 8.65714, 1.47", "-10.0022, 77.1228, 8.05764, 0.44", "-9.90095, 78.0961, 7.62699, 0.37", "-9.89342, 78.1426, 7.60569, 0.37", "-9.68347, 79.1019, 7.23773, 0.37", "-9.64945, 79.2353, 7.19904, 0.37", "-9.4518, 79.9175, 7.11971, 0.37", "-9.42541, 80.0056, 7.11643, 0.37", "-9.17991, 80.9705, 7.2014, 0.37", "-9.00756, 81.8211, 7.3578, 0.37", "-8.91362, 82.4448, 7.50723, 0.96", "-8.82872, 82.9972, 7.63214, 1.18", "-8.75995, 83.4233, 7.68512, 1.47", "-8.62761, 84.1989, 7.72393, 1.47", "-8.473, 85.007, 7.68507, 1.25", "-8.28667, 85.8482, 7.5333, 0.44", "-8.02812, 86.8465, 7.28193, 0.37", "-7.65263, 88.2188, 6.85968, 0.37", "-7.64001, 88.2664, 6.84369, 0.37", "-7.37865, 89.3184, 6.46717, 1.84", "-7.19675, 90.1149, 6.19203, 2.65", "-7.11493, 90.5292, 6.06544, 3.09", "-6.88972, 91.9708, 5.69481, 0.59", "-6.79335, 92.8453, 5.53594, 0.59", "-6.75051, 93.566, 5.4306, 0.52", "-6.7535, 94.2693, 5.39171, 0.88", "-6.77967, 94.8429, 5.42211, 1.18", "-6.81053, 95.3653, 5.5141, 1.25", "-6.8441, 95.947, 5.7072, 1.25", "-6.86732, 96.6283, 5.99932, 0.81", "-6.87647, 97.7385, 6.53433, 0.52", "-6.86629, 98.4913, 6.90694, 0.81", "-6.83118, 99.4573, 7.37676, 1.11", "-6.80248, 99.9063, 7.58492, 0.88", "-6.73481, 100.663, 7.89895, 0.29", "-6.66162, 101.384, 8.13625, 0.29", "-6.59206, 102.072, 8.22277, 1.03", "-6.55831, 102.453, 8.20259, 1.77", "-6.53444, 102.83, 8.1391, 1.92", "-6.5016, 103.388, 8.01586, 1.77", "-6.47639, 103.876, 7.89395, 1.18", "-6.41822, 105.276, 7.51811, 0.52", "-6.39657, 106.248, 7.24882, 0.52", "-6.39137, 107.284, 6.96429, 1.03", "-6.39255, 107.344, 6.95055, 1.03", "-6.4188, 107.85, 6.86742, 1.03", "-6.42385, 107.91, 6.86326, 1.03", "-6.46274, 108.225, 6.88335, 1.18", "-6.52793, 108.679, 6.93473, 0.59", "-6.68105, 109.63, 7.03767, 0.59", "-6.82012, 110.393, 7.10569, 1.33", "-6.90381, 110.831, 7.11667, 1.92", "-6.96376, 111.142, 7.11136, 1.92", "-7.14362, 112.011, 7.06316, 1.03", "-7.31675, 112.756, 6.9947, 0.81", "-7.5789, 113.781, 6.86285, 0.81", "-7.86091, 114.818, 6.71618, 0.52", "-7.89488, 114.933, 6.69971, 0.52", "-8.1883, 115.818, 6.58139, 0.74", "-8.43146, 116.446, 6.50093, 0.96", "-8.64811, 116.937, 6.44576, 0.66", "-8.67453, 116.991, 6.44303, 0.66", "-9.02854, 117.68, 6.44927, 0.52", "-9.43327, 118.472, 6.46769, 0.52", "-9.93016, 119.465, 6.4789, 0.37", "-10.2644, 120.149, 6.47955, 1.18", "-10.6431, 120.973, 6.47433, 1.99", "-10.7762, 121.281, 6.47012, 2.21", "-11.0756, 122.102, 6.43691, 1.62", "-11.3581, 123.052, 6.37467, 0.44", "-11.5439, 123.883, 6.29894, 0.37", "-11.6446, 124.504, 6.21845, 0.37", "-11.6505, 124.555, 6.20909, 0.37", "-11.7227, 125.415, 6.04338, 0.37", "-11.7267, 125.484, 6.03022, 0.37", "-11.7651, 126.225, 5.86343, 0.52", "-11.8027, 126.841, 5.68849, 0.81", "-11.8588, 127.687, 5.44163, 1.47", "-11.8773, 127.941, 5.36847, 2.06", "-11.908, 128.477, 5.20206, 2.58", "-11.9598, 130.089, 4.6575, 0.29", "-11.9587, 130.94, 4.33831, 0.29", "-11.8857, 131.933, 3.93024, 0.29", "-11.8688, 132.05, 3.87848, 0.29", "-11.6975, 132.952, 3.46635, 0.88", "-11.685, 133.006, 3.44164, 0.88", "-11.623, 133.259, 3.33061, 0.88", "-11.3317, 134.577, 2.7695, 0.29", "-11.1946, 135.313, 2.45101, 1.03", "-11.0895, 136.133, 2.1349, 1.33", "-11.0709, 136.442, 2.03755, 1.47", "-11.0547, 136.963, 1.89298, 1.55", "-11.0625, 137.214, 1.83746, 1.55", "-11.0684, 137.265, 1.82999, 1.55", "-11.2296, 138.486, 1.70655, 0.29", "-11.3188, 139.173, 1.65098, 1.4", "-11.3418, 139.374, 1.63645, 1.84", "-11.4003, 140.061, 1.59585, 1.18", "-11.4451, 140.828, 1.60808, 0.29", "-11.4571, 141.357, 1.65106, 0.22", "-11.4542, 141.802, 1.72176, 0.81", "-11.4513, 141.929, 1.74935, 1.03", "-11.4396, 142.432, 1.87429, 0.81", "-11.4037, 143.552, 2.17052, 0.29", "-11.408, 143.802, 2.23432, 0.37", "-11.4228, 144.214, 2.34524, 0.37", "-11.4595, 145.084, 2.59842, 1.33", "-11.4754, 145.531, 2.76767, 1.77", "-11.5117, 146.407, 3.13612, 0.37", "-11.5416, 147.162, 3.4628, 0.29", "-11.5719, 148.169, 3.91268, 0.88", "-11.5822, 148.825, 4.19729, 1.33", "-11.5903, 150.166, 4.73772, 1.03", "-11.591, 151.135, 5.09099, 0.29", "-11.5917, 151.432, 5.18507, 0.59", "-11.5951, 152.002, 5.30785, 0.59", "-11.6288, 152.722, 5.37016, 0.29", "-11.6764, 153.478, 5.36885, 0.29", "-11.728, 154.181, 5.32187, 0.96", "-11.7519, 154.493, 5.30394, 1.18", "-11.8388, 155.577, 5.25813, 0.29", "-11.9212, 156.54, 5.23721, 1.62", "-11.981, 157.12, 5.23558, 0.44", "-12.0728, 157.818, 5.23251, 0.29", "-12.1613, 158.393, 5.24712, 0.59", "-12.22, 158.708, 5.26401, 0.74", "-12.4246, 159.586, 5.35239, 0.29", "-12.6993, 160.622, 5.5, 0.29", "-12.792, 160.923, 5.55402, 0.22", "-13.0801, 161.771, 5.73042, 0.22", "-13.2637, 162.269, 5.84971, 0.22", "-13.5196, 162.899, 6.02554, 0.22", "-13.5439, 162.951, 6.04433, 0.22", "-13.7585, 163.352, 6.23391, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.26126, 51.3543, 14.6215, 0.37", "-7.06656, 52.042, 15.181, 0.37", "-7.45385, 52.4152, 15.4193, 0.37", "-7.87335, 52.8515, 15.6611, 0.37", "-8.30639, 53.302, 15.9108, 0.44", "-8.61013, 53.6179, 16.0859, 0.59", "-9.10747, 54.1352, 16.3726, 0.29", "-9.36768, 54.4696, 16.5026, 0.29", "-9.68968, 54.9347, 16.6675, 0.66", "-14.8791, 60.1774, 18.4659, 0.66", "-19.9551, 65.7561, 19.527, 0.66", "-24.6195, 71.3047, 21.8464, 0.66", "-28.6717, 77.5252, 23.7264, 0.66", "-32.4088, 83.8403, 25.9363, 0.66", "-36.0063, 89.5288, 29.4959, 0.66", "-39.7468, 95.1756, 32.9686, 0.66", "-43.0676, 100.43, 37.3099, 0.66", "-47.2054, 105.56, 41.05, 0.66", "-51.7822, 110.526, 44.4696, 0.66", "-56.4405, 115.674, 47.5178, 0.66", "-59.6818, 121.507, 51.2009, 0.66", "-63.1252, 127.599, 54.2757, 0.66", "-67.3057, 133.557, 56.5926, 0.66", "-71.0978, 139.251, 59.9387, 0.66", "-74.1612, 144.273, 64.6949, 0.66", "-77.7525, 148.923, 69.429, 0.66", "-80.1586, 153.648, 74.795, 0.66", "-82.4607, 158.196, 80.3413, 0.66" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "55.3889, -248.028, -1.4869, 0.44", "55.5212, -248.5, -1.83935, 0.44", "55.6148, -249.079, -2.24207, 0.22", "55.6449, -249.37, -2.42202, 0.59", "55.7245, -250.746, -3.18204, 0.22", "55.7148, -251.18, -3.40875, 0.59", "55.6941, -251.634, -3.62129, 0.59", "55.5901, -252.844, -4.13521, 0.29", "55.525, -253.457, -4.36095, 1.18", "55.4764, -253.947, -4.51386, 1.47", "55.3192, -255.785, -4.9596, 0.22", "55.2941, -256.938, -5.18825, 0.22", "55.2966, -257.016, -5.20008, 0.22", "55.3598, -257.741, -5.27495, 0.22", "55.4637, -258.558, -5.3437, 1.11", "55.5374, -258.965, -5.36318, 1.55", "56.0361, -261.195, -5.35924, 0.15", "56.1724, -261.75, -5.36094, 0.66", "56.1915, -261.826, -5.36127, 0.66", "56.236, -262.001, -5.36214, 0.66", "56.7649, -263.898, -5.34379, 0.15", "56.8194, -264.08, -5.3395, 0.44", "57.1476, -265.124, -5.29504, 0.15", "57.3125, -265.663, -5.21651, 0.44", "57.3298, -265.738, -5.19876, 0.44", "57.4838, -266.782, -4.86091, 0.22", "57.4838, -266.782, -4.86091, 0.37", "57.4164, -267.954, -4.34143, 0.22", "57.2308, -269.467, -3.66043, 0.22", "57.0811, -270.455, -3.20166, 0.88", "56.9831, -270.971, -2.96061, 0.88", "56.7438, -271.874, -2.5361, 0.22", "56.7155, -271.971, -2.49137, 0.22", "56.3123, -273.057, -2.01631, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "55.3889, -248.028, -1.4869, 0.22", "55.147, -249.443, -1.62667, 0.22", "55.004, -250.279, -1.70925, 0.37", "54.6498, -252.35, -1.91384, 0.22", "54.5231, -253.091, -1.98703, 0.66", "53.6468, -265.643, -1.47414, 0.66", "51.239, -277.904, -0.17714, 0.66", "47.8128, -289.934, 0.751097, 0.66", "43.4448, -301.306, 3.45589, 0.66", "39.6008, -313.107, 5.10144, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-18.632, -37.1895, 6.30522, 1.18", "-19.5976, -37.6639, 6.23383, 1.18", "-20.832, -38.5662, 6.20615, 1.11", "-21.9384, -39.7004, 6.23639, 1.03", "-22.6164, -40.6982, 6.28774, 1.03", "-23.2202, -41.7419, 6.34942, 1.4", "-23.9294, -43.1893, 6.43249, 1.4", "-24.437, -44.7419, 6.54531, 1.25", "-24.8532, -46.4996, 6.71487, 1.11", "-25.1864, -48.7579, 6.91895, 1.11", "-25.1938, -48.8513, 6.92665, 1.11", "-25.2098, -49.9791, 7.00941, 1.92", "-25.1554, -51.0276, 7.07299, 2.21" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.632, -37.1895, 6.30522, 1.25", "-18.7473, -38.5635, 6.40109, 1.25", "-18.8481, -40.1649, 6.46503, 1.03", "-18.8489, -40.974, 6.50138, 1.25", "-18.8063, -41.7971, 6.52458, 1.25", "-18.6371, -43.0993, 6.58372, 0.88", "-18.5486, -43.5217, 6.61488, 0.88", "-18.34, -44.1869, 6.66374, 0.74", "-17.8621, -45.3818, 6.77671, 1.25", "-17.3924, -46.4092, 6.9528, 1.4", "-16.5677, -48.1567, 7.31431, 1.18", "-15.8352, -49.7386, 7.68071, 1.03", "-15.3028, -50.9991, 7.98321, 1.18", "-14.6234, -52.8602, 8.42259, 1.4", "-13.8357, -55.4916, 9.02361, 1.33", "-13.5664, -56.6433, 9.27775, 1.62", "-13.4352, -57.4365, 9.44076, 1.62", "-13.3106, -58.625, 9.66353, 1.62", "-13.2321, -60.1381, 9.92414, 1.62", "-13.2283, -61.6126, 10.1242, 1.4", "-13.2459, -62.7229, 10.2612, 1.4", "-13.2504, -64.4493, 10.5222, 1.55", "-13.2219, -65.573, 10.7047, 1.47", "-13.1181, -66.6926, 10.9114, 1.11", "-12.9263, -67.77, 11.1174, 1.11", "-12.5064, -69.4312, 11.3977, 0.88", "-12.4851, -69.4929, 11.4061, 0.88", "-12.1313, -70.2775, 11.4588, 0.88", "-11.2047, -71.9621, 11.3611, 0.74", "-10.7455, -72.7748, 11.1702, 0.74", "-10.5689, -73.1588, 11.0134, 1.4", "-10.3513, -73.8495, 10.6713, 1.62", "-10.234, -74.4675, 10.3868, 1.77", "-10.1174, -76.1381, 9.73831, 1.18", "-10.0729, -77.608, 9.41092, 0.88", "-10.0229, -79.2186, 9.29159, 1.11", "-9.96241, -80.5029, 9.45057, 1.11", "-9.87982, -81.794, 9.91116, 1.11", "-9.77759, -83.0831, 10.73, 1.25", "-9.51341, -85.468, 12.9262, 1.11", "-9.50799, -85.5106, 12.9742, 1.11", "-9.33532, -86.6492, 14.4549, 0.88", "-9.20229, -87.472, 15.6543, 1.11", "-9.05771, -88.4354, 17.2035, 0.66", "-8.99381, -88.9882, 18.1446, 1.55", "-9.01193, -89.5053, 18.966, 1.77", "-9.03761, -90.2376, 20.0801, 1.99" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "33.2944, -47.1443, -60.3513, 0.81", "35.7052, -46.7833, -62.1567, 0.81", "35.7371, -46.7845, -62.1936, 0.81", "36.1318, -46.8461, -62.7036, 0.74", "36.1537, -46.853, -62.7387, 0.74", "36.8004, -47.0814, -63.8313, 0.22", "37.2064, -47.2377, -64.513, 1.03", "38.4197, -47.8339, -66.6612, 0.44", "38.8816, -48.054, -67.5329, 2.73", "40.0408, -48.5118, -70.1114, 0.29", "40.0616, -48.5182, -70.1632, 0.29", "40.1841, -48.5291, -70.6053, 0.29", "40.262, -48.4782, -70.9654, 0.29", "40.4301, -48.2203, -71.8592, 1.25", "40.7764, -47.5371, -73.7866, 1.55", "40.7843, -47.5194, -73.8322, 1.55", "41.2956, -46.5919, -76.5589, 1.55", "41.6726, -46.1879, -78.3932, 0.88", "41.7904, -46.1207, -78.8576, 0.81", "42.1731, -46.0438, -80.0185, 0.29", "42.4067, -46.0428, -80.5782, 0.29", "42.7895, -46.0984, -81.4508, 1.99", "44.5377, -46.5939, -84.9782, 0.29", "44.9287, -46.7411, -85.7663, 1.77", "45.7521, -47.057, -87.4377, 0.29", "46.1016, -47.1723, -88.1235, 1.77", "47.2173, -47.4552, -90.1237, 0.29", "47.7843, -47.5531, -91.0378, 1.47", "48.0047, -47.5783, -91.3424, 1.92", "48.0324, -47.5796, -91.3825, 1.92", "49.0738, -47.464, -92.7931, 0.37", "49.4513, -47.3605, -93.2719, 0.29", "50.0894, -47.1111, -93.9117, 0.29", "50.152, -47.0886, -93.9737, 0.29", "50.5857, -46.9798, -94.3934, 0.29", "51.2762, -46.9614, -95.0116, 0.96", "51.5108, -47.0328, -95.1875, 0.96", "52.2685, -47.4329, -95.7709, 0.29", "52.7256, -47.7986, -96.1326, 0.22", "53.0472, -48.1075, -96.3927, 0.22", "53.5586, -48.658, -96.795, 1.47", "53.8781, -49.0099, -97.0396, 1.62", "54.6986, -49.8703, -97.6491, 0.22", "55.3586, -50.5035, -98.1586, 0.22", "55.4892, -50.6233, -98.2741, 0.22", "55.8466, -50.9265, -98.6062, 0.22", "56.299, -51.3028, -99.0539, 1.11", "56.6415, -51.6047, -99.4198, 1.25", "57.3328, -52.2418, -100.107, 0.29", "57.7327, -52.6124, -100.503, 0.44", "57.8242, -52.7131, -100.597, 0.44", "57.8521, -52.7405, -100.627, 0.44", "58.2435, -53.0665, -101.059, 0.22", "58.72, -53.4129, -101.582, 0.22", "59.1609, -53.6537, -102.111, 1.25", "59.3772, -53.7374, -102.39, 1.69", "60.4327, -54.1565, -104.047, 0.22", "60.7801, -54.2983, -104.643, 1.25", "60.9556, -54.37, -104.963, 1.55", "62.0104, -54.8609, -107.07, 0.15", "62.4635, -55.0721, -108.075, 1.33", "63.2444, -55.4604, -109.867, 0.37", "63.4085, -55.5625, -110.272, 1.11", "63.5567, -55.6514, -110.633, 1.25", "64.3324, -56.053, -112.504, 1.62", "65.495, -56.4976, -115.378, 1.03", "65.7507, -56.5559, -115.992, 0.44", "66.2638, -56.549, -117.248, 1.62", "66.8455, -56.4302, -118.77, 0.52", "67.1227, -56.3171, -119.535, 1.33", "67.9751, -55.7259, -121.957, 0.66", "68.1644, -55.5501, -122.47, 1.03", "68.6973, -54.9728, -123.841, 0.22", "68.8304, -54.8153, -124.136, 0.22", "68.8516, -54.794, -124.176, 0.22", "68.9906, -54.6905, -124.373, 0.22", "69.4808, -54.4297, -124.786, 1.11", "69.8012, -54.2959, -125.013, 1.4", "69.8414, -54.2852, -125.039, 1.4", "71.3796, -53.9573, -126.101, 0.22", "71.7492, -53.8949, -126.367, 0.22", "72.2874, -53.8279, -126.763, 1.25", "72.6144, -53.8083, -127.012, 1.55", "73.9017, -53.8439, -127.958, 0.37", "74.284, -53.9159, -128.249, 0.22", "74.587, -54.0288, -128.476, 0.66", "74.8518, -54.155, -128.691, 0.66", "75.2293, -54.3762, -129.018, 0.22", "75.5648, -54.6169, -129.344, 1.47", "76.6898, -55.6713, -130.569, 0.22", "76.8802, -55.8813, -130.809, 0.66", "76.8991, -55.9069, -130.837, 0.66", "77.074, -56.1911, -131.137, 0.74", "77.4446, -56.8959, -131.846, 0.29", "77.6441, -57.2489, -132.226, 0.29", "77.6652, -57.2813, -132.258, 0.29", "77.9213, -57.6005, -132.595, 0.29", "78.3855, -58.0923, -133.097, 1.4", "78.4992, -58.1994, -133.199, 1.4", "79.5382, -59.0636, -133.99, 0.29", "79.9674, -59.4021, -134.307, 0.29", "80.0014, -59.4282, -134.331, 0.29", "80.441, -59.756, -134.631, 1.25", "80.8069, -60.0618, -134.862, 1.33", "81.6779, -60.8798, -135.466, 0.22", "81.7086, -60.9125, -135.488, 0.22", "81.9999, -61.1622, -135.751, 0.22", "82.0362, -61.1867, -135.786, 0.22", "82.4063, -61.3696, -136.157, 0.44", "83.0768, -61.6644, -136.857, 1.4", "83.3128, -61.7787, -137.098, 1.62", "84.3587, -62.3496, -138.109, 0.22", "84.5418, -62.4582, -138.29, 0.81", "84.7529, -62.5757, -138.487, 0.81", "85.6222, -63.0587, -139.248, 0.22", "86.0844, -63.3389, -139.618, 1.18", "86.4999, -63.6292, -139.946, 1.25", "87.4316, -64.4772, -140.666, 0.22", "87.7251, -64.7659, -140.902, 0.22", "88.0938, -65.1431, -141.19, 0.74", "88.2874, -65.3401, -141.327, 0.74", "88.3184, -65.371, -141.351, 0.74", "88.9611, -65.9816, -141.843, 0.22", "89.0269, -66.0403, -141.888, 0.22", "89.4853, -66.4033, -142.178, 1.18", "89.9675, -66.715, -142.461, 1.18", "90.9861, -67.2883, -143.015, 0.22", "91.2951, -67.4391, -143.17, 0.37", "91.518, -67.5299, -143.27, 0.37", "92.2719, -67.8118, -143.584, 0.22", "92.7582, -67.9699, -143.759, 1.03", "92.8034, -67.9836, -143.771, 1.03", "93.1449, -68.094, -143.829, 1.03", "93.2527, -68.1314, -143.847, 1.03", "94.0931, -68.3821, -143.981, 0.22", "94.5503, -68.4855, -144.047, 0.81", "94.8164, -68.5284, -144.076, 0.81", "95.4376, -68.6258, -144.157, 0.22", "95.5332, -68.6412, -144.171, 0.22", "95.985, -68.7436, -144.296, 0.22", "96.0921, -68.7759, -144.335, 0.22", "96.3876, -68.8999, -144.461, 0.22", "97.0359, -69.2539, -144.76, 1.33", "97.3845, -69.466, -144.933, 1.55", "98.4238, -70.1633, -145.467, 0.29", "98.9597, -70.5706, -145.758, 0.29", "99.3608, -70.8966, -145.985, 0.59", "99.6288, -71.135, -146.146, 0.59" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "33.2944, -47.1443, -60.3513, 0.29", "33.3537, -49.7862, -62.234, 0.29", "33.3645, -50.1394, -62.4768, 0.37", "33.3907, -50.8447, -62.9452, 0.22", "33.4093, -51.3449, -63.2773, 1.33", "33.4796, -53.2357, -64.5328, 0.15", "33.4911, -53.5449, -64.7381, 0.59", "33.4971, -53.6057, -64.7687, 0.59", "33.5256, -53.8254, -64.8903, 0.59" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "25.9844, -33.581, 23.4961, 0.52", "27.8052, -34.1109, 22.392, 0.52", "27.8707, -34.1299, 22.3523, 0.52", "28.8797, -34.4235, 21.7405, 0.66", "28.9453, -34.4426, 21.7008, 0.66", "30.276, -34.8298, 20.8939, 0.44", "30.3316, -34.846, 20.8602, 0.44", "39.3198, -36.2459, 14.457, 0.44", "49.5174, -35.6597, 10.1549, 0.44", "60.322, -33.8794, 8.50247, 0.44", "70.8799, -32.0218, 5.72435, 0.44", "81.8358, -32.1955, 3.99602, 0.44", "92.8341, -33.623, 3.20812, 0.44", "103.362, -36.0434, 0.432055, 0.44", "113.792, -38.2784, -2.80817, 0.44", "124.279, -40.8555, -5.61738, 0.44", "134.444, -44.3073, -8.78729, 0.44", "144.57, -48.8398, -10.5769, 0.44", "153.757, -55.1369, -12.6621, 0.44", "162.719, -61.6017, -15.2209, 0.44", "171.447, -67.514, -19.3317, 0.44", "178.979, -75.0099, -23.4826, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "25.9844, -33.581, 23.4961, 0.29", "26.6807, -34.3892, 23.3661, 0.29", "27.2718, -35.0754, 23.2557, 0.29", "31.1343, -41.0992, 21.1274, 0.29", "35.4656, -46.2568, 18.0076, 0.29", "40.3818, -51.6433, 16.5909, 0.29", "45.4083, -57.0946, 16.6163, 0.29", "49.7049, -63.1791, 16.5493, 0.29", "52.8164, -69.9333, 17.1748, 0.29", "55.5173, -76.8524, 17.9124, 0.29", "58.517, -83.6521, 18.5893, 0.29", "61.0101, -90.5849, 19.7193, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-25.1554, -51.0276, 7.07299, 0.96", "-25.8206, -51.9468, 7.5109, 0.96", "-26.4639, -52.7462, 7.82889, 0.88", "-27.1, -53.503, 8.10644, 1.25", "-27.6841, -54.1551, 8.31916, 1.4", "-28.1602, -54.63, 8.4598, 1.03", "-28.9234, -55.3415, 8.65435, 0.88", "-29.7445, -55.9421, 8.74458, 0.88", "-29.7998, -55.9747, 8.74436, 0.88", "-30.3482, -56.232, 8.64843, 1.18", "-31.1692, -56.5517, 8.43102, 1.18", "-31.2189, -56.5692, 8.41675, 1.18", "-32.111, -56.8669, 8.14621, 1.11", "-32.4626, -56.9965, 8.03584, 1.11", "-33.565, -57.4727, 7.68174, 1.03", "-34.3403, -57.8742, 7.43239, 1.33", "-35.5332, -58.6334, 7.09471, 1.33", "-35.6105, -58.6918, 7.08009, 1.33", "-36.6897, -59.5801, 6.91768, 0.59", "-37.4449, -60.2493, 6.82989, 0.59", "-38.0764, -60.8692, 6.80055, 1.03", "-38.9519, -61.8266, 6.77139, 2.28", "-39.6836, -62.764, 6.81746, 2.95" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-25.1554, -51.0276, 7.07299, 0.59", "-24.6439, -53.1656, 7.55359, 0.59", "-24.4907, -54.4873, 7.85865, 0.59", "-24.4051, -55.6987, 8.12346, 1.18", "-24.3459, -56.6994, 8.30367, 1.4", "-24.2421, -58.3796, 8.51201, 0.81", "-24.1556, -59.5701, 8.58691, 0.59", "-24.1164, -60.9267, 8.53787, 0.59", "-24.0523, -62.5621, 8.27178, 0.59", "-23.9887, -63.6351, 7.94914, 1.4", "-23.8879, -64.9733, 7.42691, 1.92", "-23.7883, -66.3177, 6.84609, 1.62", "-23.6669, -68.2763, 5.99485, 1.03", "-23.5912, -70.0822, 5.22923, 0.66", "-23.5923, -71.9575, 4.53183, 0.52", "-23.6466, -73.0317, 4.23896, 0.52", "-23.8152, -74.4782, 4.02218, 1.11", "-24.0137, -75.4736, 4.0151, 1.25", "-24.2678, -76.3508, 4.13031, 1.11", "-24.68, -77.437, 4.3588, 0.74", "-25.1674, -78.4438, 4.5277, 0.52", "-25.7213, -79.4068, 4.57179, 0.44", "-26.229, -80.2111, 4.52339, 0.37", "-26.7443, -81.0089, 4.457, 1.4", "-27.4451, -82.0873, 4.34222, 1.62", "-28.6452, -83.9562, 4.13921, 0.66", "-29.2165, -84.8879, 4.06539, 0.59", "-29.8006, -85.9994, 4.07334, 0.44", "-30.3688, -87.2964, 4.21739, 0.44", "-30.3952, -87.3715, 4.23662, 0.44", "-30.662, -88.3362, 4.60356, 0.81", "-30.7524, -88.7329, 4.79387, 0.81", "-31.1328, -90.2784, 5.39318, 0.37", "-31.3332, -91.0, 5.58676, 0.29", "-31.7102, -92.1717, 5.77163, 1.47", "-32.1366, -93.3638, 5.83491, 1.92", "-32.2209, -93.5794, 5.82716, 1.92", "-33.0931, -95.696, 5.65433, 0.74", "-33.4801, -96.6162, 5.53053, 0.52", "-33.7319, -97.2648, 5.45546, 0.96", "-34.2174, -98.608, 5.33586, 0.96", "-34.6254, -99.8151, 5.29203, 0.44", "-34.9484, -100.858, 5.28384, 0.29", "-35.0051, -101.056, 5.28916, 0.29", "-35.3166, -102.114, 5.29617, 0.29", "-35.5504, -102.898, 5.28385, 0.29", "-35.9166, -104.085, 5.25559, 1.25", "-36.3748, -105.446, 5.18515, 1.84", "-36.8156, -106.644, 5.10631, 0.96", "-37.232, -107.723, 5.03521, 0.44", "-37.5471, -108.493, 4.97632, 0.44", "-37.9429, -109.439, 4.92137, 1.11", "-38.3146, -110.233, 4.90107, 1.4", "-38.7117, -110.993, 4.92688, 1.25", "-39.2962, -112.062, 4.98687, 0.59", "-39.7609, -112.902, 5.03949, 0.29", "-39.797, -112.975, 5.04518, 0.29", "-40.2913, -114.188, 5.13786, 0.29", "-40.5697, -115.141, 5.21487, 0.29", "-40.7238, -115.918, 5.29083, 1.33", "-40.8046, -116.53, 5.35852, 1.47", "-40.9177, -117.874, 5.52081, 0.74", "-40.9751, -118.977, 5.65754, 0.37", "-40.9917, -120.472, 5.84715, 0.37", "-41.0108, -121.982, 5.98662, 1.11", "-41.0191, -122.585, 6.02675, 1.69", "-41.0358, -123.492, 6.06812, 1.77", "-41.0654, -124.987, 6.07209, 0.59", "-41.1062, -126.79, 6.00976, 0.52", "-41.1526, -128.221, 5.82962, 0.52", "-41.1852, -129.013, 5.68115, 1.33", "-41.2101, -129.601, 5.55446, 1.69", "-41.2528, -130.773, 5.29019, 2.14", "-41.3053, -131.923, 5.07662, 1.47", "-41.4408, -134.444, 4.75758, 0.52", "-41.5062, -135.633, 4.68034, 0.52", "-41.5621, -136.583, 4.64938, 0.52", "-41.6328, -138.119, 4.70785, 0.66", "-41.6959, -139.823, 4.89967, 0.52", "-41.7408, -141.002, 5.09924, 1.33", "-41.8021, -141.962, 5.3247, 1.99", "-41.8605, -142.545, 5.4742, 1.99", "-42.1451, -144.718, 6.05348, 0.44", "-42.2754, -145.579, 6.28387, 0.37", "-42.4656, -146.838, 6.60016, 0.37", "-42.643, -147.958, 6.8987, 0.37", "-42.8122, -149.027, 7.19374, 0.52", "-42.9455, -149.894, 7.41797, 0.52", "-42.9944, -150.376, 7.5188, 0.29", "-42.9953, -151.079, 7.65087, 0.29", "-42.9069, -152.065, 7.81108, 1.18", "-42.8357, -152.681, 7.87633, 1.69", "-42.7847, -153.176, 7.90503, 1.55", "-42.6105, -155.48, 8.00876, 0.37", "-42.5671, -156.491, 8.04546, 0.59", "-42.5677, -157.099, 8.06397, 0.59", "-42.6301, -158.498, 8.10086, 0.29", "-42.7348, -159.439, 8.12832, 0.37", "-42.889, -160.253, 8.13401, 0.37", "-42.9988, -160.68, 8.13077, 1.11", "-43.2201, -161.58, 8.12485, 1.4", "-43.3405, -162.171, 8.12792, 1.4", "-43.5115, -163.332, 8.13862, 0.66", "-43.6727, -164.552, 8.13916, 0.37", "-43.8957, -166.145, 8.12726, 0.29", "-44.0297, -166.997, 8.12012, 0.81", "-44.1834, -167.89, 8.11211, 0.88", "-44.5067, -169.615, 8.10776, 0.29", "-44.7512, -170.797, 8.12195, 0.29", "-44.9241, -171.502, 8.14912, 0.96", "-45.1744, -172.354, 8.16009, 1.18", "-45.2056, -172.445, 8.16017, 1.18", "-45.4913, -173.198, 8.15819, 1.18", "-46.282, -175.172, 8.15951, 0.29", "-46.639, -176.062, 8.16009, 0.29", "-47.2299, -177.479, 8.17623, 0.59", "-47.6471, -178.388, 8.19429, 0.29", "-48.0997, -179.248, 8.22465, 1.25", "-48.3168, -179.597, 8.23351, 1.55", "-49.0597, -180.654, 8.26021, 0.88", "-49.8261, -181.684, 8.29236, 0.22", "-50.3768, -182.4, 8.30676, 0.22", "-51.1173, -183.353, 8.30025, 0.88", "-52.167, -184.691, 8.25806, 0.22", "-52.6822, -185.35, 8.20608, 1.11", "-53.0777, -185.847, 8.14862, 1.11", "-54.213, -187.295, 7.95227, 0.22", "-55.0203, -188.356, 7.79443, 1.55", "-55.3851, -188.847, 7.71684, 1.55", "-56.9259, -190.92, 7.40786, 0.22", "-57.4925, -191.663, 7.27843, 0.96" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.03761, -90.2376, 20.0801, 0.74", "-10.4164, -92.3524, 19.9286, 0.74", "-11.1086, -94.0283, 20.0439, 0.59", "-11.5533, -95.6951, 20.3218, 0.59", "-11.5685, -95.7737, 20.3376, 0.59", "-11.758, -97.1228, 20.6021, 0.81", "-11.766, -97.1915, 20.6135, 0.81", "-11.8041, -98.7854, 20.8881, 0.74", "-11.8517, -99.7682, 21.03, 1.18", "-11.9346, -100.289, 21.0885, 1.18", "-12.2099, -101.307, 21.1825, 0.96", "-12.8271, -102.797, 21.3011, 0.59", "-13.5978, -104.132, 21.5509, 0.59", "-13.967, -104.651, 21.7318, 0.96", "-14.3097, -105.117, 21.9914, 0.96", "-14.7837, -105.779, 22.4739, 1.18", "-15.1713, -106.35, 22.9637, 1.18", "-16.124, -107.894, 24.4501, 0.52", "-16.6488, -109.042, 25.5891, 0.74", "-16.9877, -110.059, 26.5295, 0.81", "-17.1468, -110.728, 27.1036, 1.11", "-17.2423, -111.324, 27.5439, 0.96", "-17.2516, -111.393, 27.5844, 0.96", "-17.5314, -112.955, 28.2699, 1.11", "-17.7695, -113.719, 28.5838, 1.11", "-17.8019, -113.8, 28.6165, 1.11", "-18.553, -115.161, 29.2362, 0.88", "-19.5199, -116.508, 29.9542, 0.74", "-20.4596, -117.563, 30.5812, 0.74", "-21.2153, -118.257, 31.0285, 0.74", "-21.2628, -118.297, 31.0569, 0.74", "-22.4238, -119.193, 31.7597, 0.66", "-23.1333, -119.637, 32.1994, 0.66", "-24.0064, -120.083, 32.7453, 1.18", "-24.667, -120.411, 33.1467, 1.55", "-25.2405, -120.74, 33.4736, 1.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.03761, -90.2376, 20.0801, 0.74", "-6.76423, -91.1382, 19.6966, 0.74", "-5.99207, -91.5356, 19.568, 0.74", "-5.94752, -91.5657, 19.5611, 0.74", "-5.21458, -92.2386, 19.4434, 1.03", "-4.99309, -92.5271, 19.4135, 1.03", "-4.32197, -93.6752, 19.327, 0.44", "-4.10226, -94.5062, 19.3097, 0.44", "-3.89624, -95.5082, 19.3934, 0.59", "-3.73624, -96.4438, 19.526, 0.74", "-3.6316, -97.4471, 19.7544, 0.52", "-3.57929, -98.1215, 19.9845, 0.52", "-3.53903, -99.0153, 20.4126, 0.52", "-3.41985, -99.8066, 21.0182, 0.52", "-3.40844, -99.8383, 21.0609, 0.52", "-3.2392, -100.121, 21.7121, 0.74", "-3.13252, -100.223, 22.3333, 1.03", "-3.12665, -100.223, 22.3867, 1.03", "-3.09478, -100.075, 23.2326, 1.03", "-3.09649, -100.062, 23.2851, 1.03", "0.269415, -108.589, 24.6739, 1.03", "1.55336, -117.858, 24.9949, 1.03", "2.74023, -126.824, 27.2813, 1.03", "4.58972, -135.878, 28.5802, 1.03", "7.40814, -144.686, 29.5817, 1.03", "9.93557, -153.086, 32.5566, 1.03" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "99.6288, -71.135, -146.146, 0.22", "100.49, -71.6176, -146.523, 0.22", "100.867, -71.8644, -146.676, 0.22", "100.902, -71.8922, -146.694, 0.22", "101.244, -72.1872, -146.895, 0.96", "101.392, -72.3235, -146.98, 1.33", "101.636, -72.5388, -147.124, 1.4", "101.672, -72.5746, -147.145, 1.4", "102.373, -73.2337, -147.584, 0.22", "102.405, -73.2596, -147.61, 0.22", "102.864, -73.5654, -148.001, 0.22", "103.333, -73.8045, -148.377, 1.03", "103.369, -73.8195, -148.404, 1.03", "103.571, -73.8879, -148.539, 1.03", "104.742, -74.2611, -149.245, 0.29", "105.316, -74.4487, -149.581, 0.29", "105.963, -74.6805, -149.944, 1.33", "106.22, -74.7895, -150.071, 1.62", "106.796, -75.0696, -150.318, 0.52", "107.344, -75.374, -150.508, 0.22", "107.39, -75.4025, -150.518, 0.22", "107.802, -75.6785, -150.62, 0.22", "108.124, -75.9091, -150.7, 0.81", "108.495, -76.1647, -150.793, 1.03", "109.331, -76.77, -150.998, 0.22", "109.54, -76.9137, -151.048, 0.52", "109.615, -76.9707, -151.066, 0.52", "109.863, -77.1685, -151.132, 0.52", "109.893, -77.1944, -151.143, 0.52", "110.555, -77.795, -151.427, 0.22", "110.589, -77.8264, -151.442, 0.22", "111.104, -78.2862, -151.668, 1.03", "111.416, -78.5511, -151.804, 1.4", "112.243, -79.2148, -152.16, 0.29", "112.28, -79.2424, -152.175, 0.29", "112.694, -79.5063, -152.316, 0.29", "113.112, -79.7347, -152.426, 0.81", "113.161, -79.7563, -152.433, 0.81", "113.414, -79.8535, -152.446, 1.18", "113.753, -79.9783, -152.444, 1.18", "114.422, -80.2149, -152.445, 0.22", "114.844, -80.3492, -152.447, 0.22", "115.419, -80.5168, -152.451, 1.03", "115.76, -80.61, -152.453, 1.25", "116.729, -80.8709, -152.466, 0.22", "116.775, -80.8848, -152.467, 0.22", "117.132, -81.0114, -152.469, 0.22", "117.183, -81.0317, -152.467, 0.22", "117.536, -81.168, -152.444, 0.81", "117.938, -81.3165, -152.405, 1.18", "119.096, -81.6781, -152.259, 0.22", "119.847, -81.8826, -152.146, 1.11", "120.089, -81.9397, -152.104, 1.11", "121.018, -82.1001, -151.932, 0.22", "121.065, -82.1053, -151.923, 0.22", "121.762, -82.1118, -151.769, 0.22", "122.246, -82.0463, -151.658, 1.03", "122.511, -81.9849, -151.608, 0.81", "123.18, -81.7807, -151.481, 0.22", "123.225, -81.7628, -151.473, 0.22", "123.485, -81.6556, -151.426, 0.37", "124.246, -81.3255, -151.302, 0.15", "124.445, -81.2335, -151.276, 0.29", "124.927, -80.9872, -151.21, 0.15", "125.293, -80.7788, -151.157, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "99.6288, -71.135, -146.146, 0.22", "99.6646, -71.8982, -146.484, 0.22", "99.6658, -71.9241, -146.496, 0.22", "99.6754, -72.128, -146.586, 0.66", "99.7015, -72.6851, -146.833, 0.15", "99.7096, -72.8571, -146.909, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-39.6836, -62.764, 6.81746, 0.88", "-41.2495, -62.1782, 7.14787, 0.88", "-42.4452, -61.935, 7.38252, 0.52", "-42.5322, -61.9284, 7.39886, 0.52", "-43.4339, -61.9618, 7.56465, 0.52", "-44.1598, -62.0492, 7.69789, 0.74", "-45.112, -62.2164, 7.87237, 0.66", "-46.0795, -62.4808, 8.03578, 0.52", "-46.8399, -62.7478, 8.21625, 0.37", "-47.8046, -63.087, 8.54319, 1.11", "-48.3821, -63.3014, 8.78588, 1.55", "-48.9155, -63.4776, 9.05195, 1.55", "-49.9167, -63.7464, 9.63334, 0.66", "-51.0151, -63.9259, 10.3876, 0.29", "-52.0513, -63.9605, 11.2491, 0.44", "-52.106, -63.9546, 11.3006, 0.44", "-52.5396, -63.8618, 11.7404, 0.66", "-52.605, -63.8404, 11.8136, 0.66", "-53.1855, -63.5997, 12.4857, 1.11", "-53.911, -63.336, 13.2386, 1.11", "-54.4437, -63.1805, 13.7539, 0.88", "-54.4974, -63.1702, 13.8058, 0.88", "-55.3038, -63.102, 14.5517, 0.59", "-56.0913, -63.0967, 15.2227, 0.29", "-56.7664, -63.1481, 15.6779, 0.29", "-56.8324, -63.1568, 15.7134, 0.29", "-57.458, -63.229, 15.984, 0.52", "-58.1632, -63.2601, 16.2287, 0.52", "-58.2348, -63.2542, 16.2513, 0.52", "-59.4171, -62.9423, 16.6915, 1.18", "-59.4958, -62.9132, 16.7214, 1.18", "-60.3093, -62.5749, 16.9658, 1.55", "-61.0834, -62.222, 17.1431, 1.84", "-62.4081, -61.6131, 17.3808, 1.77", "-63.8394, -60.9728, 17.4799, 0.29", "-64.4435, -60.7064, 17.4585, 0.52", "-65.7578, -60.145, 17.2472, 0.52", "-66.3785, -59.8794, 17.0944, 0.81", "-66.8758, -59.6706, 16.9367, 0.81", "-68.1352, -59.1247, 16.4733, 0.37", "-68.2016, -59.0939, 16.4531, 0.37", "-69.4029, -58.4902, 16.3203, 0.37", "-70.4923, -57.9108, 16.4604, 0.74", "-71.2959, -57.4844, 16.6735, 1.18", "-71.8625, -57.194, 16.8823, 1.55", "-72.5851, -56.859, 17.2052, 1.77", "-73.2599, -56.5888, 17.4999, 1.77", "-74.2916, -56.2506, 17.939, 1.18", "-75.233, -55.9962, 18.2744, 0.74", "-75.9654, -55.8248, 18.5082, 0.52", "-76.753, -55.6753, 18.7263, 0.52", "-77.7331, -55.516, 18.9421, 0.81", "-78.2837, -55.4282, 19.039, 0.96", "-79.0983, -55.3104, 19.1497, 0.66", "-79.8291, -55.2099, 19.2306, 0.59", "-80.9498, -55.0732, 19.3095, 0.59", "-81.9725, -54.9813, 19.3635, 1.11", "-82.8914, -54.9301, 19.4172, 1.62", "-83.9228, -54.8976, 19.481, 1.4", "-84.0381, -54.8951, 19.4902, 1.4", "-85.5493, -54.8814, 19.6385, 0.81", "-86.6541, -54.868, 19.8178, 0.52", "-87.3145, -54.8402, 20.0054, 0.52", "-87.3962, -54.8326, 20.0392, 0.52", "-88.2684, -54.6397, 20.5376, 0.52", "-88.3283, -54.619, 20.5786, 0.52", "-89.0935, -54.1715, 21.2694, 1.11", "-89.6238, -53.7599, 21.7878, 1.11", "-89.7391, -53.6616, 21.9033, 1.11", "-90.2649, -53.1928, 22.4523, 0.88", "-90.3078, -53.1513, 22.4995, 0.88", "-90.8492, -52.6201, 23.027, 0.88", "-91.4336, -52.0831, 23.5211, 0.88", "-91.8385, -51.726, 23.8472, 1.18", "-91.9507, -51.6428, 23.9344, 1.18", "-92.8426, -51.1254, 24.5687, 1.62", "-94.0087, -50.6017, 25.3019, 0.66", "-95.2506, -50.2108, 25.9814, 0.37", "-95.3194, -50.1995, 26.0098, 0.37", "-96.6385, -50.1591, 26.3775, 0.37", "-97.5995, -50.2225, 26.4962, 0.66", "-98.4563, -50.3802, 26.4493, 0.66", "-98.5293, -50.3948, 26.4372, 0.66", "-99.6017, -50.4559, 26.2141, 0.37", "-99.7012, -50.4479, 26.1972, 0.37", "-100.957, -50.2105, 26.0037, 1.18", "-101.523, -50.0587, 25.9406, 1.69", "-102.666, -49.7054, 25.8599, 0.74", "-103.746, -49.3189, 25.7874, 0.52", "-104.813, -48.8908, 25.7348, 0.52", "-104.883, -48.8626, 25.7315, 0.52", "-105.619, -48.5765, 25.7326, 0.52", "-105.811, -48.5086, 25.7437, 0.52", "-106.79, -48.2265, 25.9178, 0.44", "-107.498, -48.0628, 26.1136, 0.37", "-108.548, -47.8508, 26.4748, 0.96", "-109.622, -47.6201, 26.8726, 1.55", "-110.462, -47.4475, 27.213, 1.4", "-111.728, -47.1441, 27.699, 0.44", "-112.828, -46.8529, 28.1086, 0.29", "-112.92, -46.8199, 28.1337, 0.29", "-113.883, -46.3574, 28.2559, 0.29", "-113.96, -46.3129, 28.2525, 0.29", "-115.097, -45.5579, 28.0681, 0.66", "-115.223, -45.4771, 28.0371, 0.66", "-116.187, -44.93, 27.8162, 1.25", "-116.701, -44.6675, 27.7131, 1.84", "-117.429, -44.3327, 27.5863, 1.84", "-117.982, -44.0817, 27.5089, 1.84", "-119.275, -43.5056, 27.3885, 0.66", "-120.19, -43.0701, 27.3446, 0.29", "-120.375, -42.985, 27.3457, 0.81", "-120.693, -42.8569, 27.3585, 0.81", "-121.271, -42.6684, 27.4033, 0.81", "-121.801, -42.556, 27.4585, 0.81", "-123.313, -42.379, 27.6446, 0.44", "-124.612, -42.3796, 27.8205, 0.44", "-125.667, -42.5033, 27.9763, 0.44", "-126.314, -42.6663, 28.0809, 0.74", "-127.174, -42.9844, 28.2305, 1.03", "-127.254, -43.0203, 28.2451, 1.03", "-128.127, -43.4673, 28.4101, 1.03", "-128.993, -43.8876, 28.5714, 0.66", "-130.1, -44.3559, 28.7702, 0.52", "-131.272, -44.7535, 29.0331, 0.66", "-132.154, -44.9891, 29.2608, 1.11", "-132.779, -45.0907, 29.4341, 1.47", "-133.589, -45.1078, 29.6681, 1.69", "-134.712, -45.0069, 29.9764, 1.11", "-136.006, -44.7499, 30.2856, 0.66", "-136.626, -44.5769, 30.4094, 0.29", "-137.865, -44.1571, 30.5167, 0.29", "-139.002, -43.764, 30.4159, 0.52", "-139.585, -43.6037, 30.2115, 0.96", "-140.376, -43.4779, 29.7526, 0.96", "-140.504, -43.472, 29.6721, 0.96", "-141.758, -43.5313, 28.9656, 0.74", "-142.922, -43.6591, 28.4976, 0.37", "-144.143, -43.7776, 28.2246, 0.44", "-145.261, -43.8226, 28.1953, 0.44", "-146.577, -43.7988, 28.3355, 0.37", "-147.927, -43.6838, 28.6077, 0.37", "-149.337, -43.4686, 29.023, 0.74", "-150.131, -43.2887, 29.289, 1.11", "-151.04, -43.0299, 29.5829, 1.4", "-151.968, -42.7323, 29.8119, 1.77", "-152.469, -42.5501, 29.8658, 1.99", "-153.502, -42.1118, 29.8768, 1.33", "-154.275, -41.768, 29.7682, 0.81", "-154.893, -41.4888, 29.6282, 0.81", "-156.531, -40.7454, 29.15, 0.29", "-157.713, -40.2325, 28.7961, 0.52", "-158.234, -40.0272, 28.6455, 0.52", "-159.61, -39.535, 28.2693, 0.44", "-160.485, -39.2726, 28.0694, 1.25", "-161.06, -39.1483, 27.9867, 1.84", "-162.257, -39.0164, 27.9216, 1.18", "-163.192, -38.9658, 27.9585, 0.88", "-163.759, -38.9564, 27.9989, 1.11", "-164.411, -38.9485, 28.0703, 1.11", "-165.63, -38.9344, 28.1703, 0.74", "-166.926, -38.9176, 28.243, 0.37", "-168.144, -38.8941, 28.2876, 1.11", "-168.973, -38.8769, 28.3086, 1.77", "-170.091, -38.8732, 28.2988, 1.55", "-171.913, -38.8592, 28.2301, 0.59", "-173.425, -38.8402, 28.1297, 0.52", "-173.71, -38.831, 28.1033, 1.18", "-174.558, -38.7902, 28.0074, 1.18", "-176.062, -38.6546, 27.82, 0.29", "-176.82, -38.555, 27.7004, 0.29", "-176.913, -38.5241, 27.6773, 0.29", "-177.452, -38.1739, 27.4592, 0.74", "-177.583, -38.0734, 27.3892, 0.74", "-177.819, -37.8767, 27.2486, 0.74", "-177.901, -37.8343, 27.2067, 0.74", "-179.115, -37.6036, 26.714, 0.44", "-179.825, -37.5748, 26.4914, 1.03", "-180.809, -37.6187, 26.2194, 1.47", "-181.444, -37.6732, 26.0697, 1.47", "-183.414, -37.9541, 25.764, 0.59", "-184.393, -38.1299, 25.6814, 0.37", "-185.293, -38.3202, 25.6714, 1.11", "-186.017, -38.468, 25.6988, 1.62", "-186.746, -38.5965, 25.7697, 1.62", "-188.56, -38.8856, 26.011, 0.44", "-189.285, -38.9865, 26.1404, 0.81", "-190.003, -39.1112, 26.2839, 0.81", "-190.797, -39.307, 26.442, 0.52", "-191.897, -39.686, 26.6664, 0.29", "-192.561, -39.9708, 26.7835, 0.88", "-193.094, -40.2186, 26.8542, 1.11", "-193.7, -40.4819, 26.9205, 1.11", "-194.707, -40.8464, 27.0048, 0.52", "-195.513, -40.9939, 27.0739, 0.44", "-196.236, -40.9683, 27.1589, 0.44", "-197.209, -40.7559, 27.3116, 0.74", "-198.139, -40.4449, 27.4858, 0.37", "-198.842, -40.1419, 27.6624, 0.37", "-200.066, -39.5416, 28.032, 1.25", "-200.944, -39.0903, 28.311, 2.14", "-201.412, -38.854, 28.4666, 2.28", "-202.054, -38.5421, 28.6857, 2.06", "-204.127, -37.5785, 29.3, 0.44", "-205.014, -37.1553, 29.5122, 0.37", "-205.532, -36.899, 29.6013, 0.74", "-205.968, -36.6604, 29.65, 1.18", "-206.359, -36.4014, 29.6697, 1.18", "-207.452, -35.4191, 29.6865, 0.37", "-207.979, -34.7831, 29.6628, 0.37", "-208.091, -34.6408, 29.6684, 0.37", "-208.471, -34.1975, 29.7335, 0.66", "-209.346, -33.3355, 29.9616, 0.66", "-210.303, -32.542, 30.3188, 0.29", "-210.91, -32.1545, 30.5916, 0.29", "-211.924, -31.7404, 31.1186, 0.66", "-212.792, -31.4958, 31.5992, 0.66", "-213.944, -31.2942, 32.32, 1.47", "-214.701, -31.2139, 32.8107, 1.99", "-215.498, -31.1457, 33.3201, 1.62", "-217.457, -30.9244, 34.6052, 0.59", "-217.53, -30.9119, 34.6532, 0.59", "-219.143, -30.5755, 35.7457, 0.44", "-219.936, -30.3822, 36.2549, 0.37", "-220.574, -30.1798, 36.6405, 0.37", "-221.317, -29.8559, 37.0609, 0.66", "-222.152, -29.4011, 37.462, 0.66", "-222.275, -29.3296, 37.545, 0.66", "-223.007, -28.8955, 38.0304, 0.52", "-223.895, -28.3808, 38.6681, 1.03", "-224.725, -27.9251, 39.2434, 1.4", "-224.954, -27.8063, 39.3924, 1.4", "-227.408, -26.4294, 41.1436, 0.52", "-229.019, -25.4327, 42.3627, 0.88", "-229.08, -25.3819, 42.4262, 0.88", "-229.517, -24.5669, 43.4629, 0.37", "-229.551, -24.293, 43.8314, 0.29", "-229.5, -23.2454, 45.2291, 0.52", "-229.488, -23.168, 45.3293, 0.52", "-229.38, -22.0071, 46.8941, 0.81", "-229.299, -20.7587, 48.6034, 0.66", "-229.254, -19.8984, 49.8091, 0.29", "-229.258, -19.854, 49.8709, 0.29", "-229.454, -19.3583, 50.5241, 0.29", "-229.882, -18.7607, 51.2593, 0.59", "-229.953, -18.7217, 51.297, 0.59", "-230.275, -18.6197, 51.3573, 0.81", "-230.371, -18.5913, 51.3653, 0.81", "-230.64, -18.4906, 51.3887, 0.81", "-231.128, -18.2462, 51.4292, 0.52", "-231.991, -17.6863, 51.4874, 0.29", "-232.144, -17.5658, 51.4954, 0.29", "-232.535, -17.1779, 51.4664, 0.37", "-232.924, -16.7036, 51.4613, 0.37", "-233.189, -16.3196, 51.4692, 0.74", "-233.544, -15.7167, 51.4787, 1.03", "-233.816, -15.2083, 51.4856, 0.88", "-234.556, -13.8116, 51.5104, 0.29", "-235.255, -12.4399, 51.5372, 0.29", "-235.618, -11.6958, 51.5485, 0.29", "-236.09, -10.7484, 51.4853, 0.96", "-236.365, -10.2215, 51.3988, 1.25", "-236.421, -10.1385, 51.3712, 1.25", "-236.716, -9.82245, 51.2048, 1.25", "-236.826, -9.73714, 51.1407, 1.25", "-238.375, -8.93258, 50.275, 0.37", "-239.246, -8.58899, 49.7533, 0.29", "-240.604, -8.08448, 48.9107, 0.29", "-241.51, -7.73699, 48.3197, 0.66", "-242.1, -7.50522, 47.9241, 0.96", "-243.343, -6.93806, 46.9974, 1.25", "-244.67, -6.25953, 45.8611, 0.44", "-245.143, -6.00205, 45.4117, 0.66", "-245.743, -5.6608, 44.7995, 0.66", "-245.978, -5.53656, 44.5469, 0.66", "-247.114, -5.04116, 43.3526, 0.37", "-248.067, -4.70202, 42.4578, 0.37", "-249.144, -5.0778, 42.1197, 0.22", "-250.263, -5.80044, 42.2439, 0.29", "-250.78, -6.08965, 42.3898, 0.59", "-251.252, -6.3364, 42.5753, 0.59", "-252.834, -7.07135, 43.3689, 0.29", "-253.454, -7.28346, 43.6992, 0.29", "-254.4, -7.44865, 44.152, 0.29", "-256.175, -7.44846, 44.7229, 0.29", "-256.262, -7.43799, 44.7395, 0.29", "-256.983, -7.26607, 44.787, 1.11", "-257.654, -7.01092, 44.708, 1.33", "-257.744, -6.96817, 44.6888, 1.33", "-259.443, -5.99843, 44.1805, 0.29", "-260.098, -5.56775, 43.94, 0.66", "-260.834, -5.07542, 43.6691, 0.88", "-262.347, -4.10298, 43.087, 0.29", "-262.421, -4.05986, 43.061, 0.29", "-263.108, -3.74533, 42.8376, 0.29", "-263.46, -3.65251, 42.7358, 0.74", "-264.09, -3.56718, 42.5732, 0.74", "-265.495, -3.49242, 42.2539, 0.29", "-266.759, -3.52293, 41.9861, 0.44", "-268.306, -3.59487, 41.6496, 1.03", "-270.067, -3.70818, 41.2726, 1.84", "-270.602, -3.74149, 41.1385, 1.84", "-270.7, -3.74723, 41.1123, 1.84", "-272.613, -3.86146, 40.5914, 0.44", "-273.424, -3.90649, 40.3616, 0.74", "-274.316, -3.94459, 40.1015, 0.59", "-276.28, -3.99133, 39.4913, 0.52", "-276.883, -4.03644, 39.2777, 0.81", "-276.965, -4.04512, 39.2468, 0.81", "-277.462, -4.11594, 39.0463, 1.18", "-279.207, -4.43432, 38.3212, 0.29", "-279.829, -4.5733, 38.0658, 0.59", "-281.313, -4.98572, 37.5369, 0.22", "-281.739, -5.11693, 37.3847, 0.59", "-282.88, -5.48278, 36.9697, 0.22", "-282.991, -5.52153, 36.9289, 0.22", "-283.175, -5.5901, 36.872, 0.44", "-283.775, -5.7982, 36.6931, 0.22", "-284.019, -5.84945, 36.6682, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-39.6836, -62.764, 6.81746, 1.55", "-39.9631, -64.9814, 6.49979, 1.55", "-40.0924, -66.2133, 6.25587, 1.03", "-40.1946, -67.9869, 5.82071, 0.66", "-40.187, -69.9503, 5.28976, 0.66", "-40.0306, -72.2689, 4.65528, 0.52", "-39.7948, -74.1094, 4.16248, 0.52", "-39.777, -74.1868, 4.13835, 0.52", "-39.4188, -75.2008, 3.81512, 0.52", "-38.8258, -76.3781, 3.47458, 0.52", "-38.0227, -77.7172, 3.19342, 1.69", "-37.3583, -78.8175, 3.08585, 2.21", "-36.9716, -79.5811, 3.03807, 2.5", "-36.5308, -80.6372, 2.98046, 2.5", "-36.0418, -82.2789, 2.86621, 1.69", "-35.7695, -83.9134, 2.68847, 1.03", "-35.7047, -85.54, 2.44176, 0.96", "-35.9056, -87.2561, 2.05651, 0.74", "-36.2738, -88.4861, 1.68148, 0.52", "-37.0675, -89.9613, 1.06534, 0.44", "-37.9867, -90.8603, 0.466792, 0.44", "-38.1268, -90.9321, 0.392435, 0.44", "-39.3882, -91.2877, -0.192135, 1.4", "-39.847, -91.3644, -0.356031, 1.4", "-39.9985, -91.3893, -0.399759, 1.4", "-41.9094, -91.7852, -0.770626, 0.52", "-43.6048, -92.267, -0.997984, 0.44", "-43.6905, -92.3041, -1.00662, 0.44", "-45.3023, -93.3659, -1.09867, 1.69", "-46.0429, -94.0806, -1.13593, 2.06", "-46.3448, -94.5169, -1.12402, 2.14", "-46.6859, -95.2788, -1.06247, 2.14", "-47.2416, -96.9928, -0.862986, 0.81", "-47.5855, -98.276, -0.664415, 0.52", "-47.8549, -99.5492, -0.40989, 0.44", "-48.2195, -101.09, -0.00334744, 0.44", "-48.2608, -101.257, 0.0522089, 0.44", "-48.5072, -102.124, 0.448546, 0.44", "-48.5353, -102.202, 0.497871, 0.44", "-48.8453, -102.835, 1.01304, 0.37", "-49.1254, -103.424, 1.49972, 0.37", "-49.1515, -103.502, 1.55185, 0.37", "-49.3417, -104.542, 2.18648, 0.29", "-49.3561, -104.687, 2.26701, 0.29", "-49.4635, -105.923, 2.91442, 1.4", "-49.5396, -107.037, 3.45688, 1.92", "-49.6475, -108.084, 3.92463, 0.88", "-49.8694, -109.359, 4.43923, 0.29", "-50.0527, -110.078, 4.68778, 0.29", "-50.3785, -111.022, 4.92, 0.29", "-50.6838, -111.781, 5.0289, 1.11", "-51.1139, -112.779, 5.08241, 1.33", "-51.4613, -113.573, 5.05097, 1.4", "-51.8619, -114.478, 4.9415, 1.11", "-52.5849, -116.089, 4.69331, 0.37", "-53.1976, -117.381, 4.43793, 0.29", "-53.8315, -118.455, 4.14601, 0.29", "-54.3399, -119.104, 3.9327, 0.29", "-54.7486, -119.536, 3.77359, 0.96", "-55.3134, -120.057, 3.54961, 1.18", "-56.006, -120.648, 3.27891, 1.18", "-57.539, -122.058, 2.6057, 0.44", "-58.5402, -123.06, 2.13627, 0.29", "-59.1552, -123.784, 1.80112, 0.44", "-60.1502, -125.318, 1.00299, 1.55", "-60.6923, -126.423, 0.420443, 1.69", "-61.3509, -128.173, -0.461581, 0.37", "-61.3803, -128.27, -0.506538, 0.37", "-61.5405, -128.831, -0.749703, 1.11", "-62.2983, -131.232, -1.66321, 0.29", "-62.6636, -132.429, -2.03165, 0.44", "-63.0465, -133.722, -2.36687, 0.81", "-63.3945, -134.953, -2.62596, 1.55", "-63.6115, -135.856, -2.80201, 1.55", "-63.955, -137.853, -3.18383, 0.59", "-64.0867, -139.271, -3.41103, 0.66", "-64.0842, -139.969, -3.56018, 1.11", "-64.006, -140.993, -3.81147, 0.96", "-63.7992, -142.669, -4.2916, 0.29", "-63.544, -144.329, -4.80276, 0.29", "-63.3593, -145.396, -5.14442, 1.18", "-63.1679, -146.626, -5.54681, 1.47", "-63.1141, -147.131, -5.71061, 1.69", "-63.0543, -148.698, -6.19759, 0.96", "-63.1198, -150.409, -6.65356, 0.52", "-63.2911, -152.005, -7.02838, 0.52", "-63.3853, -152.672, -7.1721, 0.29", "-63.5551, -153.666, -7.33317, 0.29", "-63.7235, -154.589, -7.44837, 0.29", "-63.8582, -155.285, -7.51052, 1.03", "-63.9774, -155.884, -7.5621, 1.55", "-64.1132, -156.677, -7.64443, 1.77", "-64.2404, -157.68, -7.76216, 1.25", "-64.3505, -159.012, -7.92864, 0.74", "-64.463, -160.781, -8.17416, 0.44", "-64.5093, -161.753, -8.32016, 0.74", "-64.5648, -163.113, -8.53633, 0.29", "-64.6112, -163.91, -8.66479, 1.11", "-64.6954, -164.749, -8.78804, 1.33", "-64.8758, -165.931, -8.91997, 0.81", "-65.0682, -166.892, -8.98563, 0.37", "-65.3262, -168.139, -9.02983, 0.37", "-65.5455, -169.205, -9.03305, 0.29", "-65.7748, -170.347, -9.04841, 0.29", "-65.9521, -171.287, -9.06279, 0.29", "-65.9812, -171.495, -9.07256, 0.29", "-66.1161, -172.85, -9.23777, 0.29", "-66.1834, -173.964, -9.44406, 1.47", "-66.2309, -174.973, -9.67518, 2.06", "-66.2764, -175.589, -9.79781, 2.06", "-66.5231, -177.115, -10.0258, 0.88", "-66.9739, -178.885, -10.1771, 0.29", "-67.1744, -179.47, -10.1906, 0.52", "-67.551, -180.45, -10.1512, 0.52", "-68.2556, -182.288, -10.0776, 0.29", "-68.7359, -183.652, -10.0319, 0.29", "-69.2194, -185.227, -9.95986, 1.03", "-69.4358, -186.124, -9.92856, 1.4", "-69.5645, -186.844, -9.92767, 1.4", "-69.8698, -189.367, -10.0309, 0.52", "-69.9647, -190.558, -10.1345, 0.44", "-70.0292, -191.993, -10.2467, 1.47", "-70.0478, -192.606, -10.2879, 1.55", "-70.0686, -193.624, -10.3379, 1.18", "-70.0915, -195.046, -10.366, 0.59", "-70.1128, -196.505, -10.3602, 0.29", "-70.161, -197.957, -10.4515, 0.29", "-70.2255, -198.886, -10.5564, 0.88", "-70.33, -199.722, -10.676, 1.18", "-70.4689, -200.411, -10.7931, 1.03", "-70.9274, -201.99, -11.0723, 0.44", "-71.6107, -203.801, -11.3613, 0.29", "-72.082, -204.825, -11.4875, 0.29", "-72.5975, -205.867, -11.5826, 0.29", "-73.4667, -207.689, -11.7012, 1.18", "-74.0007, -208.859, -11.7352, 1.69", "-74.4326, -209.854, -11.7123, 1.69", "-75.0015, -211.295, -11.6304, 0.96", "-75.5374, -212.814, -11.569, 0.37", "-75.9614, -214.014, -11.5394, 0.37", "-76.2912, -214.859, -11.5297, 0.37", "-76.75, -215.963, -11.5223, 1.33", "-77.1381, -216.862, -11.5171, 1.47", "-77.7506, -218.268, -11.5041, 0.81", "-78.3198, -219.596, -11.4698, 0.44", "-78.804, -220.869, -11.4355, 0.29", "-79.1141, -221.912, -11.4027, 0.29", "-79.2447, -222.502, -11.3756, 0.66", "-79.383, -223.299, -11.3185, 0.66", "-79.4961, -224.208, -11.2097, 0.66", "-79.6009, -225.477, -11.0322, 0.29", "-79.6331, -226.611, -10.8762, 0.52", "-79.6542, -227.882, -10.6823, 1.18", "-79.6629, -228.788, -10.5276, 1.55", "-79.6651, -229.841, -10.3332, 1.03", "-79.6373, -231.462, -10.022, 0.37", "-79.5482, -232.808, -9.73096, 0.29", "-79.4258, -233.926, -9.4682, 0.81", "-79.3401, -234.582, -9.30764, 1.18", "-79.2746, -235.064, -9.18653, 1.18", "-79.1734, -235.951, -8.9613, 0.88", "-79.0545, -237.685, -8.49687, 0.29", "-79.0407, -238.57, -8.26651, 0.29", "-79.0394, -239.592, -8.04105, 0.96", "-79.0411, -239.702, -8.01866, 0.96", "-79.0492, -240.099, -7.94353, 1.33", "-79.0674, -240.706, -7.84557, 1.62", "-79.0762, -241.249, -7.77903, 1.77", "-79.0642, -242.36, -7.65278, 0.96", "-79.0443, -243.374, -7.53832, 0.59", "-79.001, -244.724, -7.43615, 0.29", "-78.9414, -246.05, -7.40072, 0.22", "-78.914, -247.052, -7.40478, 1.03", "-78.9278, -247.684, -7.4204, 1.62", "-78.9774, -248.299, -7.4479, 1.84", "-79.2136, -250.044, -7.55339, 0.44", "-79.5099, -251.467, -7.65483, 0.37", "-79.7677, -252.372, -7.70548, 0.29", "-80.1456, -253.446, -7.73443, 0.29", "-80.5438, -254.464, -7.72573, 0.29", "-80.9467, -255.401, -7.6719, 0.29", "-81.2261, -255.992, -7.60278, 1.18", "-81.5689, -256.739, -7.504, 1.55", "-81.8352, -257.405, -7.42559, 1.18", "-82.1846, -258.376, -7.32031, 0.52", "-82.5326, -259.301, -7.21965, 0.29", "-83.1188, -260.761, -6.97101, 0.29", "-83.5385, -261.725, -6.75653, 0.29", "-83.7896, -262.243, -6.60592, 1.18", "-84.0541, -262.763, -6.42925, 1.84", "-84.3469, -263.319, -6.21551, 1.99", "-85.3308, -265.177, -5.44054, 0.29", "-86.0417, -266.523, -4.8394, 0.29", "-86.5851, -267.568, -4.37719, 0.29", "-86.9191, -268.241, -4.09866, 0.29", "-87.2382, -268.898, -3.83648, 0.81", "-87.3601, -269.159, -3.73951, 1.11", "-87.5256, -269.507, -3.6285, 1.25", "-88.099, -270.676, -3.24459, 0.29", "-88.6373, -271.509, -2.95289, 0.29", "-89.4385, -272.433, -2.56943, 0.22", "-89.5316, -272.524, -2.52907, 0.52", "-89.9677, -272.903, -2.32921, 0.66", "-90.2596, -273.128, -2.19283, 0.66", "-91.2115, -273.741, -1.76202, 0.22", "-92.0332, -274.227, -1.39876, 0.22", "-92.777, -274.714, -1.08025, 0.22", "-93.4585, -275.232, -0.763085, 0.96", "-93.7481, -275.514, -0.604861, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-57.4925, -191.663, 7.27843, 0.22", "-58.055, -192.535, 7.48332, 0.22", "-58.2452, -192.823, 7.543, 0.66", "-58.8119, -193.681, 7.70699, 0.22", "-58.9137, -193.838, 7.73547, 0.52", "-59.4236, -194.627, 7.87414, 0.15", "-59.851, -195.304, 7.98959, 0.44", "-60.1907, -195.846, 8.05691, 0.15", "-60.4171, -196.24, 8.09772, 0.44", "-60.5693, -196.548, 8.11641, 0.44", "-60.6, -196.616, 8.11469, 0.44", "-60.7831, -197.061, 8.07837, 0.15", "-60.8791, -197.331, 8.04905, 0.66", "-61.2217, -198.42, 7.91981, 0.15", "-61.4386, -199.147, 7.83369, 1.25", "-61.8367, -200.497, 7.66295, 0.15", "-61.9854, -201.012, 7.59489, 0.44", "-62.079, -201.34, 7.54774, 0.44", "-62.2084, -201.817, 7.47776, 0.22", "-62.3111, -202.264, 7.41769, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-57.4925, -191.663, 7.27843, 0.29", "-57.8649, -191.61, 6.76787, 0.29", "-58.2936, -191.55, 6.18015, 0.22", "-58.5554, -191.513, 5.82128, 0.52", "-58.8774, -191.468, 5.37992, 0.15", "-59.1505, -191.429, 5.00547, 0.74" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-25.2405, -120.74, 33.4736, 0.37", "-25.8554, -122.908, 33.4203, 0.37", "-26.3619, -123.928, 33.4293, 0.37", "-27.0218, -124.912, 33.4576, 0.29", "-27.9098, -126.236, 33.4957, 0.29", "-28.5714, -127.222, 33.5241, 0.29", "-28.6184, -127.292, 33.5261, 0.29", "-29.5288, -128.008, 33.669, 0.96", "-30.0127, -128.258, 33.7291, 0.96", "-34.9621, -139.027, 35.6089, 0.96", "-39.8787, -149.994, 35.6824, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-25.2405, -120.74, 33.4736, 0.88", "-25.8062, -121.201, 33.8203, 0.88", "-26.4735, -121.707, 34.237, 0.59", "-27.0896, -122.188, 34.66, 0.59", "-27.6099, -122.656, 35.0328, 0.29", "-27.9975, -123.066, 35.3174, 0.29", "-28.0899, -123.177, 35.3863, 0.59", "-28.2099, -123.377, 35.4882, 0.59", "-28.3847, -124.144, 35.7112, 0.29", "-28.3685, -124.897, 35.7903, 0.29", "-28.2756, -125.447, 35.7772, 0.29", "-28.2197, -125.671, 35.758, 0.29", "-28.0855, -126.12, 35.6849, 0.29", "-27.7633, -127.016, 35.4862, 0.44", "-27.7152, -127.124, 35.451, 0.44", "-27.5908, -127.374, 35.3639, 0.81", "-27.5694, -127.414, 35.3491, 0.81", "-27.28, -127.899, 35.1444, 0.81", "-30.8063, -134.92, 36.2832, 0.81", "-34.7116, -141.831, 36.3141, 0.81", "-38.6629, -148.554, 37.6723, 0.81", "-43.0899, -154.827, 39.4507, 0.81", "-45.9973, -162.017, 41.1798, 0.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-93.7481, -275.514, -0.604861, 0.29", "-93.7519, -276.583, -0.603989, 0.29", "-93.721, -277.162, -0.641121, 0.29", "-93.6974, -277.494, -0.669009, 1.03", "-93.6789, -277.822, -0.694774, 1.18", "-93.6587, -278.24, -0.726144, 1.18", "-93.5931, -279.5, -0.817338, 0.22", "-93.5249, -280.149, -0.89489, 0.22", "-93.5085, -280.273, -0.910566, 0.37", "-93.3915, -281.123, -1.01373, 0.22", "-93.383, -281.195, -1.02151, 0.22", "-93.3232, -281.748, -1.06754, 0.22", "-93.2975, -282.034, -1.0665, 0.66", "-93.2891, -282.097, -1.06716, 0.66", "-93.2422, -282.334, -1.07447, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-93.7481, -275.514, -0.604861, 0.22", "-94.4484, -274.171, -0.210006, 0.22", "-94.7607, -273.537, -0.025371, 1.11", "-95.0314, -272.964, 0.138944, 1.25", "-95.0683, -272.886, 0.161317, 1.25", "-95.8104, -271.356, 0.604118, 0.22", "-95.8449, -271.291, 0.624257, 0.22", "-95.9764, -271.048, 0.703903, 0.22", "-96.0232, -270.963, 0.73261, 0.22", "-96.3368, -270.425, 0.922444, 0.81", "-96.5541, -270.098, 1.04545, 0.81", "-97.1145, -269.486, 1.31393, 0.22", "-97.5688, -269.011, 1.52523, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_59", "dend_46", "dend_43", "dend_40", "dend_39", "dend_30", "dend_29", "dend_28", "dend_21", "dend_0", "dend_61", "dend_60", "dend_58", "dend_47", "dend_45", "dend_44", "dend_42", "dend_41", "dend_38", "dend_31", "dend_23", "dend_22", "dend_2", "dend_1", "dend_51", "dend_48", "dend_33", "dend_32", "dend_25", "dend_24", "dend_18", "dend_3", "dend_53", "dend_52", "dend_50", "dend_49", "dend_37", "dend_34", "dend_27", "dend_26", "dend_20", "dend_19", "dend_9", "dend_4", "dend_55", "dend_54", "dend_36", "dend_35", "dend_13", "dend_10", "dend_6", "dend_5", "dend_57", "dend_56", "dend_17", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_59", "dend_46", "dend_43", "dend_40", "dend_39", "dend_30", "dend_29", "dend_28", "dend_21", "dend_0", "dend_61", "dend_60", "dend_58", "dend_47", "dend_45", "dend_44", "dend_42", "dend_41", "dend_38", "dend_31", "dend_23", "dend_22", "dend_2", "dend_1", "dend_51", "dend_48", "dend_33", "dend_32", "dend_25", "dend_24", "dend_18", "dend_3", "dend_53", "dend_52", "dend_50", "dend_49", "dend_37", "dend_34", "dend_27", "dend_26", "dend_20", "dend_19", "dend_9", "dend_4", "dend_55", "dend_54", "dend_36", "dend_35", "dend_13", "dend_10", "dend_6", "dend_5", "dend_57", "dend_56", "dend_17", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_59", "dend_46", "dend_43", "dend_40", "dend_39", "dend_30", "dend_29", "dend_28", "dend_21", "dend_0", "axon_0", "dend_61", "dend_60", "dend_58", "dend_47", "dend_45", "dend_44", "dend_42", "dend_41", "dend_38", "dend_31", "dend_23", "dend_22", "dend_2", "dend_1", "axon_1", "dend_51", "dend_48", "dend_33", "dend_32", "dend_25", "dend_24", "dend_18", "dend_3", "dend_53", "dend_52", "dend_50", "dend_49", "dend_37", "dend_34", "dend_27", "dend_26", "dend_20", "dend_19", "dend_9", "dend_4", "dend_55", "dend_54", "dend_36", "dend_35", "dend_13", "dend_10", "dend_6", "dend_5", "dend_57", "dend_56", "dend_17", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_59", "dend_59", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_LBC_fece30537a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_59, id: dend_59, parent: soma_0
create dend_59
public dend_59
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_58, id: dend_58, parent: dend_46
create dend_58
public dend_58
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_2
create dend_18
public dend_18
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_59, dend_46, dend_43, dend_40, dend_39, dend_30, dend_29, dend_28, dend_21, dend_0, dend_61, dend_60, dend_58, dend_47, dend_45, dend_44, dend_42, dend_41, dend_38, dend_31, dend_23, dend_22, dend_2, dend_1, dend_51, dend_48, dend_33, dend_32, dend_25, dend_24, dend_18, dend_3, dend_53, dend_52, dend_50, dend_49, dend_37, dend_34, dend_27, dend_26, dend_20, dend_19, dend_9, dend_4, dend_55, dend_54, dend_36, dend_35, dend_13, dend_10, dend_6, dend_5, dend_57, dend_56, dend_17, dend_14, dend_12, dend_11, dend_8, dend_7, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_59, dend_46, dend_43, dend_40, dend_39, dend_30, dend_29, dend_28, dend_21, dend_0, dend_61, dend_60, dend_58, dend_47, dend_45, dend_44, dend_42, dend_41, dend_38, dend_31, dend_23, dend_22, dend_2, dend_1, dend_51, dend_48, dend_33, dend_32, dend_25, dend_24, dend_18, dend_3, dend_53, dend_52, dend_50, dend_49, dend_37, dend_34, dend_27, dend_26, dend_20, dend_19, dend_9, dend_4, dend_55, dend_54, dend_36, dend_35, dend_13, dend_10, dend_6, dend_5, dend_57, dend_56, dend_17, dend_14, dend_12, dend_11, dend_8, dend_7, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_59, dend_46, dend_43, dend_40, dend_39, dend_30, dend_29, dend_28, dend_21, dend_0, axon_0, dend_61, dend_60, dend_58, dend_47, dend_45, dend_44, dend_42, dend_41, dend_38, dend_31, dend_23, dend_22, dend_2, dend_1, axon_1, dend_51, dend_48, dend_33, dend_32, dend_25, dend_24, dend_18, dend_3, dend_53, dend_52, dend_50, dend_49, dend_37, dend_34, dend_27, dend_26, dend_20, dend_19, dend_9, dend_4, dend_55, dend_54, dend_36, dend_35, dend_13, dend_10, dend_6, dend_5, dend_57, dend_56, dend_17, dend_14, dend_12, dend_11, dend_8, dend_7, dend_16, dend_15]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_59, dend_59, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_59(0), soma_0(0.4999998321236409)
    connect dend_46(0), soma_0(0.4999998321236409)
    connect dend_43(0), soma_0(0.4999998321236409)
    connect dend_40(0), soma_0(0.4999998321236409)
    connect dend_39(0), soma_0(0.4999998321236409)
    connect dend_30(0), soma_0(0.4999998321236409)
    connect dend_29(0), soma_0(0.4999998321236409)
    connect dend_28(0), soma_0(0.4999998321236409)
    connect dend_21(0), soma_0(0.4999998321236409)
    connect dend_0(0), soma_0(0.4999998321236409)
    connect axon_0(0), soma_0(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_58(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.590925, 11.8388, 0.583371, 4.09309 ) }
    soma_0 { pt3dadd( -0.499792, 10.635, 0.506458, 6.93288 ) }
    soma_0 { pt3dadd( -0.40866, 9.43111, 0.429545, 11.0621 ) }
    soma_0 { pt3dadd( -0.317527, 8.22727, 0.352632, 13.312 ) }
    soma_0 { pt3dadd( -0.226395, 7.02342, 0.275719, 15.0574 ) }
    soma_0 { pt3dadd( -0.135262, 5.81958, 0.198806, 15.7423 ) }
    soma_0 { pt3dadd( -0.0441295, 4.61573, 0.121893, 16.0301 ) }
    soma_0 { pt3dadd( 0.0470031, 3.41189, 0.0449796, 16.2674 ) }
    soma_0 { pt3dadd( 0.138136, 2.20804, -0.0319334, 16.5571 ) }
    soma_0 { pt3dadd( 0.229268, 1.0042, -0.108846, 16.6041 ) }
    soma_0 { pt3dadd( 0.320401, -0.199646, -0.18576, 16.1727 ) }
    soma_0 { pt3dadd( 0.411533, -1.40349, -0.262673, 15.6872 ) }
    soma_0 { pt3dadd( 0.502666, -2.60734, -0.339586, 14.7845 ) }
    soma_0 { pt3dadd( 0.593799, -3.81118, -0.416499, 13.704 ) }
    soma_0 { pt3dadd( 0.684931, -5.01503, -0.493412, 12.4251 ) }
    soma_0 { pt3dadd( 0.776064, -6.21887, -0.570325, 11.0595 ) }
    soma_0 { pt3dadd( 0.867196, -7.42271, -0.647238, 9.34375 ) }
    soma_0 { pt3dadd( 0.958329, -8.62656, -0.724151, 7.38881 ) }
    soma_0 { pt3dadd( 1.04946, -9.8304, -0.801064, 5.96404 ) }
    soma_0 { pt3dadd( 1.14059, -11.0342, -0.877977, 4.44305 ) }
    soma_0 { pt3dadd( 1.23173, -12.2381, -0.95489, 2.74669 ) }
    // Section: dend_59, id: dend_59, parent: soma_0 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 0.199429, 5.54716, -20.411, 1.25 ) }
    dend_59 { pt3dadd( 0.199429, 5.54716, -20.411, 1.25 ) }
    dend_59 { pt3dadd( -0.74753, 6.13951, -20.411, 1.77 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 4.00943, -0.952345, -23.221, 1.99 ) }
    dend_46 { pt3dadd( 5.23349, -1.96611, -22.7771, 1.99 ) }
    dend_46 { pt3dadd( 6.59972, -3.09762, -22.2815, 2.06 ) }
    dend_46 { pt3dadd( 8.29364, -4.50052, -21.6672, 2.36 ) }
    dend_46 { pt3dadd( 9.33802, -5.36548, -21.2884, 2.58 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 29/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.81943, 8.11966, -14.791, 1.33 ) }
    dend_43 { pt3dadd( 3.15503, 8.73191, -14.791, 1.33 ) }
    dend_43 { pt3dadd( 3.27925, 8.94509, -14.791, 1.33 ) }
    dend_43 { pt3dadd( 3.75605, 9.71891, -14.791, 1.33 ) }
    dend_43 { pt3dadd( 4.6041, 11.1644, -14.7753, 1.55 ) }
    dend_43 { pt3dadd( 4.65507, 11.2536, -14.7739, 1.55 ) }
    dend_43 { pt3dadd( 5.21157, 12.3013, -14.7553, 1.55 ) }
    dend_43 { pt3dadd( 5.26178, 12.408, -14.7532, 1.55 ) }
    dend_43 { pt3dadd( 5.7859, 13.7176, -14.5223, 1.69 ) }
    dend_43 { pt3dadd( 6.15905, 14.84, -14.1638, 1.69 ) }
    dend_43 { pt3dadd( 6.17825, 14.9138, -14.1306, 1.69 ) }
    dend_43 { pt3dadd( 6.34309, 15.6595, -13.7613, 1.55 ) }
    dend_43 { pt3dadd( 6.57786, 17.1614, -12.8939, 1.77 ) }
    dend_43 { pt3dadd( 6.88472, 19.7124, -11.1952, 1.47 ) }
    dend_43 { pt3dadd( 6.88924, 19.8056, -11.1143, 1.47 ) }
    dend_43 { pt3dadd( 6.8938, 19.953, -10.9528, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 45/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -7.34057, 6.61816, -4.97108, 1.84 ) }
    dend_40 { pt3dadd( -7.34057, 6.61816, -4.97108, 1.84 ) }
    dend_40 { pt3dadd( -7.74298, 7.15502, -4.97108, 1.77 ) }
    dend_40 { pt3dadd( -8.34089, 7.95459, -4.97108, 1.77 ) }
    dend_40 { pt3dadd( -8.37332, 7.99938, -4.97108, 1.77 ) }
    dend_40 { pt3dadd( -8.80805, 8.61591, -4.97108, 1.47 ) }
    dend_40 { pt3dadd( -9.20156, 9.20859, -4.97108, 1.55 ) }
    dend_40 { pt3dadd( -9.58795, 9.83861, -4.97108, 1.92 ) }
    dend_40 { pt3dadd( -9.77974, 10.1678, -4.97108, 1.92 ) }
    dend_40 { pt3dadd( -10.0898, 10.7318, -4.97108, 1.77 ) }
    dend_40 { pt3dadd( -10.1465, 10.8366, -4.97108, 1.77 ) }
    dend_40 { pt3dadd( -10.5928, 11.655, -4.97108, 1.62 ) }
    dend_40 { pt3dadd( -11.0567, 12.506, -4.97108, 1.4 ) }
    dend_40 { pt3dadd( -11.4109, 13.1522, -4.97108, 1.4 ) }
    dend_40 { pt3dadd( -11.7229, 13.708, -4.97108, 1.47 ) }
    dend_40 { pt3dadd( -12.0766, 14.3071, -4.97108, 1.69 ) }
    dend_40 { pt3dadd( -12.7096, 15.3172, -4.97108, 2.14 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 62/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.74943, 8.53966, 6.46892, 1.4 ) }
    dend_39 { pt3dadd( 3.79664, 8.5797, 6.47764, 1.4 ) }
    dend_39 { pt3dadd( 4.58516, 9.12963, 6.54628, 1.18 ) }
    dend_39 { pt3dadd( 5.44275, 9.61721, 6.56795, 1.03 ) }
    dend_39 { pt3dadd( 6.38973, 9.98061, 6.51419, 0.88 ) }
    dend_39 { pt3dadd( 7.29587, 10.2617, 6.42644, 0.81 ) }
    dend_39 { pt3dadd( 7.61311, 10.3384, 6.40215, 0.81 ) }
    dend_39 { pt3dadd( 8.86445, 10.5359, 6.31056, 0.96 ) }
    dend_39 { pt3dadd( 9.56873, 10.5661, 6.33713, 0.96 ) }
    dend_39 { pt3dadd( 11.2029, 10.4315, 6.59801, 0.96 ) }
    dend_39 { pt3dadd( 11.314, 10.4025, 6.63979, 0.96 ) }
    dend_39 { pt3dadd( 12.5122, 9.98041, 7.42442, 0.96 ) }
    dend_39 { pt3dadd( 12.6256, 9.93581, 7.52117, 0.96 ) }
    dend_39 { pt3dadd( 14.0711, 9.35912, 9.07095, 1.47 ) }
    dend_39 { pt3dadd( 14.7154, 9.12042, 9.84066, 1.47 ) }
    dend_39 { pt3dadd( 15.9622, 8.76912, 11.3672, 0.66 ) }
    dend_39 { pt3dadd( 17.0501, 8.58178, 12.5615, 1.11 ) }
    dend_39 { pt3dadd( 17.1721, 8.57324, 12.6784, 1.11 ) }
    dend_39 { pt3dadd( 17.7025, 8.59178, 13.1002, 1.11 ) }
    dend_39 { pt3dadd( 18.7316, 8.77713, 13.7064, 0.81 ) }
    dend_39 { pt3dadd( 19.9396, 9.14858, 14.263, 0.66 ) }
    dend_39 { pt3dadd( 21.1341, 9.59001, 14.6579, 0.88 ) }
    dend_39 { pt3dadd( 21.7959, 9.81961, 14.8281, 0.88 ) }
    dend_39 { pt3dadd( 21.9529, 9.87151, 14.8657, 0.88 ) }
    dend_39 { pt3dadd( 22.8137, 10.1352, 15.0713, 1.11 ) }
    dend_39 { pt3dadd( 23.9589, 10.4941, 15.3402, 0.88 ) }
    dend_39 { pt3dadd( 24.8145, 10.7806, 15.5967, 0.81 ) }
    dend_39 { pt3dadd( 24.8769, 10.8064, 15.6212, 0.81 ) }
    dend_39 { pt3dadd( 25.6224, 11.1821, 15.9939, 1.03 ) }
    dend_39 { pt3dadd( 26.5039, 11.7931, 16.7049, 0.81 ) }
    dend_39 { pt3dadd( 26.5438, 11.8319, 16.7509, 0.81 ) }
    dend_39 { pt3dadd( 27.1919, 12.7273, 17.7747, 0.52 ) }
    dend_39 { pt3dadd( 27.6244, 13.5272, 18.6459, 1.03 ) }
    dend_39 { pt3dadd( 27.783, 13.9303, 19.0836, 1.25 ) }
    dend_39 { pt3dadd( 28.1826, 15.6871, 20.9777, 0.29 ) }
    dend_39 { pt3dadd( 28.2212, 16.1671, 21.4634, 0.29 ) }
    dend_39 { pt3dadd( 28.2217, 16.5953, 21.8811, 0.29 ) }
    dend_39 { pt3dadd( 28.2143, 16.6428, 21.921, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 28.0052, 17.4205, 22.481, 0.29 ) }
    dend_39 { pt3dadd( 27.9888, 17.4721, 22.5126, 0.29 ) }
    dend_39 { pt3dadd( 27.7059, 18.0579, 22.7572, 0.29 ) }
    dend_39 { pt3dadd( 27.6721, 18.1173, 22.7846, 0.29 ) }
    dend_39 { pt3dadd( 27.2656, 18.8467, 23.1171, 0.29 ) }
    dend_39 { pt3dadd( 27.0738, 19.2235, 23.2703, 0.44 ) }
    dend_39 { pt3dadd( 26.4681, 20.5511, 23.7563, 0.29 ) }
    dend_39 { pt3dadd( 25.9845, 21.5331, 24.0878, 0.22 ) }
    dend_39 { pt3dadd( 25.8012, 21.8669, 24.2029, 0.22 ) }
    dend_39 { pt3dadd( 25.7031, 22.0617, 24.2766, 0.22 ) }
    dend_39 { pt3dadd( 25.4606, 22.5894, 24.4881, 0.22 ) }
    dend_39 { pt3dadd( 25.4368, 22.656, 24.5109, 0.22 ) }
    dend_39 { pt3dadd( 25.2417, 23.4796, 24.7309, 0.22 ) }
    dend_39 { pt3dadd( 25.2207, 23.6724, 24.7847, 0.22 ) }
    dend_39 { pt3dadd( 25.1339, 25.1869, 25.2145, 0.22 ) }
    dend_39 { pt3dadd( 25.1155, 25.4006, 25.2746, 0.22 ) }
    dend_39 { pt3dadd( 24.9844, 26.3543, 25.5386, 0.22 ) }
    dend_39 { pt3dadd( 24.977, 26.4151, 25.5554, 0.22 ) }
    dend_39 { pt3dadd( 24.9217, 27.0604, 25.7334, 0.37 ) }
    dend_39 { pt3dadd( 24.8665, 27.5891, 25.8399, 0.37 ) }
    dend_39 { pt3dadd( 24.7164, 28.3613, 25.8584, 0.22 ) }
    dend_39 { pt3dadd( 24.5774, 28.8852, 25.866, 0.22 ) }
    dend_39 { pt3dadd( 30.5421, 34.3085, 32.2977, 0.22 ) }
    dend_39 { pt3dadd( 37.3941, 40.1597, 37.3836, 0.22 ) }
    dend_39 { pt3dadd( 43.9245, 46.6463, 42.1873, 0.22 ) }
    dend_39 { pt3dadd( 50.7066, 52.6964, 47.1557, 0.22 ) }
    dend_39 { pt3dadd( 57.2696, 58.3191, 52.8145, 0.22 ) }
    dend_39 { pt3dadd( 62.7903, 63.563, 59.7503, 0.22 ) }
    dend_39 { pt3dadd( 66.7645, 69.7937, 66.9816, 0.22 ) }
    dend_39 { pt3dadd( 69.1537, 76.1224, 74.7911, 0.22 ) }
    dend_39 { pt3dadd( 70.971, 81.7992, 83.1833, 0.22 ) }
    dend_39 { pt3dadd( 73.9, 87.7442, 91.0877, 0.22 ) }
    dend_39 { pt3dadd( 77.018, 92.757, 99.4925, 0.22 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 33/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.49943, -4.25984, 10.469, 1.62 ) }
    dend_30 { pt3dadd( 7.54503, -4.77935, 10.4136, 1.62 ) }
    dend_30 { pt3dadd( 8.98166, -5.49313, 10.3375, 1.84 ) }
    dend_30 { pt3dadd( 9.9828, -5.99054, 10.2844, 2.14 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.57943, 1.58866, -5.66108, 1.18 ) }
    dend_29 { pt3dadd( 9.55813, 1.74624, -5.95233, 1.18 ) }
    dend_29 { pt3dadd( 11.3823, 1.96601, -6.62975, 1.11 ) }
    dend_29 { pt3dadd( 12.6172, 2.04001, -7.09907, 1.55 ) }
    dend_29 { pt3dadd( 12.7937, 2.04273, -7.16569, 1.55 ) }
    dend_29 { pt3dadd( 15.7155, 1.99493, -8.20531, 1.4 ) }
    dend_29 { pt3dadd( 17.2762, 1.93429, -8.68539, 1.03 ) }
    dend_29 { pt3dadd( 17.3327, 1.92853, -8.70368, 1.03 ) }
    dend_29 { pt3dadd( 18.5612, 1.712, -9.02204, 0.88 ) }
    dend_29 { pt3dadd( 19.6956, 1.46994, -9.15593, 1.62 ) }
    dend_29 { pt3dadd( 20.656, 1.30019, -9.04367, 1.92 ) }
    dend_29 { pt3dadd( 21.5867, 1.19628, -8.69416, 1.92 ) }
    dend_29 { pt3dadd( 21.652, 1.19316, -8.66826, 1.92 ) }
    dend_29 { pt3dadd( 23.6205, 1.18668, -7.9451, 0.96 ) }
    dend_29 { pt3dadd( 24.7388, 1.22654, -7.56328, 0.52 ) }
    dend_29 { pt3dadd( 26.1244, 1.26748, -7.13694, 1.03 ) }
    dend_29 { pt3dadd( 27.0022, 1.26583, -6.92144, 1.92 ) }
    dend_29 { pt3dadd( 28.5529, 1.12497, -6.66194, 1.11 ) }
    dend_29 { pt3dadd( 29.1961, 1.01956, -6.59475, 0.74 ) }
    dend_29 { pt3dadd( 30.1078, 0.809609, -6.58658, 0.81 ) }
    dend_29 { pt3dadd( 30.7849, 0.597899, -6.58235, 1.18 ) }
    dend_29 { pt3dadd( 31.4739, 0.340475, -6.57702, 0.96 ) }
    dend_29 { pt3dadd( 32.8074, -0.192816, -6.499, 0.44 ) }
    dend_29 { pt3dadd( 33.6549, -0.436414, -6.38354, 0.59 ) }
    dend_29 { pt3dadd( 34.5412, -0.487352, -6.29175, 1.55 ) }
    dend_29 { pt3dadd( 34.6199, -0.473742, -6.28645, 1.55 ) }
    dend_29 { pt3dadd( 35.4498, -0.1958, -6.25459, 1.55 ) }
    dend_29 { pt3dadd( 35.5134, -0.167181, -6.25354, 1.55 ) }
    dend_29 { pt3dadd( 36.7282, 0.489499, -6.2547, 0.81 ) }
    dend_29 { pt3dadd( 37.742, 1.05192, -6.26535, 1.11 ) }
    dend_29 { pt3dadd( 38.2444, 1.36282, -6.29244, 1.4 ) }
    dend_29 { pt3dadd( 38.6094, 1.60532, -6.32776, 1.4 ) }
    dend_29 { pt3dadd( 38.6664, 1.64574, -6.33588, 1.4 ) }
    dend_29 { pt3dadd( 39.3005, 2.12206, -6.42741, 1.18 ) }
    dend_29 { pt3dadd( 40.0006, 2.66167, -6.51015, 0.88 ) }
    dend_29 { pt3dadd( 41.2368, 3.58989, -6.61574, 0.66 ) }
    dend_29 { pt3dadd( 41.7631, 3.95196, -6.64174, 0.59 ) }
    dend_29 { pt3dadd( 41.867, 4.01138, -6.63345, 0.59 ) }
    dend_29 { pt3dadd( 42.8448, 4.44117, -6.43714, 0.52 ) }
    dend_29 { pt3dadd( 43.6833, 4.70431, -6.16903, 1.33 ) }
    dend_29 { pt3dadd( 44.0473, 4.7738, -6.01788, 1.69 ) }
    dend_29 { pt3dadd( 44.3686, 4.80895, -5.8622, 1.69 ) }
    dend_29 { pt3dadd( 45.947, 4.97298, -5.19161, 0.74 ) }
    dend_29 { pt3dadd( 46.7925, 5.09215, -4.927, 0.29 ) }
    dend_29 { pt3dadd( 46.8505, 5.10373, -4.91979, 0.29 ) }
    dend_29 { pt3dadd( 47.4229, 5.26797, -4.95962, 0.29 ) }
    dend_29 { pt3dadd( 47.8172, 5.4137, -5.0389, 0.74 ) }
    dend_29 { pt3dadd( 48.9699, 5.91905, -5.41866, 0.59 ) }
    dend_29 { pt3dadd( 49.7615, 6.3083, -5.7798, 0.37 ) }
    dend_29 { pt3dadd( 50.5902, 6.73538, -6.19603, 1.47 ) }
    dend_29 { pt3dadd( 51.385, 7.15374, -6.59096, 2.06 ) }
    dend_29 { pt3dadd( 51.809, 7.38177, -6.79867, 1.69 ) }
    dend_29 { pt3dadd( 52.7138, 7.86734, -7.21882, 1.03 ) }
    dend_29 { pt3dadd( 53.7006, 8.40687, -7.56851, 0.37 ) }
    dend_29 { pt3dadd( 54.7433, 8.99995, -7.85162, 0.37 ) }
    dend_29 { pt3dadd( 55.4636, 9.44561, -7.94154, 0.44 ) }
    dend_29 { pt3dadd( 55.9888, 9.79671, -7.93848, 1.18 ) }
    dend_29 { pt3dadd( 56.438, 10.1098, -7.87866, 1.47 ) }
    dend_29 { pt3dadd( 57.6352, 11.0096, -7.54374, 1.4 ) }
    dend_29 { pt3dadd( 58.5184, 11.6792, -7.25439, 0.66 ) }
    dend_29 { pt3dadd( 59.4346, 12.3465, -6.98389, 0.29 ) }
    dend_29 { pt3dadd( 59.4835, 12.38, -6.9741, 0.29 ) }
    dend_29 { pt3dadd( 60.2254, 12.8134, -6.96036, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 60.959, 13.1778, -7.06476, 0.74 ) }
    dend_29 { pt3dadd( 62.1611, 13.6856, -7.38751, 1.69 ) }
    dend_29 { pt3dadd( 62.9838, 13.9904, -7.60857, 2.06 ) }
    dend_29 { pt3dadd( 63.4999, 14.1645, -7.74128, 1.69 ) }
    dend_29 { pt3dadd( 65.0927, 14.6704, -8.08655, 0.59 ) }
    dend_29 { pt3dadd( 66.0585, 14.9607, -8.25615, 0.44 ) }
    dend_29 { pt3dadd( 66.8729, 15.1935, -8.35276, 0.44 ) }
    dend_29 { pt3dadd( 68.3405, 15.6087, -8.4098, 0.74 ) }
    dend_29 { pt3dadd( 68.9113, 15.763, -8.40223, 1.33 ) }
    dend_29 { pt3dadd( 69.3386, 15.8545, -8.37163, 1.33 ) }
    dend_29 { pt3dadd( 69.6933, 15.9106, -8.31447, 1.4 ) }
    dend_29 { pt3dadd( 70.3542, 15.9387, -8.23224, 1.18 ) }
    dend_29 { pt3dadd( 71.3761, 15.8794, -8.20168, 0.29 ) }
    dend_29 { pt3dadd( 72.1657, 15.753, -8.31242, 0.29 ) }
    dend_29 { pt3dadd( 73.4081, 15.5371, -8.60645, 0.29 ) }
    dend_29 { pt3dadd( 73.4717, 15.5239, -8.63164, 0.29 ) }
    dend_29 { pt3dadd( 74.8879, 15.2059, -9.27317, 0.29 ) }
    dend_29 { pt3dadd( 75.5423, 15.0526, -9.59474, 1.4 ) }
    dend_29 { pt3dadd( 76.6713, 14.7926, -10.1555, 2.06 ) }
    dend_29 { pt3dadd( 77.1561, 14.6913, -10.3867, 2.06 ) }
    dend_29 { pt3dadd( 79.3101, 14.3145, -11.3115, 0.74 ) }
    dend_29 { pt3dadd( 80.2844, 14.1422, -11.6695, 0.44 ) }
    dend_29 { pt3dadd( 81.4719, 13.9333, -12.021, 0.74 ) }
    dend_29 { pt3dadd( 82.193, 13.8215, -12.1859, 0.52 ) }
    dend_29 { pt3dadd( 82.8467, 13.745, -12.2947, 0.29 ) }
    dend_29 { pt3dadd( 84.0169, 13.6643, -12.422, 0.81 ) }
    dend_29 { pt3dadd( 84.6023, 13.6686, -12.4616, 0.81 ) }
    dend_29 { pt3dadd( 86.1148, 13.781, -12.5954, 0.44 ) }
    dend_29 { pt3dadd( 87.3081, 13.9456, -12.7173, 1.47 ) }
    dend_29 { pt3dadd( 88.1547, 14.1119, -12.8597, 2.21 ) }
    dend_29 { pt3dadd( 89.2167, 14.3736, -13.1217, 0.29 ) }
    dend_29 { pt3dadd( 90.189, 14.6685, -13.4446, 0.44 ) }
    dend_29 { pt3dadd( 90.7016, 14.8468, -13.6534, 0.44 ) }
    dend_29 { pt3dadd( 90.8114, 14.8877, -13.704, 0.44 ) }
    dend_29 { pt3dadd( 91.8451, 15.2231, -14.2018, 0.29 ) }
    dend_29 { pt3dadd( 92.4229, 15.3538, -14.4643, 0.96 ) }
    dend_29 { pt3dadd( 92.4869, 15.3622, -14.4901, 0.96 ) }
    dend_29 { pt3dadd( 92.9099, 15.4022, -14.6298, 1.11 ) }
    dend_29 { pt3dadd( 93.9416, 15.4869, -14.9305, 0.59 ) }
    dend_29 { pt3dadd( 94.8684, 15.5735, -15.1738, 0.29 ) }
    dend_29 { pt3dadd( 96.023, 15.6923, -15.4581, 0.81 ) }
    dend_29 { pt3dadd( 96.0799, 15.6993, -15.4743, 0.81 ) }
    dend_29 { pt3dadd( 97.2467, 15.8335, -15.9174, 0.37 ) }
    dend_29 { pt3dadd( 97.6535, 15.8809, -16.1032, 0.37 ) }
    dend_29 { pt3dadd( 98.7505, 16.0381, -16.6762, 1.4 ) }
    dend_29 { pt3dadd( 99.3839, 16.1539, -17.0266, 1.69 ) }
    dend_29 { pt3dadd( 99.7107, 16.2248, -17.2037, 1.69 ) }
    dend_29 { pt3dadd( 101.419, 16.5767, -18.1084, 0.37 ) }
    dend_29 { pt3dadd( 101.479, 16.587, -18.1418, 0.37 ) }
    dend_29 { pt3dadd( 102.092, 16.6827, -18.5162, 0.29 ) }
    dend_29 { pt3dadd( 102.66, 16.7065, -18.8762, 0.29 ) }
    dend_29 { pt3dadd( 102.728, 16.7073, -18.9182, 0.29 ) }
    dend_29 { pt3dadd( 103.939, 16.7085, -19.6462, 1.55 ) }
    dend_29 { pt3dadd( 104.721, 16.695, -20.1124, 1.92 ) }
    dend_29 { pt3dadd( 105.542, 16.6897, -20.6077, 1.69 ) }
    dend_29 { pt3dadd( 107.355, 16.6737, -21.6846, 0.29 ) }
    dend_29 { pt3dadd( 108.225, 16.6745, -22.1771, 0.37 ) }
    dend_29 { pt3dadd( 108.502, 16.6875, -22.3264, 0.37 ) }
    dend_29 { pt3dadd( 108.566, 16.6957, -22.3543, 0.37 ) }
    dend_29 { pt3dadd( 109.744, 16.9376, -22.6506, 0.29 ) }
    dend_29 { pt3dadd( 110.322, 17.0842, -22.7066, 0.66 ) }
    dend_29 { pt3dadd( 110.673, 17.1939, -22.7306, 0.66 ) }
    dend_29 { pt3dadd( 110.815, 17.2385, -22.7424, 0.66 ) }
    dend_29 { pt3dadd( 111.972, 17.6379, -22.8567, 0.29 ) }
    dend_29 { pt3dadd( 113.282, 18.1594, -23.0251, 1.77 ) }
    dend_29 { pt3dadd( 113.899, 18.4215, -23.1144, 2.21 ) }
    dend_29 { pt3dadd( 115.601, 19.1891, -23.4148, 0.29 ) }
    dend_29 { pt3dadd( 116.2, 19.4471, -23.5333, 0.88 ) }
    dend_29 { pt3dadd( 116.548, 19.5896, -23.6095, 0.88 ) }
    dend_29 { pt3dadd( 117.584, 20.0041, -23.8801, 0.22 ) }
    dend_29 { pt3dadd( 118.098, 20.2049, -24.006, 0.81 ) }
    dend_29 { pt3dadd( 118.576, 20.3852, -24.1041, 0.81 ) }
    dend_29 { pt3dadd( 119.908, 20.8277, -24.2943, 0.29 ) }
    dend_29 { pt3dadd( 120.248, 20.9286, -24.3467, 0.29 ) }
    dend_29 { pt3dadd( 120.324, 20.951, -24.36, 0.29 ) }
    dend_29 { pt3dadd( 121.098, 21.2103, -24.5138, 0.29 ) }
    dend_29 { pt3dadd( 121.784, 21.5304, -24.7132, 1.18 ) }
    dend_29 { pt3dadd( 122.094, 21.6927, -24.8182, 1.4 ) }
    dend_29 { pt3dadd( 122.195, 21.7513, -24.8469, 1.4 ) }
    dend_29 { pt3dadd( 122.571, 21.9508, -24.9246, 1.4 ) }
    dend_29 { pt3dadd( 123.08, 22.1791, -24.9908, 1.18 ) }
    dend_29 { pt3dadd( 124.428, 22.6524, -24.9661, 0.29 ) }
    dend_29 { pt3dadd( 125.059, 22.8461, -24.8899, 0.29 ) }
    dend_29 { pt3dadd( 126.005, 23.1488, -24.7195, 0.96 ) }
    dend_29 { pt3dadd( 126.478, 23.3025, -24.6182, 1.47 ) }
    dend_29 { pt3dadd( 126.974, 23.4607, -24.4967, 1.18 ) }
    dend_29 { pt3dadd( 128.312, 23.8803, -24.1327, 0.29 ) }
    dend_29 { pt3dadd( 128.91, 24.0947, -23.9549, 0.29 ) }
    dend_29 { pt3dadd( 129.355, 24.3194, -23.8324, 0.66 ) }
    dend_29 { pt3dadd( 130.042, 24.7486, -23.6774, 0.22 ) }
    dend_29 { pt3dadd( 130.566, 25.1372, -23.5599, 0.22 ) }
    dend_29 { pt3dadd( 130.618, 25.1827, -23.5467, 0.22 ) }
    dend_29 { pt3dadd( 131.216, 25.7551, -23.3966, 0.22 ) }
    dend_29 { pt3dadd( 132.233, 26.6932, -23.106, 0.96 ) }
    dend_29 { pt3dadd( 132.307, 26.7573, -23.0843, 1.33 ) }
    dend_29 { pt3dadd( 132.812, 27.197, -22.9393, 1.55 ) }
    dend_29 { pt3dadd( 133.701, 27.9781, -22.7867, 0.22 ) }
    dend_29 { pt3dadd( 134.074, 28.2924, -22.7589, 0.37 ) }
    dend_29 { pt3dadd( 134.426, 28.5777, -22.7757, 0.37 ) }
    dend_29 { pt3dadd( 135.048, 29.1115, -22.8957, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 135.577, 29.5958, -23.0307, 0.59 ) }
    dend_29 { pt3dadd( 136.535, 30.5434, -23.3509, 0.29 ) }
    dend_29 { pt3dadd( 136.583, 30.5928, -23.3706, 0.29 ) }
    dend_29 { pt3dadd( 137.409, 31.4921, -23.7121, 0.29 ) }
    dend_29 { pt3dadd( 138.083, 32.2532, -23.9814, 1.11 ) }
    dend_29 { pt3dadd( 138.328, 32.5228, -24.0669, 1.4 ) }
    dend_29 { pt3dadd( 138.384, 32.5802, -24.0785, 1.4 ) }
    dend_29 { pt3dadd( 138.763, 32.9499, -24.1109, 1.4 ) }
    dend_29 { pt3dadd( 139.604, 33.841, -24.1636, 0.22 ) }
    dend_29 { pt3dadd( 139.915, 34.1971, -24.1758, 0.22 ) }
    dend_29 { pt3dadd( 140.391, 34.7749, -24.1851, 0.59 ) }
    dend_29 { pt3dadd( 141.227, 35.8477, -24.1962, 0.22 ) }
    dend_29 { pt3dadd( 141.317, 35.9717, -24.1972, 0.22 ) }
    dend_29 { pt3dadd( 141.97, 37.0937, -24.1556, 0.22 ) }
    dend_29 { pt3dadd( 142.298, 37.818, -24.0953, 0.22 ) }
    dend_29 { pt3dadd( 142.327, 37.8955, -24.0886, 0.22 ) }
    dend_29 { pt3dadd( 142.493, 38.3971, -24.046, 1.03 ) }
    dend_29 { pt3dadd( 142.646, 38.9223, -24.0041, 1.25 ) }
    dend_29 { pt3dadd( 143.161, 40.6666, -23.8376, 0.22 ) }
    dend_29 { pt3dadd( 143.324, 41.2256, -23.769, 0.37 ) }
    dend_29 { pt3dadd( 143.626, 42.374, -23.6103, 0.22 ) }
    dend_29 { pt3dadd( 143.767, 42.9059, -23.5324, 0.74 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 22/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.80057, 3.53116, -6.85108, 0.88 ) }
    dend_28 { pt3dadd( -7.86663, 3.5596, -6.88945, 0.88 ) }
    dend_28 { pt3dadd( -8.53476, 3.93629, -7.28387, 0.88 ) }
    dend_28 { pt3dadd( -9.73305, 4.66839, -7.98187, 0.88 ) }
    dend_28 { pt3dadd( -9.91684, 4.78805, -8.08034, 0.88 ) }
    dend_28 { pt3dadd( -10.4304, 5.13407, -8.34168, 1.03 ) }
    dend_28 { pt3dadd( -11.3961, 5.79976, -8.7732, 1.11 ) }
    dend_28 { pt3dadd( -12.3767, 6.51583, -9.12675, 1.11 ) }
    dend_28 { pt3dadd( -12.5322, 6.6324, -9.17486, 1.11 ) }
    dend_28 { pt3dadd( -13.3185, 7.19551, -9.31512, 1.11 ) }
    dend_28 { pt3dadd( -13.4235, 7.2633, -9.32002, 1.11 ) }
    dend_28 { pt3dadd( -14.6734, 7.9706, -9.22662, 1.11 ) }
    dend_28 { pt3dadd( -15.9415, 8.58414, -9.0062, 1.55 ) }
    dend_28 { pt3dadd( -16.649, 8.8819, -8.83008, 1.55 ) }
    dend_28 { pt3dadd( -18.063, 9.43284, -8.43716, 1.18 ) }
    dend_28 { pt3dadd( -19.504, 9.96201, -8.00222, 0.96 ) }
    dend_28 { pt3dadd( -20.5494, 10.3493, -7.67542, 1.25 ) }
    dend_28 { pt3dadd( -21.3253, 10.6404, -7.42023, 1.25 ) }
    dend_28 { pt3dadd( -22.2179, 11.015, -7.14898, 0.81 ) }
    dend_28 { pt3dadd( -23.1945, 11.508, -6.90511, 0.81 ) }
    dend_28 { pt3dadd( -23.7683, 11.8525, -6.83134, 1.18 ) }
    dend_28 { pt3dadd( -24.623, 12.448, -6.83818, 1.18 ) }
    dend_28 { pt3dadd( -25.0141, 12.7556, -6.86746, 1.47 ) }
    dend_28 { pt3dadd( -25.8953, 13.4962, -6.98, 1.47 ) }
    dend_28 { pt3dadd( -26.6807, 14.1729, -7.1155, 1.47 ) }
    dend_28 { pt3dadd( -27.319, 14.6752, -7.1888, 1.47 ) }
    dend_28 { pt3dadd( -28.1571, 15.2053, -7.24582, 1.18 ) }
    dend_28 { pt3dadd( -29.0997, 15.6496, -7.26518, 0.81 ) }
    dend_28 { pt3dadd( -29.2566, 15.6942, -7.25748, 0.81 ) }
    dend_28 { pt3dadd( -30.5678, 15.8544, -7.10725, 0.66 ) }
    dend_28 { pt3dadd( -32.1083, 15.8991, -6.89017, 0.66 ) }
    dend_28 { pt3dadd( -33.3545, 15.8815, -6.68786, 0.59 ) }
    dend_28 { pt3dadd( -33.7649, 15.8671, -6.61324, 0.44 ) }
    dend_28 { pt3dadd( -34.7905, 15.8416, -6.47036, 0.44 ) }
    dend_28 { pt3dadd( -35.7454, 15.9005, -6.39513, 1.33 ) }
    dend_28 { pt3dadd( -36.5323, 16.0508, -6.41736, 1.69 ) }
    dend_28 { pt3dadd( -37.0519, 16.2365, -6.46266, 2.06 ) }
    dend_28 { pt3dadd( -37.4955, 16.4339, -6.48914, 2.21 ) }
    dend_28 { pt3dadd( -38.3496, 16.823, -6.56374, 2.14 ) }
    dend_28 { pt3dadd( -39.554, 17.3276, -6.67353, 0.81 ) }
    dend_28 { pt3dadd( -41.0477, 17.8378, -6.75439, 0.44 ) }
    dend_28 { pt3dadd( -42.1028, 18.1088, -6.77741, 0.44 ) }
    dend_28 { pt3dadd( -43.0113, 18.2547, -6.73767, 0.44 ) }
    dend_28 { pt3dadd( -44.2789, 18.3546, -6.59655, 0.44 ) }
    dend_28 { pt3dadd( -45.3423, 18.3701, -6.40447, 1.03 ) }
    dend_28 { pt3dadd( -46.2749, 18.3293, -6.18489, 1.33 ) }
    dend_28 { pt3dadd( -46.9335, 18.2691, -5.99341, 1.33 ) }
    dend_28 { pt3dadd( -48.3801, 18.1441, -5.5566, 0.44 ) }
    dend_28 { pt3dadd( -49.2276, 18.1365, -5.27356, 0.29 ) }
    dend_28 { pt3dadd( -49.4766, 18.1776, -5.16925, 0.29 ) }
    dend_28 { pt3dadd( -49.7938, 18.3449, -5.06178, 0.29 ) }
    dend_28 { pt3dadd( -49.8664, 18.4041, -5.04378, 0.29 ) }
    dend_28 { pt3dadd( -50.3523, 18.8865, -4.95731, 0.29 ) }
    dend_28 { pt3dadd( -50.8967, 19.4031, -4.94124, 0.29 ) }
    dend_28 { pt3dadd( -51.4203, 19.8151, -4.95183, 0.29 ) }
    dend_28 { pt3dadd( -52.6799, 20.5821, -4.97109, 1.84 ) }
    dend_28 { pt3dadd( -53.1034, 20.7752, -4.978, 2.5 ) }
    dend_28 { pt3dadd( -53.8317, 20.9945, -4.96974, 2.43 ) }
    dend_28 { pt3dadd( -55.8395, 21.3079, -4.90577, 0.29 ) }
    dend_28 { pt3dadd( -56.5665, 21.3438, -4.86899, 0.29 ) }
    dend_28 { pt3dadd( -57.5092, 21.3121, -4.8049, 0.52 ) }
    dend_28 { pt3dadd( -58.1205, 21.2444, -4.75086, 0.52 ) }
    dend_28 { pt3dadd( -59.1451, 21.1128, -4.62617, 0.29 ) }
    dend_28 { pt3dadd( -59.6469, 21.0462, -4.5653, 0.29 ) }
    dend_28 { pt3dadd( -60.6064, 21.0036, -4.28083, 1.25 ) }
    dend_28 { pt3dadd( -61.0813, 21.0471, -4.09722, 1.77 ) }
    dend_28 { pt3dadd( -61.2293, 21.0821, -4.01212, 1.77 ) }
    dend_28 { pt3dadd( -61.79, 21.2616, -3.61833, 1.77 ) }
    dend_28 { pt3dadd( -62.5106, 21.541, -3.06791, 1.77 ) }
    dend_28 { pt3dadd( -64.823, 22.5209, -1.3019, 0.29 ) }
    dend_28 { pt3dadd( -64.8759, 22.5455, -1.26318, 0.29 ) }
    dend_28 { pt3dadd( -66.7531, 23.4893, 0.00648699, 1.03 ) }
    dend_28 { pt3dadd( -67.1365, 23.7012, 0.270177, 1.69 ) }
    dend_28 { pt3dadd( -67.7399, 24.0508, 0.692989, 1.84 ) }
    dend_28 { pt3dadd( -69.2046, 24.9165, 1.69883, 0.29 ) }
    dend_28 { pt3dadd( -70.1332, 25.476, 2.2405, 0.96 ) }
    dend_28 { pt3dadd( -70.7523, 25.827, 2.57809, 1.03 ) }
    dend_28 { pt3dadd( -72.4314, 26.6827, 3.40393, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -73.4157, 27.0788, 3.85185, 0.29 ) }
    dend_28 { pt3dadd( -74.1119, 27.2548, 4.12384, 1.03 ) }
    dend_28 { pt3dadd( -74.6334, 27.2897, 4.26958, 1.33 ) }
    dend_28 { pt3dadd( -75.2359, 27.2481, 4.33627, 1.33 ) }
    dend_28 { pt3dadd( -75.9226, 27.1668, 4.31835, 1.03 ) }
    dend_28 { pt3dadd( -77.4244, 26.9141, 4.09857, 0.37 ) }
    dend_28 { pt3dadd( -78.3418, 26.7495, 3.90964, 0.29 ) }
    dend_28 { pt3dadd( -78.834, 26.6674, 3.80041, 0.29 ) }
    dend_28 { pt3dadd( -80.4202, 26.4449, 3.42864, 0.29 ) }
    dend_28 { pt3dadd( -81.1163, 26.3722, 3.25739, 0.88 ) }
    dend_28 { pt3dadd( -91.4512, 30.5701, 6.69666, 0.88 ) }
    dend_28 { pt3dadd( -101.046, 36.467, 10.0427, 0.88 ) }
    dend_28 { pt3dadd( -108.896, 43.7923, 15.0149, 0.88 ) }
    dend_28 { pt3dadd( -115.07, 51.8137, 21.2288, 0.88 ) }
    dend_28 { pt3dadd( -119.589, 60.3494, 28.1983, 0.88 ) }
    dend_28 { pt3dadd( -122.64, 69.0328, 35.7705, 0.88 ) }
    dend_28 { pt3dadd( -125.404, 78.5814, 42.4528, 0.88 ) }
    dend_28 { pt3dadd( -126.451, 88.4701, 49.1653, 0.88 ) }
    dend_28 { pt3dadd( -127.862, 98.2544, 55.9524, 0.88 ) }
    dend_28 { pt3dadd( -129.14, 107.215, 63.7272, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 20/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.90057, 11.1646, 1.64892, 2.43 ) }
    dend_21 { pt3dadd( -2.90057, 11.1646, 1.64892, 2.43 ) }
    dend_21 { pt3dadd( -3.2169, 11.646, 1.70097, 2.43 ) }
    dend_21 { pt3dadd( -3.86753, 12.6904, 1.79581, 1.77 ) }
    dend_21 { pt3dadd( -4.2959, 13.5234, 1.85779, 1.55 ) }
    dend_21 { pt3dadd( -4.32743, 13.5968, 1.86239, 1.55 ) }
    dend_21 { pt3dadd( -4.57083, 14.2708, 1.93911, 1.55 ) }
    dend_21 { pt3dadd( -4.5928, 14.3473, 1.9497, 1.55 ) }
    dend_21 { pt3dadd( -4.82918, 15.5116, 2.12317, 1.55 ) }
    dend_21 { pt3dadd( -5.00947, 17.0917, 2.43724, 1.4 ) }
    dend_21 { pt3dadd( -5.03992, 17.9902, 2.63717, 1.4 ) }
    dend_21 { pt3dadd( -5.01796, 19.4272, 2.98963, 1.4 ) }
    dend_21 { pt3dadd( -4.94874, 20.3347, 3.23166, 1.55 ) }
    dend_21 { pt3dadd( -4.77893, 21.4347, 3.57635, 1.99 ) }
    dend_21 { pt3dadd( -4.42971, 22.7314, 4.05108, 2.14 ) }
    dend_21 { pt3dadd( -4.1798, 23.3906, 4.36458, 1.92 ) }
    dend_21 { pt3dadd( -4.14759, 23.465, 4.40653, 1.92 ) }
    dend_21 { pt3dadd( -3.96399, 23.8429, 4.6441, 1.77 ) }
    dend_21 { pt3dadd( -3.46293, 24.8666, 5.38125, 1.18 ) }
    dend_21 { pt3dadd( -3.15539, 25.4829, 5.86796, 0.81 ) }
    dend_21 { pt3dadd( -2.61755, 26.6577, 6.8039, 0.81 ) }
    dend_21 { pt3dadd( -2.36545, 27.2736, 7.32921, 1.4 ) }
    dend_21 { pt3dadd( -2.34726, 27.3225, 7.37202, 1.4 ) }
    dend_21 { pt3dadd( -2.19241, 27.8307, 7.84512, 1.62 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 44/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.289429, -13.1219, 1.14892, 3.76 ) }
    dend_0 { pt3dadd( 0.289429, -13.1219, 1.14892, 3.76 ) }
    dend_0 { pt3dadd( 0.0806727, -14.9786, 1.36707, 3.17 ) }
    dend_0 { pt3dadd( -0.164924, -17.1631, 1.62371, 3.17 ) }
    dend_0 { pt3dadd( -0.399816, -19.2523, 1.86917, 2.95 ) }
    dend_0 { pt3dadd( -0.518507, -20.308, 1.9932, 2.95 ) }
    dend_0 { pt3dadd( -0.736849, -22.2501, 2.22137, 2.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 51/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.23173, -12.2381, -0.95489, 0.701622 ) }
    axon_0 { pt3dadd( 2.36401, -27.1953, -0.95489, 0.701622 ) }
    axon_0 { pt3dadd( 3.49629, -42.1525, -0.95489, 0.701622 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 54/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -0.74753, 6.13951, -20.411, 0.66 ) }
    dend_61 { pt3dadd( -3.39968, 4.45508, -18.3975, 0.66 ) }
    dend_61 { pt3dadd( -3.45966, 4.4229, -18.3467, 0.66 ) }
    dend_61 { pt3dadd( -5.88788, 3.39756, -16.1897, 0.66 ) }
    dend_61 { pt3dadd( -7.13587, 3.07802, -15.0975, 0.66 ) }
    dend_61 { pt3dadd( -7.26238, 3.06615, -14.9878, 0.66 ) }
    dend_61 { pt3dadd( -8.47044, 3.18154, -13.9619, 1.18 ) }
    dend_61 { pt3dadd( -10.3765, 3.9842, -12.1085, 1.03 ) }
    dend_61 { pt3dadd( -11.1684, 4.59528, -11.508, 1.18 ) }
    dend_61 { pt3dadd( -12.3272, 5.86971, -10.8912, 0.59 ) }
    dend_61 { pt3dadd( -13.2074, 6.94441, -10.5118, 0.37 ) }
    dend_61 { pt3dadd( -14.1166, 8.06985, -10.2054, 0.37 ) }
    dend_61 { pt3dadd( -14.8193, 8.90645, -10.0452, 1.33 ) }
    dend_61 { pt3dadd( -16.3057, 10.4124, -9.8693, 2.43 ) }
    dend_61 { pt3dadd( -16.9899, 10.9607, -9.80476, 2.87 ) }
    dend_61 { pt3dadd( -17.7657, 11.4553, -9.7707, 3.02 ) }
    dend_61 { pt3dadd( -18.9824, 12.1002, -9.76416, 2.65 ) }
    dend_61 { pt3dadd( -21.1311, 13.0647, -9.87227, 0.96 ) }
    dend_61 { pt3dadd( -22.7523, 13.7256, -10.0263, 0.66 ) }
    dend_61 { pt3dadd( -23.4672, 13.9912, -10.125, 0.88 ) }
    dend_61 { pt3dadd( -24.8905, 14.5249, -10.3216, 0.88 ) }
    dend_61 { pt3dadd( -24.9674, 14.5557, -10.3325, 0.88 ) }
    dend_61 { pt3dadd( -26.1661, 15.1614, -10.4215, 0.37 ) }
    dend_61 { pt3dadd( -26.9029, 15.6453, -10.3823, 0.37 ) }
    dend_61 { pt3dadd( -26.9702, 15.6949, -10.3749, 0.37 ) }
    dend_61 { pt3dadd( -28.2506, 16.6946, -10.1656, 1.11 ) }
    dend_61 { pt3dadd( -28.6923, 17.0413, -10.1019, 1.25 ) }
    dend_61 { pt3dadd( -30.4164, 18.3632, -9.9688, 0.22 ) }
    dend_61 { pt3dadd( -31.0503, 18.8388, -9.99099, 0.66 ) }
    dend_61 { pt3dadd( -32.4471, 19.8417, -10.2979, 0.66 ) }
    dend_61 { pt3dadd( -32.5237, 19.8961, -10.3254, 0.66 ) }
    dend_61 { pt3dadd( -33.6072, 20.6276, -11.0118, 0.66 ) }
    dend_61 { pt3dadd( -33.6664, 20.6622, -11.0597, 0.66 ) }
    dend_61 { pt3dadd( -34.6806, 21.1609, -11.9691, 1.69 ) }
    dend_61 { pt3dadd( -35.4604, 21.5506, -12.6497, 2.28 ) }
    dend_61 { pt3dadd( -36.059, 21.837, -13.1436, 2.65 ) }
    dend_61 { pt3dadd( -38.6513, 23.0328, -15.1482, 0.52 ) }
    dend_61 { pt3dadd( -40.3722, 23.8128, -16.4508, 0.37 ) }
    dend_61 { pt3dadd( -41.4764, 24.3022, -17.28, 2.5 ) }
    dend_61 { pt3dadd( -42.4315, 24.7132, -17.9756, 3.02 ) }
    dend_61 { pt3dadd( -43.9352, 25.3557, -19.0074, 0.37 ) }
    dend_61 { pt3dadd( -44.7848, 25.7493, -19.5451, 0.29 ) }
    dend_61 { pt3dadd( -45.9772, 26.4194, -20.1066, 0.59 ) }
    dend_61 { pt3dadd( -46.0437, 26.4614, -20.1354, 0.59 ) }
    dend_61 { pt3dadd( -46.7527, 26.8943, -20.4425, 1.11 ) }
    dend_61 { pt3dadd( -47.0488, 27.0583, -20.5651, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_61 { pt3dadd( -47.8238, 27.4771, -20.8431, 1.4 ) }
    dend_61 { pt3dadd( -48.8049, 27.9485, -21.1369, 0.52 ) }
    dend_61 { pt3dadd( -50.619, 28.8302, -21.5381, 0.52 ) }
    dend_61 { pt3dadd( -51.3222, 29.2378, -21.6808, 0.96 ) }
    dend_61 { pt3dadd( -51.9786, 29.6673, -21.8415, 0.22 ) }
    dend_61 { pt3dadd( -52.0669, 29.7322, -21.8642, 0.22 ) }
    dend_61 { pt3dadd( -53.2939, 30.7897, -22.2134, 0.22 ) }
    dend_61 { pt3dadd( -54.1174, 31.6005, -22.4451, 0.22 ) }
    dend_61 { pt3dadd( -55.4337, 32.9789, -22.752, 1.77 ) }
    dend_61 { pt3dadd( -56.1868, 33.7622, -22.9299, 2.06 ) }
    dend_61 { pt3dadd( -56.7192, 34.3194, -23.0543, 2.06 ) }
    dend_61 { pt3dadd( -58.2703, 35.989, -23.4267, 0.29 ) }
    dend_61 { pt3dadd( -58.7634, 36.5324, -23.5504, 0.29 ) }
    dend_61 { pt3dadd( -59.6186, 37.4301, -23.7384, 0.29 ) }
    dend_61 { pt3dadd( -60.3899, 38.2172, -23.9034, 0.66 ) }
    dend_61 { pt3dadd( -60.999, 38.7793, -24.0811, 0.66 ) }
    dend_61 { pt3dadd( -61.8655, 39.5159, -24.4221, 0.37 ) }
    dend_61 { pt3dadd( -62.9076, 40.2887, -24.9034, 1.11 ) }
    dend_61 { pt3dadd( -63.5708, 40.7198, -25.245, 1.99 ) }
    dend_61 { pt3dadd( -64.2489, 41.1117, -25.6209, 1.99 ) }
    dend_61 { pt3dadd( -66.8147, 42.3266, -26.9937, 0.37 ) }
    dend_61 { pt3dadd( -67.5107, 42.6021, -27.334, 0.59 ) }
    dend_61 { pt3dadd( -68.1559, 42.8233, -27.6084, 0.29 ) }
    dend_61 { pt3dadd( -69.096, 43.1544, -27.9441, 1.25 ) }
    dend_61 { pt3dadd( -69.5159, 43.3299, -28.0542, 1.55 ) }
    dend_61 { pt3dadd( -70.5356, 43.854, -28.1809, 0.88 ) }
    dend_61 { pt3dadd( -71.4331, 44.5176, -28.164, 0.29 ) }
    dend_61 { pt3dadd( -72.112, 45.1498, -28.1497, 0.44 ) }
    dend_61 { pt3dadd( -72.892, 46.0192, -28.1459, 0.44 ) }
    dend_61 { pt3dadd( -73.5628, 46.8235, -28.1623, 0.88 ) }
    dend_61 { pt3dadd( -74.0546, 47.4328, -28.1892, 1.4 ) }
    dend_61 { pt3dadd( -74.9633, 48.5817, -28.298, 0.59 ) }
    dend_61 { pt3dadd( -75.8548, 49.6211, -28.431, 0.37 ) }
    dend_61 { pt3dadd( -75.9789, 49.754, -28.4521, 0.37 ) }
    dend_61 { pt3dadd( -77.1032, 50.905, -28.6698, 1.4 ) }
    dend_61 { pt3dadd( -77.4682, 51.2884, -28.7849, 1.84 ) }
    dend_61 { pt3dadd( -78.2992, 52.1942, -29.11, 1.55 ) }
    dend_61 { pt3dadd( -79.2604, 53.2255, -29.5122, 0.22 ) }
    dend_61 { pt3dadd( -79.9715, 53.9638, -29.7891, 0.22 ) }
    dend_61 { pt3dadd( -80.7709, 54.792, -30.0696, 0.22 ) }
    dend_61 { pt3dadd( -82.265, 56.377, -30.5583, 1.33 ) }
    dend_61 { pt3dadd( -82.9267, 57.07, -30.7639, 1.92 ) }
    dend_61 { pt3dadd( -84.8107, 59.0708, -31.2279, 0.37 ) }
    dend_61 { pt3dadd( -85.885, 60.2138, -31.4331, 0.37 ) }
    dend_61 { pt3dadd( -86.8162, 61.1807, -31.5447, 0.88 ) }
    dend_61 { pt3dadd( -87.3345, 61.7004, -31.5615, 1.18 ) }
    dend_61 { pt3dadd( -87.9144, 62.2928, -31.5514, 0.88 ) }
    dend_61 { pt3dadd( -89.1537, 63.6377, -31.5934, 0.22 ) }
    dend_61 { pt3dadd( -90.0163, 64.6699, -31.6657, 1.03 ) }
    dend_61 { pt3dadd( -90.4273, 65.1956, -31.7296, 1.62 ) }
    dend_61 { pt3dadd( -91.0676, 66.0126, -31.862, 1.62 ) }
    dend_61 { pt3dadd( -92.3924, 67.6738, -32.1916, 0.44 ) }
    dend_61 { pt3dadd( -93.3103, 68.7994, -32.479, 0.37 ) }
    dend_61 { pt3dadd( -93.3968, 68.905, -32.5148, 0.37 ) }
    dend_61 { pt3dadd( -93.8501, 69.473, -32.7198, 0.37 ) }
    dend_61 { pt3dadd( -94.2591, 70.0164, -32.8987, 0.66 ) }
    dend_61 { pt3dadd( -94.6232, 70.5127, -33.023, 0.66 ) }
    dend_61 { pt3dadd( -95.3423, 71.5084, -33.1696, 0.44 ) }
    dend_61 { pt3dadd( -95.8352, 72.1634, -33.2372, 0.44 ) }
    dend_61 { pt3dadd( -95.9064, 72.2507, -33.2454, 0.44 ) }
    dend_61 { pt3dadd( -96.7965, 73.234, -33.3175, 0.37 ) }
    dend_61 { pt3dadd( -97.9064, 74.3616, -33.3713, 1.11 ) }
    dend_61 { pt3dadd( -97.9777, 74.4293, -33.3719, 1.11 ) }
    dend_61 { pt3dadd( -98.3703, 74.7699, -33.3755, 1.4 ) }
    dend_61 { pt3dadd( -99.0837, 75.3505, -33.401, 1.18 ) }
    dend_61 { pt3dadd( -100.229, 76.3282, -33.5409, 0.29 ) }
    dend_61 { pt3dadd( -100.649, 76.6898, -33.6092, 0.59 ) }
    dend_61 { pt3dadd( -101.256, 77.2201, -33.7201, 0.81 ) }
    dend_61 { pt3dadd( -101.989, 77.8365, -33.839, 0.29 ) }
    dend_61 { pt3dadd( -102.398, 78.1315, -33.8886, 0.29 ) }
    dend_61 { pt3dadd( -103.608, 78.8847, -33.9886, 0.29 ) }
    dend_61 { pt3dadd( -104.491, 79.3949, -34.0375, 0.29 ) }
    dend_61 { pt3dadd( -105.298, 79.8593, -34.0466, 0.96 ) }
    dend_61 { pt3dadd( -106.106, 80.331, -34.0177, 0.96 ) }
    dend_61 { pt3dadd( -107.339, 81.0455, -33.9126, 0.29 ) }
    dend_61 { pt3dadd( -107.434, 81.1028, -33.9029, 0.29 ) }
    dend_61 { pt3dadd( -108.468, 81.7619, -33.7776, 0.29 ) }
    dend_61 { pt3dadd( -109.698, 82.6603, -33.6718, 1.18 ) }
    dend_61 { pt3dadd( -110.443, 83.2962, -33.6098, 1.55 ) }
    dend_61 { pt3dadd( -111.319, 84.1885, -33.5392, 0.37 ) }
    dend_61 { pt3dadd( -112.036, 85.0589, -33.4827, 0.22 ) }
    dend_61 { pt3dadd( -112.252, 85.3331, -33.4652, 0.59 ) }
    dend_61 { pt3dadd( -112.32, 85.4228, -33.4593, 0.59 ) }
    dend_61 { pt3dadd( -112.633, 85.8474, -33.4294, 0.59 ) }
    dend_61 { pt3dadd( -113.178, 86.4859, -33.4293, 0.29 ) }
    dend_61 { pt3dadd( -113.713, 87.0042, -33.424, 0.22 ) }
    dend_61 { pt3dadd( -114.429, 87.573, -33.3911, 0.81 ) }
    dend_61 { pt3dadd( -114.865, 87.8846, -33.3614, 1.11 ) }
    dend_61 { pt3dadd( -115.642, 88.3997, -33.2933, 0.96 ) }
    dend_61 { pt3dadd( -117.128, 89.3772, -33.1403, 0.29 ) }
    dend_61 { pt3dadd( -118.332, 90.2123, -33.0026, 0.29 ) }
    dend_61 { pt3dadd( -119.033, 90.7549, -32.916, 1.18 ) }
    dend_61 { pt3dadd( -119.63, 91.2648, -32.8303, 1.69 ) }
    dend_61 { pt3dadd( -120.241, 91.8584, -32.7727, 1.03 ) }
    dend_61 { pt3dadd( -121.557, 93.3088, -32.6598, 0.22 ) }
    dend_61 { pt3dadd( -122.606, 94.6122, -32.5497, 0.22 ) }
    dend_61 { pt3dadd( -123.487, 95.8106, -32.4795, 1.18 ) }
    dend_61 { pt3dadd( -123.89, 96.3981, -32.4421, 1.47 ) }
    dend_61 { pt3dadd( -124.997, 98.1797, -32.3048, 0.22 ) }
    dend_61 { pt3dadd( -125.477, 99.0241, -32.2321, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_61 { pt3dadd( -125.957, 99.9403, -32.1163, 0.81 ) }
    dend_61 { pt3dadd( -126.265, 100.559, -32.0139, 0.88 ) }
    dend_61 { pt3dadd( -126.519, 101.082, -31.9079, 0.88 ) }
    dend_61 { pt3dadd( -127.18, 102.445, -31.5828, 0.29 ) }
    dend_61 { pt3dadd( -127.643, 103.394, -31.3033, 0.29 ) }
    dend_61 { pt3dadd( -128.274, 104.574, -30.9843, 0.88 ) }
    dend_61 { pt3dadd( -128.672, 105.209, -30.8126, 1.25 ) }
    dend_61 { pt3dadd( -128.895, 105.516, -30.7195, 1.4 ) }
    dend_61 { pt3dadd( -128.953, 105.593, -30.6958, 1.4 ) }
    dend_61 { pt3dadd( -129.487, 106.347, -30.4698, 1.4 ) }
    dend_61 { pt3dadd( -130.458, 107.845, -29.9331, 0.22 ) }
    dend_61 { pt3dadd( -131.061, 108.85, -29.5447, 0.22 ) }
    dend_61 { pt3dadd( -131.509, 109.615, -29.2319, 0.29 ) }
    dend_61 { pt3dadd( -132.221, 110.792, -28.608, 0.29 ) }
    dend_61 { pt3dadd( -132.889, 111.892, -27.9461, 0.29 ) }
    dend_61 { pt3dadd( -133.929, 113.642, -26.7926, 1.33 ) }
    dend_61 { pt3dadd( -134.06, 113.875, -26.6318, 1.77 ) }
    dend_61 { pt3dadd( -134.487, 114.671, -26.0648, 1.77 ) }
    dend_61 { pt3dadd( -135.636, 116.752, -24.5937, 0.22 ) }
    dend_61 { pt3dadd( -136.169, 117.637, -24.0239, 0.22 ) }
    dend_61 { pt3dadd( -136.592, 118.344, -23.6706, 0.22 ) }
    dend_61 { pt3dadd( -136.975, 119.022, -23.4539, 0.74 ) }
    dend_61 { pt3dadd( -137.371, 119.738, -23.2962, 1.03 ) }
    dend_61 { pt3dadd( -137.741, 120.44, -23.2195, 0.96 ) }
    dend_61 { pt3dadd( -138.683, 122.199, -23.272, 0.22 ) }
    dend_61 { pt3dadd( -139.247, 123.15, -23.3111, 0.37 ) }
    dend_61 { pt3dadd( -139.301, 123.233, -23.3152, 0.37 ) }
    dend_61 { pt3dadd( -139.838, 123.947, -23.3452, 0.37 ) }
    dend_61 { pt3dadd( -140.109, 124.273, -23.3528, 0.88 ) }
    dend_61 { pt3dadd( -140.632, 124.854, -23.3272, 1.18 ) }
    dend_61 { pt3dadd( -140.957, 125.196, -23.2952, 1.18 ) }
    dend_61 { pt3dadd( -141.43, 125.7, -23.2487, 0.81 ) }
    dend_61 { pt3dadd( -142.181, 126.599, -23.1759, 0.29 ) }
    dend_61 { pt3dadd( -142.671, 127.252, -23.129, 0.59 ) }
    dend_61 { pt3dadd( -143.032, 127.799, -23.0952, 0.59 ) }
    dend_61 { pt3dadd( -143.725, 129.092, -23.0915, 0.22 ) }
    dend_61 { pt3dadd( -143.771, 129.197, -23.0962, 0.22 ) }
    dend_61 { pt3dadd( -144.16, 130.297, -23.1897, 0.66 ) }
    dend_61 { pt3dadd( -144.188, 130.393, -23.2007, 0.66 ) }
    dend_61 { pt3dadd( -144.326, 130.905, -23.2636, 0.66 ) }
    dend_61 { pt3dadd( -144.67, 132.329, -23.4488, 0.22 ) }
    dend_61 { pt3dadd( -144.846, 133.062, -23.5568, 0.44 ) }
    dend_61 { pt3dadd( -145.001, 133.568, -23.653, 0.44 ) }
    dend_61 { pt3dadd( -145.36, 134.523, -23.8508, 0.22 ) }
    dend_61 { pt3dadd( -145.82, 135.609, -24.0679, 0.96 ) }
    dend_61 { pt3dadd( -146.019, 136.04, -24.1504, 1.33 ) }
    dend_61 { pt3dadd( -146.395, 136.835, -24.2863, 1.33 ) }
    dend_61 { pt3dadd( -147.132, 138.473, -24.5932, 0.29 ) }
    dend_61 { pt3dadd( -147.646, 139.663, -24.8233, 0.29 ) }
    dend_61 { pt3dadd( -148.021, 140.551, -25.0102, 0.29 ) }
    dend_61 { pt3dadd( -148.109, 140.76, -25.0552, 0.29 ) }
    dend_61 { pt3dadd( -148.399, 141.49, -25.1945, 0.29 ) }
    dend_61 { pt3dadd( -149.024, 143.158, -25.4721, 1.11 ) }
    dend_61 { pt3dadd( -149.232, 143.74, -25.5471, 1.47 ) }
    dend_61 { pt3dadd( -149.983, 145.97, -25.8696, 0.29 ) }
    dend_61 { pt3dadd( -150.015, 146.064, -25.8834, 0.29 ) }
    dend_61 { pt3dadd( -150.626, 147.909, -26.1391, 0.29 ) }
    dend_61 { pt3dadd( -150.658, 148.005, -26.1515, 0.29 ) }
    dend_61 { pt3dadd( -151.367, 150.348, -26.4117, 0.88 ) }
    dend_61 { pt3dadd( -151.969, 152.484, -26.6419, 0.22 ) }
    dend_61 { pt3dadd( -152.198, 153.338, -26.7216, 0.22 ) }
    dend_61 { pt3dadd( -152.402, 154.075, -26.7901, 0.96 ) }
    dend_61 { pt3dadd( -152.56, 154.615, -26.8402, 1.18 ) }
    dend_61 { pt3dadd( -152.816, 155.439, -26.9078, 0.66 ) }
    dend_61 { pt3dadd( -153.485, 157.302, -27.06, 0.29 ) }
    dend_61 { pt3dadd( -154.006, 158.545, -27.142, 0.29 ) }
    dend_61 { pt3dadd( -154.412, 159.424, -27.2047, 0.96 ) }
    dend_61 { pt3dadd( -154.701, 159.967, -27.2408, 1.33 ) }
    dend_61 { pt3dadd( -155.132, 160.692, -27.2817, 1.4 ) }
    dend_61 { pt3dadd( -156.554, 162.665, -27.3872, 0.22 ) }
    dend_61 { pt3dadd( -156.617, 162.741, -27.3907, 0.22 ) }
    dend_61 { pt3dadd( -157.386, 163.567, -27.4311, 0.22 ) }
    dend_61 { pt3dadd( -158.481, 164.645, -27.4947, 0.74 ) }
    dend_61 { pt3dadd( -159.231, 165.346, -27.537, 0.88 ) }
    dend_61 { pt3dadd( -160.776, 166.774, -27.7281, 0.22 ) }
    dend_61 { pt3dadd( -160.858, 166.849, -27.7416, 0.22 ) }
    dend_61 { pt3dadd( -161.585, 167.56, -27.8904, 0.22 ) }
    dend_61 { pt3dadd( -162.236, 168.246, -28.0543, 1.18 ) }
    dend_61 { pt3dadd( -162.74, 168.859, -28.2074, 1.4 ) }
    dend_61 { pt3dadd( -164.335, 171.08, -28.7235, 0.29 ) }
    dend_61 { pt3dadd( -164.876, 171.945, -28.9333, 0.29 ) }
    dend_61 { pt3dadd( -165.619, 173.177, -29.2299, 0.29 ) }
    dend_61 { pt3dadd( -165.784, 173.449, -29.2932, 0.29 ) }
    dend_61 { pt3dadd( -166.372, 174.336, -29.4766, 0.29 ) }
    dend_61 { pt3dadd( -167.053, 175.338, -29.6686, 0.88 ) }
    dend_61 { pt3dadd( -168.093, 176.806, -29.8748, 0.22 ) }
    dend_61 { pt3dadd( -168.757, 177.7, -30.0278, 0.22 ) }
    dend_61 { pt3dadd( -169.354, 178.419, -30.1765, 0.59 ) }
    dend_61 { pt3dadd( -170.197, 179.319, -30.3776, 0.22 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 89/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -0.74753, 6.13951, -20.411, 0.52 ) }
    dend_60 { pt3dadd( 0.546394, 7.19269, -20.5073, 0.52 ) }
    dend_60 { pt3dadd( 1.25923, 7.97251, -20.5297, 0.52 ) }
    dend_60 { pt3dadd( 1.31599, 8.05685, -20.5293, 0.52 ) }
    dend_60 { pt3dadd( 1.61755, 8.69484, -20.5137, 0.52 ) }
    dend_60 { pt3dadd( 1.86506, 9.42492, -20.489, 1.03 ) }
    dend_60 { pt3dadd( 2.105, 10.3534, -20.4581, 1.47 ) }
    dend_60 { pt3dadd( 2.17185, 11.0423, -20.4253, 1.77 ) }
    dend_60 { pt3dadd( 2.18916, 11.8146, -20.4013, 1.99 ) }
    dend_60 { pt3dadd( 2.20078, 12.912, -20.4132, 1.11 ) }
    dend_60 { pt3dadd( 2.2162, 13.7191, -20.4521, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_60 { pt3dadd( 2.26659, 14.4437, -20.5482, 0.81 ) }
    dend_60 { pt3dadd( 2.27586, 14.5032, -20.5609, 0.81 ) }
    dend_60 { pt3dadd( 2.61018, 15.7326, -20.883, 1.33 ) }
    dend_60 { pt3dadd( 2.93232, 16.5653, -21.1891, 1.84 ) }
    dend_60 { pt3dadd( 3.2673, 17.2795, -21.5083, 1.84 ) }
    dend_60 { pt3dadd( 3.69677, 18.1207, -21.9634, 1.18 ) }
    dend_60 { pt3dadd( 4.19751, 19.1187, -22.5391, 0.88 ) }
    dend_60 { pt3dadd( 4.64572, 20.062, -23.0912, 0.52 ) }
    dend_60 { pt3dadd( 5.38178, 21.7353, -24.0729, 0.52 ) }
    dend_60 { pt3dadd( 5.42017, 21.8358, -24.131, 0.52 ) }
    dend_60 { pt3dadd( 5.94403, 23.3065, -24.915, 0.52 ) }
    dend_60 { pt3dadd( 6.20511, 24.0583, -25.3506, 0.44 ) }
    dend_60 { pt3dadd( 6.32472, 24.4223, -25.627, 0.44 ) }
    dend_60 { pt3dadd( 6.50514, 24.9889, -26.1135, 0.44 ) }
    dend_60 { pt3dadd( 6.57113, 25.1629, -26.2834, 0.44 ) }
    dend_60 { pt3dadd( 7.02007, 26.1911, -27.2757, 0.44 ) }
    dend_60 { pt3dadd( 7.92992, 28.0635, -29.0019, 1.77 ) }
    dend_60 { pt3dadd( 8.6113, 29.3805, -30.1754, 2.43 ) }
    dend_60 { pt3dadd( 8.92616, 29.9799, -30.6627, 2.43 ) }
    dend_60 { pt3dadd( 9.83784, 31.6906, -31.958, 0.37 ) }
    dend_60 { pt3dadd( 10.3557, 32.7035, -32.635, 0.96 ) }
    dend_60 { pt3dadd( 10.7191, 33.5068, -33.1696, 1.25 ) }
    dend_60 { pt3dadd( 10.8993, 33.9392, -33.4052, 1.47 ) }
    dend_60 { pt3dadd( 11.3315, 35.0415, -33.9776, 0.52 ) }
    dend_60 { pt3dadd( 11.8931, 36.5969, -34.8241, 1.92 ) }
    dend_60 { pt3dadd( 12.0781, 37.1676, -35.148, 2.06 ) }
    dend_60 { pt3dadd( 12.7763, 39.2155, -36.535, 1.03 ) }
    dend_60 { pt3dadd( 13.103, 40.0913, -37.181, 0.29 ) }
    dend_60 { pt3dadd( 13.1495, 40.208, -37.2675, 0.29 ) }
    dend_60 { pt3dadd( 13.3436, 40.6792, -37.5977, 0.29 ) }
    dend_60 { pt3dadd( 13.3778, 40.7564, -37.6393, 0.29 ) }
    dend_60 { pt3dadd( 13.7915, 41.5482, -37.9336, 0.29 ) }
    dend_60 { pt3dadd( 14.0728, 42.0641, -37.9958, 0.29 ) }
    dend_60 { pt3dadd( 14.463, 42.8839, -38.1338, 0.81 ) }
    dend_60 { pt3dadd( 14.6292, 43.3306, -38.2253, 1.03 ) }
    dend_60 { pt3dadd( 14.6621, 43.4302, -38.2552, 1.03 ) }
    dend_60 { pt3dadd( 14.8496, 43.9764, -38.4505, 0.74 ) }
    dend_60 { pt3dadd( 15.2113, 44.9365, -38.9301, 0.22 ) }
    dend_60 { pt3dadd( 15.235, 44.9818, -38.9632, 0.22 ) }
    dend_60 { pt3dadd( 15.7631, 45.7939, -39.6998, 1.47 ) }
    dend_60 { pt3dadd( 16.2438, 46.374, -40.3235, 2.36 ) }
    dend_60 { pt3dadd( 16.578, 46.7168, -40.7417, 2.5 ) }
    dend_60 { pt3dadd( 17.4896, 47.5871, -41.8885, 1.4 ) }
    dend_60 { pt3dadd( 18.3605, 48.4389, -43.0197, 0.37 ) }
    dend_60 { pt3dadd( 18.4552, 48.5398, -43.1509, 0.37 ) }
    dend_60 { pt3dadd( 18.9327, 49.1479, -43.9045, 0.29 ) }
    dend_60 { pt3dadd( 18.9543, 49.1858, -43.9463, 0.29 ) }
    dend_60 { pt3dadd( 19.2319, 49.8869, -44.6215, 0.29 ) }
    dend_60 { pt3dadd( 19.4094, 50.6731, -45.272, 0.29 ) }
    dend_60 { pt3dadd( 19.423, 50.7796, -45.348, 0.29 ) }
    dend_60 { pt3dadd( 19.5363, 51.7909, -46.0574, 1.18 ) }
    dend_60 { pt3dadd( 19.6124, 52.6249, -46.6433, 1.77 ) }
    dend_60 { pt3dadd( 19.6615, 53.2776, -47.1192, 1.18 ) }
    dend_60 { pt3dadd( 19.7512, 54.6055, -48.1168, 0.52 ) }
    dend_60 { pt3dadd( 19.7936, 55.411, -48.6923, 0.81 ) }
    dend_60 { pt3dadd( 19.8281, 56.4997, -49.4192, 0.81 ) }
    dend_60 { pt3dadd( 19.8286, 56.5519, -49.4503, 0.81 ) }
    dend_60 { pt3dadd( 19.8504, 57.709, -50.0384, 0.29 ) }
    dend_60 { pt3dadd( 19.8843, 58.2834, -50.2876, 0.29 ) }
    dend_60 { pt3dadd( 20.004, 59.1367, -50.5516, 0.74 ) }
    dend_60 { pt3dadd( 20.0185, 59.2055, -50.5694, 0.74 ) }
    dend_60 { pt3dadd( 20.217, 59.9118, -50.7274, 0.96 ) }
    dend_60 { pt3dadd( 20.4787, 60.6734, -50.9408, 0.52 ) }
    dend_60 { pt3dadd( 20.8862, 61.7365, -51.3231, 1.47 ) }
    dend_60 { pt3dadd( 21.1049, 62.3205, -51.5836, 2.21 ) }
    dend_60 { pt3dadd( 21.1235, 62.381, -51.6165, 2.21 ) }
    dend_60 { pt3dadd( 21.3629, 63.3587, -52.204, 2.21 ) }
    dend_60 { pt3dadd( 21.6837, 64.8558, -53.1922, 0.37 ) }
    dend_60 { pt3dadd( 21.8783, 65.7789, -53.849, 0.37 ) }
    dend_60 { pt3dadd( 21.9, 65.8812, -53.9286, 0.37 ) }
    dend_60 { pt3dadd( 22.0352, 66.7536, -54.7028, 0.44 ) }
    dend_60 { pt3dadd( 22.0687, 67.0347, -54.9519, 0.44 ) }
    dend_60 { pt3dadd( 22.1408, 67.6662, -55.5226, 0.22 ) }
    dend_60 { pt3dadd( 22.2055, 68.1346, -55.957, 0.22 ) }
    dend_60 { pt3dadd( 22.3581, 69.04, -56.7939, 1.47 ) }
    dend_60 { pt3dadd( 22.6913, 70.7416, -58.4651, 0.52 ) }
    dend_60 { pt3dadd( 22.8328, 71.3976, -59.1252, 0.66 ) }
    dend_60 { pt3dadd( 23.1117, 72.795, -60.5535, 1.33 ) }
    dend_60 { pt3dadd( 23.214, 73.4203, -61.1755, 1.77 ) }
    dend_60 { pt3dadd( 23.2205, 73.4633, -61.2173, 1.77 ) }
    dend_60 { pt3dadd( 23.4935, 74.8997, -62.521, 0.29 ) }
    dend_60 { pt3dadd( 23.6059, 75.3275, -62.8929, 0.22 ) }
    dend_60 { pt3dadd( 23.8793, 76.2754, -63.7453, 0.96 ) }
    dend_60 { pt3dadd( 24.0317, 76.7601, -64.1734, 1.25 ) }
    dend_60 { pt3dadd( 24.3747, 77.6348, -64.9671, 0.66 ) }
    dend_60 { pt3dadd( 24.6547, 78.1658, -65.5214, 0.29 ) }
    dend_60 { pt3dadd( 25.044, 78.7579, -66.2078, 0.29 ) }
    dend_60 { pt3dadd( 25.2658, 79.0394, -66.5937, 0.96 ) }
    dend_60 { pt3dadd( 25.4385, 79.2597, -66.9322, 1.25 ) }
    dend_60 { pt3dadd( 25.8227, 79.7581, -67.7718, 1.11 ) }
    dend_60 { pt3dadd( 26.3793, 80.5255, -69.1504, 0.29 ) }
    dend_60 { pt3dadd( 26.6065, 80.8478, -69.7666, 0.29 ) }
    dend_60 { pt3dadd( 26.6236, 80.8752, -69.8169, 0.29 ) }
    dend_60 { pt3dadd( 26.9957, 81.6366, -71.0586, 1.4 ) }
    dend_60 { pt3dadd( 27.1105, 81.9332, -71.4807, 1.62 ) }
    dend_60 { pt3dadd( 27.3333, 82.8391, -72.5033, 0.88 ) }
    dend_60 { pt3dadd( 27.5349, 83.7391, -73.2398, 0.29 ) }
    dend_60 { pt3dadd( 27.5836, 83.8976, -73.3649, 0.29 ) }
    dend_60 { pt3dadd( 27.9077, 84.6286, -73.9546, 0.29 ) }
    dend_60 { pt3dadd( 27.9484, 84.7067, -74.0275, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_60 { pt3dadd( 28.1858, 85.326, -74.7483, 0.29 ) }
    dend_60 { pt3dadd( 28.3592, 85.9421, -75.5175, 0.29 ) }
    dend_60 { pt3dadd( 28.5751, 86.7348, -76.4845, 0.29 ) }
    dend_60 { pt3dadd( 28.8399, 87.5306, -77.443, 1.62 ) }
    dend_60 { pt3dadd( 29.2923, 88.6542, -78.9035, 1.84 ) }
    dend_60 { pt3dadd( 29.8307, 89.9059, -80.4999, 0.37 ) }
    dend_60 { pt3dadd( 29.9877, 90.2948, -81.0028, 0.37 ) }
    dend_60 { pt3dadd( 30.3006, 91.2538, -82.1827, 1.18 ) }
    dend_60 { pt3dadd( 30.4316, 91.7677, -82.732, 1.47 ) }
    dend_60 { pt3dadd( 30.7451, 93.5313, -84.5087, 0.37 ) }
    dend_60 { pt3dadd( 30.8388, 94.1219, -85.0499, 0.37 ) }
    dend_60 { pt3dadd( 30.9796, 95.2405, -86.0307, 1.55 ) }
    dend_60 { pt3dadd( 30.9982, 95.4823, -86.2587, 1.92 ) }
    dend_60 { pt3dadd( 31.002, 95.9647, -86.7267, 1.92 ) }
    dend_60 { pt3dadd( 31.0249, 97.3494, -88.0579, 0.29 ) }
    dend_60 { pt3dadd( 31.0658, 98.0546, -88.6655, 0.29 ) }
    dend_60 { pt3dadd( 31.1042, 98.3469, -88.9238, 0.29 ) }
    dend_60 { pt3dadd( 31.2171, 98.8991, -89.4126, 0.96 ) }
    dend_60 { pt3dadd( 31.2818, 99.3326, -89.8374, 0.96 ) }
    dend_60 { pt3dadd( 31.3906, 100.349, -90.9127, 0.29 ) }
    dend_60 { pt3dadd( 31.406, 100.583, -91.1479, 0.29 ) }
    dend_60 { pt3dadd( 31.3979, 100.883, -91.4492, 0.88 ) }
    dend_60 { pt3dadd( 31.2331, 101.569, -92.4082, 1.4 ) }
    dend_60 { pt3dadd( 30.9564, 102.233, -93.5266, 0.29 ) }
    dend_60 { pt3dadd( 30.938, 102.264, -93.5862, 0.29 ) }
    dend_60 { pt3dadd( 30.7223, 102.558, -94.206, 0.29 ) }
    dend_60 { pt3dadd( 30.2824, 103.111, -95.4933, 0.88 ) }
    dend_60 { pt3dadd( 29.2792, 104.312, -98.3268, 1.11 ) }
    dend_60 { pt3dadd( 29.2557, 104.338, -98.3862, 1.11 ) }
    dend_60 { pt3dadd( 28.9404, 104.637, -99.0277, 1.33 ) }
    dend_60 { pt3dadd( 28.9137, 104.662, -99.0739, 1.33 ) }
    dend_60 { pt3dadd( 28.1419, 105.388, -100.221, 0.37 ) }
    dend_60 { pt3dadd( 27.7773, 105.854, -100.779, 0.81 ) }
    dend_60 { pt3dadd( 27.5718, 106.283, -101.125, 0.96 ) }
    dend_60 { pt3dadd( 27.1701, 107.283, -101.913, 0.22 ) }
    dend_60 { pt3dadd( 26.9959, 107.852, -102.338, 0.74 ) }
    dend_60 { pt3dadd( 26.9111, 108.192, -102.58, 1.03 ) }
    dend_60 { pt3dadd( 26.557, 110.277, -103.934, 0.29 ) }
    dend_60 { pt3dadd( 26.4809, 110.913, -104.324, 0.81 ) }
    dend_60 { pt3dadd( 26.4332, 111.448, -104.614, 1.33 ) }
    dend_60 { pt3dadd( 26.373, 112.089, -104.897, 1.03 ) }
    dend_60 { pt3dadd( 26.2743, 112.746, -105.164, 0.44 ) }
    dend_60 { pt3dadd( 26.1475, 113.456, -105.417, 0.29 ) }
    dend_60 { pt3dadd( 26.0065, 114.273, -105.637, 0.29 ) }
    dend_60 { pt3dadd( 25.9439, 114.772, -105.784, 1.11 ) }
    dend_60 { pt3dadd( 25.9021, 115.335, -105.955, 1.62 ) }
    dend_60 { pt3dadd( 25.864, 116.511, -106.297, 1.55 ) }
    dend_60 { pt3dadd( 25.8693, 117.789, -106.689, 0.29 ) }
    dend_60 { pt3dadd( 25.8869, 118.537, -106.959, 0.52 ) }
    dend_60 { pt3dadd( 25.9292, 119.168, -107.205, 0.37 ) }
    dend_60 { pt3dadd( 25.9747, 119.584, -107.367, 0.37 ) }
    dend_60 { pt3dadd( 26.1189, 120.458, -107.689, 1.18 ) }
    dend_60 { pt3dadd( 26.3168, 121.444, -107.999, 0.96 ) }
    dend_60 { pt3dadd( 26.6012, 122.706, -108.379, 0.15 ) }
    dend_60 { pt3dadd( 26.731, 123.368, -108.62, 0.44 ) }
    dend_60 { pt3dadd( 26.8249, 123.979, -108.863, 0.52 ) }
    dend_60 { pt3dadd( 26.91, 124.678, -109.149, 0.15 ) }
    dend_60 { pt3dadd( 26.9732, 125.357, -109.425, 0.66 ) }
    dend_60 { pt3dadd( 26.9938, 125.649, -109.55, 0.81 ) }
    dend_60 { pt3dadd( 27.0021, 126.984, -110.177, 0.37 ) }
    dend_60 { pt3dadd( 26.9819, 127.476, -110.413, 0.37 ) }
    dend_60 { pt3dadd( 26.969, 127.707, -110.523, 0.88 ) }
    dend_60 { pt3dadd( 26.9447, 128.183, -110.738, 1.18 ) }
    dend_60 { pt3dadd( 26.948, 129.665, -111.344, 0.15 ) }
    dend_60 { pt3dadd( 26.9509, 130.318, -111.561, 0.15 ) }
    dend_60 { pt3dadd( 26.9697, 131.364, -111.83, 1.11 ) }
    dend_60 { pt3dadd( 26.9819, 131.667, -111.903, 1.33 ) }
    dend_60 { pt3dadd( 27.0304, 132.292, -112.036, 0.96 ) }
    dend_60 { pt3dadd( 27.1995, 133.565, -112.252, 0.15 ) }
    dend_60 { pt3dadd( 27.379, 134.684, -112.454, 0.15 ) }
    dend_60 { pt3dadd( 27.3972, 134.781, -112.477, 0.15 ) }
    dend_60 { pt3dadd( 27.5507, 135.575, -112.705, 1.11 ) }
    dend_60 { pt3dadd( 27.65, 136.132, -112.864, 1.33 ) }
    dend_60 { pt3dadd( 27.7865, 136.854, -113.06, 0.59 ) }
    dend_60 { pt3dadd( 28.1991, 138.673, -113.622, 0.29 ) }
    dend_60 { pt3dadd( 28.4078, 139.474, -113.896, 0.29 ) }
    dend_60 { pt3dadd( 28.4251, 139.539, -113.919, 0.29 ) }
    dend_60 { pt3dadd( 28.7604, 140.94, -114.413, 0.96 ) }
    dend_60 { pt3dadd( 28.9949, 141.987, -114.762, 0.29 ) }
    dend_60 { pt3dadd( 29.2702, 143.119, -115.106, 0.66 ) }
    dend_60 { pt3dadd( 29.2945, 143.207, -115.131, 0.66 ) }
    dend_60 { pt3dadd( 29.4901, 143.934, -115.365, 0.29 ) }
    dend_60 { pt3dadd( 29.6872, 144.755, -115.706, 0.29 ) }
    dend_60 { pt3dadd( 29.8173, 145.471, -116.068, 0.29 ) }
    dend_60 { pt3dadd( 29.8788, 146.204, -116.445, 0.96 ) }
    dend_60 { pt3dadd( 29.8971, 146.996, -116.823, 1.18 ) }
    dend_60 { pt3dadd( 29.8979, 147.051, -116.849, 1.18 ) }
    dend_60 { pt3dadd( 29.8939, 148.397, -117.575, 0.22 ) }
    dend_60 { pt3dadd( 29.9044, 148.776, -117.794, 0.22 ) }
    dend_60 { pt3dadd( 29.9299, 149.348, -118.135, 0.74 ) }
    dend_60 { pt3dadd( 29.9461, 149.605, -118.28, 0.74 ) }
    dend_60 { pt3dadd( 30.0261, 150.367, -118.756, 0.22 ) }
    dend_60 { pt3dadd( 30.2034, 151.432, -119.488, 1.11 ) }
    dend_60 { pt3dadd( 30.2737, 151.724, -119.696, 1.4 ) }
    dend_60 { pt3dadd( 30.2962, 151.801, -119.756, 1.4 ) }
    dend_60 { pt3dadd( 30.3976, 152.139, -120.029, 1.4 ) }
    dend_60 { pt3dadd( 30.8431, 153.649, -121.272, 0.29 ) }
    dend_60 { pt3dadd( 30.9809, 154.133, -121.678, 0.29 ) }
    dend_60 { pt3dadd( 31.1235, 154.654, -122.073, 0.44 ) }
    dend_60 { pt3dadd( 31.1696, 154.845, -122.213, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_60 { pt3dadd( 31.2914, 155.424, -122.59, 0.22 ) }
    dend_60 { pt3dadd( 31.2992, 155.478, -122.618, 0.22 ) }
    dend_60 { pt3dadd( 31.3675, 156.419, -122.912, 0.66 ) }
    dend_60 { pt3dadd( 31.3683, 156.783, -123.027, 0.66 ) }
    dend_60 { pt3dadd( 31.3668, 156.852, -123.048, 0.66 ) }
    dend_60 { pt3dadd( 31.3291, 157.294, -123.217, 0.29 ) }
    dend_60 { pt3dadd( 31.2824, 157.927, -123.51, 0.22 ) }
    dend_60 { pt3dadd( 31.2444, 158.659, -123.865, 0.66 ) }
    dend_60 { pt3dadd( 31.2497, 158.834, -123.964, 0.96 ) }
    dend_60 { pt3dadd( 31.2812, 159.103, -124.139, 0.96 ) }
    dend_60 { pt3dadd( 31.5124, 160.365, -125.036, 0.22 ) }
    dend_60 { pt3dadd( 31.7128, 161.122, -125.617, 0.88 ) }
    dend_60 { pt3dadd( 31.8393, 161.435, -125.906, 0.88 ) }
    dend_60 { pt3dadd( 32.2803, 162.348, -126.805, 0.22 ) }
    dend_60 { pt3dadd( 32.4035, 162.587, -127.049, 0.81 ) }
    dend_60 { pt3dadd( 32.4291, 162.632, -127.097, 0.81 ) }
    dend_60 { pt3dadd( 32.6098, 162.916, -127.387, 0.81 ) }
    dend_60 { pt3dadd( 33.0943, 163.919, -128.494, 0.22 ) }
    dend_60 { pt3dadd( 33.1849, 164.262, -128.88, 0.22 ) }
    dend_60 { pt3dadd( 33.2145, 164.689, -129.325, 0.88 ) }
    dend_60 { pt3dadd( 33.215, 164.747, -129.381, 0.88 ) }
    dend_60 { pt3dadd( 33.2236, 165.179, -129.793, 0.88 ) }
    dend_60 { pt3dadd( 33.2219, 166.423, -130.915, 0.22 ) }
    dend_60 { pt3dadd( 33.2145, 167.152, -131.483, 0.22 ) }
    dend_60 { pt3dadd( 33.2251, 167.816, -131.998, 1.03 ) }
    dend_60 { pt3dadd( 33.2367, 168.345, -132.404, 1.25 ) }
    dend_60 { pt3dadd( 33.314, 169.614, -133.362, 0.22 ) }
    dend_60 { pt3dadd( 33.3792, 170.132, -133.728, 0.22 ) }
    dend_60 { pt3dadd( 33.5045, 170.739, -134.113, 0.88 ) }
    dend_60 { pt3dadd( 33.7445, 171.539, -134.619, 0.29 ) }
    dend_60 { pt3dadd( 33.9354, 172.212, -134.99, 0.29 ) }
    dend_60 { pt3dadd( 34.0917, 172.826, -135.271, 0.22 ) }
    dend_60 { pt3dadd( 34.2225, 173.585, -135.579, 0.22 ) }
    dend_60 { pt3dadd( 34.239, 173.706, -135.631, 0.22 ) }
    dend_60 { pt3dadd( 34.2942, 174.328, -135.892, 0.74 ) }
    dend_60 { pt3dadd( 34.3419, 175.631, -136.385, 0.22 ) }
    dend_60 { pt3dadd( 34.3265, 176.033, -136.529, 0.66 ) }
    dend_60 { pt3dadd( 34.1686, 177.597, -137.261, 0.22 ) }
    dend_60 { pt3dadd( 34.162, 177.659, -137.294, 0.22 ) }
    dend_60 { pt3dadd( 34.1258, 178.111, -137.554, 0.74 ) }
    dend_60 { pt3dadd( 34.1224, 178.172, -137.592, 0.74 ) }
    dend_60 { pt3dadd( 34.1244, 178.504, -137.818, 0.74 ) }
    dend_60 { pt3dadd( 34.1954, 179.966, -138.734, 0.22 ) }
    dend_60 { pt3dadd( 34.2031, 181.001, -139.293, 0.22 ) }
    dend_60 { pt3dadd( 34.2001, 181.065, -139.324, 0.22 ) }
    dend_60 { pt3dadd( 34.1715, 181.526, -139.533, 0.22 ) }
    dend_60 { pt3dadd( 34.1687, 181.583, -139.556, 0.22 ) }
    dend_60 { pt3dadd( 34.1355, 182.46, -139.89, 0.88 ) }
    dend_60 { pt3dadd( 34.0246, 184.136, -140.426, 0.22 ) }
    dend_60 { pt3dadd( 33.9613, 184.92, -140.695, 0.59 ) }
    dend_60 { pt3dadd( 33.9055, 185.63, -140.941, 0.22 ) }
    dend_60 { pt3dadd( 33.8524, 186.373, -141.202, 0.44 ) }
    dend_60 { pt3dadd( 33.8365, 186.662, -141.3, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_46 (entry count 53/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 9.33802, -5.36548, -21.2884, 0.74 ) }
    dend_58 { pt3dadd( 10.3764, -5.52128, -20.5638, 0.74 ) }
    dend_58 { pt3dadd( 13.0684, -5.83038, -19.2513, 1.03 ) }
    dend_58 { pt3dadd( 14.9218, -6.07762, -18.5911, 0.29 ) }
    dend_58 { pt3dadd( 16.5467, -6.31099, -18.1152, 1.18 ) }
    dend_58 { pt3dadd( 17.6135, -6.50783, -17.8762, 1.4 ) }
    dend_58 { pt3dadd( 19.3794, -6.89801, -17.5664, 0.29 ) }
    dend_58 { pt3dadd( 20.7321, -7.32354, -17.5063, 0.29 ) }
    dend_58 { pt3dadd( 21.657, -7.71588, -17.6721, 0.44 ) }
    dend_58 { pt3dadd( 21.7134, -7.74643, -17.6871, 0.44 ) }
    dend_58 { pt3dadd( 22.6528, -8.46892, -17.8992, 1.18 ) }
    dend_58 { pt3dadd( 23.0789, -8.90977, -17.9945, 2.06 ) }
    dend_58 { pt3dadd( 23.4107, -9.36801, -18.047, 2.36 ) }
    dend_58 { pt3dadd( 23.7759, -9.99394, -18.1205, 2.43 ) }
    dend_58 { pt3dadd( 24.4358, -11.1574, -18.2935, 1.03 ) }
    dend_58 { pt3dadd( 25.0186, -12.1707, -18.4617, 0.52 ) }
    dend_58 { pt3dadd( 25.4799, -12.9682, -18.6036, 0.52 ) }
    dend_58 { pt3dadd( 25.8817, -13.6193, -18.7342, 1.18 ) }
    dend_58 { pt3dadd( 26.2689, -14.1859, -18.8635, 1.47 ) }
    dend_58 { pt3dadd( 27.0297, -15.0569, -19.1016, 0.29 ) }
    dend_58 { pt3dadd( 27.3297, -15.2383, -19.1776, 0.29 ) }
    dend_58 { pt3dadd( 27.4613, -15.2703, -19.2014, 0.29 ) }
    dend_58 { pt3dadd( 28.414, -15.3417, -19.3272, 0.29 ) }
    dend_58 { pt3dadd( 28.4792, -15.3438, -19.3331, 0.29 ) }
    dend_58 { pt3dadd( 29.4425, -15.4644, -19.3803, 0.29 ) }
    dend_58 { pt3dadd( 30.7928, -15.8542, -19.3968, 1.77 ) }
    dend_58 { pt3dadd( 31.0658, -15.9894, -19.4125, 2.36 ) }
    dend_58 { pt3dadd( 31.127, -16.0314, -19.4206, 2.36 ) }
    dend_58 { pt3dadd( 31.6731, -16.4786, -19.5407, 2.36 ) }
    dend_58 { pt3dadd( 32.6732, -17.3435, -19.8417, 0.59 ) }
    dend_58 { pt3dadd( 33.2084, -17.8212, -20.0312, 0.29 ) }
    dend_58 { pt3dadd( 34.1096, -18.5463, -20.4003, 0.29 ) }
    dend_58 { pt3dadd( 34.8373, -19.0296, -20.7286, 0.29 ) }
    dend_58 { pt3dadd( 35.7199, -19.5053, -21.1667, 1.69 ) }
    dend_58 { pt3dadd( 36.5476, -19.8409, -21.5815, 2.36 ) }
    dend_58 { pt3dadd( 37.3169, -20.0596, -21.9678, 1.47 ) }
    dend_58 { pt3dadd( 38.5406, -20.2961, -22.5458, 0.59 ) }
    dend_58 { pt3dadd( 39.6771, -20.4162, -23.0327, 0.52 ) }
    dend_58 { pt3dadd( 40.5321, -20.4769, -23.352, 0.29 ) }
    dend_58 { pt3dadd( 41.313, -20.5243, -23.6164, 0.59 ) }
    dend_58 { pt3dadd( 41.3754, -20.5318, -23.634, 0.59 ) }
    dend_58 { pt3dadd( 41.7794, -20.6692, -23.7009, 0.81 ) }
    dend_58 { pt3dadd( 41.8645, -20.7326, -23.6927, 0.81 ) }
    dend_58 { pt3dadd( 42.3248, -21.1791, -23.5935, 0.74 ) }
    dend_58 { pt3dadd( 42.3722, -21.2249, -23.5875, 0.74 ) }
    dend_58 { pt3dadd( 43.133, -21.8924, -23.5485, 0.52 ) }
    dend_58 { pt3dadd( 43.9196, -22.5401, -23.539, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( 44.9411, -23.3564, -23.5551, 1.99 ) }
    dend_58 { pt3dadd( 45.4603, -23.7688, -23.5745, 2.8 ) }
    dend_58 { pt3dadd( 46.8461, -24.8477, -23.6548, 0.52 ) }
    dend_58 { pt3dadd( 47.8356, -25.6193, -23.7829, 0.37 ) }
    dend_58 { pt3dadd( 48.4982, -26.0977, -23.9118, 0.29 ) }
    dend_58 { pt3dadd( 48.9682, -26.4227, -24.0352, 0.74 ) }
    dend_58 { pt3dadd( 49.5233, -26.7809, -24.2051, 1.03 ) }
    dend_58 { pt3dadd( 49.6415, -26.8457, -24.2433, 1.03 ) }
    dend_58 { pt3dadd( 51.0024, -27.3833, -24.6389, 0.29 ) }
    dend_58 { pt3dadd( 51.8108, -27.5695, -24.8702, 0.29 ) }
    dend_58 { pt3dadd( 51.8739, -27.5724, -24.887, 0.29 ) }
    dend_58 { pt3dadd( 52.6416, -27.5961, -25.0843, 0.88 ) }
    dend_58 { pt3dadd( 53.3297, -27.6108, -25.2507, 1.47 ) }
    dend_58 { pt3dadd( 53.9125, -27.6252, -25.3766, 1.77 ) }
    dend_58 { pt3dadd( 54.1226, -27.6305, -25.4126, 1.77 ) }
    dend_58 { pt3dadd( 55.2806, -27.721, -25.6599, 0.44 ) }
    dend_58 { pt3dadd( 56.3606, -27.8151, -25.9217, 0.22 ) }
    dend_58 { pt3dadd( 56.4238, -27.8184, -25.9407, 0.22 ) }
    dend_58 { pt3dadd( 57.0471, -27.8411, -26.1315, 0.81 ) }
    dend_58 { pt3dadd( 57.1018, -27.8455, -26.1461, 0.81 ) }
    dend_58 { pt3dadd( 57.5009, -27.9046, -26.2307, 0.81 ) }
    dend_58 { pt3dadd( 57.5537, -27.9173, -26.2439, 0.81 ) }
    dend_58 { pt3dadd( 58.7344, -28.2327, -26.5874, 0.29 ) }
    dend_58 { pt3dadd( 59.5702, -28.472, -26.8294, 0.29 ) }
    dend_58 { pt3dadd( 60.7064, -28.8324, -27.1585, 1.33 ) }
    dend_58 { pt3dadd( 61.5038, -29.0776, -27.371, 1.77 ) }
    dend_58 { pt3dadd( 62.866, -29.504, -27.703, 0.37 ) }
    dend_58 { pt3dadd( 62.9259, -29.5245, -27.7183, 0.37 ) }
    dend_58 { pt3dadd( 63.874, -29.9233, -27.9811, 0.37 ) }
    dend_58 { pt3dadd( 63.9309, -29.9473, -28.0019, 0.37 ) }
    dend_58 { pt3dadd( 64.6871, -30.2684, -28.3488, 0.37 ) }
    dend_58 { pt3dadd( 64.9074, -30.3706, -28.4873, 0.37 ) }
    dend_58 { pt3dadd( 65.6422, -30.8141, -29.091, 0.29 ) }
    dend_58 { pt3dadd( 66.0217, -31.0708, -29.4517, 0.29 ) }
    dend_58 { pt3dadd( 66.6783, -31.5616, -30.1474, 1.55 ) }
    dend_58 { pt3dadd( 67.0202, -31.8165, -30.5206, 1.55 ) }
    dend_58 { pt3dadd( 68.0234, -32.5422, -31.6241, 0.66 ) }
    dend_58 { pt3dadd( 68.8527, -32.9981, -32.4635, 0.29 ) }
    dend_58 { pt3dadd( 69.1128, -33.0941, -32.7274, 0.66 ) }
    dend_58 { pt3dadd( 69.3598, -33.1572, -32.9656, 0.74 ) }
    dend_58 { pt3dadd( 69.4758, -33.1768, -33.0779, 0.74 ) }
    dend_58 { pt3dadd( 69.9116, -33.2079, -33.502, 0.44 ) }
    dend_58 { pt3dadd( 71.4352, -33.1044, -35.1325, 2.21 ) }
    dend_58 { pt3dadd( 73.3225, -32.8595, -37.2698, 0.22 ) }
    dend_58 { pt3dadd( 73.8525, -32.7882, -37.9002, 0.22 ) }
    dend_58 { pt3dadd( 74.4386, -32.678, -38.5991, 0.74 ) }
    dend_58 { pt3dadd( 74.7896, -32.5791, -38.9974, 0.74 ) }
    dend_58 { pt3dadd( 76.5013, -32.0248, -40.8371, 0.29 ) }
    dend_58 { pt3dadd( 77.0364, -31.8211, -41.3528, 0.29 ) }
    dend_58 { pt3dadd( 77.4809, -31.662, -41.726, 0.29 ) }
    dend_58 { pt3dadd( 78.4775, -31.3974, -42.5185, 2.14 ) }
    dend_58 { pt3dadd( 80.4339, -31.0769, -43.8608, 0.29 ) }
    dend_58 { pt3dadd( 81.1624, -31.0318, -44.2893, 0.29 ) }
    dend_58 { pt3dadd( 81.2301, -31.0327, -44.3221, 0.29 ) }
    dend_58 { pt3dadd( 81.9245, -31.0958, -44.679, 0.29 ) }
    dend_58 { pt3dadd( 82.4459, -31.218, -44.955, 1.33 ) }
    dend_58 { pt3dadd( 82.7322, -31.3212, -45.1289, 1.47 ) }
    dend_58 { pt3dadd( 83.2327, -31.5082, -45.4336, 1.03 ) }
    dend_58 { pt3dadd( 84.5849, -31.8976, -46.2549, 0.29 ) }
    dend_58 { pt3dadd( 85.4523, -32.0865, -46.794, 0.29 ) }
    dend_58 { pt3dadd( 86.4144, -32.1941, -47.3683, 0.96 ) }
    dend_58 { pt3dadd( 87.8304, -32.278, -48.1884, 0.29 ) }
    dend_58 { pt3dadd( 88.4038, -32.2614, -48.4986, 0.88 ) }
    dend_58 { pt3dadd( 88.677, -32.2284, -48.6245, 1.18 ) }
    dend_58 { pt3dadd( 89.923, -31.9801, -49.0753, 0.22 ) }
    dend_58 { pt3dadd( 91.2633, -31.5444, -49.4549, 2.43 ) }
    dend_58 { pt3dadd( 91.654, -31.3801, -49.5155, 2.21 ) }
    dend_58 { pt3dadd( 92.9871, -30.7173, -49.4997, 0.37 ) }
    dend_58 { pt3dadd( 93.9758, -30.161, -49.3777, 0.37 ) }
    dend_58 { pt3dadd( 94.0318, -30.127, -49.3627, 0.37 ) }
    dend_58 { pt3dadd( 94.7697, -29.644, -49.0362, 0.22 ) }
    dend_58 { pt3dadd( 95.1656, -29.3827, -48.8284, 1.11 ) }
    dend_58 { pt3dadd( 95.8188, -28.9807, -48.4797, 1.55 ) }
    dend_58 { pt3dadd( 96.1471, -28.8095, -48.3267, 1.4 ) }
    dend_58 { pt3dadd( 97.3984, -28.2636, -47.9036, 0.22 ) }
    dend_58 { pt3dadd( 97.4503, -28.2439, -47.8903, 0.22 ) }
    dend_58 { pt3dadd( 98.1325, -28.0167, -47.7715, 0.96 ) }
    dend_58 { pt3dadd( 98.6101, -27.8546, -47.72, 1.4 ) }
    dend_58 { pt3dadd( 99.652, -27.4789, -47.655, 0.22 ) }
    dend_58 { pt3dadd( 99.745, -27.4389, -47.6505, 0.22 ) }
    dend_58 { pt3dadd( 100.412, -27.0978, -47.6161, 0.22 ) }
    dend_58 { pt3dadd( 100.879, -26.8484, -47.5857, 0.22 ) }
    dend_58 { pt3dadd( 101.355, -26.6069, -47.549, 1.03 ) }
    dend_58 { pt3dadd( 101.791, -26.3896, -47.532, 1.03 ) }
    dend_58 { pt3dadd( 102.658, -25.9871, -47.5191, 0.22 ) }
    dend_58 { pt3dadd( 103.246, -25.7431, -47.5589, 0.37 ) }
    dend_58 { pt3dadd( 103.71, -25.5833, -47.615, 0.37 ) }
    dend_58 { pt3dadd( 104.588, -25.3486, -47.7313, 0.22 ) }
    dend_58 { pt3dadd( 105.529, -25.1457, -47.8586, 1.33 ) }
    dend_58 { pt3dadd( 106.109, -25.0435, -47.9372, 1.47 ) }
    dend_58 { pt3dadd( 107.493, -24.8549, -48.0929, 0.29 ) }
    dend_58 { pt3dadd( 108.315, -24.7494, -48.1742, 0.29 ) }
    dend_58 { pt3dadd( 109.566, -24.5559, -48.2958, 1.55 ) }
    dend_58 { pt3dadd( 109.869, -24.4935, -48.3327, 1.84 ) }
    dend_58 { pt3dadd( 109.934, -24.481, -48.3408, 1.84 ) }
    dend_58 { pt3dadd( 111.473, -24.1634, -48.5599, 0.22 ) }
    dend_58 { pt3dadd( 111.536, -24.1487, -48.5713, 0.22 ) }
    dend_58 { pt3dadd( 112.407, -23.9277, -48.7897, 0.44 ) }
    dend_58 { pt3dadd( 113.609, -23.631, -49.1586, 0.22 ) }
    dend_58 { pt3dadd( 114.318, -23.4816, -49.3863, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_58 { pt3dadd( 114.637, -23.4297, -49.4972, 1.33 ) }
    dend_58 { pt3dadd( 115.377, -23.3147, -49.7638, 0.29 ) }
    dend_58 { pt3dadd( 115.994, -23.2387, -49.957, 0.15 ) }
    dend_58 { pt3dadd( 116.404, -23.2163, -50.0501, 0.66 ) }
    dend_58 { pt3dadd( 116.81, -23.2126, -50.112, 0.66 ) }
    dend_58 { pt3dadd( 117.646, -23.1508, -50.2549, 0.22 ) }
    dend_58 { pt3dadd( 118.557, -23.0491, -50.3907, 0.22 ) }
    dend_58 { pt3dadd( 118.623, -23.0384, -50.3976, 0.22 ) }
    dend_58 { pt3dadd( 119.409, -22.8629, -50.4664, 1.18 ) }
    dend_58 { pt3dadd( 119.949, -22.7309, -50.5202, 1.69 ) }
    dend_58 { pt3dadd( 120.823, -22.5308, -50.6074, 1.55 ) }
    dend_58 { pt3dadd( 121.884, -22.3456, -50.7493, 0.52 ) }
    dend_58 { pt3dadd( 122.465, -22.2606, -50.8471, 0.52 ) }
    dend_58 { pt3dadd( 123.368, -22.1134, -51.009, 0.22 ) }
    dend_58 { pt3dadd( 124.501, -21.9234, -51.2146, 1.11 ) }
    dend_58 { pt3dadd( 125.041, -21.8409, -51.3146, 1.33 ) }
    dend_58 { pt3dadd( 126.404, -21.6836, -51.5519, 0.22 ) }
    dend_58 { pt3dadd( 126.837, -21.6604, -51.6328, 0.29 ) }
    dend_58 { pt3dadd( 127.351, -21.655, -51.7276, 0.29 ) }
    dend_58 { pt3dadd( 128.187, -21.6717, -51.8674, 0.22 ) }
    dend_58 { pt3dadd( 129.166, -21.7133, -51.9933, 1.47 ) }
    dend_58 { pt3dadd( 129.623, -21.745, -52.0382, 1.77 ) }
    dend_58 { pt3dadd( 131.752, -21.9595, -52.1582, 0.22 ) }
    dend_58 { pt3dadd( 131.817, -21.9687, -52.1611, 0.52 ) }
    dend_58 { pt3dadd( 132.255, -22.0472, -52.1742, 0.22 ) }
    dend_58 { pt3dadd( 132.658, -22.1282, -52.1777, 0.59 ) }
    dend_58 { pt3dadd( 133.753, -22.405, -52.1517, 0.15 ) }
    dend_58 { pt3dadd( 134.363, -22.6141, -52.1337, 0.44 ) }
    dend_58 { pt3dadd( 135.243, -23.0287, -52.0992, 0.22 ) }
    dend_58 { pt3dadd( 135.778, -23.3279, -52.0638, 1.03 ) }
    dend_58 { pt3dadd( 135.965, -23.445, -52.0467, 1.03 ) }
    dend_58 { pt3dadd( 136.883, -24.0773, -51.9398, 0.22 ) }
    dend_58 { pt3dadd( 137.649, -24.6649, -51.8304, 0.37 ) }
    dend_58 { pt3dadd( 138.173, -25.0914, -51.7446, 0.22 ) }
    dend_58 { pt3dadd( 139.078, -25.8514, -51.5737, 0.22 ) }
    dend_58 { pt3dadd( 139.429, -26.1459, -51.5046, 0.66 ) }
    dend_58 { pt3dadd( 139.471, -26.1824, -51.4968, 0.66 ) }
    dend_58 { pt3dadd( 139.703, -26.3902, -51.4542, 0.37 ) }
    dend_58 { pt3dadd( 140.216, -26.8521, -51.3804, 0.22 ) }
    dend_58 { pt3dadd( 140.361, -26.9877, -51.3701, 0.22 ) }
    dend_58 { pt3dadd( 140.968, -27.6001, -51.3838, 0.22 ) }
    dend_58 { pt3dadd( 141.535, -28.1359, -51.4436, 0.52 ) }
    dend_58 { pt3dadd( 141.592, -28.185, -51.4513, 0.52 ) }
    dend_58 { pt3dadd( 142.047, -28.5276, -51.5145, 0.22 ) }
    dend_58 { pt3dadd( 142.633, -28.9031, -51.593, 0.96 ) }
    dend_58 { pt3dadd( 143.246, -29.2018, -51.6941, 1.18 ) }
    dend_58 { pt3dadd( 144.646, -29.7513, -51.9569, 0.22 ) }
    dend_58 { pt3dadd( 145.217, -29.9502, -52.0707, 0.22 ) }
    dend_58 { pt3dadd( 145.846, -30.1683, -52.2017, 0.81 ) }
    dend_58 { pt3dadd( 146.233, -30.3003, -52.3038, 0.81 ) }
    dend_58 { pt3dadd( 147.531, -30.7175, -52.7213, 0.22 ) }
    dend_58 { pt3dadd( 147.914, -30.8531, -52.8955, 0.52 ) }
    dend_58 { pt3dadd( 148.446, -31.0626, -53.1829, 0.22 ) }
    dend_58 { pt3dadd( 148.848, -31.2392, -53.4291, 0.81 ) }
    dend_58 { pt3dadd( 149.992, -31.7882, -54.1953, 0.22 ) }
    dend_58 { pt3dadd( 150.842, -32.2099, -54.776, 1.47 ) }
    dend_58 { pt3dadd( 152.235, -32.9241, -55.6995, 0.22 ) }
    dend_58 { pt3dadd( 152.713, -33.1569, -56.0118, 0.81 ) }
    dend_58 { pt3dadd( 152.764, -33.1817, -56.0427, 0.81 ) }
    dend_58 { pt3dadd( 153.7, -33.6614, -56.5401, 0.22 ) }
    dend_58 { pt3dadd( 154.201, -33.9534, -56.7477, 0.22 ) }
    dend_58 { pt3dadd( 154.756, -34.3074, -56.9274, 0.88 ) }
    dend_58 { pt3dadd( 155.108, -34.5389, -57.0096, 0.74 ) }
    dend_58 { pt3dadd( 156.149, -35.2821, -57.2691, 0.22 ) }
    dend_58 { pt3dadd( 156.615, -35.6204, -57.3785, 0.22 ) }
    dend_58 { pt3dadd( 157.248, -36.0997, -57.5181, 0.74 ) }
    dend_58 { pt3dadd( 157.299, -36.14, -57.5304, 0.74 ) }
    dend_58 { pt3dadd( 158.086, -36.807, -57.7293, 0.22 ) }
    dend_58 { pt3dadd( 158.128, -36.8432, -57.7391, 0.22 ) }
    dend_58 { pt3dadd( 159.199, -37.8005, -58.0199, 0.22 ) }
    dend_58 { pt3dadd( 159.241, -37.8366, -58.0302, 0.22 ) }
    dend_58 { pt3dadd( 159.708, -38.24, -58.144, 0.37 ) }
    dend_58 { pt3dadd( 160.14, -38.6187, -58.244, 0.22 ) }
    dend_58 { pt3dadd( 160.602, -39.0351, -58.3362, 0.22 ) }
    dend_58 { pt3dadd( 161.164, -39.5824, -58.4525, 0.81 ) }
    dend_58 { pt3dadd( 161.341, -39.7982, -58.4987, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 76/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 9.33802, -5.36548, -21.2884, 2.06 ) }
    dend_47 { pt3dadd( 8.88877, -7.08214, -21.3627, 2.06 ) }
    dend_47 { pt3dadd( 8.5035, -8.71149, -21.451, 1.99 ) }
    dend_47 { pt3dadd( 8.04755, -10.8103, -21.5787, 1.62 ) }
    dend_47 { pt3dadd( 7.52141, -13.2321, -21.7261, 1.62 ) }
    dend_47 { pt3dadd( 7.23424, -14.554, -21.8066, 2.43 ) }
    dend_47 { pt3dadd( 6.85835, -16.2842, -21.9119, 3.02 ) }
    dend_47 { pt3dadd( 6.57077, -17.6109, -22.0527, 3.46 ) }
    dend_47 { pt3dadd( 6.4088, -18.6019, -22.1552, 3.39 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 85/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 6.8938, 19.953, -10.9528, 0.66 ) }
    dend_45 { pt3dadd( 6.43568, 22.5583, -11.7731, 0.66 ) }
    dend_45 { pt3dadd( 6.13991, 23.5553, -12.0428, 0.66 ) }
    dend_45 { pt3dadd( 5.69795, 24.7335, -12.3987, 0.66 ) }
    dend_45 { pt3dadd( 5.6248, 24.9147, -12.4555, 0.66 ) }
    dend_45 { pt3dadd( 4.89506, 26.7808, -13.0362, 1.55 ) }
    dend_45 { pt3dadd( 4.52163, 27.8946, -13.3671, 1.55 ) }
    dend_45 { pt3dadd( 4.1299, 29.1497, -13.6429, 1.4 ) }
    dend_45 { pt3dadd( 3.74469, 31.1149, -14.0906, 0.59 ) }
    dend_45 { pt3dadd( 3.73997, 31.2206, -14.117, 0.59 ) }
    dend_45 { pt3dadd( 3.90256, 31.9526, -14.3781, 0.59 ) }
    dend_45 { pt3dadd( 4.50849, 33.1603, -14.978, 0.96 ) }
    dend_45 { pt3dadd( 5.16809, 34.1926, -15.5911, 0.66 ) }
    dend_45 { pt3dadd( 5.81169, 35.1549, -16.2818, 0.59 ) }
    dend_45 { pt3dadd( 6.07004, 35.5641, -16.6128, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( 7.11041, 37.6256, -18.5547, 1.25 ) }
    dend_45 { pt3dadd( 7.43846, 38.5816, -19.5026, 1.92 ) }
    dend_45 { pt3dadd( 7.6954, 39.7867, -20.6723, 1.4 ) }
    dend_45 { pt3dadd( 7.88262, 41.4013, -22.1901, 1.03 ) }
    dend_45 { pt3dadd( 7.92573, 42.3063, -23.0474, 0.88 ) }
    dend_45 { pt3dadd( 7.93998, 43.8532, -24.4661, 0.52 ) }
    dend_45 { pt3dadd( 7.909, 45.2791, -25.6634, 0.44 ) }
    dend_45 { pt3dadd( 7.88577, 46.5172, -26.6479, 1.47 ) }
    dend_45 { pt3dadd( 7.88845, 46.5947, -26.7014, 1.47 ) }
    dend_45 { pt3dadd( 8.26711, 49.0479, -27.9152, 1.62 ) }
    dend_45 { pt3dadd( 8.28971, 49.1347, -27.9461, 1.62 ) }
    dend_45 { pt3dadd( 8.8315, 50.6801, -28.4122, 1.33 ) }
    dend_45 { pt3dadd( 8.8688, 50.778, -28.4426, 1.33 ) }
    dend_45 { pt3dadd( 9.37028, 52.351, -28.8539, 0.96 ) }
    dend_45 { pt3dadd( 9.89314, 54.1045, -29.3648, 0.96 ) }
    dend_45 { pt3dadd( 9.92841, 54.2295, -29.3993, 0.96 ) }
    dend_45 { pt3dadd( 10.3669, 55.9322, -29.9305, 0.74 ) }
    dend_45 { pt3dadd( 10.6466, 57.1245, -30.3383, 0.44 ) }
    dend_45 { pt3dadd( 11.0785, 58.9693, -30.9625, 0.37 ) }
    dend_45 { pt3dadd( 11.6622, 61.4457, -31.7837, 0.37 ) }
    dend_45 { pt3dadd( 12.0685, 63.0891, -32.2386, 0.37 ) }
    dend_45 { pt3dadd( 12.37, 64.2248, -32.4748, 1.55 ) }
    dend_45 { pt3dadd( 12.6228, 65.1023, -32.6014, 1.99 ) }
    dend_45 { pt3dadd( 12.9018, 66.0118, -32.707, 2.06 ) }
    dend_45 { pt3dadd( 13.2809, 67.1839, -32.7907, 1.77 ) }
    dend_45 { pt3dadd( 13.9356, 69.1868, -32.8625, 0.37 ) }
    dend_45 { pt3dadd( 14.3049, 70.2858, -32.9334, 0.37 ) }
    dend_45 { pt3dadd( 14.8162, 71.8084, -33.066, 1.47 ) }
    dend_45 { pt3dadd( 15.0498, 72.5585, -33.1467, 1.92 ) }
    dend_45 { pt3dadd( 15.2785, 73.4028, -33.2771, 1.55 ) }
    dend_45 { pt3dadd( 15.8351, 75.7063, -33.7969, 0.29 ) }
    dend_45 { pt3dadd( 16.0381, 76.5191, -34.1123, 0.29 ) }
    dend_45 { pt3dadd( 16.1162, 76.8245, -34.2614, 0.29 ) }
    dend_45 { pt3dadd( 16.2483, 77.3725, -34.5791, 0.29 ) }
    dend_45 { pt3dadd( 16.4855, 78.3182, -35.213, 0.29 ) }
    dend_45 { pt3dadd( 16.7043, 79.2844, -36.0003, 0.88 ) }
    dend_45 { pt3dadd( 17.0795, 80.9604, -37.5451, 0.29 ) }
    dend_45 { pt3dadd( 17.2708, 81.8886, -38.4102, 0.29 ) }
    dend_45 { pt3dadd( 17.5513, 83.2648, -39.613, 2.28 ) }
    dend_45 { pt3dadd( 17.7792, 84.2356, -40.3802, 2.58 ) }
    dend_45 { pt3dadd( 18.284, 86.2104, -41.7393, 2.43 ) }
    dend_45 { pt3dadd( 18.3066, 86.3002, -41.7943, 2.43 ) }
    dend_45 { pt3dadd( 18.7995, 88.1206, -42.7798, 0.29 ) }
    dend_45 { pt3dadd( 19.1776, 89.2565, -43.3801, 0.29 ) }
    dend_45 { pt3dadd( 19.9246, 91.0096, -44.1999, 1.62 ) }
    dend_45 { pt3dadd( 20.3252, 91.8432, -44.539, 2.28 ) }
    dend_45 { pt3dadd( 21.1445, 93.4224, -45.0817, 2.14 ) }
    dend_45 { pt3dadd( 21.9744, 95.0248, -45.6106, 0.59 ) }
    dend_45 { pt3dadd( 22.1534, 95.3676, -45.7208, 0.59 ) }
    dend_45 { pt3dadd( 22.8331, 96.8014, -46.1986, 0.37 ) }
    dend_45 { pt3dadd( 22.8657, 96.8868, -46.2268, 0.37 ) }
    dend_45 { pt3dadd( 23.4285, 98.7033, -46.7757, 0.66 ) }
    dend_45 { pt3dadd( 23.6839, 99.7313, -47.0268, 0.81 ) }
    dend_45 { pt3dadd( 23.8403, 100.499, -47.1878, 0.66 ) }
    dend_45 { pt3dadd( 23.855, 100.578, -47.2034, 0.66 ) }
    dend_45 { pt3dadd( 24.1434, 101.966, -47.4254, 0.52 ) }
    dend_45 { pt3dadd( 24.5286, 103.217, -47.5708, 0.96 ) }
    dend_45 { pt3dadd( 24.8214, 103.972, -47.6245, 1.33 ) }
    dend_45 { pt3dadd( 25.0942, 104.637, -47.6484, 1.47 ) }
    dend_45 { pt3dadd( 25.4854, 105.631, -47.6571, 0.96 ) }
    dend_45 { pt3dadd( 26.1842, 107.576, -47.6483, 0.29 ) }
    dend_45 { pt3dadd( 26.7998, 109.399, -47.6132, 2.21 ) }
    dend_45 { pt3dadd( 27.0988, 110.357, -47.5965, 2.5 ) }
    dend_45 { pt3dadd( 27.8076, 112.771, -47.5602, 0.37 ) }
    dend_45 { pt3dadd( 28.1596, 114.051, -47.5514, 0.44 ) }
    dend_45 { pt3dadd( 28.3895, 114.979, -47.5538, 0.37 ) }
    dend_45 { pt3dadd( 28.458, 115.296, -47.5604, 0.37 ) }
    dend_45 { pt3dadd( 28.626, 116.141, -47.5829, 0.66 ) }
    dend_45 { pt3dadd( 28.8265, 117.034, -47.6184, 0.66 ) }
    dend_45 { pt3dadd( 29.1211, 118.209, -47.6841, 0.29 ) }
    dend_45 { pt3dadd( 29.3475, 119.078, -47.7548, 0.29 ) }
    dend_45 { pt3dadd( 29.603, 120.089, -47.88, 1.03 ) }
    dend_45 { pt3dadd( 29.7834, 120.861, -48.0206, 1.33 ) }
    dend_45 { pt3dadd( 29.9019, 121.421, -48.145, 1.47 ) }
    dend_45 { pt3dadd( 30.0681, 122.278, -48.3593, 0.88 ) }
    dend_45 { pt3dadd( 30.2489, 123.231, -48.6152, 0.29 ) }
    dend_45 { pt3dadd( 30.5128, 124.53, -48.9986, 0.29 ) }
    dend_45 { pt3dadd( 30.8494, 126.141, -49.4977, 1.11 ) }
    dend_45 { pt3dadd( 30.9941, 126.799, -49.6978, 1.4 ) }
    dend_45 { pt3dadd( 31.06, 127.09, -49.7834, 1.4 ) }
    dend_45 { pt3dadd( 31.1869, 127.656, -49.9355, 1.4 ) }
    dend_45 { pt3dadd( 31.54, 129.34, -50.3087, 0.29 ) }
    dend_45 { pt3dadd( 31.5762, 129.538, -50.3503, 0.29 ) }
    dend_45 { pt3dadd( 31.7954, 130.799, -50.6127, 0.29 ) }
    dend_45 { pt3dadd( 31.9956, 131.939, -50.8615, 1.11 ) }
    dend_45 { pt3dadd( 32.141, 132.711, -51.0325, 1.62 ) }
    dend_45 { pt3dadd( 32.2737, 133.378, -51.1771, 1.62 ) }
    dend_45 { pt3dadd( 32.6801, 135.209, -51.5923, 0.29 ) }
    dend_45 { pt3dadd( 32.7995, 135.717, -51.7348, 0.74 ) }
    dend_45 { pt3dadd( 32.8192, 135.804, -51.7684, 0.74 ) }
    dend_45 { pt3dadd( 32.9288, 136.363, -52.0523, 0.74 ) }
    dend_45 { pt3dadd( 33.0345, 136.96, -52.4063, 0.52 ) }
    dend_45 { pt3dadd( 33.2147, 138.136, -53.1458, 0.22 ) }
    dend_45 { pt3dadd( 33.3639, 139.354, -53.9339, 0.59 ) }
    dend_45 { pt3dadd( 33.4894, 140.614, -54.7444, 0.37 ) }
    dend_45 { pt3dadd( 33.6331, 142.255, -55.7699, 0.22 ) }
    dend_45 { pt3dadd( 33.6352, 142.325, -55.8104, 0.22 ) }
    dend_45 { pt3dadd( 33.6383, 143.219, -56.2575, 0.88 ) }
    dend_45 { pt3dadd( 33.6359, 143.596, -56.4005, 1.25 ) }
    dend_45 { pt3dadd( 33.6471, 144.182, -56.5555, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_45 { pt3dadd( 33.7336, 145.384, -56.7682, 0.44 ) }
    dend_45 { pt3dadd( 33.9457, 146.935, -57.0244, 0.22 ) }
    dend_45 { pt3dadd( 34.1209, 147.946, -57.2122, 0.37 ) }
    dend_45 { pt3dadd( 34.3615, 149.153, -57.4442, 1.25 ) }
    dend_45 { pt3dadd( 34.4771, 149.672, -57.5514, 1.55 ) }
    dend_45 { pt3dadd( 34.7204, 150.646, -57.7678, 0.96 ) }
    dend_45 { pt3dadd( 35.2303, 152.508, -58.3051, 0.22 ) }
    dend_45 { pt3dadd( 35.3099, 152.777, -58.4057, 0.22 ) }
    dend_45 { pt3dadd( 35.6343, 154.003, -58.9211, 1.25 ) }
    dend_45 { pt3dadd( 35.7831, 154.636, -59.205, 1.25 ) }
    dend_45 { pt3dadd( 35.7981, 154.708, -59.2382, 1.25 ) }
    dend_45 { pt3dadd( 36.215, 157.088, -60.3382, 0.29 ) }
    dend_45 { pt3dadd( 36.4597, 158.695, -61.0494, 0.66 ) }
    dend_45 { pt3dadd( 36.5319, 159.234, -61.2975, 1.03 ) }
    dend_45 { pt3dadd( 36.5458, 159.405, -61.3773, 1.03 ) }
    dend_45 { pt3dadd( 36.5427, 159.866, -61.5782, 1.03 ) }
    dend_45 { pt3dadd( 36.5352, 159.955, -61.6131, 1.03 ) }
    dend_45 { pt3dadd( 36.3938, 161.063, -62.0416, 0.59 ) }
    dend_45 { pt3dadd( 36.2252, 162.459, -62.6194, 0.29 ) }
    dend_45 { pt3dadd( 36.1821, 163.328, -62.9687, 0.29 ) }
    dend_45 { pt3dadd( 36.2296, 164.668, -63.4756, 1.11 ) }
    dend_45 { pt3dadd( 36.3102, 165.514, -63.7821, 1.47 ) }
    dend_45 { pt3dadd( 36.6805, 167.919, -64.6101, 0.29 ) }
    dend_45 { pt3dadd( 36.7413, 168.197, -64.698, 0.29 ) }
    dend_45 { pt3dadd( 37.2321, 169.973, -65.2127, 0.29 ) }
    dend_45 { pt3dadd( 37.7716, 171.688, -65.7004, 1.11 ) }
    dend_45 { pt3dadd( 37.9021, 172.077, -65.8055, 1.62 ) }
    dend_45 { pt3dadd( 38.0403, 172.544, -65.9246, 1.33 ) }
    dend_45 { pt3dadd( 38.2138, 173.296, -66.1349, 0.88 ) }
    dend_45 { pt3dadd( 38.4489, 174.632, -66.6105, 0.37 ) }
    dend_45 { pt3dadd( 38.5758, 175.438, -66.9783, 0.66 ) }
    dend_45 { pt3dadd( 38.5899, 175.52, -67.0245, 0.66 ) }
    dend_45 { pt3dadd( 38.7815, 176.376, -67.5534, 0.66 ) }
    dend_45 { pt3dadd( 39.2187, 177.96, -68.5987, 0.29 ) }
    dend_45 { pt3dadd( 39.2439, 178.034, -68.6527, 0.29 ) }
    dend_45 { pt3dadd( 39.6017, 178.947, -69.3902, 0.29 ) }
    dend_45 { pt3dadd( 40.0269, 180.138, -70.3659, 1.25 ) }
    dend_45 { pt3dadd( 40.1083, 180.4, -70.5712, 1.25 ) }
    dend_45 { pt3dadd( 40.1908, 180.733, -70.8137, 1.4 ) }
    dend_45 { pt3dadd( 40.4102, 182.211, -71.8111, 0.66 ) }
    dend_45 { pt3dadd( 40.5039, 183.665, -72.7513, 0.29 ) }
    dend_45 { pt3dadd( 40.4807, 184.914, -73.5885, 0.81 ) }
    dend_45 { pt3dadd( 40.4521, 185.279, -73.8239, 0.88 ) }
    dend_45 { pt3dadd( 40.353, 186.065, -74.3111, 0.52 ) }
    dend_45 { pt3dadd( 40.1406, 187.338, -75.0697, 0.29 ) }
    dend_45 { pt3dadd( 39.9519, 188.284, -75.5782, 0.81 ) }
    dend_45 { pt3dadd( 39.6452, 189.66, -76.244, 0.81 ) }
    dend_45 { pt3dadd( 39.4208, 190.863, -76.7886, 0.29 ) }
    dend_45 { pt3dadd( 39.3181, 191.793, -77.1936, 0.29 ) }
    dend_45 { pt3dadd( 39.3139, 191.881, -77.229, 0.29 ) }
    dend_45 { pt3dadd( 39.2932, 193.198, -77.6692, 1.03 ) }
    dend_45 { pt3dadd( 39.3093, 194.055, -77.9301, 1.47 ) }
    dend_45 { pt3dadd( 39.3671, 195.174, -78.218, 0.96 ) }
    dend_45 { pt3dadd( 39.4407, 197.028, -78.7727, 0.29 ) }
    dend_45 { pt3dadd( 39.442, 197.507, -78.9284, 0.29 ) }
    dend_45 { pt3dadd( 39.4114, 198.312, -79.1805, 0.81 ) }
    dend_45 { pt3dadd( 39.3815, 198.808, -79.3393, 0.81 ) }
    dend_45 { pt3dadd( 39.3756, 198.885, -79.3643, 0.81 ) }
    dend_45 { pt3dadd( 39.1583, 201.004, -80.0204, 0.37 ) }
    dend_45 { pt3dadd( 38.9783, 202.883, -80.5982, 0.29 ) }
    dend_45 { pt3dadd( 38.8817, 204.687, -81.1687, 0.96 ) }
    dend_45 { pt3dadd( 38.883, 205.318, -81.3752, 1.47 ) }
    dend_45 { pt3dadd( 38.9105, 205.885, -81.5672, 1.47 ) }
    dend_45 { pt3dadd( 39.005, 206.616, -81.8393, 1.18 ) }
    dend_45 { pt3dadd( 39.2763, 207.805, -82.3168, 0.52 ) }
    dend_45 { pt3dadd( 39.4752, 208.641, -82.702, 0.44 ) }
    dend_45 { pt3dadd( 39.6123, 209.211, -82.9997, 0.44 ) }
    dend_45 { pt3dadd( 39.6525, 209.507, -83.1581, 0.44 ) }
    dend_45 { pt3dadd( 39.753, 211.019, -83.9414, 0.29 ) }
    dend_45 { pt3dadd( 39.7723, 211.795, -84.312, 0.66 ) }
    dend_45 { pt3dadd( 39.7599, 212.667, -84.6832, 0.52 ) }
    dend_45 { pt3dadd( 39.7546, 212.801, -84.7355, 0.52 ) }
    dend_45 { pt3dadd( 39.6838, 215.129, -85.4611, 0.29 ) }
    dend_45 { pt3dadd( 39.6648, 216.476, -85.8034, 1.11 ) }
    dend_45 { pt3dadd( 39.6623, 217.226, -85.9431, 1.33 ) }
    dend_45 { pt3dadd( 39.6662, 217.334, -85.9608, 1.33 ) }
    dend_45 { pt3dadd( 39.7143, 218.119, -86.0663, 1.11 ) }
    dend_45 { pt3dadd( 39.8633, 219.922, -86.2787, 0.29 ) }
    dend_45 { pt3dadd( 39.8746, 220.016, -86.2864, 0.29 ) }
    dend_45 { pt3dadd( 40.0787, 221.609, -86.4537, 0.29 ) }
    dend_45 { pt3dadd( 40.1079, 221.808, -86.4885, 0.29 ) }
    dend_45 { pt3dadd( 40.2075, 222.372, -86.6176, 0.22 ) }
    dend_45 { pt3dadd( 40.4356, 223.492, -86.9553, 0.66 ) }
    dend_45 { pt3dadd( 40.4511, 223.566, -86.984, 0.66 ) }
    dend_45 { pt3dadd( 40.5497, 224.017, -87.1745, 0.88 ) }
    dend_45 { pt3dadd( 40.9225, 225.645, -87.9151, 0.22 ) }
    dend_45 { pt3dadd( 40.9425, 225.727, -87.9592, 0.22 ) }
    dend_45 { pt3dadd( 41.1776, 226.682, -88.5172, 0.22 ) }
    dend_45 { pt3dadd( 41.3551, 227.457, -88.9808, 0.88 ) }
    dend_45 { pt3dadd( 41.3776, 227.567, -89.0521, 0.88 ) }
    dend_45 { pt3dadd( 41.4693, 228.131, -89.434, 0.88 ) }
    dend_45 { pt3dadd( 41.7123, 229.943, -90.6757, 0.29 ) }
    dend_45 { pt3dadd( 41.7313, 230.098, -90.7816, 0.29 ) }
    dend_45 { pt3dadd( 41.834, 230.693, -91.1893, 0.29 ) }
    dend_45 { pt3dadd( 42.0599, 231.487, -91.6799, 1.11 ) }
    dend_45 { pt3dadd( 42.2712, 231.982, -91.9723, 1.25 ) }
    dend_45 { pt3dadd( 42.4321, 232.292, -92.1452, 1.25 ) }
    dend_45 { pt3dadd( 42.5722, 232.546, -92.2667, 1.25 ) }
    dend_45 { pt3dadd( 43.6852, 234.516, -93.2295, 0.29 ) }
    dend_45 { pt3dadd( 44.4153, 235.817, -93.8709, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_45 { pt3dadd( 45.3887, 237.549, -94.7189, 0.29 ) }
    dend_45 { pt3dadd( 45.4725, 237.7, -94.7947, 0.29 ) }
    dend_45 { pt3dadd( 45.8354, 238.337, -95.1276, 0.29 ) }
    dend_45 { pt3dadd( 46.3853, 239.302, -95.6429, 1.18 ) }
    dend_45 { pt3dadd( 46.905, 240.164, -96.1066, 1.4 ) }
    dend_45 { pt3dadd( 46.956, 240.247, -96.1538, 1.4 ) }
    dend_45 { pt3dadd( 47.2815, 240.697, -96.4296, 1.4 ) }
    dend_45 { pt3dadd( 48.365, 241.934, -97.2432, 0.15 ) }
    dend_45 { pt3dadd( 48.4354, 241.998, -97.2891, 0.15 ) }
    dend_45 { pt3dadd( 49.1202, 242.529, -97.7066, 0.15 ) }
    dend_45 { pt3dadd( 49.2295, 242.607, -97.774, 0.15 ) }
    dend_45 { pt3dadd( 50.1248, 243.319, -98.3841, 0.74 ) }
    dend_45 { pt3dadd( 50.6098, 243.738, -98.7277, 0.74 ) }
    dend_45 { pt3dadd( 50.6666, 243.798, -98.7701, 0.74 ) }
    dend_45 { pt3dadd( 51.5428, 244.818, -99.4354, 0.22 ) }
    dend_45 { pt3dadd( 51.842, 245.163, -99.6387, 0.22 ) }
    dend_45 { pt3dadd( 52.6055, 245.982, -100.073, 1.25 ) }
    dend_45 { pt3dadd( 53.1179, 246.529, -100.31, 1.03 ) }
    dend_45 { pt3dadd( 54.4137, 247.961, -100.883, 0.29 ) }
    dend_45 { pt3dadd( 54.4733, 248.03, -100.908, 0.29 ) }
    dend_45 { pt3dadd( 55.3948, 249.228, -101.278, 0.29 ) }
    dend_45 { pt3dadd( 55.7261, 249.758, -101.429, 0.29 ) }
    dend_45 { pt3dadd( 56.2327, 250.709, -101.663, 0.74 ) }
    dend_45 { pt3dadd( 56.4681, 251.24, -101.786, 0.74 ) }
    dend_45 { pt3dadd( 56.524, 251.388, -101.821, 0.74 ) }
    dend_45 { pt3dadd( 56.9106, 252.5, -102.104, 0.29 ) }
    dend_45 { pt3dadd( 57.391, 253.933, -102.586, 0.29 ) }
    dend_45 { pt3dadd( 57.7721, 254.937, -102.978, 0.29 ) }
    dend_45 { pt3dadd( 57.8038, 255.006, -103.007, 0.29 ) }
    dend_45 { pt3dadd( 58.3285, 256.077, -103.522, 0.96 ) }
    dend_45 { pt3dadd( 58.6455, 256.696, -103.852, 1.4 ) }
    dend_45 { pt3dadd( 59.4931, 258.261, -104.795, 0.22 ) }
    dend_45 { pt3dadd( 59.5482, 258.37, -104.868, 0.22 ) }
    dend_45 { pt3dadd( 59.8142, 259.012, -105.298, 0.22 ) }
    dend_45 { pt3dadd( 60.2231, 260.09, -105.976, 0.74 ) }
    dend_45 { pt3dadd( 60.2803, 260.259, -106.071, 0.74 ) }
    dend_45 { pt3dadd( 60.3913, 260.634, -106.262, 0.74 ) }
    dend_45 { pt3dadd( 60.7608, 261.786, -106.701, 0.29 ) }
    dend_45 { pt3dadd( 60.812, 261.857, -106.736, 0.29 ) }
    dend_45 { pt3dadd( 61.146, 262.147, -106.935, 0.29 ) }
    dend_45 { pt3dadd( 61.6732, 262.491, -107.24, 0.96 ) }
    dend_45 { pt3dadd( 61.7423, 262.533, -107.284, 0.96 ) }
    dend_45 { pt3dadd( 62.3245, 262.878, -107.665, 1.18 ) }
    dend_45 { pt3dadd( 64.2774, 264.135, -108.962, 0.29 ) }
    dend_45 { pt3dadd( 65.2624, 264.843, -109.614, 1.03 ) }
    dend_45 { pt3dadd( 66.9605, 266.148, -110.74, 0.29 ) }
    dend_45 { pt3dadd( 67.6625, 266.715, -111.196, 1.11 ) }
    dend_45 { pt3dadd( 67.9403, 266.953, -111.373, 1.33 ) }
    dend_45 { pt3dadd( 69.0669, 268.008, -112.074, 0.22 ) }
    dend_45 { pt3dadd( 69.6347, 268.632, -112.399, 0.88 ) }
    dend_45 { pt3dadd( 69.7494, 268.799, -112.632, 0.88 ) }
    dend_45 { pt3dadd( 69.8571, 269.083, -114.048, 0.29 ) }
    dend_45 { pt3dadd( 69.8383, 269.243, -115.486, 1.11 ) }
    dend_45 { pt3dadd( 69.8297, 269.256, -115.668, 1.11 ) }
    dend_45 { pt3dadd( 69.7772, 269.297, -116.475, 1.18 ) }
    dend_45 { pt3dadd( 69.023, 269.638, -125.485, 0.96 ) }
    dend_45 { pt3dadd( 68.2063, 269.855, -133.429, 0.74 ) }
    dend_45 { pt3dadd( 67.8306, 269.885, -136.375, 0.81 ) }
    dend_45 { pt3dadd( 67.7733, 269.882, -136.775, 0.81 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 59/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 6.8938, 19.953, -10.9528, 1.11 ) }
    dend_44 { pt3dadd( 6.99811, 20.6155, -10.7539, 1.11 ) }
    dend_44 { pt3dadd( 7.28081, 21.8633, -10.436, 0.96 ) }
    dend_44 { pt3dadd( 7.29509, 21.9174, -10.4233, 0.96 ) }
    dend_44 { pt3dadd( 7.7129, 23.0814, -10.2004, 1.33 ) }
    dend_44 { pt3dadd( 8.0137, 23.8164, -10.0788, 1.62 ) }
    dend_44 { pt3dadd( 8.07555, 23.9435, -10.0551, 1.62 ) }
    dend_44 { pt3dadd( 8.5466, 24.6616, -9.94242, 0.96 ) }
    dend_44 { pt3dadd( 8.5867, 24.7142, -9.93906, 0.96 ) }
    dend_44 { pt3dadd( 9.3146, 25.6413, -9.93087, 0.66 ) }
    dend_44 { pt3dadd( 9.34947, 25.686, -9.9328, 0.66 ) }
    dend_44 { pt3dadd( 10.0053, 26.6635, -9.97997, 0.74 ) }
    dend_44 { pt3dadd( 10.4421, 27.5189, -10.0284, 0.66 ) }
    dend_44 { pt3dadd( 10.8625, 28.7046, -10.1048, 0.74 ) }
    dend_44 { pt3dadd( 10.8749, 28.7801, -10.1094, 0.74 ) }
    dend_44 { pt3dadd( 10.8485, 29.4429, -10.1497, 0.74 ) }
    dend_44 { pt3dadd( 10.6539, 30.317, -10.1595, 0.74 ) }
    dend_44 { pt3dadd( 10.3091, 31.03, -10.1162, 0.74 ) }
    dend_44 { pt3dadd( 10.2727, 31.0847, -10.1059, 0.74 ) }
    dend_44 { pt3dadd( 9.80144, 31.7615, -9.89855, 0.74 ) }
    dend_44 { pt3dadd( 9.76724, 31.8157, -9.88094, 0.74 ) }
    dend_44 { pt3dadd( 9.25971, 32.7683, -9.55062, 0.74 ) }
    dend_44 { pt3dadd( 8.90674, 33.6651, -9.24428, 0.66 ) }
    dend_44 { pt3dadd( 8.48387, 35.2639, -8.73314, 0.81 ) }
    dend_44 { pt3dadd( 8.31185, 36.3225, -8.43384, 0.81 ) }
    dend_44 { pt3dadd( 8.2672, 37.1497, -8.2351, 1.47 ) }
    dend_44 { pt3dadd( 8.28849, 38.1756, -8.02894, 2.06 ) }
    dend_44 { pt3dadd( 8.4126, 39.3725, -7.8385, 2.28 ) }
    dend_44 { pt3dadd( 8.57531, 40.3376, -7.70827, 1.84 ) }
    dend_44 { pt3dadd( 8.79896, 41.354, -7.59785, 1.03 ) }
    dend_44 { pt3dadd( 9.03215, 42.4569, -7.51308, 0.66 ) }
    dend_44 { pt3dadd( 9.13445, 43.091, -7.46781, 0.88 ) }
    dend_44 { pt3dadd( 9.14006, 43.1578, -7.46507, 0.88 ) }
    dend_44 { pt3dadd( 9.12477, 43.6881, -7.44772, 0.96 ) }
    dend_44 { pt3dadd( 9.10409, 43.83, -7.4441, 0.96 ) }
    dend_44 { pt3dadd( 9.01989, 44.1634, -7.43922, 0.96 ) }
    dend_44 { pt3dadd( 8.82864, 44.837, -7.42159, 0.88 ) }
    dend_44 { pt3dadd( 8.68679, 45.4327, -7.40192, 0.59 ) }
    dend_44 { pt3dadd( 8.59178, 45.924, -7.38322, 0.44 ) }
    dend_44 { pt3dadd( 8.58249, 45.9909, -7.38047, 0.44 ) }
    dend_44 { pt3dadd( 8.53463, 46.6109, -7.33616, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_44 { pt3dadd( 8.56556, 47.8935, -7.21377, 1.03 ) }
    dend_44 { pt3dadd( 8.61589, 48.3185, -7.16368, 1.11 ) }
    dend_44 { pt3dadd( 8.63941, 48.4497, -7.14506, 1.11 ) }
    dend_44 { pt3dadd( 8.72199, 48.8016, -7.09496, 1.25 ) }
    dend_44 { pt3dadd( 8.87879, 49.376, -7.00566, 1.25 ) }
    dend_44 { pt3dadd( 9.09502, 50.16, -6.87594, 1.03 ) }
    dend_44 { pt3dadd( 9.25928, 50.7621, -6.77228, 0.81 ) }
    dend_44 { pt3dadd( 9.27391, 50.8273, -6.761, 0.81 ) }
    dend_44 { pt3dadd( 9.34437, 51.2289, -6.70906, 0.52 ) }
    dend_44 { pt3dadd( 9.52143, 52.5918, -6.5604, 0.37 ) }
    dend_44 { pt3dadd( 9.58172, 53.3639, -6.49312, 0.37 ) }
    dend_44 { pt3dadd( 9.61062, 54.0737, -6.4405, 0.88 ) }
    dend_44 { pt3dadd( 9.64335, 54.7737, -6.40018, 1.25 ) }
    dend_44 { pt3dadd( 9.69729, 55.8295, -6.35409, 1.84 ) }
    dend_44 { pt3dadd( 9.73453, 56.4536, -6.33798, 1.92 ) }
    dend_44 { pt3dadd( 9.81164, 57.4725, -6.34297, 1.69 ) }
    dend_44 { pt3dadd( 9.94585, 58.66, -6.41095, 0.37 ) }
    dend_44 { pt3dadd( 10.0684, 59.564, -6.50504, 0.29 ) }
    dend_44 { pt3dadd( 10.0787, 59.6303, -6.51424, 0.29 ) }
    dend_44 { pt3dadd( 10.1472, 60.0941, -6.56766, 0.29 ) }
    dend_44 { pt3dadd( 10.1683, 60.2733, -6.59127, 0.29 ) }
    dend_44 { pt3dadd( 10.1923, 61.2743, -6.69263, 0.44 ) }
    dend_44 { pt3dadd( 10.1776, 61.3395, -6.69133, 0.44 ) }
    dend_44 { pt3dadd( 9.92501, 61.9381, -6.61665, 0.59 ) }
    dend_44 { pt3dadd( 9.55155, 62.7819, -6.49878, 0.96 ) }
    dend_44 { pt3dadd( 9.42446, 63.0565, -6.45343, 0.96 ) }
    dend_44 { pt3dadd( 9.20914, 63.5541, -6.36055, 0.88 ) }
    dend_44 { pt3dadd( 8.8219, 64.4901, -6.16102, 0.44 ) }
    dend_44 { pt3dadd( 8.57036, 65.1938, -6.04233, 0.29 ) }
    dend_44 { pt3dadd( 8.32761, 65.9894, -5.95197, 0.37 ) }
    dend_44 { pt3dadd( 8.30101, 66.1202, -5.93939, 0.37 ) }
    dend_44 { pt3dadd( 8.24801, 66.745, -5.85526, 0.52 ) }
    dend_44 { pt3dadd( 8.25394, 66.8446, -5.83499, 0.52 ) }
    dend_44 { pt3dadd( 8.34412, 67.3759, -5.6979, 0.74 ) }
    dend_44 { pt3dadd( 8.35815, 67.4481, -5.67695, 0.74 ) }
    dend_44 { pt3dadd( 8.52515, 68.5181, -5.33225, 0.96 ) }
    dend_44 { pt3dadd( 8.57929, 68.9181, -5.21128, 1.4 ) }
    dend_44 { pt3dadd( 8.70699, 69.9287, -4.91576, 1.92 ) }
    dend_44 { pt3dadd( 8.75599, 70.3248, -4.8109, 2.14 ) }
    dend_44 { pt3dadd( 8.85667, 71.0224, -4.6372, 1.62 ) }
    dend_44 { pt3dadd( 9.10839, 72.487, -4.29407, 0.59 ) }
    dend_44 { pt3dadd( 9.33856, 73.6994, -4.03731, 0.44 ) }
    dend_44 { pt3dadd( 9.35922, 73.7972, -4.01765, 0.44 ) }
    dend_44 { pt3dadd( 9.59801, 74.7989, -3.80667, 0.66 ) }
    dend_44 { pt3dadd( 9.85991, 75.8709, -3.56973, 1.25 ) }
    dend_44 { pt3dadd( 10.1361, 77.0008, -3.31817, 2.28 ) }
    dend_44 { pt3dadd( 10.1826, 77.2017, -3.27429, 2.87 ) }
    dend_44 { pt3dadd( 10.2997, 77.782, -3.14649, 2.73 ) }
    dend_44 { pt3dadd( 10.4997, 79.015, -2.8816, 1.4 ) }
    dend_44 { pt3dadd( 10.6195, 80.1262, -2.65078, 0.44 ) }
    dend_44 { pt3dadd( 10.6494, 80.9611, -2.50015, 0.74 ) }
    dend_44 { pt3dadd( 10.6479, 81.5341, -2.4108, 0.81 ) }
    dend_44 { pt3dadd( 10.6436, 81.8242, -2.3686, 0.96 ) }
    dend_44 { pt3dadd( 10.6392, 82.3227, -2.30719, 0.66 ) }
    dend_44 { pt3dadd( 10.6407, 82.7334, -2.27646, 0.52 ) }
    dend_44 { pt3dadd( 10.6734, 83.6892, -2.2116, 0.52 ) }
    dend_44 { pt3dadd( 10.7448, 84.8089, -2.14401, 0.44 ) }
    dend_44 { pt3dadd( 10.7508, 84.8764, -2.14043, 0.44 ) }
    dend_44 { pt3dadd( 10.9053, 86.2052, -2.07586, 0.44 ) }
    dend_44 { pt3dadd( 11.0281, 87.0407, -2.04174, 0.96 ) }
    dend_44 { pt3dadd( 11.0424, 87.1167, -2.0394, 0.96 ) }
    dend_44 { pt3dadd( 11.159, 87.6611, -2.03222, 1.4 ) }
    dend_44 { pt3dadd( 11.1736, 87.7371, -2.03191, 1.4 ) }
    dend_44 { pt3dadd( 11.2144, 88.0226, -2.02246, 1.4 ) }
    dend_44 { pt3dadd( 11.2231, 88.111, -2.01708, 1.4 ) }
    dend_44 { pt3dadd( 11.279, 88.8186, -1.95966, 0.74 ) }
    dend_44 { pt3dadd( 11.3335, 89.6162, -1.89321, 0.37 ) }
    dend_44 { pt3dadd( 11.3933, 90.5274, -1.81503, 0.29 ) }
    dend_44 { pt3dadd( 11.4514, 91.3968, -1.73987, 0.29 ) }
    dend_44 { pt3dadd( 11.456, 91.4635, -1.73393, 0.29 ) }
    dend_44 { pt3dadd( 11.5108, 92.1506, -1.67369, 0.59 ) }
    dend_44 { pt3dadd( 11.5682, 92.7918, -1.61942, 0.88 ) }
    dend_44 { pt3dadd( 11.5895, 92.953, -1.60764, 0.88 ) }
    dend_44 { pt3dadd( 11.676, 93.4351, -1.59249, 0.88 ) }
    dend_44 { pt3dadd( 11.6975, 93.5347, -1.59453, 0.88 ) }
    dend_44 { pt3dadd( 11.7721, 93.8872, -1.60105, 0.88 ) }
    dend_44 { pt3dadd( 11.7827, 93.9532, -1.59499, 0.88 ) }
    dend_44 { pt3dadd( 11.814, 94.2868, -1.51123, 0.66 ) }
    dend_44 { pt3dadd( 11.8026, 94.5513, -1.40147, 0.52 ) }
    dend_44 { pt3dadd( 11.7456, 94.9032, -1.20321, 0.29 ) }
    dend_44 { pt3dadd( 11.638, 95.3124, -0.952097, 0.29 ) }
    dend_44 { pt3dadd( 11.3437, 96.1685, -0.380416, 0.29 ) }
    dend_44 { pt3dadd( 11.3093, 96.2681, -0.317973, 0.29 ) }
    dend_44 { pt3dadd( 11.1861, 96.7494, 0.0255239, 0.81 ) }
    dend_44 { pt3dadd( 11.1794, 96.8051, 0.0607274, 0.81 ) }
    dend_44 { pt3dadd( 11.1682, 97.301, 0.331316, 0.81 ) }
    dend_44 { pt3dadd( 11.1728, 97.3618, 0.358236, 0.81 ) }
    dend_44 { pt3dadd( 11.2486, 97.8877, 0.55017, 0.52 ) }
    dend_44 { pt3dadd( 11.5241, 99.2936, 1.00575, 0.88 ) }
    dend_44 { pt3dadd( 11.7811, 100.284, 1.27321, 1.62 ) }
    dend_44 { pt3dadd( 11.8948, 100.746, 1.38377, 1.62 ) }
    dend_44 { pt3dadd( 12.0672, 101.445, 1.53678, 1.33 ) }
    dend_44 { pt3dadd( 12.0805, 101.51, 1.54776, 1.33 ) }
    dend_44 { pt3dadd( 12.2428, 102.484, 1.6553, 0.74 ) }
    dend_44 { pt3dadd( 12.392, 103.779, 1.68292, 0.29 ) }
    dend_44 { pt3dadd( 12.461, 104.787, 1.68928, 0.29 ) }
    dend_44 { pt3dadd( 12.4636, 104.844, 1.69068, 0.29 ) }
    dend_44 { pt3dadd( 12.4916, 105.654, 1.7202, 0.29 ) }
    dend_44 { pt3dadd( 12.4942, 105.721, 1.72323, 0.29 ) }
    dend_44 { pt3dadd( 12.5442, 106.766, 1.7782, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_44 { pt3dadd( 12.644, 107.958, 1.84642, 0.59 ) }
    dend_44 { pt3dadd( 12.7737, 108.893, 1.89936, 1.55 ) }
    dend_44 { pt3dadd( 12.8543, 109.328, 1.928, 1.84 ) }
    dend_44 { pt3dadd( 12.9175, 109.598, 1.95047, 1.77 ) }
    dend_44 { pt3dadd( 13.1553, 110.545, 2.02412, 1.03 ) }
    dend_44 { pt3dadd( 13.3787, 111.426, 2.08841, 0.29 ) }
    dend_44 { pt3dadd( 13.3967, 111.501, 2.09306, 0.29 ) }
    dend_44 { pt3dadd( 13.5577, 112.293, 2.12004, 0.29 ) }
    dend_44 { pt3dadd( 13.6315, 112.787, 2.14128, 0.29 ) }
    dend_44 { pt3dadd( 13.6387, 112.853, 2.14462, 0.29 ) }
    dend_44 { pt3dadd( 13.6492, 113.456, 2.18386, 0.74 ) }
    dend_44 { pt3dadd( 13.6248, 113.812, 2.21214, 0.88 ) }
    dend_44 { pt3dadd( 13.5751, 114.209, 2.24751, 0.59 ) }
    dend_44 { pt3dadd( 13.4916, 114.647, 2.29122, 0.37 ) }
    dend_44 { pt3dadd( 13.4802, 114.713, 2.29764, 0.37 ) }
    dend_44 { pt3dadd( 13.3845, 115.341, 2.35636, 0.29 ) }
    dend_44 { pt3dadd( 13.3756, 115.407, 2.36235, 0.29 ) }
    dend_44 { pt3dadd( 13.3109, 115.968, 2.40501, 0.29 ) }
    dend_44 { pt3dadd( 13.2434, 116.618, 2.44974, 0.96 ) }
    dend_44 { pt3dadd( 13.1854, 117.245, 2.51629, 1.55 ) }
    dend_44 { pt3dadd( 13.144, 117.715, 2.57594, 1.99 ) }
    dend_44 { pt3dadd( 13.1027, 118.239, 2.6494, 1.84 ) }
    dend_44 { pt3dadd( 12.9927, 119.637, 2.8586, 0.29 ) }
    dend_44 { pt3dadd( 12.9146, 120.799, 3.03769, 0.29 ) }
    dend_44 { pt3dadd( 12.8772, 121.84, 3.17994, 1.11 ) }
    dend_44 { pt3dadd( 12.8756, 122.284, 3.2334, 1.55 ) }
    dend_44 { pt3dadd( 12.8837, 122.561, 3.26272, 1.77 ) }
    dend_44 { pt3dadd( 12.9394, 123.363, 3.33325, 0.74 ) }
    dend_44 { pt3dadd( 13.0422, 124.336, 3.39749, 0.37 ) }
    dend_44 { pt3dadd( 13.2224, 125.81, 3.44829, 0.29 ) }
    dend_44 { pt3dadd( 13.2831, 126.325, 3.45018, 0.66 ) }
    dend_44 { pt3dadd( 13.3048, 126.535, 3.45188, 0.66 ) }
    dend_44 { pt3dadd( 13.3556, 127.13, 3.46009, 0.29 ) }
    dend_44 { pt3dadd( 13.3882, 127.707, 3.47378, 0.29 ) }
    dend_44 { pt3dadd( 13.3633, 128.562, 3.51358, 0.29 ) }
    dend_44 { pt3dadd( 13.3101, 128.994, 3.5482, 0.66 ) }
    dend_44 { pt3dadd( 13.2555, 129.338, 3.57681, 0.81 ) }
    dend_44 { pt3dadd( 13.232, 129.48, 3.58839, 0.81 ) }
    dend_44 { pt3dadd( 13.1614, 129.874, 3.62059, 0.52 ) }
    dend_44 { pt3dadd( 13.0812, 130.473, 3.66379, 0.29 ) }
    dend_44 { pt3dadd( 13.0663, 130.962, 3.69133, 0.29 ) }
    dend_44 { pt3dadd( 13.0662, 131.526, 3.72205, 0.88 ) }
    dend_44 { pt3dadd( 13.0674, 131.871, 3.74176, 1.18 ) }
    dend_44 { pt3dadd( 13.0648, 131.947, 3.74689, 1.18 ) }
    dend_44 { pt3dadd( 13.0437, 132.371, 3.77771, 0.81 ) }
    dend_44 { pt3dadd( 12.933, 133.557, 3.85687, 0.29 ) }
    dend_44 { pt3dadd( 12.8335, 134.244, 3.9004, 0.44 ) }
    dend_44 { pt3dadd( 12.7274, 134.801, 3.93514, 0.44 ) }
    dend_44 { pt3dadd( 12.4566, 135.903, 3.94016, 0.29 ) }
    dend_44 { pt3dadd( 12.4342, 135.976, 3.93784, 0.29 ) }
    dend_44 { pt3dadd( 12.0865, 136.9, 3.88385, 1.4 ) }
    dend_44 { pt3dadd( 11.94, 137.231, 3.85686, 1.92 ) }
    dend_44 { pt3dadd( 11.7204, 137.712, 3.8116, 1.92 ) }
    dend_44 { pt3dadd( 11.0536, 139.036, 3.75093, 0.37 ) }
    dend_44 { pt3dadd( 10.6772, 139.76, 3.75296, 0.37 ) }
    dend_44 { pt3dadd( 10.3845, 140.32, 3.78094, 0.59 ) }
    dend_44 { pt3dadd( 10.165, 140.754, 3.8283, 0.66 ) }
    dend_44 { pt3dadd( 9.96689, 141.171, 3.89306, 0.52 ) }
    dend_44 { pt3dadd( 9.47617, 142.318, 4.13863, 0.22 ) }
    dend_44 { pt3dadd( 9.28092, 142.889, 4.31177, 0.22 ) }
    dend_44 { pt3dadd( 9.25575, 142.977, 4.33711, 0.22 ) }
    dend_44 { pt3dadd( 9.03458, 143.849, 4.56574, 1.18 ) }
    dend_44 { pt3dadd( 8.95473, 144.183, 4.64503, 1.77 ) }
    dend_44 { pt3dadd( 8.82626, 144.723, 4.75974, 2.14 ) }
    dend_44 { pt3dadd( 8.44498, 146.267, 4.97361, 0.29 ) }
    dend_44 { pt3dadd( 8.15469, 147.254, 5.08466, 0.29 ) }
    dend_44 { pt3dadd( 7.87562, 148.116, 5.1614, 0.88 ) }
    dend_44 { pt3dadd( 7.68887, 148.64, 5.1923, 1.4 ) }
    dend_44 { pt3dadd( 7.53261, 149.068, 5.20489, 1.4 ) }
    dend_44 { pt3dadd( 7.09668, 150.258, 5.19532, 0.44 ) }
    dend_44 { pt3dadd( 6.9354, 150.732, 5.16854, 0.29 ) }
    dend_44 { pt3dadd( 6.80824, 151.149, 5.14177, 0.44 ) }
    dend_44 { pt3dadd( 6.59773, 152.01, 5.09504, 0.44 ) }
    dend_44 { pt3dadd( 6.46179, 152.865, 5.07064, 0.59 ) }
    dend_44 { pt3dadd( 6.45592, 152.932, 5.06793, 0.59 ) }
    dend_44 { pt3dadd( 6.43549, 153.977, 5.03129, 0.59 ) }
    dend_44 { pt3dadd( 6.43731, 154.044, 5.0273, 0.59 ) }
    dend_44 { pt3dadd( 6.47304, 154.883, 4.93604, 0.37 ) }
    dend_44 { pt3dadd( 6.53081, 155.784, 4.81139, 0.37 ) }
    dend_44 { pt3dadd( 6.62799, 157.162, 4.59959, 1.33 ) }
    dend_44 { pt3dadd( 6.68235, 157.772, 4.50427, 1.62 ) }
    dend_44 { pt3dadd( 6.76178, 158.477, 4.39264, 1.69 ) }
    dend_44 { pt3dadd( 6.93508, 159.735, 4.20421, 0.59 ) }
    dend_44 { pt3dadd( 7.09423, 160.695, 4.06626, 0.44 ) }
    dend_44 { pt3dadd( 7.23021, 161.377, 3.98374, 0.29 ) }
    dend_44 { pt3dadd( 7.45228, 162.257, 3.93884, 0.22 ) }
    dend_44 { pt3dadd( 7.62939, 162.9, 3.92828, 0.74 ) }
    dend_44 { pt3dadd( 7.7893, 163.44, 3.9482, 0.96 ) }
    dend_44 { pt3dadd( 7.82285, 163.543, 3.95896, 0.96 ) }
    dend_44 { pt3dadd( 8.03079, 164.206, 4.04288, 0.96 ) }
    dend_44 { pt3dadd( 8.38903, 165.487, 4.22916, 0.29 ) }
    dend_44 { pt3dadd( 8.40254, 165.553, 4.23996, 0.29 ) }
    dend_44 { pt3dadd( 8.51246, 166.319, 4.37243, 0.37 ) }
    dend_44 { pt3dadd( 8.5221, 166.46, 4.39982, 0.37 ) }
    dend_44 { pt3dadd( 8.53306, 166.939, 4.49695, 0.37 ) }
    dend_44 { pt3dadd( 8.52486, 167.431, 4.59589, 1.11 ) }
    dend_44 { pt3dadd( 8.49924, 167.924, 4.68912, 1.25 ) }
    dend_44 { pt3dadd( 8.50114, 168.293, 4.75629, 1.4 ) }
    dend_44 { pt3dadd( 8.63018, 169.907, 5.03211, 0.29 ) }
    dend_44 { pt3dadd( 8.64732, 169.982, 5.04293, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_44 { pt3dadd( 8.84341, 170.647, 5.13784, 0.29 ) }
    dend_44 { pt3dadd( 8.86842, 170.709, 5.14579, 0.29 ) }
    dend_44 { pt3dadd( 9.32517, 171.501, 5.22313, 0.44 ) }
    dend_44 { pt3dadd( 9.58151, 171.804, 5.23199, 0.44 ) }
    dend_44 { pt3dadd( 10.3966, 172.322, 5.13098, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 5/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.7096, 15.3172, -4.97108, 0.96 ) }
    dend_42 { pt3dadd( -13.504, 15.7229, -6.00241, 0.96 ) }
    dend_42 { pt3dadd( -14.1328, 16.1913, -6.86942, 0.74 ) }
    dend_42 { pt3dadd( -14.2421, 16.2954, -7.02057, 0.74 ) }
    dend_42 { pt3dadd( -15.2762, 17.5409, -8.52895, 0.66 ) }
    dend_42 { pt3dadd( -15.8585, 18.3924, -9.47644, 0.74 ) }
    dend_42 { pt3dadd( -16.2146, 18.971, -10.0668, 0.74 ) }
    dend_42 { pt3dadd( -16.49, 19.5727, -10.6051, 1.03 ) }
    dend_42 { pt3dadd( -16.6848, 20.0846, -11.0512, 1.25 ) }
    dend_42 { pt3dadd( -16.9521, 20.7668, -11.5856, 1.25 ) }
    dend_42 { pt3dadd( -17.4567, 21.9607, -12.3961, 1.03 ) }
    dend_42 { pt3dadd( -17.7293, 22.5109, -12.7715, 0.88 ) }
    dend_42 { pt3dadd( -18.4637, 23.6723, -13.7591, 0.88 ) }
    dend_42 { pt3dadd( -18.5013, 23.7196, -13.8102, 0.88 ) }
    dend_42 { pt3dadd( -19.3762, 24.5103, -15.0184, 0.52 ) }
    dend_42 { pt3dadd( -19.8251, 24.6288, -15.6839, 0.52 ) }
    dend_42 { pt3dadd( -19.958, 24.5362, -15.9113, 0.52 ) }
    dend_42 { pt3dadd( -20.6667, 23.7243, -17.1293, 0.81 ) }
    dend_42 { pt3dadd( -20.7301, 23.6409, -17.2319, 0.81 ) }
    dend_42 { pt3dadd( -21.2418, 23.0, -18.0378, 0.88 ) }
    dend_42 { pt3dadd( -21.8686, 22.2202, -19.0099, 0.44 ) }
    dend_42 { pt3dadd( -22.3171, 22.0279, -19.4527, 0.44 ) }
    dend_42 { pt3dadd( -23.0873, 22.1454, -19.8416, 0.81 ) }
    dend_42 { pt3dadd( -23.9153, 22.3449, -20.1572, 1.18 ) }
    dend_42 { pt3dadd( -24.3975, 22.44, -20.3427, 1.47 ) }
    dend_42 { pt3dadd( -25.0498, 22.4913, -20.6587, 1.18 ) }
    dend_42 { pt3dadd( -26.0888, 22.3611, -21.2776, 0.74 ) }
    dend_42 { pt3dadd( -27.1364, 21.9622, -22.0102, 0.44 ) }
    dend_42 { pt3dadd( -27.8827, 21.5375, -22.5623, 1.99 ) }
    dend_42 { pt3dadd( -28.7961, 20.9034, -23.2514, 2.8 ) }
    dend_42 { pt3dadd( -30.4341, 19.5991, -24.5415, 1.4 ) }
    dend_42 { pt3dadd( -31.4407, 18.7427, -25.3557, 0.44 ) }
    dend_42 { pt3dadd( -32.1395, 18.1297, -25.937, 0.29 ) }
    dend_42 { pt3dadd( -32.6091, 17.7555, -26.313, 0.29 ) }
    dend_42 { pt3dadd( -32.9493, 17.5655, -26.5598, 0.29 ) }
    dend_42 { pt3dadd( -33.0159, 17.5567, -26.5993, 0.29 ) }
    dend_42 { pt3dadd( -34.0237, 17.8033, -27.0742, 1.77 ) }
    dend_42 { pt3dadd( -34.6655, 18.0366, -27.3782, 1.99 ) }
    dend_42 { pt3dadd( -35.2278, 18.2481, -27.6578, 2.06 ) }
    dend_42 { pt3dadd( -35.7525, 18.4241, -27.9286, 1.99 ) }
    dend_42 { pt3dadd( -37.2754, 18.7919, -28.7114, 0.52 ) }
    dend_42 { pt3dadd( -37.8566, 18.8298, -29.0177, 0.52 ) }
    dend_42 { pt3dadd( -38.417, 18.4846, -29.3367, 0.66 ) }
    dend_42 { pt3dadd( -38.7298, 17.9805, -29.6566, 0.88 ) }
    dend_42 { pt3dadd( -38.8603, 17.7053, -29.8643, 1.03 ) }
    dend_42 { pt3dadd( -39.0816, 17.1553, -30.3305, 0.88 ) }
    dend_42 { pt3dadd( -39.3354, 16.641, -31.054, 0.52 ) }
    dend_42 { pt3dadd( -39.7006, 16.2565, -31.9881, 0.37 ) }
    dend_42 { pt3dadd( -40.5734, 15.7944, -34.0106, 1.03 ) }
    dend_42 { pt3dadd( -41.0925, 15.6838, -34.9991, 1.25 ) }
    dend_42 { pt3dadd( -41.2983, 15.669, -35.3426, 1.47 ) }
    dend_42 { pt3dadd( -42.7171, 15.6932, -37.4323, 0.44 ) }
    dend_42 { pt3dadd( -43.2552, 15.7234, -38.1498, 0.44 ) }
    dend_42 { pt3dadd( -43.3413, 15.7299, -38.2514, 0.44 ) }
    dend_42 { pt3dadd( -44.9795, 15.7977, -39.8446, 2.65 ) }
    dend_42 { pt3dadd( -45.6618, 15.8136, -40.4452, 2.87 ) }
    dend_42 { pt3dadd( -46.1446, 15.84, -40.8422, 2.73 ) }
    dend_42 { pt3dadd( -48.002, 16.0483, -42.2375, 0.66 ) }
    dend_42 { pt3dadd( -48.728, 16.2226, -42.7847, 0.74 ) }
    dend_42 { pt3dadd( -49.3805, 16.4916, -43.2395, 0.88 ) }
    dend_42 { pt3dadd( -50.69, 17.3049, -44.0961, 0.37 ) }
    dend_42 { pt3dadd( -51.3995, 17.8065, -44.5737, 0.29 ) }
    dend_42 { pt3dadd( -51.9837, 18.2593, -44.982, 0.29 ) }
    dend_42 { pt3dadd( -52.8036, 18.9197, -45.5434, 0.29 ) }
    dend_42 { pt3dadd( -53.7959, 19.7002, -46.2654, 1.99 ) }
    dend_42 { pt3dadd( -54.6009, 20.3167, -46.8629, 2.58 ) }
    dend_42 { pt3dadd( -55.8237, 21.2018, -47.7998, 0.29 ) }
    dend_42 { pt3dadd( -55.8766, 21.2389, -47.8446, 0.29 ) }
    dend_42 { pt3dadd( -56.5126, 21.6875, -48.4274, 0.29 ) }
    dend_42 { pt3dadd( -57.1166, 22.1878, -49.0467, 0.96 ) }
    dend_42 { pt3dadd( -57.2991, 22.3819, -49.2388, 1.25 ) }
    dend_42 { pt3dadd( -57.8308, 22.984, -49.7329, 1.11 ) }
    dend_42 { pt3dadd( -58.5942, 23.6927, -50.4458, 0.29 ) }
    dend_42 { pt3dadd( -58.6448, 23.7276, -50.4959, 0.29 ) }
    dend_42 { pt3dadd( -59.2292, 24.0127, -51.1424, 0.52 ) }
    dend_42 { pt3dadd( -59.7228, 24.1997, -51.6717, 0.74 ) }
    dend_42 { pt3dadd( -60.61, 24.5122, -52.5451, 0.74 ) }
    dend_42 { pt3dadd( -62.2625, 25.0257, -54.0121, 2.14 ) }
    dend_42 { pt3dadd( -63.0669, 25.2631, -54.6708, 2.43 ) }
    dend_42 { pt3dadd( -64.6453, 25.7813, -55.9168, 0.29 ) }
    dend_42 { pt3dadd( -65.5077, 26.0858, -56.5787, 0.29 ) }
    dend_42 { pt3dadd( -66.3114, 26.4081, -57.1617, 0.81 ) }
    dend_42 { pt3dadd( -66.8434, 26.6368, -57.5041, 1.03 ) }
    dend_42 { pt3dadd( -67.6428, 26.9736, -57.9355, 0.29 ) }
    dend_42 { pt3dadd( -68.388, 27.2645, -58.3365, 0.88 ) }
    dend_42 { pt3dadd( -68.9379, 27.4498, -58.6588, 1.47 ) }
    dend_42 { pt3dadd( -69.7478, 27.6681, -59.1671, 1.47 ) }
    dend_42 { pt3dadd( -71.5765, 28.0863, -60.3625, 0.29 ) }
    dend_42 { pt3dadd( -72.5505, 28.2854, -61.0009, 2.06 ) }
    dend_42 { pt3dadd( -73.3366, 28.4191, -61.481, 2.21 ) }
    dend_42 { pt3dadd( -75.783, 28.7761, -62.834, 0.29 ) }
    dend_42 { pt3dadd( -76.8989, 28.9253, -63.3702, 0.37 ) }
    dend_42 { pt3dadd( -76.9699, 28.9337, -63.4011, 0.37 ) }
    dend_42 { pt3dadd( -77.582, 28.9689, -63.6376, 0.29 ) }
    dend_42 { pt3dadd( -78.6608, 28.9549, -64.0264, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_42 { pt3dadd( -79.225, 28.9003, -64.213, 0.88 ) }
    dend_42 { pt3dadd( -79.7681, 28.779, -64.3961, 1.25 ) }
    dend_42 { pt3dadd( -81.171, 28.4817, -64.9811, 0.59 ) }
    dend_42 { pt3dadd( -82.0527, 28.3366, -65.3784, 0.22 ) }
    dend_42 { pt3dadd( -82.4138, 28.3006, -65.5485, 0.22 ) }
    dend_42 { pt3dadd( -82.8682, 28.2915, -65.7585, 0.52 ) }
    dend_42 { pt3dadd( -83.3204, 28.3323, -65.9432, 0.52 ) }
    dend_42 { pt3dadd( -84.1317, 28.5197, -66.2103, 0.22 ) }
    dend_42 { pt3dadd( -84.6624, 28.6963, -66.3389, 0.22 ) }
    dend_42 { pt3dadd( -85.5511, 29.0729, -66.547, 1.4 ) }
    dend_42 { pt3dadd( -86.0808, 29.332, -66.6712, 1.84 ) }
    dend_42 { pt3dadd( -86.851, 29.7528, -66.8445, 1.84 ) }
    dend_42 { pt3dadd( -88.1374, 30.5304, -67.1494, 0.29 ) }
    dend_42 { pt3dadd( -88.2023, 30.5715, -67.167, 0.29 ) }
    dend_42 { pt3dadd( -88.6835, 30.8783, -67.3071, 0.29 ) }
    dend_42 { pt3dadd( -89.3001, 31.2869, -67.4975, 0.81 ) }
    dend_42 { pt3dadd( -89.7833, 31.5792, -67.6341, 0.81 ) }
    dend_42 { pt3dadd( -90.3116, 31.851, -67.7687, 0.37 ) }
    dend_42 { pt3dadd( -91.1575, 32.2193, -68.032, 0.29 ) }
    dend_42 { pt3dadd( -91.9815, 32.5392, -68.3143, 0.29 ) }
    dend_42 { pt3dadd( -92.079, 32.5757, -68.3516, 0.29 ) }
    dend_42 { pt3dadd( -92.9702, 32.9041, -68.7117, 0.29 ) }
    dend_42 { pt3dadd( -94.0008, 33.3222, -69.1322, 1.25 ) }
    dend_42 { pt3dadd( -94.5768, 33.5823, -69.3657, 1.62 ) }
    dend_42 { pt3dadd( -94.9649, 33.8005, -69.5165, 1.69 ) }
    dend_42 { pt3dadd( -96.6714, 35.0343, -70.1783, 0.29 ) }
    dend_42 { pt3dadd( -96.8062, 35.1533, -70.2315, 0.29 ) }
    dend_42 { pt3dadd( -97.2196, 35.5792, -70.3859, 0.29 ) }
    dend_42 { pt3dadd( -97.2729, 35.6372, -70.4028, 0.29 ) }
    dend_42 { pt3dadd( -97.881, 36.1828, -70.5689, 0.29 ) }
    dend_42 { pt3dadd( -98.4246, 36.5614, -70.708, 0.29 ) }
    dend_42 { pt3dadd( -99.2634, 36.9909, -70.9042, 0.29 ) }
    dend_42 { pt3dadd( -100.377, 37.3852, -71.1575, 1.62 ) }
    dend_42 { pt3dadd( -100.698, 37.4473, -71.2272, 1.84 ) }
    dend_42 { pt3dadd( -102.428, 37.5469, -71.578, 0.29 ) }
    dend_42 { pt3dadd( -103.068, 37.4593, -71.7522, 0.66 ) }
    dend_42 { pt3dadd( -103.337, 37.373, -71.8396, 0.66 ) }
    dend_42 { pt3dadd( -103.914, 37.0927, -72.0537, 0.29 ) }
    dend_42 { pt3dadd( -104.465, 36.749, -72.2938, 0.81 ) }
    dend_42 { pt3dadd( -104.873, 36.4753, -72.5127, 0.96 ) }
    dend_42 { pt3dadd( -106.197, 35.5004, -73.3769, 0.44 ) }
    dend_42 { pt3dadd( -106.739, 35.0863, -73.7681, 0.29 ) }
    dend_42 { pt3dadd( -106.854, 34.9992, -73.8563, 0.81 ) }
    dend_42 { pt3dadd( -107.299, 34.6514, -74.2295, 1.03 ) }
    dend_42 { pt3dadd( -108.289, 33.836, -75.0796, 0.29 ) }
    dend_42 { pt3dadd( -108.331, 33.7982, -75.1164, 0.29 ) }
    dend_42 { pt3dadd( -108.959, 33.2398, -75.6961, 0.29 ) }
    dend_42 { pt3dadd( -108.997, 33.2077, -75.7421, 0.29 ) }
    dend_42 { pt3dadd( -109.662, 32.6618, -76.5585, 1.03 ) }
    dend_42 { pt3dadd( -109.98, 32.4031, -76.9758, 1.03 ) }
    dend_42 { pt3dadd( -110.893, 31.7153, -78.3415, 0.22 ) }
    dend_42 { pt3dadd( -111.996, 30.9928, -80.0625, 1.92 ) }
    dend_42 { pt3dadd( -114.018, 29.8255, -83.3308, 0.37 ) }
    dend_42 { pt3dadd( -114.67, 29.4948, -84.3955, 0.22 ) }
    dend_42 { pt3dadd( -115.561, 29.1123, -85.8782, 1.33 ) }
    dend_42 { pt3dadd( -117.7, 28.422, -89.3601, 0.29 ) }
    dend_42 { pt3dadd( -118.149, 28.3205, -90.0449, 0.22 ) }
    dend_42 { pt3dadd( -118.188, 28.3134, -90.0986, 0.22 ) }
    dend_42 { pt3dadd( -118.714, 28.2341, -90.7213, 0.22 ) }
    dend_42 { pt3dadd( -118.757, 28.2246, -90.7717, 0.22 ) }
    dend_42 { pt3dadd( -119.951, 27.8793, -92.0522, 1.18 ) }
    dend_42 { pt3dadd( -121.956, 27.1522, -93.9991, 0.29 ) }
    dend_42 { pt3dadd( -122.585, 26.8916, -94.6272, 1.4 ) }
    dend_42 { pt3dadd( -124.477, 25.9747, -96.5556, 0.29 ) }
    dend_42 { pt3dadd( -125.664, 25.236, -97.8271, 0.29 ) }
    dend_42 { pt3dadd( -125.708, 25.1989, -97.8805, 0.29 ) }
    dend_42 { pt3dadd( -126.27, 24.4736, -98.7283, 0.29 ) }
    dend_42 { pt3dadd( -126.296, 24.4299, -98.7735, 0.29 ) }
    dend_42 { pt3dadd( -126.772, 23.4083, -99.7358, 0.29 ) }
    dend_42 { pt3dadd( -127.086, 22.2915, -100.534, 0.29 ) }
    dend_42 { pt3dadd( -127.495, 20.7167, -101.553, 1.4 ) }
    dend_42 { pt3dadd( -127.607, 20.1244, -101.93, 1.47 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 72/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -12.7096, 15.3172, -4.97108, 0.74 ) }
    dend_41 { pt3dadd( -12.2354, 17.0572, -4.90475, 0.74 ) }
    dend_41 { pt3dadd( -11.7583, 18.6926, -4.86711, 0.74 ) }
    dend_41 { pt3dadd( -11.736, 18.7681, -4.86578, 0.74 ) }
    dend_41 { pt3dadd( -11.478, 19.636, -4.85268, 0.74 ) }
    dend_41 { pt3dadd( -11.1671, 20.8453, -4.83515, 0.74 ) }
    dend_41 { pt3dadd( -11.0267, 21.5622, -4.82464, 0.74 ) }
    dend_41 { pt3dadd( -11.011, 21.7099, -4.82964, 0.74 ) }
    dend_41 { pt3dadd( -11.0519, 22.6571, -4.8973, 0.74 ) }
    dend_41 { pt3dadd( -11.0614, 22.7254, -4.90321, 0.74 ) }
    dend_41 { pt3dadd( -11.3416, 23.8121, -5.00403, 0.96 ) }
    dend_41 { pt3dadd( -11.6619, 24.7609, -5.08049, 1.25 ) }
    dend_41 { pt3dadd( -12.0801, 25.9221, -5.16035, 1.55 ) }
    dend_41 { pt3dadd( -12.3369, 26.5892, -5.20318, 1.55 ) }
    dend_41 { pt3dadd( -12.3632, 26.6533, -5.20862, 1.55 ) }
    dend_41 { pt3dadd( -12.6883, 27.4593, -5.29635, 1.03 ) }
    dend_41 { pt3dadd( -13.0572, 28.3246, -5.40985, 1.03 ) }
    dend_41 { pt3dadd( -13.0889, 28.3963, -5.42012, 1.03 ) }
    dend_41 { pt3dadd( -13.5646, 29.3985, -5.56956, 0.96 ) }
    dend_41 { pt3dadd( -14.0001, 30.2084, -5.71541, 0.96 ) }
    dend_41 { pt3dadd( -14.5297, 31.0756, -5.89016, 0.52 ) }
    dend_41 { pt3dadd( -15.1465, 31.9399, -6.08633, 0.44 ) }
    dend_41 { pt3dadd( -15.1878, 31.9925, -6.09818, 0.44 ) }
    dend_41 { pt3dadd( -15.6397, 32.5446, -6.21029, 0.88 ) }
    dend_41 { pt3dadd( -16.0883, 33.0755, -6.29798, 1.11 ) }
    dend_41 { pt3dadd( -16.4883, 33.5294, -6.34644, 1.33 ) }
    dend_41 { pt3dadd( -16.963, 34.0643, -6.38375, 1.4 ) }
    dend_41 { pt3dadd( -17.4381, 34.6282, -6.41196, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_41 { pt3dadd( -17.8521, 35.1347, -6.42824, 0.59 ) }
    dend_41 { pt3dadd( -18.3211, 35.7583, -6.46133, 0.59 ) }
    dend_41 { pt3dadd( -18.5129, 36.0463, -6.49159, 0.96 ) }
    dend_41 { pt3dadd( -18.7021, 36.3558, -6.53652, 1.11 ) }
    dend_41 { pt3dadd( -18.8545, 36.6327, -6.58398, 1.11 ) }
    dend_41 { pt3dadd( -19.1003, 37.1268, -6.70609, 0.96 ) }
    dend_41 { pt3dadd( -19.4131, 37.9138, -6.92018, 0.59 ) }
    dend_41 { pt3dadd( -19.6427, 38.7091, -7.1526, 0.81 ) }
    dend_41 { pt3dadd( -19.7613, 39.2877, -7.3145, 1.11 ) }
    dend_41 { pt3dadd( -19.8304, 39.7698, -7.43974, 1.11 ) }
    dend_41 { pt3dadd( -19.9151, 40.7446, -7.66924, 0.66 ) }
    dend_41 { pt3dadd( -19.942, 41.7496, -7.87076, 0.37 ) }
    dend_41 { pt3dadd( -19.9081, 42.8367, -8.05921, 0.74 ) }
    dend_41 { pt3dadd( -19.8406, 43.5377, -8.199, 0.96 ) }
    dend_41 { pt3dadd( -19.7591, 44.0898, -8.32345, 1.47 ) }
    dend_41 { pt3dadd( -19.6971, 44.4628, -8.40878, 1.77 ) }
    dend_41 { pt3dadd( -19.6092, 44.957, -8.51697, 1.77 ) }
    dend_41 { pt3dadd( -19.4851, 45.6428, -8.67843, 1.77 ) }
    dend_41 { pt3dadd( -19.2741, 46.8177, -8.97891, 0.66 ) }
    dend_41 { pt3dadd( -19.047, 48.1845, -9.3451, 0.37 ) }
    dend_41 { pt3dadd( -18.961, 48.8089, -9.50597, 0.29 ) }
    dend_41 { pt3dadd( -18.8894, 49.522, -9.66693, 0.81 ) }
    dend_41 { pt3dadd( -18.8503, 50.1103, -9.77318, 0.88 ) }
    dend_41 { pt3dadd( -18.8382, 50.7228, -9.8439, 0.74 ) }
    dend_41 { pt3dadd( -18.8614, 51.4447, -9.8907, 0.37 ) }
    dend_41 { pt3dadd( -18.9358, 52.2589, -9.93123, 0.29 ) }
    dend_41 { pt3dadd( -19.0504, 53.0527, -9.97874, 1.03 ) }
    dend_41 { pt3dadd( -19.1633, 53.6142, -10.0127, 1.69 ) }
    dend_41 { pt3dadd( -19.2778, 54.095, -10.0418, 1.69 ) }
    dend_41 { pt3dadd( -19.5182, 55.0556, -10.0867, 0.37 ) }
    dend_41 { pt3dadd( -19.7296, 55.9056, -10.1449, 0.29 ) }
    dend_41 { pt3dadd( -19.8501, 56.401, -10.1851, 0.29 ) }
    dend_41 { pt3dadd( -20.0636, 57.2965, -10.2601, 0.66 ) }
    dend_41 { pt3dadd( -20.1308, 57.5792, -10.2572, 0.96 ) }
    dend_41 { pt3dadd( -20.2835, 58.2828, -10.1966, 0.44 ) }
    dend_41 { pt3dadd( -20.4893, 59.3812, -10.0404, 1.4 ) }
    dend_41 { pt3dadd( -20.5845, 59.9605, -9.94188, 1.99 ) }
    dend_41 { pt3dadd( -20.6688, 60.5377, -9.83249, 2.28 ) }
    dend_41 { pt3dadd( -20.943, 62.5468, -9.43942, 0.37 ) }
    dend_41 { pt3dadd( -21.1058, 63.7411, -9.20164, 0.37 ) }
    dend_41 { pt3dadd( -21.2369, 64.7382, -8.99572, 0.96 ) }
    dend_41 { pt3dadd( -21.282, 65.1051, -8.91484, 1.11 ) }
    dend_41 { pt3dadd( -21.3482, 65.6728, -8.79453, 1.11 ) }
    dend_41 { pt3dadd( -21.4881, 67.026, -8.53565, 0.37 ) }
    dend_41 { pt3dadd( -21.5383, 67.6508, -8.44515, 0.37 ) }
    dend_41 { pt3dadd( -21.5438, 67.719, -8.43484, 0.37 ) }
    dend_41 { pt3dadd( -21.6016, 69.0023, -8.24321, 1.55 ) }
    dend_41 { pt3dadd( -21.6021, 69.4144, -8.18434, 2.21 ) }
    dend_41 { pt3dadd( -21.5901, 69.8451, -8.12546, 2.43 ) }
    dend_41 { pt3dadd( -21.5432, 70.7779, -8.00716, 1.18 ) }
    dend_41 { pt3dadd( -21.4749, 72.0745, -7.86338, 0.37 ) }
    dend_41 { pt3dadd( -21.4315, 73.3384, -7.742, 0.37 ) }
    dend_41 { pt3dadd( -21.4043, 74.2864, -7.66753, 0.37 ) }
    dend_41 { pt3dadd( -21.4027, 74.4348, -7.65611, 0.37 ) }
    dend_41 { pt3dadd( -21.4136, 75.0195, -7.61271, 0.29 ) }
    dend_41 { pt3dadd( -21.4579, 75.8649, -7.55253, 0.29 ) }
    dend_41 { pt3dadd( -21.5347, 76.9435, -7.47761, 1.18 ) }
    dend_41 { pt3dadd( -21.5574, 77.2292, -7.45902, 1.47 ) }
    dend_41 { pt3dadd( -21.5799, 77.6661, -7.43072, 1.33 ) }
    dend_41 { pt3dadd( -21.5827, 78.0223, -7.40696, 1.03 ) }
    dend_41 { pt3dadd( -21.5359, 78.9604, -7.34101, 0.37 ) }
    dend_41 { pt3dadd( -21.4552, 79.9315, -7.23934, 0.29 ) }
    dend_41 { pt3dadd( -21.3943, 80.5955, -7.15179, 1.11 ) }
    dend_41 { pt3dadd( -21.3641, 81.0254, -7.08751, 1.55 ) }
    dend_41 { pt3dadd( -21.338, 81.532, -7.00383, 1.25 ) }
    dend_41 { pt3dadd( -21.32, 82.2547, -6.87483, 0.52 ) }
    dend_41 { pt3dadd( -21.3288, 83.089, -6.71875, 0.29 ) }
    dend_41 { pt3dadd( -21.3431, 83.4732, -6.64521, 0.29 ) }
    dend_41 { pt3dadd( -21.3715, 84.193, -6.51084, 0.81 ) }
    dend_41 { pt3dadd( -21.3777, 84.3979, -6.47531, 1.03 ) }
    dend_41 { pt3dadd( -21.396, 84.9076, -6.40021, 1.03 ) }
    dend_41 { pt3dadd( -21.4455, 85.9109, -6.28604, 0.52 ) }
    dend_41 { pt3dadd( -21.4691, 86.5013, -6.23581, 0.44 ) }
    dend_41 { pt3dadd( -21.5023, 87.084, -6.19001, 0.59 ) }
    dend_41 { pt3dadd( -21.53, 87.4385, -6.16428, 0.52 ) }
    dend_41 { pt3dadd( -21.6411, 88.6188, -6.08475, 0.37 ) }
    dend_41 { pt3dadd( -21.8087, 89.8844, -6.00888, 0.29 ) }
    dend_41 { pt3dadd( -21.823, 89.9628, -6.00478, 0.29 ) }
    dend_41 { pt3dadd( -22.0418, 90.9295, -5.96016, 1.62 ) }
    dend_41 { pt3dadd( -22.1643, 91.4195, -5.9448, 1.99 ) }
    dend_41 { pt3dadd( -22.2918, 91.9074, -5.93397, 2.28 ) }
    dend_41 { pt3dadd( -22.7604, 93.6813, -5.90615, 0.37 ) }
    dend_41 { pt3dadd( -23.2378, 95.532, -5.8817, 0.37 ) }
    dend_41 { pt3dadd( -23.3996, 96.1799, -5.87293, 0.37 ) }
    dend_41 { pt3dadd( -23.6865, 97.3818, -5.85644, 1.25 ) }
    dend_41 { pt3dadd( -23.8004, 97.8843, -5.85001, 2.06 ) }
    dend_41 { pt3dadd( -23.9121, 98.4473, -5.84182, 1.47 ) }
    dend_41 { pt3dadd( -24.0678, 99.4444, -5.82373, 0.66 ) }
    dend_41 { pt3dadd( -24.1283, 99.9363, -5.81004, 0.44 ) }
    dend_41 { pt3dadd( -24.1398, 100.034, -5.8076, 0.44 ) }
    dend_41 { pt3dadd( -24.2218, 100.614, -5.79237, 0.37 ) }
    dend_41 { pt3dadd( -24.3807, 101.541, -5.78158, 0.15 ) }
    dend_41 { pt3dadd( -24.5071, 102.145, -5.78235, 0.37 ) }
    dend_41 { pt3dadd( -24.5904, 102.497, -5.78595, 0.37 ) }
    dend_41 { pt3dadd( -24.8317, 103.478, -5.79568, 0.22 ) }
    dend_41 { pt3dadd( -25.0571, 104.346, -5.80069, 1.11 ) }
    dend_41 { pt3dadd( -25.1376, 104.654, -5.80107, 1.69 ) }
    dend_41 { pt3dadd( -25.2456, 105.069, -5.79904, 1.84 ) }
    dend_41 { pt3dadd( -25.5656, 106.443, -5.79983, 0.37 ) }
    dend_41 { pt3dadd( -25.7305, 107.224, -5.79996, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -25.9334, 108.3, -5.79396, 0.37 ) }
    dend_41 { pt3dadd( -26.0117, 108.809, -5.79878, 0.66 ) }
    dend_41 { pt3dadd( -26.066, 109.259, -5.80878, 0.66 ) }
    dend_41 { pt3dadd( -26.1743, 110.558, -5.86598, 0.29 ) }
    dend_41 { pt3dadd( -26.2077, 111.12, -5.90406, 0.29 ) }
    dend_41 { pt3dadd( -26.225, 111.71, -5.95037, 1.03 ) }
    dend_41 { pt3dadd( -26.2199, 112.289, -5.99446, 1.4 ) }
    dend_41 { pt3dadd( -26.2087, 112.581, -6.01264, 1.55 ) }
    dend_41 { pt3dadd( -26.1297, 113.417, -6.01007, 0.22 ) }
    dend_41 { pt3dadd( -26.0347, 113.991, -5.96822, 0.22 ) }
    dend_41 { pt3dadd( -25.8571, 114.837, -5.87498, 0.22 ) }
    dend_41 { pt3dadd( -25.6699, 115.616, -5.76421, 1.03 ) }
    dend_41 { pt3dadd( -25.5223, 116.18, -5.66653, 1.33 ) }
    dend_41 { pt3dadd( -25.1624, 117.479, -5.417, 0.29 ) }
    dend_41 { pt3dadd( -24.8663, 118.481, -5.20574, 0.29 ) }
    dend_41 { pt3dadd( -24.7259, 118.975, -5.10374, 0.29 ) }
    dend_41 { pt3dadd( -24.7107, 119.041, -5.08921, 0.29 ) }
    dend_41 { pt3dadd( -24.6277, 119.535, -4.97708, 0.81 ) }
    dend_41 { pt3dadd( -24.5736, 120.05, -4.86231, 0.88 ) }
    dend_41 { pt3dadd( -24.5586, 120.599, -4.70638, 0.44 ) }
    dend_41 { pt3dadd( -24.5665, 121.245, -4.47964, 0.29 ) }
    dend_41 { pt3dadd( -24.5818, 122.061, -4.16809, 0.29 ) }
    dend_41 { pt3dadd( -24.5904, 122.541, -3.98131, 0.66 ) }
    dend_41 { pt3dadd( -24.5991, 122.994, -3.80303, 0.29 ) }
    dend_41 { pt3dadd( -24.6212, 124.357, -3.26869, 0.52 ) }
    dend_41 { pt3dadd( -24.643, 124.893, -3.06709, 0.66 ) }
    dend_41 { pt3dadd( -24.6934, 125.434, -2.88484, 0.29 ) }
    dend_41 { pt3dadd( -24.8021, 126.131, -2.69267, 0.88 ) }
    dend_41 { pt3dadd( -24.8931, 126.549, -2.59387, 1.4 ) }
    dend_41 { pt3dadd( -24.9672, 126.821, -2.54286, 1.55 ) }
    dend_41 { pt3dadd( -25.1838, 127.534, -2.45123, 0.66 ) }
    dend_41 { pt3dadd( -25.6228, 128.834, -2.27492, 0.29 ) }
    dend_41 { pt3dadd( -25.8333, 129.402, -2.1934, 0.81 ) }
    dend_41 { pt3dadd( -25.9481, 129.682, -2.15069, 0.88 ) }
    dend_41 { pt3dadd( -26.1535, 130.159, -2.07627, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 9.9828, -5.99054, 10.2844, 0.74 ) }
    dend_38 { pt3dadd( 10.4823, -6.10065, 9.37749, 0.74 ) }
    dend_38 { pt3dadd( 10.8994, -6.12322, 8.67817, 0.37 ) }
    dend_38 { pt3dadd( 12.068, -5.99584, 6.89248, 1.03 ) }
    dend_38 { pt3dadd( 12.2856, -5.94234, 6.59434, 1.03 ) }
    dend_38 { pt3dadd( 13.3506, -5.51674, 5.33438, 0.74 ) }
    dend_38 { pt3dadd( 13.796, -5.29341, 4.90414, 0.96 ) }
    dend_38 { pt3dadd( 14.1968, -5.00547, 4.61175, 1.25 ) }
    dend_38 { pt3dadd( 14.6993, -4.59356, 4.40133, 1.55 ) }
    dend_38 { pt3dadd( 15.1548, -4.23385, 4.35534, 1.4 ) }
    dend_38 { pt3dadd( 15.9424, -3.67636, 4.37618, 0.74 ) }
    dend_38 { pt3dadd( 16.6998, -3.20007, 4.45272, 0.81 ) }
    dend_38 { pt3dadd( 16.7548, -3.16857, 4.45524, 0.81 ) }
    dend_38 { pt3dadd( 17.5691, -2.71359, 4.45888, 0.59 ) }
    dend_38 { pt3dadd( 18.3616, -2.26734, 4.4163, 0.44 ) }
    dend_38 { pt3dadd( 19.0064, -1.86783, 4.34867, 0.81 ) }
    dend_38 { pt3dadd( 19.8984, -1.26895, 4.21024, 0.96 ) }
    dend_38 { pt3dadd( 20.7382, -0.600526, 4.03809, 1.18 ) }
    dend_38 { pt3dadd( 21.2901, -0.0892378, 3.91799, 1.62 ) }
    dend_38 { pt3dadd( 21.7401, 0.391665, 3.80701, 1.4 ) }
    dend_38 { pt3dadd( 22.3608, 1.10662, 3.65309, 0.74 ) }
    dend_38 { pt3dadd( 22.4014, 1.15601, 3.64487, 0.74 ) }
    dend_38 { pt3dadd( 22.9011, 1.76265, 3.63102, 1.25 ) }
    dend_38 { pt3dadd( 23.5211, 2.42978, 3.73681, 1.4 ) }
    dend_38 { pt3dadd( 24.1174, 2.95753, 3.94983, 1.25 ) }
    dend_38 { pt3dadd( 24.8572, 3.49181, 4.33379, 1.18 ) }
    dend_38 { pt3dadd( 25.4168, 3.7955, 4.70032, 0.96 ) }
    dend_38 { pt3dadd( 26.4079, 4.23174, 5.43875, 0.59 ) }
    dend_38 { pt3dadd( 27.5649, 4.58226, 6.4187, 0.59 ) }
    dend_38 { pt3dadd( 28.2285, 4.73764, 7.02377, 0.88 ) }
    dend_38 { pt3dadd( 28.7299, 4.82946, 7.49902, 1.03 ) }
    dend_38 { pt3dadd( 29.6516, 4.96032, 8.37367, 0.74 ) }
    dend_38 { pt3dadd( 29.7213, 4.97101, 8.4361, 0.74 ) }
    dend_38 { pt3dadd( 30.5685, 5.19777, 9.10097, 0.52 ) }
    dend_38 { pt3dadd( 31.2264, 5.52885, 9.55333, 0.96 ) }
    dend_38 { pt3dadd( 31.4921, 5.72704, 9.7103, 1.18 ) }
    dend_38 { pt3dadd( 31.7614, 6.03283, 9.83941, 1.33 ) }
    dend_38 { pt3dadd( 32.0471, 6.49152, 9.93766, 1.4 ) }
    dend_38 { pt3dadd( 32.3784, 7.12464, 10.0527, 1.03 ) }
    dend_38 { pt3dadd( 32.6354, 7.71974, 10.1385, 0.88 ) }
    dend_38 { pt3dadd( 32.947, 8.45007, 10.2384, 0.74 ) }
    dend_38 { pt3dadd( 33.2242, 9.05404, 10.3141, 0.88 ) }
    dend_38 { pt3dadd( 33.4392, 9.45461, 10.362, 0.88 ) }
    dend_38 { pt3dadd( 34.0111, 10.3286, 10.4741, 0.81 ) }
    dend_38 { pt3dadd( 34.4869, 10.9616, 10.5314, 1.18 ) }
    dend_38 { pt3dadd( 35.1013, 11.7228, 10.5713, 0.52 ) }
    dend_38 { pt3dadd( 35.4769, 12.1809, 10.5682, 1.03 ) }
    dend_38 { pt3dadd( 35.8963, 12.7096, 10.5137, 0.74 ) }
    dend_38 { pt3dadd( 36.3498, 13.3215, 10.3928, 0.74 ) }
    dend_38 { pt3dadd( 36.9543, 14.1923, 10.1589, 0.66 ) }
    dend_38 { pt3dadd( 37.3544, 14.7525, 9.99446, 0.96 ) }
    dend_38 { pt3dadd( 37.8606, 15.4683, 9.7776, 1.62 ) }
    dend_38 { pt3dadd( 38.2538, 15.9817, 9.61556, 1.92 ) }
    dend_38 { pt3dadd( 38.6947, 16.4797, 9.43785, 1.69 ) }
    dend_38 { pt3dadd( 39.4589, 17.1694, 9.18919, 0.37 ) }
    dend_38 { pt3dadd( 40.18, 17.6269, 9.03215, 0.52 ) }
    dend_38 { pt3dadd( 40.2296, 17.6502, 9.02471, 0.52 ) }
    dend_38 { pt3dadd( 41.0574, 17.9917, 9.045, 0.66 ) }
    dend_38 { pt3dadd( 41.7538, 18.2758, 9.16345, 0.29 ) }
    dend_38 { pt3dadd( 42.2759, 18.4904, 9.30558, 0.29 ) }
    dend_38 { pt3dadd( 42.317, 18.5093, 9.31961, 0.29 ) }
    dend_38 { pt3dadd( 42.7544, 18.7808, 9.48745, 0.74 ) }
    dend_38 { pt3dadd( 43.8982, 19.5203, 9.90477, 0.52 ) }
    dend_38 { pt3dadd( 44.2949, 19.781, 10.0436, 0.88 ) }
    dend_38 { pt3dadd( 44.8316, 20.0968, 10.2318, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_38 { pt3dadd( 44.8797, 20.1215, 10.2463, 0.88 ) }
    dend_38 { pt3dadd( 45.838, 20.5685, 10.5034, 0.52 ) }
    dend_38 { pt3dadd( 46.6917, 20.9144, 10.6949, 0.59 ) }
    dend_38 { pt3dadd( 47.2262, 21.1118, 10.7807, 0.44 ) }
    dend_38 { pt3dadd( 48.0465, 21.4626, 10.9339, 0.29 ) }
    dend_38 { pt3dadd( 48.0936, 21.4899, 10.9445, 0.29 ) }
    dend_38 { pt3dadd( 48.4013, 21.7429, 11.0252, 0.52 ) }
    dend_38 { pt3dadd( 48.446, 21.7871, 11.0399, 0.52 ) }
    dend_38 { pt3dadd( 48.6567, 22.1063, 11.1229, 0.52 ) }
    dend_38 { pt3dadd( 48.9725, 22.7852, 11.2494, 0.22 ) }
    dend_38 { pt3dadd( 49.2739, 23.6894, 11.3421, 0.22 ) }
    dend_38 { pt3dadd( 49.4933, 24.4461, 11.413, 0.22 ) }
    dend_38 { pt3dadd( 56.2546, 28.5503, 12.049, 0.22 ) }
    dend_38 { pt3dadd( 63.0437, 32.5167, 13.0714, 0.22 ) }
    dend_38 { pt3dadd( 69.8353, 36.1964, 14.8077, 0.22 ) }
    dend_38 { pt3dadd( 77.2944, 38.7134, 15.0549, 0.22 ) }
    dend_38 { pt3dadd( 85.0041, 40.0765, 15.6606, 0.22 ) }
    dend_38 { pt3dadd( 92.7858, 39.79, 14.6939, 0.22 ) }
    dend_38 { pt3dadd( 100.629, 39.9472, 14.7365, 0.22 ) }
    dend_38 { pt3dadd( 108.35, 40.6259, 15.9567, 0.22 ) }
    dend_38 { pt3dadd( 115.955, 42.6011, 16.2705, 0.22 ) }
    dend_38 { pt3dadd( 123.227, 45.5327, 17.1357, 0.22 ) }
    dend_38 { pt3dadd( 130.375, 48.4673, 18.7288, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 23/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 9.9828, -5.99054, 10.2844, 1.18 ) }
    dend_31 { pt3dadd( 9.80215, -7.92131, 10.7784, 1.18 ) }
    dend_31 { pt3dadd( 9.77084, -9.03404, 10.9271, 1.03 ) }
    dend_31 { pt3dadd( 9.77487, -9.83173, 10.9836, 0.81 ) }
    dend_31 { pt3dadd( 9.87998, -11.1352, 11.0502, 0.81 ) }
    dend_31 { pt3dadd( 10.0386, -12.3778, 11.1728, 0.74 ) }
    dend_31 { pt3dadd( 10.2976, -14.0708, 11.3868, 0.96 ) }
    dend_31 { pt3dadd( 10.511, -15.0216, 11.4413, 0.96 ) }
    dend_31 { pt3dadd( 10.5266, -15.0745, 11.4445, 0.96 ) }
    dend_31 { pt3dadd( 10.9822, -16.3052, 11.6293, 0.96 ) }
    dend_31 { pt3dadd( 11.5543, -17.5626, 11.8653, 1.69 ) }
    dend_31 { pt3dadd( 11.5818, -17.6174, 11.8832, 1.69 ) }
    dend_31 { pt3dadd( 11.956, -18.417, 12.2847, 1.62 ) }
    dend_31 { pt3dadd( 12.2832, -19.2616, 12.7323, 1.62 ) }
    dend_31 { pt3dadd( 12.6548, -20.3416, 13.2624, 1.99 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.19241, 27.8307, 7.84512, 1.33 ) }
    dend_23 { pt3dadd( -2.32533, 28.5865, 7.41592, 1.33 ) }
    dend_23 { pt3dadd( -2.45741, 29.2562, 6.99905, 0.96 ) }
    dend_23 { pt3dadd( -2.65207, 30.1069, 6.46516, 0.88 ) }
    dend_23 { pt3dadd( -2.95353, 31.4376, 5.67943, 1.18 ) }
    dend_23 { pt3dadd( -3.03268, 31.8406, 5.46297, 1.18 ) }
    dend_23 { pt3dadd( -3.08634, 32.1668, 5.30172, 1.18 ) }
    dend_23 { pt3dadd( -3.17608, 32.9431, 4.9567, 0.96 ) }
    dend_23 { pt3dadd( -3.23128, 33.6038, 4.69515, 0.96 ) }
    dend_23 { pt3dadd( -3.26207, 34.4449, 4.44093, 0.74 ) }
    dend_23 { pt3dadd( -3.26722, 35.2521, 4.26819, 1.25 ) }
    dend_23 { pt3dadd( -3.25849, 35.8026, 4.15651, 1.69 ) }
    dend_23 { pt3dadd( -3.23359, 36.2831, 4.07185, 1.92 ) }
    dend_23 { pt3dadd( -3.17552, 36.9483, 3.99339, 2.06 ) }
    dend_23 { pt3dadd( -3.09189, 37.6105, 3.918, 2.06 ) }
    dend_23 { pt3dadd( -3.00326, 38.3552, 3.82382, 1.99 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 54/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.19241, 27.8307, 7.84512, 0.81 ) }
    dend_22 { pt3dadd( -3.29526, 27.7971, 8.43474, 0.81 ) }
    dend_22 { pt3dadd( -4.31553, 27.9051, 8.96267, 0.66 ) }
    dend_22 { pt3dadd( -4.36731, 27.919, 8.98866, 0.66 ) }
    dend_22 { pt3dadd( -4.97486, 28.1527, 9.28443, 0.66 ) }
    dend_22 { pt3dadd( -5.41144, 28.3957, 9.48833, 0.88 ) }
    dend_22 { pt3dadd( -5.50558, 28.4699, 9.53761, 0.88 ) }
    dend_22 { pt3dadd( -5.77882, 28.8907, 9.69339, 1.03 ) }
    dend_22 { pt3dadd( -5.94932, 29.2501, 9.7834, 1.03 ) }
    dend_22 { pt3dadd( -5.97742, 29.3133, 9.79723, 1.03 ) }
    dend_22 { pt3dadd( -6.15982, 29.8115, 9.89629, 0.74 ) }
    dend_22 { pt3dadd( -6.42641, 30.6378, 10.0609, 0.74 ) }
    dend_22 { pt3dadd( -6.58389, 31.2113, 10.1695, 0.74 ) }
    dend_22 { pt3dadd( -6.73685, 31.9155, 10.289, 0.88 ) }
    dend_22 { pt3dadd( -6.83757, 32.5045, 10.3864, 1.18 ) }
    dend_22 { pt3dadd( -6.96184, 33.2955, 10.5031, 0.88 ) }
    dend_22 { pt3dadd( -7.05732, 33.8703, 10.578, 0.88 ) }
    dend_22 { pt3dadd( -7.13468, 34.3592, 10.6275, 1.03 ) }
    dend_22 { pt3dadd( -7.26086, 35.1863, 10.7484, 0.88 ) }
    dend_22 { pt3dadd( -7.3548, 35.8023, 10.8598, 0.88 ) }
    dend_22 { pt3dadd( -7.51783, 36.8439, 11.1204, 0.88 ) }
    dend_22 { pt3dadd( -7.64044, 37.4418, 11.3678, 1.11 ) }
    dend_22 { pt3dadd( -7.77759, 37.9174, 11.653, 1.33 ) }
    dend_22 { pt3dadd( -8.05207, 38.6228, 12.2477, 1.25 ) }
    dend_22 { pt3dadd( -8.27826, 38.9467, 12.7367, 1.11 ) }
    dend_22 { pt3dadd( -8.66145, 39.2371, 13.5689, 1.03 ) }
    dend_22 { pt3dadd( -9.438, 39.4244, 15.0886, 0.88 ) }
    dend_22 { pt3dadd( -9.85241, 39.457, 15.7652, 0.74 ) }
    dend_22 { pt3dadd( -9.90323, 39.4579, 15.8322, 0.74 ) }
    dend_22 { pt3dadd( -10.8183, 39.4459, 16.7913, 1.03 ) }
    dend_22 { pt3dadd( -10.8577, 39.4479, 16.8235, 1.03 ) }
    dend_22 { pt3dadd( -11.9659, 39.6158, 17.5059, 0.66 ) }
    dend_22 { pt3dadd( -13.0038, 39.9214, 18.0017, 0.59 ) }
    dend_22 { pt3dadd( -13.5695, 40.1582, 18.2507, 0.44 ) }
    dend_22 { pt3dadd( -14.0425, 40.4113, 18.4315, 0.37 ) }
    dend_22 { pt3dadd( -15.0022, 41.0108, 18.7132, 0.37 ) }
    dend_22 { pt3dadd( -15.286, 41.2, 18.7791, 0.74 ) }
    dend_22 { pt3dadd( -15.581, 41.4322, 18.8012, 1.18 ) }
    dend_22 { pt3dadd( -15.9937, 41.8164, 18.7747, 1.03 ) }
    dend_22 { pt3dadd( -16.3411, 42.2442, 18.7488, 0.74 ) }
    dend_22 { pt3dadd( -22.8877, 47.3925, 21.018, 0.74 ) }
    dend_22 { pt3dadd( -29.5445, 52.7256, 22.4075, 0.74 ) }
    dend_22 { pt3dadd( -36.6551, 57.3215, 23.9332, 0.74 ) }
    dend_22 { pt3dadd( -43.9799, 61.4642, 25.6163, 0.74 ) }
    dend_22 { pt3dadd( -52.0923, 63.8219, 26.721, 0.74 ) }
    dend_22 { pt3dadd( -59.8896, 67.3431, 26.6279, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_22 { pt3dadd( -67.8862, 70.2119, 27.4366, 0.74 ) }
    dend_22 { pt3dadd( -76.1833, 71.7078, 28.5399, 0.74 ) }
    dend_22 { pt3dadd( -84.4618, 73.5634, 29.1914, 0.74 ) }
    dend_22 { pt3dadd( -92.4402, 76.5652, 29.6755, 0.74 ) }
    dend_22 { pt3dadd( -100.315, 79.7511, 30.594, 0.74 ) }
    dend_22 { pt3dadd( -107.903, 83.678, 29.8982, 0.74 ) }
    dend_22 { pt3dadd( -115.604, 87.3137, 29.0375, 0.74 ) }
    dend_22 { pt3dadd( -123.293, 90.7776, 27.6026, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 8/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.736849, -22.2501, 2.22137, 2.14 ) }
    dend_2 { pt3dadd( -1.16488, -23.1512, 2.28649, 2.14 ) }
    dend_2 { pt3dadd( -1.504, -23.8651, 2.33808, 2.14 ) }
    dend_2 { pt3dadd( -1.5279, -23.9155, 2.34172, 2.14 ) }
    dend_2 { pt3dadd( -1.89974, -24.6983, 2.39829, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 13/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.736849, -22.2501, 2.22137, 1.03 ) }
    dend_1 { pt3dadd( -3.20024, -21.6907, 3.87558, 1.03 ) }
    dend_1 { pt3dadd( -3.86772, -21.5549, 4.24865, 1.03 ) }
    dend_1 { pt3dadd( -3.97133, -21.5444, 4.3094, 1.03 ) }
    dend_1 { pt3dadd( -4.71729, -21.5486, 4.78487, 1.03 ) }
    dend_1 { pt3dadd( -5.22714, -21.5977, 5.12852, 1.18 ) }
    dend_1 { pt3dadd( -5.91395, -21.7361, 5.61474, 1.18 ) }
    dend_1 { pt3dadd( -7.12222, -22.395, 6.57188, 1.11 ) }
    dend_1 { pt3dadd( -7.97608, -23.1985, 7.40714, 1.11 ) }
    dend_1 { pt3dadd( -8.42636, -23.8573, 7.9791, 1.33 ) }
    dend_1 { pt3dadd( -8.59685, -24.2296, 8.25521, 1.62 ) }
    dend_1 { pt3dadd( -8.85192, -25.0076, 8.74798, 1.62 ) }
    dend_1 { pt3dadd( -9.1546, -26.2778, 9.46981, 1.69 ) }
    dend_1 { pt3dadd( -9.30292, -26.9614, 9.80654, 1.47 ) }
    dend_1 { pt3dadd( -9.64095, -28.1656, 10.3381, 1.33 ) }
    dend_1 { pt3dadd( -9.8945, -28.8159, 10.6298, 1.18 ) }
    dend_1 { pt3dadd( -10.2635, -29.5968, 10.9899, 0.88 ) }
    dend_1 { pt3dadd( -11.057, -30.9374, 11.6126, 0.74 ) }
    dend_1 { pt3dadd( -11.633, -31.7333, 11.9439, 1.55 ) }
    dend_1 { pt3dadd( -12.2234, -32.4319, 12.2179, 1.92 ) }
    dend_1 { pt3dadd( -13.3108, -33.546, 12.5926, 1.92 ) }
    dend_1 { pt3dadd( -13.3556, -33.5865, 12.6042, 1.92 ) }
    dend_1 { pt3dadd( -14.2153, -34.2554, 12.7873, 1.62 ) }
    dend_1 { pt3dadd( -15.3559, -35.0376, 12.9563, 1.18 ) }
    dend_1 { pt3dadd( -16.0664, -35.477, 13.0914, 1.47 ) }
    dend_1 { pt3dadd( -16.6839, -35.8017, 13.2121, 1.47 ) }
    dend_1 { pt3dadd( -17.9031, -36.4086, 13.4242, 0.88 ) }
    dend_1 { pt3dadd( -19.0176, -36.9912, 13.6773, 1.18 ) }
    dend_1 { pt3dadd( -19.6222, -37.3146, 13.846, 1.55 ) }
    dend_1 { pt3dadd( -20.9124, -38.093, 14.2795, 1.4 ) }
    dend_1 { pt3dadd( -21.8987, -38.8104, 14.6664, 2.21 ) }
    dend_1 { pt3dadd( -23.0839, -39.9305, 15.2133, 1.18 ) }
    dend_1 { pt3dadd( -24.0186, -41.1584, 15.7291, 0.96 ) }
    dend_1 { pt3dadd( -24.0474, -41.2226, 15.7485, 0.96 ) }
    dend_1 { pt3dadd( -24.3195, -42.3889, 16.0687, 0.74 ) }
    dend_1 { pt3dadd( -24.4146, -43.5468, 16.3317, 0.66 ) }
    dend_1 { pt3dadd( -24.4302, -44.4102, 16.578, 0.74 ) }
    dend_1 { pt3dadd( -24.4296, -44.4898, 16.6046, 0.74 ) }
    dend_1 { pt3dadd( -24.4851, -45.3813, 16.9441, 0.66 ) }
    dend_1 { pt3dadd( -24.674, -46.6186, 17.5007, 1.4 ) }
    dend_1 { pt3dadd( -24.8278, -47.1845, 17.786, 1.33 ) }
    dend_1 { pt3dadd( -25.3647, -48.6945, 18.5552, 0.74 ) }
    dend_1 { pt3dadd( -25.3889, -48.7563, 18.5865, 0.74 ) }
    dend_1 { pt3dadd( -25.8513, -49.9868, 19.1685, 0.88 ) }
    dend_1 { pt3dadd( -25.8759, -50.0606, 19.1986, 0.88 ) }
    dend_1 { pt3dadd( -26.0815, -51.0391, 19.4779, 0.88 ) }
    dend_1 { pt3dadd( -26.1664, -51.7024, 19.622, 1.11 ) }
    dend_1 { pt3dadd( -26.1699, -51.7863, 19.6299, 1.11 ) }
    dend_1 { pt3dadd( -26.1673, -52.5034, 19.6595, 1.11 ) }
    dend_1 { pt3dadd( -26.1187, -53.5899, 19.5879, 0.81 ) }
    dend_1 { pt3dadd( -26.1099, -54.7676, 19.5494, 0.96 ) }
    dend_1 { pt3dadd( -26.111, -54.8414, 19.5483, 0.96 ) }
    dend_1 { pt3dadd( -26.207, -55.8582, 19.5414, 1.18 ) }
    dend_1 { pt3dadd( -26.3846, -56.8425, 19.5403, 0.81 ) }
    dend_1 { pt3dadd( -26.7924, -58.2014, 19.6045, 0.59 ) }
    dend_1 { pt3dadd( -27.5435, -59.8974, 19.7541, 0.59 ) }
    dend_1 { pt3dadd( -27.575, -59.9509, 19.7604, 0.59 ) }
    dend_1 { pt3dadd( -28.2567, -60.8952, 19.9737, 0.66 ) }
    dend_1 { pt3dadd( -28.8333, -61.5742, 20.192, 1.11 ) }
    dend_1 { pt3dadd( -29.6968, -62.5149, 20.5338, 1.33 ) }
    dend_1 { pt3dadd( -30.1594, -63.0417, 20.7252, 0.88 ) }
    dend_1 { pt3dadd( -30.7133, -63.7358, 20.9273, 0.88 ) }
    dend_1 { pt3dadd( -31.5823, -64.9504, 21.2823, 1.18 ) }
    dend_1 { pt3dadd( -32.0925, -65.8316, 21.5589, 0.52 ) }
    dend_1 { pt3dadd( -32.4837, -66.739, 21.8426, 0.52 ) }
    dend_1 { pt3dadd( -32.7085, -67.8974, 22.1612, 0.52 ) }
    dend_1 { pt3dadd( -32.7007, -68.0119, 22.192, 0.52 ) }
    dend_1 { pt3dadd( -32.5148, -68.6028, 22.3372, 0.52 ) }
    dend_1 { pt3dadd( -32.0068, -69.6485, 22.5238, 0.52 ) }
    dend_1 { pt3dadd( -31.6094, -70.3038, 22.6654, 0.52 ) }
    dend_1 { pt3dadd( -31.4038, -70.6708, 22.7443, 0.52 ) }
    dend_1 { pt3dadd( -31.2466, -71.4426, 22.8537, 0.52 ) }
    dend_1 { pt3dadd( -31.3657, -71.8175, 22.8605, 1.25 ) }
    dend_1 { pt3dadd( -31.6788, -72.3544, 22.8356, 1.25 ) }
    dend_1 { pt3dadd( -31.9414, -72.7425, 22.8045, 1.25 ) }
    dend_1 { pt3dadd( -32.6161, -73.718, 22.7214, 0.59 ) }
    dend_1 { pt3dadd( -33.064, -74.3526, 22.6643, 0.88 ) }
    dend_1 { pt3dadd( -33.3153, -74.7033, 22.631, 0.88 ) }
    dend_1 { pt3dadd( -33.8717, -75.4676, 22.5548, 0.52 ) }
    dend_1 { pt3dadd( -34.4501, -76.2739, 22.4756, 0.52 ) }
    dend_1 { pt3dadd( -35.0395, -77.0958, 22.4145, 0.52 ) }
    dend_1 { pt3dadd( -35.4839, -77.6971, 22.3906, 0.52 ) }
    dend_1 { pt3dadd( -36.1247, -78.5641, 22.3785, 1.99 ) }
    dend_1 { pt3dadd( -36.525, -79.0851, 22.3806, 2.65 ) }
    dend_1 { pt3dadd( -36.7959, -79.419, 22.3865, 2.65 ) }
    dend_1 { pt3dadd( -37.9055, -80.7273, 22.4181, 0.44 ) }
    dend_1 { pt3dadd( -38.5356, -81.4597, 22.4379, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_1 { pt3dadd( -39.0177, -82.0364, 22.4604, 0.29 ) }
    dend_1 { pt3dadd( -39.063, -82.0927, 22.4632, 0.29 ) }
    dend_1 { pt3dadd( -39.797, -83.041, 22.5101, 0.29 ) }
    dend_1 { pt3dadd( -40.291, -83.6975, 22.5315, 1.47 ) }
    dend_1 { pt3dadd( -40.6223, -84.1895, 22.515, 1.99 ) }
    dend_1 { pt3dadd( -46.9996, -91.5115, 25.9041, 1.99 ) }
    dend_1 { pt3dadd( -52.629, -98.5531, 30.8172, 1.99 ) }
    dend_1 { pt3dadd( -58.4352, -105.734, 35.3245, 1.99 ) }
    dend_1 { pt3dadd( -63.9973, -112.136, 41.0433, 1.99 ) }
    dend_1 { pt3dadd( -69.6289, -118.999, 46.1785, 1.99 ) }
    dend_1 { pt3dadd( -75.8903, -126.145, 50.0846, 1.99 ) }
    dend_1 { pt3dadd( -83.0405, -132.965, 52.8158, 1.99 ) }
    dend_1 { pt3dadd( -91.1236, -138.946, 54.5463, 1.99 ) }
    dend_1 { pt3dadd( -99.7736, -143.534, 57.1682, 1.99 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 14/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.49629, -42.1525, -0.95489, 0.44 ) }
    axon_1 { pt3dadd( 4.62857, -57.1097, -0.95489, 0.44 ) }
    axon_1 { pt3dadd( 5.76086, -72.0669, -0.95489, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 17/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 6.4088, -18.6019, -22.1552, 0.81 ) }
    dend_51 { pt3dadd( 7.45541, -18.4561, -22.6808, 0.81 ) }
    dend_51 { pt3dadd( 7.96311, -18.3696, -22.9601, 0.59 ) }
    dend_51 { pt3dadd( 8.00584, -18.3608, -22.9891, 0.59 ) }
    dend_51 { pt3dadd( 9.1224, -18.1325, -23.7483, 0.81 ) }
    dend_51 { pt3dadd( 10.3801, -17.8754, -24.6034, 1.03 ) }
    dend_51 { pt3dadd( 10.6837, -17.8133, -24.8098, 1.25 ) }
    dend_51 { pt3dadd( 11.6457, -17.4861, -25.5324, 1.99 ) }
    dend_51 { pt3dadd( 12.5056, -17.1419, -26.216, 1.92 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 6.4088, -18.6019, -22.1552, 0.88 ) }
    dend_48 { pt3dadd( 5.12149, -19.5096, -22.7913, 0.88 ) }
    dend_48 { pt3dadd( 4.43823, -20.1488, -23.3033, 0.52 ) }
    dend_48 { pt3dadd( 3.9876, -20.8411, -23.9002, 0.52 ) }
    dend_48 { pt3dadd( 3.9702, -20.8956, -23.945, 0.52 ) }
    dend_48 { pt3dadd( 3.82169, -21.7839, -24.5794, 0.66 ) }
    dend_48 { pt3dadd( 3.81476, -21.8455, -24.6179, 0.66 ) }
    dend_48 { pt3dadd( 3.90014, -23.0404, -25.2494, 0.59 ) }
    dend_48 { pt3dadd( 3.98376, -23.817, -25.5886, 0.44 ) }
    dend_48 { pt3dadd( 4.04322, -24.5425, -25.8542, 0.44 ) }
    dend_48 { pt3dadd( 4.04312, -25.5707, -26.1608, 1.4 ) }
    dend_48 { pt3dadd( 3.9867, -26.291, -26.3445, 2.14 ) }
    dend_48 { pt3dadd( 3.82644, -27.406, -26.615, 2.8 ) }
    dend_48 { pt3dadd( 3.72112, -27.8539, -26.7112, 2.87 ) }
    dend_48 { pt3dadd( 3.48064, -28.7553, -26.8504, 2.65 ) }
    dend_48 { pt3dadd( 3.27899, -29.4987, -26.938, 1.99 ) }
    dend_48 { pt3dadd( 3.05028, -30.4952, -26.9775, 1.03 ) }
    dend_48 { pt3dadd( 3.03643, -30.5674, -26.9747, 1.03 ) }
    dend_48 { pt3dadd( 2.90337, -31.742, -26.7547, 0.59 ) }
    dend_48 { pt3dadd( 2.82301, -33.4015, -26.2766, 0.59 ) }
    dend_48 { pt3dadd( 2.82289, -33.4526, -26.2576, 0.59 ) }
    dend_48 { pt3dadd( 2.83944, -34.5152, -25.8075, 0.59 ) }
    dend_48 { pt3dadd( 2.84, -34.6144, -25.7628, 0.59 ) }
    dend_48 { pt3dadd( 2.81441, -35.8607, -25.2562, 0.52 ) }
    dend_48 { pt3dadd( 2.74761, -36.6835, -24.9465, 1.25 ) }
    dend_48 { pt3dadd( 2.66946, -37.1385, -24.8149, 1.84 ) }
    dend_48 { pt3dadd( 2.52287, -37.7131, -24.6796, 1.99 ) }
    dend_48 { pt3dadd( 2.34753, -38.2108, -24.6023, 2.14 ) }
    dend_48 { pt3dadd( 2.11361, -38.7563, -24.483, 2.14 ) }
    dend_48 { pt3dadd( 1.48031, -39.9256, -24.1775, 1.11 ) }
    dend_48 { pt3dadd( 1.44452, -39.9864, -24.1571, 1.11 ) }
    dend_48 { pt3dadd( 1.10618, -40.5574, -23.9431, 0.66 ) }
    dend_48 { pt3dadd( 0.619351, -41.3558, -23.6214, 0.59 ) }
    dend_48 { pt3dadd( -0.284674, -42.7884, -23.0081, 1.47 ) }
    dend_48 { pt3dadd( -0.901873, -43.7338, -22.5876, 2.36 ) }
    dend_48 { pt3dadd( -1.35621, -44.4122, -22.2931, 2.87 ) }
    dend_48 { pt3dadd( -2.01366, -45.4023, -21.8418, 3.02 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.6548, -20.3416, 13.2624, 0.66 ) }
    dend_33 { pt3dadd( 12.1632, -22.1567, 13.7265, 0.66 ) }
    dend_33 { pt3dadd( 12.1546, -22.2189, 13.7499, 0.66 ) }
    dend_33 { pt3dadd( 12.1317, -23.4953, 14.3087, 0.88 ) }
    dend_33 { pt3dadd( 12.2027, -24.245, 14.6628, 1.11 ) }
    dend_33 { pt3dadd( 12.2135, -24.304, 14.6927, 1.11 ) }
    dend_33 { pt3dadd( 12.7819, -26.4027, 15.8641, 0.74 ) }
    dend_33 { pt3dadd( 13.1468, -27.2746, 16.4908, 0.88 ) }
    dend_33 { pt3dadd( 13.9535, -28.5139, 17.5073, 0.59 ) }
    dend_33 { pt3dadd( 14.5879, -29.144, 18.1276, 0.52 ) }
    dend_33 { pt3dadd( 15.0447, -29.4475, 18.5137, 0.81 ) }
    dend_33 { pt3dadd( 15.7397, -29.7582, 19.0371, 0.81 ) }
    dend_33 { pt3dadd( 15.8496, -29.7737, 19.1054, 0.81 ) }
    dend_33 { pt3dadd( 17.0069, -29.807, 19.8251, 0.66 ) }
    dend_33 { pt3dadd( 17.0636, -29.8086, 19.857, 0.66 ) }
    dend_33 { pt3dadd( 18.2059, -30.0194, 20.4595, 0.52 ) }
    dend_33 { pt3dadd( 18.2609, -30.0421, 20.4871, 0.52 ) }
    dend_33 { pt3dadd( 19.1717, -30.6103, 20.9156, 0.74 ) }
    dend_33 { pt3dadd( 19.9324, -31.1326, 21.2603, 0.74 ) }
    dend_33 { pt3dadd( 20.9957, -31.991, 21.7214, 0.66 ) }
    dend_33 { pt3dadd( 21.6639, -32.5718, 21.9788, 0.66 ) }
    dend_33 { pt3dadd( 22.6983, -33.599, 22.2906, 0.52 ) }
    dend_33 { pt3dadd( 23.2246, -34.178, 22.4439, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.6548, -20.3416, 13.2624, 0.66 ) }
    dend_32 { pt3dadd( 14.4137, -20.9629, 12.9771, 0.66 ) }
    dend_32 { pt3dadd( 15.3038, -21.1647, 12.7759, 0.66 ) }
    dend_32 { pt3dadd( 16.6252, -21.3356, 12.4441, 0.59 ) }
    dend_32 { pt3dadd( 16.6905, -21.3395, 12.4326, 0.59 ) }
    dend_32 { pt3dadd( 17.6461, -21.3748, 12.3338, 0.81 ) }
    dend_32 { pt3dadd( 18.4169, -21.3944, 12.2852, 0.66 ) }
    dend_32 { pt3dadd( 19.3956, -21.3892, 12.3263, 0.59 ) }
    dend_32 { pt3dadd( 19.8905, -21.4165, 12.4357, 0.59 ) }
    dend_32 { pt3dadd( 21.2524, -21.556, 12.9173, 0.59 ) }
    dend_32 { pt3dadd( 22.2094, -21.7416, 13.3084, 0.59 ) }
    dend_32 { pt3dadd( 22.2694, -21.7582, 13.3322, 0.59 ) }
    dend_32 { pt3dadd( 23.893, -22.3192, 13.9255, 0.59 ) }
    dend_32 { pt3dadd( 25.3185, -22.822, 14.4037, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( 25.7714, -22.9623, 14.5268, 1.4 ) }
    dend_32 { pt3dadd( 27.0113, -23.1961, 14.7545, 0.81 ) }
    dend_32 { pt3dadd( 28.553, -23.2656, 14.9545, 0.74 ) }
    dend_32 { pt3dadd( 28.8204, -23.2444, 14.9762, 1.25 ) }
    dend_32 { pt3dadd( 29.8477, -23.0056, 14.9958, 0.81 ) }
    dend_32 { pt3dadd( 30.6687, -22.7745, 14.9885, 0.66 ) }
    dend_32 { pt3dadd( 32.2023, -22.3772, 14.992, 0.52 ) }
    dend_32 { pt3dadd( 32.9363, -22.2284, 14.9891, 0.81 ) }
    dend_32 { pt3dadd( 33.0602, -22.2117, 14.9848, 0.81 ) }
    dend_32 { pt3dadd( 34.1958, -22.1283, 14.9218, 1.11 ) }
    dend_32 { pt3dadd( 35.2133, -22.1756, 14.8279, 0.74 ) }
    dend_32 { pt3dadd( 36.4773, -22.3971, 14.6595, 0.37 ) }
    dend_32 { pt3dadd( 37.7216, -22.7964, 14.4239, 0.29 ) }
    dend_32 { pt3dadd( 38.5715, -23.1211, 14.2289, 0.29 ) }
    dend_32 { pt3dadd( 49.5727, -23.0215, 13.1127, 0.29 ) }
    dend_32 { pt3dadd( 60.3719, -20.9117, 14.1919, 0.29 ) }
    dend_32 { pt3dadd( 70.7856, -17.4073, 15.5962, 0.29 ) }
    dend_32 { pt3dadd( 80.1469, -12.3528, 18.8564, 0.29 ) }
    dend_32 { pt3dadd( 89.6261, -6.78265, 20.6576, 0.29 ) }
    dend_32 { pt3dadd( 99.4172, -1.73945, 22.1948, 0.29 ) }
    dend_32 { pt3dadd( 109.641, 2.56571, 22.2913, 0.29 ) }
    dend_32 { pt3dadd( 120.419, 4.99143, 22.7756, 0.29 ) }
    dend_32 { pt3dadd( 130.942, 8.3372, 21.9749, 0.29 ) }
    dend_32 { pt3dadd( 141.58, 10.0482, 19.5143, 0.29 ) }
    dend_32 { pt3dadd( 152.014, 13.6944, 18.7872, 0.29 ) }
    dend_32 { pt3dadd( 162.073, 18.3757, 18.3573, 0.29 ) }
    dend_32 { pt3dadd( 172.237, 22.8292, 18.492, 0.29 ) }
    dend_32 { pt3dadd( 182.616, 26.1787, 16.6004, 0.29 ) }
    dend_32 { pt3dadd( 193.016, 28.8235, 13.9284, 0.29 ) }
    dend_32 { pt3dadd( 203.671, 31.3629, 12.4039, 0.29 ) }
    dend_32 { pt3dadd( 214.211, 34.7026, 11.8518, 0.29 ) }
    dend_32 { pt3dadd( 224.045, 39.8966, 11.797, 0.29 ) }
    dend_32 { pt3dadd( 233.499, 45.7822, 11.3234, 0.29 ) }
    dend_32 { pt3dadd( 243.281, 50.8698, 9.92944, 0.29 ) }
    dend_32 { pt3dadd( 252.146, 57.4544, 8.2184, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -3.00326, 38.3552, 3.82382, 0.59 ) }
    dend_25 { pt3dadd( -4.50271, 39.6931, 5.32232, 0.59 ) }
    dend_25 { pt3dadd( -5.36967, 40.5756, 6.40904, 0.44 ) }
    dend_25 { pt3dadd( -6.28469, 41.7085, 7.84647, 0.96 ) }
    dend_25 { pt3dadd( -6.64472, 42.2822, 8.54402, 1.11 ) }
    dend_25 { pt3dadd( -7.00195, 43.069, 9.45507, 0.81 ) }
    dend_25 { pt3dadd( -7.17829, 43.606, 10.027, 0.59 ) }
    dend_25 { pt3dadd( -7.48995, 45.445, 11.6733, 0.59 ) }
    dend_25 { pt3dadd( -7.46864, 46.2484, 12.2889, 0.96 ) }
    dend_25 { pt3dadd( -7.33906, 47.1016, 12.7898, 1.18 ) }
    dend_25 { pt3dadd( -7.07875, 48.2123, 13.419, 0.59 ) }
    dend_25 { pt3dadd( -6.82949, 49.041, 13.8622, 0.44 ) }
    dend_25 { pt3dadd( -6.49045, 50.137, 14.3622, 1.33 ) }
    dend_25 { pt3dadd( -6.35255, 50.7805, 14.5197, 1.92 ) }
    dend_25 { pt3dadd( -6.26126, 51.3543, 14.6215, 2.06 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.00326, 38.3552, 3.82382, 0.81 ) }
    dend_24 { pt3dadd( -6.64019, 39.6168, 2.09247, 0.81 ) }
    dend_24 { pt3dadd( -7.49327, 39.9064, 1.9251, 0.66 ) }
    dend_24 { pt3dadd( -8.2407, 40.1659, 1.95008, 0.88 ) }
    dend_24 { pt3dadd( -8.3231, 40.1969, 1.96454, 0.88 ) }
    dend_24 { pt3dadd( -9.13919, 40.5362, 2.22546, 0.88 ) }
    dend_24 { pt3dadd( -10.0411, 40.9559, 2.5899, 0.66 ) }
    dend_24 { pt3dadd( -10.7981, 41.4048, 3.1108, 0.66 ) }
    dend_24 { pt3dadd( -11.3393, 41.7838, 3.4516, 1.03 ) }
    dend_24 { pt3dadd( -11.9196, 42.2669, 3.7667, 1.25 ) }
    dend_24 { pt3dadd( -12.6867, 43.0249, 4.07196, 0.66 ) }
    dend_24 { pt3dadd( -13.3604, 43.837, 4.2255, 0.44 ) }
    dend_24 { pt3dadd( -14.1207, 44.8824, 4.22233, 0.96 ) }
    dend_24 { pt3dadd( -14.5604, 45.5333, 4.14944, 1.11 ) }
    dend_24 { pt3dadd( -14.9879, 46.152, 4.04791, 1.11 ) }
    dend_24 { pt3dadd( -15.6173, 47.0389, 3.90287, 0.96 ) }
    dend_24 { pt3dadd( -16.2373, 47.862, 3.79606, 0.59 ) }
    dend_24 { pt3dadd( -16.896, 48.6711, 3.76906, 0.59 ) }
    dend_24 { pt3dadd( -17.5288, 49.3782, 3.84353, 0.59 ) }
    dend_24 { pt3dadd( -18.4098, 50.3052, 4.09233, 1.18 ) }
    dend_24 { pt3dadd( -19.1048, 51.0275, 4.38491, 1.47 ) }
    dend_24 { pt3dadd( -19.9398, 51.9148, 4.83395, 1.25 ) }
    dend_24 { pt3dadd( -20.401, 52.4437, 5.1184, 1.77 ) }
    dend_24 { pt3dadd( -20.8723, 53.0457, 5.42389, 1.99 ) }
    dend_24 { pt3dadd( -21.4695, 53.9383, 5.79092, 1.62 ) }
    dend_24 { pt3dadd( -22.0109, 54.8993, 6.07472, 0.96 ) }
    dend_24 { pt3dadd( -22.2278, 55.3547, 6.1543, 0.59 ) }
    dend_24 { pt3dadd( -22.5323, 56.1863, 6.18243, 0.59 ) }
    dend_24 { pt3dadd( -22.832, 57.184, 6.11334, 0.96 ) }
    dend_24 { pt3dadd( -22.9805, 57.7598, 6.02495, 1.11 ) }
    dend_24 { pt3dadd( -23.1095, 58.2358, 5.91159, 1.11 ) }
    dend_24 { pt3dadd( -23.3207, 58.9244, 5.71314, 0.66 ) }
    dend_24 { pt3dadd( -23.7765, 60.3382, 5.29477, 0.59 ) }
    dend_24 { pt3dadd( -23.8046, 60.4225, 5.27178, 0.59 ) }
    dend_24 { pt3dadd( -24.0357, 61.1216, 5.12481, 0.59 ) }
    dend_24 { pt3dadd( -24.4409, 62.364, 4.89893, 0.52 ) }
    dend_24 { pt3dadd( -24.749, 63.4034, 4.81141, 0.44 ) }
    dend_24 { pt3dadd( -24.9585, 64.2152, 4.83313, 0.44 ) }
    dend_24 { pt3dadd( -25.2187, 65.4106, 4.96963, 1.62 ) }
    dend_24 { pt3dadd( -25.361, 66.1305, 5.05471, 1.99 ) }
    dend_24 { pt3dadd( -25.493, 66.8745, 5.15025, 1.84 ) }
    dend_24 { pt3dadd( -25.7753, 68.5367, 5.35344, 1.03 ) }
    dend_24 { pt3dadd( -26.098, 70.331, 5.54732, 0.44 ) }
    dend_24 { pt3dadd( -26.3325, 71.5098, 5.63278, 0.44 ) }
    dend_24 { pt3dadd( -26.6111, 72.8084, 5.65029, 0.44 ) }
    dend_24 { pt3dadd( -26.8435, 73.8429, 5.58723, 1.25 ) }
    dend_24 { pt3dadd( -27.0619, 74.815, 5.4698, 1.84 ) }
    dend_24 { pt3dadd( -27.1465, 75.2143, 5.39475, 2.06 ) }
    dend_24 { pt3dadd( -27.2558, 75.7777, 5.2673, 1.69 ) }
    dend_24 { pt3dadd( -27.454, 76.8833, 5.00105, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_24 { pt3dadd( -27.661, 78.1971, 4.66516, 0.66 ) }
    dend_24 { pt3dadd( -27.8397, 79.4048, 4.33318, 1.84 ) }
    dend_24 { pt3dadd( -27.9565, 80.2593, 4.10626, 2.14 ) }
    dend_24 { pt3dadd( -28.1186, 81.3663, 3.80233, 1.77 ) }
    dend_24 { pt3dadd( -28.1306, 81.4432, 3.78156, 1.77 ) }
    dend_24 { pt3dadd( -28.3298, 82.7011, 3.45561, 0.59 ) }
    dend_24 { pt3dadd( -28.4367, 83.2807, 3.2945, 0.37 ) }
    dend_24 { pt3dadd( -28.629, 84.2375, 3.02543, 0.37 ) }
    dend_24 { pt3dadd( -28.864, 85.4188, 2.72552, 0.29 ) }
    dend_24 { pt3dadd( -29.0109, 86.2515, 2.55287, 0.81 ) }
    dend_24 { pt3dadd( -29.0796, 86.6543, 2.47846, 1.03 ) }
    dend_24 { pt3dadd( -29.2726, 87.7201, 2.28723, 0.96 ) }
    dend_24 { pt3dadd( -29.3799, 88.3143, 2.17314, 0.66 ) }
    dend_24 { pt3dadd( -29.5398, 89.2057, 1.99884, 0.44 ) }
    dend_24 { pt3dadd( -29.6799, 90.0201, 1.83785, 0.44 ) }
    dend_24 { pt3dadd( -29.8098, 90.8364, 1.68038, 0.44 ) }
    dend_24 { pt3dadd( -29.959, 91.8561, 1.50038, 0.29 ) }
    dend_24 { pt3dadd( -30.019, 92.343, 1.42556, 0.81 ) }
    dend_24 { pt3dadd( -30.0581, 92.7667, 1.38544, 0.96 ) }
    dend_24 { pt3dadd( -30.1808, 94.369, 1.31974, 0.29 ) }
    dend_24 { pt3dadd( -30.2489, 95.4647, 1.32899, 1.11 ) }
    dend_24 { pt3dadd( -30.2717, 95.8795, 1.35019, 1.77 ) }
    dend_24 { pt3dadd( -30.3008, 96.3968, 1.3986, 1.77 ) }
    dend_24 { pt3dadd( -30.5128, 98.6398, 1.66604, 0.29 ) }
    dend_24 { pt3dadd( -30.6053, 99.4, 1.77104, 0.29 ) }
    dend_24 { pt3dadd( -30.8048, 100.811, 1.99335, 2.06 ) }
    dend_24 { pt3dadd( -30.9067, 101.434, 2.08672, 2.43 ) }
    dend_24 { pt3dadd( -31.0258, 102.092, 2.17598, 2.5 ) }
    dend_24 { pt3dadd( -31.44, 104.078, 2.40513, 0.52 ) }
    dend_24 { pt3dadd( -31.6626, 104.982, 2.4758, 0.37 ) }
    dend_24 { pt3dadd( -31.7865, 105.472, 2.51809, 1.11 ) }
    dend_24 { pt3dadd( -31.9428, 106.035, 2.58192, 1.25 ) }
    dend_24 { pt3dadd( -32.1102, 106.612, 2.65822, 0.74 ) }
    dend_24 { pt3dadd( -32.3141, 107.317, 2.76249, 0.29 ) }
    dend_24 { pt3dadd( -32.5484, 108.102, 2.89691, 0.29 ) }
    dend_24 { pt3dadd( -32.738, 108.713, 3.00998, 0.37 ) }
    dend_24 { pt3dadd( -33.0208, 109.698, 3.18081, 0.37 ) }
    dend_24 { pt3dadd( -33.1932, 110.383, 3.28223, 0.29 ) }
    dend_24 { pt3dadd( -33.3178, 110.968, 3.35179, 0.44 ) }
    dend_24 { pt3dadd( -33.3329, 111.058, 3.35985, 0.44 ) }
    dend_24 { pt3dadd( -33.4157, 111.641, 3.3766, 0.44 ) }
    dend_24 { pt3dadd( -33.544, 112.659, 3.36108, 0.29 ) }
    dend_24 { pt3dadd( -33.6851, 113.854, 3.30972, 1.47 ) }
    dend_24 { pt3dadd( -33.7407, 114.282, 3.29062, 1.92 ) }
    dend_24 { pt3dadd( -33.8003, 114.697, 3.27344, 1.92 ) }
    dend_24 { pt3dadd( -34.1347, 116.612, 3.21464, 0.29 ) }
    dend_24 { pt3dadd( -34.3418, 117.605, 3.19588, 0.66 ) }
    dend_24 { pt3dadd( -34.5063, 118.279, 3.1926, 1.11 ) }
    dend_24 { pt3dadd( -34.8334, 119.41, 3.18283, 1.11 ) }
    dend_24 { pt3dadd( -35.1017, 120.207, 3.18181, 0.44 ) }
    dend_24 { pt3dadd( -35.5824, 121.46, 3.19585, 0.29 ) }
    dend_24 { pt3dadd( -35.7062, 121.736, 3.20588, 0.44 ) }
    dend_24 { pt3dadd( -35.946, 122.209, 3.22693, 0.44 ) }
    dend_24 { pt3dadd( -36.6318, 123.42, 3.25957, 0.29 ) }
    dend_24 { pt3dadd( -37.1005, 124.188, 3.27286, 0.81 ) }
    dend_24 { pt3dadd( -37.3803, 124.643, 3.2765, 1.03 ) }
    dend_24 { pt3dadd( -37.649, 125.1, 3.27685, 0.96 ) }
    dend_24 { pt3dadd( -37.862, 125.482, 3.27801, 0.96 ) }
    dend_24 { pt3dadd( -38.5301, 126.81, 3.28312, 0.29 ) }
    dend_24 { pt3dadd( -38.9479, 127.728, 3.29637, 0.88 ) }
    dend_24 { pt3dadd( -39.0764, 128.067, 3.29151, 1.25 ) }
    dend_24 { pt3dadd( -39.25, 128.606, 3.27518, 1.25 ) }
    dend_24 { pt3dadd( -39.3901, 129.192, 3.24652, 0.88 ) }
    dend_24 { pt3dadd( -39.5991, 130.453, 3.17885, 0.29 ) }
    dend_24 { pt3dadd( -39.6077, 130.546, 3.17438, 0.29 ) }
    dend_24 { pt3dadd( -39.7077, 131.762, 3.16104, 0.29 ) }
    dend_24 { pt3dadd( -39.7155, 131.843, 3.163, 0.29 ) }
    dend_24 { pt3dadd( -39.798, 132.566, 3.2012, 0.29 ) }
    dend_24 { pt3dadd( -39.9707, 133.882, 3.30335, 1.84 ) }
    dend_24 { pt3dadd( -40.0778, 134.551, 3.37423, 2.14 ) }
    dend_24 { pt3dadd( -40.4474, 136.329, 3.60064, 0.37 ) }
    dend_24 { pt3dadd( -40.6379, 137.048, 3.71068, 0.37 ) }
    dend_24 { pt3dadd( -40.9934, 138.268, 3.93338, 0.29 ) }
    dend_24 { pt3dadd( -41.0171, 138.343, 3.94899, 0.29 ) }
    dend_24 { pt3dadd( -41.2641, 139.112, 4.11675, 0.29 ) }
    dend_24 { pt3dadd( -41.5701, 140.059, 4.3163, 0.29 ) }
    dend_24 { pt3dadd( -41.8362, 140.948, 4.47374, 0.22 ) }
    dend_24 { pt3dadd( -42.1582, 142.132, 4.67283, 0.88 ) }
    dend_24 { pt3dadd( -42.2868, 142.7, 4.75651, 1.18 ) }
    dend_24 { pt3dadd( -42.4126, 143.465, 4.8607, 0.96 ) }
    dend_24 { pt3dadd( -42.4933, 144.306, 4.9619, 0.52 ) }
    dend_24 { pt3dadd( -42.5504, 145.728, 5.10684, 0.29 ) }
    dend_24 { pt3dadd( -42.5514, 145.901, 5.12092, 0.29 ) }
    dend_24 { pt3dadd( -42.5614, 146.76, 5.17386, 0.29 ) }
    dend_24 { pt3dadd( -42.606, 147.403, 5.19316, 0.29 ) }
    dend_24 { pt3dadd( -42.6274, 147.563, 5.19405, 0.29 ) }
    dend_24 { pt3dadd( -42.833, 148.6, 5.18594, 0.29 ) }
    dend_24 { pt3dadd( -43.0169, 149.246, 5.16715, 0.59 ) }
    dend_24 { pt3dadd( -43.395, 150.279, 5.11866, 0.59 ) }
    dend_24 { pt3dadd( -44.1053, 151.825, 5.00208, 0.37 ) }
    dend_24 { pt3dadd( -44.5691, 152.691, 4.9228, 1.4 ) }
    dend_24 { pt3dadd( -44.8802, 153.152, 4.84921, 1.99 ) }
    dend_24 { pt3dadd( -45.4385, 153.816, 4.70497, 1.99 ) }
    dend_24 { pt3dadd( -46.4177, 154.795, 4.44935, 0.44 ) }
    dend_24 { pt3dadd( -47.1993, 155.454, 4.24577, 0.52 ) }
    dend_24 { pt3dadd( -47.9124, 155.958, 4.08378, 0.81 ) }
    dend_24 { pt3dadd( -49.7678, 157.114, 3.65529, 0.29 ) }
    dend_24 { pt3dadd( -50.3921, 157.478, 3.52608, 0.29 ) }
    dend_24 { pt3dadd( -50.4982, 157.536, 3.50435, 0.59 ) }
    dend_24 { pt3dadd( -50.5661, 157.571, 3.49104, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_24 { pt3dadd( -51.1415, 157.879, 3.38772, 0.59 ) }
    dend_24 { pt3dadd( -52.0963, 158.444, 3.22627, 0.29 ) }
    dend_24 { pt3dadd( -52.8451, 159.008, 3.18002, 1.25 ) }
    dend_24 { pt3dadd( -53.6064, 159.584, 3.0965, 1.69 ) }
    dend_24 { pt3dadd( -53.9787, 159.863, 3.04972, 1.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_2 (entry count 5/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.89974, -24.6983, 2.39829, 0.81 ) }
    dend_18 { pt3dadd( -2.57155, -24.3539, -3.41733, 0.81 ) }
    dend_18 { pt3dadd( -2.58637, -24.3523, -3.49689, 0.81 ) }
    dend_18 { pt3dadd( -3.31859, -24.5546, -6.56913, 0.81 ) }
    dend_18 { pt3dadd( -3.34006, -24.5658, -6.64644, 0.81 ) }
    dend_18 { pt3dadd( -3.80019, -25.0062, -8.29628, 0.88 ) }
    dend_18 { pt3dadd( -3.81887, -25.0423, -8.36715, 0.88 ) }
    dend_18 { pt3dadd( -3.89778, -26.7157, -8.53721, 0.66 ) }
    dend_18 { pt3dadd( -3.73775, -28.464, -8.55485, 0.88 ) }
    dend_18 { pt3dadd( -3.68462, -28.7956, -8.53965, 0.88 ) }
    dend_18 { pt3dadd( -2.89738, -31.7838, -8.33242, 0.88 ) }
    dend_18 { pt3dadd( -2.40097, -33.058, -8.21545, 1.18 ) }
    dend_18 { pt3dadd( -2.35789, -33.1459, -8.20768, 1.18 ) }
    dend_18 { pt3dadd( -1.38517, -34.6651, -8.02292, 1.4 ) }
    dend_18 { pt3dadd( -1.3285, -34.7443, -8.00895, 1.4 ) }
    dend_18 { pt3dadd( -0.47043, -35.992, -7.74539, 1.69 ) }
    dend_18 { pt3dadd( 0.201017, -37.0766, -7.4303, 1.55 ) }
    dend_18 { pt3dadd( 0.877224, -38.3638, -6.96527, 1.4 ) }
    dend_18 { pt3dadd( 1.65862, -40.2333, -6.16843, 1.03 ) }
    dend_18 { pt3dadd( 2.35358, -42.3268, -5.11893, 0.81 ) }
    dend_18 { pt3dadd( 2.90551, -44.2274, -4.09135, 1.03 ) }
    dend_18 { pt3dadd( 3.44557, -46.4245, -2.8161, 1.33 ) }
    dend_18 { pt3dadd( 3.84194, -48.2686, -1.69428, 1.18 ) }
    dend_18 { pt3dadd( 4.26447, -50.5452, -0.259992, 0.88 ) }
    dend_18 { pt3dadd( 4.60365, -52.4676, 0.947925, 1.18 ) }
    dend_18 { pt3dadd( 4.83582, -53.6398, 1.69961, 1.33 ) }
    dend_18 { pt3dadd( 4.85675, -53.7205, 1.75218, 1.33 ) }
    dend_18 { pt3dadd( 5.2808, -54.9592, 2.51566, 1.18 ) }
    dend_18 { pt3dadd( 5.31231, -55.0369, 2.56512, 1.18 ) }
    dend_18 { pt3dadd( 5.76342, -56.0552, 3.2823, 0.96 ) }
    dend_18 { pt3dadd( 5.8276, -56.2121, 3.40356, 0.96 ) }
    dend_18 { pt3dadd( 6.51941, -58.0101, 4.88452, 0.66 ) }
    dend_18 { pt3dadd( 6.59469, -58.2107, 5.03797, 0.66 ) }
    dend_18 { pt3dadd( 7.20361, -59.8936, 6.16775, 0.88 ) }
    dend_18 { pt3dadd( 8.0178, -62.1585, 7.44273, 0.81 ) }
    dend_18 { pt3dadd( 8.06515, -62.3039, 7.51206, 0.81 ) }
    dend_18 { pt3dadd( 8.65843, -64.1388, 8.27068, 1.18 ) }
    dend_18 { pt3dadd( 9.16746, -65.8195, 8.88027, 1.77 ) }
    dend_18 { pt3dadd( 9.71127, -67.749, 9.52825, 1.77 ) }
    dend_18 { pt3dadd( 10.1587, -69.6755, 9.87391, 1.25 ) }
    dend_18 { pt3dadd( 10.6109, -72.2328, 10.0322, 0.96 ) }
    dend_18 { pt3dadd( 10.6291, -72.4156, 10.0225, 0.96 ) }
    dend_18 { pt3dadd( 10.6261, -75.731, 9.3175, 0.96 ) }
    dend_18 { pt3dadd( 10.6123, -75.9035, 9.25765, 0.96 ) }
    dend_18 { pt3dadd( 9.96676, -80.6411, 6.90903, 0.81 ) }
    dend_18 { pt3dadd( 9.95572, -80.7124, 6.86639, 0.81 ) }
    dend_18 { pt3dadd( 9.63596, -82.8921, 5.42446, 0.44 ) }
    dend_18 { pt3dadd( 9.38241, -84.7618, 4.17098, 0.44 ) }
    dend_18 { pt3dadd( 9.37551, -84.8297, 4.12283, 0.44 ) }
    dend_18 { pt3dadd( 9.36479, -86.2662, 3.31692, 0.88 ) }
    dend_18 { pt3dadd( 9.51417, -87.7437, 2.77659, 1.33 ) }
    dend_18 { pt3dadd( 9.70307, -88.7915, 2.41094, 2.21 ) }
    dend_18 { pt3dadd( 9.73021, -88.8808, 2.38016, 2.21 ) }
    dend_18 { pt3dadd( 10.4372, -90.7661, 1.64418, 1.99 ) }
    dend_18 { pt3dadd( 11.1909, -92.5983, 0.918742, 0.88 ) }
    dend_18 { pt3dadd( 11.2336, -92.6939, 0.879508, 0.88 ) }
    dend_18 { pt3dadd( 12.1233, -94.5657, 0.263409, 0.88 ) }
    dend_18 { pt3dadd( 13.0356, -96.4314, -0.0551056, 0.66 ) }
    dend_18 { pt3dadd( 13.9174, -98.2323, -0.118012, 0.59 ) }
    dend_18 { pt3dadd( 14.8872, -100.253, 0.145551, 0.59 ) }
    dend_18 { pt3dadd( 14.9219, -100.327, 0.165953, 0.59 ) }
    dend_18 { pt3dadd( 16.2755, -103.266, 1.28269, 0.52 ) }
    dend_18 { pt3dadd( 17.381, -105.695, 2.515, 0.96 ) }
    dend_18 { pt3dadd( 17.4103, -105.763, 2.55473, 0.96 ) }
    dend_18 { pt3dadd( 17.9158, -106.923, 3.27264, 0.81 ) }
    dend_18 { pt3dadd( 18.7876, -108.951, 4.42325, 0.74 ) }
    dend_18 { pt3dadd( 19.1495, -109.827, 4.80363, 1.11 ) }
    dend_18 { pt3dadd( 19.1913, -109.928, 4.82975, 1.11 ) }
    dend_18 { pt3dadd( 19.6086, -110.904, 4.98129, 1.11 ) }
    dend_18 { pt3dadd( 20.18, -112.174, 5.13883, 0.96 ) }
    dend_18 { pt3dadd( 20.8787, -113.61, 5.26208, 0.88 ) }
    dend_18 { pt3dadd( 21.7527, -115.291, 5.41429, 0.59 ) }
    dend_18 { pt3dadd( 22.6363, -116.857, 5.5944, 0.44 ) }
    dend_18 { pt3dadd( 22.748, -117.034, 5.61365, 0.44 ) }
    dend_18 { pt3dadd( 23.662, -118.251, 5.72042, 0.74 ) }
    dend_18 { pt3dadd( 24.519, -119.232, 5.78648, 1.33 ) }
    dend_18 { pt3dadd( 25.6745, -120.375, 5.83612, 1.47 ) }
    dend_18 { pt3dadd( 26.7427, -121.317, 5.85896, 1.25 ) }
    dend_18 { pt3dadd( 28.1612, -122.507, 5.80492, 0.74 ) }
    dend_18 { pt3dadd( 29.4973, -123.654, 5.70666, 1.33 ) }
    dend_18 { pt3dadd( 30.1064, -124.185, 5.65455, 1.47 ) }
    dend_18 { pt3dadd( 30.1885, -124.259, 5.6462, 1.47 ) }
    dend_18 { pt3dadd( 30.6972, -124.766, 5.58362, 1.62 ) }
    dend_18 { pt3dadd( 32.1162, -126.513, 5.48916, 0.88 ) }
    dend_18 { pt3dadd( 32.9311, -127.943, 5.55635, 0.66 ) }
    dend_18 { pt3dadd( 33.4794, -129.345, 5.69773, 1.03 ) }
    dend_18 { pt3dadd( 33.5031, -129.44, 5.7096, 1.03 ) }
    dend_18 { pt3dadd( 33.6458, -130.741, 5.88728, 0.81 ) }
    dend_18 { pt3dadd( 33.5664, -132.385, 6.11789, 0.44 ) }
    dend_18 { pt3dadd( 33.2439, -134.161, 6.37733, 1.18 ) }
    dend_18 { pt3dadd( 33.0625, -134.924, 6.46669, 1.62 ) }
    dend_18 { pt3dadd( 32.7425, -136.265, 6.59956, 0.88 ) }
    dend_18 { pt3dadd( 32.4311, -137.714, 6.73814, 0.52 ) }
    dend_18 { pt3dadd( 32.1517, -139.406, 6.92058, 0.52 ) }
    dend_18 { pt3dadd( 32.1455, -139.49, 6.93005, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_18 { pt3dadd( 32.2737, -140.58, 7.11444, 0.52 ) }
    dend_18 { pt3dadd( 32.7037, -141.917, 7.44911, 0.88 ) }
    dend_18 { pt3dadd( 32.7451, -142.002, 7.47474, 0.88 ) }
    dend_18 { pt3dadd( 33.3662, -143.15, 7.85606, 1.11 ) }
    dend_18 { pt3dadd( 33.4028, -143.222, 7.87919, 1.11 ) }
    dend_18 { pt3dadd( 34.2038, -145.101, 8.41876, 0.52 ) }
    dend_18 { pt3dadd( 34.7505, -146.681, 8.73262, 0.37 ) }
    dend_18 { pt3dadd( 35.0765, -148.036, 8.84695, 0.37 ) }
    dend_18 { pt3dadd( 35.3402, -149.756, 8.85174, 1.11 ) }
    dend_18 { pt3dadd( 35.4335, -151.195, 8.74788, 1.62 ) }
    dend_18 { pt3dadd( 35.4285, -152.334, 8.60639, 1.92 ) }
    dend_18 { pt3dadd( 35.2391, -154.246, 8.25784, 1.25 ) }
    dend_18 { pt3dadd( 34.8533, -156.471, 7.82061, 0.29 ) }
    dend_18 { pt3dadd( 34.6403, -157.452, 7.62862, 0.81 ) }
    dend_18 { pt3dadd( 34.3789, -158.552, 7.42086, 1.03 ) }
    dend_18 { pt3dadd( 34.1474, -159.561, 7.27639, 1.11 ) }
    dend_18 { pt3dadd( 33.9008, -160.779, 7.18566, 0.52 ) }
    dend_18 { pt3dadd( 33.6463, -162.326, 7.19169, 0.37 ) }
    dend_18 { pt3dadd( 33.5154, -163.465, 7.27013, 1.47 ) }
    dend_18 { pt3dadd( 33.4328, -164.392, 7.35762, 2.06 ) }
    dend_18 { pt3dadd( 33.3422, -165.718, 7.50929, 1.47 ) }
    dend_18 { pt3dadd( 33.2442, -167.657, 7.75997, 0.52 ) }
    dend_18 { pt3dadd( 33.2109, -169.298, 7.99168, 0.52 ) }
    dend_18 { pt3dadd( 33.2022, -171.16, 8.26461, 0.88 ) }
    dend_18 { pt3dadd( 33.2041, -171.679, 8.33928, 1.25 ) }
    dend_18 { pt3dadd( 33.2124, -172.299, 8.4246, 1.55 ) }
    dend_18 { pt3dadd( 33.2484, -173.34, 8.55189, 1.03 ) }
    dend_18 { pt3dadd( 33.5181, -175.748, 8.79384, 0.44 ) }
    dend_18 { pt3dadd( 33.6851, -176.551, 8.85157, 0.96 ) }
    dend_18 { pt3dadd( 33.8796, -177.246, 8.86867, 0.96 ) }
    dend_18 { pt3dadd( 34.2998, -178.54, 8.88089, 0.81 ) }
    dend_18 { pt3dadd( 34.7607, -179.806, 8.81273, 0.37 ) }
    dend_18 { pt3dadd( 35.5595, -181.743, 8.59003, 0.29 ) }
    dend_18 { pt3dadd( 36.1392, -183.005, 8.36628, 0.29 ) }
    dend_18 { pt3dadd( 36.4718, -183.671, 8.22232, 1.03 ) }
    dend_18 { pt3dadd( 36.9026, -184.493, 8.02398, 1.33 ) }
    dend_18 { pt3dadd( 37.76, -186.177, 7.54545, 0.66 ) }
    dend_18 { pt3dadd( 38.3272, -187.417, 7.16814, 0.29 ) }
    dend_18 { pt3dadd( 38.3631, -187.518, 7.13286, 0.29 ) }
    dend_18 { pt3dadd( 38.6828, -188.536, 6.78662, 0.29 ) }
    dend_18 { pt3dadd( 39.1675, -190.094, 6.28115, 0.29 ) }
    dend_18 { pt3dadd( 39.5595, -191.311, 5.90211, 1.4 ) }
    dend_18 { pt3dadd( 39.8789, -192.293, 5.62341, 2.06 ) }
    dend_18 { pt3dadd( 40.7393, -194.963, 4.84891, 0.66 ) }
    dend_18 { pt3dadd( 41.2393, -196.485, 4.4192, 0.29 ) }
    dend_18 { pt3dadd( 41.2741, -196.589, 4.39112, 0.29 ) }
    dend_18 { pt3dadd( 41.5637, -197.29, 4.21802, 0.29 ) }
    dend_18 { pt3dadd( 41.6164, -197.389, 4.20498, 0.29 ) }
    dend_18 { pt3dadd( 42.05, -198.083, 4.19162, 0.81 ) }
    dend_18 { pt3dadd( 42.3708, -198.553, 4.25538, 1.11 ) }
    dend_18 { pt3dadd( 42.7653, -199.238, 4.35566, 1.33 ) }
    dend_18 { pt3dadd( 43.2785, -200.283, 4.50672, 0.74 ) }
    dend_18 { pt3dadd( 43.9417, -201.818, 4.7779, 0.29 ) }
    dend_18 { pt3dadd( 44.1091, -202.221, 4.85649, 0.52 ) }
    dend_18 { pt3dadd( 44.4277, -202.956, 5.00866, 0.59 ) }
    dend_18 { pt3dadd( 44.8794, -203.901, 5.19784, 0.29 ) }
    dend_18 { pt3dadd( 44.9295, -204.0, 5.2201, 0.29 ) }
    dend_18 { pt3dadd( 45.6455, -205.4, 5.5442, 0.29 ) }
    dend_18 { pt3dadd( 45.983, -206.024, 5.68199, 0.59 ) }
    dend_18 { pt3dadd( 46.5314, -207.046, 5.89413, 0.59 ) }
    dend_18 { pt3dadd( 47.3966, -208.716, 6.19114, 0.29 ) }
    dend_18 { pt3dadd( 47.8858, -209.781, 6.34472, 1.18 ) }
    dend_18 { pt3dadd( 48.239, -210.81, 6.4504, 1.77 ) }
    dend_18 { pt3dadd( 48.423, -211.569, 6.4991, 1.77 ) }
    dend_18 { pt3dadd( 48.7015, -213.128, 6.5755, 1.33 ) }
    dend_18 { pt3dadd( 48.8809, -214.519, 6.61931, 0.37 ) }
    dend_18 { pt3dadd( 49.0377, -215.78, 6.56561, 0.29 ) }
    dend_18 { pt3dadd( 49.2923, -217.552, 6.36933, 0.29 ) }
    dend_18 { pt3dadd( 49.3091, -217.648, 6.35402, 0.29 ) }
    dend_18 { pt3dadd( 49.5631, -218.772, 6.12954, 0.81 ) }
    dend_18 { pt3dadd( 49.7864, -219.419, 5.89363, 0.81 ) }
    dend_18 { pt3dadd( 50.659, -221.335, 4.9364, 0.29 ) }
    dend_18 { pt3dadd( 50.7035, -221.41, 4.8925, 0.29 ) }
    dend_18 { pt3dadd( 51.1903, -222.164, 4.40551, 1.11 ) }
    dend_18 { pt3dadd( 51.5571, -222.761, 4.01814, 1.4 ) }
    dend_18 { pt3dadd( 52.8221, -225.159, 2.38124, 0.29 ) }
    dend_18 { pt3dadd( 52.8794, -225.281, 2.29771, 0.29 ) }
    dend_18 { pt3dadd( 53.5056, -226.822, 1.30578, 0.29 ) }
    dend_18 { pt3dadd( 53.8236, -227.685, 0.764907, 1.4 ) }
    dend_18 { pt3dadd( 53.9895, -228.22, 0.445924, 1.4 ) }
    dend_18 { pt3dadd( 54.4865, -230.345, -0.69571, 0.29 ) }
    dend_18 { pt3dadd( 54.5002, -230.449, -0.736412, 0.29 ) }
    dend_18 { pt3dadd( 54.5707, -231.426, -1.09254, 0.29 ) }
    dend_18 { pt3dadd( 54.5702, -231.533, -1.12726, 0.29 ) }
    dend_18 { pt3dadd( 54.5813, -232.243, -1.2644, 0.66 ) }
    dend_18 { pt3dadd( 54.5968, -232.455, -1.28598, 0.66 ) }
    dend_18 { pt3dadd( 54.6991, -233.583, -1.30713, 0.29 ) }
    dend_18 { pt3dadd( 54.7695, -234.373, -1.3204, 1.62 ) }
    dend_18 { pt3dadd( 54.8207, -234.984, -1.32922, 1.92 ) }
    dend_18 { pt3dadd( 54.9798, -237.182, -1.35425, 0.29 ) }
    dend_18 { pt3dadd( 55.0809, -238.677, -1.36681, 0.29 ) }
    dend_18 { pt3dadd( 55.1488, -239.704, -1.37209, 0.88 ) }
    dend_18 { pt3dadd( 55.194, -240.426, -1.37278, 1.18 ) }
    dend_18 { pt3dadd( 55.2715, -241.771, -1.37931, 0.29 ) }
    dend_18 { pt3dadd( 55.3277, -243.018, -1.38785, 0.29 ) }
    dend_18 { pt3dadd( 55.3478, -243.955, -1.39774, 1.25 ) }
    dend_18 { pt3dadd( 55.3427, -244.582, -1.40671, 1.62 ) }
    dend_18 { pt3dadd( 55.3467, -245.32, -1.42047, 1.84 ) }
    dend_18 { pt3dadd( 55.3889, -248.028, -1.4869, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.89974, -24.6983, 2.39829, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_3 { pt3dadd( -5.0086, -26.9239, 2.96971, 2.14 ) }
    dend_3 { pt3dadd( -6.72562, -28.1561, 3.32179, 1.84 ) }
    dend_3 { pt3dadd( -8.15647, -29.2221, 3.65317, 1.84 ) }
    dend_3 { pt3dadd( -10.1027, -30.6811, 4.09089, 1.92 ) }
    dend_3 { pt3dadd( -11.5801, -31.7886, 4.42316, 2.21 ) }
    dend_3 { pt3dadd( -13.3006, -33.0783, 4.81009, 2.43 ) }
    dend_3 { pt3dadd( -14.9304, -34.3273, 5.32585, 2.5 ) }
    dend_3 { pt3dadd( -17.3192, -36.1789, 5.97538, 2.58 ) }
    dend_3 { pt3dadd( -18.632, -37.1895, 6.30522, 2.65 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 9/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 12.5056, -17.1419, -26.216, 0.52 ) }
    dend_53 { pt3dadd( 14.4828, -17.7575, -28.3115, 0.52 ) }
    dend_53 { pt3dadd( 16.1866, -18.2708, -29.9159, 2.14 ) }
    dend_53 { pt3dadd( 18.2136, -18.8833, -31.5591, 0.29 ) }
    dend_53 { pt3dadd( 18.9326, -19.1042, -32.1064, 1.03 ) }
    dend_53 { pt3dadd( 19.6309, -19.35, -32.6713, 1.62 ) }
    dend_53 { pt3dadd( 19.696, -19.3745, -32.7253, 1.62 ) }
    dend_53 { pt3dadd( 20.2891, -19.605, -33.2002, 1.33 ) }
    dend_53 { pt3dadd( 21.0311, -19.9714, -33.827, 0.74 ) }
    dend_53 { pt3dadd( 22.0606, -20.8095, -34.9912, 0.37 ) }
    dend_53 { pt3dadd( 22.9584, -21.6548, -36.228, 1.62 ) }
    dend_53 { pt3dadd( 22.9996, -21.7002, -36.2922, 1.62 ) }
    dend_53 { pt3dadd( 23.7371, -22.6267, -37.5171, 2.28 ) }
    dend_53 { pt3dadd( 24.0803, -23.1801, -38.1293, 1.47 ) }
    dend_53 { pt3dadd( 24.1093, -23.2422, -38.1872, 1.47 ) }
    dend_53 { pt3dadd( 24.7257, -24.9303, -39.4543, 0.29 ) }
    dend_53 { pt3dadd( 25.0986, -26.3019, -40.3866, 1.62 ) }
    dend_53 { pt3dadd( 25.2499, -27.2534, -40.9856, 1.99 ) }
    dend_53 { pt3dadd( 25.2097, -29.002, -42.0915, 0.66 ) }
    dend_53 { pt3dadd( 25.0728, -29.9704, -42.8183, 0.52 ) }
    dend_53 { pt3dadd( 24.9558, -30.5545, -43.2808, 1.55 ) }
    dend_53 { pt3dadd( 24.7046, -31.7412, -44.3492, 2.43 ) }
    dend_53 { pt3dadd( 24.5753, -32.6698, -45.2762, 1.77 ) }
    dend_53 { pt3dadd( 24.4537, -34.6369, -47.4054, 0.59 ) }
    dend_53 { pt3dadd( 24.6153, -36.4962, -49.6975, 1.92 ) }
    dend_53 { pt3dadd( 24.7574, -37.1148, -50.4632, 2.21 ) }
    dend_53 { pt3dadd( 25.5361, -39.1285, -52.8684, 0.81 ) }
    dend_53 { pt3dadd( 26.0718, -40.0626, -53.9045, 0.59 ) }
    dend_53 { pt3dadd( 26.1203, -40.1227, -53.9708, 0.59 ) }
    dend_53 { pt3dadd( 27.1821, -41.2006, -55.0526, 0.37 ) }
    dend_53 { pt3dadd( 28.0853, -42.0903, -55.8674, 0.29 ) }
    dend_53 { pt3dadd( 28.954, -42.9309, -56.6389, 1.84 ) }
    dend_53 { pt3dadd( 29.4317, -43.3885, -57.0289, 2.21 ) }
    dend_53 { pt3dadd( 31.4439, -45.3151, -58.7528, 0.52 ) }
    dend_53 { pt3dadd( 32.2575, -46.1021, -59.452, 0.44 ) }
    dend_53 { pt3dadd( 33.2944, -47.1443, -60.3513, 2.95 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 45/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 12.5056, -17.1419, -26.216, 0.37 ) }
    dend_52 { pt3dadd( 13.2816, -16.0157, -26.8978, 0.37 ) }
    dend_52 { pt3dadd( 13.8256, -15.3966, -27.4709, 1.18 ) }
    dend_52 { pt3dadd( 14.2826, -15.0173, -27.9854, 1.18 ) }
    dend_52 { pt3dadd( 14.7229, -14.7032, -28.4662, 0.59 ) }
    dend_52 { pt3dadd( 15.2698, -14.3398, -29.0575, 0.37 ) }
    dend_52 { pt3dadd( 16.608, -13.4529, -30.5017, 1.18 ) }
    dend_52 { pt3dadd( 17.5874, -12.9173, -31.5803, 2.14 ) }
    dend_52 { pt3dadd( 18.7186, -12.2926, -32.9587, 0.37 ) }
    dend_52 { pt3dadd( 19.1971, -12.0199, -33.6107, 0.29 ) }
    dend_52 { pt3dadd( 19.2274, -12.001, -33.6579, 0.29 ) }
    dend_52 { pt3dadd( 19.5648, -11.773, -34.2424, 0.29 ) }
    dend_52 { pt3dadd( 19.5972, -11.7498, -34.2989, 0.29 ) }
    dend_52 { pt3dadd( 20.9392, -10.8751, -36.5928, 1.99 ) }
    dend_52 { pt3dadd( 21.0, -10.8429, -36.6889, 1.99 ) }
    dend_52 { pt3dadd( 22.3201, -10.28, -38.6639, 0.66 ) }
    dend_52 { pt3dadd( 23.0246, -10.003, -39.6333, 2.36 ) }
    dend_52 { pt3dadd( 23.4181, -9.86293, -40.1308, 2.95 ) }
    dend_52 { pt3dadd( 24.8998, -9.29928, -41.7728, 0.37 ) }
    dend_52 { pt3dadd( 25.6093, -8.99454, -42.4302, 0.37 ) }
    dend_52 { pt3dadd( 26.2528, -8.65053, -43.0664, 0.37 ) }
    dend_52 { pt3dadd( 26.8544, -8.25414, -43.7664, 1.33 ) }
    dend_52 { pt3dadd( 27.0295, -8.11462, -44.0059, 1.62 ) }
    dend_52 { pt3dadd( 27.7329, -7.4647, -45.119, 0.15 ) }
    dend_52 { pt3dadd( 28.5767, -6.57044, -46.6255, 2.5 ) }
    dend_52 { pt3dadd( 29.58, -5.47145, -48.569, 1.84 ) }
    dend_52 { pt3dadd( 30.6229, -4.39528, -50.7254, 0.81 ) }
    dend_52 { pt3dadd( 30.8987, -4.14537, -51.3076, 0.74 ) }
    dend_52 { pt3dadd( 30.9311, -4.11837, -51.3743, 0.74 ) }
    dend_52 { pt3dadd( 31.3275, -3.83312, -52.1462, 0.96 ) }
    dend_52 { pt3dadd( 31.361, -3.81145, -52.2025, 0.96 ) }
    dend_52 { pt3dadd( 32.5988, -3.03836, -53.8651, 0.59 ) }
    dend_52 { pt3dadd( 33.3458, -2.59104, -54.7626, 0.22 ) }
    dend_52 { pt3dadd( 34.2299, -2.06127, -55.7798, 2.21 ) }
    dend_52 { pt3dadd( 34.6439, -1.81053, -56.2298, 2.36 ) }
    dend_52 { pt3dadd( 36.3824, -0.75122, -58.0007, 0.44 ) }
    dend_52 { pt3dadd( 37.048, -0.347858, -58.608, 0.29 ) }
    dend_52 { pt3dadd( 37.1054, -0.314252, -58.651, 0.29 ) }
    dend_52 { pt3dadd( 37.5556, -0.0495743, -58.9598, 0.29 ) }
    dend_52 { pt3dadd( 37.9952, 0.169426, -59.2276, 0.29 ) }
    dend_52 { pt3dadd( 38.0521, 0.195006, -59.2588, 0.29 ) }
    dend_52 { pt3dadd( 39.1656, 0.512939, -59.6914, 1.4 ) }
    dend_52 { pt3dadd( 39.6262, 0.600939, -59.8681, 1.77 ) }
    dend_52 { pt3dadd( 39.9544, 0.649369, -59.991, 1.92 ) }
    dend_52 { pt3dadd( 41.4612, 0.823469, -60.538, 0.44 ) }
    dend_52 { pt3dadd( 41.5258, 0.833099, -60.5613, 0.44 ) }
    dend_52 { pt3dadd( 42.6147, 1.06526, -60.9565, 0.44 ) }
    dend_52 { pt3dadd( 43.2845, 1.28056, -61.2409, 0.29 ) }
    dend_52 { pt3dadd( 43.344, 1.3034, -61.2691, 0.29 ) }
    dend_52 { pt3dadd( 43.8373, 1.49454, -61.5112, 0.22 ) }
    dend_52 { pt3dadd( 44.5694, 1.73388, -61.8966, 0.88 ) }
    dend_52 { pt3dadd( 45.0945, 1.79199, -62.2344, 1.11 ) }
    dend_52 { pt3dadd( 46.3029, 1.60682, -63.1164, 0.22 ) }
    dend_52 { pt3dadd( 46.7303, 1.43582, -63.4256, 0.22 ) }
    dend_52 { pt3dadd( 47.3245, 1.08631, -63.8676, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_52 { pt3dadd( 48.0735, 0.560969, -64.4256, 1.11 ) }
    dend_52 { pt3dadd( 49.0776, -0.186742, -65.1544, 0.22 ) }
    dend_52 { pt3dadd( 49.6738, -0.600872, -65.5944, 0.74 ) }
    dend_52 { pt3dadd( 50.0828, -0.855975, -65.8937, 0.74 ) }
    dend_52 { pt3dadd( 51.1352, -1.33131, -66.7024, 0.22 ) }
    dend_52 { pt3dadd( 51.5272, -1.44727, -67.005, 0.22 ) }
    dend_52 { pt3dadd( 52.0818, -1.53223, -67.4124, 0.81 ) }
    dend_52 { pt3dadd( 53.0981, -1.56402, -68.1573, 0.29 ) }
    dend_52 { pt3dadd( 53.5038, -1.5879, -68.5456, 0.29 ) }
    dend_52 { pt3dadd( 53.5499, -1.59242, -68.5962, 0.29 ) }
    dend_52 { pt3dadd( 54.0765, -1.66511, -69.2113, 0.88 ) }
    dend_52 { pt3dadd( 54.4376, -1.76231, -69.6693, 0.88 ) }
    dend_52 { pt3dadd( 54.4742, -1.77237, -69.7144, 0.88 ) }
    dend_52 { pt3dadd( 55.6931, -2.01503, -71.0699, 0.22 ) }
    dend_52 { pt3dadd( 55.7657, -2.01127, -71.1537, 0.22 ) }
    dend_52 { pt3dadd( 56.124, -1.97363, -71.5304, 0.22 ) }
    dend_52 { pt3dadd( 56.1809, -1.96193, -71.5833, 0.22 ) }
    dend_52 { pt3dadd( 56.9113, -1.78824, -72.1581, 1.03 ) }
    dend_52 { pt3dadd( 57.3232, -1.69506, -72.4289, 1.62 ) }
    dend_52 { pt3dadd( 59.2911, -1.29505, -73.4857, 0.22 ) }
    dend_52 { pt3dadd( 60.0666, -1.17458, -73.869, 0.22 ) }
    dend_52 { pt3dadd( 60.9815, -1.08924, -74.2866, 0.22 ) }
    dend_52 { pt3dadd( 61.65, -1.04993, -74.5742, 1.33 ) }
    dend_52 { pt3dadd( 62.2574, -1.04034, -74.8273, 1.33 ) }
    dend_52 { pt3dadd( 63.4044, -1.04205, -75.276, 0.29 ) }
    dend_52 { pt3dadd( 64.2979, -1.07741, -75.5677, 0.29 ) }
    dend_52 { pt3dadd( 65.2531, -1.13983, -75.9283, 0.88 ) }
    dend_52 { pt3dadd( 65.3161, -1.14733, -75.9548, 0.88 ) }
    dend_52 { pt3dadd( 66.751, -1.33923, -76.6059, 0.29 ) }
    dend_52 { pt3dadd( 66.8122, -1.34811, -76.6358, 0.29 ) }
    dend_52 { pt3dadd( 67.4947, -1.46721, -76.9785, 0.29 ) }
    dend_52 { pt3dadd( 68.4333, -1.64744, -77.4683, 1.18 ) }
    dend_52 { pt3dadd( 68.4938, -1.65964, -77.4988, 1.18 ) }
    dend_52 { pt3dadd( 68.7992, -1.73054, -77.6891, 1.33 ) }
    dend_52 { pt3dadd( 69.7032, -1.96392, -78.3112, 0.22 ) }
    dend_52 { pt3dadd( 70.1419, -2.07546, -78.6348, 0.22 ) }
    dend_52 { pt3dadd( 70.8354, -2.22392, -79.1715, 1.25 ) }
    dend_52 { pt3dadd( 71.0586, -2.2663, -79.344, 1.25 ) }
    dend_52 { pt3dadd( 73.0707, -2.48814, -80.8409, 0.29 ) }
    dend_52 { pt3dadd( 73.5349, -2.51087, -81.1832, 0.29 ) }
    dend_52 { pt3dadd( 73.5923, -2.50958, -81.2221, 0.29 ) }
    dend_52 { pt3dadd( 74.4822, -2.41493, -81.753, 1.03 ) }
    dend_52 { pt3dadd( 74.8691, -2.34372, -81.9473, 1.25 ) }
    dend_52 { pt3dadd( 76.2061, -1.99078, -82.5712, 0.22 ) }
    dend_52 { pt3dadd( 76.2675, -1.96877, -82.5958, 0.22 ) }
    dend_52 { pt3dadd( 77.2664, -1.57092, -83.0315, 0.22 ) }
    dend_52 { pt3dadd( 78.0563, -1.24919, -83.3947, 0.74 ) }
    dend_52 { pt3dadd( 78.4045, -1.10762, -83.596, 1.03 ) }
    dend_52 { pt3dadd( 80.1251, -0.407898, -84.743, 0.15 ) }
    dend_52 { pt3dadd( 80.7889, -0.175453, -85.2329, 1.47 ) }
    dend_52 { pt3dadd( 80.8347, -0.162373, -85.2678, 1.47 ) }
    dend_52 { pt3dadd( 81.3523, -0.0452523, -85.6851, 1.69 ) }
    dend_52 { pt3dadd( 83.3027, 0.172384, -87.2469, 0.22 ) }
    dend_52 { pt3dadd( 83.3576, 0.173498, -87.2881, 0.22 ) }
    dend_52 { pt3dadd( 84.1458, 0.146843, -87.7771, 0.22 ) }
    dend_52 { pt3dadd( 84.7817, 0.123269, -88.1282, 0.74 ) }
    dend_52 { pt3dadd( 84.9294, 0.124822, -88.1957, 0.74 ) }
    dend_52 { pt3dadd( 86.2198, 0.206649, -88.6764, 0.22 ) }
    dend_52 { pt3dadd( 86.6336, 0.259579, -88.7891, 0.52 ) }
    dend_52 { pt3dadd( 88.0805, 0.527459, -89.1789, 0.22 ) }
    dend_52 { pt3dadd( 88.4265, 0.613059, -89.2718, 0.52 ) }
    dend_52 { pt3dadd( 89.9725, 1.05536, -89.6673, 0.22 ) }
    dend_52 { pt3dadd( 90.3056, 1.15947, -89.7399, 0.44 ) }
    dend_52 { pt3dadd( 91.138, 1.42145, -89.8046, 0.22 ) }
    dend_52 { pt3dadd( 91.239, 1.44796, -89.8022, 0.29 ) }
    dend_52 { pt3dadd( 91.3067, 1.4512, -89.7872, 0.29 ) }
    dend_52 { pt3dadd( 91.952, 1.29435, -89.4806, 0.22 ) }
    dend_52 { pt3dadd( 92.59, 0.988929, -89.0484, 1.03 ) }
    dend_52 { pt3dadd( 93.8134, 0.243881, -88.1419, 0.37 ) }
    dend_52 { pt3dadd( 94.2041, -0.0314063, -87.827, 0.22 ) }
    dend_52 { pt3dadd( 95.3825, -0.937548, -86.835, 0.22 ) }
    dend_52 { pt3dadd( 96.2529, -1.6919, -86.0553, 0.59 ) }
    dend_52 { pt3dadd( 96.2925, -1.73396, -86.0157, 0.59 ) }
    dend_52 { pt3dadd( 96.4644, -1.95643, -85.8287, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 74/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -2.01366, -45.4023, -21.8418, 0.66 ) }
    dend_50 { pt3dadd( -1.85025, -48.1501, -22.3672, 0.66 ) }
    dend_50 { pt3dadd( -1.84616, -48.2251, -22.3822, 0.66 ) }
    dend_50 { pt3dadd( -1.81307, -49.2194, -22.5827, 0.88 ) }
    dend_50 { pt3dadd( -1.81704, -50.1495, -22.7647, 0.96 ) }
    dend_50 { pt3dadd( -1.88352, -51.6836, -23.1816, 0.52 ) }
    dend_50 { pt3dadd( -1.95615, -52.7019, -23.5245, 0.74 ) }
    dend_50 { pt3dadd( -1.96299, -52.7634, -23.5506, 0.74 ) }
    dend_50 { pt3dadd( -2.10648, -53.7151, -23.9918, 0.59 ) }
    dend_50 { pt3dadd( -2.38648, -55.1309, -24.7376, 0.52 ) }
    dend_50 { pt3dadd( -2.7944, -56.8994, -25.7345, 1.4 ) }
    dend_50 { pt3dadd( -3.04082, -57.9185, -26.3094, 1.92 ) }
    dend_50 { pt3dadd( -3.12786, -58.3354, -26.5499, 2.14 ) }
    dend_50 { pt3dadd( -3.19727, -58.746, -26.7872, 1.62 ) }
    dend_50 { pt3dadd( -3.46445, -60.7439, -27.9378, 0.59 ) }
    dend_50 { pt3dadd( -3.58951, -62.139, -28.7373, 0.59 ) }
    dend_50 { pt3dadd( -3.66143, -63.2628, -29.3552, 0.59 ) }
    dend_50 { pt3dadd( -3.7244, -64.387, -30.0004, 0.44 ) }
    dend_50 { pt3dadd( -3.76279, -65.2039, -30.4885, 1.03 ) }
    dend_50 { pt3dadd( -3.77777, -65.5655, -30.7066, 1.33 ) }
    dend_50 { pt3dadd( -3.80804, -66.6855, -31.3651, 0.52 ) }
    dend_50 { pt3dadd( -3.8292, -67.7924, -31.977, 0.29 ) }
    dend_50 { pt3dadd( -3.84102, -68.5981, -32.3693, 1.11 ) }
    dend_50 { pt3dadd( -3.85456, -69.0871, -32.5743, 1.69 ) }
    dend_50 { pt3dadd( -3.8862, -69.8989, -32.8821, 1.84 ) }
    dend_50 { pt3dadd( -3.95921, -70.9915, -33.2608, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_50 { pt3dadd( -4.07216, -72.1098, -33.5961, 0.37 ) }
    dend_50 { pt3dadd( -4.23078, -73.4425, -33.9657, 0.29 ) }
    dend_50 { pt3dadd( -4.24028, -73.5064, -33.9849, 0.29 ) }
    dend_50 { pt3dadd( -4.4547, -74.7947, -34.458, 0.29 ) }
    dend_50 { pt3dadd( -4.64156, -75.6951, -34.8399, 0.29 ) }
    dend_50 { pt3dadd( -4.84847, -76.5163, -35.2277, 1.62 ) }
    dend_50 { pt3dadd( -4.97063, -77.0103, -35.4996, 2.14 ) }
    dend_50 { pt3dadd( -5.12885, -77.7391, -35.9283, 1.84 ) }
    dend_50 { pt3dadd( -5.34669, -79.2489, -36.8041, 0.37 ) }
    dend_50 { pt3dadd( -5.38094, -79.8219, -37.1296, 0.37 ) }
    dend_50 { pt3dadd( -5.38284, -79.8814, -37.1616, 0.37 ) }
    dend_50 { pt3dadd( -5.48332, -81.1615, -37.7996, 0.29 ) }
    dend_50 { pt3dadd( -5.55913, -81.6656, -38.0263, 0.29 ) }
    dend_50 { pt3dadd( -5.68173, -82.2245, -38.2398, 0.59 ) }
    dend_50 { pt3dadd( -5.84353, -82.7358, -38.3994, 0.59 ) }
    dend_50 { pt3dadd( -6.28944, -83.9607, -38.7552, 0.37 ) }
    dend_50 { pt3dadd( -6.77289, -85.0888, -39.0591, 1.69 ) }
    dend_50 { pt3dadd( -7.05156, -85.6669, -39.1971, 2.28 ) }
    dend_50 { pt3dadd( -7.17497, -85.918, -39.269, 2.43 ) }
    dend_50 { pt3dadd( -7.7621, -87.1017, -39.649, 0.59 ) }
    dend_50 { pt3dadd( -8.32808, -88.262, -40.0487, 0.37 ) }
    dend_50 { pt3dadd( -8.6243, -88.8931, -40.2758, 0.37 ) }
    dend_50 { pt3dadd( -8.83098, -89.3554, -40.4412, 0.59 ) }
    dend_50 { pt3dadd( -9.35111, -90.5089, -40.8449, 0.52 ) }
    dend_50 { pt3dadd( -9.75679, -91.3805, -41.1412, 0.29 ) }
    dend_50 { pt3dadd( -10.0703, -92.0095, -41.3611, 0.81 ) }
    dend_50 { pt3dadd( -10.3639, -92.5376, -41.5575, 0.81 ) }
    dend_50 { pt3dadd( -10.7057, -93.1097, -41.7785, 0.44 ) }
    dend_50 { pt3dadd( -11.475, -94.4105, -42.3043, 0.29 ) }
    dend_50 { pt3dadd( -11.7726, -94.9463, -42.5145, 0.96 ) }
    dend_50 { pt3dadd( -12.1229, -95.6438, -42.8025, 0.96 ) }
    dend_50 { pt3dadd( -12.7025, -96.8298, -43.3679, 0.29 ) }
    dend_50 { pt3dadd( -12.7331, -96.8925, -43.3998, 0.29 ) }
    dend_50 { pt3dadd( -13.3752, -98.2396, -44.1018, 0.29 ) }
    dend_50 { pt3dadd( -13.6321, -98.8129, -44.3948, 1.55 ) }
    dend_50 { pt3dadd( -13.9346, -99.5145, -44.7357, 1.92 ) }
    dend_50 { pt3dadd( -14.8675, -101.816, -45.8263, 0.29 ) }
    dend_50 { pt3dadd( -15.1581, -102.544, -46.1615, 0.81 ) }
    dend_50 { pt3dadd( -15.3919, -103.149, -46.4312, 0.96 ) }
    dend_50 { pt3dadd( -15.6637, -103.889, -46.7401, 0.74 ) }
    dend_50 { pt3dadd( -15.7076, -104.032, -46.7956, 0.74 ) }
    dend_50 { pt3dadd( -16.0013, -105.368, -47.2573, 0.44 ) }
    dend_50 { pt3dadd( -16.1066, -106.291, -47.5736, 0.44 ) }
    dend_50 { pt3dadd( -16.1806, -107.076, -47.882, 0.29 ) }
    dend_50 { pt3dadd( -16.2452, -107.972, -48.2573, 0.74 ) }
    dend_50 { pt3dadd( -16.2801, -108.587, -48.5148, 0.96 ) }
    dend_50 { pt3dadd( -16.2822, -108.649, -48.5419, 0.96 ) }
    dend_50 { pt3dadd( -16.2866, -110.486, -49.3623, 0.15 ) }
    dend_50 { pt3dadd( -16.2814, -111.057, -49.6326, 1.03 ) }
    dend_50 { pt3dadd( -16.2758, -111.68, -49.9287, 1.03 ) }
    dend_50 { pt3dadd( -16.2776, -113.234, -50.6285, 0.29 ) }
    dend_50 { pt3dadd( -16.2818, -114.626, -51.2843, 0.29 ) }
    dend_50 { pt3dadd( -16.2894, -115.124, -51.5138, 1.03 ) }
    dend_50 { pt3dadd( -16.2964, -115.576, -51.7235, 1.25 ) }
    dend_50 { pt3dadd( -16.3894, -117.033, -52.4564, 0.22 ) }
    dend_50 { pt3dadd( -16.5135, -118.08, -53.0053, 0.22 ) }
    dend_50 { pt3dadd( -16.7222, -119.375, -53.6947, 1.11 ) }
    dend_50 { pt3dadd( -16.8762, -120.171, -54.1107, 1.11 ) }
    dend_50 { pt3dadd( -17.2644, -122.001, -55.0764, 0.22 ) }
    dend_50 { pt3dadd( -17.4821, -122.989, -55.5983, 0.22 ) }
    dend_50 { pt3dadd( -17.6304, -123.604, -55.9129, 0.74 ) }
    dend_50 { pt3dadd( -17.7111, -123.938, -56.068, 0.74 ) }
    dend_50 { pt3dadd( -18.0033, -125.057, -56.4824, 0.22 ) }
    dend_50 { pt3dadd( -18.1435, -125.559, -56.6568, 0.37 ) }
    dend_50 { pt3dadd( -18.1676, -125.63, -56.678, 0.37 ) }
    dend_50 { pt3dadd( -18.3887, -126.349, -56.8866, 0.22 ) }
    dend_50 { pt3dadd( -18.521, -126.763, -56.9847, 1.11 ) }
    dend_50 { pt3dadd( -18.667, -127.179, -57.0554, 1.4 ) }
    dend_50 { pt3dadd( -18.8276, -127.588, -57.105, 1.03 ) }
    dend_50 { pt3dadd( -19.417, -129.0, -57.2539, 0.29 ) }
    dend_50 { pt3dadd( -20.0806, -130.408, -57.3829, 0.29 ) }
    dend_50 { pt3dadd( -20.6732, -131.519, -57.4764, 0.29 ) }
    dend_50 { pt3dadd( -21.1779, -132.396, -57.5455, 1.4 ) }
    dend_50 { pt3dadd( -21.589, -133.067, -57.5919, 1.62 ) }
    dend_50 { pt3dadd( -22.3326, -134.197, -57.6556, 0.29 ) }
    dend_50 { pt3dadd( -23.2029, -135.409, -57.7127, 0.22 ) }
    dend_50 { pt3dadd( -23.758, -136.111, -57.7612, 0.22 ) }
    dend_50 { pt3dadd( -24.1668, -136.601, -57.8176, 0.81 ) }
    dend_50 { pt3dadd( -24.5702, -137.084, -57.8849, 1.18 ) }
    dend_50 { pt3dadd( -24.7938, -137.363, -57.9232, 1.18 ) }
    dend_50 { pt3dadd( -25.5654, -138.402, -58.0473, 0.22 ) }
    dend_50 { pt3dadd( -25.6075, -138.467, -58.0544, 0.22 ) }
    dend_50 { pt3dadd( -26.308, -139.64, -58.1698, 0.22 ) }
    dend_50 { pt3dadd( -26.3784, -139.766, -58.1814, 0.22 ) }
    dend_50 { pt3dadd( -26.901, -140.834, -58.3049, 0.22 ) }
    dend_50 { pt3dadd( -27.2089, -141.559, -58.4002, 0.96 ) }
    dend_50 { pt3dadd( -27.4251, -142.15, -58.4839, 1.4 ) }
    dend_50 { pt3dadd( -27.5725, -142.627, -58.5523, 1.4 ) }
    dend_50 { pt3dadd( -27.7323, -143.249, -58.6427, 0.88 ) }
    dend_50 { pt3dadd( -28.0706, -144.595, -58.8508, 0.22 ) }
    dend_50 { pt3dadd( -28.3417, -145.604, -59.0225, 0.59 ) }
    dend_50 { pt3dadd( -28.4401, -145.939, -59.0978, 0.74 ) }
    dend_50 { pt3dadd( -28.8063, -147.088, -59.3928, 0.22 ) }
    dend_50 { pt3dadd( -28.942, -147.475, -59.5035, 0.44 ) }
    dend_50 { pt3dadd( -29.0659, -147.794, -59.6035, 0.44 ) }
    dend_50 { pt3dadd( -29.5231, -148.835, -59.9395, 0.22 ) }
    dend_50 { pt3dadd( -29.9148, -149.675, -60.2211, 1.03 ) }
    dend_50 { pt3dadd( -30.1092, -150.063, -60.3517, 1.33 ) }
    dend_50 { pt3dadd( -30.1693, -150.179, -60.3882, 1.33 ) }
    dend_50 { pt3dadd( -30.4125, -150.663, -60.5247, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_50 { pt3dadd( -31.0374, -151.967, -60.8446, 0.22 ) }
    dend_50 { pt3dadd( -31.2984, -152.548, -60.937, 0.59 ) }
    dend_50 { pt3dadd( -31.5039, -153.015, -60.981, 0.59 ) }
    dend_50 { pt3dadd( -32.0639, -154.314, -61.0797, 0.22 ) }
    dend_50 { pt3dadd( -32.3399, -154.961, -61.121, 1.03 ) }
    dend_50 { pt3dadd( -32.5535, -155.477, -61.1486, 1.33 ) }
    dend_50 { pt3dadd( -33.2638, -157.22, -61.2266, 0.15 ) }
    dend_50 { pt3dadd( -33.7713, -158.442, -61.2798, 0.15 ) }
    dend_50 { pt3dadd( -34.0448, -159.091, -61.31, 0.44 ) }
    dend_50 { pt3dadd( -34.218, -159.478, -61.3311, 0.44 ) }
    dend_50 { pt3dadd( -34.6626, -160.431, -61.399, 0.22 ) }
    dend_50 { pt3dadd( -34.8951, -160.923, -61.4506, 0.52 ) }
    dend_50 { pt3dadd( -35.0468, -161.247, -61.5021, 0.52 ) }
    dend_50 { pt3dadd( -35.3845, -161.994, -61.626, 0.22 ) }
    dend_50 { pt3dadd( -35.5865, -162.457, -61.7015, 0.52 ) }
    dend_50 { pt3dadd( -35.6673, -162.657, -61.733, 0.52 ) }
    dend_50 { pt3dadd( -36.1721, -163.968, -61.935, 0.15 ) }
    dend_50 { pt3dadd( -36.2492, -164.2, -61.9686, 0.37 ) }
    dend_50 { pt3dadd( -36.3847, -164.681, -62.0341, 0.15 ) }
    dend_50 { pt3dadd( -36.4025, -164.756, -62.0437, 0.15 ) }
    dend_50 { pt3dadd( -36.4695, -165.128, -62.0878, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -2.01366, -45.4023, -21.8418, 0.74 ) }
    dend_49 { pt3dadd( -2.25997, -47.4176, -21.8486, 0.74 ) }
    dend_49 { pt3dadd( -2.35071, -48.4071, -21.8716, 0.52 ) }
    dend_49 { pt3dadd( -2.47607, -49.6945, -21.8569, 0.59 ) }
    dend_49 { pt3dadd( -2.564, -50.4472, -21.8343, 0.88 ) }
    dend_49 { pt3dadd( -2.65863, -51.114, -21.8072, 0.88 ) }
    dend_49 { pt3dadd( -2.82273, -52.0204, -21.7666, 0.44 ) }
    dend_49 { pt3dadd( -2.97469, -52.7059, -21.7052, 0.37 ) }
    dend_49 { pt3dadd( -3.32476, -53.8352, -21.5232, 0.37 ) }
    dend_49 { pt3dadd( -3.48201, -54.1954, -21.4433, 0.66 ) }
    dend_49 { pt3dadd( -3.7623, -54.6977, -21.3237, 0.74 ) }
    dend_49 { pt3dadd( -4.41318, -55.6423, -21.08, 0.66 ) }
    dend_49 { pt3dadd( -5.30325, -56.7683, -20.7807, 1.99 ) }
    dend_49 { pt3dadd( -5.70862, -57.2523, -20.6625, 2.58 ) }
    dend_49 { pt3dadd( -6.21471, -57.8842, -20.5478, 1.92 ) }
    dend_49 { pt3dadd( -6.8279, -58.7432, -20.4262, 0.37 ) }
    dend_49 { pt3dadd( -7.28968, -59.5099, -20.3469, 0.29 ) }
    dend_49 { pt3dadd( -7.59038, -60.1091, -20.318, 0.44 ) }
    dend_49 { pt3dadd( -7.81944, -60.6383, -20.3151, 0.88 ) }
    dend_49 { pt3dadd( -8.25654, -61.7302, -20.2944, 1.11 ) }
    dend_49 { pt3dadd( -8.534, -62.4697, -20.273, 0.59 ) }
    dend_49 { pt3dadd( -8.93272, -63.5205, -20.2346, 0.59 ) }
    dend_49 { pt3dadd( -9.30568, -64.4945, -20.186, 0.81 ) }
    dend_49 { pt3dadd( -9.73418, -65.5546, -20.0919, 1.18 ) }
    dend_49 { pt3dadd( -9.8703, -65.8773, -20.0523, 1.18 ) }
    dend_49 { pt3dadd( -10.1555, -66.5336, -19.9333, 0.81 ) }
    dend_49 { pt3dadd( -10.5587, -67.5323, -19.7211, 0.44 ) }
    dend_49 { pt3dadd( -10.9121, -68.6281, -19.4376, 0.44 ) }
    dend_49 { pt3dadd( -11.0686, -69.3317, -19.2263, 1.11 ) }
    dend_49 { pt3dadd( -11.1266, -69.8043, -19.0792, 1.47 ) }
    dend_49 { pt3dadd( -11.1796, -70.6922, -18.8107, 1.47 ) }
    dend_49 { pt3dadd( -11.1906, -71.4202, -18.6012, 0.88 ) }
    dend_49 { pt3dadd( -11.1678, -72.5332, -18.3108, 0.52 ) }
    dend_49 { pt3dadd( -11.167, -72.5896, -18.299, 0.52 ) }
    dend_49 { pt3dadd( -11.1532, -73.7782, -18.1165, 0.37 ) }
    dend_49 { pt3dadd( -11.1501, -75.2905, -17.9571, 1.18 ) }
    dend_49 { pt3dadd( -11.1576, -75.9957, -17.9186, 2.06 ) }
    dend_49 { pt3dadd( -11.191, -76.7371, -17.9062, 2.36 ) }
    dend_49 { pt3dadd( -11.2848, -77.6534, -17.9284, 1.99 ) }
    dend_49 { pt3dadd( -11.4725, -78.6857, -17.9685, 1.47 ) }
    dend_49 { pt3dadd( -11.7855, -79.7733, -18.0277, 0.96 ) }
    dend_49 { pt3dadd( -12.1888, -80.8517, -18.097, 0.66 ) }
    dend_49 { pt3dadd( -12.5664, -81.7493, -18.1673, 0.52 ) }
    dend_49 { pt3dadd( -12.9971, -82.7026, -18.2529, 0.52 ) }
    dend_49 { pt3dadd( -13.5318, -83.8813, -18.3694, 0.66 ) }
    dend_49 { pt3dadd( -13.9472, -84.8327, -18.4735, 0.66 ) }
    dend_49 { pt3dadd( -14.3504, -85.9595, -18.6434, 0.66 ) }
    dend_49 { pt3dadd( -14.5628, -86.8606, -18.8279, 0.66 ) }
    dend_49 { pt3dadd( -14.6384, -87.4695, -18.9747, 0.81 ) }
    dend_49 { pt3dadd( -14.6581, -88.0976, -19.1552, 0.96 ) }
    dend_49 { pt3dadd( -14.6484, -88.6602, -19.3386, 0.96 ) }
    dend_49 { pt3dadd( -14.6201, -89.7939, -19.6805, 0.37 ) }
    dend_49 { pt3dadd( -14.6437, -90.6379, -19.8875, 0.37 ) }
    dend_49 { pt3dadd( -14.7457, -91.6953, -20.0371, 0.37 ) }
    dend_49 { pt3dadd( -14.7658, -91.8192, -20.0347, 0.37 ) }
    dend_49 { pt3dadd( -14.9848, -92.7849, -19.9023, 0.37 ) }
    dend_49 { pt3dadd( -15.2611, -93.8191, -19.655, 1.62 ) }
    dend_49 { pt3dadd( -15.5485, -94.8861, -19.3248, 2.21 ) }
    dend_49 { pt3dadd( -15.7516, -95.7724, -18.9947, 2.28 ) }
    dend_49 { pt3dadd( -16.1217, -97.3922, -18.34, 0.96 ) }
    dend_49 { pt3dadd( -16.2874, -98.0166, -18.0886, 0.66 ) }
    dend_49 { pt3dadd( -16.6211, -99.1434, -17.6305, 0.59 ) }
    dend_49 { pt3dadd( -16.9586, -100.046, -17.2294, 0.44 ) }
    dend_49 { pt3dadd( -17.6449, -101.511, -16.4497, 0.44 ) }
    dend_49 { pt3dadd( -18.1105, -102.341, -15.96, 1.03 ) }
    dend_49 { pt3dadd( -18.5638, -103.019, -15.5006, 1.55 ) }
    dend_49 { pt3dadd( -18.5921, -103.058, -15.4707, 1.55 ) }
    dend_49 { pt3dadd( -19.6994, -104.431, -14.3327, 0.66 ) }
    dend_49 { pt3dadd( -20.2357, -105.163, -13.7177, 0.44 ) }
    dend_49 { pt3dadd( -20.2651, -105.21, -13.6814, 0.37 ) }
    dend_49 { pt3dadd( -20.6834, -106.069, -13.0486, 1.33 ) }
    dend_49 { pt3dadd( -20.8985, -106.543, -12.7027, 1.69 ) }
    dend_49 { pt3dadd( -21.1706, -107.122, -12.3109, 1.69 ) }
    dend_49 { pt3dadd( -21.9498, -108.621, -11.2493, 0.44 ) }
    dend_49 { pt3dadd( -22.326, -109.167, -10.7882, 0.44 ) }
    dend_49 { pt3dadd( -22.3566, -109.202, -10.7559, 0.44 ) }
    dend_49 { pt3dadd( -23.1214, -109.87, -10.0586, 1.18 ) }
    dend_49 { pt3dadd( -23.4889, -110.145, -9.76809, 1.55 ) }
    dend_49 { pt3dadd( -24.7413, -111.053, -8.82784, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_49 { pt3dadd( -25.4926, -111.577, -8.31556, 0.88 ) }
    dend_49 { pt3dadd( -26.093, -112.075, -7.89222, 0.59 ) }
    dend_49 { pt3dadd( -26.4838, -112.45, -7.6077, 0.66 ) }
    dend_49 { pt3dadd( -27.0733, -113.11, -7.18291, 0.44 ) }
    dend_49 { pt3dadd( -28.243, -114.57, -6.35931, 0.37 ) }
    dend_49 { pt3dadd( -28.28, -114.62, -6.33549, 0.37 ) }
    dend_49 { pt3dadd( -29.3166, -116.097, -5.62255, 0.29 ) }
    dend_49 { pt3dadd( -29.7923, -116.798, -5.30149, 0.96 ) }
    dend_49 { pt3dadd( -30.2457, -117.53, -5.00013, 1.33 ) }
    dend_49 { pt3dadd( -30.5663, -118.08, -4.79962, 1.62 ) }
    dend_49 { pt3dadd( -30.9099, -118.781, -4.58562, 1.77 ) }
    dend_49 { pt3dadd( -31.451, -120.15, -4.1924, 0.59 ) }
    dend_49 { pt3dadd( -31.8325, -121.456, -3.85982, 0.52 ) }
    dend_49 { pt3dadd( -32.1269, -122.678, -3.5677, 0.52 ) }
    dend_49 { pt3dadd( -32.1386, -122.733, -3.55471, 0.52 ) }
    dend_49 { pt3dadd( -32.426, -124.145, -3.24964, 0.29 ) }
    dend_49 { pt3dadd( -32.5797, -124.959, -3.07685, 0.29 ) }
    dend_49 { pt3dadd( -32.7252, -125.785, -2.90868, 0.88 ) }
    dend_49 { pt3dadd( -32.8139, -126.274, -2.81038, 1.11 ) }
    dend_49 { pt3dadd( -32.9428, -127.079, -2.64471, 1.11 ) }
    dend_49 { pt3dadd( -33.1571, -128.681, -2.30144, 0.29 ) }
    dend_49 { pt3dadd( -33.2713, -129.959, -2.01104, 0.29 ) }
    dend_49 { pt3dadd( -33.308, -130.665, -1.8611, 1.33 ) }
    dend_49 { pt3dadd( -33.325, -131.135, -1.77282, 1.77 ) }
    dend_49 { pt3dadd( -33.3628, -132.538, -1.54875, 1.62 ) }
    dend_49 { pt3dadd( -33.365, -132.596, -1.54187, 1.62 ) }
    dend_49 { pt3dadd( -33.4923, -134.828, -1.39303, 0.29 ) }
    dend_49 { pt3dadd( -33.6285, -136.336, -1.3782, 0.29 ) }
    dend_49 { pt3dadd( -33.7367, -137.265, -1.37851, 0.44 ) }
    dend_49 { pt3dadd( -33.7942, -137.686, -1.38424, 0.44 ) }
    dend_49 { pt3dadd( -33.9815, -138.807, -1.42713, 0.29 ) }
    dend_49 { pt3dadd( -34.1046, -139.524, -1.45015, 1.25 ) }
    dend_49 { pt3dadd( -34.2341, -140.267, -1.46842, 1.99 ) }
    dend_49 { pt3dadd( -34.4052, -141.375, -1.45215, 1.55 ) }
    dend_49 { pt3dadd( -34.5695, -142.426, -1.43854, 0.59 ) }
    dend_49 { pt3dadd( -34.705, -143.208, -1.43226, 0.37 ) }
    dend_49 { pt3dadd( -34.8473, -143.922, -1.4159, 0.59 ) }
    dend_49 { pt3dadd( -35.0264, -144.674, -1.39334, 0.59 ) }
    dend_49 { pt3dadd( -35.208, -145.427, -1.37581, 1.11 ) }
    dend_49 { pt3dadd( -35.3415, -145.981, -1.37289, 1.11 ) }
    dend_49 { pt3dadd( -35.4449, -146.53, -1.32502, 1.11 ) }
    dend_49 { pt3dadd( -35.6209, -147.734, -1.05726, 0.37 ) }
    dend_49 { pt3dadd( -35.6281, -147.797, -1.03535, 0.37 ) }
    dend_49 { pt3dadd( -35.7489, -148.786, -0.57563, 0.29 ) }
    dend_49 { pt3dadd( -35.7644, -148.878, -0.520968, 0.29 ) }
    dend_49 { pt3dadd( -36.1228, -150.105, 0.388837, 0.29 ) }
    dend_49 { pt3dadd( -36.5588, -150.853, 1.04925, 0.29 ) }
    dend_49 { pt3dadd( -36.5984, -150.881, 1.07709, 0.29 ) }
    dend_49 { pt3dadd( -37.1281, -151.137, 1.31778, 1.03 ) }
    dend_49 { pt3dadd( -37.7507, -151.387, 1.50582, 1.55 ) }
    dend_49 { pt3dadd( -38.5097, -151.712, 1.63767, 0.37 ) }
    dend_49 { pt3dadd( -39.2996, -152.127, 1.75436, 0.37 ) }
    dend_49 { pt3dadd( -40.0912, -152.685, 1.89195, 0.37 ) }
    dend_49 { pt3dadd( -40.3793, -152.939, 1.9577, 0.96 ) }
    dend_49 { pt3dadd( -40.9667, -153.522, 2.11606, 1.25 ) }
    dend_49 { pt3dadd( -41.4324, -154.009, 2.23693, 1.47 ) }
    dend_49 { pt3dadd( -42.6422, -155.306, 2.5329, 0.44 ) }
    dend_49 { pt3dadd( -43.2808, -155.999, 2.67709, 0.81 ) }
    dend_49 { pt3dadd( -44.1813, -156.988, 2.85662, 0.59 ) }
    dend_49 { pt3dadd( -44.8557, -157.724, 2.96632, 0.88 ) }
    dend_49 { pt3dadd( -45.5039, -158.437, 3.04853, 0.59 ) }
    dend_49 { pt3dadd( -46.1296, -159.178, 3.10482, 0.44 ) }
    dend_49 { pt3dadd( -46.7265, -159.981, 3.11338, 0.88 ) }
    dend_49 { pt3dadd( -47.0997, -160.577, 3.12648, 1.47 ) }
    dend_49 { pt3dadd( -47.326, -161.013, 3.13993, 1.47 ) }
    dend_49 { pt3dadd( -47.647, -161.725, 3.15482, 0.88 ) }
    dend_49 { pt3dadd( -48.0857, -162.773, 3.14668, 0.59 ) }
    dend_49 { pt3dadd( -48.5845, -163.939, 3.0767, 0.59 ) }
    dend_49 { pt3dadd( -48.752, -164.311, 3.03842, 1.18 ) }
    dend_49 { pt3dadd( -49.0284, -164.87, 2.95832, 1.47 ) }
    dend_49 { pt3dadd( -49.5311, -165.796, 2.80271, 0.88 ) }
    dend_49 { pt3dadd( -50.185, -166.864, 2.59214, 0.52 ) }
    dend_49 { pt3dadd( -50.7828, -167.747, 2.44635, 0.52 ) }
    dend_49 { pt3dadd( -50.8217, -167.802, 2.44648, 0.52 ) }
    dend_49 { pt3dadd( -51.137, -168.287, 2.56067, 0.52 ) }
    dend_49 { pt3dadd( -51.4209, -168.749, 2.74054, 1.03 ) }
    dend_49 { pt3dadd( -51.6862, -169.228, 2.95373, 1.03 ) }
    dend_49 { pt3dadd( -52.3715, -170.549, 3.58635, 0.66 ) }
    dend_49 { pt3dadd( -53.0368, -171.959, 4.21494, 1.84 ) }
    dend_49 { pt3dadd( -53.7305, -173.562, 4.84529, 0.44 ) }
    dend_49 { pt3dadd( -54.1189, -174.542, 5.13076, 0.44 ) }
    dend_49 { pt3dadd( -54.6385, -175.939, 5.40454, 0.37 ) }
    dend_49 { pt3dadd( -54.6581, -175.994, 5.40869, 0.37 ) }
    dend_49 { pt3dadd( -54.9548, -176.789, 5.32898, 0.88 ) }
    dend_49 { pt3dadd( -55.1319, -177.233, 5.21393, 0.88 ) }
    dend_49 { pt3dadd( -55.7335, -178.67, 4.75595, 0.44 ) }
    dend_49 { pt3dadd( -55.7591, -178.732, 4.74096, 0.44 ) }
    dend_49 { pt3dadd( -56.1501, -179.678, 4.65827, 1.33 ) }
    dend_49 { pt3dadd( -56.4701, -180.464, 4.62067, 1.77 ) }
    dend_49 { pt3dadd( -56.4896, -180.518, 4.618, 1.77 ) }
    dend_49 { pt3dadd( -56.7579, -181.49, 4.59332, 2.28 ) }
    dend_49 { pt3dadd( -56.9847, -182.594, 4.65705, 0.81 ) }
    dend_49 { pt3dadd( -57.1988, -183.835, 4.7514, 0.44 ) }
    dend_49 { pt3dadd( -57.3678, -185.075, 4.85071, 0.44 ) }
    dend_49 { pt3dadd( -57.5595, -186.661, 4.99462, 0.44 ) }
    dend_49 { pt3dadd( -57.6918, -187.824, 5.10244, 0.74 ) }
    dend_49 { pt3dadd( -57.8441, -189.332, 5.22654, 0.74 ) }
    dend_49 { pt3dadd( -57.8832, -189.899, 5.27402, 1.25 ) }
    dend_49 { pt3dadd( -57.9008, -190.552, 5.31557, 1.4 ) }
    dend_49 { pt3dadd( -57.9078, -190.898, 5.34481, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_49 { pt3dadd( -57.9592, -191.895, 5.38883, 1.03 ) }
    dend_49 { pt3dadd( -58.0362, -192.907, 5.35191, 0.74 ) }
    dend_49 { pt3dadd( -58.1218, -193.918, 5.26322, 0.59 ) }
    dend_49 { pt3dadd( -58.2684, -195.171, 5.15093, 0.59 ) }
    dend_49 { pt3dadd( -58.4825, -196.458, 5.03878, 0.37 ) }
    dend_49 { pt3dadd( -58.6518, -197.258, 4.96515, 0.96 ) }
    dend_49 { pt3dadd( -58.8767, -198.076, 4.88802, 1.33 ) }
    dend_49 { pt3dadd( -59.2158, -199.009, 4.82851, 0.81 ) }
    dend_49 { pt3dadd( -59.7951, -200.249, 4.79075, 0.74 ) }
    dend_49 { pt3dadd( -60.3288, -201.227, 4.78988, 0.66 ) }
    dend_49 { pt3dadd( -60.6913, -201.853, 4.80228, 1.11 ) }
    dend_49 { pt3dadd( -61.2817, -202.798, 4.85142, 0.66 ) }
    dend_49 { pt3dadd( -61.9457, -203.746, 4.9326, 0.52 ) }
    dend_49 { pt3dadd( -62.3804, -204.289, 4.99831, 0.44 ) }
    dend_49 { pt3dadd( -62.9856, -204.957, 5.15049, 0.44 ) }
    dend_49 { pt3dadd( -63.6103, -205.644, 5.41778, 0.44 ) }
    dend_49 { pt3dadd( -64.0409, -206.118, 5.65879, 1.25 ) }
    dend_49 { pt3dadd( -64.4101, -206.563, 5.95926, 1.25 ) }
    dend_49 { pt3dadd( -64.8462, -207.231, 6.50671, 0.88 ) }
    dend_49 { pt3dadd( -65.3753, -208.25, 7.46333, 0.52 ) }
    dend_49 { pt3dadd( -65.8382, -209.352, 8.59941, 0.81 ) }
    dend_49 { pt3dadd( -65.852, -209.395, 8.64659, 0.81 ) }
    dend_49 { pt3dadd( -66.0937, -210.382, 9.69304, 0.44 ) }
    dend_49 { pt3dadd( -66.3023, -211.319, 10.6083, 0.52 ) }
    dend_49 { pt3dadd( -66.4217, -211.886, 11.0921, 0.52 ) }
    dend_49 { pt3dadd( -66.5056, -212.379, 11.4227, 0.81 ) }
    dend_49 { pt3dadd( -66.5152, -212.428, 11.4496, 0.81 ) }
    dend_49 { pt3dadd( -66.6582, -213.34, 11.8645, 0.81 ) }
    dend_49 { pt3dadd( -66.8244, -214.385, 12.2067, 0.44 ) }
    dend_49 { pt3dadd( -66.9537, -215.675, 12.5645, 0.29 ) }
    dend_49 { pt3dadd( -66.6327, -216.712, 12.861, 0.29 ) }
    dend_49 { pt3dadd( -66.5724, -216.735, 12.8657, 0.29 ) }
    dend_49 { pt3dadd( -65.6492, -216.929, 12.7423, 0.29 ) }
    dend_49 { pt3dadd( -65.4421, -216.958, 12.6905, 0.29 ) }
    dend_49 { pt3dadd( -64.2069, -217.145, 12.2015, 0.29 ) }
    dend_49 { pt3dadd( -64.1525, -217.156, 12.1692, 0.29 ) }
    dend_49 { pt3dadd( -63.6645, -217.442, 11.7057, 0.29 ) }
    dend_49 { pt3dadd( -63.0317, -218.534, 10.5516, 0.29 ) }
    dend_49 { pt3dadd( -63.0338, -218.633, 10.4775, 0.29 ) }
    dend_49 { pt3dadd( -63.1984, -219.789, 9.69603, 0.29 ) }
    dend_49 { pt3dadd( -63.4099, -220.576, 9.2212, 0.29 ) }
    dend_49 { pt3dadd( -63.804, -221.69, 8.62948, 0.29 ) }
    dend_49 { pt3dadd( -64.058, -222.224, 8.40461, 0.52 ) }
    dend_49 { pt3dadd( -64.3444, -222.677, 8.31187, 0.52 ) }
    dend_49 { pt3dadd( -66.5424, -231.81, 10.3778, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 45/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 23.2246, -34.178, 22.4439, 0.29 ) }
    dend_37 { pt3dadd( 23.8627, -34.5805, 22.6709, 0.29 ) }
    dend_37 { pt3dadd( 25.0124, -35.3056, 23.0798, 0.37 ) }
    dend_37 { pt3dadd( 25.0674, -35.3403, 23.0994, 0.37 ) }
    dend_37 { pt3dadd( 25.9425, -35.8922, 23.4107, 0.29 ) }
    dend_37 { pt3dadd( 26.7582, -36.4067, 23.7008, 0.22 ) }
    dend_37 { pt3dadd( 26.8215, -36.4466, 23.7233, 0.22 ) }
    dend_37 { pt3dadd( 35.1048, -41.2616, 25.2477, 0.22 ) }
    dend_37 { pt3dadd( 43.1197, -46.1982, 27.5713, 0.22 ) }
    dend_37 { pt3dadd( 51.4343, -49.8089, 30.7976, 0.22 ) }
    dend_37 { pt3dadd( 59.7966, -54.3164, 32.6646, 0.22 ) }
    dend_37 { pt3dadd( 68.2655, -59.0772, 32.8094, 0.22 ) }
    dend_37 { pt3dadd( 76.7969, -63.5943, 33.7039, 0.22 ) }
    dend_37 { pt3dadd( 85.455, -67.9409, 34.0171, 0.22 ) }
    dend_37 { pt3dadd( 93.6233, -72.965, 35.5535, 0.22 ) }
    dend_37 { pt3dadd( 100.658, -79.1142, 38.3357, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 23.2246, -34.178, 22.4439, 0.37 ) }
    dend_34 { pt3dadd( 24.1084, -33.9869, 22.7809, 0.37 ) }
    dend_34 { pt3dadd( 24.9328, -33.8085, 23.0952, 1.03 ) }
    dend_34 { pt3dadd( 25.4378, -33.6993, 23.2877, 1.03 ) }
    dend_34 { pt3dadd( 25.9195, -33.5951, 23.4713, 0.88 ) }
    dend_34 { pt3dadd( 25.9844, -33.581, 23.4961, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 67/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.26126, 51.3543, 14.6215, 0.81 ) }
    dend_27 { pt3dadd( -6.53361, 52.3078, 14.2732, 0.81 ) }
    dend_27 { pt3dadd( -6.78072, 53.0659, 14.0531, 0.66 ) }
    dend_27 { pt3dadd( -7.18178, 54.2166, 13.7822, 0.59 ) }
    dend_27 { pt3dadd( -7.38434, 54.7912, 13.6603, 0.44 ) }
    dend_27 { pt3dadd( -7.62146, 55.5021, 13.5308, 0.29 ) }
    dend_27 { pt3dadd( -7.81258, 56.1148, 13.4081, 0.88 ) }
    dend_27 { pt3dadd( -7.97266, 56.6051, 13.3129, 1.11 ) }
    dend_27 { pt3dadd( -8.11096, 57.0734, 13.23, 1.18 ) }
    dend_27 { pt3dadd( -8.30832, 57.7998, 13.0853, 1.03 ) }
    dend_27 { pt3dadd( -8.53463, 58.6929, 12.8377, 1.03 ) }
    dend_27 { pt3dadd( -8.76765, 59.5753, 12.5499, 0.88 ) }
    dend_27 { pt3dadd( -8.78262, 59.6299, 12.5291, 0.88 ) }
    dend_27 { pt3dadd( -8.94652, 60.1431, 12.304, 0.88 ) }
    dend_27 { pt3dadd( -9.2791, 61.0286, 11.8783, 0.74 ) }
    dend_27 { pt3dadd( -9.56041, 61.6308, 11.5726, 0.74 ) }
    dend_27 { pt3dadd( -9.82219, 62.1092, 11.3175, 1.03 ) }
    dend_27 { pt3dadd( -9.8536, 62.1639, 11.2911, 1.03 ) }
    dend_27 { pt3dadd( -10.2133, 62.7931, 10.9965, 1.03 ) }
    dend_27 { pt3dadd( -10.2401, 62.8413, 10.9734, 1.03 ) }
    dend_27 { pt3dadd( -10.4623, 63.348, 10.7656, 1.03 ) }
    dend_27 { pt3dadd( -10.6424, 63.992, 10.5114, 1.03 ) }
    dend_27 { pt3dadd( -10.694, 64.3588, 10.385, 1.03 ) }
    dend_27 { pt3dadd( -10.698, 64.4291, 10.3642, 1.03 ) }
    dend_27 { pt3dadd( -10.6871, 65.1233, 10.2157, 0.88 ) }
    dend_27 { pt3dadd( -10.6371, 66.0243, 10.1054, 0.88 ) }
    dend_27 { pt3dadd( -10.5204, 67.3157, 10.0292, 0.59 ) }
    dend_27 { pt3dadd( -10.4369, 68.1451, 10.0331, 0.59 ) }
    dend_27 { pt3dadd( -10.3666, 68.9041, 10.0442, 0.88 ) }
    dend_27 { pt3dadd( -10.2924, 69.8334, 10.072, 0.81 ) }
    dend_27 { pt3dadd( -10.2242, 70.9352, 10.0459, 0.81 ) }
    dend_27 { pt3dadd( -10.2223, 70.9956, 10.0394, 0.81 ) }
    dend_27 { pt3dadd( -10.1952, 72.3722, 9.79051, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_27 { pt3dadd( -10.1907, 73.4778, 9.51883, 1.99 ) }
    dend_27 { pt3dadd( -10.1814, 73.8614, 9.39527, 2.65 ) }
    dend_27 { pt3dadd( -10.0999, 75.7421, 8.65714, 1.47 ) }
    dend_27 { pt3dadd( -10.0022, 77.1228, 8.05764, 0.44 ) }
    dend_27 { pt3dadd( -9.90095, 78.0961, 7.62699, 0.37 ) }
    dend_27 { pt3dadd( -9.89342, 78.1426, 7.60569, 0.37 ) }
    dend_27 { pt3dadd( -9.68347, 79.1019, 7.23773, 0.37 ) }
    dend_27 { pt3dadd( -9.64945, 79.2353, 7.19904, 0.37 ) }
    dend_27 { pt3dadd( -9.4518, 79.9175, 7.11971, 0.37 ) }
    dend_27 { pt3dadd( -9.42541, 80.0056, 7.11643, 0.37 ) }
    dend_27 { pt3dadd( -9.17991, 80.9705, 7.2014, 0.37 ) }
    dend_27 { pt3dadd( -9.00756, 81.8211, 7.3578, 0.37 ) }
    dend_27 { pt3dadd( -8.91362, 82.4448, 7.50723, 0.96 ) }
    dend_27 { pt3dadd( -8.82872, 82.9972, 7.63214, 1.18 ) }
    dend_27 { pt3dadd( -8.75995, 83.4233, 7.68512, 1.47 ) }
    dend_27 { pt3dadd( -8.62761, 84.1989, 7.72393, 1.47 ) }
    dend_27 { pt3dadd( -8.473, 85.007, 7.68507, 1.25 ) }
    dend_27 { pt3dadd( -8.28667, 85.8482, 7.5333, 0.44 ) }
    dend_27 { pt3dadd( -8.02812, 86.8465, 7.28193, 0.37 ) }
    dend_27 { pt3dadd( -7.65263, 88.2188, 6.85968, 0.37 ) }
    dend_27 { pt3dadd( -7.64001, 88.2664, 6.84369, 0.37 ) }
    dend_27 { pt3dadd( -7.37865, 89.3184, 6.46717, 1.84 ) }
    dend_27 { pt3dadd( -7.19675, 90.1149, 6.19203, 2.65 ) }
    dend_27 { pt3dadd( -7.11493, 90.5292, 6.06544, 3.09 ) }
    dend_27 { pt3dadd( -6.88972, 91.9708, 5.69481, 0.59 ) }
    dend_27 { pt3dadd( -6.79335, 92.8453, 5.53594, 0.59 ) }
    dend_27 { pt3dadd( -6.75051, 93.566, 5.4306, 0.52 ) }
    dend_27 { pt3dadd( -6.7535, 94.2693, 5.39171, 0.88 ) }
    dend_27 { pt3dadd( -6.77967, 94.8429, 5.42211, 1.18 ) }
    dend_27 { pt3dadd( -6.81053, 95.3653, 5.5141, 1.25 ) }
    dend_27 { pt3dadd( -6.8441, 95.947, 5.7072, 1.25 ) }
    dend_27 { pt3dadd( -6.86732, 96.6283, 5.99932, 0.81 ) }
    dend_27 { pt3dadd( -6.87647, 97.7385, 6.53433, 0.52 ) }
    dend_27 { pt3dadd( -6.86629, 98.4913, 6.90694, 0.81 ) }
    dend_27 { pt3dadd( -6.83118, 99.4573, 7.37676, 1.11 ) }
    dend_27 { pt3dadd( -6.80248, 99.9063, 7.58492, 0.88 ) }
    dend_27 { pt3dadd( -6.73481, 100.663, 7.89895, 0.29 ) }
    dend_27 { pt3dadd( -6.66162, 101.384, 8.13625, 0.29 ) }
    dend_27 { pt3dadd( -6.59206, 102.072, 8.22277, 1.03 ) }
    dend_27 { pt3dadd( -6.55831, 102.453, 8.20259, 1.77 ) }
    dend_27 { pt3dadd( -6.53444, 102.83, 8.1391, 1.92 ) }
    dend_27 { pt3dadd( -6.5016, 103.388, 8.01586, 1.77 ) }
    dend_27 { pt3dadd( -6.47639, 103.876, 7.89395, 1.18 ) }
    dend_27 { pt3dadd( -6.41822, 105.276, 7.51811, 0.52 ) }
    dend_27 { pt3dadd( -6.39657, 106.248, 7.24882, 0.52 ) }
    dend_27 { pt3dadd( -6.39137, 107.284, 6.96429, 1.03 ) }
    dend_27 { pt3dadd( -6.39255, 107.344, 6.95055, 1.03 ) }
    dend_27 { pt3dadd( -6.4188, 107.85, 6.86742, 1.03 ) }
    dend_27 { pt3dadd( -6.42385, 107.91, 6.86326, 1.03 ) }
    dend_27 { pt3dadd( -6.46274, 108.225, 6.88335, 1.18 ) }
    dend_27 { pt3dadd( -6.52793, 108.679, 6.93473, 0.59 ) }
    dend_27 { pt3dadd( -6.68105, 109.63, 7.03767, 0.59 ) }
    dend_27 { pt3dadd( -6.82012, 110.393, 7.10569, 1.33 ) }
    dend_27 { pt3dadd( -6.90381, 110.831, 7.11667, 1.92 ) }
    dend_27 { pt3dadd( -6.96376, 111.142, 7.11136, 1.92 ) }
    dend_27 { pt3dadd( -7.14362, 112.011, 7.06316, 1.03 ) }
    dend_27 { pt3dadd( -7.31675, 112.756, 6.9947, 0.81 ) }
    dend_27 { pt3dadd( -7.5789, 113.781, 6.86285, 0.81 ) }
    dend_27 { pt3dadd( -7.86091, 114.818, 6.71618, 0.52 ) }
    dend_27 { pt3dadd( -7.89488, 114.933, 6.69971, 0.52 ) }
    dend_27 { pt3dadd( -8.1883, 115.818, 6.58139, 0.74 ) }
    dend_27 { pt3dadd( -8.43146, 116.446, 6.50093, 0.96 ) }
    dend_27 { pt3dadd( -8.64811, 116.937, 6.44576, 0.66 ) }
    dend_27 { pt3dadd( -8.67453, 116.991, 6.44303, 0.66 ) }
    dend_27 { pt3dadd( -9.02854, 117.68, 6.44927, 0.52 ) }
    dend_27 { pt3dadd( -9.43327, 118.472, 6.46769, 0.52 ) }
    dend_27 { pt3dadd( -9.93016, 119.465, 6.4789, 0.37 ) }
    dend_27 { pt3dadd( -10.2644, 120.149, 6.47955, 1.18 ) }
    dend_27 { pt3dadd( -10.6431, 120.973, 6.47433, 1.99 ) }
    dend_27 { pt3dadd( -10.7762, 121.281, 6.47012, 2.21 ) }
    dend_27 { pt3dadd( -11.0756, 122.102, 6.43691, 1.62 ) }
    dend_27 { pt3dadd( -11.3581, 123.052, 6.37467, 0.44 ) }
    dend_27 { pt3dadd( -11.5439, 123.883, 6.29894, 0.37 ) }
    dend_27 { pt3dadd( -11.6446, 124.504, 6.21845, 0.37 ) }
    dend_27 { pt3dadd( -11.6505, 124.555, 6.20909, 0.37 ) }
    dend_27 { pt3dadd( -11.7227, 125.415, 6.04338, 0.37 ) }
    dend_27 { pt3dadd( -11.7267, 125.484, 6.03022, 0.37 ) }
    dend_27 { pt3dadd( -11.7651, 126.225, 5.86343, 0.52 ) }
    dend_27 { pt3dadd( -11.8027, 126.841, 5.68849, 0.81 ) }
    dend_27 { pt3dadd( -11.8588, 127.687, 5.44163, 1.47 ) }
    dend_27 { pt3dadd( -11.8773, 127.941, 5.36847, 2.06 ) }
    dend_27 { pt3dadd( -11.908, 128.477, 5.20206, 2.58 ) }
    dend_27 { pt3dadd( -11.9598, 130.089, 4.6575, 0.29 ) }
    dend_27 { pt3dadd( -11.9587, 130.94, 4.33831, 0.29 ) }
    dend_27 { pt3dadd( -11.8857, 131.933, 3.93024, 0.29 ) }
    dend_27 { pt3dadd( -11.8688, 132.05, 3.87848, 0.29 ) }
    dend_27 { pt3dadd( -11.6975, 132.952, 3.46635, 0.88 ) }
    dend_27 { pt3dadd( -11.685, 133.006, 3.44164, 0.88 ) }
    dend_27 { pt3dadd( -11.623, 133.259, 3.33061, 0.88 ) }
    dend_27 { pt3dadd( -11.3317, 134.577, 2.7695, 0.29 ) }
    dend_27 { pt3dadd( -11.1946, 135.313, 2.45101, 1.03 ) }
    dend_27 { pt3dadd( -11.0895, 136.133, 2.1349, 1.33 ) }
    dend_27 { pt3dadd( -11.0709, 136.442, 2.03755, 1.47 ) }
    dend_27 { pt3dadd( -11.0547, 136.963, 1.89298, 1.55 ) }
    dend_27 { pt3dadd( -11.0625, 137.214, 1.83746, 1.55 ) }
    dend_27 { pt3dadd( -11.0684, 137.265, 1.82999, 1.55 ) }
    dend_27 { pt3dadd( -11.2296, 138.486, 1.70655, 0.29 ) }
    dend_27 { pt3dadd( -11.3188, 139.173, 1.65098, 1.4 ) }
    dend_27 { pt3dadd( -11.3418, 139.374, 1.63645, 1.84 ) }
    dend_27 { pt3dadd( -11.4003, 140.061, 1.59585, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_27 { pt3dadd( -11.4451, 140.828, 1.60808, 0.29 ) }
    dend_27 { pt3dadd( -11.4571, 141.357, 1.65106, 0.22 ) }
    dend_27 { pt3dadd( -11.4542, 141.802, 1.72176, 0.81 ) }
    dend_27 { pt3dadd( -11.4513, 141.929, 1.74935, 1.03 ) }
    dend_27 { pt3dadd( -11.4396, 142.432, 1.87429, 0.81 ) }
    dend_27 { pt3dadd( -11.4037, 143.552, 2.17052, 0.29 ) }
    dend_27 { pt3dadd( -11.408, 143.802, 2.23432, 0.37 ) }
    dend_27 { pt3dadd( -11.4228, 144.214, 2.34524, 0.37 ) }
    dend_27 { pt3dadd( -11.4595, 145.084, 2.59842, 1.33 ) }
    dend_27 { pt3dadd( -11.4754, 145.531, 2.76767, 1.77 ) }
    dend_27 { pt3dadd( -11.5117, 146.407, 3.13612, 0.37 ) }
    dend_27 { pt3dadd( -11.5416, 147.162, 3.4628, 0.29 ) }
    dend_27 { pt3dadd( -11.5719, 148.169, 3.91268, 0.88 ) }
    dend_27 { pt3dadd( -11.5822, 148.825, 4.19729, 1.33 ) }
    dend_27 { pt3dadd( -11.5903, 150.166, 4.73772, 1.03 ) }
    dend_27 { pt3dadd( -11.591, 151.135, 5.09099, 0.29 ) }
    dend_27 { pt3dadd( -11.5917, 151.432, 5.18507, 0.59 ) }
    dend_27 { pt3dadd( -11.5951, 152.002, 5.30785, 0.59 ) }
    dend_27 { pt3dadd( -11.6288, 152.722, 5.37016, 0.29 ) }
    dend_27 { pt3dadd( -11.6764, 153.478, 5.36885, 0.29 ) }
    dend_27 { pt3dadd( -11.728, 154.181, 5.32187, 0.96 ) }
    dend_27 { pt3dadd( -11.7519, 154.493, 5.30394, 1.18 ) }
    dend_27 { pt3dadd( -11.8388, 155.577, 5.25813, 0.29 ) }
    dend_27 { pt3dadd( -11.9212, 156.54, 5.23721, 1.62 ) }
    dend_27 { pt3dadd( -11.981, 157.12, 5.23558, 0.44 ) }
    dend_27 { pt3dadd( -12.0728, 157.818, 5.23251, 0.29 ) }
    dend_27 { pt3dadd( -12.1613, 158.393, 5.24712, 0.59 ) }
    dend_27 { pt3dadd( -12.22, 158.708, 5.26401, 0.74 ) }
    dend_27 { pt3dadd( -12.4246, 159.586, 5.35239, 0.29 ) }
    dend_27 { pt3dadd( -12.6993, 160.622, 5.5, 0.29 ) }
    dend_27 { pt3dadd( -12.792, 160.923, 5.55402, 0.22 ) }
    dend_27 { pt3dadd( -13.0801, 161.771, 5.73042, 0.22 ) }
    dend_27 { pt3dadd( -13.2637, 162.269, 5.84971, 0.22 ) }
    dend_27 { pt3dadd( -13.5196, 162.899, 6.02554, 0.22 ) }
    dend_27 { pt3dadd( -13.5439, 162.951, 6.04433, 0.22 ) }
    dend_27 { pt3dadd( -13.7585, 163.352, 6.23391, 0.44 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 36/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.26126, 51.3543, 14.6215, 0.37 ) }
    dend_26 { pt3dadd( -7.06656, 52.042, 15.181, 0.37 ) }
    dend_26 { pt3dadd( -7.45385, 52.4152, 15.4193, 0.37 ) }
    dend_26 { pt3dadd( -7.87335, 52.8515, 15.6611, 0.37 ) }
    dend_26 { pt3dadd( -8.30639, 53.302, 15.9108, 0.44 ) }
    dend_26 { pt3dadd( -8.61013, 53.6179, 16.0859, 0.59 ) }
    dend_26 { pt3dadd( -9.10747, 54.1352, 16.3726, 0.29 ) }
    dend_26 { pt3dadd( -9.36768, 54.4696, 16.5026, 0.29 ) }
    dend_26 { pt3dadd( -9.68968, 54.9347, 16.6675, 0.66 ) }
    dend_26 { pt3dadd( -14.8791, 60.1774, 18.4659, 0.66 ) }
    dend_26 { pt3dadd( -19.9551, 65.7561, 19.527, 0.66 ) }
    dend_26 { pt3dadd( -24.6195, 71.3047, 21.8464, 0.66 ) }
    dend_26 { pt3dadd( -28.6717, 77.5252, 23.7264, 0.66 ) }
    dend_26 { pt3dadd( -32.4088, 83.8403, 25.9363, 0.66 ) }
    dend_26 { pt3dadd( -36.0063, 89.5288, 29.4959, 0.66 ) }
    dend_26 { pt3dadd( -39.7468, 95.1756, 32.9686, 0.66 ) }
    dend_26 { pt3dadd( -43.0676, 100.43, 37.3099, 0.66 ) }
    dend_26 { pt3dadd( -47.2054, 105.56, 41.05, 0.66 ) }
    dend_26 { pt3dadd( -51.7822, 110.526, 44.4696, 0.66 ) }
    dend_26 { pt3dadd( -56.4405, 115.674, 47.5178, 0.66 ) }
    dend_26 { pt3dadd( -59.6818, 121.507, 51.2009, 0.66 ) }
    dend_26 { pt3dadd( -63.1252, 127.599, 54.2757, 0.66 ) }
    dend_26 { pt3dadd( -67.3057, 133.557, 56.5926, 0.66 ) }
    dend_26 { pt3dadd( -71.0978, 139.251, 59.9387, 0.66 ) }
    dend_26 { pt3dadd( -74.1612, 144.273, 64.6949, 0.66 ) }
    dend_26 { pt3dadd( -77.7525, 148.923, 69.429, 0.66 ) }
    dend_26 { pt3dadd( -80.1586, 153.648, 74.795, 0.66 ) }
    dend_26 { pt3dadd( -82.4607, 158.196, 80.3413, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 64/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 55.3889, -248.028, -1.4869, 0.44 ) }
    dend_20 { pt3dadd( 55.5212, -248.5, -1.83935, 0.44 ) }
    dend_20 { pt3dadd( 55.6148, -249.079, -2.24207, 0.22 ) }
    dend_20 { pt3dadd( 55.6449, -249.37, -2.42202, 0.59 ) }
    dend_20 { pt3dadd( 55.7245, -250.746, -3.18204, 0.22 ) }
    dend_20 { pt3dadd( 55.7148, -251.18, -3.40875, 0.59 ) }
    dend_20 { pt3dadd( 55.6941, -251.634, -3.62129, 0.59 ) }
    dend_20 { pt3dadd( 55.5901, -252.844, -4.13521, 0.29 ) }
    dend_20 { pt3dadd( 55.525, -253.457, -4.36095, 1.18 ) }
    dend_20 { pt3dadd( 55.4764, -253.947, -4.51386, 1.47 ) }
    dend_20 { pt3dadd( 55.3192, -255.785, -4.9596, 0.22 ) }
    dend_20 { pt3dadd( 55.2941, -256.938, -5.18825, 0.22 ) }
    dend_20 { pt3dadd( 55.2966, -257.016, -5.20008, 0.22 ) }
    dend_20 { pt3dadd( 55.3598, -257.741, -5.27495, 0.22 ) }
    dend_20 { pt3dadd( 55.4637, -258.558, -5.3437, 1.11 ) }
    dend_20 { pt3dadd( 55.5374, -258.965, -5.36318, 1.55 ) }
    dend_20 { pt3dadd( 56.0361, -261.195, -5.35924, 0.15 ) }
    dend_20 { pt3dadd( 56.1724, -261.75, -5.36094, 0.66 ) }
    dend_20 { pt3dadd( 56.1915, -261.826, -5.36127, 0.66 ) }
    dend_20 { pt3dadd( 56.236, -262.001, -5.36214, 0.66 ) }
    dend_20 { pt3dadd( 56.7649, -263.898, -5.34379, 0.15 ) }
    dend_20 { pt3dadd( 56.8194, -264.08, -5.3395, 0.44 ) }
    dend_20 { pt3dadd( 57.1476, -265.124, -5.29504, 0.15 ) }
    dend_20 { pt3dadd( 57.3125, -265.663, -5.21651, 0.44 ) }
    dend_20 { pt3dadd( 57.3298, -265.738, -5.19876, 0.44 ) }
    dend_20 { pt3dadd( 57.4838, -266.782, -4.86091, 0.22 ) }
    dend_20 { pt3dadd( 57.4838, -266.782, -4.86091, 0.37 ) }
    dend_20 { pt3dadd( 57.4164, -267.954, -4.34143, 0.22 ) }
    dend_20 { pt3dadd( 57.2308, -269.467, -3.66043, 0.22 ) }
    dend_20 { pt3dadd( 57.0811, -270.455, -3.20166, 0.88 ) }
    dend_20 { pt3dadd( 56.9831, -270.971, -2.96061, 0.88 ) }
    dend_20 { pt3dadd( 56.7438, -271.874, -2.5361, 0.22 ) }
    dend_20 { pt3dadd( 56.7155, -271.971, -2.49137, 0.22 ) }
    dend_20 { pt3dadd( 56.3123, -273.057, -2.01631, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 55.3889, -248.028, -1.4869, 0.22 ) }
    dend_19 { pt3dadd( 55.147, -249.443, -1.62667, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_19 { pt3dadd( 55.004, -250.279, -1.70925, 0.37 ) }
    dend_19 { pt3dadd( 54.6498, -252.35, -1.91384, 0.22 ) }
    dend_19 { pt3dadd( 54.5231, -253.091, -1.98703, 0.66 ) }
    dend_19 { pt3dadd( 53.6468, -265.643, -1.47414, 0.66 ) }
    dend_19 { pt3dadd( 51.239, -277.904, -0.17714, 0.66 ) }
    dend_19 { pt3dadd( 47.8128, -289.934, 0.751097, 0.66 ) }
    dend_19 { pt3dadd( 43.4448, -301.306, 3.45589, 0.66 ) }
    dend_19 { pt3dadd( 39.6008, -313.107, 5.10144, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 8/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -18.632, -37.1895, 6.30522, 1.18 ) }
    dend_9 { pt3dadd( -19.5976, -37.6639, 6.23383, 1.18 ) }
    dend_9 { pt3dadd( -20.832, -38.5662, 6.20615, 1.11 ) }
    dend_9 { pt3dadd( -21.9384, -39.7004, 6.23639, 1.03 ) }
    dend_9 { pt3dadd( -22.6164, -40.6982, 6.28774, 1.03 ) }
    dend_9 { pt3dadd( -23.2202, -41.7419, 6.34942, 1.4 ) }
    dend_9 { pt3dadd( -23.9294, -43.1893, 6.43249, 1.4 ) }
    dend_9 { pt3dadd( -24.437, -44.7419, 6.54531, 1.25 ) }
    dend_9 { pt3dadd( -24.8532, -46.4996, 6.71487, 1.11 ) }
    dend_9 { pt3dadd( -25.1864, -48.7579, 6.91895, 1.11 ) }
    dend_9 { pt3dadd( -25.1938, -48.8513, 6.92665, 1.11 ) }
    dend_9 { pt3dadd( -25.2098, -49.9791, 7.00941, 1.92 ) }
    dend_9 { pt3dadd( -25.1554, -51.0276, 7.07299, 2.21 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.632, -37.1895, 6.30522, 1.25 ) }
    dend_4 { pt3dadd( -18.7473, -38.5635, 6.40109, 1.25 ) }
    dend_4 { pt3dadd( -18.8481, -40.1649, 6.46503, 1.03 ) }
    dend_4 { pt3dadd( -18.8489, -40.974, 6.50138, 1.25 ) }
    dend_4 { pt3dadd( -18.8063, -41.7971, 6.52458, 1.25 ) }
    dend_4 { pt3dadd( -18.6371, -43.0993, 6.58372, 0.88 ) }
    dend_4 { pt3dadd( -18.5486, -43.5217, 6.61488, 0.88 ) }
    dend_4 { pt3dadd( -18.34, -44.1869, 6.66374, 0.74 ) }
    dend_4 { pt3dadd( -17.8621, -45.3818, 6.77671, 1.25 ) }
    dend_4 { pt3dadd( -17.3924, -46.4092, 6.9528, 1.4 ) }
    dend_4 { pt3dadd( -16.5677, -48.1567, 7.31431, 1.18 ) }
    dend_4 { pt3dadd( -15.8352, -49.7386, 7.68071, 1.03 ) }
    dend_4 { pt3dadd( -15.3028, -50.9991, 7.98321, 1.18 ) }
    dend_4 { pt3dadd( -14.6234, -52.8602, 8.42259, 1.4 ) }
    dend_4 { pt3dadd( -13.8357, -55.4916, 9.02361, 1.33 ) }
    dend_4 { pt3dadd( -13.5664, -56.6433, 9.27775, 1.62 ) }
    dend_4 { pt3dadd( -13.4352, -57.4365, 9.44076, 1.62 ) }
    dend_4 { pt3dadd( -13.3106, -58.625, 9.66353, 1.62 ) }
    dend_4 { pt3dadd( -13.2321, -60.1381, 9.92414, 1.62 ) }
    dend_4 { pt3dadd( -13.2283, -61.6126, 10.1242, 1.4 ) }
    dend_4 { pt3dadd( -13.2459, -62.7229, 10.2612, 1.4 ) }
    dend_4 { pt3dadd( -13.2504, -64.4493, 10.5222, 1.55 ) }
    dend_4 { pt3dadd( -13.2219, -65.573, 10.7047, 1.47 ) }
    dend_4 { pt3dadd( -13.1181, -66.6926, 10.9114, 1.11 ) }
    dend_4 { pt3dadd( -12.9263, -67.77, 11.1174, 1.11 ) }
    dend_4 { pt3dadd( -12.5064, -69.4312, 11.3977, 0.88 ) }
    dend_4 { pt3dadd( -12.4851, -69.4929, 11.4061, 0.88 ) }
    dend_4 { pt3dadd( -12.1313, -70.2775, 11.4588, 0.88 ) }
    dend_4 { pt3dadd( -11.2047, -71.9621, 11.3611, 0.74 ) }
    dend_4 { pt3dadd( -10.7455, -72.7748, 11.1702, 0.74 ) }
    dend_4 { pt3dadd( -10.5689, -73.1588, 11.0134, 1.4 ) }
    dend_4 { pt3dadd( -10.3513, -73.8495, 10.6713, 1.62 ) }
    dend_4 { pt3dadd( -10.234, -74.4675, 10.3868, 1.77 ) }
    dend_4 { pt3dadd( -10.1174, -76.1381, 9.73831, 1.18 ) }
    dend_4 { pt3dadd( -10.0729, -77.608, 9.41092, 0.88 ) }
    dend_4 { pt3dadd( -10.0229, -79.2186, 9.29159, 1.11 ) }
    dend_4 { pt3dadd( -9.96241, -80.5029, 9.45057, 1.11 ) }
    dend_4 { pt3dadd( -9.87982, -81.794, 9.91116, 1.11 ) }
    dend_4 { pt3dadd( -9.77759, -83.0831, 10.73, 1.25 ) }
    dend_4 { pt3dadd( -9.51341, -85.468, 12.9262, 1.11 ) }
    dend_4 { pt3dadd( -9.50799, -85.5106, 12.9742, 1.11 ) }
    dend_4 { pt3dadd( -9.33532, -86.6492, 14.4549, 0.88 ) }
    dend_4 { pt3dadd( -9.20229, -87.472, 15.6543, 1.11 ) }
    dend_4 { pt3dadd( -9.05771, -88.4354, 17.2035, 0.66 ) }
    dend_4 { pt3dadd( -8.99381, -88.9882, 18.1446, 1.55 ) }
    dend_4 { pt3dadd( -9.01193, -89.5053, 18.966, 1.77 ) }
    dend_4 { pt3dadd( -9.03761, -90.2376, 20.0801, 1.99 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 68/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 33.2944, -47.1443, -60.3513, 0.81 ) }
    dend_55 { pt3dadd( 35.7052, -46.7833, -62.1567, 0.81 ) }
    dend_55 { pt3dadd( 35.7371, -46.7845, -62.1936, 0.81 ) }
    dend_55 { pt3dadd( 36.1318, -46.8461, -62.7036, 0.74 ) }
    dend_55 { pt3dadd( 36.1537, -46.853, -62.7387, 0.74 ) }
    dend_55 { pt3dadd( 36.8004, -47.0814, -63.8313, 0.22 ) }
    dend_55 { pt3dadd( 37.2064, -47.2377, -64.513, 1.03 ) }
    dend_55 { pt3dadd( 38.4197, -47.8339, -66.6612, 0.44 ) }
    dend_55 { pt3dadd( 38.8816, -48.054, -67.5329, 2.73 ) }
    dend_55 { pt3dadd( 40.0408, -48.5118, -70.1114, 0.29 ) }
    dend_55 { pt3dadd( 40.0616, -48.5182, -70.1632, 0.29 ) }
    dend_55 { pt3dadd( 40.1841, -48.5291, -70.6053, 0.29 ) }
    dend_55 { pt3dadd( 40.262, -48.4782, -70.9654, 0.29 ) }
    dend_55 { pt3dadd( 40.4301, -48.2203, -71.8592, 1.25 ) }
    dend_55 { pt3dadd( 40.7764, -47.5371, -73.7866, 1.55 ) }
    dend_55 { pt3dadd( 40.7843, -47.5194, -73.8322, 1.55 ) }
    dend_55 { pt3dadd( 41.2956, -46.5919, -76.5589, 1.55 ) }
    dend_55 { pt3dadd( 41.6726, -46.1879, -78.3932, 0.88 ) }
    dend_55 { pt3dadd( 41.7904, -46.1207, -78.8576, 0.81 ) }
    dend_55 { pt3dadd( 42.1731, -46.0438, -80.0185, 0.29 ) }
    dend_55 { pt3dadd( 42.4067, -46.0428, -80.5782, 0.29 ) }
    dend_55 { pt3dadd( 42.7895, -46.0984, -81.4508, 1.99 ) }
    dend_55 { pt3dadd( 44.5377, -46.5939, -84.9782, 0.29 ) }
    dend_55 { pt3dadd( 44.9287, -46.7411, -85.7663, 1.77 ) }
    dend_55 { pt3dadd( 45.7521, -47.057, -87.4377, 0.29 ) }
    dend_55 { pt3dadd( 46.1016, -47.1723, -88.1235, 1.77 ) }
    dend_55 { pt3dadd( 47.2173, -47.4552, -90.1237, 0.29 ) }
    dend_55 { pt3dadd( 47.7843, -47.5531, -91.0378, 1.47 ) }
    dend_55 { pt3dadd( 48.0047, -47.5783, -91.3424, 1.92 ) }
    dend_55 { pt3dadd( 48.0324, -47.5796, -91.3825, 1.92 ) }
    dend_55 { pt3dadd( 49.0738, -47.464, -92.7931, 0.37 ) }
    dend_55 { pt3dadd( 49.4513, -47.3605, -93.2719, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_55 { pt3dadd( 50.0894, -47.1111, -93.9117, 0.29 ) }
    dend_55 { pt3dadd( 50.152, -47.0886, -93.9737, 0.29 ) }
    dend_55 { pt3dadd( 50.5857, -46.9798, -94.3934, 0.29 ) }
    dend_55 { pt3dadd( 51.2762, -46.9614, -95.0116, 0.96 ) }
    dend_55 { pt3dadd( 51.5108, -47.0328, -95.1875, 0.96 ) }
    dend_55 { pt3dadd( 52.2685, -47.4329, -95.7709, 0.29 ) }
    dend_55 { pt3dadd( 52.7256, -47.7986, -96.1326, 0.22 ) }
    dend_55 { pt3dadd( 53.0472, -48.1075, -96.3927, 0.22 ) }
    dend_55 { pt3dadd( 53.5586, -48.658, -96.795, 1.47 ) }
    dend_55 { pt3dadd( 53.8781, -49.0099, -97.0396, 1.62 ) }
    dend_55 { pt3dadd( 54.6986, -49.8703, -97.6491, 0.22 ) }
    dend_55 { pt3dadd( 55.3586, -50.5035, -98.1586, 0.22 ) }
    dend_55 { pt3dadd( 55.4892, -50.6233, -98.2741, 0.22 ) }
    dend_55 { pt3dadd( 55.8466, -50.9265, -98.6062, 0.22 ) }
    dend_55 { pt3dadd( 56.299, -51.3028, -99.0539, 1.11 ) }
    dend_55 { pt3dadd( 56.6415, -51.6047, -99.4198, 1.25 ) }
    dend_55 { pt3dadd( 57.3328, -52.2418, -100.107, 0.29 ) }
    dend_55 { pt3dadd( 57.7327, -52.6124, -100.503, 0.44 ) }
    dend_55 { pt3dadd( 57.8242, -52.7131, -100.597, 0.44 ) }
    dend_55 { pt3dadd( 57.8521, -52.7405, -100.627, 0.44 ) }
    dend_55 { pt3dadd( 58.2435, -53.0665, -101.059, 0.22 ) }
    dend_55 { pt3dadd( 58.72, -53.4129, -101.582, 0.22 ) }
    dend_55 { pt3dadd( 59.1609, -53.6537, -102.111, 1.25 ) }
    dend_55 { pt3dadd( 59.3772, -53.7374, -102.39, 1.69 ) }
    dend_55 { pt3dadd( 60.4327, -54.1565, -104.047, 0.22 ) }
    dend_55 { pt3dadd( 60.7801, -54.2983, -104.643, 1.25 ) }
    dend_55 { pt3dadd( 60.9556, -54.37, -104.963, 1.55 ) }
    dend_55 { pt3dadd( 62.0104, -54.8609, -107.07, 0.15 ) }
    dend_55 { pt3dadd( 62.4635, -55.0721, -108.075, 1.33 ) }
    dend_55 { pt3dadd( 63.2444, -55.4604, -109.867, 0.37 ) }
    dend_55 { pt3dadd( 63.4085, -55.5625, -110.272, 1.11 ) }
    dend_55 { pt3dadd( 63.5567, -55.6514, -110.633, 1.25 ) }
    dend_55 { pt3dadd( 64.3324, -56.053, -112.504, 1.62 ) }
    dend_55 { pt3dadd( 65.495, -56.4976, -115.378, 1.03 ) }
    dend_55 { pt3dadd( 65.7507, -56.5559, -115.992, 0.44 ) }
    dend_55 { pt3dadd( 66.2638, -56.549, -117.248, 1.62 ) }
    dend_55 { pt3dadd( 66.8455, -56.4302, -118.77, 0.52 ) }
    dend_55 { pt3dadd( 67.1227, -56.3171, -119.535, 1.33 ) }
    dend_55 { pt3dadd( 67.9751, -55.7259, -121.957, 0.66 ) }
    dend_55 { pt3dadd( 68.1644, -55.5501, -122.47, 1.03 ) }
    dend_55 { pt3dadd( 68.6973, -54.9728, -123.841, 0.22 ) }
    dend_55 { pt3dadd( 68.8304, -54.8153, -124.136, 0.22 ) }
    dend_55 { pt3dadd( 68.8516, -54.794, -124.176, 0.22 ) }
    dend_55 { pt3dadd( 68.9906, -54.6905, -124.373, 0.22 ) }
    dend_55 { pt3dadd( 69.4808, -54.4297, -124.786, 1.11 ) }
    dend_55 { pt3dadd( 69.8012, -54.2959, -125.013, 1.4 ) }
    dend_55 { pt3dadd( 69.8414, -54.2852, -125.039, 1.4 ) }
    dend_55 { pt3dadd( 71.3796, -53.9573, -126.101, 0.22 ) }
    dend_55 { pt3dadd( 71.7492, -53.8949, -126.367, 0.22 ) }
    dend_55 { pt3dadd( 72.2874, -53.8279, -126.763, 1.25 ) }
    dend_55 { pt3dadd( 72.6144, -53.8083, -127.012, 1.55 ) }
    dend_55 { pt3dadd( 73.9017, -53.8439, -127.958, 0.37 ) }
    dend_55 { pt3dadd( 74.284, -53.9159, -128.249, 0.22 ) }
    dend_55 { pt3dadd( 74.587, -54.0288, -128.476, 0.66 ) }
    dend_55 { pt3dadd( 74.8518, -54.155, -128.691, 0.66 ) }
    dend_55 { pt3dadd( 75.2293, -54.3762, -129.018, 0.22 ) }
    dend_55 { pt3dadd( 75.5648, -54.6169, -129.344, 1.47 ) }
    dend_55 { pt3dadd( 76.6898, -55.6713, -130.569, 0.22 ) }
    dend_55 { pt3dadd( 76.8802, -55.8813, -130.809, 0.66 ) }
    dend_55 { pt3dadd( 76.8991, -55.9069, -130.837, 0.66 ) }
    dend_55 { pt3dadd( 77.074, -56.1911, -131.137, 0.74 ) }
    dend_55 { pt3dadd( 77.4446, -56.8959, -131.846, 0.29 ) }
    dend_55 { pt3dadd( 77.6441, -57.2489, -132.226, 0.29 ) }
    dend_55 { pt3dadd( 77.6652, -57.2813, -132.258, 0.29 ) }
    dend_55 { pt3dadd( 77.9213, -57.6005, -132.595, 0.29 ) }
    dend_55 { pt3dadd( 78.3855, -58.0923, -133.097, 1.4 ) }
    dend_55 { pt3dadd( 78.4992, -58.1994, -133.199, 1.4 ) }
    dend_55 { pt3dadd( 79.5382, -59.0636, -133.99, 0.29 ) }
    dend_55 { pt3dadd( 79.9674, -59.4021, -134.307, 0.29 ) }
    dend_55 { pt3dadd( 80.0014, -59.4282, -134.331, 0.29 ) }
    dend_55 { pt3dadd( 80.441, -59.756, -134.631, 1.25 ) }
    dend_55 { pt3dadd( 80.8069, -60.0618, -134.862, 1.33 ) }
    dend_55 { pt3dadd( 81.6779, -60.8798, -135.466, 0.22 ) }
    dend_55 { pt3dadd( 81.7086, -60.9125, -135.488, 0.22 ) }
    dend_55 { pt3dadd( 81.9999, -61.1622, -135.751, 0.22 ) }
    dend_55 { pt3dadd( 82.0362, -61.1867, -135.786, 0.22 ) }
    dend_55 { pt3dadd( 82.4063, -61.3696, -136.157, 0.44 ) }
    dend_55 { pt3dadd( 83.0768, -61.6644, -136.857, 1.4 ) }
    dend_55 { pt3dadd( 83.3128, -61.7787, -137.098, 1.62 ) }
    dend_55 { pt3dadd( 84.3587, -62.3496, -138.109, 0.22 ) }
    dend_55 { pt3dadd( 84.5418, -62.4582, -138.29, 0.81 ) }
    dend_55 { pt3dadd( 84.7529, -62.5757, -138.487, 0.81 ) }
    dend_55 { pt3dadd( 85.6222, -63.0587, -139.248, 0.22 ) }
    dend_55 { pt3dadd( 86.0844, -63.3389, -139.618, 1.18 ) }
    dend_55 { pt3dadd( 86.4999, -63.6292, -139.946, 1.25 ) }
    dend_55 { pt3dadd( 87.4316, -64.4772, -140.666, 0.22 ) }
    dend_55 { pt3dadd( 87.7251, -64.7659, -140.902, 0.22 ) }
    dend_55 { pt3dadd( 88.0938, -65.1431, -141.19, 0.74 ) }
    dend_55 { pt3dadd( 88.2874, -65.3401, -141.327, 0.74 ) }
    dend_55 { pt3dadd( 88.3184, -65.371, -141.351, 0.74 ) }
    dend_55 { pt3dadd( 88.9611, -65.9816, -141.843, 0.22 ) }
    dend_55 { pt3dadd( 89.0269, -66.0403, -141.888, 0.22 ) }
    dend_55 { pt3dadd( 89.4853, -66.4033, -142.178, 1.18 ) }
    dend_55 { pt3dadd( 89.9675, -66.715, -142.461, 1.18 ) }
    dend_55 { pt3dadd( 90.9861, -67.2883, -143.015, 0.22 ) }
    dend_55 { pt3dadd( 91.2951, -67.4391, -143.17, 0.37 ) }
    dend_55 { pt3dadd( 91.518, -67.5299, -143.27, 0.37 ) }
    dend_55 { pt3dadd( 92.2719, -67.8118, -143.584, 0.22 ) }
    dend_55 { pt3dadd( 92.7582, -67.9699, -143.759, 1.03 ) }
    dend_55 { pt3dadd( 92.8034, -67.9836, -143.771, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_55 { pt3dadd( 93.1449, -68.094, -143.829, 1.03 ) }
    dend_55 { pt3dadd( 93.2527, -68.1314, -143.847, 1.03 ) }
    dend_55 { pt3dadd( 94.0931, -68.3821, -143.981, 0.22 ) }
    dend_55 { pt3dadd( 94.5503, -68.4855, -144.047, 0.81 ) }
    dend_55 { pt3dadd( 94.8164, -68.5284, -144.076, 0.81 ) }
    dend_55 { pt3dadd( 95.4376, -68.6258, -144.157, 0.22 ) }
    dend_55 { pt3dadd( 95.5332, -68.6412, -144.171, 0.22 ) }
    dend_55 { pt3dadd( 95.985, -68.7436, -144.296, 0.22 ) }
    dend_55 { pt3dadd( 96.0921, -68.7759, -144.335, 0.22 ) }
    dend_55 { pt3dadd( 96.3876, -68.8999, -144.461, 0.22 ) }
    dend_55 { pt3dadd( 97.0359, -69.2539, -144.76, 1.33 ) }
    dend_55 { pt3dadd( 97.3845, -69.466, -144.933, 1.55 ) }
    dend_55 { pt3dadd( 98.4238, -70.1633, -145.467, 0.29 ) }
    dend_55 { pt3dadd( 98.9597, -70.5706, -145.758, 0.29 ) }
    dend_55 { pt3dadd( 99.3608, -70.8966, -145.985, 0.59 ) }
    dend_55 { pt3dadd( 99.6288, -71.135, -146.146, 0.59 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 33.2944, -47.1443, -60.3513, 0.29 ) }
    dend_54 { pt3dadd( 33.3537, -49.7862, -62.234, 0.29 ) }
    dend_54 { pt3dadd( 33.3645, -50.1394, -62.4768, 0.37 ) }
    dend_54 { pt3dadd( 33.3907, -50.8447, -62.9452, 0.22 ) }
    dend_54 { pt3dadd( 33.4093, -51.3449, -63.2773, 1.33 ) }
    dend_54 { pt3dadd( 33.4796, -53.2357, -64.5328, 0.15 ) }
    dend_54 { pt3dadd( 33.4911, -53.5449, -64.7381, 0.59 ) }
    dend_54 { pt3dadd( 33.4971, -53.6057, -64.7687, 0.59 ) }
    dend_54 { pt3dadd( 33.5256, -53.8254, -64.8903, 0.59 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 25.9844, -33.581, 23.4961, 0.52 ) }
    dend_36 { pt3dadd( 27.8052, -34.1109, 22.392, 0.52 ) }
    dend_36 { pt3dadd( 27.8707, -34.1299, 22.3523, 0.52 ) }
    dend_36 { pt3dadd( 28.8797, -34.4235, 21.7405, 0.66 ) }
    dend_36 { pt3dadd( 28.9453, -34.4426, 21.7008, 0.66 ) }
    dend_36 { pt3dadd( 30.276, -34.8298, 20.8939, 0.44 ) }
    dend_36 { pt3dadd( 30.3316, -34.846, 20.8602, 0.44 ) }
    dend_36 { pt3dadd( 39.3198, -36.2459, 14.457, 0.44 ) }
    dend_36 { pt3dadd( 49.5174, -35.6597, 10.1549, 0.44 ) }
    dend_36 { pt3dadd( 60.322, -33.8794, 8.50247, 0.44 ) }
    dend_36 { pt3dadd( 70.8799, -32.0218, 5.72435, 0.44 ) }
    dend_36 { pt3dadd( 81.8358, -32.1955, 3.99602, 0.44 ) }
    dend_36 { pt3dadd( 92.8341, -33.623, 3.20812, 0.44 ) }
    dend_36 { pt3dadd( 103.362, -36.0434, 0.432055, 0.44 ) }
    dend_36 { pt3dadd( 113.792, -38.2784, -2.80817, 0.44 ) }
    dend_36 { pt3dadd( 124.279, -40.8555, -5.61738, 0.44 ) }
    dend_36 { pt3dadd( 134.444, -44.3073, -8.78729, 0.44 ) }
    dend_36 { pt3dadd( 144.57, -48.8398, -10.5769, 0.44 ) }
    dend_36 { pt3dadd( 153.757, -55.1369, -12.6621, 0.44 ) }
    dend_36 { pt3dadd( 162.719, -61.6017, -15.2209, 0.44 ) }
    dend_36 { pt3dadd( 171.447, -67.514, -19.3317, 0.44 ) }
    dend_36 { pt3dadd( 178.979, -75.0099, -23.4826, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 47/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 25.9844, -33.581, 23.4961, 0.29 ) }
    dend_35 { pt3dadd( 26.6807, -34.3892, 23.3661, 0.29 ) }
    dend_35 { pt3dadd( 27.2718, -35.0754, 23.2557, 0.29 ) }
    dend_35 { pt3dadd( 31.1343, -41.0992, 21.1274, 0.29 ) }
    dend_35 { pt3dadd( 35.4656, -46.2568, 18.0076, 0.29 ) }
    dend_35 { pt3dadd( 40.3818, -51.6433, 16.5909, 0.29 ) }
    dend_35 { pt3dadd( 45.4083, -57.0946, 16.6163, 0.29 ) }
    dend_35 { pt3dadd( 49.7049, -63.1791, 16.5493, 0.29 ) }
    dend_35 { pt3dadd( 52.8164, -69.9333, 17.1748, 0.29 ) }
    dend_35 { pt3dadd( 55.5173, -76.8524, 17.9124, 0.29 ) }
    dend_35 { pt3dadd( 58.517, -83.6521, 18.5893, 0.29 ) }
    dend_35 { pt3dadd( 61.0101, -90.5849, 19.7193, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -25.1554, -51.0276, 7.07299, 0.96 ) }
    dend_13 { pt3dadd( -25.8206, -51.9468, 7.5109, 0.96 ) }
    dend_13 { pt3dadd( -26.4639, -52.7462, 7.82889, 0.88 ) }
    dend_13 { pt3dadd( -27.1, -53.503, 8.10644, 1.25 ) }
    dend_13 { pt3dadd( -27.6841, -54.1551, 8.31916, 1.4 ) }
    dend_13 { pt3dadd( -28.1602, -54.63, 8.4598, 1.03 ) }
    dend_13 { pt3dadd( -28.9234, -55.3415, 8.65435, 0.88 ) }
    dend_13 { pt3dadd( -29.7445, -55.9421, 8.74458, 0.88 ) }
    dend_13 { pt3dadd( -29.7998, -55.9747, 8.74436, 0.88 ) }
    dend_13 { pt3dadd( -30.3482, -56.232, 8.64843, 1.18 ) }
    dend_13 { pt3dadd( -31.1692, -56.5517, 8.43102, 1.18 ) }
    dend_13 { pt3dadd( -31.2189, -56.5692, 8.41675, 1.18 ) }
    dend_13 { pt3dadd( -32.111, -56.8669, 8.14621, 1.11 ) }
    dend_13 { pt3dadd( -32.4626, -56.9965, 8.03584, 1.11 ) }
    dend_13 { pt3dadd( -33.565, -57.4727, 7.68174, 1.03 ) }
    dend_13 { pt3dadd( -34.3403, -57.8742, 7.43239, 1.33 ) }
    dend_13 { pt3dadd( -35.5332, -58.6334, 7.09471, 1.33 ) }
    dend_13 { pt3dadd( -35.6105, -58.6918, 7.08009, 1.33 ) }
    dend_13 { pt3dadd( -36.6897, -59.5801, 6.91768, 0.59 ) }
    dend_13 { pt3dadd( -37.4449, -60.2493, 6.82989, 0.59 ) }
    dend_13 { pt3dadd( -38.0764, -60.8692, 6.80055, 1.03 ) }
    dend_13 { pt3dadd( -38.9519, -61.8266, 6.77139, 2.28 ) }
    dend_13 { pt3dadd( -39.6836, -62.764, 6.81746, 2.95 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -25.1554, -51.0276, 7.07299, 0.59 ) }
    dend_10 { pt3dadd( -24.6439, -53.1656, 7.55359, 0.59 ) }
    dend_10 { pt3dadd( -24.4907, -54.4873, 7.85865, 0.59 ) }
    dend_10 { pt3dadd( -24.4051, -55.6987, 8.12346, 1.18 ) }
    dend_10 { pt3dadd( -24.3459, -56.6994, 8.30367, 1.4 ) }
    dend_10 { pt3dadd( -24.2421, -58.3796, 8.51201, 0.81 ) }
    dend_10 { pt3dadd( -24.1556, -59.5701, 8.58691, 0.59 ) }
    dend_10 { pt3dadd( -24.1164, -60.9267, 8.53787, 0.59 ) }
    dend_10 { pt3dadd( -24.0523, -62.5621, 8.27178, 0.59 ) }
    dend_10 { pt3dadd( -23.9887, -63.6351, 7.94914, 1.4 ) }
    dend_10 { pt3dadd( -23.8879, -64.9733, 7.42691, 1.92 ) }
    dend_10 { pt3dadd( -23.7883, -66.3177, 6.84609, 1.62 ) }
    dend_10 { pt3dadd( -23.6669, -68.2763, 5.99485, 1.03 ) }
    dend_10 { pt3dadd( -23.5912, -70.0822, 5.22923, 0.66 ) }
    dend_10 { pt3dadd( -23.5923, -71.9575, 4.53183, 0.52 ) }
    dend_10 { pt3dadd( -23.6466, -73.0317, 4.23896, 0.52 ) }
    dend_10 { pt3dadd( -23.8152, -74.4782, 4.02218, 1.11 ) }
    dend_10 { pt3dadd( -24.0137, -75.4736, 4.0151, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -24.2678, -76.3508, 4.13031, 1.11 ) }
    dend_10 { pt3dadd( -24.68, -77.437, 4.3588, 0.74 ) }
    dend_10 { pt3dadd( -25.1674, -78.4438, 4.5277, 0.52 ) }
    dend_10 { pt3dadd( -25.7213, -79.4068, 4.57179, 0.44 ) }
    dend_10 { pt3dadd( -26.229, -80.2111, 4.52339, 0.37 ) }
    dend_10 { pt3dadd( -26.7443, -81.0089, 4.457, 1.4 ) }
    dend_10 { pt3dadd( -27.4451, -82.0873, 4.34222, 1.62 ) }
    dend_10 { pt3dadd( -28.6452, -83.9562, 4.13921, 0.66 ) }
    dend_10 { pt3dadd( -29.2165, -84.8879, 4.06539, 0.59 ) }
    dend_10 { pt3dadd( -29.8006, -85.9994, 4.07334, 0.44 ) }
    dend_10 { pt3dadd( -30.3688, -87.2964, 4.21739, 0.44 ) }
    dend_10 { pt3dadd( -30.3952, -87.3715, 4.23662, 0.44 ) }
    dend_10 { pt3dadd( -30.662, -88.3362, 4.60356, 0.81 ) }
    dend_10 { pt3dadd( -30.7524, -88.7329, 4.79387, 0.81 ) }
    dend_10 { pt3dadd( -31.1328, -90.2784, 5.39318, 0.37 ) }
    dend_10 { pt3dadd( -31.3332, -91.0, 5.58676, 0.29 ) }
    dend_10 { pt3dadd( -31.7102, -92.1717, 5.77163, 1.47 ) }
    dend_10 { pt3dadd( -32.1366, -93.3638, 5.83491, 1.92 ) }
    dend_10 { pt3dadd( -32.2209, -93.5794, 5.82716, 1.92 ) }
    dend_10 { pt3dadd( -33.0931, -95.696, 5.65433, 0.74 ) }
    dend_10 { pt3dadd( -33.4801, -96.6162, 5.53053, 0.52 ) }
    dend_10 { pt3dadd( -33.7319, -97.2648, 5.45546, 0.96 ) }
    dend_10 { pt3dadd( -34.2174, -98.608, 5.33586, 0.96 ) }
    dend_10 { pt3dadd( -34.6254, -99.8151, 5.29203, 0.44 ) }
    dend_10 { pt3dadd( -34.9484, -100.858, 5.28384, 0.29 ) }
    dend_10 { pt3dadd( -35.0051, -101.056, 5.28916, 0.29 ) }
    dend_10 { pt3dadd( -35.3166, -102.114, 5.29617, 0.29 ) }
    dend_10 { pt3dadd( -35.5504, -102.898, 5.28385, 0.29 ) }
    dend_10 { pt3dadd( -35.9166, -104.085, 5.25559, 1.25 ) }
    dend_10 { pt3dadd( -36.3748, -105.446, 5.18515, 1.84 ) }
    dend_10 { pt3dadd( -36.8156, -106.644, 5.10631, 0.96 ) }
    dend_10 { pt3dadd( -37.232, -107.723, 5.03521, 0.44 ) }
    dend_10 { pt3dadd( -37.5471, -108.493, 4.97632, 0.44 ) }
    dend_10 { pt3dadd( -37.9429, -109.439, 4.92137, 1.11 ) }
    dend_10 { pt3dadd( -38.3146, -110.233, 4.90107, 1.4 ) }
    dend_10 { pt3dadd( -38.7117, -110.993, 4.92688, 1.25 ) }
    dend_10 { pt3dadd( -39.2962, -112.062, 4.98687, 0.59 ) }
    dend_10 { pt3dadd( -39.7609, -112.902, 5.03949, 0.29 ) }
    dend_10 { pt3dadd( -39.797, -112.975, 5.04518, 0.29 ) }
    dend_10 { pt3dadd( -40.2913, -114.188, 5.13786, 0.29 ) }
    dend_10 { pt3dadd( -40.5697, -115.141, 5.21487, 0.29 ) }
    dend_10 { pt3dadd( -40.7238, -115.918, 5.29083, 1.33 ) }
    dend_10 { pt3dadd( -40.8046, -116.53, 5.35852, 1.47 ) }
    dend_10 { pt3dadd( -40.9177, -117.874, 5.52081, 0.74 ) }
    dend_10 { pt3dadd( -40.9751, -118.977, 5.65754, 0.37 ) }
    dend_10 { pt3dadd( -40.9917, -120.472, 5.84715, 0.37 ) }
    dend_10 { pt3dadd( -41.0108, -121.982, 5.98662, 1.11 ) }
    dend_10 { pt3dadd( -41.0191, -122.585, 6.02675, 1.69 ) }
    dend_10 { pt3dadd( -41.0358, -123.492, 6.06812, 1.77 ) }
    dend_10 { pt3dadd( -41.0654, -124.987, 6.07209, 0.59 ) }
    dend_10 { pt3dadd( -41.1062, -126.79, 6.00976, 0.52 ) }
    dend_10 { pt3dadd( -41.1526, -128.221, 5.82962, 0.52 ) }
    dend_10 { pt3dadd( -41.1852, -129.013, 5.68115, 1.33 ) }
    dend_10 { pt3dadd( -41.2101, -129.601, 5.55446, 1.69 ) }
    dend_10 { pt3dadd( -41.2528, -130.773, 5.29019, 2.14 ) }
    dend_10 { pt3dadd( -41.3053, -131.923, 5.07662, 1.47 ) }
    dend_10 { pt3dadd( -41.4408, -134.444, 4.75758, 0.52 ) }
    dend_10 { pt3dadd( -41.5062, -135.633, 4.68034, 0.52 ) }
    dend_10 { pt3dadd( -41.5621, -136.583, 4.64938, 0.52 ) }
    dend_10 { pt3dadd( -41.6328, -138.119, 4.70785, 0.66 ) }
    dend_10 { pt3dadd( -41.6959, -139.823, 4.89967, 0.52 ) }
    dend_10 { pt3dadd( -41.7408, -141.002, 5.09924, 1.33 ) }
    dend_10 { pt3dadd( -41.8021, -141.962, 5.3247, 1.99 ) }
    dend_10 { pt3dadd( -41.8605, -142.545, 5.4742, 1.99 ) }
    dend_10 { pt3dadd( -42.1451, -144.718, 6.05348, 0.44 ) }
    dend_10 { pt3dadd( -42.2754, -145.579, 6.28387, 0.37 ) }
    dend_10 { pt3dadd( -42.4656, -146.838, 6.60016, 0.37 ) }
    dend_10 { pt3dadd( -42.643, -147.958, 6.8987, 0.37 ) }
    dend_10 { pt3dadd( -42.8122, -149.027, 7.19374, 0.52 ) }
    dend_10 { pt3dadd( -42.9455, -149.894, 7.41797, 0.52 ) }
    dend_10 { pt3dadd( -42.9944, -150.376, 7.5188, 0.29 ) }
    dend_10 { pt3dadd( -42.9953, -151.079, 7.65087, 0.29 ) }
    dend_10 { pt3dadd( -42.9069, -152.065, 7.81108, 1.18 ) }
    dend_10 { pt3dadd( -42.8357, -152.681, 7.87633, 1.69 ) }
    dend_10 { pt3dadd( -42.7847, -153.176, 7.90503, 1.55 ) }
    dend_10 { pt3dadd( -42.6105, -155.48, 8.00876, 0.37 ) }
    dend_10 { pt3dadd( -42.5671, -156.491, 8.04546, 0.59 ) }
    dend_10 { pt3dadd( -42.5677, -157.099, 8.06397, 0.59 ) }
    dend_10 { pt3dadd( -42.6301, -158.498, 8.10086, 0.29 ) }
    dend_10 { pt3dadd( -42.7348, -159.439, 8.12832, 0.37 ) }
    dend_10 { pt3dadd( -42.889, -160.253, 8.13401, 0.37 ) }
    dend_10 { pt3dadd( -42.9988, -160.68, 8.13077, 1.11 ) }
    dend_10 { pt3dadd( -43.2201, -161.58, 8.12485, 1.4 ) }
    dend_10 { pt3dadd( -43.3405, -162.171, 8.12792, 1.4 ) }
    dend_10 { pt3dadd( -43.5115, -163.332, 8.13862, 0.66 ) }
    dend_10 { pt3dadd( -43.6727, -164.552, 8.13916, 0.37 ) }
    dend_10 { pt3dadd( -43.8957, -166.145, 8.12726, 0.29 ) }
    dend_10 { pt3dadd( -44.0297, -166.997, 8.12012, 0.81 ) }
    dend_10 { pt3dadd( -44.1834, -167.89, 8.11211, 0.88 ) }
    dend_10 { pt3dadd( -44.5067, -169.615, 8.10776, 0.29 ) }
    dend_10 { pt3dadd( -44.7512, -170.797, 8.12195, 0.29 ) }
    dend_10 { pt3dadd( -44.9241, -171.502, 8.14912, 0.96 ) }
    dend_10 { pt3dadd( -45.1744, -172.354, 8.16009, 1.18 ) }
    dend_10 { pt3dadd( -45.2056, -172.445, 8.16017, 1.18 ) }
    dend_10 { pt3dadd( -45.4913, -173.198, 8.15819, 1.18 ) }
    dend_10 { pt3dadd( -46.282, -175.172, 8.15951, 0.29 ) }
    dend_10 { pt3dadd( -46.639, -176.062, 8.16009, 0.29 ) }
    dend_10 { pt3dadd( -47.2299, -177.479, 8.17623, 0.59 ) }
    dend_10 { pt3dadd( -47.6471, -178.388, 8.19429, 0.29 ) }
    dend_10 { pt3dadd( -48.0997, -179.248, 8.22465, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -48.3168, -179.597, 8.23351, 1.55 ) }
    dend_10 { pt3dadd( -49.0597, -180.654, 8.26021, 0.88 ) }
    dend_10 { pt3dadd( -49.8261, -181.684, 8.29236, 0.22 ) }
    dend_10 { pt3dadd( -50.3768, -182.4, 8.30676, 0.22 ) }
    dend_10 { pt3dadd( -51.1173, -183.353, 8.30025, 0.88 ) }
    dend_10 { pt3dadd( -52.167, -184.691, 8.25806, 0.22 ) }
    dend_10 { pt3dadd( -52.6822, -185.35, 8.20608, 1.11 ) }
    dend_10 { pt3dadd( -53.0777, -185.847, 8.14862, 1.11 ) }
    dend_10 { pt3dadd( -54.213, -187.295, 7.95227, 0.22 ) }
    dend_10 { pt3dadd( -55.0203, -188.356, 7.79443, 1.55 ) }
    dend_10 { pt3dadd( -55.3851, -188.847, 7.71684, 1.55 ) }
    dend_10 { pt3dadd( -56.9259, -190.92, 7.40786, 0.22 ) }
    dend_10 { pt3dadd( -57.4925, -191.663, 7.27843, 0.96 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 13/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.03761, -90.2376, 20.0801, 0.74 ) }
    dend_6 { pt3dadd( -10.4164, -92.3524, 19.9286, 0.74 ) }
    dend_6 { pt3dadd( -11.1086, -94.0283, 20.0439, 0.59 ) }
    dend_6 { pt3dadd( -11.5533, -95.6951, 20.3218, 0.59 ) }
    dend_6 { pt3dadd( -11.5685, -95.7737, 20.3376, 0.59 ) }
    dend_6 { pt3dadd( -11.758, -97.1228, 20.6021, 0.81 ) }
    dend_6 { pt3dadd( -11.766, -97.1915, 20.6135, 0.81 ) }
    dend_6 { pt3dadd( -11.8041, -98.7854, 20.8881, 0.74 ) }
    dend_6 { pt3dadd( -11.8517, -99.7682, 21.03, 1.18 ) }
    dend_6 { pt3dadd( -11.9346, -100.289, 21.0885, 1.18 ) }
    dend_6 { pt3dadd( -12.2099, -101.307, 21.1825, 0.96 ) }
    dend_6 { pt3dadd( -12.8271, -102.797, 21.3011, 0.59 ) }
    dend_6 { pt3dadd( -13.5978, -104.132, 21.5509, 0.59 ) }
    dend_6 { pt3dadd( -13.967, -104.651, 21.7318, 0.96 ) }
    dend_6 { pt3dadd( -14.3097, -105.117, 21.9914, 0.96 ) }
    dend_6 { pt3dadd( -14.7837, -105.779, 22.4739, 1.18 ) }
    dend_6 { pt3dadd( -15.1713, -106.35, 22.9637, 1.18 ) }
    dend_6 { pt3dadd( -16.124, -107.894, 24.4501, 0.52 ) }
    dend_6 { pt3dadd( -16.6488, -109.042, 25.5891, 0.74 ) }
    dend_6 { pt3dadd( -16.9877, -110.059, 26.5295, 0.81 ) }
    dend_6 { pt3dadd( -17.1468, -110.728, 27.1036, 1.11 ) }
    dend_6 { pt3dadd( -17.2423, -111.324, 27.5439, 0.96 ) }
    dend_6 { pt3dadd( -17.2516, -111.393, 27.5844, 0.96 ) }
    dend_6 { pt3dadd( -17.5314, -112.955, 28.2699, 1.11 ) }
    dend_6 { pt3dadd( -17.7695, -113.719, 28.5838, 1.11 ) }
    dend_6 { pt3dadd( -17.8019, -113.8, 28.6165, 1.11 ) }
    dend_6 { pt3dadd( -18.553, -115.161, 29.2362, 0.88 ) }
    dend_6 { pt3dadd( -19.5199, -116.508, 29.9542, 0.74 ) }
    dend_6 { pt3dadd( -20.4596, -117.563, 30.5812, 0.74 ) }
    dend_6 { pt3dadd( -21.2153, -118.257, 31.0285, 0.74 ) }
    dend_6 { pt3dadd( -21.2628, -118.297, 31.0569, 0.74 ) }
    dend_6 { pt3dadd( -22.4238, -119.193, 31.7597, 0.66 ) }
    dend_6 { pt3dadd( -23.1333, -119.637, 32.1994, 0.66 ) }
    dend_6 { pt3dadd( -24.0064, -120.083, 32.7453, 1.18 ) }
    dend_6 { pt3dadd( -24.667, -120.411, 33.1467, 1.55 ) }
    dend_6 { pt3dadd( -25.2405, -120.74, 33.4736, 1.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.03761, -90.2376, 20.0801, 0.74 ) }
    dend_5 { pt3dadd( -6.76423, -91.1382, 19.6966, 0.74 ) }
    dend_5 { pt3dadd( -5.99207, -91.5356, 19.568, 0.74 ) }
    dend_5 { pt3dadd( -5.94752, -91.5657, 19.5611, 0.74 ) }
    dend_5 { pt3dadd( -5.21458, -92.2386, 19.4434, 1.03 ) }
    dend_5 { pt3dadd( -4.99309, -92.5271, 19.4135, 1.03 ) }
    dend_5 { pt3dadd( -4.32197, -93.6752, 19.327, 0.44 ) }
    dend_5 { pt3dadd( -4.10226, -94.5062, 19.3097, 0.44 ) }
    dend_5 { pt3dadd( -3.89624, -95.5082, 19.3934, 0.59 ) }
    dend_5 { pt3dadd( -3.73624, -96.4438, 19.526, 0.74 ) }
    dend_5 { pt3dadd( -3.6316, -97.4471, 19.7544, 0.52 ) }
    dend_5 { pt3dadd( -3.57929, -98.1215, 19.9845, 0.52 ) }
    dend_5 { pt3dadd( -3.53903, -99.0153, 20.4126, 0.52 ) }
    dend_5 { pt3dadd( -3.41985, -99.8066, 21.0182, 0.52 ) }
    dend_5 { pt3dadd( -3.40844, -99.8383, 21.0609, 0.52 ) }
    dend_5 { pt3dadd( -3.2392, -100.121, 21.7121, 0.74 ) }
    dend_5 { pt3dadd( -3.13252, -100.223, 22.3333, 1.03 ) }
    dend_5 { pt3dadd( -3.12665, -100.223, 22.3867, 1.03 ) }
    dend_5 { pt3dadd( -3.09478, -100.075, 23.2326, 1.03 ) }
    dend_5 { pt3dadd( -3.09649, -100.062, 23.2851, 1.03 ) }
    dend_5 { pt3dadd( 0.269415, -108.589, 24.6739, 1.03 ) }
    dend_5 { pt3dadd( 1.55336, -117.858, 24.9949, 1.03 ) }
    dend_5 { pt3dadd( 2.74023, -126.824, 27.2813, 1.03 ) }
    dend_5 { pt3dadd( 4.58972, -135.878, 28.5802, 1.03 ) }
    dend_5 { pt3dadd( 7.40814, -144.686, 29.5817, 1.03 ) }
    dend_5 { pt3dadd( 9.93557, -153.086, 32.5566, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 99.6288, -71.135, -146.146, 0.22 ) }
    dend_57 { pt3dadd( 100.49, -71.6176, -146.523, 0.22 ) }
    dend_57 { pt3dadd( 100.867, -71.8644, -146.676, 0.22 ) }
    dend_57 { pt3dadd( 100.902, -71.8922, -146.694, 0.22 ) }
    dend_57 { pt3dadd( 101.244, -72.1872, -146.895, 0.96 ) }
    dend_57 { pt3dadd( 101.392, -72.3235, -146.98, 1.33 ) }
    dend_57 { pt3dadd( 101.636, -72.5388, -147.124, 1.4 ) }
    dend_57 { pt3dadd( 101.672, -72.5746, -147.145, 1.4 ) }
    dend_57 { pt3dadd( 102.373, -73.2337, -147.584, 0.22 ) }
    dend_57 { pt3dadd( 102.405, -73.2596, -147.61, 0.22 ) }
    dend_57 { pt3dadd( 102.864, -73.5654, -148.001, 0.22 ) }
    dend_57 { pt3dadd( 103.333, -73.8045, -148.377, 1.03 ) }
    dend_57 { pt3dadd( 103.369, -73.8195, -148.404, 1.03 ) }
    dend_57 { pt3dadd( 103.571, -73.8879, -148.539, 1.03 ) }
    dend_57 { pt3dadd( 104.742, -74.2611, -149.245, 0.29 ) }
    dend_57 { pt3dadd( 105.316, -74.4487, -149.581, 0.29 ) }
    dend_57 { pt3dadd( 105.963, -74.6805, -149.944, 1.33 ) }
    dend_57 { pt3dadd( 106.22, -74.7895, -150.071, 1.62 ) }
    dend_57 { pt3dadd( 106.796, -75.0696, -150.318, 0.52 ) }
    dend_57 { pt3dadd( 107.344, -75.374, -150.508, 0.22 ) }
    dend_57 { pt3dadd( 107.39, -75.4025, -150.518, 0.22 ) }
    dend_57 { pt3dadd( 107.802, -75.6785, -150.62, 0.22 ) }
    dend_57 { pt3dadd( 108.124, -75.9091, -150.7, 0.81 ) }
    dend_57 { pt3dadd( 108.495, -76.1647, -150.793, 1.03 ) }
    dend_57 { pt3dadd( 109.331, -76.77, -150.998, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_57 { pt3dadd( 109.54, -76.9137, -151.048, 0.52 ) }
    dend_57 { pt3dadd( 109.615, -76.9707, -151.066, 0.52 ) }
    dend_57 { pt3dadd( 109.863, -77.1685, -151.132, 0.52 ) }
    dend_57 { pt3dadd( 109.893, -77.1944, -151.143, 0.52 ) }
    dend_57 { pt3dadd( 110.555, -77.795, -151.427, 0.22 ) }
    dend_57 { pt3dadd( 110.589, -77.8264, -151.442, 0.22 ) }
    dend_57 { pt3dadd( 111.104, -78.2862, -151.668, 1.03 ) }
    dend_57 { pt3dadd( 111.416, -78.5511, -151.804, 1.4 ) }
    dend_57 { pt3dadd( 112.243, -79.2148, -152.16, 0.29 ) }
    dend_57 { pt3dadd( 112.28, -79.2424, -152.175, 0.29 ) }
    dend_57 { pt3dadd( 112.694, -79.5063, -152.316, 0.29 ) }
    dend_57 { pt3dadd( 113.112, -79.7347, -152.426, 0.81 ) }
    dend_57 { pt3dadd( 113.161, -79.7563, -152.433, 0.81 ) }
    dend_57 { pt3dadd( 113.414, -79.8535, -152.446, 1.18 ) }
    dend_57 { pt3dadd( 113.753, -79.9783, -152.444, 1.18 ) }
    dend_57 { pt3dadd( 114.422, -80.2149, -152.445, 0.22 ) }
    dend_57 { pt3dadd( 114.844, -80.3492, -152.447, 0.22 ) }
    dend_57 { pt3dadd( 115.419, -80.5168, -152.451, 1.03 ) }
    dend_57 { pt3dadd( 115.76, -80.61, -152.453, 1.25 ) }
    dend_57 { pt3dadd( 116.729, -80.8709, -152.466, 0.22 ) }
    dend_57 { pt3dadd( 116.775, -80.8848, -152.467, 0.22 ) }
    dend_57 { pt3dadd( 117.132, -81.0114, -152.469, 0.22 ) }
    dend_57 { pt3dadd( 117.183, -81.0317, -152.467, 0.22 ) }
    dend_57 { pt3dadd( 117.536, -81.168, -152.444, 0.81 ) }
    dend_57 { pt3dadd( 117.938, -81.3165, -152.405, 1.18 ) }
    dend_57 { pt3dadd( 119.096, -81.6781, -152.259, 0.22 ) }
    dend_57 { pt3dadd( 119.847, -81.8826, -152.146, 1.11 ) }
    dend_57 { pt3dadd( 120.089, -81.9397, -152.104, 1.11 ) }
    dend_57 { pt3dadd( 121.018, -82.1001, -151.932, 0.22 ) }
    dend_57 { pt3dadd( 121.065, -82.1053, -151.923, 0.22 ) }
    dend_57 { pt3dadd( 121.762, -82.1118, -151.769, 0.22 ) }
    dend_57 { pt3dadd( 122.246, -82.0463, -151.658, 1.03 ) }
    dend_57 { pt3dadd( 122.511, -81.9849, -151.608, 0.81 ) }
    dend_57 { pt3dadd( 123.18, -81.7807, -151.481, 0.22 ) }
    dend_57 { pt3dadd( 123.225, -81.7628, -151.473, 0.22 ) }
    dend_57 { pt3dadd( 123.485, -81.6556, -151.426, 0.37 ) }
    dend_57 { pt3dadd( 124.246, -81.3255, -151.302, 0.15 ) }
    dend_57 { pt3dadd( 124.445, -81.2335, -151.276, 0.29 ) }
    dend_57 { pt3dadd( 124.927, -80.9872, -151.21, 0.15 ) }
    dend_57 { pt3dadd( 125.293, -80.7788, -151.157, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 40/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 99.6288, -71.135, -146.146, 0.22 ) }
    dend_56 { pt3dadd( 99.6646, -71.8982, -146.484, 0.22 ) }
    dend_56 { pt3dadd( 99.6658, -71.9241, -146.496, 0.22 ) }
    dend_56 { pt3dadd( 99.6754, -72.128, -146.586, 0.66 ) }
    dend_56 { pt3dadd( 99.7015, -72.6851, -146.833, 0.15 ) }
    dend_56 { pt3dadd( 99.7096, -72.8571, -146.909, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 46/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -39.6836, -62.764, 6.81746, 0.88 ) }
    dend_17 { pt3dadd( -41.2495, -62.1782, 7.14787, 0.88 ) }
    dend_17 { pt3dadd( -42.4452, -61.935, 7.38252, 0.52 ) }
    dend_17 { pt3dadd( -42.5322, -61.9284, 7.39886, 0.52 ) }
    dend_17 { pt3dadd( -43.4339, -61.9618, 7.56465, 0.52 ) }
    dend_17 { pt3dadd( -44.1598, -62.0492, 7.69789, 0.74 ) }
    dend_17 { pt3dadd( -45.112, -62.2164, 7.87237, 0.66 ) }
    dend_17 { pt3dadd( -46.0795, -62.4808, 8.03578, 0.52 ) }
    dend_17 { pt3dadd( -46.8399, -62.7478, 8.21625, 0.37 ) }
    dend_17 { pt3dadd( -47.8046, -63.087, 8.54319, 1.11 ) }
    dend_17 { pt3dadd( -48.3821, -63.3014, 8.78588, 1.55 ) }
    dend_17 { pt3dadd( -48.9155, -63.4776, 9.05195, 1.55 ) }
    dend_17 { pt3dadd( -49.9167, -63.7464, 9.63334, 0.66 ) }
    dend_17 { pt3dadd( -51.0151, -63.9259, 10.3876, 0.29 ) }
    dend_17 { pt3dadd( -52.0513, -63.9605, 11.2491, 0.44 ) }
    dend_17 { pt3dadd( -52.106, -63.9546, 11.3006, 0.44 ) }
    dend_17 { pt3dadd( -52.5396, -63.8618, 11.7404, 0.66 ) }
    dend_17 { pt3dadd( -52.605, -63.8404, 11.8136, 0.66 ) }
    dend_17 { pt3dadd( -53.1855, -63.5997, 12.4857, 1.11 ) }
    dend_17 { pt3dadd( -53.911, -63.336, 13.2386, 1.11 ) }
    dend_17 { pt3dadd( -54.4437, -63.1805, 13.7539, 0.88 ) }
    dend_17 { pt3dadd( -54.4974, -63.1702, 13.8058, 0.88 ) }
    dend_17 { pt3dadd( -55.3038, -63.102, 14.5517, 0.59 ) }
    dend_17 { pt3dadd( -56.0913, -63.0967, 15.2227, 0.29 ) }
    dend_17 { pt3dadd( -56.7664, -63.1481, 15.6779, 0.29 ) }
    dend_17 { pt3dadd( -56.8324, -63.1568, 15.7134, 0.29 ) }
    dend_17 { pt3dadd( -57.458, -63.229, 15.984, 0.52 ) }
    dend_17 { pt3dadd( -58.1632, -63.2601, 16.2287, 0.52 ) }
    dend_17 { pt3dadd( -58.2348, -63.2542, 16.2513, 0.52 ) }
    dend_17 { pt3dadd( -59.4171, -62.9423, 16.6915, 1.18 ) }
    dend_17 { pt3dadd( -59.4958, -62.9132, 16.7214, 1.18 ) }
    dend_17 { pt3dadd( -60.3093, -62.5749, 16.9658, 1.55 ) }
    dend_17 { pt3dadd( -61.0834, -62.222, 17.1431, 1.84 ) }
    dend_17 { pt3dadd( -62.4081, -61.6131, 17.3808, 1.77 ) }
    dend_17 { pt3dadd( -63.8394, -60.9728, 17.4799, 0.29 ) }
    dend_17 { pt3dadd( -64.4435, -60.7064, 17.4585, 0.52 ) }
    dend_17 { pt3dadd( -65.7578, -60.145, 17.2472, 0.52 ) }
    dend_17 { pt3dadd( -66.3785, -59.8794, 17.0944, 0.81 ) }
    dend_17 { pt3dadd( -66.8758, -59.6706, 16.9367, 0.81 ) }
    dend_17 { pt3dadd( -68.1352, -59.1247, 16.4733, 0.37 ) }
    dend_17 { pt3dadd( -68.2016, -59.0939, 16.4531, 0.37 ) }
    dend_17 { pt3dadd( -69.4029, -58.4902, 16.3203, 0.37 ) }
    dend_17 { pt3dadd( -70.4923, -57.9108, 16.4604, 0.74 ) }
    dend_17 { pt3dadd( -71.2959, -57.4844, 16.6735, 1.18 ) }
    dend_17 { pt3dadd( -71.8625, -57.194, 16.8823, 1.55 ) }
    dend_17 { pt3dadd( -72.5851, -56.859, 17.2052, 1.77 ) }
    dend_17 { pt3dadd( -73.2599, -56.5888, 17.4999, 1.77 ) }
    dend_17 { pt3dadd( -74.2916, -56.2506, 17.939, 1.18 ) }
    dend_17 { pt3dadd( -75.233, -55.9962, 18.2744, 0.74 ) }
    dend_17 { pt3dadd( -75.9654, -55.8248, 18.5082, 0.52 ) }
    dend_17 { pt3dadd( -76.753, -55.6753, 18.7263, 0.52 ) }
    dend_17 { pt3dadd( -77.7331, -55.516, 18.9421, 0.81 ) }
    dend_17 { pt3dadd( -78.2837, -55.4282, 19.039, 0.96 ) }
    dend_17 { pt3dadd( -79.0983, -55.3104, 19.1497, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_17 { pt3dadd( -79.8291, -55.2099, 19.2306, 0.59 ) }
    dend_17 { pt3dadd( -80.9498, -55.0732, 19.3095, 0.59 ) }
    dend_17 { pt3dadd( -81.9725, -54.9813, 19.3635, 1.11 ) }
    dend_17 { pt3dadd( -82.8914, -54.9301, 19.4172, 1.62 ) }
    dend_17 { pt3dadd( -83.9228, -54.8976, 19.481, 1.4 ) }
    dend_17 { pt3dadd( -84.0381, -54.8951, 19.4902, 1.4 ) }
    dend_17 { pt3dadd( -85.5493, -54.8814, 19.6385, 0.81 ) }
    dend_17 { pt3dadd( -86.6541, -54.868, 19.8178, 0.52 ) }
    dend_17 { pt3dadd( -87.3145, -54.8402, 20.0054, 0.52 ) }
    dend_17 { pt3dadd( -87.3962, -54.8326, 20.0392, 0.52 ) }
    dend_17 { pt3dadd( -88.2684, -54.6397, 20.5376, 0.52 ) }
    dend_17 { pt3dadd( -88.3283, -54.619, 20.5786, 0.52 ) }
    dend_17 { pt3dadd( -89.0935, -54.1715, 21.2694, 1.11 ) }
    dend_17 { pt3dadd( -89.6238, -53.7599, 21.7878, 1.11 ) }
    dend_17 { pt3dadd( -89.7391, -53.6616, 21.9033, 1.11 ) }
    dend_17 { pt3dadd( -90.2649, -53.1928, 22.4523, 0.88 ) }
    dend_17 { pt3dadd( -90.3078, -53.1513, 22.4995, 0.88 ) }
    dend_17 { pt3dadd( -90.8492, -52.6201, 23.027, 0.88 ) }
    dend_17 { pt3dadd( -91.4336, -52.0831, 23.5211, 0.88 ) }
    dend_17 { pt3dadd( -91.8385, -51.726, 23.8472, 1.18 ) }
    dend_17 { pt3dadd( -91.9507, -51.6428, 23.9344, 1.18 ) }
    dend_17 { pt3dadd( -92.8426, -51.1254, 24.5687, 1.62 ) }
    dend_17 { pt3dadd( -94.0087, -50.6017, 25.3019, 0.66 ) }
    dend_17 { pt3dadd( -95.2506, -50.2108, 25.9814, 0.37 ) }
    dend_17 { pt3dadd( -95.3194, -50.1995, 26.0098, 0.37 ) }
    dend_17 { pt3dadd( -96.6385, -50.1591, 26.3775, 0.37 ) }
    dend_17 { pt3dadd( -97.5995, -50.2225, 26.4962, 0.66 ) }
    dend_17 { pt3dadd( -98.4563, -50.3802, 26.4493, 0.66 ) }
    dend_17 { pt3dadd( -98.5293, -50.3948, 26.4372, 0.66 ) }
    dend_17 { pt3dadd( -99.6017, -50.4559, 26.2141, 0.37 ) }
    dend_17 { pt3dadd( -99.7012, -50.4479, 26.1972, 0.37 ) }
    dend_17 { pt3dadd( -100.957, -50.2105, 26.0037, 1.18 ) }
    dend_17 { pt3dadd( -101.523, -50.0587, 25.9406, 1.69 ) }
    dend_17 { pt3dadd( -102.666, -49.7054, 25.8599, 0.74 ) }
    dend_17 { pt3dadd( -103.746, -49.3189, 25.7874, 0.52 ) }
    dend_17 { pt3dadd( -104.813, -48.8908, 25.7348, 0.52 ) }
    dend_17 { pt3dadd( -104.883, -48.8626, 25.7315, 0.52 ) }
    dend_17 { pt3dadd( -105.619, -48.5765, 25.7326, 0.52 ) }
    dend_17 { pt3dadd( -105.811, -48.5086, 25.7437, 0.52 ) }
    dend_17 { pt3dadd( -106.79, -48.2265, 25.9178, 0.44 ) }
    dend_17 { pt3dadd( -107.498, -48.0628, 26.1136, 0.37 ) }
    dend_17 { pt3dadd( -108.548, -47.8508, 26.4748, 0.96 ) }
    dend_17 { pt3dadd( -109.622, -47.6201, 26.8726, 1.55 ) }
    dend_17 { pt3dadd( -110.462, -47.4475, 27.213, 1.4 ) }
    dend_17 { pt3dadd( -111.728, -47.1441, 27.699, 0.44 ) }
    dend_17 { pt3dadd( -112.828, -46.8529, 28.1086, 0.29 ) }
    dend_17 { pt3dadd( -112.92, -46.8199, 28.1337, 0.29 ) }
    dend_17 { pt3dadd( -113.883, -46.3574, 28.2559, 0.29 ) }
    dend_17 { pt3dadd( -113.96, -46.3129, 28.2525, 0.29 ) }
    dend_17 { pt3dadd( -115.097, -45.5579, 28.0681, 0.66 ) }
    dend_17 { pt3dadd( -115.223, -45.4771, 28.0371, 0.66 ) }
    dend_17 { pt3dadd( -116.187, -44.93, 27.8162, 1.25 ) }
    dend_17 { pt3dadd( -116.701, -44.6675, 27.7131, 1.84 ) }
    dend_17 { pt3dadd( -117.429, -44.3327, 27.5863, 1.84 ) }
    dend_17 { pt3dadd( -117.982, -44.0817, 27.5089, 1.84 ) }
    dend_17 { pt3dadd( -119.275, -43.5056, 27.3885, 0.66 ) }
    dend_17 { pt3dadd( -120.19, -43.0701, 27.3446, 0.29 ) }
    dend_17 { pt3dadd( -120.375, -42.985, 27.3457, 0.81 ) }
    dend_17 { pt3dadd( -120.693, -42.8569, 27.3585, 0.81 ) }
    dend_17 { pt3dadd( -121.271, -42.6684, 27.4033, 0.81 ) }
    dend_17 { pt3dadd( -121.801, -42.556, 27.4585, 0.81 ) }
    dend_17 { pt3dadd( -123.313, -42.379, 27.6446, 0.44 ) }
    dend_17 { pt3dadd( -124.612, -42.3796, 27.8205, 0.44 ) }
    dend_17 { pt3dadd( -125.667, -42.5033, 27.9763, 0.44 ) }
    dend_17 { pt3dadd( -126.314, -42.6663, 28.0809, 0.74 ) }
    dend_17 { pt3dadd( -127.174, -42.9844, 28.2305, 1.03 ) }
    dend_17 { pt3dadd( -127.254, -43.0203, 28.2451, 1.03 ) }
    dend_17 { pt3dadd( -128.127, -43.4673, 28.4101, 1.03 ) }
    dend_17 { pt3dadd( -128.993, -43.8876, 28.5714, 0.66 ) }
    dend_17 { pt3dadd( -130.1, -44.3559, 28.7702, 0.52 ) }
    dend_17 { pt3dadd( -131.272, -44.7535, 29.0331, 0.66 ) }
    dend_17 { pt3dadd( -132.154, -44.9891, 29.2608, 1.11 ) }
    dend_17 { pt3dadd( -132.779, -45.0907, 29.4341, 1.47 ) }
    dend_17 { pt3dadd( -133.589, -45.1078, 29.6681, 1.69 ) }
    dend_17 { pt3dadd( -134.712, -45.0069, 29.9764, 1.11 ) }
    dend_17 { pt3dadd( -136.006, -44.7499, 30.2856, 0.66 ) }
    dend_17 { pt3dadd( -136.626, -44.5769, 30.4094, 0.29 ) }
    dend_17 { pt3dadd( -137.865, -44.1571, 30.5167, 0.29 ) }
    dend_17 { pt3dadd( -139.002, -43.764, 30.4159, 0.52 ) }
    dend_17 { pt3dadd( -139.585, -43.6037, 30.2115, 0.96 ) }
    dend_17 { pt3dadd( -140.376, -43.4779, 29.7526, 0.96 ) }
    dend_17 { pt3dadd( -140.504, -43.472, 29.6721, 0.96 ) }
    dend_17 { pt3dadd( -141.758, -43.5313, 28.9656, 0.74 ) }
    dend_17 { pt3dadd( -142.922, -43.6591, 28.4976, 0.37 ) }
    dend_17 { pt3dadd( -144.143, -43.7776, 28.2246, 0.44 ) }
    dend_17 { pt3dadd( -145.261, -43.8226, 28.1953, 0.44 ) }
    dend_17 { pt3dadd( -146.577, -43.7988, 28.3355, 0.37 ) }
    dend_17 { pt3dadd( -147.927, -43.6838, 28.6077, 0.37 ) }
    dend_17 { pt3dadd( -149.337, -43.4686, 29.023, 0.74 ) }
    dend_17 { pt3dadd( -150.131, -43.2887, 29.289, 1.11 ) }
    dend_17 { pt3dadd( -151.04, -43.0299, 29.5829, 1.4 ) }
    dend_17 { pt3dadd( -151.968, -42.7323, 29.8119, 1.77 ) }
    dend_17 { pt3dadd( -152.469, -42.5501, 29.8658, 1.99 ) }
    dend_17 { pt3dadd( -153.502, -42.1118, 29.8768, 1.33 ) }
    dend_17 { pt3dadd( -154.275, -41.768, 29.7682, 0.81 ) }
    dend_17 { pt3dadd( -154.893, -41.4888, 29.6282, 0.81 ) }
    dend_17 { pt3dadd( -156.531, -40.7454, 29.15, 0.29 ) }
    dend_17 { pt3dadd( -157.713, -40.2325, 28.7961, 0.52 ) }
    dend_17 { pt3dadd( -158.234, -40.0272, 28.6455, 0.52 ) }
    dend_17 { pt3dadd( -159.61, -39.535, 28.2693, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_17 { pt3dadd( -160.485, -39.2726, 28.0694, 1.25 ) }
    dend_17 { pt3dadd( -161.06, -39.1483, 27.9867, 1.84 ) }
    dend_17 { pt3dadd( -162.257, -39.0164, 27.9216, 1.18 ) }
    dend_17 { pt3dadd( -163.192, -38.9658, 27.9585, 0.88 ) }
    dend_17 { pt3dadd( -163.759, -38.9564, 27.9989, 1.11 ) }
    dend_17 { pt3dadd( -164.411, -38.9485, 28.0703, 1.11 ) }
    dend_17 { pt3dadd( -165.63, -38.9344, 28.1703, 0.74 ) }
    dend_17 { pt3dadd( -166.926, -38.9176, 28.243, 0.37 ) }
    dend_17 { pt3dadd( -168.144, -38.8941, 28.2876, 1.11 ) }
    dend_17 { pt3dadd( -168.973, -38.8769, 28.3086, 1.77 ) }
    dend_17 { pt3dadd( -170.091, -38.8732, 28.2988, 1.55 ) }
    dend_17 { pt3dadd( -171.913, -38.8592, 28.2301, 0.59 ) }
    dend_17 { pt3dadd( -173.425, -38.8402, 28.1297, 0.52 ) }
    dend_17 { pt3dadd( -173.71, -38.831, 28.1033, 1.18 ) }
    dend_17 { pt3dadd( -174.558, -38.7902, 28.0074, 1.18 ) }
    dend_17 { pt3dadd( -176.062, -38.6546, 27.82, 0.29 ) }
    dend_17 { pt3dadd( -176.82, -38.555, 27.7004, 0.29 ) }
    dend_17 { pt3dadd( -176.913, -38.5241, 27.6773, 0.29 ) }
    dend_17 { pt3dadd( -177.452, -38.1739, 27.4592, 0.74 ) }
    dend_17 { pt3dadd( -177.583, -38.0734, 27.3892, 0.74 ) }
    dend_17 { pt3dadd( -177.819, -37.8767, 27.2486, 0.74 ) }
    dend_17 { pt3dadd( -177.901, -37.8343, 27.2067, 0.74 ) }
    dend_17 { pt3dadd( -179.115, -37.6036, 26.714, 0.44 ) }
    dend_17 { pt3dadd( -179.825, -37.5748, 26.4914, 1.03 ) }
    dend_17 { pt3dadd( -180.809, -37.6187, 26.2194, 1.47 ) }
    dend_17 { pt3dadd( -181.444, -37.6732, 26.0697, 1.47 ) }
    dend_17 { pt3dadd( -183.414, -37.9541, 25.764, 0.59 ) }
    dend_17 { pt3dadd( -184.393, -38.1299, 25.6814, 0.37 ) }
    dend_17 { pt3dadd( -185.293, -38.3202, 25.6714, 1.11 ) }
    dend_17 { pt3dadd( -186.017, -38.468, 25.6988, 1.62 ) }
    dend_17 { pt3dadd( -186.746, -38.5965, 25.7697, 1.62 ) }
    dend_17 { pt3dadd( -188.56, -38.8856, 26.011, 0.44 ) }
    dend_17 { pt3dadd( -189.285, -38.9865, 26.1404, 0.81 ) }
    dend_17 { pt3dadd( -190.003, -39.1112, 26.2839, 0.81 ) }
    dend_17 { pt3dadd( -190.797, -39.307, 26.442, 0.52 ) }
    dend_17 { pt3dadd( -191.897, -39.686, 26.6664, 0.29 ) }
    dend_17 { pt3dadd( -192.561, -39.9708, 26.7835, 0.88 ) }
    dend_17 { pt3dadd( -193.094, -40.2186, 26.8542, 1.11 ) }
    dend_17 { pt3dadd( -193.7, -40.4819, 26.9205, 1.11 ) }
    dend_17 { pt3dadd( -194.707, -40.8464, 27.0048, 0.52 ) }
    dend_17 { pt3dadd( -195.513, -40.9939, 27.0739, 0.44 ) }
    dend_17 { pt3dadd( -196.236, -40.9683, 27.1589, 0.44 ) }
    dend_17 { pt3dadd( -197.209, -40.7559, 27.3116, 0.74 ) }
    dend_17 { pt3dadd( -198.139, -40.4449, 27.4858, 0.37 ) }
    dend_17 { pt3dadd( -198.842, -40.1419, 27.6624, 0.37 ) }
    dend_17 { pt3dadd( -200.066, -39.5416, 28.032, 1.25 ) }
    dend_17 { pt3dadd( -200.944, -39.0903, 28.311, 2.14 ) }
    dend_17 { pt3dadd( -201.412, -38.854, 28.4666, 2.28 ) }
    dend_17 { pt3dadd( -202.054, -38.5421, 28.6857, 2.06 ) }
    dend_17 { pt3dadd( -204.127, -37.5785, 29.3, 0.44 ) }
    dend_17 { pt3dadd( -205.014, -37.1553, 29.5122, 0.37 ) }
    dend_17 { pt3dadd( -205.532, -36.899, 29.6013, 0.74 ) }
    dend_17 { pt3dadd( -205.968, -36.6604, 29.65, 1.18 ) }
    dend_17 { pt3dadd( -206.359, -36.4014, 29.6697, 1.18 ) }
    dend_17 { pt3dadd( -207.452, -35.4191, 29.6865, 0.37 ) }
    dend_17 { pt3dadd( -207.979, -34.7831, 29.6628, 0.37 ) }
    dend_17 { pt3dadd( -208.091, -34.6408, 29.6684, 0.37 ) }
    dend_17 { pt3dadd( -208.471, -34.1975, 29.7335, 0.66 ) }
    dend_17 { pt3dadd( -209.346, -33.3355, 29.9616, 0.66 ) }
    dend_17 { pt3dadd( -210.303, -32.542, 30.3188, 0.29 ) }
    dend_17 { pt3dadd( -210.91, -32.1545, 30.5916, 0.29 ) }
    dend_17 { pt3dadd( -211.924, -31.7404, 31.1186, 0.66 ) }
    dend_17 { pt3dadd( -212.792, -31.4958, 31.5992, 0.66 ) }
    dend_17 { pt3dadd( -213.944, -31.2942, 32.32, 1.47 ) }
    dend_17 { pt3dadd( -214.701, -31.2139, 32.8107, 1.99 ) }
    dend_17 { pt3dadd( -215.498, -31.1457, 33.3201, 1.62 ) }
    dend_17 { pt3dadd( -217.457, -30.9244, 34.6052, 0.59 ) }
    dend_17 { pt3dadd( -217.53, -30.9119, 34.6532, 0.59 ) }
    dend_17 { pt3dadd( -219.143, -30.5755, 35.7457, 0.44 ) }
    dend_17 { pt3dadd( -219.936, -30.3822, 36.2549, 0.37 ) }
    dend_17 { pt3dadd( -220.574, -30.1798, 36.6405, 0.37 ) }
    dend_17 { pt3dadd( -221.317, -29.8559, 37.0609, 0.66 ) }
    dend_17 { pt3dadd( -222.152, -29.4011, 37.462, 0.66 ) }
    dend_17 { pt3dadd( -222.275, -29.3296, 37.545, 0.66 ) }
    dend_17 { pt3dadd( -223.007, -28.8955, 38.0304, 0.52 ) }
    dend_17 { pt3dadd( -223.895, -28.3808, 38.6681, 1.03 ) }
    dend_17 { pt3dadd( -224.725, -27.9251, 39.2434, 1.4 ) }
    dend_17 { pt3dadd( -224.954, -27.8063, 39.3924, 1.4 ) }
    dend_17 { pt3dadd( -227.408, -26.4294, 41.1436, 0.52 ) }
    dend_17 { pt3dadd( -229.019, -25.4327, 42.3627, 0.88 ) }
    dend_17 { pt3dadd( -229.08, -25.3819, 42.4262, 0.88 ) }
    dend_17 { pt3dadd( -229.517, -24.5669, 43.4629, 0.37 ) }
    dend_17 { pt3dadd( -229.551, -24.293, 43.8314, 0.29 ) }
    dend_17 { pt3dadd( -229.5, -23.2454, 45.2291, 0.52 ) }
    dend_17 { pt3dadd( -229.488, -23.168, 45.3293, 0.52 ) }
    dend_17 { pt3dadd( -229.38, -22.0071, 46.8941, 0.81 ) }
    dend_17 { pt3dadd( -229.299, -20.7587, 48.6034, 0.66 ) }
    dend_17 { pt3dadd( -229.254, -19.8984, 49.8091, 0.29 ) }
    dend_17 { pt3dadd( -229.258, -19.854, 49.8709, 0.29 ) }
    dend_17 { pt3dadd( -229.454, -19.3583, 50.5241, 0.29 ) }
    dend_17 { pt3dadd( -229.882, -18.7607, 51.2593, 0.59 ) }
    dend_17 { pt3dadd( -229.953, -18.7217, 51.297, 0.59 ) }
    dend_17 { pt3dadd( -230.275, -18.6197, 51.3573, 0.81 ) }
    dend_17 { pt3dadd( -230.371, -18.5913, 51.3653, 0.81 ) }
    dend_17 { pt3dadd( -230.64, -18.4906, 51.3887, 0.81 ) }
    dend_17 { pt3dadd( -231.128, -18.2462, 51.4292, 0.52 ) }
    dend_17 { pt3dadd( -231.991, -17.6863, 51.4874, 0.29 ) }
    dend_17 { pt3dadd( -232.144, -17.5658, 51.4954, 0.29 ) }
    dend_17 { pt3dadd( -232.535, -17.1779, 51.4664, 0.37 ) }
    dend_17 { pt3dadd( -232.924, -16.7036, 51.4613, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_17 { pt3dadd( -233.189, -16.3196, 51.4692, 0.74 ) }
    dend_17 { pt3dadd( -233.544, -15.7167, 51.4787, 1.03 ) }
    dend_17 { pt3dadd( -233.816, -15.2083, 51.4856, 0.88 ) }
    dend_17 { pt3dadd( -234.556, -13.8116, 51.5104, 0.29 ) }
    dend_17 { pt3dadd( -235.255, -12.4399, 51.5372, 0.29 ) }
    dend_17 { pt3dadd( -235.618, -11.6958, 51.5485, 0.29 ) }
    dend_17 { pt3dadd( -236.09, -10.7484, 51.4853, 0.96 ) }
    dend_17 { pt3dadd( -236.365, -10.2215, 51.3988, 1.25 ) }
    dend_17 { pt3dadd( -236.421, -10.1385, 51.3712, 1.25 ) }
    dend_17 { pt3dadd( -236.716, -9.82245, 51.2048, 1.25 ) }
    dend_17 { pt3dadd( -236.826, -9.73714, 51.1407, 1.25 ) }
    dend_17 { pt3dadd( -238.375, -8.93258, 50.275, 0.37 ) }
    dend_17 { pt3dadd( -239.246, -8.58899, 49.7533, 0.29 ) }
    dend_17 { pt3dadd( -240.604, -8.08448, 48.9107, 0.29 ) }
    dend_17 { pt3dadd( -241.51, -7.73699, 48.3197, 0.66 ) }
    dend_17 { pt3dadd( -242.1, -7.50522, 47.9241, 0.96 ) }
    dend_17 { pt3dadd( -243.343, -6.93806, 46.9974, 1.25 ) }
    dend_17 { pt3dadd( -244.67, -6.25953, 45.8611, 0.44 ) }
    dend_17 { pt3dadd( -245.143, -6.00205, 45.4117, 0.66 ) }
    dend_17 { pt3dadd( -245.743, -5.6608, 44.7995, 0.66 ) }
    dend_17 { pt3dadd( -245.978, -5.53656, 44.5469, 0.66 ) }
    dend_17 { pt3dadd( -247.114, -5.04116, 43.3526, 0.37 ) }
    dend_17 { pt3dadd( -248.067, -4.70202, 42.4578, 0.37 ) }
    dend_17 { pt3dadd( -249.144, -5.0778, 42.1197, 0.22 ) }
    dend_17 { pt3dadd( -250.263, -5.80044, 42.2439, 0.29 ) }
    dend_17 { pt3dadd( -250.78, -6.08965, 42.3898, 0.59 ) }
    dend_17 { pt3dadd( -251.252, -6.3364, 42.5753, 0.59 ) }
    dend_17 { pt3dadd( -252.834, -7.07135, 43.3689, 0.29 ) }
    dend_17 { pt3dadd( -253.454, -7.28346, 43.6992, 0.29 ) }
    dend_17 { pt3dadd( -254.4, -7.44865, 44.152, 0.29 ) }
    dend_17 { pt3dadd( -256.175, -7.44846, 44.7229, 0.29 ) }
    dend_17 { pt3dadd( -256.262, -7.43799, 44.7395, 0.29 ) }
    dend_17 { pt3dadd( -256.983, -7.26607, 44.787, 1.11 ) }
    dend_17 { pt3dadd( -257.654, -7.01092, 44.708, 1.33 ) }
    dend_17 { pt3dadd( -257.744, -6.96817, 44.6888, 1.33 ) }
    dend_17 { pt3dadd( -259.443, -5.99843, 44.1805, 0.29 ) }
    dend_17 { pt3dadd( -260.098, -5.56775, 43.94, 0.66 ) }
    dend_17 { pt3dadd( -260.834, -5.07542, 43.6691, 0.88 ) }
    dend_17 { pt3dadd( -262.347, -4.10298, 43.087, 0.29 ) }
    dend_17 { pt3dadd( -262.421, -4.05986, 43.061, 0.29 ) }
    dend_17 { pt3dadd( -263.108, -3.74533, 42.8376, 0.29 ) }
    dend_17 { pt3dadd( -263.46, -3.65251, 42.7358, 0.74 ) }
    dend_17 { pt3dadd( -264.09, -3.56718, 42.5732, 0.74 ) }
    dend_17 { pt3dadd( -265.495, -3.49242, 42.2539, 0.29 ) }
    dend_17 { pt3dadd( -266.759, -3.52293, 41.9861, 0.44 ) }
    dend_17 { pt3dadd( -268.306, -3.59487, 41.6496, 1.03 ) }
    dend_17 { pt3dadd( -270.067, -3.70818, 41.2726, 1.84 ) }
    dend_17 { pt3dadd( -270.602, -3.74149, 41.1385, 1.84 ) }
    dend_17 { pt3dadd( -270.7, -3.74723, 41.1123, 1.84 ) }
    dend_17 { pt3dadd( -272.613, -3.86146, 40.5914, 0.44 ) }
    dend_17 { pt3dadd( -273.424, -3.90649, 40.3616, 0.74 ) }
    dend_17 { pt3dadd( -274.316, -3.94459, 40.1015, 0.59 ) }
    dend_17 { pt3dadd( -276.28, -3.99133, 39.4913, 0.52 ) }
    dend_17 { pt3dadd( -276.883, -4.03644, 39.2777, 0.81 ) }
    dend_17 { pt3dadd( -276.965, -4.04512, 39.2468, 0.81 ) }
    dend_17 { pt3dadd( -277.462, -4.11594, 39.0463, 1.18 ) }
    dend_17 { pt3dadd( -279.207, -4.43432, 38.3212, 0.29 ) }
    dend_17 { pt3dadd( -279.829, -4.5733, 38.0658, 0.59 ) }
    dend_17 { pt3dadd( -281.313, -4.98572, 37.5369, 0.22 ) }
    dend_17 { pt3dadd( -281.739, -5.11693, 37.3847, 0.59 ) }
    dend_17 { pt3dadd( -282.88, -5.48278, 36.9697, 0.22 ) }
    dend_17 { pt3dadd( -282.991, -5.52153, 36.9289, 0.22 ) }
    dend_17 { pt3dadd( -283.175, -5.5901, 36.872, 0.44 ) }
    dend_17 { pt3dadd( -283.775, -5.7982, 36.6931, 0.22 ) }
    dend_17 { pt3dadd( -284.019, -5.84945, 36.6682, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 65/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -39.6836, -62.764, 6.81746, 1.55 ) }
    dend_14 { pt3dadd( -39.9631, -64.9814, 6.49979, 1.55 ) }
    dend_14 { pt3dadd( -40.0924, -66.2133, 6.25587, 1.03 ) }
    dend_14 { pt3dadd( -40.1946, -67.9869, 5.82071, 0.66 ) }
    dend_14 { pt3dadd( -40.187, -69.9503, 5.28976, 0.66 ) }
    dend_14 { pt3dadd( -40.0306, -72.2689, 4.65528, 0.52 ) }
    dend_14 { pt3dadd( -39.7948, -74.1094, 4.16248, 0.52 ) }
    dend_14 { pt3dadd( -39.777, -74.1868, 4.13835, 0.52 ) }
    dend_14 { pt3dadd( -39.4188, -75.2008, 3.81512, 0.52 ) }
    dend_14 { pt3dadd( -38.8258, -76.3781, 3.47458, 0.52 ) }
    dend_14 { pt3dadd( -38.0227, -77.7172, 3.19342, 1.69 ) }
    dend_14 { pt3dadd( -37.3583, -78.8175, 3.08585, 2.21 ) }
    dend_14 { pt3dadd( -36.9716, -79.5811, 3.03807, 2.5 ) }
    dend_14 { pt3dadd( -36.5308, -80.6372, 2.98046, 2.5 ) }
    dend_14 { pt3dadd( -36.0418, -82.2789, 2.86621, 1.69 ) }
    dend_14 { pt3dadd( -35.7695, -83.9134, 2.68847, 1.03 ) }
    dend_14 { pt3dadd( -35.7047, -85.54, 2.44176, 0.96 ) }
    dend_14 { pt3dadd( -35.9056, -87.2561, 2.05651, 0.74 ) }
    dend_14 { pt3dadd( -36.2738, -88.4861, 1.68148, 0.52 ) }
    dend_14 { pt3dadd( -37.0675, -89.9613, 1.06534, 0.44 ) }
    dend_14 { pt3dadd( -37.9867, -90.8603, 0.466792, 0.44 ) }
    dend_14 { pt3dadd( -38.1268, -90.9321, 0.392435, 0.44 ) }
    dend_14 { pt3dadd( -39.3882, -91.2877, -0.192135, 1.4 ) }
    dend_14 { pt3dadd( -39.847, -91.3644, -0.356031, 1.4 ) }
    dend_14 { pt3dadd( -39.9985, -91.3893, -0.399759, 1.4 ) }
    dend_14 { pt3dadd( -41.9094, -91.7852, -0.770626, 0.52 ) }
    dend_14 { pt3dadd( -43.6048, -92.267, -0.997984, 0.44 ) }
    dend_14 { pt3dadd( -43.6905, -92.3041, -1.00662, 0.44 ) }
    dend_14 { pt3dadd( -45.3023, -93.3659, -1.09867, 1.69 ) }
    dend_14 { pt3dadd( -46.0429, -94.0806, -1.13593, 2.06 ) }
    dend_14 { pt3dadd( -46.3448, -94.5169, -1.12402, 2.14 ) }
    dend_14 { pt3dadd( -46.6859, -95.2788, -1.06247, 2.14 ) }
    dend_14 { pt3dadd( -47.2416, -96.9928, -0.862986, 0.81 ) }
    dend_14 { pt3dadd( -47.5855, -98.276, -0.664415, 0.52 ) }
    dend_14 { pt3dadd( -47.8549, -99.5492, -0.40989, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_14 { pt3dadd( -48.2195, -101.09, -0.00334744, 0.44 ) }
    dend_14 { pt3dadd( -48.2608, -101.257, 0.0522089, 0.44 ) }
    dend_14 { pt3dadd( -48.5072, -102.124, 0.448546, 0.44 ) }
    dend_14 { pt3dadd( -48.5353, -102.202, 0.497871, 0.44 ) }
    dend_14 { pt3dadd( -48.8453, -102.835, 1.01304, 0.37 ) }
    dend_14 { pt3dadd( -49.1254, -103.424, 1.49972, 0.37 ) }
    dend_14 { pt3dadd( -49.1515, -103.502, 1.55185, 0.37 ) }
    dend_14 { pt3dadd( -49.3417, -104.542, 2.18648, 0.29 ) }
    dend_14 { pt3dadd( -49.3561, -104.687, 2.26701, 0.29 ) }
    dend_14 { pt3dadd( -49.4635, -105.923, 2.91442, 1.4 ) }
    dend_14 { pt3dadd( -49.5396, -107.037, 3.45688, 1.92 ) }
    dend_14 { pt3dadd( -49.6475, -108.084, 3.92463, 0.88 ) }
    dend_14 { pt3dadd( -49.8694, -109.359, 4.43923, 0.29 ) }
    dend_14 { pt3dadd( -50.0527, -110.078, 4.68778, 0.29 ) }
    dend_14 { pt3dadd( -50.3785, -111.022, 4.92, 0.29 ) }
    dend_14 { pt3dadd( -50.6838, -111.781, 5.0289, 1.11 ) }
    dend_14 { pt3dadd( -51.1139, -112.779, 5.08241, 1.33 ) }
    dend_14 { pt3dadd( -51.4613, -113.573, 5.05097, 1.4 ) }
    dend_14 { pt3dadd( -51.8619, -114.478, 4.9415, 1.11 ) }
    dend_14 { pt3dadd( -52.5849, -116.089, 4.69331, 0.37 ) }
    dend_14 { pt3dadd( -53.1976, -117.381, 4.43793, 0.29 ) }
    dend_14 { pt3dadd( -53.8315, -118.455, 4.14601, 0.29 ) }
    dend_14 { pt3dadd( -54.3399, -119.104, 3.9327, 0.29 ) }
    dend_14 { pt3dadd( -54.7486, -119.536, 3.77359, 0.96 ) }
    dend_14 { pt3dadd( -55.3134, -120.057, 3.54961, 1.18 ) }
    dend_14 { pt3dadd( -56.006, -120.648, 3.27891, 1.18 ) }
    dend_14 { pt3dadd( -57.539, -122.058, 2.6057, 0.44 ) }
    dend_14 { pt3dadd( -58.5402, -123.06, 2.13627, 0.29 ) }
    dend_14 { pt3dadd( -59.1552, -123.784, 1.80112, 0.44 ) }
    dend_14 { pt3dadd( -60.1502, -125.318, 1.00299, 1.55 ) }
    dend_14 { pt3dadd( -60.6923, -126.423, 0.420443, 1.69 ) }
    dend_14 { pt3dadd( -61.3509, -128.173, -0.461581, 0.37 ) }
    dend_14 { pt3dadd( -61.3803, -128.27, -0.506538, 0.37 ) }
    dend_14 { pt3dadd( -61.5405, -128.831, -0.749703, 1.11 ) }
    dend_14 { pt3dadd( -62.2983, -131.232, -1.66321, 0.29 ) }
    dend_14 { pt3dadd( -62.6636, -132.429, -2.03165, 0.44 ) }
    dend_14 { pt3dadd( -63.0465, -133.722, -2.36687, 0.81 ) }
    dend_14 { pt3dadd( -63.3945, -134.953, -2.62596, 1.55 ) }
    dend_14 { pt3dadd( -63.6115, -135.856, -2.80201, 1.55 ) }
    dend_14 { pt3dadd( -63.955, -137.853, -3.18383, 0.59 ) }
    dend_14 { pt3dadd( -64.0867, -139.271, -3.41103, 0.66 ) }
    dend_14 { pt3dadd( -64.0842, -139.969, -3.56018, 1.11 ) }
    dend_14 { pt3dadd( -64.006, -140.993, -3.81147, 0.96 ) }
    dend_14 { pt3dadd( -63.7992, -142.669, -4.2916, 0.29 ) }
    dend_14 { pt3dadd( -63.544, -144.329, -4.80276, 0.29 ) }
    dend_14 { pt3dadd( -63.3593, -145.396, -5.14442, 1.18 ) }
    dend_14 { pt3dadd( -63.1679, -146.626, -5.54681, 1.47 ) }
    dend_14 { pt3dadd( -63.1141, -147.131, -5.71061, 1.69 ) }
    dend_14 { pt3dadd( -63.0543, -148.698, -6.19759, 0.96 ) }
    dend_14 { pt3dadd( -63.1198, -150.409, -6.65356, 0.52 ) }
    dend_14 { pt3dadd( -63.2911, -152.005, -7.02838, 0.52 ) }
    dend_14 { pt3dadd( -63.3853, -152.672, -7.1721, 0.29 ) }
    dend_14 { pt3dadd( -63.5551, -153.666, -7.33317, 0.29 ) }
    dend_14 { pt3dadd( -63.7235, -154.589, -7.44837, 0.29 ) }
    dend_14 { pt3dadd( -63.8582, -155.285, -7.51052, 1.03 ) }
    dend_14 { pt3dadd( -63.9774, -155.884, -7.5621, 1.55 ) }
    dend_14 { pt3dadd( -64.1132, -156.677, -7.64443, 1.77 ) }
    dend_14 { pt3dadd( -64.2404, -157.68, -7.76216, 1.25 ) }
    dend_14 { pt3dadd( -64.3505, -159.012, -7.92864, 0.74 ) }
    dend_14 { pt3dadd( -64.463, -160.781, -8.17416, 0.44 ) }
    dend_14 { pt3dadd( -64.5093, -161.753, -8.32016, 0.74 ) }
    dend_14 { pt3dadd( -64.5648, -163.113, -8.53633, 0.29 ) }
    dend_14 { pt3dadd( -64.6112, -163.91, -8.66479, 1.11 ) }
    dend_14 { pt3dadd( -64.6954, -164.749, -8.78804, 1.33 ) }
    dend_14 { pt3dadd( -64.8758, -165.931, -8.91997, 0.81 ) }
    dend_14 { pt3dadd( -65.0682, -166.892, -8.98563, 0.37 ) }
    dend_14 { pt3dadd( -65.3262, -168.139, -9.02983, 0.37 ) }
    dend_14 { pt3dadd( -65.5455, -169.205, -9.03305, 0.29 ) }
    dend_14 { pt3dadd( -65.7748, -170.347, -9.04841, 0.29 ) }
    dend_14 { pt3dadd( -65.9521, -171.287, -9.06279, 0.29 ) }
    dend_14 { pt3dadd( -65.9812, -171.495, -9.07256, 0.29 ) }
    dend_14 { pt3dadd( -66.1161, -172.85, -9.23777, 0.29 ) }
    dend_14 { pt3dadd( -66.1834, -173.964, -9.44406, 1.47 ) }
    dend_14 { pt3dadd( -66.2309, -174.973, -9.67518, 2.06 ) }
    dend_14 { pt3dadd( -66.2764, -175.589, -9.79781, 2.06 ) }
    dend_14 { pt3dadd( -66.5231, -177.115, -10.0258, 0.88 ) }
    dend_14 { pt3dadd( -66.9739, -178.885, -10.1771, 0.29 ) }
    dend_14 { pt3dadd( -67.1744, -179.47, -10.1906, 0.52 ) }
    dend_14 { pt3dadd( -67.551, -180.45, -10.1512, 0.52 ) }
    dend_14 { pt3dadd( -68.2556, -182.288, -10.0776, 0.29 ) }
    dend_14 { pt3dadd( -68.7359, -183.652, -10.0319, 0.29 ) }
    dend_14 { pt3dadd( -69.2194, -185.227, -9.95986, 1.03 ) }
    dend_14 { pt3dadd( -69.4358, -186.124, -9.92856, 1.4 ) }
    dend_14 { pt3dadd( -69.5645, -186.844, -9.92767, 1.4 ) }
    dend_14 { pt3dadd( -69.8698, -189.367, -10.0309, 0.52 ) }
    dend_14 { pt3dadd( -69.9647, -190.558, -10.1345, 0.44 ) }
    dend_14 { pt3dadd( -70.0292, -191.993, -10.2467, 1.47 ) }
    dend_14 { pt3dadd( -70.0478, -192.606, -10.2879, 1.55 ) }
    dend_14 { pt3dadd( -70.0686, -193.624, -10.3379, 1.18 ) }
    dend_14 { pt3dadd( -70.0915, -195.046, -10.366, 0.59 ) }
    dend_14 { pt3dadd( -70.1128, -196.505, -10.3602, 0.29 ) }
    dend_14 { pt3dadd( -70.161, -197.957, -10.4515, 0.29 ) }
    dend_14 { pt3dadd( -70.2255, -198.886, -10.5564, 0.88 ) }
    dend_14 { pt3dadd( -70.33, -199.722, -10.676, 1.18 ) }
    dend_14 { pt3dadd( -70.4689, -200.411, -10.7931, 1.03 ) }
    dend_14 { pt3dadd( -70.9274, -201.99, -11.0723, 0.44 ) }
    dend_14 { pt3dadd( -71.6107, -203.801, -11.3613, 0.29 ) }
    dend_14 { pt3dadd( -72.082, -204.825, -11.4875, 0.29 ) }
    dend_14 { pt3dadd( -72.5975, -205.867, -11.5826, 0.29 ) }
    dend_14 { pt3dadd( -73.4667, -207.689, -11.7012, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_14 { pt3dadd( -74.0007, -208.859, -11.7352, 1.69 ) }
    dend_14 { pt3dadd( -74.4326, -209.854, -11.7123, 1.69 ) }
    dend_14 { pt3dadd( -75.0015, -211.295, -11.6304, 0.96 ) }
    dend_14 { pt3dadd( -75.5374, -212.814, -11.569, 0.37 ) }
    dend_14 { pt3dadd( -75.9614, -214.014, -11.5394, 0.37 ) }
    dend_14 { pt3dadd( -76.2912, -214.859, -11.5297, 0.37 ) }
    dend_14 { pt3dadd( -76.75, -215.963, -11.5223, 1.33 ) }
    dend_14 { pt3dadd( -77.1381, -216.862, -11.5171, 1.47 ) }
    dend_14 { pt3dadd( -77.7506, -218.268, -11.5041, 0.81 ) }
    dend_14 { pt3dadd( -78.3198, -219.596, -11.4698, 0.44 ) }
    dend_14 { pt3dadd( -78.804, -220.869, -11.4355, 0.29 ) }
    dend_14 { pt3dadd( -79.1141, -221.912, -11.4027, 0.29 ) }
    dend_14 { pt3dadd( -79.2447, -222.502, -11.3756, 0.66 ) }
    dend_14 { pt3dadd( -79.383, -223.299, -11.3185, 0.66 ) }
    dend_14 { pt3dadd( -79.4961, -224.208, -11.2097, 0.66 ) }
    dend_14 { pt3dadd( -79.6009, -225.477, -11.0322, 0.29 ) }
    dend_14 { pt3dadd( -79.6331, -226.611, -10.8762, 0.52 ) }
    dend_14 { pt3dadd( -79.6542, -227.882, -10.6823, 1.18 ) }
    dend_14 { pt3dadd( -79.6629, -228.788, -10.5276, 1.55 ) }
    dend_14 { pt3dadd( -79.6651, -229.841, -10.3332, 1.03 ) }
    dend_14 { pt3dadd( -79.6373, -231.462, -10.022, 0.37 ) }
    dend_14 { pt3dadd( -79.5482, -232.808, -9.73096, 0.29 ) }
    dend_14 { pt3dadd( -79.4258, -233.926, -9.4682, 0.81 ) }
    dend_14 { pt3dadd( -79.3401, -234.582, -9.30764, 1.18 ) }
    dend_14 { pt3dadd( -79.2746, -235.064, -9.18653, 1.18 ) }
    dend_14 { pt3dadd( -79.1734, -235.951, -8.9613, 0.88 ) }
    dend_14 { pt3dadd( -79.0545, -237.685, -8.49687, 0.29 ) }
    dend_14 { pt3dadd( -79.0407, -238.57, -8.26651, 0.29 ) }
    dend_14 { pt3dadd( -79.0394, -239.592, -8.04105, 0.96 ) }
    dend_14 { pt3dadd( -79.0411, -239.702, -8.01866, 0.96 ) }
    dend_14 { pt3dadd( -79.0492, -240.099, -7.94353, 1.33 ) }
    dend_14 { pt3dadd( -79.0674, -240.706, -7.84557, 1.62 ) }
    dend_14 { pt3dadd( -79.0762, -241.249, -7.77903, 1.77 ) }
    dend_14 { pt3dadd( -79.0642, -242.36, -7.65278, 0.96 ) }
    dend_14 { pt3dadd( -79.0443, -243.374, -7.53832, 0.59 ) }
    dend_14 { pt3dadd( -79.001, -244.724, -7.43615, 0.29 ) }
    dend_14 { pt3dadd( -78.9414, -246.05, -7.40072, 0.22 ) }
    dend_14 { pt3dadd( -78.914, -247.052, -7.40478, 1.03 ) }
    dend_14 { pt3dadd( -78.9278, -247.684, -7.4204, 1.62 ) }
    dend_14 { pt3dadd( -78.9774, -248.299, -7.4479, 1.84 ) }
    dend_14 { pt3dadd( -79.2136, -250.044, -7.55339, 0.44 ) }
    dend_14 { pt3dadd( -79.5099, -251.467, -7.65483, 0.37 ) }
    dend_14 { pt3dadd( -79.7677, -252.372, -7.70548, 0.29 ) }
    dend_14 { pt3dadd( -80.1456, -253.446, -7.73443, 0.29 ) }
    dend_14 { pt3dadd( -80.5438, -254.464, -7.72573, 0.29 ) }
    dend_14 { pt3dadd( -80.9467, -255.401, -7.6719, 0.29 ) }
    dend_14 { pt3dadd( -81.2261, -255.992, -7.60278, 1.18 ) }
    dend_14 { pt3dadd( -81.5689, -256.739, -7.504, 1.55 ) }
    dend_14 { pt3dadd( -81.8352, -257.405, -7.42559, 1.18 ) }
    dend_14 { pt3dadd( -82.1846, -258.376, -7.32031, 0.52 ) }
    dend_14 { pt3dadd( -82.5326, -259.301, -7.21965, 0.29 ) }
    dend_14 { pt3dadd( -83.1188, -260.761, -6.97101, 0.29 ) }
    dend_14 { pt3dadd( -83.5385, -261.725, -6.75653, 0.29 ) }
    dend_14 { pt3dadd( -83.7896, -262.243, -6.60592, 1.18 ) }
    dend_14 { pt3dadd( -84.0541, -262.763, -6.42925, 1.84 ) }
    dend_14 { pt3dadd( -84.3469, -263.319, -6.21551, 1.99 ) }
    dend_14 { pt3dadd( -85.3308, -265.177, -5.44054, 0.29 ) }
    dend_14 { pt3dadd( -86.0417, -266.523, -4.8394, 0.29 ) }
    dend_14 { pt3dadd( -86.5851, -267.568, -4.37719, 0.29 ) }
    dend_14 { pt3dadd( -86.9191, -268.241, -4.09866, 0.29 ) }
    dend_14 { pt3dadd( -87.2382, -268.898, -3.83648, 0.81 ) }
    dend_14 { pt3dadd( -87.3601, -269.159, -3.73951, 1.11 ) }
    dend_14 { pt3dadd( -87.5256, -269.507, -3.6285, 1.25 ) }
    dend_14 { pt3dadd( -88.099, -270.676, -3.24459, 0.29 ) }
    dend_14 { pt3dadd( -88.6373, -271.509, -2.95289, 0.29 ) }
    dend_14 { pt3dadd( -89.4385, -272.433, -2.56943, 0.22 ) }
    dend_14 { pt3dadd( -89.5316, -272.524, -2.52907, 0.52 ) }
    dend_14 { pt3dadd( -89.9677, -272.903, -2.32921, 0.66 ) }
    dend_14 { pt3dadd( -90.2596, -273.128, -2.19283, 0.66 ) }
    dend_14 { pt3dadd( -91.2115, -273.741, -1.76202, 0.22 ) }
    dend_14 { pt3dadd( -92.0332, -274.227, -1.39876, 0.22 ) }
    dend_14 { pt3dadd( -92.777, -274.714, -1.08025, 0.22 ) }
    dend_14 { pt3dadd( -93.4585, -275.232, -0.763085, 0.96 ) }
    dend_14 { pt3dadd( -93.7481, -275.514, -0.604861, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 74/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -57.4925, -191.663, 7.27843, 0.22 ) }
    dend_12 { pt3dadd( -58.055, -192.535, 7.48332, 0.22 ) }
    dend_12 { pt3dadd( -58.2452, -192.823, 7.543, 0.66 ) }
    dend_12 { pt3dadd( -58.8119, -193.681, 7.70699, 0.22 ) }
    dend_12 { pt3dadd( -58.9137, -193.838, 7.73547, 0.52 ) }
    dend_12 { pt3dadd( -59.4236, -194.627, 7.87414, 0.15 ) }
    dend_12 { pt3dadd( -59.851, -195.304, 7.98959, 0.44 ) }
    dend_12 { pt3dadd( -60.1907, -195.846, 8.05691, 0.15 ) }
    dend_12 { pt3dadd( -60.4171, -196.24, 8.09772, 0.44 ) }
    dend_12 { pt3dadd( -60.5693, -196.548, 8.11641, 0.44 ) }
    dend_12 { pt3dadd( -60.6, -196.616, 8.11469, 0.44 ) }
    dend_12 { pt3dadd( -60.7831, -197.061, 8.07837, 0.15 ) }
    dend_12 { pt3dadd( -60.8791, -197.331, 8.04905, 0.66 ) }
    dend_12 { pt3dadd( -61.2217, -198.42, 7.91981, 0.15 ) }
    dend_12 { pt3dadd( -61.4386, -199.147, 7.83369, 1.25 ) }
    dend_12 { pt3dadd( -61.8367, -200.497, 7.66295, 0.15 ) }
    dend_12 { pt3dadd( -61.9854, -201.012, 7.59489, 0.44 ) }
    dend_12 { pt3dadd( -62.079, -201.34, 7.54774, 0.44 ) }
    dend_12 { pt3dadd( -62.2084, -201.817, 7.47776, 0.22 ) }
    dend_12 { pt3dadd( -62.3111, -202.264, 7.41769, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 94/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -57.4925, -191.663, 7.27843, 0.29 ) }
    dend_11 { pt3dadd( -57.8649, -191.61, 6.76787, 0.29 ) }
    dend_11 { pt3dadd( -58.2936, -191.55, 6.18015, 0.22 ) }
    dend_11 { pt3dadd( -58.5554, -191.513, 5.82128, 0.52 ) }
    dend_11 { pt3dadd( -58.8774, -191.468, 5.37992, 0.15 ) }
    dend_11 { pt3dadd( -59.1505, -191.429, 5.00547, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 0/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -25.2405, -120.74, 33.4736, 0.37 ) }
    dend_8 { pt3dadd( -25.8554, -122.908, 33.4203, 0.37 ) }
    dend_8 { pt3dadd( -26.3619, -123.928, 33.4293, 0.37 ) }
    dend_8 { pt3dadd( -27.0218, -124.912, 33.4576, 0.29 ) }
    dend_8 { pt3dadd( -27.9098, -126.236, 33.4957, 0.29 ) }
    dend_8 { pt3dadd( -28.5714, -127.222, 33.5241, 0.29 ) }
    dend_8 { pt3dadd( -28.6184, -127.292, 33.5261, 0.29 ) }
    dend_8 { pt3dadd( -29.5288, -128.008, 33.669, 0.96 ) }
    dend_8 { pt3dadd( -30.0127, -128.258, 33.7291, 0.96 ) }
    dend_8 { pt3dadd( -34.9621, -139.027, 35.6089, 0.96 ) }
    dend_8 { pt3dadd( -39.8787, -149.994, 35.6824, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -25.2405, -120.74, 33.4736, 0.88 ) }
    dend_7 { pt3dadd( -25.8062, -121.201, 33.8203, 0.88 ) }
    dend_7 { pt3dadd( -26.4735, -121.707, 34.237, 0.59 ) }
    dend_7 { pt3dadd( -27.0896, -122.188, 34.66, 0.59 ) }
    dend_7 { pt3dadd( -27.6099, -122.656, 35.0328, 0.29 ) }
    dend_7 { pt3dadd( -27.9975, -123.066, 35.3174, 0.29 ) }
    dend_7 { pt3dadd( -28.0899, -123.177, 35.3863, 0.59 ) }
    dend_7 { pt3dadd( -28.2099, -123.377, 35.4882, 0.59 ) }
    dend_7 { pt3dadd( -28.3847, -124.144, 35.7112, 0.29 ) }
    dend_7 { pt3dadd( -28.3685, -124.897, 35.7903, 0.29 ) }
    dend_7 { pt3dadd( -28.2756, -125.447, 35.7772, 0.29 ) }
    dend_7 { pt3dadd( -28.2197, -125.671, 35.758, 0.29 ) }
    dend_7 { pt3dadd( -28.0855, -126.12, 35.6849, 0.29 ) }
    dend_7 { pt3dadd( -27.7633, -127.016, 35.4862, 0.44 ) }
    dend_7 { pt3dadd( -27.7152, -127.124, 35.451, 0.44 ) }
    dend_7 { pt3dadd( -27.5908, -127.374, 35.3639, 0.81 ) }
    dend_7 { pt3dadd( -27.5694, -127.414, 35.3491, 0.81 ) }
    dend_7 { pt3dadd( -27.28, -127.899, 35.1444, 0.81 ) }
    dend_7 { pt3dadd( -30.8063, -134.92, 36.2832, 0.81 ) }
    dend_7 { pt3dadd( -34.7116, -141.831, 36.3141, 0.81 ) }
    dend_7 { pt3dadd( -38.6629, -148.554, 37.6723, 0.81 ) }
    dend_7 { pt3dadd( -43.0899, -154.827, 39.4507, 0.81 ) }
    dend_7 { pt3dadd( -45.9973, -162.017, 41.1798, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -93.7481, -275.514, -0.604861, 0.29 ) }
    dend_16 { pt3dadd( -93.7519, -276.583, -0.603989, 0.29 ) }
    dend_16 { pt3dadd( -93.721, -277.162, -0.641121, 0.29 ) }
    dend_16 { pt3dadd( -93.6974, -277.494, -0.669009, 1.03 ) }
    dend_16 { pt3dadd( -93.6789, -277.822, -0.694774, 1.18 ) }
    dend_16 { pt3dadd( -93.6587, -278.24, -0.726144, 1.18 ) }
    dend_16 { pt3dadd( -93.5931, -279.5, -0.817338, 0.22 ) }
    dend_16 { pt3dadd( -93.5249, -280.149, -0.89489, 0.22 ) }
    dend_16 { pt3dadd( -93.5085, -280.273, -0.910566, 0.37 ) }
    dend_16 { pt3dadd( -93.3915, -281.123, -1.01373, 0.22 ) }
    dend_16 { pt3dadd( -93.383, -281.195, -1.02151, 0.22 ) }
    dend_16 { pt3dadd( -93.3232, -281.748, -1.06754, 0.22 ) }
    dend_16 { pt3dadd( -93.2975, -282.034, -1.0665, 0.66 ) }
    dend_16 { pt3dadd( -93.2891, -282.097, -1.06716, 0.66 ) }
    dend_16 { pt3dadd( -93.2422, -282.334, -1.07447, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -93.7481, -275.514, -0.604861, 0.22 ) }
    dend_15 { pt3dadd( -94.4484, -274.171, -0.210006, 0.22 ) }
    dend_15 { pt3dadd( -94.7607, -273.537, -0.025371, 1.11 ) }
    dend_15 { pt3dadd( -95.0314, -272.964, 0.138944, 1.25 ) }
    dend_15 { pt3dadd( -95.0683, -272.886, 0.161317, 1.25 ) }
    dend_15 { pt3dadd( -95.8104, -271.356, 0.604118, 0.22 ) }
    dend_15 { pt3dadd( -95.8449, -271.291, 0.624257, 0.22 ) }
    dend_15 { pt3dadd( -95.9764, -271.048, 0.703903, 0.22 ) }
    dend_15 { pt3dadd( -96.0232, -270.963, 0.73261, 0.22 ) }
    dend_15 { pt3dadd( -96.3368, -270.425, 0.922444, 0.81 ) }
    dend_15 { pt3dadd( -96.5541, -270.098, 1.04545, 0.81 ) }
    dend_15 { pt3dadd( -97.1145, -269.486, 1.31393, 0.22 ) }
    dend_15 { pt3dadd( -97.5688, -269.011, 1.52523, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_59, dend_46, dend_43, dend_40, dend_39, dend_30, dend_29, dend_28, dend_21, dend_0, dend_61, dend_60, dend_58, dend_47, dend_45, dend_44, dend_42, dend_41, dend_38, dend_31, dend_23, dend_22, dend_2, dend_1, dend_51, dend_48, dend_33, dend_32, dend_25, dend_24, dend_18, dend_3, dend_53, dend_52, dend_50, dend_49, dend_37, dend_34, dend_27, dend_26, dend_20, dend_19, dend_9, dend_4, dend_55, dend_54, dend_36, dend_35, dend_13, dend_10, dend_6, dend_5, dend_57, dend_56, dend_17, dend_14, dend_12, dend_11, dend_8, dend_7, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_59 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_59, dend_46, dend_43, dend_40, dend_39, dend_30, dend_29, dend_28, dend_21, dend_0, dend_61, dend_60, dend_58, dend_47, dend_45, dend_44, dend_42, dend_41, dend_38, dend_31, dend_23, dend_22, dend_2, dend_1, dend_51, dend_48, dend_33, dend_32, dend_25, dend_24, dend_18, dend_3, dend_53, dend_52, dend_50, dend_49, dend_37, dend_34, dend_27, dend_26, dend_20, dend_19, dend_9, dend_4, dend_55, dend_54, dend_36, dend_35, dend_13, dend_10, dend_6, dend_5, dend_57, dend_56, dend_17, dend_14, dend_12, dend_11, dend_8, dend_7, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_59, dend_46, dend_43, dend_40, dend_39, dend_30, dend_29, dend_28, dend_21, dend_0, axon_0, dend_61, dend_60, dend_58, dend_47, dend_45, dend_44, dend_42, dend_41, dend_38, dend_31, dend_23, dend_22, dend_2, dend_1, axon_1, dend_51, dend_48, dend_33, dend_32, dend_25, dend_24, dend_18, dend_3, dend_53, dend_52, dend_50, dend_49, dend_37, dend_34, dend_27, dend_26, dend_20, dend_19, dend_9, dend_4, dend_55, dend_54, dend_36, dend_35, dend_13, dend_10, dend_6, dend_5, dend_57, dend_56, dend_17, dend_14, dend_12, dend_11, dend_8, dend_7, dend_16, dend_15]}
    ModelViewParmSubset_5 = new SectionList()
    dend_59 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_39 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_61 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_60 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_58 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_44 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_41 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_32 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_50 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_49 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_37 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_26 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_19 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_55 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_36 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_35 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_5 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_17 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_7 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_59 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_46 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_40 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_43 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_21 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_47 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_51 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_23 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_33 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_34 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_25 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_9 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_54 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_8 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_56 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_57 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_16 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_15 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_59, dend_59, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_39 nseg = 9
    dend_29 nseg = 7
    dend_28 nseg = 11
    dend_61 nseg = 13
    dend_60 nseg = 11
    dend_58 nseg = 9
    dend_45 nseg = 15
    dend_44 nseg = 7
    dend_42 nseg = 9
    dend_41 nseg = 7
    dend_38 nseg = 7
    dend_22 nseg = 7
    dend_1 nseg = 9
    dend_32 nseg = 13
    dend_24 nseg = 7
    dend_18 nseg = 13
    dend_53 nseg = 3
    dend_52 nseg = 5
    dend_50 nseg = 7
    dend_49 nseg = 11
    dend_37 nseg = 5
    dend_27 nseg = 5
    dend_26 nseg = 7
    dend_19 nseg = 3
    dend_4 nseg = 3
    dend_55 nseg = 7
    dend_36 nseg = 9
    dend_35 nseg = 3
    dend_10 nseg = 7
    dend_5 nseg = 3
    dend_17 nseg = 15
    dend_14 nseg = 11
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_LBC_fece30537a_0_0


