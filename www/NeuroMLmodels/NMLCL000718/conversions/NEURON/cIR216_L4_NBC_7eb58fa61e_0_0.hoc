// Cell: cIR216_L4_NBC_7eb58fa61e_0_0
/*
{
  "id" : "cIR216_L4_NBC_7eb58fa61e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.49578, 9.66883, 0.467618, 3.07883", "-1.35379, 8.66156, 0.417811, 3.68571", "-1.21179, 7.65428, 0.368005, 4.49861", "-1.0698, 6.64701, 0.318198, 5.02547", "-0.927807, 5.63974, 0.268391, 5.55232", "-0.785813, 4.63247, 0.218585, 6.08002", "-0.643819, 3.6252, 0.168778, 6.65441", "-0.501826, 2.61792, 0.118971, 7.239", "-0.359832, 1.61065, 0.0691646, 7.82473", "-0.217838, 0.603378, 0.0193579, 8.41046", "-0.0758445, -0.403894, -0.0304487, 8.6567", "0.0661492, -1.41117, -0.0802554, 8.65482", "0.208143, -2.41844, -0.130062, 8.55954", "0.350137, -3.42571, -0.179869, 8.46266", "0.49213, -4.43298, -0.229676, 8.09049", "0.634124, -5.44025, -0.279482, 7.48075", "0.776118, -6.44753, -0.329289, 6.87101", "0.918112, -7.4548, -0.379096, 6.23286", "1.06011, -8.46207, -0.428902, 5.0468", "1.2021, -9.46934, -0.478709, 3.42243", "1.34409, -10.4766, -0.528516, 2.06215" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.94076, -11.1276, 1.79231, 1.94", "2.15273, -12.1799, 1.79231, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.13076, -4.13764, 8.98231, 0.55", "5.73152, -2.75607, 8.46691, 0.55", "7.41154, -1.12524, 7.89963, 0.83", "9.76909, 1.24132, 6.9214, 0.83", "12.5382, 3.87101, 5.76454, 0.55", "13.6941, 4.9137, 5.34882, 0.83", "16.0467, 7.01127, 4.58476, 0.28", "17.4825, 8.35121, 4.20425, 0.83", "20.0469, 10.7349, 3.71367, 0.55", "22.3646, 12.8181, 3.65666, 0.55", "24.2689, 14.4515, 4.00005, 0.83", "25.1591, 15.241, 4.32658, 0.83", "27.0709, 17.094, 5.36028, 0.55", "27.7015, 17.8341, 5.81447, 0.83", "29.3153, 20.1604, 7.23956, 0.28", "30.1203, 21.6101, 8.02378, 0.83", "31.7092, 25.0166, 9.54721, 0.28", "32.5001, 27.0062, 10.3194, 0.55", "33.4624, 30.1897, 11.3717, 0.28", "33.8559, 31.9499, 11.9193, 0.83", "34.0643, 33.7755, 12.4316, 0.55", "34.1199, 36.0611, 13.1005, 0.55", "34.0355, 37.3976, 13.1503, 1.11", "33.8128, 40.0488, 12.5682, 0.55", "33.7717, 40.6559, 12.3115, 0.55", "33.6993, 44.1952, 10.7572, 0.83", "33.8843, 48.5102, 8.55894, 0.28", "35.1714, 60.3158, 2.13222, 0.83", "35.45, 61.8071, 1.28456, 0.28", "35.8929, 63.6874, 0.0298004, 0.55", "37.0058, 67.5904, -2.88836, 0.28", "37.7084, 69.4737, -4.75542, 0.83", "38.2148, 70.5082, -6.10542, 0.28", "38.8295, 71.506, -5.62855, 0.83", "44.1599, 80.5978, -7.8874, 0.83", "48.9415, 89.8158, -10.7756, 0.83", "52.7451, 99.0865, -14.7462, 0.83", "58.0069, 108.02, -17.6939, 0.83", "62.0257, 117.627, -20.4763, 0.83", "66.8855, 126.421, -24.3772, 0.83", "71.6971, 134.648, -29.4098, 0.83", "75.3627, 142.96, -35.212, 0.83", "79.9935, 150.214, -41.7013, 0.83", "85.3967, 157.99, -46.8514, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.13924, 10.2624, 3.27231, 2.49", "-1.13924, 12.4279, 3.27231, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000041566367777
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.34409, -10.4766, -0.528516, 0.83", "3.43791, -25.3297, -0.528516, 0.83", "5.53174, -40.1829, -0.528516, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.15273, -12.1799, 1.79231, 0.28", "3.29916, -14.9175, 3.8426, 0.28", "3.80333, -16.1213, 4.74425, 0.55", "5.51706, -20.2136, 7.80913, 0.28", "7.14594, -24.1031, 10.7222, 0.28", "8.15199, -26.5055, 12.5215, 0.28", "10.7175, -34.7574, 17.7602, 0.28", "13.5643, -41.5218, 24.7072, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.15273, -12.1799, 1.79231, 1.66", "1.25835, -15.7517, -1.93919, 1.66", "0.104529, -20.3597, -6.7531, 1.94" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.13924, 12.4279, 3.27231, 0.83", "-0.379812, 14.7529, 2.80237, 0.83", "0.0724075, 16.1221, 2.31018, 0.55", "0.520509, 17.4792, 1.70816, 0.83", "1.24718, 19.6518, 0.655161, 0.83", "1.61333, 20.745, 0.137732, 1.11", "2.56329, 23.5814, -1.20471, 1.11", "3.52222, 26.4588, -2.70415, 0.55", "4.43072, 29.1209, -4.19982, 1.11", "5.37016, 31.7998, -5.75574, 1.11", "6.04792, 33.739, -6.84859, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.13924, 12.4279, 3.27231, 1.11", "-3.6544, 17.3239, 5.86066, 1.11", "-4.85312, 19.6573, 7.09427, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.53174, -40.1829, -0.528516, 0.28", "7.62556, -55.036, -0.528516, 0.28", "9.71939, -69.8892, -0.528516, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "13.5643, -41.5218, 24.7072, 0.28", "14.7107, -48.5399, 31.1926, 0.28", "14.1965, -56.1127, 37.1102, 0.28", "12.0101, -64.1276, 41.9693, 0.28", "10.7814, -72.0302, 47.3235, 0.28", "7.72636, -78.7171, 53.5349, 0.28", "5.25864, -85.8989, 59.4477, 0.28", "3.87279, -92.7408, 66.0731, 0.28", "2.98612, -100.626, 71.5185, 0.28", "2.71839, -108.264, 77.3683, 0.28", "1.25455, -115.778, 83.2015, 0.28", "0.372112, -123.382, 89.0361, 0.28", "-0.145031, -131.82, 93.638, 0.28", "-2.2374, -140.529, 97.1597, 0.28", "-3.26547, -149.71, 99.8585, 0.28", "-4.51624, -159.018, 101.955, 0.28", "-6.76759, -167.564, 105.766, 0.28", "-8.46527, -175.279, 111.266, 0.28", "-11.321, -183.589, 115.192, 0.28", "-15.9463, -191.307, 118.606, 0.28", "-19.6465, -199.618, 121.747, 0.28", "-23.5985, -207.053, 126.409, 0.28", "-27.9972, -213.951, 131.48, 0.28", "-33.2661, -218.626, 138.038, 0.28", "-38.6407, -222.62, 144.951, 0.28", "-44.4487, -225.512, 152.059, 0.28", "-48.4434, -229.799, 159.694, 0.28", "-53.8198, -234.514, 166.136, 0.28", "-60.6879, -237.979, 171.919, 0.28", "-67.7072, -239.303, 178.37, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.5643, -41.5218, 24.7072, 0.28", "18.3549, -50.353, 30.6955, 0.28", "24.0993, -58.8335, 36.342, 0.28", "29.0683, -67.4846, 42.4468, 0.28", "34.3767, -76.5483, 47.5915, 0.28", "39.6028, -84.4981, 54.3952, 0.28", "46.0424, -92.2445, 60.3386, 0.28", "51.7017, -99.5766, 67.481, 0.28", "56.8938, -107.787, 73.9938, 0.28", "60.2068, -117.329, 79.891, 0.28", "65.4599, -125.914, 85.849, 0.28", "71.393, -134.953, 90.3113, 0.28", "78.5672, -142.462, 95.6911, 0.28", "86.0008, -149.242, 101.655, 0.28", "94.1179, -156.34, 106.186, 0.28", "101.925, -162.423, 112.42, 0.28", "110.129, -169.645, 116.583, 0.28", "117.882, -177.48, 120.495, 0.28", "126.044, -185.244, 123.64, 0.28", "133.123, -193.346, 128.23, 0.28", "138.995, -202.522, 132.486, 0.28", "144.586, -212.208, 135.908, 0.28", "151.342, -221.671, 137.188, 0.28", "158.888, -230.268, 139.622, 0.28", "166.339, -239.143, 141.213, 0.28", "174.573, -247.434, 141.73, 0.28", "182.152, -256.181, 140.046, 0.28", "191.023, -263.685, 138.705, 0.28", "200.207, -270.913, 138.241, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "0.104529, -20.3597, -6.7531, 0.55", "-0.0951286, -21.9091, -8.40944, 0.55", "-0.236042, -23.5107, -10.13, 0.55", "-0.416507, -25.8705, -13.0544, 0.28", "-0.481951, -26.9053, -14.4021, 0.83", "-0.561335, -29.5937, -18.0313, 0.55", "-0.55819, -31.537, -20.7443, 0.55", "-0.540544, -32.3195, -22.0056, 0.55", "-0.299825, -34.7099, -26.2605, 0.28", "-0.244004, -34.9563, -26.7319, 0.28", "-0.0724323, -35.5057, -27.8164, 0.28", "0.175328, -36.0415, -28.7386, 0.83", "1.07478, -37.6677, -31.2591, 0.83", "1.88758, -39.0376, -33.1755, 0.55", "2.48287, -40.0686, -34.3877, 0.83", "3.54732, -42.0192, -36.5155, 0.55", "4.62935, -44.2099, -38.777, 0.83", "5.60935, -46.1187, -40.6586, 0.55", "5.95273, -46.7544, -41.2473, 0.55", "6.93605, -48.4671, -42.9333, 0.83", "7.41248, -49.4092, -43.9997, 0.83", "8.22821, -51.2788, -46.3305, 0.55", "8.52767, -52.0775, -47.4842, 0.55", "8.82621, -52.851, -48.6362, 0.28", "9.19805, -53.8726, -50.3284, 0.83", "9.89243, -56.0326, -54.4493, 0.55", "10.3175, -57.4607, -57.4181, 0.28", "10.5659, -58.3439, -59.4076, 0.55", "10.6949, -58.7565, -60.3712, 0.28", "11.1671, -59.9424, -63.3147, 0.83", "12.2038, -61.6839, -67.7528, 0.28", "12.6379, -62.1981, -69.1741, 0.55", "13.9119, -63.4331, -72.6857, 0.28", "14.6657, -64.1562, -74.524, 0.55", "16.0332, -65.4177, -77.5511, 0.55", "17.1353, -66.4784, -79.8849, 0.83", "19.3871, -68.7774, -84.5742, 0.28", "19.9479, -69.4096, -85.8159, 0.55", "21.3685, -71.3007, -89.6058, 0.28", "21.7368, -71.9017, -90.8437, 0.83", "22.5185, -73.4681, -94.3214, 0.28", "22.7609, -74.02, -95.6956, 0.55", "22.8645, -74.177, -96.1836, 0.55", "24.0722, -75.4374, -101.417, 0.28", "24.3045, -75.5781, -102.216, 0.55", "25.3784, -75.9935, -105.115, 0.28", "26.288, -76.2133, -107.03, 0.83", "28.617, -76.7843, -111.444, 0.28", "29.2563, -76.9515, -112.437, 0.55", "30.3767, -77.2787, -113.772, 0.28", "31.4076, -77.6564, -114.897, 0.83", "31.7607, -77.8266, -115.255, 0.83", "33.8114, -79.0005, -117.394, 0.28", "34.7634, -79.6091, -118.365, 0.55", "35.2376, -79.914, -118.872, 0.28", "36.4088, -80.6644, -120.152, 0.83", "38.6746, -82.0376, -122.442, 0.55", "39.4829, -82.4578, -123.189, 0.83", "40.8821, -83.0282, -124.254, 0.28", "41.4482, -83.2338, -124.688, 0.55", "42.1092, -83.4434, -125.177, 0.28", "43.1634, -83.8019, -126.068, 0.55", "43.7092, -84.0124, -126.53, 0.28", "44.6464, -84.4808, -127.558, 0.55", "46.0036, -85.2394, -129.26, 0.28", "46.4391, -85.5391, -129.935, 0.55", "48.0954, -86.8436, -132.768, 0.28", "48.8917, -87.5458, -134.224, 0.83", "50.1343, -88.7553, -136.539, 0.28", "50.3267, -88.9626, -136.91, 0.55", "51.8438, -90.6962, -139.776, 0.28", "52.4571, -91.4597, -140.913, 0.28", "52.6498, -91.7453, -141.301, 0.55", "52.9996, -92.3915, -142.056, 0.28", "53.3208, -93.1001, -142.755, 0.55", "53.9607, -94.7246, -144.188, 0.28", "54.5627, -96.368, -145.469, 0.55", "55.4994, -98.9502, -147.416, 0.28", "56.0755, -100.66, -148.781, 0.83", "56.6606, -102.422, -150.246, 0.28", "57.0315, -103.386, -150.966, 0.55", "57.2614, -103.955, -151.372, 0.28", "57.6731, -104.84, -152.025, 0.83", "59.6065, -108.143, -154.492, 0.28", "59.9703, -108.77, -155.31, 0.55", "60.6838, -110.324, -158.38, 0.28", "60.93, -111.326, -160.867, 0.55", "60.9474, -111.881, -162.421, 0.28", "60.9217, -112.145, -163.23, 0.55", "60.4999, -114.784, -171.757, 0.55", "60.2449, -115.898, -175.544, 0.28", "60.0262, -116.618, -178.041, 0.83", "59.5501, -118.497, -183.923, 0.28", "59.5275, -118.648, -184.325, 0.55", "59.5593, -119.355, -185.886, 0.28", "60.0669, -120.774, -188.284, 0.55", "60.6479, -121.747, -189.722, 0.28", "61.2349, -122.582, -190.907, 0.55", "62.6746, -124.416, -193.381, 0.28", "63.3706, -125.328, -194.542, 0.55", "65.0826, -127.742, -197.68, 0.28", "66.1219, -129.225, -199.478, 0.55", "67.6384, -131.309, -202.071, 0.28", "68.098, -131.943, -202.828, 0.55", "69.0926, -133.292, -204.462, 0.28", "70.6253, -135.415, -207.165, 0.28", "71.0018, -135.906, -207.738, 0.28", "71.5246, -136.652, -208.611, 0.55", "72.4351, -138.042, -210.105, 0.28", "73.4918, -139.77, -212.043, 0.55", "75.1553, -142.57, -215.373, 0.28", "75.732, -143.566, -216.432, 0.55", "76.2376, -144.596, -217.553, 0.28", "76.6456, -145.714, -218.788, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.104529, -20.3597, -6.7531, 1.66", "-0.653167, -23.3846, -7.9753, 1.66", "-1.71898, -27.6395, -9.69451, 1.94" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.04792, 33.739, -6.84859, 0.55", "5.51673, 36.781, -5.34897, 0.55", "5.13824, 38.6123, -4.31392, 0.55", "4.6251, 40.8503, -2.99211, 0.28", "4.18647, 42.3847, -2.24647, 0.55", "3.63221, 44.1901, -1.48762, 0.28", "2.9267, 46.514, -0.600112, 0.55", "2.29411, 48.5793, 0.0878262, 0.28", "1.97685, 50.0392, 0.601944, 0.83", "1.32754, 54.0352, 1.66498, 0.28", "1.21793, 55.4141, 2.07425, 0.83", "1.12426, 57.1787, 2.64193, 0.55", "1.1066, 58.8264, 3.25112, 0.83", "1.16654, 63.7613, 5.4429, 0.55", "1.31347, 67.1411, 7.27634, 0.83", "1.65189, 71.5658, 9.99221, 0.55", "1.79088, 73.4648, 11.1961, 0.55", "2.04473, 76.6399, 13.3908, 0.83", "2.35875, 81.0843, 16.6009, 0.55", "2.52241, 83.0628, 18.1347, 0.83", "2.8195, 85.2658, 19.956, 0.28", "2.94055, 85.8609, 20.4523, 0.55", "3.99738, 90.2535, 23.9769, 0.28", "4.54015, 92.3694, 25.5323, 0.55", "5.36038, 95.7079, 27.6388, 0.28", "5.86507, 97.8183, 28.8092, 0.55", "6.99423, 102.982, 31.3429, 0.28", "7.62926, 106.001, 32.5774, 0.55", "8.22235, 108.995, 33.5149, 0.28", "8.8248, 112.089, 34.3346, 0.28", "8.98682, 113.174, 34.5209, 0.55", "9.2592, 115.499, 34.8175, 0.55", "9.29509, 116.486, 34.8131, 0.55", "10.7416, 128.385, 39.0327, 0.55", "12.4598, 140.676, 41.7744, 0.55", "11.356, 153.262, 43.1495, 0.55", "10.4852, 165.902, 42.1768, 0.55", "10.107, 178.411, 39.9585, 0.55", "10.4256, 190.691, 36.7051, 0.55", "8.09357, 202.734, 33.38, 0.55", "6.13799, 214.419, 28.7821, 0.55", "1.17974, 225.271, 24.4046, 0.55", "-3.49972, 235.372, 18.2748, 0.55", "-7.68552, 245.758, 12.2654, 0.55", "-11.9182, 256.712, 7.40623, 0.55", "-15.4706, 267.974, 2.70768, 0.55", "-19.9683, 278.773, -2.25535, 0.55", "-25.3522, 289.393, -6.69769, 0.55", "-31.1354, 299.982, -10.6942, 0.55", "-35.3411, 311.178, -14.9877, 0.55", "-41.6882, 321.957, -17.2322, 0.55", "-47.5179, 332.344, -21.6657, 0.55", "-53.8009, 342.232, -26.5919, 0.55", "-59.9873, 351.286, -33.0147, 0.55", "-67.0436, 359.227, -39.9908, 0.55", "-74.7337, 365.947, -47.5544, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.04792, 33.739, -6.84859, 0.83", "8.33389, 36.9973, -7.75026, 0.83", "9.91698, 39.113, -8.32853, 0.55", "10.9589, 40.348, -8.69705, 0.55", "11.9411, 41.4841, -9.03079, 0.55", "13.3152, 43.0518, -9.48049, 0.55", "15.4103, 45.378, -10.1034, 0.83", "16.7619, 46.7771, -10.4389, 0.83", "18.6557, 48.6115, -10.9183, 0.83", "20.5277, 50.3515, -11.3577, 0.83", "23.2093, 52.8077, -12.071, 0.55", "25.6122, 55.053, -12.8226, 0.83", "27.9386, 57.2148, -13.633, 0.83", "28.9586, 58.211, -14.012, 0.83", "31.5684, 60.7842, -15.0287, 0.83", "34.4588, 63.6447, -16.2072, 0.83", "36.6791, 65.861, -17.1608, 0.55", "38.8734, 68.1171, -18.1334, 0.55", "40.8004, 70.1968, -18.9165, 0.83", "42.3154, 72.0276, -19.5401, 0.55", "43.4025, 73.5405, -20.043, 0.55", "44.6306, 75.5644, -20.6355, 0.83", "46.0411, 78.4462, -21.5241, 0.83", "46.8304, 80.6414, -22.2514, 0.83", "47.6549, 84.0005, -23.4716, 0.55", "47.9925, 86.4049, -24.5092, 0.83", "48.0442, 87.7555, -25.2892, 0.83", "47.9795, 89.3526, -26.3681, 0.83", "47.8785, 90.7112, -27.4358, 0.83", "47.7644, 92.2579, -28.9237, 0.55", "47.7014, 94.5419, -31.2783, 0.83", "47.7514, 98.4558, -35.4711, 0.28", "47.8137, 99.9575, -37.0733, 0.83", "47.9488, 102.069, -39.2749, 0.83", "48.3141, 106.508, -43.7572, 0.55", "48.5197, 108.132, -45.23, 0.83", "49.1669, 111.779, -47.8396, 0.28", "49.5955, 113.657, -48.8731, 0.28", "49.8846, 114.881, -49.3873, 0.55", "50.1217, 116.056, -49.6928, 0.28", "50.5499, 118.747, -49.9756, 0.83", "50.8493, 122.478, -50.362, 0.28", "50.9264, 124.342, -50.5297, 0.28", "50.9415, 125.726, -50.7695, 0.83", "50.9379, 129.415, -51.6725, 0.28", "50.8973, 131.506, -52.3336, 0.83", "50.7947, 135.057, -53.7695, 0.55", "50.7669, 136.146, -54.3341, 0.28", "50.8623, 138.715, -55.8211, 0.55", "51.0708, 140.451, -56.98, 0.55", "51.3678, 141.51, -57.8165, 0.28", "51.7843, 142.316, -58.5314, 0.55", "53.2605, 144.186, -60.2019, 0.55", "54.1971, 145.117, -61.004, 0.28", "55.24, 145.995, -61.6824, 0.55", "56.6684, 147.102, -62.3589, 0.55", "59.8751, 149.54, -63.4046, 0.28", "61.2469, 150.59, -63.6896, 0.83", "63.865, 152.667, -63.9988, 0.55", "65.4896, 154.042, -64.1084, 0.55", "68.5697, 156.924, -64.1526, 0.28", "70.9369, 159.415, -64.0666, 0.83", "73.1184, 162.029, -63.6264, 0.55", "74.9302, 164.396, -62.9763, 0.55", "76.0106, 166.016, -62.4428, 1.11", "77.0828, 167.883, -61.8111, 1.11", "77.6396, 169.066, -61.4219, 1.11", "79.8459, 175.088, -59.3762, 0.28", "80.2414, 176.516, -58.8936, 0.28", "80.7666, 178.831, -58.1597, 0.55", "81.0914, 180.969, -57.6181, 0.28", "81.1703, 181.77, -57.4701, 0.83", "81.2289, 183.521, -57.3254, 0.28", "81.2068, 184.88, -57.3604, 0.55", "81.2245, 186.296, -57.2675, 0.28", "81.3447, 190.404, -56.642, 0.28", "81.4064, 192.299, -56.2784, 0.55", "81.483, 194.938, -55.7031, 0.28", "81.5427, 196.551, -55.3199, 0.83", "81.7501, 202.036, -53.8963, 0.28", "81.8168, 203.564, -53.4498, 0.83", "81.9459, 205.363, -52.8487, 0.28", "82.0051, 206.443, -52.4155, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.85312, 19.6573, 7.09427, 1.11", "-3.63692, 22.6544, 8.34063, 1.11", "-2.66889, 25.0399, 9.33268, 0.83", "-1.54099, 27.8194, 10.4885, 0.83", "0.514026, 32.8836, 12.5945, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.85312, 19.6573, 7.09427, 0.83", "-6.83845, 24.8124, 6.03416, 0.83", "-8.22756, 28.4194, 5.29241, 1.11", "-9.38731, 31.4307, 4.67315, 1.11", "-9.80266, 32.5093, 4.45136, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.71898, -27.6395, -9.69451, 0.83", "-2.8658, -26.8021, -10.675, 0.83", "-4.58327, -25.5708, -12.0398, 0.83", "-9.39272, -22.4846, -15.723, 1.11", "-12.2369, -20.6595, -17.9011, 1.11", "-15.8658, -18.3309, -20.6802, 1.11", "-17.6619, -17.1783, -22.0556, 0.55", "-18.7297, -16.5309, -22.8984, 0.55", "-21.5902, -15.0617, -25.0037, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.71898, -27.6395, -9.69451, 1.11", "-3.73174, -31.6877, -11.383, 1.11", "-5.02585, -34.2905, -12.4686, 1.11", "-6.75299, -37.7642, -13.9175, 1.11", "-9.18401, -42.6536, -15.9568, 1.11", "-12.1788, -48.6769, -18.469, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "82.0051, 206.443, -52.4155, 0.28", "80.6514, 206.359, -51.6765, 0.28", "79.433, 206.284, -51.0114, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "82.0051, 206.443, -52.4155, 0.55", "82.2661, 208.753, -50.4801, 0.55", "82.5106, 211.023, -48.6716, 0.55", "82.6763, 213.357, -46.9148, 0.28", "82.7615, 214.2, -46.2496, 0.55", "83.1193, 216.758, -44.313, 0.28", "83.2457, 217.475, -43.806, 0.55", "83.5304, 218.779, -42.9851, 0.28", "83.8744, 220.019, -42.2864, 0.55", "84.5055, 222.2, -41.2907, 0.28", "84.8981, 223.979, -40.9942, 0.28", "85.0405, 225.251, -41.2979, 0.55", "85.1479, 227.152, -42.2558, 0.28", "85.1479, 227.152, -42.2558, 0.55", "85.3407, 229.254, -43.5832, 0.28", "85.9048, 236.042, -47.6996, 0.28", "86.0831, 237.833, -48.7209, 0.55", "86.4506, 240.807, -50.251, 0.28", "86.6745, 242.195, -50.8003, 0.55", "87.4399, 246.286, -51.8405, 0.28", "87.7426, 247.827, -51.9938, 0.55", "88.0069, 249.04, -51.9605, 0.28", "88.2936, 250.477, -51.8878, 0.55", "88.9969, 254.512, -51.5342, 0.28", "89.2235, 256.245, -51.4158, 0.55", "89.5706, 260.206, -51.3185, 0.28", "89.7249, 262.224, -51.2896, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.514026, 32.8836, 12.5945, 0.83", "1.64838, 34.9595, 13.2788, 0.83", "2.91771, 37.6848, 14.079, 0.83", "3.78583, 39.8668, 14.9055, 0.55", "4.87351, 42.8565, 16.4077, 0.83", "5.71574, 44.9857, 17.5555, 0.83", "6.36154, 46.5882, 18.4297, 0.83", "7.61831, 49.855, 20.2607, 0.83", "9.1153, 53.9944, 22.5516, 0.83", "10.3455, 57.8237, 24.5951, 0.83", "11.2686, 60.7357, 26.2317, 0.55", "12.1252, 63.2933, 27.7153, 0.83", "12.7649, 65.1282, 28.8021, 0.83", "13.5427, 67.2645, 29.9566, 0.83", "14.7027, 70.5274, 31.0471, 0.83", "18.9355, 78.8224, 33.8483, 0.83", "22.9866, 86.9335, 37.3651, 0.83", "26.1572, 95.5025, 40.6951, 0.83", "29.5202, 103.624, 44.855, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.514026, 32.8836, 12.5945, 0.83", "-1.27802, 37.2923, 18.8303, 0.83", "-2.0292, 39.3491, 21.4819, 0.83", "-3.41852, 43.1533, 26.3863, 0.83", "-4.10686, 45.0381, 28.8161, 0.83", "-5.86115, 49.8416, 35.0087, 1.11", "-7.07064, 53.1534, 39.2783, 0.83", "-7.90971, 55.4716, 42.1933, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.80266, 32.5093, 4.45136, 0.55", "-10.5474, 33.9568, 5.70789, 0.55", "-11.309, 35.5304, 7.07457, 0.28", "-11.8512, 36.8306, 8.24402, 0.55", "-12.8504, 39.0286, 10.7444, 0.83", "-14.1266, 41.5005, 13.6821, 0.83", "-14.5461, 42.1255, 14.5894, 0.55", "-15.6425, 43.4816, 16.8683, 0.83", "-17.5537, 45.5818, 20.4386, 0.83", "-21.071, 48.9722, 26.2468, 0.83", "-22.3218, 50.013, 28.0659, 0.83", "-27.4518, 53.6871, 34.4387, 0.83", "-29.109, 54.7472, 36.2331, 0.83", "-31.8902, 56.3696, 38.7934, 0.83", "-33.5478, 57.2499, 39.9559, 0.83", "-35.1512, 58.1933, 40.7206, 0.83", "-36.8709, 59.2841, 41.4199, 0.55", "-38.3137, 60.3372, 41.788, 0.55", "-40.1999, 61.7329, 42.4571, 0.83", "-41.7532, 62.8543, 43.088, 0.55", "-44.232, 64.783, 44.185, 0.83", "-47.1044, 67.2778, 45.5865, 0.55", "-48.2704, 68.3514, 46.2269, 0.55", "-51.0752, 70.8407, 47.9288, 1.11", "-57.7438, 76.2388, 53.624, 1.11", "-63.6057, 81.2709, 60.4329, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-9.80266, 32.5093, 4.45136, 0.55", "-9.10195, 36.4984, 4.0095, 0.55", "-8.98439, 37.1526, 3.95445, 0.83", "-8.73397, 38.6537, 3.96077, 0.28", "-8.51181, 40.1819, 4.04391, 1.11", "-8.07563, 43.1373, 4.23754, 1.11", "-7.65791, 46.0814, 4.44417, 0.83", "-7.34672, 48.1982, 4.67416, 1.11", "-6.8237, 51.3174, 5.0149, 0.55", "-6.25629, 54.5579, 5.38126, 0.83", "-5.65076, 57.9521, 5.73333, 0.28", "-5.35412, 59.74, 5.89296, 1.11", "-4.69848, 64.1306, 6.2588, 1.11", "-4.40209, 66.2005, 6.37731, 0.28", "-4.02201, 68.8694, 6.48709, 0.83", "-3.47312, 73.1493, 6.69092, 0.55", "-3.11277, 76.5422, 6.86067, 0.55", "-2.90099, 78.9265, 6.97231, 0.55", "-2.80373, 80.122, 6.99697, 1.11", "-2.45203, 83.7419, 7.01782, 1.11", "-2.04868, 87.3718, 6.95572, 0.83", "-1.67574, 90.4073, 6.82911, 0.83", "-1.38334, 92.5026, 6.70619, 0.28", "-0.878577, 95.9733, 6.4247, 0.83", "-0.373496, 99.3459, 6.07738, 0.83", "0.178515, 102.874, 5.57969, 0.83", "0.555925, 104.9, 5.24739, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-21.5902, -15.0617, -25.0037, 0.55", "-22.993, -14.1222, -27.0506, 0.55", "-23.4448, -13.7735, -27.7293, 1.11", "-27.7664, -10.4376, -34.2217, 0.83", "-31.6267, -7.45777, -40.021, 0.55", "-32.4871, -6.79365, -41.3135, 0.55", "-35.3586, -4.5771, -45.6273, 0.83", "-36.6071, -3.53301, -47.7223, 1.11" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.5902, -15.0617, -25.0037, 0.55", "-24.602, -17.359, -27.6637, 0.55", "-25.7877, -17.9909, -28.5032, 0.55", "-27.4401, -18.5075, -29.7187, 1.11", "-29.187, -18.9287, -30.9256, 0.55", "-34.744, -20.0415, -35.2671, 0.55", "-38.5849, -20.6743, -38.2809, 0.55", "-41.8387, -20.958, -40.9628, 0.83", "-49.3543, -21.2517, -47.2766, 0.28", "-51.2367, -21.2553, -48.9656, 0.83", "-59.9476, -21.1281, -57.1426, 0.55", "-61.2435, -21.0996, -58.3685, 0.83", "-66.483, -20.9745, -63.4291, 0.28", "-67.3091, -20.9471, -64.2159, 0.55", "-74.1903, -20.4449, -70.5927, 0.28", "-75.1018, -20.3254, -71.4618, 0.28", "-76.5605, -20.0457, -72.7717, 0.55", "-77.8055, -19.7719, -73.9776, 0.83", "-84.3967, -17.9559, -80.3286, 0.28", "-85.2819, -17.6709, -81.2438, 0.83", "-90.8974, -15.5539, -87.3462, 0.28", "-92.0294, -15.0967, -88.6625, 0.83", "-99.1239, -11.9826, -97.3009, 0.28", "-100.608, -11.3424, -99.1676, 0.83", "-106.41, -9.03285, -106.565, 0.28", "-107.676, -8.57548, -108.187, 0.55", "-109.286, -8.06594, -110.241, 0.28", "-109.958, -7.86297, -111.133, 0.83", "-113.34, -7.04476, -115.426, 0.28", "-114.299, -6.92473, -116.725, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.1788, -48.6769, -18.469, 0.55", "-13.7038, -48.259, -19.2391, 0.55", "-14.0288, -48.2022, -19.4293, 0.55", "-17.2842, -47.773, -21.2992, 0.83", "-18.5901, -47.6829, -22.1028, 0.28", "-19.3606, -47.6596, -22.5681, 0.55", "-21.6668, -47.686, -24.035, 1.11", "-25.2789, -47.8306, -26.4664, 0.55", "-25.9804, -47.881, -26.9656, 1.11", "-28.1616, -48.1599, -28.5093, 0.55", "-29.1305, -48.3039, -29.1889, 0.55", "-32.0556, -48.8011, -31.1555, 0.28", "-32.6193, -48.9182, -31.508, 0.55", "-35.992, -49.4638, -33.1415, 0.28", "-37.0827, -49.6077, -33.5268, 1.11", "-38.519, -49.7886, -33.6337, 0.55", "-41.0937, -50.2438, -33.5869, 1.11", "-42.3946, -50.4878, -33.4126, 0.55", "-43.8628, -50.7924, -33.4905, 0.55", "-45.5905, -51.1658, -33.6751, 0.55", "-46.735, -51.345, -33.9388, 1.11", "-49.6658, -51.6513, -34.8031, 0.55", "-51.2519, -51.6272, -35.3346, 0.83", "-54.9257, -51.1977, -36.5787, 0.28", "-56.1872, -50.9654, -37.0004, 0.55", "-58.9885, -50.2235, -37.8289, 0.28", "-59.8289, -49.9362, -38.007, 0.83", "-63.4076, -48.3987, -38.2907, 0.28", "-64.3609, -47.9173, -38.1428, 0.83", "-65.4101, -47.3047, -37.3329, 0.28", "-65.7879, -47.1265, -36.4061, 0.55", "-66.3941, -46.9402, -33.5977, 0.28", "-66.416, -46.9364, -33.4288, 0.83", "-66.7725, -46.9007, -28.1157, 0.28", "-66.797, -46.8716, -27.5055, 0.83", "-66.8602, -46.5532, -24.6471, 0.28", "-66.8716, -46.4023, -23.9494, 0.83", "-66.9644, -45.3556, -20.9328, 0.28", "-67.0344, -44.9655, -20.1736, 0.83", "-67.3065, -43.9181, -18.8337, 0.28", "-67.478, -43.2287, -18.0422, 0.83", "-67.9982, -41.2968, -16.0665, 0.28", "-68.112, -40.9262, -15.7039, 0.83", "-68.7286, -39.2888, -14.2131, 0.28", "-69.0836, -38.5803, -13.5188, 0.55", "-70.1931, -36.8122, -11.7067, 0.28", "-70.4556, -36.434, -11.3132, 0.55", "-71.1385, -35.5736, -10.4694, 0.28", "-71.3926, -35.2433, -10.1374, 0.55", "-72.8992, -33.2861, -8.02943, 0.28", "-73.0295, -33.1332, -7.88577, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.1788, -48.6769, -18.469, 0.83", "-12.0603, -53.1347, -18.9645, 0.83", "-12.0383, -56.7857, -19.3195, 0.55", "-12.055, -58.1818, -19.4234, 0.55", "-12.1779, -60.4154, -19.5997, 1.11", "-12.2919, -62.1999, -19.687, 0.55", "-12.4183, -64.1595, -19.7406, 1.11", "-12.705, -66.8316, -19.8136, 0.55", "-12.8916, -68.5881, -19.7714, 1.11", "-13.2809, -71.872, -19.6393, 1.11", "-13.6091, -74.7032, -19.4512, 0.55", "-13.8865, -77.482, -19.1953, 1.11", "-14.1126, -80.0675, -18.9769, 0.83", "-14.3174, -82.9475, -18.8045, 0.28", "-14.5717, -86.2935, -18.7578, 1.11", "-14.7903, -88.9519, -18.8347, 0.83", "-15.0906, -92.0791, -19.1035, 0.83", "-15.3676, -95.0175, -19.4615, 0.83", "-15.6149, -97.7464, -19.918, 0.83", "-15.9076, -100.6, -20.5586, 0.28", "-16.1364, -102.604, -21.1128, 0.83", "-16.311, -104.219, -21.6273, 0.28", "-16.458, -105.805, -22.1338, 1.11", "-16.5735, -108.031, -22.7174, 0.28", "-16.6086, -109.965, -23.1095, 1.11", "-16.7055, -112.363, -23.6501, 0.28", "-16.7848, -113.566, -23.9718, 1.11", "-16.9079, -115.124, -24.4077, 1.11", "-17.2031, -118.327, -25.3924, 0.55", "-17.4216, -120.975, -26.2479, 1.11", "-17.756, -125.685, -28.009, 0.83", "-17.8166, -127.611, -28.835, 0.28", "-17.7578, -128.949, -29.4466, 0.55", "-17.4384, -131.326, -30.5328, 0.28", "-17.1072, -132.801, -31.1451, 0.83", "-16.3283, -135.413, -32.0339, 0.55", "-15.327, -137.921, -32.5748, 1.38", "-12.9457, -142.923, -32.986, 0.28", "-11.9577, -144.801, -32.9134, 0.83", "-10.8853, -146.598, -32.5482, 0.28", "-9.84463, -148.178, -31.98, 0.83", "-8.17943, -150.475, -30.8013, 0.83", "-5.57605, -153.798, -28.7344, 0.28", "-4.59256, -154.99, -27.9086, 0.55", "-3.17648, -156.744, -26.7603, 0.28", "-1.37448, -159.02, -25.344, 0.83", "0.115031, -160.962, -24.2317, 0.28", "0.787733, -161.971, -23.7593, 0.55", "1.93538, -164.035, -23.0381, 0.28", "2.28863, -164.766, -22.8448, 0.83", "2.83065, -166.301, -22.6631, 0.28", "3.14133, -167.51, -22.6717, 0.83", "3.39258, -168.63, -22.7891, 0.83", "3.917, -171.062, -23.2019, 0.83", "4.57761, -174.462, -23.9578, 0.28", "4.98393, -177.333, -24.7713, 0.28", "5.27727, -179.355, -25.3659, 0.83", "5.52725, -181.038, -25.9021, 0.55", "5.75324, -182.382, -26.3289, 1.11", "6.68975, -187.135, -27.7673, 0.55", "7.44471, -190.949, -28.9655, 1.11", "8.14838, -194.005, -29.8691, 0.28", "8.53147, -195.587, -30.432, 0.55", "9.10684, -197.475, -31.2375, 0.28", "9.6015, -198.645, -31.7785, 0.55", "11.0691, -201.275, -33.0835, 0.28", "12.4073, -203.503, -33.9735, 0.83", "13.9713, -206.214, -34.95, 0.28", "15.7676, -209.356, -35.9355, 0.83", "17.5102, -212.481, -36.9683, 0.55", "18.4263, -214.191, -37.4977, 0.83", "21.2396, -219.493, -38.9268, 0.55", "22.2763, -221.548, -39.5431, 0.83", "23.5387, -224.262, -40.4304, 0.55", "24.548, -226.66, -41.3424, 0.83", "25.8405, -229.835, -42.8019, 0.55", "26.6057, -231.587, -43.7305, 0.55", "28.0762, -234.255, -45.3376, 1.11", "29.4385, -236.264, -46.5464, 0.28", "30.1137, -237.171, -47.0855, 0.55", "31.4112, -238.718, -47.9481, 0.28", "32.8942, -240.219, -48.8319, 1.11", "36.5643, -243.486, -50.5846, 0.28", "37.7242, -244.382, -50.9331, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "29.5202, 103.624, 44.855, 0.55", "32.0362, 109.758, 46.8637, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "29.5202, 103.624, 44.855, 0.55", "33.2516, 112.696, 50.3435, 0.55", "37.8466, 122.147, 54.3286, 0.55", "40.3288, 132.393, 58.231, 0.55", "43.2929, 142.266, 62.7104, 0.55", "44.218, 152.882, 66.2875, 0.55", "45.077, 163.439, 70.0495, 0.55", "45.5288, 173.329, 75.3732, 0.55", "47.336, 183.234, 80.3675, 0.55", "52.2534, 192.499, 84.4076, 0.55", "58.3051, 201.407, 87.6307, 0.55", "65.0685, 209.971, 90.322, 0.55", "71.3848, 218.31, 94.4342, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.90971, 55.4716, 42.1933, 0.83", "-6.8613, 53.46, 42.2842, 0.83", "-5.42427, 50.8843, 42.6635, 0.83", "-4.49739, 49.1513, 42.9875, 0.83", "-2.48904, 45.3063, 43.49, 0.83", "-0.625035, 41.5872, 43.8478, 0.83", "1.77305, 36.8025, 44.308, 0.55", "2.62001, 34.9669, 44.444, 0.55", "3.32012, 33.429, 44.5936, 0.55", "5.01392, 29.8881, 45.0895, 0.28", "5.73769, 28.5387, 45.4446, 0.83", "11.0261, 18.4641, 44.9226, 0.83", "16.7715, 8.79238, 46.707, 0.83", "23.4016, 0.050386, 49.7657, 0.83", "29.4293, -8.89822, 53.4162, 0.83", "37.0832, -15.6956, 58.4112, 0.83", "45.1701, -20.1486, 65.0828, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.90971, 55.4716, 42.1933, 1.11", "-8.57686, 56.6585, 42.7705, 1.11", "-9.06967, 57.5353, 43.1968, 1.11", "-9.87616, 58.9701, 43.8945, 0.83", "-10.7351, 60.4982, 44.6375, 1.11", "-11.7681, 62.336, 45.5312, 0.83", "-12.1731, 63.0565, 45.8815, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-63.6057, 81.2709, 60.4329, 0.55", "-71.0031, 87.1208, 65.8256, 0.55", "-80.1589, 91.3351, 69.8795, 0.55", "-88.7388, 96.007, 74.6317, 0.55", "-98.2661, 100.643, 77.0335, 0.55", "-108.169, 104.229, 79.6923, 0.55", "-117.547, 108.429, 83.2221, 0.55", "-127.737, 111.476, 85.436, 0.55", "-137.128, 116.435, 87.7243, 0.55", "-145.56, 122.393, 91.1064, 0.55", "-153.972, 126.615, 96.5315, 0.55", "-161.498, 130.292, 103.449, 0.55", "-167.631, 134.417, 111.412, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-63.6057, 81.2709, 60.4329, 0.55", "-67.867, 85.6971, 65.9362, 0.55", "-72.3779, 88.7721, 72.1193, 0.55", "-76.4228, 92.1873, 78.4448, 0.55", "-80.4718, 95.7519, 84.6845, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.555925, 104.9, 5.24739, 0.55", "0.751041, 107.785, 5.15303, 0.55", "0.824138, 109.053, 5.0695, 0.28", "0.942631, 110.602, 4.9275, 0.83", "1.1159, 112.771, 4.7147, 0.28", "1.21452, 114.022, 4.60503, 0.83", "1.59483, 118.62, 4.26515, 0.28", "1.73165, 120.478, 4.10266, 0.83", "2.01746, 124.03, 3.75385, 0.28", "2.23361, 126.184, 3.5297, 0.83", "2.42144, 128.04, 3.31621, 0.28", "2.5934, 129.589, 3.17463, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.555925, 104.9, 5.24739, 0.55", "1.41284, 107.91, 1.00694, 0.55", "2.0167, 109.697, -1.49539, 0.55", "2.65182, 111.241, -3.63176, 0.83", "4.01875, 114.321, -7.74423, 0.55", "5.49582, 117.402, -11.6028, 0.83", "6.90454, 120.306, -14.9636, 0.83", "7.65366, 121.73, -16.382, 0.83", "10.1244, 125.814, -19.9253, 0.55", "10.7687, 126.905, -20.6559, 0.55", "12.0103, 128.951, -21.7995, 0.83", "13.42, 131.234, -22.9021, 0.55", "15.3691, 134.486, -24.5354, 0.83", "16.724, 136.952, -25.8539, 0.83", "18.2184, 139.643, -27.5185, 0.83", "22.5025, 147.148, -33.0613, 0.28", "22.872, 147.783, -33.6679, 0.55", "24.722, 150.962, -37.2487, 0.28", "25.391, 152.206, -38.862, 1.11", "27.0283, 155.501, -43.4492, 0.55", "27.6087, 156.734, -45.2396, 0.83", "29.4567, 161.385, -51.8343, 0.28", "29.8644, 162.342, -53.1926, 0.83", "31.6374, 166.751, -59.2245, 0.28", "31.933, 167.544, -60.2399, 0.55", "32.5564, 169.447, -62.3884, 0.28", "32.7955, 170.143, -63.0885, 0.83", "35.1075, 176.061, -68.3212, 0.28", "35.9985, 178.223, -70.2231, 0.28", "36.562, 179.523, -71.3616, 0.55", "37.4939, 181.678, -73.269, 0.28", "38.2071, 183.367, -74.8142, 0.55", "39.6424, 186.743, -78.0826, 0.28", "40.9512, 189.385, -80.438, 1.38", "43.1449, 192.956, -83.568, 0.28", "43.695, 193.594, -84.1356, 0.83", "45.826, 195.691, -85.9111, 0.28", "49.6115, 198.908, -88.4939, 0.55", "54.3925, 202.544, -91.1889, 0.55", "57.5349, 204.773, -92.7731, 1.66", "68.4861, 212.34, -97.7167, 0.55", "69.6145, 213.129, -98.2367, 1.11", "72.5199, 215.193, -99.6005, 0.28", "73.6933, 216.075, -100.162, 0.55", "78.6133, 220.02, -102.902, 0.28", "79.9346, 221.109, -103.609, 1.11", "83.9464, 224.137, -105.773, 0.55", "86.1053, 225.544, -106.891, 0.83", "88.7241, 226.963, -108.124, 0.55", "94.4755, 229.465, -110.361, 0.28", "96.6828, 230.085, -111.069, 0.83", "104.738, 231.6, -113.313, 0.28", "107.684, 231.872, -113.965, 1.11", "109.79, 231.919, -114.419, 0.28", "111.88, 231.826, -114.943, 0.55", "116.596, 231.23, -115.996, 0.28", "117.955, 230.964, -116.281, 0.83", "120.619, 230.094, -116.629, 0.28", "121.718, 229.605, -116.864, 0.55", "123.049, 228.831, -117.262, 0.28", "123.625, 228.411, -117.541, 0.55", "125.083, 227.167, -118.326, 0.28", "125.807, 226.514, -118.763, 0.83", "130.128, 222.374, -121.513, 0.28", "132.7, 219.826, -123.209, 0.83", "137.225, 215.141, -126.143, 0.28", "138.158, 214.204, -126.811, 0.55", "139.838, 212.531, -128.034, 0.28", "141.275, 210.932, -128.959, 0.83", "143.823, 207.779, -130.421, 0.28", "145.153, 206.154, -131.025, 0.55", "151.314, 198.542, -133.091, 0.28", "152.951, 196.536, -133.71, 0.83", "158.487, 189.262, -135.734, 0.28", "162.162, 184.52, -137.278, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-36.6071, -3.53301, -47.7223, 0.83", "-37.5926, -3.71532, -48.6775, 0.83", "-41.3292, -4.58803, -52.2538, 0.28", "-42.0762, -4.77633, -52.9436, 0.55", "-45.279, -5.53408, -55.7974, 0.28", "-46.3103, -5.76999, -56.6905, 0.83", "-51.6397, -6.96751, -61.3939, 0.28", "-52.2989, -7.13907, -61.9789, 0.28", "-52.8682, -7.30314, -62.501, 0.55", "-55.4174, -8.01487, -64.914, 0.28", "-56.3891, -8.29473, -65.8571, 0.83", "-60.4446, -9.42097, -70.1493, 0.28", "-61.3864, -9.6788, -71.1544, 0.55", "-67.0389, -11.2734, -77.3649, 0.28", "-67.5752, -11.4321, -77.9718, 0.83", "-72.0317, -12.8659, -83.1629, 0.28", "-77.7271, -14.7113, -89.9235, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-36.6071, -3.53301, -47.7223, 0.55", "-40.3062, 1.8097, -46.2068, 0.55", "-41.3737, 3.24539, -45.6932, 0.83", "-43.0669, 5.44212, -44.8098, 0.28", "-43.7711, 6.29466, -44.5517, 0.55", "-45.96, 8.86416, -43.9006, 0.28", "-47.0436, 10.0472, -43.7902, 0.55", "-49.3977, 12.4278, -43.8274, 0.28", "-50.5255, 13.5704, -43.9104, 0.83", "-53.8492, 17.0592, -44.2763, 0.28", "-55.6401, 19.0005, -44.5576, 0.83", "-60.8416, 24.7884, -45.8574, 0.28", "-62.4461, 26.6728, -46.289, 0.83", "-63.8132, 28.4204, -46.6705, 0.28", "-64.8298, 29.8546, -46.9428, 0.83", "-65.5841, 31.0985, -47.0673, 0.28", "-66.8765, 33.3354, -47.5229, 0.55", "-67.9755, 35.4137, -48.006, 0.28", "-68.6991, 36.5624, -48.4243, 0.83", "-70.9783, 39.9302, -49.6351, 0.28", "-72.1958, 41.6136, -50.1537, 0.83", "-75.9742, 46.639, -51.475, 0.28", "-76.9537, 47.8861, -51.7422, 0.55", "-80.1838, 51.8665, -52.4862, 0.28", "-82.1887, 54.2911, -52.8132, 1.11", "-84.1241, 56.6213, -52.9116, 0.28", "-85.2272, 57.979, -52.8838, 0.55", "-88.2013, 61.8633, -52.397, 0.28", "-89.787, 63.9797, -52.1537, 1.11", "-91.3332, 66.1532, -51.8644, 1.11", "-92.874, 68.3528, -51.6541, 0.28", "-93.799, 69.745, -51.5164, 0.55", "-95.7482, 72.8462, -51.0577, 0.28", "-96.7031, 74.5222, -50.7061, 0.55", "-97.7738, 76.4682, -50.4711, 0.28", "-98.3051, 77.527, -50.4152, 0.55", "-98.8953, 78.8108, -50.5229, 0.28", "-99.4472, 80.022, -50.7626, 1.11", "-100.076, 81.5245, -51.1358, 1.11", "-102.038, 86.4806, -52.4231, 0.28", "-102.458, 87.4564, -52.7979, 0.55", "-103.752, 90.2971, -54.0592, 0.28", "-104.403, 91.7123, -54.7131, 0.55", "-105.513, 94.138, -55.8592, 0.28", "-106.157, 95.497, -56.5066, 1.11", "-108.518, 100.444, -58.6818, 0.28", "-108.872, 101.125, -59.0066, 0.83", "-110.229, 103.681, -60.2128, 0.28", "-111.032, 105.166, -60.9126, 0.83", "-111.951, 106.837, -61.7304, 0.28", "-112.328, 107.527, -62.0134, 0.55", "-113.518, 109.853, -62.6815, 0.28", "-114.408, 111.345, -63.244, 0.55", "-115.88, 113.476, -64.1744, 0.28", "-116.344, 114.104, -64.4628, 0.55", "-117.324, 115.402, -65.0814, 0.28", "-117.758, 115.952, -65.3437, 0.55", "-120.276, 119.22, -66.7764, 0.28", "-120.912, 120.045, -67.1158, 0.55", "-122.087, 121.573, -67.6715, 0.55", "-124.848, 125.151, -68.8009, 0.28", "-125.549, 126.031, -69.1617, 0.55", "-126.463, 127.171, -69.6695, 0.28", "-127.389, 128.249, -70.3282, 0.55", "-129.711, 130.684, -72.3483, 0.28", "-130.352, 131.318, -72.9433, 0.83", "-134.56, 135.29, -77.3603, 0.28", "-135.104, 135.807, -78.0015, 0.83", "-138.57, 139.146, -82.4294, 0.28", "-139.947, 140.566, -84.3332, 0.83", "-140.903, 141.68, -85.7889, 0.28", "-142.471, 143.779, -88.4303, 0.55", "-143.951, 146.337, -91.2515, 0.28", "-144.318, 147.111, -92.0594, 0.83", "-144.934, 149.141, -93.8834, 0.28", "-145.106, 149.762, -94.511, 0.55", "-145.655, 151.874, -96.8559, 0.28", "-145.769, 152.486, -97.5912, 0.55", "-146.032, 154.441, -99.999, 0.28", "-146.117, 155.007, -100.757, 0.55", "-146.31, 157.436, -104.081, 0.28", "-146.313, 157.941, -104.746, 0.83", "-145.883, 161.34, -108.86, 0.28", "-145.544, 162.678, -110.41, 0.55", "-144.76, 164.214, -111.98, 0.55", "-143.438, 165.842, -113.421, 0.28", "-142.134, 166.932, -114.173, 0.55", "-140.4, 168.04, -114.873, 0.28", "-138.92, 168.798, -115.265, 0.55", "-135.737, 170.145, -115.928, 0.28", "-132.998, 171.167, -116.367, 0.55", "-131.05, 171.792, -116.622, 0.28", "-129.575, 172.195, -116.794, 0.55", "-128.433, 172.463, -116.933, 0.55", "-125.933, 173.046, -117.308, 0.28", "-124.811, 173.329, -117.547, 0.55", "-121.104, 174.37, -118.449, 0.28", "-118.769, 175.163, -119.096, 0.55", "-117.062, 175.863, -119.698, 0.28", "-115.895, 176.432, -120.175, 0.55", "-114.853, 177.077, -120.68, 0.28", "-113.804, 177.878, -121.206, 0.55", "-112.115, 179.549, -122.118, 0.28", "-110.488, 181.299, -122.854, 0.55", "-109.619, 182.325, -123.221, 0.28", "-108.89, 183.213, -123.517, 0.55", "-107.705, 184.766, -124.01, 0.28", "-107.036, 185.727, -124.304, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "45.1701, -20.1486, 65.0828, 0.55", "51.6205, -27.0382, 66.7634, 0.55", "57.247, -34.6918, 68.0526, 0.55", "64.1826, -40.9654, 70.159, 0.55", "71.0581, -46.9727, 73.0812, 0.55", "79.4307, -51.2468, 74.9599, 0.55", "87.2123, -55.8577, 78.1353, 0.55", "95.3586, -59.8113, 81.2825, 0.55", "103.631, -63.0181, 84.9134, 0.55", "112.446, -65.7973, 87.4596, 0.55", "121.807, -67.5051, 88.6179, 0.55", "130.951, -69.1412, 90.9885, 0.55", "139.718, -72.1022, 93.4919, 0.55", "148.162, -76.1369, 95.5694, 0.55", "156.743, -79.0631, 98.6833, 0.55", "165.273, -82.5528, 101.323, 0.55", "173.867, -86.6527, 102.433, 0.55", "182.295, -91.157, 103.188, 0.55", "189.929, -96.9429, 103.566, 0.55", "197.265, -103.043, 104.501, 0.55", "203.827, -109.668, 106.726, 0.55", "209.959, -116.697, 108.936, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "45.1701, -20.1486, 65.0828, 0.55", "49.6386, -27.5172, 67.4796, 0.55", "54.4685, -34.6335, 69.9369, 0.55", "59.1682, -41.6937, 72.7786, 0.55", "63.3141, -49.5344, 73.9379, 0.55", "66.7282, -57.7002, 75.2309, 0.55", "71.2041, -65.3331, 76.5404, 0.55", "74.4234, -73.5153, 78.1824, 0.55", "77.231, -81.5725, 80.8672, 0.55", "78.2732, -89.9857, 83.7202, 0.55", "78.3051, -98.4212, 86.6952, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.1731, 63.0565, 45.8815, 0.55", "-13.4328, 63.8819, 46.9843, 0.55", "-14.5858, 64.4546, 48.0221, 0.55", "-15.5299, 64.7776, 48.7557, 0.55", "-17.299, 65.1481, 49.8757, 0.55", "-19.6442, 65.3678, 51.08, 0.28", "-20.3725, 65.382, 51.3787, 0.28", "-22.074, 65.2449, 51.9268, 0.55", "-24.3537, 64.7558, 52.4687, 0.28", "-25.77, 64.2714, 52.6888, 0.55", "-26.8954, 63.7379, 52.6641, 0.28", "-27.9713, 63.1721, 52.4181, 0.55", "-35.4461, 62.8153, 57.3956, 0.55", "-42.2735, 61.6263, 63.1181, 0.55", "-49.4581, 61.9663, 68.507, 0.55", "-57.0403, 62.7872, 73.2621, 0.55", "-65.2269, 63.4468, 76.9117, 0.55", "-73.6462, 64.3166, 79.9338, 0.55", "-82.2196, 63.7596, 82.5724, 0.55", "-90.0865, 64.7479, 86.8043, 0.55", "-98.0916, 66.6534, 90.4185, 0.55", "-106.484, 68.8399, 92.7767, 0.55", "-114.97, 71.7423, 93.3523, 0.55", "-123.171, 75.2167, 92.1509, 0.55", "-131.267, 78.3074, 89.7679, 0.55", "-139.028, 82.4422, 87.9122, 0.55", "-145.879, 87.3353, 84.7652, 0.55", "-152.532, 91.6026, 80.4876, 0.55", "-160.011, 95.5538, 77.4511, 0.55", "-167.332, 98.3, 73.0198, 0.55", "-175.013, 100.659, 68.9917, 0.55", "-183.165, 101.921, 65.4249, 0.55", "-191.285, 104.532, 62.592, 0.55", "-199.633, 105.717, 59.4806, 0.55", "-208.002, 106.501, 56.3002, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.1731, 63.0565, 45.8815, 0.83", "-12.8192, 65.1372, 46.0376, 0.83", "-13.3043, 66.565, 46.388, 0.83", "-13.7579, 67.8643, 46.7503, 0.83", "-14.3238, 69.7888, 46.7889, 0.83", "-14.7675, 71.6748, 46.4556, 1.11", "-15.3198, 74.2939, 45.8003, 0.83", "-15.878, 77.092, 44.8952, 1.11", "-16.2534, 79.2753, 43.9767, 0.83", "-17.2798, 86.8389, 39.7793, 1.11", "-17.4237, 88.8708, 38.205, 1.11", "-17.424, 90.0826, 36.9104, 0.55", "-18.0106, 96.9649, 35.5097, 0.55", "-17.3781, 103.755, 33.7273, 0.55", "-17.3288, 110.536, 31.8115, 0.55", "-17.9348, 117.519, 31.0644, 0.55", "-17.8868, 124.392, 29.5033, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-77.7271, -14.7113, -89.9235, 0.55", "-78.2276, -14.6294, -90.3564, 0.55", "-78.9534, -14.5596, -90.9563, 1.11", "-84.2848, -14.4624, -95.1008, 0.28", "-84.4421, -14.4737, -95.217, 0.55", "-85.8016, -14.672, -96.1567, 0.28", "-86.5868, -14.8672, -96.6611, 0.55", "-87.464, -15.2196, -97.171, 0.28", "-88.3269, -15.8996, -97.5758, 0.55", "-88.9943, -16.8768, -97.7199, 0.28", "-89.6422, -17.9098, -97.9496, 0.55", "-90.3287, -19.1461, -98.2605, 0.28", "-90.7591, -19.925, -98.4845, 0.55", "-91.9695, -22.0186, -99.2456, 0.28", "-92.451, -22.8082, -99.614, 0.55", "-93.298, -24.0741, -100.357, 0.28", "-93.8518, -24.8332, -100.92, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-77.7271, -14.7113, -89.9235, 0.28", "-79.1171, -16.3826, -95.5032, 0.28", "-79.5995, -16.9983, -97.2031, 1.11", "-83.5795, -22.49, -110.123, 0.28", "-84.1388, -23.2667, -111.751, 0.55", "-85.5849, -25.3808, -115.611, 0.28", "-86.0802, -26.2088, -116.853, 0.55", "-87.2824, -28.4467, -119.052, 0.28", "-87.9932, -29.9658, -119.99, 0.55", "-89.5524, -34.3573, -120.881, 0.28", "-90.3955, -36.8961, -121.181, 0.55", "-91.8589, -41.4394, -121.473, 0.28", "-93.0292, -44.8388, -121.754, 0.83", "-94.104, -47.8691, -122.025, 0.28", "-95.0767, -50.5031, -122.268, 0.55", "-96.4288, -54.1531, -122.499, 0.28", "-97.1975, -55.8956, -122.698, 0.55", "-99.0358, -59.1782, -123.31, 0.28", "-99.9917, -60.605, -123.781, 0.55", "-101.076, -61.861, -124.368, 0.28", "-102.009, -62.7036, -124.988, 0.55", "-103.932, -64.1794, -126.405, 0.28", "-105.543, -65.1977, -127.605, 0.83", "-109.047, -67.0642, -130.119, 0.28", "-110.515, -67.8077, -131.247, 0.55", "-113.677, -69.5375, -133.939, 0.28", "-114.348, -69.9602, -134.545, 0.55", "-116.005, -71.1718, -136.285, 0.28", "-117.063, -71.9999, -137.539, 0.83", "-120.176, -74.4892, -141.344, 0.28", "-122.19, -76.2116, -143.957, 0.28", "-124.001, -77.8674, -146.404, 0.55", "-127.946, -81.5669, -152.023, 0.28", "-130.239, -83.9228, -155.586, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "78.3051, -98.4212, 86.6952, 0.55", "78.6158, -109.692, 89.4921, 0.55", "79.8312, -121.176, 90.7673, 0.55", "81.3648, -132.425, 93.2315, 0.55", "83.5877, -143.122, 97.1817, 0.55", "86.4066, -153.753, 100.923, 0.55", "87.9109, -164.115, 105.956, 0.55", "87.7365, -174.701, 110.738, 0.55", "88.2698, -184.94, 116.202, 0.55", "88.0551, -194.717, 122.474, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "78.3051, -98.4212, 86.6952, 0.55", "85.0865, -108.327, 88.8586, 0.55", "91.2573, -118.737, 90.3908, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-17.8868, 124.392, 29.5033, 0.55", "-25.4485, 130.398, 23.6919, 0.55", "-33.2466, 134.053, 16.4217, 0.55", "-41.0263, 135.624, 8.41988, 0.55", "-47.8269, 139.421, 0.273348, 0.55", "-55.1735, 143.04, -7.46954, 0.55", "-62.3438, 147.367, -15.0122, 0.55", "-69.7325, 153.824, -20.5568, 0.55", "-77.3287, 160.855, -25.014, 0.55", "-85.0585, 167.137, -30.2873, 0.55", "-91.8355, 173.019, -37.1078, 0.55", "-97.8295, 179.213, -44.3694, 0.55", "-103.76, 186.635, -50.4309, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.8868, 124.392, 29.5033, 0.55", "-15.4781, 134.646, 30.6901, 0.55", "-11.4371, 144.357, 32.0171, 0.55", "-8.74255, 154.605, 31.6597, 0.55", "-4.68419, 164.374, 30.9766, 0.55", "-1.11843, 174.277, 32.2443, 0.55", "2.9525, 183.701, 34.892, 0.55", "6.65063, 193.534, 36.3129, 0.55", "11.4251, 202.999, 36.1997, 0.55", "17.194, 211.785, 34.8188, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_29", "dend_0", "dend_44", "dend_31", "dend_24", "dend_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_29", "dend_0", "dend_44", "dend_31", "dend_24", "dend_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_29", "dend_0", "axon_0", "dend_44", "dend_31", "dend_24", "dend_1", "axon_1", "dend_46", "dend_45", "dend_43", "dend_32", "dend_28", "dend_25", "dend_9", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_10", "dend_6", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_16", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_40", "dend_39", "dend_20", "dend_17", "dend_15", "dend_12", "dend_42", "dend_41", "dend_19", "dend_18", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_NBC_7eb58fa61e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_44, id: dend_44, parent: dend_30
create dend_44
public dend_44
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_0
create dend_24
public dend_24
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_31
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_29, dend_0, axon_0, dend_44, dend_31, dend_24, dend_1, axon_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.45000041566367777)
    connect dend_29(0), soma_0(0.45000041566367777)
    connect dend_0(0), soma_0(0.45000041566367777)
    connect axon_0(0), soma_0(1.0)
    connect dend_44(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.49578, 9.66883, 0.467618, 3.07883 ) }
    soma_0 { pt3dadd( -1.35379, 8.66156, 0.417811, 3.68571 ) }
    soma_0 { pt3dadd( -1.21179, 7.65428, 0.368005, 4.49861 ) }
    soma_0 { pt3dadd( -1.0698, 6.64701, 0.318198, 5.02547 ) }
    soma_0 { pt3dadd( -0.927807, 5.63974, 0.268391, 5.55232 ) }
    soma_0 { pt3dadd( -0.785813, 4.63247, 0.218585, 6.08002 ) }
    soma_0 { pt3dadd( -0.643819, 3.6252, 0.168778, 6.65441 ) }
    soma_0 { pt3dadd( -0.501826, 2.61792, 0.118971, 7.239 ) }
    soma_0 { pt3dadd( -0.359832, 1.61065, 0.0691646, 7.82473 ) }
    soma_0 { pt3dadd( -0.217838, 0.603378, 0.0193579, 8.41046 ) }
    soma_0 { pt3dadd( -0.0758445, -0.403894, -0.0304487, 8.6567 ) }
    soma_0 { pt3dadd( 0.0661492, -1.41117, -0.0802554, 8.65482 ) }
    soma_0 { pt3dadd( 0.208143, -2.41844, -0.130062, 8.55954 ) }
    soma_0 { pt3dadd( 0.350137, -3.42571, -0.179869, 8.46266 ) }
    soma_0 { pt3dadd( 0.49213, -4.43298, -0.229676, 8.09049 ) }
    soma_0 { pt3dadd( 0.634124, -5.44025, -0.279482, 7.48075 ) }
    soma_0 { pt3dadd( 0.776118, -6.44753, -0.329289, 6.87101 ) }
    soma_0 { pt3dadd( 0.918112, -7.4548, -0.379096, 6.23286 ) }
    soma_0 { pt3dadd( 1.06011, -8.46207, -0.428902, 5.0468 ) }
    soma_0 { pt3dadd( 1.2021, -9.46934, -0.478709, 3.42243 ) }
    soma_0 { pt3dadd( 1.34409, -10.4766, -0.528516, 2.06215 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.94076, -11.1276, 1.79231, 1.94 ) }
    dend_30 { pt3dadd( 2.15273, -12.1799, 1.79231, 1.94 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.13076, -4.13764, 8.98231, 0.55 ) }
    dend_29 { pt3dadd( 5.73152, -2.75607, 8.46691, 0.55 ) }
    dend_29 { pt3dadd( 7.41154, -1.12524, 7.89963, 0.83 ) }
    dend_29 { pt3dadd( 9.76909, 1.24132, 6.9214, 0.83 ) }
    dend_29 { pt3dadd( 12.5382, 3.87101, 5.76454, 0.55 ) }
    dend_29 { pt3dadd( 13.6941, 4.9137, 5.34882, 0.83 ) }
    dend_29 { pt3dadd( 16.0467, 7.01127, 4.58476, 0.28 ) }
    dend_29 { pt3dadd( 17.4825, 8.35121, 4.20425, 0.83 ) }
    dend_29 { pt3dadd( 20.0469, 10.7349, 3.71367, 0.55 ) }
    dend_29 { pt3dadd( 22.3646, 12.8181, 3.65666, 0.55 ) }
    dend_29 { pt3dadd( 24.2689, 14.4515, 4.00005, 0.83 ) }
    dend_29 { pt3dadd( 25.1591, 15.241, 4.32658, 0.83 ) }
    dend_29 { pt3dadd( 27.0709, 17.094, 5.36028, 0.55 ) }
    dend_29 { pt3dadd( 27.7015, 17.8341, 5.81447, 0.83 ) }
    dend_29 { pt3dadd( 29.3153, 20.1604, 7.23956, 0.28 ) }
    dend_29 { pt3dadd( 30.1203, 21.6101, 8.02378, 0.83 ) }
    dend_29 { pt3dadd( 31.7092, 25.0166, 9.54721, 0.28 ) }
    dend_29 { pt3dadd( 32.5001, 27.0062, 10.3194, 0.55 ) }
    dend_29 { pt3dadd( 33.4624, 30.1897, 11.3717, 0.28 ) }
    dend_29 { pt3dadd( 33.8559, 31.9499, 11.9193, 0.83 ) }
    dend_29 { pt3dadd( 34.0643, 33.7755, 12.4316, 0.55 ) }
    dend_29 { pt3dadd( 34.1199, 36.0611, 13.1005, 0.55 ) }
    dend_29 { pt3dadd( 34.0355, 37.3976, 13.1503, 1.11 ) }
    dend_29 { pt3dadd( 33.8128, 40.0488, 12.5682, 0.55 ) }
    dend_29 { pt3dadd( 33.7717, 40.6559, 12.3115, 0.55 ) }
    dend_29 { pt3dadd( 33.6993, 44.1952, 10.7572, 0.83 ) }
    dend_29 { pt3dadd( 33.8843, 48.5102, 8.55894, 0.28 ) }
    dend_29 { pt3dadd( 35.1714, 60.3158, 2.13222, 0.83 ) }
    dend_29 { pt3dadd( 35.45, 61.8071, 1.28456, 0.28 ) }
    dend_29 { pt3dadd( 35.8929, 63.6874, 0.0298004, 0.55 ) }
    dend_29 { pt3dadd( 37.0058, 67.5904, -2.88836, 0.28 ) }
    dend_29 { pt3dadd( 37.7084, 69.4737, -4.75542, 0.83 ) }
    dend_29 { pt3dadd( 38.2148, 70.5082, -6.10542, 0.28 ) }
    dend_29 { pt3dadd( 38.8295, 71.506, -5.62855, 0.83 ) }
    dend_29 { pt3dadd( 44.1599, 80.5978, -7.8874, 0.83 ) }
    dend_29 { pt3dadd( 48.9415, 89.8158, -10.7756, 0.83 ) }
    dend_29 { pt3dadd( 52.7451, 99.0865, -14.7462, 0.83 ) }
    dend_29 { pt3dadd( 58.0069, 108.02, -17.6939, 0.83 ) }
    dend_29 { pt3dadd( 62.0257, 117.627, -20.4763, 0.83 ) }
    dend_29 { pt3dadd( 66.8855, 126.421, -24.3772, 0.83 ) }
    dend_29 { pt3dadd( 71.6971, 134.648, -29.4098, 0.83 ) }
    dend_29 { pt3dadd( 75.3627, 142.96, -35.212, 0.83 ) }
    dend_29 { pt3dadd( 79.9935, 150.214, -41.7013, 0.83 ) }
    dend_29 { pt3dadd( 85.3967, 157.99, -46.8514, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 67/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.13924, 10.2624, 3.27231, 2.49 ) }
    dend_0 { pt3dadd( -1.13924, 12.4279, 3.27231, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 69/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.34409, -10.4766, -0.528516, 0.83 ) }
    axon_0 { pt3dadd( 3.43791, -25.3297, -0.528516, 0.83 ) }
    axon_0 { pt3dadd( 5.53174, -40.1829, -0.528516, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_30 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.15273, -12.1799, 1.79231, 0.28 ) }
    dend_44 { pt3dadd( 3.29916, -14.9175, 3.8426, 0.28 ) }
    dend_44 { pt3dadd( 3.80333, -16.1213, 4.74425, 0.55 ) }
    dend_44 { pt3dadd( 5.51706, -20.2136, 7.80913, 0.28 ) }
    dend_44 { pt3dadd( 7.14594, -24.1031, 10.7222, 0.28 ) }
    dend_44 { pt3dadd( 8.15199, -26.5055, 12.5215, 0.28 ) }
    dend_44 { pt3dadd( 10.7175, -34.7574, 17.7602, 0.28 ) }
    dend_44 { pt3dadd( 13.5643, -41.5218, 24.7072, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.15273, -12.1799, 1.79231, 1.66 ) }
    dend_31 { pt3dadd( 1.25835, -15.7517, -1.93919, 1.66 ) }
    dend_31 { pt3dadd( 0.104529, -20.3597, -6.7531, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_0 (entry count 83/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.13924, 12.4279, 3.27231, 0.83 ) }
    dend_24 { pt3dadd( -0.379812, 14.7529, 2.80237, 0.83 ) }
    dend_24 { pt3dadd( 0.0724075, 16.1221, 2.31018, 0.55 ) }
    dend_24 { pt3dadd( 0.520509, 17.4792, 1.70816, 0.83 ) }
    dend_24 { pt3dadd( 1.24718, 19.6518, 0.655161, 0.83 ) }
    dend_24 { pt3dadd( 1.61333, 20.745, 0.137732, 1.11 ) }
    dend_24 { pt3dadd( 2.56329, 23.5814, -1.20471, 1.11 ) }
    dend_24 { pt3dadd( 3.52222, 26.4588, -2.70415, 0.55 ) }
    dend_24 { pt3dadd( 4.43072, 29.1209, -4.19982, 1.11 ) }
    dend_24 { pt3dadd( 5.37016, 31.7998, -5.75574, 1.11 ) }
    dend_24 { pt3dadd( 6.04792, 33.739, -6.84859, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.13924, 12.4279, 3.27231, 1.11 ) }
    dend_1 { pt3dadd( -3.6544, 17.3239, 5.86066, 1.11 ) }
    dend_1 { pt3dadd( -4.85312, 19.6573, 7.09427, 2.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 97/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.53174, -40.1829, -0.528516, 0.28 ) }
    axon_1 { pt3dadd( 7.62556, -55.036, -0.528516, 0.28 ) }
    axon_1 { pt3dadd( 9.71939, -69.8892, -0.528516, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 0/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 13.5643, -41.5218, 24.7072, 0.28 ) }
    dend_46 { pt3dadd( 14.7107, -48.5399, 31.1926, 0.28 ) }
    dend_46 { pt3dadd( 14.1965, -56.1127, 37.1102, 0.28 ) }
    dend_46 { pt3dadd( 12.0101, -64.1276, 41.9693, 0.28 ) }
    dend_46 { pt3dadd( 10.7814, -72.0302, 47.3235, 0.28 ) }
    dend_46 { pt3dadd( 7.72636, -78.7171, 53.5349, 0.28 ) }
    dend_46 { pt3dadd( 5.25864, -85.8989, 59.4477, 0.28 ) }
    dend_46 { pt3dadd( 3.87279, -92.7408, 66.0731, 0.28 ) }
    dend_46 { pt3dadd( 2.98612, -100.626, 71.5185, 0.28 ) }
    dend_46 { pt3dadd( 2.71839, -108.264, 77.3683, 0.28 ) }
    dend_46 { pt3dadd( 1.25455, -115.778, 83.2015, 0.28 ) }
    dend_46 { pt3dadd( 0.372112, -123.382, 89.0361, 0.28 ) }
    dend_46 { pt3dadd( -0.145031, -131.82, 93.638, 0.28 ) }
    dend_46 { pt3dadd( -2.2374, -140.529, 97.1597, 0.28 ) }
    dend_46 { pt3dadd( -3.26547, -149.71, 99.8585, 0.28 ) }
    dend_46 { pt3dadd( -4.51624, -159.018, 101.955, 0.28 ) }
    dend_46 { pt3dadd( -6.76759, -167.564, 105.766, 0.28 ) }
    dend_46 { pt3dadd( -8.46527, -175.279, 111.266, 0.28 ) }
    dend_46 { pt3dadd( -11.321, -183.589, 115.192, 0.28 ) }
    dend_46 { pt3dadd( -15.9463, -191.307, 118.606, 0.28 ) }
    dend_46 { pt3dadd( -19.6465, -199.618, 121.747, 0.28 ) }
    dend_46 { pt3dadd( -23.5985, -207.053, 126.409, 0.28 ) }
    dend_46 { pt3dadd( -27.9972, -213.951, 131.48, 0.28 ) }
    dend_46 { pt3dadd( -33.2661, -218.626, 138.038, 0.28 ) }
    dend_46 { pt3dadd( -38.6407, -222.62, 144.951, 0.28 ) }
    dend_46 { pt3dadd( -44.4487, -225.512, 152.059, 0.28 ) }
    dend_46 { pt3dadd( -48.4434, -229.799, 159.694, 0.28 ) }
    dend_46 { pt3dadd( -53.8198, -234.514, 166.136, 0.28 ) }
    dend_46 { pt3dadd( -60.6879, -237.979, 171.919, 0.28 ) }
    dend_46 { pt3dadd( -67.7072, -239.303, 178.37, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 30/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.5643, -41.5218, 24.7072, 0.28 ) }
    dend_45 { pt3dadd( 18.3549, -50.353, 30.6955, 0.28 ) }
    dend_45 { pt3dadd( 24.0993, -58.8335, 36.342, 0.28 ) }
    dend_45 { pt3dadd( 29.0683, -67.4846, 42.4468, 0.28 ) }
    dend_45 { pt3dadd( 34.3767, -76.5483, 47.5915, 0.28 ) }
    dend_45 { pt3dadd( 39.6028, -84.4981, 54.3952, 0.28 ) }
    dend_45 { pt3dadd( 46.0424, -92.2445, 60.3386, 0.28 ) }
    dend_45 { pt3dadd( 51.7017, -99.5766, 67.481, 0.28 ) }
    dend_45 { pt3dadd( 56.8938, -107.787, 73.9938, 0.28 ) }
    dend_45 { pt3dadd( 60.2068, -117.329, 79.891, 0.28 ) }
    dend_45 { pt3dadd( 65.4599, -125.914, 85.849, 0.28 ) }
    dend_45 { pt3dadd( 71.393, -134.953, 90.3113, 0.28 ) }
    dend_45 { pt3dadd( 78.5672, -142.462, 95.6911, 0.28 ) }
    dend_45 { pt3dadd( 86.0008, -149.242, 101.655, 0.28 ) }
    dend_45 { pt3dadd( 94.1179, -156.34, 106.186, 0.28 ) }
    dend_45 { pt3dadd( 101.925, -162.423, 112.42, 0.28 ) }
    dend_45 { pt3dadd( 110.129, -169.645, 116.583, 0.28 ) }
    dend_45 { pt3dadd( 117.882, -177.48, 120.495, 0.28 ) }
    dend_45 { pt3dadd( 126.044, -185.244, 123.64, 0.28 ) }
    dend_45 { pt3dadd( 133.123, -193.346, 128.23, 0.28 ) }
    dend_45 { pt3dadd( 138.995, -202.522, 132.486, 0.28 ) }
    dend_45 { pt3dadd( 144.586, -212.208, 135.908, 0.28 ) }
    dend_45 { pt3dadd( 151.342, -221.671, 137.188, 0.28 ) }
    dend_45 { pt3dadd( 158.888, -230.268, 139.622, 0.28 ) }
    dend_45 { pt3dadd( 166.339, -239.143, 141.213, 0.28 ) }
    dend_45 { pt3dadd( 174.573, -247.434, 141.73, 0.28 ) }
    dend_45 { pt3dadd( 182.152, -256.181, 140.046, 0.28 ) }
    dend_45 { pt3dadd( 191.023, -263.685, 138.705, 0.28 ) }
    dend_45 { pt3dadd( 200.207, -270.913, 138.241, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_31 (entry count 59/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 0.104529, -20.3597, -6.7531, 0.55 ) }
    dend_43 { pt3dadd( -0.0951286, -21.9091, -8.40944, 0.55 ) }
    dend_43 { pt3dadd( -0.236042, -23.5107, -10.13, 0.55 ) }
    dend_43 { pt3dadd( -0.416507, -25.8705, -13.0544, 0.28 ) }
    dend_43 { pt3dadd( -0.481951, -26.9053, -14.4021, 0.83 ) }
    dend_43 { pt3dadd( -0.561335, -29.5937, -18.0313, 0.55 ) }
    dend_43 { pt3dadd( -0.55819, -31.537, -20.7443, 0.55 ) }
    dend_43 { pt3dadd( -0.540544, -32.3195, -22.0056, 0.55 ) }
    dend_43 { pt3dadd( -0.299825, -34.7099, -26.2605, 0.28 ) }
    dend_43 { pt3dadd( -0.244004, -34.9563, -26.7319, 0.28 ) }
    dend_43 { pt3dadd( -0.0724323, -35.5057, -27.8164, 0.28 ) }
    dend_43 { pt3dadd( 0.175328, -36.0415, -28.7386, 0.83 ) }
    dend_43 { pt3dadd( 1.07478, -37.6677, -31.2591, 0.83 ) }
    dend_43 { pt3dadd( 1.88758, -39.0376, -33.1755, 0.55 ) }
    dend_43 { pt3dadd( 2.48287, -40.0686, -34.3877, 0.83 ) }
    dend_43 { pt3dadd( 3.54732, -42.0192, -36.5155, 0.55 ) }
    dend_43 { pt3dadd( 4.62935, -44.2099, -38.777, 0.83 ) }
    dend_43 { pt3dadd( 5.60935, -46.1187, -40.6586, 0.55 ) }
    dend_43 { pt3dadd( 5.95273, -46.7544, -41.2473, 0.55 ) }
    dend_43 { pt3dadd( 6.93605, -48.4671, -42.9333, 0.83 ) }
    dend_43 { pt3dadd( 7.41248, -49.4092, -43.9997, 0.83 ) }
    dend_43 { pt3dadd( 8.22821, -51.2788, -46.3305, 0.55 ) }
    dend_43 { pt3dadd( 8.52767, -52.0775, -47.4842, 0.55 ) }
    dend_43 { pt3dadd( 8.82621, -52.851, -48.6362, 0.28 ) }
    dend_43 { pt3dadd( 9.19805, -53.8726, -50.3284, 0.83 ) }
    dend_43 { pt3dadd( 9.89243, -56.0326, -54.4493, 0.55 ) }
    dend_43 { pt3dadd( 10.3175, -57.4607, -57.4181, 0.28 ) }
    dend_43 { pt3dadd( 10.5659, -58.3439, -59.4076, 0.55 ) }
    dend_43 { pt3dadd( 10.6949, -58.7565, -60.3712, 0.28 ) }
    dend_43 { pt3dadd( 11.1671, -59.9424, -63.3147, 0.83 ) }
    dend_43 { pt3dadd( 12.2038, -61.6839, -67.7528, 0.28 ) }
    dend_43 { pt3dadd( 12.6379, -62.1981, -69.1741, 0.55 ) }
    dend_43 { pt3dadd( 13.9119, -63.4331, -72.6857, 0.28 ) }
    dend_43 { pt3dadd( 14.6657, -64.1562, -74.524, 0.55 ) }
    dend_43 { pt3dadd( 16.0332, -65.4177, -77.5511, 0.55 ) }
    dend_43 { pt3dadd( 17.1353, -66.4784, -79.8849, 0.83 ) }
    dend_43 { pt3dadd( 19.3871, -68.7774, -84.5742, 0.28 ) }
    dend_43 { pt3dadd( 19.9479, -69.4096, -85.8159, 0.55 ) }
    dend_43 { pt3dadd( 21.3685, -71.3007, -89.6058, 0.28 ) }
    dend_43 { pt3dadd( 21.7368, -71.9017, -90.8437, 0.83 ) }
    dend_43 { pt3dadd( 22.5185, -73.4681, -94.3214, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 22.7609, -74.02, -95.6956, 0.55 ) }
    dend_43 { pt3dadd( 22.8645, -74.177, -96.1836, 0.55 ) }
    dend_43 { pt3dadd( 24.0722, -75.4374, -101.417, 0.28 ) }
    dend_43 { pt3dadd( 24.3045, -75.5781, -102.216, 0.55 ) }
    dend_43 { pt3dadd( 25.3784, -75.9935, -105.115, 0.28 ) }
    dend_43 { pt3dadd( 26.288, -76.2133, -107.03, 0.83 ) }
    dend_43 { pt3dadd( 28.617, -76.7843, -111.444, 0.28 ) }
    dend_43 { pt3dadd( 29.2563, -76.9515, -112.437, 0.55 ) }
    dend_43 { pt3dadd( 30.3767, -77.2787, -113.772, 0.28 ) }
    dend_43 { pt3dadd( 31.4076, -77.6564, -114.897, 0.83 ) }
    dend_43 { pt3dadd( 31.7607, -77.8266, -115.255, 0.83 ) }
    dend_43 { pt3dadd( 33.8114, -79.0005, -117.394, 0.28 ) }
    dend_43 { pt3dadd( 34.7634, -79.6091, -118.365, 0.55 ) }
    dend_43 { pt3dadd( 35.2376, -79.914, -118.872, 0.28 ) }
    dend_43 { pt3dadd( 36.4088, -80.6644, -120.152, 0.83 ) }
    dend_43 { pt3dadd( 38.6746, -82.0376, -122.442, 0.55 ) }
    dend_43 { pt3dadd( 39.4829, -82.4578, -123.189, 0.83 ) }
    dend_43 { pt3dadd( 40.8821, -83.0282, -124.254, 0.28 ) }
    dend_43 { pt3dadd( 41.4482, -83.2338, -124.688, 0.55 ) }
    dend_43 { pt3dadd( 42.1092, -83.4434, -125.177, 0.28 ) }
    dend_43 { pt3dadd( 43.1634, -83.8019, -126.068, 0.55 ) }
    dend_43 { pt3dadd( 43.7092, -84.0124, -126.53, 0.28 ) }
    dend_43 { pt3dadd( 44.6464, -84.4808, -127.558, 0.55 ) }
    dend_43 { pt3dadd( 46.0036, -85.2394, -129.26, 0.28 ) }
    dend_43 { pt3dadd( 46.4391, -85.5391, -129.935, 0.55 ) }
    dend_43 { pt3dadd( 48.0954, -86.8436, -132.768, 0.28 ) }
    dend_43 { pt3dadd( 48.8917, -87.5458, -134.224, 0.83 ) }
    dend_43 { pt3dadd( 50.1343, -88.7553, -136.539, 0.28 ) }
    dend_43 { pt3dadd( 50.3267, -88.9626, -136.91, 0.55 ) }
    dend_43 { pt3dadd( 51.8438, -90.6962, -139.776, 0.28 ) }
    dend_43 { pt3dadd( 52.4571, -91.4597, -140.913, 0.28 ) }
    dend_43 { pt3dadd( 52.6498, -91.7453, -141.301, 0.55 ) }
    dend_43 { pt3dadd( 52.9996, -92.3915, -142.056, 0.28 ) }
    dend_43 { pt3dadd( 53.3208, -93.1001, -142.755, 0.55 ) }
    dend_43 { pt3dadd( 53.9607, -94.7246, -144.188, 0.28 ) }
    dend_43 { pt3dadd( 54.5627, -96.368, -145.469, 0.55 ) }
    dend_43 { pt3dadd( 55.4994, -98.9502, -147.416, 0.28 ) }
    dend_43 { pt3dadd( 56.0755, -100.66, -148.781, 0.83 ) }
    dend_43 { pt3dadd( 56.6606, -102.422, -150.246, 0.28 ) }
    dend_43 { pt3dadd( 57.0315, -103.386, -150.966, 0.55 ) }
    dend_43 { pt3dadd( 57.2614, -103.955, -151.372, 0.28 ) }
    dend_43 { pt3dadd( 57.6731, -104.84, -152.025, 0.83 ) }
    dend_43 { pt3dadd( 59.6065, -108.143, -154.492, 0.28 ) }
    dend_43 { pt3dadd( 59.9703, -108.77, -155.31, 0.55 ) }
    dend_43 { pt3dadd( 60.6838, -110.324, -158.38, 0.28 ) }
    dend_43 { pt3dadd( 60.93, -111.326, -160.867, 0.55 ) }
    dend_43 { pt3dadd( 60.9474, -111.881, -162.421, 0.28 ) }
    dend_43 { pt3dadd( 60.9217, -112.145, -163.23, 0.55 ) }
    dend_43 { pt3dadd( 60.4999, -114.784, -171.757, 0.55 ) }
    dend_43 { pt3dadd( 60.2449, -115.898, -175.544, 0.28 ) }
    dend_43 { pt3dadd( 60.0262, -116.618, -178.041, 0.83 ) }
    dend_43 { pt3dadd( 59.5501, -118.497, -183.923, 0.28 ) }
    dend_43 { pt3dadd( 59.5275, -118.648, -184.325, 0.55 ) }
    dend_43 { pt3dadd( 59.5593, -119.355, -185.886, 0.28 ) }
    dend_43 { pt3dadd( 60.0669, -120.774, -188.284, 0.55 ) }
    dend_43 { pt3dadd( 60.6479, -121.747, -189.722, 0.28 ) }
    dend_43 { pt3dadd( 61.2349, -122.582, -190.907, 0.55 ) }
    dend_43 { pt3dadd( 62.6746, -124.416, -193.381, 0.28 ) }
    dend_43 { pt3dadd( 63.3706, -125.328, -194.542, 0.55 ) }
    dend_43 { pt3dadd( 65.0826, -127.742, -197.68, 0.28 ) }
    dend_43 { pt3dadd( 66.1219, -129.225, -199.478, 0.55 ) }
    dend_43 { pt3dadd( 67.6384, -131.309, -202.071, 0.28 ) }
    dend_43 { pt3dadd( 68.098, -131.943, -202.828, 0.55 ) }
    dend_43 { pt3dadd( 69.0926, -133.292, -204.462, 0.28 ) }
    dend_43 { pt3dadd( 70.6253, -135.415, -207.165, 0.28 ) }
    dend_43 { pt3dadd( 71.0018, -135.906, -207.738, 0.28 ) }
    dend_43 { pt3dadd( 71.5246, -136.652, -208.611, 0.55 ) }
    dend_43 { pt3dadd( 72.4351, -138.042, -210.105, 0.28 ) }
    dend_43 { pt3dadd( 73.4918, -139.77, -212.043, 0.55 ) }
    dend_43 { pt3dadd( 75.1553, -142.57, -215.373, 0.28 ) }
    dend_43 { pt3dadd( 75.732, -143.566, -216.432, 0.55 ) }
    dend_43 { pt3dadd( 76.2376, -144.596, -217.553, 0.28 ) }
    dend_43 { pt3dadd( 76.6456, -145.714, -218.788, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.104529, -20.3597, -6.7531, 1.66 ) }
    dend_32 { pt3dadd( -0.653167, -23.3846, -7.9753, 1.66 ) }
    dend_32 { pt3dadd( -1.71898, -27.6395, -9.69451, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.04792, 33.739, -6.84859, 0.55 ) }
    dend_28 { pt3dadd( 5.51673, 36.781, -5.34897, 0.55 ) }
    dend_28 { pt3dadd( 5.13824, 38.6123, -4.31392, 0.55 ) }
    dend_28 { pt3dadd( 4.6251, 40.8503, -2.99211, 0.28 ) }
    dend_28 { pt3dadd( 4.18647, 42.3847, -2.24647, 0.55 ) }
    dend_28 { pt3dadd( 3.63221, 44.1901, -1.48762, 0.28 ) }
    dend_28 { pt3dadd( 2.9267, 46.514, -0.600112, 0.55 ) }
    dend_28 { pt3dadd( 2.29411, 48.5793, 0.0878262, 0.28 ) }
    dend_28 { pt3dadd( 1.97685, 50.0392, 0.601944, 0.83 ) }
    dend_28 { pt3dadd( 1.32754, 54.0352, 1.66498, 0.28 ) }
    dend_28 { pt3dadd( 1.21793, 55.4141, 2.07425, 0.83 ) }
    dend_28 { pt3dadd( 1.12426, 57.1787, 2.64193, 0.55 ) }
    dend_28 { pt3dadd( 1.1066, 58.8264, 3.25112, 0.83 ) }
    dend_28 { pt3dadd( 1.16654, 63.7613, 5.4429, 0.55 ) }
    dend_28 { pt3dadd( 1.31347, 67.1411, 7.27634, 0.83 ) }
    dend_28 { pt3dadd( 1.65189, 71.5658, 9.99221, 0.55 ) }
    dend_28 { pt3dadd( 1.79088, 73.4648, 11.1961, 0.55 ) }
    dend_28 { pt3dadd( 2.04473, 76.6399, 13.3908, 0.83 ) }
    dend_28 { pt3dadd( 2.35875, 81.0843, 16.6009, 0.55 ) }
    dend_28 { pt3dadd( 2.52241, 83.0628, 18.1347, 0.83 ) }
    dend_28 { pt3dadd( 2.8195, 85.2658, 19.956, 0.28 ) }
    dend_28 { pt3dadd( 2.94055, 85.8609, 20.4523, 0.55 ) }
    dend_28 { pt3dadd( 3.99738, 90.2535, 23.9769, 0.28 ) }
    dend_28 { pt3dadd( 4.54015, 92.3694, 25.5323, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 5.36038, 95.7079, 27.6388, 0.28 ) }
    dend_28 { pt3dadd( 5.86507, 97.8183, 28.8092, 0.55 ) }
    dend_28 { pt3dadd( 6.99423, 102.982, 31.3429, 0.28 ) }
    dend_28 { pt3dadd( 7.62926, 106.001, 32.5774, 0.55 ) }
    dend_28 { pt3dadd( 8.22235, 108.995, 33.5149, 0.28 ) }
    dend_28 { pt3dadd( 8.8248, 112.089, 34.3346, 0.28 ) }
    dend_28 { pt3dadd( 8.98682, 113.174, 34.5209, 0.55 ) }
    dend_28 { pt3dadd( 9.2592, 115.499, 34.8175, 0.55 ) }
    dend_28 { pt3dadd( 9.29509, 116.486, 34.8131, 0.55 ) }
    dend_28 { pt3dadd( 10.7416, 128.385, 39.0327, 0.55 ) }
    dend_28 { pt3dadd( 12.4598, 140.676, 41.7744, 0.55 ) }
    dend_28 { pt3dadd( 11.356, 153.262, 43.1495, 0.55 ) }
    dend_28 { pt3dadd( 10.4852, 165.902, 42.1768, 0.55 ) }
    dend_28 { pt3dadd( 10.107, 178.411, 39.9585, 0.55 ) }
    dend_28 { pt3dadd( 10.4256, 190.691, 36.7051, 0.55 ) }
    dend_28 { pt3dadd( 8.09357, 202.734, 33.38, 0.55 ) }
    dend_28 { pt3dadd( 6.13799, 214.419, 28.7821, 0.55 ) }
    dend_28 { pt3dadd( 1.17974, 225.271, 24.4046, 0.55 ) }
    dend_28 { pt3dadd( -3.49972, 235.372, 18.2748, 0.55 ) }
    dend_28 { pt3dadd( -7.68552, 245.758, 12.2654, 0.55 ) }
    dend_28 { pt3dadd( -11.9182, 256.712, 7.40623, 0.55 ) }
    dend_28 { pt3dadd( -15.4706, 267.974, 2.70768, 0.55 ) }
    dend_28 { pt3dadd( -19.9683, 278.773, -2.25535, 0.55 ) }
    dend_28 { pt3dadd( -25.3522, 289.393, -6.69769, 0.55 ) }
    dend_28 { pt3dadd( -31.1354, 299.982, -10.6942, 0.55 ) }
    dend_28 { pt3dadd( -35.3411, 311.178, -14.9877, 0.55 ) }
    dend_28 { pt3dadd( -41.6882, 321.957, -17.2322, 0.55 ) }
    dend_28 { pt3dadd( -47.5179, 332.344, -21.6657, 0.55 ) }
    dend_28 { pt3dadd( -53.8009, 342.232, -26.5919, 0.55 ) }
    dend_28 { pt3dadd( -59.9873, 351.286, -33.0147, 0.55 ) }
    dend_28 { pt3dadd( -67.0436, 359.227, -39.9908, 0.55 ) }
    dend_28 { pt3dadd( -74.7337, 365.947, -47.5544, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.04792, 33.739, -6.84859, 0.83 ) }
    dend_25 { pt3dadd( 8.33389, 36.9973, -7.75026, 0.83 ) }
    dend_25 { pt3dadd( 9.91698, 39.113, -8.32853, 0.55 ) }
    dend_25 { pt3dadd( 10.9589, 40.348, -8.69705, 0.55 ) }
    dend_25 { pt3dadd( 11.9411, 41.4841, -9.03079, 0.55 ) }
    dend_25 { pt3dadd( 13.3152, 43.0518, -9.48049, 0.55 ) }
    dend_25 { pt3dadd( 15.4103, 45.378, -10.1034, 0.83 ) }
    dend_25 { pt3dadd( 16.7619, 46.7771, -10.4389, 0.83 ) }
    dend_25 { pt3dadd( 18.6557, 48.6115, -10.9183, 0.83 ) }
    dend_25 { pt3dadd( 20.5277, 50.3515, -11.3577, 0.83 ) }
    dend_25 { pt3dadd( 23.2093, 52.8077, -12.071, 0.55 ) }
    dend_25 { pt3dadd( 25.6122, 55.053, -12.8226, 0.83 ) }
    dend_25 { pt3dadd( 27.9386, 57.2148, -13.633, 0.83 ) }
    dend_25 { pt3dadd( 28.9586, 58.211, -14.012, 0.83 ) }
    dend_25 { pt3dadd( 31.5684, 60.7842, -15.0287, 0.83 ) }
    dend_25 { pt3dadd( 34.4588, 63.6447, -16.2072, 0.83 ) }
    dend_25 { pt3dadd( 36.6791, 65.861, -17.1608, 0.55 ) }
    dend_25 { pt3dadd( 38.8734, 68.1171, -18.1334, 0.55 ) }
    dend_25 { pt3dadd( 40.8004, 70.1968, -18.9165, 0.83 ) }
    dend_25 { pt3dadd( 42.3154, 72.0276, -19.5401, 0.55 ) }
    dend_25 { pt3dadd( 43.4025, 73.5405, -20.043, 0.55 ) }
    dend_25 { pt3dadd( 44.6306, 75.5644, -20.6355, 0.83 ) }
    dend_25 { pt3dadd( 46.0411, 78.4462, -21.5241, 0.83 ) }
    dend_25 { pt3dadd( 46.8304, 80.6414, -22.2514, 0.83 ) }
    dend_25 { pt3dadd( 47.6549, 84.0005, -23.4716, 0.55 ) }
    dend_25 { pt3dadd( 47.9925, 86.4049, -24.5092, 0.83 ) }
    dend_25 { pt3dadd( 48.0442, 87.7555, -25.2892, 0.83 ) }
    dend_25 { pt3dadd( 47.9795, 89.3526, -26.3681, 0.83 ) }
    dend_25 { pt3dadd( 47.8785, 90.7112, -27.4358, 0.83 ) }
    dend_25 { pt3dadd( 47.7644, 92.2579, -28.9237, 0.55 ) }
    dend_25 { pt3dadd( 47.7014, 94.5419, -31.2783, 0.83 ) }
    dend_25 { pt3dadd( 47.7514, 98.4558, -35.4711, 0.28 ) }
    dend_25 { pt3dadd( 47.8137, 99.9575, -37.0733, 0.83 ) }
    dend_25 { pt3dadd( 47.9488, 102.069, -39.2749, 0.83 ) }
    dend_25 { pt3dadd( 48.3141, 106.508, -43.7572, 0.55 ) }
    dend_25 { pt3dadd( 48.5197, 108.132, -45.23, 0.83 ) }
    dend_25 { pt3dadd( 49.1669, 111.779, -47.8396, 0.28 ) }
    dend_25 { pt3dadd( 49.5955, 113.657, -48.8731, 0.28 ) }
    dend_25 { pt3dadd( 49.8846, 114.881, -49.3873, 0.55 ) }
    dend_25 { pt3dadd( 50.1217, 116.056, -49.6928, 0.28 ) }
    dend_25 { pt3dadd( 50.5499, 118.747, -49.9756, 0.83 ) }
    dend_25 { pt3dadd( 50.8493, 122.478, -50.362, 0.28 ) }
    dend_25 { pt3dadd( 50.9264, 124.342, -50.5297, 0.28 ) }
    dend_25 { pt3dadd( 50.9415, 125.726, -50.7695, 0.83 ) }
    dend_25 { pt3dadd( 50.9379, 129.415, -51.6725, 0.28 ) }
    dend_25 { pt3dadd( 50.8973, 131.506, -52.3336, 0.83 ) }
    dend_25 { pt3dadd( 50.7947, 135.057, -53.7695, 0.55 ) }
    dend_25 { pt3dadd( 50.7669, 136.146, -54.3341, 0.28 ) }
    dend_25 { pt3dadd( 50.8623, 138.715, -55.8211, 0.55 ) }
    dend_25 { pt3dadd( 51.0708, 140.451, -56.98, 0.55 ) }
    dend_25 { pt3dadd( 51.3678, 141.51, -57.8165, 0.28 ) }
    dend_25 { pt3dadd( 51.7843, 142.316, -58.5314, 0.55 ) }
    dend_25 { pt3dadd( 53.2605, 144.186, -60.2019, 0.55 ) }
    dend_25 { pt3dadd( 54.1971, 145.117, -61.004, 0.28 ) }
    dend_25 { pt3dadd( 55.24, 145.995, -61.6824, 0.55 ) }
    dend_25 { pt3dadd( 56.6684, 147.102, -62.3589, 0.55 ) }
    dend_25 { pt3dadd( 59.8751, 149.54, -63.4046, 0.28 ) }
    dend_25 { pt3dadd( 61.2469, 150.59, -63.6896, 0.83 ) }
    dend_25 { pt3dadd( 63.865, 152.667, -63.9988, 0.55 ) }
    dend_25 { pt3dadd( 65.4896, 154.042, -64.1084, 0.55 ) }
    dend_25 { pt3dadd( 68.5697, 156.924, -64.1526, 0.28 ) }
    dend_25 { pt3dadd( 70.9369, 159.415, -64.0666, 0.83 ) }
    dend_25 { pt3dadd( 73.1184, 162.029, -63.6264, 0.55 ) }
    dend_25 { pt3dadd( 74.9302, 164.396, -62.9763, 0.55 ) }
    dend_25 { pt3dadd( 76.0106, 166.016, -62.4428, 1.11 ) }
    dend_25 { pt3dadd( 77.0828, 167.883, -61.8111, 1.11 ) }
    dend_25 { pt3dadd( 77.6396, 169.066, -61.4219, 1.11 ) }
    dend_25 { pt3dadd( 79.8459, 175.088, -59.3762, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_25 { pt3dadd( 80.2414, 176.516, -58.8936, 0.28 ) }
    dend_25 { pt3dadd( 80.7666, 178.831, -58.1597, 0.55 ) }
    dend_25 { pt3dadd( 81.0914, 180.969, -57.6181, 0.28 ) }
    dend_25 { pt3dadd( 81.1703, 181.77, -57.4701, 0.83 ) }
    dend_25 { pt3dadd( 81.2289, 183.521, -57.3254, 0.28 ) }
    dend_25 { pt3dadd( 81.2068, 184.88, -57.3604, 0.55 ) }
    dend_25 { pt3dadd( 81.2245, 186.296, -57.2675, 0.28 ) }
    dend_25 { pt3dadd( 81.3447, 190.404, -56.642, 0.28 ) }
    dend_25 { pt3dadd( 81.4064, 192.299, -56.2784, 0.55 ) }
    dend_25 { pt3dadd( 81.483, 194.938, -55.7031, 0.28 ) }
    dend_25 { pt3dadd( 81.5427, 196.551, -55.3199, 0.83 ) }
    dend_25 { pt3dadd( 81.7501, 202.036, -53.8963, 0.28 ) }
    dend_25 { pt3dadd( 81.8168, 203.564, -53.4498, 0.83 ) }
    dend_25 { pt3dadd( 81.9459, 205.363, -52.8487, 0.28 ) }
    dend_25 { pt3dadd( 82.0051, 206.443, -52.4155, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.85312, 19.6573, 7.09427, 1.11 ) }
    dend_9 { pt3dadd( -3.63692, 22.6544, 8.34063, 1.11 ) }
    dend_9 { pt3dadd( -2.66889, 25.0399, 9.33268, 0.83 ) }
    dend_9 { pt3dadd( -1.54099, 27.8194, 10.4885, 0.83 ) }
    dend_9 { pt3dadd( 0.514026, 32.8836, 12.5945, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.85312, 19.6573, 7.09427, 0.83 ) }
    dend_2 { pt3dadd( -6.83845, 24.8124, 6.03416, 0.83 ) }
    dend_2 { pt3dadd( -8.22756, 28.4194, 5.29241, 1.11 ) }
    dend_2 { pt3dadd( -9.38731, 31.4307, 4.67315, 1.11 ) }
    dend_2 { pt3dadd( -9.80266, 32.5093, 4.45136, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 25/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.71898, -27.6395, -9.69451, 0.83 ) }
    dend_36 { pt3dadd( -2.8658, -26.8021, -10.675, 0.83 ) }
    dend_36 { pt3dadd( -4.58327, -25.5708, -12.0398, 0.83 ) }
    dend_36 { pt3dadd( -9.39272, -22.4846, -15.723, 1.11 ) }
    dend_36 { pt3dadd( -12.2369, -20.6595, -17.9011, 1.11 ) }
    dend_36 { pt3dadd( -15.8658, -18.3309, -20.6802, 1.11 ) }
    dend_36 { pt3dadd( -17.6619, -17.1783, -22.0556, 0.55 ) }
    dend_36 { pt3dadd( -18.7297, -16.5309, -22.8984, 0.55 ) }
    dend_36 { pt3dadd( -21.5902, -15.0617, -25.0037, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.71898, -27.6395, -9.69451, 1.11 ) }
    dend_33 { pt3dadd( -3.73174, -31.6877, -11.383, 1.11 ) }
    dend_33 { pt3dadd( -5.02585, -34.2905, -12.4686, 1.11 ) }
    dend_33 { pt3dadd( -6.75299, -37.7642, -13.9175, 1.11 ) }
    dend_33 { pt3dadd( -9.18401, -42.6536, -15.9568, 1.11 ) }
    dend_33 { pt3dadd( -12.1788, -48.6769, -18.469, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 82.0051, 206.443, -52.4155, 0.28 ) }
    dend_27 { pt3dadd( 80.6514, 206.359, -51.6765, 0.28 ) }
    dend_27 { pt3dadd( 79.433, 206.284, -51.0114, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 43/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 82.0051, 206.443, -52.4155, 0.55 ) }
    dend_26 { pt3dadd( 82.2661, 208.753, -50.4801, 0.55 ) }
    dend_26 { pt3dadd( 82.5106, 211.023, -48.6716, 0.55 ) }
    dend_26 { pt3dadd( 82.6763, 213.357, -46.9148, 0.28 ) }
    dend_26 { pt3dadd( 82.7615, 214.2, -46.2496, 0.55 ) }
    dend_26 { pt3dadd( 83.1193, 216.758, -44.313, 0.28 ) }
    dend_26 { pt3dadd( 83.2457, 217.475, -43.806, 0.55 ) }
    dend_26 { pt3dadd( 83.5304, 218.779, -42.9851, 0.28 ) }
    dend_26 { pt3dadd( 83.8744, 220.019, -42.2864, 0.55 ) }
    dend_26 { pt3dadd( 84.5055, 222.2, -41.2907, 0.28 ) }
    dend_26 { pt3dadd( 84.8981, 223.979, -40.9942, 0.28 ) }
    dend_26 { pt3dadd( 85.0405, 225.251, -41.2979, 0.55 ) }
    dend_26 { pt3dadd( 85.1479, 227.152, -42.2558, 0.28 ) }
    dend_26 { pt3dadd( 85.1479, 227.152, -42.2558, 0.55 ) }
    dend_26 { pt3dadd( 85.3407, 229.254, -43.5832, 0.28 ) }
    dend_26 { pt3dadd( 85.9048, 236.042, -47.6996, 0.28 ) }
    dend_26 { pt3dadd( 86.0831, 237.833, -48.7209, 0.55 ) }
    dend_26 { pt3dadd( 86.4506, 240.807, -50.251, 0.28 ) }
    dend_26 { pt3dadd( 86.6745, 242.195, -50.8003, 0.55 ) }
    dend_26 { pt3dadd( 87.4399, 246.286, -51.8405, 0.28 ) }
    dend_26 { pt3dadd( 87.7426, 247.827, -51.9938, 0.55 ) }
    dend_26 { pt3dadd( 88.0069, 249.04, -51.9605, 0.28 ) }
    dend_26 { pt3dadd( 88.2936, 250.477, -51.8878, 0.55 ) }
    dend_26 { pt3dadd( 88.9969, 254.512, -51.5342, 0.28 ) }
    dend_26 { pt3dadd( 89.2235, 256.245, -51.4158, 0.55 ) }
    dend_26 { pt3dadd( 89.5706, 260.206, -51.3185, 0.28 ) }
    dend_26 { pt3dadd( 89.7249, 262.224, -51.2896, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 70/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.514026, 32.8836, 12.5945, 0.83 ) }
    dend_21 { pt3dadd( 1.64838, 34.9595, 13.2788, 0.83 ) }
    dend_21 { pt3dadd( 2.91771, 37.6848, 14.079, 0.83 ) }
    dend_21 { pt3dadd( 3.78583, 39.8668, 14.9055, 0.55 ) }
    dend_21 { pt3dadd( 4.87351, 42.8565, 16.4077, 0.83 ) }
    dend_21 { pt3dadd( 5.71574, 44.9857, 17.5555, 0.83 ) }
    dend_21 { pt3dadd( 6.36154, 46.5882, 18.4297, 0.83 ) }
    dend_21 { pt3dadd( 7.61831, 49.855, 20.2607, 0.83 ) }
    dend_21 { pt3dadd( 9.1153, 53.9944, 22.5516, 0.83 ) }
    dend_21 { pt3dadd( 10.3455, 57.8237, 24.5951, 0.83 ) }
    dend_21 { pt3dadd( 11.2686, 60.7357, 26.2317, 0.55 ) }
    dend_21 { pt3dadd( 12.1252, 63.2933, 27.7153, 0.83 ) }
    dend_21 { pt3dadd( 12.7649, 65.1282, 28.8021, 0.83 ) }
    dend_21 { pt3dadd( 13.5427, 67.2645, 29.9566, 0.83 ) }
    dend_21 { pt3dadd( 14.7027, 70.5274, 31.0471, 0.83 ) }
    dend_21 { pt3dadd( 18.9355, 78.8224, 33.8483, 0.83 ) }
    dend_21 { pt3dadd( 22.9866, 86.9335, 37.3651, 0.83 ) }
    dend_21 { pt3dadd( 26.1572, 95.5025, 40.6951, 0.83 ) }
    dend_21 { pt3dadd( 29.5202, 103.624, 44.855, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.514026, 32.8836, 12.5945, 0.83 ) }
    dend_10 { pt3dadd( -1.27802, 37.2923, 18.8303, 0.83 ) }
    dend_10 { pt3dadd( -2.0292, 39.3491, 21.4819, 0.83 ) }
    dend_10 { pt3dadd( -3.41852, 43.1533, 26.3863, 0.83 ) }
    dend_10 { pt3dadd( -4.10686, 45.0381, 28.8161, 0.83 ) }
    dend_10 { pt3dadd( -5.86115, 49.8416, 35.0087, 1.11 ) }
    dend_10 { pt3dadd( -7.07064, 53.1534, 39.2783, 0.83 ) }
    dend_10 { pt3dadd( -7.90971, 55.4716, 42.1933, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.80266, 32.5093, 4.45136, 0.55 ) }
    dend_6 { pt3dadd( -10.5474, 33.9568, 5.70789, 0.55 ) }
    dend_6 { pt3dadd( -11.309, 35.5304, 7.07457, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -11.8512, 36.8306, 8.24402, 0.55 ) }
    dend_6 { pt3dadd( -12.8504, 39.0286, 10.7444, 0.83 ) }
    dend_6 { pt3dadd( -14.1266, 41.5005, 13.6821, 0.83 ) }
    dend_6 { pt3dadd( -14.5461, 42.1255, 14.5894, 0.55 ) }
    dend_6 { pt3dadd( -15.6425, 43.4816, 16.8683, 0.83 ) }
    dend_6 { pt3dadd( -17.5537, 45.5818, 20.4386, 0.83 ) }
    dend_6 { pt3dadd( -21.071, 48.9722, 26.2468, 0.83 ) }
    dend_6 { pt3dadd( -22.3218, 50.013, 28.0659, 0.83 ) }
    dend_6 { pt3dadd( -27.4518, 53.6871, 34.4387, 0.83 ) }
    dend_6 { pt3dadd( -29.109, 54.7472, 36.2331, 0.83 ) }
    dend_6 { pt3dadd( -31.8902, 56.3696, 38.7934, 0.83 ) }
    dend_6 { pt3dadd( -33.5478, 57.2499, 39.9559, 0.83 ) }
    dend_6 { pt3dadd( -35.1512, 58.1933, 40.7206, 0.83 ) }
    dend_6 { pt3dadd( -36.8709, 59.2841, 41.4199, 0.55 ) }
    dend_6 { pt3dadd( -38.3137, 60.3372, 41.788, 0.55 ) }
    dend_6 { pt3dadd( -40.1999, 61.7329, 42.4571, 0.83 ) }
    dend_6 { pt3dadd( -41.7532, 62.8543, 43.088, 0.55 ) }
    dend_6 { pt3dadd( -44.232, 64.783, 44.185, 0.83 ) }
    dend_6 { pt3dadd( -47.1044, 67.2778, 45.5865, 0.55 ) }
    dend_6 { pt3dadd( -48.2704, 68.3514, 46.2269, 0.55 ) }
    dend_6 { pt3dadd( -51.0752, 70.8407, 47.9288, 1.11 ) }
    dend_6 { pt3dadd( -57.7438, 76.2388, 53.624, 1.11 ) }
    dend_6 { pt3dadd( -63.6057, 81.2709, 60.4329, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 23/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -9.80266, 32.5093, 4.45136, 0.55 ) }
    dend_3 { pt3dadd( -9.10195, 36.4984, 4.0095, 0.55 ) }
    dend_3 { pt3dadd( -8.98439, 37.1526, 3.95445, 0.83 ) }
    dend_3 { pt3dadd( -8.73397, 38.6537, 3.96077, 0.28 ) }
    dend_3 { pt3dadd( -8.51181, 40.1819, 4.04391, 1.11 ) }
    dend_3 { pt3dadd( -8.07563, 43.1373, 4.23754, 1.11 ) }
    dend_3 { pt3dadd( -7.65791, 46.0814, 4.44417, 0.83 ) }
    dend_3 { pt3dadd( -7.34672, 48.1982, 4.67416, 1.11 ) }
    dend_3 { pt3dadd( -6.8237, 51.3174, 5.0149, 0.55 ) }
    dend_3 { pt3dadd( -6.25629, 54.5579, 5.38126, 0.83 ) }
    dend_3 { pt3dadd( -5.65076, 57.9521, 5.73333, 0.28 ) }
    dend_3 { pt3dadd( -5.35412, 59.74, 5.89296, 1.11 ) }
    dend_3 { pt3dadd( -4.69848, 64.1306, 6.2588, 1.11 ) }
    dend_3 { pt3dadd( -4.40209, 66.2005, 6.37731, 0.28 ) }
    dend_3 { pt3dadd( -4.02201, 68.8694, 6.48709, 0.83 ) }
    dend_3 { pt3dadd( -3.47312, 73.1493, 6.69092, 0.55 ) }
    dend_3 { pt3dadd( -3.11277, 76.5422, 6.86067, 0.55 ) }
    dend_3 { pt3dadd( -2.90099, 78.9265, 6.97231, 0.55 ) }
    dend_3 { pt3dadd( -2.80373, 80.122, 6.99697, 1.11 ) }
    dend_3 { pt3dadd( -2.45203, 83.7419, 7.01782, 1.11 ) }
    dend_3 { pt3dadd( -2.04868, 87.3718, 6.95572, 0.83 ) }
    dend_3 { pt3dadd( -1.67574, 90.4073, 6.82911, 0.83 ) }
    dend_3 { pt3dadd( -1.38334, 92.5026, 6.70619, 0.28 ) }
    dend_3 { pt3dadd( -0.878577, 95.9733, 6.4247, 0.83 ) }
    dend_3 { pt3dadd( -0.373496, 99.3459, 6.07738, 0.83 ) }
    dend_3 { pt3dadd( 0.178515, 102.874, 5.57969, 0.83 ) }
    dend_3 { pt3dadd( 0.555925, 104.9, 5.24739, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 50/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -21.5902, -15.0617, -25.0037, 0.55 ) }
    dend_38 { pt3dadd( -22.993, -14.1222, -27.0506, 0.55 ) }
    dend_38 { pt3dadd( -23.4448, -13.7735, -27.7293, 1.11 ) }
    dend_38 { pt3dadd( -27.7664, -10.4376, -34.2217, 0.83 ) }
    dend_38 { pt3dadd( -31.6267, -7.45777, -40.021, 0.55 ) }
    dend_38 { pt3dadd( -32.4871, -6.79365, -41.3135, 0.55 ) }
    dend_38 { pt3dadd( -35.3586, -4.5771, -45.6273, 0.83 ) }
    dend_38 { pt3dadd( -36.6071, -3.53301, -47.7223, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.5902, -15.0617, -25.0037, 0.55 ) }
    dend_37 { pt3dadd( -24.602, -17.359, -27.6637, 0.55 ) }
    dend_37 { pt3dadd( -25.7877, -17.9909, -28.5032, 0.55 ) }
    dend_37 { pt3dadd( -27.4401, -18.5075, -29.7187, 1.11 ) }
    dend_37 { pt3dadd( -29.187, -18.9287, -30.9256, 0.55 ) }
    dend_37 { pt3dadd( -34.744, -20.0415, -35.2671, 0.55 ) }
    dend_37 { pt3dadd( -38.5849, -20.6743, -38.2809, 0.55 ) }
    dend_37 { pt3dadd( -41.8387, -20.958, -40.9628, 0.83 ) }
    dend_37 { pt3dadd( -49.3543, -21.2517, -47.2766, 0.28 ) }
    dend_37 { pt3dadd( -51.2367, -21.2553, -48.9656, 0.83 ) }
    dend_37 { pt3dadd( -59.9476, -21.1281, -57.1426, 0.55 ) }
    dend_37 { pt3dadd( -61.2435, -21.0996, -58.3685, 0.83 ) }
    dend_37 { pt3dadd( -66.483, -20.9745, -63.4291, 0.28 ) }
    dend_37 { pt3dadd( -67.3091, -20.9471, -64.2159, 0.55 ) }
    dend_37 { pt3dadd( -74.1903, -20.4449, -70.5927, 0.28 ) }
    dend_37 { pt3dadd( -75.1018, -20.3254, -71.4618, 0.28 ) }
    dend_37 { pt3dadd( -76.5605, -20.0457, -72.7717, 0.55 ) }
    dend_37 { pt3dadd( -77.8055, -19.7719, -73.9776, 0.83 ) }
    dend_37 { pt3dadd( -84.3967, -17.9559, -80.3286, 0.28 ) }
    dend_37 { pt3dadd( -85.2819, -17.6709, -81.2438, 0.83 ) }
    dend_37 { pt3dadd( -90.8974, -15.5539, -87.3462, 0.28 ) }
    dend_37 { pt3dadd( -92.0294, -15.0967, -88.6625, 0.83 ) }
    dend_37 { pt3dadd( -99.1239, -11.9826, -97.3009, 0.28 ) }
    dend_37 { pt3dadd( -100.608, -11.3424, -99.1676, 0.83 ) }
    dend_37 { pt3dadd( -106.41, -9.03285, -106.565, 0.28 ) }
    dend_37 { pt3dadd( -107.676, -8.57548, -108.187, 0.55 ) }
    dend_37 { pt3dadd( -109.286, -8.06594, -110.241, 0.28 ) }
    dend_37 { pt3dadd( -109.958, -7.86297, -111.133, 0.83 ) }
    dend_37 { pt3dadd( -113.34, -7.04476, -115.426, 0.28 ) }
    dend_37 { pt3dadd( -114.299, -6.92473, -116.725, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.1788, -48.6769, -18.469, 0.55 ) }
    dend_35 { pt3dadd( -13.7038, -48.259, -19.2391, 0.55 ) }
    dend_35 { pt3dadd( -14.0288, -48.2022, -19.4293, 0.55 ) }
    dend_35 { pt3dadd( -17.2842, -47.773, -21.2992, 0.83 ) }
    dend_35 { pt3dadd( -18.5901, -47.6829, -22.1028, 0.28 ) }
    dend_35 { pt3dadd( -19.3606, -47.6596, -22.5681, 0.55 ) }
    dend_35 { pt3dadd( -21.6668, -47.686, -24.035, 1.11 ) }
    dend_35 { pt3dadd( -25.2789, -47.8306, -26.4664, 0.55 ) }
    dend_35 { pt3dadd( -25.9804, -47.881, -26.9656, 1.11 ) }
    dend_35 { pt3dadd( -28.1616, -48.1599, -28.5093, 0.55 ) }
    dend_35 { pt3dadd( -29.1305, -48.3039, -29.1889, 0.55 ) }
    dend_35 { pt3dadd( -32.0556, -48.8011, -31.1555, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( -32.6193, -48.9182, -31.508, 0.55 ) }
    dend_35 { pt3dadd( -35.992, -49.4638, -33.1415, 0.28 ) }
    dend_35 { pt3dadd( -37.0827, -49.6077, -33.5268, 1.11 ) }
    dend_35 { pt3dadd( -38.519, -49.7886, -33.6337, 0.55 ) }
    dend_35 { pt3dadd( -41.0937, -50.2438, -33.5869, 1.11 ) }
    dend_35 { pt3dadd( -42.3946, -50.4878, -33.4126, 0.55 ) }
    dend_35 { pt3dadd( -43.8628, -50.7924, -33.4905, 0.55 ) }
    dend_35 { pt3dadd( -45.5905, -51.1658, -33.6751, 0.55 ) }
    dend_35 { pt3dadd( -46.735, -51.345, -33.9388, 1.11 ) }
    dend_35 { pt3dadd( -49.6658, -51.6513, -34.8031, 0.55 ) }
    dend_35 { pt3dadd( -51.2519, -51.6272, -35.3346, 0.83 ) }
    dend_35 { pt3dadd( -54.9257, -51.1977, -36.5787, 0.28 ) }
    dend_35 { pt3dadd( -56.1872, -50.9654, -37.0004, 0.55 ) }
    dend_35 { pt3dadd( -58.9885, -50.2235, -37.8289, 0.28 ) }
    dend_35 { pt3dadd( -59.8289, -49.9362, -38.007, 0.83 ) }
    dend_35 { pt3dadd( -63.4076, -48.3987, -38.2907, 0.28 ) }
    dend_35 { pt3dadd( -64.3609, -47.9173, -38.1428, 0.83 ) }
    dend_35 { pt3dadd( -65.4101, -47.3047, -37.3329, 0.28 ) }
    dend_35 { pt3dadd( -65.7879, -47.1265, -36.4061, 0.55 ) }
    dend_35 { pt3dadd( -66.3941, -46.9402, -33.5977, 0.28 ) }
    dend_35 { pt3dadd( -66.416, -46.9364, -33.4288, 0.83 ) }
    dend_35 { pt3dadd( -66.7725, -46.9007, -28.1157, 0.28 ) }
    dend_35 { pt3dadd( -66.797, -46.8716, -27.5055, 0.83 ) }
    dend_35 { pt3dadd( -66.8602, -46.5532, -24.6471, 0.28 ) }
    dend_35 { pt3dadd( -66.8716, -46.4023, -23.9494, 0.83 ) }
    dend_35 { pt3dadd( -66.9644, -45.3556, -20.9328, 0.28 ) }
    dend_35 { pt3dadd( -67.0344, -44.9655, -20.1736, 0.83 ) }
    dend_35 { pt3dadd( -67.3065, -43.9181, -18.8337, 0.28 ) }
    dend_35 { pt3dadd( -67.478, -43.2287, -18.0422, 0.83 ) }
    dend_35 { pt3dadd( -67.9982, -41.2968, -16.0665, 0.28 ) }
    dend_35 { pt3dadd( -68.112, -40.9262, -15.7039, 0.83 ) }
    dend_35 { pt3dadd( -68.7286, -39.2888, -14.2131, 0.28 ) }
    dend_35 { pt3dadd( -69.0836, -38.5803, -13.5188, 0.55 ) }
    dend_35 { pt3dadd( -70.1931, -36.8122, -11.7067, 0.28 ) }
    dend_35 { pt3dadd( -70.4556, -36.434, -11.3132, 0.55 ) }
    dend_35 { pt3dadd( -71.1385, -35.5736, -10.4694, 0.28 ) }
    dend_35 { pt3dadd( -71.3926, -35.2433, -10.1374, 0.55 ) }
    dend_35 { pt3dadd( -72.8992, -33.2861, -8.02943, 0.28 ) }
    dend_35 { pt3dadd( -73.0295, -33.1332, -7.88577, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.1788, -48.6769, -18.469, 0.83 ) }
    dend_34 { pt3dadd( -12.0603, -53.1347, -18.9645, 0.83 ) }
    dend_34 { pt3dadd( -12.0383, -56.7857, -19.3195, 0.55 ) }
    dend_34 { pt3dadd( -12.055, -58.1818, -19.4234, 0.55 ) }
    dend_34 { pt3dadd( -12.1779, -60.4154, -19.5997, 1.11 ) }
    dend_34 { pt3dadd( -12.2919, -62.1999, -19.687, 0.55 ) }
    dend_34 { pt3dadd( -12.4183, -64.1595, -19.7406, 1.11 ) }
    dend_34 { pt3dadd( -12.705, -66.8316, -19.8136, 0.55 ) }
    dend_34 { pt3dadd( -12.8916, -68.5881, -19.7714, 1.11 ) }
    dend_34 { pt3dadd( -13.2809, -71.872, -19.6393, 1.11 ) }
    dend_34 { pt3dadd( -13.6091, -74.7032, -19.4512, 0.55 ) }
    dend_34 { pt3dadd( -13.8865, -77.482, -19.1953, 1.11 ) }
    dend_34 { pt3dadd( -14.1126, -80.0675, -18.9769, 0.83 ) }
    dend_34 { pt3dadd( -14.3174, -82.9475, -18.8045, 0.28 ) }
    dend_34 { pt3dadd( -14.5717, -86.2935, -18.7578, 1.11 ) }
    dend_34 { pt3dadd( -14.7903, -88.9519, -18.8347, 0.83 ) }
    dend_34 { pt3dadd( -15.0906, -92.0791, -19.1035, 0.83 ) }
    dend_34 { pt3dadd( -15.3676, -95.0175, -19.4615, 0.83 ) }
    dend_34 { pt3dadd( -15.6149, -97.7464, -19.918, 0.83 ) }
    dend_34 { pt3dadd( -15.9076, -100.6, -20.5586, 0.28 ) }
    dend_34 { pt3dadd( -16.1364, -102.604, -21.1128, 0.83 ) }
    dend_34 { pt3dadd( -16.311, -104.219, -21.6273, 0.28 ) }
    dend_34 { pt3dadd( -16.458, -105.805, -22.1338, 1.11 ) }
    dend_34 { pt3dadd( -16.5735, -108.031, -22.7174, 0.28 ) }
    dend_34 { pt3dadd( -16.6086, -109.965, -23.1095, 1.11 ) }
    dend_34 { pt3dadd( -16.7055, -112.363, -23.6501, 0.28 ) }
    dend_34 { pt3dadd( -16.7848, -113.566, -23.9718, 1.11 ) }
    dend_34 { pt3dadd( -16.9079, -115.124, -24.4077, 1.11 ) }
    dend_34 { pt3dadd( -17.2031, -118.327, -25.3924, 0.55 ) }
    dend_34 { pt3dadd( -17.4216, -120.975, -26.2479, 1.11 ) }
    dend_34 { pt3dadd( -17.756, -125.685, -28.009, 0.83 ) }
    dend_34 { pt3dadd( -17.8166, -127.611, -28.835, 0.28 ) }
    dend_34 { pt3dadd( -17.7578, -128.949, -29.4466, 0.55 ) }
    dend_34 { pt3dadd( -17.4384, -131.326, -30.5328, 0.28 ) }
    dend_34 { pt3dadd( -17.1072, -132.801, -31.1451, 0.83 ) }
    dend_34 { pt3dadd( -16.3283, -135.413, -32.0339, 0.55 ) }
    dend_34 { pt3dadd( -15.327, -137.921, -32.5748, 1.38 ) }
    dend_34 { pt3dadd( -12.9457, -142.923, -32.986, 0.28 ) }
    dend_34 { pt3dadd( -11.9577, -144.801, -32.9134, 0.83 ) }
    dend_34 { pt3dadd( -10.8853, -146.598, -32.5482, 0.28 ) }
    dend_34 { pt3dadd( -9.84463, -148.178, -31.98, 0.83 ) }
    dend_34 { pt3dadd( -8.17943, -150.475, -30.8013, 0.83 ) }
    dend_34 { pt3dadd( -5.57605, -153.798, -28.7344, 0.28 ) }
    dend_34 { pt3dadd( -4.59256, -154.99, -27.9086, 0.55 ) }
    dend_34 { pt3dadd( -3.17648, -156.744, -26.7603, 0.28 ) }
    dend_34 { pt3dadd( -1.37448, -159.02, -25.344, 0.83 ) }
    dend_34 { pt3dadd( 0.115031, -160.962, -24.2317, 0.28 ) }
    dend_34 { pt3dadd( 0.787733, -161.971, -23.7593, 0.55 ) }
    dend_34 { pt3dadd( 1.93538, -164.035, -23.0381, 0.28 ) }
    dend_34 { pt3dadd( 2.28863, -164.766, -22.8448, 0.83 ) }
    dend_34 { pt3dadd( 2.83065, -166.301, -22.6631, 0.28 ) }
    dend_34 { pt3dadd( 3.14133, -167.51, -22.6717, 0.83 ) }
    dend_34 { pt3dadd( 3.39258, -168.63, -22.7891, 0.83 ) }
    dend_34 { pt3dadd( 3.917, -171.062, -23.2019, 0.83 ) }
    dend_34 { pt3dadd( 4.57761, -174.462, -23.9578, 0.28 ) }
    dend_34 { pt3dadd( 4.98393, -177.333, -24.7713, 0.28 ) }
    dend_34 { pt3dadd( 5.27727, -179.355, -25.3659, 0.83 ) }
    dend_34 { pt3dadd( 5.52725, -181.038, -25.9021, 0.55 ) }
    dend_34 { pt3dadd( 5.75324, -182.382, -26.3289, 1.11 ) }
    dend_34 { pt3dadd( 6.68975, -187.135, -27.7673, 0.55 ) }
    dend_34 { pt3dadd( 7.44471, -190.949, -28.9655, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_34 { pt3dadd( 8.14838, -194.005, -29.8691, 0.28 ) }
    dend_34 { pt3dadd( 8.53147, -195.587, -30.432, 0.55 ) }
    dend_34 { pt3dadd( 9.10684, -197.475, -31.2375, 0.28 ) }
    dend_34 { pt3dadd( 9.6015, -198.645, -31.7785, 0.55 ) }
    dend_34 { pt3dadd( 11.0691, -201.275, -33.0835, 0.28 ) }
    dend_34 { pt3dadd( 12.4073, -203.503, -33.9735, 0.83 ) }
    dend_34 { pt3dadd( 13.9713, -206.214, -34.95, 0.28 ) }
    dend_34 { pt3dadd( 15.7676, -209.356, -35.9355, 0.83 ) }
    dend_34 { pt3dadd( 17.5102, -212.481, -36.9683, 0.55 ) }
    dend_34 { pt3dadd( 18.4263, -214.191, -37.4977, 0.83 ) }
    dend_34 { pt3dadd( 21.2396, -219.493, -38.9268, 0.55 ) }
    dend_34 { pt3dadd( 22.2763, -221.548, -39.5431, 0.83 ) }
    dend_34 { pt3dadd( 23.5387, -224.262, -40.4304, 0.55 ) }
    dend_34 { pt3dadd( 24.548, -226.66, -41.3424, 0.83 ) }
    dend_34 { pt3dadd( 25.8405, -229.835, -42.8019, 0.55 ) }
    dend_34 { pt3dadd( 26.6057, -231.587, -43.7305, 0.55 ) }
    dend_34 { pt3dadd( 28.0762, -234.255, -45.3376, 1.11 ) }
    dend_34 { pt3dadd( 29.4385, -236.264, -46.5464, 0.28 ) }
    dend_34 { pt3dadd( 30.1137, -237.171, -47.0855, 0.55 ) }
    dend_34 { pt3dadd( 31.4112, -238.718, -47.9481, 0.28 ) }
    dend_34 { pt3dadd( 32.8942, -240.219, -48.8319, 1.11 ) }
    dend_34 { pt3dadd( 36.5643, -243.486, -50.5846, 0.28 ) }
    dend_34 { pt3dadd( 37.7242, -244.382, -50.9331, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 29.5202, 103.624, 44.855, 0.55 ) }
    dend_23 { pt3dadd( 32.0362, 109.758, 46.8637, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 29.5202, 103.624, 44.855, 0.55 ) }
    dend_22 { pt3dadd( 33.2516, 112.696, 50.3435, 0.55 ) }
    dend_22 { pt3dadd( 37.8466, 122.147, 54.3286, 0.55 ) }
    dend_22 { pt3dadd( 40.3288, 132.393, 58.231, 0.55 ) }
    dend_22 { pt3dadd( 43.2929, 142.266, 62.7104, 0.55 ) }
    dend_22 { pt3dadd( 44.218, 152.882, 66.2875, 0.55 ) }
    dend_22 { pt3dadd( 45.077, 163.439, 70.0495, 0.55 ) }
    dend_22 { pt3dadd( 45.5288, 173.329, 75.3732, 0.55 ) }
    dend_22 { pt3dadd( 47.336, 183.234, 80.3675, 0.55 ) }
    dend_22 { pt3dadd( 52.2534, 192.499, 84.4076, 0.55 ) }
    dend_22 { pt3dadd( 58.3051, 201.407, 87.6307, 0.55 ) }
    dend_22 { pt3dadd( 65.0685, 209.971, 90.322, 0.55 ) }
    dend_22 { pt3dadd( 71.3848, 218.31, 94.4342, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.90971, 55.4716, 42.1933, 0.83 ) }
    dend_16 { pt3dadd( -6.8613, 53.46, 42.2842, 0.83 ) }
    dend_16 { pt3dadd( -5.42427, 50.8843, 42.6635, 0.83 ) }
    dend_16 { pt3dadd( -4.49739, 49.1513, 42.9875, 0.83 ) }
    dend_16 { pt3dadd( -2.48904, 45.3063, 43.49, 0.83 ) }
    dend_16 { pt3dadd( -0.625035, 41.5872, 43.8478, 0.83 ) }
    dend_16 { pt3dadd( 1.77305, 36.8025, 44.308, 0.55 ) }
    dend_16 { pt3dadd( 2.62001, 34.9669, 44.444, 0.55 ) }
    dend_16 { pt3dadd( 3.32012, 33.429, 44.5936, 0.55 ) }
    dend_16 { pt3dadd( 5.01392, 29.8881, 45.0895, 0.28 ) }
    dend_16 { pt3dadd( 5.73769, 28.5387, 45.4446, 0.83 ) }
    dend_16 { pt3dadd( 11.0261, 18.4641, 44.9226, 0.83 ) }
    dend_16 { pt3dadd( 16.7715, 8.79238, 46.707, 0.83 ) }
    dend_16 { pt3dadd( 23.4016, 0.050386, 49.7657, 0.83 ) }
    dend_16 { pt3dadd( 29.4293, -8.89822, 53.4162, 0.83 ) }
    dend_16 { pt3dadd( 37.0832, -15.6956, 58.4112, 0.83 ) }
    dend_16 { pt3dadd( 45.1701, -20.1486, 65.0828, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.90971, 55.4716, 42.1933, 1.11 ) }
    dend_11 { pt3dadd( -8.57686, 56.6585, 42.7705, 1.11 ) }
    dend_11 { pt3dadd( -9.06967, 57.5353, 43.1968, 1.11 ) }
    dend_11 { pt3dadd( -9.87616, 58.9701, 43.8945, 0.83 ) }
    dend_11 { pt3dadd( -10.7351, 60.4982, 44.6375, 1.11 ) }
    dend_11 { pt3dadd( -11.7681, 62.336, 45.5312, 0.83 ) }
    dend_11 { pt3dadd( -12.1731, 63.0565, 45.8815, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 62/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -63.6057, 81.2709, 60.4329, 0.55 ) }
    dend_8 { pt3dadd( -71.0031, 87.1208, 65.8256, 0.55 ) }
    dend_8 { pt3dadd( -80.1589, 91.3351, 69.8795, 0.55 ) }
    dend_8 { pt3dadd( -88.7388, 96.007, 74.6317, 0.55 ) }
    dend_8 { pt3dadd( -98.2661, 100.643, 77.0335, 0.55 ) }
    dend_8 { pt3dadd( -108.169, 104.229, 79.6923, 0.55 ) }
    dend_8 { pt3dadd( -117.547, 108.429, 83.2221, 0.55 ) }
    dend_8 { pt3dadd( -127.737, 111.476, 85.436, 0.55 ) }
    dend_8 { pt3dadd( -137.128, 116.435, 87.7243, 0.55 ) }
    dend_8 { pt3dadd( -145.56, 122.393, 91.1064, 0.55 ) }
    dend_8 { pt3dadd( -153.972, 126.615, 96.5315, 0.55 ) }
    dend_8 { pt3dadd( -161.498, 130.292, 103.449, 0.55 ) }
    dend_8 { pt3dadd( -167.631, 134.417, 111.412, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -63.6057, 81.2709, 60.4329, 0.55 ) }
    dend_7 { pt3dadd( -67.867, 85.6971, 65.9362, 0.55 ) }
    dend_7 { pt3dadd( -72.3779, 88.7721, 72.1193, 0.55 ) }
    dend_7 { pt3dadd( -76.4228, 92.1873, 78.4448, 0.55 ) }
    dend_7 { pt3dadd( -80.4718, 95.7519, 84.6845, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 80/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.555925, 104.9, 5.24739, 0.55 ) }
    dend_5 { pt3dadd( 0.751041, 107.785, 5.15303, 0.55 ) }
    dend_5 { pt3dadd( 0.824138, 109.053, 5.0695, 0.28 ) }
    dend_5 { pt3dadd( 0.942631, 110.602, 4.9275, 0.83 ) }
    dend_5 { pt3dadd( 1.1159, 112.771, 4.7147, 0.28 ) }
    dend_5 { pt3dadd( 1.21452, 114.022, 4.60503, 0.83 ) }
    dend_5 { pt3dadd( 1.59483, 118.62, 4.26515, 0.28 ) }
    dend_5 { pt3dadd( 1.73165, 120.478, 4.10266, 0.83 ) }
    dend_5 { pt3dadd( 2.01746, 124.03, 3.75385, 0.28 ) }
    dend_5 { pt3dadd( 2.23361, 126.184, 3.5297, 0.83 ) }
    dend_5 { pt3dadd( 2.42144, 128.04, 3.31621, 0.28 ) }
    dend_5 { pt3dadd( 2.5934, 129.589, 3.17463, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 92/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.555925, 104.9, 5.24739, 0.55 ) }
    dend_4 { pt3dadd( 1.41284, 107.91, 1.00694, 0.55 ) }
    dend_4 { pt3dadd( 2.0167, 109.697, -1.49539, 0.55 ) }
    dend_4 { pt3dadd( 2.65182, 111.241, -3.63176, 0.83 ) }
    dend_4 { pt3dadd( 4.01875, 114.321, -7.74423, 0.55 ) }
    dend_4 { pt3dadd( 5.49582, 117.402, -11.6028, 0.83 ) }
    dend_4 { pt3dadd( 6.90454, 120.306, -14.9636, 0.83 ) }
    dend_4 { pt3dadd( 7.65366, 121.73, -16.382, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 10.1244, 125.814, -19.9253, 0.55 ) }
    dend_4 { pt3dadd( 10.7687, 126.905, -20.6559, 0.55 ) }
    dend_4 { pt3dadd( 12.0103, 128.951, -21.7995, 0.83 ) }
    dend_4 { pt3dadd( 13.42, 131.234, -22.9021, 0.55 ) }
    dend_4 { pt3dadd( 15.3691, 134.486, -24.5354, 0.83 ) }
    dend_4 { pt3dadd( 16.724, 136.952, -25.8539, 0.83 ) }
    dend_4 { pt3dadd( 18.2184, 139.643, -27.5185, 0.83 ) }
    dend_4 { pt3dadd( 22.5025, 147.148, -33.0613, 0.28 ) }
    dend_4 { pt3dadd( 22.872, 147.783, -33.6679, 0.55 ) }
    dend_4 { pt3dadd( 24.722, 150.962, -37.2487, 0.28 ) }
    dend_4 { pt3dadd( 25.391, 152.206, -38.862, 1.11 ) }
    dend_4 { pt3dadd( 27.0283, 155.501, -43.4492, 0.55 ) }
    dend_4 { pt3dadd( 27.6087, 156.734, -45.2396, 0.83 ) }
    dend_4 { pt3dadd( 29.4567, 161.385, -51.8343, 0.28 ) }
    dend_4 { pt3dadd( 29.8644, 162.342, -53.1926, 0.83 ) }
    dend_4 { pt3dadd( 31.6374, 166.751, -59.2245, 0.28 ) }
    dend_4 { pt3dadd( 31.933, 167.544, -60.2399, 0.55 ) }
    dend_4 { pt3dadd( 32.5564, 169.447, -62.3884, 0.28 ) }
    dend_4 { pt3dadd( 32.7955, 170.143, -63.0885, 0.83 ) }
    dend_4 { pt3dadd( 35.1075, 176.061, -68.3212, 0.28 ) }
    dend_4 { pt3dadd( 35.9985, 178.223, -70.2231, 0.28 ) }
    dend_4 { pt3dadd( 36.562, 179.523, -71.3616, 0.55 ) }
    dend_4 { pt3dadd( 37.4939, 181.678, -73.269, 0.28 ) }
    dend_4 { pt3dadd( 38.2071, 183.367, -74.8142, 0.55 ) }
    dend_4 { pt3dadd( 39.6424, 186.743, -78.0826, 0.28 ) }
    dend_4 { pt3dadd( 40.9512, 189.385, -80.438, 1.38 ) }
    dend_4 { pt3dadd( 43.1449, 192.956, -83.568, 0.28 ) }
    dend_4 { pt3dadd( 43.695, 193.594, -84.1356, 0.83 ) }
    dend_4 { pt3dadd( 45.826, 195.691, -85.9111, 0.28 ) }
    dend_4 { pt3dadd( 49.6115, 198.908, -88.4939, 0.55 ) }
    dend_4 { pt3dadd( 54.3925, 202.544, -91.1889, 0.55 ) }
    dend_4 { pt3dadd( 57.5349, 204.773, -92.7731, 1.66 ) }
    dend_4 { pt3dadd( 68.4861, 212.34, -97.7167, 0.55 ) }
    dend_4 { pt3dadd( 69.6145, 213.129, -98.2367, 1.11 ) }
    dend_4 { pt3dadd( 72.5199, 215.193, -99.6005, 0.28 ) }
    dend_4 { pt3dadd( 73.6933, 216.075, -100.162, 0.55 ) }
    dend_4 { pt3dadd( 78.6133, 220.02, -102.902, 0.28 ) }
    dend_4 { pt3dadd( 79.9346, 221.109, -103.609, 1.11 ) }
    dend_4 { pt3dadd( 83.9464, 224.137, -105.773, 0.55 ) }
    dend_4 { pt3dadd( 86.1053, 225.544, -106.891, 0.83 ) }
    dend_4 { pt3dadd( 88.7241, 226.963, -108.124, 0.55 ) }
    dend_4 { pt3dadd( 94.4755, 229.465, -110.361, 0.28 ) }
    dend_4 { pt3dadd( 96.6828, 230.085, -111.069, 0.83 ) }
    dend_4 { pt3dadd( 104.738, 231.6, -113.313, 0.28 ) }
    dend_4 { pt3dadd( 107.684, 231.872, -113.965, 1.11 ) }
    dend_4 { pt3dadd( 109.79, 231.919, -114.419, 0.28 ) }
    dend_4 { pt3dadd( 111.88, 231.826, -114.943, 0.55 ) }
    dend_4 { pt3dadd( 116.596, 231.23, -115.996, 0.28 ) }
    dend_4 { pt3dadd( 117.955, 230.964, -116.281, 0.83 ) }
    dend_4 { pt3dadd( 120.619, 230.094, -116.629, 0.28 ) }
    dend_4 { pt3dadd( 121.718, 229.605, -116.864, 0.55 ) }
    dend_4 { pt3dadd( 123.049, 228.831, -117.262, 0.28 ) }
    dend_4 { pt3dadd( 123.625, 228.411, -117.541, 0.55 ) }
    dend_4 { pt3dadd( 125.083, 227.167, -118.326, 0.28 ) }
    dend_4 { pt3dadd( 125.807, 226.514, -118.763, 0.83 ) }
    dend_4 { pt3dadd( 130.128, 222.374, -121.513, 0.28 ) }
    dend_4 { pt3dadd( 132.7, 219.826, -123.209, 0.83 ) }
    dend_4 { pt3dadd( 137.225, 215.141, -126.143, 0.28 ) }
    dend_4 { pt3dadd( 138.158, 214.204, -126.811, 0.55 ) }
    dend_4 { pt3dadd( 139.838, 212.531, -128.034, 0.28 ) }
    dend_4 { pt3dadd( 141.275, 210.932, -128.959, 0.83 ) }
    dend_4 { pt3dadd( 143.823, 207.779, -130.421, 0.28 ) }
    dend_4 { pt3dadd( 145.153, 206.154, -131.025, 0.55 ) }
    dend_4 { pt3dadd( 151.314, 198.542, -133.091, 0.28 ) }
    dend_4 { pt3dadd( 152.951, 196.536, -133.71, 0.83 ) }
    dend_4 { pt3dadd( 158.487, 189.262, -135.734, 0.28 ) }
    dend_4 { pt3dadd( 162.162, 184.52, -137.278, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -36.6071, -3.53301, -47.7223, 0.83 ) }
    dend_40 { pt3dadd( -37.5926, -3.71532, -48.6775, 0.83 ) }
    dend_40 { pt3dadd( -41.3292, -4.58803, -52.2538, 0.28 ) }
    dend_40 { pt3dadd( -42.0762, -4.77633, -52.9436, 0.55 ) }
    dend_40 { pt3dadd( -45.279, -5.53408, -55.7974, 0.28 ) }
    dend_40 { pt3dadd( -46.3103, -5.76999, -56.6905, 0.83 ) }
    dend_40 { pt3dadd( -51.6397, -6.96751, -61.3939, 0.28 ) }
    dend_40 { pt3dadd( -52.2989, -7.13907, -61.9789, 0.28 ) }
    dend_40 { pt3dadd( -52.8682, -7.30314, -62.501, 0.55 ) }
    dend_40 { pt3dadd( -55.4174, -8.01487, -64.914, 0.28 ) }
    dend_40 { pt3dadd( -56.3891, -8.29473, -65.8571, 0.83 ) }
    dend_40 { pt3dadd( -60.4446, -9.42097, -70.1493, 0.28 ) }
    dend_40 { pt3dadd( -61.3864, -9.6788, -71.1544, 0.55 ) }
    dend_40 { pt3dadd( -67.0389, -11.2734, -77.3649, 0.28 ) }
    dend_40 { pt3dadd( -67.5752, -11.4321, -77.9718, 0.83 ) }
    dend_40 { pt3dadd( -72.0317, -12.8659, -83.1629, 0.28 ) }
    dend_40 { pt3dadd( -77.7271, -14.7113, -89.9235, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 84/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -36.6071, -3.53301, -47.7223, 0.55 ) }
    dend_39 { pt3dadd( -40.3062, 1.8097, -46.2068, 0.55 ) }
    dend_39 { pt3dadd( -41.3737, 3.24539, -45.6932, 0.83 ) }
    dend_39 { pt3dadd( -43.0669, 5.44212, -44.8098, 0.28 ) }
    dend_39 { pt3dadd( -43.7711, 6.29466, -44.5517, 0.55 ) }
    dend_39 { pt3dadd( -45.96, 8.86416, -43.9006, 0.28 ) }
    dend_39 { pt3dadd( -47.0436, 10.0472, -43.7902, 0.55 ) }
    dend_39 { pt3dadd( -49.3977, 12.4278, -43.8274, 0.28 ) }
    dend_39 { pt3dadd( -50.5255, 13.5704, -43.9104, 0.83 ) }
    dend_39 { pt3dadd( -53.8492, 17.0592, -44.2763, 0.28 ) }
    dend_39 { pt3dadd( -55.6401, 19.0005, -44.5576, 0.83 ) }
    dend_39 { pt3dadd( -60.8416, 24.7884, -45.8574, 0.28 ) }
    dend_39 { pt3dadd( -62.4461, 26.6728, -46.289, 0.83 ) }
    dend_39 { pt3dadd( -63.8132, 28.4204, -46.6705, 0.28 ) }
    dend_39 { pt3dadd( -64.8298, 29.8546, -46.9428, 0.83 ) }
    dend_39 { pt3dadd( -65.5841, 31.0985, -47.0673, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( -66.8765, 33.3354, -47.5229, 0.55 ) }
    dend_39 { pt3dadd( -67.9755, 35.4137, -48.006, 0.28 ) }
    dend_39 { pt3dadd( -68.6991, 36.5624, -48.4243, 0.83 ) }
    dend_39 { pt3dadd( -70.9783, 39.9302, -49.6351, 0.28 ) }
    dend_39 { pt3dadd( -72.1958, 41.6136, -50.1537, 0.83 ) }
    dend_39 { pt3dadd( -75.9742, 46.639, -51.475, 0.28 ) }
    dend_39 { pt3dadd( -76.9537, 47.8861, -51.7422, 0.55 ) }
    dend_39 { pt3dadd( -80.1838, 51.8665, -52.4862, 0.28 ) }
    dend_39 { pt3dadd( -82.1887, 54.2911, -52.8132, 1.11 ) }
    dend_39 { pt3dadd( -84.1241, 56.6213, -52.9116, 0.28 ) }
    dend_39 { pt3dadd( -85.2272, 57.979, -52.8838, 0.55 ) }
    dend_39 { pt3dadd( -88.2013, 61.8633, -52.397, 0.28 ) }
    dend_39 { pt3dadd( -89.787, 63.9797, -52.1537, 1.11 ) }
    dend_39 { pt3dadd( -91.3332, 66.1532, -51.8644, 1.11 ) }
    dend_39 { pt3dadd( -92.874, 68.3528, -51.6541, 0.28 ) }
    dend_39 { pt3dadd( -93.799, 69.745, -51.5164, 0.55 ) }
    dend_39 { pt3dadd( -95.7482, 72.8462, -51.0577, 0.28 ) }
    dend_39 { pt3dadd( -96.7031, 74.5222, -50.7061, 0.55 ) }
    dend_39 { pt3dadd( -97.7738, 76.4682, -50.4711, 0.28 ) }
    dend_39 { pt3dadd( -98.3051, 77.527, -50.4152, 0.55 ) }
    dend_39 { pt3dadd( -98.8953, 78.8108, -50.5229, 0.28 ) }
    dend_39 { pt3dadd( -99.4472, 80.022, -50.7626, 1.11 ) }
    dend_39 { pt3dadd( -100.076, 81.5245, -51.1358, 1.11 ) }
    dend_39 { pt3dadd( -102.038, 86.4806, -52.4231, 0.28 ) }
    dend_39 { pt3dadd( -102.458, 87.4564, -52.7979, 0.55 ) }
    dend_39 { pt3dadd( -103.752, 90.2971, -54.0592, 0.28 ) }
    dend_39 { pt3dadd( -104.403, 91.7123, -54.7131, 0.55 ) }
    dend_39 { pt3dadd( -105.513, 94.138, -55.8592, 0.28 ) }
    dend_39 { pt3dadd( -106.157, 95.497, -56.5066, 1.11 ) }
    dend_39 { pt3dadd( -108.518, 100.444, -58.6818, 0.28 ) }
    dend_39 { pt3dadd( -108.872, 101.125, -59.0066, 0.83 ) }
    dend_39 { pt3dadd( -110.229, 103.681, -60.2128, 0.28 ) }
    dend_39 { pt3dadd( -111.032, 105.166, -60.9126, 0.83 ) }
    dend_39 { pt3dadd( -111.951, 106.837, -61.7304, 0.28 ) }
    dend_39 { pt3dadd( -112.328, 107.527, -62.0134, 0.55 ) }
    dend_39 { pt3dadd( -113.518, 109.853, -62.6815, 0.28 ) }
    dend_39 { pt3dadd( -114.408, 111.345, -63.244, 0.55 ) }
    dend_39 { pt3dadd( -115.88, 113.476, -64.1744, 0.28 ) }
    dend_39 { pt3dadd( -116.344, 114.104, -64.4628, 0.55 ) }
    dend_39 { pt3dadd( -117.324, 115.402, -65.0814, 0.28 ) }
    dend_39 { pt3dadd( -117.758, 115.952, -65.3437, 0.55 ) }
    dend_39 { pt3dadd( -120.276, 119.22, -66.7764, 0.28 ) }
    dend_39 { pt3dadd( -120.912, 120.045, -67.1158, 0.55 ) }
    dend_39 { pt3dadd( -122.087, 121.573, -67.6715, 0.55 ) }
    dend_39 { pt3dadd( -124.848, 125.151, -68.8009, 0.28 ) }
    dend_39 { pt3dadd( -125.549, 126.031, -69.1617, 0.55 ) }
    dend_39 { pt3dadd( -126.463, 127.171, -69.6695, 0.28 ) }
    dend_39 { pt3dadd( -127.389, 128.249, -70.3282, 0.55 ) }
    dend_39 { pt3dadd( -129.711, 130.684, -72.3483, 0.28 ) }
    dend_39 { pt3dadd( -130.352, 131.318, -72.9433, 0.83 ) }
    dend_39 { pt3dadd( -134.56, 135.29, -77.3603, 0.28 ) }
    dend_39 { pt3dadd( -135.104, 135.807, -78.0015, 0.83 ) }
    dend_39 { pt3dadd( -138.57, 139.146, -82.4294, 0.28 ) }
    dend_39 { pt3dadd( -139.947, 140.566, -84.3332, 0.83 ) }
    dend_39 { pt3dadd( -140.903, 141.68, -85.7889, 0.28 ) }
    dend_39 { pt3dadd( -142.471, 143.779, -88.4303, 0.55 ) }
    dend_39 { pt3dadd( -143.951, 146.337, -91.2515, 0.28 ) }
    dend_39 { pt3dadd( -144.318, 147.111, -92.0594, 0.83 ) }
    dend_39 { pt3dadd( -144.934, 149.141, -93.8834, 0.28 ) }
    dend_39 { pt3dadd( -145.106, 149.762, -94.511, 0.55 ) }
    dend_39 { pt3dadd( -145.655, 151.874, -96.8559, 0.28 ) }
    dend_39 { pt3dadd( -145.769, 152.486, -97.5912, 0.55 ) }
    dend_39 { pt3dadd( -146.032, 154.441, -99.999, 0.28 ) }
    dend_39 { pt3dadd( -146.117, 155.007, -100.757, 0.55 ) }
    dend_39 { pt3dadd( -146.31, 157.436, -104.081, 0.28 ) }
    dend_39 { pt3dadd( -146.313, 157.941, -104.746, 0.83 ) }
    dend_39 { pt3dadd( -145.883, 161.34, -108.86, 0.28 ) }
    dend_39 { pt3dadd( -145.544, 162.678, -110.41, 0.55 ) }
    dend_39 { pt3dadd( -144.76, 164.214, -111.98, 0.55 ) }
    dend_39 { pt3dadd( -143.438, 165.842, -113.421, 0.28 ) }
    dend_39 { pt3dadd( -142.134, 166.932, -114.173, 0.55 ) }
    dend_39 { pt3dadd( -140.4, 168.04, -114.873, 0.28 ) }
    dend_39 { pt3dadd( -138.92, 168.798, -115.265, 0.55 ) }
    dend_39 { pt3dadd( -135.737, 170.145, -115.928, 0.28 ) }
    dend_39 { pt3dadd( -132.998, 171.167, -116.367, 0.55 ) }
    dend_39 { pt3dadd( -131.05, 171.792, -116.622, 0.28 ) }
    dend_39 { pt3dadd( -129.575, 172.195, -116.794, 0.55 ) }
    dend_39 { pt3dadd( -128.433, 172.463, -116.933, 0.55 ) }
    dend_39 { pt3dadd( -125.933, 173.046, -117.308, 0.28 ) }
    dend_39 { pt3dadd( -124.811, 173.329, -117.547, 0.55 ) }
    dend_39 { pt3dadd( -121.104, 174.37, -118.449, 0.28 ) }
    dend_39 { pt3dadd( -118.769, 175.163, -119.096, 0.55 ) }
    dend_39 { pt3dadd( -117.062, 175.863, -119.698, 0.28 ) }
    dend_39 { pt3dadd( -115.895, 176.432, -120.175, 0.55 ) }
    dend_39 { pt3dadd( -114.853, 177.077, -120.68, 0.28 ) }
    dend_39 { pt3dadd( -113.804, 177.878, -121.206, 0.55 ) }
    dend_39 { pt3dadd( -112.115, 179.549, -122.118, 0.28 ) }
    dend_39 { pt3dadd( -110.488, 181.299, -122.854, 0.55 ) }
    dend_39 { pt3dadd( -109.619, 182.325, -123.221, 0.28 ) }
    dend_39 { pt3dadd( -108.89, 183.213, -123.517, 0.55 ) }
    dend_39 { pt3dadd( -107.705, 184.766, -124.01, 0.28 ) }
    dend_39 { pt3dadd( -107.036, 185.727, -124.304, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 45.1701, -20.1486, 65.0828, 0.55 ) }
    dend_20 { pt3dadd( 51.6205, -27.0382, 66.7634, 0.55 ) }
    dend_20 { pt3dadd( 57.247, -34.6918, 68.0526, 0.55 ) }
    dend_20 { pt3dadd( 64.1826, -40.9654, 70.159, 0.55 ) }
    dend_20 { pt3dadd( 71.0581, -46.9727, 73.0812, 0.55 ) }
    dend_20 { pt3dadd( 79.4307, -51.2468, 74.9599, 0.55 ) }
    dend_20 { pt3dadd( 87.2123, -55.8577, 78.1353, 0.55 ) }
    dend_20 { pt3dadd( 95.3586, -59.8113, 81.2825, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 103.631, -63.0181, 84.9134, 0.55 ) }
    dend_20 { pt3dadd( 112.446, -65.7973, 87.4596, 0.55 ) }
    dend_20 { pt3dadd( 121.807, -67.5051, 88.6179, 0.55 ) }
    dend_20 { pt3dadd( 130.951, -69.1412, 90.9885, 0.55 ) }
    dend_20 { pt3dadd( 139.718, -72.1022, 93.4919, 0.55 ) }
    dend_20 { pt3dadd( 148.162, -76.1369, 95.5694, 0.55 ) }
    dend_20 { pt3dadd( 156.743, -79.0631, 98.6833, 0.55 ) }
    dend_20 { pt3dadd( 165.273, -82.5528, 101.323, 0.55 ) }
    dend_20 { pt3dadd( 173.867, -86.6527, 102.433, 0.55 ) }
    dend_20 { pt3dadd( 182.295, -91.157, 103.188, 0.55 ) }
    dend_20 { pt3dadd( 189.929, -96.9429, 103.566, 0.55 ) }
    dend_20 { pt3dadd( 197.265, -103.043, 104.501, 0.55 ) }
    dend_20 { pt3dadd( 203.827, -109.668, 106.726, 0.55 ) }
    dend_20 { pt3dadd( 209.959, -116.697, 108.936, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 14/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 45.1701, -20.1486, 65.0828, 0.55 ) }
    dend_17 { pt3dadd( 49.6386, -27.5172, 67.4796, 0.55 ) }
    dend_17 { pt3dadd( 54.4685, -34.6335, 69.9369, 0.55 ) }
    dend_17 { pt3dadd( 59.1682, -41.6937, 72.7786, 0.55 ) }
    dend_17 { pt3dadd( 63.3141, -49.5344, 73.9379, 0.55 ) }
    dend_17 { pt3dadd( 66.7282, -57.7002, 75.2309, 0.55 ) }
    dend_17 { pt3dadd( 71.2041, -65.3331, 76.5404, 0.55 ) }
    dend_17 { pt3dadd( 74.4234, -73.5153, 78.1824, 0.55 ) }
    dend_17 { pt3dadd( 77.231, -81.5725, 80.8672, 0.55 ) }
    dend_17 { pt3dadd( 78.2732, -89.9857, 83.7202, 0.55 ) }
    dend_17 { pt3dadd( 78.3051, -98.4212, 86.6952, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.1731, 63.0565, 45.8815, 0.55 ) }
    dend_15 { pt3dadd( -13.4328, 63.8819, 46.9843, 0.55 ) }
    dend_15 { pt3dadd( -14.5858, 64.4546, 48.0221, 0.55 ) }
    dend_15 { pt3dadd( -15.5299, 64.7776, 48.7557, 0.55 ) }
    dend_15 { pt3dadd( -17.299, 65.1481, 49.8757, 0.55 ) }
    dend_15 { pt3dadd( -19.6442, 65.3678, 51.08, 0.28 ) }
    dend_15 { pt3dadd( -20.3725, 65.382, 51.3787, 0.28 ) }
    dend_15 { pt3dadd( -22.074, 65.2449, 51.9268, 0.55 ) }
    dend_15 { pt3dadd( -24.3537, 64.7558, 52.4687, 0.28 ) }
    dend_15 { pt3dadd( -25.77, 64.2714, 52.6888, 0.55 ) }
    dend_15 { pt3dadd( -26.8954, 63.7379, 52.6641, 0.28 ) }
    dend_15 { pt3dadd( -27.9713, 63.1721, 52.4181, 0.55 ) }
    dend_15 { pt3dadd( -35.4461, 62.8153, 57.3956, 0.55 ) }
    dend_15 { pt3dadd( -42.2735, 61.6263, 63.1181, 0.55 ) }
    dend_15 { pt3dadd( -49.4581, 61.9663, 68.507, 0.55 ) }
    dend_15 { pt3dadd( -57.0403, 62.7872, 73.2621, 0.55 ) }
    dend_15 { pt3dadd( -65.2269, 63.4468, 76.9117, 0.55 ) }
    dend_15 { pt3dadd( -73.6462, 64.3166, 79.9338, 0.55 ) }
    dend_15 { pt3dadd( -82.2196, 63.7596, 82.5724, 0.55 ) }
    dend_15 { pt3dadd( -90.0865, 64.7479, 86.8043, 0.55 ) }
    dend_15 { pt3dadd( -98.0916, 66.6534, 90.4185, 0.55 ) }
    dend_15 { pt3dadd( -106.484, 68.8399, 92.7767, 0.55 ) }
    dend_15 { pt3dadd( -114.97, 71.7423, 93.3523, 0.55 ) }
    dend_15 { pt3dadd( -123.171, 75.2167, 92.1509, 0.55 ) }
    dend_15 { pt3dadd( -131.267, 78.3074, 89.7679, 0.55 ) }
    dend_15 { pt3dadd( -139.028, 82.4422, 87.9122, 0.55 ) }
    dend_15 { pt3dadd( -145.879, 87.3353, 84.7652, 0.55 ) }
    dend_15 { pt3dadd( -152.532, 91.6026, 80.4876, 0.55 ) }
    dend_15 { pt3dadd( -160.011, 95.5538, 77.4511, 0.55 ) }
    dend_15 { pt3dadd( -167.332, 98.3, 73.0198, 0.55 ) }
    dend_15 { pt3dadd( -175.013, 100.659, 68.9917, 0.55 ) }
    dend_15 { pt3dadd( -183.165, 101.921, 65.4249, 0.55 ) }
    dend_15 { pt3dadd( -191.285, 104.532, 62.592, 0.55 ) }
    dend_15 { pt3dadd( -199.633, 105.717, 59.4806, 0.55 ) }
    dend_15 { pt3dadd( -208.002, 106.501, 56.3002, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 60/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.1731, 63.0565, 45.8815, 0.83 ) }
    dend_12 { pt3dadd( -12.8192, 65.1372, 46.0376, 0.83 ) }
    dend_12 { pt3dadd( -13.3043, 66.565, 46.388, 0.83 ) }
    dend_12 { pt3dadd( -13.7579, 67.8643, 46.7503, 0.83 ) }
    dend_12 { pt3dadd( -14.3238, 69.7888, 46.7889, 0.83 ) }
    dend_12 { pt3dadd( -14.7675, 71.6748, 46.4556, 1.11 ) }
    dend_12 { pt3dadd( -15.3198, 74.2939, 45.8003, 0.83 ) }
    dend_12 { pt3dadd( -15.878, 77.092, 44.8952, 1.11 ) }
    dend_12 { pt3dadd( -16.2534, 79.2753, 43.9767, 0.83 ) }
    dend_12 { pt3dadd( -17.2798, 86.8389, 39.7793, 1.11 ) }
    dend_12 { pt3dadd( -17.4237, 88.8708, 38.205, 1.11 ) }
    dend_12 { pt3dadd( -17.424, 90.0826, 36.9104, 0.55 ) }
    dend_12 { pt3dadd( -18.0106, 96.9649, 35.5097, 0.55 ) }
    dend_12 { pt3dadd( -17.3781, 103.755, 33.7273, 0.55 ) }
    dend_12 { pt3dadd( -17.3288, 110.536, 31.8115, 0.55 ) }
    dend_12 { pt3dadd( -17.9348, 117.519, 31.0644, 0.55 ) }
    dend_12 { pt3dadd( -17.8868, 124.392, 29.5033, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -77.7271, -14.7113, -89.9235, 0.55 ) }
    dend_42 { pt3dadd( -78.2276, -14.6294, -90.3564, 0.55 ) }
    dend_42 { pt3dadd( -78.9534, -14.5596, -90.9563, 1.11 ) }
    dend_42 { pt3dadd( -84.2848, -14.4624, -95.1008, 0.28 ) }
    dend_42 { pt3dadd( -84.4421, -14.4737, -95.217, 0.55 ) }
    dend_42 { pt3dadd( -85.8016, -14.672, -96.1567, 0.28 ) }
    dend_42 { pt3dadd( -86.5868, -14.8672, -96.6611, 0.55 ) }
    dend_42 { pt3dadd( -87.464, -15.2196, -97.171, 0.28 ) }
    dend_42 { pt3dadd( -88.3269, -15.8996, -97.5758, 0.55 ) }
    dend_42 { pt3dadd( -88.9943, -16.8768, -97.7199, 0.28 ) }
    dend_42 { pt3dadd( -89.6422, -17.9098, -97.9496, 0.55 ) }
    dend_42 { pt3dadd( -90.3287, -19.1461, -98.2605, 0.28 ) }
    dend_42 { pt3dadd( -90.7591, -19.925, -98.4845, 0.55 ) }
    dend_42 { pt3dadd( -91.9695, -22.0186, -99.2456, 0.28 ) }
    dend_42 { pt3dadd( -92.451, -22.8082, -99.614, 0.55 ) }
    dend_42 { pt3dadd( -93.298, -24.0741, -100.357, 0.28 ) }
    dend_42 { pt3dadd( -93.8518, -24.8332, -100.92, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -77.7271, -14.7113, -89.9235, 0.28 ) }
    dend_41 { pt3dadd( -79.1171, -16.3826, -95.5032, 0.28 ) }
    dend_41 { pt3dadd( -79.5995, -16.9983, -97.2031, 1.11 ) }
    dend_41 { pt3dadd( -83.5795, -22.49, -110.123, 0.28 ) }
    dend_41 { pt3dadd( -84.1388, -23.2667, -111.751, 0.55 ) }
    dend_41 { pt3dadd( -85.5849, -25.3808, -115.611, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -86.0802, -26.2088, -116.853, 0.55 ) }
    dend_41 { pt3dadd( -87.2824, -28.4467, -119.052, 0.28 ) }
    dend_41 { pt3dadd( -87.9932, -29.9658, -119.99, 0.55 ) }
    dend_41 { pt3dadd( -89.5524, -34.3573, -120.881, 0.28 ) }
    dend_41 { pt3dadd( -90.3955, -36.8961, -121.181, 0.55 ) }
    dend_41 { pt3dadd( -91.8589, -41.4394, -121.473, 0.28 ) }
    dend_41 { pt3dadd( -93.0292, -44.8388, -121.754, 0.83 ) }
    dend_41 { pt3dadd( -94.104, -47.8691, -122.025, 0.28 ) }
    dend_41 { pt3dadd( -95.0767, -50.5031, -122.268, 0.55 ) }
    dend_41 { pt3dadd( -96.4288, -54.1531, -122.499, 0.28 ) }
    dend_41 { pt3dadd( -97.1975, -55.8956, -122.698, 0.55 ) }
    dend_41 { pt3dadd( -99.0358, -59.1782, -123.31, 0.28 ) }
    dend_41 { pt3dadd( -99.9917, -60.605, -123.781, 0.55 ) }
    dend_41 { pt3dadd( -101.076, -61.861, -124.368, 0.28 ) }
    dend_41 { pt3dadd( -102.009, -62.7036, -124.988, 0.55 ) }
    dend_41 { pt3dadd( -103.932, -64.1794, -126.405, 0.28 ) }
    dend_41 { pt3dadd( -105.543, -65.1977, -127.605, 0.83 ) }
    dend_41 { pt3dadd( -109.047, -67.0642, -130.119, 0.28 ) }
    dend_41 { pt3dadd( -110.515, -67.8077, -131.247, 0.55 ) }
    dend_41 { pt3dadd( -113.677, -69.5375, -133.939, 0.28 ) }
    dend_41 { pt3dadd( -114.348, -69.9602, -134.545, 0.55 ) }
    dend_41 { pt3dadd( -116.005, -71.1718, -136.285, 0.28 ) }
    dend_41 { pt3dadd( -117.063, -71.9999, -137.539, 0.83 ) }
    dend_41 { pt3dadd( -120.176, -74.4892, -141.344, 0.28 ) }
    dend_41 { pt3dadd( -122.19, -76.2116, -143.957, 0.28 ) }
    dend_41 { pt3dadd( -124.001, -77.8674, -146.404, 0.55 ) }
    dend_41 { pt3dadd( -127.946, -81.5669, -152.023, 0.28 ) }
    dend_41 { pt3dadd( -130.239, -83.9228, -155.586, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 28/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 78.3051, -98.4212, 86.6952, 0.55 ) }
    dend_19 { pt3dadd( 78.6158, -109.692, 89.4921, 0.55 ) }
    dend_19 { pt3dadd( 79.8312, -121.176, 90.7673, 0.55 ) }
    dend_19 { pt3dadd( 81.3648, -132.425, 93.2315, 0.55 ) }
    dend_19 { pt3dadd( 83.5877, -143.122, 97.1817, 0.55 ) }
    dend_19 { pt3dadd( 86.4066, -153.753, 100.923, 0.55 ) }
    dend_19 { pt3dadd( 87.9109, -164.115, 105.956, 0.55 ) }
    dend_19 { pt3dadd( 87.7365, -174.701, 110.738, 0.55 ) }
    dend_19 { pt3dadd( 88.2698, -184.94, 116.202, 0.55 ) }
    dend_19 { pt3dadd( 88.0551, -194.717, 122.474, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 38/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 78.3051, -98.4212, 86.6952, 0.55 ) }
    dend_18 { pt3dadd( 85.0865, -108.327, 88.8586, 0.55 ) }
    dend_18 { pt3dadd( 91.2573, -118.737, 90.3908, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -17.8868, 124.392, 29.5033, 0.55 ) }
    dend_14 { pt3dadd( -25.4485, 130.398, 23.6919, 0.55 ) }
    dend_14 { pt3dadd( -33.2466, 134.053, 16.4217, 0.55 ) }
    dend_14 { pt3dadd( -41.0263, 135.624, 8.41988, 0.55 ) }
    dend_14 { pt3dadd( -47.8269, 139.421, 0.273348, 0.55 ) }
    dend_14 { pt3dadd( -55.1735, 143.04, -7.46954, 0.55 ) }
    dend_14 { pt3dadd( -62.3438, 147.367, -15.0122, 0.55 ) }
    dend_14 { pt3dadd( -69.7325, 153.824, -20.5568, 0.55 ) }
    dend_14 { pt3dadd( -77.3287, 160.855, -25.014, 0.55 ) }
    dend_14 { pt3dadd( -85.0585, 167.137, -30.2873, 0.55 ) }
    dend_14 { pt3dadd( -91.8355, 173.019, -37.1078, 0.55 ) }
    dend_14 { pt3dadd( -97.8295, 179.213, -44.3694, 0.55 ) }
    dend_14 { pt3dadd( -103.76, 186.635, -50.4309, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.8868, 124.392, 29.5033, 0.55 ) }
    dend_13 { pt3dadd( -15.4781, 134.646, 30.6901, 0.55 ) }
    dend_13 { pt3dadd( -11.4371, 144.357, 32.0171, 0.55 ) }
    dend_13 { pt3dadd( -8.74255, 154.605, 31.6597, 0.55 ) }
    dend_13 { pt3dadd( -4.68419, 164.374, 30.9766, 0.55 ) }
    dend_13 { pt3dadd( -1.11843, 174.277, 32.2443, 0.55 ) }
    dend_13 { pt3dadd( 2.9525, 183.701, 34.892, 0.55 ) }
    dend_13 { pt3dadd( 6.65063, 193.534, 36.3129, 0.55 ) }
    dend_13 { pt3dadd( 11.4251, 202.999, 36.1997, 0.55 ) }
    dend_13 { pt3dadd( 17.194, 211.785, 34.8188, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_29, dend_0, dend_44, dend_31, dend_24, dend_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_29, dend_0, axon_0, dend_44, dend_31, dend_24, dend_1, axon_1, dend_46, dend_45, dend_43, dend_32, dend_28, dend_25, dend_9, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_10, dend_6, dend_3, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_16, dend_11, dend_8, dend_7, dend_5, dend_4, dend_40, dend_39, dend_20, dend_17, dend_15, dend_12, dend_42, dend_41, dend_19, dend_18, dend_14, dend_13]}
    ModelViewParmSubset_5 = new SectionList()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_46 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_25 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_6 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_35 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_16 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_40 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_19 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_32 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_33 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 11
    dend_46 nseg = 13
    dend_45 nseg = 17
    dend_43 nseg = 13
    dend_28 nseg = 19
    dend_25 nseg = 11
    dend_26 nseg = 3
    dend_21 nseg = 5
    dend_6 nseg = 5
    dend_3 nseg = 3
    dend_37 nseg = 7
    dend_35 nseg = 5
    dend_34 nseg = 11
    dend_22 nseg = 7
    dend_16 nseg = 5
    dend_8 nseg = 7
    dend_4 nseg = 15
    dend_40 nseg = 3
    dend_39 nseg = 13
    dend_20 nseg = 11
    dend_17 nseg = 5
    dend_15 nseg = 11
    dend_12 nseg = 3
    dend_41 nseg = 5
    dend_19 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_NBC_7eb58fa61e_0_0


