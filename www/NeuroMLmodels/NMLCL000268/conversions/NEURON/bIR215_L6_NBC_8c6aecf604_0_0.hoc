// Cell: bIR215_L6_NBC_8c6aecf604_0_0
/*
{
  "id" : "bIR215_L6_NBC_8c6aecf604_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.873478, -12.1204, -1.0889, 3.2264", "-0.698655, -10.9282, -0.984246, 5.56239", "-0.523832, -9.73588, -0.879587, 7.69458", "-0.349009, -8.5436, -0.774929, 10.6304", "-0.174186, -7.35132, -0.670271, 12.3889", "6.37175E-4, -6.15904, -0.565612, 13.0429", "0.17546, -4.96676, -0.460954, 13.3962", "0.350283, -3.77448, -0.356295, 13.6031", "0.525106, -2.5822, -0.251637, 13.7768", "0.699929, -1.38992, -0.146979, 13.7572", "0.874752, -0.197642, -0.0423202, 13.4519", "1.04958, 0.994638, 0.0623382, 13.1714", "1.2244, 2.18692, 0.166997, 12.4149", "1.39922, 3.3792, 0.271655, 11.5059", "1.57404, 4.57148, 0.376313, 10.5982", "1.74887, 5.76376, 0.480972, 9.84377", "1.92369, 6.95604, 0.58563, 9.16735", "2.09851, 8.14832, 0.690289, 7.18404", "2.27334, 9.34059, 0.794947, 5.28238", "2.44816, 10.5329, 0.899606, 3.93844", "2.62298, 11.7252, 1.00426, 2.5386" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "3.61398, 12.4986, -0.788928, 2.06", "3.61398, 12.4986, -0.788928, 2.06", "3.84468, 13.5987, -0.788928, 2.06", "3.89183, 13.8236, -0.788928, 2.06", "4.18412, 15.2173, -0.788928, 2.06", "4.4546, 16.5071, -0.788928, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.65398, 10.4091, -2.84893, 1.77", "4.39862, 11.9952, -5.25597, 1.62", "5.03441, 13.032, -6.5828, 1.62", "5.05844, 13.0651, -6.64052, 1.62", "5.62289, 13.7094, -8.00634, 1.47", "5.67993, 13.7602, -8.13635, 1.47", "7.0618, 14.673, -11.1201, 1.47", "8.34004, 15.0757, -13.5457, 1.92", "10.6662, 15.5569, -17.9486, 1.92", "11.4506, 15.6707, -19.4514, 1.92", "12.2463, 15.6995, -21.0168, 1.92", "13.009, 15.6815, -22.5438, 1.84", "14.084, 15.4957, -24.7333, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.85602, 8.41412, 2.46107, 1.62", "-2.85602, 8.41412, 2.46107, 1.62", "-3.38561, 8.99242, 2.64735, 1.62", "-3.43323, 9.04375, 2.66291, 1.62", "-4.58113, 10.333, 3.01953, 1.84", "-5.51074, 11.3925, 3.30151, 1.84", "-6.51084, 12.5324, 3.60488, 1.62", "-7.6184, 13.799, 3.9478, 1.62", "-8.89062, 15.2626, 4.35603, 1.92", "-9.5407, 16.0195, 4.56653, 1.92", "-9.58541, 16.0739, 4.58136, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.07398, -9.26789, 1.15107, 2.21", "6.07398, -9.26789, 1.15107, 2.21", "6.61142, -10.2637, 2.55491, 1.84", "7.31495, -11.5673, 4.39262, 1.84", "7.33611, -11.6065, 4.44791, 1.84", "8.06328, -12.9538, 6.34739, 1.62", "8.82774, -14.3703, 8.34426, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38602, -11.7039, -1.22893, 3.24", "-2.38602, -11.7039, -1.22893, 3.24", "-3.02215, -13.8571, -1.20339, 3.24", "-3.79107, -16.4598, -1.17251, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62298, 11.7252, 1.00426, 0.670435", "4.79915, 26.5665, 1.00426, 0.670435", "6.97531, 41.4078, 1.00426, 0.670435" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.4546, 16.5071, -0.788928, 1.47", "5.29371, 17.4138, 0.262349, 1.47", "7.63599, 19.9957, 2.45607, 1.18", "7.67841, 20.0455, 2.48521, 1.18", "8.73057, 21.2475, 2.91246, 1.18", "9.94354, 22.5987, 3.18632, 1.18", "9.9847, 22.6442, 3.19209, 1.18", "11.1228, 23.9173, 3.04282, 1.4", "12.2366, 25.1607, 2.66231, 1.4", "13.452, 26.6143, 2.24007, 1.18", "14.2366, 27.6433, 1.95118, 1.18", "14.2842, 27.7097, 1.93924, 1.18", "14.9805, 28.7027, 1.83323, 1.18", "15.0275, 28.7707, 1.83649, 1.18", "15.9333, 30.0705, 2.12672, 1.18", "15.9789, 30.1338, 2.15299, 1.18", "17.3153, 31.8131, 2.95337, 1.18", "17.3525, 31.8566, 2.97567, 1.18", "18.3054, 32.8789, 3.49508, 1.18", "19.1909, 33.7974, 3.93517, 1.18", "20.7444, 35.3477, 4.65992, 1.03", "22.0537, 36.7249, 5.2345, 1.03", "22.0928, 36.7691, 5.25197, 1.03", "23.2545, 38.116, 5.75109, 0.81", "24.1873, 39.2475, 6.12261, 0.81", "24.2235, 39.2949, 6.13818, 0.81", "25.5388, 41.1923, 6.70146, 1.03", "26.7726, 43.1711, 7.37682, 1.03" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.4546, 16.5071, -0.788928, 1.11", "2.82537, 19.835, 0.186356, 1.11", "2.38821, 20.9296, 0.320999, 1.11", "1.96692, 21.9845, 0.450754, 1.03", "1.22352, 23.846, 0.679716, 1.25", "1.19281, 23.9229, 0.689178, 1.25", "0.345747, 26.044, 0.950067, 1.25", "-0.173788, 27.5268, 0.767386, 1.47" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "14.084, 15.4957, -24.7333, 1.55", "14.0725, 11.8087, -28.5575, 1.55", "14.132, 10.7286, -29.3886, 0.81", "14.192, 9.72356, -29.9832, 0.81", "14.2696, 8.25516, -30.7486, 0.81", "14.2678, 8.1644, -30.7989, 0.81", "14.1368, 7.02783, -31.5747, 1.11", "14.0005, 6.21959, -32.0154, 0.81", "13.6201, 5.22105, -32.8802, 0.59", "13.5677, 5.1356, -32.9814, 0.59", "12.6826, 4.01405, -34.5331, 0.59", "11.5957, 2.71675, -36.36, 1.25", "11.5636, 2.68141, -36.4124, 1.25", "10.3504, 1.37274, -38.3324, 1.18", "9.03249, -0.0363511, -40.426, 0.81", "7.71793, -1.51744, -42.5174, 0.52", "7.2363, -2.11216, -43.2735, 0.52", "7.19889, -2.15963, -43.3279, 0.52", "6.84695, -2.61349, -43.8324, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "14.084, 15.4957, -24.7333, 1.4", "16.1111, 14.8166, -25.4168, 1.4", "18.5123, 14.0123, -26.2263, 1.4", "18.5668, 13.994, -26.2447, 1.4", "19.8288, 13.5713, -26.6701, 1.4", "19.9509, 13.5304, -26.7113, 1.4" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-9.58541, 16.0739, 4.58136, 0.88", "-10.0346, 17.2508, 4.91469, 0.88", "-10.2649, 17.9134, 5.08795, 0.88", "-10.6056, 19.0268, 5.3468, 0.88", "-11.1152, 20.8513, 5.74213, 0.74", "-11.3994, 22.0379, 5.99311, 0.74", "-11.5503, 22.7886, 6.13939, 1.03", "-11.5605, 22.8711, 6.151, 1.03", "-11.6063, 23.77, 6.2988, 1.03", "-11.6068, 23.8868, 6.31937, 1.03", "-11.6436, 25.0609, 6.61228, 0.88", "-11.8147, 26.2645, 7.08569, 1.18", "-11.8317, 26.3277, 7.11702, 1.18", "-12.2495, 27.5053, 7.77395, 1.18", "-12.7313, 28.6013, 8.4588, 0.81", "-13.3884, 29.8909, 9.32365, 0.81", "-14.3089, 31.4662, 10.4184, 0.81", "-14.9784, 32.5231, 11.1668, 0.81", "-15.0122, 32.5756, 11.2023, 0.81", "-15.5946, 33.4996, 11.7592, 0.66", "-15.6257, 33.5573, 11.7893, 0.66", "-16.0407, 34.7018, 12.1709, 0.66", "-16.0894, 35.0015, 12.2493, 0.66", "-16.1262, 35.987, 12.5522, 0.96", "-16.0999, 37.0999, 12.9189, 0.96", "-16.066, 37.5153, 13.0615, 0.96", "-16.0042, 38.0905, 13.2715, 0.96", "-15.7813, 39.5766, 13.8753, 0.81", "-15.5726, 40.805, 14.4012, 0.81", "-15.3724, 41.7839, 14.8485, 0.81", "-15.3531, 41.8796, 14.8997, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-9.58541, 16.0739, 4.58136, 0.88", "-9.57535, 16.7202, 4.55421, 0.88", "-9.55085, 17.4887, 4.51511, 0.74", "-9.51077, 18.4129, 4.46118, 0.74", "-9.50725, 18.4861, 4.45619, 0.74", "-9.40211, 20.0911, 4.34343, 0.74", "-9.3141, 21.1955, 4.26938, 0.88", "-9.25938, 21.8036, 4.21545, 0.88", "-9.24164, 21.9866, 4.19801, 0.88", "-9.16006, 22.8293, 4.12041, 0.74", "-9.06723, 23.8691, 4.06271, 0.74", "-8.96955, 25.1031, 4.03548, 0.74", "-8.89633, 26.2604, 4.04, 1.62", "-8.8309, 27.5083, 4.06432, 1.62", "-8.77921, 28.9541, 4.13915, 1.33", "-8.75444, 30.0122, 4.22693, 0.96", "-8.74557, 31.0034, 4.33299, 0.96", "-8.73938, 31.8385, 4.44413, 0.96", "-8.73822, 31.911, 4.45551, 0.96", "-8.72429, 32.9709, 4.62171, 0.96", "-8.69495, 34.1966, 4.78893, 0.74", "-8.66308, 35.1186, 4.87403, 0.74", "-8.65989, 35.1918, 4.87966, 0.74", "-8.63101, 35.8774, 4.83848, 1.03", "-8.62805, 35.96, 4.82426, 1.03", "-8.60935, 36.6957, 4.62025, 1.03", "-8.60902, 36.7652, 4.59749, 1.03", "-8.61773, 38.0144, 4.04923, 1.03", "-8.64163, 39.7082, 3.18917, 1.03", "-8.64299, 39.7804, 3.14835, 1.03", "-8.66757, 41.0757, 2.36775, 1.03", "-8.66895, 41.1369, 2.3291, 1.03", "-8.71222, 42.4441, 1.52187, 0.88", "-8.7151, 42.5146, 1.47839, 0.88", "-8.73631, 43.0017, 1.24455, 0.88", "-8.74046, 43.0686, 1.21586, 0.88", "-8.78299, 43.718, 0.978812, 0.88", "-8.80569, 44.1162, 0.890702, 0.88", "-8.83611, 44.9095, 0.815753, 0.88", "-8.83778, 44.9827, 0.809427, 0.88", "-8.8132, 45.8448, 0.746793, 0.88", "-8.79977, 46.1864, 0.723398, 0.88", "-8.73299, 47.341, 0.65324, 0.88", "-8.64073, 48.5665, 0.59788, 1.03", "-8.63368, 48.6502, 0.596555, 1.03", "-8.49347, 50.0501, 0.573803, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.82774, -14.3703, 8.34426, 1.11", "10.7869, -17.7045, 9.18289, 1.11", "11.6059, -19.0563, 9.40559, 1.11", "11.6917, -19.1843, 9.38812, 1.11", "12.4537, -20.1603, 9.12612, 1.33", "13.5282, -21.3572, 8.6991, 1.11", "15.2371, -23.0862, 8.02804, 1.11", "15.285, -23.1332, 8.00377, 1.11", "17.6025, -25.2215, 6.81781, 1.25", "19.3574, -26.7383, 5.90993, 1.55", "21.0479, -28.0697, 5.02697, 1.55", "22.0552, -28.8121, 4.47209, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.82774, -14.3703, 8.34426, 1.47", "8.83418, -18.3236, 15.0488, 1.47", "8.85472, -19.3514, 16.533, 1.03", "8.93981, -20.1085, 17.3519, 1.03", "9.19471, -21.5249, 18.6272, 0.88", "9.21134, -21.5879, 18.6774, 0.88", "9.70103, -23.2092, 19.8903, 0.88", "9.72281, -23.2622, 19.9142, 0.88", "10.9862, -25.7185, 21.1, 0.88", "11.622, -26.6946, 21.6364, 1.47", "12.9007, -28.3419, 22.6468, 0.88", "12.9479, -28.3958, 22.6859, 0.88", "14.3067, -29.682, 23.8055, 0.74", "14.4136, -29.7695, 23.9005, 0.74", "15.4882, -30.4677, 24.9328, 0.74", "15.5563, -30.5053, 24.9951, 0.74", "16.6519, -31.0188, 26.0338, 1.33", "17.5293, -31.4108, 26.9608, 0.96", "18.8963, -32.0352, 28.4667, 1.11", "18.9402, -32.0564, 28.5174, 1.11", "19.6636, -32.456, 29.4164, 1.11", "20.8244, -33.2359, 30.8053, 0.81", "21.6828, -33.9051, 31.7849, 1.25", "22.351, -34.5833, 32.6019, 0.88", "22.3864, -34.6286, 32.6442, 0.88", "23.1076, -35.8577, 33.5692, 0.81", "23.5088, -37.0352, 34.1947, 0.81", "23.5244, -37.1345, 34.2231, 0.81", "23.5764, -38.7772, 34.5621, 0.81", "23.5732, -38.8389, 34.5737, 0.81", "23.4708, -39.9685, 34.7544, 0.81", "23.4062, -41.0144, 34.9619, 1.18", "23.4001, -42.0554, 35.2497, 0.88", "23.6155, -43.2229, 35.8199, 0.59", "23.9804, -44.0674, 36.6096, 0.59", "24.0068, -44.1188, 36.6672, 0.59", "24.902, -45.5942, 38.6037, 0.59", "24.9304, -45.6383, 38.6655, 0.59", "26.0089, -47.286, 40.8116, 0.81", "26.9218, -48.7339, 42.6109, 0.81", "27.4491, -49.6329, 43.6943, 0.81", "27.4838, -49.6931, 43.7673, 0.81", "28.2859, -51.165, 45.5143, 0.74", "29.0923, -52.5404, 47.1109, 0.52", "30.0687, -54.1153, 48.83, 0.52", "30.1494, -54.2177, 48.9435, 0.52", "31.3749, -55.4634, 50.5287, 0.52", "31.4124, -55.5021, 50.5749, 0.52", "31.9646, -56.097, 51.2737, 0.52", "32.0398, -56.2014, 51.3826, 0.52", "32.5229, -57.1952, 51.9867, 0.52", "32.5998, -57.4121, 52.0866, 0.52", "33.2108, -59.4184, 52.8445, 0.52", "33.6198, -60.6259, 53.3312, 0.52", "33.7308, -60.9548, 53.4696, 0.52", "34.0803, -62.0043, 53.9177, 0.52", "34.1131, -62.1008, 53.9599, 0.52", "34.7582, -63.4112, 54.5828, 0.52", "35.2722, -63.8973, 54.9034, 0.88", "35.3908, -63.9774, 54.9546, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.79107, -16.4598, -1.17251, 0.59", "-4.61191, -16.6984, -1.39251, 0.59", "-5.91811, -17.1037, -1.58049, 0.59", "-7.53741, -17.6351, -1.69349, 0.59", "-8.17517, -17.8624, -1.70875, 0.59", "-10.4356, -18.7813, -1.70105, 0.88", "-11.535, -19.2869, -1.71727, 0.88", "-12.7574, -19.9175, -1.70791, 0.96", "-13.7922, -20.5026, -1.69355, 1.25", "-14.79, -21.1376, -1.72158, 1.47", "-16.0479, -21.9353, -2.08536, 1.11", "-17.5296, -22.8442, -2.9722, 1.03", "-18.2209, -23.2409, -3.49641, 1.03", "-18.2957, -23.2808, -3.56166, 1.03", "-19.8143, -24.0697, -4.98825, 1.55", "-22.9412, -25.6736, -8.04408, 0.66", "-24.1406, -26.3143, -9.21155, 0.66", "-24.8134, -26.7276, -9.86771, 0.66", "-24.8586, -26.7613, -9.91035, 0.66", "-25.559, -27.3838, -10.5171, 0.74", "-26.1618, -28.0653, -10.9556, 1.03", "-26.8733, -29.2975, -11.4735, 1.03", "-27.7689, -30.9414, -12.0885, 1.25", "-28.2808, -31.9016, -12.479, 1.18", "-28.3385, -32.002, -12.5229, 1.18", "-28.8054, -32.6722, -12.9144, 0.52", "-28.8511, -32.7144, -12.949, 0.52", "-29.6987, -33.0602, -13.5088, 0.52", "-29.7598, -33.0697, -13.5416, 0.52", "-30.2113, -33.1023, -13.8206, 0.52", "-31.6344, -33.1649, -14.7162, 0.88", "-32.648, -33.1881, -15.3588, 1.25", "-34.0094, -33.234, -16.2484, 1.25", "-34.7469, -33.2693, -16.7447, 0.88", "-36.0758, -33.4327, -17.6271, 0.88", "-36.6566, -33.5976, -18.0448, 0.52", "-36.9796, -33.7793, -18.2784, 0.52", "-37.2052, -33.9863, -18.4957, 0.52", "-37.4691, -34.2475, -18.7923, 0.52", "-37.9572, -34.7037, -19.3982, 0.52", "-38.8844, -35.5194, -20.576, 0.88", "-39.4839, -36.0262, -21.3579, 1.25", "-41.1577, -37.341, -23.4359, 1.62", "-42.5684, -38.382, -25.028, 1.55", "-43.8086, -39.2426, -26.3295, 0.81", "-43.8783, -39.2886, -26.3967, 0.81", "-44.2732, -39.5588, -26.7258, 0.37", "-45.1923, -40.2756, -27.3831, 0.37", "-46.2873, -41.3356, -27.8564, 0.37", "-46.334, -41.3894, -27.8664, 0.37", "-47.0126, -42.1818, -28.0221, 1.03", "-47.6729, -42.9382, -28.1997, 1.47", "-48.3739, -43.7453, -28.4004, 0.96", "-48.9174, -44.3763, -28.5674, 0.29", "-50.3998, -46.0715, -29.0379, 0.29", "-52.3913, -48.2921, -29.6551, 0.29", "-53.3906, -49.3503, -29.95, 0.29", "-54.0741, -50.0341, -30.1683, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.79107, -16.4598, -1.17251, 2.36", "-3.88952, -16.8273, -1.22073, 2.36", "-4.2416, -18.083, -1.33638, 2.36", "-4.85357, -20.2654, -1.5374, 1.99", "-5.43443, -22.3369, -1.72821, 1.99", "-5.95168, -24.1816, -1.89812, 2.14", "-6.52433, -26.2238, -2.08623, 3.02", "-6.86296, -27.3425, -2.17873, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.97531, 41.4078, 1.00426, 1.18", "9.15148, 56.2491, 1.00426, 1.18", "11.3276, 71.0904, 1.00426, 1.18" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "26.7726, 43.1711, 7.37682, 0.74", "26.8891, 46.3247, 9.17163, 0.74", "26.8951, 46.403, 9.1998, 0.74", "27.0561, 47.453, 9.51387, 0.74", "27.2467, 48.4067, 9.7604, 0.59", "27.4717, 49.3932, 9.98079, 0.59", "27.6681, 50.2103, 10.1408, 0.59", "27.6866, 50.2811, 10.1439, 0.59", "27.9637, 51.2684, 10.2317, 0.22", "28.126, 51.7952, 10.2992, 0.81", "28.3306, 52.4631, 10.4071, 1.03", "28.5325, 53.0183, 10.5517, 1.03", "28.9404, 54.0699, 10.8733, 0.81", "29.3938, 55.1646, 11.2265, 0.59", "29.9903, 56.588, 11.6871, 0.59", "30.03, 56.6762, 11.7214, 0.59", "30.9822, 58.6736, 12.5824, 0.59", "31.0119, 58.7338, 12.6094, 0.59", "31.3892, 59.5096, 12.9906, 0.44", "31.7476, 60.2948, 13.454, 0.44", "32.3869, 61.9936, 14.5182, 0.44", "32.5295, 62.4712, 14.8096, 0.96", "32.6357, 63.0803, 15.1417, 0.96", "32.79, 64.2586, 15.7701, 0.59", "32.8839, 65.3385, 16.3052, 0.29", "32.9261, 66.1509, 16.6568, 0.29", "32.925, 66.3014, 16.7012, 0.29", "32.8858, 67.8886, 17.0286, 0.29", "32.8835, 67.9722, 17.0356, 0.29", "32.8499, 68.9736, 16.9327, 0.29", "32.8432, 69.1273, 16.9003, 0.81", "32.7811, 69.8666, 16.7181, 0.81", "32.7034, 70.361, 16.5855, 0.29", "32.407, 71.1982, 16.3601, 0.29", "31.9357, 72.073, 16.1401, 0.29", "31.823, 72.2386, 16.1001, 0.29", "31.2556, 72.9327, 15.9049, 0.29", "30.9659, 73.2391, 15.8106, 0.29", "29.6512, 74.4349, 15.4303, 0.29", "28.4969, 75.3394, 15.1147, 0.29", "28.4232, 75.3942, 15.0963, 0.29", "27.0353, 76.4052, 14.7301, 0.29", "26.9142, 76.4905, 14.6952, 0.29", "26.1986, 76.9751, 14.4731, 0.29", "25.5393, 77.3689, 14.2442, 0.81", "24.7367, 77.7705, 14.0008, 0.81", "23.9443, 87.8561, 16.6673, 0.81", "23.5097, 97.4204, 20.7709, 0.81" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "26.7726, 43.1711, 7.37682, 1.03", "28.4888, 43.6178, 8.60269, 1.03", "29.5273, 43.9108, 9.29519, 0.74", "30.9622, 44.4741, 10.1309, 0.74", "31.0108, 44.5007, 10.1553, 0.74", "31.8682, 45.071, 10.4202, 0.52", "32.4546, 45.5113, 10.4974, 0.52", "32.5279, 45.579, 10.4812, 0.52", "33.476, 46.5883, 10.2634, 0.81", "34.1609, 47.3736, 10.0895, 1.11", "35.4148, 48.8089, 10.0822, 0.66", "36.0044, 49.4959, 10.2136, 0.59", "36.711, 50.2099, 10.6731, 0.59", "37.9084, 51.2699, 11.9054, 0.59", "37.9545, 51.3014, 11.9635, 0.59", "39.3394, 52.097, 13.8211, 0.59", "39.3835, 52.1205, 13.8839, 0.59", "40.4287, 52.6947, 15.3067, 1.25", "40.4771, 52.7244, 15.3637, 1.25", "41.4346, 53.432, 16.1621, 0.96", "42.7132, 54.4664, 16.9042, 0.66", "42.7875, 54.5298, 16.9294, 0.66", "43.8227, 55.4581, 17.1808, 0.59", "44.9066, 56.5076, 17.3141, 0.59", "45.8168, 57.4269, 17.3939, 0.59", "46.4296, 58.099, 17.4131, 0.59", "46.7409, 58.4256, 17.4105, 0.59", "47.1327, 58.7896, 17.4199, 0.81", "47.8273, 59.3519, 17.4562, 0.81", "48.0965, 59.5445, 17.4787, 0.81", "49.144, 60.2658, 17.6156, 0.81", "50.1729, 60.9661, 17.7545, 0.44", "51.0686, 61.5672, 17.8765, 0.44", "51.158, 61.6264, 17.8883, 0.44", "52.0212, 62.2031, 18.0291, 0.81", "52.5336, 62.5612, 18.1206, 0.96", "53.2208, 63.081, 18.2713, 0.81", "53.274, 63.1269, 18.2843, 0.81", "54.1293, 63.9905, 18.4459, 0.52", "55.055, 65.0007, 18.5823, 0.52", "55.5309, 65.5625, 18.6679, 0.81", "56.4474, 66.7018, 18.8506, 0.52", "56.5869, 66.8762, 18.8877, 0.52", "58.1737, 68.8197, 19.3654, 0.37", "58.2193, 68.8734, 19.3798, 0.37", "59.262, 70.057, 19.7064, 0.37", "59.8284, 70.667, 19.8996, 1.03", "61.0874, 71.9319, 20.3556, 1.03", "61.1375, 71.9788, 20.3756, 1.03", "61.9594, 72.6784, 20.763, 1.03", "62.0111, 72.7232, 20.7833, 1.03", "62.7909, 73.4329, 20.9994, 0.66", "62.8497, 73.4878, 21.0139, 0.66", "63.3597, 74.017, 21.0923, 0.66", "63.4376, 74.1019, 21.1056, 0.66", "63.9267, 74.6861, 21.209, 0.66", "64.9534, 75.9355, 21.4345, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.173788, 27.5268, 0.767386, 0.96", "-0.166867, 28.0589, 0.753899, 0.96", "-0.217155, 29.1559, 0.707452, 0.74", "-0.411612, 30.5766, 0.637463, 0.74", "-0.422709, 30.6385, 0.63399, 0.74", "-0.708215, 31.8839, 0.561013, 0.66", "-1.00479, 33.0378, 0.492169, 0.66", "-1.06247, 33.2006, 0.487028, 0.66", "-1.63124, 34.1888, 0.457451, 1.03", "-1.66905, 34.2376, 0.459543, 1.03", "-2.20943, 34.8478, 0.551097, 1.03", "-2.25829, 34.898, 0.566203, 1.03", "-2.79705, 35.434, 0.765606, 0.81", "-3.83433, 36.5223, 1.26096, 0.81", "-4.57679, 37.3499, 1.67095, 0.81", "-5.41596, 38.3128, 2.23022, 0.66", "-6.20356, 39.2628, 2.8315, 0.66", "-6.24261, 39.3137, 2.86354, 0.66", "-7.05074, 40.5183, 3.59573, 1.03", "-7.49961, 41.2944, 4.06488, 1.03", "-8.09652, 42.4261, 4.76564, 0.96", "-8.35106, 42.9865, 5.11905, 0.96", "-8.66089, 43.8186, 5.61291, 0.52", "-8.93576, 44.6801, 6.10112, 0.52", "-8.94865, 44.7347, 6.12815, 0.52", "-9.13926, 45.9557, 6.68489, 1.11", "-9.21356, 46.8912, 7.01367, 1.11", "-9.26263, 47.8598, 7.38415, 1.03", "-9.26493, 47.9178, 7.40739, 1.03", "-9.34479, 48.6094, 7.66682, 0.66", "-9.35978, 48.6774, 7.68871, 0.66", "-9.73346, 49.404, 7.85584, 0.44", "-10.3311, 50.0642, 8.02788, 0.44", "-10.5885, 50.264, 8.1123, 0.44", "-11.2271, 50.7281, 8.48253, 0.44", "-11.3832, 50.8493, 8.6133, 0.44", "-12.1038, 51.5289, 9.37741, 0.44", "-12.1344, 51.5694, 9.42715, 0.44", "-12.5648, 52.4579, 10.4732, 0.74", "-12.9033, 53.6325, 11.8782, 0.52", "-13.0111, 54.3548, 12.6868, 0.66", "-13.0531, 54.9494, 13.3165, 0.66", "-13.0341, 56.1277, 14.4301, 1.47", "-13.0118, 56.5852, 14.8122, 1.47", "-12.8551, 58.4454, 16.0176, 0.66", "-12.7757, 59.4487, 16.536, 0.66", "-12.7687, 59.5896, 16.6026, 0.66", "-12.8031, 60.8023, 17.1036, 0.66", "-12.8095, 60.87, 17.13, 0.66", "-13.0206, 62.7272, 17.8909, 0.66", "-13.0285, 62.7851, 17.9131, 0.66", "-13.2129, 63.666, 18.3516, 0.66", "-13.5221, 64.9414, 19.0798, 0.66", "-13.865, 66.1976, 19.8645, 0.88", "-13.9096, 66.3891, 19.9791, 0.88", "-14.0876, 67.4321, 20.6136, 0.88", "-14.2534, 68.8996, 21.4272, 1.11", "-14.2831, 69.4189, 21.6887, 0.88", "-14.3089, 70.1812, 22.0469, 0.59", "-14.4132, 71.5834, 22.6045, 0.59", "-14.5521, 72.6728, 23.0246, 0.44", "-14.6753, 73.4006, 23.2884, 0.44", "-14.7019, 73.5117, 23.3182, 0.44", "-15.0435, 74.365, 23.5215, 0.44", "-15.2744, 74.7493, 23.6014, 0.44", "-15.5713, 75.1114, 23.6439, 0.44", "-15.7231, 75.294, 23.6453, 0.44", "-15.9345, 75.733, 23.661, 0.74", "-16.1442, 76.6221, 23.7082, 0.96", "-16.1437, 76.685, 23.712, 0.96", "-16.0903, 77.1425, 23.742, 0.96", "-16.0763, 77.2143, 23.7466, 0.96", "-15.8286, 78.3582, 23.8158, 0.44", "-15.8154, 78.4303, 23.8194, 0.44", "-15.7368, 79.3611, 23.8523, 0.44", "-15.7364, 79.4726, 23.8544, 0.44", "-15.7802, 80.2516, 23.8414, 0.44", "-15.8649, 81.0155, 23.8034, 0.96", "-16.0619, 82.1892, 23.7285, 0.96", "-16.3952, 83.6254, 23.6376, 0.96", "-16.6252, 84.4197, 23.5865, 0.96", "-16.8361, 85.119, 23.5427, 0.44", "-17.1816, 86.235, 23.4774, 0.44", "-17.5979, 87.6025, 23.4065, 0.44", "-17.9198, 88.7207, 23.3719, 0.44", "-17.9499, 88.8352, 23.3717, 0.44", "-18.1494, 89.6678, 23.408, 0.44", "-18.2961, 90.3326, 23.4684, 0.74", "-18.4038, 90.8852, 23.5342, 0.81", "-18.5763, 91.8219, 23.6598, 0.81", "-18.5943, 91.924, 23.6752, 0.81", "-18.8234, 92.7833, 23.8121, 0.29", "-18.965, 93.1329, 23.8725, 0.29", "-19.0397, 93.2911, 23.8971, 0.29", "-19.3053, 93.8105, 23.9616, 0.29", "-19.4087, 93.9959, 23.977, 0.29", "-19.6707, 94.4707, 24.0021, 0.29", "-19.7252, 94.5665, 24.0039, 0.29", "-20.2009, 95.433, 24.0142, 0.29", "-20.4459, 95.8808, 24.0254, 0.29", "-20.4852, 95.9539, 24.0282, 0.29", "-20.6314, 96.2164, 24.043, 0.88", "-20.9483, 96.8953, 24.085, 0.88", "-21.3883, 97.8634, 24.1177, 0.88", "-21.6413, 98.3842, 24.1251, 0.88", "-21.6743, 98.449, 24.1248, 0.88", "-22.207, 99.4351, 24.102, 0.29", "-23.0289, 100.906, 24.0435, 0.29", "-23.4011, 101.579, 23.9929, 0.59", "-23.7969, 102.289, 23.9117, 0.59", "-24.0975, 102.832, 23.8344, 0.29", "-24.4718, 103.474, 23.7319, 0.29", "-24.5498, 103.593, 23.7102, 0.29", "-25.0181, 104.213, 23.5966, 0.29", "-25.0801, 104.303, 23.5852, 0.29", "-25.4722, 104.898, 23.5118, 0.29", "-25.6252, 105.125, 23.4884, 0.29", "-25.9628, 105.605, 23.5087, 0.29", "-26.0117, 105.671, 23.518, 0.29", "-26.6268, 106.459, 23.6798, 0.29", "-26.877, 106.77, 23.7502, 1.11", "-27.4121, 107.422, 23.9061, 1.33", "-28.2345, 108.442, 24.158, 0.74", "-28.8143, 109.209, 24.3151, 0.44", "-29.394, 110.034, 24.4421, 0.44", "-29.524, 110.233, 24.4623, 0.44", "-29.719, 110.555, 24.4749, 0.44", "-29.7945, 110.691, 24.4597, 0.44", "-30.3355, 111.734, 24.21, 0.44", "-30.7008, 112.446, 24.0187, 1.11", "-31.0607, 113.157, 23.8169, 1.55", "-31.3325, 113.724, 23.6631, 1.55", "-31.9127, 114.97, 23.3388, 0.22", "-32.2657, 115.771, 23.1501, 0.22", "-32.6187, 116.611, 22.9812, 0.22", "-32.6569, 116.713, 22.9625, 0.22", "-32.9654, 117.648, 22.8248, 0.22", "-33.0569, 117.945, 22.7986, 0.22", "-33.2656, 118.68, 22.7948, 0.22", "-33.4424, 119.207, 22.7948, 0.96", "-33.5474, 119.491, 22.7948, 0.96", "-33.7394, 119.932, 22.81, 0.22", "-34.0105, 120.463, 22.8433, 0.22", "-34.1081, 120.652, 22.8588, 0.22", "-34.8928, 122.197, 23.0082, 0.22", "-34.9575, 122.337, 23.0315, 0.22", "-35.2902, 123.099, 23.196, 0.81", "-35.3167, 123.164, 23.2129, 0.81", "-35.6085, 123.925, 23.4408, 1.33", "-35.7822, 124.399, 23.6036, 1.33", "-36.2022, 125.326, 24.0039, 0.15", "-36.4426, 125.771, 24.204, 0.15", "-36.4998, 125.858, 24.2388, 0.15", "-37.0602, 126.63, 24.5374, 0.15", "-37.142, 126.729, 24.5742, 0.15", "-38.8817, 128.682, 25.2446, 0.15", "-38.9994, 128.807, 25.2713, 0.15", "-40.544, 130.325, 25.4377, 0.15", "-40.6621, 130.433, 25.4388, 1.03", "-41.226, 130.9, 25.3789, 1.03", "-41.2814, 130.944, 25.3679, 1.03", "-42.5769, 131.807, 24.8287, 0.15", "-43.6143, 132.451, 24.3315, 0.15", "-43.7412, 132.514, 24.2516, 0.59", "-44.1995, 132.746, 23.9592, 0.59", "-48.3968, 142.257, 24.531, 0.59", "-54.4613, 150.594, 24.1055, 0.59", "-61.1914, 158.282, 25.1553, 0.59", "-67.9476, 165.987, 25.8652, 0.59", "-75.175, 173.145, 27.0031, 0.59", "-80.9352, 181.634, 28.2079, 0.59", "-86.5962, 190.276, 28.6646, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.173788, 27.5268, 0.767386, 0.66", "-0.690886, 28.1797, 0.255288, 0.66", "-1.50164, 28.845, -0.473396, 0.52", "-2.01014, 29.183, -0.87026, 0.52", "-2.06163, 29.2162, -0.905581, 0.52", "-3.01646, 29.8294, -1.52159, 0.52", "-3.13945, 29.9119, -1.59968, 0.52", "-4.59467, 30.9918, -2.4967, 0.88", "-5.14526, 31.4863, -2.80011, 0.96", "-5.7182, 32.2052, -3.0898, 0.96", "-5.7559, 32.2644, -3.10705, 0.96", "-6.24576, 33.2272, -3.32493, 0.66", "-6.83715, 34.5517, -3.59952, 0.66", "-7.37339, 35.9167, -3.84212, 0.66", "-8.16796, 37.8264, -4.18049, 0.66", "-8.19839, 37.891, -4.19385, 0.66", "-8.91632, 39.2151, -4.48855, 0.44", "-9.44161, 40.0308, -4.67994, 0.44", "-10.0018, 40.7335, -4.86802, 0.88", "-10.917, 41.726, -5.1731, 0.88", "-11.7243, 42.5426, -5.42904, 0.44", "-12.2747, 43.1072, -5.59149, 0.96", "-12.8306, 43.6734, -5.73534, 1.25", "-13.5654, 44.4301, -5.92491, 1.25", "-14.4914, 45.3768, -6.08944, 0.52", "-15.3563, 46.2785, -6.15021, 0.29", "-15.5177, 46.4564, -6.14118, 0.29", "-16.0871, 47.1109, -6.07038, 0.29", "-16.4903, 47.6115, -5.98923, 0.29", "-17.2573, 48.6553, -5.76703, 0.29", "-17.7979, 49.4919, -5.56519, 0.29", "-18.1216, 50.091, -5.44371, 0.29", "-18.3472, 50.5915, -5.36959, 0.29", "-18.71, 51.5868, -5.27353, 0.66", "-18.9393, 52.3278, -5.22984, 0.96", "-19.2396, 53.4091, -5.22194, 0.96", "-19.4205, 54.0915, -5.20874, 0.96", "-19.6053, 54.7779, -5.18788, 0.52", "-19.7567, 55.2887, -5.16648, 0.37", "-19.9156, 55.7211, -5.10299, 0.37", "-19.9826, 55.8641, -5.06513, 0.37", "-20.4059, 56.5482, -4.80077, 0.37", "-20.5859, 56.7887, -4.69153, 0.37", "-20.9577, 57.2446, -4.48209, 0.37", "-21.8632, 58.3161, -4.00142, 0.37", "-21.9968, 58.4735, -3.93289, 0.37", "-22.6939, 59.2975, -3.65994, 0.37", "-23.1081, 59.7877, -3.55879, 0.66", "-23.6331, 60.4384, -3.50532, 0.66", "-24.3455, 61.4031, -3.56441, 0.66", "-24.3855, 61.4621, -3.57637, 0.66", "-25.2327, 62.8486, -3.89266, 0.29", "-25.6348, 63.5793, -4.08925, 0.29", "-25.7344, 63.7762, -4.14686, 0.29", "-26.1296, 64.6474, -4.40477, 0.88", "-26.402, 65.3444, -4.59887, 0.88", "-26.5567, 65.7784, -4.67161, 0.88", "-26.748, 66.3775, -4.69744, 0.37", "-26.7716, 66.4578, -4.69941, 0.37", "-26.9321, 66.9661, -4.69733, 0.37", "-27.0082, 67.1825, -4.68623, 0.37", "-27.5214, 68.4094, -4.5842, 0.37", "-27.5519, 68.4756, -4.58115, 0.37", "-27.8058, 68.9898, -4.56868, 1.11", "-28.4195, 70.1665, -4.56941, 1.11", "-29.0214, 71.2619, -4.5914, 1.11", "-29.6574, 72.3876, -4.68212, 1.11", "-30.1401, 73.2256, -4.79629, 1.11", "-30.3522, 73.5878, -4.86136, 0.44", "-30.9315, 74.4474, -5.0446, 0.44", "-31.0935, 74.6628, -5.09566, 0.44", "-31.9551, 75.7265, -5.34099, 0.44", "-32.0015, 75.7805, -5.35112, 0.44", "-32.6326, 76.4969, -5.42596, 0.44", "-34.4289, 78.5193, -5.54593, 0.44", "-34.835, 78.9678, -5.55413, 1.33", "-35.3927, 79.6122, -5.53632, 1.62", "-36.0881, 80.4906, -5.46073, 0.96", "-36.5229, 81.0948, -5.40383, 0.37", "-37.1522, 82.0598, -5.30432, 0.37", "-37.1929, 82.1316, -5.29636, 0.37", "-38.1415, 83.8926, -5.11887, 0.37", "-38.8826, 85.34, -4.99669, 0.37", "-39.2898, 86.1694, -4.93946, 0.74", "-39.503, 86.6087, -4.91836, 0.29", "-39.5766, 86.7642, -4.91051, 0.29", "-40.3345, 88.3962, -4.82804, 0.29", "-40.3974, 88.539, -4.82108, 0.29", "-40.7241, 89.299, -4.79193, 1.55", "-41.0631, 90.1348, -4.7588, 1.62", "-41.3526, 90.8528, -4.73252, 1.03", "-41.3808, 90.92, -4.7304, 1.03", "-41.6354, 91.5004, -4.71548, 0.37", "-41.6655, 91.5668, -4.71435, 0.37", "-42.0633, 92.3926, -4.71063, 0.37", "-42.548, 93.3376, -4.71063, 1.11", "-42.9438, 94.0843, -4.70034, 1.11", "-43.1509, 94.4644, -4.6894, 0.52", "-43.2294, 94.6173, -4.68314, 0.52", "-43.5274, 95.2508, -4.65275, 0.52", "-43.6561, 95.5477, -4.63694, 0.52", "-43.8796, 96.1167, -4.60541, 0.52", "-44.0606, 96.6004, -4.58068, 1.11", "-44.5049, 97.8248, -4.5251, 1.11", "-44.7371, 98.4389, -4.50212, 0.37", "-45.0742, 99.2936, -4.4777, 0.37", "-45.1661, 99.5035, -4.47395, 0.37", "-45.5793, 100.359, -4.47056, 0.37", "-45.7438, 100.666, -4.47159, 0.37", "-46.2802, 101.544, -4.47776, 0.37", "-46.6323, 102.083, -4.48346, 0.88", "-47.0256, 102.657, -4.4914, 0.88", "-47.0673, 102.716, -4.49232, 0.88", "-47.2059, 102.905, -4.49441, 0.29", "-47.2975, 103.03, -4.49516, 0.29", "-48.0229, 104.039, -4.49618, 0.29", "-48.0644, 104.098, -4.50032, 0.29", "-48.5708, 104.796, -4.58938, 0.81", "-48.9277, 105.266, -4.66773, 1.11", "-49.1443, 105.517, -4.71868, 1.11", "-49.1939, 105.567, -4.73123, 1.11", "-49.9144, 106.172, -4.91858, 0.22", "-50.4184, 106.553, -5.03778, 0.22", "-50.5062, 106.613, -5.05732, 0.22", "-51.2787, 107.144, -5.21089, 0.22", "-51.4562, 107.276, -5.24304, 0.22", "-52.022, 107.737, -5.32503, 0.22", "-52.3746, 108.072, -5.35099, 0.22", "-52.4412, 108.149, -5.35777, 0.66", "-52.7419, 108.576, -5.42365, 0.66", "-53.0304, 109.084, -5.52146, 0.15", "-53.1374, 109.273, -5.55902, 0.15", "-53.5581, 110.019, -5.71445, 0.15", "-53.6366, 110.151, -5.73546, 0.15", "-54.0302, 110.779, -5.80704, 0.59", "-54.717, 111.746, -5.86237, 0.59", "-55.0927, 112.235, -5.85605, 0.59", "-55.1445, 112.299, -5.8521, 0.59", "-55.5861, 112.825, -5.79246, 0.22", "-55.6327, 112.88, -5.78579, 0.22", "-56.1028, 113.407, -5.71471, 0.22", "-56.359, 113.689, -5.69643, 0.22", "-56.9925, 114.399, -5.6946, 0.22", "-57.2588, 114.711, -5.70509, 0.22", "-57.4937, 114.988, -5.72341, 0.74", "-58.1112, 115.719, -5.77791, 0.74", "-58.4901, 116.171, -5.81383, 0.22", "-58.5813, 116.283, -5.82267, 0.22", "-60.0069, 117.989, -5.94784, 0.22", "-60.223, 118.237, -5.98366, 0.81", "-60.9499, 119.043, -6.14166, 0.81", "-60.9963, 119.096, -6.15698, 0.81", "-61.2158, 119.343, -6.25075, 0.15", "-62.0106, 120.224, -6.66077, 0.15", "-62.8487, 121.141, -7.21026, 0.66", "-63.1115, 121.448, -7.38473, 0.66", "-63.7981, 122.318, -7.84692, 0.15", "-64.0309, 122.631, -7.99397, 0.37", "-64.1833, 122.846, -8.09845, 0.15", "-64.2181, 122.903, -8.12531, 0.15", "-64.7758, 123.858, -8.45955, 0.15", "-64.9247, 124.113, -8.54854, 1.03", "-65.2131, 124.578, -8.75736, 1.03", "-65.7212, 125.416, -9.18276, 0.22", "-65.7548, 125.471, -9.21398, 0.22", "-66.425, 126.594, -9.95616, 0.22", "-66.4557, 126.648, -9.99286, 0.22", "-66.9599, 127.558, -10.5811, 0.88", "-67.2011, 128.011, -10.8014, 0.88", "-67.2347, 128.074, -10.8119, 0.88", "-67.534, 128.621, -10.776, 0.22", "-68.2206, 129.883, -10.535, 0.22", "-68.2547, 129.945, -10.5193, 0.22", "-68.8401, 130.971, -10.1925, 0.22", "-69.6027, 132.214, -9.80196, 0.22", "-70.2557, 133.229, -9.4895, 0.22", "-70.7336, 133.955, -9.27353, 1.11", "-70.8215, 134.086, -9.23673, 1.11", "-71.0662, 134.448, -9.15674, 0.22", "-71.8161, 135.562, -9.06833, 0.22", "-72.0368, 135.876, -9.08463, 0.66", "-72.5594, 136.579, -9.13383, 0.66" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "19.9509, 13.5304, -26.7113, 0.81", "20.7435, 13.4624, -28.4569, 0.81", "20.7804, 13.4652, -28.5278, 0.81", "21.1864, 13.5188, -29.2755, 0.81", "21.3728, 13.5654, -29.592, 0.81", "21.9969, 13.7671, -30.6046, 0.52", "24.4131, 14.7392, -34.306, 0.81", "25.0897, 15.1334, -35.2153, 0.81", "25.1366, 15.1634, -35.2735, 0.81", "25.8861, 15.7082, -36.1639, 0.81", "25.978, 15.775, -36.2639, 0.81", "26.5174, 16.1038, -36.754, 0.81", "27.5109, 16.4614, -37.2451, 0.52", "27.9002, 16.4599, -37.9208, 0.52", "27.9971, 16.4573, -38.1016, 0.52", "28.4951, 16.3849, -39.1429, 0.81", "29.3223, 16.2169, -41.0312, 0.81", "29.3472, 16.2099, -41.0963, 0.81", "30.5966, 15.8394, -44.8853, 0.74", "30.9581, 15.7951, -46.0447, 1.84" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "19.9509, 13.5304, -26.7113, 1.4", "19.9955, 13.537, -26.6743, 1.4", "23.0214, 14.0389, -24.5909, 0.96", "23.2374, 14.0798, -24.476, 0.96", "24.7984, 14.3895, -23.8306, 0.96", "24.8907, 14.4095, -23.8001, 0.96", "26.5427, 14.7814, -23.3216, 0.96", "26.6098, 14.7986, -23.3105, 0.96", "27.9318, 15.2163, -23.3141, 1.18", "28.9848, 15.5853, -23.3141, 0.88", "29.9721, 15.9665, -23.3141, 0.88", "30.0375, 15.9928, -23.3141, 0.88", "30.6213, 16.2398, -23.3477, 0.88", "31.4375, 16.5965, -23.4237, 0.88", "31.5014, 16.6253, -23.4314, 0.88", "33.5112, 17.5248, -23.6892, 0.88", "33.6021, 17.5641, -23.7011, 0.88", "35.6666, 18.3954, -24.0427, 1.18", "37.1262, 18.9557, -24.3213, 1.18", "37.4871, 19.0892, -24.3968, 1.18", "39.0663, 19.709, -24.7411, 1.18", "39.3483, 19.8264, -24.8069, 1.18", "41.2352, 20.5489, -25.2081, 1.18", "41.4443, 20.61, -25.2438, 1.18", "41.9698, 20.7117, -25.33, 0.52", "43.3006, 20.8344, -25.5118, 0.52", "43.3702, 20.8334, -25.519, 0.52", "44.6802, 20.7207, -25.5876, 0.88", "46.1178, 20.4852, -25.5716, 0.88", "46.3748, 20.4391, -25.5744, 0.88", "47.3647, 20.2548, -25.6025, 1.25", "47.5822, 20.2209, -25.6111, 1.25", "48.54, 20.1701, -25.6543, 1.25", "48.6797, 20.1755, -25.6614, 1.25", "50.2653, 20.3416, -25.8128, 1.11", "51.8671, 20.5602, -26.0074, 1.11", "53.1483, 20.7361, -26.1798, 0.81", "54.5786, 20.9182, -26.3829, 0.81", "54.8065, 20.9378, -26.4143, 0.81", "56.828, 21.0304, -26.6723, 0.81", "56.9336, 21.0313, -26.6848, 0.81", "59.1577, 20.9635, -26.9357, 0.81", "59.2632, 20.9554, -26.9457, 0.81", "61.6062, 20.6957, -27.1183, 0.81", "62.5501, 20.6078, -27.2156, 0.96", "62.7787, 20.5896, -27.2431, 0.96", "63.8073, 20.5363, -27.4041, 0.74", "65.1831, 20.5111, -27.6618, 0.74", "65.2518, 20.5111, -27.6756, 0.74", "68.1061, 20.5715, -28.3886, 0.74", "68.9788, 20.5918, -28.6198, 1.4", "70.7632, 20.6312, -29.1131, 1.77", "71.818, 20.6568, -29.4241, 1.77", "72.105, 20.6625, -29.5114, 1.77", "73.6279, 20.6756, -29.9333, 1.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-15.3531, 41.8796, 14.8997, 0.44", "-16.6932, 42.3644, 16.1495, 0.44", "-17.9431, 42.8575, 17.2462, 0.44", "-19.3489, 43.4411, 18.4421, 0.44", "-19.4007, 43.4628, 18.4844, 0.44", "-20.9622, 44.1204, 19.7343, 0.74", "-21.6011, 44.3682, 20.2299, 0.74", "-22.02, 44.5317, 20.5092, 0.37", "-22.0759, 44.5499, 20.5475, 0.37", "-22.87, 44.7327, 21.0071, 0.37", "-22.9202, 44.7409, 21.0391, 0.37", "-23.7974, 44.8417, 21.6255, 0.37", "-23.8717, 44.8515, 21.6793, 0.37", "-24.9276, 45.0635, 22.5351, 0.37", "-24.9963, 45.0821, 22.594, 0.37", "-26.0331, 45.4544, 23.4642, 0.37", "-26.5792, 45.6914, 23.8683, 0.37", "-26.6415, 45.7263, 23.9058, 0.37", "-27.5803, 46.2625, 24.3503, 0.37", "-27.6382, 46.2959, 24.3735, 0.37", "-28.5522, 46.7765, 24.6898, 0.59", "-29.4613, 47.2076, 24.9487, 0.59", "-30.6348, 47.6918, 25.2746, 0.81", "-31.6491, 48.09, 25.546, 0.81", "-32.6114, 48.4606, 25.7851, 0.29", "-33.073, 48.6477, 25.9086, 0.29", "-33.2042, 48.7069, 25.9547, 0.29", "-34.1926, 49.1336, 26.3916, 0.29", "-34.3332, 49.1874, 26.4624, 0.29", "-35.1643, 49.4675, 26.8945, 0.59", "-35.8002, 49.6354, 27.2185, 0.59", "-37.1995, 49.9294, 27.9532, 0.15", "-38.1824, 50.0879, 28.461, 0.37", "-38.5123, 50.122, 28.6298, 0.74", "-39.1067, 50.1459, 28.9597, 0.37", "-39.5792, 50.1191, 29.2504, 0.37", "-39.6447, 50.1133, 29.296, 0.37", "-40.0616, 50.1285, 29.6272, 0.22", "-40.1342, 50.2135, 29.7397, 0.22", "-40.5531, 51.0412, 30.5965, 0.22", "-40.585, 51.1094, 30.664, 0.22", "-40.9282, 51.8317, 31.3285, 0.22", "-41.0201, 51.9888, 31.5213, 0.22", "-41.2227, 52.2471, 31.9318, 0.22", "-41.2569, 52.2765, 31.9861, 0.22", "-42.0758, 52.8283, 33.1089, 0.74", "-42.4162, 53.0135, 33.527, 0.74", "-43.895, 53.6656, 35.1924, 0.59", "-44.9455, 54.0709, 36.2733, 0.37", "-45.9926, 54.3845, 37.3303, 0.37", "-46.0476, 54.3907, 37.3881, 0.37", "-46.5386, 54.3341, 37.9899, 0.37", "-46.6235, 54.3163, 38.0999, 0.37", "-47.3091, 54.1139, 38.9994, 0.37", "-48.1816, 53.8794, 40.3629, 0.88", "-49.2304, 53.7273, 42.4745, 0.88", "-49.975, 53.8755, 44.6748, 0.37", "-50.2302, 54.0666, 45.829, 0.37", "-50.248, 54.0883, 45.9317, 0.37", "-50.4063, 54.5869, 47.6047, 0.37", "-50.4404, 55.2275, 48.8453, 0.37", "-50.3055, 56.7181, 50.7874, 0.37", "-50.2923, 56.7642, 50.8402, 0.37", "-56.6171, 57.6812, 58.5366, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-15.3531, 41.8796, 14.8997, 0.52", "-15.5779, 43.0128, 15.6964, 0.52", "-15.8703, 43.8925, 16.2546, 0.52", "-15.8917, 43.9396, 16.2882, 0.52", "-16.413, 44.8389, 17.0026, 0.52", "-16.4563, 44.9086, 17.0635, 0.52", "-16.9755, 45.7821, 17.8126, 0.52", "-17.5193, 46.6273, 18.5408, 0.74", "-18.1371, 47.6288, 19.3902, 0.74", "-18.7128, 48.7631, 20.3065, 0.59", "-19.103, 49.6872, 21.1316, 0.59", "-19.4034, 50.5202, 21.9595, 0.66", "-19.4175, 50.5681, 22.0107, 0.66", "-19.5442, 51.1789, 22.6866, 0.66", "-19.7507, 52.785, 24.4372, 0.52", "-19.83, 54.605, 26.404, 0.52", "-19.805, 55.5015, 27.3559, 0.52", "-19.7986, 55.5762, 27.4346, 0.52", "-19.7372, 56.2054, 28.0377, 0.52", "-19.7208, 56.3337, 28.1481, 0.52", "-19.5145, 57.4661, 28.8173, 0.96", "-19.3075, 58.4305, 29.1432, 0.96", "-19.2373, 59.0273, 29.3124, 0.52", "-19.2402, 60.1163, 29.6488, 0.52", "-19.2534, 60.1849, 29.6703, 0.52", "-19.5614, 61.1702, 29.9465, 0.74", "-19.5948, 61.244, 29.9654, 0.74", "-20.0643, 62.2657, 30.3241, 0.74", "-20.0873, 62.329, 30.3513, 0.74", "-20.3582, 63.31, 30.8036, 0.37", "-20.515, 63.8853, 31.1365, 0.37", "-20.529, 63.9384, 31.1656, 0.37", "-20.8996, 65.4479, 31.9462, 0.37", "-21.068, 66.1959, 32.3728, 0.59", "-21.4056, 67.4311, 33.1022, 0.81", "-22.0073, 69.081, 34.2195, 0.52", "-22.4519, 70.0717, 34.9458, 0.52", "-23.0239, 71.1084, 35.7436, 0.52", "-23.7811, 72.1352, 36.5497, 0.29", "-24.4126, 72.7838, 37.1536, 0.29", "-25.4443, 73.5598, 38.0342, 0.29", "-25.5377, 73.6162, 38.107, 0.29", "-26.091, 73.8779, 38.5616, 0.15", "-26.9902, 74.1827, 39.2431, 0.15", "-28.0722, 74.5375, 39.9182, 0.81", "-28.6064, 74.7436, 40.2716, 0.81", "-32.6129, 83.4004, 44.2687, 0.81" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.49347, 50.0501, 0.573803, 0.66", "-8.31641, 50.331, 0.517427, 0.66", "-8.11176, 50.7485, 0.4003, 0.66", "-8.05288, 50.9088, 0.354211, 0.66", "-7.7245, 51.9642, 0.0511524, 0.66", "-7.71007, 52.0338, 0.0338045, 0.66", "-7.55174, 53.1049, -0.226165, 0.66", "-7.50665, 53.6508, -0.369413, 0.66", "-7.50026, 54.1931, -0.495267, 0.29", "-7.50209, 54.2649, -0.51003, 0.29", "-7.55101, 55.4109, -0.764621, 0.29", "-7.56158, 55.9291, -0.876178, 0.29", "-7.56188, 56.0012, -0.889828, 0.29", "-7.52085, 57.2771, -1.14602, 0.29", "-7.51121, 57.4467, -1.18125, 0.29", "-7.40014, 58.9209, -1.48082, 0.29", "-7.39211, 58.9926, -1.49384, 0.29", "-7.34139, 59.5215, -1.58724, 0.96", "-7.25514, 60.5147, -1.72854, 0.96", "-7.24595, 60.5977, -1.73677, 0.96", "-7.16871, 61.2057, -1.7762, 0.81", "-6.99813, 62.5301, -1.81426, 0.59", "-6.78479, 64.1328, -1.86206, 0.52", "-6.69263, 64.8424, -1.91639, 0.37", "-6.52173, 66.4366, -2.09912, 0.37", "-6.44267, 67.2886, -2.22003, 1.03", "-6.38724, 67.9863, -2.33641, 1.03", "-6.38321, 68.0479, -2.34847, 1.03", "-6.29153, 69.5426, -2.73674, 0.52", "-6.26558, 70.5138, -3.04458, 0.52", "-6.26651, 70.6815, -3.10275, 0.52", "-6.26869, 72.162, -3.54503, 0.44", "-6.26847, 72.2233, -3.55868, 0.44", "-6.27621, 73.7202, -3.67268, 1.33", "-6.27597, 75.0271, -3.5689, 1.4", "-6.2758, 75.1369, -3.5495, 1.4", "-6.28543, 76.1969, -3.27737, 0.22", "-6.31137, 77.5062, -2.81998, 0.22", "-6.36026, 78.9127, -2.25316, 0.59", "-6.41222, 79.57, -1.94055, 0.59", "-6.48749, 80.1934, -1.64734, 0.22", "-6.49864, 80.2585, -1.61669, 0.22", "-6.60803, 80.7312, -1.40349, 0.22", "-6.77566, 81.3046, -1.13757, 0.22", "-7.03538, 82.0288, -0.863097, 0.22", "-7.09166, 82.1705, -0.807425, 0.22", "-7.53053, 83.2698, -0.373468, 0.81", "-7.55535, 83.3339, -0.349857, 0.81", "-7.84617, 84.0697, -0.0962925, 0.81", "-7.95687, 84.3622, -0.0129308, 0.81", "-8.25566, 85.1826, 0.190412, 0.22", "-8.29131, 85.2776, 0.208745, 0.22", "-8.66462, 86.2254, 0.326974, 0.22", "-8.8463, 86.6781, 0.372464, 0.22", "-9.15618, 87.4378, 0.430866, 0.22", "-9.46237, 88.1555, 0.412121, 1.03", "-9.75021, 88.806, 0.346874, 1.03", "-10.0873, 89.556, 0.229605, 0.66", "-10.5497, 90.5946, 0.0113353, 0.22", "-10.9537, 91.5452, -0.226483, 0.22", "-11.6154, 93.111, -0.697507, 0.22", "-11.6448, 93.1843, -0.723349, 0.22", "-11.8363, 93.6879, -0.909443, 0.88", "-11.9878, 94.0958, -1.05, 0.88", "-12.2883, 94.9303, -1.2995, 0.22", "-12.3089, 94.9878, -1.31277, 0.22", "-12.9296, 96.6136, -1.51151, 0.22", "-12.9807, 96.7292, -1.52444, 0.22", "-13.3305, 97.3777, -1.63843, 0.22", "-13.3705, 97.4361, -1.65286, 0.22", "-13.7713, 97.9323, -1.79476, 0.96", "-14.3213, 98.5714, -1.98849, 0.96", "-14.3742, 98.6313, -2.00737, 0.96", "-15.0915, 99.5423, -2.35709, 0.37", "-15.5633, 100.267, -2.64875, 0.29", "-16.0623, 101.182, -2.9872, 0.15", "-16.0908, 101.245, -3.0098, 0.15", "-16.3433, 101.85, -3.2084, 0.15", "-16.7195, 102.802, -3.48766, 1.03", "-17.0767, 103.79, -3.72045, 1.03", "-17.2385, 104.289, -3.83317, 1.03", "-17.394, 104.825, -3.9411, 0.22", "-17.6973, 105.973, -4.12535, 0.22", "-17.714, 106.044, -4.13325, 0.22", "-17.8669, 106.828, -4.17009, 0.96", "-18.0044, 107.691, -4.19861, 1.11", "-18.0447, 108.329, -4.20573, 0.22", "-18.027, 109.027, -4.19745, 0.22", "-17.9629, 109.558, -4.21165, 0.22", "-17.9179, 109.858, -4.22891, 0.22", "-17.9088, 109.931, -4.2318, 0.22", "-17.7693, 111.451, -4.33023, 0.22", "-17.7531, 111.56, -4.34763, 0.22", "-17.6021, 112.424, -4.59027, 0.22", "-17.5878, 112.502, -4.61661, 0.22", "-17.2005, 114.594, -5.35664, 0.22", "-16.7514, 117.023, -6.26154, 0.22", "-16.324, 119.344, -7.19933, 0.22", "-15.9898, 121.094, -7.9286, 1.33", "-15.8475, 121.776, -8.22882, 1.33" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-8.49347, 50.0501, 0.573803, 0.74", "-8.94005, 51.148, 0.741627, 0.74", "-9.2641, 51.8299, 0.819467, 0.37", "-9.58206, 52.4672, 0.881692, 0.37", "-9.68535, 52.6704, 0.898043, 0.37", "-10.1323, 53.5369, 0.958402, 0.22", "-10.1655, 53.6015, 0.962244, 0.22", "-10.7265, 54.595, 0.962244, 0.22", "-10.7644, 54.6569, 0.962244, 0.22", "-11.1671, 55.2845, 0.975159, 0.22", "-11.3192, 55.5138, 0.98406, 0.88", "-11.6615, 56.056, 1.0157, 0.88", "-11.8585, 56.3864, 1.03941, 0.44", "-12.0433, 56.7779, 1.07015, 0.29", "-12.1943, 57.155, 1.09674, 0.29", "-12.2152, 57.2244, 1.10608, 0.29", "-12.3893, 57.9709, 1.23552, 0.29", "-12.4544, 58.2953, 1.29897, 0.29", "-12.6446, 59.4107, 1.5234, 0.29", "-12.6608, 59.5041, 1.54146, 0.29", "-12.8458, 60.3235, 1.71865, 0.29", "-12.9675, 60.7417, 1.82725, 0.29", "-13.1753, 61.2649, 1.97922, 0.29", "-13.246, 61.3978, 2.01768, 0.29", "-13.5787, 61.8901, 2.15764, 0.88", "-14.1207, 62.6043, 2.3127, 0.88", "-14.1602, 62.6513, 2.31901, 0.88", "-14.4905, 63.0505, 2.36342, 0.44", "-14.8955, 63.5543, 2.40729, 0.37", "-14.988, 63.6867, 2.41365, 0.37", "-15.4662, 64.4687, 2.43281, 0.37", "-15.5963, 64.7126, 2.43206, 0.37", "-15.9032, 65.3571, 2.43893, 0.37", "-15.9639, 65.501, 2.44334, 0.37", "-16.4322, 66.7453, 2.38056, 0.37", "-16.5238, 67.0041, 2.34779, 1.11", "-16.5489, 67.0712, 2.33397, 1.11", "-16.8363, 67.7386, 2.15233, 1.11", "-16.8745, 67.8082, 2.12871, 1.11", "-17.5395, 68.776, 1.75259, 0.74", "-17.8618, 69.1328, 1.58771, 0.29", "-18.3418, 69.6022, 1.36988, 0.29", "-18.459, 69.7061, 1.32022, 0.29", "-19.0163, 70.1481, 1.1076, 0.74", "-19.2713, 70.3627, 1.02903, 0.74", "-19.5575, 70.6125, 0.971404, 0.29", "-19.6142, 70.6693, 0.955328, 0.29", "-20.2109, 71.4265, 0.741318, 0.22", "-20.2546, 71.4945, 0.724382, 0.22", "-20.7043, 72.3197, 0.578715, 0.22", "-20.771, 72.4597, 0.562491, 0.22", "-21.1135, 73.1219, 0.523733, 0.74", "-21.5099, 73.8385, 0.513612, 0.74", "-22.0237, 74.7193, 0.574752, 0.74", "-22.354, 75.2384, 0.630644, 0.44", "-22.6625, 75.6788, 0.695729, 0.22", "-23.6456, 76.9982, 0.929419, 0.22", "-23.713, 77.0823, 0.947903, 0.22", "-24.1801, 77.6164, 1.07061, 0.81", "-24.7199, 78.2566, 1.25247, 0.96", "-24.7814, 78.3345, 1.27528, 0.96", "-25.143, 78.846, 1.44515, 0.96", "-25.1768, 78.9068, 1.46542, 0.96", "-25.3886, 79.3288, 1.58617, 0.29", "-26.0862, 80.8601, 1.94751, 0.29", "-26.1151, 80.9248, 1.96399, 0.29", "-26.3267, 81.3461, 2.06578, 0.88", "-26.7069, 82.0483, 2.22457, 0.88", "-27.1626, 82.8025, 2.37457, 0.88", "-27.477, 83.2755, 2.45658, 0.29", "-27.8985, 83.8407, 2.53344, 0.15", "-28.7867, 84.9666, 2.69046, 0.15", "-29.184, 85.4383, 2.75643, 0.44", "-29.715, 86.0435, 2.83595, 0.44", "-29.7627, 86.0969, 2.84239, 0.44", "-29.9922, 86.3487, 2.86631, 0.81", "-31.0105, 87.4188, 2.98907, 0.81", "-31.5431, 87.9438, 3.07339, 0.22", "-32.1276, 88.4836, 3.17431, 0.22", "-32.2941, 88.6317, 3.20565, 0.22", "-33.1971, 89.4122, 3.37705, 0.22", "-34.1574, 90.2096, 3.56613, 0.22", "-34.2118, 90.2541, 3.57816, 0.22", "-34.8057, 90.765, 3.71506, 0.22", "-34.9637, 90.9228, 3.74765, 0.74", "-35.3922, 91.4833, 3.81566, 0.74", "-35.5229, 91.7202, 3.82348, 0.74", "-35.7305, 92.1568, 3.8312, 0.74", "-35.8634, 92.4271, 3.84401, 0.74", "-36.3236, 93.2674, 3.89894, 0.22", "-36.6213, 93.79, 3.90717, 0.22", "-37.1728, 94.7238, 3.91384, 0.22", "-37.6063, 95.4693, 3.91484, 0.88", "-38.2347, 96.5477, 3.93504, 1.25", "-38.8447, 97.5792, 3.96658, 1.25", "-39.6916, 98.9569, 4.0219, 1.25", "-40.2825, 99.8824, 4.05771, 0.59", "-40.8639, 100.775, 4.05234, 0.59", "-41.4865, 101.672, 3.99861, 0.15", "-42.0622, 102.447, 3.93527, 0.15", "-42.3433, 102.801, 3.90033, 0.37", "-42.6523, 103.127, 3.86356, 0.37", "-43.5099, 103.938, 3.68954, 0.22", "-44.2812, 104.604, 3.38214, 0.22", "-44.3358, 104.653, 3.34766, 0.22", "-44.5163, 104.836, 3.20227, 0.74", "-44.9979, 105.385, 2.77825, 0.74", "-45.0385, 105.435, 2.74718, 0.74", "-45.9668, 106.568, 2.04326, 0.15", "-46.3467, 107.016, 1.75884, 0.15", "-46.4494, 107.134, 1.69357, 0.15", "-46.8892, 107.626, 1.42459, 0.15", "-47.9216, 108.767, 0.831723, 0.15", "-48.7741, 109.692, 0.41446, 0.88", "-49.3747, 110.329, 0.206148, 0.88", "-50.2649, 111.272, -0.131025, 0.66", "-55.8226, 119.974, -0.77797, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.0552, -28.8121, 4.47209, 1.03", "22.6269, -29.8061, 3.89831, 1.03", "22.6874, -29.8987, 3.86151, 1.03", "23.2419, -30.7353, 3.56998, 1.03", "23.4782, -31.06, 3.48087, 1.03", "24.8293, -32.8109, 3.0901, 1.03", "24.8745, -32.8659, 3.07943, 1.03", "26.6628, -34.9096, 2.82384, 0.88", "26.7689, -35.0207, 2.81828, 0.88", "28.4662, -36.6395, 2.92143, 0.88", "29.122, -37.2014, 3.04527, 0.88", "29.728, -37.6653, 3.22836, 1.25", "30.5246, -38.2258, 3.51937, 1.25", "32.0983, -39.21, 4.19181, 0.74", "33.6353, -40.1387, 4.83864, 0.74", "34.9207, -40.8861, 5.36943, 0.74", "34.9704, -40.9157, 5.38774, 0.74", "35.6764, -41.3428, 5.62158, 1.47", "36.6606, -41.9181, 5.88446, 1.47", "38.7701, -43.1513, 6.13535, 0.66", "39.7167, -43.7125, 6.13619, 0.66", "40.8382, -44.402, 6.05226, 1.33", "40.8974, -44.4406, 6.04579, 1.33", "41.8119, -45.094, 5.93018, 1.33", "43.4415, -46.2727, 5.69573, 1.18", "44.7094, -47.2124, 5.48363, 1.18", "44.7885, -47.2731, 5.46966, 1.18", "46.1183, -48.3289, 5.23491, 0.88", "48.2968, -50.1849, 4.88767, 0.88" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "22.0552, -28.8121, 4.47209, 0.74", "22.0918, -28.829, 4.52956, 0.74", "22.5731, -29.0316, 5.53536, 0.74", "22.6018, -29.0447, 5.59796, 0.74", "23.8206, -29.6098, 7.96985, 0.74", "25.6757, -30.3825, 11.2197, 0.74", "25.7112, -30.3963, 11.2786, 0.74", "27.6981, -31.0666, 14.2769, 1.4", "28.23, -31.229, 15.0346, 0.74", "29.3736, -31.4999, 16.4315, 0.74", "30.8598, -31.7125, 17.8487, 0.74", "30.9416, -31.7213, 17.9039, 0.74", "32.6718, -32.0446, 18.9361, 0.74", "32.7248, -32.0588, 18.9607, 0.74", "33.5642, -32.298, 19.4148, 0.74", "33.6669, -32.3266, 19.4705, 0.74", "35.471, -32.7882, 20.323, 0.74", "37.3165, -33.2269, 21.1741, 0.74", "38.262, -33.4451, 21.6002, 0.74", "40.4438, -33.9352, 22.4903, 0.74", "42.4384, -34.4145, 23.2206, 0.74", "44.1626, -34.8253, 23.7757, 1.25", "45.5624, -35.1732, 24.2105, 0.52", "46.1886, -35.3432, 24.4099, 0.52", "47.5687, -35.7782, 24.8774, 0.66", "49.4457, -36.4657, 25.5559, 0.66", "49.5149, -36.494, 25.5856, 0.66", "51.7957, -37.3607, 26.6194, 0.66", "52.393, -37.5547, 26.8604, 0.96", "53.2602, -37.8189, 27.1779, 0.66", "54.5878, -38.1577, 27.6043, 0.52", "54.6535, -38.1765, 27.6204, 0.52", "56.0161, -38.6821, 27.8893, 0.52", "57.1979, -39.2423, 28.1057, 0.52", "58.2096, -39.8054, 28.4186, 0.52", "58.2579, -39.8359, 28.4392, 0.52", "59.4604, -40.5958, 28.9816, 0.52", "60.5077, -41.2222, 29.4863, 0.52", "61.7326, -41.9235, 30.0881, 1.25", "62.8742, -42.4164, 30.7519, 0.52", "64.2267, -42.8827, 31.5747, 0.52", "66.254, -43.474, 32.8181, 0.52", "66.3914, -43.5004, 32.8991, 0.52", "67.3286, -43.6165, 33.4198, 0.52", "70.5224, -43.6677, 35.0178, 0.37", "71.1343, -43.6197, 35.3135, 0.37", "71.2669, -43.5936, 35.3792, 0.37", "72.3708, -43.2839, 35.9623, 0.37", "72.6855, -43.1996, 36.1438, 0.37", "74.2052, -42.7972, 37.0629, 0.37", "74.2667, -42.7839, 37.0937, 0.37", "75.5498, -42.4742, 37.8227, 0.37", "75.608, -42.4598, 37.8589, 0.37", "77.1923, -42.0867, 38.9782, 0.29", "77.2787, -42.0659, 39.0368, 0.29", "78.0357, -41.8665, 39.5273, 0.29", "78.0981, -41.8504, 39.5552, 0.29", "78.7729, -41.6564, 39.7575, 0.29", "78.9207, -41.6157, 39.7914, 0.29", "80.1294, -41.3075, 39.9931, 0.29", "80.2608, -41.2699, 40.0255, 0.29", "81.554, -40.8685, 40.4082, 0.29", "83.1125, -40.3092, 40.9069, 0.29", "83.1748, -40.2846, 40.9284, 0.29", "84.7374, -39.6232, 41.5022, 0.29", "86.0801, -38.9788, 42.0468, 0.59", "86.8264, -38.5884, 42.3651, 0.74", "87.5769, -38.1224, 42.718, 0.74", "87.6321, -38.0853, 42.7424, 0.74", "95.2219, -38.9129, 49.2056, 0.74", "102.065, -39.1982, 56.4927, 0.74", "108.851, -41.252, 63.5728, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "35.3908, -63.9774, 54.9546, 0.52", "36.2003, -65.0558, 55.3968, 0.52", "36.5284, -65.5875, 55.6047, 0.66", "36.9734, -66.5029, 55.9475, 0.52", "37.3904, -67.5365, 56.3296, 0.29", "37.7928, -68.8757, 56.7891, 0.44", "37.8092, -68.9433, 56.8112, 0.44", "37.8923, -69.7474, 56.9831, 0.44", "37.8516, -70.5389, 57.1426, 0.74", "37.8108, -70.7842, 57.1893, 0.74", "37.6381, -71.579, 57.3083, 0.74", "37.6222, -71.6505, 57.3119, 0.74", "37.5327, -72.6651, 57.4077, 0.74", "37.6179, -73.4592, 57.6962, 0.44", "37.635, -73.522, 57.7283, 0.44", "37.9475, -74.4857, 58.2665, 0.37", "37.985, -74.5815, 58.327, 0.37", "38.7549, -76.3065, 59.5383, 0.37", "40.0006, -78.6056, 61.4323, 0.44", "40.4216, -79.2876, 62.0687, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "35.3908, -63.9774, 54.9546, 0.66", "36.3742, -64.3784, 55.1284, 0.66", "36.9265, -64.5648, 55.3049, 0.29", "37.6862, -64.8213, 55.5475, 0.29", "37.7591, -64.8459, 55.5708, 0.29", "38.7206, -65.1706, 55.8779, 0.29", "38.852, -65.2149, 55.9199, 0.29", "39.949, -65.6709, 56.0916, 0.74", "49.254, -67.9635, 59.0328, 0.74", "58.4385, -71.9535, 60.1306, 0.74", "67.1393, -76.4486, 62.5735, 0.74", "75.5359, -82.1019, 63.2876, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-54.0741, -50.0341, -30.1683, 0.29", "-56.493, -51.1304, -32.0785, 0.29", "-57.9158, -51.8355, -33.2299, 0.29", "-59.2965, -52.552, -34.3238, 0.29", "-61.3761, -53.6483, -35.9545, 0.88", "-62.1988, -54.1097, -36.6526, 1.18", "-63.0994, -54.6302, -37.4513, 0.59", "-64.2779, -55.446, -38.5868, 0.52", "-64.5792, -55.6837, -38.967, 0.88", "-64.6154, -55.7147, -39.0192, 0.88", "-65.6223, -56.5765, -40.3958, 0.37", "-65.6576, -56.6068, -40.4489, 0.37", "-67.2277, -57.9727, -42.8544, 0.37", "-67.8117, -58.4958, -43.6089, 1.25", "-67.8468, -58.5267, -43.6477, 1.25", "-68.5866, -59.1471, -44.2974, 1.25", "-68.6436, -59.191, -44.3349, 1.25", "-69.2577, -59.6875, -44.6595, 0.29", "-70.6551, -60.8401, -45.121, 0.15", "-71.0849, -61.2164, -45.2855, 0.59", "-71.4124, -61.5105, -45.4328, 0.59", "-72.1081, -62.1439, -45.7884, 0.15", "-73.0879, -62.9822, -46.2939, 0.15", "-73.1379, -63.0216, -46.3256, 0.15", "-74.0715, -63.7101, -46.9227, 0.88", "-74.1221, -63.7468, -46.956, 0.88", "-74.7897, -64.2274, -47.3971, 0.88", "-75.7238, -64.8872, -48.0763, 0.22", "-77.471, -66.152, -49.403, 0.22", "-78.4864, -67.075, -50.3241, 0.22", "-80.0347, -68.9661, -52.232, 0.22", "-80.0636, -69.0112, -52.2791, 0.22", "-80.6887, -70.8892, -54.2998, 0.22", "-80.7834, -72.003, -55.3085, 0.22", "-80.3997, -74.7921, -57.3133, 0.22", "-79.4883, -77.3333, -58.6262, 0.22", "-79.4606, -77.3863, -58.643, 0.22", "-77.3457, -80.9748, -58.9697, 0.22", "-73.8143, -86.2486, -58.2185, 0.22", "-73.7809, -86.3033, -58.1857, 0.22", "-72.8058, -87.9807, -56.7026, 0.22", "-72.7782, -88.0326, -56.646, 0.22", "-72.0051, -89.6883, -54.5794, 0.22", "-71.9941, -89.7249, -54.5196, 0.22", "-71.7864, -93.208, -48.9245, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-54.0741, -50.0341, -30.1683, 1.18", "-56.153, -52.3824, -29.8819, 1.18", "-57.7317, -54.0054, -30.1194, 1.18", "-58.7801, -55.0412, -30.4238, 0.52", "-60.0109, -56.2355, -30.8737, 0.52", "-60.0603, -56.2832, -30.8936, 0.52", "-61.0186, -57.2058, -31.4202, 0.52", "-62.2089, -58.328, -32.0998, 0.52", "-62.2955, -58.4061, -32.1808, 0.52", "-62.9519, -58.9574, -33.0317, 0.37", "-62.9864, -58.99, -33.0841, 0.37", "-63.9706, -59.9743, -34.4624, 1.11", "-64.4526, -60.4993, -35.0938, 1.11", "-64.4961, -60.5468, -35.1434, 1.11", "-65.6594, -61.7846, -36.4213, 0.22", "-66.4205, -62.5615, -37.1988, 0.22", "-67.0423, -63.2246, -37.7678, 0.29", "-67.1071, -63.2966, -37.8168, 0.29", "-67.4495, -63.6663, -38.128, 0.81", "-67.4948, -63.7141, -38.1758, 0.81", "-67.9738, -64.2287, -38.6885, 0.81", "-68.8782, -65.2271, -39.7564, 0.37", "-68.914, -65.2691, -39.8013, 0.37", "-70.4075, -67.1337, -41.6467, 0.15", "-70.9891, -68.0258, -42.4015, 0.96", "-71.4445, -68.8434, -43.0008, 1.4", "-71.8079, -69.7744, -43.5579, 0.52", "-71.817, -69.8326, -43.579, 0.52", "-71.8201, -70.983, -43.8488, 0.29", "-71.4864, -72.9668, -43.9747, 0.29", "-71.4675, -73.0484, -43.9746, 0.29", "-71.0338, -74.6647, -43.9043, 0.29", "-70.395, -77.2398, -43.7015, 0.29", "-70.3622, -77.3928, -43.6869, 0.29", "-70.0439, -79.466, -43.4024, 0.29", "-70.023, -79.6547, -43.3697, 0.29", "-69.9399, -80.8817, -43.1133, 0.15", "-69.99, -82.6307, -42.5996, 0.15", "-70.0015, -82.6987, -42.5756, 0.15", "-70.323, -84.0672, -42.1171, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.86296, -27.3425, -2.17873, 0.88", "-9.07019, -28.4537, -6.42042, 0.88", "-9.80757, -28.8566, -7.73113, 0.88", "-10.6262, -29.3038, -9.18616, 0.88", "-10.6594, -29.3219, -9.24528, 0.88", "-11.2249, -29.6309, -10.2504, 0.88", "-12.672, -30.4215, -12.8227, 1.4", "-13.0183, -30.6741, -13.2554, 1.4" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.86296, -27.3425, -2.17873, 0.81", "-8.06109, -29.9792, -1.05111, 0.81", "-8.92216, -31.8742, -0.240704, 0.81", "-9.56421, -33.2872, 0.363561, 0.81", "-10.1323, -34.5373, 0.898184, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.86296, -27.3425, -2.17873, 2.5", "-6.84049, -28.0314, -1.94835, 2.5", "-6.7667, -29.8194, -1.46595, 1.03", "-6.63955, -31.2733, -1.18256, 0.59", "-6.45388, -32.4622, -1.00843, 0.59", "-6.4339, -32.5325, -1.00503, 0.59", "-6.16665, -33.3243, -1.0007, 0.59", "-5.55226, -34.662, -1.12541, 0.59", "-4.43385, -36.5634, -1.47365, 1.03", "-3.39063, -38.1171, -1.82564, 0.81", "-1.40818, -40.8264, -2.37261, 0.81", "-1.37109, -40.875, -2.3812, 0.81", "0.69892, -43.4939, -2.79888, 0.81", "2.82311, -46.2693, -3.15779, 0.81", "2.86288, -46.3296, -3.16257, 0.81", "3.77136, -48.1491, -3.24154, 0.52", "4.23551, -49.4357, -3.24107, 0.52", "4.35821, -49.9034, -3.22505, 0.74", "4.7466, -52.554, -3.03672, 1.11", "5.00826, -55.4558, -2.8261, 1.11", "5.18189, -57.421, -2.71653, 0.81", "5.1974, -57.5775, -2.70997, 0.81", "5.53429, -59.932, -2.50492, 0.59", "5.5475, -59.9929, -2.49703, 0.59", "6.04542, -61.7093, -2.16177, 0.59", "6.0656, -61.7666, -2.14707, 0.59", "6.64662, -63.3353, -1.70335, 0.59", "7.368, -65.332, -1.18271, 0.44", "7.8559, -66.7229, -0.889521, 0.44", "8.01937, -67.2715, -0.791466, 1.03", "8.03672, -67.3419, -0.780928, 1.03", "8.28413, -68.4613, -0.670888, 1.03", "8.30048, -68.5435, -0.67294, 1.03", "8.55225, -69.4704, -0.796633, 0.52", "9.03688, -70.6647, -0.980857, 0.52", "9.14532, -70.8761, -1.01215, 0.52", "9.76967, -71.9467, -1.156, 0.74", "10.439, -73.0564, -1.27595, 0.88", "11.0657, -74.1249, -1.32264, 0.66", "11.5821, -75.0659, -1.30334, 0.44", "12.1187, -76.2187, -1.23144, 0.44", "12.143, -76.2873, -1.22545, 0.44", "12.6229, -78.0435, -1.02644, 0.44", "12.8286, -79.0268, -0.904609, 0.88", "13.0186, -80.1594, -0.786161, 1.18", "13.3428, -82.0335, -0.580685, 0.88", "13.5895, -83.2984, -0.421487, 1.18", "13.6071, -83.3689, -0.412325, 1.18", "14.2477, -85.4449, -0.135352, 0.66", "14.2773, -85.5223, -0.125475, 0.66", "15.2782, -87.4918, 0.171511, 0.66", "15.3167, -87.5521, 0.182313, 0.66", "16.4104, -88.9982, 0.449181, 0.66", "16.4544, -89.0546, 0.458363, 0.66", "17.1113, -89.8764, 0.550126, 0.29", "17.7431, -90.7832, 0.543294, 0.29", "17.7814, -90.8442, 0.536092, 0.29", "18.3664, -91.8762, 0.383838, 0.81", "19.0557, -93.1318, 0.165479, 1.18", "19.6414, -94.1909, -0.0245575, 0.88", "20.3682, -95.5147, -0.26218, 0.29", "20.8392, -96.3553, -0.4096, 0.29", "21.0101, -96.6378, -0.455496, 0.29", "21.9919, -98.115, -0.618735, 0.66", "22.5288, -98.8535, -0.645946, 1.03", "23.0957, -99.6404, -0.592841, 0.37", "23.1365, -99.6993, -0.58376, 0.37", "23.7238, -100.664, -0.371296, 0.37", "24.2073, -101.532, -0.0670697, 0.81", "24.5457, -102.21, 0.236112, 0.81", "25.0912, -103.247, 0.754075, 0.52", "25.1227, -103.305, 0.784533, 0.52", "25.9846, -104.711, 1.55365, 0.88", "26.9409, -106.11, 2.36127, 0.52", "27.2513, -106.479, 2.61413, 0.52", "27.8926, -106.942, 3.10796, 0.74", "28.0647, -107.01, 3.22892, 0.74", "28.8018, -107.098, 3.7884, 0.52", "28.8663, -107.093, 3.83547, 0.52", "30.38, -106.766, 4.91664, 0.29", "32.0569, -106.263, 6.21063, 0.22", "32.3292, -106.158, 6.44031, 0.37", "33.7948, -105.519, 7.73124, 0.81", "36.983, -115.47, 7.79966, 0.81", "39.9743, -125.465, 8.46713, 0.81", "41.3372, -135.662, 10.4238, 0.81", "43.8131, -145.703, 11.9819, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "23.5097, 97.4204, 20.7709, 0.29", "20.1053, 104.014, 27.769, 0.29", "15.3285, 109.007, 35.1566, 0.29", "11.1857, 114.115, 42.8488, 0.29", "5.64473, 119.921, 49.0712, 0.29", "0.864867, 127.153, 54.5231, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "23.5097, 97.4204, 20.7709, 0.74", "23.4405, 107.79, 22.341, 0.29", "23.2858, 117.813, 25.3163, 0.29", "22.6443, 128.08, 27.3139, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "64.9534, 75.9355, 21.4345, 0.37", "64.9883, 76.0063, 21.4597, 0.37", "65.3595, 76.7124, 21.6412, 0.37", "65.4101, 76.7994, 21.6601, 0.37", "65.7371, 77.359, 21.8478, 0.59", "66.1082, 77.9888, 22.0824, 0.59", "66.1905, 78.129, 22.1353, 0.59", "66.7664, 79.0729, 22.4955, 0.29", "67.0062, 79.4152, 22.6268, 0.29", "67.9938, 80.7261, 23.0884, 0.15", "68.0587, 80.8076, 23.1209, 0.15", "68.3626, 81.1734, 23.2891, 0.15", "68.6516, 81.5207, 23.4565, 0.15", "69.3038, 82.2986, 23.8242, 0.15", "69.6117, 82.6695, 23.9741, 0.44", "70.3682, 83.5488, 24.2794, 0.29", "70.9105, 84.1928, 24.5115, 0.29", "71.1694, 84.5118, 24.6329, 0.29", "71.7483, 85.3089, 24.9376, 0.29", "72.0605, 85.8304, 25.123, 0.74", "77.5039, 94.3487, 27.2569, 0.74", "83.3739, 102.801, 28.1176, 0.74", "88.7407, 111.591, 29.1781, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "64.9534, 75.9355, 21.4345, 0.29", "65.0344, 75.8757, 21.4345, 0.29", "65.097, 75.8429, 21.4345, 0.29", "65.6283, 75.5919, 21.4345, 0.29", "65.7742, 75.5323, 21.4345, 0.29", "66.2115, 75.3668, 21.4345, 0.29", "66.411, 75.2912, 21.4345, 0.29", "67.626, 74.8578, 21.4345, 0.29", "67.6928, 74.8359, 21.4345, 0.29", "68.3359, 74.6635, 21.4345, 0.88", "68.414, 74.6452, 21.4345, 0.88", "78.1186, 72.2322, 22.1693, 0.88", "87.2537, 68.8203, 24.6169, 0.88", "96.3662, 66.4442, 28.058, 0.88", "105.784, 64.4348, 30.8232, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "30.9581, 15.7951, -46.0447, 0.74", "30.9409, 17.8932, -48.2866, 0.74", "31.0362, 18.6707, -49.3183, 0.74", "31.0433, 18.7118, -49.3758, 0.74", "31.1652, 19.1623, -50.0677, 0.74", "31.336, 19.7073, -50.9339, 0.74", "31.699, 20.6968, -52.6148, 0.59", "32.3935, 22.229, -55.3044, 0.59", "32.4426, 22.3214, -55.4811, 0.59", "33.0508, 23.4078, -57.5737, 0.59", "33.0692, 23.4383, -57.6347, 0.59", "33.741, 24.4893, -59.8207, 0.29", "33.7607, 24.5205, -59.8809, 0.29", "33.9211, 24.8477, -60.4265, 0.29", "34.1274, 25.4892, -61.4279, 0.29", "34.1254, 25.5259, -61.4766, 0.29", "33.9228, 25.7765, -61.9162, 0.29", "33.7882, 25.8445, -62.0777, 0.29", "33.3771, 26.0503, -62.574, 0.29", "32.902, 26.2664, -63.1369, 0.74", "32.5092, 26.5334, -63.9752, 0.74", "31.8988, 27.2863, -66.0839, 0.37", "31.8899, 27.3079, -66.1503, 0.37", "31.8217, 27.586, -67.0355, 0.37", "31.8166, 27.6163, -67.1376, 0.37", "31.6408, 28.8824, -71.1389, 0.37", "31.6177, 29.109, -71.8306, 1.03", "31.3645, 30.4611, -75.7284, 1.03", "31.3572, 30.4841, -75.7944, 1.03", "31.0201, 31.2988, -78.0055, 0.29", "30.8643, 31.6284, -78.7823, 0.29", "30.8246, 31.7073, -78.9245, 0.29", "30.5108, 32.4231, -80.0167, 0.29", "30.4978, 32.4674, -80.071, 0.29", "30.2116, 33.9807, -81.876, 0.29", "30.2078, 34.0276, -81.9297, 0.29", "30.1871, 35.1587, -83.3448, 1.33", "30.199, 35.5723, -83.8743, 1.33", "30.3307, 37.143, -85.9488, 0.29", "30.3532, 37.7141, -86.7274, 0.29", "30.3447, 37.7782, -86.8139, 0.29", "30.1853, 38.4071, -87.629, 1.03", "30.0911, 38.6285, -87.9052, 1.03", "30.0743, 38.6643, -87.9639, 1.03", "29.7948, 39.3891, -89.0456, 0.22", "29.4934, 40.2183, -90.3422, 0.22", "29.4795, 40.2542, -90.4016, 0.22", "29.1613, 41.0718, -91.7769, 1.18", "28.4131, 43.1236, -95.0891, 0.22", "28.1721, 43.9852, -96.4709, 0.22", "27.9697, 45.0913, -98.2673, 1.18", "27.9057, 46.3002, -100.53, 0.15", "27.9062, 46.3991, -100.729, 0.15", "27.969, 47.0244, -101.915, 0.15", "28.1543, 48.1267, -103.826, 0.15", "28.3767, 49.1679, -105.594, 1.62", "29.0966, 51.8206, -109.722, 0.22", "29.109, 51.859, -109.78, 0.22", "29.5586, 53.2281, -111.916, 0.22", "29.7785, 53.8948, -112.992, 1.25", "29.8363, 54.1502, -113.331, 1.25", "29.8478, 54.2104, -113.386, 1.25" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "30.9581, 15.7951, -46.0447, 0.96", "31.112, 15.7917, -46.1169, 0.96", "32.3439, 15.7623, -46.7116, 0.74", "33.9358, 15.6901, -47.3833, 0.74", "35.6911, 15.6309, -48.1737, 0.74", "35.7777, 15.6296, -48.2217, 0.74", "38.3643, 15.6857, -49.9667, 0.74", "38.4199, 15.6905, -50.009, 0.74", "40.1407, 15.9615, -51.543, 0.74", "41.5233, 16.2709, -52.833, 0.74", "43.0279, 16.7833, -54.3627, 1.62", "44.2771, 17.2946, -55.7628, 0.66", "45.2602, 17.7396, -56.9112, 0.52", "46.6421, 18.3777, -58.5399, 1.25", "47.6097, 18.8033, -59.678, 1.25", "50.4959, 19.937, -62.7731, 0.59", "52.4713, 20.6229, -64.8952, 0.96", "54.6264, 21.2953, -67.282, 0.96", "54.6735, 21.3081, -67.3323, 0.96", "58.1007, 22.1374, -70.7332, 0.96", "59.0905, 22.3312, -71.6738, 1.47", "62.1636, 22.7904, -74.3014, 0.74", "62.2277, 22.8008, -74.3483, 0.74", "65.5268, 23.3894, -76.5615, 0.74", "66.6125, 23.6081, -77.2321, 1.47", "68.0838, 23.9482, -77.9812, 0.59", "68.3465, 24.0061, -78.1114, 0.59", "70.1948, 24.3758, -78.8721, 0.59", "70.3415, 24.4021, -78.9445, 0.59", "71.8514, 24.5984, -79.9226, 2.14", "72.2262, 24.6317, -80.1696, 2.14", "74.1008, 24.6655, -81.3882, 0.66", "74.6657, 24.6515, -81.7687, 0.66", "74.7202, 24.65, -81.8126, 0.66", "76.7086, 24.7551, -83.7994, 0.66", "76.7549, 24.7624, -83.8513, 0.66", "78.3556, 25.1905, -85.8585, 0.66", "78.5543, 25.2782, -86.1469, 1.18", "79.8489, 25.9927, -88.2577, 0.81", "81.1686, 26.7775, -90.4797, 0.44", "81.5724, 27.061, -91.2359, 0.44", "81.6045, 27.082, -91.2948, 0.44", "82.6923, 27.7659, -93.2806, 0.44", "82.7501, 27.7889, -93.3671, 0.44", "83.682, 27.9337, -94.5042, 0.44", "83.7291, 27.9404, -94.5556, 0.44", "84.7744, 28.0866, -95.7106, 1.4", "84.8307, 28.0969, -95.7666, 1.4", "85.3523, 28.2039, -96.2537, 1.4", "88.4965, 28.8612, -99.4345, 0.52", "90.5326, 29.3198, -101.6, 0.37", "90.582, 29.331, -101.649, 0.37", "93.2739, 29.9703, -104.125, 0.37", "93.332, 29.9846, -104.178, 0.37", "96.5185, 30.7939, -107.132, 0.37", "96.5772, 30.808, -107.185, 0.37", "98.7424, 31.2815, -109.066, 0.37", "98.7936, 31.2926, -109.113, 0.37", "100.559, 31.6741, -110.78, 0.29", "102.644, 32.1316, -112.659, 0.29", "102.698, 32.1437, -112.703, 0.29", "106.425, 32.9484, -115.625, 0.29", "108.194, 33.3248, -117.071, 1.62", "108.249, 33.3358, -117.114, 1.62", "109.297, 33.5268, -117.788, 1.62", "110.299, 33.7278, -118.366, 0.29", "111.793, 34.04, -119.277, 0.29", "113.889, 34.4257, -120.517, 0.29", "113.95, 34.4343, -120.551, 0.29", "115.798, 34.6514, -121.779, 0.29", "116.281, 34.6983, -122.144, 1.11", "118.205, 34.8723, -123.674, 0.29", "119.578, 34.9713, -124.784, 0.29", "121.304, 35.1139, -126.022, 1.47", "122.953, 35.2789, -127.193, 0.15", "123.011, 35.2832, -127.233, 0.15", "124.067, 35.3292, -127.848, 0.15", "124.14, 35.3337, -127.881, 0.15", "125.605, 35.4258, -128.476, 0.15", "125.745, 35.426, -128.53, 0.15", "127.258, 35.3642, -129.124, 0.15", "128.489, 35.2867, -129.69, 1.11", "128.953, 35.2409, -129.94, 1.11", "129.01, 35.2392, -129.981, 1.11", "130.725, 35.2893, -131.547, 0.37", "131.139, 35.3446, -131.971, 0.59", "131.435, 35.4323, -132.294, 0.59", "131.501, 35.4566, -132.364, 0.59", "133.361, 36.1361, -134.212, 0.29", "133.696, 36.2361, -134.48, 0.22", "133.754, 36.2517, -134.517, 0.22", "134.646, 36.4643, -135.045, 0.22", "135.083, 36.5543, -135.294, 0.22", "136.375, 36.7939, -135.972, 1.03", "138.867, 37.1984, -137.113, 0.22", "139.664, 37.3252, -137.492, 0.22", "139.726, 37.3345, -137.523, 0.22", "141.245, 37.5437, -138.317, 1.11", "141.76, 37.6213, -138.59, 1.11", "141.86, 37.6391, -138.639, 1.11" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "73.6279, 20.6756, -29.9333, 0.44", "74.3169, 20.8596, -29.9389, 0.44", "74.8859, 21.0247, -30.0056, 0.44", "75.1698, 21.1088, -30.0506, 0.44", "76.7701, 21.5541, -30.8761, 0.44", "76.8269, 21.5713, -30.9136, 0.44", "77.4314, 21.7638, -31.3508, 0.81", "78.4096, 22.0805, -32.1052, 0.81", "78.4644, 22.1006, -32.1602, 0.81", "80.3166, 22.9028, -34.1926, 0.22", "80.6652, 23.0805, -34.6173, 0.22", "80.7254, 23.1129, -34.6993, 0.22", "80.9728, 23.2687, -35.0605, 0.44", "81.8211, 23.8665, -36.3052, 0.29", "82.7344, 24.5775, -37.6307, 0.29", "84.1382, 25.801, -39.806, 0.96", "85.2011, 26.7671, -41.6148, 0.44", "85.6604, 27.1682, -42.3534, 0.44", "85.8437, 27.3263, -42.6383, 1.03", "86.0934, 27.5397, -42.9692, 1.03", "87.3037, 28.6361, -44.4753, 0.29", "87.3722, 28.6859, -44.5287, 0.29", "89.0903, 29.6636, -45.4272, 0.29", "89.2178, 29.7196, -45.4856, 0.29", "90.6293, 30.2539, -46.0287, 0.29", "90.7319, 30.2927, -46.059, 0.29", "92.5207, 30.9896, -46.5519, 0.29", "92.5898, 31.0177, -46.5821, 0.29", "93.2593, 31.2777, -46.9649, 0.29", "93.3925, 31.3268, -47.0434, 0.29", "94.2995, 31.6373, -47.5128, 1.03", "95.8038, 32.1251, -48.0675, 0.29", "96.0126, 32.1862, -48.1051, 0.29", "98.0993, 32.698, -48.458, 0.29", "98.1671, 32.7123, -48.469, 0.29", "99.5339, 32.9564, -48.6099, 0.81", "100.239, 33.0773, -48.6355, 0.22", "101.999, 33.4322, -48.569, 0.22", "102.989, 33.6598, -48.6044, 1.03", "103.114, 33.6936, -48.62, 1.03", "104.187, 34.0313, -48.8375, 0.15", "105.218, 34.4274, -49.1664, 0.15", "105.279, 34.4553, -49.1885, 0.15", "106.603, 35.2056, -49.8522, 0.81", "106.725, 35.2731, -49.9105, 0.81", "107.031, 35.3996, -50.0668, 0.81", "107.127, 35.429, -50.1209, 0.81", "107.631, 35.5313, -50.3791, 0.15", "107.694, 35.5427, -50.4066, 0.15", "108.909, 35.7149, -50.771, 0.15", "110.063, 35.8408, -51.1174, 0.74", "110.286, 35.8576, -51.1849, 0.74", "110.363, 35.8627, -51.2072, 0.74" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "73.6279, 20.6756, -29.9333, 0.66", "73.8512, 20.4388, -30.0277, 0.66", "73.8989, 20.3914, -30.0517, 0.66", "74.7329, 19.6791, -30.4583, 0.66", "74.9554, 19.5237, -30.5709, 0.66", "75.7689, 19.0146, -30.9849, 0.66", "76.596, 18.588, -31.3609, 1.18", "76.7392, 18.5288, -31.4217, 1.18", "77.4237, 18.3208, -31.6728, 1.18", "78.202, 18.1733, -31.9278, 0.44", "78.2785, 18.1634, -31.9491, 0.44", "79.4307, 18.0657, -32.1962, 0.44", "79.7396, 18.0424, -32.2998, 0.44", "80.5486, 17.9948, -32.6746, 0.44", "80.6095, 17.9919, -32.709, 0.44", "81.1431, 17.9807, -33.0409, 0.74", "81.2098, 17.9839, -33.085, 0.74", "83.2073, 18.2342, -34.4685, 0.44", "84.494, 18.4544, -35.1725, 0.44", "84.5591, 18.4671, -35.1952, 0.44", "85.2865, 18.6121, -35.2828, 0.88", "86.1182, 18.7869, -35.2521, 0.88", "86.8749, 18.9561, -35.1321, 0.88", "88.3973, 19.3046, -34.6194, 0.44", "90.0879, 19.6594, -33.9397, 0.44", "91.5175, 19.9322, -33.3134, 1.25", "91.5893, 19.9448, -33.2801, 1.25", "92.3384, 20.0641, -32.9191, 1.25", "93.7827, 20.2533, -32.2542, 0.37", "94.7676, 20.3587, -31.9698, 0.37", "94.9066, 20.3681, -31.9559, 0.37", "96.0716, 20.3995, -32.0602, 0.37", "96.1691, 20.3985, -32.0773, 0.37", "97.3518, 20.3472, -32.3957, 0.37", "99.3463, 20.2343, -33.0831, 1.03", "100.179, 20.1599, -33.3692, 1.92", "100.623, 20.1099, -33.5164, 0.29", "101.465, 20.0009, -33.8207, 0.29", "101.595, 19.9861, -33.8681, 0.29", "102.58, 19.8962, -34.1983, 0.29", "103.202, 19.8095, -34.3407, 0.74", "103.279, 19.7966, -34.3617, 0.74", "104.511, 19.587, -34.6988, 0.74", "104.578, 19.5753, -34.7161, 0.74", "105.22, 19.4655, -34.8497, 0.22", "106.06, 19.3274, -34.9845, 0.22", "106.207, 19.306, -34.9667, 0.22", "106.866, 19.2115, -34.729, 0.96", "107.192, 19.1675, -34.5592, 0.96", "107.827, 19.0911, -34.2071, 0.96", "107.887, 19.0848, -34.1721, 0.96", "109.818, 18.9181, -33.0404, 0.37", "109.91, 18.9095, -32.988, 0.37", "111.434, 18.7534, -32.2165, 0.37", "111.498, 18.7466, -32.1881, 0.37", "112.057, 18.6873, -31.993, 0.59", "112.272, 18.6673, -31.9484, 0.22", "112.342, 18.6627, -31.9435, 0.22", "113.374, 18.6323, -31.7995, 0.22", "113.442, 18.6322, -31.787, 0.22", "113.875, 18.6285, -31.7084, 0.44", "114.103, 18.618, -31.6701, 0.44", "115.088, 18.5336, -31.5148, 0.22", "117.337, 18.2743, -31.2161, 0.22", "118.001, 18.1787, -31.1427, 1.03", "118.665, 18.0687, -31.0836, 0.22", "119.99, 17.812, -30.9922, 0.22", "120.353, 17.732, -30.9797, 0.22", "122.165, 17.3115, -30.9888, 0.22", "124.353, 16.7659, -31.0179, 0.22", "125.461, 16.4982, -31.0398, 1.18", "126.422, 16.2775, -31.0646, 1.18", "127.076, 16.142, -31.0852, 0.15", "129.252, 15.7221, -31.1653, 0.15", "129.331, 15.7076, -31.1689, 0.52", "129.914, 15.6147, -31.1999, 0.15", "130.052, 15.5966, -31.2085, 0.15", "131.905, 15.4294, -31.3217, 0.15", "132.418, 15.3931, -31.3489, 0.96", "133.155, 15.3517, -31.4008, 0.96", "133.374, 15.3421, -31.4178, 0.96", "134.042, 15.3309, -31.4745, 0.15", "135.587, 15.387, -31.6144, 0.15", "135.666, 15.396, -31.6226, 0.15", "135.96, 15.4446, -31.6467, 0.81", "136.028, 15.4592, -31.6505, 0.81", "136.743, 15.6346, -31.6578, 0.81", "137.239, 15.7809, -31.6324, 0.81", "137.306, 15.8015, -31.6289, 0.81", "137.832, 15.9522, -31.6052, 0.15", "137.909, 15.9739, -31.6021, 0.15", "138.762, 16.2128, -31.5709, 0.15", "138.865, 16.2411, -31.5619, 0.15", "140.591, 16.7217, -31.3448, 0.15", "140.966, 16.8367, -31.2872, 0.44", "141.166, 16.9039, -31.2524, 0.44", "141.31, 16.9584, -31.2233, 0.44", "142.113, 17.297, -31.0312, 0.15", "142.319, 17.3881, -30.9744, 0.15", "142.797, 17.6364, -30.7899, 0.15", "143.193, 17.8371, -30.6387, 0.88", "143.652, 18.0561, -30.4839, 0.88", "143.786, 18.1171, -30.4519, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-56.6171, 57.6812, 58.5366, 0.37", "-61.8436, 59.8683, 66.8037, 0.37", "-66.6676, 62.204, 75.276, 0.37", "-71.3639, 63.873, 83.9604, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-56.6171, 57.6812, 58.5366, 0.29", "-64.6381, 60.5382, 63.8527, 0.37", "-73.7866, 63.0023, 67.1385, 0.37", "-82.4601, 66.6693, 70.6844, 0.37", "-90.8336, 72.1756, 72.2289, 0.37", "-98.9437, 78.2975, 72.7099, 0.37", "-106.008, 85.5834, 74.1012, 0.37", "-112.298, 93.1402, 77.0423, 0.37", "-117.139, 101.988, 79.3989, 0.37", "-122.517, 109.874, 83.2289, 0.37", "-126.243, 119.287, 85.629, 0.37", "-128.585, 128.725, 89.3323, 0.37", "-131.33, 137.479, 94.1241, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-32.6129, 83.4004, 44.2687, 0.29", "-35.5931, 91.4679, 49.9331, 0.29", "-38.0455, 100.199, 54.9177, 0.29", "-38.6548, 108.914, 60.4624, 0.29", "-38.6395, 117.364, 66.3984, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-32.6129, 83.4004, 44.2687, 0.74", "-36.6221, 91.0762, 49.7901, 0.29", "-40.9094, 97.9717, 55.9943, 0.29", "-45.499, 105.004, 61.8324, 0.29", "-49.6934, 111.286, 68.6593, 0.29", "-54.8772, 116.85, 75.3716, 0.29", "-60.0377, 122.105, 82.3226, 0.29", "-64.9438, 127.17, 89.5797, 0.29", "-70.398, 133.677, 95.2231, 0.29", "-75.2244, 140.674, 100.907, 0.29", "-80.802, 146.678, 106.923, 0.29", "-85.4443, 152.707, 113.667, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "48.2968, -50.1849, 4.88767, 0.59", "49.3459, -50.3232, 5.02189, 0.59", "49.5559, -50.3474, 5.04081, 0.59", "49.9519, -50.3908, 5.07148, 0.59", "51.064, -50.556, 5.16117, 0.44", "51.9428, -50.7026, 5.23298, 0.44", "53.0401, -50.935, 5.26982, 0.81", "53.9453, -51.1843, 5.24731, 0.52", "54.011, -51.2095, 5.24532, 0.52", "54.9778, -51.6848, 5.16013, 0.22", "55.0472, -51.7255, 5.15043, 0.22", "56.1256, -52.517, 4.94735, 0.52", "57.0046, -53.289, 4.74451, 0.44", "57.9438, -54.2008, 4.49979, 0.44", "58.7924, -55.0685, 4.26368, 0.22", "58.8956, -55.1783, 4.23307, 0.22", "59.3024, -55.6196, 4.12195, 0.22", "59.5554, -55.8942, 4.1111, 0.22", "60.0503, -56.4405, 4.23068, 0.22", "60.1013, -56.4953, 4.26352, 0.22", "60.4755, -56.9114, 4.5788, 1.03", "60.5154, -56.9596, 4.61352, 1.03", "61.5772, -58.3557, 5.57884, 0.22", "62.0955, -59.1162, 6.07499, 0.22", "62.128, -59.1681, 6.11244, 0.22", "62.5151, -59.7716, 6.53947, 0.37", "62.7985, -60.1954, 6.86325, 0.59", "63.0579, -60.5365, 7.11819, 0.59", "63.1004, -60.5847, 7.14953, 0.59", "63.9515, -61.386, 7.77279, 0.22", "64.6136, -61.9362, 8.23746, 0.22", "65.3062, -62.4464, 8.71326, 0.74", "65.8159, -62.7911, 9.04516, 0.74", "66.4815, -63.253, 9.42875, 0.74", "66.5326, -63.2979, 9.45027, 0.74", "67.0034, -63.785, 9.5678, 0.37", "67.1019, -63.9027, 9.58212, 0.22", "67.1468, -63.9591, 9.58302, 0.22", "67.7343, -64.7277, 9.57428, 0.22", "68.8833, -66.2692, 9.52209, 0.22", "68.9293, -66.3246, 9.51936, 0.22", "69.4395, -66.8981, 9.4805, 0.59", "69.9495, -67.4538, 9.4415, 1.03", "70.464, -67.993, 9.40192, 0.44", "70.7059, -68.2223, 9.38331, 0.22", "72.3523, -69.536, 9.27204, 0.22", "72.4082, -69.5801, 9.26939, 0.22", "81.2953, -74.3922, 9.39781, 0.22", "89.0221, -81.0485, 9.06623, 0.22", "97.4465, -86.3864, 7.28154, 0.22", "105.267, -92.8533, 6.32213, 0.22", "112.297, -100.299, 5.79286, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "48.2968, -50.1849, 4.88767, 0.88", "48.4477, -50.7715, 4.83064, 0.88", "48.673, -51.9847, 4.73466, 0.66", "48.6844, -52.057, 4.72949, 0.66", "48.874, -53.1278, 4.66186, 0.66", "49.143, -54.5713, 4.57721, 0.59", "49.3073, -55.4028, 4.49473, 0.81", "49.5227, -56.4678, 4.37764, 0.81", "49.5562, -56.6193, 4.35389, 0.81", "49.8111, -57.6544, 4.1573, 0.52", "49.8335, -57.722, 4.14102, 0.52", "50.4465, -58.5369, 3.88241, 0.37", "50.5218, -58.5996, 3.85883, 0.37", "51.1754, -58.9645, 3.70215, 0.37", "51.5643, -59.1411, 3.62591, 0.37", "52.3362, -59.4308, 3.51376, 0.37", "53.7117, -59.9398, 3.27652, 0.22", "53.8667, -59.9964, 3.25434, 0.22", "54.7063, -60.3657, 3.11636, 0.81", "54.8406, -60.4307, 3.0912, 0.81", "55.4749, -60.851, 2.99158, 1.18", "56.4926, -61.7746, 2.89181, 0.88", "56.863, -62.2262, 2.88582, 0.29", "57.6978, -63.417, 2.944, 0.29", "57.748, -63.5054, 2.9577, 0.29", "58.541, -65.0515, 3.28141, 0.29", "58.837, -65.6807, 3.40204, 0.81", "59.2201, -66.5113, 3.55719, 0.81", "59.5803, -67.3106, 3.6935, 0.81", "60.2985, -68.9006, 3.95857, 0.44", "60.7841, -69.991, 4.11307, 0.44", "61.3904, -71.3548, 4.22145, 1.11", "61.6567, -71.9253, 4.239, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "108.851, -41.252, 63.5728, 0.29", "114.378, -42.4068, 71.8336, 0.29", "118.597, -44.7384, 80.6238, 0.29", "121.843, -48.9837, 89.1749, 0.29", "123.303, -55.2793, 97.0437, 0.29", "125.876, -60.9547, 105.054, 0.29", "126.737, -67.109, 113.111, 0.29", "126.766, -73.1411, 121.296, 0.29", "127.08, -80.9988, 127.921, 0.29", "128.821, -88.5233, 134.675, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "108.851, -41.252, 63.5728, 0.74", "118.323, -42.3344, 66.6092, 0.29", "127.44, -41.8845, 70.6955, 0.29", "136.937, -39.6318, 72.9749, 0.29", "146.113, -37.4567, 76.3686, 0.29", "155.87, -37.0353, 78.5221, 0.29", "165.167, -35.0073, 81.6582, 0.29", "174.217, -30.9655, 83.4701, 0.29", "182.682, -26.5287, 86.7073, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "40.4216, -79.2876, 62.0687, 0.37", "40.7246, -79.6661, 62.1956, 0.37", "41.2918, -80.46, 62.6225, 0.37", "41.9008, -81.5729, 63.3426, 0.22", "41.9239, -81.6299, 63.3803, 0.22", "42.3041, -83.321, 64.4238, 0.52", "42.3856, -83.9374, 64.7881, 0.52", "42.3321, -85.088, 65.4697, 0.37", "42.0498, -86.2598, 66.0782, 0.22", "41.7904, -86.9791, 66.3825, 0.22", "41.1716, -88.3166, 66.7425, 0.22", "41.1346, -88.3785, 66.7508, 0.22", "40.6513, -89.0908, 66.799, 0.22", "39.4732, -90.7022, 66.8678, 0.22", "38.9594, -91.4371, 66.8964, 0.22", "38.0116, -92.9445, 66.9439, 0.22", "36.6749, -95.2881, 67.0078, 0.15", "35.6297, -97.288, 67.0575, 0.15", "34.3436, -99.9723, 67.0838, 0.15", "33.2058, -102.473, 67.0799, 0.15", "31.6718, -106.058, 67.0692, 0.15", "31.2037, -107.304, 67.057, 0.59", "30.821, -108.542, 67.0246, 0.59", "30.5278, -109.707, 66.9751, 0.29", "30.4103, -110.385, 66.9037, 0.29", "28.4328, -120.606, 68.0562, 0.29", "25.7964, -130.253, 70.9942, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "40.4216, -79.2876, 62.0687, 0.59", "40.7744, -79.5192, 62.1572, 0.59", "41.7471, -80.2383, 62.5665, 0.22", "42.2283, -80.5751, 62.7028, 0.22", "44.0142, -81.8116, 63.1412, 0.22", "44.073, -81.8509, 63.1484, 0.22", "45.6143, -82.8819, 63.3358, 0.22", "47.387, -84.1096, 63.5811, 0.22", "49.6441, -85.761, 63.9536, 0.22", "49.7012, -85.8028, 63.9604, 0.22", "51.6246, -87.0762, 63.949, 0.22", "60.4345, -91.9181, 65.0076, 0.22", "69.2984, -95.8176, 67.7713, 0.22", "78.7481, -99.1616, 68.5208, 0.22", "88.6349, -100.73, 68.6482, 0.22", "97.9867, -104.449, 68.6254, 0.22", "107.63, -106.695, 70.1879, 0.22", "117.303, -109.021, 71.4205, 0.22", "127.087, -110.649, 72.787, 0.22", "136.618, -110.507, 75.8121, 0.22", "145.91, -111.258, 79.4372, 0.22", "155.561, -111.262, 82.0577, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.0183, -30.6741, -13.2554, 0.96", "-13.4899, -32.9338, -19.4706, 0.96", "-13.6123, -33.5205, -21.0843, 0.96", "-13.6189, -33.5521, -21.1712, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.0183, -30.6741, -13.2554, 1.4", "-13.4261, -30.8206, -13.2376, 1.4", "-14.7812, -31.3062, -13.1467, 1.03", "-14.8753, -31.3401, -13.1366, 1.03", "-16.0444, -31.7789, -12.9965, 0.59", "-17.2724, -32.2961, -12.7679, 0.59", "-18.5511, -32.8871, -12.5337, 0.66", "-18.6212, -32.9249, -12.5201, 0.66", "-19.935, -33.7402, -12.2442, 0.66", "-20.9546, -34.4571, -12.0427, 0.44", "-22.3049, -35.55, -11.7818, 0.44", "-23.0559, -36.2439, -11.6565, 0.66", "-24.0435, -37.191, -11.5316, 0.66", "-24.1729, -37.2986, -11.52, 0.66", "-25.3699, -38.0633, -11.4687, 0.66", "-25.4691, -38.1021, -11.4598, 0.66", "-26.4283, -38.2807, -11.3519, 0.66", "-27.6617, -38.3678, -11.1198, 0.88", "-29.3386, -38.3877, -10.7646, 1.03", "-30.7185, -38.3733, -10.4514, 0.74", "-32.4934, -38.3687, -10.0186, 0.66", "-34.1333, -38.4052, -9.60533, 0.66", "-35.1662, -38.483, -9.32064, 0.66", "-36.6613, -38.7244, -8.85101, 0.66", "-36.7256, -38.7432, -8.82959, 0.66", "-38.3871, -39.4385, -8.27421, 0.66", "-38.4568, -39.4738, -8.25377, 0.66", "-39.8378, -40.1959, -7.86739, 0.66", "-39.8995, -40.2268, -7.85256, 0.66", "-41.3578, -40.8771, -7.52143, 0.66", "-41.5914, -40.9657, -7.47889, 1.03", "-42.4361, -41.2087, -7.37481, 0.52", "-43.8104, -41.5535, -7.26471, 0.52", "-43.8785, -41.5695, -7.25999, 0.52", "-44.6826, -41.7745, -7.20097, 0.66", "-45.7167, -42.0514, -7.12365, 0.66", "-46.7816, -42.3787, -7.04781, 1.4", "-47.4397, -42.6102, -6.9999, 0.81", "-48.7756, -43.1088, -6.91551, 0.52", "-50.011, -43.5805, -6.8297, 0.37", "-51.0746, -43.9954, -6.74747, 0.81", "-51.9355, -44.359, -6.67714, 0.96", "-52.8707, -44.7776, -6.60137, 0.96", "-54.1153, -45.3496, -6.51331, 0.66", "-55.1225, -45.8165, -6.4637, 0.66", "-55.2131, -45.8604, -6.45785, 0.66", "-56.7446, -46.6192, -6.34891, 0.66", "-56.8074, -46.6515, -6.34661, 0.66", "-57.9657, -47.3146, -6.34535, 0.66", "-59.5234, -48.3015, -6.39644, 0.66", "-60.7474, -49.1137, -6.4876, 0.66", "-60.797, -49.1489, -6.49154, 0.66", "-61.9009, -49.9708, -6.56995, 0.66", "-63.0466, -50.8555, -6.62106, 0.66", "-63.5932, -51.2686, -6.62715, 0.44", "-63.6514, -51.3094, -6.62551, 0.44", "-64.2553, -51.6615, -6.63014, 0.44", "-65.0136, -51.9912, -6.66513, 0.44", "-66.0268, -52.2778, -6.78384, 0.88", "-67.3834, -52.5244, -7.05007, 0.96", "-67.9509, -52.6045, -7.19223, 0.96", "-69.3233, -52.7739, -7.62126, 0.44", "-70.5848, -52.9022, -8.10323, 0.44", "-71.7656, -53.0405, -8.61974, 0.44", "-72.6363, -53.1522, -9.03775, 0.44", "-72.698, -53.1645, -9.06874, 0.44", "-73.4032, -53.367, -9.40337, 0.66", "-73.4642, -53.3942, -9.42578, 0.66", "-74.2784, -53.8863, -9.72173, 0.66", "-74.3427, -53.9315, -9.74198, 0.66", "-75.0028, -54.4043, -9.97546, 0.52", "-75.7095, -54.863, -10.251, 0.29", "-76.611, -55.3619, -10.639, 0.29", "-77.4162, -55.759, -11.0154, 0.96", "-78.3595, -56.1547, -11.4579, 0.96", "-79.4349, -56.554, -11.8959, 0.88", "-80.6011, -56.9213, -12.2982, 0.74", "-82.1837, -57.3377, -12.7159, 0.52", "-82.2417, -57.3497, -12.7266, 0.52", "-83.648, -57.5976, -12.8556, 0.52", "-84.8983, -57.7726, -12.8797, 0.96", "-85.9289, -57.915, -12.792, 1.18", "-87.0018, -58.0958, -12.5943, 0.59", "-87.4605, -58.1955, -12.4766, 0.29", "-87.8418, -58.2916, -12.4011, 0.15", "-87.9185, -58.3146, -12.3954, 0.29", "-88.4609, -58.4858, -12.4937, 0.29", "-88.8491, -58.5884, -12.6117, 0.29", "-89.3397, -58.6809, -12.8567, 0.29", "-90.2268, -58.7764, -13.3365, 0.29", "-90.8781, -58.8038, -13.6706, 0.44", "-91.7237, -58.8032, -14.0871, 0.96", "-92.5646, -58.7838, -14.4756, 1.33", "-93.8778, -58.7487, -14.9976, 1.33", "-94.7282, -58.749, -15.2695, 0.52", "-95.6526, -58.8012, -15.4827, 0.22", "-95.7307, -58.8126, -15.4964, 0.22", "-96.5416, -59.0328, -15.6238, 0.22", "-97.2096, -59.2879, -15.7227, 0.52", "-97.8815, -59.594, -15.7948, 0.88", "-97.9445, -59.6243, -15.8052, 0.88", "-98.5944, -59.9368, -15.9448, 0.88", "-99.9341, -60.5173, -16.2303, 0.22", "-99.9985, -60.5422, -16.2447, 0.22", "-101.087, -60.9214, -16.4553, 0.22", "-101.672, -61.1075, -16.5593, 0.22", "-101.73, -61.1248, -16.5681, 0.22", "-102.604, -61.4053, -16.6812, 0.22", "-102.909, -61.5248, -16.7073, 0.22", "-104.344, -62.1633, -16.8525, 0.22", "-105.113, -62.5645, -16.9426, 1.25", "-105.173, -62.602, -16.9494, 1.25", "-106.056, -63.2022, -17.052, 1.62", "-106.809, -63.7694, -17.1603, 1.62", "-107.584, -64.4004, -17.2673, 0.22", "-107.93, -64.7183, -17.3092, 0.22", "-109.315, -66.105, -17.4326, 0.22", "-109.42, -66.2168, -17.4413, 0.22", "-109.933, -66.788, -17.48, 0.22", "-110.491, -67.4271, -17.5206, 0.96", "-111.308, -68.3781, -17.5752, 0.96", "-111.936, -69.0335, -17.6109, 0.15", "-112.548, -69.617, -17.6385, 0.15", "-112.611, -69.6685, -17.6384, 0.15", "-113.635, -70.3701, -17.59, 0.15", "-113.812, -70.4789, -17.5783, 0.15", "-114.725, -70.9843, -17.5509, 0.15", "-114.788, -71.0179, -17.551, 0.15", "-115.974, -71.6666, -17.5872, 0.15", "-116.338, -71.8788, -17.6072, 0.88", "-117.132, -72.3631, -17.6727, 1.11", "-117.922, -72.8693, -17.7295, 0.66", "-118.28, -73.1173, -17.7596, 0.22", "-118.778, -73.4457, -17.8044, 0.15", "-118.838, -73.483, -17.8109, 0.15", "-119.573, -73.9067, -17.8566, 0.15", "-120.18, -74.2175, -17.8605, 0.15", "-120.636, -74.4494, -17.8383, 0.37", "-120.976, -74.6186, -17.8254, 0.15", "-121.117, -74.6894, -17.8268, 0.15", "-121.912, -75.1139, -17.8641, 0.15", "-122.651, -75.5263, -17.9247, 0.15", "-123.045, -75.7416, -17.967, 0.81", "-123.851, -76.169, -18.0496, 0.81", "-124.517, -76.4867, -18.1147, 0.22", "-125.273, -76.8082, -18.1855, 0.22", "-125.412, -76.863, -18.2019, 0.22", "-126.181, -77.1996, -18.3027, 0.22", "-126.245, -77.2293, -18.3113, 0.22", "-127.553, -77.9144, -18.4862, 0.22", "-127.681, -77.9883, -18.5192, 0.22", "-128.419, -78.5072, -19.0865, 0.22", "-128.964, -78.9637, -19.6759, 0.22", "-129.035, -79.0255, -19.7808, 0.22", "-129.342, -79.2887, -20.2701, 0.96", "-130.236, -80.033, -21.7137, 0.66", "-131.706, -81.1077, -24.0211, 0.22", "-132.242, -81.4591, -24.7988, 0.22", "-133.561, -82.2948, -26.5178, 0.52", "-134.022, -82.585, -27.0433, 0.96", "-134.8, -83.0499, -27.7821, 0.96", "-135.782, -83.621, -28.4207, 0.15", "-136.817, -84.2122, -28.8311, 0.22", "-137.884, -84.822, -29.1411, 0.22", "-138.198, -85.0119, -29.1772, 0.22", "-138.654, -85.2865, -29.1865, 0.44", "-139.222, -85.666, -29.1136, 0.74", "-139.279, -85.7056, -29.0974, 0.74", "-139.845, -86.0606, -28.9789, 0.74", "-139.905, -86.0962, -28.9692, 0.74", "-140.869, -86.7093, -28.8539, 0.22", "-141.922, -87.3946, -28.8104, 0.22", "-141.982, -87.4332, -28.8104, 0.22", "-143.022, -88.0598, -28.841, 0.22", "-143.714, -88.4646, -28.878, 0.22", "-143.847, -88.5369, -28.8876, 0.22", "-145.73, -89.4963, -29.129, 0.22", "-145.889, -89.573, -29.1492, 0.22", "-147.758, -90.5104, -29.2598, 0.22", "-148.044, -90.6582, -29.2595, 0.22", "-148.875, -91.0883, -29.2391, 0.52", "-149.757, -91.5306, -29.1968, 1.33", "-150.624, -91.9488, -29.1287, 1.55", "-152.18, -92.6513, -28.9841, 0.37", "-152.657, -92.8518, -28.9255, 0.22", "-152.99, -92.9884, -28.8826, 0.22", "-154.079, -93.4505, -28.743, 0.22", "-154.215, -93.5105, -28.7171, 0.22", "-154.756, -93.7524, -28.6318, 0.22", "-154.845, -93.797, -28.6271, 0.22", "-155.283, -94.058, -28.5719, 0.59", "-155.863, -94.414, -28.4836, 0.59", "-156.667, -94.9545, -28.3389, 0.22", "-156.808, -95.0413, -28.3147, 0.22", "-157.266, -95.3021, -28.2374, 0.22", "-157.663, -95.5121, -28.1823, 0.22", "-158.952, -96.14, -28.0291, 0.22", "-159.161, -96.2396, -28.0035, 0.66", "-159.498, -96.3978, -27.9748, 0.22", "-159.561, -96.4267, -27.9656, 0.22", "-160.656, -96.9104, -27.7531, 0.22", "-160.745, -96.9494, -27.7324, 0.22", "-161.386, -97.209, -27.5695, 0.66", "-162.21, -97.5021, -27.3695, 0.66", "-163.033, -97.8246, -27.1859, 0.22", "-163.098, -97.85, -27.1726, 0.22", "-163.753, -98.0901, -27.1289, 0.22", "-164.385, -98.3063, -27.1597, 0.22", "-164.6, -98.3737, -27.2087, 0.22", "-166.422, -98.9147, -27.8297, 0.22", "-166.494, -98.9347, -27.8599, 0.22", "-168.154, -99.3508, -28.5992, 0.15", "-168.814, -99.5116, -28.9081, 1.11", "-169.958, -99.7653, -29.6036, 0.44", "-170.431, -99.8543, -29.9774, 0.44", "-170.541, -99.8773, -30.0769, 0.44", "-171.464, -100.106, -30.9416, 0.44", "-172.016, -100.271, -31.5502, 0.81", "-174.112, -101.01, -34.0323, 0.22", "-175.786, -101.655, -36.0772, 0.74", "-176.355, -101.898, -36.7754, 0.74", "-176.404, -101.921, -36.8348, 0.74", "-178.405, -103.006, -39.4597, 0.22", "-179.195, -103.474, -40.5097, 0.22", "-179.338, -103.571, -40.6701, 0.22", "-180.249, -104.23, -41.555, 0.22", "-180.63, -104.493, -41.8811, 0.88", "-182.375, -105.72, -43.2291, 0.22", "-182.498, -105.81, -43.3005, 0.22", "-184.003, -106.929, -44.3126, 0.22", "-184.271, -107.125, -44.5, 0.81", "-184.909, -107.569, -44.9694, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.1323, -34.5373, 0.898184, 0.29", "-8.58073, -35.1229, -4.43547, 0.29", "-8.26264, -35.1484, -5.23817, 0.44", "-8.22883, -35.1434, -5.29928, 0.44", "-7.41705, -34.9494, -6.51627, 0.44", "-8.29465, -35.234, -5.40103, 0.44", "-8.37825, -35.265, -5.30595, 0.44", "-9.55991, -35.8625, -4.25197, 0.44", "-10.2764, -36.2165, -3.68738, 0.44", "-10.328, -36.2467, -3.64981, 0.44", "-10.7498, -36.5437, -3.39714, 0.66", "-10.7946, -36.5939, -3.37227, 0.66", "-11.2886, -37.2992, -3.14672, 0.66", "-11.3214, -37.3629, -3.1349, 0.66", "-11.7638, -38.2222, -2.96922, 0.44", "-11.7974, -38.2853, -2.95656, 0.44", "-12.2627, -39.1787, -2.7533, 0.44", "-12.2961, -39.2414, -2.73817, 0.44", "-12.7371, -40.1193, -2.53593, 0.44", "-13.023, -40.73, -2.35256, 0.74", "-13.312, -41.3737, -2.04256, 0.74", "-13.706, -42.2443, -1.53993, 0.59", "-13.735, -42.3089, -1.4979, 0.59", "-14.2776, -43.4584, -0.64935, 0.59", "-14.8219, -44.4934, 0.309368, 0.81", "-15.6808, -45.8313, 1.87042, 0.52", "-16.1902, -46.5048, 2.76506, 0.52", "-16.2251, -46.5476, 2.82443, 0.52", "-17.0529, -47.5918, 4.22602, 0.52", "-17.8283, -48.6265, 5.50344, 0.74", "-18.4757, -49.5821, 6.50322, 0.52", "-18.824, -50.1521, 7.00699, 0.52", "-19.2974, -50.9641, 7.70307, 0.52", "-20.0662, -52.1405, 8.64701, 0.52", "-20.8499, -53.1196, 9.33117, 0.81", "-20.8959, -53.1789, 9.36433, 0.81", "-21.2917, -53.6603, 9.62, 0.74", "-22.4045, -54.6285, 10.2791, 0.59", "-23.6898, -55.182, 10.8856, 0.81", "-24.8726, -55.3066, 11.3297, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.1323, -34.5373, 0.898184, 0.74", "-10.1349, -34.7035, 0.860082, 0.74", "-10.186, -35.4471, 0.672691, 1.18", "-10.2964, -36.6493, 0.359888, 1.03", "-10.4611, -38.5219, -0.120779, 0.74", "-10.6064, -40.0743, -0.562231, 0.66", "-10.7943, -41.8969, -1.08572, 0.66", "-10.8792, -42.5548, -1.31765, 1.03", "-10.8991, -42.689, -1.37125, 1.03", "-11.0059, -43.4676, -1.6895, 0.81", "-11.1115, -44.8102, -2.15024, 0.81", "-11.1396, -46.3158, -2.55633, 0.81", "-11.0673, -48.179, -2.95702, 0.52", "-10.967, -49.4678, -3.16547, 0.74", "-10.7788, -51.4509, -3.29422, 1.03", "-10.536, -53.6243, -3.2322, 0.96", "-10.5254, -53.707, -3.22304, 0.96", "-10.3745, -54.8741, -3.03834, 1.18", "-10.1641, -56.6312, -2.68852, 1.03", "-9.92962, -59.1193, -2.19329, 1.03", "-9.81182, -60.9687, -1.83232, 0.96", "-9.72927, -62.5131, -1.56453, 0.81", "-9.66427, -63.6599, -1.37622, 1.03", "-9.57516, -64.4855, -1.25842, 0.74", "-9.43266, -65.3181, -1.17528, 0.59", "-9.41372, -65.3887, -1.17, 0.59", "-8.9803, -66.6406, -1.0506, 0.59", "-8.92236, -66.7841, -1.02895, 0.59", "-7.79526, -69.554, -0.401661, 0.59", "-7.77345, -69.6209, -0.382566, 0.59", "-7.28386, -71.3945, 0.186049, 0.59", "-7.25626, -71.5401, 0.236353, 0.59", "-7.1784, -72.5204, 0.598655, 1.03", "-7.11014, -74.7686, 1.46757, 0.81", "-7.27849, -77.363, 2.54467, 0.81", "-7.28356, -77.4208, 2.56809, 0.81", "-7.4593, -78.7178, 3.06469, 1.55", "-7.59495, -79.6366, 3.40387, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "0.864867, 127.153, 54.5231, 0.37", "-7.12648, 132.631, 57.5086, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.864867, 127.153, 54.5231, 0.29", "-0.527934, 132.565, 62.9784, 0.37", "-2.58153, 138.727, 70.8102, 0.37", "-4.71628, 143.543, 79.4362, 0.37", "-7.67167, 149.46, 87.1507, 0.37", "-10.0471, 156.093, 94.5296, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "29.8478, 54.2104, -113.386, 0.22", "31.4723, 55.8326, -114.877, 0.22", "32.7362, 57.1251, -116.021, 0.22", "32.7977, 57.1875, -116.084, 0.22", "34.5023, 58.9543, -117.851, 0.22", "34.9815, 59.5038, -118.338, 1.03", "35.24, 59.8183, -118.639, 1.03", "35.2699, 59.8595, -118.673, 1.03", "36.041, 61.1273, -119.873, 0.22", "36.5658, 62.0431, -120.784, 0.22", "37.0875, 63.1259, -121.831, 0.22", "37.7809, 64.8794, -123.62, 0.22", "38.0918, 66.0242, -124.645, 0.22", "38.4458, 67.9902, -126.471, 0.22", "38.4514, 68.0426, -126.519, 0.22", "38.4473, 69.2442, -127.575, 0.22", "38.2719, 71.5795, -129.316, 0.22", "37.9924, 74.2311, -131.161, 0.22", "37.5734, 77.6218, -133.51, 0.22", "37.5464, 77.889, -133.684, 0.44", "37.2219, 82.0104, -136.32, 0.15", "37.1389, 85.0319, -138.139, 0.15", "37.2271, 89.2133, -140.379, 0.15", "37.2342, 89.3048, -140.426, 0.15", "37.4459, 91.1415, -141.21, 0.15", "37.4634, 91.2415, -141.254, 0.15", "38.4089, 93.7079, -142.404, 0.15", "38.4939, 93.8492, -142.464, 0.15", "39.1267, 94.7137, -142.499, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "29.8478, 54.2104, -113.386, 0.22", "29.1614, 56.2998, -114.183, 0.22", "28.7394, 57.6429, -114.598, 0.22", "28.673, 57.8579, -114.681, 0.22", "28.163, 59.8893, -115.476, 0.22", "28.0577, 60.5009, -115.691, 0.66", "27.9698, 61.1534, -115.911, 0.22", "27.8933, 62.5346, -116.289, 0.22", "27.9352, 64.5202, -116.84, 0.22", "28.1562, 66.2635, -117.299, 0.22", "28.5751, 68.3657, -117.837, 0.22", "28.5918, 68.4346, -117.854, 0.22", "28.9113, 69.5516, -118.126, 0.22", "28.9361, 69.6188, -118.139, 0.22", "30.0579, 72.2318, -118.323, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-38.6395, 117.364, 66.3984, 0.37", "-40.1851, 125.919, 71.9862, 0.37", "-41.2865, 134.634, 77.4535, 0.37", "-42.1652, 142.198, 84.3339, 0.37", "-41.6644, 150.653, 90.2416, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-38.6395, 117.364, 66.3984, 0.29", "-40.1223, 125.943, 71.9697, 0.37", "-40.5088, 134.38, 77.9102, 0.37", "-40.475, 143.448, 82.9517, 0.37", "-39.2064, 152.492, 87.8704, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "61.6567, -71.9253, 4.239, 0.74", "61.2196, -72.9573, 4.89307, 0.74", "60.8785, -73.9495, 5.23871, 0.59", "60.543, -74.9255, 5.57877, 0.59", "60.5237, -74.9816, 5.59829, 0.59", "60.0262, -76.4289, 6.10252, 0.59", "60.0037, -76.4943, 6.12529, 0.59", "59.1912, -78.8499, 7.16003, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "61.6567, -71.9253, 4.239, 1.11", "61.9311, -72.2551, 4.05439, 1.11", "62.8169, -73.382, 3.56618, 0.52", "62.9073, -73.5114, 3.53268, 0.52", "63.5368, -74.576, 3.34878, 0.52", "63.57, -74.6388, 3.33403, 0.52", "64.1768, -75.8533, 3.01248, 0.74", "64.2088, -75.928, 2.9948, 0.74", "64.8015, -77.5358, 2.69217, 0.74", "65.1307, -78.6138, 2.46294, 0.74", "65.4321, -79.8335, 2.17546, 0.29", "65.4464, -79.9032, 2.15853, 0.29", "65.5112, -80.2628, 2.04459, 0.29", "65.5266, -80.3401, 2.01731, 0.29", "65.7206, -81.2521, 1.65268, 0.29", "65.9352, -82.023, 1.36166, 0.52", "65.9558, -82.0897, 1.34064, 0.52", "66.3994, -83.464, 0.896758, 0.52", "66.6996, -84.4556, 0.579541, 0.52", "66.7159, -84.5132, 0.561283, 0.52", "66.8282, -84.9906, 0.410761, 0.22", "66.899, -85.4162, 0.286061, 0.22", "66.9087, -85.4951, 0.260238, 0.22", "66.9898, -86.4318, -0.0421018, 0.22", "67.0043, -86.5118, -0.061751, 0.22", "67.4254, -87.8939, -0.211174, 0.22", "67.4847, -88.0459, -0.21407, 0.22", "68.0406, -89.2661, -0.166045, 0.81", "68.3709, -89.9074, -0.112401, 0.81", "69.3691, -91.6592, 0.10529, 0.37", "70.1816, -93.0376, 0.330126, 0.37", "70.5694, -93.6686, 0.467746, 0.44", "70.7411, -93.951, 0.536803, 0.15", "71.5392, -95.2837, 0.924964, 0.15", "71.575, -95.3446, 0.940964, 0.15", "71.6531, -95.4855, 0.96053, 0.66", "71.8093, -95.7972, 0.964296, 0.88", "71.8556, -95.889, 0.964296, 0.88", "72.1635, -96.5219, 0.964296, 0.88", "78.5794, -104.55, 0.35415, 0.88", "84.2237, -113.044, -1.28875, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.6189, -33.5521, -21.1712, 0.59", "-11.4527, -34.1646, -28.0066, 0.59", "-11.4145, -34.1815, -28.075, 0.59", "-10.3284, -34.8867, -28.7227, 0.59", "-10.2731, -34.9231, -28.7478, 0.59", "-8.92718, -35.783, -29.655, 0.59", "-8.76605, -35.8835, -29.7702, 0.59", "-6.58451, -37.3756, -30.9865, 0.59", "-5.6314, -38.0573, -31.662, 1.03", "-3.82798, -39.4964, -33.432, 0.88", "-1.97261, -41.1816, -36.0297, 0.74", "-1.64536, -41.515, -36.6407, 0.74", "-0.908961, -42.2948, -38.3168, 0.74", "-0.885844, -42.3187, -38.3788, 0.74", "-0.232049, -42.9339, -40.0607, 1.03", "0.682223, -43.8272, -42.2176, 0.29", "1.12036, -44.1439, -42.9646, 0.44", "2.01874, -44.6098, -44.0689, 0.88", "2.89281, -44.9249, -44.8178, 1.03", "3.85395, -45.2048, -45.5712, 1.03", "3.91217, -45.2152, -45.6088, 1.03", "5.59473, -45.4109, -46.595, 1.03", "6.92007, -45.5075, -47.451, 0.44", "6.97757, -45.5101, -47.4909, 0.44", "9.04916, -45.6758, -49.6801, 0.74", "9.65119, -45.8195, -50.4574, 0.74", "9.69014, -45.8364, -50.5133, 0.74", "9.93151, -45.9903, -50.8825, 0.74", "9.97182, -46.0208, -50.9452, 0.74", "11.8323, -47.7151, -53.8394, 0.88", "12.8456, -48.8174, -55.5284, 0.88", "14.0046, -50.0843, -57.531, 0.59", "14.4326, -50.5383, -58.2699, 0.88", "14.4688, -50.577, -58.3311, 0.88", "15.3195, -51.551, -59.822, 0.52", "16.2207, -52.7104, -61.5662, 0.37", "16.5835, -53.2593, -62.4424, 0.37", "16.6074, -53.2974, -62.4973, 0.37", "17.0769, -54.0037, -63.4901, 0.37", "17.9977, -55.4191, -65.2414, 0.37", "19.0688, -57.015, -67.1365, 0.37", "19.1357, -57.1095, -67.2457, 0.37", "19.8732, -58.0804, -68.5041, 0.37", "21.5208, -60.026, -71.3199, 0.37", "22.1116, -60.6281, -72.2914, 0.37", "23.1851, -61.5554, -73.8756, 0.96", "23.6926, -61.9369, -74.6203, 0.96", "25.42, -63.1558, -77.2488, 0.44", "25.4606, -63.1809, -77.3135, 0.44", "25.9494, -63.4504, -78.0298, 1.33", "26.4471, -63.7159, -78.9626, 1.33", "28.2432, -64.6981, -82.5201, 0.66", "28.3336, -64.7497, -82.7267, 0.66", "29.2167, -65.2855, -84.7871, 1.55", "29.6229, -65.5408, -85.7694, 1.55", "32.6744, -67.5008, -93.5511, 0.81", "33.0348, -67.7395, -94.5143, 1.77", "34.4858, -68.7273, -98.3996, 0.44", "35.0815, -69.15, -99.9734, 0.44", "35.1054, -69.1686, -100.036, 0.44", "35.9247, -69.8863, -102.166, 0.88", "35.9554, -69.9212, -102.232, 0.88", "36.6896, -70.8974, -103.92, 0.37", "37.1164, -71.4971, -104.768, 0.37", "37.7158, -72.3363, -105.991, 0.74", "37.9627, -72.7101, -106.597, 0.74", "38.5983, -73.7477, -108.333, 0.37", "38.6194, -73.7818, -108.391, 0.37", "38.9964, -74.4203, -109.489, 0.37", "39.5823, -75.3531, -111.137, 1.18", "41.363, -77.9858, -115.833, 0.44", "41.3865, -78.0154, -115.893, 0.44", "41.8114, -78.5023, -116.956, 0.44", "42.6006, -79.2926, -118.84, 0.44", "42.8969, -79.5485, -119.509, 0.44", "42.9949, -79.6182, -119.695, 0.44", "44.4849, -80.3934, -121.861, 0.37", "44.5247, -80.4159, -121.927, 0.37", "45.0537, -80.7162, -122.912, 0.37", "45.9044, -81.354, -124.83, 0.37", "45.9845, -81.4314, -125.041, 0.37", "46.2777, -81.7669, -125.822, 0.37", "47.2034, -82.9985, -128.301, 0.37", "47.2292, -83.0345, -128.369, 0.37", "48.3756, -84.6159, -131.196, 0.15", "49.0268, -85.4781, -132.655, 0.88", "49.3697, -85.9148, -133.358, 0.88", "49.397, -85.9516, -133.412, 0.88", "50.5331, -87.6153, -135.711, 0.29", "51.8957, -89.6706, -138.441, 0.29", "52.8361, -91.117, -140.297, 0.29", "54.1499, -93.2008, -142.947, 0.96", "55.8235, -95.8988, -146.423, 0.22", "56.7649, -97.4434, -148.402, 0.37", "57.7955, -99.193, -150.612, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.6189, -33.5521, -21.1712, 0.74", "-14.2497, -35.3109, -22.4497, 0.74", "-14.267, -35.3727, -22.4834, 0.74", "-14.4808, -36.2479, -22.8956, 0.74", "-14.8013, -37.6679, -23.4459, 0.74", "-15.1411, -38.9095, -23.8956, 0.74", "-15.1681, -38.9826, -23.9244, 0.74", "-15.6756, -40.1208, -24.2561, 0.74", "-15.7455, -40.2531, -24.2978, 0.74", "-16.315, -41.1383, -24.6065, 0.74", "-16.9087, -41.9086, -24.8717, 0.74", "-17.7499, -42.9842, -25.3602, 0.44", "-17.7842, -43.0401, -25.3899, 0.44", "-18.0518, -43.6189, -25.7892, 0.66", "-18.0672, -43.6664, -25.8255, 0.66", "-18.1953, -44.2453, -26.3398, 0.96", "-18.3719, -45.4517, -27.4542, 0.96", "-18.5011, -46.5888, -28.6223, 1.18", "-18.6981, -47.9004, -30.2686, 1.18", "-18.9458, -49.0276, -31.9156, 1.18", "-19.2643, -50.1015, -33.681, 0.96", "-19.2934, -50.1639, -33.8044, 0.96", "-19.8522, -50.8961, -35.6051, 0.88", "-20.7223, -51.6412, -37.8954, 0.44", "-21.1501, -51.859, -38.7537, 0.66", "-21.1878, -51.8712, -38.8115, 0.66", "-22.1546, -52.1295, -39.9856, 0.66", "-22.8971, -52.3391, -40.7786, 0.44", "-22.956, -52.3583, -40.8296, 0.44", "-24.2629, -52.9238, -41.829, 0.74", "-24.7734, -53.2205, -42.2678, 0.74", "-24.8158, -53.2548, -42.3129, 0.74", "-25.309, -53.875, -43.3031, 0.44", "-25.5269, -54.1757, -43.782, 0.44", "-25.6995, -54.3937, -44.1364, 0.44", "-26.1709, -54.9751, -45.0264, 0.44", "-26.9413, -55.8815, -46.4496, 0.81", "-28.5085, -57.6455, -49.2581, 0.96", "-29.3362, -58.5858, -50.716, 1.77", "-30.5145, -59.9712, -52.8384, 1.47", "-31.0256, -60.5995, -53.7391, 1.47", "-32.0243, -61.9807, -55.4691, 1.47", "-32.0474, -62.03, -55.5156, 1.47", "-32.2574, -62.7492, -56.0721, 1.55", "-32.6111, -64.599, -57.4474, 1.11", "-32.7214, -65.4455, -58.017, 0.66", "-32.9067, -66.8801, -58.9488, 0.37", "-33.1903, -69.064, -60.1717, 0.37", "-33.4533, -70.8091, -61.1358, 0.37", "-33.6747, -71.9908, -61.7733, 0.37", "-33.7024, -72.1043, -61.836, 0.37", "-33.9681, -72.8977, -62.315, 0.37", "-34.5351, -74.1242, -63.3119, 0.37", "-35.131, -75.2168, -64.1893, 0.22", "-35.3573, -75.6562, -64.512, 0.22", "-36.1681, -77.2365, -65.6219, 1.25", "-36.6719, -78.1758, -66.2547, 1.62", "-38.2627, -81.0138, -68.1707, 0.22", "-39.5695, -83.1128, -69.6153, 0.22", "-39.6043, -83.1669, -69.6474, 0.22", "-40.1567, -84.0544, -70.1069, 0.22", "-40.2016, -84.1164, -70.1368, 0.22", "-41.4796, -85.6749, -70.9871, 0.22", "-41.5734, -85.7777, -71.0512, 0.22", "-42.3088, -86.6127, -71.7169, 0.22", "-42.4354, -86.7673, -71.8365, 0.22", "-43.4848, -88.1298, -72.8167, 0.22", "-44.0287, -88.9855, -73.3387, 0.22", "-44.5636, -89.9759, -73.8517, 0.96", "-44.9085, -90.7444, -74.1978, 1.25", "-45.185, -91.4445, -74.5427, 0.52", "-45.4588, -92.1643, -74.9006, 0.15", "-46.1296, -93.9827, -75.9458, 0.15", "-46.1826, -94.1148, -76.0322, 0.15", "-46.6819, -95.2792, -76.8106, 0.15", "-47.557, -97.1442, -78.1505, 0.15", "-47.7172, -97.4608, -78.3983, 1.4", "-48.7532, -99.4337, -80.0285, 1.4", "-49.1237, -100.116, -80.6168, 0.22", "-49.5372, -100.895, -81.2893, 0.22", "-49.7839, -101.371, -81.7161, 0.22", "-50.358, -102.514, -82.6873, 0.22", "-50.384, -102.565, -82.7304, 0.22", "-50.9484, -103.663, -83.5553, 1.03", "-51.3256, -104.41, -84.1059, 1.33", "-51.8732, -105.629, -84.9152, 0.74", "-52.1534, -106.369, -85.2829, 0.22", "-52.4426, -107.244, -85.5569, 0.22", "-52.787, -108.359, -85.7423, 0.22", "-52.8092, -108.429, -85.7423, 0.22", "-53.0174, -109.008, -85.7582, 1.03", "-53.3803, -109.922, -85.7796, 0.74", "-53.7172, -110.746, -85.801, 0.74", "-54.1362, -111.728, -85.8734, 0.44", "-54.6288, -112.801, -86.0286, 0.22", "-55.7359, -115.07, -86.4297, 0.15", "-55.9452, -115.457, -86.525, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-24.8726, -55.3066, 11.3297, 0.52", "-25.1027, -55.5173, 11.2231, 0.52", "-25.7895, -56.2689, 11.2647, 0.52", "-27.0577, -57.7686, 11.7568, 0.44", "-27.6131, -58.5161, 12.0652, 0.44", "-27.652, -58.5702, 12.0922, 0.44", "-28.5884, -59.8931, 12.8064, 0.44", "-29.6153, -61.2291, 13.6779, 0.44", "-29.7407, -61.385, 13.8026, 0.44", "-30.6153, -62.3684, 14.7255, 0.44", "-31.2817, -63.0057, 15.3464, 0.44", "-31.3295, -63.0448, 15.3814, 0.44", "-32.5584, -63.8899, 16.0783, 0.44", "-33.3111, -64.3415, 16.4233, 0.37", "-33.7349, -64.5608, 16.6276, 0.37", "-34.3731, -64.8795, 16.9913, 0.66", "-35.201, -65.3208, 17.5076, 0.66", "-36.2291, -65.9212, 18.2309, 0.29", "-36.7775, -66.2987, 18.7115, 0.29", "-37.8794, -67.1528, 19.7758, 0.29", "-38.8646, -68.0293, 20.8384, 0.29", "-38.9093, -68.0705, 20.8919, 0.29", "-39.068, -68.2204, 21.1047, 0.96", "-39.6172, -68.7663, 21.861, 0.37", "-40.142, -69.3684, 22.6673, 0.37", "-40.1749, -69.4095, 22.7152, 0.37", "-41.2073, -70.5517, 24.0472, 0.37", "-41.3649, -70.7206, 24.2453, 0.74", "-41.5816, -70.9361, 24.5049, 0.29", "-42.5058, -71.7571, 25.5323, 0.29", "-43.0411, -72.2093, 26.1866, 0.29", "-49.5255, -78.4893, 30.8963, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-24.8726, -55.3066, 11.3297, 0.81", "-25.0213, -55.1538, 11.4525, 0.81", "-25.305, -54.8655, 11.698, 0.44", "-25.8009, -54.274, 12.1549, 0.44", "-26.4902, -53.4517, 12.7899, 0.44", "-27.021, -52.8186, 13.2789, 0.44", "-27.8745, -51.8005, 14.0652, 0.22", "-28.1896, -51.4145, 14.3753, 0.22", "-28.7147, -50.786, 14.9426, 0.22", "-34.5008, -44.2607, 20.2246, 0.22", "-41.9141, -39.3237, 25.0135, 0.22", "-47.667, -32.8016, 30.3354, 0.22", "-52.0242, -25.1233, 35.5832, 0.22", "-56.8729, -18.1452, 41.2685, 0.22", "-63.5005, -11.943, 45.8711, 0.22", "-70.8013, -5.80699, 49.4137, 0.22", "-79.1492, -1.27203, 52.8281, 0.22", "-87.5089, 2.45966, 57.0095, 0.22", "-95.6206, 4.66476, 62.4675, 0.22", "-103.75, 5.66071, 68.2129, 0.22", "-111.886, 6.3758, 73.9866, 0.22", "-118.737, 7.56677, 81.1819, 0.22", "-124.812, 7.35611, 89.1228, 0.22", "-130.464, 8.34817, 97.3182, 0.22", "-135.743, 10.6804, 105.516, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.59495, -79.6366, 3.40387, 0.37", "-10.8689, -79.6915, 2.55773, 0.37", "-11.0771, -79.6971, 2.51767, 0.37", "-12.3833, -79.7527, 2.32124, 0.37", "-13.2462, -79.812, 2.27564, 0.22", "-14.2455, -79.8807, 2.22282, 0.22", "-15.7179, -79.9819, 2.14501, 0.22", "-16.1121, -80.0157, 2.19474, 0.44", "-17.0714, -80.1199, 2.31345, 0.44", "-18.51, -80.3186, 2.47812, 0.22", "-28.1804, -79.3202, 0.116127, 0.22", "-37.4831, -79.6158, -3.54179, 0.22", "-47.113, -78.123, -5.83185, 0.22", "-56.8134, -76.4812, -7.69136, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.59495, -79.6366, 3.40387, 1.33", "-7.06224, -80.4152, 3.41274, 1.33", "-6.54708, -81.2674, 3.38273, 0.88", "-6.52102, -81.3241, 3.38235, 0.88", "-5.96871, -82.7954, 3.38892, 0.66", "-5.37614, -84.6651, 3.40674, 0.66", "-4.80566, -86.7245, 3.43862, 0.66", "-4.3728, -88.5494, 3.47548, 0.66", "-3.86806, -90.9959, 3.53325, 0.96", "-3.66813, -92.2089, 3.56122, 1.69", "-3.54574, -93.2819, 3.58633, 1.25", "-3.45879, -94.3795, 3.61206, 0.96", "-3.45277, -94.4527, 3.6137, 0.96", "-3.26443, -95.8985, 3.68147, 0.59", "-2.82038, -98.4014, 3.80891, 0.59", "-2.29794, -100.811, 3.96217, 0.96", "-1.70358, -103.261, 4.14154, 1.11", "-1.32956, -104.787, 4.26305, 0.74", "-0.978845, -106.214, 4.39132, 0.74", "-0.79051, -107.064, 4.46704, 0.52", "-0.564844, -108.178, 4.56948, 0.52", "-0.544385, -108.334, 4.58103, 0.52", "-0.530319, -109.865, 4.58808, 0.52", "-0.537788, -109.961, 4.58205, 0.52", "-0.73016, -111.693, 4.46054, 0.44", "-0.737375, -111.777, 4.45895, 0.44", "-0.761524, -112.57, 4.50001, 0.44", "-0.709456, -114.871, 4.70857, 0.44", "-0.704217, -114.943, 4.7197, 0.44", "-0.583944, -116.153, 4.95287, 0.88", "-0.349649, -118.265, 5.44029, 0.88", "-0.18017, -120.575, 6.01679, 0.88", "-0.178608, -120.646, 6.03558, 0.88", "-0.257268, -121.899, 6.42361, 1.25", "-0.363929, -122.774, 6.69529, 1.33", "-0.563835, -123.814, 7.01454, 0.96", "-0.92269, -125.121, 7.42891, 0.52", "-1.19636, -125.99, 7.63468, 0.52", "-1.6168, -127.331, 7.84977, 1.18", "-1.98201, -128.503, 7.94055, 1.18", "-2.00545, -128.584, 7.94307, 1.18", "-2.31843, -129.834, 7.89169, 0.96", "-2.64856, -131.352, 7.71139, 0.96", "-2.80431, -132.202, 7.55378, 1.25", "-2.91805, -133.175, 7.32322, 1.03", "-2.92201, -133.257, 7.304, 1.03", "-2.9045, -134.324, 7.06715, 0.88", "-2.80836, -135.552, 6.8703, 0.88", "-2.66903, -136.706, 6.76334, 0.59", "-2.47466, -138.16, 6.67094, 0.52", "-2.39923, -138.706, 6.65207, 0.52", "-2.37982, -138.879, 6.65233, 0.52", "-2.24302, -140.4, 6.7273, 0.52", "-2.24091, -140.504, 6.73803, 0.52", "-2.32961, -141.818, 6.93008, 0.74", "-2.33982, -141.889, 6.94053, 0.74", "-2.49036, -142.951, 7.07564, 0.81", "-2.56743, -143.566, 7.1422, 0.81", "-2.67068, -144.5, 7.21191, 0.29", "-2.74291, -145.26, 7.26552, 0.29", "-2.7479, -145.344, 7.27123, 0.29", "-2.7645, -146.424, 7.33416, 0.29", "-2.7612, -146.508, 7.33807, 0.29", "-2.64238, -147.6, 7.36724, 0.29", "-2.48754, -148.538, 7.33294, 0.29", "-2.40059, -148.979, 7.30493, 0.88", "-2.25575, -149.646, 7.2562, 0.88", "-2.2088, -149.855, 7.23984, 0.88", "-2.06173, -150.634, 7.22847, 0.59", "-1.83779, -151.871, 7.25736, 0.59", "-1.82781, -151.954, 7.26179, 0.59", "-1.68975, -153.892, 7.42913, 0.59", "-1.65487, -154.736, 7.5197, 0.29", "-1.63095, -156.57, 7.73766, 0.29", "-1.63611, -156.799, 7.76717, 0.29", "-1.73696, -158.552, 8.03738, 0.29", "-1.89807, -160.261, 8.27965, 0.37", "-2.00424, -161.012, 8.37498, 1.18", "-2.2172, -162.308, 8.51088, 1.33", "-2.4039, -163.357, 8.58117, 0.74", "-2.67791, -164.768, 8.66542, 0.52", "-2.9014, -165.84, 8.71751, 0.52", "-3.0785, -166.643, 8.73906, 0.52", "-3.09652, -166.725, 8.74041, 0.52", "-3.32614, -167.848, 8.74211, 0.52", "-3.36686, -168.075, 8.7382, 0.52", "-3.50672, -168.905, 8.7161, 0.52", "-3.60535, -169.522, 8.72012, 0.88", "-3.73833, -170.372, 8.73706, 1.03", "-3.87301, -171.296, 8.76512, 0.59", "-3.88266, -171.369, 8.76814, 0.59", "-4.01341, -172.886, 8.80144, 0.29", "-4.05357, -173.958, 8.80887, 0.29", "-4.05032, -174.054, 8.8078, 0.29", "-3.93583, -175.14, 8.77674, 0.29", "-3.90635, -175.368, 8.7524, 0.29", "-3.78305, -176.35, 8.57837, 0.29", "-3.77544, -176.42, 8.56001, 0.29", "-3.74334, -177.318, 8.29041, 0.29", "-3.74651, -177.388, 8.26996, 0.29", "-3.89468, -178.762, 7.92202, 0.29", "-3.9452, -179.078, 7.86316, 0.29", "-4.13299, -180.058, 7.72607, 0.29", "-4.23634, -180.62, 7.66388, 1.03", "-4.3692, -181.406, 7.60168, 1.47", "-4.50013, -182.405, 7.55927, 0.37", "-4.65177, -183.927, 7.58443, 0.37", "-4.65969, -184.0, 7.58654, 0.37", "-4.74455, -184.707, 7.61586, 0.81", "-4.82957, -185.315, 7.64821, 0.88", "-4.91836, -185.846, 7.67592, 0.88", "-5.13847, -187.036, 7.73719, 0.22", "-5.3672, -188.248, 7.80498, 0.22", "-5.38064, -188.33, 7.80925, 0.22", "-5.43972, -188.707, 7.82738, 0.37", "-5.53565, -189.5, 7.86032, 0.37", "-5.63827, -190.767, 7.90201, 0.29", "-5.63895, -190.851, 7.90377, 0.29", "-5.57076, -192.161, 7.92809, 0.29", "-5.55801, -192.307, 7.93263, 0.29", "-5.3699, -193.826, 7.99294, 0.22", "-5.29061, -194.361, 8.0172, 0.66", "-5.16421, -195.247, 8.06231, 0.81", "-5.07373, -195.95, 8.10243, 0.96", "-4.97591, -196.763, 8.18931, 0.37", "-4.96619, -196.835, 8.19936, 0.37", "-4.7727, -198.19, 8.40873, 0.15", "-4.70496, -198.742, 8.49318, 0.74", "-4.65041, -199.497, 8.60307, 0.74", "-4.62947, -200.704, 8.76039, 0.22", "-4.66177, -201.649, 8.86537, 0.22", "-4.73587, -202.455, 8.94615, 0.22", "-4.83195, -203.027, 8.99571, 0.59", "-5.00968, -203.798, 9.04015, 0.59", "-5.19169, -204.371, 9.05114, 0.22", "-5.26248, -204.528, 9.04704, 0.22", "-5.6304, -205.197, 9.05055, 0.22", "-5.79242, -205.476, 9.06447, 0.44", "-6.00843, -205.865, 9.09019, 0.44", "-6.0375, -205.943, 9.09629, 0.44", "-6.27623, -206.857, 9.17163, 0.22", "-6.32874, -207.156, 9.16112, 0.22", "-6.38744, -207.801, 9.0726, 0.22", "-6.39632, -207.955, 9.04337, 0.22", "-6.47339, -209.839, 8.61284, 0.22", "-6.47654, -209.939, 8.58702, 0.22", "-6.47123, -211.537, 8.11224, 0.22", "-6.45834, -213.213, 7.56693, 0.22", "-6.45361, -213.515, 7.45603, 0.52", "-6.45386, -213.582, 7.42844, 0.52", "-6.48085, -213.973, 7.21999, 0.52", "-7.76189, -224.317, 6.0793, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "59.1912, -78.8499, 7.16003, 0.44", "59.0218, -79.4227, 7.23107, 0.44", "59.0668, -79.561, 7.24594, 0.44", "59.2951, -80.1729, 7.31245, 0.44", "59.4305, -80.521, 7.34909, 0.44", "59.7453, -81.3051, 7.42458, 0.44", "59.773, -81.3723, 7.43062, 0.44", "61.2591, -84.752, 7.66478, 0.44", "61.2907, -84.8174, 7.66912, 0.44", "61.5146, -85.2404, 7.69668, 1.33", "62.081, -86.1685, 7.7513, 1.4", "62.3409, -86.5264, 7.79106, 0.37", "62.386, -86.5818, 7.79962, 0.37", "63.0642, -87.2488, 7.93182, 0.29", "63.1164, -87.2967, 7.94192, 0.29", "64.5816, -88.5003, 8.19928, 0.29", "65.976, -89.5481, 8.40924, 0.29", "66.0334, -89.5895, 8.41679, 0.29", "68.4589, -91.2819, 8.69771, 0.29", "68.595, -91.3711, 8.71375, 0.29", "70.2021, -92.3749, 8.89608, 0.52", "71.8713, -93.3434, 9.06321, 0.29", "72.4909, -93.6738, 9.10824, 0.59", "72.9947, -93.9157, 9.14911, 0.59", "74.4625, -94.5089, 9.29121, 0.44", "74.6606, -94.5856, 9.31148, 0.44", "75.4806, -94.9806, 9.33796, 0.29", "75.6051, -95.0477, 9.33599, 0.29", "76.5199, -95.5647, 9.30156, 0.29", "76.71, -95.6802, 9.28854, 0.29", "77.5513, -96.2429, 9.19219, 0.29", "81.3861, -98.9613, 8.72112, 0.29", "81.4506, -99.0102, 8.71235, 0.29", "89.9735, -104.493, 9.01905, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "59.1912, -78.8499, 7.16003, 0.52", "59.0606, -78.6824, 7.16027, 0.52", "59.0132, -78.6289, 7.16807, 0.52", "58.3565, -77.9297, 7.3247, 0.37", "57.3308, -76.9125, 7.59588, 0.37", "56.4846, -76.1301, 7.78584, 0.59", "55.4776, -75.3251, 7.86693, 0.59", "54.3375, -74.5111, 7.84672, 0.22", "54.2864, -74.4785, 7.84218, 0.22", "53.1627, -73.8963, 7.68825, 0.22", "52.406, -73.584, 7.53631, 0.22", "50.3318, -72.8453, 6.92804, 0.22", "50.0714, -72.7625, 6.82185, 0.66", "50.0121, -72.7419, 6.79037, 0.66", "49.1634, -72.4669, 6.31473, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "84.2237, -113.044, -1.28875, 0.29", "89.1888, -122.079, -2.43589, 0.29", "94.4082, -131.035, -2.42626, 0.29", "99.9632, -139.765, -2.33239, 0.29", "105.255, -148.609, -1.29672, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "84.2237, -113.044, -1.28875, 0.74", "89.1724, -122.071, -2.55503, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-49.5255, -78.4893, 30.8963, 0.37", "-54.2139, -83.5081, 38.3241, 0.37", "-58.6322, -89.9745, 44.8473, 0.37", "-62.6522, -95.9556, 52.0161, 0.37", "-66.805, -102.26, 58.8495, 0.37", "-72.1767, -107.868, 65.3779, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-49.5255, -78.4893, 30.8963, 0.29", "-57.267, -84.9813, 32.2529, 0.37", "-63.6159, -92.6512, 34.7695, 0.37", "-70.808, -98.5561, 38.8497, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-56.8134, -76.4812, -7.69136, 0.37", "-66.2626, -75.8293, -10.9048, 0.37", "-75.3533, -75.9872, -15.0687, 0.37", "-84.3145, -78.3473, -18.8956, 0.37", "-93.8856, -80.8383, -20.5585, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-56.8134, -76.4812, -7.69136, 0.29", "-66.7597, -75.9017, -8.56581, 0.37", "-76.7089, -76.0783, -7.57289, 0.37", "-86.5374, -75.2538, -5.90453, 0.37", "-95.725, -73.0831, -2.54075, 0.37", "-103.602, -69.6299, 2.66815, 0.37", "-109.919, -64.3471, 8.56504, 0.37", "-116.108, -60.5625, 15.5446, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "49.1634, -72.4669, 6.31473, 0.37", "49.204, -72.62, 6.31806, 0.37", "49.6251, -74.1231, 6.23242, 0.37", "49.663, -74.2531, 6.22072, 0.37", "50.1919, -76.07, 6.05719, 0.37", "50.2094, -76.13, 6.05179, 0.37", "50.9186, -78.566, 5.83253, 0.37", "50.9411, -78.6352, 5.82529, 0.37", "51.2904, -79.5236, 5.68167, 0.37", "55.3104, -89.1322, 5.99379, 0.37", "58.0456, -99.1293, 7.36091, 0.37", "60.93, -108.994, 9.20844, 0.37", "64.2867, -118.091, 12.9055, 0.37", "67.8795, -127.147, 16.4705, 0.37", "70.1189, -136.342, 20.7469, 0.37", "71.0213, -146.349, 23.6395, 0.37", "73.5479, -156.142, 26.2129, 0.37", "76.2432, -165.793, 29.085, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "49.1634, -72.4669, 6.31473, 0.37", "49.0766, -72.4441, 6.2724, 0.37", "49.0111, -72.4306, 6.2514, 0.37", "47.9269, -72.2305, 5.96357, 0.22", "47.5727, -72.1416, 5.88738, 0.22", "46.66, -71.8753, 5.7166, 0.22", "46.5849, -71.8492, 5.70508, 0.22", "45.4912, -71.4272, 5.57746, 0.22", "45.3519, -71.3701, 5.56594, 0.22", "44.4361, -70.9761, 5.51856, 0.22", "44.1913, -70.8677, 5.50075, 0.22", "43.1772, -70.3951, 5.41197, 0.22", "43.0612, -70.3392, 5.40144, 0.22", "41.3297, -69.4739, 5.22522, 0.22", "41.1511, -69.3854, 5.20516, 0.22", "39.4646, -68.5555, 5.002, 0.22", "39.395, -68.5149, 4.99444, 0.22", "38.2372, -67.7359, 4.88924, 0.22", "38.0098, -67.5369, 4.87671, 0.22", "37.4172, -66.8515, 4.87304, 0.22", "37.1268, -66.4552, 4.88262, 0.22", "36.2773, -65.0711, 4.94391, 0.22", "36.2024, -64.9419, 4.95039, 0.22", "35.294, -63.2348, 5.05056, 0.22", "35.2524, -63.1485, 5.05446, 0.22", "34.7307, -61.9582, 5.09063, 0.22", "34.5592, -61.5588, 5.08926, 0.22", "34.115, -60.5599, 5.03795, 0.22", "34.0513, -60.4177, 5.02744, 0.22", "33.5606, -59.4072, 4.93116, 0.22", "33.5261, -59.3436, 4.92477, 0.22", "33.2332, -58.8479, 4.87309, 0.29", "32.9607, -58.4525, 4.81392, 0.29", "32.2881, -57.6286, 4.65997, 0.29", "31.8361, -57.1375, 4.56457, 0.29", "31.4471, -56.7631, 4.49274, 0.29", "31.3735, -56.6951, 4.47906, 0.29", "30.5528, -55.9648, 4.32666, 0.29", "30.4919, -55.9116, 4.31537, 0.29", "29.7377, -55.2466, 4.1807, 0.29", "29.5014, -55.0377, 4.14332, 0.29", "28.8938, -54.5208, 4.06949, 0.29", "28.5202, -54.2118, 4.04245, 0.44", "28.1931, -53.9179, 4.04245, 0.52", "27.8165, -53.5472, 4.04245, 0.52", "27.7682, -53.494, 4.04245, 0.52", "27.5107, -53.1736, 4.04245, 0.29", "27.257, -52.8197, 4.03812, 0.29", "26.5894, -51.8495, 4.01664, 0.29", "26.5454, -51.7923, 4.01485, 0.29", "26.1315, -51.2939, 3.99563, 0.29", "25.9573, -51.0829, 3.98249, 0.29", "25.7435, -50.8316, 3.96173, 0.29", "25.6038, -50.6647, 3.94705, 0.29", "24.8886, -49.833, 3.86963, 0.29", "24.7406, -49.6628, 3.8553, 0.29", "24.1821, -48.9983, 3.80665, 0.29", "23.9505, -48.7122, 3.78948, 0.29", "23.0796, -47.5865, 3.73803, 0.29", "22.9883, -47.4616, 3.7337, 0.29", "22.4695, -46.7072, 3.71463, 0.52", "22.1451, -46.234, 3.7015, 0.52", "21.9124, -45.8705, 3.69255, 0.52", "21.7491, -45.5738, 3.68314, 0.37", "21.0682, -44.1217, 3.53358, 0.37", "21.0414, -44.0546, 3.52377, 0.37", "20.8566, -43.4487, 3.4154, 0.52", "20.609, -42.4959, 3.22175, 0.81", "20.4014, -41.6632, 3.04169, 0.81", "20.0917, -40.5658, 2.80888, 0.37", "20.043, -40.4198, 2.78063, 0.37", "19.7644, -39.6874, 2.64998, 0.37", "19.6203, -39.3847, 2.5977, 0.37", "19.1611, -38.5387, 2.45253, 0.29", "18.4689, -37.3199, 2.26839, 0.29", "17.3812, -35.4729, 2.04196, 0.29", "17.3185, -35.3663, 2.02874, 0.29", "16.3779, -33.7637, 1.82578, 0.29", "16.3282, -33.673, 1.81724, 0.29", "15.8155, -32.6392, 1.75172, 0.29", "15.6825, -32.3439, 1.74886, 0.29", "15.291, -31.4075, 1.79609, 0.29", "15.1896, -31.1232, 1.81873, 0.29", "14.8423, -29.9342, 1.94821, 0.29", "14.8186, -29.8543, 1.95545, 0.29", "14.2438, -27.9281, 2.10696, 0.29", "14.201, -27.7775, 2.11648, 0.29", "13.8554, -26.5287, 2.17598, 0.29", "13.8162, -26.3767, 2.18006, 0.29", "13.1762, -23.6383, 2.18006, 0.29", "13.1463, -23.4839, 2.18006, 0.29", "13.0303, -22.7272, 2.18006, 0.29", "13.0044, -22.572, 2.18006, 0.29", "12.7822, -21.4495, 2.15291, 0.29", "12.7337, -21.2244, 2.14329, 0.29", "12.3138, -19.4321, 2.032, 0.29", "12.2338, -19.1311, 2.01085, 0.29", "11.802, -17.6478, 1.90375, 0.29", "11.4022, -16.432, 1.89238, 0.29", "11.3436, -16.2695, 1.89175, 0.29", "10.8818, -15.0758, 1.89828, 0.29", "10.8192, -14.9327, 1.90213, 0.29", "10.0669, -13.1419, 2.00726, 0.29", "9.50439, -11.5989, 2.22326, 0.29", "4.66899, -2.51312, 0.902976, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-116.108, -60.5625, 15.5446, 0.37", "-125.495, -57.1732, 16.7532, 0.37", "-135.051, -54.754, 18.5892, 0.37", "-144.311, -51.6961, 20.9923, 0.37", "-153.806, -50.1013, 23.7355, 0.37", "-162.979, -49.0988, 27.6017, 0.37", "-171.466, -47.2169, 32.578, 0.37", "-180.466, -47.0349, 36.9335, 0.37", "-189.726, -45.9724, 40.5697, 0.37", "-198.905, -44.6619, 44.3383, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-116.108, -60.5625, 15.5446, 0.29", "-124.307, -59.1922, 21.1188, 0.37", "-132.018, -58.9106, 27.4798, 0.37", "-140.77, -59.8559, 32.2335, 0.37", "-149.758, -60.0824, 36.611, 0.37", "-158.559, -60.0979, 41.3593, 0.37", "-166.616, -59.7572, 47.274, 0.37", "-174.89, -57.9724, 52.6263, 0.37", "-182.711, -56.0204, 58.5742, 0.37", "-190.812, -53.5116, 63.9284, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_NBC_8c6aecf604_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_0
create dend_21
public dend_21
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.499998293907579)
    connect dend_58(0), soma_0(0.499998293907579)
    connect dend_45(0), soma_0(0.499998293907579)
    connect dend_24(0), soma_0(0.499998293907579)
    connect dend_0(0), soma_0(0.499998293907579)
    connect axon_0(0), soma_0(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.873478, -12.1204, -1.0889, 3.2264 ) }
    soma_0 { pt3dadd( -0.698655, -10.9282, -0.984246, 5.56239 ) }
    soma_0 { pt3dadd( -0.523832, -9.73588, -0.879587, 7.69458 ) }
    soma_0 { pt3dadd( -0.349009, -8.5436, -0.774929, 10.6304 ) }
    soma_0 { pt3dadd( -0.174186, -7.35132, -0.670271, 12.3889 ) }
    soma_0 { pt3dadd( 6.37175E-4, -6.15904, -0.565612, 13.0429 ) }
    soma_0 { pt3dadd( 0.17546, -4.96676, -0.460954, 13.3962 ) }
    soma_0 { pt3dadd( 0.350283, -3.77448, -0.356295, 13.6031 ) }
    soma_0 { pt3dadd( 0.525106, -2.5822, -0.251637, 13.7768 ) }
    soma_0 { pt3dadd( 0.699929, -1.38992, -0.146979, 13.7572 ) }
    soma_0 { pt3dadd( 0.874752, -0.197642, -0.0423202, 13.4519 ) }
    soma_0 { pt3dadd( 1.04958, 0.994638, 0.0623382, 13.1714 ) }
    soma_0 { pt3dadd( 1.2244, 2.18692, 0.166997, 12.4149 ) }
    soma_0 { pt3dadd( 1.39922, 3.3792, 0.271655, 11.5059 ) }
    soma_0 { pt3dadd( 1.57404, 4.57148, 0.376313, 10.5982 ) }
    soma_0 { pt3dadd( 1.74887, 5.76376, 0.480972, 9.84377 ) }
    soma_0 { pt3dadd( 1.92369, 6.95604, 0.58563, 9.16735 ) }
    soma_0 { pt3dadd( 2.09851, 8.14832, 0.690289, 7.18404 ) }
    soma_0 { pt3dadd( 2.27334, 9.34059, 0.794947, 5.28238 ) }
    soma_0 { pt3dadd( 2.44816, 10.5329, 0.899606, 3.93844 ) }
    soma_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 2.5386 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 3.61398, 12.4986, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.61398, 12.4986, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.84468, 13.5987, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.89183, 13.8236, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.18412, 15.2173, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.4546, 16.5071, -0.788928, 2.06 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 27/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.65398, 10.4091, -2.84893, 1.77 ) }
    dend_58 { pt3dadd( 4.39862, 11.9952, -5.25597, 1.62 ) }
    dend_58 { pt3dadd( 5.03441, 13.032, -6.5828, 1.62 ) }
    dend_58 { pt3dadd( 5.05844, 13.0651, -6.64052, 1.62 ) }
    dend_58 { pt3dadd( 5.62289, 13.7094, -8.00634, 1.47 ) }
    dend_58 { pt3dadd( 5.67993, 13.7602, -8.13635, 1.47 ) }
    dend_58 { pt3dadd( 7.0618, 14.673, -11.1201, 1.47 ) }
    dend_58 { pt3dadd( 8.34004, 15.0757, -13.5457, 1.92 ) }
    dend_58 { pt3dadd( 10.6662, 15.5569, -17.9486, 1.92 ) }
    dend_58 { pt3dadd( 11.4506, 15.6707, -19.4514, 1.92 ) }
    dend_58 { pt3dadd( 12.2463, 15.6995, -21.0168, 1.92 ) }
    dend_58 { pt3dadd( 13.009, 15.6815, -22.5438, 1.84 ) }
    dend_58 { pt3dadd( 14.084, 15.4957, -24.7333, 1.84 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.85602, 8.41412, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -2.85602, 8.41412, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -3.38561, 8.99242, 2.64735, 1.62 ) }
    dend_45 { pt3dadd( -3.43323, 9.04375, 2.66291, 1.62 ) }
    dend_45 { pt3dadd( -4.58113, 10.333, 3.01953, 1.84 ) }
    dend_45 { pt3dadd( -5.51074, 11.3925, 3.30151, 1.84 ) }
    dend_45 { pt3dadd( -6.51084, 12.5324, 3.60488, 1.62 ) }
    dend_45 { pt3dadd( -7.6184, 13.799, 3.9478, 1.62 ) }
    dend_45 { pt3dadd( -8.89062, 15.2626, 4.35603, 1.92 ) }
    dend_45 { pt3dadd( -9.5407, 16.0195, 4.56653, 1.92 ) }
    dend_45 { pt3dadd( -9.58541, 16.0739, 4.58136, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.07398, -9.26789, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.07398, -9.26789, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.61142, -10.2637, 2.55491, 1.84 ) }
    dend_24 { pt3dadd( 7.31495, -11.5673, 4.39262, 1.84 ) }
    dend_24 { pt3dadd( 7.33611, -11.6065, 4.44791, 1.84 ) }
    dend_24 { pt3dadd( 8.06328, -12.9538, 6.34739, 1.62 ) }
    dend_24 { pt3dadd( 8.82774, -14.3703, 8.34426, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38602, -11.7039, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.38602, -11.7039, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -3.02215, -13.8571, -1.20339, 3.24 ) }
    dend_0 { pt3dadd( -3.79107, -16.4598, -1.17251, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 0.670435 ) }
    axon_0 { pt3dadd( 4.79915, 26.5665, 1.00426, 0.670435 ) }
    axon_0 { pt3dadd( 6.97531, 41.4078, 1.00426, 0.670435 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 65/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.4546, 16.5071, -0.788928, 1.47 ) }
    dend_73 { pt3dadd( 5.29371, 17.4138, 0.262349, 1.47 ) }
    dend_73 { pt3dadd( 7.63599, 19.9957, 2.45607, 1.18 ) }
    dend_73 { pt3dadd( 7.67841, 20.0455, 2.48521, 1.18 ) }
    dend_73 { pt3dadd( 8.73057, 21.2475, 2.91246, 1.18 ) }
    dend_73 { pt3dadd( 9.94354, 22.5987, 3.18632, 1.18 ) }
    dend_73 { pt3dadd( 9.9847, 22.6442, 3.19209, 1.18 ) }
    dend_73 { pt3dadd( 11.1228, 23.9173, 3.04282, 1.4 ) }
    dend_73 { pt3dadd( 12.2366, 25.1607, 2.66231, 1.4 ) }
    dend_73 { pt3dadd( 13.452, 26.6143, 2.24007, 1.18 ) }
    dend_73 { pt3dadd( 14.2366, 27.6433, 1.95118, 1.18 ) }
    dend_73 { pt3dadd( 14.2842, 27.7097, 1.93924, 1.18 ) }
    dend_73 { pt3dadd( 14.9805, 28.7027, 1.83323, 1.18 ) }
    dend_73 { pt3dadd( 15.0275, 28.7707, 1.83649, 1.18 ) }
    dend_73 { pt3dadd( 15.9333, 30.0705, 2.12672, 1.18 ) }
    dend_73 { pt3dadd( 15.9789, 30.1338, 2.15299, 1.18 ) }
    dend_73 { pt3dadd( 17.3153, 31.8131, 2.95337, 1.18 ) }
    dend_73 { pt3dadd( 17.3525, 31.8566, 2.97567, 1.18 ) }
    dend_73 { pt3dadd( 18.3054, 32.8789, 3.49508, 1.18 ) }
    dend_73 { pt3dadd( 19.1909, 33.7974, 3.93517, 1.18 ) }
    dend_73 { pt3dadd( 20.7444, 35.3477, 4.65992, 1.03 ) }
    dend_73 { pt3dadd( 22.0537, 36.7249, 5.2345, 1.03 ) }
    dend_73 { pt3dadd( 22.0928, 36.7691, 5.25197, 1.03 ) }
    dend_73 { pt3dadd( 23.2545, 38.116, 5.75109, 0.81 ) }
    dend_73 { pt3dadd( 24.1873, 39.2475, 6.12261, 0.81 ) }
    dend_73 { pt3dadd( 24.2235, 39.2949, 6.13818, 0.81 ) }
    dend_73 { pt3dadd( 25.5388, 41.1923, 6.70146, 1.03 ) }
    dend_73 { pt3dadd( 26.7726, 43.1711, 7.37682, 1.03 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 93/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.4546, 16.5071, -0.788928, 1.11 ) }
    dend_70 { pt3dadd( 2.82537, 19.835, 0.186356, 1.11 ) }
    dend_70 { pt3dadd( 2.38821, 20.9296, 0.320999, 1.11 ) }
    dend_70 { pt3dadd( 1.96692, 21.9845, 0.450754, 1.03 ) }
    dend_70 { pt3dadd( 1.22352, 23.846, 0.679716, 1.25 ) }
    dend_70 { pt3dadd( 1.19281, 23.9229, 0.689178, 1.25 ) }
    dend_70 { pt3dadd( 0.345747, 26.044, 0.950067, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_70 { pt3dadd( -0.173788, 27.5268, 0.767386, 1.47 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 1/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 14.084, 15.4957, -24.7333, 1.55 ) }
    dend_68 { pt3dadd( 14.0725, 11.8087, -28.5575, 1.55 ) }
    dend_68 { pt3dadd( 14.132, 10.7286, -29.3886, 0.81 ) }
    dend_68 { pt3dadd( 14.192, 9.72356, -29.9832, 0.81 ) }
    dend_68 { pt3dadd( 14.2696, 8.25516, -30.7486, 0.81 ) }
    dend_68 { pt3dadd( 14.2678, 8.1644, -30.7989, 0.81 ) }
    dend_68 { pt3dadd( 14.1368, 7.02783, -31.5747, 1.11 ) }
    dend_68 { pt3dadd( 14.0005, 6.21959, -32.0154, 0.81 ) }
    dend_68 { pt3dadd( 13.6201, 5.22105, -32.8802, 0.59 ) }
    dend_68 { pt3dadd( 13.5677, 5.1356, -32.9814, 0.59 ) }
    dend_68 { pt3dadd( 12.6826, 4.01405, -34.5331, 0.59 ) }
    dend_68 { pt3dadd( 11.5957, 2.71675, -36.36, 1.25 ) }
    dend_68 { pt3dadd( 11.5636, 2.68141, -36.4124, 1.25 ) }
    dend_68 { pt3dadd( 10.3504, 1.37274, -38.3324, 1.18 ) }
    dend_68 { pt3dadd( 9.03249, -0.0363511, -40.426, 0.81 ) }
    dend_68 { pt3dadd( 7.71793, -1.51744, -42.5174, 0.52 ) }
    dend_68 { pt3dadd( 7.2363, -2.11216, -43.2735, 0.52 ) }
    dend_68 { pt3dadd( 7.19889, -2.15963, -43.3279, 0.52 ) }
    dend_68 { pt3dadd( 6.84695, -2.61349, -43.8324, 0.52 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 20/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 14.084, 15.4957, -24.7333, 1.4 ) }
    dend_59 { pt3dadd( 16.1111, 14.8166, -25.4168, 1.4 ) }
    dend_59 { pt3dadd( 18.5123, 14.0123, -26.2263, 1.4 ) }
    dend_59 { pt3dadd( 18.5668, 13.994, -26.2447, 1.4 ) }
    dend_59 { pt3dadd( 19.8288, 13.5713, -26.6701, 1.4 ) }
    dend_59 { pt3dadd( 19.9509, 13.5304, -26.7113, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 26/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -9.58541, 16.0739, 4.58136, 0.88 ) }
    dend_49 { pt3dadd( -10.0346, 17.2508, 4.91469, 0.88 ) }
    dend_49 { pt3dadd( -10.2649, 17.9134, 5.08795, 0.88 ) }
    dend_49 { pt3dadd( -10.6056, 19.0268, 5.3468, 0.88 ) }
    dend_49 { pt3dadd( -11.1152, 20.8513, 5.74213, 0.74 ) }
    dend_49 { pt3dadd( -11.3994, 22.0379, 5.99311, 0.74 ) }
    dend_49 { pt3dadd( -11.5503, 22.7886, 6.13939, 1.03 ) }
    dend_49 { pt3dadd( -11.5605, 22.8711, 6.151, 1.03 ) }
    dend_49 { pt3dadd( -11.6063, 23.77, 6.2988, 1.03 ) }
    dend_49 { pt3dadd( -11.6068, 23.8868, 6.31937, 1.03 ) }
    dend_49 { pt3dadd( -11.6436, 25.0609, 6.61228, 0.88 ) }
    dend_49 { pt3dadd( -11.8147, 26.2645, 7.08569, 1.18 ) }
    dend_49 { pt3dadd( -11.8317, 26.3277, 7.11702, 1.18 ) }
    dend_49 { pt3dadd( -12.2495, 27.5053, 7.77395, 1.18 ) }
    dend_49 { pt3dadd( -12.7313, 28.6013, 8.4588, 0.81 ) }
    dend_49 { pt3dadd( -13.3884, 29.8909, 9.32365, 0.81 ) }
    dend_49 { pt3dadd( -14.3089, 31.4662, 10.4184, 0.81 ) }
    dend_49 { pt3dadd( -14.9784, 32.5231, 11.1668, 0.81 ) }
    dend_49 { pt3dadd( -15.0122, 32.5756, 11.2023, 0.81 ) }
    dend_49 { pt3dadd( -15.5946, 33.4996, 11.7592, 0.66 ) }
    dend_49 { pt3dadd( -15.6257, 33.5573, 11.7893, 0.66 ) }
    dend_49 { pt3dadd( -16.0407, 34.7018, 12.1709, 0.66 ) }
    dend_49 { pt3dadd( -16.0894, 35.0015, 12.2493, 0.66 ) }
    dend_49 { pt3dadd( -16.1262, 35.987, 12.5522, 0.96 ) }
    dend_49 { pt3dadd( -16.0999, 37.0999, 12.9189, 0.96 ) }
    dend_49 { pt3dadd( -16.066, 37.5153, 13.0615, 0.96 ) }
    dend_49 { pt3dadd( -16.0042, 38.0905, 13.2715, 0.96 ) }
    dend_49 { pt3dadd( -15.7813, 39.5766, 13.8753, 0.81 ) }
    dend_49 { pt3dadd( -15.5726, 40.805, 14.4012, 0.81 ) }
    dend_49 { pt3dadd( -15.3724, 41.7839, 14.8485, 0.81 ) }
    dend_49 { pt3dadd( -15.3531, 41.8796, 14.8997, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -9.58541, 16.0739, 4.58136, 0.88 ) }
    dend_46 { pt3dadd( -9.57535, 16.7202, 4.55421, 0.88 ) }
    dend_46 { pt3dadd( -9.55085, 17.4887, 4.51511, 0.74 ) }
    dend_46 { pt3dadd( -9.51077, 18.4129, 4.46118, 0.74 ) }
    dend_46 { pt3dadd( -9.50725, 18.4861, 4.45619, 0.74 ) }
    dend_46 { pt3dadd( -9.40211, 20.0911, 4.34343, 0.74 ) }
    dend_46 { pt3dadd( -9.3141, 21.1955, 4.26938, 0.88 ) }
    dend_46 { pt3dadd( -9.25938, 21.8036, 4.21545, 0.88 ) }
    dend_46 { pt3dadd( -9.24164, 21.9866, 4.19801, 0.88 ) }
    dend_46 { pt3dadd( -9.16006, 22.8293, 4.12041, 0.74 ) }
    dend_46 { pt3dadd( -9.06723, 23.8691, 4.06271, 0.74 ) }
    dend_46 { pt3dadd( -8.96955, 25.1031, 4.03548, 0.74 ) }
    dend_46 { pt3dadd( -8.89633, 26.2604, 4.04, 1.62 ) }
    dend_46 { pt3dadd( -8.8309, 27.5083, 4.06432, 1.62 ) }
    dend_46 { pt3dadd( -8.77921, 28.9541, 4.13915, 1.33 ) }
    dend_46 { pt3dadd( -8.75444, 30.0122, 4.22693, 0.96 ) }
    dend_46 { pt3dadd( -8.74557, 31.0034, 4.33299, 0.96 ) }
    dend_46 { pt3dadd( -8.73938, 31.8385, 4.44413, 0.96 ) }
    dend_46 { pt3dadd( -8.73822, 31.911, 4.45551, 0.96 ) }
    dend_46 { pt3dadd( -8.72429, 32.9709, 4.62171, 0.96 ) }
    dend_46 { pt3dadd( -8.69495, 34.1966, 4.78893, 0.74 ) }
    dend_46 { pt3dadd( -8.66308, 35.1186, 4.87403, 0.74 ) }
    dend_46 { pt3dadd( -8.65989, 35.1918, 4.87966, 0.74 ) }
    dend_46 { pt3dadd( -8.63101, 35.8774, 4.83848, 1.03 ) }
    dend_46 { pt3dadd( -8.62805, 35.96, 4.82426, 1.03 ) }
    dend_46 { pt3dadd( -8.60935, 36.6957, 4.62025, 1.03 ) }
    dend_46 { pt3dadd( -8.60902, 36.7652, 4.59749, 1.03 ) }
    dend_46 { pt3dadd( -8.61773, 38.0144, 4.04923, 1.03 ) }
    dend_46 { pt3dadd( -8.64163, 39.7082, 3.18917, 1.03 ) }
    dend_46 { pt3dadd( -8.64299, 39.7804, 3.14835, 1.03 ) }
    dend_46 { pt3dadd( -8.66757, 41.0757, 2.36775, 1.03 ) }
    dend_46 { pt3dadd( -8.66895, 41.1369, 2.3291, 1.03 ) }
    dend_46 { pt3dadd( -8.71222, 42.4441, 1.52187, 0.88 ) }
    dend_46 { pt3dadd( -8.7151, 42.5146, 1.47839, 0.88 ) }
    dend_46 { pt3dadd( -8.73631, 43.0017, 1.24455, 0.88 ) }
    dend_46 { pt3dadd( -8.74046, 43.0686, 1.21586, 0.88 ) }
    dend_46 { pt3dadd( -8.78299, 43.718, 0.978812, 0.88 ) }
    dend_46 { pt3dadd( -8.80569, 44.1162, 0.890702, 0.88 ) }
    dend_46 { pt3dadd( -8.83611, 44.9095, 0.815753, 0.88 ) }
    dend_46 { pt3dadd( -8.83778, 44.9827, 0.809427, 0.88 ) }
    dend_46 { pt3dadd( -8.8132, 45.8448, 0.746793, 0.88 ) }
    dend_46 { pt3dadd( -8.79977, 46.1864, 0.723398, 0.88 ) }
    dend_46 { pt3dadd( -8.73299, 47.341, 0.65324, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -8.64073, 48.5665, 0.59788, 1.03 ) }
    dend_46 { pt3dadd( -8.63368, 48.6502, 0.596555, 1.03 ) }
    dend_46 { pt3dadd( -8.49347, 50.0501, 0.573803, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.82774, -14.3703, 8.34426, 1.11 ) }
    dend_30 { pt3dadd( 10.7869, -17.7045, 9.18289, 1.11 ) }
    dend_30 { pt3dadd( 11.6059, -19.0563, 9.40559, 1.11 ) }
    dend_30 { pt3dadd( 11.6917, -19.1843, 9.38812, 1.11 ) }
    dend_30 { pt3dadd( 12.4537, -20.1603, 9.12612, 1.33 ) }
    dend_30 { pt3dadd( 13.5282, -21.3572, 8.6991, 1.11 ) }
    dend_30 { pt3dadd( 15.2371, -23.0862, 8.02804, 1.11 ) }
    dend_30 { pt3dadd( 15.285, -23.1332, 8.00377, 1.11 ) }
    dend_30 { pt3dadd( 17.6025, -25.2215, 6.81781, 1.25 ) }
    dend_30 { pt3dadd( 19.3574, -26.7383, 5.90993, 1.55 ) }
    dend_30 { pt3dadd( 21.0479, -28.0697, 5.02697, 1.55 ) }
    dend_30 { pt3dadd( 22.0552, -28.8121, 4.47209, 1.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 15/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.82774, -14.3703, 8.34426, 1.47 ) }
    dend_25 { pt3dadd( 8.83418, -18.3236, 15.0488, 1.47 ) }
    dend_25 { pt3dadd( 8.85472, -19.3514, 16.533, 1.03 ) }
    dend_25 { pt3dadd( 8.93981, -20.1085, 17.3519, 1.03 ) }
    dend_25 { pt3dadd( 9.19471, -21.5249, 18.6272, 0.88 ) }
    dend_25 { pt3dadd( 9.21134, -21.5879, 18.6774, 0.88 ) }
    dend_25 { pt3dadd( 9.70103, -23.2092, 19.8903, 0.88 ) }
    dend_25 { pt3dadd( 9.72281, -23.2622, 19.9142, 0.88 ) }
    dend_25 { pt3dadd( 10.9862, -25.7185, 21.1, 0.88 ) }
    dend_25 { pt3dadd( 11.622, -26.6946, 21.6364, 1.47 ) }
    dend_25 { pt3dadd( 12.9007, -28.3419, 22.6468, 0.88 ) }
    dend_25 { pt3dadd( 12.9479, -28.3958, 22.6859, 0.88 ) }
    dend_25 { pt3dadd( 14.3067, -29.682, 23.8055, 0.74 ) }
    dend_25 { pt3dadd( 14.4136, -29.7695, 23.9005, 0.74 ) }
    dend_25 { pt3dadd( 15.4882, -30.4677, 24.9328, 0.74 ) }
    dend_25 { pt3dadd( 15.5563, -30.5053, 24.9951, 0.74 ) }
    dend_25 { pt3dadd( 16.6519, -31.0188, 26.0338, 1.33 ) }
    dend_25 { pt3dadd( 17.5293, -31.4108, 26.9608, 0.96 ) }
    dend_25 { pt3dadd( 18.8963, -32.0352, 28.4667, 1.11 ) }
    dend_25 { pt3dadd( 18.9402, -32.0564, 28.5174, 1.11 ) }
    dend_25 { pt3dadd( 19.6636, -32.456, 29.4164, 1.11 ) }
    dend_25 { pt3dadd( 20.8244, -33.2359, 30.8053, 0.81 ) }
    dend_25 { pt3dadd( 21.6828, -33.9051, 31.7849, 1.25 ) }
    dend_25 { pt3dadd( 22.351, -34.5833, 32.6019, 0.88 ) }
    dend_25 { pt3dadd( 22.3864, -34.6286, 32.6442, 0.88 ) }
    dend_25 { pt3dadd( 23.1076, -35.8577, 33.5692, 0.81 ) }
    dend_25 { pt3dadd( 23.5088, -37.0352, 34.1947, 0.81 ) }
    dend_25 { pt3dadd( 23.5244, -37.1345, 34.2231, 0.81 ) }
    dend_25 { pt3dadd( 23.5764, -38.7772, 34.5621, 0.81 ) }
    dend_25 { pt3dadd( 23.5732, -38.8389, 34.5737, 0.81 ) }
    dend_25 { pt3dadd( 23.4708, -39.9685, 34.7544, 0.81 ) }
    dend_25 { pt3dadd( 23.4062, -41.0144, 34.9619, 1.18 ) }
    dend_25 { pt3dadd( 23.4001, -42.0554, 35.2497, 0.88 ) }
    dend_25 { pt3dadd( 23.6155, -43.2229, 35.8199, 0.59 ) }
    dend_25 { pt3dadd( 23.9804, -44.0674, 36.6096, 0.59 ) }
    dend_25 { pt3dadd( 24.0068, -44.1188, 36.6672, 0.59 ) }
    dend_25 { pt3dadd( 24.902, -45.5942, 38.6037, 0.59 ) }
    dend_25 { pt3dadd( 24.9304, -45.6383, 38.6655, 0.59 ) }
    dend_25 { pt3dadd( 26.0089, -47.286, 40.8116, 0.81 ) }
    dend_25 { pt3dadd( 26.9218, -48.7339, 42.6109, 0.81 ) }
    dend_25 { pt3dadd( 27.4491, -49.6329, 43.6943, 0.81 ) }
    dend_25 { pt3dadd( 27.4838, -49.6931, 43.7673, 0.81 ) }
    dend_25 { pt3dadd( 28.2859, -51.165, 45.5143, 0.74 ) }
    dend_25 { pt3dadd( 29.0923, -52.5404, 47.1109, 0.52 ) }
    dend_25 { pt3dadd( 30.0687, -54.1153, 48.83, 0.52 ) }
    dend_25 { pt3dadd( 30.1494, -54.2177, 48.9435, 0.52 ) }
    dend_25 { pt3dadd( 31.3749, -55.4634, 50.5287, 0.52 ) }
    dend_25 { pt3dadd( 31.4124, -55.5021, 50.5749, 0.52 ) }
    dend_25 { pt3dadd( 31.9646, -56.097, 51.2737, 0.52 ) }
    dend_25 { pt3dadd( 32.0398, -56.2014, 51.3826, 0.52 ) }
    dend_25 { pt3dadd( 32.5229, -57.1952, 51.9867, 0.52 ) }
    dend_25 { pt3dadd( 32.5998, -57.4121, 52.0866, 0.52 ) }
    dend_25 { pt3dadd( 33.2108, -59.4184, 52.8445, 0.52 ) }
    dend_25 { pt3dadd( 33.6198, -60.6259, 53.3312, 0.52 ) }
    dend_25 { pt3dadd( 33.7308, -60.9548, 53.4696, 0.52 ) }
    dend_25 { pt3dadd( 34.0803, -62.0043, 53.9177, 0.52 ) }
    dend_25 { pt3dadd( 34.1131, -62.1008, 53.9599, 0.52 ) }
    dend_25 { pt3dadd( 34.7582, -63.4112, 54.5828, 0.52 ) }
    dend_25 { pt3dadd( 35.2722, -63.8973, 54.9034, 0.88 ) }
    dend_25 { pt3dadd( 35.3908, -63.9774, 54.9546, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: dend_0 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.79107, -16.4598, -1.17251, 0.59 ) }
    dend_21 { pt3dadd( -4.61191, -16.6984, -1.39251, 0.59 ) }
    dend_21 { pt3dadd( -5.91811, -17.1037, -1.58049, 0.59 ) }
    dend_21 { pt3dadd( -7.53741, -17.6351, -1.69349, 0.59 ) }
    dend_21 { pt3dadd( -8.17517, -17.8624, -1.70875, 0.59 ) }
    dend_21 { pt3dadd( -10.4356, -18.7813, -1.70105, 0.88 ) }
    dend_21 { pt3dadd( -11.535, -19.2869, -1.71727, 0.88 ) }
    dend_21 { pt3dadd( -12.7574, -19.9175, -1.70791, 0.96 ) }
    dend_21 { pt3dadd( -13.7922, -20.5026, -1.69355, 1.25 ) }
    dend_21 { pt3dadd( -14.79, -21.1376, -1.72158, 1.47 ) }
    dend_21 { pt3dadd( -16.0479, -21.9353, -2.08536, 1.11 ) }
    dend_21 { pt3dadd( -17.5296, -22.8442, -2.9722, 1.03 ) }
    dend_21 { pt3dadd( -18.2209, -23.2409, -3.49641, 1.03 ) }
    dend_21 { pt3dadd( -18.2957, -23.2808, -3.56166, 1.03 ) }
    dend_21 { pt3dadd( -19.8143, -24.0697, -4.98825, 1.55 ) }
    dend_21 { pt3dadd( -22.9412, -25.6736, -8.04408, 0.66 ) }
    dend_21 { pt3dadd( -24.1406, -26.3143, -9.21155, 0.66 ) }
    dend_21 { pt3dadd( -24.8134, -26.7276, -9.86771, 0.66 ) }
    dend_21 { pt3dadd( -24.8586, -26.7613, -9.91035, 0.66 ) }
    dend_21 { pt3dadd( -25.559, -27.3838, -10.5171, 0.74 ) }
    dend_21 { pt3dadd( -26.1618, -28.0653, -10.9556, 1.03 ) }
    dend_21 { pt3dadd( -26.8733, -29.2975, -11.4735, 1.03 ) }
    dend_21 { pt3dadd( -27.7689, -30.9414, -12.0885, 1.25 ) }
    dend_21 { pt3dadd( -28.2808, -31.9016, -12.479, 1.18 ) }
    dend_21 { pt3dadd( -28.3385, -32.002, -12.5229, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -28.8054, -32.6722, -12.9144, 0.52 ) }
    dend_21 { pt3dadd( -28.8511, -32.7144, -12.949, 0.52 ) }
    dend_21 { pt3dadd( -29.6987, -33.0602, -13.5088, 0.52 ) }
    dend_21 { pt3dadd( -29.7598, -33.0697, -13.5416, 0.52 ) }
    dend_21 { pt3dadd( -30.2113, -33.1023, -13.8206, 0.52 ) }
    dend_21 { pt3dadd( -31.6344, -33.1649, -14.7162, 0.88 ) }
    dend_21 { pt3dadd( -32.648, -33.1881, -15.3588, 1.25 ) }
    dend_21 { pt3dadd( -34.0094, -33.234, -16.2484, 1.25 ) }
    dend_21 { pt3dadd( -34.7469, -33.2693, -16.7447, 0.88 ) }
    dend_21 { pt3dadd( -36.0758, -33.4327, -17.6271, 0.88 ) }
    dend_21 { pt3dadd( -36.6566, -33.5976, -18.0448, 0.52 ) }
    dend_21 { pt3dadd( -36.9796, -33.7793, -18.2784, 0.52 ) }
    dend_21 { pt3dadd( -37.2052, -33.9863, -18.4957, 0.52 ) }
    dend_21 { pt3dadd( -37.4691, -34.2475, -18.7923, 0.52 ) }
    dend_21 { pt3dadd( -37.9572, -34.7037, -19.3982, 0.52 ) }
    dend_21 { pt3dadd( -38.8844, -35.5194, -20.576, 0.88 ) }
    dend_21 { pt3dadd( -39.4839, -36.0262, -21.3579, 1.25 ) }
    dend_21 { pt3dadd( -41.1577, -37.341, -23.4359, 1.62 ) }
    dend_21 { pt3dadd( -42.5684, -38.382, -25.028, 1.55 ) }
    dend_21 { pt3dadd( -43.8086, -39.2426, -26.3295, 0.81 ) }
    dend_21 { pt3dadd( -43.8783, -39.2886, -26.3967, 0.81 ) }
    dend_21 { pt3dadd( -44.2732, -39.5588, -26.7258, 0.37 ) }
    dend_21 { pt3dadd( -45.1923, -40.2756, -27.3831, 0.37 ) }
    dend_21 { pt3dadd( -46.2873, -41.3356, -27.8564, 0.37 ) }
    dend_21 { pt3dadd( -46.334, -41.3894, -27.8664, 0.37 ) }
    dend_21 { pt3dadd( -47.0126, -42.1818, -28.0221, 1.03 ) }
    dend_21 { pt3dadd( -47.6729, -42.9382, -28.1997, 1.47 ) }
    dend_21 { pt3dadd( -48.3739, -43.7453, -28.4004, 0.96 ) }
    dend_21 { pt3dadd( -48.9174, -44.3763, -28.5674, 0.29 ) }
    dend_21 { pt3dadd( -50.3998, -46.0715, -29.0379, 0.29 ) }
    dend_21 { pt3dadd( -52.3913, -48.2921, -29.6551, 0.29 ) }
    dend_21 { pt3dadd( -53.3906, -49.3503, -29.95, 0.29 ) }
    dend_21 { pt3dadd( -54.0741, -50.0341, -30.1683, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 33/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.79107, -16.4598, -1.17251, 2.36 ) }
    dend_1 { pt3dadd( -3.88952, -16.8273, -1.22073, 2.36 ) }
    dend_1 { pt3dadd( -4.2416, -18.083, -1.33638, 2.36 ) }
    dend_1 { pt3dadd( -4.85357, -20.2654, -1.5374, 1.99 ) }
    dend_1 { pt3dadd( -5.43443, -22.3369, -1.72821, 1.99 ) }
    dend_1 { pt3dadd( -5.95168, -24.1816, -1.89812, 2.14 ) }
    dend_1 { pt3dadd( -6.52433, -26.2238, -2.08623, 3.02 ) }
    dend_1 { pt3dadd( -6.86296, -27.3425, -2.17873, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.97531, 41.4078, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 9.15148, 56.2491, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 11.3276, 71.0904, 1.00426, 1.18 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 44/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 26.7726, 43.1711, 7.37682, 0.74 ) }
    dend_77 { pt3dadd( 26.8891, 46.3247, 9.17163, 0.74 ) }
    dend_77 { pt3dadd( 26.8951, 46.403, 9.1998, 0.74 ) }
    dend_77 { pt3dadd( 27.0561, 47.453, 9.51387, 0.74 ) }
    dend_77 { pt3dadd( 27.2467, 48.4067, 9.7604, 0.59 ) }
    dend_77 { pt3dadd( 27.4717, 49.3932, 9.98079, 0.59 ) }
    dend_77 { pt3dadd( 27.6681, 50.2103, 10.1408, 0.59 ) }
    dend_77 { pt3dadd( 27.6866, 50.2811, 10.1439, 0.59 ) }
    dend_77 { pt3dadd( 27.9637, 51.2684, 10.2317, 0.22 ) }
    dend_77 { pt3dadd( 28.126, 51.7952, 10.2992, 0.81 ) }
    dend_77 { pt3dadd( 28.3306, 52.4631, 10.4071, 1.03 ) }
    dend_77 { pt3dadd( 28.5325, 53.0183, 10.5517, 1.03 ) }
    dend_77 { pt3dadd( 28.9404, 54.0699, 10.8733, 0.81 ) }
    dend_77 { pt3dadd( 29.3938, 55.1646, 11.2265, 0.59 ) }
    dend_77 { pt3dadd( 29.9903, 56.588, 11.6871, 0.59 ) }
    dend_77 { pt3dadd( 30.03, 56.6762, 11.7214, 0.59 ) }
    dend_77 { pt3dadd( 30.9822, 58.6736, 12.5824, 0.59 ) }
    dend_77 { pt3dadd( 31.0119, 58.7338, 12.6094, 0.59 ) }
    dend_77 { pt3dadd( 31.3892, 59.5096, 12.9906, 0.44 ) }
    dend_77 { pt3dadd( 31.7476, 60.2948, 13.454, 0.44 ) }
    dend_77 { pt3dadd( 32.3869, 61.9936, 14.5182, 0.44 ) }
    dend_77 { pt3dadd( 32.5295, 62.4712, 14.8096, 0.96 ) }
    dend_77 { pt3dadd( 32.6357, 63.0803, 15.1417, 0.96 ) }
    dend_77 { pt3dadd( 32.79, 64.2586, 15.7701, 0.59 ) }
    dend_77 { pt3dadd( 32.8839, 65.3385, 16.3052, 0.29 ) }
    dend_77 { pt3dadd( 32.9261, 66.1509, 16.6568, 0.29 ) }
    dend_77 { pt3dadd( 32.925, 66.3014, 16.7012, 0.29 ) }
    dend_77 { pt3dadd( 32.8858, 67.8886, 17.0286, 0.29 ) }
    dend_77 { pt3dadd( 32.8835, 67.9722, 17.0356, 0.29 ) }
    dend_77 { pt3dadd( 32.8499, 68.9736, 16.9327, 0.29 ) }
    dend_77 { pt3dadd( 32.8432, 69.1273, 16.9003, 0.81 ) }
    dend_77 { pt3dadd( 32.7811, 69.8666, 16.7181, 0.81 ) }
    dend_77 { pt3dadd( 32.7034, 70.361, 16.5855, 0.29 ) }
    dend_77 { pt3dadd( 32.407, 71.1982, 16.3601, 0.29 ) }
    dend_77 { pt3dadd( 31.9357, 72.073, 16.1401, 0.29 ) }
    dend_77 { pt3dadd( 31.823, 72.2386, 16.1001, 0.29 ) }
    dend_77 { pt3dadd( 31.2556, 72.9327, 15.9049, 0.29 ) }
    dend_77 { pt3dadd( 30.9659, 73.2391, 15.8106, 0.29 ) }
    dend_77 { pt3dadd( 29.6512, 74.4349, 15.4303, 0.29 ) }
    dend_77 { pt3dadd( 28.4969, 75.3394, 15.1147, 0.29 ) }
    dend_77 { pt3dadd( 28.4232, 75.3942, 15.0963, 0.29 ) }
    dend_77 { pt3dadd( 27.0353, 76.4052, 14.7301, 0.29 ) }
    dend_77 { pt3dadd( 26.9142, 76.4905, 14.6952, 0.29 ) }
    dend_77 { pt3dadd( 26.1986, 76.9751, 14.4731, 0.29 ) }
    dend_77 { pt3dadd( 25.5393, 77.3689, 14.2442, 0.81 ) }
    dend_77 { pt3dadd( 24.7367, 77.7705, 14.0008, 0.81 ) }
    dend_77 { pt3dadd( 23.9443, 87.8561, 16.6673, 0.81 ) }
    dend_77 { pt3dadd( 23.5097, 97.4204, 20.7709, 0.81 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 92/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 26.7726, 43.1711, 7.37682, 1.03 ) }
    dend_74 { pt3dadd( 28.4888, 43.6178, 8.60269, 1.03 ) }
    dend_74 { pt3dadd( 29.5273, 43.9108, 9.29519, 0.74 ) }
    dend_74 { pt3dadd( 30.9622, 44.4741, 10.1309, 0.74 ) }
    dend_74 { pt3dadd( 31.0108, 44.5007, 10.1553, 0.74 ) }
    dend_74 { pt3dadd( 31.8682, 45.071, 10.4202, 0.52 ) }
    dend_74 { pt3dadd( 32.4546, 45.5113, 10.4974, 0.52 ) }
    dend_74 { pt3dadd( 32.5279, 45.579, 10.4812, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_74 { pt3dadd( 33.476, 46.5883, 10.2634, 0.81 ) }
    dend_74 { pt3dadd( 34.1609, 47.3736, 10.0895, 1.11 ) }
    dend_74 { pt3dadd( 35.4148, 48.8089, 10.0822, 0.66 ) }
    dend_74 { pt3dadd( 36.0044, 49.4959, 10.2136, 0.59 ) }
    dend_74 { pt3dadd( 36.711, 50.2099, 10.6731, 0.59 ) }
    dend_74 { pt3dadd( 37.9084, 51.2699, 11.9054, 0.59 ) }
    dend_74 { pt3dadd( 37.9545, 51.3014, 11.9635, 0.59 ) }
    dend_74 { pt3dadd( 39.3394, 52.097, 13.8211, 0.59 ) }
    dend_74 { pt3dadd( 39.3835, 52.1205, 13.8839, 0.59 ) }
    dend_74 { pt3dadd( 40.4287, 52.6947, 15.3067, 1.25 ) }
    dend_74 { pt3dadd( 40.4771, 52.7244, 15.3637, 1.25 ) }
    dend_74 { pt3dadd( 41.4346, 53.432, 16.1621, 0.96 ) }
    dend_74 { pt3dadd( 42.7132, 54.4664, 16.9042, 0.66 ) }
    dend_74 { pt3dadd( 42.7875, 54.5298, 16.9294, 0.66 ) }
    dend_74 { pt3dadd( 43.8227, 55.4581, 17.1808, 0.59 ) }
    dend_74 { pt3dadd( 44.9066, 56.5076, 17.3141, 0.59 ) }
    dend_74 { pt3dadd( 45.8168, 57.4269, 17.3939, 0.59 ) }
    dend_74 { pt3dadd( 46.4296, 58.099, 17.4131, 0.59 ) }
    dend_74 { pt3dadd( 46.7409, 58.4256, 17.4105, 0.59 ) }
    dend_74 { pt3dadd( 47.1327, 58.7896, 17.4199, 0.81 ) }
    dend_74 { pt3dadd( 47.8273, 59.3519, 17.4562, 0.81 ) }
    dend_74 { pt3dadd( 48.0965, 59.5445, 17.4787, 0.81 ) }
    dend_74 { pt3dadd( 49.144, 60.2658, 17.6156, 0.81 ) }
    dend_74 { pt3dadd( 50.1729, 60.9661, 17.7545, 0.44 ) }
    dend_74 { pt3dadd( 51.0686, 61.5672, 17.8765, 0.44 ) }
    dend_74 { pt3dadd( 51.158, 61.6264, 17.8883, 0.44 ) }
    dend_74 { pt3dadd( 52.0212, 62.2031, 18.0291, 0.81 ) }
    dend_74 { pt3dadd( 52.5336, 62.5612, 18.1206, 0.96 ) }
    dend_74 { pt3dadd( 53.2208, 63.081, 18.2713, 0.81 ) }
    dend_74 { pt3dadd( 53.274, 63.1269, 18.2843, 0.81 ) }
    dend_74 { pt3dadd( 54.1293, 63.9905, 18.4459, 0.52 ) }
    dend_74 { pt3dadd( 55.055, 65.0007, 18.5823, 0.52 ) }
    dend_74 { pt3dadd( 55.5309, 65.5625, 18.6679, 0.81 ) }
    dend_74 { pt3dadd( 56.4474, 66.7018, 18.8506, 0.52 ) }
    dend_74 { pt3dadd( 56.5869, 66.8762, 18.8877, 0.52 ) }
    dend_74 { pt3dadd( 58.1737, 68.8197, 19.3654, 0.37 ) }
    dend_74 { pt3dadd( 58.2193, 68.8734, 19.3798, 0.37 ) }
    dend_74 { pt3dadd( 59.262, 70.057, 19.7064, 0.37 ) }
    dend_74 { pt3dadd( 59.8284, 70.667, 19.8996, 1.03 ) }
    dend_74 { pt3dadd( 61.0874, 71.9319, 20.3556, 1.03 ) }
    dend_74 { pt3dadd( 61.1375, 71.9788, 20.3756, 1.03 ) }
    dend_74 { pt3dadd( 61.9594, 72.6784, 20.763, 1.03 ) }
    dend_74 { pt3dadd( 62.0111, 72.7232, 20.7833, 1.03 ) }
    dend_74 { pt3dadd( 62.7909, 73.4329, 20.9994, 0.66 ) }
    dend_74 { pt3dadd( 62.8497, 73.4878, 21.0139, 0.66 ) }
    dend_74 { pt3dadd( 63.3597, 74.017, 21.0923, 0.66 ) }
    dend_74 { pt3dadd( 63.4376, 74.1019, 21.1056, 0.66 ) }
    dend_74 { pt3dadd( 63.9267, 74.6861, 21.209, 0.66 ) }
    dend_74 { pt3dadd( 64.9534, 75.9355, 21.4345, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 49/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.173788, 27.5268, 0.767386, 0.96 ) }
    dend_72 { pt3dadd( -0.166867, 28.0589, 0.753899, 0.96 ) }
    dend_72 { pt3dadd( -0.217155, 29.1559, 0.707452, 0.74 ) }
    dend_72 { pt3dadd( -0.411612, 30.5766, 0.637463, 0.74 ) }
    dend_72 { pt3dadd( -0.422709, 30.6385, 0.63399, 0.74 ) }
    dend_72 { pt3dadd( -0.708215, 31.8839, 0.561013, 0.66 ) }
    dend_72 { pt3dadd( -1.00479, 33.0378, 0.492169, 0.66 ) }
    dend_72 { pt3dadd( -1.06247, 33.2006, 0.487028, 0.66 ) }
    dend_72 { pt3dadd( -1.63124, 34.1888, 0.457451, 1.03 ) }
    dend_72 { pt3dadd( -1.66905, 34.2376, 0.459543, 1.03 ) }
    dend_72 { pt3dadd( -2.20943, 34.8478, 0.551097, 1.03 ) }
    dend_72 { pt3dadd( -2.25829, 34.898, 0.566203, 1.03 ) }
    dend_72 { pt3dadd( -2.79705, 35.434, 0.765606, 0.81 ) }
    dend_72 { pt3dadd( -3.83433, 36.5223, 1.26096, 0.81 ) }
    dend_72 { pt3dadd( -4.57679, 37.3499, 1.67095, 0.81 ) }
    dend_72 { pt3dadd( -5.41596, 38.3128, 2.23022, 0.66 ) }
    dend_72 { pt3dadd( -6.20356, 39.2628, 2.8315, 0.66 ) }
    dend_72 { pt3dadd( -6.24261, 39.3137, 2.86354, 0.66 ) }
    dend_72 { pt3dadd( -7.05074, 40.5183, 3.59573, 1.03 ) }
    dend_72 { pt3dadd( -7.49961, 41.2944, 4.06488, 1.03 ) }
    dend_72 { pt3dadd( -8.09652, 42.4261, 4.76564, 0.96 ) }
    dend_72 { pt3dadd( -8.35106, 42.9865, 5.11905, 0.96 ) }
    dend_72 { pt3dadd( -8.66089, 43.8186, 5.61291, 0.52 ) }
    dend_72 { pt3dadd( -8.93576, 44.6801, 6.10112, 0.52 ) }
    dend_72 { pt3dadd( -8.94865, 44.7347, 6.12815, 0.52 ) }
    dend_72 { pt3dadd( -9.13926, 45.9557, 6.68489, 1.11 ) }
    dend_72 { pt3dadd( -9.21356, 46.8912, 7.01367, 1.11 ) }
    dend_72 { pt3dadd( -9.26263, 47.8598, 7.38415, 1.03 ) }
    dend_72 { pt3dadd( -9.26493, 47.9178, 7.40739, 1.03 ) }
    dend_72 { pt3dadd( -9.34479, 48.6094, 7.66682, 0.66 ) }
    dend_72 { pt3dadd( -9.35978, 48.6774, 7.68871, 0.66 ) }
    dend_72 { pt3dadd( -9.73346, 49.404, 7.85584, 0.44 ) }
    dend_72 { pt3dadd( -10.3311, 50.0642, 8.02788, 0.44 ) }
    dend_72 { pt3dadd( -10.5885, 50.264, 8.1123, 0.44 ) }
    dend_72 { pt3dadd( -11.2271, 50.7281, 8.48253, 0.44 ) }
    dend_72 { pt3dadd( -11.3832, 50.8493, 8.6133, 0.44 ) }
    dend_72 { pt3dadd( -12.1038, 51.5289, 9.37741, 0.44 ) }
    dend_72 { pt3dadd( -12.1344, 51.5694, 9.42715, 0.44 ) }
    dend_72 { pt3dadd( -12.5648, 52.4579, 10.4732, 0.74 ) }
    dend_72 { pt3dadd( -12.9033, 53.6325, 11.8782, 0.52 ) }
    dend_72 { pt3dadd( -13.0111, 54.3548, 12.6868, 0.66 ) }
    dend_72 { pt3dadd( -13.0531, 54.9494, 13.3165, 0.66 ) }
    dend_72 { pt3dadd( -13.0341, 56.1277, 14.4301, 1.47 ) }
    dend_72 { pt3dadd( -13.0118, 56.5852, 14.8122, 1.47 ) }
    dend_72 { pt3dadd( -12.8551, 58.4454, 16.0176, 0.66 ) }
    dend_72 { pt3dadd( -12.7757, 59.4487, 16.536, 0.66 ) }
    dend_72 { pt3dadd( -12.7687, 59.5896, 16.6026, 0.66 ) }
    dend_72 { pt3dadd( -12.8031, 60.8023, 17.1036, 0.66 ) }
    dend_72 { pt3dadd( -12.8095, 60.87, 17.13, 0.66 ) }
    dend_72 { pt3dadd( -13.0206, 62.7272, 17.8909, 0.66 ) }
    dend_72 { pt3dadd( -13.0285, 62.7851, 17.9131, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_72 { pt3dadd( -13.2129, 63.666, 18.3516, 0.66 ) }
    dend_72 { pt3dadd( -13.5221, 64.9414, 19.0798, 0.66 ) }
    dend_72 { pt3dadd( -13.865, 66.1976, 19.8645, 0.88 ) }
    dend_72 { pt3dadd( -13.9096, 66.3891, 19.9791, 0.88 ) }
    dend_72 { pt3dadd( -14.0876, 67.4321, 20.6136, 0.88 ) }
    dend_72 { pt3dadd( -14.2534, 68.8996, 21.4272, 1.11 ) }
    dend_72 { pt3dadd( -14.2831, 69.4189, 21.6887, 0.88 ) }
    dend_72 { pt3dadd( -14.3089, 70.1812, 22.0469, 0.59 ) }
    dend_72 { pt3dadd( -14.4132, 71.5834, 22.6045, 0.59 ) }
    dend_72 { pt3dadd( -14.5521, 72.6728, 23.0246, 0.44 ) }
    dend_72 { pt3dadd( -14.6753, 73.4006, 23.2884, 0.44 ) }
    dend_72 { pt3dadd( -14.7019, 73.5117, 23.3182, 0.44 ) }
    dend_72 { pt3dadd( -15.0435, 74.365, 23.5215, 0.44 ) }
    dend_72 { pt3dadd( -15.2744, 74.7493, 23.6014, 0.44 ) }
    dend_72 { pt3dadd( -15.5713, 75.1114, 23.6439, 0.44 ) }
    dend_72 { pt3dadd( -15.7231, 75.294, 23.6453, 0.44 ) }
    dend_72 { pt3dadd( -15.9345, 75.733, 23.661, 0.74 ) }
    dend_72 { pt3dadd( -16.1442, 76.6221, 23.7082, 0.96 ) }
    dend_72 { pt3dadd( -16.1437, 76.685, 23.712, 0.96 ) }
    dend_72 { pt3dadd( -16.0903, 77.1425, 23.742, 0.96 ) }
    dend_72 { pt3dadd( -16.0763, 77.2143, 23.7466, 0.96 ) }
    dend_72 { pt3dadd( -15.8286, 78.3582, 23.8158, 0.44 ) }
    dend_72 { pt3dadd( -15.8154, 78.4303, 23.8194, 0.44 ) }
    dend_72 { pt3dadd( -15.7368, 79.3611, 23.8523, 0.44 ) }
    dend_72 { pt3dadd( -15.7364, 79.4726, 23.8544, 0.44 ) }
    dend_72 { pt3dadd( -15.7802, 80.2516, 23.8414, 0.44 ) }
    dend_72 { pt3dadd( -15.8649, 81.0155, 23.8034, 0.96 ) }
    dend_72 { pt3dadd( -16.0619, 82.1892, 23.7285, 0.96 ) }
    dend_72 { pt3dadd( -16.3952, 83.6254, 23.6376, 0.96 ) }
    dend_72 { pt3dadd( -16.6252, 84.4197, 23.5865, 0.96 ) }
    dend_72 { pt3dadd( -16.8361, 85.119, 23.5427, 0.44 ) }
    dend_72 { pt3dadd( -17.1816, 86.235, 23.4774, 0.44 ) }
    dend_72 { pt3dadd( -17.5979, 87.6025, 23.4065, 0.44 ) }
    dend_72 { pt3dadd( -17.9198, 88.7207, 23.3719, 0.44 ) }
    dend_72 { pt3dadd( -17.9499, 88.8352, 23.3717, 0.44 ) }
    dend_72 { pt3dadd( -18.1494, 89.6678, 23.408, 0.44 ) }
    dend_72 { pt3dadd( -18.2961, 90.3326, 23.4684, 0.74 ) }
    dend_72 { pt3dadd( -18.4038, 90.8852, 23.5342, 0.81 ) }
    dend_72 { pt3dadd( -18.5763, 91.8219, 23.6598, 0.81 ) }
    dend_72 { pt3dadd( -18.5943, 91.924, 23.6752, 0.81 ) }
    dend_72 { pt3dadd( -18.8234, 92.7833, 23.8121, 0.29 ) }
    dend_72 { pt3dadd( -18.965, 93.1329, 23.8725, 0.29 ) }
    dend_72 { pt3dadd( -19.0397, 93.2911, 23.8971, 0.29 ) }
    dend_72 { pt3dadd( -19.3053, 93.8105, 23.9616, 0.29 ) }
    dend_72 { pt3dadd( -19.4087, 93.9959, 23.977, 0.29 ) }
    dend_72 { pt3dadd( -19.6707, 94.4707, 24.0021, 0.29 ) }
    dend_72 { pt3dadd( -19.7252, 94.5665, 24.0039, 0.29 ) }
    dend_72 { pt3dadd( -20.2009, 95.433, 24.0142, 0.29 ) }
    dend_72 { pt3dadd( -20.4459, 95.8808, 24.0254, 0.29 ) }
    dend_72 { pt3dadd( -20.4852, 95.9539, 24.0282, 0.29 ) }
    dend_72 { pt3dadd( -20.6314, 96.2164, 24.043, 0.88 ) }
    dend_72 { pt3dadd( -20.9483, 96.8953, 24.085, 0.88 ) }
    dend_72 { pt3dadd( -21.3883, 97.8634, 24.1177, 0.88 ) }
    dend_72 { pt3dadd( -21.6413, 98.3842, 24.1251, 0.88 ) }
    dend_72 { pt3dadd( -21.6743, 98.449, 24.1248, 0.88 ) }
    dend_72 { pt3dadd( -22.207, 99.4351, 24.102, 0.29 ) }
    dend_72 { pt3dadd( -23.0289, 100.906, 24.0435, 0.29 ) }
    dend_72 { pt3dadd( -23.4011, 101.579, 23.9929, 0.59 ) }
    dend_72 { pt3dadd( -23.7969, 102.289, 23.9117, 0.59 ) }
    dend_72 { pt3dadd( -24.0975, 102.832, 23.8344, 0.29 ) }
    dend_72 { pt3dadd( -24.4718, 103.474, 23.7319, 0.29 ) }
    dend_72 { pt3dadd( -24.5498, 103.593, 23.7102, 0.29 ) }
    dend_72 { pt3dadd( -25.0181, 104.213, 23.5966, 0.29 ) }
    dend_72 { pt3dadd( -25.0801, 104.303, 23.5852, 0.29 ) }
    dend_72 { pt3dadd( -25.4722, 104.898, 23.5118, 0.29 ) }
    dend_72 { pt3dadd( -25.6252, 105.125, 23.4884, 0.29 ) }
    dend_72 { pt3dadd( -25.9628, 105.605, 23.5087, 0.29 ) }
    dend_72 { pt3dadd( -26.0117, 105.671, 23.518, 0.29 ) }
    dend_72 { pt3dadd( -26.6268, 106.459, 23.6798, 0.29 ) }
    dend_72 { pt3dadd( -26.877, 106.77, 23.7502, 1.11 ) }
    dend_72 { pt3dadd( -27.4121, 107.422, 23.9061, 1.33 ) }
    dend_72 { pt3dadd( -28.2345, 108.442, 24.158, 0.74 ) }
    dend_72 { pt3dadd( -28.8143, 109.209, 24.3151, 0.44 ) }
    dend_72 { pt3dadd( -29.394, 110.034, 24.4421, 0.44 ) }
    dend_72 { pt3dadd( -29.524, 110.233, 24.4623, 0.44 ) }
    dend_72 { pt3dadd( -29.719, 110.555, 24.4749, 0.44 ) }
    dend_72 { pt3dadd( -29.7945, 110.691, 24.4597, 0.44 ) }
    dend_72 { pt3dadd( -30.3355, 111.734, 24.21, 0.44 ) }
    dend_72 { pt3dadd( -30.7008, 112.446, 24.0187, 1.11 ) }
    dend_72 { pt3dadd( -31.0607, 113.157, 23.8169, 1.55 ) }
    dend_72 { pt3dadd( -31.3325, 113.724, 23.6631, 1.55 ) }
    dend_72 { pt3dadd( -31.9127, 114.97, 23.3388, 0.22 ) }
    dend_72 { pt3dadd( -32.2657, 115.771, 23.1501, 0.22 ) }
    dend_72 { pt3dadd( -32.6187, 116.611, 22.9812, 0.22 ) }
    dend_72 { pt3dadd( -32.6569, 116.713, 22.9625, 0.22 ) }
    dend_72 { pt3dadd( -32.9654, 117.648, 22.8248, 0.22 ) }
    dend_72 { pt3dadd( -33.0569, 117.945, 22.7986, 0.22 ) }
    dend_72 { pt3dadd( -33.2656, 118.68, 22.7948, 0.22 ) }
    dend_72 { pt3dadd( -33.4424, 119.207, 22.7948, 0.96 ) }
    dend_72 { pt3dadd( -33.5474, 119.491, 22.7948, 0.96 ) }
    dend_72 { pt3dadd( -33.7394, 119.932, 22.81, 0.22 ) }
    dend_72 { pt3dadd( -34.0105, 120.463, 22.8433, 0.22 ) }
    dend_72 { pt3dadd( -34.1081, 120.652, 22.8588, 0.22 ) }
    dend_72 { pt3dadd( -34.8928, 122.197, 23.0082, 0.22 ) }
    dend_72 { pt3dadd( -34.9575, 122.337, 23.0315, 0.22 ) }
    dend_72 { pt3dadd( -35.2902, 123.099, 23.196, 0.81 ) }
    dend_72 { pt3dadd( -35.3167, 123.164, 23.2129, 0.81 ) }
    dend_72 { pt3dadd( -35.6085, 123.925, 23.4408, 1.33 ) }
    dend_72 { pt3dadd( -35.7822, 124.399, 23.6036, 1.33 ) }
    dend_72 { pt3dadd( -36.2022, 125.326, 24.0039, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_72 { pt3dadd( -36.4426, 125.771, 24.204, 0.15 ) }
    dend_72 { pt3dadd( -36.4998, 125.858, 24.2388, 0.15 ) }
    dend_72 { pt3dadd( -37.0602, 126.63, 24.5374, 0.15 ) }
    dend_72 { pt3dadd( -37.142, 126.729, 24.5742, 0.15 ) }
    dend_72 { pt3dadd( -38.8817, 128.682, 25.2446, 0.15 ) }
    dend_72 { pt3dadd( -38.9994, 128.807, 25.2713, 0.15 ) }
    dend_72 { pt3dadd( -40.544, 130.325, 25.4377, 0.15 ) }
    dend_72 { pt3dadd( -40.6621, 130.433, 25.4388, 1.03 ) }
    dend_72 { pt3dadd( -41.226, 130.9, 25.3789, 1.03 ) }
    dend_72 { pt3dadd( -41.2814, 130.944, 25.3679, 1.03 ) }
    dend_72 { pt3dadd( -42.5769, 131.807, 24.8287, 0.15 ) }
    dend_72 { pt3dadd( -43.6143, 132.451, 24.3315, 0.15 ) }
    dend_72 { pt3dadd( -43.7412, 132.514, 24.2516, 0.59 ) }
    dend_72 { pt3dadd( -44.1995, 132.746, 23.9592, 0.59 ) }
    dend_72 { pt3dadd( -48.3968, 142.257, 24.531, 0.59 ) }
    dend_72 { pt3dadd( -54.4613, 150.594, 24.1055, 0.59 ) }
    dend_72 { pt3dadd( -61.1914, 158.282, 25.1553, 0.59 ) }
    dend_72 { pt3dadd( -67.9476, 165.987, 25.8652, 0.59 ) }
    dend_72 { pt3dadd( -75.175, 173.145, 27.0031, 0.59 ) }
    dend_72 { pt3dadd( -80.9352, 181.634, 28.2079, 0.59 ) }
    dend_72 { pt3dadd( -86.5962, 190.276, 28.6646, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.173788, 27.5268, 0.767386, 0.66 ) }
    dend_71 { pt3dadd( -0.690886, 28.1797, 0.255288, 0.66 ) }
    dend_71 { pt3dadd( -1.50164, 28.845, -0.473396, 0.52 ) }
    dend_71 { pt3dadd( -2.01014, 29.183, -0.87026, 0.52 ) }
    dend_71 { pt3dadd( -2.06163, 29.2162, -0.905581, 0.52 ) }
    dend_71 { pt3dadd( -3.01646, 29.8294, -1.52159, 0.52 ) }
    dend_71 { pt3dadd( -3.13945, 29.9119, -1.59968, 0.52 ) }
    dend_71 { pt3dadd( -4.59467, 30.9918, -2.4967, 0.88 ) }
    dend_71 { pt3dadd( -5.14526, 31.4863, -2.80011, 0.96 ) }
    dend_71 { pt3dadd( -5.7182, 32.2052, -3.0898, 0.96 ) }
    dend_71 { pt3dadd( -5.7559, 32.2644, -3.10705, 0.96 ) }
    dend_71 { pt3dadd( -6.24576, 33.2272, -3.32493, 0.66 ) }
    dend_71 { pt3dadd( -6.83715, 34.5517, -3.59952, 0.66 ) }
    dend_71 { pt3dadd( -7.37339, 35.9167, -3.84212, 0.66 ) }
    dend_71 { pt3dadd( -8.16796, 37.8264, -4.18049, 0.66 ) }
    dend_71 { pt3dadd( -8.19839, 37.891, -4.19385, 0.66 ) }
    dend_71 { pt3dadd( -8.91632, 39.2151, -4.48855, 0.44 ) }
    dend_71 { pt3dadd( -9.44161, 40.0308, -4.67994, 0.44 ) }
    dend_71 { pt3dadd( -10.0018, 40.7335, -4.86802, 0.88 ) }
    dend_71 { pt3dadd( -10.917, 41.726, -5.1731, 0.88 ) }
    dend_71 { pt3dadd( -11.7243, 42.5426, -5.42904, 0.44 ) }
    dend_71 { pt3dadd( -12.2747, 43.1072, -5.59149, 0.96 ) }
    dend_71 { pt3dadd( -12.8306, 43.6734, -5.73534, 1.25 ) }
    dend_71 { pt3dadd( -13.5654, 44.4301, -5.92491, 1.25 ) }
    dend_71 { pt3dadd( -14.4914, 45.3768, -6.08944, 0.52 ) }
    dend_71 { pt3dadd( -15.3563, 46.2785, -6.15021, 0.29 ) }
    dend_71 { pt3dadd( -15.5177, 46.4564, -6.14118, 0.29 ) }
    dend_71 { pt3dadd( -16.0871, 47.1109, -6.07038, 0.29 ) }
    dend_71 { pt3dadd( -16.4903, 47.6115, -5.98923, 0.29 ) }
    dend_71 { pt3dadd( -17.2573, 48.6553, -5.76703, 0.29 ) }
    dend_71 { pt3dadd( -17.7979, 49.4919, -5.56519, 0.29 ) }
    dend_71 { pt3dadd( -18.1216, 50.091, -5.44371, 0.29 ) }
    dend_71 { pt3dadd( -18.3472, 50.5915, -5.36959, 0.29 ) }
    dend_71 { pt3dadd( -18.71, 51.5868, -5.27353, 0.66 ) }
    dend_71 { pt3dadd( -18.9393, 52.3278, -5.22984, 0.96 ) }
    dend_71 { pt3dadd( -19.2396, 53.4091, -5.22194, 0.96 ) }
    dend_71 { pt3dadd( -19.4205, 54.0915, -5.20874, 0.96 ) }
    dend_71 { pt3dadd( -19.6053, 54.7779, -5.18788, 0.52 ) }
    dend_71 { pt3dadd( -19.7567, 55.2887, -5.16648, 0.37 ) }
    dend_71 { pt3dadd( -19.9156, 55.7211, -5.10299, 0.37 ) }
    dend_71 { pt3dadd( -19.9826, 55.8641, -5.06513, 0.37 ) }
    dend_71 { pt3dadd( -20.4059, 56.5482, -4.80077, 0.37 ) }
    dend_71 { pt3dadd( -20.5859, 56.7887, -4.69153, 0.37 ) }
    dend_71 { pt3dadd( -20.9577, 57.2446, -4.48209, 0.37 ) }
    dend_71 { pt3dadd( -21.8632, 58.3161, -4.00142, 0.37 ) }
    dend_71 { pt3dadd( -21.9968, 58.4735, -3.93289, 0.37 ) }
    dend_71 { pt3dadd( -22.6939, 59.2975, -3.65994, 0.37 ) }
    dend_71 { pt3dadd( -23.1081, 59.7877, -3.55879, 0.66 ) }
    dend_71 { pt3dadd( -23.6331, 60.4384, -3.50532, 0.66 ) }
    dend_71 { pt3dadd( -24.3455, 61.4031, -3.56441, 0.66 ) }
    dend_71 { pt3dadd( -24.3855, 61.4621, -3.57637, 0.66 ) }
    dend_71 { pt3dadd( -25.2327, 62.8486, -3.89266, 0.29 ) }
    dend_71 { pt3dadd( -25.6348, 63.5793, -4.08925, 0.29 ) }
    dend_71 { pt3dadd( -25.7344, 63.7762, -4.14686, 0.29 ) }
    dend_71 { pt3dadd( -26.1296, 64.6474, -4.40477, 0.88 ) }
    dend_71 { pt3dadd( -26.402, 65.3444, -4.59887, 0.88 ) }
    dend_71 { pt3dadd( -26.5567, 65.7784, -4.67161, 0.88 ) }
    dend_71 { pt3dadd( -26.748, 66.3775, -4.69744, 0.37 ) }
    dend_71 { pt3dadd( -26.7716, 66.4578, -4.69941, 0.37 ) }
    dend_71 { pt3dadd( -26.9321, 66.9661, -4.69733, 0.37 ) }
    dend_71 { pt3dadd( -27.0082, 67.1825, -4.68623, 0.37 ) }
    dend_71 { pt3dadd( -27.5214, 68.4094, -4.5842, 0.37 ) }
    dend_71 { pt3dadd( -27.5519, 68.4756, -4.58115, 0.37 ) }
    dend_71 { pt3dadd( -27.8058, 68.9898, -4.56868, 1.11 ) }
    dend_71 { pt3dadd( -28.4195, 70.1665, -4.56941, 1.11 ) }
    dend_71 { pt3dadd( -29.0214, 71.2619, -4.5914, 1.11 ) }
    dend_71 { pt3dadd( -29.6574, 72.3876, -4.68212, 1.11 ) }
    dend_71 { pt3dadd( -30.1401, 73.2256, -4.79629, 1.11 ) }
    dend_71 { pt3dadd( -30.3522, 73.5878, -4.86136, 0.44 ) }
    dend_71 { pt3dadd( -30.9315, 74.4474, -5.0446, 0.44 ) }
    dend_71 { pt3dadd( -31.0935, 74.6628, -5.09566, 0.44 ) }
    dend_71 { pt3dadd( -31.9551, 75.7265, -5.34099, 0.44 ) }
    dend_71 { pt3dadd( -32.0015, 75.7805, -5.35112, 0.44 ) }
    dend_71 { pt3dadd( -32.6326, 76.4969, -5.42596, 0.44 ) }
    dend_71 { pt3dadd( -34.4289, 78.5193, -5.54593, 0.44 ) }
    dend_71 { pt3dadd( -34.835, 78.9678, -5.55413, 1.33 ) }
    dend_71 { pt3dadd( -35.3927, 79.6122, -5.53632, 1.62 ) }
    dend_71 { pt3dadd( -36.0881, 80.4906, -5.46073, 0.96 ) }
    dend_71 { pt3dadd( -36.5229, 81.0948, -5.40383, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_71 { pt3dadd( -37.1522, 82.0598, -5.30432, 0.37 ) }
    dend_71 { pt3dadd( -37.1929, 82.1316, -5.29636, 0.37 ) }
    dend_71 { pt3dadd( -38.1415, 83.8926, -5.11887, 0.37 ) }
    dend_71 { pt3dadd( -38.8826, 85.34, -4.99669, 0.37 ) }
    dend_71 { pt3dadd( -39.2898, 86.1694, -4.93946, 0.74 ) }
    dend_71 { pt3dadd( -39.503, 86.6087, -4.91836, 0.29 ) }
    dend_71 { pt3dadd( -39.5766, 86.7642, -4.91051, 0.29 ) }
    dend_71 { pt3dadd( -40.3345, 88.3962, -4.82804, 0.29 ) }
    dend_71 { pt3dadd( -40.3974, 88.539, -4.82108, 0.29 ) }
    dend_71 { pt3dadd( -40.7241, 89.299, -4.79193, 1.55 ) }
    dend_71 { pt3dadd( -41.0631, 90.1348, -4.7588, 1.62 ) }
    dend_71 { pt3dadd( -41.3526, 90.8528, -4.73252, 1.03 ) }
    dend_71 { pt3dadd( -41.3808, 90.92, -4.7304, 1.03 ) }
    dend_71 { pt3dadd( -41.6354, 91.5004, -4.71548, 0.37 ) }
    dend_71 { pt3dadd( -41.6655, 91.5668, -4.71435, 0.37 ) }
    dend_71 { pt3dadd( -42.0633, 92.3926, -4.71063, 0.37 ) }
    dend_71 { pt3dadd( -42.548, 93.3376, -4.71063, 1.11 ) }
    dend_71 { pt3dadd( -42.9438, 94.0843, -4.70034, 1.11 ) }
    dend_71 { pt3dadd( -43.1509, 94.4644, -4.6894, 0.52 ) }
    dend_71 { pt3dadd( -43.2294, 94.6173, -4.68314, 0.52 ) }
    dend_71 { pt3dadd( -43.5274, 95.2508, -4.65275, 0.52 ) }
    dend_71 { pt3dadd( -43.6561, 95.5477, -4.63694, 0.52 ) }
    dend_71 { pt3dadd( -43.8796, 96.1167, -4.60541, 0.52 ) }
    dend_71 { pt3dadd( -44.0606, 96.6004, -4.58068, 1.11 ) }
    dend_71 { pt3dadd( -44.5049, 97.8248, -4.5251, 1.11 ) }
    dend_71 { pt3dadd( -44.7371, 98.4389, -4.50212, 0.37 ) }
    dend_71 { pt3dadd( -45.0742, 99.2936, -4.4777, 0.37 ) }
    dend_71 { pt3dadd( -45.1661, 99.5035, -4.47395, 0.37 ) }
    dend_71 { pt3dadd( -45.5793, 100.359, -4.47056, 0.37 ) }
    dend_71 { pt3dadd( -45.7438, 100.666, -4.47159, 0.37 ) }
    dend_71 { pt3dadd( -46.2802, 101.544, -4.47776, 0.37 ) }
    dend_71 { pt3dadd( -46.6323, 102.083, -4.48346, 0.88 ) }
    dend_71 { pt3dadd( -47.0256, 102.657, -4.4914, 0.88 ) }
    dend_71 { pt3dadd( -47.0673, 102.716, -4.49232, 0.88 ) }
    dend_71 { pt3dadd( -47.2059, 102.905, -4.49441, 0.29 ) }
    dend_71 { pt3dadd( -47.2975, 103.03, -4.49516, 0.29 ) }
    dend_71 { pt3dadd( -48.0229, 104.039, -4.49618, 0.29 ) }
    dend_71 { pt3dadd( -48.0644, 104.098, -4.50032, 0.29 ) }
    dend_71 { pt3dadd( -48.5708, 104.796, -4.58938, 0.81 ) }
    dend_71 { pt3dadd( -48.9277, 105.266, -4.66773, 1.11 ) }
    dend_71 { pt3dadd( -49.1443, 105.517, -4.71868, 1.11 ) }
    dend_71 { pt3dadd( -49.1939, 105.567, -4.73123, 1.11 ) }
    dend_71 { pt3dadd( -49.9144, 106.172, -4.91858, 0.22 ) }
    dend_71 { pt3dadd( -50.4184, 106.553, -5.03778, 0.22 ) }
    dend_71 { pt3dadd( -50.5062, 106.613, -5.05732, 0.22 ) }
    dend_71 { pt3dadd( -51.2787, 107.144, -5.21089, 0.22 ) }
    dend_71 { pt3dadd( -51.4562, 107.276, -5.24304, 0.22 ) }
    dend_71 { pt3dadd( -52.022, 107.737, -5.32503, 0.22 ) }
    dend_71 { pt3dadd( -52.3746, 108.072, -5.35099, 0.22 ) }
    dend_71 { pt3dadd( -52.4412, 108.149, -5.35777, 0.66 ) }
    dend_71 { pt3dadd( -52.7419, 108.576, -5.42365, 0.66 ) }
    dend_71 { pt3dadd( -53.0304, 109.084, -5.52146, 0.15 ) }
    dend_71 { pt3dadd( -53.1374, 109.273, -5.55902, 0.15 ) }
    dend_71 { pt3dadd( -53.5581, 110.019, -5.71445, 0.15 ) }
    dend_71 { pt3dadd( -53.6366, 110.151, -5.73546, 0.15 ) }
    dend_71 { pt3dadd( -54.0302, 110.779, -5.80704, 0.59 ) }
    dend_71 { pt3dadd( -54.717, 111.746, -5.86237, 0.59 ) }
    dend_71 { pt3dadd( -55.0927, 112.235, -5.85605, 0.59 ) }
    dend_71 { pt3dadd( -55.1445, 112.299, -5.8521, 0.59 ) }
    dend_71 { pt3dadd( -55.5861, 112.825, -5.79246, 0.22 ) }
    dend_71 { pt3dadd( -55.6327, 112.88, -5.78579, 0.22 ) }
    dend_71 { pt3dadd( -56.1028, 113.407, -5.71471, 0.22 ) }
    dend_71 { pt3dadd( -56.359, 113.689, -5.69643, 0.22 ) }
    dend_71 { pt3dadd( -56.9925, 114.399, -5.6946, 0.22 ) }
    dend_71 { pt3dadd( -57.2588, 114.711, -5.70509, 0.22 ) }
    dend_71 { pt3dadd( -57.4937, 114.988, -5.72341, 0.74 ) }
    dend_71 { pt3dadd( -58.1112, 115.719, -5.77791, 0.74 ) }
    dend_71 { pt3dadd( -58.4901, 116.171, -5.81383, 0.22 ) }
    dend_71 { pt3dadd( -58.5813, 116.283, -5.82267, 0.22 ) }
    dend_71 { pt3dadd( -60.0069, 117.989, -5.94784, 0.22 ) }
    dend_71 { pt3dadd( -60.223, 118.237, -5.98366, 0.81 ) }
    dend_71 { pt3dadd( -60.9499, 119.043, -6.14166, 0.81 ) }
    dend_71 { pt3dadd( -60.9963, 119.096, -6.15698, 0.81 ) }
    dend_71 { pt3dadd( -61.2158, 119.343, -6.25075, 0.15 ) }
    dend_71 { pt3dadd( -62.0106, 120.224, -6.66077, 0.15 ) }
    dend_71 { pt3dadd( -62.8487, 121.141, -7.21026, 0.66 ) }
    dend_71 { pt3dadd( -63.1115, 121.448, -7.38473, 0.66 ) }
    dend_71 { pt3dadd( -63.7981, 122.318, -7.84692, 0.15 ) }
    dend_71 { pt3dadd( -64.0309, 122.631, -7.99397, 0.37 ) }
    dend_71 { pt3dadd( -64.1833, 122.846, -8.09845, 0.15 ) }
    dend_71 { pt3dadd( -64.2181, 122.903, -8.12531, 0.15 ) }
    dend_71 { pt3dadd( -64.7758, 123.858, -8.45955, 0.15 ) }
    dend_71 { pt3dadd( -64.9247, 124.113, -8.54854, 1.03 ) }
    dend_71 { pt3dadd( -65.2131, 124.578, -8.75736, 1.03 ) }
    dend_71 { pt3dadd( -65.7212, 125.416, -9.18276, 0.22 ) }
    dend_71 { pt3dadd( -65.7548, 125.471, -9.21398, 0.22 ) }
    dend_71 { pt3dadd( -66.425, 126.594, -9.95616, 0.22 ) }
    dend_71 { pt3dadd( -66.4557, 126.648, -9.99286, 0.22 ) }
    dend_71 { pt3dadd( -66.9599, 127.558, -10.5811, 0.88 ) }
    dend_71 { pt3dadd( -67.2011, 128.011, -10.8014, 0.88 ) }
    dend_71 { pt3dadd( -67.2347, 128.074, -10.8119, 0.88 ) }
    dend_71 { pt3dadd( -67.534, 128.621, -10.776, 0.22 ) }
    dend_71 { pt3dadd( -68.2206, 129.883, -10.535, 0.22 ) }
    dend_71 { pt3dadd( -68.2547, 129.945, -10.5193, 0.22 ) }
    dend_71 { pt3dadd( -68.8401, 130.971, -10.1925, 0.22 ) }
    dend_71 { pt3dadd( -69.6027, 132.214, -9.80196, 0.22 ) }
    dend_71 { pt3dadd( -70.2557, 133.229, -9.4895, 0.22 ) }
    dend_71 { pt3dadd( -70.7336, 133.955, -9.27353, 1.11 ) }
    dend_71 { pt3dadd( -70.8215, 134.086, -9.23673, 1.11 ) }
    dend_71 { pt3dadd( -71.0662, 134.448, -9.15674, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_71 { pt3dadd( -71.8161, 135.562, -9.06833, 0.22 ) }
    dend_71 { pt3dadd( -72.0368, 135.876, -9.08463, 0.66 ) }
    dend_71 { pt3dadd( -72.5594, 136.579, -9.13383, 0.66 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 19.9509, 13.5304, -26.7113, 0.81 ) }
    dend_63 { pt3dadd( 20.7435, 13.4624, -28.4569, 0.81 ) }
    dend_63 { pt3dadd( 20.7804, 13.4652, -28.5278, 0.81 ) }
    dend_63 { pt3dadd( 21.1864, 13.5188, -29.2755, 0.81 ) }
    dend_63 { pt3dadd( 21.3728, 13.5654, -29.592, 0.81 ) }
    dend_63 { pt3dadd( 21.9969, 13.7671, -30.6046, 0.52 ) }
    dend_63 { pt3dadd( 24.4131, 14.7392, -34.306, 0.81 ) }
    dend_63 { pt3dadd( 25.0897, 15.1334, -35.2153, 0.81 ) }
    dend_63 { pt3dadd( 25.1366, 15.1634, -35.2735, 0.81 ) }
    dend_63 { pt3dadd( 25.8861, 15.7082, -36.1639, 0.81 ) }
    dend_63 { pt3dadd( 25.978, 15.775, -36.2639, 0.81 ) }
    dend_63 { pt3dadd( 26.5174, 16.1038, -36.754, 0.81 ) }
    dend_63 { pt3dadd( 27.5109, 16.4614, -37.2451, 0.52 ) }
    dend_63 { pt3dadd( 27.9002, 16.4599, -37.9208, 0.52 ) }
    dend_63 { pt3dadd( 27.9971, 16.4573, -38.1016, 0.52 ) }
    dend_63 { pt3dadd( 28.4951, 16.3849, -39.1429, 0.81 ) }
    dend_63 { pt3dadd( 29.3223, 16.2169, -41.0312, 0.81 ) }
    dend_63 { pt3dadd( 29.3472, 16.2099, -41.0963, 0.81 ) }
    dend_63 { pt3dadd( 30.5966, 15.8394, -44.8853, 0.74 ) }
    dend_63 { pt3dadd( 30.9581, 15.7951, -46.0447, 1.84 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 23/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 19.9509, 13.5304, -26.7113, 1.4 ) }
    dend_60 { pt3dadd( 19.9955, 13.537, -26.6743, 1.4 ) }
    dend_60 { pt3dadd( 23.0214, 14.0389, -24.5909, 0.96 ) }
    dend_60 { pt3dadd( 23.2374, 14.0798, -24.476, 0.96 ) }
    dend_60 { pt3dadd( 24.7984, 14.3895, -23.8306, 0.96 ) }
    dend_60 { pt3dadd( 24.8907, 14.4095, -23.8001, 0.96 ) }
    dend_60 { pt3dadd( 26.5427, 14.7814, -23.3216, 0.96 ) }
    dend_60 { pt3dadd( 26.6098, 14.7986, -23.3105, 0.96 ) }
    dend_60 { pt3dadd( 27.9318, 15.2163, -23.3141, 1.18 ) }
    dend_60 { pt3dadd( 28.9848, 15.5853, -23.3141, 0.88 ) }
    dend_60 { pt3dadd( 29.9721, 15.9665, -23.3141, 0.88 ) }
    dend_60 { pt3dadd( 30.0375, 15.9928, -23.3141, 0.88 ) }
    dend_60 { pt3dadd( 30.6213, 16.2398, -23.3477, 0.88 ) }
    dend_60 { pt3dadd( 31.4375, 16.5965, -23.4237, 0.88 ) }
    dend_60 { pt3dadd( 31.5014, 16.6253, -23.4314, 0.88 ) }
    dend_60 { pt3dadd( 33.5112, 17.5248, -23.6892, 0.88 ) }
    dend_60 { pt3dadd( 33.6021, 17.5641, -23.7011, 0.88 ) }
    dend_60 { pt3dadd( 35.6666, 18.3954, -24.0427, 1.18 ) }
    dend_60 { pt3dadd( 37.1262, 18.9557, -24.3213, 1.18 ) }
    dend_60 { pt3dadd( 37.4871, 19.0892, -24.3968, 1.18 ) }
    dend_60 { pt3dadd( 39.0663, 19.709, -24.7411, 1.18 ) }
    dend_60 { pt3dadd( 39.3483, 19.8264, -24.8069, 1.18 ) }
    dend_60 { pt3dadd( 41.2352, 20.5489, -25.2081, 1.18 ) }
    dend_60 { pt3dadd( 41.4443, 20.61, -25.2438, 1.18 ) }
    dend_60 { pt3dadd( 41.9698, 20.7117, -25.33, 0.52 ) }
    dend_60 { pt3dadd( 43.3006, 20.8344, -25.5118, 0.52 ) }
    dend_60 { pt3dadd( 43.3702, 20.8334, -25.519, 0.52 ) }
    dend_60 { pt3dadd( 44.6802, 20.7207, -25.5876, 0.88 ) }
    dend_60 { pt3dadd( 46.1178, 20.4852, -25.5716, 0.88 ) }
    dend_60 { pt3dadd( 46.3748, 20.4391, -25.5744, 0.88 ) }
    dend_60 { pt3dadd( 47.3647, 20.2548, -25.6025, 1.25 ) }
    dend_60 { pt3dadd( 47.5822, 20.2209, -25.6111, 1.25 ) }
    dend_60 { pt3dadd( 48.54, 20.1701, -25.6543, 1.25 ) }
    dend_60 { pt3dadd( 48.6797, 20.1755, -25.6614, 1.25 ) }
    dend_60 { pt3dadd( 50.2653, 20.3416, -25.8128, 1.11 ) }
    dend_60 { pt3dadd( 51.8671, 20.5602, -26.0074, 1.11 ) }
    dend_60 { pt3dadd( 53.1483, 20.7361, -26.1798, 0.81 ) }
    dend_60 { pt3dadd( 54.5786, 20.9182, -26.3829, 0.81 ) }
    dend_60 { pt3dadd( 54.8065, 20.9378, -26.4143, 0.81 ) }
    dend_60 { pt3dadd( 56.828, 21.0304, -26.6723, 0.81 ) }
    dend_60 { pt3dadd( 56.9336, 21.0313, -26.6848, 0.81 ) }
    dend_60 { pt3dadd( 59.1577, 20.9635, -26.9357, 0.81 ) }
    dend_60 { pt3dadd( 59.2632, 20.9554, -26.9457, 0.81 ) }
    dend_60 { pt3dadd( 61.6062, 20.6957, -27.1183, 0.81 ) }
    dend_60 { pt3dadd( 62.5501, 20.6078, -27.2156, 0.96 ) }
    dend_60 { pt3dadd( 62.7787, 20.5896, -27.2431, 0.96 ) }
    dend_60 { pt3dadd( 63.8073, 20.5363, -27.4041, 0.74 ) }
    dend_60 { pt3dadd( 65.1831, 20.5111, -27.6618, 0.74 ) }
    dend_60 { pt3dadd( 65.2518, 20.5111, -27.6756, 0.74 ) }
    dend_60 { pt3dadd( 68.1061, 20.5715, -28.3886, 0.74 ) }
    dend_60 { pt3dadd( 68.9788, 20.5918, -28.6198, 1.4 ) }
    dend_60 { pt3dadd( 70.7632, 20.6312, -29.1131, 1.77 ) }
    dend_60 { pt3dadd( 71.818, 20.6568, -29.4241, 1.77 ) }
    dend_60 { pt3dadd( 72.105, 20.6625, -29.5114, 1.77 ) }
    dend_60 { pt3dadd( 73.6279, 20.6756, -29.9333, 1.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -15.3531, 41.8796, 14.8997, 0.44 ) }
    dend_55 { pt3dadd( -16.6932, 42.3644, 16.1495, 0.44 ) }
    dend_55 { pt3dadd( -17.9431, 42.8575, 17.2462, 0.44 ) }
    dend_55 { pt3dadd( -19.3489, 43.4411, 18.4421, 0.44 ) }
    dend_55 { pt3dadd( -19.4007, 43.4628, 18.4844, 0.44 ) }
    dend_55 { pt3dadd( -20.9622, 44.1204, 19.7343, 0.74 ) }
    dend_55 { pt3dadd( -21.6011, 44.3682, 20.2299, 0.74 ) }
    dend_55 { pt3dadd( -22.02, 44.5317, 20.5092, 0.37 ) }
    dend_55 { pt3dadd( -22.0759, 44.5499, 20.5475, 0.37 ) }
    dend_55 { pt3dadd( -22.87, 44.7327, 21.0071, 0.37 ) }
    dend_55 { pt3dadd( -22.9202, 44.7409, 21.0391, 0.37 ) }
    dend_55 { pt3dadd( -23.7974, 44.8417, 21.6255, 0.37 ) }
    dend_55 { pt3dadd( -23.8717, 44.8515, 21.6793, 0.37 ) }
    dend_55 { pt3dadd( -24.9276, 45.0635, 22.5351, 0.37 ) }
    dend_55 { pt3dadd( -24.9963, 45.0821, 22.594, 0.37 ) }
    dend_55 { pt3dadd( -26.0331, 45.4544, 23.4642, 0.37 ) }
    dend_55 { pt3dadd( -26.5792, 45.6914, 23.8683, 0.37 ) }
    dend_55 { pt3dadd( -26.6415, 45.7263, 23.9058, 0.37 ) }
    dend_55 { pt3dadd( -27.5803, 46.2625, 24.3503, 0.37 ) }
    dend_55 { pt3dadd( -27.6382, 46.2959, 24.3735, 0.37 ) }
    dend_55 { pt3dadd( -28.5522, 46.7765, 24.6898, 0.59 ) }
    dend_55 { pt3dadd( -29.4613, 47.2076, 24.9487, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -30.6348, 47.6918, 25.2746, 0.81 ) }
    dend_55 { pt3dadd( -31.6491, 48.09, 25.546, 0.81 ) }
    dend_55 { pt3dadd( -32.6114, 48.4606, 25.7851, 0.29 ) }
    dend_55 { pt3dadd( -33.073, 48.6477, 25.9086, 0.29 ) }
    dend_55 { pt3dadd( -33.2042, 48.7069, 25.9547, 0.29 ) }
    dend_55 { pt3dadd( -34.1926, 49.1336, 26.3916, 0.29 ) }
    dend_55 { pt3dadd( -34.3332, 49.1874, 26.4624, 0.29 ) }
    dend_55 { pt3dadd( -35.1643, 49.4675, 26.8945, 0.59 ) }
    dend_55 { pt3dadd( -35.8002, 49.6354, 27.2185, 0.59 ) }
    dend_55 { pt3dadd( -37.1995, 49.9294, 27.9532, 0.15 ) }
    dend_55 { pt3dadd( -38.1824, 50.0879, 28.461, 0.37 ) }
    dend_55 { pt3dadd( -38.5123, 50.122, 28.6298, 0.74 ) }
    dend_55 { pt3dadd( -39.1067, 50.1459, 28.9597, 0.37 ) }
    dend_55 { pt3dadd( -39.5792, 50.1191, 29.2504, 0.37 ) }
    dend_55 { pt3dadd( -39.6447, 50.1133, 29.296, 0.37 ) }
    dend_55 { pt3dadd( -40.0616, 50.1285, 29.6272, 0.22 ) }
    dend_55 { pt3dadd( -40.1342, 50.2135, 29.7397, 0.22 ) }
    dend_55 { pt3dadd( -40.5531, 51.0412, 30.5965, 0.22 ) }
    dend_55 { pt3dadd( -40.585, 51.1094, 30.664, 0.22 ) }
    dend_55 { pt3dadd( -40.9282, 51.8317, 31.3285, 0.22 ) }
    dend_55 { pt3dadd( -41.0201, 51.9888, 31.5213, 0.22 ) }
    dend_55 { pt3dadd( -41.2227, 52.2471, 31.9318, 0.22 ) }
    dend_55 { pt3dadd( -41.2569, 52.2765, 31.9861, 0.22 ) }
    dend_55 { pt3dadd( -42.0758, 52.8283, 33.1089, 0.74 ) }
    dend_55 { pt3dadd( -42.4162, 53.0135, 33.527, 0.74 ) }
    dend_55 { pt3dadd( -43.895, 53.6656, 35.1924, 0.59 ) }
    dend_55 { pt3dadd( -44.9455, 54.0709, 36.2733, 0.37 ) }
    dend_55 { pt3dadd( -45.9926, 54.3845, 37.3303, 0.37 ) }
    dend_55 { pt3dadd( -46.0476, 54.3907, 37.3881, 0.37 ) }
    dend_55 { pt3dadd( -46.5386, 54.3341, 37.9899, 0.37 ) }
    dend_55 { pt3dadd( -46.6235, 54.3163, 38.0999, 0.37 ) }
    dend_55 { pt3dadd( -47.3091, 54.1139, 38.9994, 0.37 ) }
    dend_55 { pt3dadd( -48.1816, 53.8794, 40.3629, 0.88 ) }
    dend_55 { pt3dadd( -49.2304, 53.7273, 42.4745, 0.88 ) }
    dend_55 { pt3dadd( -49.975, 53.8755, 44.6748, 0.37 ) }
    dend_55 { pt3dadd( -50.2302, 54.0666, 45.829, 0.37 ) }
    dend_55 { pt3dadd( -50.248, 54.0883, 45.9317, 0.37 ) }
    dend_55 { pt3dadd( -50.4063, 54.5869, 47.6047, 0.37 ) }
    dend_55 { pt3dadd( -50.4404, 55.2275, 48.8453, 0.37 ) }
    dend_55 { pt3dadd( -50.3055, 56.7181, 50.7874, 0.37 ) }
    dend_55 { pt3dadd( -50.2923, 56.7642, 50.8402, 0.37 ) }
    dend_55 { pt3dadd( -56.6171, 57.6812, 58.5366, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -15.3531, 41.8796, 14.8997, 0.52 ) }
    dend_50 { pt3dadd( -15.5779, 43.0128, 15.6964, 0.52 ) }
    dend_50 { pt3dadd( -15.8703, 43.8925, 16.2546, 0.52 ) }
    dend_50 { pt3dadd( -15.8917, 43.9396, 16.2882, 0.52 ) }
    dend_50 { pt3dadd( -16.413, 44.8389, 17.0026, 0.52 ) }
    dend_50 { pt3dadd( -16.4563, 44.9086, 17.0635, 0.52 ) }
    dend_50 { pt3dadd( -16.9755, 45.7821, 17.8126, 0.52 ) }
    dend_50 { pt3dadd( -17.5193, 46.6273, 18.5408, 0.74 ) }
    dend_50 { pt3dadd( -18.1371, 47.6288, 19.3902, 0.74 ) }
    dend_50 { pt3dadd( -18.7128, 48.7631, 20.3065, 0.59 ) }
    dend_50 { pt3dadd( -19.103, 49.6872, 21.1316, 0.59 ) }
    dend_50 { pt3dadd( -19.4034, 50.5202, 21.9595, 0.66 ) }
    dend_50 { pt3dadd( -19.4175, 50.5681, 22.0107, 0.66 ) }
    dend_50 { pt3dadd( -19.5442, 51.1789, 22.6866, 0.66 ) }
    dend_50 { pt3dadd( -19.7507, 52.785, 24.4372, 0.52 ) }
    dend_50 { pt3dadd( -19.83, 54.605, 26.404, 0.52 ) }
    dend_50 { pt3dadd( -19.805, 55.5015, 27.3559, 0.52 ) }
    dend_50 { pt3dadd( -19.7986, 55.5762, 27.4346, 0.52 ) }
    dend_50 { pt3dadd( -19.7372, 56.2054, 28.0377, 0.52 ) }
    dend_50 { pt3dadd( -19.7208, 56.3337, 28.1481, 0.52 ) }
    dend_50 { pt3dadd( -19.5145, 57.4661, 28.8173, 0.96 ) }
    dend_50 { pt3dadd( -19.3075, 58.4305, 29.1432, 0.96 ) }
    dend_50 { pt3dadd( -19.2373, 59.0273, 29.3124, 0.52 ) }
    dend_50 { pt3dadd( -19.2402, 60.1163, 29.6488, 0.52 ) }
    dend_50 { pt3dadd( -19.2534, 60.1849, 29.6703, 0.52 ) }
    dend_50 { pt3dadd( -19.5614, 61.1702, 29.9465, 0.74 ) }
    dend_50 { pt3dadd( -19.5948, 61.244, 29.9654, 0.74 ) }
    dend_50 { pt3dadd( -20.0643, 62.2657, 30.3241, 0.74 ) }
    dend_50 { pt3dadd( -20.0873, 62.329, 30.3513, 0.74 ) }
    dend_50 { pt3dadd( -20.3582, 63.31, 30.8036, 0.37 ) }
    dend_50 { pt3dadd( -20.515, 63.8853, 31.1365, 0.37 ) }
    dend_50 { pt3dadd( -20.529, 63.9384, 31.1656, 0.37 ) }
    dend_50 { pt3dadd( -20.8996, 65.4479, 31.9462, 0.37 ) }
    dend_50 { pt3dadd( -21.068, 66.1959, 32.3728, 0.59 ) }
    dend_50 { pt3dadd( -21.4056, 67.4311, 33.1022, 0.81 ) }
    dend_50 { pt3dadd( -22.0073, 69.081, 34.2195, 0.52 ) }
    dend_50 { pt3dadd( -22.4519, 70.0717, 34.9458, 0.52 ) }
    dend_50 { pt3dadd( -23.0239, 71.1084, 35.7436, 0.52 ) }
    dend_50 { pt3dadd( -23.7811, 72.1352, 36.5497, 0.29 ) }
    dend_50 { pt3dadd( -24.4126, 72.7838, 37.1536, 0.29 ) }
    dend_50 { pt3dadd( -25.4443, 73.5598, 38.0342, 0.29 ) }
    dend_50 { pt3dadd( -25.5377, 73.6162, 38.107, 0.29 ) }
    dend_50 { pt3dadd( -26.091, 73.8779, 38.5616, 0.15 ) }
    dend_50 { pt3dadd( -26.9902, 74.1827, 39.2431, 0.15 ) }
    dend_50 { pt3dadd( -28.0722, 74.5375, 39.9182, 0.81 ) }
    dend_50 { pt3dadd( -28.6064, 74.7436, 40.2716, 0.81 ) }
    dend_50 { pt3dadd( -32.6129, 83.4004, 44.2687, 0.81 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.49347, 50.0501, 0.573803, 0.66 ) }
    dend_48 { pt3dadd( -8.31641, 50.331, 0.517427, 0.66 ) }
    dend_48 { pt3dadd( -8.11176, 50.7485, 0.4003, 0.66 ) }
    dend_48 { pt3dadd( -8.05288, 50.9088, 0.354211, 0.66 ) }
    dend_48 { pt3dadd( -7.7245, 51.9642, 0.0511524, 0.66 ) }
    dend_48 { pt3dadd( -7.71007, 52.0338, 0.0338045, 0.66 ) }
    dend_48 { pt3dadd( -7.55174, 53.1049, -0.226165, 0.66 ) }
    dend_48 { pt3dadd( -7.50665, 53.6508, -0.369413, 0.66 ) }
    dend_48 { pt3dadd( -7.50026, 54.1931, -0.495267, 0.29 ) }
    dend_48 { pt3dadd( -7.50209, 54.2649, -0.51003, 0.29 ) }
    dend_48 { pt3dadd( -7.55101, 55.4109, -0.764621, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( -7.56158, 55.9291, -0.876178, 0.29 ) }
    dend_48 { pt3dadd( -7.56188, 56.0012, -0.889828, 0.29 ) }
    dend_48 { pt3dadd( -7.52085, 57.2771, -1.14602, 0.29 ) }
    dend_48 { pt3dadd( -7.51121, 57.4467, -1.18125, 0.29 ) }
    dend_48 { pt3dadd( -7.40014, 58.9209, -1.48082, 0.29 ) }
    dend_48 { pt3dadd( -7.39211, 58.9926, -1.49384, 0.29 ) }
    dend_48 { pt3dadd( -7.34139, 59.5215, -1.58724, 0.96 ) }
    dend_48 { pt3dadd( -7.25514, 60.5147, -1.72854, 0.96 ) }
    dend_48 { pt3dadd( -7.24595, 60.5977, -1.73677, 0.96 ) }
    dend_48 { pt3dadd( -7.16871, 61.2057, -1.7762, 0.81 ) }
    dend_48 { pt3dadd( -6.99813, 62.5301, -1.81426, 0.59 ) }
    dend_48 { pt3dadd( -6.78479, 64.1328, -1.86206, 0.52 ) }
    dend_48 { pt3dadd( -6.69263, 64.8424, -1.91639, 0.37 ) }
    dend_48 { pt3dadd( -6.52173, 66.4366, -2.09912, 0.37 ) }
    dend_48 { pt3dadd( -6.44267, 67.2886, -2.22003, 1.03 ) }
    dend_48 { pt3dadd( -6.38724, 67.9863, -2.33641, 1.03 ) }
    dend_48 { pt3dadd( -6.38321, 68.0479, -2.34847, 1.03 ) }
    dend_48 { pt3dadd( -6.29153, 69.5426, -2.73674, 0.52 ) }
    dend_48 { pt3dadd( -6.26558, 70.5138, -3.04458, 0.52 ) }
    dend_48 { pt3dadd( -6.26651, 70.6815, -3.10275, 0.52 ) }
    dend_48 { pt3dadd( -6.26869, 72.162, -3.54503, 0.44 ) }
    dend_48 { pt3dadd( -6.26847, 72.2233, -3.55868, 0.44 ) }
    dend_48 { pt3dadd( -6.27621, 73.7202, -3.67268, 1.33 ) }
    dend_48 { pt3dadd( -6.27597, 75.0271, -3.5689, 1.4 ) }
    dend_48 { pt3dadd( -6.2758, 75.1369, -3.5495, 1.4 ) }
    dend_48 { pt3dadd( -6.28543, 76.1969, -3.27737, 0.22 ) }
    dend_48 { pt3dadd( -6.31137, 77.5062, -2.81998, 0.22 ) }
    dend_48 { pt3dadd( -6.36026, 78.9127, -2.25316, 0.59 ) }
    dend_48 { pt3dadd( -6.41222, 79.57, -1.94055, 0.59 ) }
    dend_48 { pt3dadd( -6.48749, 80.1934, -1.64734, 0.22 ) }
    dend_48 { pt3dadd( -6.49864, 80.2585, -1.61669, 0.22 ) }
    dend_48 { pt3dadd( -6.60803, 80.7312, -1.40349, 0.22 ) }
    dend_48 { pt3dadd( -6.77566, 81.3046, -1.13757, 0.22 ) }
    dend_48 { pt3dadd( -7.03538, 82.0288, -0.863097, 0.22 ) }
    dend_48 { pt3dadd( -7.09166, 82.1705, -0.807425, 0.22 ) }
    dend_48 { pt3dadd( -7.53053, 83.2698, -0.373468, 0.81 ) }
    dend_48 { pt3dadd( -7.55535, 83.3339, -0.349857, 0.81 ) }
    dend_48 { pt3dadd( -7.84617, 84.0697, -0.0962925, 0.81 ) }
    dend_48 { pt3dadd( -7.95687, 84.3622, -0.0129308, 0.81 ) }
    dend_48 { pt3dadd( -8.25566, 85.1826, 0.190412, 0.22 ) }
    dend_48 { pt3dadd( -8.29131, 85.2776, 0.208745, 0.22 ) }
    dend_48 { pt3dadd( -8.66462, 86.2254, 0.326974, 0.22 ) }
    dend_48 { pt3dadd( -8.8463, 86.6781, 0.372464, 0.22 ) }
    dend_48 { pt3dadd( -9.15618, 87.4378, 0.430866, 0.22 ) }
    dend_48 { pt3dadd( -9.46237, 88.1555, 0.412121, 1.03 ) }
    dend_48 { pt3dadd( -9.75021, 88.806, 0.346874, 1.03 ) }
    dend_48 { pt3dadd( -10.0873, 89.556, 0.229605, 0.66 ) }
    dend_48 { pt3dadd( -10.5497, 90.5946, 0.0113353, 0.22 ) }
    dend_48 { pt3dadd( -10.9537, 91.5452, -0.226483, 0.22 ) }
    dend_48 { pt3dadd( -11.6154, 93.111, -0.697507, 0.22 ) }
    dend_48 { pt3dadd( -11.6448, 93.1843, -0.723349, 0.22 ) }
    dend_48 { pt3dadd( -11.8363, 93.6879, -0.909443, 0.88 ) }
    dend_48 { pt3dadd( -11.9878, 94.0958, -1.05, 0.88 ) }
    dend_48 { pt3dadd( -12.2883, 94.9303, -1.2995, 0.22 ) }
    dend_48 { pt3dadd( -12.3089, 94.9878, -1.31277, 0.22 ) }
    dend_48 { pt3dadd( -12.9296, 96.6136, -1.51151, 0.22 ) }
    dend_48 { pt3dadd( -12.9807, 96.7292, -1.52444, 0.22 ) }
    dend_48 { pt3dadd( -13.3305, 97.3777, -1.63843, 0.22 ) }
    dend_48 { pt3dadd( -13.3705, 97.4361, -1.65286, 0.22 ) }
    dend_48 { pt3dadd( -13.7713, 97.9323, -1.79476, 0.96 ) }
    dend_48 { pt3dadd( -14.3213, 98.5714, -1.98849, 0.96 ) }
    dend_48 { pt3dadd( -14.3742, 98.6313, -2.00737, 0.96 ) }
    dend_48 { pt3dadd( -15.0915, 99.5423, -2.35709, 0.37 ) }
    dend_48 { pt3dadd( -15.5633, 100.267, -2.64875, 0.29 ) }
    dend_48 { pt3dadd( -16.0623, 101.182, -2.9872, 0.15 ) }
    dend_48 { pt3dadd( -16.0908, 101.245, -3.0098, 0.15 ) }
    dend_48 { pt3dadd( -16.3433, 101.85, -3.2084, 0.15 ) }
    dend_48 { pt3dadd( -16.7195, 102.802, -3.48766, 1.03 ) }
    dend_48 { pt3dadd( -17.0767, 103.79, -3.72045, 1.03 ) }
    dend_48 { pt3dadd( -17.2385, 104.289, -3.83317, 1.03 ) }
    dend_48 { pt3dadd( -17.394, 104.825, -3.9411, 0.22 ) }
    dend_48 { pt3dadd( -17.6973, 105.973, -4.12535, 0.22 ) }
    dend_48 { pt3dadd( -17.714, 106.044, -4.13325, 0.22 ) }
    dend_48 { pt3dadd( -17.8669, 106.828, -4.17009, 0.96 ) }
    dend_48 { pt3dadd( -18.0044, 107.691, -4.19861, 1.11 ) }
    dend_48 { pt3dadd( -18.0447, 108.329, -4.20573, 0.22 ) }
    dend_48 { pt3dadd( -18.027, 109.027, -4.19745, 0.22 ) }
    dend_48 { pt3dadd( -17.9629, 109.558, -4.21165, 0.22 ) }
    dend_48 { pt3dadd( -17.9179, 109.858, -4.22891, 0.22 ) }
    dend_48 { pt3dadd( -17.9088, 109.931, -4.2318, 0.22 ) }
    dend_48 { pt3dadd( -17.7693, 111.451, -4.33023, 0.22 ) }
    dend_48 { pt3dadd( -17.7531, 111.56, -4.34763, 0.22 ) }
    dend_48 { pt3dadd( -17.6021, 112.424, -4.59027, 0.22 ) }
    dend_48 { pt3dadd( -17.5878, 112.502, -4.61661, 0.22 ) }
    dend_48 { pt3dadd( -17.2005, 114.594, -5.35664, 0.22 ) }
    dend_48 { pt3dadd( -16.7514, 117.023, -6.26154, 0.22 ) }
    dend_48 { pt3dadd( -16.324, 119.344, -7.19933, 0.22 ) }
    dend_48 { pt3dadd( -15.9898, 121.094, -7.9286, 1.33 ) }
    dend_48 { pt3dadd( -15.8475, 121.776, -8.22882, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -8.49347, 50.0501, 0.573803, 0.74 ) }
    dend_47 { pt3dadd( -8.94005, 51.148, 0.741627, 0.74 ) }
    dend_47 { pt3dadd( -9.2641, 51.8299, 0.819467, 0.37 ) }
    dend_47 { pt3dadd( -9.58206, 52.4672, 0.881692, 0.37 ) }
    dend_47 { pt3dadd( -9.68535, 52.6704, 0.898043, 0.37 ) }
    dend_47 { pt3dadd( -10.1323, 53.5369, 0.958402, 0.22 ) }
    dend_47 { pt3dadd( -10.1655, 53.6015, 0.962244, 0.22 ) }
    dend_47 { pt3dadd( -10.7265, 54.595, 0.962244, 0.22 ) }
    dend_47 { pt3dadd( -10.7644, 54.6569, 0.962244, 0.22 ) }
    dend_47 { pt3dadd( -11.1671, 55.2845, 0.975159, 0.22 ) }
    dend_47 { pt3dadd( -11.3192, 55.5138, 0.98406, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( -11.6615, 56.056, 1.0157, 0.88 ) }
    dend_47 { pt3dadd( -11.8585, 56.3864, 1.03941, 0.44 ) }
    dend_47 { pt3dadd( -12.0433, 56.7779, 1.07015, 0.29 ) }
    dend_47 { pt3dadd( -12.1943, 57.155, 1.09674, 0.29 ) }
    dend_47 { pt3dadd( -12.2152, 57.2244, 1.10608, 0.29 ) }
    dend_47 { pt3dadd( -12.3893, 57.9709, 1.23552, 0.29 ) }
    dend_47 { pt3dadd( -12.4544, 58.2953, 1.29897, 0.29 ) }
    dend_47 { pt3dadd( -12.6446, 59.4107, 1.5234, 0.29 ) }
    dend_47 { pt3dadd( -12.6608, 59.5041, 1.54146, 0.29 ) }
    dend_47 { pt3dadd( -12.8458, 60.3235, 1.71865, 0.29 ) }
    dend_47 { pt3dadd( -12.9675, 60.7417, 1.82725, 0.29 ) }
    dend_47 { pt3dadd( -13.1753, 61.2649, 1.97922, 0.29 ) }
    dend_47 { pt3dadd( -13.246, 61.3978, 2.01768, 0.29 ) }
    dend_47 { pt3dadd( -13.5787, 61.8901, 2.15764, 0.88 ) }
    dend_47 { pt3dadd( -14.1207, 62.6043, 2.3127, 0.88 ) }
    dend_47 { pt3dadd( -14.1602, 62.6513, 2.31901, 0.88 ) }
    dend_47 { pt3dadd( -14.4905, 63.0505, 2.36342, 0.44 ) }
    dend_47 { pt3dadd( -14.8955, 63.5543, 2.40729, 0.37 ) }
    dend_47 { pt3dadd( -14.988, 63.6867, 2.41365, 0.37 ) }
    dend_47 { pt3dadd( -15.4662, 64.4687, 2.43281, 0.37 ) }
    dend_47 { pt3dadd( -15.5963, 64.7126, 2.43206, 0.37 ) }
    dend_47 { pt3dadd( -15.9032, 65.3571, 2.43893, 0.37 ) }
    dend_47 { pt3dadd( -15.9639, 65.501, 2.44334, 0.37 ) }
    dend_47 { pt3dadd( -16.4322, 66.7453, 2.38056, 0.37 ) }
    dend_47 { pt3dadd( -16.5238, 67.0041, 2.34779, 1.11 ) }
    dend_47 { pt3dadd( -16.5489, 67.0712, 2.33397, 1.11 ) }
    dend_47 { pt3dadd( -16.8363, 67.7386, 2.15233, 1.11 ) }
    dend_47 { pt3dadd( -16.8745, 67.8082, 2.12871, 1.11 ) }
    dend_47 { pt3dadd( -17.5395, 68.776, 1.75259, 0.74 ) }
    dend_47 { pt3dadd( -17.8618, 69.1328, 1.58771, 0.29 ) }
    dend_47 { pt3dadd( -18.3418, 69.6022, 1.36988, 0.29 ) }
    dend_47 { pt3dadd( -18.459, 69.7061, 1.32022, 0.29 ) }
    dend_47 { pt3dadd( -19.0163, 70.1481, 1.1076, 0.74 ) }
    dend_47 { pt3dadd( -19.2713, 70.3627, 1.02903, 0.74 ) }
    dend_47 { pt3dadd( -19.5575, 70.6125, 0.971404, 0.29 ) }
    dend_47 { pt3dadd( -19.6142, 70.6693, 0.955328, 0.29 ) }
    dend_47 { pt3dadd( -20.2109, 71.4265, 0.741318, 0.22 ) }
    dend_47 { pt3dadd( -20.2546, 71.4945, 0.724382, 0.22 ) }
    dend_47 { pt3dadd( -20.7043, 72.3197, 0.578715, 0.22 ) }
    dend_47 { pt3dadd( -20.771, 72.4597, 0.562491, 0.22 ) }
    dend_47 { pt3dadd( -21.1135, 73.1219, 0.523733, 0.74 ) }
    dend_47 { pt3dadd( -21.5099, 73.8385, 0.513612, 0.74 ) }
    dend_47 { pt3dadd( -22.0237, 74.7193, 0.574752, 0.74 ) }
    dend_47 { pt3dadd( -22.354, 75.2384, 0.630644, 0.44 ) }
    dend_47 { pt3dadd( -22.6625, 75.6788, 0.695729, 0.22 ) }
    dend_47 { pt3dadd( -23.6456, 76.9982, 0.929419, 0.22 ) }
    dend_47 { pt3dadd( -23.713, 77.0823, 0.947903, 0.22 ) }
    dend_47 { pt3dadd( -24.1801, 77.6164, 1.07061, 0.81 ) }
    dend_47 { pt3dadd( -24.7199, 78.2566, 1.25247, 0.96 ) }
    dend_47 { pt3dadd( -24.7814, 78.3345, 1.27528, 0.96 ) }
    dend_47 { pt3dadd( -25.143, 78.846, 1.44515, 0.96 ) }
    dend_47 { pt3dadd( -25.1768, 78.9068, 1.46542, 0.96 ) }
    dend_47 { pt3dadd( -25.3886, 79.3288, 1.58617, 0.29 ) }
    dend_47 { pt3dadd( -26.0862, 80.8601, 1.94751, 0.29 ) }
    dend_47 { pt3dadd( -26.1151, 80.9248, 1.96399, 0.29 ) }
    dend_47 { pt3dadd( -26.3267, 81.3461, 2.06578, 0.88 ) }
    dend_47 { pt3dadd( -26.7069, 82.0483, 2.22457, 0.88 ) }
    dend_47 { pt3dadd( -27.1626, 82.8025, 2.37457, 0.88 ) }
    dend_47 { pt3dadd( -27.477, 83.2755, 2.45658, 0.29 ) }
    dend_47 { pt3dadd( -27.8985, 83.8407, 2.53344, 0.15 ) }
    dend_47 { pt3dadd( -28.7867, 84.9666, 2.69046, 0.15 ) }
    dend_47 { pt3dadd( -29.184, 85.4383, 2.75643, 0.44 ) }
    dend_47 { pt3dadd( -29.715, 86.0435, 2.83595, 0.44 ) }
    dend_47 { pt3dadd( -29.7627, 86.0969, 2.84239, 0.44 ) }
    dend_47 { pt3dadd( -29.9922, 86.3487, 2.86631, 0.81 ) }
    dend_47 { pt3dadd( -31.0105, 87.4188, 2.98907, 0.81 ) }
    dend_47 { pt3dadd( -31.5431, 87.9438, 3.07339, 0.22 ) }
    dend_47 { pt3dadd( -32.1276, 88.4836, 3.17431, 0.22 ) }
    dend_47 { pt3dadd( -32.2941, 88.6317, 3.20565, 0.22 ) }
    dend_47 { pt3dadd( -33.1971, 89.4122, 3.37705, 0.22 ) }
    dend_47 { pt3dadd( -34.1574, 90.2096, 3.56613, 0.22 ) }
    dend_47 { pt3dadd( -34.2118, 90.2541, 3.57816, 0.22 ) }
    dend_47 { pt3dadd( -34.8057, 90.765, 3.71506, 0.22 ) }
    dend_47 { pt3dadd( -34.9637, 90.9228, 3.74765, 0.74 ) }
    dend_47 { pt3dadd( -35.3922, 91.4833, 3.81566, 0.74 ) }
    dend_47 { pt3dadd( -35.5229, 91.7202, 3.82348, 0.74 ) }
    dend_47 { pt3dadd( -35.7305, 92.1568, 3.8312, 0.74 ) }
    dend_47 { pt3dadd( -35.8634, 92.4271, 3.84401, 0.74 ) }
    dend_47 { pt3dadd( -36.3236, 93.2674, 3.89894, 0.22 ) }
    dend_47 { pt3dadd( -36.6213, 93.79, 3.90717, 0.22 ) }
    dend_47 { pt3dadd( -37.1728, 94.7238, 3.91384, 0.22 ) }
    dend_47 { pt3dadd( -37.6063, 95.4693, 3.91484, 0.88 ) }
    dend_47 { pt3dadd( -38.2347, 96.5477, 3.93504, 1.25 ) }
    dend_47 { pt3dadd( -38.8447, 97.5792, 3.96658, 1.25 ) }
    dend_47 { pt3dadd( -39.6916, 98.9569, 4.0219, 1.25 ) }
    dend_47 { pt3dadd( -40.2825, 99.8824, 4.05771, 0.59 ) }
    dend_47 { pt3dadd( -40.8639, 100.775, 4.05234, 0.59 ) }
    dend_47 { pt3dadd( -41.4865, 101.672, 3.99861, 0.15 ) }
    dend_47 { pt3dadd( -42.0622, 102.447, 3.93527, 0.15 ) }
    dend_47 { pt3dadd( -42.3433, 102.801, 3.90033, 0.37 ) }
    dend_47 { pt3dadd( -42.6523, 103.127, 3.86356, 0.37 ) }
    dend_47 { pt3dadd( -43.5099, 103.938, 3.68954, 0.22 ) }
    dend_47 { pt3dadd( -44.2812, 104.604, 3.38214, 0.22 ) }
    dend_47 { pt3dadd( -44.3358, 104.653, 3.34766, 0.22 ) }
    dend_47 { pt3dadd( -44.5163, 104.836, 3.20227, 0.74 ) }
    dend_47 { pt3dadd( -44.9979, 105.385, 2.77825, 0.74 ) }
    dend_47 { pt3dadd( -45.0385, 105.435, 2.74718, 0.74 ) }
    dend_47 { pt3dadd( -45.9668, 106.568, 2.04326, 0.15 ) }
    dend_47 { pt3dadd( -46.3467, 107.016, 1.75884, 0.15 ) }
    dend_47 { pt3dadd( -46.4494, 107.134, 1.69357, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( -46.8892, 107.626, 1.42459, 0.15 ) }
    dend_47 { pt3dadd( -47.9216, 108.767, 0.831723, 0.15 ) }
    dend_47 { pt3dadd( -48.7741, 109.692, 0.41446, 0.88 ) }
    dend_47 { pt3dadd( -49.3747, 110.329, 0.206148, 0.88 ) }
    dend_47 { pt3dadd( -50.2649, 111.272, -0.131025, 0.66 ) }
    dend_47 { pt3dadd( -55.8226, 119.974, -0.77797, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.0552, -28.8121, 4.47209, 1.03 ) }
    dend_34 { pt3dadd( 22.6269, -29.8061, 3.89831, 1.03 ) }
    dend_34 { pt3dadd( 22.6874, -29.8987, 3.86151, 1.03 ) }
    dend_34 { pt3dadd( 23.2419, -30.7353, 3.56998, 1.03 ) }
    dend_34 { pt3dadd( 23.4782, -31.06, 3.48087, 1.03 ) }
    dend_34 { pt3dadd( 24.8293, -32.8109, 3.0901, 1.03 ) }
    dend_34 { pt3dadd( 24.8745, -32.8659, 3.07943, 1.03 ) }
    dend_34 { pt3dadd( 26.6628, -34.9096, 2.82384, 0.88 ) }
    dend_34 { pt3dadd( 26.7689, -35.0207, 2.81828, 0.88 ) }
    dend_34 { pt3dadd( 28.4662, -36.6395, 2.92143, 0.88 ) }
    dend_34 { pt3dadd( 29.122, -37.2014, 3.04527, 0.88 ) }
    dend_34 { pt3dadd( 29.728, -37.6653, 3.22836, 1.25 ) }
    dend_34 { pt3dadd( 30.5246, -38.2258, 3.51937, 1.25 ) }
    dend_34 { pt3dadd( 32.0983, -39.21, 4.19181, 0.74 ) }
    dend_34 { pt3dadd( 33.6353, -40.1387, 4.83864, 0.74 ) }
    dend_34 { pt3dadd( 34.9207, -40.8861, 5.36943, 0.74 ) }
    dend_34 { pt3dadd( 34.9704, -40.9157, 5.38774, 0.74 ) }
    dend_34 { pt3dadd( 35.6764, -41.3428, 5.62158, 1.47 ) }
    dend_34 { pt3dadd( 36.6606, -41.9181, 5.88446, 1.47 ) }
    dend_34 { pt3dadd( 38.7701, -43.1513, 6.13535, 0.66 ) }
    dend_34 { pt3dadd( 39.7167, -43.7125, 6.13619, 0.66 ) }
    dend_34 { pt3dadd( 40.8382, -44.402, 6.05226, 1.33 ) }
    dend_34 { pt3dadd( 40.8974, -44.4406, 6.04579, 1.33 ) }
    dend_34 { pt3dadd( 41.8119, -45.094, 5.93018, 1.33 ) }
    dend_34 { pt3dadd( 43.4415, -46.2727, 5.69573, 1.18 ) }
    dend_34 { pt3dadd( 44.7094, -47.2124, 5.48363, 1.18 ) }
    dend_34 { pt3dadd( 44.7885, -47.2731, 5.46966, 1.18 ) }
    dend_34 { pt3dadd( 46.1183, -48.3289, 5.23491, 0.88 ) }
    dend_34 { pt3dadd( 48.2968, -50.1849, 4.88767, 0.88 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 22.0552, -28.8121, 4.47209, 0.74 ) }
    dend_31 { pt3dadd( 22.0918, -28.829, 4.52956, 0.74 ) }
    dend_31 { pt3dadd( 22.5731, -29.0316, 5.53536, 0.74 ) }
    dend_31 { pt3dadd( 22.6018, -29.0447, 5.59796, 0.74 ) }
    dend_31 { pt3dadd( 23.8206, -29.6098, 7.96985, 0.74 ) }
    dend_31 { pt3dadd( 25.6757, -30.3825, 11.2197, 0.74 ) }
    dend_31 { pt3dadd( 25.7112, -30.3963, 11.2786, 0.74 ) }
    dend_31 { pt3dadd( 27.6981, -31.0666, 14.2769, 1.4 ) }
    dend_31 { pt3dadd( 28.23, -31.229, 15.0346, 0.74 ) }
    dend_31 { pt3dadd( 29.3736, -31.4999, 16.4315, 0.74 ) }
    dend_31 { pt3dadd( 30.8598, -31.7125, 17.8487, 0.74 ) }
    dend_31 { pt3dadd( 30.9416, -31.7213, 17.9039, 0.74 ) }
    dend_31 { pt3dadd( 32.6718, -32.0446, 18.9361, 0.74 ) }
    dend_31 { pt3dadd( 32.7248, -32.0588, 18.9607, 0.74 ) }
    dend_31 { pt3dadd( 33.5642, -32.298, 19.4148, 0.74 ) }
    dend_31 { pt3dadd( 33.6669, -32.3266, 19.4705, 0.74 ) }
    dend_31 { pt3dadd( 35.471, -32.7882, 20.323, 0.74 ) }
    dend_31 { pt3dadd( 37.3165, -33.2269, 21.1741, 0.74 ) }
    dend_31 { pt3dadd( 38.262, -33.4451, 21.6002, 0.74 ) }
    dend_31 { pt3dadd( 40.4438, -33.9352, 22.4903, 0.74 ) }
    dend_31 { pt3dadd( 42.4384, -34.4145, 23.2206, 0.74 ) }
    dend_31 { pt3dadd( 44.1626, -34.8253, 23.7757, 1.25 ) }
    dend_31 { pt3dadd( 45.5624, -35.1732, 24.2105, 0.52 ) }
    dend_31 { pt3dadd( 46.1886, -35.3432, 24.4099, 0.52 ) }
    dend_31 { pt3dadd( 47.5687, -35.7782, 24.8774, 0.66 ) }
    dend_31 { pt3dadd( 49.4457, -36.4657, 25.5559, 0.66 ) }
    dend_31 { pt3dadd( 49.5149, -36.494, 25.5856, 0.66 ) }
    dend_31 { pt3dadd( 51.7957, -37.3607, 26.6194, 0.66 ) }
    dend_31 { pt3dadd( 52.393, -37.5547, 26.8604, 0.96 ) }
    dend_31 { pt3dadd( 53.2602, -37.8189, 27.1779, 0.66 ) }
    dend_31 { pt3dadd( 54.5878, -38.1577, 27.6043, 0.52 ) }
    dend_31 { pt3dadd( 54.6535, -38.1765, 27.6204, 0.52 ) }
    dend_31 { pt3dadd( 56.0161, -38.6821, 27.8893, 0.52 ) }
    dend_31 { pt3dadd( 57.1979, -39.2423, 28.1057, 0.52 ) }
    dend_31 { pt3dadd( 58.2096, -39.8054, 28.4186, 0.52 ) }
    dend_31 { pt3dadd( 58.2579, -39.8359, 28.4392, 0.52 ) }
    dend_31 { pt3dadd( 59.4604, -40.5958, 28.9816, 0.52 ) }
    dend_31 { pt3dadd( 60.5077, -41.2222, 29.4863, 0.52 ) }
    dend_31 { pt3dadd( 61.7326, -41.9235, 30.0881, 1.25 ) }
    dend_31 { pt3dadd( 62.8742, -42.4164, 30.7519, 0.52 ) }
    dend_31 { pt3dadd( 64.2267, -42.8827, 31.5747, 0.52 ) }
    dend_31 { pt3dadd( 66.254, -43.474, 32.8181, 0.52 ) }
    dend_31 { pt3dadd( 66.3914, -43.5004, 32.8991, 0.52 ) }
    dend_31 { pt3dadd( 67.3286, -43.6165, 33.4198, 0.52 ) }
    dend_31 { pt3dadd( 70.5224, -43.6677, 35.0178, 0.37 ) }
    dend_31 { pt3dadd( 71.1343, -43.6197, 35.3135, 0.37 ) }
    dend_31 { pt3dadd( 71.2669, -43.5936, 35.3792, 0.37 ) }
    dend_31 { pt3dadd( 72.3708, -43.2839, 35.9623, 0.37 ) }
    dend_31 { pt3dadd( 72.6855, -43.1996, 36.1438, 0.37 ) }
    dend_31 { pt3dadd( 74.2052, -42.7972, 37.0629, 0.37 ) }
    dend_31 { pt3dadd( 74.2667, -42.7839, 37.0937, 0.37 ) }
    dend_31 { pt3dadd( 75.5498, -42.4742, 37.8227, 0.37 ) }
    dend_31 { pt3dadd( 75.608, -42.4598, 37.8589, 0.37 ) }
    dend_31 { pt3dadd( 77.1923, -42.0867, 38.9782, 0.29 ) }
    dend_31 { pt3dadd( 77.2787, -42.0659, 39.0368, 0.29 ) }
    dend_31 { pt3dadd( 78.0357, -41.8665, 39.5273, 0.29 ) }
    dend_31 { pt3dadd( 78.0981, -41.8504, 39.5552, 0.29 ) }
    dend_31 { pt3dadd( 78.7729, -41.6564, 39.7575, 0.29 ) }
    dend_31 { pt3dadd( 78.9207, -41.6157, 39.7914, 0.29 ) }
    dend_31 { pt3dadd( 80.1294, -41.3075, 39.9931, 0.29 ) }
    dend_31 { pt3dadd( 80.2608, -41.2699, 40.0255, 0.29 ) }
    dend_31 { pt3dadd( 81.554, -40.8685, 40.4082, 0.29 ) }
    dend_31 { pt3dadd( 83.1125, -40.3092, 40.9069, 0.29 ) }
    dend_31 { pt3dadd( 83.1748, -40.2846, 40.9284, 0.29 ) }
    dend_31 { pt3dadd( 84.7374, -39.6232, 41.5022, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 86.0801, -38.9788, 42.0468, 0.59 ) }
    dend_31 { pt3dadd( 86.8264, -38.5884, 42.3651, 0.74 ) }
    dend_31 { pt3dadd( 87.5769, -38.1224, 42.718, 0.74 ) }
    dend_31 { pt3dadd( 87.6321, -38.0853, 42.7424, 0.74 ) }
    dend_31 { pt3dadd( 95.2219, -38.9129, 49.2056, 0.74 ) }
    dend_31 { pt3dadd( 102.065, -39.1982, 56.4927, 0.74 ) }
    dend_31 { pt3dadd( 108.851, -41.252, 63.5728, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 35.3908, -63.9774, 54.9546, 0.52 ) }
    dend_27 { pt3dadd( 36.2003, -65.0558, 55.3968, 0.52 ) }
    dend_27 { pt3dadd( 36.5284, -65.5875, 55.6047, 0.66 ) }
    dend_27 { pt3dadd( 36.9734, -66.5029, 55.9475, 0.52 ) }
    dend_27 { pt3dadd( 37.3904, -67.5365, 56.3296, 0.29 ) }
    dend_27 { pt3dadd( 37.7928, -68.8757, 56.7891, 0.44 ) }
    dend_27 { pt3dadd( 37.8092, -68.9433, 56.8112, 0.44 ) }
    dend_27 { pt3dadd( 37.8923, -69.7474, 56.9831, 0.44 ) }
    dend_27 { pt3dadd( 37.8516, -70.5389, 57.1426, 0.74 ) }
    dend_27 { pt3dadd( 37.8108, -70.7842, 57.1893, 0.74 ) }
    dend_27 { pt3dadd( 37.6381, -71.579, 57.3083, 0.74 ) }
    dend_27 { pt3dadd( 37.6222, -71.6505, 57.3119, 0.74 ) }
    dend_27 { pt3dadd( 37.5327, -72.6651, 57.4077, 0.74 ) }
    dend_27 { pt3dadd( 37.6179, -73.4592, 57.6962, 0.44 ) }
    dend_27 { pt3dadd( 37.635, -73.522, 57.7283, 0.44 ) }
    dend_27 { pt3dadd( 37.9475, -74.4857, 58.2665, 0.37 ) }
    dend_27 { pt3dadd( 37.985, -74.5815, 58.327, 0.37 ) }
    dend_27 { pt3dadd( 38.7549, -76.3065, 59.5383, 0.37 ) }
    dend_27 { pt3dadd( 40.0006, -78.6056, 61.4323, 0.44 ) }
    dend_27 { pt3dadd( 40.4216, -79.2876, 62.0687, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 35.3908, -63.9774, 54.9546, 0.66 ) }
    dend_26 { pt3dadd( 36.3742, -64.3784, 55.1284, 0.66 ) }
    dend_26 { pt3dadd( 36.9265, -64.5648, 55.3049, 0.29 ) }
    dend_26 { pt3dadd( 37.6862, -64.8213, 55.5475, 0.29 ) }
    dend_26 { pt3dadd( 37.7591, -64.8459, 55.5708, 0.29 ) }
    dend_26 { pt3dadd( 38.7206, -65.1706, 55.8779, 0.29 ) }
    dend_26 { pt3dadd( 38.852, -65.2149, 55.9199, 0.29 ) }
    dend_26 { pt3dadd( 39.949, -65.6709, 56.0916, 0.74 ) }
    dend_26 { pt3dadd( 49.254, -67.9635, 59.0328, 0.74 ) }
    dend_26 { pt3dadd( 58.4385, -71.9535, 60.1306, 0.74 ) }
    dend_26 { pt3dadd( 67.1393, -76.4486, 62.5735, 0.74 ) }
    dend_26 { pt3dadd( 75.5359, -82.1019, 63.2876, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -54.0741, -50.0341, -30.1683, 0.29 ) }
    dend_23 { pt3dadd( -56.493, -51.1304, -32.0785, 0.29 ) }
    dend_23 { pt3dadd( -57.9158, -51.8355, -33.2299, 0.29 ) }
    dend_23 { pt3dadd( -59.2965, -52.552, -34.3238, 0.29 ) }
    dend_23 { pt3dadd( -61.3761, -53.6483, -35.9545, 0.88 ) }
    dend_23 { pt3dadd( -62.1988, -54.1097, -36.6526, 1.18 ) }
    dend_23 { pt3dadd( -63.0994, -54.6302, -37.4513, 0.59 ) }
    dend_23 { pt3dadd( -64.2779, -55.446, -38.5868, 0.52 ) }
    dend_23 { pt3dadd( -64.5792, -55.6837, -38.967, 0.88 ) }
    dend_23 { pt3dadd( -64.6154, -55.7147, -39.0192, 0.88 ) }
    dend_23 { pt3dadd( -65.6223, -56.5765, -40.3958, 0.37 ) }
    dend_23 { pt3dadd( -65.6576, -56.6068, -40.4489, 0.37 ) }
    dend_23 { pt3dadd( -67.2277, -57.9727, -42.8544, 0.37 ) }
    dend_23 { pt3dadd( -67.8117, -58.4958, -43.6089, 1.25 ) }
    dend_23 { pt3dadd( -67.8468, -58.5267, -43.6477, 1.25 ) }
    dend_23 { pt3dadd( -68.5866, -59.1471, -44.2974, 1.25 ) }
    dend_23 { pt3dadd( -68.6436, -59.191, -44.3349, 1.25 ) }
    dend_23 { pt3dadd( -69.2577, -59.6875, -44.6595, 0.29 ) }
    dend_23 { pt3dadd( -70.6551, -60.8401, -45.121, 0.15 ) }
    dend_23 { pt3dadd( -71.0849, -61.2164, -45.2855, 0.59 ) }
    dend_23 { pt3dadd( -71.4124, -61.5105, -45.4328, 0.59 ) }
    dend_23 { pt3dadd( -72.1081, -62.1439, -45.7884, 0.15 ) }
    dend_23 { pt3dadd( -73.0879, -62.9822, -46.2939, 0.15 ) }
    dend_23 { pt3dadd( -73.1379, -63.0216, -46.3256, 0.15 ) }
    dend_23 { pt3dadd( -74.0715, -63.7101, -46.9227, 0.88 ) }
    dend_23 { pt3dadd( -74.1221, -63.7468, -46.956, 0.88 ) }
    dend_23 { pt3dadd( -74.7897, -64.2274, -47.3971, 0.88 ) }
    dend_23 { pt3dadd( -75.7238, -64.8872, -48.0763, 0.22 ) }
    dend_23 { pt3dadd( -77.471, -66.152, -49.403, 0.22 ) }
    dend_23 { pt3dadd( -78.4864, -67.075, -50.3241, 0.22 ) }
    dend_23 { pt3dadd( -80.0347, -68.9661, -52.232, 0.22 ) }
    dend_23 { pt3dadd( -80.0636, -69.0112, -52.2791, 0.22 ) }
    dend_23 { pt3dadd( -80.6887, -70.8892, -54.2998, 0.22 ) }
    dend_23 { pt3dadd( -80.7834, -72.003, -55.3085, 0.22 ) }
    dend_23 { pt3dadd( -80.3997, -74.7921, -57.3133, 0.22 ) }
    dend_23 { pt3dadd( -79.4883, -77.3333, -58.6262, 0.22 ) }
    dend_23 { pt3dadd( -79.4606, -77.3863, -58.643, 0.22 ) }
    dend_23 { pt3dadd( -77.3457, -80.9748, -58.9697, 0.22 ) }
    dend_23 { pt3dadd( -73.8143, -86.2486, -58.2185, 0.22 ) }
    dend_23 { pt3dadd( -73.7809, -86.3033, -58.1857, 0.22 ) }
    dend_23 { pt3dadd( -72.8058, -87.9807, -56.7026, 0.22 ) }
    dend_23 { pt3dadd( -72.7782, -88.0326, -56.646, 0.22 ) }
    dend_23 { pt3dadd( -72.0051, -89.6883, -54.5794, 0.22 ) }
    dend_23 { pt3dadd( -71.9941, -89.7249, -54.5196, 0.22 ) }
    dend_23 { pt3dadd( -71.7864, -93.208, -48.9245, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -54.0741, -50.0341, -30.1683, 1.18 ) }
    dend_22 { pt3dadd( -56.153, -52.3824, -29.8819, 1.18 ) }
    dend_22 { pt3dadd( -57.7317, -54.0054, -30.1194, 1.18 ) }
    dend_22 { pt3dadd( -58.7801, -55.0412, -30.4238, 0.52 ) }
    dend_22 { pt3dadd( -60.0109, -56.2355, -30.8737, 0.52 ) }
    dend_22 { pt3dadd( -60.0603, -56.2832, -30.8936, 0.52 ) }
    dend_22 { pt3dadd( -61.0186, -57.2058, -31.4202, 0.52 ) }
    dend_22 { pt3dadd( -62.2089, -58.328, -32.0998, 0.52 ) }
    dend_22 { pt3dadd( -62.2955, -58.4061, -32.1808, 0.52 ) }
    dend_22 { pt3dadd( -62.9519, -58.9574, -33.0317, 0.37 ) }
    dend_22 { pt3dadd( -62.9864, -58.99, -33.0841, 0.37 ) }
    dend_22 { pt3dadd( -63.9706, -59.9743, -34.4624, 1.11 ) }
    dend_22 { pt3dadd( -64.4526, -60.4993, -35.0938, 1.11 ) }
    dend_22 { pt3dadd( -64.4961, -60.5468, -35.1434, 1.11 ) }
    dend_22 { pt3dadd( -65.6594, -61.7846, -36.4213, 0.22 ) }
    dend_22 { pt3dadd( -66.4205, -62.5615, -37.1988, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_22 { pt3dadd( -67.0423, -63.2246, -37.7678, 0.29 ) }
    dend_22 { pt3dadd( -67.1071, -63.2966, -37.8168, 0.29 ) }
    dend_22 { pt3dadd( -67.4495, -63.6663, -38.128, 0.81 ) }
    dend_22 { pt3dadd( -67.4948, -63.7141, -38.1758, 0.81 ) }
    dend_22 { pt3dadd( -67.9738, -64.2287, -38.6885, 0.81 ) }
    dend_22 { pt3dadd( -68.8782, -65.2271, -39.7564, 0.37 ) }
    dend_22 { pt3dadd( -68.914, -65.2691, -39.8013, 0.37 ) }
    dend_22 { pt3dadd( -70.4075, -67.1337, -41.6467, 0.15 ) }
    dend_22 { pt3dadd( -70.9891, -68.0258, -42.4015, 0.96 ) }
    dend_22 { pt3dadd( -71.4445, -68.8434, -43.0008, 1.4 ) }
    dend_22 { pt3dadd( -71.8079, -69.7744, -43.5579, 0.52 ) }
    dend_22 { pt3dadd( -71.817, -69.8326, -43.579, 0.52 ) }
    dend_22 { pt3dadd( -71.8201, -70.983, -43.8488, 0.29 ) }
    dend_22 { pt3dadd( -71.4864, -72.9668, -43.9747, 0.29 ) }
    dend_22 { pt3dadd( -71.4675, -73.0484, -43.9746, 0.29 ) }
    dend_22 { pt3dadd( -71.0338, -74.6647, -43.9043, 0.29 ) }
    dend_22 { pt3dadd( -70.395, -77.2398, -43.7015, 0.29 ) }
    dend_22 { pt3dadd( -70.3622, -77.3928, -43.6869, 0.29 ) }
    dend_22 { pt3dadd( -70.0439, -79.466, -43.4024, 0.29 ) }
    dend_22 { pt3dadd( -70.023, -79.6547, -43.3697, 0.29 ) }
    dend_22 { pt3dadd( -69.9399, -80.8817, -43.1133, 0.15 ) }
    dend_22 { pt3dadd( -69.99, -82.6307, -42.5996, 0.15 ) }
    dend_22 { pt3dadd( -70.0015, -82.6987, -42.5756, 0.15 ) }
    dend_22 { pt3dadd( -70.323, -84.0672, -42.1171, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.86296, -27.3425, -2.17873, 0.88 ) }
    dend_16 { pt3dadd( -9.07019, -28.4537, -6.42042, 0.88 ) }
    dend_16 { pt3dadd( -9.80757, -28.8566, -7.73113, 0.88 ) }
    dend_16 { pt3dadd( -10.6262, -29.3038, -9.18616, 0.88 ) }
    dend_16 { pt3dadd( -10.6594, -29.3219, -9.24528, 0.88 ) }
    dend_16 { pt3dadd( -11.2249, -29.6309, -10.2504, 0.88 ) }
    dend_16 { pt3dadd( -12.672, -30.4215, -12.8227, 1.4 ) }
    dend_16 { pt3dadd( -13.0183, -30.6741, -13.2554, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.86296, -27.3425, -2.17873, 0.81 ) }
    dend_3 { pt3dadd( -8.06109, -29.9792, -1.05111, 0.81 ) }
    dend_3 { pt3dadd( -8.92216, -31.8742, -0.240704, 0.81 ) }
    dend_3 { pt3dadd( -9.56421, -33.2872, 0.363561, 0.81 ) }
    dend_3 { pt3dadd( -10.1323, -34.5373, 0.898184, 0.81 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.86296, -27.3425, -2.17873, 2.5 ) }
    dend_2 { pt3dadd( -6.84049, -28.0314, -1.94835, 2.5 ) }
    dend_2 { pt3dadd( -6.7667, -29.8194, -1.46595, 1.03 ) }
    dend_2 { pt3dadd( -6.63955, -31.2733, -1.18256, 0.59 ) }
    dend_2 { pt3dadd( -6.45388, -32.4622, -1.00843, 0.59 ) }
    dend_2 { pt3dadd( -6.4339, -32.5325, -1.00503, 0.59 ) }
    dend_2 { pt3dadd( -6.16665, -33.3243, -1.0007, 0.59 ) }
    dend_2 { pt3dadd( -5.55226, -34.662, -1.12541, 0.59 ) }
    dend_2 { pt3dadd( -4.43385, -36.5634, -1.47365, 1.03 ) }
    dend_2 { pt3dadd( -3.39063, -38.1171, -1.82564, 0.81 ) }
    dend_2 { pt3dadd( -1.40818, -40.8264, -2.37261, 0.81 ) }
    dend_2 { pt3dadd( -1.37109, -40.875, -2.3812, 0.81 ) }
    dend_2 { pt3dadd( 0.69892, -43.4939, -2.79888, 0.81 ) }
    dend_2 { pt3dadd( 2.82311, -46.2693, -3.15779, 0.81 ) }
    dend_2 { pt3dadd( 2.86288, -46.3296, -3.16257, 0.81 ) }
    dend_2 { pt3dadd( 3.77136, -48.1491, -3.24154, 0.52 ) }
    dend_2 { pt3dadd( 4.23551, -49.4357, -3.24107, 0.52 ) }
    dend_2 { pt3dadd( 4.35821, -49.9034, -3.22505, 0.74 ) }
    dend_2 { pt3dadd( 4.7466, -52.554, -3.03672, 1.11 ) }
    dend_2 { pt3dadd( 5.00826, -55.4558, -2.8261, 1.11 ) }
    dend_2 { pt3dadd( 5.18189, -57.421, -2.71653, 0.81 ) }
    dend_2 { pt3dadd( 5.1974, -57.5775, -2.70997, 0.81 ) }
    dend_2 { pt3dadd( 5.53429, -59.932, -2.50492, 0.59 ) }
    dend_2 { pt3dadd( 5.5475, -59.9929, -2.49703, 0.59 ) }
    dend_2 { pt3dadd( 6.04542, -61.7093, -2.16177, 0.59 ) }
    dend_2 { pt3dadd( 6.0656, -61.7666, -2.14707, 0.59 ) }
    dend_2 { pt3dadd( 6.64662, -63.3353, -1.70335, 0.59 ) }
    dend_2 { pt3dadd( 7.368, -65.332, -1.18271, 0.44 ) }
    dend_2 { pt3dadd( 7.8559, -66.7229, -0.889521, 0.44 ) }
    dend_2 { pt3dadd( 8.01937, -67.2715, -0.791466, 1.03 ) }
    dend_2 { pt3dadd( 8.03672, -67.3419, -0.780928, 1.03 ) }
    dend_2 { pt3dadd( 8.28413, -68.4613, -0.670888, 1.03 ) }
    dend_2 { pt3dadd( 8.30048, -68.5435, -0.67294, 1.03 ) }
    dend_2 { pt3dadd( 8.55225, -69.4704, -0.796633, 0.52 ) }
    dend_2 { pt3dadd( 9.03688, -70.6647, -0.980857, 0.52 ) }
    dend_2 { pt3dadd( 9.14532, -70.8761, -1.01215, 0.52 ) }
    dend_2 { pt3dadd( 9.76967, -71.9467, -1.156, 0.74 ) }
    dend_2 { pt3dadd( 10.439, -73.0564, -1.27595, 0.88 ) }
    dend_2 { pt3dadd( 11.0657, -74.1249, -1.32264, 0.66 ) }
    dend_2 { pt3dadd( 11.5821, -75.0659, -1.30334, 0.44 ) }
    dend_2 { pt3dadd( 12.1187, -76.2187, -1.23144, 0.44 ) }
    dend_2 { pt3dadd( 12.143, -76.2873, -1.22545, 0.44 ) }
    dend_2 { pt3dadd( 12.6229, -78.0435, -1.02644, 0.44 ) }
    dend_2 { pt3dadd( 12.8286, -79.0268, -0.904609, 0.88 ) }
    dend_2 { pt3dadd( 13.0186, -80.1594, -0.786161, 1.18 ) }
    dend_2 { pt3dadd( 13.3428, -82.0335, -0.580685, 0.88 ) }
    dend_2 { pt3dadd( 13.5895, -83.2984, -0.421487, 1.18 ) }
    dend_2 { pt3dadd( 13.6071, -83.3689, -0.412325, 1.18 ) }
    dend_2 { pt3dadd( 14.2477, -85.4449, -0.135352, 0.66 ) }
    dend_2 { pt3dadd( 14.2773, -85.5223, -0.125475, 0.66 ) }
    dend_2 { pt3dadd( 15.2782, -87.4918, 0.171511, 0.66 ) }
    dend_2 { pt3dadd( 15.3167, -87.5521, 0.182313, 0.66 ) }
    dend_2 { pt3dadd( 16.4104, -88.9982, 0.449181, 0.66 ) }
    dend_2 { pt3dadd( 16.4544, -89.0546, 0.458363, 0.66 ) }
    dend_2 { pt3dadd( 17.1113, -89.8764, 0.550126, 0.29 ) }
    dend_2 { pt3dadd( 17.7431, -90.7832, 0.543294, 0.29 ) }
    dend_2 { pt3dadd( 17.7814, -90.8442, 0.536092, 0.29 ) }
    dend_2 { pt3dadd( 18.3664, -91.8762, 0.383838, 0.81 ) }
    dend_2 { pt3dadd( 19.0557, -93.1318, 0.165479, 1.18 ) }
    dend_2 { pt3dadd( 19.6414, -94.1909, -0.0245575, 0.88 ) }
    dend_2 { pt3dadd( 20.3682, -95.5147, -0.26218, 0.29 ) }
    dend_2 { pt3dadd( 20.8392, -96.3553, -0.4096, 0.29 ) }
    dend_2 { pt3dadd( 21.0101, -96.6378, -0.455496, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 21.9919, -98.115, -0.618735, 0.66 ) }
    dend_2 { pt3dadd( 22.5288, -98.8535, -0.645946, 1.03 ) }
    dend_2 { pt3dadd( 23.0957, -99.6404, -0.592841, 0.37 ) }
    dend_2 { pt3dadd( 23.1365, -99.6993, -0.58376, 0.37 ) }
    dend_2 { pt3dadd( 23.7238, -100.664, -0.371296, 0.37 ) }
    dend_2 { pt3dadd( 24.2073, -101.532, -0.0670697, 0.81 ) }
    dend_2 { pt3dadd( 24.5457, -102.21, 0.236112, 0.81 ) }
    dend_2 { pt3dadd( 25.0912, -103.247, 0.754075, 0.52 ) }
    dend_2 { pt3dadd( 25.1227, -103.305, 0.784533, 0.52 ) }
    dend_2 { pt3dadd( 25.9846, -104.711, 1.55365, 0.88 ) }
    dend_2 { pt3dadd( 26.9409, -106.11, 2.36127, 0.52 ) }
    dend_2 { pt3dadd( 27.2513, -106.479, 2.61413, 0.52 ) }
    dend_2 { pt3dadd( 27.8926, -106.942, 3.10796, 0.74 ) }
    dend_2 { pt3dadd( 28.0647, -107.01, 3.22892, 0.74 ) }
    dend_2 { pt3dadd( 28.8018, -107.098, 3.7884, 0.52 ) }
    dend_2 { pt3dadd( 28.8663, -107.093, 3.83547, 0.52 ) }
    dend_2 { pt3dadd( 30.38, -106.766, 4.91664, 0.29 ) }
    dend_2 { pt3dadd( 32.0569, -106.263, 6.21063, 0.22 ) }
    dend_2 { pt3dadd( 32.3292, -106.158, 6.44031, 0.37 ) }
    dend_2 { pt3dadd( 33.7948, -105.519, 7.73124, 0.81 ) }
    dend_2 { pt3dadd( 36.983, -115.47, 7.79966, 0.81 ) }
    dend_2 { pt3dadd( 39.9743, -125.465, 8.46713, 0.81 ) }
    dend_2 { pt3dadd( 41.3372, -135.662, 10.4238, 0.81 ) }
    dend_2 { pt3dadd( 43.8131, -145.703, 11.9819, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 24/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 23.5097, 97.4204, 20.7709, 0.29 ) }
    dend_79 { pt3dadd( 20.1053, 104.014, 27.769, 0.29 ) }
    dend_79 { pt3dadd( 15.3285, 109.007, 35.1566, 0.29 ) }
    dend_79 { pt3dadd( 11.1857, 114.115, 42.8488, 0.29 ) }
    dend_79 { pt3dadd( 5.64473, 119.921, 49.0712, 0.29 ) }
    dend_79 { pt3dadd( 0.864867, 127.153, 54.5231, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 30/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 23.5097, 97.4204, 20.7709, 0.74 ) }
    dend_78 { pt3dadd( 23.4405, 107.79, 22.341, 0.29 ) }
    dend_78 { pt3dadd( 23.2858, 117.813, 25.3163, 0.29 ) }
    dend_78 { pt3dadd( 22.6443, 128.08, 27.3139, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 34/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 64.9534, 75.9355, 21.4345, 0.37 ) }
    dend_76 { pt3dadd( 64.9883, 76.0063, 21.4597, 0.37 ) }
    dend_76 { pt3dadd( 65.3595, 76.7124, 21.6412, 0.37 ) }
    dend_76 { pt3dadd( 65.4101, 76.7994, 21.6601, 0.37 ) }
    dend_76 { pt3dadd( 65.7371, 77.359, 21.8478, 0.59 ) }
    dend_76 { pt3dadd( 66.1082, 77.9888, 22.0824, 0.59 ) }
    dend_76 { pt3dadd( 66.1905, 78.129, 22.1353, 0.59 ) }
    dend_76 { pt3dadd( 66.7664, 79.0729, 22.4955, 0.29 ) }
    dend_76 { pt3dadd( 67.0062, 79.4152, 22.6268, 0.29 ) }
    dend_76 { pt3dadd( 67.9938, 80.7261, 23.0884, 0.15 ) }
    dend_76 { pt3dadd( 68.0587, 80.8076, 23.1209, 0.15 ) }
    dend_76 { pt3dadd( 68.3626, 81.1734, 23.2891, 0.15 ) }
    dend_76 { pt3dadd( 68.6516, 81.5207, 23.4565, 0.15 ) }
    dend_76 { pt3dadd( 69.3038, 82.2986, 23.8242, 0.15 ) }
    dend_76 { pt3dadd( 69.6117, 82.6695, 23.9741, 0.44 ) }
    dend_76 { pt3dadd( 70.3682, 83.5488, 24.2794, 0.29 ) }
    dend_76 { pt3dadd( 70.9105, 84.1928, 24.5115, 0.29 ) }
    dend_76 { pt3dadd( 71.1694, 84.5118, 24.6329, 0.29 ) }
    dend_76 { pt3dadd( 71.7483, 85.3089, 24.9376, 0.29 ) }
    dend_76 { pt3dadd( 72.0605, 85.8304, 25.123, 0.74 ) }
    dend_76 { pt3dadd( 77.5039, 94.3487, 27.2569, 0.74 ) }
    dend_76 { pt3dadd( 83.3739, 102.801, 28.1176, 0.74 ) }
    dend_76 { pt3dadd( 88.7407, 111.591, 29.1781, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 57/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 64.9534, 75.9355, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 65.0344, 75.8757, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 65.097, 75.8429, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 65.6283, 75.5919, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 65.7742, 75.5323, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 66.2115, 75.3668, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 66.411, 75.2912, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 67.626, 74.8578, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 67.6928, 74.8359, 21.4345, 0.29 ) }
    dend_75 { pt3dadd( 68.3359, 74.6635, 21.4345, 0.88 ) }
    dend_75 { pt3dadd( 68.414, 74.6452, 21.4345, 0.88 ) }
    dend_75 { pt3dadd( 78.1186, 72.2322, 22.1693, 0.88 ) }
    dend_75 { pt3dadd( 87.2537, 68.8203, 24.6169, 0.88 ) }
    dend_75 { pt3dadd( 96.3662, 66.4442, 28.058, 0.88 ) }
    dend_75 { pt3dadd( 105.784, 64.4348, 30.8232, 0.88 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 30.9581, 15.7951, -46.0447, 0.74 ) }
    dend_65 { pt3dadd( 30.9409, 17.8932, -48.2866, 0.74 ) }
    dend_65 { pt3dadd( 31.0362, 18.6707, -49.3183, 0.74 ) }
    dend_65 { pt3dadd( 31.0433, 18.7118, -49.3758, 0.74 ) }
    dend_65 { pt3dadd( 31.1652, 19.1623, -50.0677, 0.74 ) }
    dend_65 { pt3dadd( 31.336, 19.7073, -50.9339, 0.74 ) }
    dend_65 { pt3dadd( 31.699, 20.6968, -52.6148, 0.59 ) }
    dend_65 { pt3dadd( 32.3935, 22.229, -55.3044, 0.59 ) }
    dend_65 { pt3dadd( 32.4426, 22.3214, -55.4811, 0.59 ) }
    dend_65 { pt3dadd( 33.0508, 23.4078, -57.5737, 0.59 ) }
    dend_65 { pt3dadd( 33.0692, 23.4383, -57.6347, 0.59 ) }
    dend_65 { pt3dadd( 33.741, 24.4893, -59.8207, 0.29 ) }
    dend_65 { pt3dadd( 33.7607, 24.5205, -59.8809, 0.29 ) }
    dend_65 { pt3dadd( 33.9211, 24.8477, -60.4265, 0.29 ) }
    dend_65 { pt3dadd( 34.1274, 25.4892, -61.4279, 0.29 ) }
    dend_65 { pt3dadd( 34.1254, 25.5259, -61.4766, 0.29 ) }
    dend_65 { pt3dadd( 33.9228, 25.7765, -61.9162, 0.29 ) }
    dend_65 { pt3dadd( 33.7882, 25.8445, -62.0777, 0.29 ) }
    dend_65 { pt3dadd( 33.3771, 26.0503, -62.574, 0.29 ) }
    dend_65 { pt3dadd( 32.902, 26.2664, -63.1369, 0.74 ) }
    dend_65 { pt3dadd( 32.5092, 26.5334, -63.9752, 0.74 ) }
    dend_65 { pt3dadd( 31.8988, 27.2863, -66.0839, 0.37 ) }
    dend_65 { pt3dadd( 31.8899, 27.3079, -66.1503, 0.37 ) }
    dend_65 { pt3dadd( 31.8217, 27.586, -67.0355, 0.37 ) }
    dend_65 { pt3dadd( 31.8166, 27.6163, -67.1376, 0.37 ) }
    dend_65 { pt3dadd( 31.6408, 28.8824, -71.1389, 0.37 ) }
    dend_65 { pt3dadd( 31.6177, 29.109, -71.8306, 1.03 ) }
    dend_65 { pt3dadd( 31.3645, 30.4611, -75.7284, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_65 { pt3dadd( 31.3572, 30.4841, -75.7944, 1.03 ) }
    dend_65 { pt3dadd( 31.0201, 31.2988, -78.0055, 0.29 ) }
    dend_65 { pt3dadd( 30.8643, 31.6284, -78.7823, 0.29 ) }
    dend_65 { pt3dadd( 30.8246, 31.7073, -78.9245, 0.29 ) }
    dend_65 { pt3dadd( 30.5108, 32.4231, -80.0167, 0.29 ) }
    dend_65 { pt3dadd( 30.4978, 32.4674, -80.071, 0.29 ) }
    dend_65 { pt3dadd( 30.2116, 33.9807, -81.876, 0.29 ) }
    dend_65 { pt3dadd( 30.2078, 34.0276, -81.9297, 0.29 ) }
    dend_65 { pt3dadd( 30.1871, 35.1587, -83.3448, 1.33 ) }
    dend_65 { pt3dadd( 30.199, 35.5723, -83.8743, 1.33 ) }
    dend_65 { pt3dadd( 30.3307, 37.143, -85.9488, 0.29 ) }
    dend_65 { pt3dadd( 30.3532, 37.7141, -86.7274, 0.29 ) }
    dend_65 { pt3dadd( 30.3447, 37.7782, -86.8139, 0.29 ) }
    dend_65 { pt3dadd( 30.1853, 38.4071, -87.629, 1.03 ) }
    dend_65 { pt3dadd( 30.0911, 38.6285, -87.9052, 1.03 ) }
    dend_65 { pt3dadd( 30.0743, 38.6643, -87.9639, 1.03 ) }
    dend_65 { pt3dadd( 29.7948, 39.3891, -89.0456, 0.22 ) }
    dend_65 { pt3dadd( 29.4934, 40.2183, -90.3422, 0.22 ) }
    dend_65 { pt3dadd( 29.4795, 40.2542, -90.4016, 0.22 ) }
    dend_65 { pt3dadd( 29.1613, 41.0718, -91.7769, 1.18 ) }
    dend_65 { pt3dadd( 28.4131, 43.1236, -95.0891, 0.22 ) }
    dend_65 { pt3dadd( 28.1721, 43.9852, -96.4709, 0.22 ) }
    dend_65 { pt3dadd( 27.9697, 45.0913, -98.2673, 1.18 ) }
    dend_65 { pt3dadd( 27.9057, 46.3002, -100.53, 0.15 ) }
    dend_65 { pt3dadd( 27.9062, 46.3991, -100.729, 0.15 ) }
    dend_65 { pt3dadd( 27.969, 47.0244, -101.915, 0.15 ) }
    dend_65 { pt3dadd( 28.1543, 48.1267, -103.826, 0.15 ) }
    dend_65 { pt3dadd( 28.3767, 49.1679, -105.594, 1.62 ) }
    dend_65 { pt3dadd( 29.0966, 51.8206, -109.722, 0.22 ) }
    dend_65 { pt3dadd( 29.109, 51.859, -109.78, 0.22 ) }
    dend_65 { pt3dadd( 29.5586, 53.2281, -111.916, 0.22 ) }
    dend_65 { pt3dadd( 29.7785, 53.8948, -112.992, 1.25 ) }
    dend_65 { pt3dadd( 29.8363, 54.1502, -113.331, 1.25 ) }
    dend_65 { pt3dadd( 29.8478, 54.2104, -113.386, 1.25 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 34/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 30.9581, 15.7951, -46.0447, 0.96 ) }
    dend_64 { pt3dadd( 31.112, 15.7917, -46.1169, 0.96 ) }
    dend_64 { pt3dadd( 32.3439, 15.7623, -46.7116, 0.74 ) }
    dend_64 { pt3dadd( 33.9358, 15.6901, -47.3833, 0.74 ) }
    dend_64 { pt3dadd( 35.6911, 15.6309, -48.1737, 0.74 ) }
    dend_64 { pt3dadd( 35.7777, 15.6296, -48.2217, 0.74 ) }
    dend_64 { pt3dadd( 38.3643, 15.6857, -49.9667, 0.74 ) }
    dend_64 { pt3dadd( 38.4199, 15.6905, -50.009, 0.74 ) }
    dend_64 { pt3dadd( 40.1407, 15.9615, -51.543, 0.74 ) }
    dend_64 { pt3dadd( 41.5233, 16.2709, -52.833, 0.74 ) }
    dend_64 { pt3dadd( 43.0279, 16.7833, -54.3627, 1.62 ) }
    dend_64 { pt3dadd( 44.2771, 17.2946, -55.7628, 0.66 ) }
    dend_64 { pt3dadd( 45.2602, 17.7396, -56.9112, 0.52 ) }
    dend_64 { pt3dadd( 46.6421, 18.3777, -58.5399, 1.25 ) }
    dend_64 { pt3dadd( 47.6097, 18.8033, -59.678, 1.25 ) }
    dend_64 { pt3dadd( 50.4959, 19.937, -62.7731, 0.59 ) }
    dend_64 { pt3dadd( 52.4713, 20.6229, -64.8952, 0.96 ) }
    dend_64 { pt3dadd( 54.6264, 21.2953, -67.282, 0.96 ) }
    dend_64 { pt3dadd( 54.6735, 21.3081, -67.3323, 0.96 ) }
    dend_64 { pt3dadd( 58.1007, 22.1374, -70.7332, 0.96 ) }
    dend_64 { pt3dadd( 59.0905, 22.3312, -71.6738, 1.47 ) }
    dend_64 { pt3dadd( 62.1636, 22.7904, -74.3014, 0.74 ) }
    dend_64 { pt3dadd( 62.2277, 22.8008, -74.3483, 0.74 ) }
    dend_64 { pt3dadd( 65.5268, 23.3894, -76.5615, 0.74 ) }
    dend_64 { pt3dadd( 66.6125, 23.6081, -77.2321, 1.47 ) }
    dend_64 { pt3dadd( 68.0838, 23.9482, -77.9812, 0.59 ) }
    dend_64 { pt3dadd( 68.3465, 24.0061, -78.1114, 0.59 ) }
    dend_64 { pt3dadd( 70.1948, 24.3758, -78.8721, 0.59 ) }
    dend_64 { pt3dadd( 70.3415, 24.4021, -78.9445, 0.59 ) }
    dend_64 { pt3dadd( 71.8514, 24.5984, -79.9226, 2.14 ) }
    dend_64 { pt3dadd( 72.2262, 24.6317, -80.1696, 2.14 ) }
    dend_64 { pt3dadd( 74.1008, 24.6655, -81.3882, 0.66 ) }
    dend_64 { pt3dadd( 74.6657, 24.6515, -81.7687, 0.66 ) }
    dend_64 { pt3dadd( 74.7202, 24.65, -81.8126, 0.66 ) }
    dend_64 { pt3dadd( 76.7086, 24.7551, -83.7994, 0.66 ) }
    dend_64 { pt3dadd( 76.7549, 24.7624, -83.8513, 0.66 ) }
    dend_64 { pt3dadd( 78.3556, 25.1905, -85.8585, 0.66 ) }
    dend_64 { pt3dadd( 78.5543, 25.2782, -86.1469, 1.18 ) }
    dend_64 { pt3dadd( 79.8489, 25.9927, -88.2577, 0.81 ) }
    dend_64 { pt3dadd( 81.1686, 26.7775, -90.4797, 0.44 ) }
    dend_64 { pt3dadd( 81.5724, 27.061, -91.2359, 0.44 ) }
    dend_64 { pt3dadd( 81.6045, 27.082, -91.2948, 0.44 ) }
    dend_64 { pt3dadd( 82.6923, 27.7659, -93.2806, 0.44 ) }
    dend_64 { pt3dadd( 82.7501, 27.7889, -93.3671, 0.44 ) }
    dend_64 { pt3dadd( 83.682, 27.9337, -94.5042, 0.44 ) }
    dend_64 { pt3dadd( 83.7291, 27.9404, -94.5556, 0.44 ) }
    dend_64 { pt3dadd( 84.7744, 28.0866, -95.7106, 1.4 ) }
    dend_64 { pt3dadd( 84.8307, 28.0969, -95.7666, 1.4 ) }
    dend_64 { pt3dadd( 85.3523, 28.2039, -96.2537, 1.4 ) }
    dend_64 { pt3dadd( 88.4965, 28.8612, -99.4345, 0.52 ) }
    dend_64 { pt3dadd( 90.5326, 29.3198, -101.6, 0.37 ) }
    dend_64 { pt3dadd( 90.582, 29.331, -101.649, 0.37 ) }
    dend_64 { pt3dadd( 93.2739, 29.9703, -104.125, 0.37 ) }
    dend_64 { pt3dadd( 93.332, 29.9846, -104.178, 0.37 ) }
    dend_64 { pt3dadd( 96.5185, 30.7939, -107.132, 0.37 ) }
    dend_64 { pt3dadd( 96.5772, 30.808, -107.185, 0.37 ) }
    dend_64 { pt3dadd( 98.7424, 31.2815, -109.066, 0.37 ) }
    dend_64 { pt3dadd( 98.7936, 31.2926, -109.113, 0.37 ) }
    dend_64 { pt3dadd( 100.559, 31.6741, -110.78, 0.29 ) }
    dend_64 { pt3dadd( 102.644, 32.1316, -112.659, 0.29 ) }
    dend_64 { pt3dadd( 102.698, 32.1437, -112.703, 0.29 ) }
    dend_64 { pt3dadd( 106.425, 32.9484, -115.625, 0.29 ) }
    dend_64 { pt3dadd( 108.194, 33.3248, -117.071, 1.62 ) }
    dend_64 { pt3dadd( 108.249, 33.3358, -117.114, 1.62 ) }
    dend_64 { pt3dadd( 109.297, 33.5268, -117.788, 1.62 ) }
    dend_64 { pt3dadd( 110.299, 33.7278, -118.366, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_64 { pt3dadd( 111.793, 34.04, -119.277, 0.29 ) }
    dend_64 { pt3dadd( 113.889, 34.4257, -120.517, 0.29 ) }
    dend_64 { pt3dadd( 113.95, 34.4343, -120.551, 0.29 ) }
    dend_64 { pt3dadd( 115.798, 34.6514, -121.779, 0.29 ) }
    dend_64 { pt3dadd( 116.281, 34.6983, -122.144, 1.11 ) }
    dend_64 { pt3dadd( 118.205, 34.8723, -123.674, 0.29 ) }
    dend_64 { pt3dadd( 119.578, 34.9713, -124.784, 0.29 ) }
    dend_64 { pt3dadd( 121.304, 35.1139, -126.022, 1.47 ) }
    dend_64 { pt3dadd( 122.953, 35.2789, -127.193, 0.15 ) }
    dend_64 { pt3dadd( 123.011, 35.2832, -127.233, 0.15 ) }
    dend_64 { pt3dadd( 124.067, 35.3292, -127.848, 0.15 ) }
    dend_64 { pt3dadd( 124.14, 35.3337, -127.881, 0.15 ) }
    dend_64 { pt3dadd( 125.605, 35.4258, -128.476, 0.15 ) }
    dend_64 { pt3dadd( 125.745, 35.426, -128.53, 0.15 ) }
    dend_64 { pt3dadd( 127.258, 35.3642, -129.124, 0.15 ) }
    dend_64 { pt3dadd( 128.489, 35.2867, -129.69, 1.11 ) }
    dend_64 { pt3dadd( 128.953, 35.2409, -129.94, 1.11 ) }
    dend_64 { pt3dadd( 129.01, 35.2392, -129.981, 1.11 ) }
    dend_64 { pt3dadd( 130.725, 35.2893, -131.547, 0.37 ) }
    dend_64 { pt3dadd( 131.139, 35.3446, -131.971, 0.59 ) }
    dend_64 { pt3dadd( 131.435, 35.4323, -132.294, 0.59 ) }
    dend_64 { pt3dadd( 131.501, 35.4566, -132.364, 0.59 ) }
    dend_64 { pt3dadd( 133.361, 36.1361, -134.212, 0.29 ) }
    dend_64 { pt3dadd( 133.696, 36.2361, -134.48, 0.22 ) }
    dend_64 { pt3dadd( 133.754, 36.2517, -134.517, 0.22 ) }
    dend_64 { pt3dadd( 134.646, 36.4643, -135.045, 0.22 ) }
    dend_64 { pt3dadd( 135.083, 36.5543, -135.294, 0.22 ) }
    dend_64 { pt3dadd( 136.375, 36.7939, -135.972, 1.03 ) }
    dend_64 { pt3dadd( 138.867, 37.1984, -137.113, 0.22 ) }
    dend_64 { pt3dadd( 139.664, 37.3252, -137.492, 0.22 ) }
    dend_64 { pt3dadd( 139.726, 37.3345, -137.523, 0.22 ) }
    dend_64 { pt3dadd( 141.245, 37.5437, -138.317, 1.11 ) }
    dend_64 { pt3dadd( 141.76, 37.6213, -138.59, 1.11 ) }
    dend_64 { pt3dadd( 141.86, 37.6391, -138.639, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 73.6279, 20.6756, -29.9333, 0.44 ) }
    dend_62 { pt3dadd( 74.3169, 20.8596, -29.9389, 0.44 ) }
    dend_62 { pt3dadd( 74.8859, 21.0247, -30.0056, 0.44 ) }
    dend_62 { pt3dadd( 75.1698, 21.1088, -30.0506, 0.44 ) }
    dend_62 { pt3dadd( 76.7701, 21.5541, -30.8761, 0.44 ) }
    dend_62 { pt3dadd( 76.8269, 21.5713, -30.9136, 0.44 ) }
    dend_62 { pt3dadd( 77.4314, 21.7638, -31.3508, 0.81 ) }
    dend_62 { pt3dadd( 78.4096, 22.0805, -32.1052, 0.81 ) }
    dend_62 { pt3dadd( 78.4644, 22.1006, -32.1602, 0.81 ) }
    dend_62 { pt3dadd( 80.3166, 22.9028, -34.1926, 0.22 ) }
    dend_62 { pt3dadd( 80.6652, 23.0805, -34.6173, 0.22 ) }
    dend_62 { pt3dadd( 80.7254, 23.1129, -34.6993, 0.22 ) }
    dend_62 { pt3dadd( 80.9728, 23.2687, -35.0605, 0.44 ) }
    dend_62 { pt3dadd( 81.8211, 23.8665, -36.3052, 0.29 ) }
    dend_62 { pt3dadd( 82.7344, 24.5775, -37.6307, 0.29 ) }
    dend_62 { pt3dadd( 84.1382, 25.801, -39.806, 0.96 ) }
    dend_62 { pt3dadd( 85.2011, 26.7671, -41.6148, 0.44 ) }
    dend_62 { pt3dadd( 85.6604, 27.1682, -42.3534, 0.44 ) }
    dend_62 { pt3dadd( 85.8437, 27.3263, -42.6383, 1.03 ) }
    dend_62 { pt3dadd( 86.0934, 27.5397, -42.9692, 1.03 ) }
    dend_62 { pt3dadd( 87.3037, 28.6361, -44.4753, 0.29 ) }
    dend_62 { pt3dadd( 87.3722, 28.6859, -44.5287, 0.29 ) }
    dend_62 { pt3dadd( 89.0903, 29.6636, -45.4272, 0.29 ) }
    dend_62 { pt3dadd( 89.2178, 29.7196, -45.4856, 0.29 ) }
    dend_62 { pt3dadd( 90.6293, 30.2539, -46.0287, 0.29 ) }
    dend_62 { pt3dadd( 90.7319, 30.2927, -46.059, 0.29 ) }
    dend_62 { pt3dadd( 92.5207, 30.9896, -46.5519, 0.29 ) }
    dend_62 { pt3dadd( 92.5898, 31.0177, -46.5821, 0.29 ) }
    dend_62 { pt3dadd( 93.2593, 31.2777, -46.9649, 0.29 ) }
    dend_62 { pt3dadd( 93.3925, 31.3268, -47.0434, 0.29 ) }
    dend_62 { pt3dadd( 94.2995, 31.6373, -47.5128, 1.03 ) }
    dend_62 { pt3dadd( 95.8038, 32.1251, -48.0675, 0.29 ) }
    dend_62 { pt3dadd( 96.0126, 32.1862, -48.1051, 0.29 ) }
    dend_62 { pt3dadd( 98.0993, 32.698, -48.458, 0.29 ) }
    dend_62 { pt3dadd( 98.1671, 32.7123, -48.469, 0.29 ) }
    dend_62 { pt3dadd( 99.5339, 32.9564, -48.6099, 0.81 ) }
    dend_62 { pt3dadd( 100.239, 33.0773, -48.6355, 0.22 ) }
    dend_62 { pt3dadd( 101.999, 33.4322, -48.569, 0.22 ) }
    dend_62 { pt3dadd( 102.989, 33.6598, -48.6044, 1.03 ) }
    dend_62 { pt3dadd( 103.114, 33.6936, -48.62, 1.03 ) }
    dend_62 { pt3dadd( 104.187, 34.0313, -48.8375, 0.15 ) }
    dend_62 { pt3dadd( 105.218, 34.4274, -49.1664, 0.15 ) }
    dend_62 { pt3dadd( 105.279, 34.4553, -49.1885, 0.15 ) }
    dend_62 { pt3dadd( 106.603, 35.2056, -49.8522, 0.81 ) }
    dend_62 { pt3dadd( 106.725, 35.2731, -49.9105, 0.81 ) }
    dend_62 { pt3dadd( 107.031, 35.3996, -50.0668, 0.81 ) }
    dend_62 { pt3dadd( 107.127, 35.429, -50.1209, 0.81 ) }
    dend_62 { pt3dadd( 107.631, 35.5313, -50.3791, 0.15 ) }
    dend_62 { pt3dadd( 107.694, 35.5427, -50.4066, 0.15 ) }
    dend_62 { pt3dadd( 108.909, 35.7149, -50.771, 0.15 ) }
    dend_62 { pt3dadd( 110.063, 35.8408, -51.1174, 0.74 ) }
    dend_62 { pt3dadd( 110.286, 35.8576, -51.1849, 0.74 ) }
    dend_62 { pt3dadd( 110.363, 35.8627, -51.2072, 0.74 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 73.6279, 20.6756, -29.9333, 0.66 ) }
    dend_61 { pt3dadd( 73.8512, 20.4388, -30.0277, 0.66 ) }
    dend_61 { pt3dadd( 73.8989, 20.3914, -30.0517, 0.66 ) }
    dend_61 { pt3dadd( 74.7329, 19.6791, -30.4583, 0.66 ) }
    dend_61 { pt3dadd( 74.9554, 19.5237, -30.5709, 0.66 ) }
    dend_61 { pt3dadd( 75.7689, 19.0146, -30.9849, 0.66 ) }
    dend_61 { pt3dadd( 76.596, 18.588, -31.3609, 1.18 ) }
    dend_61 { pt3dadd( 76.7392, 18.5288, -31.4217, 1.18 ) }
    dend_61 { pt3dadd( 77.4237, 18.3208, -31.6728, 1.18 ) }
    dend_61 { pt3dadd( 78.202, 18.1733, -31.9278, 0.44 ) }
    dend_61 { pt3dadd( 78.2785, 18.1634, -31.9491, 0.44 ) }
    dend_61 { pt3dadd( 79.4307, 18.0657, -32.1962, 0.44 ) }
    dend_61 { pt3dadd( 79.7396, 18.0424, -32.2998, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_61 { pt3dadd( 80.5486, 17.9948, -32.6746, 0.44 ) }
    dend_61 { pt3dadd( 80.6095, 17.9919, -32.709, 0.44 ) }
    dend_61 { pt3dadd( 81.1431, 17.9807, -33.0409, 0.74 ) }
    dend_61 { pt3dadd( 81.2098, 17.9839, -33.085, 0.74 ) }
    dend_61 { pt3dadd( 83.2073, 18.2342, -34.4685, 0.44 ) }
    dend_61 { pt3dadd( 84.494, 18.4544, -35.1725, 0.44 ) }
    dend_61 { pt3dadd( 84.5591, 18.4671, -35.1952, 0.44 ) }
    dend_61 { pt3dadd( 85.2865, 18.6121, -35.2828, 0.88 ) }
    dend_61 { pt3dadd( 86.1182, 18.7869, -35.2521, 0.88 ) }
    dend_61 { pt3dadd( 86.8749, 18.9561, -35.1321, 0.88 ) }
    dend_61 { pt3dadd( 88.3973, 19.3046, -34.6194, 0.44 ) }
    dend_61 { pt3dadd( 90.0879, 19.6594, -33.9397, 0.44 ) }
    dend_61 { pt3dadd( 91.5175, 19.9322, -33.3134, 1.25 ) }
    dend_61 { pt3dadd( 91.5893, 19.9448, -33.2801, 1.25 ) }
    dend_61 { pt3dadd( 92.3384, 20.0641, -32.9191, 1.25 ) }
    dend_61 { pt3dadd( 93.7827, 20.2533, -32.2542, 0.37 ) }
    dend_61 { pt3dadd( 94.7676, 20.3587, -31.9698, 0.37 ) }
    dend_61 { pt3dadd( 94.9066, 20.3681, -31.9559, 0.37 ) }
    dend_61 { pt3dadd( 96.0716, 20.3995, -32.0602, 0.37 ) }
    dend_61 { pt3dadd( 96.1691, 20.3985, -32.0773, 0.37 ) }
    dend_61 { pt3dadd( 97.3518, 20.3472, -32.3957, 0.37 ) }
    dend_61 { pt3dadd( 99.3463, 20.2343, -33.0831, 1.03 ) }
    dend_61 { pt3dadd( 100.179, 20.1599, -33.3692, 1.92 ) }
    dend_61 { pt3dadd( 100.623, 20.1099, -33.5164, 0.29 ) }
    dend_61 { pt3dadd( 101.465, 20.0009, -33.8207, 0.29 ) }
    dend_61 { pt3dadd( 101.595, 19.9861, -33.8681, 0.29 ) }
    dend_61 { pt3dadd( 102.58, 19.8962, -34.1983, 0.29 ) }
    dend_61 { pt3dadd( 103.202, 19.8095, -34.3407, 0.74 ) }
    dend_61 { pt3dadd( 103.279, 19.7966, -34.3617, 0.74 ) }
    dend_61 { pt3dadd( 104.511, 19.587, -34.6988, 0.74 ) }
    dend_61 { pt3dadd( 104.578, 19.5753, -34.7161, 0.74 ) }
    dend_61 { pt3dadd( 105.22, 19.4655, -34.8497, 0.22 ) }
    dend_61 { pt3dadd( 106.06, 19.3274, -34.9845, 0.22 ) }
    dend_61 { pt3dadd( 106.207, 19.306, -34.9667, 0.22 ) }
    dend_61 { pt3dadd( 106.866, 19.2115, -34.729, 0.96 ) }
    dend_61 { pt3dadd( 107.192, 19.1675, -34.5592, 0.96 ) }
    dend_61 { pt3dadd( 107.827, 19.0911, -34.2071, 0.96 ) }
    dend_61 { pt3dadd( 107.887, 19.0848, -34.1721, 0.96 ) }
    dend_61 { pt3dadd( 109.818, 18.9181, -33.0404, 0.37 ) }
    dend_61 { pt3dadd( 109.91, 18.9095, -32.988, 0.37 ) }
    dend_61 { pt3dadd( 111.434, 18.7534, -32.2165, 0.37 ) }
    dend_61 { pt3dadd( 111.498, 18.7466, -32.1881, 0.37 ) }
    dend_61 { pt3dadd( 112.057, 18.6873, -31.993, 0.59 ) }
    dend_61 { pt3dadd( 112.272, 18.6673, -31.9484, 0.22 ) }
    dend_61 { pt3dadd( 112.342, 18.6627, -31.9435, 0.22 ) }
    dend_61 { pt3dadd( 113.374, 18.6323, -31.7995, 0.22 ) }
    dend_61 { pt3dadd( 113.442, 18.6322, -31.787, 0.22 ) }
    dend_61 { pt3dadd( 113.875, 18.6285, -31.7084, 0.44 ) }
    dend_61 { pt3dadd( 114.103, 18.618, -31.6701, 0.44 ) }
    dend_61 { pt3dadd( 115.088, 18.5336, -31.5148, 0.22 ) }
    dend_61 { pt3dadd( 117.337, 18.2743, -31.2161, 0.22 ) }
    dend_61 { pt3dadd( 118.001, 18.1787, -31.1427, 1.03 ) }
    dend_61 { pt3dadd( 118.665, 18.0687, -31.0836, 0.22 ) }
    dend_61 { pt3dadd( 119.99, 17.812, -30.9922, 0.22 ) }
    dend_61 { pt3dadd( 120.353, 17.732, -30.9797, 0.22 ) }
    dend_61 { pt3dadd( 122.165, 17.3115, -30.9888, 0.22 ) }
    dend_61 { pt3dadd( 124.353, 16.7659, -31.0179, 0.22 ) }
    dend_61 { pt3dadd( 125.461, 16.4982, -31.0398, 1.18 ) }
    dend_61 { pt3dadd( 126.422, 16.2775, -31.0646, 1.18 ) }
    dend_61 { pt3dadd( 127.076, 16.142, -31.0852, 0.15 ) }
    dend_61 { pt3dadd( 129.252, 15.7221, -31.1653, 0.15 ) }
    dend_61 { pt3dadd( 129.331, 15.7076, -31.1689, 0.52 ) }
    dend_61 { pt3dadd( 129.914, 15.6147, -31.1999, 0.15 ) }
    dend_61 { pt3dadd( 130.052, 15.5966, -31.2085, 0.15 ) }
    dend_61 { pt3dadd( 131.905, 15.4294, -31.3217, 0.15 ) }
    dend_61 { pt3dadd( 132.418, 15.3931, -31.3489, 0.96 ) }
    dend_61 { pt3dadd( 133.155, 15.3517, -31.4008, 0.96 ) }
    dend_61 { pt3dadd( 133.374, 15.3421, -31.4178, 0.96 ) }
    dend_61 { pt3dadd( 134.042, 15.3309, -31.4745, 0.15 ) }
    dend_61 { pt3dadd( 135.587, 15.387, -31.6144, 0.15 ) }
    dend_61 { pt3dadd( 135.666, 15.396, -31.6226, 0.15 ) }
    dend_61 { pt3dadd( 135.96, 15.4446, -31.6467, 0.81 ) }
    dend_61 { pt3dadd( 136.028, 15.4592, -31.6505, 0.81 ) }
    dend_61 { pt3dadd( 136.743, 15.6346, -31.6578, 0.81 ) }
    dend_61 { pt3dadd( 137.239, 15.7809, -31.6324, 0.81 ) }
    dend_61 { pt3dadd( 137.306, 15.8015, -31.6289, 0.81 ) }
    dend_61 { pt3dadd( 137.832, 15.9522, -31.6052, 0.15 ) }
    dend_61 { pt3dadd( 137.909, 15.9739, -31.6021, 0.15 ) }
    dend_61 { pt3dadd( 138.762, 16.2128, -31.5709, 0.15 ) }
    dend_61 { pt3dadd( 138.865, 16.2411, -31.5619, 0.15 ) }
    dend_61 { pt3dadd( 140.591, 16.7217, -31.3448, 0.15 ) }
    dend_61 { pt3dadd( 140.966, 16.8367, -31.2872, 0.44 ) }
    dend_61 { pt3dadd( 141.166, 16.9039, -31.2524, 0.44 ) }
    dend_61 { pt3dadd( 141.31, 16.9584, -31.2233, 0.44 ) }
    dend_61 { pt3dadd( 142.113, 17.297, -31.0312, 0.15 ) }
    dend_61 { pt3dadd( 142.319, 17.3881, -30.9744, 0.15 ) }
    dend_61 { pt3dadd( 142.797, 17.6364, -30.7899, 0.15 ) }
    dend_61 { pt3dadd( 143.193, 17.8371, -30.6387, 0.88 ) }
    dend_61 { pt3dadd( 143.652, 18.0561, -30.4839, 0.88 ) }
    dend_61 { pt3dadd( 143.786, 18.1171, -30.4519, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -56.6171, 57.6812, 58.5366, 0.37 ) }
    dend_57 { pt3dadd( -61.8436, 59.8683, 66.8037, 0.37 ) }
    dend_57 { pt3dadd( -66.6676, 62.204, 75.276, 0.37 ) }
    dend_57 { pt3dadd( -71.3639, 63.873, 83.9604, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 94/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -56.6171, 57.6812, 58.5366, 0.29 ) }
    dend_56 { pt3dadd( -64.6381, 60.5382, 63.8527, 0.37 ) }
    dend_56 { pt3dadd( -73.7866, 63.0023, 67.1385, 0.37 ) }
    dend_56 { pt3dadd( -82.4601, 66.6693, 70.6844, 0.37 ) }
    dend_56 { pt3dadd( -90.8336, 72.1756, 72.2289, 0.37 ) }
    dend_56 { pt3dadd( -98.9437, 78.2975, 72.7099, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_56 { pt3dadd( -106.008, 85.5834, 74.1012, 0.37 ) }
    dend_56 { pt3dadd( -112.298, 93.1402, 77.0423, 0.37 ) }
    dend_56 { pt3dadd( -117.139, 101.988, 79.3989, 0.37 ) }
    dend_56 { pt3dadd( -122.517, 109.874, 83.2289, 0.37 ) }
    dend_56 { pt3dadd( -126.243, 119.287, 85.629, 0.37 ) }
    dend_56 { pt3dadd( -128.585, 128.725, 89.3323, 0.37 ) }
    dend_56 { pt3dadd( -131.33, 137.479, 94.1241, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 7/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -32.6129, 83.4004, 44.2687, 0.29 ) }
    dend_52 { pt3dadd( -35.5931, 91.4679, 49.9331, 0.29 ) }
    dend_52 { pt3dadd( -38.0455, 100.199, 54.9177, 0.29 ) }
    dend_52 { pt3dadd( -38.6548, 108.914, 60.4624, 0.29 ) }
    dend_52 { pt3dadd( -38.6395, 117.364, 66.3984, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 12/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -32.6129, 83.4004, 44.2687, 0.74 ) }
    dend_51 { pt3dadd( -36.6221, 91.0762, 49.7901, 0.29 ) }
    dend_51 { pt3dadd( -40.9094, 97.9717, 55.9943, 0.29 ) }
    dend_51 { pt3dadd( -45.499, 105.004, 61.8324, 0.29 ) }
    dend_51 { pt3dadd( -49.6934, 111.286, 68.6593, 0.29 ) }
    dend_51 { pt3dadd( -54.8772, 116.85, 75.3716, 0.29 ) }
    dend_51 { pt3dadd( -60.0377, 122.105, 82.3226, 0.29 ) }
    dend_51 { pt3dadd( -64.9438, 127.17, 89.5797, 0.29 ) }
    dend_51 { pt3dadd( -70.398, 133.677, 95.2231, 0.29 ) }
    dend_51 { pt3dadd( -75.2244, 140.674, 100.907, 0.29 ) }
    dend_51 { pt3dadd( -80.802, 146.678, 106.923, 0.29 ) }
    dend_51 { pt3dadd( -85.4443, 152.707, 113.667, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 48.2968, -50.1849, 4.88767, 0.59 ) }
    dend_44 { pt3dadd( 49.3459, -50.3232, 5.02189, 0.59 ) }
    dend_44 { pt3dadd( 49.5559, -50.3474, 5.04081, 0.59 ) }
    dend_44 { pt3dadd( 49.9519, -50.3908, 5.07148, 0.59 ) }
    dend_44 { pt3dadd( 51.064, -50.556, 5.16117, 0.44 ) }
    dend_44 { pt3dadd( 51.9428, -50.7026, 5.23298, 0.44 ) }
    dend_44 { pt3dadd( 53.0401, -50.935, 5.26982, 0.81 ) }
    dend_44 { pt3dadd( 53.9453, -51.1843, 5.24731, 0.52 ) }
    dend_44 { pt3dadd( 54.011, -51.2095, 5.24532, 0.52 ) }
    dend_44 { pt3dadd( 54.9778, -51.6848, 5.16013, 0.22 ) }
    dend_44 { pt3dadd( 55.0472, -51.7255, 5.15043, 0.22 ) }
    dend_44 { pt3dadd( 56.1256, -52.517, 4.94735, 0.52 ) }
    dend_44 { pt3dadd( 57.0046, -53.289, 4.74451, 0.44 ) }
    dend_44 { pt3dadd( 57.9438, -54.2008, 4.49979, 0.44 ) }
    dend_44 { pt3dadd( 58.7924, -55.0685, 4.26368, 0.22 ) }
    dend_44 { pt3dadd( 58.8956, -55.1783, 4.23307, 0.22 ) }
    dend_44 { pt3dadd( 59.3024, -55.6196, 4.12195, 0.22 ) }
    dend_44 { pt3dadd( 59.5554, -55.8942, 4.1111, 0.22 ) }
    dend_44 { pt3dadd( 60.0503, -56.4405, 4.23068, 0.22 ) }
    dend_44 { pt3dadd( 60.1013, -56.4953, 4.26352, 0.22 ) }
    dend_44 { pt3dadd( 60.4755, -56.9114, 4.5788, 1.03 ) }
    dend_44 { pt3dadd( 60.5154, -56.9596, 4.61352, 1.03 ) }
    dend_44 { pt3dadd( 61.5772, -58.3557, 5.57884, 0.22 ) }
    dend_44 { pt3dadd( 62.0955, -59.1162, 6.07499, 0.22 ) }
    dend_44 { pt3dadd( 62.128, -59.1681, 6.11244, 0.22 ) }
    dend_44 { pt3dadd( 62.5151, -59.7716, 6.53947, 0.37 ) }
    dend_44 { pt3dadd( 62.7985, -60.1954, 6.86325, 0.59 ) }
    dend_44 { pt3dadd( 63.0579, -60.5365, 7.11819, 0.59 ) }
    dend_44 { pt3dadd( 63.1004, -60.5847, 7.14953, 0.59 ) }
    dend_44 { pt3dadd( 63.9515, -61.386, 7.77279, 0.22 ) }
    dend_44 { pt3dadd( 64.6136, -61.9362, 8.23746, 0.22 ) }
    dend_44 { pt3dadd( 65.3062, -62.4464, 8.71326, 0.74 ) }
    dend_44 { pt3dadd( 65.8159, -62.7911, 9.04516, 0.74 ) }
    dend_44 { pt3dadd( 66.4815, -63.253, 9.42875, 0.74 ) }
    dend_44 { pt3dadd( 66.5326, -63.2979, 9.45027, 0.74 ) }
    dend_44 { pt3dadd( 67.0034, -63.785, 9.5678, 0.37 ) }
    dend_44 { pt3dadd( 67.1019, -63.9027, 9.58212, 0.22 ) }
    dend_44 { pt3dadd( 67.1468, -63.9591, 9.58302, 0.22 ) }
    dend_44 { pt3dadd( 67.7343, -64.7277, 9.57428, 0.22 ) }
    dend_44 { pt3dadd( 68.8833, -66.2692, 9.52209, 0.22 ) }
    dend_44 { pt3dadd( 68.9293, -66.3246, 9.51936, 0.22 ) }
    dend_44 { pt3dadd( 69.4395, -66.8981, 9.4805, 0.59 ) }
    dend_44 { pt3dadd( 69.9495, -67.4538, 9.4415, 1.03 ) }
    dend_44 { pt3dadd( 70.464, -67.993, 9.40192, 0.44 ) }
    dend_44 { pt3dadd( 70.7059, -68.2223, 9.38331, 0.22 ) }
    dend_44 { pt3dadd( 72.3523, -69.536, 9.27204, 0.22 ) }
    dend_44 { pt3dadd( 72.4082, -69.5801, 9.26939, 0.22 ) }
    dend_44 { pt3dadd( 81.2953, -74.3922, 9.39781, 0.22 ) }
    dend_44 { pt3dadd( 89.0221, -81.0485, 9.06623, 0.22 ) }
    dend_44 { pt3dadd( 97.4465, -86.3864, 7.28154, 0.22 ) }
    dend_44 { pt3dadd( 105.267, -92.8533, 6.32213, 0.22 ) }
    dend_44 { pt3dadd( 112.297, -100.299, 5.79286, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 48.2968, -50.1849, 4.88767, 0.88 ) }
    dend_35 { pt3dadd( 48.4477, -50.7715, 4.83064, 0.88 ) }
    dend_35 { pt3dadd( 48.673, -51.9847, 4.73466, 0.66 ) }
    dend_35 { pt3dadd( 48.6844, -52.057, 4.72949, 0.66 ) }
    dend_35 { pt3dadd( 48.874, -53.1278, 4.66186, 0.66 ) }
    dend_35 { pt3dadd( 49.143, -54.5713, 4.57721, 0.59 ) }
    dend_35 { pt3dadd( 49.3073, -55.4028, 4.49473, 0.81 ) }
    dend_35 { pt3dadd( 49.5227, -56.4678, 4.37764, 0.81 ) }
    dend_35 { pt3dadd( 49.5562, -56.6193, 4.35389, 0.81 ) }
    dend_35 { pt3dadd( 49.8111, -57.6544, 4.1573, 0.52 ) }
    dend_35 { pt3dadd( 49.8335, -57.722, 4.14102, 0.52 ) }
    dend_35 { pt3dadd( 50.4465, -58.5369, 3.88241, 0.37 ) }
    dend_35 { pt3dadd( 50.5218, -58.5996, 3.85883, 0.37 ) }
    dend_35 { pt3dadd( 51.1754, -58.9645, 3.70215, 0.37 ) }
    dend_35 { pt3dadd( 51.5643, -59.1411, 3.62591, 0.37 ) }
    dend_35 { pt3dadd( 52.3362, -59.4308, 3.51376, 0.37 ) }
    dend_35 { pt3dadd( 53.7117, -59.9398, 3.27652, 0.22 ) }
    dend_35 { pt3dadd( 53.8667, -59.9964, 3.25434, 0.22 ) }
    dend_35 { pt3dadd( 54.7063, -60.3657, 3.11636, 0.81 ) }
    dend_35 { pt3dadd( 54.8406, -60.4307, 3.0912, 0.81 ) }
    dend_35 { pt3dadd( 55.4749, -60.851, 2.99158, 1.18 ) }
    dend_35 { pt3dadd( 56.4926, -61.7746, 2.89181, 0.88 ) }
    dend_35 { pt3dadd( 56.863, -62.2262, 2.88582, 0.29 ) }
    dend_35 { pt3dadd( 57.6978, -63.417, 2.944, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( 57.748, -63.5054, 2.9577, 0.29 ) }
    dend_35 { pt3dadd( 58.541, -65.0515, 3.28141, 0.29 ) }
    dend_35 { pt3dadd( 58.837, -65.6807, 3.40204, 0.81 ) }
    dend_35 { pt3dadd( 59.2201, -66.5113, 3.55719, 0.81 ) }
    dend_35 { pt3dadd( 59.5803, -67.3106, 3.6935, 0.81 ) }
    dend_35 { pt3dadd( 60.2985, -68.9006, 3.95857, 0.44 ) }
    dend_35 { pt3dadd( 60.7841, -69.991, 4.11307, 0.44 ) }
    dend_35 { pt3dadd( 61.3904, -71.3548, 4.22145, 1.11 ) }
    dend_35 { pt3dadd( 61.6567, -71.9253, 4.239, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 108.851, -41.252, 63.5728, 0.29 ) }
    dend_33 { pt3dadd( 114.378, -42.4068, 71.8336, 0.29 ) }
    dend_33 { pt3dadd( 118.597, -44.7384, 80.6238, 0.29 ) }
    dend_33 { pt3dadd( 121.843, -48.9837, 89.1749, 0.29 ) }
    dend_33 { pt3dadd( 123.303, -55.2793, 97.0437, 0.29 ) }
    dend_33 { pt3dadd( 125.876, -60.9547, 105.054, 0.29 ) }
    dend_33 { pt3dadd( 126.737, -67.109, 113.111, 0.29 ) }
    dend_33 { pt3dadd( 126.766, -73.1411, 121.296, 0.29 ) }
    dend_33 { pt3dadd( 127.08, -80.9988, 127.921, 0.29 ) }
    dend_33 { pt3dadd( 128.821, -88.5233, 134.675, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 108.851, -41.252, 63.5728, 0.74 ) }
    dend_32 { pt3dadd( 118.323, -42.3344, 66.6092, 0.29 ) }
    dend_32 { pt3dadd( 127.44, -41.8845, 70.6955, 0.29 ) }
    dend_32 { pt3dadd( 136.937, -39.6318, 72.9749, 0.29 ) }
    dend_32 { pt3dadd( 146.113, -37.4567, 76.3686, 0.29 ) }
    dend_32 { pt3dadd( 155.87, -37.0353, 78.5221, 0.29 ) }
    dend_32 { pt3dadd( 165.167, -35.0073, 81.6582, 0.29 ) }
    dend_32 { pt3dadd( 174.217, -30.9655, 83.4701, 0.29 ) }
    dend_32 { pt3dadd( 182.682, -26.5287, 86.7073, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 40.4216, -79.2876, 62.0687, 0.37 ) }
    dend_29 { pt3dadd( 40.7246, -79.6661, 62.1956, 0.37 ) }
    dend_29 { pt3dadd( 41.2918, -80.46, 62.6225, 0.37 ) }
    dend_29 { pt3dadd( 41.9008, -81.5729, 63.3426, 0.22 ) }
    dend_29 { pt3dadd( 41.9239, -81.6299, 63.3803, 0.22 ) }
    dend_29 { pt3dadd( 42.3041, -83.321, 64.4238, 0.52 ) }
    dend_29 { pt3dadd( 42.3856, -83.9374, 64.7881, 0.52 ) }
    dend_29 { pt3dadd( 42.3321, -85.088, 65.4697, 0.37 ) }
    dend_29 { pt3dadd( 42.0498, -86.2598, 66.0782, 0.22 ) }
    dend_29 { pt3dadd( 41.7904, -86.9791, 66.3825, 0.22 ) }
    dend_29 { pt3dadd( 41.1716, -88.3166, 66.7425, 0.22 ) }
    dend_29 { pt3dadd( 41.1346, -88.3785, 66.7508, 0.22 ) }
    dend_29 { pt3dadd( 40.6513, -89.0908, 66.799, 0.22 ) }
    dend_29 { pt3dadd( 39.4732, -90.7022, 66.8678, 0.22 ) }
    dend_29 { pt3dadd( 38.9594, -91.4371, 66.8964, 0.22 ) }
    dend_29 { pt3dadd( 38.0116, -92.9445, 66.9439, 0.22 ) }
    dend_29 { pt3dadd( 36.6749, -95.2881, 67.0078, 0.15 ) }
    dend_29 { pt3dadd( 35.6297, -97.288, 67.0575, 0.15 ) }
    dend_29 { pt3dadd( 34.3436, -99.9723, 67.0838, 0.15 ) }
    dend_29 { pt3dadd( 33.2058, -102.473, 67.0799, 0.15 ) }
    dend_29 { pt3dadd( 31.6718, -106.058, 67.0692, 0.15 ) }
    dend_29 { pt3dadd( 31.2037, -107.304, 67.057, 0.59 ) }
    dend_29 { pt3dadd( 30.821, -108.542, 67.0246, 0.59 ) }
    dend_29 { pt3dadd( 30.5278, -109.707, 66.9751, 0.29 ) }
    dend_29 { pt3dadd( 30.4103, -110.385, 66.9037, 0.29 ) }
    dend_29 { pt3dadd( 28.4328, -120.606, 68.0562, 0.29 ) }
    dend_29 { pt3dadd( 25.7964, -130.253, 70.9942, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 40.4216, -79.2876, 62.0687, 0.59 ) }
    dend_28 { pt3dadd( 40.7744, -79.5192, 62.1572, 0.59 ) }
    dend_28 { pt3dadd( 41.7471, -80.2383, 62.5665, 0.22 ) }
    dend_28 { pt3dadd( 42.2283, -80.5751, 62.7028, 0.22 ) }
    dend_28 { pt3dadd( 44.0142, -81.8116, 63.1412, 0.22 ) }
    dend_28 { pt3dadd( 44.073, -81.8509, 63.1484, 0.22 ) }
    dend_28 { pt3dadd( 45.6143, -82.8819, 63.3358, 0.22 ) }
    dend_28 { pt3dadd( 47.387, -84.1096, 63.5811, 0.22 ) }
    dend_28 { pt3dadd( 49.6441, -85.761, 63.9536, 0.22 ) }
    dend_28 { pt3dadd( 49.7012, -85.8028, 63.9604, 0.22 ) }
    dend_28 { pt3dadd( 51.6246, -87.0762, 63.949, 0.22 ) }
    dend_28 { pt3dadd( 60.4345, -91.9181, 65.0076, 0.22 ) }
    dend_28 { pt3dadd( 69.2984, -95.8176, 67.7713, 0.22 ) }
    dend_28 { pt3dadd( 78.7481, -99.1616, 68.5208, 0.22 ) }
    dend_28 { pt3dadd( 88.6349, -100.73, 68.6482, 0.22 ) }
    dend_28 { pt3dadd( 97.9867, -104.449, 68.6254, 0.22 ) }
    dend_28 { pt3dadd( 107.63, -106.695, 70.1879, 0.22 ) }
    dend_28 { pt3dadd( 117.303, -109.021, 71.4205, 0.22 ) }
    dend_28 { pt3dadd( 127.087, -110.649, 72.787, 0.22 ) }
    dend_28 { pt3dadd( 136.618, -110.507, 75.8121, 0.22 ) }
    dend_28 { pt3dadd( 145.91, -111.258, 79.4372, 0.22 ) }
    dend_28 { pt3dadd( 155.561, -111.262, 82.0577, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.0183, -30.6741, -13.2554, 0.96 ) }
    dend_18 { pt3dadd( -13.4899, -32.9338, -19.4706, 0.96 ) }
    dend_18 { pt3dadd( -13.6123, -33.5205, -21.0843, 0.96 ) }
    dend_18 { pt3dadd( -13.6189, -33.5521, -21.1712, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.0183, -30.6741, -13.2554, 1.4 ) }
    dend_17 { pt3dadd( -13.4261, -30.8206, -13.2376, 1.4 ) }
    dend_17 { pt3dadd( -14.7812, -31.3062, -13.1467, 1.03 ) }
    dend_17 { pt3dadd( -14.8753, -31.3401, -13.1366, 1.03 ) }
    dend_17 { pt3dadd( -16.0444, -31.7789, -12.9965, 0.59 ) }
    dend_17 { pt3dadd( -17.2724, -32.2961, -12.7679, 0.59 ) }
    dend_17 { pt3dadd( -18.5511, -32.8871, -12.5337, 0.66 ) }
    dend_17 { pt3dadd( -18.6212, -32.9249, -12.5201, 0.66 ) }
    dend_17 { pt3dadd( -19.935, -33.7402, -12.2442, 0.66 ) }
    dend_17 { pt3dadd( -20.9546, -34.4571, -12.0427, 0.44 ) }
    dend_17 { pt3dadd( -22.3049, -35.55, -11.7818, 0.44 ) }
    dend_17 { pt3dadd( -23.0559, -36.2439, -11.6565, 0.66 ) }
    dend_17 { pt3dadd( -24.0435, -37.191, -11.5316, 0.66 ) }
    dend_17 { pt3dadd( -24.1729, -37.2986, -11.52, 0.66 ) }
    dend_17 { pt3dadd( -25.3699, -38.0633, -11.4687, 0.66 ) }
    dend_17 { pt3dadd( -25.4691, -38.1021, -11.4598, 0.66 ) }
    dend_17 { pt3dadd( -26.4283, -38.2807, -11.3519, 0.66 ) }
    dend_17 { pt3dadd( -27.6617, -38.3678, -11.1198, 0.88 ) }
    dend_17 { pt3dadd( -29.3386, -38.3877, -10.7646, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_17 { pt3dadd( -30.7185, -38.3733, -10.4514, 0.74 ) }
    dend_17 { pt3dadd( -32.4934, -38.3687, -10.0186, 0.66 ) }
    dend_17 { pt3dadd( -34.1333, -38.4052, -9.60533, 0.66 ) }
    dend_17 { pt3dadd( -35.1662, -38.483, -9.32064, 0.66 ) }
    dend_17 { pt3dadd( -36.6613, -38.7244, -8.85101, 0.66 ) }
    dend_17 { pt3dadd( -36.7256, -38.7432, -8.82959, 0.66 ) }
    dend_17 { pt3dadd( -38.3871, -39.4385, -8.27421, 0.66 ) }
    dend_17 { pt3dadd( -38.4568, -39.4738, -8.25377, 0.66 ) }
    dend_17 { pt3dadd( -39.8378, -40.1959, -7.86739, 0.66 ) }
    dend_17 { pt3dadd( -39.8995, -40.2268, -7.85256, 0.66 ) }
    dend_17 { pt3dadd( -41.3578, -40.8771, -7.52143, 0.66 ) }
    dend_17 { pt3dadd( -41.5914, -40.9657, -7.47889, 1.03 ) }
    dend_17 { pt3dadd( -42.4361, -41.2087, -7.37481, 0.52 ) }
    dend_17 { pt3dadd( -43.8104, -41.5535, -7.26471, 0.52 ) }
    dend_17 { pt3dadd( -43.8785, -41.5695, -7.25999, 0.52 ) }
    dend_17 { pt3dadd( -44.6826, -41.7745, -7.20097, 0.66 ) }
    dend_17 { pt3dadd( -45.7167, -42.0514, -7.12365, 0.66 ) }
    dend_17 { pt3dadd( -46.7816, -42.3787, -7.04781, 1.4 ) }
    dend_17 { pt3dadd( -47.4397, -42.6102, -6.9999, 0.81 ) }
    dend_17 { pt3dadd( -48.7756, -43.1088, -6.91551, 0.52 ) }
    dend_17 { pt3dadd( -50.011, -43.5805, -6.8297, 0.37 ) }
    dend_17 { pt3dadd( -51.0746, -43.9954, -6.74747, 0.81 ) }
    dend_17 { pt3dadd( -51.9355, -44.359, -6.67714, 0.96 ) }
    dend_17 { pt3dadd( -52.8707, -44.7776, -6.60137, 0.96 ) }
    dend_17 { pt3dadd( -54.1153, -45.3496, -6.51331, 0.66 ) }
    dend_17 { pt3dadd( -55.1225, -45.8165, -6.4637, 0.66 ) }
    dend_17 { pt3dadd( -55.2131, -45.8604, -6.45785, 0.66 ) }
    dend_17 { pt3dadd( -56.7446, -46.6192, -6.34891, 0.66 ) }
    dend_17 { pt3dadd( -56.8074, -46.6515, -6.34661, 0.66 ) }
    dend_17 { pt3dadd( -57.9657, -47.3146, -6.34535, 0.66 ) }
    dend_17 { pt3dadd( -59.5234, -48.3015, -6.39644, 0.66 ) }
    dend_17 { pt3dadd( -60.7474, -49.1137, -6.4876, 0.66 ) }
    dend_17 { pt3dadd( -60.797, -49.1489, -6.49154, 0.66 ) }
    dend_17 { pt3dadd( -61.9009, -49.9708, -6.56995, 0.66 ) }
    dend_17 { pt3dadd( -63.0466, -50.8555, -6.62106, 0.66 ) }
    dend_17 { pt3dadd( -63.5932, -51.2686, -6.62715, 0.44 ) }
    dend_17 { pt3dadd( -63.6514, -51.3094, -6.62551, 0.44 ) }
    dend_17 { pt3dadd( -64.2553, -51.6615, -6.63014, 0.44 ) }
    dend_17 { pt3dadd( -65.0136, -51.9912, -6.66513, 0.44 ) }
    dend_17 { pt3dadd( -66.0268, -52.2778, -6.78384, 0.88 ) }
    dend_17 { pt3dadd( -67.3834, -52.5244, -7.05007, 0.96 ) }
    dend_17 { pt3dadd( -67.9509, -52.6045, -7.19223, 0.96 ) }
    dend_17 { pt3dadd( -69.3233, -52.7739, -7.62126, 0.44 ) }
    dend_17 { pt3dadd( -70.5848, -52.9022, -8.10323, 0.44 ) }
    dend_17 { pt3dadd( -71.7656, -53.0405, -8.61974, 0.44 ) }
    dend_17 { pt3dadd( -72.6363, -53.1522, -9.03775, 0.44 ) }
    dend_17 { pt3dadd( -72.698, -53.1645, -9.06874, 0.44 ) }
    dend_17 { pt3dadd( -73.4032, -53.367, -9.40337, 0.66 ) }
    dend_17 { pt3dadd( -73.4642, -53.3942, -9.42578, 0.66 ) }
    dend_17 { pt3dadd( -74.2784, -53.8863, -9.72173, 0.66 ) }
    dend_17 { pt3dadd( -74.3427, -53.9315, -9.74198, 0.66 ) }
    dend_17 { pt3dadd( -75.0028, -54.4043, -9.97546, 0.52 ) }
    dend_17 { pt3dadd( -75.7095, -54.863, -10.251, 0.29 ) }
    dend_17 { pt3dadd( -76.611, -55.3619, -10.639, 0.29 ) }
    dend_17 { pt3dadd( -77.4162, -55.759, -11.0154, 0.96 ) }
    dend_17 { pt3dadd( -78.3595, -56.1547, -11.4579, 0.96 ) }
    dend_17 { pt3dadd( -79.4349, -56.554, -11.8959, 0.88 ) }
    dend_17 { pt3dadd( -80.6011, -56.9213, -12.2982, 0.74 ) }
    dend_17 { pt3dadd( -82.1837, -57.3377, -12.7159, 0.52 ) }
    dend_17 { pt3dadd( -82.2417, -57.3497, -12.7266, 0.52 ) }
    dend_17 { pt3dadd( -83.648, -57.5976, -12.8556, 0.52 ) }
    dend_17 { pt3dadd( -84.8983, -57.7726, -12.8797, 0.96 ) }
    dend_17 { pt3dadd( -85.9289, -57.915, -12.792, 1.18 ) }
    dend_17 { pt3dadd( -87.0018, -58.0958, -12.5943, 0.59 ) }
    dend_17 { pt3dadd( -87.4605, -58.1955, -12.4766, 0.29 ) }
    dend_17 { pt3dadd( -87.8418, -58.2916, -12.4011, 0.15 ) }
    dend_17 { pt3dadd( -87.9185, -58.3146, -12.3954, 0.29 ) }
    dend_17 { pt3dadd( -88.4609, -58.4858, -12.4937, 0.29 ) }
    dend_17 { pt3dadd( -88.8491, -58.5884, -12.6117, 0.29 ) }
    dend_17 { pt3dadd( -89.3397, -58.6809, -12.8567, 0.29 ) }
    dend_17 { pt3dadd( -90.2268, -58.7764, -13.3365, 0.29 ) }
    dend_17 { pt3dadd( -90.8781, -58.8038, -13.6706, 0.44 ) }
    dend_17 { pt3dadd( -91.7237, -58.8032, -14.0871, 0.96 ) }
    dend_17 { pt3dadd( -92.5646, -58.7838, -14.4756, 1.33 ) }
    dend_17 { pt3dadd( -93.8778, -58.7487, -14.9976, 1.33 ) }
    dend_17 { pt3dadd( -94.7282, -58.749, -15.2695, 0.52 ) }
    dend_17 { pt3dadd( -95.6526, -58.8012, -15.4827, 0.22 ) }
    dend_17 { pt3dadd( -95.7307, -58.8126, -15.4964, 0.22 ) }
    dend_17 { pt3dadd( -96.5416, -59.0328, -15.6238, 0.22 ) }
    dend_17 { pt3dadd( -97.2096, -59.2879, -15.7227, 0.52 ) }
    dend_17 { pt3dadd( -97.8815, -59.594, -15.7948, 0.88 ) }
    dend_17 { pt3dadd( -97.9445, -59.6243, -15.8052, 0.88 ) }
    dend_17 { pt3dadd( -98.5944, -59.9368, -15.9448, 0.88 ) }
    dend_17 { pt3dadd( -99.9341, -60.5173, -16.2303, 0.22 ) }
    dend_17 { pt3dadd( -99.9985, -60.5422, -16.2447, 0.22 ) }
    dend_17 { pt3dadd( -101.087, -60.9214, -16.4553, 0.22 ) }
    dend_17 { pt3dadd( -101.672, -61.1075, -16.5593, 0.22 ) }
    dend_17 { pt3dadd( -101.73, -61.1248, -16.5681, 0.22 ) }
    dend_17 { pt3dadd( -102.604, -61.4053, -16.6812, 0.22 ) }
    dend_17 { pt3dadd( -102.909, -61.5248, -16.7073, 0.22 ) }
    dend_17 { pt3dadd( -104.344, -62.1633, -16.8525, 0.22 ) }
    dend_17 { pt3dadd( -105.113, -62.5645, -16.9426, 1.25 ) }
    dend_17 { pt3dadd( -105.173, -62.602, -16.9494, 1.25 ) }
    dend_17 { pt3dadd( -106.056, -63.2022, -17.052, 1.62 ) }
    dend_17 { pt3dadd( -106.809, -63.7694, -17.1603, 1.62 ) }
    dend_17 { pt3dadd( -107.584, -64.4004, -17.2673, 0.22 ) }
    dend_17 { pt3dadd( -107.93, -64.7183, -17.3092, 0.22 ) }
    dend_17 { pt3dadd( -109.315, -66.105, -17.4326, 0.22 ) }
    dend_17 { pt3dadd( -109.42, -66.2168, -17.4413, 0.22 ) }
    dend_17 { pt3dadd( -109.933, -66.788, -17.48, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( -110.491, -67.4271, -17.5206, 0.96 ) }
    dend_17 { pt3dadd( -111.308, -68.3781, -17.5752, 0.96 ) }
    dend_17 { pt3dadd( -111.936, -69.0335, -17.6109, 0.15 ) }
    dend_17 { pt3dadd( -112.548, -69.617, -17.6385, 0.15 ) }
    dend_17 { pt3dadd( -112.611, -69.6685, -17.6384, 0.15 ) }
    dend_17 { pt3dadd( -113.635, -70.3701, -17.59, 0.15 ) }
    dend_17 { pt3dadd( -113.812, -70.4789, -17.5783, 0.15 ) }
    dend_17 { pt3dadd( -114.725, -70.9843, -17.5509, 0.15 ) }
    dend_17 { pt3dadd( -114.788, -71.0179, -17.551, 0.15 ) }
    dend_17 { pt3dadd( -115.974, -71.6666, -17.5872, 0.15 ) }
    dend_17 { pt3dadd( -116.338, -71.8788, -17.6072, 0.88 ) }
    dend_17 { pt3dadd( -117.132, -72.3631, -17.6727, 1.11 ) }
    dend_17 { pt3dadd( -117.922, -72.8693, -17.7295, 0.66 ) }
    dend_17 { pt3dadd( -118.28, -73.1173, -17.7596, 0.22 ) }
    dend_17 { pt3dadd( -118.778, -73.4457, -17.8044, 0.15 ) }
    dend_17 { pt3dadd( -118.838, -73.483, -17.8109, 0.15 ) }
    dend_17 { pt3dadd( -119.573, -73.9067, -17.8566, 0.15 ) }
    dend_17 { pt3dadd( -120.18, -74.2175, -17.8605, 0.15 ) }
    dend_17 { pt3dadd( -120.636, -74.4494, -17.8383, 0.37 ) }
    dend_17 { pt3dadd( -120.976, -74.6186, -17.8254, 0.15 ) }
    dend_17 { pt3dadd( -121.117, -74.6894, -17.8268, 0.15 ) }
    dend_17 { pt3dadd( -121.912, -75.1139, -17.8641, 0.15 ) }
    dend_17 { pt3dadd( -122.651, -75.5263, -17.9247, 0.15 ) }
    dend_17 { pt3dadd( -123.045, -75.7416, -17.967, 0.81 ) }
    dend_17 { pt3dadd( -123.851, -76.169, -18.0496, 0.81 ) }
    dend_17 { pt3dadd( -124.517, -76.4867, -18.1147, 0.22 ) }
    dend_17 { pt3dadd( -125.273, -76.8082, -18.1855, 0.22 ) }
    dend_17 { pt3dadd( -125.412, -76.863, -18.2019, 0.22 ) }
    dend_17 { pt3dadd( -126.181, -77.1996, -18.3027, 0.22 ) }
    dend_17 { pt3dadd( -126.245, -77.2293, -18.3113, 0.22 ) }
    dend_17 { pt3dadd( -127.553, -77.9144, -18.4862, 0.22 ) }
    dend_17 { pt3dadd( -127.681, -77.9883, -18.5192, 0.22 ) }
    dend_17 { pt3dadd( -128.419, -78.5072, -19.0865, 0.22 ) }
    dend_17 { pt3dadd( -128.964, -78.9637, -19.6759, 0.22 ) }
    dend_17 { pt3dadd( -129.035, -79.0255, -19.7808, 0.22 ) }
    dend_17 { pt3dadd( -129.342, -79.2887, -20.2701, 0.96 ) }
    dend_17 { pt3dadd( -130.236, -80.033, -21.7137, 0.66 ) }
    dend_17 { pt3dadd( -131.706, -81.1077, -24.0211, 0.22 ) }
    dend_17 { pt3dadd( -132.242, -81.4591, -24.7988, 0.22 ) }
    dend_17 { pt3dadd( -133.561, -82.2948, -26.5178, 0.52 ) }
    dend_17 { pt3dadd( -134.022, -82.585, -27.0433, 0.96 ) }
    dend_17 { pt3dadd( -134.8, -83.0499, -27.7821, 0.96 ) }
    dend_17 { pt3dadd( -135.782, -83.621, -28.4207, 0.15 ) }
    dend_17 { pt3dadd( -136.817, -84.2122, -28.8311, 0.22 ) }
    dend_17 { pt3dadd( -137.884, -84.822, -29.1411, 0.22 ) }
    dend_17 { pt3dadd( -138.198, -85.0119, -29.1772, 0.22 ) }
    dend_17 { pt3dadd( -138.654, -85.2865, -29.1865, 0.44 ) }
    dend_17 { pt3dadd( -139.222, -85.666, -29.1136, 0.74 ) }
    dend_17 { pt3dadd( -139.279, -85.7056, -29.0974, 0.74 ) }
    dend_17 { pt3dadd( -139.845, -86.0606, -28.9789, 0.74 ) }
    dend_17 { pt3dadd( -139.905, -86.0962, -28.9692, 0.74 ) }
    dend_17 { pt3dadd( -140.869, -86.7093, -28.8539, 0.22 ) }
    dend_17 { pt3dadd( -141.922, -87.3946, -28.8104, 0.22 ) }
    dend_17 { pt3dadd( -141.982, -87.4332, -28.8104, 0.22 ) }
    dend_17 { pt3dadd( -143.022, -88.0598, -28.841, 0.22 ) }
    dend_17 { pt3dadd( -143.714, -88.4646, -28.878, 0.22 ) }
    dend_17 { pt3dadd( -143.847, -88.5369, -28.8876, 0.22 ) }
    dend_17 { pt3dadd( -145.73, -89.4963, -29.129, 0.22 ) }
    dend_17 { pt3dadd( -145.889, -89.573, -29.1492, 0.22 ) }
    dend_17 { pt3dadd( -147.758, -90.5104, -29.2598, 0.22 ) }
    dend_17 { pt3dadd( -148.044, -90.6582, -29.2595, 0.22 ) }
    dend_17 { pt3dadd( -148.875, -91.0883, -29.2391, 0.52 ) }
    dend_17 { pt3dadd( -149.757, -91.5306, -29.1968, 1.33 ) }
    dend_17 { pt3dadd( -150.624, -91.9488, -29.1287, 1.55 ) }
    dend_17 { pt3dadd( -152.18, -92.6513, -28.9841, 0.37 ) }
    dend_17 { pt3dadd( -152.657, -92.8518, -28.9255, 0.22 ) }
    dend_17 { pt3dadd( -152.99, -92.9884, -28.8826, 0.22 ) }
    dend_17 { pt3dadd( -154.079, -93.4505, -28.743, 0.22 ) }
    dend_17 { pt3dadd( -154.215, -93.5105, -28.7171, 0.22 ) }
    dend_17 { pt3dadd( -154.756, -93.7524, -28.6318, 0.22 ) }
    dend_17 { pt3dadd( -154.845, -93.797, -28.6271, 0.22 ) }
    dend_17 { pt3dadd( -155.283, -94.058, -28.5719, 0.59 ) }
    dend_17 { pt3dadd( -155.863, -94.414, -28.4836, 0.59 ) }
    dend_17 { pt3dadd( -156.667, -94.9545, -28.3389, 0.22 ) }
    dend_17 { pt3dadd( -156.808, -95.0413, -28.3147, 0.22 ) }
    dend_17 { pt3dadd( -157.266, -95.3021, -28.2374, 0.22 ) }
    dend_17 { pt3dadd( -157.663, -95.5121, -28.1823, 0.22 ) }
    dend_17 { pt3dadd( -158.952, -96.14, -28.0291, 0.22 ) }
    dend_17 { pt3dadd( -159.161, -96.2396, -28.0035, 0.66 ) }
    dend_17 { pt3dadd( -159.498, -96.3978, -27.9748, 0.22 ) }
    dend_17 { pt3dadd( -159.561, -96.4267, -27.9656, 0.22 ) }
    dend_17 { pt3dadd( -160.656, -96.9104, -27.7531, 0.22 ) }
    dend_17 { pt3dadd( -160.745, -96.9494, -27.7324, 0.22 ) }
    dend_17 { pt3dadd( -161.386, -97.209, -27.5695, 0.66 ) }
    dend_17 { pt3dadd( -162.21, -97.5021, -27.3695, 0.66 ) }
    dend_17 { pt3dadd( -163.033, -97.8246, -27.1859, 0.22 ) }
    dend_17 { pt3dadd( -163.098, -97.85, -27.1726, 0.22 ) }
    dend_17 { pt3dadd( -163.753, -98.0901, -27.1289, 0.22 ) }
    dend_17 { pt3dadd( -164.385, -98.3063, -27.1597, 0.22 ) }
    dend_17 { pt3dadd( -164.6, -98.3737, -27.2087, 0.22 ) }
    dend_17 { pt3dadd( -166.422, -98.9147, -27.8297, 0.22 ) }
    dend_17 { pt3dadd( -166.494, -98.9347, -27.8599, 0.22 ) }
    dend_17 { pt3dadd( -168.154, -99.3508, -28.5992, 0.15 ) }
    dend_17 { pt3dadd( -168.814, -99.5116, -28.9081, 1.11 ) }
    dend_17 { pt3dadd( -169.958, -99.7653, -29.6036, 0.44 ) }
    dend_17 { pt3dadd( -170.431, -99.8543, -29.9774, 0.44 ) }
    dend_17 { pt3dadd( -170.541, -99.8773, -30.0769, 0.44 ) }
    dend_17 { pt3dadd( -171.464, -100.106, -30.9416, 0.44 ) }
    dend_17 { pt3dadd( -172.016, -100.271, -31.5502, 0.81 ) }
    dend_17 { pt3dadd( -174.112, -101.01, -34.0323, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( -175.786, -101.655, -36.0772, 0.74 ) }
    dend_17 { pt3dadd( -176.355, -101.898, -36.7754, 0.74 ) }
    dend_17 { pt3dadd( -176.404, -101.921, -36.8348, 0.74 ) }
    dend_17 { pt3dadd( -178.405, -103.006, -39.4597, 0.22 ) }
    dend_17 { pt3dadd( -179.195, -103.474, -40.5097, 0.22 ) }
    dend_17 { pt3dadd( -179.338, -103.571, -40.6701, 0.22 ) }
    dend_17 { pt3dadd( -180.249, -104.23, -41.555, 0.22 ) }
    dend_17 { pt3dadd( -180.63, -104.493, -41.8811, 0.88 ) }
    dend_17 { pt3dadd( -182.375, -105.72, -43.2291, 0.22 ) }
    dend_17 { pt3dadd( -182.498, -105.81, -43.3005, 0.22 ) }
    dend_17 { pt3dadd( -184.003, -106.929, -44.3126, 0.22 ) }
    dend_17 { pt3dadd( -184.271, -107.125, -44.5, 0.81 ) }
    dend_17 { pt3dadd( -184.909, -107.569, -44.9694, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.1323, -34.5373, 0.898184, 0.29 ) }
    dend_11 { pt3dadd( -8.58073, -35.1229, -4.43547, 0.29 ) }
    dend_11 { pt3dadd( -8.26264, -35.1484, -5.23817, 0.44 ) }
    dend_11 { pt3dadd( -8.22883, -35.1434, -5.29928, 0.44 ) }
    dend_11 { pt3dadd( -7.41705, -34.9494, -6.51627, 0.44 ) }
    dend_11 { pt3dadd( -8.29465, -35.234, -5.40103, 0.44 ) }
    dend_11 { pt3dadd( -8.37825, -35.265, -5.30595, 0.44 ) }
    dend_11 { pt3dadd( -9.55991, -35.8625, -4.25197, 0.44 ) }
    dend_11 { pt3dadd( -10.2764, -36.2165, -3.68738, 0.44 ) }
    dend_11 { pt3dadd( -10.328, -36.2467, -3.64981, 0.44 ) }
    dend_11 { pt3dadd( -10.7498, -36.5437, -3.39714, 0.66 ) }
    dend_11 { pt3dadd( -10.7946, -36.5939, -3.37227, 0.66 ) }
    dend_11 { pt3dadd( -11.2886, -37.2992, -3.14672, 0.66 ) }
    dend_11 { pt3dadd( -11.3214, -37.3629, -3.1349, 0.66 ) }
    dend_11 { pt3dadd( -11.7638, -38.2222, -2.96922, 0.44 ) }
    dend_11 { pt3dadd( -11.7974, -38.2853, -2.95656, 0.44 ) }
    dend_11 { pt3dadd( -12.2627, -39.1787, -2.7533, 0.44 ) }
    dend_11 { pt3dadd( -12.2961, -39.2414, -2.73817, 0.44 ) }
    dend_11 { pt3dadd( -12.7371, -40.1193, -2.53593, 0.44 ) }
    dend_11 { pt3dadd( -13.023, -40.73, -2.35256, 0.74 ) }
    dend_11 { pt3dadd( -13.312, -41.3737, -2.04256, 0.74 ) }
    dend_11 { pt3dadd( -13.706, -42.2443, -1.53993, 0.59 ) }
    dend_11 { pt3dadd( -13.735, -42.3089, -1.4979, 0.59 ) }
    dend_11 { pt3dadd( -14.2776, -43.4584, -0.64935, 0.59 ) }
    dend_11 { pt3dadd( -14.8219, -44.4934, 0.309368, 0.81 ) }
    dend_11 { pt3dadd( -15.6808, -45.8313, 1.87042, 0.52 ) }
    dend_11 { pt3dadd( -16.1902, -46.5048, 2.76506, 0.52 ) }
    dend_11 { pt3dadd( -16.2251, -46.5476, 2.82443, 0.52 ) }
    dend_11 { pt3dadd( -17.0529, -47.5918, 4.22602, 0.52 ) }
    dend_11 { pt3dadd( -17.8283, -48.6265, 5.50344, 0.74 ) }
    dend_11 { pt3dadd( -18.4757, -49.5821, 6.50322, 0.52 ) }
    dend_11 { pt3dadd( -18.824, -50.1521, 7.00699, 0.52 ) }
    dend_11 { pt3dadd( -19.2974, -50.9641, 7.70307, 0.52 ) }
    dend_11 { pt3dadd( -20.0662, -52.1405, 8.64701, 0.52 ) }
    dend_11 { pt3dadd( -20.8499, -53.1196, 9.33117, 0.81 ) }
    dend_11 { pt3dadd( -20.8959, -53.1789, 9.36433, 0.81 ) }
    dend_11 { pt3dadd( -21.2917, -53.6603, 9.62, 0.74 ) }
    dend_11 { pt3dadd( -22.4045, -54.6285, 10.2791, 0.59 ) }
    dend_11 { pt3dadd( -23.6898, -55.182, 10.8856, 0.81 ) }
    dend_11 { pt3dadd( -24.8726, -55.3066, 11.3297, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 53/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.1323, -34.5373, 0.898184, 0.74 ) }
    dend_4 { pt3dadd( -10.1349, -34.7035, 0.860082, 0.74 ) }
    dend_4 { pt3dadd( -10.186, -35.4471, 0.672691, 1.18 ) }
    dend_4 { pt3dadd( -10.2964, -36.6493, 0.359888, 1.03 ) }
    dend_4 { pt3dadd( -10.4611, -38.5219, -0.120779, 0.74 ) }
    dend_4 { pt3dadd( -10.6064, -40.0743, -0.562231, 0.66 ) }
    dend_4 { pt3dadd( -10.7943, -41.8969, -1.08572, 0.66 ) }
    dend_4 { pt3dadd( -10.8792, -42.5548, -1.31765, 1.03 ) }
    dend_4 { pt3dadd( -10.8991, -42.689, -1.37125, 1.03 ) }
    dend_4 { pt3dadd( -11.0059, -43.4676, -1.6895, 0.81 ) }
    dend_4 { pt3dadd( -11.1115, -44.8102, -2.15024, 0.81 ) }
    dend_4 { pt3dadd( -11.1396, -46.3158, -2.55633, 0.81 ) }
    dend_4 { pt3dadd( -11.0673, -48.179, -2.95702, 0.52 ) }
    dend_4 { pt3dadd( -10.967, -49.4678, -3.16547, 0.74 ) }
    dend_4 { pt3dadd( -10.7788, -51.4509, -3.29422, 1.03 ) }
    dend_4 { pt3dadd( -10.536, -53.6243, -3.2322, 0.96 ) }
    dend_4 { pt3dadd( -10.5254, -53.707, -3.22304, 0.96 ) }
    dend_4 { pt3dadd( -10.3745, -54.8741, -3.03834, 1.18 ) }
    dend_4 { pt3dadd( -10.1641, -56.6312, -2.68852, 1.03 ) }
    dend_4 { pt3dadd( -9.92962, -59.1193, -2.19329, 1.03 ) }
    dend_4 { pt3dadd( -9.81182, -60.9687, -1.83232, 0.96 ) }
    dend_4 { pt3dadd( -9.72927, -62.5131, -1.56453, 0.81 ) }
    dend_4 { pt3dadd( -9.66427, -63.6599, -1.37622, 1.03 ) }
    dend_4 { pt3dadd( -9.57516, -64.4855, -1.25842, 0.74 ) }
    dend_4 { pt3dadd( -9.43266, -65.3181, -1.17528, 0.59 ) }
    dend_4 { pt3dadd( -9.41372, -65.3887, -1.17, 0.59 ) }
    dend_4 { pt3dadd( -8.9803, -66.6406, -1.0506, 0.59 ) }
    dend_4 { pt3dadd( -8.92236, -66.7841, -1.02895, 0.59 ) }
    dend_4 { pt3dadd( -7.79526, -69.554, -0.401661, 0.59 ) }
    dend_4 { pt3dadd( -7.77345, -69.6209, -0.382566, 0.59 ) }
    dend_4 { pt3dadd( -7.28386, -71.3945, 0.186049, 0.59 ) }
    dend_4 { pt3dadd( -7.25626, -71.5401, 0.236353, 0.59 ) }
    dend_4 { pt3dadd( -7.1784, -72.5204, 0.598655, 1.03 ) }
    dend_4 { pt3dadd( -7.11014, -74.7686, 1.46757, 0.81 ) }
    dend_4 { pt3dadd( -7.27849, -77.363, 2.54467, 0.81 ) }
    dend_4 { pt3dadd( -7.28356, -77.4208, 2.56809, 0.81 ) }
    dend_4 { pt3dadd( -7.4593, -78.7178, 3.06469, 1.55 ) }
    dend_4 { pt3dadd( -7.59495, -79.6366, 3.40387, 1.92 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 91/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 0.864867, 127.153, 54.5231, 0.37 ) }
    dend_81 { pt3dadd( -7.12648, 132.631, 57.5086, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 93/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.864867, 127.153, 54.5231, 0.29 ) }
    dend_80 { pt3dadd( -0.527934, 132.565, 62.9784, 0.37 ) }
    dend_80 { pt3dadd( -2.58153, 138.727, 70.8102, 0.37 ) }
    dend_80 { pt3dadd( -4.71628, 143.543, 79.4362, 0.37 ) }
    dend_80 { pt3dadd( -7.67167, 149.46, 87.1507, 0.37 ) }
    dend_80 { pt3dadd( -10.0471, 156.093, 94.5296, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 99/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 29.8478, 54.2104, -113.386, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_67 { pt3dadd( 31.4723, 55.8326, -114.877, 0.22 ) }
    dend_67 { pt3dadd( 32.7362, 57.1251, -116.021, 0.22 ) }
    dend_67 { pt3dadd( 32.7977, 57.1875, -116.084, 0.22 ) }
    dend_67 { pt3dadd( 34.5023, 58.9543, -117.851, 0.22 ) }
    dend_67 { pt3dadd( 34.9815, 59.5038, -118.338, 1.03 ) }
    dend_67 { pt3dadd( 35.24, 59.8183, -118.639, 1.03 ) }
    dend_67 { pt3dadd( 35.2699, 59.8595, -118.673, 1.03 ) }
    dend_67 { pt3dadd( 36.041, 61.1273, -119.873, 0.22 ) }
    dend_67 { pt3dadd( 36.5658, 62.0431, -120.784, 0.22 ) }
    dend_67 { pt3dadd( 37.0875, 63.1259, -121.831, 0.22 ) }
    dend_67 { pt3dadd( 37.7809, 64.8794, -123.62, 0.22 ) }
    dend_67 { pt3dadd( 38.0918, 66.0242, -124.645, 0.22 ) }
    dend_67 { pt3dadd( 38.4458, 67.9902, -126.471, 0.22 ) }
    dend_67 { pt3dadd( 38.4514, 68.0426, -126.519, 0.22 ) }
    dend_67 { pt3dadd( 38.4473, 69.2442, -127.575, 0.22 ) }
    dend_67 { pt3dadd( 38.2719, 71.5795, -129.316, 0.22 ) }
    dend_67 { pt3dadd( 37.9924, 74.2311, -131.161, 0.22 ) }
    dend_67 { pt3dadd( 37.5734, 77.6218, -133.51, 0.22 ) }
    dend_67 { pt3dadd( 37.5464, 77.889, -133.684, 0.44 ) }
    dend_67 { pt3dadd( 37.2219, 82.0104, -136.32, 0.15 ) }
    dend_67 { pt3dadd( 37.1389, 85.0319, -138.139, 0.15 ) }
    dend_67 { pt3dadd( 37.2271, 89.2133, -140.379, 0.15 ) }
    dend_67 { pt3dadd( 37.2342, 89.3048, -140.426, 0.15 ) }
    dend_67 { pt3dadd( 37.4459, 91.1415, -141.21, 0.15 ) }
    dend_67 { pt3dadd( 37.4634, 91.2415, -141.254, 0.15 ) }
    dend_67 { pt3dadd( 38.4089, 93.7079, -142.404, 0.15 ) }
    dend_67 { pt3dadd( 38.4939, 93.8492, -142.464, 0.15 ) }
    dend_67 { pt3dadd( 39.1267, 94.7137, -142.499, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 29.8478, 54.2104, -113.386, 0.22 ) }
    dend_66 { pt3dadd( 29.1614, 56.2998, -114.183, 0.22 ) }
    dend_66 { pt3dadd( 28.7394, 57.6429, -114.598, 0.22 ) }
    dend_66 { pt3dadd( 28.673, 57.8579, -114.681, 0.22 ) }
    dend_66 { pt3dadd( 28.163, 59.8893, -115.476, 0.22 ) }
    dend_66 { pt3dadd( 28.0577, 60.5009, -115.691, 0.66 ) }
    dend_66 { pt3dadd( 27.9698, 61.1534, -115.911, 0.22 ) }
    dend_66 { pt3dadd( 27.8933, 62.5346, -116.289, 0.22 ) }
    dend_66 { pt3dadd( 27.9352, 64.5202, -116.84, 0.22 ) }
    dend_66 { pt3dadd( 28.1562, 66.2635, -117.299, 0.22 ) }
    dend_66 { pt3dadd( 28.5751, 68.3657, -117.837, 0.22 ) }
    dend_66 { pt3dadd( 28.5918, 68.4346, -117.854, 0.22 ) }
    dend_66 { pt3dadd( 28.9113, 69.5516, -118.126, 0.22 ) }
    dend_66 { pt3dadd( 28.9361, 69.6188, -118.139, 0.22 ) }
    dend_66 { pt3dadd( 30.0579, 72.2318, -118.323, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 43/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -38.6395, 117.364, 66.3984, 0.37 ) }
    dend_54 { pt3dadd( -40.1851, 125.919, 71.9862, 0.37 ) }
    dend_54 { pt3dadd( -41.2865, 134.634, 77.4535, 0.37 ) }
    dend_54 { pt3dadd( -42.1652, 142.198, 84.3339, 0.37 ) }
    dend_54 { pt3dadd( -41.6644, 150.653, 90.2416, 0.37 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -38.6395, 117.364, 66.3984, 0.29 ) }
    dend_53 { pt3dadd( -40.1223, 125.943, 71.9697, 0.37 ) }
    dend_53 { pt3dadd( -40.5088, 134.38, 77.9102, 0.37 ) }
    dend_53 { pt3dadd( -40.475, 143.448, 82.9517, 0.37 ) }
    dend_53 { pt3dadd( -39.2064, 152.492, 87.8704, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 53/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 61.6567, -71.9253, 4.239, 0.74 ) }
    dend_39 { pt3dadd( 61.2196, -72.9573, 4.89307, 0.74 ) }
    dend_39 { pt3dadd( 60.8785, -73.9495, 5.23871, 0.59 ) }
    dend_39 { pt3dadd( 60.543, -74.9255, 5.57877, 0.59 ) }
    dend_39 { pt3dadd( 60.5237, -74.9816, 5.59829, 0.59 ) }
    dend_39 { pt3dadd( 60.0262, -76.4289, 6.10252, 0.59 ) }
    dend_39 { pt3dadd( 60.0037, -76.4943, 6.12529, 0.59 ) }
    dend_39 { pt3dadd( 59.1912, -78.8499, 7.16003, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 61.6567, -71.9253, 4.239, 1.11 ) }
    dend_36 { pt3dadd( 61.9311, -72.2551, 4.05439, 1.11 ) }
    dend_36 { pt3dadd( 62.8169, -73.382, 3.56618, 0.52 ) }
    dend_36 { pt3dadd( 62.9073, -73.5114, 3.53268, 0.52 ) }
    dend_36 { pt3dadd( 63.5368, -74.576, 3.34878, 0.52 ) }
    dend_36 { pt3dadd( 63.57, -74.6388, 3.33403, 0.52 ) }
    dend_36 { pt3dadd( 64.1768, -75.8533, 3.01248, 0.74 ) }
    dend_36 { pt3dadd( 64.2088, -75.928, 2.9948, 0.74 ) }
    dend_36 { pt3dadd( 64.8015, -77.5358, 2.69217, 0.74 ) }
    dend_36 { pt3dadd( 65.1307, -78.6138, 2.46294, 0.74 ) }
    dend_36 { pt3dadd( 65.4321, -79.8335, 2.17546, 0.29 ) }
    dend_36 { pt3dadd( 65.4464, -79.9032, 2.15853, 0.29 ) }
    dend_36 { pt3dadd( 65.5112, -80.2628, 2.04459, 0.29 ) }
    dend_36 { pt3dadd( 65.5266, -80.3401, 2.01731, 0.29 ) }
    dend_36 { pt3dadd( 65.7206, -81.2521, 1.65268, 0.29 ) }
    dend_36 { pt3dadd( 65.9352, -82.023, 1.36166, 0.52 ) }
    dend_36 { pt3dadd( 65.9558, -82.0897, 1.34064, 0.52 ) }
    dend_36 { pt3dadd( 66.3994, -83.464, 0.896758, 0.52 ) }
    dend_36 { pt3dadd( 66.6996, -84.4556, 0.579541, 0.52 ) }
    dend_36 { pt3dadd( 66.7159, -84.5132, 0.561283, 0.52 ) }
    dend_36 { pt3dadd( 66.8282, -84.9906, 0.410761, 0.22 ) }
    dend_36 { pt3dadd( 66.899, -85.4162, 0.286061, 0.22 ) }
    dend_36 { pt3dadd( 66.9087, -85.4951, 0.260238, 0.22 ) }
    dend_36 { pt3dadd( 66.9898, -86.4318, -0.0421018, 0.22 ) }
    dend_36 { pt3dadd( 67.0043, -86.5118, -0.061751, 0.22 ) }
    dend_36 { pt3dadd( 67.4254, -87.8939, -0.211174, 0.22 ) }
    dend_36 { pt3dadd( 67.4847, -88.0459, -0.21407, 0.22 ) }
    dend_36 { pt3dadd( 68.0406, -89.2661, -0.166045, 0.81 ) }
    dend_36 { pt3dadd( 68.3709, -89.9074, -0.112401, 0.81 ) }
    dend_36 { pt3dadd( 69.3691, -91.6592, 0.10529, 0.37 ) }
    dend_36 { pt3dadd( 70.1816, -93.0376, 0.330126, 0.37 ) }
    dend_36 { pt3dadd( 70.5694, -93.6686, 0.467746, 0.44 ) }
    dend_36 { pt3dadd( 70.7411, -93.951, 0.536803, 0.15 ) }
    dend_36 { pt3dadd( 71.5392, -95.2837, 0.924964, 0.15 ) }
    dend_36 { pt3dadd( 71.575, -95.3446, 0.940964, 0.15 ) }
    dend_36 { pt3dadd( 71.6531, -95.4855, 0.96053, 0.66 ) }
    dend_36 { pt3dadd( 71.8093, -95.7972, 0.964296, 0.88 ) }
    dend_36 { pt3dadd( 71.8556, -95.889, 0.964296, 0.88 ) }
    dend_36 { pt3dadd( 72.1635, -96.5219, 0.964296, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_36 { pt3dadd( 78.5794, -104.55, 0.35415, 0.88 ) }
    dend_36 { pt3dadd( 84.2237, -113.044, -1.28875, 0.88 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.6189, -33.5521, -21.1712, 0.59 ) }
    dend_20 { pt3dadd( -11.4527, -34.1646, -28.0066, 0.59 ) }
    dend_20 { pt3dadd( -11.4145, -34.1815, -28.075, 0.59 ) }
    dend_20 { pt3dadd( -10.3284, -34.8867, -28.7227, 0.59 ) }
    dend_20 { pt3dadd( -10.2731, -34.9231, -28.7478, 0.59 ) }
    dend_20 { pt3dadd( -8.92718, -35.783, -29.655, 0.59 ) }
    dend_20 { pt3dadd( -8.76605, -35.8835, -29.7702, 0.59 ) }
    dend_20 { pt3dadd( -6.58451, -37.3756, -30.9865, 0.59 ) }
    dend_20 { pt3dadd( -5.6314, -38.0573, -31.662, 1.03 ) }
    dend_20 { pt3dadd( -3.82798, -39.4964, -33.432, 0.88 ) }
    dend_20 { pt3dadd( -1.97261, -41.1816, -36.0297, 0.74 ) }
    dend_20 { pt3dadd( -1.64536, -41.515, -36.6407, 0.74 ) }
    dend_20 { pt3dadd( -0.908961, -42.2948, -38.3168, 0.74 ) }
    dend_20 { pt3dadd( -0.885844, -42.3187, -38.3788, 0.74 ) }
    dend_20 { pt3dadd( -0.232049, -42.9339, -40.0607, 1.03 ) }
    dend_20 { pt3dadd( 0.682223, -43.8272, -42.2176, 0.29 ) }
    dend_20 { pt3dadd( 1.12036, -44.1439, -42.9646, 0.44 ) }
    dend_20 { pt3dadd( 2.01874, -44.6098, -44.0689, 0.88 ) }
    dend_20 { pt3dadd( 2.89281, -44.9249, -44.8178, 1.03 ) }
    dend_20 { pt3dadd( 3.85395, -45.2048, -45.5712, 1.03 ) }
    dend_20 { pt3dadd( 3.91217, -45.2152, -45.6088, 1.03 ) }
    dend_20 { pt3dadd( 5.59473, -45.4109, -46.595, 1.03 ) }
    dend_20 { pt3dadd( 6.92007, -45.5075, -47.451, 0.44 ) }
    dend_20 { pt3dadd( 6.97757, -45.5101, -47.4909, 0.44 ) }
    dend_20 { pt3dadd( 9.04916, -45.6758, -49.6801, 0.74 ) }
    dend_20 { pt3dadd( 9.65119, -45.8195, -50.4574, 0.74 ) }
    dend_20 { pt3dadd( 9.69014, -45.8364, -50.5133, 0.74 ) }
    dend_20 { pt3dadd( 9.93151, -45.9903, -50.8825, 0.74 ) }
    dend_20 { pt3dadd( 9.97182, -46.0208, -50.9452, 0.74 ) }
    dend_20 { pt3dadd( 11.8323, -47.7151, -53.8394, 0.88 ) }
    dend_20 { pt3dadd( 12.8456, -48.8174, -55.5284, 0.88 ) }
    dend_20 { pt3dadd( 14.0046, -50.0843, -57.531, 0.59 ) }
    dend_20 { pt3dadd( 14.4326, -50.5383, -58.2699, 0.88 ) }
    dend_20 { pt3dadd( 14.4688, -50.577, -58.3311, 0.88 ) }
    dend_20 { pt3dadd( 15.3195, -51.551, -59.822, 0.52 ) }
    dend_20 { pt3dadd( 16.2207, -52.7104, -61.5662, 0.37 ) }
    dend_20 { pt3dadd( 16.5835, -53.2593, -62.4424, 0.37 ) }
    dend_20 { pt3dadd( 16.6074, -53.2974, -62.4973, 0.37 ) }
    dend_20 { pt3dadd( 17.0769, -54.0037, -63.4901, 0.37 ) }
    dend_20 { pt3dadd( 17.9977, -55.4191, -65.2414, 0.37 ) }
    dend_20 { pt3dadd( 19.0688, -57.015, -67.1365, 0.37 ) }
    dend_20 { pt3dadd( 19.1357, -57.1095, -67.2457, 0.37 ) }
    dend_20 { pt3dadd( 19.8732, -58.0804, -68.5041, 0.37 ) }
    dend_20 { pt3dadd( 21.5208, -60.026, -71.3199, 0.37 ) }
    dend_20 { pt3dadd( 22.1116, -60.6281, -72.2914, 0.37 ) }
    dend_20 { pt3dadd( 23.1851, -61.5554, -73.8756, 0.96 ) }
    dend_20 { pt3dadd( 23.6926, -61.9369, -74.6203, 0.96 ) }
    dend_20 { pt3dadd( 25.42, -63.1558, -77.2488, 0.44 ) }
    dend_20 { pt3dadd( 25.4606, -63.1809, -77.3135, 0.44 ) }
    dend_20 { pt3dadd( 25.9494, -63.4504, -78.0298, 1.33 ) }
    dend_20 { pt3dadd( 26.4471, -63.7159, -78.9626, 1.33 ) }
    dend_20 { pt3dadd( 28.2432, -64.6981, -82.5201, 0.66 ) }
    dend_20 { pt3dadd( 28.3336, -64.7497, -82.7267, 0.66 ) }
    dend_20 { pt3dadd( 29.2167, -65.2855, -84.7871, 1.55 ) }
    dend_20 { pt3dadd( 29.6229, -65.5408, -85.7694, 1.55 ) }
    dend_20 { pt3dadd( 32.6744, -67.5008, -93.5511, 0.81 ) }
    dend_20 { pt3dadd( 33.0348, -67.7395, -94.5143, 1.77 ) }
    dend_20 { pt3dadd( 34.4858, -68.7273, -98.3996, 0.44 ) }
    dend_20 { pt3dadd( 35.0815, -69.15, -99.9734, 0.44 ) }
    dend_20 { pt3dadd( 35.1054, -69.1686, -100.036, 0.44 ) }
    dend_20 { pt3dadd( 35.9247, -69.8863, -102.166, 0.88 ) }
    dend_20 { pt3dadd( 35.9554, -69.9212, -102.232, 0.88 ) }
    dend_20 { pt3dadd( 36.6896, -70.8974, -103.92, 0.37 ) }
    dend_20 { pt3dadd( 37.1164, -71.4971, -104.768, 0.37 ) }
    dend_20 { pt3dadd( 37.7158, -72.3363, -105.991, 0.74 ) }
    dend_20 { pt3dadd( 37.9627, -72.7101, -106.597, 0.74 ) }
    dend_20 { pt3dadd( 38.5983, -73.7477, -108.333, 0.37 ) }
    dend_20 { pt3dadd( 38.6194, -73.7818, -108.391, 0.37 ) }
    dend_20 { pt3dadd( 38.9964, -74.4203, -109.489, 0.37 ) }
    dend_20 { pt3dadd( 39.5823, -75.3531, -111.137, 1.18 ) }
    dend_20 { pt3dadd( 41.363, -77.9858, -115.833, 0.44 ) }
    dend_20 { pt3dadd( 41.3865, -78.0154, -115.893, 0.44 ) }
    dend_20 { pt3dadd( 41.8114, -78.5023, -116.956, 0.44 ) }
    dend_20 { pt3dadd( 42.6006, -79.2926, -118.84, 0.44 ) }
    dend_20 { pt3dadd( 42.8969, -79.5485, -119.509, 0.44 ) }
    dend_20 { pt3dadd( 42.9949, -79.6182, -119.695, 0.44 ) }
    dend_20 { pt3dadd( 44.4849, -80.3934, -121.861, 0.37 ) }
    dend_20 { pt3dadd( 44.5247, -80.4159, -121.927, 0.37 ) }
    dend_20 { pt3dadd( 45.0537, -80.7162, -122.912, 0.37 ) }
    dend_20 { pt3dadd( 45.9044, -81.354, -124.83, 0.37 ) }
    dend_20 { pt3dadd( 45.9845, -81.4314, -125.041, 0.37 ) }
    dend_20 { pt3dadd( 46.2777, -81.7669, -125.822, 0.37 ) }
    dend_20 { pt3dadd( 47.2034, -82.9985, -128.301, 0.37 ) }
    dend_20 { pt3dadd( 47.2292, -83.0345, -128.369, 0.37 ) }
    dend_20 { pt3dadd( 48.3756, -84.6159, -131.196, 0.15 ) }
    dend_20 { pt3dadd( 49.0268, -85.4781, -132.655, 0.88 ) }
    dend_20 { pt3dadd( 49.3697, -85.9148, -133.358, 0.88 ) }
    dend_20 { pt3dadd( 49.397, -85.9516, -133.412, 0.88 ) }
    dend_20 { pt3dadd( 50.5331, -87.6153, -135.711, 0.29 ) }
    dend_20 { pt3dadd( 51.8957, -89.6706, -138.441, 0.29 ) }
    dend_20 { pt3dadd( 52.8361, -91.117, -140.297, 0.29 ) }
    dend_20 { pt3dadd( 54.1499, -93.2008, -142.947, 0.96 ) }
    dend_20 { pt3dadd( 55.8235, -95.8988, -146.423, 0.22 ) }
    dend_20 { pt3dadd( 56.7649, -97.4434, -148.402, 0.37 ) }
    dend_20 { pt3dadd( 57.7955, -99.193, -150.612, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.6189, -33.5521, -21.1712, 0.74 ) }
    dend_19 { pt3dadd( -14.2497, -35.3109, -22.4497, 0.74 ) }
    dend_19 { pt3dadd( -14.267, -35.3727, -22.4834, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_19 { pt3dadd( -14.4808, -36.2479, -22.8956, 0.74 ) }
    dend_19 { pt3dadd( -14.8013, -37.6679, -23.4459, 0.74 ) }
    dend_19 { pt3dadd( -15.1411, -38.9095, -23.8956, 0.74 ) }
    dend_19 { pt3dadd( -15.1681, -38.9826, -23.9244, 0.74 ) }
    dend_19 { pt3dadd( -15.6756, -40.1208, -24.2561, 0.74 ) }
    dend_19 { pt3dadd( -15.7455, -40.2531, -24.2978, 0.74 ) }
    dend_19 { pt3dadd( -16.315, -41.1383, -24.6065, 0.74 ) }
    dend_19 { pt3dadd( -16.9087, -41.9086, -24.8717, 0.74 ) }
    dend_19 { pt3dadd( -17.7499, -42.9842, -25.3602, 0.44 ) }
    dend_19 { pt3dadd( -17.7842, -43.0401, -25.3899, 0.44 ) }
    dend_19 { pt3dadd( -18.0518, -43.6189, -25.7892, 0.66 ) }
    dend_19 { pt3dadd( -18.0672, -43.6664, -25.8255, 0.66 ) }
    dend_19 { pt3dadd( -18.1953, -44.2453, -26.3398, 0.96 ) }
    dend_19 { pt3dadd( -18.3719, -45.4517, -27.4542, 0.96 ) }
    dend_19 { pt3dadd( -18.5011, -46.5888, -28.6223, 1.18 ) }
    dend_19 { pt3dadd( -18.6981, -47.9004, -30.2686, 1.18 ) }
    dend_19 { pt3dadd( -18.9458, -49.0276, -31.9156, 1.18 ) }
    dend_19 { pt3dadd( -19.2643, -50.1015, -33.681, 0.96 ) }
    dend_19 { pt3dadd( -19.2934, -50.1639, -33.8044, 0.96 ) }
    dend_19 { pt3dadd( -19.8522, -50.8961, -35.6051, 0.88 ) }
    dend_19 { pt3dadd( -20.7223, -51.6412, -37.8954, 0.44 ) }
    dend_19 { pt3dadd( -21.1501, -51.859, -38.7537, 0.66 ) }
    dend_19 { pt3dadd( -21.1878, -51.8712, -38.8115, 0.66 ) }
    dend_19 { pt3dadd( -22.1546, -52.1295, -39.9856, 0.66 ) }
    dend_19 { pt3dadd( -22.8971, -52.3391, -40.7786, 0.44 ) }
    dend_19 { pt3dadd( -22.956, -52.3583, -40.8296, 0.44 ) }
    dend_19 { pt3dadd( -24.2629, -52.9238, -41.829, 0.74 ) }
    dend_19 { pt3dadd( -24.7734, -53.2205, -42.2678, 0.74 ) }
    dend_19 { pt3dadd( -24.8158, -53.2548, -42.3129, 0.74 ) }
    dend_19 { pt3dadd( -25.309, -53.875, -43.3031, 0.44 ) }
    dend_19 { pt3dadd( -25.5269, -54.1757, -43.782, 0.44 ) }
    dend_19 { pt3dadd( -25.6995, -54.3937, -44.1364, 0.44 ) }
    dend_19 { pt3dadd( -26.1709, -54.9751, -45.0264, 0.44 ) }
    dend_19 { pt3dadd( -26.9413, -55.8815, -46.4496, 0.81 ) }
    dend_19 { pt3dadd( -28.5085, -57.6455, -49.2581, 0.96 ) }
    dend_19 { pt3dadd( -29.3362, -58.5858, -50.716, 1.77 ) }
    dend_19 { pt3dadd( -30.5145, -59.9712, -52.8384, 1.47 ) }
    dend_19 { pt3dadd( -31.0256, -60.5995, -53.7391, 1.47 ) }
    dend_19 { pt3dadd( -32.0243, -61.9807, -55.4691, 1.47 ) }
    dend_19 { pt3dadd( -32.0474, -62.03, -55.5156, 1.47 ) }
    dend_19 { pt3dadd( -32.2574, -62.7492, -56.0721, 1.55 ) }
    dend_19 { pt3dadd( -32.6111, -64.599, -57.4474, 1.11 ) }
    dend_19 { pt3dadd( -32.7214, -65.4455, -58.017, 0.66 ) }
    dend_19 { pt3dadd( -32.9067, -66.8801, -58.9488, 0.37 ) }
    dend_19 { pt3dadd( -33.1903, -69.064, -60.1717, 0.37 ) }
    dend_19 { pt3dadd( -33.4533, -70.8091, -61.1358, 0.37 ) }
    dend_19 { pt3dadd( -33.6747, -71.9908, -61.7733, 0.37 ) }
    dend_19 { pt3dadd( -33.7024, -72.1043, -61.836, 0.37 ) }
    dend_19 { pt3dadd( -33.9681, -72.8977, -62.315, 0.37 ) }
    dend_19 { pt3dadd( -34.5351, -74.1242, -63.3119, 0.37 ) }
    dend_19 { pt3dadd( -35.131, -75.2168, -64.1893, 0.22 ) }
    dend_19 { pt3dadd( -35.3573, -75.6562, -64.512, 0.22 ) }
    dend_19 { pt3dadd( -36.1681, -77.2365, -65.6219, 1.25 ) }
    dend_19 { pt3dadd( -36.6719, -78.1758, -66.2547, 1.62 ) }
    dend_19 { pt3dadd( -38.2627, -81.0138, -68.1707, 0.22 ) }
    dend_19 { pt3dadd( -39.5695, -83.1128, -69.6153, 0.22 ) }
    dend_19 { pt3dadd( -39.6043, -83.1669, -69.6474, 0.22 ) }
    dend_19 { pt3dadd( -40.1567, -84.0544, -70.1069, 0.22 ) }
    dend_19 { pt3dadd( -40.2016, -84.1164, -70.1368, 0.22 ) }
    dend_19 { pt3dadd( -41.4796, -85.6749, -70.9871, 0.22 ) }
    dend_19 { pt3dadd( -41.5734, -85.7777, -71.0512, 0.22 ) }
    dend_19 { pt3dadd( -42.3088, -86.6127, -71.7169, 0.22 ) }
    dend_19 { pt3dadd( -42.4354, -86.7673, -71.8365, 0.22 ) }
    dend_19 { pt3dadd( -43.4848, -88.1298, -72.8167, 0.22 ) }
    dend_19 { pt3dadd( -44.0287, -88.9855, -73.3387, 0.22 ) }
    dend_19 { pt3dadd( -44.5636, -89.9759, -73.8517, 0.96 ) }
    dend_19 { pt3dadd( -44.9085, -90.7444, -74.1978, 1.25 ) }
    dend_19 { pt3dadd( -45.185, -91.4445, -74.5427, 0.52 ) }
    dend_19 { pt3dadd( -45.4588, -92.1643, -74.9006, 0.15 ) }
    dend_19 { pt3dadd( -46.1296, -93.9827, -75.9458, 0.15 ) }
    dend_19 { pt3dadd( -46.1826, -94.1148, -76.0322, 0.15 ) }
    dend_19 { pt3dadd( -46.6819, -95.2792, -76.8106, 0.15 ) }
    dend_19 { pt3dadd( -47.557, -97.1442, -78.1505, 0.15 ) }
    dend_19 { pt3dadd( -47.7172, -97.4608, -78.3983, 1.4 ) }
    dend_19 { pt3dadd( -48.7532, -99.4337, -80.0285, 1.4 ) }
    dend_19 { pt3dadd( -49.1237, -100.116, -80.6168, 0.22 ) }
    dend_19 { pt3dadd( -49.5372, -100.895, -81.2893, 0.22 ) }
    dend_19 { pt3dadd( -49.7839, -101.371, -81.7161, 0.22 ) }
    dend_19 { pt3dadd( -50.358, -102.514, -82.6873, 0.22 ) }
    dend_19 { pt3dadd( -50.384, -102.565, -82.7304, 0.22 ) }
    dend_19 { pt3dadd( -50.9484, -103.663, -83.5553, 1.03 ) }
    dend_19 { pt3dadd( -51.3256, -104.41, -84.1059, 1.33 ) }
    dend_19 { pt3dadd( -51.8732, -105.629, -84.9152, 0.74 ) }
    dend_19 { pt3dadd( -52.1534, -106.369, -85.2829, 0.22 ) }
    dend_19 { pt3dadd( -52.4426, -107.244, -85.5569, 0.22 ) }
    dend_19 { pt3dadd( -52.787, -108.359, -85.7423, 0.22 ) }
    dend_19 { pt3dadd( -52.8092, -108.429, -85.7423, 0.22 ) }
    dend_19 { pt3dadd( -53.0174, -109.008, -85.7582, 1.03 ) }
    dend_19 { pt3dadd( -53.3803, -109.922, -85.7796, 0.74 ) }
    dend_19 { pt3dadd( -53.7172, -110.746, -85.801, 0.74 ) }
    dend_19 { pt3dadd( -54.1362, -111.728, -85.8734, 0.44 ) }
    dend_19 { pt3dadd( -54.6288, -112.801, -86.0286, 0.22 ) }
    dend_19 { pt3dadd( -55.7359, -115.07, -86.4297, 0.15 ) }
    dend_19 { pt3dadd( -55.9452, -115.457, -86.525, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -24.8726, -55.3066, 11.3297, 0.52 ) }
    dend_13 { pt3dadd( -25.1027, -55.5173, 11.2231, 0.52 ) }
    dend_13 { pt3dadd( -25.7895, -56.2689, 11.2647, 0.52 ) }
    dend_13 { pt3dadd( -27.0577, -57.7686, 11.7568, 0.44 ) }
    dend_13 { pt3dadd( -27.6131, -58.5161, 12.0652, 0.44 ) }
    dend_13 { pt3dadd( -27.652, -58.5702, 12.0922, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( -28.5884, -59.8931, 12.8064, 0.44 ) }
    dend_13 { pt3dadd( -29.6153, -61.2291, 13.6779, 0.44 ) }
    dend_13 { pt3dadd( -29.7407, -61.385, 13.8026, 0.44 ) }
    dend_13 { pt3dadd( -30.6153, -62.3684, 14.7255, 0.44 ) }
    dend_13 { pt3dadd( -31.2817, -63.0057, 15.3464, 0.44 ) }
    dend_13 { pt3dadd( -31.3295, -63.0448, 15.3814, 0.44 ) }
    dend_13 { pt3dadd( -32.5584, -63.8899, 16.0783, 0.44 ) }
    dend_13 { pt3dadd( -33.3111, -64.3415, 16.4233, 0.37 ) }
    dend_13 { pt3dadd( -33.7349, -64.5608, 16.6276, 0.37 ) }
    dend_13 { pt3dadd( -34.3731, -64.8795, 16.9913, 0.66 ) }
    dend_13 { pt3dadd( -35.201, -65.3208, 17.5076, 0.66 ) }
    dend_13 { pt3dadd( -36.2291, -65.9212, 18.2309, 0.29 ) }
    dend_13 { pt3dadd( -36.7775, -66.2987, 18.7115, 0.29 ) }
    dend_13 { pt3dadd( -37.8794, -67.1528, 19.7758, 0.29 ) }
    dend_13 { pt3dadd( -38.8646, -68.0293, 20.8384, 0.29 ) }
    dend_13 { pt3dadd( -38.9093, -68.0705, 20.8919, 0.29 ) }
    dend_13 { pt3dadd( -39.068, -68.2204, 21.1047, 0.96 ) }
    dend_13 { pt3dadd( -39.6172, -68.7663, 21.861, 0.37 ) }
    dend_13 { pt3dadd( -40.142, -69.3684, 22.6673, 0.37 ) }
    dend_13 { pt3dadd( -40.1749, -69.4095, 22.7152, 0.37 ) }
    dend_13 { pt3dadd( -41.2073, -70.5517, 24.0472, 0.37 ) }
    dend_13 { pt3dadd( -41.3649, -70.7206, 24.2453, 0.74 ) }
    dend_13 { pt3dadd( -41.5816, -70.9361, 24.5049, 0.29 ) }
    dend_13 { pt3dadd( -42.5058, -71.7571, 25.5323, 0.29 ) }
    dend_13 { pt3dadd( -43.0411, -72.2093, 26.1866, 0.29 ) }
    dend_13 { pt3dadd( -49.5255, -78.4893, 30.8963, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -24.8726, -55.3066, 11.3297, 0.81 ) }
    dend_12 { pt3dadd( -25.0213, -55.1538, 11.4525, 0.81 ) }
    dend_12 { pt3dadd( -25.305, -54.8655, 11.698, 0.44 ) }
    dend_12 { pt3dadd( -25.8009, -54.274, 12.1549, 0.44 ) }
    dend_12 { pt3dadd( -26.4902, -53.4517, 12.7899, 0.44 ) }
    dend_12 { pt3dadd( -27.021, -52.8186, 13.2789, 0.44 ) }
    dend_12 { pt3dadd( -27.8745, -51.8005, 14.0652, 0.22 ) }
    dend_12 { pt3dadd( -28.1896, -51.4145, 14.3753, 0.22 ) }
    dend_12 { pt3dadd( -28.7147, -50.786, 14.9426, 0.22 ) }
    dend_12 { pt3dadd( -34.5008, -44.2607, 20.2246, 0.22 ) }
    dend_12 { pt3dadd( -41.9141, -39.3237, 25.0135, 0.22 ) }
    dend_12 { pt3dadd( -47.667, -32.8016, 30.3354, 0.22 ) }
    dend_12 { pt3dadd( -52.0242, -25.1233, 35.5832, 0.22 ) }
    dend_12 { pt3dadd( -56.8729, -18.1452, 41.2685, 0.22 ) }
    dend_12 { pt3dadd( -63.5005, -11.943, 45.8711, 0.22 ) }
    dend_12 { pt3dadd( -70.8013, -5.80699, 49.4137, 0.22 ) }
    dend_12 { pt3dadd( -79.1492, -1.27203, 52.8281, 0.22 ) }
    dend_12 { pt3dadd( -87.5089, 2.45966, 57.0095, 0.22 ) }
    dend_12 { pt3dadd( -95.6206, 4.66476, 62.4675, 0.22 ) }
    dend_12 { pt3dadd( -103.75, 5.66071, 68.2129, 0.22 ) }
    dend_12 { pt3dadd( -111.886, 6.3758, 73.9866, 0.22 ) }
    dend_12 { pt3dadd( -118.737, 7.56677, 81.1819, 0.22 ) }
    dend_12 { pt3dadd( -124.812, 7.35611, 89.1228, 0.22 ) }
    dend_12 { pt3dadd( -130.464, 8.34817, 97.3182, 0.22 ) }
    dend_12 { pt3dadd( -135.743, 10.6804, 105.516, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.59495, -79.6366, 3.40387, 0.37 ) }
    dend_6 { pt3dadd( -10.8689, -79.6915, 2.55773, 0.37 ) }
    dend_6 { pt3dadd( -11.0771, -79.6971, 2.51767, 0.37 ) }
    dend_6 { pt3dadd( -12.3833, -79.7527, 2.32124, 0.37 ) }
    dend_6 { pt3dadd( -13.2462, -79.812, 2.27564, 0.22 ) }
    dend_6 { pt3dadd( -14.2455, -79.8807, 2.22282, 0.22 ) }
    dend_6 { pt3dadd( -15.7179, -79.9819, 2.14501, 0.22 ) }
    dend_6 { pt3dadd( -16.1121, -80.0157, 2.19474, 0.44 ) }
    dend_6 { pt3dadd( -17.0714, -80.1199, 2.31345, 0.44 ) }
    dend_6 { pt3dadd( -18.51, -80.3186, 2.47812, 0.22 ) }
    dend_6 { pt3dadd( -28.1804, -79.3202, 0.116127, 0.22 ) }
    dend_6 { pt3dadd( -37.4831, -79.6158, -3.54179, 0.22 ) }
    dend_6 { pt3dadd( -47.113, -78.123, -5.83185, 0.22 ) }
    dend_6 { pt3dadd( -56.8134, -76.4812, -7.69136, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 65/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.59495, -79.6366, 3.40387, 1.33 ) }
    dend_5 { pt3dadd( -7.06224, -80.4152, 3.41274, 1.33 ) }
    dend_5 { pt3dadd( -6.54708, -81.2674, 3.38273, 0.88 ) }
    dend_5 { pt3dadd( -6.52102, -81.3241, 3.38235, 0.88 ) }
    dend_5 { pt3dadd( -5.96871, -82.7954, 3.38892, 0.66 ) }
    dend_5 { pt3dadd( -5.37614, -84.6651, 3.40674, 0.66 ) }
    dend_5 { pt3dadd( -4.80566, -86.7245, 3.43862, 0.66 ) }
    dend_5 { pt3dadd( -4.3728, -88.5494, 3.47548, 0.66 ) }
    dend_5 { pt3dadd( -3.86806, -90.9959, 3.53325, 0.96 ) }
    dend_5 { pt3dadd( -3.66813, -92.2089, 3.56122, 1.69 ) }
    dend_5 { pt3dadd( -3.54574, -93.2819, 3.58633, 1.25 ) }
    dend_5 { pt3dadd( -3.45879, -94.3795, 3.61206, 0.96 ) }
    dend_5 { pt3dadd( -3.45277, -94.4527, 3.6137, 0.96 ) }
    dend_5 { pt3dadd( -3.26443, -95.8985, 3.68147, 0.59 ) }
    dend_5 { pt3dadd( -2.82038, -98.4014, 3.80891, 0.59 ) }
    dend_5 { pt3dadd( -2.29794, -100.811, 3.96217, 0.96 ) }
    dend_5 { pt3dadd( -1.70358, -103.261, 4.14154, 1.11 ) }
    dend_5 { pt3dadd( -1.32956, -104.787, 4.26305, 0.74 ) }
    dend_5 { pt3dadd( -0.978845, -106.214, 4.39132, 0.74 ) }
    dend_5 { pt3dadd( -0.79051, -107.064, 4.46704, 0.52 ) }
    dend_5 { pt3dadd( -0.564844, -108.178, 4.56948, 0.52 ) }
    dend_5 { pt3dadd( -0.544385, -108.334, 4.58103, 0.52 ) }
    dend_5 { pt3dadd( -0.530319, -109.865, 4.58808, 0.52 ) }
    dend_5 { pt3dadd( -0.537788, -109.961, 4.58205, 0.52 ) }
    dend_5 { pt3dadd( -0.73016, -111.693, 4.46054, 0.44 ) }
    dend_5 { pt3dadd( -0.737375, -111.777, 4.45895, 0.44 ) }
    dend_5 { pt3dadd( -0.761524, -112.57, 4.50001, 0.44 ) }
    dend_5 { pt3dadd( -0.709456, -114.871, 4.70857, 0.44 ) }
    dend_5 { pt3dadd( -0.704217, -114.943, 4.7197, 0.44 ) }
    dend_5 { pt3dadd( -0.583944, -116.153, 4.95287, 0.88 ) }
    dend_5 { pt3dadd( -0.349649, -118.265, 5.44029, 0.88 ) }
    dend_5 { pt3dadd( -0.18017, -120.575, 6.01679, 0.88 ) }
    dend_5 { pt3dadd( -0.178608, -120.646, 6.03558, 0.88 ) }
    dend_5 { pt3dadd( -0.257268, -121.899, 6.42361, 1.25 ) }
    dend_5 { pt3dadd( -0.363929, -122.774, 6.69529, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( -0.563835, -123.814, 7.01454, 0.96 ) }
    dend_5 { pt3dadd( -0.92269, -125.121, 7.42891, 0.52 ) }
    dend_5 { pt3dadd( -1.19636, -125.99, 7.63468, 0.52 ) }
    dend_5 { pt3dadd( -1.6168, -127.331, 7.84977, 1.18 ) }
    dend_5 { pt3dadd( -1.98201, -128.503, 7.94055, 1.18 ) }
    dend_5 { pt3dadd( -2.00545, -128.584, 7.94307, 1.18 ) }
    dend_5 { pt3dadd( -2.31843, -129.834, 7.89169, 0.96 ) }
    dend_5 { pt3dadd( -2.64856, -131.352, 7.71139, 0.96 ) }
    dend_5 { pt3dadd( -2.80431, -132.202, 7.55378, 1.25 ) }
    dend_5 { pt3dadd( -2.91805, -133.175, 7.32322, 1.03 ) }
    dend_5 { pt3dadd( -2.92201, -133.257, 7.304, 1.03 ) }
    dend_5 { pt3dadd( -2.9045, -134.324, 7.06715, 0.88 ) }
    dend_5 { pt3dadd( -2.80836, -135.552, 6.8703, 0.88 ) }
    dend_5 { pt3dadd( -2.66903, -136.706, 6.76334, 0.59 ) }
    dend_5 { pt3dadd( -2.47466, -138.16, 6.67094, 0.52 ) }
    dend_5 { pt3dadd( -2.39923, -138.706, 6.65207, 0.52 ) }
    dend_5 { pt3dadd( -2.37982, -138.879, 6.65233, 0.52 ) }
    dend_5 { pt3dadd( -2.24302, -140.4, 6.7273, 0.52 ) }
    dend_5 { pt3dadd( -2.24091, -140.504, 6.73803, 0.52 ) }
    dend_5 { pt3dadd( -2.32961, -141.818, 6.93008, 0.74 ) }
    dend_5 { pt3dadd( -2.33982, -141.889, 6.94053, 0.74 ) }
    dend_5 { pt3dadd( -2.49036, -142.951, 7.07564, 0.81 ) }
    dend_5 { pt3dadd( -2.56743, -143.566, 7.1422, 0.81 ) }
    dend_5 { pt3dadd( -2.67068, -144.5, 7.21191, 0.29 ) }
    dend_5 { pt3dadd( -2.74291, -145.26, 7.26552, 0.29 ) }
    dend_5 { pt3dadd( -2.7479, -145.344, 7.27123, 0.29 ) }
    dend_5 { pt3dadd( -2.7645, -146.424, 7.33416, 0.29 ) }
    dend_5 { pt3dadd( -2.7612, -146.508, 7.33807, 0.29 ) }
    dend_5 { pt3dadd( -2.64238, -147.6, 7.36724, 0.29 ) }
    dend_5 { pt3dadd( -2.48754, -148.538, 7.33294, 0.29 ) }
    dend_5 { pt3dadd( -2.40059, -148.979, 7.30493, 0.88 ) }
    dend_5 { pt3dadd( -2.25575, -149.646, 7.2562, 0.88 ) }
    dend_5 { pt3dadd( -2.2088, -149.855, 7.23984, 0.88 ) }
    dend_5 { pt3dadd( -2.06173, -150.634, 7.22847, 0.59 ) }
    dend_5 { pt3dadd( -1.83779, -151.871, 7.25736, 0.59 ) }
    dend_5 { pt3dadd( -1.82781, -151.954, 7.26179, 0.59 ) }
    dend_5 { pt3dadd( -1.68975, -153.892, 7.42913, 0.59 ) }
    dend_5 { pt3dadd( -1.65487, -154.736, 7.5197, 0.29 ) }
    dend_5 { pt3dadd( -1.63095, -156.57, 7.73766, 0.29 ) }
    dend_5 { pt3dadd( -1.63611, -156.799, 7.76717, 0.29 ) }
    dend_5 { pt3dadd( -1.73696, -158.552, 8.03738, 0.29 ) }
    dend_5 { pt3dadd( -1.89807, -160.261, 8.27965, 0.37 ) }
    dend_5 { pt3dadd( -2.00424, -161.012, 8.37498, 1.18 ) }
    dend_5 { pt3dadd( -2.2172, -162.308, 8.51088, 1.33 ) }
    dend_5 { pt3dadd( -2.4039, -163.357, 8.58117, 0.74 ) }
    dend_5 { pt3dadd( -2.67791, -164.768, 8.66542, 0.52 ) }
    dend_5 { pt3dadd( -2.9014, -165.84, 8.71751, 0.52 ) }
    dend_5 { pt3dadd( -3.0785, -166.643, 8.73906, 0.52 ) }
    dend_5 { pt3dadd( -3.09652, -166.725, 8.74041, 0.52 ) }
    dend_5 { pt3dadd( -3.32614, -167.848, 8.74211, 0.52 ) }
    dend_5 { pt3dadd( -3.36686, -168.075, 8.7382, 0.52 ) }
    dend_5 { pt3dadd( -3.50672, -168.905, 8.7161, 0.52 ) }
    dend_5 { pt3dadd( -3.60535, -169.522, 8.72012, 0.88 ) }
    dend_5 { pt3dadd( -3.73833, -170.372, 8.73706, 1.03 ) }
    dend_5 { pt3dadd( -3.87301, -171.296, 8.76512, 0.59 ) }
    dend_5 { pt3dadd( -3.88266, -171.369, 8.76814, 0.59 ) }
    dend_5 { pt3dadd( -4.01341, -172.886, 8.80144, 0.29 ) }
    dend_5 { pt3dadd( -4.05357, -173.958, 8.80887, 0.29 ) }
    dend_5 { pt3dadd( -4.05032, -174.054, 8.8078, 0.29 ) }
    dend_5 { pt3dadd( -3.93583, -175.14, 8.77674, 0.29 ) }
    dend_5 { pt3dadd( -3.90635, -175.368, 8.7524, 0.29 ) }
    dend_5 { pt3dadd( -3.78305, -176.35, 8.57837, 0.29 ) }
    dend_5 { pt3dadd( -3.77544, -176.42, 8.56001, 0.29 ) }
    dend_5 { pt3dadd( -3.74334, -177.318, 8.29041, 0.29 ) }
    dend_5 { pt3dadd( -3.74651, -177.388, 8.26996, 0.29 ) }
    dend_5 { pt3dadd( -3.89468, -178.762, 7.92202, 0.29 ) }
    dend_5 { pt3dadd( -3.9452, -179.078, 7.86316, 0.29 ) }
    dend_5 { pt3dadd( -4.13299, -180.058, 7.72607, 0.29 ) }
    dend_5 { pt3dadd( -4.23634, -180.62, 7.66388, 1.03 ) }
    dend_5 { pt3dadd( -4.3692, -181.406, 7.60168, 1.47 ) }
    dend_5 { pt3dadd( -4.50013, -182.405, 7.55927, 0.37 ) }
    dend_5 { pt3dadd( -4.65177, -183.927, 7.58443, 0.37 ) }
    dend_5 { pt3dadd( -4.65969, -184.0, 7.58654, 0.37 ) }
    dend_5 { pt3dadd( -4.74455, -184.707, 7.61586, 0.81 ) }
    dend_5 { pt3dadd( -4.82957, -185.315, 7.64821, 0.88 ) }
    dend_5 { pt3dadd( -4.91836, -185.846, 7.67592, 0.88 ) }
    dend_5 { pt3dadd( -5.13847, -187.036, 7.73719, 0.22 ) }
    dend_5 { pt3dadd( -5.3672, -188.248, 7.80498, 0.22 ) }
    dend_5 { pt3dadd( -5.38064, -188.33, 7.80925, 0.22 ) }
    dend_5 { pt3dadd( -5.43972, -188.707, 7.82738, 0.37 ) }
    dend_5 { pt3dadd( -5.53565, -189.5, 7.86032, 0.37 ) }
    dend_5 { pt3dadd( -5.63827, -190.767, 7.90201, 0.29 ) }
    dend_5 { pt3dadd( -5.63895, -190.851, 7.90377, 0.29 ) }
    dend_5 { pt3dadd( -5.57076, -192.161, 7.92809, 0.29 ) }
    dend_5 { pt3dadd( -5.55801, -192.307, 7.93263, 0.29 ) }
    dend_5 { pt3dadd( -5.3699, -193.826, 7.99294, 0.22 ) }
    dend_5 { pt3dadd( -5.29061, -194.361, 8.0172, 0.66 ) }
    dend_5 { pt3dadd( -5.16421, -195.247, 8.06231, 0.81 ) }
    dend_5 { pt3dadd( -5.07373, -195.95, 8.10243, 0.96 ) }
    dend_5 { pt3dadd( -4.97591, -196.763, 8.18931, 0.37 ) }
    dend_5 { pt3dadd( -4.96619, -196.835, 8.19936, 0.37 ) }
    dend_5 { pt3dadd( -4.7727, -198.19, 8.40873, 0.15 ) }
    dend_5 { pt3dadd( -4.70496, -198.742, 8.49318, 0.74 ) }
    dend_5 { pt3dadd( -4.65041, -199.497, 8.60307, 0.74 ) }
    dend_5 { pt3dadd( -4.62947, -200.704, 8.76039, 0.22 ) }
    dend_5 { pt3dadd( -4.66177, -201.649, 8.86537, 0.22 ) }
    dend_5 { pt3dadd( -4.73587, -202.455, 8.94615, 0.22 ) }
    dend_5 { pt3dadd( -4.83195, -203.027, 8.99571, 0.59 ) }
    dend_5 { pt3dadd( -5.00968, -203.798, 9.04015, 0.59 ) }
    dend_5 { pt3dadd( -5.19169, -204.371, 9.05114, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( -5.26248, -204.528, 9.04704, 0.22 ) }
    dend_5 { pt3dadd( -5.6304, -205.197, 9.05055, 0.22 ) }
    dend_5 { pt3dadd( -5.79242, -205.476, 9.06447, 0.44 ) }
    dend_5 { pt3dadd( -6.00843, -205.865, 9.09019, 0.44 ) }
    dend_5 { pt3dadd( -6.0375, -205.943, 9.09629, 0.44 ) }
    dend_5 { pt3dadd( -6.27623, -206.857, 9.17163, 0.22 ) }
    dend_5 { pt3dadd( -6.32874, -207.156, 9.16112, 0.22 ) }
    dend_5 { pt3dadd( -6.38744, -207.801, 9.0726, 0.22 ) }
    dend_5 { pt3dadd( -6.39632, -207.955, 9.04337, 0.22 ) }
    dend_5 { pt3dadd( -6.47339, -209.839, 8.61284, 0.22 ) }
    dend_5 { pt3dadd( -6.47654, -209.939, 8.58702, 0.22 ) }
    dend_5 { pt3dadd( -6.47123, -211.537, 8.11224, 0.22 ) }
    dend_5 { pt3dadd( -6.45834, -213.213, 7.56693, 0.22 ) }
    dend_5 { pt3dadd( -6.45361, -213.515, 7.45603, 0.52 ) }
    dend_5 { pt3dadd( -6.45386, -213.582, 7.42844, 0.52 ) }
    dend_5 { pt3dadd( -6.48085, -213.973, 7.21999, 0.52 ) }
    dend_5 { pt3dadd( -7.76189, -224.317, 6.0793, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 59.1912, -78.8499, 7.16003, 0.44 ) }
    dend_43 { pt3dadd( 59.0218, -79.4227, 7.23107, 0.44 ) }
    dend_43 { pt3dadd( 59.0668, -79.561, 7.24594, 0.44 ) }
    dend_43 { pt3dadd( 59.2951, -80.1729, 7.31245, 0.44 ) }
    dend_43 { pt3dadd( 59.4305, -80.521, 7.34909, 0.44 ) }
    dend_43 { pt3dadd( 59.7453, -81.3051, 7.42458, 0.44 ) }
    dend_43 { pt3dadd( 59.773, -81.3723, 7.43062, 0.44 ) }
    dend_43 { pt3dadd( 61.2591, -84.752, 7.66478, 0.44 ) }
    dend_43 { pt3dadd( 61.2907, -84.8174, 7.66912, 0.44 ) }
    dend_43 { pt3dadd( 61.5146, -85.2404, 7.69668, 1.33 ) }
    dend_43 { pt3dadd( 62.081, -86.1685, 7.7513, 1.4 ) }
    dend_43 { pt3dadd( 62.3409, -86.5264, 7.79106, 0.37 ) }
    dend_43 { pt3dadd( 62.386, -86.5818, 7.79962, 0.37 ) }
    dend_43 { pt3dadd( 63.0642, -87.2488, 7.93182, 0.29 ) }
    dend_43 { pt3dadd( 63.1164, -87.2967, 7.94192, 0.29 ) }
    dend_43 { pt3dadd( 64.5816, -88.5003, 8.19928, 0.29 ) }
    dend_43 { pt3dadd( 65.976, -89.5481, 8.40924, 0.29 ) }
    dend_43 { pt3dadd( 66.0334, -89.5895, 8.41679, 0.29 ) }
    dend_43 { pt3dadd( 68.4589, -91.2819, 8.69771, 0.29 ) }
    dend_43 { pt3dadd( 68.595, -91.3711, 8.71375, 0.29 ) }
    dend_43 { pt3dadd( 70.2021, -92.3749, 8.89608, 0.52 ) }
    dend_43 { pt3dadd( 71.8713, -93.3434, 9.06321, 0.29 ) }
    dend_43 { pt3dadd( 72.4909, -93.6738, 9.10824, 0.59 ) }
    dend_43 { pt3dadd( 72.9947, -93.9157, 9.14911, 0.59 ) }
    dend_43 { pt3dadd( 74.4625, -94.5089, 9.29121, 0.44 ) }
    dend_43 { pt3dadd( 74.6606, -94.5856, 9.31148, 0.44 ) }
    dend_43 { pt3dadd( 75.4806, -94.9806, 9.33796, 0.29 ) }
    dend_43 { pt3dadd( 75.6051, -95.0477, 9.33599, 0.29 ) }
    dend_43 { pt3dadd( 76.5199, -95.5647, 9.30156, 0.29 ) }
    dend_43 { pt3dadd( 76.71, -95.6802, 9.28854, 0.29 ) }
    dend_43 { pt3dadd( 77.5513, -96.2429, 9.19219, 0.29 ) }
    dend_43 { pt3dadd( 81.3861, -98.9613, 8.72112, 0.29 ) }
    dend_43 { pt3dadd( 81.4506, -99.0102, 8.71235, 0.29 ) }
    dend_43 { pt3dadd( 89.9735, -104.493, 9.01905, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 59.1912, -78.8499, 7.16003, 0.52 ) }
    dend_40 { pt3dadd( 59.0606, -78.6824, 7.16027, 0.52 ) }
    dend_40 { pt3dadd( 59.0132, -78.6289, 7.16807, 0.52 ) }
    dend_40 { pt3dadd( 58.3565, -77.9297, 7.3247, 0.37 ) }
    dend_40 { pt3dadd( 57.3308, -76.9125, 7.59588, 0.37 ) }
    dend_40 { pt3dadd( 56.4846, -76.1301, 7.78584, 0.59 ) }
    dend_40 { pt3dadd( 55.4776, -75.3251, 7.86693, 0.59 ) }
    dend_40 { pt3dadd( 54.3375, -74.5111, 7.84672, 0.22 ) }
    dend_40 { pt3dadd( 54.2864, -74.4785, 7.84218, 0.22 ) }
    dend_40 { pt3dadd( 53.1627, -73.8963, 7.68825, 0.22 ) }
    dend_40 { pt3dadd( 52.406, -73.584, 7.53631, 0.22 ) }
    dend_40 { pt3dadd( 50.3318, -72.8453, 6.92804, 0.22 ) }
    dend_40 { pt3dadd( 50.0714, -72.7625, 6.82185, 0.66 ) }
    dend_40 { pt3dadd( 50.0121, -72.7419, 6.79037, 0.66 ) }
    dend_40 { pt3dadd( 49.1634, -72.4669, 6.31473, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 84.2237, -113.044, -1.28875, 0.29 ) }
    dend_38 { pt3dadd( 89.1888, -122.079, -2.43589, 0.29 ) }
    dend_38 { pt3dadd( 94.4082, -131.035, -2.42626, 0.29 ) }
    dend_38 { pt3dadd( 99.9632, -139.765, -2.33239, 0.29 ) }
    dend_38 { pt3dadd( 105.255, -148.609, -1.29672, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 71/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 84.2237, -113.044, -1.28875, 0.74 ) }
    dend_37 { pt3dadd( 89.1724, -122.071, -2.55503, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -49.5255, -78.4893, 30.8963, 0.37 ) }
    dend_15 { pt3dadd( -54.2139, -83.5081, 38.3241, 0.37 ) }
    dend_15 { pt3dadd( -58.6322, -89.9745, 44.8473, 0.37 ) }
    dend_15 { pt3dadd( -62.6522, -95.9556, 52.0161, 0.37 ) }
    dend_15 { pt3dadd( -66.805, -102.26, 58.8495, 0.37 ) }
    dend_15 { pt3dadd( -72.1767, -107.868, 65.3779, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 79/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -49.5255, -78.4893, 30.8963, 0.29 ) }
    dend_14 { pt3dadd( -57.267, -84.9813, 32.2529, 0.37 ) }
    dend_14 { pt3dadd( -63.6159, -92.6512, 34.7695, 0.37 ) }
    dend_14 { pt3dadd( -70.808, -98.5561, 38.8497, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -56.8134, -76.4812, -7.69136, 0.37 ) }
    dend_10 { pt3dadd( -66.2626, -75.8293, -10.9048, 0.37 ) }
    dend_10 { pt3dadd( -75.3533, -75.9872, -15.0687, 0.37 ) }
    dend_10 { pt3dadd( -84.3145, -78.3473, -18.8956, 0.37 ) }
    dend_10 { pt3dadd( -93.8856, -80.8383, -20.5585, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -56.8134, -76.4812, -7.69136, 0.29 ) }
    dend_7 { pt3dadd( -66.7597, -75.9017, -8.56581, 0.37 ) }
    dend_7 { pt3dadd( -76.7089, -76.0783, -7.57289, 0.37 ) }
    dend_7 { pt3dadd( -86.5374, -75.2538, -5.90453, 0.37 ) }
    dend_7 { pt3dadd( -95.725, -73.0831, -2.54075, 0.37 ) }
    dend_7 { pt3dadd( -103.602, -69.6299, 2.66815, 0.37 ) }
    dend_7 { pt3dadd( -109.919, -64.3471, 8.56504, 0.37 ) }
    dend_7 { pt3dadd( -116.108, -60.5625, 15.5446, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 49.1634, -72.4669, 6.31473, 0.37 ) }
    dend_42 { pt3dadd( 49.204, -72.62, 6.31806, 0.37 ) }
    dend_42 { pt3dadd( 49.6251, -74.1231, 6.23242, 0.37 ) }
    dend_42 { pt3dadd( 49.663, -74.2531, 6.22072, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 50.1919, -76.07, 6.05719, 0.37 ) }
    dend_42 { pt3dadd( 50.2094, -76.13, 6.05179, 0.37 ) }
    dend_42 { pt3dadd( 50.9186, -78.566, 5.83253, 0.37 ) }
    dend_42 { pt3dadd( 50.9411, -78.6352, 5.82529, 0.37 ) }
    dend_42 { pt3dadd( 51.2904, -79.5236, 5.68167, 0.37 ) }
    dend_42 { pt3dadd( 55.3104, -89.1322, 5.99379, 0.37 ) }
    dend_42 { pt3dadd( 58.0456, -99.1293, 7.36091, 0.37 ) }
    dend_42 { pt3dadd( 60.93, -108.994, 9.20844, 0.37 ) }
    dend_42 { pt3dadd( 64.2867, -118.091, 12.9055, 0.37 ) }
    dend_42 { pt3dadd( 67.8795, -127.147, 16.4705, 0.37 ) }
    dend_42 { pt3dadd( 70.1189, -136.342, 20.7469, 0.37 ) }
    dend_42 { pt3dadd( 71.0213, -146.349, 23.6395, 0.37 ) }
    dend_42 { pt3dadd( 73.5479, -156.142, 26.2129, 0.37 ) }
    dend_42 { pt3dadd( 76.2432, -165.793, 29.085, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 49.1634, -72.4669, 6.31473, 0.37 ) }
    dend_41 { pt3dadd( 49.0766, -72.4441, 6.2724, 0.37 ) }
    dend_41 { pt3dadd( 49.0111, -72.4306, 6.2514, 0.37 ) }
    dend_41 { pt3dadd( 47.9269, -72.2305, 5.96357, 0.22 ) }
    dend_41 { pt3dadd( 47.5727, -72.1416, 5.88738, 0.22 ) }
    dend_41 { pt3dadd( 46.66, -71.8753, 5.7166, 0.22 ) }
    dend_41 { pt3dadd( 46.5849, -71.8492, 5.70508, 0.22 ) }
    dend_41 { pt3dadd( 45.4912, -71.4272, 5.57746, 0.22 ) }
    dend_41 { pt3dadd( 45.3519, -71.3701, 5.56594, 0.22 ) }
    dend_41 { pt3dadd( 44.4361, -70.9761, 5.51856, 0.22 ) }
    dend_41 { pt3dadd( 44.1913, -70.8677, 5.50075, 0.22 ) }
    dend_41 { pt3dadd( 43.1772, -70.3951, 5.41197, 0.22 ) }
    dend_41 { pt3dadd( 43.0612, -70.3392, 5.40144, 0.22 ) }
    dend_41 { pt3dadd( 41.3297, -69.4739, 5.22522, 0.22 ) }
    dend_41 { pt3dadd( 41.1511, -69.3854, 5.20516, 0.22 ) }
    dend_41 { pt3dadd( 39.4646, -68.5555, 5.002, 0.22 ) }
    dend_41 { pt3dadd( 39.395, -68.5149, 4.99444, 0.22 ) }
    dend_41 { pt3dadd( 38.2372, -67.7359, 4.88924, 0.22 ) }
    dend_41 { pt3dadd( 38.0098, -67.5369, 4.87671, 0.22 ) }
    dend_41 { pt3dadd( 37.4172, -66.8515, 4.87304, 0.22 ) }
    dend_41 { pt3dadd( 37.1268, -66.4552, 4.88262, 0.22 ) }
    dend_41 { pt3dadd( 36.2773, -65.0711, 4.94391, 0.22 ) }
    dend_41 { pt3dadd( 36.2024, -64.9419, 4.95039, 0.22 ) }
    dend_41 { pt3dadd( 35.294, -63.2348, 5.05056, 0.22 ) }
    dend_41 { pt3dadd( 35.2524, -63.1485, 5.05446, 0.22 ) }
    dend_41 { pt3dadd( 34.7307, -61.9582, 5.09063, 0.22 ) }
    dend_41 { pt3dadd( 34.5592, -61.5588, 5.08926, 0.22 ) }
    dend_41 { pt3dadd( 34.115, -60.5599, 5.03795, 0.22 ) }
    dend_41 { pt3dadd( 34.0513, -60.4177, 5.02744, 0.22 ) }
    dend_41 { pt3dadd( 33.5606, -59.4072, 4.93116, 0.22 ) }
    dend_41 { pt3dadd( 33.5261, -59.3436, 4.92477, 0.22 ) }
    dend_41 { pt3dadd( 33.2332, -58.8479, 4.87309, 0.29 ) }
    dend_41 { pt3dadd( 32.9607, -58.4525, 4.81392, 0.29 ) }
    dend_41 { pt3dadd( 32.2881, -57.6286, 4.65997, 0.29 ) }
    dend_41 { pt3dadd( 31.8361, -57.1375, 4.56457, 0.29 ) }
    dend_41 { pt3dadd( 31.4471, -56.7631, 4.49274, 0.29 ) }
    dend_41 { pt3dadd( 31.3735, -56.6951, 4.47906, 0.29 ) }
    dend_41 { pt3dadd( 30.5528, -55.9648, 4.32666, 0.29 ) }
    dend_41 { pt3dadd( 30.4919, -55.9116, 4.31537, 0.29 ) }
    dend_41 { pt3dadd( 29.7377, -55.2466, 4.1807, 0.29 ) }
    dend_41 { pt3dadd( 29.5014, -55.0377, 4.14332, 0.29 ) }
    dend_41 { pt3dadd( 28.8938, -54.5208, 4.06949, 0.29 ) }
    dend_41 { pt3dadd( 28.5202, -54.2118, 4.04245, 0.44 ) }
    dend_41 { pt3dadd( 28.1931, -53.9179, 4.04245, 0.52 ) }
    dend_41 { pt3dadd( 27.8165, -53.5472, 4.04245, 0.52 ) }
    dend_41 { pt3dadd( 27.7682, -53.494, 4.04245, 0.52 ) }
    dend_41 { pt3dadd( 27.5107, -53.1736, 4.04245, 0.29 ) }
    dend_41 { pt3dadd( 27.257, -52.8197, 4.03812, 0.29 ) }
    dend_41 { pt3dadd( 26.5894, -51.8495, 4.01664, 0.29 ) }
    dend_41 { pt3dadd( 26.5454, -51.7923, 4.01485, 0.29 ) }
    dend_41 { pt3dadd( 26.1315, -51.2939, 3.99563, 0.29 ) }
    dend_41 { pt3dadd( 25.9573, -51.0829, 3.98249, 0.29 ) }
    dend_41 { pt3dadd( 25.7435, -50.8316, 3.96173, 0.29 ) }
    dend_41 { pt3dadd( 25.6038, -50.6647, 3.94705, 0.29 ) }
    dend_41 { pt3dadd( 24.8886, -49.833, 3.86963, 0.29 ) }
    dend_41 { pt3dadd( 24.7406, -49.6628, 3.8553, 0.29 ) }
    dend_41 { pt3dadd( 24.1821, -48.9983, 3.80665, 0.29 ) }
    dend_41 { pt3dadd( 23.9505, -48.7122, 3.78948, 0.29 ) }
    dend_41 { pt3dadd( 23.0796, -47.5865, 3.73803, 0.29 ) }
    dend_41 { pt3dadd( 22.9883, -47.4616, 3.7337, 0.29 ) }
    dend_41 { pt3dadd( 22.4695, -46.7072, 3.71463, 0.52 ) }
    dend_41 { pt3dadd( 22.1451, -46.234, 3.7015, 0.52 ) }
    dend_41 { pt3dadd( 21.9124, -45.8705, 3.69255, 0.52 ) }
    dend_41 { pt3dadd( 21.7491, -45.5738, 3.68314, 0.37 ) }
    dend_41 { pt3dadd( 21.0682, -44.1217, 3.53358, 0.37 ) }
    dend_41 { pt3dadd( 21.0414, -44.0546, 3.52377, 0.37 ) }
    dend_41 { pt3dadd( 20.8566, -43.4487, 3.4154, 0.52 ) }
    dend_41 { pt3dadd( 20.609, -42.4959, 3.22175, 0.81 ) }
    dend_41 { pt3dadd( 20.4014, -41.6632, 3.04169, 0.81 ) }
    dend_41 { pt3dadd( 20.0917, -40.5658, 2.80888, 0.37 ) }
    dend_41 { pt3dadd( 20.043, -40.4198, 2.78063, 0.37 ) }
    dend_41 { pt3dadd( 19.7644, -39.6874, 2.64998, 0.37 ) }
    dend_41 { pt3dadd( 19.6203, -39.3847, 2.5977, 0.37 ) }
    dend_41 { pt3dadd( 19.1611, -38.5387, 2.45253, 0.29 ) }
    dend_41 { pt3dadd( 18.4689, -37.3199, 2.26839, 0.29 ) }
    dend_41 { pt3dadd( 17.3812, -35.4729, 2.04196, 0.29 ) }
    dend_41 { pt3dadd( 17.3185, -35.3663, 2.02874, 0.29 ) }
    dend_41 { pt3dadd( 16.3779, -33.7637, 1.82578, 0.29 ) }
    dend_41 { pt3dadd( 16.3282, -33.673, 1.81724, 0.29 ) }
    dend_41 { pt3dadd( 15.8155, -32.6392, 1.75172, 0.29 ) }
    dend_41 { pt3dadd( 15.6825, -32.3439, 1.74886, 0.29 ) }
    dend_41 { pt3dadd( 15.291, -31.4075, 1.79609, 0.29 ) }
    dend_41 { pt3dadd( 15.1896, -31.1232, 1.81873, 0.29 ) }
    dend_41 { pt3dadd( 14.8423, -29.9342, 1.94821, 0.29 ) }
    dend_41 { pt3dadd( 14.8186, -29.8543, 1.95545, 0.29 ) }
    dend_41 { pt3dadd( 14.2438, -27.9281, 2.10696, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 14.201, -27.7775, 2.11648, 0.29 ) }
    dend_41 { pt3dadd( 13.8554, -26.5287, 2.17598, 0.29 ) }
    dend_41 { pt3dadd( 13.8162, -26.3767, 2.18006, 0.29 ) }
    dend_41 { pt3dadd( 13.1762, -23.6383, 2.18006, 0.29 ) }
    dend_41 { pt3dadd( 13.1463, -23.4839, 2.18006, 0.29 ) }
    dend_41 { pt3dadd( 13.0303, -22.7272, 2.18006, 0.29 ) }
    dend_41 { pt3dadd( 13.0044, -22.572, 2.18006, 0.29 ) }
    dend_41 { pt3dadd( 12.7822, -21.4495, 2.15291, 0.29 ) }
    dend_41 { pt3dadd( 12.7337, -21.2244, 2.14329, 0.29 ) }
    dend_41 { pt3dadd( 12.3138, -19.4321, 2.032, 0.29 ) }
    dend_41 { pt3dadd( 12.2338, -19.1311, 2.01085, 0.29 ) }
    dend_41 { pt3dadd( 11.802, -17.6478, 1.90375, 0.29 ) }
    dend_41 { pt3dadd( 11.4022, -16.432, 1.89238, 0.29 ) }
    dend_41 { pt3dadd( 11.3436, -16.2695, 1.89175, 0.29 ) }
    dend_41 { pt3dadd( 10.8818, -15.0758, 1.89828, 0.29 ) }
    dend_41 { pt3dadd( 10.8192, -14.9327, 1.90213, 0.29 ) }
    dend_41 { pt3dadd( 10.0669, -13.1419, 2.00726, 0.29 ) }
    dend_41 { pt3dadd( 9.50439, -11.5989, 2.22326, 0.29 ) }
    dend_41 { pt3dadd( 4.66899, -2.51312, 0.902976, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -116.108, -60.5625, 15.5446, 0.37 ) }
    dend_9 { pt3dadd( -125.495, -57.1732, 16.7532, 0.37 ) }
    dend_9 { pt3dadd( -135.051, -54.754, 18.5892, 0.37 ) }
    dend_9 { pt3dadd( -144.311, -51.6961, 20.9923, 0.37 ) }
    dend_9 { pt3dadd( -153.806, -50.1013, 23.7355, 0.37 ) }
    dend_9 { pt3dadd( -162.979, -49.0988, 27.6017, 0.37 ) }
    dend_9 { pt3dadd( -171.466, -47.2169, 32.578, 0.37 ) }
    dend_9 { pt3dadd( -180.466, -47.0349, 36.9335, 0.37 ) }
    dend_9 { pt3dadd( -189.726, -45.9724, 40.5697, 0.37 ) }
    dend_9 { pt3dadd( -198.905, -44.6619, 44.3383, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -116.108, -60.5625, 15.5446, 0.29 ) }
    dend_8 { pt3dadd( -124.307, -59.1922, 21.1188, 0.37 ) }
    dend_8 { pt3dadd( -132.018, -58.9106, 27.4798, 0.37 ) }
    dend_8 { pt3dadd( -140.77, -59.8559, 32.2335, 0.37 ) }
    dend_8 { pt3dadd( -149.758, -60.0824, 36.611, 0.37 ) }
    dend_8 { pt3dadd( -158.559, -60.0979, 41.3593, 0.37 ) }
    dend_8 { pt3dadd( -166.616, -59.7572, 47.274, 0.37 ) }
    dend_8 { pt3dadd( -174.89, -57.9724, 52.6263, 0.37 ) }
    dend_8 { pt3dadd( -182.711, -56.0204, 58.5742, 0.37 ) }
    dend_8 { pt3dadd( -190.812, -53.5116, 63.9284, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_77 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_74 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_72 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_71 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_55 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_47 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_22 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_79 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_76 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_75 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_65 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_64 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_62 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_61 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_56 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_51 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_4 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_80 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_67 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_54 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_53 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_20 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_19 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_12 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_6 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_5 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_38 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_15 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_10 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_7 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_42 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_8 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_70 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_58 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_73 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_68 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_63 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_35 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_39 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_13 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_40 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_78 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_57 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_14 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_37 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_66 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_81 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_77 nseg = 3
    dend_74 nseg = 3
    dend_72 nseg = 9
    dend_71 nseg = 7
    dend_60 nseg = 3
    dend_55 nseg = 3
    dend_50 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_31 nseg = 5
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_2 nseg = 7
    dend_79 nseg = 3
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_65 nseg = 3
    dend_64 nseg = 7
    dend_62 nseg = 3
    dend_61 nseg = 3
    dend_56 nseg = 7
    dend_52 nseg = 3
    dend_51 nseg = 5
    dend_44 nseg = 5
    dend_33 nseg = 5
    dend_32 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 7
    dend_17 nseg = 11
    dend_11 nseg = 3
    dend_4 nseg = 3
    dend_80 nseg = 3
    dend_67 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_36 nseg = 3
    dend_20 nseg = 9
    dend_19 nseg = 5
    dend_12 nseg = 9
    dend_6 nseg = 3
    dend_5 nseg = 7
    dend_43 nseg = 3
    dend_38 nseg = 3
    dend_15 nseg = 3
    dend_10 nseg = 3
    dend_7 nseg = 3
    dend_42 nseg = 5
    dend_41 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_NBC_8c6aecf604_0_0


