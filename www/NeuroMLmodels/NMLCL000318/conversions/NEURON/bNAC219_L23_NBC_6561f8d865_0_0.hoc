// Cell: bNAC219_L23_NBC_6561f8d865_0_0
/*
{
  "id" : "bNAC219_L23_NBC_6561f8d865_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.36225, -9.19447, -1.05898, 3.37379", "-7.5192, -8.3328, -0.983264, 5.59841", "-6.67615, -7.47114, -0.907549, 5.3333", "-5.8331, -6.60947, -0.831834, 5.68073", "-4.99005, -5.7478, -0.756119, 6.02816", "-4.147, -4.88613, -0.680404, 6.37559", "-3.30395, -4.02446, -0.604689, 6.72117", "-2.46089, -3.16279, -0.528974, 6.8656", "-1.61784, -2.30113, -0.453259, 6.93412", "-0.774793, -1.43946, -0.377544, 6.84096", "0.0682572, -0.577789, -0.301829, 6.68704", "0.911308, 0.28388, -0.226114, 6.6716", "1.75436, 1.14555, -0.150399, 6.90842", "2.59741, 2.00722, -0.0746836, 7.45096", "3.44046, 2.86888, 0.00103138, 8.43414", "4.28351, 3.73055, 0.0767464, 9.41614", "5.12656, 4.59222, 0.152461, 10.0048", "5.96961, 5.45389, 0.228176, 10.3326", "6.81266, 6.31556, 0.303891, 9.50982", "7.65571, 7.17723, 0.379606, 7.06842", "8.49876, 8.03889, 0.455321, 3.91086" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.80497, 1.21936, 15.3717, 0.83", "8.2806, -1.79781, 16.3711, 0.83", "8.73247, -4.4794, 17.3321, 0.83", "9.17906, -6.6761, 18.1346, 0.83", "10.2514, -10.9459, 19.713, 1.38", "11.3086, -14.5194, 20.99, 0.83", "12.3431, -17.685, 22.0416, 0.83", "13.3504, -20.5266, 22.945, 0.55", "14.5972, -23.408, 23.7943, 1.11", "15.9775, -25.8714, 24.3846, 0.55", "17.385, -27.8199, 24.6297, 0.55", "19.2449, -29.9508, 24.6548, 0.55", "21.0635, -31.802, 24.4212, 0.55", "22.5724, -33.2477, 24.0042, 0.55", "24.1408, -34.6516, 23.2419, 0.55", "25.9518, -36.3096, 21.9791, 0.55", "26.9627, -37.3136, 21.125, 1.11", "28.5807, -39.1446, 19.5759, 0.28", "29.5299, -40.406, 18.5486, 0.55", "31.7547, -43.789, 15.9763, 0.55", "33.0734, -45.9861, 14.4958, 0.55", "34.6826, -48.8793, 12.7543, 0.28", "35.7974, -50.9805, 11.7141, 0.83", "37.7505, -54.8739, 9.82388, 0.28", "38.3543, -56.1538, 9.22536, 0.55", "39.3606, -58.2426, 8.26757, 0.28", "40.3686, -60.1082, 7.29747, 0.28", "41.1738, -61.4755, 6.41721, 0.83", "44.1979, -66.4029, 2.94135, 0.28", "44.8297, -67.464, 2.19728, 1.11", "46.1854, -69.7935, 0.569649, 0.28", "47.1089, -71.486, -0.623049, 0.83", "49.5566, -76.0612, -3.71061, 0.28", "50.2819, -77.6417, -4.67368, 0.55", "51.0278, -79.6448, -5.59638, 0.28", "51.5042, -81.1632, -6.26725, 1.11", "52.183, -83.7507, -7.41793, 0.28", "52.5412, -85.2739, -8.12243, 0.83", "53.7125, -90.2948, -10.5696, 0.28", "54.8297, -94.7554, -12.928, 0.28", "55.3232, -96.5819, -13.8969, 0.55", "56.0416, -99.0954, -15.181, 0.28", "56.2706, -99.8624, -15.5187, 0.55", "57.046, -102.325, -16.4547, 0.28", "57.6808, -104.148, -16.9653, 0.83", "58.8101, -107.315, -17.5803, 0.28", "59.0826, -108.104, -17.6704, 0.55", "60.2782, -111.635, -17.8149, 0.28", "60.8993, -113.521, -17.8363, 0.55", "61.2499, -114.642, -17.7798, 0.28", "61.7733, -116.343, -17.6992, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.135, 1.69086, 1.42168, 0.83", "11.6384, 1.14403, 0.0557431, 0.83", "13.8304, -0.616975, -2.65528, 1.11", "15.3942, -2.06212, -4.58786, 1.11", "18.3085, -4.64609, -8.04741, 1.38", "20.9804, -6.70352, -10.8155, 1.11", "22.7458, -8.03161, -12.483, 1.66", "25.5157, -10.5751, -15.2527, 0.83", "26.7353, -12.0681, -16.6812, 0.83", "27.7558, -13.6736, -18.1179, 1.11", "29.534, -17.2414, -21.2572, 1.11", "30.412, -18.9376, -22.9284, 1.11", "31.7113, -21.5619, -25.6126, 0.83", "32.8054, -24.1971, -28.3093, 0.83", "33.5078, -26.662, -30.8415, 0.83", "34.0412, -30.0025, -34.2275, 0.83", "34.1565, -35.1314, -39.7221, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.38497, 9.67561, 2.58168, 2.49", "9.88496, 12.7404, 1.65168, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.93503, -6.93964, -4.25832, 0.83", "-11.8414, -6.16722, -4.28559, 0.83", "-15.0611, -4.41385, -4.313, 0.83", "-16.9341, -3.09576, -4.34427, 0.55", "-19.4976, -1.08425, -4.39676, 0.83", "-21.0084, 0.210216, -4.42925, 0.83", "-23.3239, 2.3118, -4.47769, 1.11", "-25.2655, 4.34904, -4.51866, 0.83", "-26.6343, 5.87318, -4.54431, 0.83", "-27.7608, 7.0665, -4.56106, 1.11", "-30.1382, 9.31694, -4.59098, 0.83", "-32.3092, 11.4049, -4.63543, 0.83", "-34.5747, 13.6191, -4.8168, 0.83", "-37.2135, 16.1298, -5.14486, 1.11", "-39.4782, 18.3576, -5.45536, 0.83", "-40.8649, 19.8095, -5.64829, 0.83", "-43.9462, 23.2491, -6.08136, 0.83", "-46.3981, 26.1537, -6.41138, 0.55", "-48.7757, 29.1441, -6.61269, 0.55", "-50.6753, 31.5723, -6.61764, 0.83", "-52.8074, 34.2462, -6.36868, 0.83", "-54.2766, 36.0088, -6.11222, 0.55", "-55.7902, 37.6489, -5.72328, 0.83", "-57.4193, 39.5235, -5.08188, 0.55", "-59.3031, 41.8889, -4.21253, 0.55", "-61.5779, 44.5273, -3.16112, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.47503, -10.5784, -6.25832, 2.49", "-7.5174, -15.9198, -6.17933, 2.49", "-8.12538, -19.0354, -6.13326, 1.66", "-8.71205, -22.0417, -6.0888, 2.77", "-9.22544, -24.6724, -6.0499, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000145978539
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.49876, 8.03889, 0.455321, 0.55", "18.9889, 18.7607, 0.455321, 0.55", "29.479, 29.4825, 0.455321, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "34.1565, -35.1314, -39.7221, 0.55", "35.295, -35.8656, -41.1275, 0.55", "36.5177, -36.8286, -42.5637, 0.55", "40.491, -40.3056, -47.1322, 0.55", "42.0942, -41.6686, -48.8712, 0.55", "43.4941, -42.7329, -50.3136, 0.55", "45.8952, -44.4431, -52.6965, 0.83", "48.2268, -45.9406, -54.9323, 0.83", "50.232, -47.2363, -56.8532, 0.55", "51.2887, -47.9788, -57.9004, 0.55", "53.0863, -49.224, -60.0785, 0.55", "54.314, -50.0102, -61.7117, 0.83", "55.14, -50.5867, -62.9183, 0.28", "56.5805, -51.7262, -65.1947, 0.55", "58.5535, -53.5931, -68.5199, 0.83", "60.3823, -55.5321, -71.4816, 0.55", "61.4204, -56.686, -72.956, 0.55", "62.9854, -58.2436, -74.7433, 0.55", "64.613, -59.6473, -76.1733, 0.28", "65.7453, -60.471, -76.893, 0.83", "69.2432, -62.6452, -78.488, 0.55", "71.4863, -63.7888, -79.2918, 0.28", "74.3069, -64.9096, -80.3105, 0.55", "75.9141, -65.4058, -80.8579, 0.28", "77.4068, -65.817, -81.3123, 0.55", "79.3131, -66.2519, -81.981, 0.28", "81.1044, -66.5871, -82.7163, 0.55", "83.905, -67.0532, -84.0472, 0.28", "85.4179, -67.3521, -84.9259, 0.55", "86.9174, -67.771, -85.9541, 0.55", "88.6381, -68.2808, -88.0645, 0.28", "89.2075, -68.4277, -88.9389, 0.28", "89.9258, -68.6328, -90.2671, 0.55", "91.4652, -69.11, -93.4701, 0.28", "92.7137, -69.5037, -96.2647, 0.83", "97.6781, -71.0658, -107.761, 0.28", "98.2025, -71.2239, -109.049, 0.55", "99.2604, -71.5069, -111.734, 0.55", "100.31, -71.7893, -114.466, 0.28", "101.116, -71.9892, -116.476, 0.55", "103.851, -72.6371, -122.85, 0.55", "106.364, -73.4392, -127.814, 0.55", "107.586, -73.8267, -130.126, 0.28", "108.446, -74.0645, -131.654, 0.55", "109.229, -74.3084, -133.009, 0.28", "110.336, -74.8018, -134.817, 0.55", "111.279, -75.4199, -136.258, 0.28", "112.316, -76.2524, -137.839, 0.55", "113.161, -76.9567, -139.336, 0.55", "114.4, -77.9301, -141.652, 0.28", "115.683, -78.9755, -144.065, 0.55", "117.242, -80.31, -147.104, 0.28", "118.279, -81.2348, -149.139, 0.55", "120.237, -83.2032, -152.976, 0.28", "120.746, -83.6902, -153.854, 0.55", "121.948, -84.7525, -155.69, 0.28", "123.772, -86.3338, -158.16, 0.55", "125.174, -87.548, -159.782, 0.28", "126.573, -88.8146, -161.295, 0.55", "127.817, -90.0224, -162.616, 0.28", "129.139, -91.356, -164.145, 0.55", "129.709, -91.9277, -164.902, 0.28", "130.468, -92.638, -166.171, 0.55", "131.398, -93.5967, -168.209, 0.28", "131.73, -93.9394, -169.012, 0.55", "131.973, -94.205, -169.649, 0.28", "132.872, -95.305, -172.176, 0.55", "135.032, -98.3377, -178.945, 0.28", "135.447, -99.0142, -180.443, 0.55", "135.809, -99.75, -181.898, 0.28", "136.097, -100.365, -182.954, 0.28", "136.509, -101.257, -184.326, 0.55", "137.426, -103.35, -186.853, 0.28", "138.276, -105.09, -188.665, 0.55", "139.189, -106.716, -190.235, 0.28", "140.44, -108.777, -192.013, 0.28", "142.171, -111.464, -193.742, 0.83", "143.657, -113.686, -194.703, 0.28", "146.248, -117.874, -195.52, 0.55", "148.002, -121.094, -195.681, 0.28", "148.68, -122.456, -195.637, 0.55", "150.74, -127.306, -195.058, 0.28", "151.568, -129.523, -194.657, 0.55", "152.671, -132.742, -194.072, 0.28", "153.166, -134.303, -193.782, 0.28", "153.653, -135.818, -193.665, 0.55", "154.678, -138.642, -193.641, 0.28", "155.903, -141.508, -193.951, 0.28", "156.56, -142.913, -194.171, 0.55", "158.133, -145.93, -194.792, 0.28", "159.452, -148.327, -195.333, 0.55", "160.938, -151.042, -196.041, 0.28", "161.987, -152.779, -196.713, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "34.1565, -35.1314, -39.7221, 1.11", "35.1061, -38.2116, -40.4927, 1.11", "36.3205, -41.6219, -41.4454, 0.55", "37.2201, -43.9864, -42.1274, 0.55", "38.3509, -46.8131, -42.9154, 0.55", "39.2887, -49.1546, -43.491, 0.55", "40.3543, -51.7849, -44.1213, 0.83", "41.4137, -54.3171, -44.6846, 0.55", "42.232, -56.114, -44.9815, 0.28", "42.9641, -57.6871, -45.1899, 0.55", "44.0618, -60.1651, -45.3712, 0.28", "44.7012, -61.6427, -45.4142, 0.55", "45.7859, -64.1003, -45.5781, 0.55", "46.6468, -65.7567, -45.767, 0.28", "47.0917, -66.4561, -45.9267, 0.55", "48.2803, -68.1014, -46.467, 0.28", "50.4922, -70.8117, -47.483, 0.55", "52.8653, -73.4085, -48.4636, 0.28", "54.646, -75.1385, -49.2036, 0.83", "57.1756, -77.3898, -50.1611, 0.28", "59.4382, -79.3817, -51.0325, 0.55", "61.1621, -80.8818, -51.6815, 0.28", "63.6064, -83.0659, -52.4752, 0.55", "65.2538, -84.5875, -52.9467, 0.55", "67.4287, -86.747, -53.5937, 0.55", "69.2522, -88.6929, -54.1296, 0.28", "70.7358, -90.3462, -54.552, 0.55", "71.6078, -91.4256, -54.8265, 0.28", "72.5368, -92.6458, -55.0797, 0.55", "73.278, -93.6222, -55.1904, 0.28", "74.5569, -95.2231, -55.2369, 0.55", "75.9317, -96.8566, -55.1059, 0.28", "77.8756, -99.1314, -54.8157, 0.55", "79.429, -100.911, -54.5102, 0.55", "81.2286, -102.957, -54.0861, 0.28", "82.6344, -104.631, -53.7292, 0.55", "84.0173, -106.346, -53.3471, 0.28", "85.0919, -107.738, -53.0838, 0.55", "85.6736, -108.538, -52.9301, 0.28", "85.9845, -109.002, -52.8804, 0.55", "87.1157, -110.717, -52.8398, 0.28", "88.583, -112.929, -52.99, 0.55", "89.4878, -114.203, -53.1324, 0.28", "90.5009, -115.529, -53.2957, 0.55", "91.9779, -117.337, -53.5426, 0.28", "92.9366, -118.442, -53.5688, 0.55", "93.9766, -119.569, -53.5672, 0.28", "95.2446, -120.968, -53.5563, 0.55", "96.5439, -122.352, -53.5344, 0.28", "97.3635, -123.178, -53.5307, 0.83", "100.31, -126.026, -53.4449, 0.28", "102.477, -128.038, -53.3949, 0.28", "103.673, -129.113, -53.3658, 0.55", "104.596, -129.878, -53.4194, 0.28", "106.517, -131.282, -53.7135, 0.55", "107.872, -132.123, -53.9884, 0.28", "109.611, -132.949, -54.4232, 0.55", "111.26, -133.532, -54.7652, 0.28", "113.15, -134.019, -55.1365, 0.55", "115.397, -134.455, -55.6773, 0.28", "116.792, -134.636, -56.0598, 0.55", "119.287, -134.863, -56.8345, 0.28", "121.065, -134.95, -57.394, 0.55", "122.521, -134.973, -57.8235, 0.28", "124.791, -135.028, -58.3023, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "9.88496, 12.7404, 1.65168, 1.38", "8.96674, 14.585, -0.670287, 1.38", "7.82378, 17.4143, -4.60002, 1.38", "7.37197, 19.295, -7.80499, 1.38", "6.92435, 21.7962, -12.0495, 1.11", "6.60099, 23.658, -15.185, 1.11", "6.17177, 25.2318, -17.9286, 0.83", "5.62717, 26.584, -20.8187, 0.83", "3.95065, 29.3926, -27.1289, 1.66", "3.14943, 30.522, -29.2135, 0.55", "2.78106, 31.0918, -29.9589, 0.55", "0.584212, 34.2315, -33.2139, 0.55", "-0.491303, 35.5765, -34.3823, 0.28", "-3.10785, 38.8893, -36.6652, 0.83", "-7.04194, 44.5256, -39.6193, 0.55", "-8.64648, 47.3725, -40.9619, 0.55", "-9.71305, 50.03, -42.0094, 0.55", "-10.0333, 51.3445, -42.4249, 0.55", "-10.3712, 53.4789, -42.9031, 0.83", "-10.5136, 56.2813, -43.2744, 0.55", "-10.4593, 58.2867, -43.2762, 0.55", "-10.2835, 61.0992, -43.363, 0.55", "-10.1421, 62.6972, -43.4535, 0.55", "-9.9887, 65.5366, -43.7216, 0.55", "-9.97271, 67.3536, -43.949, 0.55", "-10.0451, 69.7277, -44.4708, 0.83", "-10.253, 72.4361, -45.2596, 0.28", "-10.4922, 74.2944, -45.9033, 0.83", "-10.8885, 77.112, -46.9316, 0.28", "-11.153, 79.1029, -47.686, 0.83", "-11.6926, 83.1816, -49.21, 0.28", "-11.8732, 84.7615, -49.819, 0.28", "-12.0099, 86.1779, -50.3592, 0.55", "-12.194, 89.4521, -51.7131, 0.83", "-12.2403, 91.2545, -52.4569, 0.28", "-12.2688, 92.1939, -52.8516, 0.55", "-12.3698, 95.3444, -54.0946, 0.28", "-12.4782, 97.2919, -54.9705, 0.83", "-12.7009, 99.2393, -55.9407, 0.28", "-13.0644, 100.775, -56.7771, 0.55", "-13.6115, 102.592, -57.7874, 0.28", "-13.8515, 103.314, -58.1652, 0.55", "-14.505, 105.154, -59.0404, 0.28", "-14.8119, 106.13, -59.5267, 0.55", "-15.7132, 109.489, -61.1506, 0.83", "-16.1037, 111.329, -62.0393, 0.55", "-16.3305, 113.26, -62.9645, 0.28", "-16.4036, 114.762, -63.6852, 0.83", "-16.3087, 118.121, -65.3681, 0.55", "-16.1722, 119.766, -66.2358, 0.28", "-16.0242, 120.591, -66.6882, 0.55", "-15.5334, 122.974, -67.9947, 0.28", "-15.3973, 123.516, -68.2905, 0.55", "-14.6438, 126.256, -69.6502, 0.28", "-14.2535, 127.683, -70.3009, 0.83", "-13.4697, 130.592, -71.5461, 0.28", "-13.1437, 131.891, -72.0077, 0.55", "-12.634, 134.204, -72.6645, 0.28", "-12.2423, 136.002, -73.0876, 0.55", "-11.6075, 139.208, -73.6574, 0.28", "-11.1827, 141.627, -74.7108, 0.55", "-10.827, 144.14, -76.2392, 0.55", "-10.3979, 147.346, -78.5799, 0.28", "-10.1765, 149.032, -79.9633, 0.55", "-9.92396, 150.953, -81.6839, 0.55", "-8.41564, 162.347, -92.5777, 0.55", "-8.22283, 163.775, -94.0289, 0.28", "-8.10516, 164.594, -94.8928, 0.55", "-7.93914, 165.829, -96.1898, 0.28", "-7.83445, 166.662, -96.9862, 0.55", "-7.59767, 168.362, -98.0792, 0.55", "-7.40309, 169.766, -98.1834, 0.28", "-7.1632, 171.542, -98.4227, 0.55", "-7.01583, 172.935, -98.6791, 0.55", "-6.96596, 173.749, -98.888, 0.28", "-6.91396, 176.101, -99.6345, 0.55", "-6.95551, 177.995, -100.386, 0.55", "-6.98051, 179.183, -100.88, 0.28", "-6.97845, 179.754, -101.126, 0.55", "-6.93513, 181.619, -101.887, 0.28", "-6.92576, 182.724, -102.291, 0.55", "-6.89337, 184.626, -102.952, 0.28", "-6.79861, 187.696, -103.966, 0.55", "-6.60271, 191.502, -105.17, 0.28", "-6.43646, 194.097, -105.91, 0.55", "-6.29297, 196.024, -106.402, 0.55", "-6.08834, 198.587, -107.0, 0.55", "-5.90785, 200.605, -107.386, 0.28", "-5.7145, 202.988, -107.75, 0.55", "-5.44034, 205.513, -107.985, 0.55", "-5.38192, 205.906, -108.009, 0.28", "-5.18795, 206.914, -108.066, 0.28", "-4.49106, 210.062, -108.223, 0.55", "-3.89039, 212.241, -108.449, 0.83", "-3.25871, 214.168, -108.639, 0.28", "-2.67354, 215.658, -108.78, 0.55", "-1.36361, 218.417, -108.766, 0.28", "-0.142522, 220.53, -108.56, 0.55", "1.67877, 223.073, -108.063, 0.28", "3.83184, 225.558, -107.351, 0.55", "5.41394, 227.08, -106.803, 0.55", "8.95874, 230.169, -105.385, 0.28", "10.2222, 231.136, -104.783, 0.28", "11.3084, 231.869, -104.219, 0.55", "13.05, 232.913, -103.278, 0.28", "15.8969, 234.445, -102.214, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.88496, 12.7404, 1.65168, 0.83", "11.1097, 16.0174, 0.170313, 0.83", "12.5511, 19.0313, -1.24195, 0.83", "14.5633, 22.1297, -2.86054, 0.83", "16.4886, 24.6444, -4.45448, 1.38", "17.8987, 26.4793, -5.72027, 0.83", "19.0832, 28.0021, -6.9843, 0.55", "21.0712, 30.431, -9.43723, 0.55", "23.1717, 32.7961, -12.0646, 0.83", "25.4318, 35.013, -14.8716, 0.83", "27.415, 36.747, -17.4285, 0.83", "30.6034, 39.5143, -21.8027, 0.55", "31.1732, 40.0995, -22.7563, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-61.5779, 44.5273, -3.16112, 0.55", "-63.5036, 47.0019, -4.41333, 0.55", "-65.382, 49.4788, -5.84818, 0.55", "-66.71, 51.1059, -7.06716, 0.55", "-68.7311, 53.4553, -9.20831, 0.55", "-69.9251, 54.8234, -10.5833, 0.28", "-71.1969, 56.2491, -12.0215, 0.83", "-73.5508, 58.6993, -15.0425, 0.55", "-75.2555, 60.5057, -17.5255, 0.55", "-76.479, 61.844, -19.4247, 0.28", "-77.5951, 63.0958, -21.136, 0.55", "-79.1066, 64.8, -23.2563, 0.55", "-81.1826, 67.3287, -26.083, 0.55", "-82.5916, 69.38, -27.856, 0.28", "-83.7527, 71.4147, -29.1239, 0.55", "-84.7172, 73.2998, -30.0187, 0.28", "-85.7077, 75.4978, -30.8498, 0.55", "-86.1095, 76.4514, -31.1278, 0.55", "-86.7766, 78.0036, -31.4628, 0.55", "-87.7159, 80.0792, -31.9216, 0.28", "-88.6211, 82.0796, -32.4322, 0.55", "-89.5017, 83.8972, -32.9642, 0.28", "-91.1184, 86.8595, -33.991, 0.55", "-92.1967, 88.6344, -34.6789, 0.28", "-92.4002, 88.9445, -34.8283, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-61.5779, 44.5273, -3.16112, 0.55", "-63.1317, 46.8155, -2.48668, 0.55", "-64.2009, 48.2005, -2.10965, 0.55", "-66.5824, 50.8463, -1.31865, 0.55", "-67.9669, 52.1587, -0.919266, 0.83", "-69.5084, 53.3894, -0.491215, 0.55", "-71.8086, 55.2259, 0.147533, 0.55", "-73.1442, 56.2844, 0.549864, 0.55", "-75.8843, 58.1716, 1.34923, 0.83", "-78.288, 59.4325, 1.96647, 0.83", "-81.3766, 60.8616, 2.59357, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.22544, -24.6724, -6.0499, 2.49", "-8.62946, -27.6513, -5.92572, 2.49", "-8.15726, -30.0115, -5.82733, 1.38", "-8.08793, -30.358, -5.81288, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.22544, -24.6724, -6.0499, 1.38", "-11.5729, -28.9482, 0.623888, 1.38", "-12.4853, -30.6101, 3.21774, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.479, 29.4825, 0.455321, 0.524975", "39.9692, 40.2043, 0.455321, 0.524975", "50.4593, 50.9261, 0.455321, 0.524975" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "31.1732, 40.0995, -22.7563, 0.55", "31.6733, 41.4574, -22.9258, 0.55", "32.3885, 43.3561, -23.2506, 0.83", "33.0207, 44.9807, -23.6464, 0.55", "33.9716, 47.2713, -24.254, 0.28", "34.9933, 49.6558, -24.8945, 0.55", "36.3964, 52.7808, -25.7344, 0.55", "38.2877, 56.6279, -26.7974, 0.55", "39.8368, 59.5342, -27.5845, 0.55", "40.7624, 61.151, -27.9955, 0.83", "41.6142, 62.477, -28.292, 0.28", "42.2273, 63.3772, -28.4735, 0.28", "43.6101, 65.1652, -28.7463, 0.55", "45.409, 67.0133, -28.8606, 0.83", "46.853, 68.3697, -28.8606, 0.83", "48.2594, 69.6216, -28.8606, 0.28", "49.1879, 70.4536, -28.8668, 0.55", "50.8308, 71.9903, -28.9131, 0.55", "53.0685, 74.1115, -29.0179, 0.55", "55.0484, 76.0977, -29.142, 0.83", "56.9724, 78.2843, -29.3659, 0.28", "58.5425, 80.3623, -29.63, 0.55", "59.1578, 81.2855, -29.7817, 0.55", "60.1804, 83.0491, -30.1128, 0.55", "61.6487, 85.8589, -30.6701, 0.83", "62.9386, 88.3389, -31.2214, 0.28", "63.8483, 90.0691, -31.6141, 0.55", "65.6435, 93.2669, -32.3852, 0.55", "66.5353, 94.7991, -32.7689, 0.55", "67.9346, 97.1443, -33.4325, 0.83", "69.8243, 100.16, -34.3571, 0.28", "71.466, 102.622, -35.1181, 0.55", "73.429, 105.483, -36.0396, 0.28", "74.4454, 107.016, -36.563, 0.55", "75.4889, 108.588, -37.152, 0.28", "75.6987, 108.893, -37.2774, 0.55", "76.5257, 110.055, -37.7861, 0.28", "77.3157, 111.12, -38.2761, 0.55", "78.4013, 112.55, -38.8672, 0.28", "79.5052, 113.94, -39.3737, 0.55", "81.2056, 115.963, -40.0203, 0.55", "82.4228, 117.415, -40.4491, 0.28", "83.3596, 118.562, -40.7347, 0.55", "84.2776, 119.719, -40.9559, 0.28", "85.5169, 121.341, -41.178, 0.55", "87.2927, 123.747, -41.3314, 0.28", "88.1121, 124.929, -41.3294, 0.28", "89.8763, 127.611, -41.1808, 0.55", "91.0796, 129.446, -41.0668, 0.28", "92.1557, 131.072, -41.0191, 0.55", "93.3076, 132.823, -41.0056, 0.28", "93.9538, 133.817, -41.0149, 0.55", "94.7053, 134.943, -41.0651, 0.28", "95.9858, 136.972, -41.3048, 0.55", "96.9962, 138.691, -41.577, 0.28", "98.2883, 141.144, -42.0746, 0.55", "98.9635, 142.582, -42.43, 0.28", "99.5301, 143.834, -42.7537, 0.55", "100.359, 145.779, -43.25, 0.28", "101.164, 147.818, -43.7218, 0.55", "101.952, 149.852, -44.1383, 0.28", "102.527, 151.285, -44.4496, 0.55", "103.372, 153.246, -44.8615, 0.28", "103.814, 154.157, -45.0094, 0.55", "104.851, 156.226, -45.2935, 0.55", "106.03, 158.619, -45.4652, 0.55", "107.157, 160.841, -45.5572, 0.28", "107.985, 162.459, -45.5848, 0.55", "109.954, 166.473, -45.5349, 0.28", "110.736, 168.045, -45.4858, 0.55", "112.169, 170.959, -45.2632, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "31.1732, 40.0995, -22.7563, 0.55", "32.7188, 42.3651, -23.8534, 0.55", "33.9339, 44.2235, -24.6387, 0.55", "34.5324, 45.1168, -25.1698, 0.28", "34.9247, 45.7623, -25.6291, 0.83", "35.7558, 47.2729, -26.7324, 0.55", "36.1647, 48.1461, -27.3961, 0.28", "37.1334, 50.829, -29.5635, 0.83", "38.3195, 54.4147, -32.7951, 0.55", "38.8661, 56.0252, -34.3498, 0.28", "39.0958, 56.7496, -35.2178, 0.83", "39.6792, 58.7015, -37.7994, 0.55", "40.2174, 60.7802, -40.5694, 0.55", "40.4838, 62.2202, -42.4769, 0.28", "40.6644, 63.3388, -43.8682, 0.83", "41.5526, 68.3835, -49.8004, 0.55", "41.7945, 69.7417, -51.3123, 0.55", "42.0351, 71.1613, -52.7219, 0.83", "42.3954, 73.8654, -55.03, 0.55", "42.573, 75.2756, -56.085, 0.83", "42.8403, 77.2172, -57.3449, 0.28", "43.032, 78.4831, -57.9249, 0.55", "43.3787, 80.8466, -59.0293, 0.28", "43.5528, 81.8955, -59.5299, 0.55", "43.9316, 83.8491, -60.392, 0.28", "44.1756, 84.967, -60.929, 0.55", "44.6383, 86.9639, -61.9197, 0.28", "45.2089, 89.1184, -63.1028, 0.83", "46.1641, 92.2634, -64.9388, 0.28", "46.613, 93.5505, -65.7559, 0.83", "47.6725, 96.2807, -67.579, 0.28", "47.8364, 96.68, -67.859, 0.55", "48.7531, 98.4911, -69.1498, 0.28", "49.185, 99.2883, -69.779, 0.83", "50.2147, 101.132, -71.3893, 0.28", "50.9677, 102.423, -72.613, 0.55", "52.2208, 104.537, -74.6721, 0.28", "53.5716, 106.823, -76.8951, 0.28", "55.4291, 109.997, -79.9804, 0.83", "56.8742, 112.37, -82.2317, 0.55", "57.9877, 114.145, -83.8266, 0.28", "58.5353, 114.958, -84.5318, 0.55", "59.638, 116.554, -85.8412, 0.28", "60.1714, 117.382, -86.5304, 0.55", "61.8227, 120.067, -88.8163, 0.28", "62.9606, 121.858, -90.5244, 0.55", "64.6283, 124.356, -93.1876, 0.28", "65.3938, 125.451, -94.4844, 0.55", "67.762, 128.823, -98.8183, 1.38", "69.8256, 131.757, -102.737, 0.28", "70.9508, 133.337, -104.95, 0.55", "71.9343, 134.689, -106.851, 0.28", "72.7014, 135.807, -108.307, 0.28", "73.2259, 136.592, -109.235, 0.55", "73.9561, 137.763, -110.374, 0.55", "74.8288, 139.487, -111.897, 0.28", "75.1686, 140.364, -112.705, 0.55", "75.892, 142.587, -114.733, 0.28", "76.3209, 143.98, -116.011, 0.55", "76.8465, 145.923, -117.854, 0.28", "77.1941, 147.503, -119.321, 0.55", "77.737, 150.793, -122.226, 0.28", "78.0278, 152.738, -123.81, 0.28", "78.4425, 155.272, -125.747, 0.55", "78.9114, 158.0, -127.725, 0.28", "79.176, 159.655, -128.912, 0.28", "79.5275, 161.295, -130.039, 0.28", "79.9253, 162.919, -131.119, 0.55", "80.4514, 164.652, -132.309, 0.55", "81.4127, 167.272, -134.103, 0.28", "82.0567, 168.649, -135.05, 0.83", "83.4752, 171.229, -136.771, 0.55", "84.4832, 172.908, -137.791, 0.28", "85.3267, 174.293, -138.579, 0.55", "86.585, 176.339, -139.53, 0.28", "87.9452, 178.262, -140.26, 0.55", "89.4845, 180.234, -140.895, 0.28", "90.6731, 181.588, -141.289, 0.55", "92.6078, 183.563, -141.798, 0.28", "94.0074, 184.84, -142.088, 0.55", "96.6595, 187.007, -142.474, 0.28", "97.4168, 187.544, -142.573, 0.55", "100.706, 189.43, -142.986, 0.28", "101.535, 189.843, -143.069, 0.55", "103.316, 190.592, -143.192, 0.28", "104.166, 190.901, -143.286, 0.55", "105.525, 191.28, -143.41, 0.28", "106.998, 191.544, -143.553, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-92.4002, 88.9445, -34.8283, 0.28", "-92.447, 90.8115, -35.1827, 0.28", "-92.5811, 93.1215, -35.5729, 0.83", "-92.7156, 96.6579, -36.2409, 0.28", "-92.7385, 97.4314, -36.4432, 0.55", "-92.7733, 98.7719, -36.8449, 0.28", "-92.8048, 99.8914, -37.2066, 0.55", "-92.8501, 101.202, -37.7277, 0.28", "-92.8954, 103.009, -38.5532, 0.55", "-93.0115, 105.144, -39.6579, 0.55", "-93.143, 106.719, -40.5209, 0.28", "-93.5727, 110.8, -42.6744, 0.55", "-93.9376, 113.413, -43.9162, 0.28", "-94.0631, 114.108, -44.2011, 0.55", "-94.7332, 117.236, -45.2384, 0.28", "-95.2311, 119.513, -45.8241, 0.55", "-95.7416, 121.894, -46.3133, 0.28", "-96.3651, 124.919, -46.8274, 0.55", "-96.796, 127.42, -47.1798, 0.28", "-96.9744, 128.82, -47.3921, 0.55", "-97.1072, 130.213, -47.6235, 0.28", "-97.2355, 132.12, -48.1263, 0.55", "-97.4124, 135.582, -49.3731, 0.28", "-97.528, 137.446, -50.2275, 0.55", "-97.7662, 139.946, -51.4924, 0.28", "-97.9488, 141.066, -52.0786, 0.55", "-98.702, 144.114, -53.7484, 0.28", "-98.8738, 144.65, -54.0387, 0.55", "-99.722, 146.889, -55.2204, 0.28", "-100.257, 148.188, -55.8479, 1.11", "-101.397, 150.981, -56.8861, 0.28", "-102.338, 153.384, -57.5223, 0.28", "-102.87, 154.712, -57.7357, 0.55", "-103.797, 157.159, -58.027, 0.28", "-104.476, 158.997, -58.1443, 0.55", "-105.495, 161.694, -58.2726, 0.28", "-106.015, 163.006, -58.2784, 0.55", "-106.693, 164.669, -58.227, 0.28", "-107.057, 165.489, -58.2182, 0.55", "-107.579, 166.55, -58.2539, 0.28", "-108.003, 167.329, -58.4255, 0.55", "-108.828, 168.759, -58.8869, 0.28", "-109.36, 169.691, -59.2432, 0.55", "-109.639, 170.211, -59.4761, 0.28", "-110.062, 171.02, -59.882, 0.55", "-110.739, 172.332, -60.6218, 0.28", "-111.757, 174.245, -61.715, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-92.4002, 88.9445, -34.8283, 0.55", "-93.9202, 90.0834, -36.1644, 0.55", "-95.3816, 91.2047, -37.5126, 0.28", "-96.95, 92.3658, -39.0653, 0.83", "-98.9955, 93.8646, -41.2104, 0.83", "-100.737, 95.1443, -43.0543, 0.55", "-102.381, 96.3652, -44.7811, 0.28", "-103.328, 97.1, -45.8467, 0.55", "-104.816, 98.2858, -47.5172, 0.28", "-105.323, 98.7002, -48.0764, 0.55", "-106.514, 99.7202, -49.2188, 0.28", "-107.057, 100.259, -49.6533, 0.55", "-108.178, 101.523, -50.3465, 0.28", "-108.55, 101.988, -50.552, 0.55", "-109.701, 103.627, -51.1149, 0.28", "-109.848, 103.848, -51.194, 0.55", "-110.593, 105.053, -51.6749, 0.28", "-111.118, 105.96, -52.1226, 0.55", "-112.265, 108.002, -53.1162, 0.28", "-112.621, 108.679, -53.4663, 0.55", "-113.151, 109.707, -54.0047, 0.28", "-113.27, 109.923, -54.1377, 0.55", "-114.331, 111.716, -55.2059, 0.28", "-115.073, 112.972, -55.9052, 0.55", "-115.675, 114.006, -56.484, 0.28", "-116.678, 115.776, -57.525, 0.55", "-118.901, 119.907, -60.2751, 0.28", "-120.156, 122.316, -61.9517, 0.28", "-120.692, 123.42, -62.7321, 0.55", "-121.511, 125.282, -64.1118, 0.28", "-121.887, 126.202, -64.7805, 0.55", "-123.042, 129.239, -66.8159, 0.28", "-123.606, 130.886, -67.7933, 0.28", "-124.012, 132.061, -68.4617, 0.55", "-125.487, 136.07, -70.4829, 0.28", "-125.864, 137.071, -70.9345, 0.55", "-127.797, 142.013, -72.9993, 0.28", "-128.022, 142.567, -73.1925, 0.55", "-128.572, 143.884, -73.6698, 0.28", "-129.249, 145.349, -74.1729, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-81.3766, 60.8616, 2.59357, 0.83", "-83.1838, 61.7313, 2.75147, 0.83", "-85.0041, 62.7218, 2.78194, 0.28", "-86.5925, 63.5461, 2.70633, 0.55", "-87.7627, 64.1222, 2.6358, 0.55", "-88.76, 64.6481, 2.58582, 0.28", "-89.9925, 65.3127, 2.61872, 0.55", "-90.9814, 65.9858, 2.66849, 0.28", "-92.438, 67.0757, 2.80063, 0.55", "-93.2631, 67.7594, 2.95271, 0.83", "-94.9505, 69.2995, 3.3985, 0.83", "-97.3016, 71.4279, 4.24614, 0.55", "-99.5855, 73.4387, 5.21402, 0.55", "-101.089, 74.7676, 5.9294, 0.55", "-103.12, 76.6318, 6.98024, 0.55", "-104.705, 78.0381, 7.79865, 0.55", "-106.331, 79.4214, 8.60672, 0.55", "-107.728, 80.533, 9.20022, 0.55", "-108.524, 81.0943, 9.53762, 0.28", "-108.952, 81.4031, 9.71234, 0.55", "-110.087, 82.1338, 10.0686, 0.55", "-111.906, 83.3771, 10.5313, 0.55", "-115.345, 86.1496, 11.1771, 0.55", "-121.43, 93.515, 14.545, 0.55", "-127.36, 101.139, 17.6284, 0.55", "-134.135, 107.852, 20.9766, 0.55", "-139.59, 115.974, 23.7057, 0.55", "-144.756, 123.931, 27.3185, 0.55", "-149.295, 131.937, 31.6069, 0.55", "-154.375, 138.616, 37.2397, 0.55", "-158.275, 146.249, 42.656, 0.55", "-160.655, 153.394, 49.4196, 0.55", "-161.632, 160.257, 56.7826, 0.55", "-163.284, 167.093, 64.0478, 0.55", "-165.873, 174.238, 70.7347, 0.55", "-167.965, 180.439, 78.4169, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-81.3766, 60.8616, 2.59357, 0.83", "-83.6324, 63.6317, 2.77184, 0.83", "-85.6728, 66.0909, 2.90284, 0.83", "-87.605, 68.5105, 3.00471, 0.83", "-88.6005, 69.7582, 3.04849, 0.55", "-90.2611, 71.8428, 3.11015, 0.83", "-92.0137, 73.9679, 3.18605, 0.55", "-93.873, 76.1437, 3.28292, 0.55", "-96.2565, 78.9214, 3.46322, 0.83", "-97.9124, 80.828, 3.59478, 0.55", "-99.8318, 83.0265, 3.72865, 0.55", "-101.252, 84.5535, 3.81865, 0.55", "-104.166, 87.4169, 3.97349, 0.83", "-105.902, 88.906, 4.02968, 0.55", "-107.116, 89.8009, 4.0416, 1.11", "-108.599, 90.7281, 4.07412, 0.55", "-110.351, 91.6178, 4.2098, 0.55", "-113.078, 92.7885, 4.56549, 0.83", "-115.305, 93.5115, 4.95064, 0.55", "-117.489, 94.2537, 5.47956, 0.55", "-119.886, 95.1526, 6.19481, 0.55", "-123.688, 96.5752, 7.52554, 0.83", "-125.507, 97.2814, 8.21638, 0.55", "-128.042, 98.204, 9.18901, 0.55", "-131.286, 99.5059, 10.3634, 0.55", "-132.684, 100.106, 10.7985, 0.55", "-135.628, 101.494, 11.5052, 0.28", "-136.893, 102.098, 11.7392, 0.83", "-139.476, 103.246, 12.119, 0.28", "-142.466, 104.514, 12.3362, 0.28", "-144.205, 105.181, 12.3263, 0.28", "-145.342, 105.663, 12.2289, 0.28", "-145.837, 105.907, 12.1354, 0.55", "-148.295, 107.108, 11.535, 0.28", "-150.302, 108.15, 10.9161, 0.28", "-152.143, 109.019, 10.2753, 0.55", "-154.045, 109.956, 9.59616, 0.28", "-154.896, 110.37, 9.31594, 0.55", "-156.109, 110.948, 8.98218, 0.28", "-156.979, 111.404, 8.80448, 0.55", "-158.022, 111.875, 8.74655, 0.28", "-159.178, 112.3, 8.62549, 0.55", "-160.294, 112.712, 8.52915, 0.28", "-161.148, 113.037, 8.43424, 0.55", "-162.217, 113.449, 8.3093, 0.28", "-163.071, 113.81, 8.21251, 0.55", "-166.147, 115.25, 7.77979, 0.28", "-168.002, 116.064, 7.59204, 0.55", "-169.268, 116.627, 7.45426, 1.11", "-171.034, 117.429, 7.25979, 0.55", "-172.638, 118.134, 7.1133, 0.55", "-175.519, 119.436, 6.93525, 0.55", "-177.605, 120.391, 7.0905, 0.55", "-186.502, 124.775, 8.68411, 0.55", "-195.019, 130.141, 8.91032, 0.55", "-202.621, 136.79, 8.52485, 0.55", "-210.788, 142.321, 6.48244, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.08793, -30.358, -5.81288, 0.83", "-8.04215, -33.0325, -6.68231, 0.83", "-7.99847, -35.584, -7.51182, 0.83", "-7.91215, -40.6263, -9.15101, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.08793, -30.358, -5.81288, 0.55", "-8.61227, -32.1376, -4.73997, 0.55", "-9.56637, -34.8621, -3.20301, 0.55", "-11.2254, -39.0831, -1.062, 0.55", "-12.0839, -41.1532, -0.0112207, 0.55", "-13.6337, -45.1012, 2.27698, 0.83", "-14.4276, -47.0401, 3.51166, 0.55", "-15.0646, -48.5852, 4.58541, 0.55", "-15.7892, -50.2914, 5.75802, 0.55", "-17.2543, -53.3836, 7.82362, 0.83", "-19.4487, -57.9614, 10.956, 0.55", "-20.5689, -60.2772, 12.5241, 0.55", "-21.6914, -62.5756, 14.1375, 0.55", "-23.5534, -66.4717, 16.8209, 0.55", "-25.2536, -69.9519, 19.1865, 0.55", "-26.3332, -72.0285, 20.5086, 0.83", "-28.6556, -76.1977, 22.8871, 0.55", "-29.7787, -78.1818, 23.9828, 0.55", "-32.0988, -82.1779, 26.2169, 0.55", "-33.8352, -85.0844, 27.8579, 0.28", "-35.0407, -87.1101, 28.9183, 0.28", "-37.2936, -90.6327, 30.7007, 0.28", "-38.6398, -92.6499, 31.5941, 0.55", "-42.9241, -101.185, 35.1033, 0.55", "-48.9022, -109.106, 37.2351, 0.55", "-56.2915, -115.999, 37.6473, 0.55", "-64.3644, -121.973, 36.7193, 0.55", "-73.317, -126.54, 36.7421, 0.55", "-81.9813, -131.541, 37.8031, 0.55", "-90.9964, -135.91, 37.0579, 0.55", "-100.15, -139.99, 37.6681, 0.55", "-108.359, -145.792, 36.9167, 0.55", "-117.355, -149.667, 34.731, 0.55", "-126.557, -151.465, 31.2314, 0.55", "-136.201, -151.244, 28.5937, 0.55", "-146.173, -151.499, 27.8953, 0.55", "-156.12, -152.367, 27.3065, 0.55", "-165.889, -152.449, 25.1718, 0.55", "-175.841, -153.364, 24.7658, 0.55", "-185.84, -153.426, 24.8012, 0.55", "-195.705, -152.475, 26.1513, 0.55", "-204.869, -150.167, 29.4609, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.4853, -30.6101, 3.21774, 0.83", "-14.4826, -32.3413, -0.775637, 0.83", "-15.3353, -33.0804, -2.48054, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.4853, -30.6101, 3.21774, 0.55", "-11.7373, -33.3428, 1.60685, 0.55", "-10.9457, -37.7548, -0.406027, 0.55", "-10.6699, -39.2449, -1.10355, 0.55", "-10.4504, -40.305, -1.76386, 0.55", "-10.0888, -42.1936, -3.11598, 0.55", "-9.73468, -44.4493, -4.97007, 0.55", "-9.66889, -46.1804, -6.66182, 0.28", "-9.69245, -47.5824, -8.14819, 0.83", "-9.68554, -51.1564, -12.2331, 0.55", "-9.64366, -52.747, -14.0147, 0.83", "-9.60882, -54.8151, -16.2569, 0.55", "-9.5465, -56.8241, -18.2881, 0.55", "-9.46548, -57.8466, -19.2305, 0.55", "-9.24916, -59.6826, -20.6667, 0.83", "-8.63772, -63.619, -23.2808, 0.83", "-8.16894, -66.3026, -25.0322, 0.55", "-7.92466, -67.6071, -25.703, 0.55", "-7.42008, -70.317, -26.8193, 0.83", "-7.25626, -71.4377, -27.1928, 0.55", "-6.96593, -73.7007, -27.9237, 0.83", "-6.42324, -78.1004, -29.3741, 0.55", "-5.80319, -84.3237, -31.1436, 0.55", "-5.75314, -85.7306, -31.48, 0.83", "-5.86385, -88.3677, -31.9775, 0.83", "-6.11812, -91.9365, -32.7945, 0.83", "-6.17444, -94.2459, -33.4002, 0.55", "-6.10214, -96.7074, -34.5279, 0.55", "-6.00773, -98.5579, -35.8975, 0.83", "-5.91174, -100.077, -37.1795, 0.28", "-5.73672, -102.155, -39.0653, 0.55", "-5.60586, -103.997, -40.9507, 0.55", "-5.29949, -107.417, -44.6842, 0.55", "-5.05506, -109.596, -47.2932, 0.28", "-4.95744, -110.502, -48.383, 0.55", "-4.77393, -113.218, -51.5807, 0.83", "-4.81251, -116.953, -55.6556, 0.28", "-4.94306, -118.592, -57.2941, 0.55", "-5.13921, -121.062, -59.3139, 0.28", "-5.20779, -122.533, -60.3516, 0.83", "-5.22323, -124.313, -61.4181, 0.28", "-5.11878, -125.944, -62.1698, 0.83", "-4.79282, -127.944, -63.0068, 0.83", "-4.16927, -130.754, -64.3082, 0.28", "-3.65668, -132.525, -65.2056, 1.66", "-2.93902, -134.383, -66.3001, 0.28", "-2.14377, -136.147, -67.3791, 0.55", "-0.328079, -139.581, -69.939, 0.28", "0.527067, -141.036, -71.2697, 0.55", "1.6909, -142.911, -73.307, 0.28", "2.57826, -144.273, -74.9092, 0.55", "3.76245, -146.035, -77.1051, 0.55", "5.5279, -148.52, -80.2599, 0.83", "7.18925, -150.697, -82.9275, 0.83", "8.4971, -152.227, -84.8743, 0.28", "9.07043, -152.824, -85.6866, 0.55", "10.1694, -153.87, -87.2035, 0.28", "10.8718, -154.426, -88.0591, 0.28", "12.2155, -155.351, -89.2719, 0.28", "13.4621, -156.109, -90.302, 0.83", "16.2961, -157.676, -92.6052, 0.28", "16.7333, -157.914, -92.9616, 0.55", "17.8076, -158.515, -93.904, 0.28", "18.7976, -159.144, -94.8491, 0.55", "21.3339, -160.917, -97.5923, 0.28", "21.9901, -161.448, -98.3717, 0.28", "22.954, -162.38, -99.5598, 0.55", "24.3608, -163.996, -101.586, 0.28", "25.0483, -165.003, -102.758, 0.55", "26.2125, -167.17, -105.058, 0.28", "27.1729, -169.777, -107.296, 0.55", "27.4402, -171.14, -108.421, 0.55", "27.4883, -172.663, -109.674, 0.55", "27.2423, -174.67, -111.256, 0.28", "27.061, -175.329, -111.831, 0.28", "25.8764, -178.522, -114.735, 0.55", "24.345, -181.882, -118.01, 0.55", "23.5278, -183.68, -119.772, 0.28", "22.5286, -186.089, -122.048, 0.83", "21.1707, -189.436, -125.06, 0.28", "20.4518, -191.331, -126.65, 0.55", "19.634, -193.817, -128.497, 0.55", "18.8149, -197.303, -130.559, 0.55", "18.1363, -201.454, -132.599, 0.28", "17.7532, -204.096, -133.707, 0.55", "17.5843, -205.421, -134.175, 0.28", "17.3237, -207.362, -134.801, 0.55", "16.9871, -210.465, -135.745, 0.28", "16.7743, -211.961, -136.287, 0.83", "16.2237, -214.889, -137.592, 0.28", "15.9149, -216.485, -138.546, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "112.169, 170.959, -45.2632, 0.28", "115.555, 172.121, -43.7678, 0.28", "116.64, 172.493, -43.2883, 0.55", "119.342, 173.421, -42.0946, 0.28", "120.338, 173.762, -41.6549, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "112.169, 170.959, -45.2632, 0.28", "113.624, 172.369, -44.2645, 0.28", "114.43, 173.147, -43.7044, 0.55", "116.658, 175.321, -42.1739, 0.28", "117.817, 176.394, -41.3704, 0.55", "120.878, 179.075, -39.2921, 0.28", "122.141, 180.081, -38.5426, 0.55", "123.356, 180.89, -37.7754, 0.28", "124.119, 181.356, -37.2881, 0.55", "125.679, 182.151, -36.35, 0.28", "126.401, 182.435, -35.9475, 0.55", "129.915, 182.762, -35.2451, 0.28", "132.911, 182.086, -34.8765, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.91215, -40.6263, -9.15101, 0.55", "-7.31849, -43.1203, -9.06442, 0.55", "-6.81645, -45.0072, -8.99504, 0.83", "-5.82204, -48.25, -8.86897, 0.83", "-5.0616, -50.4923, -8.88901, 0.55", "-4.34603, -52.5715, -8.99487, 0.83", "-3.85507, -53.9393, -9.07116, 0.28", "-2.63728, -57.2091, -9.35347, 0.55", "-2.11332, -58.5279, -9.45025, 0.28", "-1.17262, -60.8643, -9.58184, 0.83", "-0.100127, -63.3886, -9.61583, 0.83", "0.6888, -65.2854, -9.48681, 0.28", "1.26044, -66.8194, -9.26743, 0.55", "2.01965, -69.2616, -8.74697, 0.28", "2.69294, -71.7605, -8.04471, 0.83", "3.27952, -74.0169, -7.27236, 0.83", "3.78772, -76.0002, -6.62638, 0.83", "4.08733, -77.3397, -6.28733, 1.11", "4.46156, -78.9878, -5.94168, 1.11", "5.0804, -81.7481, -5.58043, 0.55", "5.40129, -83.1387, -5.44614, 0.83", "6.0065, -85.5078, -5.3212, 0.55", "6.88817, -88.7121, -5.22926, 0.28", "7.31528, -90.208, -5.18062, 0.55", "8.09595, -92.7984, -5.13399, 0.55", "8.43245, -93.8984, -5.14435, 0.28", "9.44498, -97.2503, -5.23854, 0.55", "10.2714, -99.8319, -5.2496, 0.28", "11.0322, -101.983, -5.21268, 0.55", "11.7787, -104.017, -5.10538, 0.28", "12.2683, -105.381, -4.95961, 0.55", "12.8034, -106.979, -4.69789, 0.28", "13.5405, -109.239, -4.17577, 0.55", "14.0818, -110.752, -3.76032, 0.28", "14.8366, -112.83, -3.2372, 0.55", "16.2569, -116.565, -2.42255, 0.28", "17.0428, -118.482, -2.02925, 0.55", "18.8816, -122.683, -1.39329, 0.28", "19.7344, -124.602, -1.28426, 0.55", "21.0207, -127.415, -1.18499, 0.28", "21.9351, -129.385, -1.15052, 0.28", "23.0445, -131.766, -1.13112, 0.28", "23.8323, -133.726, -1.22046, 0.55", "24.9145, -137.053, -1.49605, 0.28", "25.7147, -140.132, -1.8279, 0.55", "26.5086, -144.17, -2.27869, 0.28", "26.7218, -145.753, -2.50129, 0.55", "27.0361, -150.01, -3.17835, 0.28", "27.0452, -151.911, -3.49824, 0.55", "26.9149, -154.222, -3.98689, 0.28", "26.7445, -155.747, -4.42636, 0.55", "26.3981, -157.972, -5.05716, 0.28", "26.0349, -160.293, -5.59246, 0.55", "25.5225, -163.656, -6.2244, 0.28", "25.3707, -164.869, -6.432, 0.55", "25.2261, -166.681, -6.68246, 0.28", "25.1214, -168.813, -6.99506, 0.55", "25.079, -171.911, -7.47404, 0.28", "25.2299, -173.595, -7.73455, 0.55", "25.5678, -174.979, -7.77648, 0.28", "25.948, -176.174, -7.73878, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.91215, -40.6263, -9.15101, 0.55", "-8.72261, -42.4812, -10.763, 0.55", "-8.95731, -43.0562, -11.2577, 0.55", "-9.65339, -44.8428, -12.7369, 0.55", "-10.8869, -48.1322, -15.3956, 0.55", "-12.0561, -51.3369, -17.8454, 0.83", "-13.2242, -54.2834, -20.0723, 0.55", "-13.7794, -55.7367, -21.1758, 0.55", "-14.1763, -56.8593, -21.9921, 0.28", "-15.0279, -59.5003, -23.7415, 0.55", "-15.8156, -62.1596, -25.1891, 0.55", "-16.6532, -64.7568, -26.4062, 0.55", "-17.5601, -67.7853, -27.6486, 0.55", "-18.5227, -71.2801, -28.9561, 0.55", "-19.144, -73.7614, -29.7389, 0.83", "-19.6279, -75.9659, -30.2691, 0.83", "-19.954, -77.73, -30.5675, 0.55", "-20.1483, -78.8724, -30.6913, 0.55", "-20.5192, -80.6337, -30.8229, 0.83", "-21.2544, -83.7624, -31.1065, 0.55", "-21.721, -85.7554, -31.4119, 0.28", "-22.0156, -86.9721, -31.6514, 0.83", "-22.5906, -88.9931, -32.0937, 0.55", "-23.1189, -90.639, -32.5878, 0.28", "-23.929, -93.1614, -33.4831, 0.55", "-24.5579, -95.4549, -34.4682, 0.28", "-24.8834, -96.918, -35.1477, 0.28", "-25.2078, -98.9376, -36.1387, 0.83", "-25.5026, -101.883, -37.6031, 0.28", "-25.6571, -104.385, -38.8424, 0.83", "-25.7307, -106.862, -40.0243, 0.28", "-25.713, -107.698, -40.3742, 0.83", "-25.5939, -109.876, -41.2129, 0.55", "-25.486, -111.3, -41.689, 0.28", "-25.3363, -113.559, -42.2389, 0.55", "-25.2402, -115.681, -42.6576, 0.28", "-25.2377, -117.656, -42.9125, 0.55", "-25.2693, -119.69, -43.1499, 0.28", "-25.2899, -121.116, -43.3298, 0.55", "-25.2632, -122.123, -43.5069, 0.28", "-25.2306, -122.676, -43.632, 0.55", "-24.957, -125.278, -44.5389, 0.28", "-24.6025, -128.09, -45.097, 0.83", "-24.2113, -130.39, -45.3129, 0.28", "-23.4916, -133.46, -45.4538, 0.28", "-22.9943, -135.106, -45.4894, 0.83", "-21.6105, -138.684, -45.3662, 0.28", "-16.5743, -149.265, -43.8331, 0.83", "-15.0339, -152.286, -43.2608, 0.55", "-13.8097, -154.561, -42.9258, 0.55", "-13.2529, -155.549, -43.1525, 0.55", "-12.8925, -156.187, -43.575, 0.28", "-12.1198, -157.542, -44.6065, 0.55", "-10.8521, -159.701, -46.2554, 0.28", "-10.0796, -161.168, -47.1936, 0.55", "-9.01886, -163.446, -48.5312, 0.28", "-8.17523, -165.488, -49.7803, 0.83", "-7.45352, -167.522, -51.1542, 0.28", "-6.95928, -169.366, -52.5503, 0.55", "-6.41983, -172.584, -55.0335, 0.28", "-6.36937, -173.685, -55.9133, 0.55", "-6.62014, -176.973, -58.6107, 0.28", "-7.02516, -178.829, -60.3724, 0.55", "-7.90789, -181.25, -62.8715, 0.28", "-8.3644, -182.157, -63.8359, 0.55", "-9.02589, -183.179, -64.9277, 0.28", "-9.70416, -184.01, -65.8672, 0.55", "-11.6861, -185.89, -68.1742, 0.28", "-12.5379, -186.576, -69.0943, 0.55", "-13.7087, -187.396, -70.3096, 0.55", "-15.6256, -188.758, -72.347, 0.28", "-16.7821, -189.656, -73.6255, 0.83", "-17.9205, -190.635, -74.9062, 0.28", "-18.4022, -191.113, -75.4543, 0.55", "-19.6479, -192.547, -76.9448, 0.28", "-20.6743, -193.92, -78.2374, 0.55", "-21.9118, -195.904, -79.826, 0.28", "-22.1995, -196.43, -80.2176, 0.55", "-23.1916, -198.383, -81.5813, 0.28", "-23.8734, -199.756, -82.5183, 0.55", "-25.6491, -203.154, -84.7981, 0.28", "-26.4375, -204.521, -85.7075, 0.55", "-26.8854, -205.28, -86.151, 0.28", "-27.0702, -205.585, -86.3309, 0.55", "-28.0059, -207.032, -87.1168, 0.28", "-28.7097, -208.029, -87.8227, 0.55", "-29.3604, -208.881, -88.46, 0.28", "-29.993, -209.761, -89.2426, 0.55", "-31.2122, -211.684, -90.9021, 0.28", "-31.7545, -212.627, -91.8557, 0.55", "-33.3703, -215.698, -95.2878, 0.28", "-33.9983, -217.075, -96.9406, 0.28", "-34.7529, -219.058, -99.4006, 0.28", "-35.1484, -220.369, -101.011, 0.55", "-35.7708, -223.597, -104.573, 0.55", "-35.8432, -224.4, -105.378, 0.28", "-35.8396, -225.287, -106.168, 0.55", "-35.8228, -226.222, -107.038, 0.28", "-35.8882, -227.085, -107.808, 0.55", "-36.0141, -228.176, -108.715, 0.28", "-36.1635, -229.304, -109.439, 0.55", "-36.7761, -233.632, -112.119, 0.28", "-36.9437, -234.662, -112.764, 0.55", "-37.8238, -239.433, -115.832, 0.28", "-38.0792, -240.753, -116.693, 0.55", "-39.1038, -245.965, -120.046, 0.28", "-39.3674, -247.433, -120.907, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.3353, -33.0804, -2.48054, 0.83", "-17.6597, -31.4788, -3.94777, 0.83", "-20.427, -30.0804, -6.01049, 0.83", "-22.7906, -29.1864, -7.92081, 0.83", "-24.8709, -28.6644, -9.74297, 0.83", "-28.1041, -28.3005, -12.8636, 0.83", "-31.2054, -28.393, -16.0409, 0.83", "-33.6894, -29.0959, -18.8236, 0.55", "-35.3013, -29.759, -20.6565, 0.55", "-36.7405, -30.4181, -22.2765, 0.83", "-38.4638, -31.1644, -24.1082, 0.55", "-40.1904, -31.7079, -25.5945, 0.55", "-43.1726, -32.1438, -27.8076, 0.55", "-45.3246, -31.9216, -29.0196, 0.55", "-47.7463, -31.3216, -30.1764, 0.55", "-49.051, -30.8178, -30.8777, 0.55", "-50.3972, -30.2483, -31.6402, 0.55", "-52.5477, -29.4028, -32.996, 0.55", "-54.0496, -29.0539, -34.0369, 1.11", "-55.2089, -29.0092, -34.8779, 1.11", "-60.7801, -29.5848, -39.1696, 0.55", "-62.6221, -29.9116, -40.6384, 0.55", "-64.1874, -30.2732, -41.9289, 0.55", "-66.8615, -30.9455, -44.2332, 0.55", "-69.2181, -31.4039, -46.6019, 0.55", "-71.128, -31.5431, -49.0777, 0.55", "-71.9536, -31.5398, -50.3976, 0.28", "-72.5315, -31.4618, -51.5451, 0.83", "-73.8379, -31.1136, -54.4517, 0.83", "-75.4332, -30.4459, -58.4773, 0.83", "-77.0903, -29.4915, -63.4705, 0.55", "-77.7679, -29.0642, -65.6702, 0.55", "-78.6553, -28.5874, -68.4487, 0.28", "-79.1096, -28.3864, -69.7394, 0.83", "-80.0299, -27.9519, -72.1724, 0.55", "-81.0022, -27.1706, -74.546, 0.55", "-82.2939, -25.7263, -77.6554, 0.28", "-83.0096, -24.947, -79.2811, 1.11", "-83.5663, -24.3988, -80.5992, 0.83", "-84.8514, -23.3113, -83.7071, 0.83", "-86.4161, -22.2558, -87.7039, 0.83", "-88.9144, -20.8732, -94.065, 0.28", "-89.7235, -20.5068, -96.223, 0.83", "-92.0642, -19.5309, -102.822, 0.28", "-93.0787, -19.2023, -105.82, 0.83", "-95.0487, -18.8969, -111.828, 0.28", "-95.3265, -18.9191, -112.793, 0.28", "-95.7829, -19.0384, -114.604, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.3353, -33.0804, -2.48054, 1.11", "-16.7292, -34.7525, -1.60815, 1.11", "-18.7732, -36.56, -0.645041, 1.11", "-20.2634, -37.8215, -0.0274556, 1.11", "-22.3579, -39.726, 1.09284, 1.11", "-24.3842, -41.7423, 2.43782, 0.83", "-25.8007, -43.1703, 3.44002, 0.83", "-27.6447, -44.7931, 4.70855, 0.83", "-30.1052, -46.6497, 6.23957, 0.83", "-33.5195, -49.0979, 8.17234, 1.11", "-35.3508, -50.343, 9.03694, 0.83", "-36.8994, -51.3429, 9.69578, 0.83", "-39.4568, -52.8505, 10.6308, 0.83", "-42.3975, -54.4224, 11.4425, 0.83", "-44.9439, -55.6047, 11.8772, 0.83", "-47.9821, -56.9927, 12.1465, 0.83", "-50.4517, -58.0991, 12.2974, 0.83", "-52.4835, -59.0659, 12.4271, 0.83", "-54.1289, -59.9182, 12.5334, 1.11", "-56.2058, -61.0851, 12.6474, 0.83", "-58.3572, -62.3341, 12.7644, 1.11" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-95.7829, -19.0384, -114.604, 0.28", "-98.6611, -20.1145, -118.624, 0.28", "-99.4105, -20.376, -119.621, 0.55", "-100.852, -20.7631, -121.415, 0.28", "-101.926, -20.879, -122.815, 0.28", "-103.417, -20.945, -124.817, 0.55", "-105.755, -21.0019, -127.858, 0.28", "-106.459, -21.0435, -128.833, 0.55", "-107.784, -21.1312, -130.755, 1.11", "-110.511, -21.3969, -134.863, 0.28", "-111.96, -21.6683, -137.189, 0.55", "-113.633, -22.1022, -139.966, 0.55", "-116.339, -23.3219, -144.814, 0.55", "-117.498, -24.0291, -147.013, 0.55", "-118.892, -25.0702, -149.743, 0.55", "-119.894, -25.9752, -151.715, 0.55", "-121.64, -27.689, -155.322, 0.55", "-123.498, -29.6926, -159.407, 0.55", "-125.461, -31.695, -163.325, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-95.7829, -19.0384, -114.604, 0.55", "-95.1131, -21.0738, -115.861, 0.55", "-94.1749, -23.9249, -117.622, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-58.3572, -62.3341, 12.7644, 0.55", "-59.8946, -63.9206, 13.0749, 0.55", "-61.0333, -65.1036, 13.2511, 0.55", "-62.3762, -66.2827, 13.4051, 0.55", "-64.2911, -67.7726, 13.5823, 0.55", "-65.6303, -68.6641, 13.6839, 0.55", "-68.4928, -70.4284, 13.8669, 0.55", "-71.1725, -72.0998, 14.0071, 0.55", "-73.8953, -73.92, 14.1076, 0.55", "-75.5459, -74.9921, 14.2197, 0.55", "-77.767, -76.4015, 14.4065, 0.55", "-79.979, -77.8088, 14.6749, 0.55", "-81.7188, -78.8276, 14.938, 0.55", "-85.9513, -81.1284, 15.6802, 0.55", "-89.1696, -82.8059, 16.3939, 0.55", "-90.3824, -83.4513, 16.7512, 0.83", "-92.2812, -84.5262, 17.4708, 0.55", "-94.1267, -85.4809, 18.3078, 0.55", "-96.072, -86.4555, 19.3029, 0.55", "-97.9806, -87.4315, 20.3188, 0.55", "-100.577, -89.1191, 21.7169, 0.55", "-102.979, -90.7668, 23.0334, 0.55", "-105.313, -92.4482, 24.2892, 0.55", "-107.109, -93.7434, 25.2648, 0.55", "-110.112, -95.705, 26.8553, 0.55", "-112.573, -97.0195, 27.9407, 0.55", "-114.648, -97.8683, 28.7143, 0.55", "-116.441, -98.4755, 29.3131, 0.55", "-118.494, -99.1719, 29.9481, 0.55", "-121.01, -100.024, 30.7585, 0.83", "-123.452, -100.948, 31.5665, 0.55", "-125.253, -101.704, 32.0924, 0.55", "-127.447, -102.828, 32.6842, 0.55", "-128.65, -103.536, 32.9696, 0.55", "-130.881, -104.967, 33.3898, 0.55", "-132.898, -106.471, 33.7083, 0.55", "-134.918, -107.95, 34.0163, 0.55", "-135.831, -108.601, 34.1289, 0.83", "-138.24, -110.247, 34.303, 0.55", "-139.954, -111.344, 34.3472, 0.55", "-144.517, -114.269, 34.2425, 0.55", "-146.98, -115.721, 34.2129, 0.55", "-150.251, -117.406, 34.2217, 0.55", "-152.097, -118.205, 34.3253, 0.55", "-153.969, -118.795, 34.5497, 1.38", "-157.428, -119.512, 35.2203, 0.55", "-160.842, -119.807, 36.2159, 0.55", "-163.611, -119.995, 37.3916, 0.55", "-166.519, -120.017, 38.886, 0.55", "-169.092, -119.975, 40.3648, 0.55", "-171.015, -119.901, 41.5857, 0.55", "-173.564, -119.806, 43.3638, 0.55", "-177.33, -119.922, 46.1916, 0.55", "-178.989, -120.048, 47.4967, 0.55", "-179.654, -120.126, 48.0031, 0.55", "-180.874, -120.322, 48.8882, 0.28", "-182.05, -120.484, 49.663, 0.83", "-184.684, -120.785, 50.8858, 0.28", "-186.022, -120.809, 51.3112, 0.28", "-187.832, -120.731, 51.8061, 0.55", "-190.871, -120.542, 52.5107, 0.55", "-194.843, -120.29, 53.2823, 0.28", "-198.395, -120.088, 53.9006, 0.28", "-201.456, -119.954, 54.3296, 0.55", "-202.925, -119.88, 54.5401, 0.55", "-205.081, -119.818, 54.8536, 0.55", "-207.38, -119.779, 55.2607, 0.28", "-208.207, -119.8, 55.3261, 0.55", "-209.588, -119.902, 55.409, 0.28", "-209.983, -119.964, 55.4005, 0.55", "-212.207, -120.215, 55.2112, 0.28", "-213.621, -120.304, 55.0453, 0.83", "-215.859, -120.427, 54.6952, 0.28", "-217.799, -120.548, 54.3637, 0.28", "-220.336, -120.768, 53.8854, 0.28", "-222.621, -120.956, 53.3949, 0.28", "-231.672, -125.214, 54.3087, 0.28", "-240.041, -130.256, 56.7088, 0.28", "-248.546, -134.622, 59.7927, 0.28", "-256.861, -139.191, 63.1076, 0.28" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-58.3572, -62.3341, 12.7644, 0.55", "-58.7113, -65.1218, 12.3208, 0.55", "-58.9159, -67.4109, 11.8456, 0.55", "-58.9923, -68.6446, 11.527, 0.55", "-59.1309, -70.2808, 11.0786, 0.83", "-59.5333, -73.6336, 10.1872, 0.83", "-59.8795, -76.1465, 9.57687, 0.55", "-60.1553, -77.6683, 9.2168, 0.83", "-60.5848, -79.7273, 8.76623, 0.55", "-60.9834, -81.4285, 8.40255, 0.55", "-61.7269, -84.0797, 7.87937, 0.55", "-62.6867, -87.0536, 7.3635, 0.55", "-63.9046, -90.6383, 6.87287, 0.55", "-64.2999, -91.7622, 6.73406, 0.55", "-65.5629, -95.3454, 6.34977, 0.55", "-66.1606, -97.2504, 6.11037, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-125.461, -31.695, -163.325, 0.55", "-128.129, -32.0077, -168.24, 0.55", "-129.269, -32.1774, -170.133, 0.55", "-131.306, -32.3705, -173.234, 0.55", "-132.179, -32.4159, -174.443, 0.55", "-134.192, -32.5208, -177.096, 0.55", "-137.002, -32.6628, -180.704, 0.55", "-138.515, -32.6459, -182.381, 0.55", "-139.736, -32.6229, -183.666, 0.55", "-140.988, -32.6648, -184.803, 0.55", "-142.439, -32.7138, -186.075, 0.55", "-143.59, -32.6674, -186.927, 0.55", "-144.613, -32.5022, -187.609, 0.28", "-146.034, -32.2667, -188.587, 0.55", "-148.771, -31.9635, -190.878, 0.28", "-149.215, -31.9789, -191.302, 0.28", "-149.77, -32.0574, -191.87, 0.55", "-151.289, -32.4183, -193.509, 0.55", "-152.323, -32.7859, -194.699, 0.55", "-155.285, -34.3206, -198.44, 0.55", "-157.412, -35.6184, -201.174, 0.55", "-158.4, -36.3057, -202.492, 0.55", "-159.395, -37.1304, -203.921, 0.55", "-160.141, -37.9192, -205.099, 0.55", "-161.257, -39.337, -207.007, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-125.461, -31.695, -163.325, 0.55", "-124.481, -28.784, -163.325, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-66.1606, -97.2504, 6.11037, 0.55", "-67.6105, -99.4327, 5.80886, 0.55", "-68.6888, -100.911, 5.41283, 0.28", "-69.8216, -102.088, 4.97958, 0.55", "-71.5369, -103.66, 3.94656, 0.55", "-72.9517, -104.763, 2.83939, 0.28", "-73.513, -105.209, 2.33699, 0.83", "-75.5101, -106.666, 0.440534, 0.55", "-77.4667, -107.953, -1.39909, 0.55", "-80.4428, -109.669, -4.4022, 0.55", "-83.1806, -111.1, -7.19425, 0.55", "-86.2031, -112.661, -10.2758, 0.55", "-87.1282, -113.135, -11.1923, 0.55", "-88.6672, -113.951, -12.6672, 0.55", "-90.591, -114.924, -14.375, 0.55", "-93.6143, -116.298, -16.845, 0.55", "-95.0212, -116.915, -18.1166, 0.55", "-97.5586, -118.12, -20.6733, 0.55", "-99.2547, -119.077, -22.5738, 0.28", "-101.183, -120.356, -24.9058, 0.55", "-103.584, -122.146, -27.8661, 0.55", "-106.701, -124.596, -31.852, 0.55", "-108.735, -126.303, -34.4458, 0.55", "-109.687, -127.239, -35.7401, 0.28", "-110.836, -128.505, -37.4035, 0.55", "-112.625, -130.621, -40.0944, 0.28", "-113.136, -131.186, -40.7983, 0.28", "-113.641, -131.722, -41.4834, 0.28", "-115.444, -133.407, -43.8698, 1.38", "-117.555, -135.287, -46.5391, 0.55", "-118.691, -136.269, -47.9459, 0.28", "-119.189, -136.732, -48.577, 0.55", "-120.439, -138.033, -50.1494, 0.28", "-121.218, -138.951, -51.0658, 0.55", "-122.136, -140.497, -51.7573, 0.28", "-122.344, -140.899, -51.8569, 0.55", "-123.227, -142.794, -52.2037, 0.28", "-123.874, -144.238, -52.41, 0.55", "-124.641, -145.987, -52.5965, 0.28", "-127.802, -153.424, -53.3306, 0.55", "-128.627, -155.396, -53.502, 0.28", "-129.187, -156.696, -53.6021, 0.55", "-129.852, -158.141, -53.667, 0.28", "-130.107, -158.724, -53.6955, 0.55", "-130.591, -159.897, -53.7213, 0.28", "-131.084, -161.218, -53.7633, 0.55", "-131.685, -162.743, -53.8408, 0.28", "-132.627, -165.041, -53.963, 0.83", "-133.595, -167.309, -54.0638, 0.28", "-134.343, -169.06, -54.1267, 0.28", "-135.52, -171.833, -54.183, 0.55", "-136.704, -174.625, -54.2663, 0.28", "-137.858, -177.467, -54.2477, 0.28", "-138.132, -178.133, -54.2349, 0.55", "-139.04, -180.218, -54.1208, 0.28", "-139.546, -181.459, -54.0745, 0.55", "-140.381, -183.698, -53.9272, 0.28", "-141.142, -186.421, -53.6119, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-66.1606, -97.2504, 6.11037, 0.28", "-64.9353, -99.1401, 6.83035, 0.28", "-64.0621, -100.452, 7.38144, 0.28", "-63.6548, -101.064, 7.63849, 0.55", "-63.0481, -101.975, 8.02143, 0.28", "-62.5665, -102.698, 8.32533, 0.55", "-60.9549, -105.119, 9.34249, 0.28", "-59.8497, -106.931, 10.2765, 0.55", "-54.1596, -114.257, 14.3438, 0.55", "-47.8801, -121.697, 17.152, 0.55", "-41.4511, -129.055, 19.8222, 0.55", "-34.9906, -136.434, 22.3599, 0.55", "-26.9694, -141.728, 25.3563, 0.55", "-18.9825, -147.675, 26.9539, 0.55", "-12.266, -154.735, 29.6816, 0.55", "-6.25115, -162.861, 30.6681, 0.55", "-1.12847, -171.325, 33.0277, 0.55", "3.56275, -179.955, 35.6947, 0.55", "9.20926, -188.056, 38.0731, 0.55", "15.5014, -195.697, 40.2711, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-161.257, -39.337, -207.007, 0.28", "-163.17, -39.6809, -207.593, 0.28", "-164.978, -39.9655, -209.299, 0.28", "-166.688, -40.1889, -211.097, 0.28", "-168.33, -40.3311, -212.823, 0.28", "-170.223, -40.3623, -214.78, 0.28", "-171.934, -40.5474, -217.801, 0.28", "-174.506, -41.072, -224.194, 0.28", "-174.967, -41.2253, -225.74, 0.55", "-175.3, -41.3575, -227.138, 0.28", "-175.638, -41.5157, -228.543, 0.55", "-178.639, -43.3113, -239.909, 0.55", "-179.014, -43.5045, -241.085, 0.28", "-179.898, -44.0446, -243.38, 0.55", "-180.809, -44.571, -245.508, 0.55", "-182.051, -45.3607, -248.003, 0.55", "-183.28, -46.1302, -249.846, 0.55", "-184.896, -46.9562, -251.319, 0.55", "-186.747, -47.9708, -253.128, 0.83", "-187.273, -48.3009, -253.629, 0.83", "-189.082, -49.6383, -255.415, 0.28", "-190.955, -50.9944, -257.231, 0.55", "-193.065, -52.1661, -259.027, 0.28", "-193.955, -52.6595, -259.71, 0.55", "-195.404, -53.4293, -260.784, 0.28", "-196.26, -53.8372, -261.418, 0.28", "-197.579, -54.195, -262.309, 0.55", "-200.557, -54.6469, -263.903, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-161.257, -39.337, -207.007, 0.55", "-160.687, -41.5612, -207.007, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_28", "dend_21", "dend_0", "dend_37", "dend_36", "dend_34", "dend_29", "dend_25", "dend_22", "dend_16", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_17", "dend_3", "dend_2", "dend_33", "dend_32", "dend_20", "dend_19", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_13", "dend_12", "dend_7", "dend_6", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_NBC_6561f8d865_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4500000145978539)
    connect dend_35(0), soma_0(0.4500000145978539)
    connect dend_28(0), soma_0(0.4500000145978539)
    connect dend_21(0), soma_0(0.4500000145978539)
    connect dend_0(0), soma_0(0.4500000145978539)
    connect axon_0(0), soma_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.36225, -9.19447, -1.05898, 3.37379 ) }
    soma_0 { pt3dadd( -7.5192, -8.3328, -0.983264, 5.59841 ) }
    soma_0 { pt3dadd( -6.67615, -7.47114, -0.907549, 5.3333 ) }
    soma_0 { pt3dadd( -5.8331, -6.60947, -0.831834, 5.68073 ) }
    soma_0 { pt3dadd( -4.99005, -5.7478, -0.756119, 6.02816 ) }
    soma_0 { pt3dadd( -4.147, -4.88613, -0.680404, 6.37559 ) }
    soma_0 { pt3dadd( -3.30395, -4.02446, -0.604689, 6.72117 ) }
    soma_0 { pt3dadd( -2.46089, -3.16279, -0.528974, 6.8656 ) }
    soma_0 { pt3dadd( -1.61784, -2.30113, -0.453259, 6.93412 ) }
    soma_0 { pt3dadd( -0.774793, -1.43946, -0.377544, 6.84096 ) }
    soma_0 { pt3dadd( 0.0682572, -0.577789, -0.301829, 6.68704 ) }
    soma_0 { pt3dadd( 0.911308, 0.28388, -0.226114, 6.6716 ) }
    soma_0 { pt3dadd( 1.75436, 1.14555, -0.150399, 6.90842 ) }
    soma_0 { pt3dadd( 2.59741, 2.00722, -0.0746836, 7.45096 ) }
    soma_0 { pt3dadd( 3.44046, 2.86888, 0.00103138, 8.43414 ) }
    soma_0 { pt3dadd( 4.28351, 3.73055, 0.0767464, 9.41614 ) }
    soma_0 { pt3dadd( 5.12656, 4.59222, 0.152461, 10.0048 ) }
    soma_0 { pt3dadd( 5.96961, 5.45389, 0.228176, 10.3326 ) }
    soma_0 { pt3dadd( 6.81266, 6.31556, 0.303891, 9.50982 ) }
    soma_0 { pt3dadd( 7.65571, 7.17723, 0.379606, 7.06842 ) }
    soma_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 3.91086 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.80497, 1.21936, 15.3717, 0.83 ) }
    dend_38 { pt3dadd( 8.2806, -1.79781, 16.3711, 0.83 ) }
    dend_38 { pt3dadd( 8.73247, -4.4794, 17.3321, 0.83 ) }
    dend_38 { pt3dadd( 9.17906, -6.6761, 18.1346, 0.83 ) }
    dend_38 { pt3dadd( 10.2514, -10.9459, 19.713, 1.38 ) }
    dend_38 { pt3dadd( 11.3086, -14.5194, 20.99, 0.83 ) }
    dend_38 { pt3dadd( 12.3431, -17.685, 22.0416, 0.83 ) }
    dend_38 { pt3dadd( 13.3504, -20.5266, 22.945, 0.55 ) }
    dend_38 { pt3dadd( 14.5972, -23.408, 23.7943, 1.11 ) }
    dend_38 { pt3dadd( 15.9775, -25.8714, 24.3846, 0.55 ) }
    dend_38 { pt3dadd( 17.385, -27.8199, 24.6297, 0.55 ) }
    dend_38 { pt3dadd( 19.2449, -29.9508, 24.6548, 0.55 ) }
    dend_38 { pt3dadd( 21.0635, -31.802, 24.4212, 0.55 ) }
    dend_38 { pt3dadd( 22.5724, -33.2477, 24.0042, 0.55 ) }
    dend_38 { pt3dadd( 24.1408, -34.6516, 23.2419, 0.55 ) }
    dend_38 { pt3dadd( 25.9518, -36.3096, 21.9791, 0.55 ) }
    dend_38 { pt3dadd( 26.9627, -37.3136, 21.125, 1.11 ) }
    dend_38 { pt3dadd( 28.5807, -39.1446, 19.5759, 0.28 ) }
    dend_38 { pt3dadd( 29.5299, -40.406, 18.5486, 0.55 ) }
    dend_38 { pt3dadd( 31.7547, -43.789, 15.9763, 0.55 ) }
    dend_38 { pt3dadd( 33.0734, -45.9861, 14.4958, 0.55 ) }
    dend_38 { pt3dadd( 34.6826, -48.8793, 12.7543, 0.28 ) }
    dend_38 { pt3dadd( 35.7974, -50.9805, 11.7141, 0.83 ) }
    dend_38 { pt3dadd( 37.7505, -54.8739, 9.82388, 0.28 ) }
    dend_38 { pt3dadd( 38.3543, -56.1538, 9.22536, 0.55 ) }
    dend_38 { pt3dadd( 39.3606, -58.2426, 8.26757, 0.28 ) }
    dend_38 { pt3dadd( 40.3686, -60.1082, 7.29747, 0.28 ) }
    dend_38 { pt3dadd( 41.1738, -61.4755, 6.41721, 0.83 ) }
    dend_38 { pt3dadd( 44.1979, -66.4029, 2.94135, 0.28 ) }
    dend_38 { pt3dadd( 44.8297, -67.464, 2.19728, 1.11 ) }
    dend_38 { pt3dadd( 46.1854, -69.7935, 0.569649, 0.28 ) }
    dend_38 { pt3dadd( 47.1089, -71.486, -0.623049, 0.83 ) }
    dend_38 { pt3dadd( 49.5566, -76.0612, -3.71061, 0.28 ) }
    dend_38 { pt3dadd( 50.2819, -77.6417, -4.67368, 0.55 ) }
    dend_38 { pt3dadd( 51.0278, -79.6448, -5.59638, 0.28 ) }
    dend_38 { pt3dadd( 51.5042, -81.1632, -6.26725, 1.11 ) }
    dend_38 { pt3dadd( 52.183, -83.7507, -7.41793, 0.28 ) }
    dend_38 { pt3dadd( 52.5412, -85.2739, -8.12243, 0.83 ) }
    dend_38 { pt3dadd( 53.7125, -90.2948, -10.5696, 0.28 ) }
    dend_38 { pt3dadd( 54.8297, -94.7554, -12.928, 0.28 ) }
    dend_38 { pt3dadd( 55.3232, -96.5819, -13.8969, 0.55 ) }
    dend_38 { pt3dadd( 56.0416, -99.0954, -15.181, 0.28 ) }
    dend_38 { pt3dadd( 56.2706, -99.8624, -15.5187, 0.55 ) }
    dend_38 { pt3dadd( 57.046, -102.325, -16.4547, 0.28 ) }
    dend_38 { pt3dadd( 57.6808, -104.148, -16.9653, 0.83 ) }
    dend_38 { pt3dadd( 58.8101, -107.315, -17.5803, 0.28 ) }
    dend_38 { pt3dadd( 59.0826, -108.104, -17.6704, 0.55 ) }
    dend_38 { pt3dadd( 60.2782, -111.635, -17.8149, 0.28 ) }
    dend_38 { pt3dadd( 60.8993, -113.521, -17.8363, 0.55 ) }
    dend_38 { pt3dadd( 61.2499, -114.642, -17.7798, 0.28 ) }
    dend_38 { pt3dadd( 61.7733, -116.343, -17.6992, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 72/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.135, 1.69086, 1.42168, 0.83 ) }
    dend_35 { pt3dadd( 11.6384, 1.14403, 0.0557431, 0.83 ) }
    dend_35 { pt3dadd( 13.8304, -0.616975, -2.65528, 1.11 ) }
    dend_35 { pt3dadd( 15.3942, -2.06212, -4.58786, 1.11 ) }
    dend_35 { pt3dadd( 18.3085, -4.64609, -8.04741, 1.38 ) }
    dend_35 { pt3dadd( 20.9804, -6.70352, -10.8155, 1.11 ) }
    dend_35 { pt3dadd( 22.7458, -8.03161, -12.483, 1.66 ) }
    dend_35 { pt3dadd( 25.5157, -10.5751, -15.2527, 0.83 ) }
    dend_35 { pt3dadd( 26.7353, -12.0681, -16.6812, 0.83 ) }
    dend_35 { pt3dadd( 27.7558, -13.6736, -18.1179, 1.11 ) }
    dend_35 { pt3dadd( 29.534, -17.2414, -21.2572, 1.11 ) }
    dend_35 { pt3dadd( 30.412, -18.9376, -22.9284, 1.11 ) }
    dend_35 { pt3dadd( 31.7113, -21.5619, -25.6126, 0.83 ) }
    dend_35 { pt3dadd( 32.8054, -24.1971, -28.3093, 0.83 ) }
    dend_35 { pt3dadd( 33.5078, -26.662, -30.8415, 0.83 ) }
    dend_35 { pt3dadd( 34.0412, -30.0025, -34.2275, 0.83 ) }
    dend_35 { pt3dadd( 34.1565, -35.1314, -39.7221, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.38497, 9.67561, 2.58168, 2.49 ) }
    dend_28 { pt3dadd( 9.88496, 12.7404, 1.65168, 2.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 91/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.93503, -6.93964, -4.25832, 0.83 ) }
    dend_21 { pt3dadd( -11.8414, -6.16722, -4.28559, 0.83 ) }
    dend_21 { pt3dadd( -15.0611, -4.41385, -4.313, 0.83 ) }
    dend_21 { pt3dadd( -16.9341, -3.09576, -4.34427, 0.55 ) }
    dend_21 { pt3dadd( -19.4976, -1.08425, -4.39676, 0.83 ) }
    dend_21 { pt3dadd( -21.0084, 0.210216, -4.42925, 0.83 ) }
    dend_21 { pt3dadd( -23.3239, 2.3118, -4.47769, 1.11 ) }
    dend_21 { pt3dadd( -25.2655, 4.34904, -4.51866, 0.83 ) }
    dend_21 { pt3dadd( -26.6343, 5.87318, -4.54431, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( -27.7608, 7.0665, -4.56106, 1.11 ) }
    dend_21 { pt3dadd( -30.1382, 9.31694, -4.59098, 0.83 ) }
    dend_21 { pt3dadd( -32.3092, 11.4049, -4.63543, 0.83 ) }
    dend_21 { pt3dadd( -34.5747, 13.6191, -4.8168, 0.83 ) }
    dend_21 { pt3dadd( -37.2135, 16.1298, -5.14486, 1.11 ) }
    dend_21 { pt3dadd( -39.4782, 18.3576, -5.45536, 0.83 ) }
    dend_21 { pt3dadd( -40.8649, 19.8095, -5.64829, 0.83 ) }
    dend_21 { pt3dadd( -43.9462, 23.2491, -6.08136, 0.83 ) }
    dend_21 { pt3dadd( -46.3981, 26.1537, -6.41138, 0.55 ) }
    dend_21 { pt3dadd( -48.7757, 29.1441, -6.61269, 0.55 ) }
    dend_21 { pt3dadd( -50.6753, 31.5723, -6.61764, 0.83 ) }
    dend_21 { pt3dadd( -52.8074, 34.2462, -6.36868, 0.83 ) }
    dend_21 { pt3dadd( -54.2766, 36.0088, -6.11222, 0.55 ) }
    dend_21 { pt3dadd( -55.7902, 37.6489, -5.72328, 0.83 ) }
    dend_21 { pt3dadd( -57.4193, 39.5235, -5.08188, 0.55 ) }
    dend_21 { pt3dadd( -59.3031, 41.8889, -4.21253, 0.55 ) }
    dend_21 { pt3dadd( -61.5779, 44.5273, -3.16112, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.47503, -10.5784, -6.25832, 2.49 ) }
    dend_0 { pt3dadd( -7.5174, -15.9198, -6.17933, 2.49 ) }
    dend_0 { pt3dadd( -8.12538, -19.0354, -6.13326, 1.66 ) }
    dend_0 { pt3dadd( -8.71205, -22.0417, -6.0888, 2.77 ) }
    dend_0 { pt3dadd( -9.22544, -24.6724, -6.0499, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.49876, 8.03889, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 18.9889, 18.7607, 0.455321, 0.55 ) }
    axon_0 { pt3dadd( 29.479, 29.4825, 0.455321, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 34.1565, -35.1314, -39.7221, 0.55 ) }
    dend_37 { pt3dadd( 35.295, -35.8656, -41.1275, 0.55 ) }
    dend_37 { pt3dadd( 36.5177, -36.8286, -42.5637, 0.55 ) }
    dend_37 { pt3dadd( 40.491, -40.3056, -47.1322, 0.55 ) }
    dend_37 { pt3dadd( 42.0942, -41.6686, -48.8712, 0.55 ) }
    dend_37 { pt3dadd( 43.4941, -42.7329, -50.3136, 0.55 ) }
    dend_37 { pt3dadd( 45.8952, -44.4431, -52.6965, 0.83 ) }
    dend_37 { pt3dadd( 48.2268, -45.9406, -54.9323, 0.83 ) }
    dend_37 { pt3dadd( 50.232, -47.2363, -56.8532, 0.55 ) }
    dend_37 { pt3dadd( 51.2887, -47.9788, -57.9004, 0.55 ) }
    dend_37 { pt3dadd( 53.0863, -49.224, -60.0785, 0.55 ) }
    dend_37 { pt3dadd( 54.314, -50.0102, -61.7117, 0.83 ) }
    dend_37 { pt3dadd( 55.14, -50.5867, -62.9183, 0.28 ) }
    dend_37 { pt3dadd( 56.5805, -51.7262, -65.1947, 0.55 ) }
    dend_37 { pt3dadd( 58.5535, -53.5931, -68.5199, 0.83 ) }
    dend_37 { pt3dadd( 60.3823, -55.5321, -71.4816, 0.55 ) }
    dend_37 { pt3dadd( 61.4204, -56.686, -72.956, 0.55 ) }
    dend_37 { pt3dadd( 62.9854, -58.2436, -74.7433, 0.55 ) }
    dend_37 { pt3dadd( 64.613, -59.6473, -76.1733, 0.28 ) }
    dend_37 { pt3dadd( 65.7453, -60.471, -76.893, 0.83 ) }
    dend_37 { pt3dadd( 69.2432, -62.6452, -78.488, 0.55 ) }
    dend_37 { pt3dadd( 71.4863, -63.7888, -79.2918, 0.28 ) }
    dend_37 { pt3dadd( 74.3069, -64.9096, -80.3105, 0.55 ) }
    dend_37 { pt3dadd( 75.9141, -65.4058, -80.8579, 0.28 ) }
    dend_37 { pt3dadd( 77.4068, -65.817, -81.3123, 0.55 ) }
    dend_37 { pt3dadd( 79.3131, -66.2519, -81.981, 0.28 ) }
    dend_37 { pt3dadd( 81.1044, -66.5871, -82.7163, 0.55 ) }
    dend_37 { pt3dadd( 83.905, -67.0532, -84.0472, 0.28 ) }
    dend_37 { pt3dadd( 85.4179, -67.3521, -84.9259, 0.55 ) }
    dend_37 { pt3dadd( 86.9174, -67.771, -85.9541, 0.55 ) }
    dend_37 { pt3dadd( 88.6381, -68.2808, -88.0645, 0.28 ) }
    dend_37 { pt3dadd( 89.2075, -68.4277, -88.9389, 0.28 ) }
    dend_37 { pt3dadd( 89.9258, -68.6328, -90.2671, 0.55 ) }
    dend_37 { pt3dadd( 91.4652, -69.11, -93.4701, 0.28 ) }
    dend_37 { pt3dadd( 92.7137, -69.5037, -96.2647, 0.83 ) }
    dend_37 { pt3dadd( 97.6781, -71.0658, -107.761, 0.28 ) }
    dend_37 { pt3dadd( 98.2025, -71.2239, -109.049, 0.55 ) }
    dend_37 { pt3dadd( 99.2604, -71.5069, -111.734, 0.55 ) }
    dend_37 { pt3dadd( 100.31, -71.7893, -114.466, 0.28 ) }
    dend_37 { pt3dadd( 101.116, -71.9892, -116.476, 0.55 ) }
    dend_37 { pt3dadd( 103.851, -72.6371, -122.85, 0.55 ) }
    dend_37 { pt3dadd( 106.364, -73.4392, -127.814, 0.55 ) }
    dend_37 { pt3dadd( 107.586, -73.8267, -130.126, 0.28 ) }
    dend_37 { pt3dadd( 108.446, -74.0645, -131.654, 0.55 ) }
    dend_37 { pt3dadd( 109.229, -74.3084, -133.009, 0.28 ) }
    dend_37 { pt3dadd( 110.336, -74.8018, -134.817, 0.55 ) }
    dend_37 { pt3dadd( 111.279, -75.4199, -136.258, 0.28 ) }
    dend_37 { pt3dadd( 112.316, -76.2524, -137.839, 0.55 ) }
    dend_37 { pt3dadd( 113.161, -76.9567, -139.336, 0.55 ) }
    dend_37 { pt3dadd( 114.4, -77.9301, -141.652, 0.28 ) }
    dend_37 { pt3dadd( 115.683, -78.9755, -144.065, 0.55 ) }
    dend_37 { pt3dadd( 117.242, -80.31, -147.104, 0.28 ) }
    dend_37 { pt3dadd( 118.279, -81.2348, -149.139, 0.55 ) }
    dend_37 { pt3dadd( 120.237, -83.2032, -152.976, 0.28 ) }
    dend_37 { pt3dadd( 120.746, -83.6902, -153.854, 0.55 ) }
    dend_37 { pt3dadd( 121.948, -84.7525, -155.69, 0.28 ) }
    dend_37 { pt3dadd( 123.772, -86.3338, -158.16, 0.55 ) }
    dend_37 { pt3dadd( 125.174, -87.548, -159.782, 0.28 ) }
    dend_37 { pt3dadd( 126.573, -88.8146, -161.295, 0.55 ) }
    dend_37 { pt3dadd( 127.817, -90.0224, -162.616, 0.28 ) }
    dend_37 { pt3dadd( 129.139, -91.356, -164.145, 0.55 ) }
    dend_37 { pt3dadd( 129.709, -91.9277, -164.902, 0.28 ) }
    dend_37 { pt3dadd( 130.468, -92.638, -166.171, 0.55 ) }
    dend_37 { pt3dadd( 131.398, -93.5967, -168.209, 0.28 ) }
    dend_37 { pt3dadd( 131.73, -93.9394, -169.012, 0.55 ) }
    dend_37 { pt3dadd( 131.973, -94.205, -169.649, 0.28 ) }
    dend_37 { pt3dadd( 132.872, -95.305, -172.176, 0.55 ) }
    dend_37 { pt3dadd( 135.032, -98.3377, -178.945, 0.28 ) }
    dend_37 { pt3dadd( 135.447, -99.0142, -180.443, 0.55 ) }
    dend_37 { pt3dadd( 135.809, -99.75, -181.898, 0.28 ) }
    dend_37 { pt3dadd( 136.097, -100.365, -182.954, 0.28 ) }
    dend_37 { pt3dadd( 136.509, -101.257, -184.326, 0.55 ) }
    dend_37 { pt3dadd( 137.426, -103.35, -186.853, 0.28 ) }
    dend_37 { pt3dadd( 138.276, -105.09, -188.665, 0.55 ) }
    dend_37 { pt3dadd( 139.189, -106.716, -190.235, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 140.44, -108.777, -192.013, 0.28 ) }
    dend_37 { pt3dadd( 142.171, -111.464, -193.742, 0.83 ) }
    dend_37 { pt3dadd( 143.657, -113.686, -194.703, 0.28 ) }
    dend_37 { pt3dadd( 146.248, -117.874, -195.52, 0.55 ) }
    dend_37 { pt3dadd( 148.002, -121.094, -195.681, 0.28 ) }
    dend_37 { pt3dadd( 148.68, -122.456, -195.637, 0.55 ) }
    dend_37 { pt3dadd( 150.74, -127.306, -195.058, 0.28 ) }
    dend_37 { pt3dadd( 151.568, -129.523, -194.657, 0.55 ) }
    dend_37 { pt3dadd( 152.671, -132.742, -194.072, 0.28 ) }
    dend_37 { pt3dadd( 153.166, -134.303, -193.782, 0.28 ) }
    dend_37 { pt3dadd( 153.653, -135.818, -193.665, 0.55 ) }
    dend_37 { pt3dadd( 154.678, -138.642, -193.641, 0.28 ) }
    dend_37 { pt3dadd( 155.903, -141.508, -193.951, 0.28 ) }
    dend_37 { pt3dadd( 156.56, -142.913, -194.171, 0.55 ) }
    dend_37 { pt3dadd( 158.133, -145.93, -194.792, 0.28 ) }
    dend_37 { pt3dadd( 159.452, -148.327, -195.333, 0.55 ) }
    dend_37 { pt3dadd( 160.938, -151.042, -196.041, 0.28 ) }
    dend_37 { pt3dadd( 161.987, -152.779, -196.713, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 18/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 34.1565, -35.1314, -39.7221, 1.11 ) }
    dend_36 { pt3dadd( 35.1061, -38.2116, -40.4927, 1.11 ) }
    dend_36 { pt3dadd( 36.3205, -41.6219, -41.4454, 0.55 ) }
    dend_36 { pt3dadd( 37.2201, -43.9864, -42.1274, 0.55 ) }
    dend_36 { pt3dadd( 38.3509, -46.8131, -42.9154, 0.55 ) }
    dend_36 { pt3dadd( 39.2887, -49.1546, -43.491, 0.55 ) }
    dend_36 { pt3dadd( 40.3543, -51.7849, -44.1213, 0.83 ) }
    dend_36 { pt3dadd( 41.4137, -54.3171, -44.6846, 0.55 ) }
    dend_36 { pt3dadd( 42.232, -56.114, -44.9815, 0.28 ) }
    dend_36 { pt3dadd( 42.9641, -57.6871, -45.1899, 0.55 ) }
    dend_36 { pt3dadd( 44.0618, -60.1651, -45.3712, 0.28 ) }
    dend_36 { pt3dadd( 44.7012, -61.6427, -45.4142, 0.55 ) }
    dend_36 { pt3dadd( 45.7859, -64.1003, -45.5781, 0.55 ) }
    dend_36 { pt3dadd( 46.6468, -65.7567, -45.767, 0.28 ) }
    dend_36 { pt3dadd( 47.0917, -66.4561, -45.9267, 0.55 ) }
    dend_36 { pt3dadd( 48.2803, -68.1014, -46.467, 0.28 ) }
    dend_36 { pt3dadd( 50.4922, -70.8117, -47.483, 0.55 ) }
    dend_36 { pt3dadd( 52.8653, -73.4085, -48.4636, 0.28 ) }
    dend_36 { pt3dadd( 54.646, -75.1385, -49.2036, 0.83 ) }
    dend_36 { pt3dadd( 57.1756, -77.3898, -50.1611, 0.28 ) }
    dend_36 { pt3dadd( 59.4382, -79.3817, -51.0325, 0.55 ) }
    dend_36 { pt3dadd( 61.1621, -80.8818, -51.6815, 0.28 ) }
    dend_36 { pt3dadd( 63.6064, -83.0659, -52.4752, 0.55 ) }
    dend_36 { pt3dadd( 65.2538, -84.5875, -52.9467, 0.55 ) }
    dend_36 { pt3dadd( 67.4287, -86.747, -53.5937, 0.55 ) }
    dend_36 { pt3dadd( 69.2522, -88.6929, -54.1296, 0.28 ) }
    dend_36 { pt3dadd( 70.7358, -90.3462, -54.552, 0.55 ) }
    dend_36 { pt3dadd( 71.6078, -91.4256, -54.8265, 0.28 ) }
    dend_36 { pt3dadd( 72.5368, -92.6458, -55.0797, 0.55 ) }
    dend_36 { pt3dadd( 73.278, -93.6222, -55.1904, 0.28 ) }
    dend_36 { pt3dadd( 74.5569, -95.2231, -55.2369, 0.55 ) }
    dend_36 { pt3dadd( 75.9317, -96.8566, -55.1059, 0.28 ) }
    dend_36 { pt3dadd( 77.8756, -99.1314, -54.8157, 0.55 ) }
    dend_36 { pt3dadd( 79.429, -100.911, -54.5102, 0.55 ) }
    dend_36 { pt3dadd( 81.2286, -102.957, -54.0861, 0.28 ) }
    dend_36 { pt3dadd( 82.6344, -104.631, -53.7292, 0.55 ) }
    dend_36 { pt3dadd( 84.0173, -106.346, -53.3471, 0.28 ) }
    dend_36 { pt3dadd( 85.0919, -107.738, -53.0838, 0.55 ) }
    dend_36 { pt3dadd( 85.6736, -108.538, -52.9301, 0.28 ) }
    dend_36 { pt3dadd( 85.9845, -109.002, -52.8804, 0.55 ) }
    dend_36 { pt3dadd( 87.1157, -110.717, -52.8398, 0.28 ) }
    dend_36 { pt3dadd( 88.583, -112.929, -52.99, 0.55 ) }
    dend_36 { pt3dadd( 89.4878, -114.203, -53.1324, 0.28 ) }
    dend_36 { pt3dadd( 90.5009, -115.529, -53.2957, 0.55 ) }
    dend_36 { pt3dadd( 91.9779, -117.337, -53.5426, 0.28 ) }
    dend_36 { pt3dadd( 92.9366, -118.442, -53.5688, 0.55 ) }
    dend_36 { pt3dadd( 93.9766, -119.569, -53.5672, 0.28 ) }
    dend_36 { pt3dadd( 95.2446, -120.968, -53.5563, 0.55 ) }
    dend_36 { pt3dadd( 96.5439, -122.352, -53.5344, 0.28 ) }
    dend_36 { pt3dadd( 97.3635, -123.178, -53.5307, 0.83 ) }
    dend_36 { pt3dadd( 100.31, -126.026, -53.4449, 0.28 ) }
    dend_36 { pt3dadd( 102.477, -128.038, -53.3949, 0.28 ) }
    dend_36 { pt3dadd( 103.673, -129.113, -53.3658, 0.55 ) }
    dend_36 { pt3dadd( 104.596, -129.878, -53.4194, 0.28 ) }
    dend_36 { pt3dadd( 106.517, -131.282, -53.7135, 0.55 ) }
    dend_36 { pt3dadd( 107.872, -132.123, -53.9884, 0.28 ) }
    dend_36 { pt3dadd( 109.611, -132.949, -54.4232, 0.55 ) }
    dend_36 { pt3dadd( 111.26, -133.532, -54.7652, 0.28 ) }
    dend_36 { pt3dadd( 113.15, -134.019, -55.1365, 0.55 ) }
    dend_36 { pt3dadd( 115.397, -134.455, -55.6773, 0.28 ) }
    dend_36 { pt3dadd( 116.792, -134.636, -56.0598, 0.55 ) }
    dend_36 { pt3dadd( 119.287, -134.863, -56.8345, 0.28 ) }
    dend_36 { pt3dadd( 121.065, -134.95, -57.394, 0.55 ) }
    dend_36 { pt3dadd( 122.521, -134.973, -57.8235, 0.28 ) }
    dend_36 { pt3dadd( 124.791, -135.028, -58.3023, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 9.88496, 12.7404, 1.65168, 1.38 ) }
    dend_34 { pt3dadd( 8.96674, 14.585, -0.670287, 1.38 ) }
    dend_34 { pt3dadd( 7.82378, 17.4143, -4.60002, 1.38 ) }
    dend_34 { pt3dadd( 7.37197, 19.295, -7.80499, 1.38 ) }
    dend_34 { pt3dadd( 6.92435, 21.7962, -12.0495, 1.11 ) }
    dend_34 { pt3dadd( 6.60099, 23.658, -15.185, 1.11 ) }
    dend_34 { pt3dadd( 6.17177, 25.2318, -17.9286, 0.83 ) }
    dend_34 { pt3dadd( 5.62717, 26.584, -20.8187, 0.83 ) }
    dend_34 { pt3dadd( 3.95065, 29.3926, -27.1289, 1.66 ) }
    dend_34 { pt3dadd( 3.14943, 30.522, -29.2135, 0.55 ) }
    dend_34 { pt3dadd( 2.78106, 31.0918, -29.9589, 0.55 ) }
    dend_34 { pt3dadd( 0.584212, 34.2315, -33.2139, 0.55 ) }
    dend_34 { pt3dadd( -0.491303, 35.5765, -34.3823, 0.28 ) }
    dend_34 { pt3dadd( -3.10785, 38.8893, -36.6652, 0.83 ) }
    dend_34 { pt3dadd( -7.04194, 44.5256, -39.6193, 0.55 ) }
    dend_34 { pt3dadd( -8.64648, 47.3725, -40.9619, 0.55 ) }
    dend_34 { pt3dadd( -9.71305, 50.03, -42.0094, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -10.0333, 51.3445, -42.4249, 0.55 ) }
    dend_34 { pt3dadd( -10.3712, 53.4789, -42.9031, 0.83 ) }
    dend_34 { pt3dadd( -10.5136, 56.2813, -43.2744, 0.55 ) }
    dend_34 { pt3dadd( -10.4593, 58.2867, -43.2762, 0.55 ) }
    dend_34 { pt3dadd( -10.2835, 61.0992, -43.363, 0.55 ) }
    dend_34 { pt3dadd( -10.1421, 62.6972, -43.4535, 0.55 ) }
    dend_34 { pt3dadd( -9.9887, 65.5366, -43.7216, 0.55 ) }
    dend_34 { pt3dadd( -9.97271, 67.3536, -43.949, 0.55 ) }
    dend_34 { pt3dadd( -10.0451, 69.7277, -44.4708, 0.83 ) }
    dend_34 { pt3dadd( -10.253, 72.4361, -45.2596, 0.28 ) }
    dend_34 { pt3dadd( -10.4922, 74.2944, -45.9033, 0.83 ) }
    dend_34 { pt3dadd( -10.8885, 77.112, -46.9316, 0.28 ) }
    dend_34 { pt3dadd( -11.153, 79.1029, -47.686, 0.83 ) }
    dend_34 { pt3dadd( -11.6926, 83.1816, -49.21, 0.28 ) }
    dend_34 { pt3dadd( -11.8732, 84.7615, -49.819, 0.28 ) }
    dend_34 { pt3dadd( -12.0099, 86.1779, -50.3592, 0.55 ) }
    dend_34 { pt3dadd( -12.194, 89.4521, -51.7131, 0.83 ) }
    dend_34 { pt3dadd( -12.2403, 91.2545, -52.4569, 0.28 ) }
    dend_34 { pt3dadd( -12.2688, 92.1939, -52.8516, 0.55 ) }
    dend_34 { pt3dadd( -12.3698, 95.3444, -54.0946, 0.28 ) }
    dend_34 { pt3dadd( -12.4782, 97.2919, -54.9705, 0.83 ) }
    dend_34 { pt3dadd( -12.7009, 99.2393, -55.9407, 0.28 ) }
    dend_34 { pt3dadd( -13.0644, 100.775, -56.7771, 0.55 ) }
    dend_34 { pt3dadd( -13.6115, 102.592, -57.7874, 0.28 ) }
    dend_34 { pt3dadd( -13.8515, 103.314, -58.1652, 0.55 ) }
    dend_34 { pt3dadd( -14.505, 105.154, -59.0404, 0.28 ) }
    dend_34 { pt3dadd( -14.8119, 106.13, -59.5267, 0.55 ) }
    dend_34 { pt3dadd( -15.7132, 109.489, -61.1506, 0.83 ) }
    dend_34 { pt3dadd( -16.1037, 111.329, -62.0393, 0.55 ) }
    dend_34 { pt3dadd( -16.3305, 113.26, -62.9645, 0.28 ) }
    dend_34 { pt3dadd( -16.4036, 114.762, -63.6852, 0.83 ) }
    dend_34 { pt3dadd( -16.3087, 118.121, -65.3681, 0.55 ) }
    dend_34 { pt3dadd( -16.1722, 119.766, -66.2358, 0.28 ) }
    dend_34 { pt3dadd( -16.0242, 120.591, -66.6882, 0.55 ) }
    dend_34 { pt3dadd( -15.5334, 122.974, -67.9947, 0.28 ) }
    dend_34 { pt3dadd( -15.3973, 123.516, -68.2905, 0.55 ) }
    dend_34 { pt3dadd( -14.6438, 126.256, -69.6502, 0.28 ) }
    dend_34 { pt3dadd( -14.2535, 127.683, -70.3009, 0.83 ) }
    dend_34 { pt3dadd( -13.4697, 130.592, -71.5461, 0.28 ) }
    dend_34 { pt3dadd( -13.1437, 131.891, -72.0077, 0.55 ) }
    dend_34 { pt3dadd( -12.634, 134.204, -72.6645, 0.28 ) }
    dend_34 { pt3dadd( -12.2423, 136.002, -73.0876, 0.55 ) }
    dend_34 { pt3dadd( -11.6075, 139.208, -73.6574, 0.28 ) }
    dend_34 { pt3dadd( -11.1827, 141.627, -74.7108, 0.55 ) }
    dend_34 { pt3dadd( -10.827, 144.14, -76.2392, 0.55 ) }
    dend_34 { pt3dadd( -10.3979, 147.346, -78.5799, 0.28 ) }
    dend_34 { pt3dadd( -10.1765, 149.032, -79.9633, 0.55 ) }
    dend_34 { pt3dadd( -9.92396, 150.953, -81.6839, 0.55 ) }
    dend_34 { pt3dadd( -8.41564, 162.347, -92.5777, 0.55 ) }
    dend_34 { pt3dadd( -8.22283, 163.775, -94.0289, 0.28 ) }
    dend_34 { pt3dadd( -8.10516, 164.594, -94.8928, 0.55 ) }
    dend_34 { pt3dadd( -7.93914, 165.829, -96.1898, 0.28 ) }
    dend_34 { pt3dadd( -7.83445, 166.662, -96.9862, 0.55 ) }
    dend_34 { pt3dadd( -7.59767, 168.362, -98.0792, 0.55 ) }
    dend_34 { pt3dadd( -7.40309, 169.766, -98.1834, 0.28 ) }
    dend_34 { pt3dadd( -7.1632, 171.542, -98.4227, 0.55 ) }
    dend_34 { pt3dadd( -7.01583, 172.935, -98.6791, 0.55 ) }
    dend_34 { pt3dadd( -6.96596, 173.749, -98.888, 0.28 ) }
    dend_34 { pt3dadd( -6.91396, 176.101, -99.6345, 0.55 ) }
    dend_34 { pt3dadd( -6.95551, 177.995, -100.386, 0.55 ) }
    dend_34 { pt3dadd( -6.98051, 179.183, -100.88, 0.28 ) }
    dend_34 { pt3dadd( -6.97845, 179.754, -101.126, 0.55 ) }
    dend_34 { pt3dadd( -6.93513, 181.619, -101.887, 0.28 ) }
    dend_34 { pt3dadd( -6.92576, 182.724, -102.291, 0.55 ) }
    dend_34 { pt3dadd( -6.89337, 184.626, -102.952, 0.28 ) }
    dend_34 { pt3dadd( -6.79861, 187.696, -103.966, 0.55 ) }
    dend_34 { pt3dadd( -6.60271, 191.502, -105.17, 0.28 ) }
    dend_34 { pt3dadd( -6.43646, 194.097, -105.91, 0.55 ) }
    dend_34 { pt3dadd( -6.29297, 196.024, -106.402, 0.55 ) }
    dend_34 { pt3dadd( -6.08834, 198.587, -107.0, 0.55 ) }
    dend_34 { pt3dadd( -5.90785, 200.605, -107.386, 0.28 ) }
    dend_34 { pt3dadd( -5.7145, 202.988, -107.75, 0.55 ) }
    dend_34 { pt3dadd( -5.44034, 205.513, -107.985, 0.55 ) }
    dend_34 { pt3dadd( -5.38192, 205.906, -108.009, 0.28 ) }
    dend_34 { pt3dadd( -5.18795, 206.914, -108.066, 0.28 ) }
    dend_34 { pt3dadd( -4.49106, 210.062, -108.223, 0.55 ) }
    dend_34 { pt3dadd( -3.89039, 212.241, -108.449, 0.83 ) }
    dend_34 { pt3dadd( -3.25871, 214.168, -108.639, 0.28 ) }
    dend_34 { pt3dadd( -2.67354, 215.658, -108.78, 0.55 ) }
    dend_34 { pt3dadd( -1.36361, 218.417, -108.766, 0.28 ) }
    dend_34 { pt3dadd( -0.142522, 220.53, -108.56, 0.55 ) }
    dend_34 { pt3dadd( 1.67877, 223.073, -108.063, 0.28 ) }
    dend_34 { pt3dadd( 3.83184, 225.558, -107.351, 0.55 ) }
    dend_34 { pt3dadd( 5.41394, 227.08, -106.803, 0.55 ) }
    dend_34 { pt3dadd( 8.95874, 230.169, -105.385, 0.28 ) }
    dend_34 { pt3dadd( 10.2222, 231.136, -104.783, 0.28 ) }
    dend_34 { pt3dadd( 11.3084, 231.869, -104.219, 0.55 ) }
    dend_34 { pt3dadd( 13.05, 232.913, -103.278, 0.28 ) }
    dend_34 { pt3dadd( 15.8969, 234.445, -102.214, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.88496, 12.7404, 1.65168, 0.83 ) }
    dend_29 { pt3dadd( 11.1097, 16.0174, 0.170313, 0.83 ) }
    dend_29 { pt3dadd( 12.5511, 19.0313, -1.24195, 0.83 ) }
    dend_29 { pt3dadd( 14.5633, 22.1297, -2.86054, 0.83 ) }
    dend_29 { pt3dadd( 16.4886, 24.6444, -4.45448, 1.38 ) }
    dend_29 { pt3dadd( 17.8987, 26.4793, -5.72027, 0.83 ) }
    dend_29 { pt3dadd( 19.0832, 28.0021, -6.9843, 0.55 ) }
    dend_29 { pt3dadd( 21.0712, 30.431, -9.43723, 0.55 ) }
    dend_29 { pt3dadd( 23.1717, 32.7961, -12.0646, 0.83 ) }
    dend_29 { pt3dadd( 25.4318, 35.013, -14.8716, 0.83 ) }
    dend_29 { pt3dadd( 27.415, 36.747, -17.4285, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 30.6034, 39.5143, -21.8027, 0.55 ) }
    dend_29 { pt3dadd( 31.1732, 40.0995, -22.7563, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -61.5779, 44.5273, -3.16112, 0.55 ) }
    dend_25 { pt3dadd( -63.5036, 47.0019, -4.41333, 0.55 ) }
    dend_25 { pt3dadd( -65.382, 49.4788, -5.84818, 0.55 ) }
    dend_25 { pt3dadd( -66.71, 51.1059, -7.06716, 0.55 ) }
    dend_25 { pt3dadd( -68.7311, 53.4553, -9.20831, 0.55 ) }
    dend_25 { pt3dadd( -69.9251, 54.8234, -10.5833, 0.28 ) }
    dend_25 { pt3dadd( -71.1969, 56.2491, -12.0215, 0.83 ) }
    dend_25 { pt3dadd( -73.5508, 58.6993, -15.0425, 0.55 ) }
    dend_25 { pt3dadd( -75.2555, 60.5057, -17.5255, 0.55 ) }
    dend_25 { pt3dadd( -76.479, 61.844, -19.4247, 0.28 ) }
    dend_25 { pt3dadd( -77.5951, 63.0958, -21.136, 0.55 ) }
    dend_25 { pt3dadd( -79.1066, 64.8, -23.2563, 0.55 ) }
    dend_25 { pt3dadd( -81.1826, 67.3287, -26.083, 0.55 ) }
    dend_25 { pt3dadd( -82.5916, 69.38, -27.856, 0.28 ) }
    dend_25 { pt3dadd( -83.7527, 71.4147, -29.1239, 0.55 ) }
    dend_25 { pt3dadd( -84.7172, 73.2998, -30.0187, 0.28 ) }
    dend_25 { pt3dadd( -85.7077, 75.4978, -30.8498, 0.55 ) }
    dend_25 { pt3dadd( -86.1095, 76.4514, -31.1278, 0.55 ) }
    dend_25 { pt3dadd( -86.7766, 78.0036, -31.4628, 0.55 ) }
    dend_25 { pt3dadd( -87.7159, 80.0792, -31.9216, 0.28 ) }
    dend_25 { pt3dadd( -88.6211, 82.0796, -32.4322, 0.55 ) }
    dend_25 { pt3dadd( -89.5017, 83.8972, -32.9642, 0.28 ) }
    dend_25 { pt3dadd( -91.1184, 86.8595, -33.991, 0.55 ) }
    dend_25 { pt3dadd( -92.1967, 88.6344, -34.6789, 0.28 ) }
    dend_25 { pt3dadd( -92.4002, 88.9445, -34.8283, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -61.5779, 44.5273, -3.16112, 0.55 ) }
    dend_22 { pt3dadd( -63.1317, 46.8155, -2.48668, 0.55 ) }
    dend_22 { pt3dadd( -64.2009, 48.2005, -2.10965, 0.55 ) }
    dend_22 { pt3dadd( -66.5824, 50.8463, -1.31865, 0.55 ) }
    dend_22 { pt3dadd( -67.9669, 52.1587, -0.919266, 0.83 ) }
    dend_22 { pt3dadd( -69.5084, 53.3894, -0.491215, 0.55 ) }
    dend_22 { pt3dadd( -71.8086, 55.2259, 0.147533, 0.55 ) }
    dend_22 { pt3dadd( -73.1442, 56.2844, 0.549864, 0.55 ) }
    dend_22 { pt3dadd( -75.8843, 58.1716, 1.34923, 0.83 ) }
    dend_22 { pt3dadd( -78.288, 59.4325, 1.96647, 0.83 ) }
    dend_22 { pt3dadd( -81.3766, 60.8616, 2.59357, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.22544, -24.6724, -6.0499, 2.49 ) }
    dend_16 { pt3dadd( -8.62946, -27.6513, -5.92572, 2.49 ) }
    dend_16 { pt3dadd( -8.15726, -30.0115, -5.82733, 1.38 ) }
    dend_16 { pt3dadd( -8.08793, -30.358, -5.81288, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.22544, -24.6724, -6.0499, 1.38 ) }
    dend_1 { pt3dadd( -11.5729, -28.9482, 0.623888, 1.38 ) }
    dend_1 { pt3dadd( -12.4853, -30.6101, 3.21774, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 45/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.479, 29.4825, 0.455321, 0.524975 ) }
    axon_1 { pt3dadd( 39.9692, 40.2043, 0.455321, 0.524975 ) }
    axon_1 { pt3dadd( 50.4593, 50.9261, 0.455321, 0.524975 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 48/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 31.1732, 40.0995, -22.7563, 0.55 ) }
    dend_31 { pt3dadd( 31.6733, 41.4574, -22.9258, 0.55 ) }
    dend_31 { pt3dadd( 32.3885, 43.3561, -23.2506, 0.83 ) }
    dend_31 { pt3dadd( 33.0207, 44.9807, -23.6464, 0.55 ) }
    dend_31 { pt3dadd( 33.9716, 47.2713, -24.254, 0.28 ) }
    dend_31 { pt3dadd( 34.9933, 49.6558, -24.8945, 0.55 ) }
    dend_31 { pt3dadd( 36.3964, 52.7808, -25.7344, 0.55 ) }
    dend_31 { pt3dadd( 38.2877, 56.6279, -26.7974, 0.55 ) }
    dend_31 { pt3dadd( 39.8368, 59.5342, -27.5845, 0.55 ) }
    dend_31 { pt3dadd( 40.7624, 61.151, -27.9955, 0.83 ) }
    dend_31 { pt3dadd( 41.6142, 62.477, -28.292, 0.28 ) }
    dend_31 { pt3dadd( 42.2273, 63.3772, -28.4735, 0.28 ) }
    dend_31 { pt3dadd( 43.6101, 65.1652, -28.7463, 0.55 ) }
    dend_31 { pt3dadd( 45.409, 67.0133, -28.8606, 0.83 ) }
    dend_31 { pt3dadd( 46.853, 68.3697, -28.8606, 0.83 ) }
    dend_31 { pt3dadd( 48.2594, 69.6216, -28.8606, 0.28 ) }
    dend_31 { pt3dadd( 49.1879, 70.4536, -28.8668, 0.55 ) }
    dend_31 { pt3dadd( 50.8308, 71.9903, -28.9131, 0.55 ) }
    dend_31 { pt3dadd( 53.0685, 74.1115, -29.0179, 0.55 ) }
    dend_31 { pt3dadd( 55.0484, 76.0977, -29.142, 0.83 ) }
    dend_31 { pt3dadd( 56.9724, 78.2843, -29.3659, 0.28 ) }
    dend_31 { pt3dadd( 58.5425, 80.3623, -29.63, 0.55 ) }
    dend_31 { pt3dadd( 59.1578, 81.2855, -29.7817, 0.55 ) }
    dend_31 { pt3dadd( 60.1804, 83.0491, -30.1128, 0.55 ) }
    dend_31 { pt3dadd( 61.6487, 85.8589, -30.6701, 0.83 ) }
    dend_31 { pt3dadd( 62.9386, 88.3389, -31.2214, 0.28 ) }
    dend_31 { pt3dadd( 63.8483, 90.0691, -31.6141, 0.55 ) }
    dend_31 { pt3dadd( 65.6435, 93.2669, -32.3852, 0.55 ) }
    dend_31 { pt3dadd( 66.5353, 94.7991, -32.7689, 0.55 ) }
    dend_31 { pt3dadd( 67.9346, 97.1443, -33.4325, 0.83 ) }
    dend_31 { pt3dadd( 69.8243, 100.16, -34.3571, 0.28 ) }
    dend_31 { pt3dadd( 71.466, 102.622, -35.1181, 0.55 ) }
    dend_31 { pt3dadd( 73.429, 105.483, -36.0396, 0.28 ) }
    dend_31 { pt3dadd( 74.4454, 107.016, -36.563, 0.55 ) }
    dend_31 { pt3dadd( 75.4889, 108.588, -37.152, 0.28 ) }
    dend_31 { pt3dadd( 75.6987, 108.893, -37.2774, 0.55 ) }
    dend_31 { pt3dadd( 76.5257, 110.055, -37.7861, 0.28 ) }
    dend_31 { pt3dadd( 77.3157, 111.12, -38.2761, 0.55 ) }
    dend_31 { pt3dadd( 78.4013, 112.55, -38.8672, 0.28 ) }
    dend_31 { pt3dadd( 79.5052, 113.94, -39.3737, 0.55 ) }
    dend_31 { pt3dadd( 81.2056, 115.963, -40.0203, 0.55 ) }
    dend_31 { pt3dadd( 82.4228, 117.415, -40.4491, 0.28 ) }
    dend_31 { pt3dadd( 83.3596, 118.562, -40.7347, 0.55 ) }
    dend_31 { pt3dadd( 84.2776, 119.719, -40.9559, 0.28 ) }
    dend_31 { pt3dadd( 85.5169, 121.341, -41.178, 0.55 ) }
    dend_31 { pt3dadd( 87.2927, 123.747, -41.3314, 0.28 ) }
    dend_31 { pt3dadd( 88.1121, 124.929, -41.3294, 0.28 ) }
    dend_31 { pt3dadd( 89.8763, 127.611, -41.1808, 0.55 ) }
    dend_31 { pt3dadd( 91.0796, 129.446, -41.0668, 0.28 ) }
    dend_31 { pt3dadd( 92.1557, 131.072, -41.0191, 0.55 ) }
    dend_31 { pt3dadd( 93.3076, 132.823, -41.0056, 0.28 ) }
    dend_31 { pt3dadd( 93.9538, 133.817, -41.0149, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 94.7053, 134.943, -41.0651, 0.28 ) }
    dend_31 { pt3dadd( 95.9858, 136.972, -41.3048, 0.55 ) }
    dend_31 { pt3dadd( 96.9962, 138.691, -41.577, 0.28 ) }
    dend_31 { pt3dadd( 98.2883, 141.144, -42.0746, 0.55 ) }
    dend_31 { pt3dadd( 98.9635, 142.582, -42.43, 0.28 ) }
    dend_31 { pt3dadd( 99.5301, 143.834, -42.7537, 0.55 ) }
    dend_31 { pt3dadd( 100.359, 145.779, -43.25, 0.28 ) }
    dend_31 { pt3dadd( 101.164, 147.818, -43.7218, 0.55 ) }
    dend_31 { pt3dadd( 101.952, 149.852, -44.1383, 0.28 ) }
    dend_31 { pt3dadd( 102.527, 151.285, -44.4496, 0.55 ) }
    dend_31 { pt3dadd( 103.372, 153.246, -44.8615, 0.28 ) }
    dend_31 { pt3dadd( 103.814, 154.157, -45.0094, 0.55 ) }
    dend_31 { pt3dadd( 104.851, 156.226, -45.2935, 0.55 ) }
    dend_31 { pt3dadd( 106.03, 158.619, -45.4652, 0.55 ) }
    dend_31 { pt3dadd( 107.157, 160.841, -45.5572, 0.28 ) }
    dend_31 { pt3dadd( 107.985, 162.459, -45.5848, 0.55 ) }
    dend_31 { pt3dadd( 109.954, 166.473, -45.5349, 0.28 ) }
    dend_31 { pt3dadd( 110.736, 168.045, -45.4858, 0.55 ) }
    dend_31 { pt3dadd( 112.169, 170.959, -45.2632, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 19/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 31.1732, 40.0995, -22.7563, 0.55 ) }
    dend_30 { pt3dadd( 32.7188, 42.3651, -23.8534, 0.55 ) }
    dend_30 { pt3dadd( 33.9339, 44.2235, -24.6387, 0.55 ) }
    dend_30 { pt3dadd( 34.5324, 45.1168, -25.1698, 0.28 ) }
    dend_30 { pt3dadd( 34.9247, 45.7623, -25.6291, 0.83 ) }
    dend_30 { pt3dadd( 35.7558, 47.2729, -26.7324, 0.55 ) }
    dend_30 { pt3dadd( 36.1647, 48.1461, -27.3961, 0.28 ) }
    dend_30 { pt3dadd( 37.1334, 50.829, -29.5635, 0.83 ) }
    dend_30 { pt3dadd( 38.3195, 54.4147, -32.7951, 0.55 ) }
    dend_30 { pt3dadd( 38.8661, 56.0252, -34.3498, 0.28 ) }
    dend_30 { pt3dadd( 39.0958, 56.7496, -35.2178, 0.83 ) }
    dend_30 { pt3dadd( 39.6792, 58.7015, -37.7994, 0.55 ) }
    dend_30 { pt3dadd( 40.2174, 60.7802, -40.5694, 0.55 ) }
    dend_30 { pt3dadd( 40.4838, 62.2202, -42.4769, 0.28 ) }
    dend_30 { pt3dadd( 40.6644, 63.3388, -43.8682, 0.83 ) }
    dend_30 { pt3dadd( 41.5526, 68.3835, -49.8004, 0.55 ) }
    dend_30 { pt3dadd( 41.7945, 69.7417, -51.3123, 0.55 ) }
    dend_30 { pt3dadd( 42.0351, 71.1613, -52.7219, 0.83 ) }
    dend_30 { pt3dadd( 42.3954, 73.8654, -55.03, 0.55 ) }
    dend_30 { pt3dadd( 42.573, 75.2756, -56.085, 0.83 ) }
    dend_30 { pt3dadd( 42.8403, 77.2172, -57.3449, 0.28 ) }
    dend_30 { pt3dadd( 43.032, 78.4831, -57.9249, 0.55 ) }
    dend_30 { pt3dadd( 43.3787, 80.8466, -59.0293, 0.28 ) }
    dend_30 { pt3dadd( 43.5528, 81.8955, -59.5299, 0.55 ) }
    dend_30 { pt3dadd( 43.9316, 83.8491, -60.392, 0.28 ) }
    dend_30 { pt3dadd( 44.1756, 84.967, -60.929, 0.55 ) }
    dend_30 { pt3dadd( 44.6383, 86.9639, -61.9197, 0.28 ) }
    dend_30 { pt3dadd( 45.2089, 89.1184, -63.1028, 0.83 ) }
    dend_30 { pt3dadd( 46.1641, 92.2634, -64.9388, 0.28 ) }
    dend_30 { pt3dadd( 46.613, 93.5505, -65.7559, 0.83 ) }
    dend_30 { pt3dadd( 47.6725, 96.2807, -67.579, 0.28 ) }
    dend_30 { pt3dadd( 47.8364, 96.68, -67.859, 0.55 ) }
    dend_30 { pt3dadd( 48.7531, 98.4911, -69.1498, 0.28 ) }
    dend_30 { pt3dadd( 49.185, 99.2883, -69.779, 0.83 ) }
    dend_30 { pt3dadd( 50.2147, 101.132, -71.3893, 0.28 ) }
    dend_30 { pt3dadd( 50.9677, 102.423, -72.613, 0.55 ) }
    dend_30 { pt3dadd( 52.2208, 104.537, -74.6721, 0.28 ) }
    dend_30 { pt3dadd( 53.5716, 106.823, -76.8951, 0.28 ) }
    dend_30 { pt3dadd( 55.4291, 109.997, -79.9804, 0.83 ) }
    dend_30 { pt3dadd( 56.8742, 112.37, -82.2317, 0.55 ) }
    dend_30 { pt3dadd( 57.9877, 114.145, -83.8266, 0.28 ) }
    dend_30 { pt3dadd( 58.5353, 114.958, -84.5318, 0.55 ) }
    dend_30 { pt3dadd( 59.638, 116.554, -85.8412, 0.28 ) }
    dend_30 { pt3dadd( 60.1714, 117.382, -86.5304, 0.55 ) }
    dend_30 { pt3dadd( 61.8227, 120.067, -88.8163, 0.28 ) }
    dend_30 { pt3dadd( 62.9606, 121.858, -90.5244, 0.55 ) }
    dend_30 { pt3dadd( 64.6283, 124.356, -93.1876, 0.28 ) }
    dend_30 { pt3dadd( 65.3938, 125.451, -94.4844, 0.55 ) }
    dend_30 { pt3dadd( 67.762, 128.823, -98.8183, 1.38 ) }
    dend_30 { pt3dadd( 69.8256, 131.757, -102.737, 0.28 ) }
    dend_30 { pt3dadd( 70.9508, 133.337, -104.95, 0.55 ) }
    dend_30 { pt3dadd( 71.9343, 134.689, -106.851, 0.28 ) }
    dend_30 { pt3dadd( 72.7014, 135.807, -108.307, 0.28 ) }
    dend_30 { pt3dadd( 73.2259, 136.592, -109.235, 0.55 ) }
    dend_30 { pt3dadd( 73.9561, 137.763, -110.374, 0.55 ) }
    dend_30 { pt3dadd( 74.8288, 139.487, -111.897, 0.28 ) }
    dend_30 { pt3dadd( 75.1686, 140.364, -112.705, 0.55 ) }
    dend_30 { pt3dadd( 75.892, 142.587, -114.733, 0.28 ) }
    dend_30 { pt3dadd( 76.3209, 143.98, -116.011, 0.55 ) }
    dend_30 { pt3dadd( 76.8465, 145.923, -117.854, 0.28 ) }
    dend_30 { pt3dadd( 77.1941, 147.503, -119.321, 0.55 ) }
    dend_30 { pt3dadd( 77.737, 150.793, -122.226, 0.28 ) }
    dend_30 { pt3dadd( 78.0278, 152.738, -123.81, 0.28 ) }
    dend_30 { pt3dadd( 78.4425, 155.272, -125.747, 0.55 ) }
    dend_30 { pt3dadd( 78.9114, 158.0, -127.725, 0.28 ) }
    dend_30 { pt3dadd( 79.176, 159.655, -128.912, 0.28 ) }
    dend_30 { pt3dadd( 79.5275, 161.295, -130.039, 0.28 ) }
    dend_30 { pt3dadd( 79.9253, 162.919, -131.119, 0.55 ) }
    dend_30 { pt3dadd( 80.4514, 164.652, -132.309, 0.55 ) }
    dend_30 { pt3dadd( 81.4127, 167.272, -134.103, 0.28 ) }
    dend_30 { pt3dadd( 82.0567, 168.649, -135.05, 0.83 ) }
    dend_30 { pt3dadd( 83.4752, 171.229, -136.771, 0.55 ) }
    dend_30 { pt3dadd( 84.4832, 172.908, -137.791, 0.28 ) }
    dend_30 { pt3dadd( 85.3267, 174.293, -138.579, 0.55 ) }
    dend_30 { pt3dadd( 86.585, 176.339, -139.53, 0.28 ) }
    dend_30 { pt3dadd( 87.9452, 178.262, -140.26, 0.55 ) }
    dend_30 { pt3dadd( 89.4845, 180.234, -140.895, 0.28 ) }
    dend_30 { pt3dadd( 90.6731, 181.588, -141.289, 0.55 ) }
    dend_30 { pt3dadd( 92.6078, 183.563, -141.798, 0.28 ) }
    dend_30 { pt3dadd( 94.0074, 184.84, -142.088, 0.55 ) }
    dend_30 { pt3dadd( 96.6595, 187.007, -142.474, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( 97.4168, 187.544, -142.573, 0.55 ) }
    dend_30 { pt3dadd( 100.706, 189.43, -142.986, 0.28 ) }
    dend_30 { pt3dadd( 101.535, 189.843, -143.069, 0.55 ) }
    dend_30 { pt3dadd( 103.316, 190.592, -143.192, 0.28 ) }
    dend_30 { pt3dadd( 104.166, 190.901, -143.286, 0.55 ) }
    dend_30 { pt3dadd( 105.525, 191.28, -143.41, 0.28 ) }
    dend_30 { pt3dadd( 106.998, 191.544, -143.553, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -92.4002, 88.9445, -34.8283, 0.28 ) }
    dend_27 { pt3dadd( -92.447, 90.8115, -35.1827, 0.28 ) }
    dend_27 { pt3dadd( -92.5811, 93.1215, -35.5729, 0.83 ) }
    dend_27 { pt3dadd( -92.7156, 96.6579, -36.2409, 0.28 ) }
    dend_27 { pt3dadd( -92.7385, 97.4314, -36.4432, 0.55 ) }
    dend_27 { pt3dadd( -92.7733, 98.7719, -36.8449, 0.28 ) }
    dend_27 { pt3dadd( -92.8048, 99.8914, -37.2066, 0.55 ) }
    dend_27 { pt3dadd( -92.8501, 101.202, -37.7277, 0.28 ) }
    dend_27 { pt3dadd( -92.8954, 103.009, -38.5532, 0.55 ) }
    dend_27 { pt3dadd( -93.0115, 105.144, -39.6579, 0.55 ) }
    dend_27 { pt3dadd( -93.143, 106.719, -40.5209, 0.28 ) }
    dend_27 { pt3dadd( -93.5727, 110.8, -42.6744, 0.55 ) }
    dend_27 { pt3dadd( -93.9376, 113.413, -43.9162, 0.28 ) }
    dend_27 { pt3dadd( -94.0631, 114.108, -44.2011, 0.55 ) }
    dend_27 { pt3dadd( -94.7332, 117.236, -45.2384, 0.28 ) }
    dend_27 { pt3dadd( -95.2311, 119.513, -45.8241, 0.55 ) }
    dend_27 { pt3dadd( -95.7416, 121.894, -46.3133, 0.28 ) }
    dend_27 { pt3dadd( -96.3651, 124.919, -46.8274, 0.55 ) }
    dend_27 { pt3dadd( -96.796, 127.42, -47.1798, 0.28 ) }
    dend_27 { pt3dadd( -96.9744, 128.82, -47.3921, 0.55 ) }
    dend_27 { pt3dadd( -97.1072, 130.213, -47.6235, 0.28 ) }
    dend_27 { pt3dadd( -97.2355, 132.12, -48.1263, 0.55 ) }
    dend_27 { pt3dadd( -97.4124, 135.582, -49.3731, 0.28 ) }
    dend_27 { pt3dadd( -97.528, 137.446, -50.2275, 0.55 ) }
    dend_27 { pt3dadd( -97.7662, 139.946, -51.4924, 0.28 ) }
    dend_27 { pt3dadd( -97.9488, 141.066, -52.0786, 0.55 ) }
    dend_27 { pt3dadd( -98.702, 144.114, -53.7484, 0.28 ) }
    dend_27 { pt3dadd( -98.8738, 144.65, -54.0387, 0.55 ) }
    dend_27 { pt3dadd( -99.722, 146.889, -55.2204, 0.28 ) }
    dend_27 { pt3dadd( -100.257, 148.188, -55.8479, 1.11 ) }
    dend_27 { pt3dadd( -101.397, 150.981, -56.8861, 0.28 ) }
    dend_27 { pt3dadd( -102.338, 153.384, -57.5223, 0.28 ) }
    dend_27 { pt3dadd( -102.87, 154.712, -57.7357, 0.55 ) }
    dend_27 { pt3dadd( -103.797, 157.159, -58.027, 0.28 ) }
    dend_27 { pt3dadd( -104.476, 158.997, -58.1443, 0.55 ) }
    dend_27 { pt3dadd( -105.495, 161.694, -58.2726, 0.28 ) }
    dend_27 { pt3dadd( -106.015, 163.006, -58.2784, 0.55 ) }
    dend_27 { pt3dadd( -106.693, 164.669, -58.227, 0.28 ) }
    dend_27 { pt3dadd( -107.057, 165.489, -58.2182, 0.55 ) }
    dend_27 { pt3dadd( -107.579, 166.55, -58.2539, 0.28 ) }
    dend_27 { pt3dadd( -108.003, 167.329, -58.4255, 0.55 ) }
    dend_27 { pt3dadd( -108.828, 168.759, -58.8869, 0.28 ) }
    dend_27 { pt3dadd( -109.36, 169.691, -59.2432, 0.55 ) }
    dend_27 { pt3dadd( -109.639, 170.211, -59.4761, 0.28 ) }
    dend_27 { pt3dadd( -110.062, 171.02, -59.882, 0.55 ) }
    dend_27 { pt3dadd( -110.739, 172.332, -60.6218, 0.28 ) }
    dend_27 { pt3dadd( -111.757, 174.245, -61.715, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -92.4002, 88.9445, -34.8283, 0.55 ) }
    dend_26 { pt3dadd( -93.9202, 90.0834, -36.1644, 0.55 ) }
    dend_26 { pt3dadd( -95.3816, 91.2047, -37.5126, 0.28 ) }
    dend_26 { pt3dadd( -96.95, 92.3658, -39.0653, 0.83 ) }
    dend_26 { pt3dadd( -98.9955, 93.8646, -41.2104, 0.83 ) }
    dend_26 { pt3dadd( -100.737, 95.1443, -43.0543, 0.55 ) }
    dend_26 { pt3dadd( -102.381, 96.3652, -44.7811, 0.28 ) }
    dend_26 { pt3dadd( -103.328, 97.1, -45.8467, 0.55 ) }
    dend_26 { pt3dadd( -104.816, 98.2858, -47.5172, 0.28 ) }
    dend_26 { pt3dadd( -105.323, 98.7002, -48.0764, 0.55 ) }
    dend_26 { pt3dadd( -106.514, 99.7202, -49.2188, 0.28 ) }
    dend_26 { pt3dadd( -107.057, 100.259, -49.6533, 0.55 ) }
    dend_26 { pt3dadd( -108.178, 101.523, -50.3465, 0.28 ) }
    dend_26 { pt3dadd( -108.55, 101.988, -50.552, 0.55 ) }
    dend_26 { pt3dadd( -109.701, 103.627, -51.1149, 0.28 ) }
    dend_26 { pt3dadd( -109.848, 103.848, -51.194, 0.55 ) }
    dend_26 { pt3dadd( -110.593, 105.053, -51.6749, 0.28 ) }
    dend_26 { pt3dadd( -111.118, 105.96, -52.1226, 0.55 ) }
    dend_26 { pt3dadd( -112.265, 108.002, -53.1162, 0.28 ) }
    dend_26 { pt3dadd( -112.621, 108.679, -53.4663, 0.55 ) }
    dend_26 { pt3dadd( -113.151, 109.707, -54.0047, 0.28 ) }
    dend_26 { pt3dadd( -113.27, 109.923, -54.1377, 0.55 ) }
    dend_26 { pt3dadd( -114.331, 111.716, -55.2059, 0.28 ) }
    dend_26 { pt3dadd( -115.073, 112.972, -55.9052, 0.55 ) }
    dend_26 { pt3dadd( -115.675, 114.006, -56.484, 0.28 ) }
    dend_26 { pt3dadd( -116.678, 115.776, -57.525, 0.55 ) }
    dend_26 { pt3dadd( -118.901, 119.907, -60.2751, 0.28 ) }
    dend_26 { pt3dadd( -120.156, 122.316, -61.9517, 0.28 ) }
    dend_26 { pt3dadd( -120.692, 123.42, -62.7321, 0.55 ) }
    dend_26 { pt3dadd( -121.511, 125.282, -64.1118, 0.28 ) }
    dend_26 { pt3dadd( -121.887, 126.202, -64.7805, 0.55 ) }
    dend_26 { pt3dadd( -123.042, 129.239, -66.8159, 0.28 ) }
    dend_26 { pt3dadd( -123.606, 130.886, -67.7933, 0.28 ) }
    dend_26 { pt3dadd( -124.012, 132.061, -68.4617, 0.55 ) }
    dend_26 { pt3dadd( -125.487, 136.07, -70.4829, 0.28 ) }
    dend_26 { pt3dadd( -125.864, 137.071, -70.9345, 0.55 ) }
    dend_26 { pt3dadd( -127.797, 142.013, -72.9993, 0.28 ) }
    dend_26 { pt3dadd( -128.022, 142.567, -73.1925, 0.55 ) }
    dend_26 { pt3dadd( -128.572, 143.884, -73.6698, 0.28 ) }
    dend_26 { pt3dadd( -129.249, 145.349, -74.1729, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 94/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -81.3766, 60.8616, 2.59357, 0.83 ) }
    dend_24 { pt3dadd( -83.1838, 61.7313, 2.75147, 0.83 ) }
    dend_24 { pt3dadd( -85.0041, 62.7218, 2.78194, 0.28 ) }
    dend_24 { pt3dadd( -86.5925, 63.5461, 2.70633, 0.55 ) }
    dend_24 { pt3dadd( -87.7627, 64.1222, 2.6358, 0.55 ) }
    dend_24 { pt3dadd( -88.76, 64.6481, 2.58582, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -89.9925, 65.3127, 2.61872, 0.55 ) }
    dend_24 { pt3dadd( -90.9814, 65.9858, 2.66849, 0.28 ) }
    dend_24 { pt3dadd( -92.438, 67.0757, 2.80063, 0.55 ) }
    dend_24 { pt3dadd( -93.2631, 67.7594, 2.95271, 0.83 ) }
    dend_24 { pt3dadd( -94.9505, 69.2995, 3.3985, 0.83 ) }
    dend_24 { pt3dadd( -97.3016, 71.4279, 4.24614, 0.55 ) }
    dend_24 { pt3dadd( -99.5855, 73.4387, 5.21402, 0.55 ) }
    dend_24 { pt3dadd( -101.089, 74.7676, 5.9294, 0.55 ) }
    dend_24 { pt3dadd( -103.12, 76.6318, 6.98024, 0.55 ) }
    dend_24 { pt3dadd( -104.705, 78.0381, 7.79865, 0.55 ) }
    dend_24 { pt3dadd( -106.331, 79.4214, 8.60672, 0.55 ) }
    dend_24 { pt3dadd( -107.728, 80.533, 9.20022, 0.55 ) }
    dend_24 { pt3dadd( -108.524, 81.0943, 9.53762, 0.28 ) }
    dend_24 { pt3dadd( -108.952, 81.4031, 9.71234, 0.55 ) }
    dend_24 { pt3dadd( -110.087, 82.1338, 10.0686, 0.55 ) }
    dend_24 { pt3dadd( -111.906, 83.3771, 10.5313, 0.55 ) }
    dend_24 { pt3dadd( -115.345, 86.1496, 11.1771, 0.55 ) }
    dend_24 { pt3dadd( -121.43, 93.515, 14.545, 0.55 ) }
    dend_24 { pt3dadd( -127.36, 101.139, 17.6284, 0.55 ) }
    dend_24 { pt3dadd( -134.135, 107.852, 20.9766, 0.55 ) }
    dend_24 { pt3dadd( -139.59, 115.974, 23.7057, 0.55 ) }
    dend_24 { pt3dadd( -144.756, 123.931, 27.3185, 0.55 ) }
    dend_24 { pt3dadd( -149.295, 131.937, 31.6069, 0.55 ) }
    dend_24 { pt3dadd( -154.375, 138.616, 37.2397, 0.55 ) }
    dend_24 { pt3dadd( -158.275, 146.249, 42.656, 0.55 ) }
    dend_24 { pt3dadd( -160.655, 153.394, 49.4196, 0.55 ) }
    dend_24 { pt3dadd( -161.632, 160.257, 56.7826, 0.55 ) }
    dend_24 { pt3dadd( -163.284, 167.093, 64.0478, 0.55 ) }
    dend_24 { pt3dadd( -165.873, 174.238, 70.7347, 0.55 ) }
    dend_24 { pt3dadd( -167.965, 180.439, 78.4169, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 30/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -81.3766, 60.8616, 2.59357, 0.83 ) }
    dend_23 { pt3dadd( -83.6324, 63.6317, 2.77184, 0.83 ) }
    dend_23 { pt3dadd( -85.6728, 66.0909, 2.90284, 0.83 ) }
    dend_23 { pt3dadd( -87.605, 68.5105, 3.00471, 0.83 ) }
    dend_23 { pt3dadd( -88.6005, 69.7582, 3.04849, 0.55 ) }
    dend_23 { pt3dadd( -90.2611, 71.8428, 3.11015, 0.83 ) }
    dend_23 { pt3dadd( -92.0137, 73.9679, 3.18605, 0.55 ) }
    dend_23 { pt3dadd( -93.873, 76.1437, 3.28292, 0.55 ) }
    dend_23 { pt3dadd( -96.2565, 78.9214, 3.46322, 0.83 ) }
    dend_23 { pt3dadd( -97.9124, 80.828, 3.59478, 0.55 ) }
    dend_23 { pt3dadd( -99.8318, 83.0265, 3.72865, 0.55 ) }
    dend_23 { pt3dadd( -101.252, 84.5535, 3.81865, 0.55 ) }
    dend_23 { pt3dadd( -104.166, 87.4169, 3.97349, 0.83 ) }
    dend_23 { pt3dadd( -105.902, 88.906, 4.02968, 0.55 ) }
    dend_23 { pt3dadd( -107.116, 89.8009, 4.0416, 1.11 ) }
    dend_23 { pt3dadd( -108.599, 90.7281, 4.07412, 0.55 ) }
    dend_23 { pt3dadd( -110.351, 91.6178, 4.2098, 0.55 ) }
    dend_23 { pt3dadd( -113.078, 92.7885, 4.56549, 0.83 ) }
    dend_23 { pt3dadd( -115.305, 93.5115, 4.95064, 0.55 ) }
    dend_23 { pt3dadd( -117.489, 94.2537, 5.47956, 0.55 ) }
    dend_23 { pt3dadd( -119.886, 95.1526, 6.19481, 0.55 ) }
    dend_23 { pt3dadd( -123.688, 96.5752, 7.52554, 0.83 ) }
    dend_23 { pt3dadd( -125.507, 97.2814, 8.21638, 0.55 ) }
    dend_23 { pt3dadd( -128.042, 98.204, 9.18901, 0.55 ) }
    dend_23 { pt3dadd( -131.286, 99.5059, 10.3634, 0.55 ) }
    dend_23 { pt3dadd( -132.684, 100.106, 10.7985, 0.55 ) }
    dend_23 { pt3dadd( -135.628, 101.494, 11.5052, 0.28 ) }
    dend_23 { pt3dadd( -136.893, 102.098, 11.7392, 0.83 ) }
    dend_23 { pt3dadd( -139.476, 103.246, 12.119, 0.28 ) }
    dend_23 { pt3dadd( -142.466, 104.514, 12.3362, 0.28 ) }
    dend_23 { pt3dadd( -144.205, 105.181, 12.3263, 0.28 ) }
    dend_23 { pt3dadd( -145.342, 105.663, 12.2289, 0.28 ) }
    dend_23 { pt3dadd( -145.837, 105.907, 12.1354, 0.55 ) }
    dend_23 { pt3dadd( -148.295, 107.108, 11.535, 0.28 ) }
    dend_23 { pt3dadd( -150.302, 108.15, 10.9161, 0.28 ) }
    dend_23 { pt3dadd( -152.143, 109.019, 10.2753, 0.55 ) }
    dend_23 { pt3dadd( -154.045, 109.956, 9.59616, 0.28 ) }
    dend_23 { pt3dadd( -154.896, 110.37, 9.31594, 0.55 ) }
    dend_23 { pt3dadd( -156.109, 110.948, 8.98218, 0.28 ) }
    dend_23 { pt3dadd( -156.979, 111.404, 8.80448, 0.55 ) }
    dend_23 { pt3dadd( -158.022, 111.875, 8.74655, 0.28 ) }
    dend_23 { pt3dadd( -159.178, 112.3, 8.62549, 0.55 ) }
    dend_23 { pt3dadd( -160.294, 112.712, 8.52915, 0.28 ) }
    dend_23 { pt3dadd( -161.148, 113.037, 8.43424, 0.55 ) }
    dend_23 { pt3dadd( -162.217, 113.449, 8.3093, 0.28 ) }
    dend_23 { pt3dadd( -163.071, 113.81, 8.21251, 0.55 ) }
    dend_23 { pt3dadd( -166.147, 115.25, 7.77979, 0.28 ) }
    dend_23 { pt3dadd( -168.002, 116.064, 7.59204, 0.55 ) }
    dend_23 { pt3dadd( -169.268, 116.627, 7.45426, 1.11 ) }
    dend_23 { pt3dadd( -171.034, 117.429, 7.25979, 0.55 ) }
    dend_23 { pt3dadd( -172.638, 118.134, 7.1133, 0.55 ) }
    dend_23 { pt3dadd( -175.519, 119.436, 6.93525, 0.55 ) }
    dend_23 { pt3dadd( -177.605, 120.391, 7.0905, 0.55 ) }
    dend_23 { pt3dadd( -186.502, 124.775, 8.68411, 0.55 ) }
    dend_23 { pt3dadd( -195.019, 130.141, 8.91032, 0.55 ) }
    dend_23 { pt3dadd( -202.621, 136.79, 8.52485, 0.55 ) }
    dend_23 { pt3dadd( -210.788, 142.321, 6.48244, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.08793, -30.358, -5.81288, 0.83 ) }
    dend_18 { pt3dadd( -8.04215, -33.0325, -6.68231, 0.83 ) }
    dend_18 { pt3dadd( -7.99847, -35.584, -7.51182, 0.83 ) }
    dend_18 { pt3dadd( -7.91215, -40.6263, -9.15101, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.08793, -30.358, -5.81288, 0.55 ) }
    dend_17 { pt3dadd( -8.61227, -32.1376, -4.73997, 0.55 ) }
    dend_17 { pt3dadd( -9.56637, -34.8621, -3.20301, 0.55 ) }
    dend_17 { pt3dadd( -11.2254, -39.0831, -1.062, 0.55 ) }
    dend_17 { pt3dadd( -12.0839, -41.1532, -0.0112207, 0.55 ) }
    dend_17 { pt3dadd( -13.6337, -45.1012, 2.27698, 0.83 ) }
    dend_17 { pt3dadd( -14.4276, -47.0401, 3.51166, 0.55 ) }
    dend_17 { pt3dadd( -15.0646, -48.5852, 4.58541, 0.55 ) }
    dend_17 { pt3dadd( -15.7892, -50.2914, 5.75802, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -17.2543, -53.3836, 7.82362, 0.83 ) }
    dend_17 { pt3dadd( -19.4487, -57.9614, 10.956, 0.55 ) }
    dend_17 { pt3dadd( -20.5689, -60.2772, 12.5241, 0.55 ) }
    dend_17 { pt3dadd( -21.6914, -62.5756, 14.1375, 0.55 ) }
    dend_17 { pt3dadd( -23.5534, -66.4717, 16.8209, 0.55 ) }
    dend_17 { pt3dadd( -25.2536, -69.9519, 19.1865, 0.55 ) }
    dend_17 { pt3dadd( -26.3332, -72.0285, 20.5086, 0.83 ) }
    dend_17 { pt3dadd( -28.6556, -76.1977, 22.8871, 0.55 ) }
    dend_17 { pt3dadd( -29.7787, -78.1818, 23.9828, 0.55 ) }
    dend_17 { pt3dadd( -32.0988, -82.1779, 26.2169, 0.55 ) }
    dend_17 { pt3dadd( -33.8352, -85.0844, 27.8579, 0.28 ) }
    dend_17 { pt3dadd( -35.0407, -87.1101, 28.9183, 0.28 ) }
    dend_17 { pt3dadd( -37.2936, -90.6327, 30.7007, 0.28 ) }
    dend_17 { pt3dadd( -38.6398, -92.6499, 31.5941, 0.55 ) }
    dend_17 { pt3dadd( -42.9241, -101.185, 35.1033, 0.55 ) }
    dend_17 { pt3dadd( -48.9022, -109.106, 37.2351, 0.55 ) }
    dend_17 { pt3dadd( -56.2915, -115.999, 37.6473, 0.55 ) }
    dend_17 { pt3dadd( -64.3644, -121.973, 36.7193, 0.55 ) }
    dend_17 { pt3dadd( -73.317, -126.54, 36.7421, 0.55 ) }
    dend_17 { pt3dadd( -81.9813, -131.541, 37.8031, 0.55 ) }
    dend_17 { pt3dadd( -90.9964, -135.91, 37.0579, 0.55 ) }
    dend_17 { pt3dadd( -100.15, -139.99, 37.6681, 0.55 ) }
    dend_17 { pt3dadd( -108.359, -145.792, 36.9167, 0.55 ) }
    dend_17 { pt3dadd( -117.355, -149.667, 34.731, 0.55 ) }
    dend_17 { pt3dadd( -126.557, -151.465, 31.2314, 0.55 ) }
    dend_17 { pt3dadd( -136.201, -151.244, 28.5937, 0.55 ) }
    dend_17 { pt3dadd( -146.173, -151.499, 27.8953, 0.55 ) }
    dend_17 { pt3dadd( -156.12, -152.367, 27.3065, 0.55 ) }
    dend_17 { pt3dadd( -165.889, -152.449, 25.1718, 0.55 ) }
    dend_17 { pt3dadd( -175.841, -153.364, 24.7658, 0.55 ) }
    dend_17 { pt3dadd( -185.84, -153.426, 24.8012, 0.55 ) }
    dend_17 { pt3dadd( -195.705, -152.475, 26.1513, 0.55 ) }
    dend_17 { pt3dadd( -204.869, -150.167, 29.4609, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.4853, -30.6101, 3.21774, 0.83 ) }
    dend_3 { pt3dadd( -14.4826, -32.3413, -0.775637, 0.83 ) }
    dend_3 { pt3dadd( -15.3353, -33.0804, -2.48054, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.4853, -30.6101, 3.21774, 0.55 ) }
    dend_2 { pt3dadd( -11.7373, -33.3428, 1.60685, 0.55 ) }
    dend_2 { pt3dadd( -10.9457, -37.7548, -0.406027, 0.55 ) }
    dend_2 { pt3dadd( -10.6699, -39.2449, -1.10355, 0.55 ) }
    dend_2 { pt3dadd( -10.4504, -40.305, -1.76386, 0.55 ) }
    dend_2 { pt3dadd( -10.0888, -42.1936, -3.11598, 0.55 ) }
    dend_2 { pt3dadd( -9.73468, -44.4493, -4.97007, 0.55 ) }
    dend_2 { pt3dadd( -9.66889, -46.1804, -6.66182, 0.28 ) }
    dend_2 { pt3dadd( -9.69245, -47.5824, -8.14819, 0.83 ) }
    dend_2 { pt3dadd( -9.68554, -51.1564, -12.2331, 0.55 ) }
    dend_2 { pt3dadd( -9.64366, -52.747, -14.0147, 0.83 ) }
    dend_2 { pt3dadd( -9.60882, -54.8151, -16.2569, 0.55 ) }
    dend_2 { pt3dadd( -9.5465, -56.8241, -18.2881, 0.55 ) }
    dend_2 { pt3dadd( -9.46548, -57.8466, -19.2305, 0.55 ) }
    dend_2 { pt3dadd( -9.24916, -59.6826, -20.6667, 0.83 ) }
    dend_2 { pt3dadd( -8.63772, -63.619, -23.2808, 0.83 ) }
    dend_2 { pt3dadd( -8.16894, -66.3026, -25.0322, 0.55 ) }
    dend_2 { pt3dadd( -7.92466, -67.6071, -25.703, 0.55 ) }
    dend_2 { pt3dadd( -7.42008, -70.317, -26.8193, 0.83 ) }
    dend_2 { pt3dadd( -7.25626, -71.4377, -27.1928, 0.55 ) }
    dend_2 { pt3dadd( -6.96593, -73.7007, -27.9237, 0.83 ) }
    dend_2 { pt3dadd( -6.42324, -78.1004, -29.3741, 0.55 ) }
    dend_2 { pt3dadd( -5.80319, -84.3237, -31.1436, 0.55 ) }
    dend_2 { pt3dadd( -5.75314, -85.7306, -31.48, 0.83 ) }
    dend_2 { pt3dadd( -5.86385, -88.3677, -31.9775, 0.83 ) }
    dend_2 { pt3dadd( -6.11812, -91.9365, -32.7945, 0.83 ) }
    dend_2 { pt3dadd( -6.17444, -94.2459, -33.4002, 0.55 ) }
    dend_2 { pt3dadd( -6.10214, -96.7074, -34.5279, 0.55 ) }
    dend_2 { pt3dadd( -6.00773, -98.5579, -35.8975, 0.83 ) }
    dend_2 { pt3dadd( -5.91174, -100.077, -37.1795, 0.28 ) }
    dend_2 { pt3dadd( -5.73672, -102.155, -39.0653, 0.55 ) }
    dend_2 { pt3dadd( -5.60586, -103.997, -40.9507, 0.55 ) }
    dend_2 { pt3dadd( -5.29949, -107.417, -44.6842, 0.55 ) }
    dend_2 { pt3dadd( -5.05506, -109.596, -47.2932, 0.28 ) }
    dend_2 { pt3dadd( -4.95744, -110.502, -48.383, 0.55 ) }
    dend_2 { pt3dadd( -4.77393, -113.218, -51.5807, 0.83 ) }
    dend_2 { pt3dadd( -4.81251, -116.953, -55.6556, 0.28 ) }
    dend_2 { pt3dadd( -4.94306, -118.592, -57.2941, 0.55 ) }
    dend_2 { pt3dadd( -5.13921, -121.062, -59.3139, 0.28 ) }
    dend_2 { pt3dadd( -5.20779, -122.533, -60.3516, 0.83 ) }
    dend_2 { pt3dadd( -5.22323, -124.313, -61.4181, 0.28 ) }
    dend_2 { pt3dadd( -5.11878, -125.944, -62.1698, 0.83 ) }
    dend_2 { pt3dadd( -4.79282, -127.944, -63.0068, 0.83 ) }
    dend_2 { pt3dadd( -4.16927, -130.754, -64.3082, 0.28 ) }
    dend_2 { pt3dadd( -3.65668, -132.525, -65.2056, 1.66 ) }
    dend_2 { pt3dadd( -2.93902, -134.383, -66.3001, 0.28 ) }
    dend_2 { pt3dadd( -2.14377, -136.147, -67.3791, 0.55 ) }
    dend_2 { pt3dadd( -0.328079, -139.581, -69.939, 0.28 ) }
    dend_2 { pt3dadd( 0.527067, -141.036, -71.2697, 0.55 ) }
    dend_2 { pt3dadd( 1.6909, -142.911, -73.307, 0.28 ) }
    dend_2 { pt3dadd( 2.57826, -144.273, -74.9092, 0.55 ) }
    dend_2 { pt3dadd( 3.76245, -146.035, -77.1051, 0.55 ) }
    dend_2 { pt3dadd( 5.5279, -148.52, -80.2599, 0.83 ) }
    dend_2 { pt3dadd( 7.18925, -150.697, -82.9275, 0.83 ) }
    dend_2 { pt3dadd( 8.4971, -152.227, -84.8743, 0.28 ) }
    dend_2 { pt3dadd( 9.07043, -152.824, -85.6866, 0.55 ) }
    dend_2 { pt3dadd( 10.1694, -153.87, -87.2035, 0.28 ) }
    dend_2 { pt3dadd( 10.8718, -154.426, -88.0591, 0.28 ) }
    dend_2 { pt3dadd( 12.2155, -155.351, -89.2719, 0.28 ) }
    dend_2 { pt3dadd( 13.4621, -156.109, -90.302, 0.83 ) }
    dend_2 { pt3dadd( 16.2961, -157.676, -92.6052, 0.28 ) }
    dend_2 { pt3dadd( 16.7333, -157.914, -92.9616, 0.55 ) }
    dend_2 { pt3dadd( 17.8076, -158.515, -93.904, 0.28 ) }
    dend_2 { pt3dadd( 18.7976, -159.144, -94.8491, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_2 { pt3dadd( 21.3339, -160.917, -97.5923, 0.28 ) }
    dend_2 { pt3dadd( 21.9901, -161.448, -98.3717, 0.28 ) }
    dend_2 { pt3dadd( 22.954, -162.38, -99.5598, 0.55 ) }
    dend_2 { pt3dadd( 24.3608, -163.996, -101.586, 0.28 ) }
    dend_2 { pt3dadd( 25.0483, -165.003, -102.758, 0.55 ) }
    dend_2 { pt3dadd( 26.2125, -167.17, -105.058, 0.28 ) }
    dend_2 { pt3dadd( 27.1729, -169.777, -107.296, 0.55 ) }
    dend_2 { pt3dadd( 27.4402, -171.14, -108.421, 0.55 ) }
    dend_2 { pt3dadd( 27.4883, -172.663, -109.674, 0.55 ) }
    dend_2 { pt3dadd( 27.2423, -174.67, -111.256, 0.28 ) }
    dend_2 { pt3dadd( 27.061, -175.329, -111.831, 0.28 ) }
    dend_2 { pt3dadd( 25.8764, -178.522, -114.735, 0.55 ) }
    dend_2 { pt3dadd( 24.345, -181.882, -118.01, 0.55 ) }
    dend_2 { pt3dadd( 23.5278, -183.68, -119.772, 0.28 ) }
    dend_2 { pt3dadd( 22.5286, -186.089, -122.048, 0.83 ) }
    dend_2 { pt3dadd( 21.1707, -189.436, -125.06, 0.28 ) }
    dend_2 { pt3dadd( 20.4518, -191.331, -126.65, 0.55 ) }
    dend_2 { pt3dadd( 19.634, -193.817, -128.497, 0.55 ) }
    dend_2 { pt3dadd( 18.8149, -197.303, -130.559, 0.55 ) }
    dend_2 { pt3dadd( 18.1363, -201.454, -132.599, 0.28 ) }
    dend_2 { pt3dadd( 17.7532, -204.096, -133.707, 0.55 ) }
    dend_2 { pt3dadd( 17.5843, -205.421, -134.175, 0.28 ) }
    dend_2 { pt3dadd( 17.3237, -207.362, -134.801, 0.55 ) }
    dend_2 { pt3dadd( 16.9871, -210.465, -135.745, 0.28 ) }
    dend_2 { pt3dadd( 16.7743, -211.961, -136.287, 0.83 ) }
    dend_2 { pt3dadd( 16.2237, -214.889, -137.592, 0.28 ) }
    dend_2 { pt3dadd( 15.9149, -216.485, -138.546, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 112.169, 170.959, -45.2632, 0.28 ) }
    dend_33 { pt3dadd( 115.555, 172.121, -43.7678, 0.28 ) }
    dend_33 { pt3dadd( 116.64, 172.493, -43.2883, 0.55 ) }
    dend_33 { pt3dadd( 119.342, 173.421, -42.0946, 0.28 ) }
    dend_33 { pt3dadd( 120.338, 173.762, -41.6549, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 112.169, 170.959, -45.2632, 0.28 ) }
    dend_32 { pt3dadd( 113.624, 172.369, -44.2645, 0.28 ) }
    dend_32 { pt3dadd( 114.43, 173.147, -43.7044, 0.55 ) }
    dend_32 { pt3dadd( 116.658, 175.321, -42.1739, 0.28 ) }
    dend_32 { pt3dadd( 117.817, 176.394, -41.3704, 0.55 ) }
    dend_32 { pt3dadd( 120.878, 179.075, -39.2921, 0.28 ) }
    dend_32 { pt3dadd( 122.141, 180.081, -38.5426, 0.55 ) }
    dend_32 { pt3dadd( 123.356, 180.89, -37.7754, 0.28 ) }
    dend_32 { pt3dadd( 124.119, 181.356, -37.2881, 0.55 ) }
    dend_32 { pt3dadd( 125.679, 182.151, -36.35, 0.28 ) }
    dend_32 { pt3dadd( 126.401, 182.435, -35.9475, 0.55 ) }
    dend_32 { pt3dadd( 129.915, 182.762, -35.2451, 0.28 ) }
    dend_32 { pt3dadd( 132.911, 182.086, -34.8765, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 45/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.91215, -40.6263, -9.15101, 0.55 ) }
    dend_20 { pt3dadd( -7.31849, -43.1203, -9.06442, 0.55 ) }
    dend_20 { pt3dadd( -6.81645, -45.0072, -8.99504, 0.83 ) }
    dend_20 { pt3dadd( -5.82204, -48.25, -8.86897, 0.83 ) }
    dend_20 { pt3dadd( -5.0616, -50.4923, -8.88901, 0.55 ) }
    dend_20 { pt3dadd( -4.34603, -52.5715, -8.99487, 0.83 ) }
    dend_20 { pt3dadd( -3.85507, -53.9393, -9.07116, 0.28 ) }
    dend_20 { pt3dadd( -2.63728, -57.2091, -9.35347, 0.55 ) }
    dend_20 { pt3dadd( -2.11332, -58.5279, -9.45025, 0.28 ) }
    dend_20 { pt3dadd( -1.17262, -60.8643, -9.58184, 0.83 ) }
    dend_20 { pt3dadd( -0.100127, -63.3886, -9.61583, 0.83 ) }
    dend_20 { pt3dadd( 0.6888, -65.2854, -9.48681, 0.28 ) }
    dend_20 { pt3dadd( 1.26044, -66.8194, -9.26743, 0.55 ) }
    dend_20 { pt3dadd( 2.01965, -69.2616, -8.74697, 0.28 ) }
    dend_20 { pt3dadd( 2.69294, -71.7605, -8.04471, 0.83 ) }
    dend_20 { pt3dadd( 3.27952, -74.0169, -7.27236, 0.83 ) }
    dend_20 { pt3dadd( 3.78772, -76.0002, -6.62638, 0.83 ) }
    dend_20 { pt3dadd( 4.08733, -77.3397, -6.28733, 1.11 ) }
    dend_20 { pt3dadd( 4.46156, -78.9878, -5.94168, 1.11 ) }
    dend_20 { pt3dadd( 5.0804, -81.7481, -5.58043, 0.55 ) }
    dend_20 { pt3dadd( 5.40129, -83.1387, -5.44614, 0.83 ) }
    dend_20 { pt3dadd( 6.0065, -85.5078, -5.3212, 0.55 ) }
    dend_20 { pt3dadd( 6.88817, -88.7121, -5.22926, 0.28 ) }
    dend_20 { pt3dadd( 7.31528, -90.208, -5.18062, 0.55 ) }
    dend_20 { pt3dadd( 8.09595, -92.7984, -5.13399, 0.55 ) }
    dend_20 { pt3dadd( 8.43245, -93.8984, -5.14435, 0.28 ) }
    dend_20 { pt3dadd( 9.44498, -97.2503, -5.23854, 0.55 ) }
    dend_20 { pt3dadd( 10.2714, -99.8319, -5.2496, 0.28 ) }
    dend_20 { pt3dadd( 11.0322, -101.983, -5.21268, 0.55 ) }
    dend_20 { pt3dadd( 11.7787, -104.017, -5.10538, 0.28 ) }
    dend_20 { pt3dadd( 12.2683, -105.381, -4.95961, 0.55 ) }
    dend_20 { pt3dadd( 12.8034, -106.979, -4.69789, 0.28 ) }
    dend_20 { pt3dadd( 13.5405, -109.239, -4.17577, 0.55 ) }
    dend_20 { pt3dadd( 14.0818, -110.752, -3.76032, 0.28 ) }
    dend_20 { pt3dadd( 14.8366, -112.83, -3.2372, 0.55 ) }
    dend_20 { pt3dadd( 16.2569, -116.565, -2.42255, 0.28 ) }
    dend_20 { pt3dadd( 17.0428, -118.482, -2.02925, 0.55 ) }
    dend_20 { pt3dadd( 18.8816, -122.683, -1.39329, 0.28 ) }
    dend_20 { pt3dadd( 19.7344, -124.602, -1.28426, 0.55 ) }
    dend_20 { pt3dadd( 21.0207, -127.415, -1.18499, 0.28 ) }
    dend_20 { pt3dadd( 21.9351, -129.385, -1.15052, 0.28 ) }
    dend_20 { pt3dadd( 23.0445, -131.766, -1.13112, 0.28 ) }
    dend_20 { pt3dadd( 23.8323, -133.726, -1.22046, 0.55 ) }
    dend_20 { pt3dadd( 24.9145, -137.053, -1.49605, 0.28 ) }
    dend_20 { pt3dadd( 25.7147, -140.132, -1.8279, 0.55 ) }
    dend_20 { pt3dadd( 26.5086, -144.17, -2.27869, 0.28 ) }
    dend_20 { pt3dadd( 26.7218, -145.753, -2.50129, 0.55 ) }
    dend_20 { pt3dadd( 27.0361, -150.01, -3.17835, 0.28 ) }
    dend_20 { pt3dadd( 27.0452, -151.911, -3.49824, 0.55 ) }
    dend_20 { pt3dadd( 26.9149, -154.222, -3.98689, 0.28 ) }
    dend_20 { pt3dadd( 26.7445, -155.747, -4.42636, 0.55 ) }
    dend_20 { pt3dadd( 26.3981, -157.972, -5.05716, 0.28 ) }
    dend_20 { pt3dadd( 26.0349, -160.293, -5.59246, 0.55 ) }
    dend_20 { pt3dadd( 25.5225, -163.656, -6.2244, 0.28 ) }
    dend_20 { pt3dadd( 25.3707, -164.869, -6.432, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 25.2261, -166.681, -6.68246, 0.28 ) }
    dend_20 { pt3dadd( 25.1214, -168.813, -6.99506, 0.55 ) }
    dend_20 { pt3dadd( 25.079, -171.911, -7.47404, 0.28 ) }
    dend_20 { pt3dadd( 25.2299, -173.595, -7.73455, 0.55 ) }
    dend_20 { pt3dadd( 25.5678, -174.979, -7.77648, 0.28 ) }
    dend_20 { pt3dadd( 25.948, -176.174, -7.73878, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.91215, -40.6263, -9.15101, 0.55 ) }
    dend_19 { pt3dadd( -8.72261, -42.4812, -10.763, 0.55 ) }
    dend_19 { pt3dadd( -8.95731, -43.0562, -11.2577, 0.55 ) }
    dend_19 { pt3dadd( -9.65339, -44.8428, -12.7369, 0.55 ) }
    dend_19 { pt3dadd( -10.8869, -48.1322, -15.3956, 0.55 ) }
    dend_19 { pt3dadd( -12.0561, -51.3369, -17.8454, 0.83 ) }
    dend_19 { pt3dadd( -13.2242, -54.2834, -20.0723, 0.55 ) }
    dend_19 { pt3dadd( -13.7794, -55.7367, -21.1758, 0.55 ) }
    dend_19 { pt3dadd( -14.1763, -56.8593, -21.9921, 0.28 ) }
    dend_19 { pt3dadd( -15.0279, -59.5003, -23.7415, 0.55 ) }
    dend_19 { pt3dadd( -15.8156, -62.1596, -25.1891, 0.55 ) }
    dend_19 { pt3dadd( -16.6532, -64.7568, -26.4062, 0.55 ) }
    dend_19 { pt3dadd( -17.5601, -67.7853, -27.6486, 0.55 ) }
    dend_19 { pt3dadd( -18.5227, -71.2801, -28.9561, 0.55 ) }
    dend_19 { pt3dadd( -19.144, -73.7614, -29.7389, 0.83 ) }
    dend_19 { pt3dadd( -19.6279, -75.9659, -30.2691, 0.83 ) }
    dend_19 { pt3dadd( -19.954, -77.73, -30.5675, 0.55 ) }
    dend_19 { pt3dadd( -20.1483, -78.8724, -30.6913, 0.55 ) }
    dend_19 { pt3dadd( -20.5192, -80.6337, -30.8229, 0.83 ) }
    dend_19 { pt3dadd( -21.2544, -83.7624, -31.1065, 0.55 ) }
    dend_19 { pt3dadd( -21.721, -85.7554, -31.4119, 0.28 ) }
    dend_19 { pt3dadd( -22.0156, -86.9721, -31.6514, 0.83 ) }
    dend_19 { pt3dadd( -22.5906, -88.9931, -32.0937, 0.55 ) }
    dend_19 { pt3dadd( -23.1189, -90.639, -32.5878, 0.28 ) }
    dend_19 { pt3dadd( -23.929, -93.1614, -33.4831, 0.55 ) }
    dend_19 { pt3dadd( -24.5579, -95.4549, -34.4682, 0.28 ) }
    dend_19 { pt3dadd( -24.8834, -96.918, -35.1477, 0.28 ) }
    dend_19 { pt3dadd( -25.2078, -98.9376, -36.1387, 0.83 ) }
    dend_19 { pt3dadd( -25.5026, -101.883, -37.6031, 0.28 ) }
    dend_19 { pt3dadd( -25.6571, -104.385, -38.8424, 0.83 ) }
    dend_19 { pt3dadd( -25.7307, -106.862, -40.0243, 0.28 ) }
    dend_19 { pt3dadd( -25.713, -107.698, -40.3742, 0.83 ) }
    dend_19 { pt3dadd( -25.5939, -109.876, -41.2129, 0.55 ) }
    dend_19 { pt3dadd( -25.486, -111.3, -41.689, 0.28 ) }
    dend_19 { pt3dadd( -25.3363, -113.559, -42.2389, 0.55 ) }
    dend_19 { pt3dadd( -25.2402, -115.681, -42.6576, 0.28 ) }
    dend_19 { pt3dadd( -25.2377, -117.656, -42.9125, 0.55 ) }
    dend_19 { pt3dadd( -25.2693, -119.69, -43.1499, 0.28 ) }
    dend_19 { pt3dadd( -25.2899, -121.116, -43.3298, 0.55 ) }
    dend_19 { pt3dadd( -25.2632, -122.123, -43.5069, 0.28 ) }
    dend_19 { pt3dadd( -25.2306, -122.676, -43.632, 0.55 ) }
    dend_19 { pt3dadd( -24.957, -125.278, -44.5389, 0.28 ) }
    dend_19 { pt3dadd( -24.6025, -128.09, -45.097, 0.83 ) }
    dend_19 { pt3dadd( -24.2113, -130.39, -45.3129, 0.28 ) }
    dend_19 { pt3dadd( -23.4916, -133.46, -45.4538, 0.28 ) }
    dend_19 { pt3dadd( -22.9943, -135.106, -45.4894, 0.83 ) }
    dend_19 { pt3dadd( -21.6105, -138.684, -45.3662, 0.28 ) }
    dend_19 { pt3dadd( -16.5743, -149.265, -43.8331, 0.83 ) }
    dend_19 { pt3dadd( -15.0339, -152.286, -43.2608, 0.55 ) }
    dend_19 { pt3dadd( -13.8097, -154.561, -42.9258, 0.55 ) }
    dend_19 { pt3dadd( -13.2529, -155.549, -43.1525, 0.55 ) }
    dend_19 { pt3dadd( -12.8925, -156.187, -43.575, 0.28 ) }
    dend_19 { pt3dadd( -12.1198, -157.542, -44.6065, 0.55 ) }
    dend_19 { pt3dadd( -10.8521, -159.701, -46.2554, 0.28 ) }
    dend_19 { pt3dadd( -10.0796, -161.168, -47.1936, 0.55 ) }
    dend_19 { pt3dadd( -9.01886, -163.446, -48.5312, 0.28 ) }
    dend_19 { pt3dadd( -8.17523, -165.488, -49.7803, 0.83 ) }
    dend_19 { pt3dadd( -7.45352, -167.522, -51.1542, 0.28 ) }
    dend_19 { pt3dadd( -6.95928, -169.366, -52.5503, 0.55 ) }
    dend_19 { pt3dadd( -6.41983, -172.584, -55.0335, 0.28 ) }
    dend_19 { pt3dadd( -6.36937, -173.685, -55.9133, 0.55 ) }
    dend_19 { pt3dadd( -6.62014, -176.973, -58.6107, 0.28 ) }
    dend_19 { pt3dadd( -7.02516, -178.829, -60.3724, 0.55 ) }
    dend_19 { pt3dadd( -7.90789, -181.25, -62.8715, 0.28 ) }
    dend_19 { pt3dadd( -8.3644, -182.157, -63.8359, 0.55 ) }
    dend_19 { pt3dadd( -9.02589, -183.179, -64.9277, 0.28 ) }
    dend_19 { pt3dadd( -9.70416, -184.01, -65.8672, 0.55 ) }
    dend_19 { pt3dadd( -11.6861, -185.89, -68.1742, 0.28 ) }
    dend_19 { pt3dadd( -12.5379, -186.576, -69.0943, 0.55 ) }
    dend_19 { pt3dadd( -13.7087, -187.396, -70.3096, 0.55 ) }
    dend_19 { pt3dadd( -15.6256, -188.758, -72.347, 0.28 ) }
    dend_19 { pt3dadd( -16.7821, -189.656, -73.6255, 0.83 ) }
    dend_19 { pt3dadd( -17.9205, -190.635, -74.9062, 0.28 ) }
    dend_19 { pt3dadd( -18.4022, -191.113, -75.4543, 0.55 ) }
    dend_19 { pt3dadd( -19.6479, -192.547, -76.9448, 0.28 ) }
    dend_19 { pt3dadd( -20.6743, -193.92, -78.2374, 0.55 ) }
    dend_19 { pt3dadd( -21.9118, -195.904, -79.826, 0.28 ) }
    dend_19 { pt3dadd( -22.1995, -196.43, -80.2176, 0.55 ) }
    dend_19 { pt3dadd( -23.1916, -198.383, -81.5813, 0.28 ) }
    dend_19 { pt3dadd( -23.8734, -199.756, -82.5183, 0.55 ) }
    dend_19 { pt3dadd( -25.6491, -203.154, -84.7981, 0.28 ) }
    dend_19 { pt3dadd( -26.4375, -204.521, -85.7075, 0.55 ) }
    dend_19 { pt3dadd( -26.8854, -205.28, -86.151, 0.28 ) }
    dend_19 { pt3dadd( -27.0702, -205.585, -86.3309, 0.55 ) }
    dend_19 { pt3dadd( -28.0059, -207.032, -87.1168, 0.28 ) }
    dend_19 { pt3dadd( -28.7097, -208.029, -87.8227, 0.55 ) }
    dend_19 { pt3dadd( -29.3604, -208.881, -88.46, 0.28 ) }
    dend_19 { pt3dadd( -29.993, -209.761, -89.2426, 0.55 ) }
    dend_19 { pt3dadd( -31.2122, -211.684, -90.9021, 0.28 ) }
    dend_19 { pt3dadd( -31.7545, -212.627, -91.8557, 0.55 ) }
    dend_19 { pt3dadd( -33.3703, -215.698, -95.2878, 0.28 ) }
    dend_19 { pt3dadd( -33.9983, -217.075, -96.9406, 0.28 ) }
    dend_19 { pt3dadd( -34.7529, -219.058, -99.4006, 0.28 ) }
    dend_19 { pt3dadd( -35.1484, -220.369, -101.011, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( -35.7708, -223.597, -104.573, 0.55 ) }
    dend_19 { pt3dadd( -35.8432, -224.4, -105.378, 0.28 ) }
    dend_19 { pt3dadd( -35.8396, -225.287, -106.168, 0.55 ) }
    dend_19 { pt3dadd( -35.8228, -226.222, -107.038, 0.28 ) }
    dend_19 { pt3dadd( -35.8882, -227.085, -107.808, 0.55 ) }
    dend_19 { pt3dadd( -36.0141, -228.176, -108.715, 0.28 ) }
    dend_19 { pt3dadd( -36.1635, -229.304, -109.439, 0.55 ) }
    dend_19 { pt3dadd( -36.7761, -233.632, -112.119, 0.28 ) }
    dend_19 { pt3dadd( -36.9437, -234.662, -112.764, 0.55 ) }
    dend_19 { pt3dadd( -37.8238, -239.433, -115.832, 0.28 ) }
    dend_19 { pt3dadd( -38.0792, -240.753, -116.693, 0.55 ) }
    dend_19 { pt3dadd( -39.1038, -245.965, -120.046, 0.28 ) }
    dend_19 { pt3dadd( -39.3674, -247.433, -120.907, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.3353, -33.0804, -2.48054, 0.83 ) }
    dend_9 { pt3dadd( -17.6597, -31.4788, -3.94777, 0.83 ) }
    dend_9 { pt3dadd( -20.427, -30.0804, -6.01049, 0.83 ) }
    dend_9 { pt3dadd( -22.7906, -29.1864, -7.92081, 0.83 ) }
    dend_9 { pt3dadd( -24.8709, -28.6644, -9.74297, 0.83 ) }
    dend_9 { pt3dadd( -28.1041, -28.3005, -12.8636, 0.83 ) }
    dend_9 { pt3dadd( -31.2054, -28.393, -16.0409, 0.83 ) }
    dend_9 { pt3dadd( -33.6894, -29.0959, -18.8236, 0.55 ) }
    dend_9 { pt3dadd( -35.3013, -29.759, -20.6565, 0.55 ) }
    dend_9 { pt3dadd( -36.7405, -30.4181, -22.2765, 0.83 ) }
    dend_9 { pt3dadd( -38.4638, -31.1644, -24.1082, 0.55 ) }
    dend_9 { pt3dadd( -40.1904, -31.7079, -25.5945, 0.55 ) }
    dend_9 { pt3dadd( -43.1726, -32.1438, -27.8076, 0.55 ) }
    dend_9 { pt3dadd( -45.3246, -31.9216, -29.0196, 0.55 ) }
    dend_9 { pt3dadd( -47.7463, -31.3216, -30.1764, 0.55 ) }
    dend_9 { pt3dadd( -49.051, -30.8178, -30.8777, 0.55 ) }
    dend_9 { pt3dadd( -50.3972, -30.2483, -31.6402, 0.55 ) }
    dend_9 { pt3dadd( -52.5477, -29.4028, -32.996, 0.55 ) }
    dend_9 { pt3dadd( -54.0496, -29.0539, -34.0369, 1.11 ) }
    dend_9 { pt3dadd( -55.2089, -29.0092, -34.8779, 1.11 ) }
    dend_9 { pt3dadd( -60.7801, -29.5848, -39.1696, 0.55 ) }
    dend_9 { pt3dadd( -62.6221, -29.9116, -40.6384, 0.55 ) }
    dend_9 { pt3dadd( -64.1874, -30.2732, -41.9289, 0.55 ) }
    dend_9 { pt3dadd( -66.8615, -30.9455, -44.2332, 0.55 ) }
    dend_9 { pt3dadd( -69.2181, -31.4039, -46.6019, 0.55 ) }
    dend_9 { pt3dadd( -71.128, -31.5431, -49.0777, 0.55 ) }
    dend_9 { pt3dadd( -71.9536, -31.5398, -50.3976, 0.28 ) }
    dend_9 { pt3dadd( -72.5315, -31.4618, -51.5451, 0.83 ) }
    dend_9 { pt3dadd( -73.8379, -31.1136, -54.4517, 0.83 ) }
    dend_9 { pt3dadd( -75.4332, -30.4459, -58.4773, 0.83 ) }
    dend_9 { pt3dadd( -77.0903, -29.4915, -63.4705, 0.55 ) }
    dend_9 { pt3dadd( -77.7679, -29.0642, -65.6702, 0.55 ) }
    dend_9 { pt3dadd( -78.6553, -28.5874, -68.4487, 0.28 ) }
    dend_9 { pt3dadd( -79.1096, -28.3864, -69.7394, 0.83 ) }
    dend_9 { pt3dadd( -80.0299, -27.9519, -72.1724, 0.55 ) }
    dend_9 { pt3dadd( -81.0022, -27.1706, -74.546, 0.55 ) }
    dend_9 { pt3dadd( -82.2939, -25.7263, -77.6554, 0.28 ) }
    dend_9 { pt3dadd( -83.0096, -24.947, -79.2811, 1.11 ) }
    dend_9 { pt3dadd( -83.5663, -24.3988, -80.5992, 0.83 ) }
    dend_9 { pt3dadd( -84.8514, -23.3113, -83.7071, 0.83 ) }
    dend_9 { pt3dadd( -86.4161, -22.2558, -87.7039, 0.83 ) }
    dend_9 { pt3dadd( -88.9144, -20.8732, -94.065, 0.28 ) }
    dend_9 { pt3dadd( -89.7235, -20.5068, -96.223, 0.83 ) }
    dend_9 { pt3dadd( -92.0642, -19.5309, -102.822, 0.28 ) }
    dend_9 { pt3dadd( -93.0787, -19.2023, -105.82, 0.83 ) }
    dend_9 { pt3dadd( -95.0487, -18.8969, -111.828, 0.28 ) }
    dend_9 { pt3dadd( -95.3265, -18.9191, -112.793, 0.28 ) }
    dend_9 { pt3dadd( -95.7829, -19.0384, -114.604, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.3353, -33.0804, -2.48054, 1.11 ) }
    dend_4 { pt3dadd( -16.7292, -34.7525, -1.60815, 1.11 ) }
    dend_4 { pt3dadd( -18.7732, -36.56, -0.645041, 1.11 ) }
    dend_4 { pt3dadd( -20.2634, -37.8215, -0.0274556, 1.11 ) }
    dend_4 { pt3dadd( -22.3579, -39.726, 1.09284, 1.11 ) }
    dend_4 { pt3dadd( -24.3842, -41.7423, 2.43782, 0.83 ) }
    dend_4 { pt3dadd( -25.8007, -43.1703, 3.44002, 0.83 ) }
    dend_4 { pt3dadd( -27.6447, -44.7931, 4.70855, 0.83 ) }
    dend_4 { pt3dadd( -30.1052, -46.6497, 6.23957, 0.83 ) }
    dend_4 { pt3dadd( -33.5195, -49.0979, 8.17234, 1.11 ) }
    dend_4 { pt3dadd( -35.3508, -50.343, 9.03694, 0.83 ) }
    dend_4 { pt3dadd( -36.8994, -51.3429, 9.69578, 0.83 ) }
    dend_4 { pt3dadd( -39.4568, -52.8505, 10.6308, 0.83 ) }
    dend_4 { pt3dadd( -42.3975, -54.4224, 11.4425, 0.83 ) }
    dend_4 { pt3dadd( -44.9439, -55.6047, 11.8772, 0.83 ) }
    dend_4 { pt3dadd( -47.9821, -56.9927, 12.1465, 0.83 ) }
    dend_4 { pt3dadd( -50.4517, -58.0991, 12.2974, 0.83 ) }
    dend_4 { pt3dadd( -52.4835, -59.0659, 12.4271, 0.83 ) }
    dend_4 { pt3dadd( -54.1289, -59.9182, 12.5334, 1.11 ) }
    dend_4 { pt3dadd( -56.2058, -61.0851, 12.6474, 0.83 ) }
    dend_4 { pt3dadd( -58.3572, -62.3341, 12.7644, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 82/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -95.7829, -19.0384, -114.604, 0.28 ) }
    dend_11 { pt3dadd( -98.6611, -20.1145, -118.624, 0.28 ) }
    dend_11 { pt3dadd( -99.4105, -20.376, -119.621, 0.55 ) }
    dend_11 { pt3dadd( -100.852, -20.7631, -121.415, 0.28 ) }
    dend_11 { pt3dadd( -101.926, -20.879, -122.815, 0.28 ) }
    dend_11 { pt3dadd( -103.417, -20.945, -124.817, 0.55 ) }
    dend_11 { pt3dadd( -105.755, -21.0019, -127.858, 0.28 ) }
    dend_11 { pt3dadd( -106.459, -21.0435, -128.833, 0.55 ) }
    dend_11 { pt3dadd( -107.784, -21.1312, -130.755, 1.11 ) }
    dend_11 { pt3dadd( -110.511, -21.3969, -134.863, 0.28 ) }
    dend_11 { pt3dadd( -111.96, -21.6683, -137.189, 0.55 ) }
    dend_11 { pt3dadd( -113.633, -22.1022, -139.966, 0.55 ) }
    dend_11 { pt3dadd( -116.339, -23.3219, -144.814, 0.55 ) }
    dend_11 { pt3dadd( -117.498, -24.0291, -147.013, 0.55 ) }
    dend_11 { pt3dadd( -118.892, -25.0702, -149.743, 0.55 ) }
    dend_11 { pt3dadd( -119.894, -25.9752, -151.715, 0.55 ) }
    dend_11 { pt3dadd( -121.64, -27.689, -155.322, 0.55 ) }
    dend_11 { pt3dadd( -123.498, -29.6926, -159.407, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -125.461, -31.695, -163.325, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -95.7829, -19.0384, -114.604, 0.55 ) }
    dend_10 { pt3dadd( -95.1131, -21.0738, -115.861, 0.55 ) }
    dend_10 { pt3dadd( -94.1749, -23.9249, -117.622, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -58.3572, -62.3341, 12.7644, 0.55 ) }
    dend_8 { pt3dadd( -59.8946, -63.9206, 13.0749, 0.55 ) }
    dend_8 { pt3dadd( -61.0333, -65.1036, 13.2511, 0.55 ) }
    dend_8 { pt3dadd( -62.3762, -66.2827, 13.4051, 0.55 ) }
    dend_8 { pt3dadd( -64.2911, -67.7726, 13.5823, 0.55 ) }
    dend_8 { pt3dadd( -65.6303, -68.6641, 13.6839, 0.55 ) }
    dend_8 { pt3dadd( -68.4928, -70.4284, 13.8669, 0.55 ) }
    dend_8 { pt3dadd( -71.1725, -72.0998, 14.0071, 0.55 ) }
    dend_8 { pt3dadd( -73.8953, -73.92, 14.1076, 0.55 ) }
    dend_8 { pt3dadd( -75.5459, -74.9921, 14.2197, 0.55 ) }
    dend_8 { pt3dadd( -77.767, -76.4015, 14.4065, 0.55 ) }
    dend_8 { pt3dadd( -79.979, -77.8088, 14.6749, 0.55 ) }
    dend_8 { pt3dadd( -81.7188, -78.8276, 14.938, 0.55 ) }
    dend_8 { pt3dadd( -85.9513, -81.1284, 15.6802, 0.55 ) }
    dend_8 { pt3dadd( -89.1696, -82.8059, 16.3939, 0.55 ) }
    dend_8 { pt3dadd( -90.3824, -83.4513, 16.7512, 0.83 ) }
    dend_8 { pt3dadd( -92.2812, -84.5262, 17.4708, 0.55 ) }
    dend_8 { pt3dadd( -94.1267, -85.4809, 18.3078, 0.55 ) }
    dend_8 { pt3dadd( -96.072, -86.4555, 19.3029, 0.55 ) }
    dend_8 { pt3dadd( -97.9806, -87.4315, 20.3188, 0.55 ) }
    dend_8 { pt3dadd( -100.577, -89.1191, 21.7169, 0.55 ) }
    dend_8 { pt3dadd( -102.979, -90.7668, 23.0334, 0.55 ) }
    dend_8 { pt3dadd( -105.313, -92.4482, 24.2892, 0.55 ) }
    dend_8 { pt3dadd( -107.109, -93.7434, 25.2648, 0.55 ) }
    dend_8 { pt3dadd( -110.112, -95.705, 26.8553, 0.55 ) }
    dend_8 { pt3dadd( -112.573, -97.0195, 27.9407, 0.55 ) }
    dend_8 { pt3dadd( -114.648, -97.8683, 28.7143, 0.55 ) }
    dend_8 { pt3dadd( -116.441, -98.4755, 29.3131, 0.55 ) }
    dend_8 { pt3dadd( -118.494, -99.1719, 29.9481, 0.55 ) }
    dend_8 { pt3dadd( -121.01, -100.024, 30.7585, 0.83 ) }
    dend_8 { pt3dadd( -123.452, -100.948, 31.5665, 0.55 ) }
    dend_8 { pt3dadd( -125.253, -101.704, 32.0924, 0.55 ) }
    dend_8 { pt3dadd( -127.447, -102.828, 32.6842, 0.55 ) }
    dend_8 { pt3dadd( -128.65, -103.536, 32.9696, 0.55 ) }
    dend_8 { pt3dadd( -130.881, -104.967, 33.3898, 0.55 ) }
    dend_8 { pt3dadd( -132.898, -106.471, 33.7083, 0.55 ) }
    dend_8 { pt3dadd( -134.918, -107.95, 34.0163, 0.55 ) }
    dend_8 { pt3dadd( -135.831, -108.601, 34.1289, 0.83 ) }
    dend_8 { pt3dadd( -138.24, -110.247, 34.303, 0.55 ) }
    dend_8 { pt3dadd( -139.954, -111.344, 34.3472, 0.55 ) }
    dend_8 { pt3dadd( -144.517, -114.269, 34.2425, 0.55 ) }
    dend_8 { pt3dadd( -146.98, -115.721, 34.2129, 0.55 ) }
    dend_8 { pt3dadd( -150.251, -117.406, 34.2217, 0.55 ) }
    dend_8 { pt3dadd( -152.097, -118.205, 34.3253, 0.55 ) }
    dend_8 { pt3dadd( -153.969, -118.795, 34.5497, 1.38 ) }
    dend_8 { pt3dadd( -157.428, -119.512, 35.2203, 0.55 ) }
    dend_8 { pt3dadd( -160.842, -119.807, 36.2159, 0.55 ) }
    dend_8 { pt3dadd( -163.611, -119.995, 37.3916, 0.55 ) }
    dend_8 { pt3dadd( -166.519, -120.017, 38.886, 0.55 ) }
    dend_8 { pt3dadd( -169.092, -119.975, 40.3648, 0.55 ) }
    dend_8 { pt3dadd( -171.015, -119.901, 41.5857, 0.55 ) }
    dend_8 { pt3dadd( -173.564, -119.806, 43.3638, 0.55 ) }
    dend_8 { pt3dadd( -177.33, -119.922, 46.1916, 0.55 ) }
    dend_8 { pt3dadd( -178.989, -120.048, 47.4967, 0.55 ) }
    dend_8 { pt3dadd( -179.654, -120.126, 48.0031, 0.55 ) }
    dend_8 { pt3dadd( -180.874, -120.322, 48.8882, 0.28 ) }
    dend_8 { pt3dadd( -182.05, -120.484, 49.663, 0.83 ) }
    dend_8 { pt3dadd( -184.684, -120.785, 50.8858, 0.28 ) }
    dend_8 { pt3dadd( -186.022, -120.809, 51.3112, 0.28 ) }
    dend_8 { pt3dadd( -187.832, -120.731, 51.8061, 0.55 ) }
    dend_8 { pt3dadd( -190.871, -120.542, 52.5107, 0.55 ) }
    dend_8 { pt3dadd( -194.843, -120.29, 53.2823, 0.28 ) }
    dend_8 { pt3dadd( -198.395, -120.088, 53.9006, 0.28 ) }
    dend_8 { pt3dadd( -201.456, -119.954, 54.3296, 0.55 ) }
    dend_8 { pt3dadd( -202.925, -119.88, 54.5401, 0.55 ) }
    dend_8 { pt3dadd( -205.081, -119.818, 54.8536, 0.55 ) }
    dend_8 { pt3dadd( -207.38, -119.779, 55.2607, 0.28 ) }
    dend_8 { pt3dadd( -208.207, -119.8, 55.3261, 0.55 ) }
    dend_8 { pt3dadd( -209.588, -119.902, 55.409, 0.28 ) }
    dend_8 { pt3dadd( -209.983, -119.964, 55.4005, 0.55 ) }
    dend_8 { pt3dadd( -212.207, -120.215, 55.2112, 0.28 ) }
    dend_8 { pt3dadd( -213.621, -120.304, 55.0453, 0.83 ) }
    dend_8 { pt3dadd( -215.859, -120.427, 54.6952, 0.28 ) }
    dend_8 { pt3dadd( -217.799, -120.548, 54.3637, 0.28 ) }
    dend_8 { pt3dadd( -220.336, -120.768, 53.8854, 0.28 ) }
    dend_8 { pt3dadd( -222.621, -120.956, 53.3949, 0.28 ) }
    dend_8 { pt3dadd( -231.672, -125.214, 54.3087, 0.28 ) }
    dend_8 { pt3dadd( -240.041, -130.256, 56.7088, 0.28 ) }
    dend_8 { pt3dadd( -248.546, -134.622, 59.7927, 0.28 ) }
    dend_8 { pt3dadd( -256.861, -139.191, 63.1076, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -58.3572, -62.3341, 12.7644, 0.55 ) }
    dend_5 { pt3dadd( -58.7113, -65.1218, 12.3208, 0.55 ) }
    dend_5 { pt3dadd( -58.9159, -67.4109, 11.8456, 0.55 ) }
    dend_5 { pt3dadd( -58.9923, -68.6446, 11.527, 0.55 ) }
    dend_5 { pt3dadd( -59.1309, -70.2808, 11.0786, 0.83 ) }
    dend_5 { pt3dadd( -59.5333, -73.6336, 10.1872, 0.83 ) }
    dend_5 { pt3dadd( -59.8795, -76.1465, 9.57687, 0.55 ) }
    dend_5 { pt3dadd( -60.1553, -77.6683, 9.2168, 0.83 ) }
    dend_5 { pt3dadd( -60.5848, -79.7273, 8.76623, 0.55 ) }
    dend_5 { pt3dadd( -60.9834, -81.4285, 8.40255, 0.55 ) }
    dend_5 { pt3dadd( -61.7269, -84.0797, 7.87937, 0.55 ) }
    dend_5 { pt3dadd( -62.6867, -87.0536, 7.3635, 0.55 ) }
    dend_5 { pt3dadd( -63.9046, -90.6383, 6.87287, 0.55 ) }
    dend_5 { pt3dadd( -64.2999, -91.7622, 6.73406, 0.55 ) }
    dend_5 { pt3dadd( -65.5629, -95.3454, 6.34977, 0.55 ) }
    dend_5 { pt3dadd( -66.1606, -97.2504, 6.11037, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 0/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -125.461, -31.695, -163.325, 0.55 ) }
    dend_13 { pt3dadd( -128.129, -32.0077, -168.24, 0.55 ) }
    dend_13 { pt3dadd( -129.269, -32.1774, -170.133, 0.55 ) }
    dend_13 { pt3dadd( -131.306, -32.3705, -173.234, 0.55 ) }
    dend_13 { pt3dadd( -132.179, -32.4159, -174.443, 0.55 ) }
    dend_13 { pt3dadd( -134.192, -32.5208, -177.096, 0.55 ) }
    dend_13 { pt3dadd( -137.002, -32.6628, -180.704, 0.55 ) }
    dend_13 { pt3dadd( -138.515, -32.6459, -182.381, 0.55 ) }
    dend_13 { pt3dadd( -139.736, -32.6229, -183.666, 0.55 ) }
    dend_13 { pt3dadd( -140.988, -32.6648, -184.803, 0.55 ) }
    dend_13 { pt3dadd( -142.439, -32.7138, -186.075, 0.55 ) }
    dend_13 { pt3dadd( -143.59, -32.6674, -186.927, 0.55 ) }
    dend_13 { pt3dadd( -144.613, -32.5022, -187.609, 0.28 ) }
    dend_13 { pt3dadd( -146.034, -32.2667, -188.587, 0.55 ) }
    dend_13 { pt3dadd( -148.771, -31.9635, -190.878, 0.28 ) }
    dend_13 { pt3dadd( -149.215, -31.9789, -191.302, 0.28 ) }
    dend_13 { pt3dadd( -149.77, -32.0574, -191.87, 0.55 ) }
    dend_13 { pt3dadd( -151.289, -32.4183, -193.509, 0.55 ) }
    dend_13 { pt3dadd( -152.323, -32.7859, -194.699, 0.55 ) }
    dend_13 { pt3dadd( -155.285, -34.3206, -198.44, 0.55 ) }
    dend_13 { pt3dadd( -157.412, -35.6184, -201.174, 0.55 ) }
    dend_13 { pt3dadd( -158.4, -36.3057, -202.492, 0.55 ) }
    dend_13 { pt3dadd( -159.395, -37.1304, -203.921, 0.55 ) }
    dend_13 { pt3dadd( -160.141, -37.9192, -205.099, 0.55 ) }
    dend_13 { pt3dadd( -161.257, -39.337, -207.007, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -125.461, -31.695, -163.325, 0.55 ) }
    dend_12 { pt3dadd( -124.481, -28.784, -163.325, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 27/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -66.1606, -97.2504, 6.11037, 0.55 ) }
    dend_7 { pt3dadd( -67.6105, -99.4327, 5.80886, 0.55 ) }
    dend_7 { pt3dadd( -68.6888, -100.911, 5.41283, 0.28 ) }
    dend_7 { pt3dadd( -69.8216, -102.088, 4.97958, 0.55 ) }
    dend_7 { pt3dadd( -71.5369, -103.66, 3.94656, 0.55 ) }
    dend_7 { pt3dadd( -72.9517, -104.763, 2.83939, 0.28 ) }
    dend_7 { pt3dadd( -73.513, -105.209, 2.33699, 0.83 ) }
    dend_7 { pt3dadd( -75.5101, -106.666, 0.440534, 0.55 ) }
    dend_7 { pt3dadd( -77.4667, -107.953, -1.39909, 0.55 ) }
    dend_7 { pt3dadd( -80.4428, -109.669, -4.4022, 0.55 ) }
    dend_7 { pt3dadd( -83.1806, -111.1, -7.19425, 0.55 ) }
    dend_7 { pt3dadd( -86.2031, -112.661, -10.2758, 0.55 ) }
    dend_7 { pt3dadd( -87.1282, -113.135, -11.1923, 0.55 ) }
    dend_7 { pt3dadd( -88.6672, -113.951, -12.6672, 0.55 ) }
    dend_7 { pt3dadd( -90.591, -114.924, -14.375, 0.55 ) }
    dend_7 { pt3dadd( -93.6143, -116.298, -16.845, 0.55 ) }
    dend_7 { pt3dadd( -95.0212, -116.915, -18.1166, 0.55 ) }
    dend_7 { pt3dadd( -97.5586, -118.12, -20.6733, 0.55 ) }
    dend_7 { pt3dadd( -99.2547, -119.077, -22.5738, 0.28 ) }
    dend_7 { pt3dadd( -101.183, -120.356, -24.9058, 0.55 ) }
    dend_7 { pt3dadd( -103.584, -122.146, -27.8661, 0.55 ) }
    dend_7 { pt3dadd( -106.701, -124.596, -31.852, 0.55 ) }
    dend_7 { pt3dadd( -108.735, -126.303, -34.4458, 0.55 ) }
    dend_7 { pt3dadd( -109.687, -127.239, -35.7401, 0.28 ) }
    dend_7 { pt3dadd( -110.836, -128.505, -37.4035, 0.55 ) }
    dend_7 { pt3dadd( -112.625, -130.621, -40.0944, 0.28 ) }
    dend_7 { pt3dadd( -113.136, -131.186, -40.7983, 0.28 ) }
    dend_7 { pt3dadd( -113.641, -131.722, -41.4834, 0.28 ) }
    dend_7 { pt3dadd( -115.444, -133.407, -43.8698, 1.38 ) }
    dend_7 { pt3dadd( -117.555, -135.287, -46.5391, 0.55 ) }
    dend_7 { pt3dadd( -118.691, -136.269, -47.9459, 0.28 ) }
    dend_7 { pt3dadd( -119.189, -136.732, -48.577, 0.55 ) }
    dend_7 { pt3dadd( -120.439, -138.033, -50.1494, 0.28 ) }
    dend_7 { pt3dadd( -121.218, -138.951, -51.0658, 0.55 ) }
    dend_7 { pt3dadd( -122.136, -140.497, -51.7573, 0.28 ) }
    dend_7 { pt3dadd( -122.344, -140.899, -51.8569, 0.55 ) }
    dend_7 { pt3dadd( -123.227, -142.794, -52.2037, 0.28 ) }
    dend_7 { pt3dadd( -123.874, -144.238, -52.41, 0.55 ) }
    dend_7 { pt3dadd( -124.641, -145.987, -52.5965, 0.28 ) }
    dend_7 { pt3dadd( -127.802, -153.424, -53.3306, 0.55 ) }
    dend_7 { pt3dadd( -128.627, -155.396, -53.502, 0.28 ) }
    dend_7 { pt3dadd( -129.187, -156.696, -53.6021, 0.55 ) }
    dend_7 { pt3dadd( -129.852, -158.141, -53.667, 0.28 ) }
    dend_7 { pt3dadd( -130.107, -158.724, -53.6955, 0.55 ) }
    dend_7 { pt3dadd( -130.591, -159.897, -53.7213, 0.28 ) }
    dend_7 { pt3dadd( -131.084, -161.218, -53.7633, 0.55 ) }
    dend_7 { pt3dadd( -131.685, -162.743, -53.8408, 0.28 ) }
    dend_7 { pt3dadd( -132.627, -165.041, -53.963, 0.83 ) }
    dend_7 { pt3dadd( -133.595, -167.309, -54.0638, 0.28 ) }
    dend_7 { pt3dadd( -134.343, -169.06, -54.1267, 0.28 ) }
    dend_7 { pt3dadd( -135.52, -171.833, -54.183, 0.55 ) }
    dend_7 { pt3dadd( -136.704, -174.625, -54.2663, 0.28 ) }
    dend_7 { pt3dadd( -137.858, -177.467, -54.2477, 0.28 ) }
    dend_7 { pt3dadd( -138.132, -178.133, -54.2349, 0.55 ) }
    dend_7 { pt3dadd( -139.04, -180.218, -54.1208, 0.28 ) }
    dend_7 { pt3dadd( -139.546, -181.459, -54.0745, 0.55 ) }
    dend_7 { pt3dadd( -140.381, -183.698, -53.9272, 0.28 ) }
    dend_7 { pt3dadd( -141.142, -186.421, -53.6119, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -66.1606, -97.2504, 6.11037, 0.28 ) }
    dend_6 { pt3dadd( -64.9353, -99.1401, 6.83035, 0.28 ) }
    dend_6 { pt3dadd( -64.0621, -100.452, 7.38144, 0.28 ) }
    dend_6 { pt3dadd( -63.6548, -101.064, 7.63849, 0.55 ) }
    dend_6 { pt3dadd( -63.0481, -101.975, 8.02143, 0.28 ) }
    dend_6 { pt3dadd( -62.5665, -102.698, 8.32533, 0.55 ) }
    dend_6 { pt3dadd( -60.9549, -105.119, 9.34249, 0.28 ) }
    dend_6 { pt3dadd( -59.8497, -106.931, 10.2765, 0.55 ) }
    dend_6 { pt3dadd( -54.1596, -114.257, 14.3438, 0.55 ) }
    dend_6 { pt3dadd( -47.8801, -121.697, 17.152, 0.55 ) }
    dend_6 { pt3dadd( -41.4511, -129.055, 19.8222, 0.55 ) }
    dend_6 { pt3dadd( -34.9906, -136.434, 22.3599, 0.55 ) }
    dend_6 { pt3dadd( -26.9694, -141.728, 25.3563, 0.55 ) }
    dend_6 { pt3dadd( -18.9825, -147.675, 26.9539, 0.55 ) }
    dend_6 { pt3dadd( -12.266, -154.735, 29.6816, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -6.25115, -162.861, 30.6681, 0.55 ) }
    dend_6 { pt3dadd( -1.12847, -171.325, 33.0277, 0.55 ) }
    dend_6 { pt3dadd( 3.56275, -179.955, 35.6947, 0.55 ) }
    dend_6 { pt3dadd( 9.20926, -188.056, 38.0731, 0.55 ) }
    dend_6 { pt3dadd( 15.5014, -195.697, 40.2711, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -161.257, -39.337, -207.007, 0.28 ) }
    dend_15 { pt3dadd( -163.17, -39.6809, -207.593, 0.28 ) }
    dend_15 { pt3dadd( -164.978, -39.9655, -209.299, 0.28 ) }
    dend_15 { pt3dadd( -166.688, -40.1889, -211.097, 0.28 ) }
    dend_15 { pt3dadd( -168.33, -40.3311, -212.823, 0.28 ) }
    dend_15 { pt3dadd( -170.223, -40.3623, -214.78, 0.28 ) }
    dend_15 { pt3dadd( -171.934, -40.5474, -217.801, 0.28 ) }
    dend_15 { pt3dadd( -174.506, -41.072, -224.194, 0.28 ) }
    dend_15 { pt3dadd( -174.967, -41.2253, -225.74, 0.55 ) }
    dend_15 { pt3dadd( -175.3, -41.3575, -227.138, 0.28 ) }
    dend_15 { pt3dadd( -175.638, -41.5157, -228.543, 0.55 ) }
    dend_15 { pt3dadd( -178.639, -43.3113, -239.909, 0.55 ) }
    dend_15 { pt3dadd( -179.014, -43.5045, -241.085, 0.28 ) }
    dend_15 { pt3dadd( -179.898, -44.0446, -243.38, 0.55 ) }
    dend_15 { pt3dadd( -180.809, -44.571, -245.508, 0.55 ) }
    dend_15 { pt3dadd( -182.051, -45.3607, -248.003, 0.55 ) }
    dend_15 { pt3dadd( -183.28, -46.1302, -249.846, 0.55 ) }
    dend_15 { pt3dadd( -184.896, -46.9562, -251.319, 0.55 ) }
    dend_15 { pt3dadd( -186.747, -47.9708, -253.128, 0.83 ) }
    dend_15 { pt3dadd( -187.273, -48.3009, -253.629, 0.83 ) }
    dend_15 { pt3dadd( -189.082, -49.6383, -255.415, 0.28 ) }
    dend_15 { pt3dadd( -190.955, -50.9944, -257.231, 0.55 ) }
    dend_15 { pt3dadd( -193.065, -52.1661, -259.027, 0.28 ) }
    dend_15 { pt3dadd( -193.955, -52.6595, -259.71, 0.55 ) }
    dend_15 { pt3dadd( -195.404, -53.4293, -260.784, 0.28 ) }
    dend_15 { pt3dadd( -196.26, -53.8372, -261.418, 0.28 ) }
    dend_15 { pt3dadd( -197.579, -54.195, -262.309, 0.55 ) }
    dend_15 { pt3dadd( -200.557, -54.6469, -263.903, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -161.257, -39.337, -207.007, 0.55 ) }
    dend_14 { pt3dadd( -160.687, -41.5612, -207.007, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_28, dend_21, dend_0, dend_37, dend_36, dend_34, dend_29, dend_25, dend_22, dend_16, dend_1, dend_31, dend_30, dend_27, dend_26, dend_24, dend_23, dend_18, dend_17, dend_3, dend_2, dend_33, dend_32, dend_20, dend_19, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_13, dend_12, dend_7, dend_6, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_21 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_29 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_27 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_26 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_23 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_17 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_28 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_22 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_21 nseg = 3
    dend_37 nseg = 13
    dend_36 nseg = 7
    dend_34 nseg = 13
    dend_29 nseg = 3
    dend_25 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 11
    dend_27 nseg = 5
    dend_26 nseg = 5
    dend_24 nseg = 9
    dend_23 nseg = 7
    dend_17 nseg = 13
    dend_2 nseg = 13
    dend_20 nseg = 7
    dend_19 nseg = 13
    dend_9 nseg = 7
    dend_4 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 11
    dend_13 nseg = 3
    dend_7 nseg = 7
    dend_6 nseg = 7
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_NBC_6561f8d865_0_0


