// Cell: cNAC187_L4_LBC_1cf329956f_0_0
/*
{
  "id" : "cNAC187_L4_LBC_1cf329956f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.53252, -6.163, 0.0, 2.09808", "-4.07436, -5.56219, 0.0, 3.44591", "-3.6162, -4.96138, 0.0, 4.74751", "-3.15805, -4.36057, 0.0, 6.03519", "-2.69989, -3.75975, 0.0, 7.18506", "-2.24173, -3.15894, 0.0, 8.9595", "-1.78358, -2.55813, 0.0, 10.0505", "-1.32542, -1.95732, 0.0, 10.6762", "-0.867263, -1.35651, 0.0, 11.0674", "-0.409106, -0.7557, 0.0, 11.2738", "0.0490503, -0.154889, 0.0, 11.4538", "0.507207, 0.445922, 0.0, 11.4611", "0.965364, 1.04673, 0.0, 11.064", "1.42352, 1.64754, 0.0, 10.6669", "1.88168, 2.24835, 0.0, 10.1594", "2.33983, 2.84917, 0.0, 9.31974", "2.79799, 3.44998, 0.0, 8.13613", "3.25615, 4.05079, 0.0, 6.95253", "3.7143, 4.6516, 0.0, 6.00786", "4.17246, 5.25241, 0.0, 5.12226", "4.63062, 5.85322, 0.0, 2.96305" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.75305, 6.64021, -4.12, 2.75", "4.20538, 7.19587, -4.32144, 2.29", "6.10991, 9.53547, -5.16961, 1.83", "7.04828, 10.6882, -5.58751, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.32694, -1.36454, -0.75, 1.38", "-5.46909, -1.256, -1.119, 1.38", "-6.65778, -0.39915, -3.80069, 1.38", "-7.86265, 0.393017, -6.2571, 1.38", "-9.83517, 1.638, -10.102, 0.92", "-10.8884, 2.20474, -12.1051, 0.92", "-10.9188, 2.22269, -12.1686, 0.92", "-11.9924, 2.86567, -14.6173, 0.92", "-13.0186, 3.46465, -17.0074, 0.92", "-13.0289, 3.47113, -17.0318, 0.92", "-13.9243, 4.15577, -19.1478, 0.92", "-15.3005, 5.35833, -22.66, 0.92", "-16.682, 6.81747, -26.1535, 0.92", "-17.7061, 8.17397, -28.6954, 0.92", "-19.0213, 10.1331, -31.7355, 0.92", "-20.2424, 11.9812, -34.1285, 0.92", "-20.2533, 11.9982, -34.1464, 0.92", "-21.8472, 14.3961, -36.1407, 0.92", "-23.2123, 16.666, -37.5616, 0.46", "-23.2211, 16.6798, -37.569, 0.46", "-24.8114, 18.8313, -38.6016, 0.46", "-24.8221, 18.8438, -38.6088, 0.46", "-26.2789, 20.4558, -39.7719, 0.46", "-26.2895, 20.4668, -39.7815, 0.46", "-27.8701, 22.0509, -41.379, 0.46", "-29.7257, 23.8804, -43.4315, 0.46", "-31.6463, 25.6667, -45.7618, 0.46", "-33.6052, 27.4288, -48.2929, 0.46", "-33.6195, 27.4412, -48.3124, 0.46", "-34.6448, 28.2827, -49.7739, 0.46", "-36.5041, 29.7616, -52.6387, 0.46", "-38.4082, 31.2214, -55.7029, 0.46", "-40.3586, 32.722, -58.89, 0.46", "-40.3717, 32.7324, -58.9115, 0.46", "-42.4991, 34.4305, -62.4095, 0.46", "-44.9788, 36.4365, -66.5121, 0.46", "-46.7816, 37.9804, -69.6274, 0.46", "-46.7897, 37.9878, -69.6418, 0.46", "-47.9516, 39.0455, -71.6603, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.836948, 6.43546, 4.0, 1.83", "-0.836948, 6.43546, 4.0, 1.83", "-0.832635, 9.22447, 5.319, 1.83", "-0.828211, 12.085, 6.67183, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "3.66305, -5.17679, 2.72, 2.29", "3.78816, -5.8048, 2.85049, 2.29", "3.78816, -5.8048, 2.85049, 2.29", "3.87496, -6.29329, 2.95424, 2.29", "4.61863, -11.0605, 3.92137, 1.83", "5.13255, -15.0031, 4.70468, 1.83", "5.441, -17.5421, 5.17692, 1.83", "5.78148, -20.4178, 5.70394, 1.83", "6.16828, -23.8193, 6.31877, 1.38", "6.36938, -25.7383, 6.65644, 1.38", "6.522, -28.417, 7.09328, 1.38", "6.66575, -31.6857, 7.58452, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.97695, -5.83004, 1.18, 1.83", "-6.30753, -6.11733, 1.26722, 1.83", "-6.30753, -6.11733, 1.26722, 1.83", "-8.68529, -8.13497, 1.73784, 1.83", "-10.5336, -9.70334, 2.10367, 1.83", "-12.555, -11.4186, 2.50374, 1.83", "-14.782, -13.3083, 2.94454, 1.38", "-16.9614, -15.1223, 3.37009, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000009274692127
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.63062, 5.85322, 0.0, 0.927703", "13.7262, 17.7809, 0.0, 0.927703", "22.8219, 29.7086, 0.0, 0.927703" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.04828, 10.6882, -5.58751, 0.92", "7.40671, 12.268, -7.46835, 0.92", "7.56063, 13.3723, -8.80923, 0.92", "7.64672, 14.8685, -10.6824, 0.92", "7.66317, 15.8923, -11.9849, 0.92", "7.70845, 17.4327, -13.9619, 0.92", "7.70931, 17.4437, -13.976, 0.92", "7.82566, 19.0673, -16.2409, 0.92", "7.88201, 19.9122, -17.4481, 0.92", "7.88224, 19.9274, -17.4702, 0.92", "7.79236, 21.1547, -19.1651, 0.92", "7.70953, 21.8994, -20.146, 0.92" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "7.04828, 10.6882, -5.58751, 1.38", "10.4813, 12.9591, -4.71785, 1.38" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.828211, 12.085, 6.67183, 0.92", "0.0592894, 12.2939, 8.66369, 0.92", "0.876131, 12.4967, 10.4764, 0.92", "1.99567, 12.6814, 13.0316, 0.92", "3.00683, 12.7656, 15.43, 0.92", "4.71508, 12.8886, 19.6513, 0.92", "5.68373, 12.8711, 22.0065, 0.46", "6.1211, 12.8313, 23.1691, 0.46", "6.82739, 12.6452, 24.8959, 0.46", "7.32334, 12.3899, 25.8295, 0.46", "8.81932, 11.2326, 27.6816, 0.46", "10.7443, 9.51511, 29.5118, 0.46", "10.7565, 9.50341, 29.5221, 0.46", "12.8716, 7.55694, 31.1185, 0.46", "14.8902, 5.8497, 32.3754, 0.46", "16.8749, 4.08837, 33.3182, 0.46", "22.0605, 1.84814, 41.527, 0.46" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.828211, 12.085, 6.67183, 1.38", "-1.89983, 16.3812, 7.52771, 1.38", "-2.94627, 20.5764, 8.36347, 1.38", "-4.14861, 25.3966, 9.32375, 1.38", "-5.25086, 29.8155, 10.2041, 1.38", "-6.12923, 33.337, 10.9056, 1.38", "-7.19411, 37.6061, 11.7561, 1.38" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.66575, -31.6857, 7.58452, 0.92", "8.80584, -33.253, 6.65401, 0.92", "10.3155, -34.5047, 6.03532, 0.92", "12.8169, -36.6968, 5.08022, 0.92", "15.198, -38.7419, 4.2295, 0.92", "17.9785, -41.0792, 3.29889, 0.92", "20.2942, -43.1386, 2.53127, 0.92", "23.0781, -45.7967, 1.63485, 0.92", "25.5834, -48.2534, 0.833252, 0.92", "28.4276, -51.06, -0.0917703, 0.92", "31.0954, -53.8558, -1.0049, 0.92", "33.6072, -56.6251, -1.91181, 0.92", "35.3203, -58.5132, -2.57568, 0.92", "36.8206, -60.0358, -3.18475, 0.92", "36.8576, -60.0727, -3.20051, 0.92", "39.4063, -62.6737, -4.38658, 0.92", "39.4442, -62.7091, -4.40355, 0.92", "42.3505, -65.3098, -5.6318, 0.46", "44.8317, -67.4988, -6.63815, 0.46", "47.2367, -69.6119, -7.5963, 0.46", "49.3539, -71.5069, -8.4015, 0.46", "52.8137, -74.5451, -9.65685, 0.46", "55.8761, -77.2445, -10.728, 0.46", "58.8957, -79.9495, -11.7881, 0.46", "58.9192, -79.9706, -11.7967, 0.46", "63.3535, -83.9214, -13.5601, 0.46", "66.3211, -86.5346, -14.8194, 0.46", "66.3437, -86.5554, -14.8308, 0.46", "68.337, -88.3418, -15.9286, 0.46", "69.6298, -89.5309, -16.6641, 0.46", "71.2667, -91.0298, -17.4018, 0.46", "71.2822, -91.0441, -17.4071, 0.46", "73.4191, -93.1341, -17.8803, 0.46", "76.8761, -96.5831, -18.3377, 0.46", "79.597, -99.4468, -18.4845, 0.46", "83.6329, -103.995, -18.5002, 0.46", "86.1817, -107.126, -18.4275, 0.46", "88.268, -109.943, -18.3305, 0.46", "90.9243, -113.955, -18.2864, 0.46", "93.672, -118.618, -18.3732, 0.46", "95.9074, -122.696, -18.6077, 0.46", "98.8598, -128.543, -19.2122, 0.46", "100.269, -131.504, -19.5799, 0.46", "102.405, -136.307, -20.28, 0.46", "103.618, -139.335, -20.7584, 0.46", "104.801, -142.608, -21.3175, 0.46", "105.59, -145.012, -21.7423, 0.46", "105.6, -145.043, -21.7456, 0.46", "106.818, -149.303, -21.84, 0.46", "107.802, -152.943, -21.558, 0.46", "108.83, -156.621, -21.1436, 0.46", "108.842, -156.662, -21.1389, 0.46", "110.418, -161.58, -20.7774, 0.46", "110.435, -161.63, -20.7732, 0.46", "111.013, -163.079, -20.6151, 0.46", "112.386, -165.969, -20.3135, 0.46", "113.299, -167.619, -20.2414, 0.46", "114.624, -170.151, -20.6598, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.66575, -31.6857, 7.58452, 0.92", "6.52027, -33.9069, 7.73949, 0.92", "6.38075, -36.096, 7.99693, 0.92", "6.1462, -38.2948, 8.309, 0.92", "5.82411, -40.8228, 8.67609, 0.92", "5.5053, -43.5243, 9.04782, 0.92", "5.2971, -45.8428, 9.36637, 0.92", "5.11302, -47.5745, 9.61586, 0.92", "4.89753, -49.6603, 9.92281, 0.92", "4.6124, -52.603, 10.3962, 0.92", "4.32071, -55.5448, 10.8966, 0.92", "4.15547, -58.6057, 11.3931, 0.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.9614, -15.1223, 3.37009, 0.92", "-18.9382, -15.6531, 7.16868, 0.92", "-20.639, -16.4715, 11.1151, 0.92", "-21.9009, -17.4721, 14.4403, 0.92", "-22.9818, -18.9178, 17.7683, 0.46", "-23.172, -19.2311, 18.4019, 0.46", "-23.1777, -19.2422, 18.4228, 0.46", "-24.0111, -21.6721, 22.1182, 0.46", "-24.4367, -23.4655, 24.4401, 0.46", "-24.867, -26.9305, 28.5943, 0.46", "-24.8688, -26.9539, 28.622, 0.46", "-24.9848, -28.1261, 30.033, 0.46", "-25.2538, -30.1007, 32.3893, 0.46", "-29.6672, -36.5688, 41.6922, 0.46", "-32.2935, -43.0075, 51.67, 0.46", "-35.7322, -50.5826, 60.4952, 0.46", "-39.6221, -58.3868, 68.913, 0.46", "-41.7705, -66.7569, 77.3859, 0.46", "-41.7426, -76.1762, 84.9223, 0.46", "-42.9432, -84.3444, 93.782, 0.46", "-41.8402, -91.6492, 103.414, 0.46", "-42.731, -99.8519, 112.277, 0.46", "-44.7415, -107.344, 121.605, 0.46", "-45.609, -116.873, 128.943, 0.46", "-48.5082, -126.136, 136.113, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.9614, -15.1223, 3.37009, 0.92", "-18.0657, -18.2182, 3.98322, 0.92", "-18.8887, -20.5049, 4.51228, 0.92", "-20.1944, -24.2837, 5.51514, 0.92", "-20.8021, -26.1616, 6.07502, 0.92", "-21.6735, -28.6546, 6.92694, 0.92", "-22.3046, -30.2263, 7.52966, 0.92", "-23.1191, -32.0364, 8.32569, 0.92", "-23.8202, -33.3438, 8.97212, 0.92", "-24.5411, -34.6306, 9.66347, 0.92", "-25.8018, -36.8218, 10.8192, 0.92", "-27.1764, -39.0644, 12.0119, 0.92", "-28.4374, -41.0245, 13.0269, 0.92", "-30.479, -43.968, 14.5007, 0.92", "-32.5435, -46.8066, 15.8237, 0.92", "-32.5609, -46.8309, 15.8339, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-16.9614, -15.1223, 3.37009, 1.38", "-20.1723, -10.8052, 4.40615, 1.38", "-22.6114, -7.67969, 5.21096, 1.38", "-24.7628, -4.90089, 5.87968, 1.38", "-26.8286, -2.3276, 6.43836, 1.38", "-29.1907, 0.397775, 6.96104, 1.38", "-31.3725, 2.70875, 7.37475, 1.38", "-33.2709, 4.53966, 7.6755, 1.38", "-36.7118, 7.24898, 8.03562, 1.38", "-40.3143, 9.50545, 8.23995, 1.38", "-44.8761, 11.8242, 8.2922, 1.38", "-47.3688, 12.8724, 8.24493, 1.38", "-50.5965, 14.0092, 8.07052, 1.38", "-55.274, 15.3702, 7.62607, 1.38", "-58.4122, 16.1416, 7.23851, 1.38", "-61.203, 16.8244, 6.78048, 1.38", "-61.2367, 16.8334, 6.77356, 1.38", "-64.6491, 18.0202, 5.98601, 1.38", "-67.7953, 19.3838, 5.20916, 1.38", "-70.8217, 20.9459, 4.43223, 0.92", "-73.4898, 22.5629, 3.77082, 0.92", "-76.8366, 24.763, 2.96761, 0.92", "-80.0269, 27.0933, 2.20494, 0.92", "-82.9635, 29.5158, 1.49899, 0.92", "-84.9527, 31.4437, 0.9656, 0.92", "-87.7636, 34.4756, 0.11172, 0.92", "-90.2591, 37.531, -0.732908, 0.92", "-93.2305, 41.7182, -1.95422, 0.92", "-94.8279, 44.1352, -2.74589, 0.92", "-96.9581, 47.6197, -3.93222, 0.92", "-99.6508, 52.2809, -5.5542, 0.92", "-101.385, 55.2877, -6.61969, 0.92", "-102.839, 57.9695, -7.50116, 0.92", "-104.416, 60.8825, -8.37169, 0.92", "-107.32, 66.0817, -9.67071, 0.92", "-107.338, 66.1115, -9.67582, 0.92", "-109.381, 69.5398, -9.9782, 0.92", "-111.582, 72.9975, -10.1625, 0.92", "-114.561, 77.269, -10.2562, 0.92", "-117.096, 80.8136, -10.256, 0.92", "-120.523, 85.3046, -10.2668, 0.92", "-123.285, 88.7514, -10.3241, 0.92", "-125.586, 91.3622, -10.4483, 0.92", "-127.447, 93.2902, -10.6701, 0.92", "-130.49, 96.1678, -11.2706, 0.92", "-132.404, 97.8684, -11.8086, 0.92", "-135.363, 100.36, -12.9205, 0.92", "-137.61, 102.157, -13.8513, 0.92", "-140.261, 104.218, -14.9328, 0.46", "-141.953, 105.587, -15.713, 0.46", "-141.97, 105.6, -15.7213, 0.46", "-144.471, 107.53, -16.9206, 0.46", "-147.091, 109.618, -18.1197, 0.46", "-147.108, 109.633, -18.1266, 0.46", "-149.163, 111.586, -18.8658, 0.46", "-152.32, 114.914, -19.9237, 0.46", "-152.335, 114.931, -19.9285, 0.46", "-155.098, 118.224, -20.7544, 0.46", "-157.29, 121.111, -21.3925, 0.46", "-159.218, 123.799, -21.95, 0.46", "-160.758, 126.043, -22.3857, 0.46", "-163.14, 129.658, -23.0658, 0.46", "-165.133, 132.611, -23.647, 0.46", "-168.058, 136.852, -24.4943, 0.46", "-171.123, 141.094, -25.3558, 0.46", "-174.844, 146.133, -26.4641, 0.46", "-178.856, 151.296, -27.7305, 0.46", "-183.217, 156.689, -29.171, 0.46", "-186.868, 160.992, -30.4166, 0.46", "-191.079, 165.636, -31.9186, 0.46", "-193.523, 168.088, -32.8577, 0.46", "-196.232, 170.564, -34.0023, 0.46", "-198.813, 172.773, -35.1791, 0.46", "-198.831, 172.787, -35.1877, 0.46", "-201.604, 174.639, -36.7483, 0.46", "-204.344, 176.077, -38.483, 0.46", "-204.373, 176.088, -38.5005, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.8219, 29.7086, 0.0, 0.46", "31.9175, 41.6363, 0.0, 0.46", "41.0131, 53.564, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.70953, 21.8994, -20.146, 0.92", "7.75517, 22.3556, -22.3677, 0.92", "7.75705, 22.3582, -22.3848, 0.92", "8.02123, 22.6379, -24.4308, 0.92", "8.02315, 22.6391, -24.4481, 0.92", "8.27713, 22.7636, -27.5435, 0.92", "8.34434, 22.9035, -30.8572, 0.92", "8.0145, 23.1153, -34.3923, 0.92", "8.001, 23.1206, -34.4781, 0.92", "7.37727, 23.2796, -37.368, 0.92", "6.74923, 23.3683, -39.7636, 0.92", "5.83781, 23.4017, -42.8048, 0.92", "3.9866, 23.3717, -48.6739, 0.92", "2.88414, 23.3041, -51.9312, 0.92", "1.742, 23.1668, -55.2835, 0.92", "0.594537, 22.9571, -58.759, 0.92", "-0.516184, 22.6143, -62.384, 0.92", "-1.37817, 22.2035, -65.5106, 0.92", "-2.09707, 21.7281, -68.466, 0.92", "-2.73996, 21.2195, -71.4181, 0.92", "-3.04729, 20.996, -72.982, 0.92", "-3.71753, 20.5937, -76.7398, 0.92", "-3.72103, 20.5922, -76.7568, 0.92", "-4.63261, 20.319, -80.3071, 0.92", "-5.07354, 20.2154, -81.8159, 0.92", "-6.13522, 19.9078, -85.3094, 0.92", "-6.14947, 19.904, -85.3503, 0.92", "-7.05117, 19.6341, -87.723, 0.92", "-8.09373, 19.2788, -90.3874, 0.92", "-8.10038, 19.2759, -90.4032, 0.92", "-9.45589, 18.4337, -93.8007, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.70953, 21.8994, -20.146, 0.92", "7.38207, 23.5979, -22.0705, 0.92", "7.2, 25.3143, -23.7813, 0.92", "7.08598, 26.7925, -25.1951, 0.92", "7.01669, 28.9771, -27.1447, 0.92", "7.0319, 30.5337, -28.5043, 0.92", "7.0619, 32.5085, -30.2213, 0.92", "7.0699, 34.7444, -32.1161, 0.92", "7.15263, 36.1812, -33.3151, 0.92", "7.4525, 38.6835, -35.4009, 0.92", "7.73879, 40.1805, -36.6711, 0.92", "8.17885, 42.0986, -38.346, 0.92", "8.60054, 44.0407, -40.1411, 0.92", "8.93493, 45.6753, -41.7241, 0.92", "8.93951, 45.6948, -41.7435, 0.92" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "10.4813, 12.9591, -4.71785, 0.92", "13.9189, 16.0778, -7.4294, 0.92", "16.1503, 17.8903, -8.98041, 0.92", "17.642, 19.051, -9.8404, 0.92", "19.304, 20.4529, -10.6987, 0.46", "21.8938, 22.663, -11.8459, 0.46", "21.9082, 22.6758, -11.8517, 0.46", "24.0994, 24.6604, -12.5439, 0.46", "26.4092, 26.8954, -13.145, 0.46", "29.0656, 29.8148, -13.7451, 0.46", "31.2747, 32.4805, -14.2027, 0.46", "33.1205, 34.8396, -14.58, 0.46", "34.6161, 36.8157, -14.9205, 0.46", "36.4083, 39.271, -15.3874, 0.46", "38.2558, 41.6579, -15.8919, 0.46", "40.8513, 44.7946, -16.5699, 0.46", "40.8645, 44.8095, -16.5724, 0.46", "42.5512, 46.5226, -16.7786, 0.46", "44.7935, 48.5555, -16.9935, 0.46", "47.9721, 51.2487, -17.2356, 0.46", "48.0654, 51.3253, -17.2419, 0.46", "51.5058, 54.26, -17.4587, 0.46", "54.6499, 57.0657, -17.6756, 0.46", "56.342, 58.7261, -17.8476, 0.46", "56.3626, 58.7478, -17.851, 0.46", "59.5338, 62.4665, -18.6982, 0.46", "61.9434, 65.563, -19.5639, 0.46", "61.9602, 65.5866, -19.5717, 0.46", "64.1295, 68.9, -20.6202, 0.46", "64.7943, 69.9501, -20.9466, 0.46", "66.7144, 73.0853, -21.9196, 0.46", "68.4387, 75.9491, -22.7718, 0.46", "70.657, 79.6647, -23.7738, 0.46", "72.5276, 82.8293, -24.5146, 0.46", "73.6945, 84.8132, -24.9142, 0.46", "75.0824, 87.4558, -25.4112, 0.46", "76.501, 90.693, -26.0477, 0.46", "78.2421, 95.3779, -27.0175, 0.46", "79.3253, 99.0387, -27.9007, 0.46", "79.33, 99.0573, -27.9058, 0.46", "80.1986, 103.539, -29.4179, 0.46", "81.0271, 108.4, -31.4209, 0.46", "81.0351, 108.462, -31.4511, 0.46", "81.4597, 113.042, -33.8982, 0.46", "81.4614, 113.059, -33.908, 0.46", "81.9592, 116.852, -36.1154, 0.46", "82.6709, 120.437, -38.3171, 0.46", "83.5074, 124.379, -40.8426, 0.46", "83.8108, 125.873, -41.7811, 0.46" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.4813, 12.9591, -4.71785, 0.92", "14.3392, 14.4207, -4.80126, 0.92", "17.5386, 15.6521, -4.88706, 0.92", "18.6078, 16.028, -4.93229, 0.92", "21.8964, 17.1302, -5.09833, 0.92", "25.4301, 18.2588, -5.3614, 0.92", "29.5087, 19.4669, -5.82385, 0.92", "29.5317, 19.4728, -5.82844, 0.92", "32.5444, 20.1801, -6.7888, 0.92", "32.5778, 20.1878, -6.8011, 0.92", "36.0918, 20.9708, -8.38584, 0.92", "38.9514, 21.4644, -9.91066, 0.92", "42.259, 21.9363, -11.9572, 0.92", "44.547, 22.2991, -13.4632, 0.92" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "22.0605, 1.84814, 41.527, 0.46", "26.1475, -0.200886, 48.5112, 0.46", "30.6328, -2.3312, 55.2214, 0.46", "35.0335, -5.24492, 61.6755, 0.46", "39.2003, -7.4335, 68.568, 0.46", "42.55, -10.3733, 75.6091, 0.46", "45.9776, -13.4731, 82.5404, 0.46", "50.3412, -15.8318, 89.2508, 0.46", "54.652, -19.638, 95.2654, 0.46", "59.243, -24.8446, 99.7986, 0.46", "63.955, -29.5891, 104.721, 0.46", "69.0067, -34.7908, 108.748, 0.46", "73.6725, -40.1706, 112.986, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "22.0605, 1.84814, 41.527, 0.46", "29.2716, -0.120334, 50.1542, 0.46", "36.6891, -2.89137, 58.3597, 0.46", "45.1293, -5.52825, 65.5475, 0.46", "52.4359, -9.21466, 73.4666, 0.46", "58.9838, -13.4706, 81.7506, 0.46", "63.7214, -19.2966, 90.2867, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.19411, 37.6061, 11.7561, 0.46", "-10.7867, 38.529, 11.7416, 0.46", "-13.1936, 39.2089, 11.8464, 0.46", "-18.4565, 40.5888, 12.3574, 0.46", "-21.8629, 41.5729, 12.8538, 0.46", "-24.2826, 42.353, 13.3098, 0.46", "-27.4464, 43.4762, 14.0273, 0.46", "-29.4702, 44.3172, 14.6795, 0.46", "-32.0683, 45.482, 15.6853, 0.46", "-34.7843, 46.8975, 17.019, 0.46", "-36.8895, 48.1296, 18.2091, 0.46", "-39.5144, 49.7136, 19.784, 0.46", "-41.5225, 51.0816, 21.0789, 0.46", "-49.8896, 53.6463, 25.3357, 0.46", "-57.8642, 55.3864, 30.6492, 0.46", "-66.5536, 56.1209, 34.9965, 0.46", "-75.6845, 56.5657, 38.3698, 0.46" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.19411, 37.6061, 11.7561, 1.38", "-8.24768, 40.2524, 11.6609, 1.38", "-9.26051, 42.8587, 11.6027, 0.92", "-10.2933, 45.5277, 11.6242, 0.92", "-10.2985, 45.5404, 11.6247, 0.92", "-11.2443, 47.7703, 11.7445, 0.92", "-12.1266, 49.7708, 11.8855, 0.92", "-12.1322, 49.7832, 11.8868, 0.92", "-13.3641, 52.0959, 12.1984, 0.92", "-14.8511, 54.5639, 12.6282, 0.92", "-14.8583, 54.5754, 12.6303, 0.92", "-16.3818, 56.8276, 13.0703, 0.92", "-18.1412, 59.3201, 13.5405, 0.92", "-20.192, 62.1518, 14.0767, 0.92", "-21.8348, 64.2925, 14.4836, 0.92" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.15547, -58.6057, 11.3931, 0.92", "3.95698, -62.3984, 12.2454, 0.92", "3.67666, -65.6533, 12.9514, 0.92", "3.41156, -69.3435, 13.8717, 0.92", "3.28412, -72.2624, 14.6581, 0.92", "3.18897, -75.2394, 15.4211, 0.92", "3.09011, -77.8399, 16.0592, 0.92", "2.90681, -80.9447, 16.7961, 0.92", "2.6696, -83.4693, 17.3212, 0.92", "2.25319, -86.9913, 17.9991, 0.92", "1.62034, -91.2259, 18.7631, 0.92", "1.14406, -94.2942, 19.3021, 0.92", "0.674908, -97.373, 19.8288, 0.92", "0.192732, -100.29, 20.2678, 0.92", "-0.394153, -103.736, 20.7436, 0.92", "-1.07198, -107.583, 21.2564, 0.92", "-1.57184, -110.585, 21.6677, 0.92", "-1.84983, -112.756, 21.9711, 0.92", "-2.05223, -114.958, 22.3135, 0.92", "-2.26673, -117.771, 22.8292, 0.92", "-2.36178, -121.255, 23.6486, 0.92", "-2.15523, -124.213, 24.5752, 0.92", "-1.65053, -127.073, 25.7455, 0.92", "-0.860131, -129.715, 27.1627, 0.92", "0.3897, -131.548, 28.6219, 0.46", "2.71333, -133.071, 30.6753, 0.46", "5.11706, -133.864, 32.3999, 0.46", "8.19721, -134.315, 34.2686, 0.46", "8.21933, -134.315, 34.2796, 0.46", "12.7109, -133.939, 36.083, 0.46", "12.746, -133.935, 36.0942, 0.46", "14.9198, -133.939, 36.6021, 0.46", "14.9562, -133.943, 36.6076, 0.46", "18.3207, -134.722, 36.9995, 0.46", "19.6397, -135.076, 37.1726, 0.46", "19.6738, -135.089, 37.1784, 0.46", "22.828, -136.19, 37.6887, 0.46", "23.4399, -136.361, 37.7755, 0.46", "25.4662, -148.19, 38.9735, 0.46", "28.7038, -159.773, 39.9821, 0.46", "30.7811, -171.621, 39.1405, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.15547, -58.6057, 11.3931, 0.92", "6.19418, -60.4489, 10.3534, 0.92", "6.20797, -60.4621, 10.3465, 0.92", "7.9695, -61.9945, 9.62416, 0.92", "9.86035, -63.668, 8.98761, 0.92", "9.88177, -63.6887, 8.98123, 0.92", "12.1896, -66.0622, 8.36566, 0.92", "13.8083, -67.7983, 8.00142, 0.92", "15.8263, -70.1127, 7.61371, 0.92", "18.3714, -73.1933, 7.23847, 0.92", "20.6526, -76.0804, 6.97992, 0.92", "22.1537, -78.1003, 6.83, 0.92", "22.2127, -78.182, 6.82639, 0.92", "23.6158, -80.2744, 6.76435, 0.92", "24.5969, -81.8149, 6.73612, 0.92", "26.278, -84.4977, 6.70639, 0.92", "27.9179, -86.9975, 6.6961, 0.92", "29.0885, -88.8592, 6.68933, 0.92", "31.734, -93.1604, 6.69751, 0.92", "33.1361, -95.4901, 6.77107, 0.92", "34.9616, -98.5318, 6.9009, 0.92", "36.525, -101.028, 6.96763, 0.92", "38.4684, -103.98, 6.98047, 0.92", "40.3658, -106.895, 6.88914, 0.92", "42.6814, -110.368, 6.68033, 0.92", "44.0955, -112.544, 6.45454, 0.92", "45.8663, -115.285, 6.0659, 0.92", "47.9836, -118.882, 5.39617, 0.92", "49.4685, -121.438, 4.79461, 0.92", "49.4904, -121.481, 4.78228, 0.92", "50.4507, -123.976, 4.06329, 0.92", "50.4629, -124.013, 4.05489, 0.92", "51.551, -127.359, 3.46279, 0.46", "51.7048, -127.781, 3.3984, 0.46", "53.2343, -131.172, 2.99725, 0.46", "55.4011, -135.333, 2.65523, 0.46", "56.9266, -137.93, 2.54761, 0.46", "58.3854, -140.118, 2.46266, 0.46", "60.7174, -143.104, 2.33932, 0.46", "61.9607, -144.54, 2.26853, 0.46", "64.2857, -146.826, 2.08983, 0.46", "66.1875, -148.471, 1.83485, 0.46", "68.1252, -150.311, 1.40459, 0.46", "69.4529, -151.841, 0.967835, 0.46", "69.4649, -151.857, 0.96284, 0.46", "70.9933, -154.246, 0.228447, 0.46", "72.2386, -156.464, -0.42059, 0.46", "73.3975, -158.651, -0.971956, 0.46", "74.6696, -161.229, -1.50788, 0.46", "75.5501, -162.929, -1.85349, 0.46", "76.6975, -164.984, -2.26771, 0.46", "78.1412, -167.22, -2.74213, 0.46", "79.9389, -169.661, -3.39531, 0.46", "79.9574, -169.683, -3.4034, 0.46", "81.845, -172.009, -4.48435, 0.46", "81.8563, -172.023, -4.49232, 0.46", "83.4551, -174.2, -5.78686, 0.46", "85.1502, -176.679, -7.3449, 0.46", "86.1931, -178.421, -8.44599, 0.46", "86.973, -179.845, -9.31906, 0.46", "86.9807, -179.861, -9.32822, 0.46", "87.866, -181.919, -10.3828, 0.46", "87.885, -181.972, -10.4054, 0.46", "88.4677, -183.586, -10.9924, 0.46", "88.483, -183.631, -11.0064, 0.46", "89.4613, -186.595, -11.8258, 0.46", "89.5972, -187.13, -11.9805, 0.46", "90.0531, -189.467, -12.6829, 0.46", "90.0764, -189.649, -12.7332, 0.46", "90.2576, -192.005, -13.3569, 0.46", "90.26, -192.034, -13.363, 0.46", "90.4949, -195.299, -13.9337, 0.46", "90.5004, -195.349, -13.9385, 0.46", "91.0258, -199.416, -13.9587, 0.46", "91.0357, -199.486, -13.9542, 0.46", "91.8766, -204.825, -13.35, 0.46", "91.8949, -204.942, -13.3328, 0.46", "92.7552, -210.216, -12.3738, 0.46", "93.2564, -214.394, -11.576, 0.46", "93.4472, -217.416, -10.9775, 0.46", "93.4474, -217.436, -10.9736, 0.46", "93.1231, -221.503, -10.2534, 0.46", "93.1194, -221.533, -10.2489, 0.46", "92.4122, -225.209, -9.8354, 0.46", "91.6263, -228.74, -9.5378, 0.46", "91.6072, -228.818, -9.53227, 0.46", "90.4062, -233.535, -9.18222, 0.46", "90.3963, -233.574, -9.17949, 0.46", "89.7184, -236.516, -9.0274, 0.46", "89.7086, -236.565, -9.02563, 0.46", "89.1586, -239.255, -9.0059, 0.46", "89.122, -239.37, -9.00702, 0.46", "86.4636, -244.147, -9.12153, 0.46", "85.0537, -245.552, -9.139, 0.46", "85.0299, -245.571, -9.13953, 0.46", "81.8523, -247.711, -9.19481, 0.46", "76.7191, -250.103, -9.22771, 0.46", "72.7634, -251.304, -9.19186, 0.46", "68.0668, -251.727, -9.03291, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-48.5082, -126.136, 136.113, 0.46", "-49.5162, -130.069, 140.529, 0.46", "-49.6331, -133.088, 145.743, 0.46", "-48.6229, -135.368, 151.246, 0.46", "-46.4733, -137.238, 156.582, 0.46", "-43.1182, -138.244, 161.523, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-48.5082, -126.136, 136.113, 0.46", "-50.5403, -132.392, 144.152, 0.46", "-54.6877, -136.877, 152.611, 0.46", "-59.2175, -141.016, 161.058, 0.46", "-64.121, -144.793, 169.474, 0.46", "-68.0377, -149.928, 177.649, 0.46", "-72.916, -153.074, 186.347, 0.46", "-76.3832, -155.333, 195.961, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-32.5609, -46.8309, 15.8339, 0.92", "-32.1367, -50.0064, 15.9771, 0.92" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-32.5609, -46.8309, 15.8339, 0.92", "-35.2881, -47.0008, 17.4748, 0.92", "-35.3064, -47.0027, 17.4843, 0.92", "-37.2349, -47.2584, 18.2532, 0.46", "-39.7441, -47.6094, 19.117, 0.46", "-42.3013, -47.9625, 19.8623, 0.46", "-46.0845, -48.5309, 20.7379, 0.46", "-48.6804, -48.9889, 21.1529, 0.46", "-52.6061, -49.6686, 21.4739, 0.46", "-53.0148, -49.7378, 21.4695, 0.46", "-55.3906, -50.1926, 21.1992, 0.46", "-58.1409, -50.7094, 20.5901, 0.46", "-58.1603, -50.7128, 20.5838, 0.46", "-60.058, -51.0295, 19.9076, 0.46", "-60.0868, -51.0347, 19.897, 0.46", "-63.4102, -51.6099, 18.5548, 0.46", "-65.555, -51.899, 17.6602, 0.46", "-67.265, -52.1597, 16.9029, 0.46", "-70.3412, -52.8098, 15.4909, 0.46", "-70.359, -52.8149, 15.4818, 0.46", "-72.6871, -53.615, 14.183, 0.46", "-74.4829, -54.3359, 13.0483, 0.46", "-77.3922, -55.6364, 11.1171, 0.46", "-80.1377, -56.9246, 9.16142, 0.46", "-82.2584, -57.9167, 7.56921, 0.46", "-82.2737, -57.9242, 7.55763, 0.46", "-85.5305, -59.5918, 5.09283, 0.46", "-88.2051, -60.9816, 2.96923, 0.46", "-91.7228, -62.491, 0.226462, 0.46", "-91.8389, -62.5356, 0.133926, 0.46" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "8.93951, 45.6948, -41.7435, 0.92", "10.1245, 47.6193, -44.2425, 0.92", "11.3742, 49.6352, -47.011, 0.92", "12.5634, 51.5494, -49.6961, 0.92", "12.5737, 51.5663, -49.7202, 0.92", "13.6813, 53.4756, -52.42, 0.92", "14.7005, 55.3544, -55.1675, 0.92", "15.63, 57.4349, -58.2303, 0.92", "15.635, 57.4463, -58.247, 0.92", "16.3562, 59.3892, -61.111, 0.92", "16.8966, 60.9878, -63.3936, 0.92", "17.4461, 62.5162, -65.5021, 0.92", "18.4012, 64.7338, -68.3902, 0.92", "18.4104, 64.7529, -68.4129, 0.92", "19.9474, 67.7758, -71.8725, 0.92", "21.3283, 70.3808, -74.6762, 0.92", "23.0968, 73.6033, -78.0094, 0.92", "24.8508, 76.8722, -81.2396, 0.92", "26.0518, 79.1574, -83.4628, 0.92", "27.7171, 82.7918, -87.0382, 0.92", "29.184, 86.4663, -90.662, 0.92", "29.1887, 86.4808, -90.6759, 0.92", "30.1637, 90.4717, -94.3806, 0.92", "30.1669, 90.487, -94.3941, 0.92", "31.321, 96.4914, -99.49, 0.92", "31.3253, 96.5152, -99.5094, 0.92", "32.1228, 100.436, -102.515, 0.92", "32.1459, 100.535, -102.585, 0.92", "33.0331, 103.929, -104.888, 0.92", "34.6008, 109.44, -108.45, 0.92", "34.6151, 109.483, -108.475, 0.92", "36.0389, 113.795, -111.061, 0.92", "36.1917, 114.278, -111.381, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.93951, 45.6948, -41.7435, 0.92", "8.66651, 47.586, -42.2462, 0.92", "8.41306, 49.5345, -42.7982, 0.92", "8.15632, 51.7486, -43.4916, 0.92", "7.7579, 54.2416, -44.3577, 0.92", "7.75357, 54.264, -44.3663, 0.92", "7.49198, 55.5196, -44.8987, 0.92", "6.88195, 57.7519, -45.9665, 0.92", "6.24324, 59.7254, -47.0213, 0.92", "5.45754, 61.927, -48.3066, 0.92", "4.9057, 63.3026, -49.1294, 0.92", "4.02137, 65.3722, -50.3714, 0.92", "3.02484, 67.5351, -51.6461, 0.92", "2.15893, 69.3904, -52.6612, 0.92", "1.38484, 71.2103, -53.5015, 0.92", "0.373714, 73.9136, -54.561, 0.92", "0.366159, 73.9357, -54.5682, 0.92", "-0.471751, 76.683, -55.3626, 0.92", "-1.38852, 80.0188, -56.329, 0.92", "-2.32181, 83.1817, -57.3005, 0.92", "-2.44354, 83.612, -57.4308, 0.92", "-3.13107, 86.112, -58.2097, 0.92", "-3.76161, 88.3852, -58.9626, 0.92", "-4.60849, 91.3688, -60.0994, 0.92", "-5.48777, 94.0131, -61.4051, 0.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "83.8108, 125.873, -41.7811, 0.46", "86.491, 127.33, -42.4857, 0.46", "88.7834, 128.577, -43.0885, 0.46", "91.3785, 129.988, -43.7708, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "83.8108, 125.873, -41.7811, 0.46", "82.7873, 131.553, -43.4259, 0.46", "82.0797, 135.494, -44.6048, 0.46", "81.3207, 139.988, -46.0032, 0.46", "80.4051, 145.714, -47.846, 0.46", "79.8161, 149.727, -49.1759, 0.46", "79.3048, 153.773, -50.5751, 0.46", "79.3027, 153.792, -50.5824, 0.46", "79.017, 157.151, -52.0455, 0.46", "78.8253, 160.912, -53.9172, 0.46", "78.7022, 164.595, -56.0377, 0.46", "78.4577, 167.994, -58.0553, 0.46", "78.2314, 171.213, -60.0145, 0.46", "78.23, 171.23, -60.0253, 0.46", "77.9664, 173.804, -61.7485, 0.46", "77.4727, 177.56, -64.4848, 0.46", "76.8138, 180.776, -66.9819, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "44.547, 22.2991, -13.4632, 0.92", "47.1972, 24.0893, -14.5254, 0.92", "49.5968, 25.7729, -15.4744, 0.92", "53.2601, 28.4798, -16.827, 0.92", "56.9426, 31.2753, -18.1341, 0.46", "60.124, 33.7394, -19.1919, 0.46", "63.38, 36.2942, -20.1719, 0.46", "63.3959, 36.3069, -20.1759, 0.46", "65.4588, 38.0348, -20.5748, 0.46", "65.4745, 38.0481, -20.577, 0.46", "67.0405, 39.2651, -20.7686, 0.46", "69.0799, 40.6145, -20.9159, 0.46", "72.5567, 42.7343, -21.195, 0.46", "75.3, 44.2375, -21.503, 0.46", "75.3277, 44.2514, -21.5068, 0.46", "77.6173, 45.3207, -21.9977, 0.46", "79.8213, 46.2515, -22.5747, 0.46", "84.2033, 47.7845, -23.7934, 0.46", "87.8086, 48.9077, -24.791, 0.46", "87.8568, 48.9219, -24.8044, 0.46", "95.7425, 51.1506, -27.1198, 0.46", "100.732, 52.494, -28.6473, 0.46", "107.297, 54.2001, -30.9252, 0.46", "112.259, 55.4159, -32.7559, 0.46", "112.278, 55.4209, -32.7633, 0.46", "116.798, 56.6822, -34.6371, 0.46", "116.853, 56.6991, -34.6623, 0.46", "121.513, 58.4775, -37.342, 0.46", "121.569, 58.5051, -37.378, 0.46", "125.309, 60.6098, -39.7673, 0.46", "125.325, 60.6193, -39.777, 0.46", "129.012, 62.9699, -42.0021, 0.46", "131.916, 64.8599, -43.7192, 0.46", "136.409, 67.8349, -46.2478, 0.46", "139.633, 69.9363, -48.0453, 0.46", "139.776, 70.025, -48.1245, 0.46", "143.614, 72.3363, -50.2453, 0.46", "143.638, 72.3503, -50.2582, 0.46", "148.067, 74.7266, -52.5149, 0.46", "148.109, 74.7482, -52.5367, 0.46", "153.1, 77.2842, -55.0612, 0.46", "153.164, 77.3238, -55.0942, 0.46", "157.71, 80.5538, -57.3869, 0.46", "157.761, 80.5963, -57.4159, 0.46", "160.307, 83.1626, -59.0714, 0.46", "160.319, 83.1763, -59.081, 0.46", "162.99, 86.9223, -61.7923, 0.46", "163.0, 86.9361, -61.8034, 0.46", "165.238, 89.89, -64.468, 0.46", "165.25, 89.9027, -64.4795, 0.46", "168.092, 92.5992, -66.6143, 0.46", "168.18, 92.673, -66.6614, 0.46", "172.712, 96.2185, -68.6199, 0.46", "172.735, 96.2364, -68.629, 0.46", "177.431, 99.7576, -70.2301, 0.46", "183.704, 104.49, -72.1983, 0.46", "189.263, 108.723, -73.6942, 0.46", "193.886, 112.289, -74.8986, 0.46", "197.06, 114.795, -75.6739, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "44.547, 22.2991, -13.4632, 0.46", "45.4171, 21.2992, -14.9767, 0.46", "46.5533, 20.0637, -16.9932, 0.46", "46.5627, 20.0528, -17.0099, 0.46", "48.1804, 18.3031, -19.4831, 0.46", "49.8302, 16.5279, -21.8897, 0.46", "51.613, 14.5291, -24.3232, 0.46", "51.6291, 14.51, -24.3448, 0.46", "52.8358, 13.0362, -25.8386, 0.46", "54.2333, 11.4082, -27.3558, 0.46", "54.5382, 11.0962, -27.6154, 0.46", "56.5108, 9.18536, -29.0851, 0.46", "58.2704, 7.46796, -30.2664, 0.46", "58.3061, 7.43396, -30.2907, 0.46", "60.0815, 5.84095, -31.4888, 0.46", "62.1597, 4.00709, -32.9575, 0.46", "64.1254, 2.35518, -34.3241, 0.46", "64.1405, 2.34314, -34.3347, 0.46", "66.1333, 0.716978, -35.7651, 0.46", "67.8703, -0.744569, -37.0993, 0.46", "69.8564, -2.43766, -38.6563, 0.46", "69.8772, -2.45624, -38.674, 0.46", "71.6853, -4.07016, -40.3032, 0.46", "73.6384, -5.7963, -42.0789, 0.46", "75.546, -7.43978, -43.8553, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "73.6725, -40.1706, 112.986, 0.46", "79.1042, -47.1686, 114.536, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "73.6725, -40.1706, 112.986, 0.46", "76.6457, -41.3385, 119.797, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-21.8348, 64.2925, 14.4836, 0.46", "-23.7924, 67.1373, 15.1774, 0.46", "-25.8242, 70.3555, 15.6682, 0.46", "-27.5869, 73.4463, 15.9824, 0.46", "-29.2905, 76.7515, 16.2236, 0.46", "-31.4759, 81.2642, 16.4864, 0.46", "-33.7853, 86.4765, 16.7651, 0.46", "-35.5399, 91.4914, 16.8851, 0.46", "-36.7026, 95.8409, 16.8929, 0.46", "-37.5542, 100.261, 16.8457, 0.46", "-37.8191, 103.18, 16.8061, 0.46", "-37.7952, 105.726, 16.7873, 0.46", "-37.3047, 108.846, 16.8472, 0.46", "-36.6911, 110.612, 16.9953, 0.46", "-36.6386, 110.693, 17.0066, 0.46", "-35.8252, 111.364, 17.1527, 0.46", "-37.2444, 120.753, 18.7289, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-21.8348, 64.2925, 14.4836, 0.92", "-21.7274, 69.2128, 14.1547, 0.92", "-21.6095, 72.9075, 13.8025, 0.92", "-21.477, 76.5927, 13.4062, 0.92", "-21.3328, 81.6838, 12.8032, 0.92", "-21.2703, 87.1925, 12.13, 0.92", "-21.2606, 92.1843, 11.5255, 0.92", "-21.3203, 96.6758, 10.922, 0.92", "-21.3216, 96.728, 10.9145, 0.92", "-21.4702, 101.034, 10.2374, 0.92", "-21.6163, 104.209, 9.69278, 0.92", "-21.8082, 109.061, 8.80937, 0.92", "-22.0145, 113.984, 7.94898, 0.92", "-22.0164, 114.015, 7.94385, 0.92", "-22.1685, 117.126, 7.48412, 0.92", "-22.2764, 120.398, 7.05554, 0.92", "-22.4281, 126.581, 6.35033, 0.92", "-22.5276, 130.12, 6.01688, 0.46", "-22.6792, 134.632, 5.65012, 0.46", "-22.8355, 139.09, 5.32344, 0.46", "-23.0361, 143.401, 5.05996, 0.46", "-23.3468, 148.295, 4.77227, 0.46", "-23.6612, 151.959, 4.55344, 0.46", "-24.073, 155.168, 4.27913, 0.46", "-24.7898, 159.405, 3.78534, 0.46", "-25.5903, 163.089, 3.26307, 0.46", "-26.5621, 166.707, 2.67877, 0.46", "-27.195, 168.623, 2.3199, 0.46", "-28.487, 171.815, 1.64693, 0.46", "-28.6151, 172.065, 1.59025, 0.46", "-30.6626, 182.435, 1.51605, 0.46", "-32.7104, 192.783, 0.842416, 0.46", "-32.7319, 203.34, 0.712199, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "30.7811, -171.621, 39.1405, 0.46", "33.6181, -180.41, 40.4916, 0.46", "36.6228, -189.215, 39.7947, 0.46", "37.2838, -198.507, 39.9787, 0.46", "38.9557, -207.637, 40.8497, 0.46", "41.1401, -216.512, 42.7337, 0.46", "41.0275, -225.538, 45.1263, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "30.7811, -171.621, 39.1405, 0.46", "30.7145, -178.366, 42.2676, 0.46", "30.9796, -184.994, 45.6317, 0.46", "30.5481, -191.594, 49.0468, 0.46", "29.9477, -198.186, 52.4539, 0.46", "30.7491, -204.533, 56.2665, 0.46", "32.2654, -211.28, 58.9648, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-32.1367, -50.0064, 15.9771, 0.46", "-30.0573, -51.2084, 14.8756, 0.46", "-28.7229, -52.0818, 14.1435, 0.46", "-27.5303, -52.9349, 13.3888, 0.46", "-25.8617, -54.2224, 12.0654, 0.46", "-25.8514, -54.2311, 12.0557, 0.46", "-24.3276, -55.597, 10.4611, 0.46", "-24.3194, -55.6053, 10.4491, 0.46", "-23.6681, -56.415, 9.14893, 0.46", "-23.1739, -57.1808, 7.76414, 0.46", "-22.6953, -58.1851, 5.88522, 0.46", "-22.6819, -58.2113, 5.83468, 0.46", "-22.1187, -59.2233, 3.72289, 0.46", "-22.1146, -59.2305, 3.70834, 0.46", "-21.4204, -60.2865, 1.68889, 0.46", "-21.4034, -60.3091, 1.64751, 0.46", "-20.5314, -61.2204, -0.0894239, 0.46", "-20.5235, -61.2274, -0.102413, 0.46", "-19.6189, -61.8845, -1.27255, 0.46", "-18.381, -62.6455, -2.7212, 0.46", "-18.3551, -62.6595, -2.75096, 0.46", "-17.1933, -63.3195, -4.31842, 0.46", "-17.1853, -63.3241, -4.33242, 0.46", "-16.1991, -63.9406, -6.34072, 0.46", "-16.1933, -63.9451, -6.35578, 0.46", "-15.4541, -64.6141, -8.7361, 0.46", "-14.7137, -65.4008, -11.3831, 0.46", "-13.9566, -66.3611, -14.5319, 0.46", "-13.9526, -66.366, -14.5474, 0.46", "-13.1802, -67.2463, -17.0898, 0.46", "-13.14, -67.2885, -17.2011, 0.46", "-12.1403, -68.2905, -19.5205, 0.46", "-12.1335, -68.2974, -19.5342, 0.46", "-10.9008, -69.568, -21.7061, 0.46", "-9.62217, -70.8812, -23.8815, 0.46", "-9.61432, -70.889, -23.894, 0.46", "-8.72929, -71.9109, -25.5344, 0.46", "-8.72104, -71.9234, -25.5544, 0.46", "-8.14677, -73.1431, -27.5336, 0.46", "-8.14429, -73.1515, -27.5479, 0.46", "-7.79803, -74.7642, -30.3965, 0.46", "-7.4448, -76.2121, -33.2178, 0.46", "-7.09882, -77.4844, -35.9248, 0.46", "-6.7869, -78.5681, -38.3782, 0.46", "-6.37909, -79.8132, -41.5902, 0.46", "-6.37702, -79.8187, -41.6059, 0.46", "-5.89983, -80.9523, -45.209, 0.46", "-5.29876, -81.9495, -48.7864, 0.46", "-5.29383, -81.9557, -48.8103, 0.46", "-4.70483, -82.6055, -51.3196, 0.46", "-4.70096, -82.6096, -51.3354, 0.46", "-4.08504, -83.356, -53.9918, 0.46", "-4.07763, -83.3693, -54.0308, 0.46", "-3.6528, -84.1362, -56.2436, 0.46", "-3.6236, -84.1973, -56.3967, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-32.1367, -50.0064, 15.9771, 0.46", "-33.4114, -52.2371, 16.5095, 0.46", "-34.7488, -54.7319, 17.1455, 0.46", "-35.9924, -57.2666, 17.8511, 0.46", "-36.1609, -57.6699, 17.9573, 0.46", "-36.9318, -60.1214, 18.5334, 0.46", "-37.0294, -60.5473, 18.6348, 0.46", "-37.2653, -62.3462, 19.037, 0.46", "-37.4141, -64.1798, 19.4626, 0.46", "-37.4497, -67.595, 20.2819, 0.46", "-37.3661, -70.9242, 21.059, 0.46", "-37.2636, -72.7721, 21.4795, 0.46", "-37.2623, -72.8006, 21.4859, 0.46", "-37.2013, -75.6662, 22.0705, 0.46", "-37.1449, -77.9721, 22.5129, 0.46", "-37.145, -77.9912, 22.5166, 0.46", "-37.263, -80.9022, 23.0431, 0.46", "-37.3753, -84.2958, 23.5868, 0.46", "-37.4041, -87.6695, 24.1137, 0.46", "-37.3827, -88.8718, 24.2938, 0.46", "-37.3416, -92.5287, 24.852, 0.46", "-37.3407, -92.5672, 24.8572, 0.46", "-37.3122, -95.5009, 25.173, 0.46", "-37.3681, -98.4045, 25.4496, 0.46", "-37.3696, -98.4334, 25.4523, 0.46", "-37.6726, -101.403, 25.7462, 0.46", "-38.1143, -104.862, 26.093, 0.46", "-38.6724, -108.627, 26.542, 0.46", "-39.0903, -111.029, 26.8861, 0.46", "-39.9152, -115.535, 27.6196, 0.46", "-40.8265, -120.526, 28.6237, 0.46", "-40.8301, -120.544, 28.6279, 0.46", "-41.7457, -125.031, 29.8638, 0.46", "-41.9071, -125.927, 30.1509, 0.46", "-42.1025, -127.095, 30.5732, 0.46", "-42.3755, -128.908, 31.4054, 0.46", "-42.7513, -138.235, 34.1217, 0.46", "-43.7095, -147.777, 35.6681, 0.46", "-43.0748, -157.383, 36.9148, 0.46", "-41.101, -166.679, 38.9489, 0.46", "-38.8835, -175.505, 42.4179, 0.46", "-35.5403, -183.557, 46.8305, 0.46", "-30.6225, -191.362, 50.0783, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "75.546, -7.43978, -43.8553, 0.46", "76.637, -9.46542, -46.511, 0.46", "77.8648, -11.6707, -49.5244, 0.46", "77.8888, -11.7015, -49.5767, 0.46", "79.2996, -13.2861, -52.5346, 0.46", "79.3249, -13.3085, -52.5773, 0.46", "81.8177, -15.2785, -56.3908, 0.46", "81.8622, -15.3026, -56.4478, 0.46", "85.4583, -16.7705, -60.1717, 0.46", "85.4827, -16.7778, -60.1921, 0.46", "89.527, -17.322, -62.3334, 0.46", "89.6346, -17.3089, -62.3226, 0.46", "92.681, -16.2495, -60.3104, 0.46", "92.7971, -16.195, -60.1923, 0.46", "95.0644, -14.7814, -56.8679, 0.46", "95.0886, -14.7616, -56.8232, 0.46", "96.4512, -12.9155, -52.8961, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "75.546, -7.43978, -43.8553, 0.46", "78.4914, -8.40226, -44.0287, 0.46", "83.2077, -9.75047, -44.1983, 0.46", "86.7518, -10.7085, -44.297, 0.46", "91.3883, -11.8901, -44.4607, 0.46", "96.7603, -13.2424, -44.7801, 0.46", "101.355, -14.399, -45.0534, 0.46", "106.561, -15.6567, -45.3535, 0.46", "106.616, -15.6697, -45.3563, 0.46", "111.086, -16.6198, -45.616, 0.46", "113.973, -17.1283, -45.8584, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_28", "dend_17", "dend_10", "dend_0", "dend_39", "dend_30", "dend_23", "dend_18", "dend_16", "dend_11", "dend_7", "dend_2", "dend_1", "dend_43", "dend_40", "dend_36", "dend_31", "dend_25", "dend_24", "dend_22", "dend_19", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_21", "dend_20", "dend_15", "dend_14", "dend_6", "dend_5", "dend_34", "dend_33" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_28", "dend_17", "dend_10", "dend_0", "dend_39", "dend_30", "dend_23", "dend_18", "dend_16", "dend_11", "dend_7", "dend_2", "dend_1", "dend_43", "dend_40", "dend_36", "dend_31", "dend_25", "dend_24", "dend_22", "dend_19", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_21", "dend_20", "dend_15", "dend_14", "dend_6", "dend_5", "dend_34", "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_LBC_1cf329956f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_29
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_0
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000009274692127)
    connect dend_28(0), soma_0(0.45000009274692127)
    connect dend_17(0), soma_0(0.45000009274692127)
    connect dend_10(0), soma_0(0.45000009274692127)
    connect dend_0(0), soma_0(0.45000009274692127)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.53252, -6.163, 0.0, 2.09808 ) }
    soma_0 { pt3dadd( -4.07436, -5.56219, 0.0, 3.44591 ) }
    soma_0 { pt3dadd( -3.6162, -4.96138, 0.0, 4.74751 ) }
    soma_0 { pt3dadd( -3.15805, -4.36057, 0.0, 6.03519 ) }
    soma_0 { pt3dadd( -2.69989, -3.75975, 0.0, 7.18506 ) }
    soma_0 { pt3dadd( -2.24173, -3.15894, 0.0, 8.9595 ) }
    soma_0 { pt3dadd( -1.78358, -2.55813, 0.0, 10.0505 ) }
    soma_0 { pt3dadd( -1.32542, -1.95732, 0.0, 10.6762 ) }
    soma_0 { pt3dadd( -0.867263, -1.35651, 0.0, 11.0674 ) }
    soma_0 { pt3dadd( -0.409106, -0.7557, 0.0, 11.2738 ) }
    soma_0 { pt3dadd( 0.0490503, -0.154889, 0.0, 11.4538 ) }
    soma_0 { pt3dadd( 0.507207, 0.445922, 0.0, 11.4611 ) }
    soma_0 { pt3dadd( 0.965364, 1.04673, 0.0, 11.064 ) }
    soma_0 { pt3dadd( 1.42352, 1.64754, 0.0, 10.6669 ) }
    soma_0 { pt3dadd( 1.88168, 2.24835, 0.0, 10.1594 ) }
    soma_0 { pt3dadd( 2.33983, 2.84917, 0.0, 9.31974 ) }
    soma_0 { pt3dadd( 2.79799, 3.44998, 0.0, 8.13613 ) }
    soma_0 { pt3dadd( 3.25615, 4.05079, 0.0, 6.95253 ) }
    soma_0 { pt3dadd( 3.7143, 4.6516, 0.0, 6.00786 ) }
    soma_0 { pt3dadd( 4.17246, 5.25241, 0.0, 5.12226 ) }
    soma_0 { pt3dadd( 4.63062, 5.85322, 0.0, 2.96305 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.75305, 6.64021, -4.12, 2.75 ) }
    dend_29 { pt3dadd( 4.20538, 7.19587, -4.32144, 2.29 ) }
    dend_29 { pt3dadd( 6.10991, 9.53547, -5.16961, 1.83 ) }
    dend_29 { pt3dadd( 7.04828, 10.6882, -5.58751, 1.83 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.32694, -1.36454, -0.75, 1.38 ) }
    dend_28 { pt3dadd( -5.46909, -1.256, -1.119, 1.38 ) }
    dend_28 { pt3dadd( -6.65778, -0.39915, -3.80069, 1.38 ) }
    dend_28 { pt3dadd( -7.86265, 0.393017, -6.2571, 1.38 ) }
    dend_28 { pt3dadd( -9.83517, 1.638, -10.102, 0.92 ) }
    dend_28 { pt3dadd( -10.8884, 2.20474, -12.1051, 0.92 ) }
    dend_28 { pt3dadd( -10.9188, 2.22269, -12.1686, 0.92 ) }
    dend_28 { pt3dadd( -11.9924, 2.86567, -14.6173, 0.92 ) }
    dend_28 { pt3dadd( -13.0186, 3.46465, -17.0074, 0.92 ) }
    dend_28 { pt3dadd( -13.0289, 3.47113, -17.0318, 0.92 ) }
    dend_28 { pt3dadd( -13.9243, 4.15577, -19.1478, 0.92 ) }
    dend_28 { pt3dadd( -15.3005, 5.35833, -22.66, 0.92 ) }
    dend_28 { pt3dadd( -16.682, 6.81747, -26.1535, 0.92 ) }
    dend_28 { pt3dadd( -17.7061, 8.17397, -28.6954, 0.92 ) }
    dend_28 { pt3dadd( -19.0213, 10.1331, -31.7355, 0.92 ) }
    dend_28 { pt3dadd( -20.2424, 11.9812, -34.1285, 0.92 ) }
    dend_28 { pt3dadd( -20.2533, 11.9982, -34.1464, 0.92 ) }
    dend_28 { pt3dadd( -21.8472, 14.3961, -36.1407, 0.92 ) }
    dend_28 { pt3dadd( -23.2123, 16.666, -37.5616, 0.46 ) }
    dend_28 { pt3dadd( -23.2211, 16.6798, -37.569, 0.46 ) }
    dend_28 { pt3dadd( -24.8114, 18.8313, -38.6016, 0.46 ) }
    dend_28 { pt3dadd( -24.8221, 18.8438, -38.6088, 0.46 ) }
    dend_28 { pt3dadd( -26.2789, 20.4558, -39.7719, 0.46 ) }
    dend_28 { pt3dadd( -26.2895, 20.4668, -39.7815, 0.46 ) }
    dend_28 { pt3dadd( -27.8701, 22.0509, -41.379, 0.46 ) }
    dend_28 { pt3dadd( -29.7257, 23.8804, -43.4315, 0.46 ) }
    dend_28 { pt3dadd( -31.6463, 25.6667, -45.7618, 0.46 ) }
    dend_28 { pt3dadd( -33.6052, 27.4288, -48.2929, 0.46 ) }
    dend_28 { pt3dadd( -33.6195, 27.4412, -48.3124, 0.46 ) }
    dend_28 { pt3dadd( -34.6448, 28.2827, -49.7739, 0.46 ) }
    dend_28 { pt3dadd( -36.5041, 29.7616, -52.6387, 0.46 ) }
    dend_28 { pt3dadd( -38.4082, 31.2214, -55.7029, 0.46 ) }
    dend_28 { pt3dadd( -40.3586, 32.722, -58.89, 0.46 ) }
    dend_28 { pt3dadd( -40.3717, 32.7324, -58.9115, 0.46 ) }
    dend_28 { pt3dadd( -42.4991, 34.4305, -62.4095, 0.46 ) }
    dend_28 { pt3dadd( -44.9788, 36.4365, -66.5121, 0.46 ) }
    dend_28 { pt3dadd( -46.7816, 37.9804, -69.6274, 0.46 ) }
    dend_28 { pt3dadd( -46.7897, 37.9878, -69.6418, 0.46 ) }
    dend_28 { pt3dadd( -47.9516, 39.0455, -71.6603, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.836948, 6.43546, 4.0, 1.83 ) }
    dend_17 { pt3dadd( -0.836948, 6.43546, 4.0, 1.83 ) }
    dend_17 { pt3dadd( -0.832635, 9.22447, 5.319, 1.83 ) }
    dend_17 { pt3dadd( -0.828211, 12.085, 6.67183, 1.83 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 3.66305, -5.17679, 2.72, 2.29 ) }
    dend_10 { pt3dadd( 3.78816, -5.8048, 2.85049, 2.29 ) }
    dend_10 { pt3dadd( 3.78816, -5.8048, 2.85049, 2.29 ) }
    dend_10 { pt3dadd( 3.87496, -6.29329, 2.95424, 2.29 ) }
    dend_10 { pt3dadd( 4.61863, -11.0605, 3.92137, 1.83 ) }
    dend_10 { pt3dadd( 5.13255, -15.0031, 4.70468, 1.83 ) }
    dend_10 { pt3dadd( 5.441, -17.5421, 5.17692, 1.83 ) }
    dend_10 { pt3dadd( 5.78148, -20.4178, 5.70394, 1.83 ) }
    dend_10 { pt3dadd( 6.16828, -23.8193, 6.31877, 1.38 ) }
    dend_10 { pt3dadd( 6.36938, -25.7383, 6.65644, 1.38 ) }
    dend_10 { pt3dadd( 6.522, -28.417, 7.09328, 1.38 ) }
    dend_10 { pt3dadd( 6.66575, -31.6857, 7.58452, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.97695, -5.83004, 1.18, 1.83 ) }
    dend_0 { pt3dadd( -6.30753, -6.11733, 1.26722, 1.83 ) }
    dend_0 { pt3dadd( -6.30753, -6.11733, 1.26722, 1.83 ) }
    dend_0 { pt3dadd( -8.68529, -8.13497, 1.73784, 1.83 ) }
    dend_0 { pt3dadd( -10.5336, -9.70334, 2.10367, 1.83 ) }
    dend_0 { pt3dadd( -12.555, -11.4186, 2.50374, 1.83 ) }
    dend_0 { pt3dadd( -14.782, -13.3083, 2.94454, 1.38 ) }
    dend_0 { pt3dadd( -16.9614, -15.1223, 3.37009, 1.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.63062, 5.85322, 0.0, 0.927703 ) }
    axon_0 { pt3dadd( 13.7262, 17.7809, 0.0, 0.927703 ) }
    axon_0 { pt3dadd( 22.8219, 29.7086, 0.0, 0.927703 ) }
    // Section: dend_39, id: dend_39, parent: dend_29 (entry count 91/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.04828, 10.6882, -5.58751, 0.92 ) }
    dend_39 { pt3dadd( 7.40671, 12.268, -7.46835, 0.92 ) }
    dend_39 { pt3dadd( 7.56063, 13.3723, -8.80923, 0.92 ) }
    dend_39 { pt3dadd( 7.64672, 14.8685, -10.6824, 0.92 ) }
    dend_39 { pt3dadd( 7.66317, 15.8923, -11.9849, 0.92 ) }
    dend_39 { pt3dadd( 7.70845, 17.4327, -13.9619, 0.92 ) }
    dend_39 { pt3dadd( 7.70931, 17.4437, -13.976, 0.92 ) }
    dend_39 { pt3dadd( 7.82566, 19.0673, -16.2409, 0.92 ) }
    dend_39 { pt3dadd( 7.88201, 19.9122, -17.4481, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 7.88224, 19.9274, -17.4702, 0.92 ) }
    dend_39 { pt3dadd( 7.79236, 21.1547, -19.1651, 0.92 ) }
    dend_39 { pt3dadd( 7.70953, 21.8994, -20.146, 0.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 7.04828, 10.6882, -5.58751, 1.38 ) }
    dend_30 { pt3dadd( 10.4813, 12.9591, -4.71785, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.828211, 12.085, 6.67183, 0.92 ) }
    dend_23 { pt3dadd( 0.0592894, 12.2939, 8.66369, 0.92 ) }
    dend_23 { pt3dadd( 0.876131, 12.4967, 10.4764, 0.92 ) }
    dend_23 { pt3dadd( 1.99567, 12.6814, 13.0316, 0.92 ) }
    dend_23 { pt3dadd( 3.00683, 12.7656, 15.43, 0.92 ) }
    dend_23 { pt3dadd( 4.71508, 12.8886, 19.6513, 0.92 ) }
    dend_23 { pt3dadd( 5.68373, 12.8711, 22.0065, 0.46 ) }
    dend_23 { pt3dadd( 6.1211, 12.8313, 23.1691, 0.46 ) }
    dend_23 { pt3dadd( 6.82739, 12.6452, 24.8959, 0.46 ) }
    dend_23 { pt3dadd( 7.32334, 12.3899, 25.8295, 0.46 ) }
    dend_23 { pt3dadd( 8.81932, 11.2326, 27.6816, 0.46 ) }
    dend_23 { pt3dadd( 10.7443, 9.51511, 29.5118, 0.46 ) }
    dend_23 { pt3dadd( 10.7565, 9.50341, 29.5221, 0.46 ) }
    dend_23 { pt3dadd( 12.8716, 7.55694, 31.1185, 0.46 ) }
    dend_23 { pt3dadd( 14.8902, 5.8497, 32.3754, 0.46 ) }
    dend_23 { pt3dadd( 16.8749, 4.08837, 33.3182, 0.46 ) }
    dend_23 { pt3dadd( 22.0605, 1.84814, 41.527, 0.46 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.828211, 12.085, 6.67183, 1.38 ) }
    dend_18 { pt3dadd( -1.89983, 16.3812, 7.52771, 1.38 ) }
    dend_18 { pt3dadd( -2.94627, 20.5764, 8.36347, 1.38 ) }
    dend_18 { pt3dadd( -4.14861, 25.3966, 9.32375, 1.38 ) }
    dend_18 { pt3dadd( -5.25086, 29.8155, 10.2041, 1.38 ) }
    dend_18 { pt3dadd( -6.12923, 33.337, 10.9056, 1.38 ) }
    dend_18 { pt3dadd( -7.19411, 37.6061, 11.7561, 1.38 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 29/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.66575, -31.6857, 7.58452, 0.92 ) }
    dend_16 { pt3dadd( 8.80584, -33.253, 6.65401, 0.92 ) }
    dend_16 { pt3dadd( 10.3155, -34.5047, 6.03532, 0.92 ) }
    dend_16 { pt3dadd( 12.8169, -36.6968, 5.08022, 0.92 ) }
    dend_16 { pt3dadd( 15.198, -38.7419, 4.2295, 0.92 ) }
    dend_16 { pt3dadd( 17.9785, -41.0792, 3.29889, 0.92 ) }
    dend_16 { pt3dadd( 20.2942, -43.1386, 2.53127, 0.92 ) }
    dend_16 { pt3dadd( 23.0781, -45.7967, 1.63485, 0.92 ) }
    dend_16 { pt3dadd( 25.5834, -48.2534, 0.833252, 0.92 ) }
    dend_16 { pt3dadd( 28.4276, -51.06, -0.0917703, 0.92 ) }
    dend_16 { pt3dadd( 31.0954, -53.8558, -1.0049, 0.92 ) }
    dend_16 { pt3dadd( 33.6072, -56.6251, -1.91181, 0.92 ) }
    dend_16 { pt3dadd( 35.3203, -58.5132, -2.57568, 0.92 ) }
    dend_16 { pt3dadd( 36.8206, -60.0358, -3.18475, 0.92 ) }
    dend_16 { pt3dadd( 36.8576, -60.0727, -3.20051, 0.92 ) }
    dend_16 { pt3dadd( 39.4063, -62.6737, -4.38658, 0.92 ) }
    dend_16 { pt3dadd( 39.4442, -62.7091, -4.40355, 0.92 ) }
    dend_16 { pt3dadd( 42.3505, -65.3098, -5.6318, 0.46 ) }
    dend_16 { pt3dadd( 44.8317, -67.4988, -6.63815, 0.46 ) }
    dend_16 { pt3dadd( 47.2367, -69.6119, -7.5963, 0.46 ) }
    dend_16 { pt3dadd( 49.3539, -71.5069, -8.4015, 0.46 ) }
    dend_16 { pt3dadd( 52.8137, -74.5451, -9.65685, 0.46 ) }
    dend_16 { pt3dadd( 55.8761, -77.2445, -10.728, 0.46 ) }
    dend_16 { pt3dadd( 58.8957, -79.9495, -11.7881, 0.46 ) }
    dend_16 { pt3dadd( 58.9192, -79.9706, -11.7967, 0.46 ) }
    dend_16 { pt3dadd( 63.3535, -83.9214, -13.5601, 0.46 ) }
    dend_16 { pt3dadd( 66.3211, -86.5346, -14.8194, 0.46 ) }
    dend_16 { pt3dadd( 66.3437, -86.5554, -14.8308, 0.46 ) }
    dend_16 { pt3dadd( 68.337, -88.3418, -15.9286, 0.46 ) }
    dend_16 { pt3dadd( 69.6298, -89.5309, -16.6641, 0.46 ) }
    dend_16 { pt3dadd( 71.2667, -91.0298, -17.4018, 0.46 ) }
    dend_16 { pt3dadd( 71.2822, -91.0441, -17.4071, 0.46 ) }
    dend_16 { pt3dadd( 73.4191, -93.1341, -17.8803, 0.46 ) }
    dend_16 { pt3dadd( 76.8761, -96.5831, -18.3377, 0.46 ) }
    dend_16 { pt3dadd( 79.597, -99.4468, -18.4845, 0.46 ) }
    dend_16 { pt3dadd( 83.6329, -103.995, -18.5002, 0.46 ) }
    dend_16 { pt3dadd( 86.1817, -107.126, -18.4275, 0.46 ) }
    dend_16 { pt3dadd( 88.268, -109.943, -18.3305, 0.46 ) }
    dend_16 { pt3dadd( 90.9243, -113.955, -18.2864, 0.46 ) }
    dend_16 { pt3dadd( 93.672, -118.618, -18.3732, 0.46 ) }
    dend_16 { pt3dadd( 95.9074, -122.696, -18.6077, 0.46 ) }
    dend_16 { pt3dadd( 98.8598, -128.543, -19.2122, 0.46 ) }
    dend_16 { pt3dadd( 100.269, -131.504, -19.5799, 0.46 ) }
    dend_16 { pt3dadd( 102.405, -136.307, -20.28, 0.46 ) }
    dend_16 { pt3dadd( 103.618, -139.335, -20.7584, 0.46 ) }
    dend_16 { pt3dadd( 104.801, -142.608, -21.3175, 0.46 ) }
    dend_16 { pt3dadd( 105.59, -145.012, -21.7423, 0.46 ) }
    dend_16 { pt3dadd( 105.6, -145.043, -21.7456, 0.46 ) }
    dend_16 { pt3dadd( 106.818, -149.303, -21.84, 0.46 ) }
    dend_16 { pt3dadd( 107.802, -152.943, -21.558, 0.46 ) }
    dend_16 { pt3dadd( 108.83, -156.621, -21.1436, 0.46 ) }
    dend_16 { pt3dadd( 108.842, -156.662, -21.1389, 0.46 ) }
    dend_16 { pt3dadd( 110.418, -161.58, -20.7774, 0.46 ) }
    dend_16 { pt3dadd( 110.435, -161.63, -20.7732, 0.46 ) }
    dend_16 { pt3dadd( 111.013, -163.079, -20.6151, 0.46 ) }
    dend_16 { pt3dadd( 112.386, -165.969, -20.3135, 0.46 ) }
    dend_16 { pt3dadd( 113.299, -167.619, -20.2414, 0.46 ) }
    dend_16 { pt3dadd( 114.624, -170.151, -20.6598, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.66575, -31.6857, 7.58452, 0.92 ) }
    dend_11 { pt3dadd( 6.52027, -33.9069, 7.73949, 0.92 ) }
    dend_11 { pt3dadd( 6.38075, -36.096, 7.99693, 0.92 ) }
    dend_11 { pt3dadd( 6.1462, -38.2948, 8.309, 0.92 ) }
    dend_11 { pt3dadd( 5.82411, -40.8228, 8.67609, 0.92 ) }
    dend_11 { pt3dadd( 5.5053, -43.5243, 9.04782, 0.92 ) }
    dend_11 { pt3dadd( 5.2971, -45.8428, 9.36637, 0.92 ) }
    dend_11 { pt3dadd( 5.11302, -47.5745, 9.61586, 0.92 ) }
    dend_11 { pt3dadd( 4.89753, -49.6603, 9.92281, 0.92 ) }
    dend_11 { pt3dadd( 4.6124, -52.603, 10.3962, 0.92 ) }
    dend_11 { pt3dadd( 4.32071, -55.5448, 10.8966, 0.92 ) }
    dend_11 { pt3dadd( 4.15547, -58.6057, 11.3931, 0.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_0 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.9614, -15.1223, 3.37009, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_7 { pt3dadd( -18.9382, -15.6531, 7.16868, 0.92 ) }
    dend_7 { pt3dadd( -20.639, -16.4715, 11.1151, 0.92 ) }
    dend_7 { pt3dadd( -21.9009, -17.4721, 14.4403, 0.92 ) }
    dend_7 { pt3dadd( -22.9818, -18.9178, 17.7683, 0.46 ) }
    dend_7 { pt3dadd( -23.172, -19.2311, 18.4019, 0.46 ) }
    dend_7 { pt3dadd( -23.1777, -19.2422, 18.4228, 0.46 ) }
    dend_7 { pt3dadd( -24.0111, -21.6721, 22.1182, 0.46 ) }
    dend_7 { pt3dadd( -24.4367, -23.4655, 24.4401, 0.46 ) }
    dend_7 { pt3dadd( -24.867, -26.9305, 28.5943, 0.46 ) }
    dend_7 { pt3dadd( -24.8688, -26.9539, 28.622, 0.46 ) }
    dend_7 { pt3dadd( -24.9848, -28.1261, 30.033, 0.46 ) }
    dend_7 { pt3dadd( -25.2538, -30.1007, 32.3893, 0.46 ) }
    dend_7 { pt3dadd( -29.6672, -36.5688, 41.6922, 0.46 ) }
    dend_7 { pt3dadd( -32.2935, -43.0075, 51.67, 0.46 ) }
    dend_7 { pt3dadd( -35.7322, -50.5826, 60.4952, 0.46 ) }
    dend_7 { pt3dadd( -39.6221, -58.3868, 68.913, 0.46 ) }
    dend_7 { pt3dadd( -41.7705, -66.7569, 77.3859, 0.46 ) }
    dend_7 { pt3dadd( -41.7426, -76.1762, 84.9223, 0.46 ) }
    dend_7 { pt3dadd( -42.9432, -84.3444, 93.782, 0.46 ) }
    dend_7 { pt3dadd( -41.8402, -91.6492, 103.414, 0.46 ) }
    dend_7 { pt3dadd( -42.731, -99.8519, 112.277, 0.46 ) }
    dend_7 { pt3dadd( -44.7415, -107.344, 121.605, 0.46 ) }
    dend_7 { pt3dadd( -45.609, -116.873, 128.943, 0.46 ) }
    dend_7 { pt3dadd( -48.5082, -126.136, 136.113, 0.46 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 24/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.9614, -15.1223, 3.37009, 0.92 ) }
    dend_2 { pt3dadd( -18.0657, -18.2182, 3.98322, 0.92 ) }
    dend_2 { pt3dadd( -18.8887, -20.5049, 4.51228, 0.92 ) }
    dend_2 { pt3dadd( -20.1944, -24.2837, 5.51514, 0.92 ) }
    dend_2 { pt3dadd( -20.8021, -26.1616, 6.07502, 0.92 ) }
    dend_2 { pt3dadd( -21.6735, -28.6546, 6.92694, 0.92 ) }
    dend_2 { pt3dadd( -22.3046, -30.2263, 7.52966, 0.92 ) }
    dend_2 { pt3dadd( -23.1191, -32.0364, 8.32569, 0.92 ) }
    dend_2 { pt3dadd( -23.8202, -33.3438, 8.97212, 0.92 ) }
    dend_2 { pt3dadd( -24.5411, -34.6306, 9.66347, 0.92 ) }
    dend_2 { pt3dadd( -25.8018, -36.8218, 10.8192, 0.92 ) }
    dend_2 { pt3dadd( -27.1764, -39.0644, 12.0119, 0.92 ) }
    dend_2 { pt3dadd( -28.4374, -41.0245, 13.0269, 0.92 ) }
    dend_2 { pt3dadd( -30.479, -43.968, 14.5007, 0.92 ) }
    dend_2 { pt3dadd( -32.5435, -46.8066, 15.8237, 0.92 ) }
    dend_2 { pt3dadd( -32.5609, -46.8309, 15.8339, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -16.9614, -15.1223, 3.37009, 1.38 ) }
    dend_1 { pt3dadd( -20.1723, -10.8052, 4.40615, 1.38 ) }
    dend_1 { pt3dadd( -22.6114, -7.67969, 5.21096, 1.38 ) }
    dend_1 { pt3dadd( -24.7628, -4.90089, 5.87968, 1.38 ) }
    dend_1 { pt3dadd( -26.8286, -2.3276, 6.43836, 1.38 ) }
    dend_1 { pt3dadd( -29.1907, 0.397775, 6.96104, 1.38 ) }
    dend_1 { pt3dadd( -31.3725, 2.70875, 7.37475, 1.38 ) }
    dend_1 { pt3dadd( -33.2709, 4.53966, 7.6755, 1.38 ) }
    dend_1 { pt3dadd( -36.7118, 7.24898, 8.03562, 1.38 ) }
    dend_1 { pt3dadd( -40.3143, 9.50545, 8.23995, 1.38 ) }
    dend_1 { pt3dadd( -44.8761, 11.8242, 8.2922, 1.38 ) }
    dend_1 { pt3dadd( -47.3688, 12.8724, 8.24493, 1.38 ) }
    dend_1 { pt3dadd( -50.5965, 14.0092, 8.07052, 1.38 ) }
    dend_1 { pt3dadd( -55.274, 15.3702, 7.62607, 1.38 ) }
    dend_1 { pt3dadd( -58.4122, 16.1416, 7.23851, 1.38 ) }
    dend_1 { pt3dadd( -61.203, 16.8244, 6.78048, 1.38 ) }
    dend_1 { pt3dadd( -61.2367, 16.8334, 6.77356, 1.38 ) }
    dend_1 { pt3dadd( -64.6491, 18.0202, 5.98601, 1.38 ) }
    dend_1 { pt3dadd( -67.7953, 19.3838, 5.20916, 1.38 ) }
    dend_1 { pt3dadd( -70.8217, 20.9459, 4.43223, 0.92 ) }
    dend_1 { pt3dadd( -73.4898, 22.5629, 3.77082, 0.92 ) }
    dend_1 { pt3dadd( -76.8366, 24.763, 2.96761, 0.92 ) }
    dend_1 { pt3dadd( -80.0269, 27.0933, 2.20494, 0.92 ) }
    dend_1 { pt3dadd( -82.9635, 29.5158, 1.49899, 0.92 ) }
    dend_1 { pt3dadd( -84.9527, 31.4437, 0.9656, 0.92 ) }
    dend_1 { pt3dadd( -87.7636, 34.4756, 0.11172, 0.92 ) }
    dend_1 { pt3dadd( -90.2591, 37.531, -0.732908, 0.92 ) }
    dend_1 { pt3dadd( -93.2305, 41.7182, -1.95422, 0.92 ) }
    dend_1 { pt3dadd( -94.8279, 44.1352, -2.74589, 0.92 ) }
    dend_1 { pt3dadd( -96.9581, 47.6197, -3.93222, 0.92 ) }
    dend_1 { pt3dadd( -99.6508, 52.2809, -5.5542, 0.92 ) }
    dend_1 { pt3dadd( -101.385, 55.2877, -6.61969, 0.92 ) }
    dend_1 { pt3dadd( -102.839, 57.9695, -7.50116, 0.92 ) }
    dend_1 { pt3dadd( -104.416, 60.8825, -8.37169, 0.92 ) }
    dend_1 { pt3dadd( -107.32, 66.0817, -9.67071, 0.92 ) }
    dend_1 { pt3dadd( -107.338, 66.1115, -9.67582, 0.92 ) }
    dend_1 { pt3dadd( -109.381, 69.5398, -9.9782, 0.92 ) }
    dend_1 { pt3dadd( -111.582, 72.9975, -10.1625, 0.92 ) }
    dend_1 { pt3dadd( -114.561, 77.269, -10.2562, 0.92 ) }
    dend_1 { pt3dadd( -117.096, 80.8136, -10.256, 0.92 ) }
    dend_1 { pt3dadd( -120.523, 85.3046, -10.2668, 0.92 ) }
    dend_1 { pt3dadd( -123.285, 88.7514, -10.3241, 0.92 ) }
    dend_1 { pt3dadd( -125.586, 91.3622, -10.4483, 0.92 ) }
    dend_1 { pt3dadd( -127.447, 93.2902, -10.6701, 0.92 ) }
    dend_1 { pt3dadd( -130.49, 96.1678, -11.2706, 0.92 ) }
    dend_1 { pt3dadd( -132.404, 97.8684, -11.8086, 0.92 ) }
    dend_1 { pt3dadd( -135.363, 100.36, -12.9205, 0.92 ) }
    dend_1 { pt3dadd( -137.61, 102.157, -13.8513, 0.92 ) }
    dend_1 { pt3dadd( -140.261, 104.218, -14.9328, 0.46 ) }
    dend_1 { pt3dadd( -141.953, 105.587, -15.713, 0.46 ) }
    dend_1 { pt3dadd( -141.97, 105.6, -15.7213, 0.46 ) }
    dend_1 { pt3dadd( -144.471, 107.53, -16.9206, 0.46 ) }
    dend_1 { pt3dadd( -147.091, 109.618, -18.1197, 0.46 ) }
    dend_1 { pt3dadd( -147.108, 109.633, -18.1266, 0.46 ) }
    dend_1 { pt3dadd( -149.163, 111.586, -18.8658, 0.46 ) }
    dend_1 { pt3dadd( -152.32, 114.914, -19.9237, 0.46 ) }
    dend_1 { pt3dadd( -152.335, 114.931, -19.9285, 0.46 ) }
    dend_1 { pt3dadd( -155.098, 118.224, -20.7544, 0.46 ) }
    dend_1 { pt3dadd( -157.29, 121.111, -21.3925, 0.46 ) }
    dend_1 { pt3dadd( -159.218, 123.799, -21.95, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -160.758, 126.043, -22.3857, 0.46 ) }
    dend_1 { pt3dadd( -163.14, 129.658, -23.0658, 0.46 ) }
    dend_1 { pt3dadd( -165.133, 132.611, -23.647, 0.46 ) }
    dend_1 { pt3dadd( -168.058, 136.852, -24.4943, 0.46 ) }
    dend_1 { pt3dadd( -171.123, 141.094, -25.3558, 0.46 ) }
    dend_1 { pt3dadd( -174.844, 146.133, -26.4641, 0.46 ) }
    dend_1 { pt3dadd( -178.856, 151.296, -27.7305, 0.46 ) }
    dend_1 { pt3dadd( -183.217, 156.689, -29.171, 0.46 ) }
    dend_1 { pt3dadd( -186.868, 160.992, -30.4166, 0.46 ) }
    dend_1 { pt3dadd( -191.079, 165.636, -31.9186, 0.46 ) }
    dend_1 { pt3dadd( -193.523, 168.088, -32.8577, 0.46 ) }
    dend_1 { pt3dadd( -196.232, 170.564, -34.0023, 0.46 ) }
    dend_1 { pt3dadd( -198.813, 172.773, -35.1791, 0.46 ) }
    dend_1 { pt3dadd( -198.831, 172.787, -35.1877, 0.46 ) }
    dend_1 { pt3dadd( -201.604, 174.639, -36.7483, 0.46 ) }
    dend_1 { pt3dadd( -204.344, 176.077, -38.483, 0.46 ) }
    dend_1 { pt3dadd( -204.373, 176.088, -38.5005, 0.46 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 17/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.8219, 29.7086, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 31.9175, 41.6363, 0.0, 0.46 ) }
    axon_1 { pt3dadd( 41.0131, 53.564, 0.0, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 20/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.70953, 21.8994, -20.146, 0.92 ) }
    dend_43 { pt3dadd( 7.75517, 22.3556, -22.3677, 0.92 ) }
    dend_43 { pt3dadd( 7.75705, 22.3582, -22.3848, 0.92 ) }
    dend_43 { pt3dadd( 8.02123, 22.6379, -24.4308, 0.92 ) }
    dend_43 { pt3dadd( 8.02315, 22.6391, -24.4481, 0.92 ) }
    dend_43 { pt3dadd( 8.27713, 22.7636, -27.5435, 0.92 ) }
    dend_43 { pt3dadd( 8.34434, 22.9035, -30.8572, 0.92 ) }
    dend_43 { pt3dadd( 8.0145, 23.1153, -34.3923, 0.92 ) }
    dend_43 { pt3dadd( 8.001, 23.1206, -34.4781, 0.92 ) }
    dend_43 { pt3dadd( 7.37727, 23.2796, -37.368, 0.92 ) }
    dend_43 { pt3dadd( 6.74923, 23.3683, -39.7636, 0.92 ) }
    dend_43 { pt3dadd( 5.83781, 23.4017, -42.8048, 0.92 ) }
    dend_43 { pt3dadd( 3.9866, 23.3717, -48.6739, 0.92 ) }
    dend_43 { pt3dadd( 2.88414, 23.3041, -51.9312, 0.92 ) }
    dend_43 { pt3dadd( 1.742, 23.1668, -55.2835, 0.92 ) }
    dend_43 { pt3dadd( 0.594537, 22.9571, -58.759, 0.92 ) }
    dend_43 { pt3dadd( -0.516184, 22.6143, -62.384, 0.92 ) }
    dend_43 { pt3dadd( -1.37817, 22.2035, -65.5106, 0.92 ) }
    dend_43 { pt3dadd( -2.09707, 21.7281, -68.466, 0.92 ) }
    dend_43 { pt3dadd( -2.73996, 21.2195, -71.4181, 0.92 ) }
    dend_43 { pt3dadd( -3.04729, 20.996, -72.982, 0.92 ) }
    dend_43 { pt3dadd( -3.71753, 20.5937, -76.7398, 0.92 ) }
    dend_43 { pt3dadd( -3.72103, 20.5922, -76.7568, 0.92 ) }
    dend_43 { pt3dadd( -4.63261, 20.319, -80.3071, 0.92 ) }
    dend_43 { pt3dadd( -5.07354, 20.2154, -81.8159, 0.92 ) }
    dend_43 { pt3dadd( -6.13522, 19.9078, -85.3094, 0.92 ) }
    dend_43 { pt3dadd( -6.14947, 19.904, -85.3503, 0.92 ) }
    dend_43 { pt3dadd( -7.05117, 19.6341, -87.723, 0.92 ) }
    dend_43 { pt3dadd( -8.09373, 19.2788, -90.3874, 0.92 ) }
    dend_43 { pt3dadd( -8.10038, 19.2759, -90.4032, 0.92 ) }
    dend_43 { pt3dadd( -9.45589, 18.4337, -93.8007, 0.92 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.70953, 21.8994, -20.146, 0.92 ) }
    dend_40 { pt3dadd( 7.38207, 23.5979, -22.0705, 0.92 ) }
    dend_40 { pt3dadd( 7.2, 25.3143, -23.7813, 0.92 ) }
    dend_40 { pt3dadd( 7.08598, 26.7925, -25.1951, 0.92 ) }
    dend_40 { pt3dadd( 7.01669, 28.9771, -27.1447, 0.92 ) }
    dend_40 { pt3dadd( 7.0319, 30.5337, -28.5043, 0.92 ) }
    dend_40 { pt3dadd( 7.0619, 32.5085, -30.2213, 0.92 ) }
    dend_40 { pt3dadd( 7.0699, 34.7444, -32.1161, 0.92 ) }
    dend_40 { pt3dadd( 7.15263, 36.1812, -33.3151, 0.92 ) }
    dend_40 { pt3dadd( 7.4525, 38.6835, -35.4009, 0.92 ) }
    dend_40 { pt3dadd( 7.73879, 40.1805, -36.6711, 0.92 ) }
    dend_40 { pt3dadd( 8.17885, 42.0986, -38.346, 0.92 ) }
    dend_40 { pt3dadd( 8.60054, 44.0407, -40.1411, 0.92 ) }
    dend_40 { pt3dadd( 8.93493, 45.6753, -41.7241, 0.92 ) }
    dend_40 { pt3dadd( 8.93951, 45.6948, -41.7435, 0.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 66/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 10.4813, 12.9591, -4.71785, 0.92 ) }
    dend_36 { pt3dadd( 13.9189, 16.0778, -7.4294, 0.92 ) }
    dend_36 { pt3dadd( 16.1503, 17.8903, -8.98041, 0.92 ) }
    dend_36 { pt3dadd( 17.642, 19.051, -9.8404, 0.92 ) }
    dend_36 { pt3dadd( 19.304, 20.4529, -10.6987, 0.46 ) }
    dend_36 { pt3dadd( 21.8938, 22.663, -11.8459, 0.46 ) }
    dend_36 { pt3dadd( 21.9082, 22.6758, -11.8517, 0.46 ) }
    dend_36 { pt3dadd( 24.0994, 24.6604, -12.5439, 0.46 ) }
    dend_36 { pt3dadd( 26.4092, 26.8954, -13.145, 0.46 ) }
    dend_36 { pt3dadd( 29.0656, 29.8148, -13.7451, 0.46 ) }
    dend_36 { pt3dadd( 31.2747, 32.4805, -14.2027, 0.46 ) }
    dend_36 { pt3dadd( 33.1205, 34.8396, -14.58, 0.46 ) }
    dend_36 { pt3dadd( 34.6161, 36.8157, -14.9205, 0.46 ) }
    dend_36 { pt3dadd( 36.4083, 39.271, -15.3874, 0.46 ) }
    dend_36 { pt3dadd( 38.2558, 41.6579, -15.8919, 0.46 ) }
    dend_36 { pt3dadd( 40.8513, 44.7946, -16.5699, 0.46 ) }
    dend_36 { pt3dadd( 40.8645, 44.8095, -16.5724, 0.46 ) }
    dend_36 { pt3dadd( 42.5512, 46.5226, -16.7786, 0.46 ) }
    dend_36 { pt3dadd( 44.7935, 48.5555, -16.9935, 0.46 ) }
    dend_36 { pt3dadd( 47.9721, 51.2487, -17.2356, 0.46 ) }
    dend_36 { pt3dadd( 48.0654, 51.3253, -17.2419, 0.46 ) }
    dend_36 { pt3dadd( 51.5058, 54.26, -17.4587, 0.46 ) }
    dend_36 { pt3dadd( 54.6499, 57.0657, -17.6756, 0.46 ) }
    dend_36 { pt3dadd( 56.342, 58.7261, -17.8476, 0.46 ) }
    dend_36 { pt3dadd( 56.3626, 58.7478, -17.851, 0.46 ) }
    dend_36 { pt3dadd( 59.5338, 62.4665, -18.6982, 0.46 ) }
    dend_36 { pt3dadd( 61.9434, 65.563, -19.5639, 0.46 ) }
    dend_36 { pt3dadd( 61.9602, 65.5866, -19.5717, 0.46 ) }
    dend_36 { pt3dadd( 64.1295, 68.9, -20.6202, 0.46 ) }
    dend_36 { pt3dadd( 64.7943, 69.9501, -20.9466, 0.46 ) }
    dend_36 { pt3dadd( 66.7144, 73.0853, -21.9196, 0.46 ) }
    dend_36 { pt3dadd( 68.4387, 75.9491, -22.7718, 0.46 ) }
    dend_36 { pt3dadd( 70.657, 79.6647, -23.7738, 0.46 ) }
    dend_36 { pt3dadd( 72.5276, 82.8293, -24.5146, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 73.6945, 84.8132, -24.9142, 0.46 ) }
    dend_36 { pt3dadd( 75.0824, 87.4558, -25.4112, 0.46 ) }
    dend_36 { pt3dadd( 76.501, 90.693, -26.0477, 0.46 ) }
    dend_36 { pt3dadd( 78.2421, 95.3779, -27.0175, 0.46 ) }
    dend_36 { pt3dadd( 79.3253, 99.0387, -27.9007, 0.46 ) }
    dend_36 { pt3dadd( 79.33, 99.0573, -27.9058, 0.46 ) }
    dend_36 { pt3dadd( 80.1986, 103.539, -29.4179, 0.46 ) }
    dend_36 { pt3dadd( 81.0271, 108.4, -31.4209, 0.46 ) }
    dend_36 { pt3dadd( 81.0351, 108.462, -31.4511, 0.46 ) }
    dend_36 { pt3dadd( 81.4597, 113.042, -33.8982, 0.46 ) }
    dend_36 { pt3dadd( 81.4614, 113.059, -33.908, 0.46 ) }
    dend_36 { pt3dadd( 81.9592, 116.852, -36.1154, 0.46 ) }
    dend_36 { pt3dadd( 82.6709, 120.437, -38.3171, 0.46 ) }
    dend_36 { pt3dadd( 83.5074, 124.379, -40.8426, 0.46 ) }
    dend_36 { pt3dadd( 83.8108, 125.873, -41.7811, 0.46 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 15/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.4813, 12.9591, -4.71785, 0.92 ) }
    dend_31 { pt3dadd( 14.3392, 14.4207, -4.80126, 0.92 ) }
    dend_31 { pt3dadd( 17.5386, 15.6521, -4.88706, 0.92 ) }
    dend_31 { pt3dadd( 18.6078, 16.028, -4.93229, 0.92 ) }
    dend_31 { pt3dadd( 21.8964, 17.1302, -5.09833, 0.92 ) }
    dend_31 { pt3dadd( 25.4301, 18.2588, -5.3614, 0.92 ) }
    dend_31 { pt3dadd( 29.5087, 19.4669, -5.82385, 0.92 ) }
    dend_31 { pt3dadd( 29.5317, 19.4728, -5.82844, 0.92 ) }
    dend_31 { pt3dadd( 32.5444, 20.1801, -6.7888, 0.92 ) }
    dend_31 { pt3dadd( 32.5778, 20.1878, -6.8011, 0.92 ) }
    dend_31 { pt3dadd( 36.0918, 20.9708, -8.38584, 0.92 ) }
    dend_31 { pt3dadd( 38.9514, 21.4644, -9.91066, 0.92 ) }
    dend_31 { pt3dadd( 42.259, 21.9363, -11.9572, 0.92 ) }
    dend_31 { pt3dadd( 44.547, 22.2991, -13.4632, 0.92 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 22.0605, 1.84814, 41.527, 0.46 ) }
    dend_25 { pt3dadd( 26.1475, -0.200886, 48.5112, 0.46 ) }
    dend_25 { pt3dadd( 30.6328, -2.3312, 55.2214, 0.46 ) }
    dend_25 { pt3dadd( 35.0335, -5.24492, 61.6755, 0.46 ) }
    dend_25 { pt3dadd( 39.2003, -7.4335, 68.568, 0.46 ) }
    dend_25 { pt3dadd( 42.55, -10.3733, 75.6091, 0.46 ) }
    dend_25 { pt3dadd( 45.9776, -13.4731, 82.5404, 0.46 ) }
    dend_25 { pt3dadd( 50.3412, -15.8318, 89.2508, 0.46 ) }
    dend_25 { pt3dadd( 54.652, -19.638, 95.2654, 0.46 ) }
    dend_25 { pt3dadd( 59.243, -24.8446, 99.7986, 0.46 ) }
    dend_25 { pt3dadd( 63.955, -29.5891, 104.721, 0.46 ) }
    dend_25 { pt3dadd( 69.0067, -34.7908, 108.748, 0.46 ) }
    dend_25 { pt3dadd( 73.6725, -40.1706, 112.986, 0.46 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 42/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 22.0605, 1.84814, 41.527, 0.46 ) }
    dend_24 { pt3dadd( 29.2716, -0.120334, 50.1542, 0.46 ) }
    dend_24 { pt3dadd( 36.6891, -2.89137, 58.3597, 0.46 ) }
    dend_24 { pt3dadd( 45.1293, -5.52825, 65.5475, 0.46 ) }
    dend_24 { pt3dadd( 52.4359, -9.21466, 73.4666, 0.46 ) }
    dend_24 { pt3dadd( 58.9838, -13.4706, 81.7506, 0.46 ) }
    dend_24 { pt3dadd( 63.7214, -19.2966, 90.2867, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 49/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.19411, 37.6061, 11.7561, 0.46 ) }
    dend_22 { pt3dadd( -10.7867, 38.529, 11.7416, 0.46 ) }
    dend_22 { pt3dadd( -13.1936, 39.2089, 11.8464, 0.46 ) }
    dend_22 { pt3dadd( -18.4565, 40.5888, 12.3574, 0.46 ) }
    dend_22 { pt3dadd( -21.8629, 41.5729, 12.8538, 0.46 ) }
    dend_22 { pt3dadd( -24.2826, 42.353, 13.3098, 0.46 ) }
    dend_22 { pt3dadd( -27.4464, 43.4762, 14.0273, 0.46 ) }
    dend_22 { pt3dadd( -29.4702, 44.3172, 14.6795, 0.46 ) }
    dend_22 { pt3dadd( -32.0683, 45.482, 15.6853, 0.46 ) }
    dend_22 { pt3dadd( -34.7843, 46.8975, 17.019, 0.46 ) }
    dend_22 { pt3dadd( -36.8895, 48.1296, 18.2091, 0.46 ) }
    dend_22 { pt3dadd( -39.5144, 49.7136, 19.784, 0.46 ) }
    dend_22 { pt3dadd( -41.5225, 51.0816, 21.0789, 0.46 ) }
    dend_22 { pt3dadd( -49.8896, 53.6463, 25.3357, 0.46 ) }
    dend_22 { pt3dadd( -57.8642, 55.3864, 30.6492, 0.46 ) }
    dend_22 { pt3dadd( -66.5536, 56.1209, 34.9965, 0.46 ) }
    dend_22 { pt3dadd( -75.6845, 56.5657, 38.3698, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.19411, 37.6061, 11.7561, 1.38 ) }
    dend_19 { pt3dadd( -8.24768, 40.2524, 11.6609, 1.38 ) }
    dend_19 { pt3dadd( -9.26051, 42.8587, 11.6027, 0.92 ) }
    dend_19 { pt3dadd( -10.2933, 45.5277, 11.6242, 0.92 ) }
    dend_19 { pt3dadd( -10.2985, 45.5404, 11.6247, 0.92 ) }
    dend_19 { pt3dadd( -11.2443, 47.7703, 11.7445, 0.92 ) }
    dend_19 { pt3dadd( -12.1266, 49.7708, 11.8855, 0.92 ) }
    dend_19 { pt3dadd( -12.1322, 49.7832, 11.8868, 0.92 ) }
    dend_19 { pt3dadd( -13.3641, 52.0959, 12.1984, 0.92 ) }
    dend_19 { pt3dadd( -14.8511, 54.5639, 12.6282, 0.92 ) }
    dend_19 { pt3dadd( -14.8583, 54.5754, 12.6303, 0.92 ) }
    dend_19 { pt3dadd( -16.3818, 56.8276, 13.0703, 0.92 ) }
    dend_19 { pt3dadd( -18.1412, 59.3201, 13.5405, 0.92 ) }
    dend_19 { pt3dadd( -20.192, 62.1518, 14.0767, 0.92 ) }
    dend_19 { pt3dadd( -21.8348, 64.2925, 14.4836, 0.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 81/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.15547, -58.6057, 11.3931, 0.92 ) }
    dend_13 { pt3dadd( 3.95698, -62.3984, 12.2454, 0.92 ) }
    dend_13 { pt3dadd( 3.67666, -65.6533, 12.9514, 0.92 ) }
    dend_13 { pt3dadd( 3.41156, -69.3435, 13.8717, 0.92 ) }
    dend_13 { pt3dadd( 3.28412, -72.2624, 14.6581, 0.92 ) }
    dend_13 { pt3dadd( 3.18897, -75.2394, 15.4211, 0.92 ) }
    dend_13 { pt3dadd( 3.09011, -77.8399, 16.0592, 0.92 ) }
    dend_13 { pt3dadd( 2.90681, -80.9447, 16.7961, 0.92 ) }
    dend_13 { pt3dadd( 2.6696, -83.4693, 17.3212, 0.92 ) }
    dend_13 { pt3dadd( 2.25319, -86.9913, 17.9991, 0.92 ) }
    dend_13 { pt3dadd( 1.62034, -91.2259, 18.7631, 0.92 ) }
    dend_13 { pt3dadd( 1.14406, -94.2942, 19.3021, 0.92 ) }
    dend_13 { pt3dadd( 0.674908, -97.373, 19.8288, 0.92 ) }
    dend_13 { pt3dadd( 0.192732, -100.29, 20.2678, 0.92 ) }
    dend_13 { pt3dadd( -0.394153, -103.736, 20.7436, 0.92 ) }
    dend_13 { pt3dadd( -1.07198, -107.583, 21.2564, 0.92 ) }
    dend_13 { pt3dadd( -1.57184, -110.585, 21.6677, 0.92 ) }
    dend_13 { pt3dadd( -1.84983, -112.756, 21.9711, 0.92 ) }
    dend_13 { pt3dadd( -2.05223, -114.958, 22.3135, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( -2.26673, -117.771, 22.8292, 0.92 ) }
    dend_13 { pt3dadd( -2.36178, -121.255, 23.6486, 0.92 ) }
    dend_13 { pt3dadd( -2.15523, -124.213, 24.5752, 0.92 ) }
    dend_13 { pt3dadd( -1.65053, -127.073, 25.7455, 0.92 ) }
    dend_13 { pt3dadd( -0.860131, -129.715, 27.1627, 0.92 ) }
    dend_13 { pt3dadd( 0.3897, -131.548, 28.6219, 0.46 ) }
    dend_13 { pt3dadd( 2.71333, -133.071, 30.6753, 0.46 ) }
    dend_13 { pt3dadd( 5.11706, -133.864, 32.3999, 0.46 ) }
    dend_13 { pt3dadd( 8.19721, -134.315, 34.2686, 0.46 ) }
    dend_13 { pt3dadd( 8.21933, -134.315, 34.2796, 0.46 ) }
    dend_13 { pt3dadd( 12.7109, -133.939, 36.083, 0.46 ) }
    dend_13 { pt3dadd( 12.746, -133.935, 36.0942, 0.46 ) }
    dend_13 { pt3dadd( 14.9198, -133.939, 36.6021, 0.46 ) }
    dend_13 { pt3dadd( 14.9562, -133.943, 36.6076, 0.46 ) }
    dend_13 { pt3dadd( 18.3207, -134.722, 36.9995, 0.46 ) }
    dend_13 { pt3dadd( 19.6397, -135.076, 37.1726, 0.46 ) }
    dend_13 { pt3dadd( 19.6738, -135.089, 37.1784, 0.46 ) }
    dend_13 { pt3dadd( 22.828, -136.19, 37.6887, 0.46 ) }
    dend_13 { pt3dadd( 23.4399, -136.361, 37.7755, 0.46 ) }
    dend_13 { pt3dadd( 25.4662, -148.19, 38.9735, 0.46 ) }
    dend_13 { pt3dadd( 28.7038, -159.773, 39.9821, 0.46 ) }
    dend_13 { pt3dadd( 30.7811, -171.621, 39.1405, 0.46 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 22/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.15547, -58.6057, 11.3931, 0.92 ) }
    dend_12 { pt3dadd( 6.19418, -60.4489, 10.3534, 0.92 ) }
    dend_12 { pt3dadd( 6.20797, -60.4621, 10.3465, 0.92 ) }
    dend_12 { pt3dadd( 7.9695, -61.9945, 9.62416, 0.92 ) }
    dend_12 { pt3dadd( 9.86035, -63.668, 8.98761, 0.92 ) }
    dend_12 { pt3dadd( 9.88177, -63.6887, 8.98123, 0.92 ) }
    dend_12 { pt3dadd( 12.1896, -66.0622, 8.36566, 0.92 ) }
    dend_12 { pt3dadd( 13.8083, -67.7983, 8.00142, 0.92 ) }
    dend_12 { pt3dadd( 15.8263, -70.1127, 7.61371, 0.92 ) }
    dend_12 { pt3dadd( 18.3714, -73.1933, 7.23847, 0.92 ) }
    dend_12 { pt3dadd( 20.6526, -76.0804, 6.97992, 0.92 ) }
    dend_12 { pt3dadd( 22.1537, -78.1003, 6.83, 0.92 ) }
    dend_12 { pt3dadd( 22.2127, -78.182, 6.82639, 0.92 ) }
    dend_12 { pt3dadd( 23.6158, -80.2744, 6.76435, 0.92 ) }
    dend_12 { pt3dadd( 24.5969, -81.8149, 6.73612, 0.92 ) }
    dend_12 { pt3dadd( 26.278, -84.4977, 6.70639, 0.92 ) }
    dend_12 { pt3dadd( 27.9179, -86.9975, 6.6961, 0.92 ) }
    dend_12 { pt3dadd( 29.0885, -88.8592, 6.68933, 0.92 ) }
    dend_12 { pt3dadd( 31.734, -93.1604, 6.69751, 0.92 ) }
    dend_12 { pt3dadd( 33.1361, -95.4901, 6.77107, 0.92 ) }
    dend_12 { pt3dadd( 34.9616, -98.5318, 6.9009, 0.92 ) }
    dend_12 { pt3dadd( 36.525, -101.028, 6.96763, 0.92 ) }
    dend_12 { pt3dadd( 38.4684, -103.98, 6.98047, 0.92 ) }
    dend_12 { pt3dadd( 40.3658, -106.895, 6.88914, 0.92 ) }
    dend_12 { pt3dadd( 42.6814, -110.368, 6.68033, 0.92 ) }
    dend_12 { pt3dadd( 44.0955, -112.544, 6.45454, 0.92 ) }
    dend_12 { pt3dadd( 45.8663, -115.285, 6.0659, 0.92 ) }
    dend_12 { pt3dadd( 47.9836, -118.882, 5.39617, 0.92 ) }
    dend_12 { pt3dadd( 49.4685, -121.438, 4.79461, 0.92 ) }
    dend_12 { pt3dadd( 49.4904, -121.481, 4.78228, 0.92 ) }
    dend_12 { pt3dadd( 50.4507, -123.976, 4.06329, 0.92 ) }
    dend_12 { pt3dadd( 50.4629, -124.013, 4.05489, 0.92 ) }
    dend_12 { pt3dadd( 51.551, -127.359, 3.46279, 0.46 ) }
    dend_12 { pt3dadd( 51.7048, -127.781, 3.3984, 0.46 ) }
    dend_12 { pt3dadd( 53.2343, -131.172, 2.99725, 0.46 ) }
    dend_12 { pt3dadd( 55.4011, -135.333, 2.65523, 0.46 ) }
    dend_12 { pt3dadd( 56.9266, -137.93, 2.54761, 0.46 ) }
    dend_12 { pt3dadd( 58.3854, -140.118, 2.46266, 0.46 ) }
    dend_12 { pt3dadd( 60.7174, -143.104, 2.33932, 0.46 ) }
    dend_12 { pt3dadd( 61.9607, -144.54, 2.26853, 0.46 ) }
    dend_12 { pt3dadd( 64.2857, -146.826, 2.08983, 0.46 ) }
    dend_12 { pt3dadd( 66.1875, -148.471, 1.83485, 0.46 ) }
    dend_12 { pt3dadd( 68.1252, -150.311, 1.40459, 0.46 ) }
    dend_12 { pt3dadd( 69.4529, -151.841, 0.967835, 0.46 ) }
    dend_12 { pt3dadd( 69.4649, -151.857, 0.96284, 0.46 ) }
    dend_12 { pt3dadd( 70.9933, -154.246, 0.228447, 0.46 ) }
    dend_12 { pt3dadd( 72.2386, -156.464, -0.42059, 0.46 ) }
    dend_12 { pt3dadd( 73.3975, -158.651, -0.971956, 0.46 ) }
    dend_12 { pt3dadd( 74.6696, -161.229, -1.50788, 0.46 ) }
    dend_12 { pt3dadd( 75.5501, -162.929, -1.85349, 0.46 ) }
    dend_12 { pt3dadd( 76.6975, -164.984, -2.26771, 0.46 ) }
    dend_12 { pt3dadd( 78.1412, -167.22, -2.74213, 0.46 ) }
    dend_12 { pt3dadd( 79.9389, -169.661, -3.39531, 0.46 ) }
    dend_12 { pt3dadd( 79.9574, -169.683, -3.4034, 0.46 ) }
    dend_12 { pt3dadd( 81.845, -172.009, -4.48435, 0.46 ) }
    dend_12 { pt3dadd( 81.8563, -172.023, -4.49232, 0.46 ) }
    dend_12 { pt3dadd( 83.4551, -174.2, -5.78686, 0.46 ) }
    dend_12 { pt3dadd( 85.1502, -176.679, -7.3449, 0.46 ) }
    dend_12 { pt3dadd( 86.1931, -178.421, -8.44599, 0.46 ) }
    dend_12 { pt3dadd( 86.973, -179.845, -9.31906, 0.46 ) }
    dend_12 { pt3dadd( 86.9807, -179.861, -9.32822, 0.46 ) }
    dend_12 { pt3dadd( 87.866, -181.919, -10.3828, 0.46 ) }
    dend_12 { pt3dadd( 87.885, -181.972, -10.4054, 0.46 ) }
    dend_12 { pt3dadd( 88.4677, -183.586, -10.9924, 0.46 ) }
    dend_12 { pt3dadd( 88.483, -183.631, -11.0064, 0.46 ) }
    dend_12 { pt3dadd( 89.4613, -186.595, -11.8258, 0.46 ) }
    dend_12 { pt3dadd( 89.5972, -187.13, -11.9805, 0.46 ) }
    dend_12 { pt3dadd( 90.0531, -189.467, -12.6829, 0.46 ) }
    dend_12 { pt3dadd( 90.0764, -189.649, -12.7332, 0.46 ) }
    dend_12 { pt3dadd( 90.2576, -192.005, -13.3569, 0.46 ) }
    dend_12 { pt3dadd( 90.26, -192.034, -13.363, 0.46 ) }
    dend_12 { pt3dadd( 90.4949, -195.299, -13.9337, 0.46 ) }
    dend_12 { pt3dadd( 90.5004, -195.349, -13.9385, 0.46 ) }
    dend_12 { pt3dadd( 91.0258, -199.416, -13.9587, 0.46 ) }
    dend_12 { pt3dadd( 91.0357, -199.486, -13.9542, 0.46 ) }
    dend_12 { pt3dadd( 91.8766, -204.825, -13.35, 0.46 ) }
    dend_12 { pt3dadd( 91.8949, -204.942, -13.3328, 0.46 ) }
    dend_12 { pt3dadd( 92.7552, -210.216, -12.3738, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 93.2564, -214.394, -11.576, 0.46 ) }
    dend_12 { pt3dadd( 93.4472, -217.416, -10.9775, 0.46 ) }
    dend_12 { pt3dadd( 93.4474, -217.436, -10.9736, 0.46 ) }
    dend_12 { pt3dadd( 93.1231, -221.503, -10.2534, 0.46 ) }
    dend_12 { pt3dadd( 93.1194, -221.533, -10.2489, 0.46 ) }
    dend_12 { pt3dadd( 92.4122, -225.209, -9.8354, 0.46 ) }
    dend_12 { pt3dadd( 91.6263, -228.74, -9.5378, 0.46 ) }
    dend_12 { pt3dadd( 91.6072, -228.818, -9.53227, 0.46 ) }
    dend_12 { pt3dadd( 90.4062, -233.535, -9.18222, 0.46 ) }
    dend_12 { pt3dadd( 90.3963, -233.574, -9.17949, 0.46 ) }
    dend_12 { pt3dadd( 89.7184, -236.516, -9.0274, 0.46 ) }
    dend_12 { pt3dadd( 89.7086, -236.565, -9.02563, 0.46 ) }
    dend_12 { pt3dadd( 89.1586, -239.255, -9.0059, 0.46 ) }
    dend_12 { pt3dadd( 89.122, -239.37, -9.00702, 0.46 ) }
    dend_12 { pt3dadd( 86.4636, -244.147, -9.12153, 0.46 ) }
    dend_12 { pt3dadd( 85.0537, -245.552, -9.139, 0.46 ) }
    dend_12 { pt3dadd( 85.0299, -245.571, -9.13953, 0.46 ) }
    dend_12 { pt3dadd( 81.8523, -247.711, -9.19481, 0.46 ) }
    dend_12 { pt3dadd( 76.7191, -250.103, -9.22771, 0.46 ) }
    dend_12 { pt3dadd( 72.7634, -251.304, -9.19186, 0.46 ) }
    dend_12 { pt3dadd( 68.0668, -251.727, -9.03291, 0.46 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -48.5082, -126.136, 136.113, 0.46 ) }
    dend_9 { pt3dadd( -49.5162, -130.069, 140.529, 0.46 ) }
    dend_9 { pt3dadd( -49.6331, -133.088, 145.743, 0.46 ) }
    dend_9 { pt3dadd( -48.6229, -135.368, 151.246, 0.46 ) }
    dend_9 { pt3dadd( -46.4733, -137.238, 156.582, 0.46 ) }
    dend_9 { pt3dadd( -43.1182, -138.244, 161.523, 0.46 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 27/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -48.5082, -126.136, 136.113, 0.46 ) }
    dend_8 { pt3dadd( -50.5403, -132.392, 144.152, 0.46 ) }
    dend_8 { pt3dadd( -54.6877, -136.877, 152.611, 0.46 ) }
    dend_8 { pt3dadd( -59.2175, -141.016, 161.058, 0.46 ) }
    dend_8 { pt3dadd( -64.121, -144.793, 169.474, 0.46 ) }
    dend_8 { pt3dadd( -68.0377, -149.928, 177.649, 0.46 ) }
    dend_8 { pt3dadd( -72.916, -153.074, 186.347, 0.46 ) }
    dend_8 { pt3dadd( -76.3832, -155.333, 195.961, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -32.5609, -46.8309, 15.8339, 0.92 ) }
    dend_4 { pt3dadd( -32.1367, -50.0064, 15.9771, 0.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -32.5609, -46.8309, 15.8339, 0.92 ) }
    dend_3 { pt3dadd( -35.2881, -47.0008, 17.4748, 0.92 ) }
    dend_3 { pt3dadd( -35.3064, -47.0027, 17.4843, 0.92 ) }
    dend_3 { pt3dadd( -37.2349, -47.2584, 18.2532, 0.46 ) }
    dend_3 { pt3dadd( -39.7441, -47.6094, 19.117, 0.46 ) }
    dend_3 { pt3dadd( -42.3013, -47.9625, 19.8623, 0.46 ) }
    dend_3 { pt3dadd( -46.0845, -48.5309, 20.7379, 0.46 ) }
    dend_3 { pt3dadd( -48.6804, -48.9889, 21.1529, 0.46 ) }
    dend_3 { pt3dadd( -52.6061, -49.6686, 21.4739, 0.46 ) }
    dend_3 { pt3dadd( -53.0148, -49.7378, 21.4695, 0.46 ) }
    dend_3 { pt3dadd( -55.3906, -50.1926, 21.1992, 0.46 ) }
    dend_3 { pt3dadd( -58.1409, -50.7094, 20.5901, 0.46 ) }
    dend_3 { pt3dadd( -58.1603, -50.7128, 20.5838, 0.46 ) }
    dend_3 { pt3dadd( -60.058, -51.0295, 19.9076, 0.46 ) }
    dend_3 { pt3dadd( -60.0868, -51.0347, 19.897, 0.46 ) }
    dend_3 { pt3dadd( -63.4102, -51.6099, 18.5548, 0.46 ) }
    dend_3 { pt3dadd( -65.555, -51.899, 17.6602, 0.46 ) }
    dend_3 { pt3dadd( -67.265, -52.1597, 16.9029, 0.46 ) }
    dend_3 { pt3dadd( -70.3412, -52.8098, 15.4909, 0.46 ) }
    dend_3 { pt3dadd( -70.359, -52.8149, 15.4818, 0.46 ) }
    dend_3 { pt3dadd( -72.6871, -53.615, 14.183, 0.46 ) }
    dend_3 { pt3dadd( -74.4829, -54.3359, 13.0483, 0.46 ) }
    dend_3 { pt3dadd( -77.3922, -55.6364, 11.1171, 0.46 ) }
    dend_3 { pt3dadd( -80.1377, -56.9246, 9.16142, 0.46 ) }
    dend_3 { pt3dadd( -82.2584, -57.9167, 7.56921, 0.46 ) }
    dend_3 { pt3dadd( -82.2737, -57.9242, 7.55763, 0.46 ) }
    dend_3 { pt3dadd( -85.5305, -59.5918, 5.09283, 0.46 ) }
    dend_3 { pt3dadd( -88.2051, -60.9816, 2.96923, 0.46 ) }
    dend_3 { pt3dadd( -91.7228, -62.491, 0.226462, 0.46 ) }
    dend_3 { pt3dadd( -91.8389, -62.5356, 0.133926, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 67/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 8.93951, 45.6948, -41.7435, 0.92 ) }
    dend_42 { pt3dadd( 10.1245, 47.6193, -44.2425, 0.92 ) }
    dend_42 { pt3dadd( 11.3742, 49.6352, -47.011, 0.92 ) }
    dend_42 { pt3dadd( 12.5634, 51.5494, -49.6961, 0.92 ) }
    dend_42 { pt3dadd( 12.5737, 51.5663, -49.7202, 0.92 ) }
    dend_42 { pt3dadd( 13.6813, 53.4756, -52.42, 0.92 ) }
    dend_42 { pt3dadd( 14.7005, 55.3544, -55.1675, 0.92 ) }
    dend_42 { pt3dadd( 15.63, 57.4349, -58.2303, 0.92 ) }
    dend_42 { pt3dadd( 15.635, 57.4463, -58.247, 0.92 ) }
    dend_42 { pt3dadd( 16.3562, 59.3892, -61.111, 0.92 ) }
    dend_42 { pt3dadd( 16.8966, 60.9878, -63.3936, 0.92 ) }
    dend_42 { pt3dadd( 17.4461, 62.5162, -65.5021, 0.92 ) }
    dend_42 { pt3dadd( 18.4012, 64.7338, -68.3902, 0.92 ) }
    dend_42 { pt3dadd( 18.4104, 64.7529, -68.4129, 0.92 ) }
    dend_42 { pt3dadd( 19.9474, 67.7758, -71.8725, 0.92 ) }
    dend_42 { pt3dadd( 21.3283, 70.3808, -74.6762, 0.92 ) }
    dend_42 { pt3dadd( 23.0968, 73.6033, -78.0094, 0.92 ) }
    dend_42 { pt3dadd( 24.8508, 76.8722, -81.2396, 0.92 ) }
    dend_42 { pt3dadd( 26.0518, 79.1574, -83.4628, 0.92 ) }
    dend_42 { pt3dadd( 27.7171, 82.7918, -87.0382, 0.92 ) }
    dend_42 { pt3dadd( 29.184, 86.4663, -90.662, 0.92 ) }
    dend_42 { pt3dadd( 29.1887, 86.4808, -90.6759, 0.92 ) }
    dend_42 { pt3dadd( 30.1637, 90.4717, -94.3806, 0.92 ) }
    dend_42 { pt3dadd( 30.1669, 90.487, -94.3941, 0.92 ) }
    dend_42 { pt3dadd( 31.321, 96.4914, -99.49, 0.92 ) }
    dend_42 { pt3dadd( 31.3253, 96.5152, -99.5094, 0.92 ) }
    dend_42 { pt3dadd( 32.1228, 100.436, -102.515, 0.92 ) }
    dend_42 { pt3dadd( 32.1459, 100.535, -102.585, 0.92 ) }
    dend_42 { pt3dadd( 33.0331, 103.929, -104.888, 0.92 ) }
    dend_42 { pt3dadd( 34.6008, 109.44, -108.45, 0.92 ) }
    dend_42 { pt3dadd( 34.6151, 109.483, -108.475, 0.92 ) }
    dend_42 { pt3dadd( 36.0389, 113.795, -111.061, 0.92 ) }
    dend_42 { pt3dadd( 36.1917, 114.278, -111.381, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 0/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.93951, 45.6948, -41.7435, 0.92 ) }
    dend_41 { pt3dadd( 8.66651, 47.586, -42.2462, 0.92 ) }
    dend_41 { pt3dadd( 8.41306, 49.5345, -42.7982, 0.92 ) }
    dend_41 { pt3dadd( 8.15632, 51.7486, -43.4916, 0.92 ) }
    dend_41 { pt3dadd( 7.7579, 54.2416, -44.3577, 0.92 ) }
    dend_41 { pt3dadd( 7.75357, 54.264, -44.3663, 0.92 ) }
    dend_41 { pt3dadd( 7.49198, 55.5196, -44.8987, 0.92 ) }
    dend_41 { pt3dadd( 6.88195, 57.7519, -45.9665, 0.92 ) }
    dend_41 { pt3dadd( 6.24324, 59.7254, -47.0213, 0.92 ) }
    dend_41 { pt3dadd( 5.45754, 61.927, -48.3066, 0.92 ) }
    dend_41 { pt3dadd( 4.9057, 63.3026, -49.1294, 0.92 ) }
    dend_41 { pt3dadd( 4.02137, 65.3722, -50.3714, 0.92 ) }
    dend_41 { pt3dadd( 3.02484, 67.5351, -51.6461, 0.92 ) }
    dend_41 { pt3dadd( 2.15893, 69.3904, -52.6612, 0.92 ) }
    dend_41 { pt3dadd( 1.38484, 71.2103, -53.5015, 0.92 ) }
    dend_41 { pt3dadd( 0.373714, 73.9136, -54.561, 0.92 ) }
    dend_41 { pt3dadd( 0.366159, 73.9357, -54.5682, 0.92 ) }
    dend_41 { pt3dadd( -0.471751, 76.683, -55.3626, 0.92 ) }
    dend_41 { pt3dadd( -1.38852, 80.0188, -56.329, 0.92 ) }
    dend_41 { pt3dadd( -2.32181, 83.1817, -57.3005, 0.92 ) }
    dend_41 { pt3dadd( -2.44354, 83.612, -57.4308, 0.92 ) }
    dend_41 { pt3dadd( -3.13107, 86.112, -58.2097, 0.92 ) }
    dend_41 { pt3dadd( -3.76161, 88.3852, -58.9626, 0.92 ) }
    dend_41 { pt3dadd( -4.60849, 91.3688, -60.0994, 0.92 ) }
    dend_41 { pt3dadd( -5.48777, 94.0131, -61.4051, 0.92 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 83.8108, 125.873, -41.7811, 0.46 ) }
    dend_38 { pt3dadd( 86.491, 127.33, -42.4857, 0.46 ) }
    dend_38 { pt3dadd( 88.7834, 128.577, -43.0885, 0.46 ) }
    dend_38 { pt3dadd( 91.3785, 129.988, -43.7708, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 83.8108, 125.873, -41.7811, 0.46 ) }
    dend_37 { pt3dadd( 82.7873, 131.553, -43.4259, 0.46 ) }
    dend_37 { pt3dadd( 82.0797, 135.494, -44.6048, 0.46 ) }
    dend_37 { pt3dadd( 81.3207, 139.988, -46.0032, 0.46 ) }
    dend_37 { pt3dadd( 80.4051, 145.714, -47.846, 0.46 ) }
    dend_37 { pt3dadd( 79.8161, 149.727, -49.1759, 0.46 ) }
    dend_37 { pt3dadd( 79.3048, 153.773, -50.5751, 0.46 ) }
    dend_37 { pt3dadd( 79.3027, 153.792, -50.5824, 0.46 ) }
    dend_37 { pt3dadd( 79.017, 157.151, -52.0455, 0.46 ) }
    dend_37 { pt3dadd( 78.8253, 160.912, -53.9172, 0.46 ) }
    dend_37 { pt3dadd( 78.7022, 164.595, -56.0377, 0.46 ) }
    dend_37 { pt3dadd( 78.4577, 167.994, -58.0553, 0.46 ) }
    dend_37 { pt3dadd( 78.2314, 171.213, -60.0145, 0.46 ) }
    dend_37 { pt3dadd( 78.23, 171.23, -60.0253, 0.46 ) }
    dend_37 { pt3dadd( 77.9664, 173.804, -61.7485, 0.46 ) }
    dend_37 { pt3dadd( 77.4727, 177.56, -64.4848, 0.46 ) }
    dend_37 { pt3dadd( 76.8138, 180.776, -66.9819, 0.46 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 46/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 44.547, 22.2991, -13.4632, 0.92 ) }
    dend_35 { pt3dadd( 47.1972, 24.0893, -14.5254, 0.92 ) }
    dend_35 { pt3dadd( 49.5968, 25.7729, -15.4744, 0.92 ) }
    dend_35 { pt3dadd( 53.2601, 28.4798, -16.827, 0.92 ) }
    dend_35 { pt3dadd( 56.9426, 31.2753, -18.1341, 0.46 ) }
    dend_35 { pt3dadd( 60.124, 33.7394, -19.1919, 0.46 ) }
    dend_35 { pt3dadd( 63.38, 36.2942, -20.1719, 0.46 ) }
    dend_35 { pt3dadd( 63.3959, 36.3069, -20.1759, 0.46 ) }
    dend_35 { pt3dadd( 65.4588, 38.0348, -20.5748, 0.46 ) }
    dend_35 { pt3dadd( 65.4745, 38.0481, -20.577, 0.46 ) }
    dend_35 { pt3dadd( 67.0405, 39.2651, -20.7686, 0.46 ) }
    dend_35 { pt3dadd( 69.0799, 40.6145, -20.9159, 0.46 ) }
    dend_35 { pt3dadd( 72.5567, 42.7343, -21.195, 0.46 ) }
    dend_35 { pt3dadd( 75.3, 44.2375, -21.503, 0.46 ) }
    dend_35 { pt3dadd( 75.3277, 44.2514, -21.5068, 0.46 ) }
    dend_35 { pt3dadd( 77.6173, 45.3207, -21.9977, 0.46 ) }
    dend_35 { pt3dadd( 79.8213, 46.2515, -22.5747, 0.46 ) }
    dend_35 { pt3dadd( 84.2033, 47.7845, -23.7934, 0.46 ) }
    dend_35 { pt3dadd( 87.8086, 48.9077, -24.791, 0.46 ) }
    dend_35 { pt3dadd( 87.8568, 48.9219, -24.8044, 0.46 ) }
    dend_35 { pt3dadd( 95.7425, 51.1506, -27.1198, 0.46 ) }
    dend_35 { pt3dadd( 100.732, 52.494, -28.6473, 0.46 ) }
    dend_35 { pt3dadd( 107.297, 54.2001, -30.9252, 0.46 ) }
    dend_35 { pt3dadd( 112.259, 55.4159, -32.7559, 0.46 ) }
    dend_35 { pt3dadd( 112.278, 55.4209, -32.7633, 0.46 ) }
    dend_35 { pt3dadd( 116.798, 56.6822, -34.6371, 0.46 ) }
    dend_35 { pt3dadd( 116.853, 56.6991, -34.6623, 0.46 ) }
    dend_35 { pt3dadd( 121.513, 58.4775, -37.342, 0.46 ) }
    dend_35 { pt3dadd( 121.569, 58.5051, -37.378, 0.46 ) }
    dend_35 { pt3dadd( 125.309, 60.6098, -39.7673, 0.46 ) }
    dend_35 { pt3dadd( 125.325, 60.6193, -39.777, 0.46 ) }
    dend_35 { pt3dadd( 129.012, 62.9699, -42.0021, 0.46 ) }
    dend_35 { pt3dadd( 131.916, 64.8599, -43.7192, 0.46 ) }
    dend_35 { pt3dadd( 136.409, 67.8349, -46.2478, 0.46 ) }
    dend_35 { pt3dadd( 139.633, 69.9363, -48.0453, 0.46 ) }
    dend_35 { pt3dadd( 139.776, 70.025, -48.1245, 0.46 ) }
    dend_35 { pt3dadd( 143.614, 72.3363, -50.2453, 0.46 ) }
    dend_35 { pt3dadd( 143.638, 72.3503, -50.2582, 0.46 ) }
    dend_35 { pt3dadd( 148.067, 74.7266, -52.5149, 0.46 ) }
    dend_35 { pt3dadd( 148.109, 74.7482, -52.5367, 0.46 ) }
    dend_35 { pt3dadd( 153.1, 77.2842, -55.0612, 0.46 ) }
    dend_35 { pt3dadd( 153.164, 77.3238, -55.0942, 0.46 ) }
    dend_35 { pt3dadd( 157.71, 80.5538, -57.3869, 0.46 ) }
    dend_35 { pt3dadd( 157.761, 80.5963, -57.4159, 0.46 ) }
    dend_35 { pt3dadd( 160.307, 83.1626, -59.0714, 0.46 ) }
    dend_35 { pt3dadd( 160.319, 83.1763, -59.081, 0.46 ) }
    dend_35 { pt3dadd( 162.99, 86.9223, -61.7923, 0.46 ) }
    dend_35 { pt3dadd( 163.0, 86.9361, -61.8034, 0.46 ) }
    dend_35 { pt3dadd( 165.238, 89.89, -64.468, 0.46 ) }
    dend_35 { pt3dadd( 165.25, 89.9027, -64.4795, 0.46 ) }
    dend_35 { pt3dadd( 168.092, 92.5992, -66.6143, 0.46 ) }
    dend_35 { pt3dadd( 168.18, 92.673, -66.6614, 0.46 ) }
    dend_35 { pt3dadd( 172.712, 96.2185, -68.6199, 0.46 ) }
    dend_35 { pt3dadd( 172.735, 96.2364, -68.629, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 177.431, 99.7576, -70.2301, 0.46 ) }
    dend_35 { pt3dadd( 183.704, 104.49, -72.1983, 0.46 ) }
    dend_35 { pt3dadd( 189.263, 108.723, -73.6942, 0.46 ) }
    dend_35 { pt3dadd( 193.886, 112.289, -74.8986, 0.46 ) }
    dend_35 { pt3dadd( 197.06, 114.795, -75.6739, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 44.547, 22.2991, -13.4632, 0.46 ) }
    dend_32 { pt3dadd( 45.4171, 21.2992, -14.9767, 0.46 ) }
    dend_32 { pt3dadd( 46.5533, 20.0637, -16.9932, 0.46 ) }
    dend_32 { pt3dadd( 46.5627, 20.0528, -17.0099, 0.46 ) }
    dend_32 { pt3dadd( 48.1804, 18.3031, -19.4831, 0.46 ) }
    dend_32 { pt3dadd( 49.8302, 16.5279, -21.8897, 0.46 ) }
    dend_32 { pt3dadd( 51.613, 14.5291, -24.3232, 0.46 ) }
    dend_32 { pt3dadd( 51.6291, 14.51, -24.3448, 0.46 ) }
    dend_32 { pt3dadd( 52.8358, 13.0362, -25.8386, 0.46 ) }
    dend_32 { pt3dadd( 54.2333, 11.4082, -27.3558, 0.46 ) }
    dend_32 { pt3dadd( 54.5382, 11.0962, -27.6154, 0.46 ) }
    dend_32 { pt3dadd( 56.5108, 9.18536, -29.0851, 0.46 ) }
    dend_32 { pt3dadd( 58.2704, 7.46796, -30.2664, 0.46 ) }
    dend_32 { pt3dadd( 58.3061, 7.43396, -30.2907, 0.46 ) }
    dend_32 { pt3dadd( 60.0815, 5.84095, -31.4888, 0.46 ) }
    dend_32 { pt3dadd( 62.1597, 4.00709, -32.9575, 0.46 ) }
    dend_32 { pt3dadd( 64.1254, 2.35518, -34.3241, 0.46 ) }
    dend_32 { pt3dadd( 64.1405, 2.34314, -34.3347, 0.46 ) }
    dend_32 { pt3dadd( 66.1333, 0.716978, -35.7651, 0.46 ) }
    dend_32 { pt3dadd( 67.8703, -0.744569, -37.0993, 0.46 ) }
    dend_32 { pt3dadd( 69.8564, -2.43766, -38.6563, 0.46 ) }
    dend_32 { pt3dadd( 69.8772, -2.45624, -38.674, 0.46 ) }
    dend_32 { pt3dadd( 71.6853, -4.07016, -40.3032, 0.46 ) }
    dend_32 { pt3dadd( 73.6384, -5.7963, -42.0789, 0.46 ) }
    dend_32 { pt3dadd( 75.546, -7.43978, -43.8553, 0.46 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 73.6725, -40.1706, 112.986, 0.46 ) }
    dend_27 { pt3dadd( 79.1042, -47.1686, 114.536, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 73.6725, -40.1706, 112.986, 0.46 ) }
    dend_26 { pt3dadd( 76.6457, -41.3385, 119.797, 0.46 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 34/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -21.8348, 64.2925, 14.4836, 0.46 ) }
    dend_21 { pt3dadd( -23.7924, 67.1373, 15.1774, 0.46 ) }
    dend_21 { pt3dadd( -25.8242, 70.3555, 15.6682, 0.46 ) }
    dend_21 { pt3dadd( -27.5869, 73.4463, 15.9824, 0.46 ) }
    dend_21 { pt3dadd( -29.2905, 76.7515, 16.2236, 0.46 ) }
    dend_21 { pt3dadd( -31.4759, 81.2642, 16.4864, 0.46 ) }
    dend_21 { pt3dadd( -33.7853, 86.4765, 16.7651, 0.46 ) }
    dend_21 { pt3dadd( -35.5399, 91.4914, 16.8851, 0.46 ) }
    dend_21 { pt3dadd( -36.7026, 95.8409, 16.8929, 0.46 ) }
    dend_21 { pt3dadd( -37.5542, 100.261, 16.8457, 0.46 ) }
    dend_21 { pt3dadd( -37.8191, 103.18, 16.8061, 0.46 ) }
    dend_21 { pt3dadd( -37.7952, 105.726, 16.7873, 0.46 ) }
    dend_21 { pt3dadd( -37.3047, 108.846, 16.8472, 0.46 ) }
    dend_21 { pt3dadd( -36.6911, 110.612, 16.9953, 0.46 ) }
    dend_21 { pt3dadd( -36.6386, 110.693, 17.0066, 0.46 ) }
    dend_21 { pt3dadd( -35.8252, 111.364, 17.1527, 0.46 ) }
    dend_21 { pt3dadd( -37.2444, 120.753, 18.7289, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 51/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -21.8348, 64.2925, 14.4836, 0.92 ) }
    dend_20 { pt3dadd( -21.7274, 69.2128, 14.1547, 0.92 ) }
    dend_20 { pt3dadd( -21.6095, 72.9075, 13.8025, 0.92 ) }
    dend_20 { pt3dadd( -21.477, 76.5927, 13.4062, 0.92 ) }
    dend_20 { pt3dadd( -21.3328, 81.6838, 12.8032, 0.92 ) }
    dend_20 { pt3dadd( -21.2703, 87.1925, 12.13, 0.92 ) }
    dend_20 { pt3dadd( -21.2606, 92.1843, 11.5255, 0.92 ) }
    dend_20 { pt3dadd( -21.3203, 96.6758, 10.922, 0.92 ) }
    dend_20 { pt3dadd( -21.3216, 96.728, 10.9145, 0.92 ) }
    dend_20 { pt3dadd( -21.4702, 101.034, 10.2374, 0.92 ) }
    dend_20 { pt3dadd( -21.6163, 104.209, 9.69278, 0.92 ) }
    dend_20 { pt3dadd( -21.8082, 109.061, 8.80937, 0.92 ) }
    dend_20 { pt3dadd( -22.0145, 113.984, 7.94898, 0.92 ) }
    dend_20 { pt3dadd( -22.0164, 114.015, 7.94385, 0.92 ) }
    dend_20 { pt3dadd( -22.1685, 117.126, 7.48412, 0.92 ) }
    dend_20 { pt3dadd( -22.2764, 120.398, 7.05554, 0.92 ) }
    dend_20 { pt3dadd( -22.4281, 126.581, 6.35033, 0.92 ) }
    dend_20 { pt3dadd( -22.5276, 130.12, 6.01688, 0.46 ) }
    dend_20 { pt3dadd( -22.6792, 134.632, 5.65012, 0.46 ) }
    dend_20 { pt3dadd( -22.8355, 139.09, 5.32344, 0.46 ) }
    dend_20 { pt3dadd( -23.0361, 143.401, 5.05996, 0.46 ) }
    dend_20 { pt3dadd( -23.3468, 148.295, 4.77227, 0.46 ) }
    dend_20 { pt3dadd( -23.6612, 151.959, 4.55344, 0.46 ) }
    dend_20 { pt3dadd( -24.073, 155.168, 4.27913, 0.46 ) }
    dend_20 { pt3dadd( -24.7898, 159.405, 3.78534, 0.46 ) }
    dend_20 { pt3dadd( -25.5903, 163.089, 3.26307, 0.46 ) }
    dend_20 { pt3dadd( -26.5621, 166.707, 2.67877, 0.46 ) }
    dend_20 { pt3dadd( -27.195, 168.623, 2.3199, 0.46 ) }
    dend_20 { pt3dadd( -28.487, 171.815, 1.64693, 0.46 ) }
    dend_20 { pt3dadd( -28.6151, 172.065, 1.59025, 0.46 ) }
    dend_20 { pt3dadd( -30.6626, 182.435, 1.51605, 0.46 ) }
    dend_20 { pt3dadd( -32.7104, 192.783, 0.842416, 0.46 ) }
    dend_20 { pt3dadd( -32.7319, 203.34, 0.712199, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 30.7811, -171.621, 39.1405, 0.46 ) }
    dend_15 { pt3dadd( 33.6181, -180.41, 40.4916, 0.46 ) }
    dend_15 { pt3dadd( 36.6228, -189.215, 39.7947, 0.46 ) }
    dend_15 { pt3dadd( 37.2838, -198.507, 39.9787, 0.46 ) }
    dend_15 { pt3dadd( 38.9557, -207.637, 40.8497, 0.46 ) }
    dend_15 { pt3dadd( 41.1401, -216.512, 42.7337, 0.46 ) }
    dend_15 { pt3dadd( 41.0275, -225.538, 45.1263, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 91/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 30.7811, -171.621, 39.1405, 0.46 ) }
    dend_14 { pt3dadd( 30.7145, -178.366, 42.2676, 0.46 ) }
    dend_14 { pt3dadd( 30.9796, -184.994, 45.6317, 0.46 ) }
    dend_14 { pt3dadd( 30.5481, -191.594, 49.0468, 0.46 ) }
    dend_14 { pt3dadd( 29.9477, -198.186, 52.4539, 0.46 ) }
    dend_14 { pt3dadd( 30.7491, -204.533, 56.2665, 0.46 ) }
    dend_14 { pt3dadd( 32.2654, -211.28, 58.9648, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 98/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -32.1367, -50.0064, 15.9771, 0.46 ) }
    dend_6 { pt3dadd( -30.0573, -51.2084, 14.8756, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_6 { pt3dadd( -28.7229, -52.0818, 14.1435, 0.46 ) }
    dend_6 { pt3dadd( -27.5303, -52.9349, 13.3888, 0.46 ) }
    dend_6 { pt3dadd( -25.8617, -54.2224, 12.0654, 0.46 ) }
    dend_6 { pt3dadd( -25.8514, -54.2311, 12.0557, 0.46 ) }
    dend_6 { pt3dadd( -24.3276, -55.597, 10.4611, 0.46 ) }
    dend_6 { pt3dadd( -24.3194, -55.6053, 10.4491, 0.46 ) }
    dend_6 { pt3dadd( -23.6681, -56.415, 9.14893, 0.46 ) }
    dend_6 { pt3dadd( -23.1739, -57.1808, 7.76414, 0.46 ) }
    dend_6 { pt3dadd( -22.6953, -58.1851, 5.88522, 0.46 ) }
    dend_6 { pt3dadd( -22.6819, -58.2113, 5.83468, 0.46 ) }
    dend_6 { pt3dadd( -22.1187, -59.2233, 3.72289, 0.46 ) }
    dend_6 { pt3dadd( -22.1146, -59.2305, 3.70834, 0.46 ) }
    dend_6 { pt3dadd( -21.4204, -60.2865, 1.68889, 0.46 ) }
    dend_6 { pt3dadd( -21.4034, -60.3091, 1.64751, 0.46 ) }
    dend_6 { pt3dadd( -20.5314, -61.2204, -0.0894239, 0.46 ) }
    dend_6 { pt3dadd( -20.5235, -61.2274, -0.102413, 0.46 ) }
    dend_6 { pt3dadd( -19.6189, -61.8845, -1.27255, 0.46 ) }
    dend_6 { pt3dadd( -18.381, -62.6455, -2.7212, 0.46 ) }
    dend_6 { pt3dadd( -18.3551, -62.6595, -2.75096, 0.46 ) }
    dend_6 { pt3dadd( -17.1933, -63.3195, -4.31842, 0.46 ) }
    dend_6 { pt3dadd( -17.1853, -63.3241, -4.33242, 0.46 ) }
    dend_6 { pt3dadd( -16.1991, -63.9406, -6.34072, 0.46 ) }
    dend_6 { pt3dadd( -16.1933, -63.9451, -6.35578, 0.46 ) }
    dend_6 { pt3dadd( -15.4541, -64.6141, -8.7361, 0.46 ) }
    dend_6 { pt3dadd( -14.7137, -65.4008, -11.3831, 0.46 ) }
    dend_6 { pt3dadd( -13.9566, -66.3611, -14.5319, 0.46 ) }
    dend_6 { pt3dadd( -13.9526, -66.366, -14.5474, 0.46 ) }
    dend_6 { pt3dadd( -13.1802, -67.2463, -17.0898, 0.46 ) }
    dend_6 { pt3dadd( -13.14, -67.2885, -17.2011, 0.46 ) }
    dend_6 { pt3dadd( -12.1403, -68.2905, -19.5205, 0.46 ) }
    dend_6 { pt3dadd( -12.1335, -68.2974, -19.5342, 0.46 ) }
    dend_6 { pt3dadd( -10.9008, -69.568, -21.7061, 0.46 ) }
    dend_6 { pt3dadd( -9.62217, -70.8812, -23.8815, 0.46 ) }
    dend_6 { pt3dadd( -9.61432, -70.889, -23.894, 0.46 ) }
    dend_6 { pt3dadd( -8.72929, -71.9109, -25.5344, 0.46 ) }
    dend_6 { pt3dadd( -8.72104, -71.9234, -25.5544, 0.46 ) }
    dend_6 { pt3dadd( -8.14677, -73.1431, -27.5336, 0.46 ) }
    dend_6 { pt3dadd( -8.14429, -73.1515, -27.5479, 0.46 ) }
    dend_6 { pt3dadd( -7.79803, -74.7642, -30.3965, 0.46 ) }
    dend_6 { pt3dadd( -7.4448, -76.2121, -33.2178, 0.46 ) }
    dend_6 { pt3dadd( -7.09882, -77.4844, -35.9248, 0.46 ) }
    dend_6 { pt3dadd( -6.7869, -78.5681, -38.3782, 0.46 ) }
    dend_6 { pt3dadd( -6.37909, -79.8132, -41.5902, 0.46 ) }
    dend_6 { pt3dadd( -6.37702, -79.8187, -41.6059, 0.46 ) }
    dend_6 { pt3dadd( -5.89983, -80.9523, -45.209, 0.46 ) }
    dend_6 { pt3dadd( -5.29876, -81.9495, -48.7864, 0.46 ) }
    dend_6 { pt3dadd( -5.29383, -81.9557, -48.8103, 0.46 ) }
    dend_6 { pt3dadd( -4.70483, -82.6055, -51.3196, 0.46 ) }
    dend_6 { pt3dadd( -4.70096, -82.6096, -51.3354, 0.46 ) }
    dend_6 { pt3dadd( -4.08504, -83.356, -53.9918, 0.46 ) }
    dend_6 { pt3dadd( -4.07763, -83.3693, -54.0308, 0.46 ) }
    dend_6 { pt3dadd( -3.6528, -84.1362, -56.2436, 0.46 ) }
    dend_6 { pt3dadd( -3.6236, -84.1973, -56.3967, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -32.1367, -50.0064, 15.9771, 0.46 ) }
    dend_5 { pt3dadd( -33.4114, -52.2371, 16.5095, 0.46 ) }
    dend_5 { pt3dadd( -34.7488, -54.7319, 17.1455, 0.46 ) }
    dend_5 { pt3dadd( -35.9924, -57.2666, 17.8511, 0.46 ) }
    dend_5 { pt3dadd( -36.1609, -57.6699, 17.9573, 0.46 ) }
    dend_5 { pt3dadd( -36.9318, -60.1214, 18.5334, 0.46 ) }
    dend_5 { pt3dadd( -37.0294, -60.5473, 18.6348, 0.46 ) }
    dend_5 { pt3dadd( -37.2653, -62.3462, 19.037, 0.46 ) }
    dend_5 { pt3dadd( -37.4141, -64.1798, 19.4626, 0.46 ) }
    dend_5 { pt3dadd( -37.4497, -67.595, 20.2819, 0.46 ) }
    dend_5 { pt3dadd( -37.3661, -70.9242, 21.059, 0.46 ) }
    dend_5 { pt3dadd( -37.2636, -72.7721, 21.4795, 0.46 ) }
    dend_5 { pt3dadd( -37.2623, -72.8006, 21.4859, 0.46 ) }
    dend_5 { pt3dadd( -37.2013, -75.6662, 22.0705, 0.46 ) }
    dend_5 { pt3dadd( -37.1449, -77.9721, 22.5129, 0.46 ) }
    dend_5 { pt3dadd( -37.145, -77.9912, 22.5166, 0.46 ) }
    dend_5 { pt3dadd( -37.263, -80.9022, 23.0431, 0.46 ) }
    dend_5 { pt3dadd( -37.3753, -84.2958, 23.5868, 0.46 ) }
    dend_5 { pt3dadd( -37.4041, -87.6695, 24.1137, 0.46 ) }
    dend_5 { pt3dadd( -37.3827, -88.8718, 24.2938, 0.46 ) }
    dend_5 { pt3dadd( -37.3416, -92.5287, 24.852, 0.46 ) }
    dend_5 { pt3dadd( -37.3407, -92.5672, 24.8572, 0.46 ) }
    dend_5 { pt3dadd( -37.3122, -95.5009, 25.173, 0.46 ) }
    dend_5 { pt3dadd( -37.3681, -98.4045, 25.4496, 0.46 ) }
    dend_5 { pt3dadd( -37.3696, -98.4334, 25.4523, 0.46 ) }
    dend_5 { pt3dadd( -37.6726, -101.403, 25.7462, 0.46 ) }
    dend_5 { pt3dadd( -38.1143, -104.862, 26.093, 0.46 ) }
    dend_5 { pt3dadd( -38.6724, -108.627, 26.542, 0.46 ) }
    dend_5 { pt3dadd( -39.0903, -111.029, 26.8861, 0.46 ) }
    dend_5 { pt3dadd( -39.9152, -115.535, 27.6196, 0.46 ) }
    dend_5 { pt3dadd( -40.8265, -120.526, 28.6237, 0.46 ) }
    dend_5 { pt3dadd( -40.8301, -120.544, 28.6279, 0.46 ) }
    dend_5 { pt3dadd( -41.7457, -125.031, 29.8638, 0.46 ) }
    dend_5 { pt3dadd( -41.9071, -125.927, 30.1509, 0.46 ) }
    dend_5 { pt3dadd( -42.1025, -127.095, 30.5732, 0.46 ) }
    dend_5 { pt3dadd( -42.3755, -128.908, 31.4054, 0.46 ) }
    dend_5 { pt3dadd( -42.7513, -138.235, 34.1217, 0.46 ) }
    dend_5 { pt3dadd( -43.7095, -147.777, 35.6681, 0.46 ) }
    dend_5 { pt3dadd( -43.0748, -157.383, 36.9148, 0.46 ) }
    dend_5 { pt3dadd( -41.101, -166.679, 38.9489, 0.46 ) }
    dend_5 { pt3dadd( -38.8835, -175.505, 42.4179, 0.46 ) }
    dend_5 { pt3dadd( -35.5403, -183.557, 46.8305, 0.46 ) }
    dend_5 { pt3dadd( -30.6225, -191.362, 50.0783, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 75.546, -7.43978, -43.8553, 0.46 ) }
    dend_34 { pt3dadd( 76.637, -9.46542, -46.511, 0.46 ) }
    dend_34 { pt3dadd( 77.8648, -11.6707, -49.5244, 0.46 ) }
    dend_34 { pt3dadd( 77.8888, -11.7015, -49.5767, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( 79.2996, -13.2861, -52.5346, 0.46 ) }
    dend_34 { pt3dadd( 79.3249, -13.3085, -52.5773, 0.46 ) }
    dend_34 { pt3dadd( 81.8177, -15.2785, -56.3908, 0.46 ) }
    dend_34 { pt3dadd( 81.8622, -15.3026, -56.4478, 0.46 ) }
    dend_34 { pt3dadd( 85.4583, -16.7705, -60.1717, 0.46 ) }
    dend_34 { pt3dadd( 85.4827, -16.7778, -60.1921, 0.46 ) }
    dend_34 { pt3dadd( 89.527, -17.322, -62.3334, 0.46 ) }
    dend_34 { pt3dadd( 89.6346, -17.3089, -62.3226, 0.46 ) }
    dend_34 { pt3dadd( 92.681, -16.2495, -60.3104, 0.46 ) }
    dend_34 { pt3dadd( 92.7971, -16.195, -60.1923, 0.46 ) }
    dend_34 { pt3dadd( 95.0644, -14.7814, -56.8679, 0.46 ) }
    dend_34 { pt3dadd( 95.0886, -14.7616, -56.8232, 0.46 ) }
    dend_34 { pt3dadd( 96.4512, -12.9155, -52.8961, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 75.546, -7.43978, -43.8553, 0.46 ) }
    dend_33 { pt3dadd( 78.4914, -8.40226, -44.0287, 0.46 ) }
    dend_33 { pt3dadd( 83.2077, -9.75047, -44.1983, 0.46 ) }
    dend_33 { pt3dadd( 86.7518, -10.7085, -44.297, 0.46 ) }
    dend_33 { pt3dadd( 91.3883, -11.8901, -44.4607, 0.46 ) }
    dend_33 { pt3dadd( 96.7603, -13.2424, -44.7801, 0.46 ) }
    dend_33 { pt3dadd( 101.355, -14.399, -45.0534, 0.46 ) }
    dend_33 { pt3dadd( 106.561, -15.6567, -45.3535, 0.46 ) }
    dend_33 { pt3dadd( 106.616, -15.6697, -45.3563, 0.46 ) }
    dend_33 { pt3dadd( 111.086, -16.6198, -45.616, 0.46 ) }
    dend_33 { pt3dadd( 113.973, -17.1283, -45.8584, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_28, dend_17, dend_10, dend_0, dend_39, dend_30, dend_23, dend_18, dend_16, dend_11, dend_7, dend_2, dend_1, dend_43, dend_40, dend_36, dend_31, dend_25, dend_24, dend_22, dend_19, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_27, dend_26, dend_21, dend_20, dend_15, dend_14, dend_6, dend_5, dend_34, dend_33]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_7 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_43 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_36 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_24 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_13 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_8 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_37 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_30 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_10 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_18 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_4 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_19 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_27 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_38 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 5
    dend_23 nseg = 3
    dend_16 nseg = 9
    dend_7 nseg = 9
    dend_1 nseg = 15
    dend_43 nseg = 3
    dend_36 nseg = 7
    dend_25 nseg = 5
    dend_24 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 7
    dend_12 nseg = 11
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_42 nseg = 5
    dend_41 nseg = 3
    dend_37 nseg = 3
    dend_35 nseg = 9
    dend_32 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 7
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_LBC_1cf329956f_0_0


