// Cell: Cell_482657381
/*
{
  "id" : "Cell_482657381",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "362.577, 458.63, 35.28, 10.4378", "367.796, 458.63, 35.28, 10.4378", "373.015, 458.63, 35.28, 10.4378" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "367.796, 458.63, 35.28, 1.0", "373.637, 472.446, 35.28, 1.0", "379.479, 486.262, 35.28, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "364.206, 460.818, 35.819, 0.2288", "363.23, 461.413, 36.0674, 0.3566", "362.229, 461.967, 36.1463, 0.4152", "361.4, 462.711, 36.3194, 0.5908", "360.545, 463.471, 36.4778, 0.5918", "359.582, 464.086, 36.6083, 0.7962", "358.559, 464.6, 36.7125, 0.6496", "357.561, 465.158, 36.7965, 0.6412", "356.553, 465.691, 36.8869, 0.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "363.718, 459.548, 32.9798, 0.2288", "362.61, 459.363, 32.4884, 0.471", "361.549, 459.774, 32.3028, 0.5668", "360.612, 460.429, 32.1065, 0.4788", "359.74, 461.169, 31.8878, 0.4624", "358.869, 461.9, 31.6151, 0.4042", "358.014, 462.524, 31.2012, 0.433", "357.264, 463.17, 30.6491, 0.5082", "356.318, 463.809, 30.1885, 0.7704", "355.354, 464.421, 29.8665, 0.8904", "354.649, 465.321, 29.6388, 0.8312", "354.471, 466.451, 29.4832, 0.7142", "354.069, 467.522, 29.3745, 0.5342", "353.016, 467.965, 29.2732, 0.4778" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "368.104, 454.17, 35.8173, 0.2288", "368.136, 453.037, 36.2804, 0.2766", "367.87, 452.002, 36.5397, 0.2784", "367.337, 451.017, 36.7786, 0.2816", "366.955, 449.951, 36.9326, 0.2874", "367.136, 448.851, 37.0608, 0.2994", "367.431, 447.766, 37.2316, 0.3152", "367.529, 446.658, 37.2887, 0.3756", "368.139, 445.712, 37.333, 0.3378", "368.747, 444.746, 37.4472, 0.3074", "369.528, 443.911, 37.6132, 0.2882", "370.447, 443.229, 37.8258, 0.2994", "371.54, 442.9, 38.0876, 0.3228", "372.409, 443.53, 38.5392, 0.3536", "373.365, 443.594, 39.2087, 0.4722" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "372.28, 459.618, 34.5299, 0.2288", "373.331, 460.071, 34.3336, 0.3876", "374.448, 460.307, 34.2462, 0.36", "375.441, 460.872, 34.1502, 0.3498", "376.234, 461.695, 34.0334, 0.361", "377.154, 462.375, 33.9119, 0.4632", "378.236, 462.671, 33.7089, 0.4858", "379.33, 462.948, 33.4678, 0.6526", "380.431, 463.249, 33.2506, 0.5832", "381.563, 463.253, 33.017, 0.4638", "382.697, 463.405, 32.8395, 0.4246" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "367.111, 454.016, 34.228, 0.3984", "366.476, 453.072, 33.8503, 0.5212", "365.776, 452.173, 33.5549, 0.6496", "365.165, 451.206, 33.3712, 0.683", "364.668, 450.202, 33.3796, 0.5932", "364.234, 449.315, 33.656, 0.4784", "363.889, 448.229, 33.952, 0.4724" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "379.479, 486.262, 35.28, 1.0", "385.32, 500.078, 35.28, 1.0", "391.161, 513.894, 35.28, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "356.553, 465.691, 36.8869, 0.72", "356.673, 465.941, 36.7368, 0.2288", "356.856, 467.033, 37.2274, 0.425", "356.975, 468.121, 37.4968, 0.425", "356.914, 469.241, 37.8106, 0.4904", "357.027, 470.341, 38.0215, 0.5234", "357.73, 471.199, 38.2889, 0.5558", "358.54, 471.952, 38.6635, 0.5266", "359.261, 472.831, 39.053, 0.6762", "359.845, 473.8, 39.4666, 0.6514", "360.611, 474.433, 40.0509, 0.4714", "361.424, 475.104, 40.7165, 0.3292", "362.203, 475.918, 41.1863, 0.2816" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "356.553, 465.691, 36.8869, 0.72", "355.544, 465.953, 36.9844, 0.6354", "354.42, 466.161, 37.0801, 0.6842", "353.329, 466.455, 37.0866, 0.6926", "352.241, 466.792, 37.0524, 0.6472", "351.264, 467.385, 37.044, 0.6314", "350.404, 468.127, 37.0787, 0.4988", "349.424, 468.713, 37.123, 0.5252", "348.371, 469.147, 37.1776, 0.397" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "353.016, 467.965, 29.2732, 0.4778", "352.384, 468.176, 29.1298, 0.6284", "351.407, 468.704, 28.894, 0.5838", "350.94, 469.715, 28.5986, 0.4726", "351.054, 470.849, 28.2918, 0.4046", "351.155, 471.972, 27.9865, 0.522", "350.618, 472.965, 27.6607, 0.4748", "349.928, 473.864, 27.3446, 0.5276", "349.164, 474.697, 27.0399, 0.4016", "348.819, 475.764, 26.7354, 0.341", "349.237, 476.827, 26.5068, 0.3032", "349.711, 477.867, 26.3595, 0.3298", "349.856, 479.002, 26.2665, 0.3664", "349.523, 480.096, 26.2032, 0.4958", "349.246, 481.193, 26.1174, 0.4378", "348.712, 482.201, 26.0422, 0.4036", "348.689, 483.34, 26.0406, 0.4408" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "353.016, 467.965, 29.2732, 0.4778", "352.232, 468.261, 29.4123, 1.144", "351.239, 468.823, 29.9877, 0.6936", "350.199, 469.206, 30.256, 0.5162", "349.277, 469.559, 30.7272, 0.5758", "348.239, 470.01, 31.1699, 0.6308", "347.102, 470.043, 31.5554, 0.5434", "345.997, 469.96, 31.9701, 0.3858", "344.868, 470.127, 32.3056, 0.302", "343.779, 470.437, 32.6164, 0.2782", "342.729, 470.836, 32.9302, 0.2814", "341.685, 471.287, 33.2181, 0.287", "340.708, 471.826, 33.5401, 0.2988", "339.63, 472.183, 33.8195, 0.3142", "338.513, 472.414, 34.0253, 0.3734", "337.411, 472.686, 34.2115, 0.3338", "336.286, 472.761, 34.4142, 0.3", "335.245, 473.123, 34.6542, 0.2746", "334.263, 473.695, 34.8477, 0.2746", "333.225, 474.17, 34.9782, 0.2746", "332.15, 474.456, 35.0977, 0.2746", "331.027, 474.537, 35.208, 0.2746", "329.93, 474.849, 35.3116, 0.2746", "328.86, 475.223, 35.4038, 0.2746", "327.826, 475.708, 35.4749, 0.2746", "326.732, 476.029, 35.5286, 0.2746", "325.603, 476.212, 35.5634, 0.2746", "324.516, 476.523, 35.5849, 0.2746", "323.504, 477.055, 35.6, 0.2746", "322.509, 477.619, 35.6163, 0.2746", "321.505, 478.168, 35.6387, 0.2748", "320.445, 478.579, 35.6698, 0.2748", "319.366, 478.944, 35.7129, 0.2752", "318.347, 479.462, 35.7748, 0.2758", "317.31, 479.937, 35.8627, 0.2768", "316.203, 480.192, 35.9811, 0.2786", "315.062, 480.251, 36.1357, 0.282", "313.932, 480.251, 36.3675, 0.2882", "312.868, 480.251, 36.7556, 0.2996", "311.801, 480.251, 37.2344, 0.323", "310.658, 480.251, 37.6726, 0.354", "309.514, 480.251, 38.0596, 0.4728", "308.381, 480.27, 38.4348, 0.3942", "307.324, 480.328, 38.8884, 0.3274", "306.268, 480.366, 39.3873, 0.2782", "305.14, 480.366, 39.8336, 0.2814", "303.999, 480.366, 40.1906, 0.287", "302.856, 480.366, 40.4555, 0.2988", "301.725, 480.241, 40.6342, 0.3142", "300.676, 479.82, 40.7266, 0.3734", "299.658, 479.301, 40.7562, 0.3338", "298.591, 478.894, 40.7506, 0.3", "297.505, 478.535, 40.7193, 0.2746", "296.434, 478.134, 40.663, 0.2746", "295.4, 477.649, 40.5838, 0.2746", "294.395, 477.104, 40.4726, 0.2746", "293.364, 476.676, 40.2816, 0.2746", "292.293, 476.367, 40.014, 0.2746", "291.284, 475.876, 39.7482, 0.2746", "290.366, 475.205, 39.5097, 0.2746", "289.402, 474.601, 39.3128, 0.2746", "288.405, 474.042, 39.1826, 0.2746", "287.531, 473.319, 39.1342, 0.2746", "286.82, 472.43, 39.151, 0.2746", "286.076, 471.565, 39.195, 0.2746", "285.229, 470.797, 39.2501, 0.2746", "284.365, 470.048, 39.3106, 0.2746", "283.361, 469.534, 39.3736, 0.2746", "282.304, 469.102, 39.4537, 0.2746", "281.241, 468.719, 39.5872, 0.2746", "280.122, 468.535, 39.7323, 0.2744", "279.229, 467.887, 39.8496, 0.2744", "278.3, 467.222, 39.933, 0.2742", "277.732, 466.244, 39.9854, 0.274", "277.166, 465.25, 40.0092, 0.2736", "276.278, 464.533, 40.0103, 0.2728", "275.329, 463.894, 39.9983, 0.2712", "274.438, 463.178, 39.9818, 0.2684", "273.739, 462.272, 39.9619, 0.2626", "273.338, 461.201, 39.9403, 0.2542", "272.753, 460.224, 39.8826, 0.2288", "271.929, 459.43, 39.76, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "373.365, 443.594, 39.2087, 0.4722", "373.547, 444.085, 39.8451, 0.2288", "374.142, 445.031, 39.8838, 0.374", "375.083, 445.665, 39.9384, 0.3348", "376.045, 446.262, 39.9988, 0.3016", "376.703, 447.178, 40.0674, 0.2776", "377.153, 448.192, 40.1498, 0.2804", "378.037, 448.911, 40.2654, 0.2854", "378.893, 449.64, 40.4359, 0.2944", "379.501, 450.601, 40.609, 0.3124", "380.143, 451.501, 40.7873, 0.339", "381.111, 452.025, 41.0292, 0.4218", "382.206, 452.324, 41.2628, 0.413", "383.293, 452.673, 41.4422, 0.4978", "384.232, 453.273, 41.5736, 0.3932", "385.094, 453.993, 41.6718, 0.3254", "386.138, 454.457, 41.7474, 0.2746", "387.221, 454.823, 41.8132, 0.2746", "388.206, 455.353, 41.895, 0.2746", "389.164, 455.956, 42.0073, 0.2746", "390.214, 456.41, 42.1576, 0.2746", "391.144, 457.041, 42.3573, 0.2746", "391.766, 457.922, 42.6866, 0.2746", "392.184, 458.893, 43.183, 0.2744", "392.695, 459.864, 43.689, 0.2744", "393.395, 460.372, 44.2896, 0.2742", "394.368, 460.647, 44.9392, 0.274", "395.17, 461.439, 45.4348, 0.2736", "395.705, 462.357, 45.9343, 0.2728", "396.214, 463.307, 46.3974, 0.2712", "396.878, 464.233, 46.6701, 0.2684", "397.581, 465.133, 46.788, 0.2626", "398.5, 465.812, 46.807, 0.2542", "399.594, 465.57, 46.7113, 0.2288", "400.699, 465.542, 46.1146, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "373.365, 443.594, 39.2087, 0.4722", "373.935, 442.698, 40.026, 0.3932", "374.739, 441.925, 40.7434, 0.3254", "375.466, 441.054, 41.3098, 0.2746", "375.871, 440.022, 41.8088, 0.2746", "375.974, 438.91, 42.2772, 0.2748", "376.206, 437.849, 42.7487, 0.2748", "376.862, 437.013, 43.2474, 0.2752", "377.623, 436.203, 43.7539, 0.2756", "378.386, 435.362, 44.1955, 0.2766", "379.119, 434.487, 44.5458, 0.2782", "379.817, 433.649, 44.9075, 0.2814", "380.645, 432.922, 45.2586, 0.287", "381.545, 432.223, 45.5081, 0.2988", "382.246, 431.35, 45.6529, 0.3142", "382.77, 430.359, 45.8122, 0.3734", "383.304, 429.365, 45.9981, 0.334", "384.04, 428.515, 46.1835, 0.3", "384.862, 427.732, 46.3142, 0.2746", "385.464, 426.781, 46.4162, 0.2748", "385.852, 425.72, 46.5562, 0.275", "386.312, 424.681, 46.6936, 0.2754", "386.661, 423.608, 46.755, 0.2762", "386.945, 422.517, 46.8415, 0.2774", "387.42, 421.532, 47.0308, 0.2798", "387.852, 420.489, 47.1355, 0.2844", "388.414, 419.498, 47.1677, 0.2928", "388.939, 418.483, 47.192, 0.3082", "389.384, 417.463, 47.2856, 0.3378", "389.493, 416.335, 47.2968, 0.3882", "389.68, 415.255, 47.1607, 0.5024", "390.101, 414.195, 47.028, 0.6136", "389.946, 413.088, 46.9913, 0.6218", "389.914, 411.958, 46.8927, 0.4544", "390.629, 411.068, 46.8048, 0.3446" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "382.697, 463.405, 32.8395, 0.4246", "382.814, 463.474, 32.7365, 0.3838", "383.789, 463.95, 32.7684, 0.382", "384.816, 464.321, 32.6894, 0.4776", "385.843, 464.739, 32.5041, 0.403", "386.815, 465.327, 32.3196, 0.3434", "387.854, 465.798, 32.1261, 0.309", "388.932, 466.178, 31.9346, 0.3334", "389.914, 466.757, 31.7372, 0.4088", "390.816, 467.458, 31.5781, 0.4016", "391.804, 468.012, 31.3695, 0.4146", "392.806, 468.463, 31.0349, 0.5402", "393.864, 468.819, 30.6309, 0.5084", "394.86, 469.345, 30.2002, 0.592", "395.736, 470.067, 29.7931, 0.511", "396.381, 470.947, 29.3471, 0.5908", "396.891, 471.938, 28.9302, 0.539", "397.792, 472.623, 28.6087, 0.4972", "398.856, 473.038, 28.4026, 0.3856", "399.861, 473.583, 28.2985, 0.3434", "400.707, 474.352, 28.2666, 0.3808", "401.733, 474.816, 28.3458, 0.3472", "402.833, 475.127, 28.4309, 0.326", "403.819, 475.705, 28.4939, 0.3174", "404.52, 476.608, 28.5219, 0.3794", "404.848, 477.699, 28.4992, 0.345", "405.073, 478.815, 28.4393, 0.3206", "405.641, 479.809, 28.4012, 0.3136", "406.264, 480.768, 28.4049, 0.3428", "406.835, 481.759, 28.4435, 0.4214", "407.258, 482.811, 28.4796, 0.4482", "407.803, 483.77, 28.6829, 0.389", "408.25, 484.768, 29.0186, 0.35" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "382.697, 463.405, 32.8395, 0.4246", "383.678, 463.158, 32.3126, 0.2288", "384.735, 462.734, 32.0426, 0.34", "385.843, 462.473, 31.9444, 0.3864", "386.982, 462.465, 31.8352, 0.5278", "388.112, 462.42, 31.6576, 0.5216", "389.155, 461.994, 31.4398, 0.439", "390.229, 461.684, 31.3068, 0.4036", "391.322, 461.424, 31.1013, 0.4528", "392.179, 460.891, 30.7126, 0.6714", "393.154, 460.389, 30.2856, 0.689", "394.214, 460.048, 30.0619, 0.543" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "363.889, 448.229, 33.952, 0.4724", "363.658, 447.079, 34.1958, 0.9152", "363.641, 445.998, 34.7245, 0.727", "363.735, 444.921, 35.014, 0.4706", "364.057, 443.877, 35.189, 0.3274", "364.625, 442.928, 35.2145, 0.2782", "365.176, 441.942, 35.1694, 0.2814", "365.723, 440.94, 35.1352, 0.2872", "366.049, 439.893, 35.2117, 0.2988", "366.471, 438.843, 35.3136, 0.3144", "367.263, 438.033, 35.4298, 0.374", "368.132, 437.293, 35.5555, 0.335", "369.043, 436.627, 35.6975, 0.302", "370.086, 436.304, 35.8686, 0.2784", "370.647, 435.562, 35.7333, 0.2816", "371.72, 435.258, 35.5418, 0.2874", "372.74, 434.763, 35.3783, 0.2994", "373.454, 433.896, 35.1162, 0.3152", "374.185, 433.033, 34.7906, 0.3756", "374.874, 432.141, 34.4215, 0.3378", "375.774, 431.528, 34.0046, 0.3074", "376.718, 430.907, 33.6014, 0.288", "377.767, 430.567, 33.1831, 0.3006", "378.905, 430.659, 32.8952, 0.3176", "380.031, 430.717, 32.7449, 0.3798", "381.133, 430.525, 32.6956, 0.3458", "382.203, 430.396, 32.5374, 0.322", "383.156, 430.938, 32.2725, 0.3152", "384.113, 431.358, 31.9004, 0.3514", "385.207, 431.442, 31.6406, 0.4088", "386.28, 431.05, 31.4252, 0.5638", "387.366, 430.707, 31.2519, 0.6152", "388.475, 430.443, 31.0705, 0.4836", "389.551, 430.119, 30.8227, 0.4244", "390.596, 429.721, 30.4954, 0.334", "391.611, 429.247, 30.0936, 0.3002", "392.601, 428.693, 29.6976, 0.275", "393.666, 428.403, 29.3434, 0.2754", "394.69, 428.767, 28.952, 0.2762", "395.595, 429.38, 28.4875, 0.2774", "396.649, 429.657, 27.9705, 0.28", "397.767, 429.643, 27.4206, 0.2846", "398.342, 430.165, 26.745, 0.2928", "397.72, 430.973, 26.0793, 0.3096", "397.583, 432.028, 25.388, 0.334", "398.145, 432.863, 24.5986, 0.4124", "399.152, 433.101, 23.7712, 0.3954", "399.85, 433.881, 22.9475, 0.466", "400.733, 434.435, 22.1529, 0.3304", "401.843, 434.642, 20.8079, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "363.889, 448.229, 33.952, 0.4724", "363.654, 447.008, 34.1958, 0.6", "363.511, 445.879, 34.2922, 0.8502", "363.027, 444.862, 34.2236, 0.7906", "362.461, 443.877, 34.0463, 0.7042", "362.102, 442.815, 33.7702, 0.884", "361.559, 441.812, 33.5135, 0.9396", "361.243, 440.726, 33.2626, 0.7904", "360.857, 439.65, 33.0907, 0.8232", "360.472, 438.573, 33.0022, 0.9832", "360.048, 437.513, 33.0081, 1.0276", "359.458, 436.534, 33.0851, 0.732", "358.813, 435.591, 33.1901, 0.646", "358.158, 434.671, 33.3668, 0.531" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "362.203, 475.918, 41.1863, 0.2816", "362.55, 475.39, 41.4252, 0.2288", "363.174, 474.556, 42.6292, 0.2744", "363.949, 473.714, 43.0413, 0.2742", "364.534, 472.949, 43.6551, 0.274", "365.057, 472.21, 44.4741, 0.2736", "365.767, 471.331, 45.222, 0.2728", "366.467, 470.431, 45.9029, 0.2712", "367.148, 469.519, 46.5122, 0.2684", "367.768, 468.627, 47.145, 0.2626", "368.212, 467.73, 47.8257, 0.2542", "368.43, 466.769, 48.552, 0.2288", "368.76, 465.71, 49.84, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "362.203, 475.918, 41.1863, 0.2816", "362.097, 476.727, 41.5778, 0.2874", "361.87, 477.833, 41.9538, 0.2994", "361.471, 478.842, 42.4116, 0.3152", "361.297, 479.841, 42.9573, 0.3754", "361.597, 480.88, 43.5526, 0.3376", "362.297, 481.648, 44.1963, 0.3068", "363.329, 482.059, 44.7975, 0.287", "364.357, 482.501, 45.304, 0.2988", "364.894, 483.405, 45.7069, 0.3142", "364.883, 484.517, 46.0586, 0.3734", "364.966, 485.63, 46.3677, 0.3338", "365.37, 486.685, 46.6388, 0.3", "365.775, 487.727, 46.7992, 0.2746", "366.038, 488.806, 46.842, 0.2746", "366.254, 489.879, 46.9647, 0.2746", "366.518, 490.892, 47.2483, 0.2746", "366.914, 491.903, 47.6064, 0.2746", "367.523, 492.853, 47.9004, 0.2746", "367.178, 493.778, 48.1216, 0.2746", "366.376, 494.59, 48.2714, 0.2746", "365.987, 495.643, 48.3353, 0.2746", "366.419, 496.654, 48.377, 0.2746", "367.216, 497.471, 48.3952, 0.2744", "368.068, 498.234, 48.41, 0.2744", "368.885, 499.034, 48.4235, 0.2742", "369.535, 499.975, 48.4336, 0.274", "370.211, 500.898, 48.4397, 0.2736", "370.546, 501.988, 48.44, 0.2728", "371.051, 503.014, 48.44, 0.2712", "371.214, 504.146, 48.44, 0.2684", "371.228, 505.29, 48.44, 0.2626", "371.613, 506.365, 48.44, 0.2542", "372.118, 507.393, 48.44, 0.2288", "372.372, 508.508, 48.44, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "362.203, 475.918, 41.1863, 0.2816", "362.423, 475.936, 41.3045, 0.2288", "363.545, 475.851, 41.6489, 0.2746", "364.681, 475.896, 41.7561, 0.2746", "365.733, 476.341, 41.8726, 0.2746", "366.86, 476.53, 42.0073, 0.2746", "367.991, 476.608, 42.1896, 0.2746", "368.967, 477.16, 42.4346, 0.2746", "369.607, 478.085, 42.7448, 0.2746", "370.066, 479.073, 43.1099, 0.2746", "370.902, 479.731, 43.5453, 0.2746", "371.378, 480.725, 44.0266, 0.2746", "372.111, 481.435, 44.5063, 0.2746", "373.177, 481.592, 44.9168, 0.2746", "374.228, 481.393, 45.225, 0.2746", "374.786, 480.833, 45.6834, 0.2746", "375.373, 480.09, 46.1177, 0.2746", "376.395, 479.661, 46.3957, 0.2746", "377.515, 479.549, 46.6474, 0.2746", "378.631, 479.664, 46.9255, 0.2746", "379.731, 479.952, 47.1699, 0.2746", "380.808, 480.338, 47.3617, 0.2746", "381.92, 480.593, 47.5462, 0.2744", "383.036, 480.84, 47.7436, 0.2744", "383.997, 481.432, 47.9783, 0.2742", "384.943, 481.974, 48.33, 0.274", "385.915, 482.437, 48.7892, 0.2736", "386.86, 483.021, 49.2713, 0.2728", "387.513, 483.94, 49.6919, 0.2712", "387.544, 485.018, 50.1194, 0.2684", "387.919, 486.083, 50.377, 0.2626", "388.681, 486.921, 50.4717, 0.2542", "389.618, 487.564, 50.5506, 0.2288", "389.943, 488.659, 50.6136, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "348.371, 469.147, 37.1776, 0.397", "347.672, 469.09, 37.2322, 0.3324", "347.243, 469.623, 37.0958, 0.2878", "347.941, 470.374, 36.9342, 0.2988", "347.785, 471.441, 36.806, 0.3206" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "348.371, 469.147, 37.1776, 0.397", "347.934, 469.007, 37.9957, 0.4576", "347.179, 468.233, 38.7478, 0.385", "346.44, 467.367, 39.0183, 0.3424", "345.344, 467.154, 39.3089, 0.3786", "344.353, 467.525, 39.7205, 0.3434" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "348.689, 483.34, 26.0406, 0.4408", "348.311, 484.085, 25.3782, 0.9152", "347.821, 485.091, 25.0181, 0.5338", "347.527, 486.163, 24.9178, 0.3602", "347.628, 487.284, 24.8273, 0.2918", "347.672, 488.414, 24.6754, 0.3076", "347.471, 489.522, 24.4738, 0.3302", "347.151, 490.618, 24.2712, 0.4046", "346.877, 491.727, 24.082, 0.3862", "346.848, 492.863, 23.8868, 0.4236", "347.022, 493.988, 23.6907, 0.3744", "346.87, 495.088, 23.4605, 0.4006", "346.198, 495.986, 23.2437, 0.3372", "345.65, 496.979, 23.0358, 0.306", "345.288, 498.062, 22.8777, 0.286", "344.835, 499.108, 22.8036, 0.2954", "344.37, 500.149, 22.7955, 0.3142", "344.0, 501.217, 22.8549, 0.3438", "343.295, 502.068, 22.8007, 0.4232", "342.6, 502.969, 22.7041, 0.4514", "342.132, 504.012, 22.6069, 0.395", "341.474, 504.948, 22.5089, 0.3618", "340.751, 505.833, 22.4046, 0.4096", "339.84, 506.512, 22.351, 0.4266", "338.719, 506.735, 22.2889, 0.3474", "337.614, 506.94, 22.1396, 0.2796", "336.578, 507.367, 21.919, 0.2288", "335.479, 507.656, 21.3702, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "348.689, 483.34, 26.0406, 0.4408", "348.938, 484.266, 26.1041, 0.4792", "349.105, 485.384, 26.2283, 0.4706", "349.368, 486.489, 26.3752, 0.3834", "349.762, 487.561, 26.5217, 0.3396", "350.221, 488.608, 26.63, 0.3734", "350.358, 489.719, 26.6655, 0.3338", "350.454, 490.848, 26.7044, 0.3", "350.97, 491.834, 26.7439, 0.2746", "351.502, 492.843, 26.7583, 0.2746", "351.746, 493.947, 26.7286, 0.2746", "351.993, 495.059, 26.6653, 0.2746", "352.147, 496.189, 26.5994, 0.2746", "352.183, 497.33, 26.5259, 0.2746", "352.185, 498.473, 26.4639, 0.2746", "352.198, 499.604, 26.4847, 0.2746", "352.297, 500.732, 26.5746, 0.2746", "352.522, 501.85, 26.6615, 0.2746", "352.583, 502.98, 26.6915, 0.2746", "352.419, 504.106, 26.7102, 0.2748", "352.303, 505.242, 26.7494, 0.2748", "352.381, 506.38, 26.7922, 0.2752", "352.543, 507.51, 26.8577, 0.2756", "352.64, 508.648, 26.956, 0.2766", "352.765, 509.784, 27.0732, 0.2784", "353.053, 510.884, 27.2116, 0.2816", "353.279, 512.001, 27.3593, 0.2876", "353.332, 513.14, 27.485, 0.2988", "353.545, 514.26, 27.5872, 0.3192", "354.177, 515.198, 27.6752, 0.359", "354.625, 516.244, 27.7605, 0.4224", "354.614, 517.381, 27.8511, 0.5902", "354.558, 518.521, 27.9664, 0.6576", "354.68, 519.643, 28.1498, 0.594", "354.982, 520.726, 28.3864, 0.4764", "355.234, 521.832, 28.5401, 0.485", "355.466, 522.951, 28.6768, 0.5444", "355.737, 524.009, 28.8949, 0.4434", "355.865, 525.135, 29.0881, 0.366", "355.865, 526.279, 29.1917, 0.3756", "355.896, 527.422, 29.2298, 0.3378", "356.204, 528.513, 29.1833, 0.3074", "356.522, 529.352, 28.8756, 0.288", "356.176, 530.384, 28.5362, 0.3006", "355.886, 531.422, 28.4444, 0.3174", "355.704, 532.452, 28.5726, 0.3796", "355.537, 533.575, 28.7053, 0.3452", "355.698, 534.688, 28.8207, 0.321", "356.156, 535.729, 28.989, 0.313", "356.545, 536.785, 29.1785, 0.349", "356.82, 537.889, 29.2914, 0.397", "357.2, 538.949, 29.3098, 0.578", "357.762, 539.942, 29.3474, 0.4652", "358.333, 540.924, 29.4322, 0.3754", "358.828, 541.949, 29.5282, 0.3148", "359.218, 543.024, 29.6125, 0.3746", "359.572, 544.112, 29.6873, 0.336", "359.963, 545.187, 29.7556, 0.304", "360.432, 546.224, 29.8038, 0.2818", "361.074, 547.165, 29.8144, 0.2882", "361.672, 548.094, 29.8374, 0.2994", "361.943, 549.164, 29.976, 0.3228", "362.246, 550.235, 30.1647, 0.3536", "362.634, 551.31, 30.3145, 0.4722", "363.118, 552.335, 30.3873, 0.3932", "363.8, 553.227, 30.3436, 0.3254", "364.607, 554.012, 30.21, 0.2746", "365.532, 554.657, 30.0863, 0.2746", "366.279, 555.387, 30.0121, 0.2746", "366.642, 556.461, 29.9138, 0.2746", "367.053, 557.515, 29.7878, 0.2748", "367.478, 558.577, 29.6848, 0.275", "367.933, 559.62, 29.5641, 0.2752", "368.438, 560.632, 29.3894, 0.2758", "369.009, 561.592, 29.2561, 0.277", "369.598, 562.536, 29.1827, 0.2792", "370.115, 563.533, 29.0475, 0.283", "370.702, 564.493, 28.8926, 0.2904", "371.382, 565.413, 28.7804, 0.3034", "371.909, 566.412, 28.7025, 0.33", "372.251, 567.504, 28.6465, 0.3668", "372.621, 568.585, 28.6121, 0.4976", "373.038, 569.651, 28.6026, 0.4348", "373.514, 570.689, 28.6023, 0.4282", "374.08, 571.682, 28.6023, 0.3412", "374.728, 572.623, 28.6014, 0.3136", "375.462, 573.5, 28.5995, 0.2994", "376.185, 574.384, 28.5981, 0.3228", "376.82, 575.335, 28.6031, 0.3536", "377.417, 576.306, 28.6031, 0.4722", "378.013, 577.266, 28.5757, 0.3932", "378.682, 578.17, 28.5494, 0.3254", "379.509, 578.942, 28.6062, 0.2744", "379.495, 579.487, 28.877, 0.2744", "378.983, 580.257, 29.3348, 0.2742", "379.166, 581.229, 29.8847, 0.274", "379.524, 582.272, 30.3596, 0.2736", "379.821, 583.377, 30.6474, 0.2728", "380.205, 584.394, 30.7986, 0.2712", "380.001, 585.425, 30.7826, 0.2684", "379.561, 586.436, 30.4724, 0.2626", "379.806, 587.195, 29.7856, 0.2542", "380.065, 587.795, 28.8053, 0.2288", "379.681, 588.631, 26.3152, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "390.629, 411.068, 46.8048, 0.3446", "391.217, 410.603, 47.9497, 0.2288", "392.035, 409.861, 47.7196, 0.4422", "392.782, 409.02, 47.5944, 0.6514", "393.394, 408.086, 47.3911, 0.6524", "394.036, 407.174, 47.1419, 0.4734", "394.864, 406.412, 46.9132, 0.3328", "395.703, 405.68, 46.8258, 0.2884", "396.665, 405.119, 46.8412, 0.2996", "397.348, 404.274, 46.8591, 0.3232", "397.789, 403.222, 46.898, 0.3542", "398.149, 402.201, 47.0635, 0.4734", "398.72, 401.242, 47.1593, 0.3954", "399.474, 400.394, 47.1747, 0.3294", "400.351, 399.664, 47.1831, 0.2818", "401.333, 399.107, 47.2354, 0.2882", "402.314, 398.523, 47.2629, 0.2994", "403.33, 398.007, 47.22, 0.3228", "404.364, 397.518, 47.1764, 0.3534", "405.352, 396.983, 47.0526, 0.4718", "406.193, 396.245, 46.858, 0.3922", "406.876, 395.329, 46.7071, 0.3236", "407.748, 394.589, 46.5979, 0.2712", "408.719, 393.984, 46.5282, 0.2684", "409.813, 393.65, 46.489, 0.2626", "410.699, 392.928, 46.478, 0.2542", "411.84, 392.85, 46.4797, 0.2288", "412.984, 392.85, 46.48, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "390.629, 411.068, 46.8048, 0.3446", "390.494, 410.547, 46.7552, 0.3096", "390.28, 409.427, 46.7342, 0.3418", "390.302, 408.284, 46.7197, 0.3882", "390.419, 407.151, 46.7194, 0.5384", "390.401, 406.036, 46.7737, 0.5054", "390.103, 404.955, 46.741, 0.5848", "389.966, 403.823, 46.716, 0.5056", "390.047, 402.683, 46.6936, 0.5434", "390.345, 401.598, 46.6729, 0.6316", "391.06, 400.717, 46.6348, 0.48", "391.726, 399.893, 46.5592, 0.3546", "391.784, 398.778, 46.6043, 0.2814", "391.896, 397.675, 46.6676, 0.2872", "392.24, 396.613, 46.6609, 0.2988", "392.774, 395.602, 46.6628, 0.3144", "393.251, 394.569, 46.6603, 0.374", "393.537, 393.465, 46.6351, 0.335", "393.758, 392.345, 46.5819, 0.302", "394.168, 391.302, 46.4976, 0.2782", "394.617, 390.285, 46.3593, 0.2814", "394.916, 389.22, 46.2958, 0.287", "395.325, 388.182, 46.3207, 0.2988", "395.716, 387.119, 46.3151, 0.3142", "395.958, 386.011, 46.3044, 0.3736", "395.792, 384.921, 46.324, 0.3342", "395.357, 383.863, 46.3358, 0.3006", "395.061, 382.81, 46.2356, 0.2756", "395.035, 381.709, 46.0634, 0.2766", "395.293, 380.651, 46.0116, 0.2782", "395.515, 379.58, 46.0894, 0.2814", "395.478, 378.457, 46.1294, 0.287", "395.525, 377.32, 46.1496, 0.2986", "395.896, 376.249, 46.1647, 0.3138", "396.325, 375.229, 46.0614, 0.3728", "396.712, 374.188, 45.8581, 0.3328", "397.009, 373.092, 45.6686, 0.2982", "397.625, 372.142, 45.5624, 0.2712", "398.483, 371.39, 45.5356, 0.2684", "399.095, 370.452, 45.6352, 0.2626", "399.293, 369.354, 45.8461, 0.2542", "399.477, 368.25, 46.1286, 0.2288", "400.47, 367.81, 46.6768, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "408.25, 484.768, 29.0186, 0.35", "408.453, 485.23, 28.3847, 0.2288", "409.083, 486.095, 28.0921, 0.3758", "410.012, 486.753, 27.9855, 0.3382", "410.765, 487.583, 27.9854, 0.308", "411.286, 488.578, 28.0577, 0.289", "411.734, 489.629, 28.0916, 0.3024", "412.241, 490.647, 28.0781, 0.321", "412.818, 491.623, 28.0372, 0.386", "413.454, 492.545, 28.0428, 0.3584", "414.273, 493.337, 27.9917, 0.3402", "414.989, 494.199, 27.9069, 0.3748", "415.489, 495.16, 27.8981, 0.3364", "415.774, 496.173, 27.738, 0.3046", "416.318, 497.002, 27.4953, 0.2832", "417.062, 497.827, 27.4017, 0.2904", "417.814, 498.662, 27.3784, 0.3042", "418.698, 499.367, 27.333, 0.3286", "419.684, 499.936, 27.2611, 0.379", "420.573, 500.628, 27.2026, 0.447", "421.227, 501.552, 27.173, 0.6976", "421.776, 502.55, 27.1576, 0.5576", "422.444, 503.466, 27.1398, 0.4868", "423.201, 504.324, 27.1101, 0.3554", "423.935, 505.141, 26.9777, 0.3406", "424.715, 505.901, 26.7227, 0.3456", "425.426, 506.769, 26.4649, 0.4268", "426.219, 507.578, 26.2339, 0.4578", "426.99, 508.405, 26.0872, 0.408", "427.617, 509.304, 26.098, 0.3796", "428.326, 510.076, 26.0494, 0.4732", "428.796, 511.053, 25.9699, 0.395", "429.414, 511.996, 25.8952, 0.3286", "430.365, 512.578, 25.7642, 0.2806", "431.155, 513.375, 25.7079, 0.2858", "431.841, 514.274, 25.5939, 0.2956", "432.288, 515.325, 25.5075, 0.3132", "432.598, 516.423, 25.4397, 0.348", "432.87, 517.512, 25.3188, 0.4022", "433.504, 518.378, 25.0956, 0.5518", "434.412, 519.004, 24.8306, 0.5916", "435.14, 519.718, 24.7152, 0.4454", "435.317, 520.573, 24.8412, 0.328", "435.918, 521.33, 24.8551, 0.2792", "436.965, 521.646, 24.903, 0.2832", "437.823, 521.956, 25.1965, 0.2906", "438.097, 522.541, 25.7671, 0.3038", "438.457, 523.451, 26.2123, 0.3304", "438.387, 524.206, 26.2398, 0.37", "438.838, 524.873, 25.9767, 0.4914", "439.178, 525.927, 25.8455, 0.483", "439.83, 526.423, 26.4314, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "408.25, 484.768, 29.0186, 0.35", "408.824, 485.223, 29.4409, 0.3926", "409.829, 485.761, 29.8175, 0.3696", "410.813, 486.332, 30.0989, 0.366", "411.626, 487.129, 30.3262, 0.3992", "412.345, 488.002, 30.5239, 0.4942", "413.161, 488.8, 30.655, 0.7372", "414.039, 489.534, 30.7194, 0.8626", "414.915, 490.263, 30.739, 0.615", "415.81, 490.976, 30.7633, 0.427", "416.736, 491.629, 30.805, 0.3654", "417.775, 492.08, 30.8081, 0.458", "418.885, 492.327, 30.842, 0.542", "419.991, 492.494, 30.963, 0.4378", "421.122, 492.532, 31.0786, 0.3606", "422.209, 492.834, 31.1853, 0.342", "423.247, 493.269, 31.3723, 0.3886", "424.318, 493.555, 31.6047, 0.539", "425.42, 493.457, 31.8338, 0.5074", "426.458, 493.093, 32.1395, 0.5826", "427.432, 492.665, 32.3898, 0.5302", "428.363, 492.122, 32.5184, 0.4504", "429.358, 491.617, 32.7068, 0.4466", "430.443, 491.397, 32.9204, 0.4256", "431.55, 491.187, 33.1274, 0.454", "432.631, 490.873, 33.39, 0.6376", "433.724, 490.933, 33.7072, 0.5722", "434.823, 491.238, 34.0099, 0.5896", "435.937, 491.486, 34.2899, 0.6348", "437.053, 491.61, 34.6279, 0.6558", "438.133, 491.54, 35.07, 0.543", "439.083, 491.727, 35.637, 0.3848", "440.052, 492.141, 36.2404, 0.3", "441.13, 492.438, 36.7097, 0.2746", "442.22, 492.275, 37.011, 0.2746", "443.338, 492.233, 37.219, 0.2746", "444.477, 492.203, 37.3478, 0.2746", "445.61, 492.309, 37.4237, 0.2746", "446.668, 492.699, 37.5245, 0.2746", "447.685, 493.19, 37.6877, 0.2746", "448.715, 493.67, 37.821, 0.2746", "449.756, 494.139, 37.9028, 0.2744", "450.805, 494.589, 37.9912, 0.2744", "451.908, 494.818, 38.1284, 0.2742", "452.969, 494.461, 38.2598, 0.274", "454.059, 494.181, 38.3205, 0.2736", "455.188, 494.203, 38.4714, 0.2728", "456.225, 494.678, 38.6747, 0.2712", "457.364, 494.612, 38.9169, 0.2684", "458.471, 494.609, 39.2616, 0.2626", "459.593, 494.737, 39.639, 0.2542", "460.69, 494.826, 40.0744, 0.2288", "461.798, 494.838, 41.0533, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "394.214, 460.048, 30.0619, 0.543", "395.349, 459.758, 29.3104, 0.2288", "396.275, 459.166, 27.8128, 0.2684", "397.28, 458.671, 27.2781, 0.2626", "398.308, 458.63, 26.5704, 0.2542", "398.772, 459.076, 25.5989, 0.2288", "398.798, 459.774, 22.96, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "394.214, 460.048, 30.0619, 0.543", "395.382, 460.175, 29.8763, 0.4536", "396.381, 460.281, 29.5621, 0.5526", "397.435, 460.458, 29.4557, 0.5934", "398.35, 460.513, 29.6604, 0.4484", "399.405, 460.77, 29.7867, 0.3338", "400.239, 461.12, 29.6649, 0.2898", "401.356, 461.249, 29.6139, 0.3038", "402.43, 461.578, 29.6419, 0.3236", "403.552, 461.754, 29.6268, 0.3906", "404.695, 461.731, 29.5784, 0.367", "405.827, 461.802, 29.5375, 0.356", "406.924, 462.107, 29.4918, 0.405", "408.009, 462.463, 29.4272, 0.387", "409.118, 462.72, 29.3608, 0.4238", "410.253, 462.795, 29.3278, 0.3822", "411.372, 462.637, 29.374, 0.3792", "412.412, 462.233, 29.5224, 0.4724", "413.364, 461.644, 29.7307, 0.3934", "414.083, 460.814, 29.8964, 0.3256", "414.533, 459.795, 30.0283, 0.275", "415.32, 459.183, 30.1255, 0.2754", "416.244, 458.635, 30.0849, 0.276", "416.792, 457.67, 29.9757, 0.2772", "417.266, 456.866, 29.7175, 0.2792", "417.979, 456.155, 29.4076, 0.2834", "418.427, 455.14, 29.2485, 0.2906", "418.553, 454.359, 29.5526, 0.3056", "419.299, 453.75, 30.1812, 0.3266", "420.101, 453.08, 30.9966, 0.3976", "420.781, 452.212, 31.8718, 0.3736", "421.292, 451.255, 32.762, 0.3992", "421.526, 450.308, 33.6857, 0.3346", "421.856, 449.372, 34.566, 0.3012", "422.337, 448.503, 35.0476, 0.277", "423.336, 448.105, 35.4628, 0.279", "424.226, 448.501, 35.9976, 0.2826", "425.32, 448.684, 36.4496, 0.2896", "426.358, 448.56, 37.0236, 0.302", "427.338, 448.508, 37.7465, 0.3276", "428.35, 448.68, 38.5608, 0.3622", "429.395, 449.036, 39.2781, 0.488", "430.414, 449.55, 39.8496, 0.4234", "431.342, 450.199, 40.3382, 0.3762", "432.237, 450.905, 40.7299, 0.3942", "433.232, 451.44, 41.0726, 0.3722", "433.917, 452.189, 41.477, 0.3726", "433.995, 453.248, 41.9569, 0.401", "434.094, 454.344, 42.3606, 0.5496", "433.931, 455.404, 42.7952, 0.5876", "433.938, 456.285, 43.4162, 0.4378", "434.568, 457.143, 43.9866, 0.3136", "435.64, 457.495, 44.4282, 0.2542", "436.63, 457.933, 44.8829, 0.2288", "437.771, 457.989, 45.5521, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "358.158, 434.671, 33.3668, 0.531", "357.762, 433.709, 34.1754, 0.9152", "356.811, 433.13, 33.0506, 0.5776", "355.792, 432.754, 32.5514, 0.4306", "354.77, 432.262, 32.0118, 0.4738", "353.831, 431.756, 31.3432, 0.3958", "352.941, 431.34, 30.5262, 0.3302", "352.032, 430.668, 29.7556, 0.2836", "351.171, 430.391, 28.9982, 0.2912", "350.275, 430.732, 28.1327, 0.3066", "349.46, 430.255, 27.2546, 0.3286", "348.628, 429.522, 26.4205, 0.4002", "348.029, 428.619, 25.6294, 0.3842", "347.895, 427.559, 24.8417, 0.3898", "346.907, 427.125, 24.2528, 0.4576", "345.835, 426.871, 23.6939, 0.5338", "345.32, 426.403, 21.9327, 1.144" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "358.158, 434.671, 33.3668, 0.531", "357.844, 433.426, 33.5569, 0.5602", "357.469, 432.346, 33.6904, 0.81", "356.903, 431.357, 33.8246, 0.7822", "356.0, 430.661, 33.9576, 0.8246", "354.993, 430.118, 34.0514, 0.6766", "354.094, 429.411, 34.1138, 0.5866", "353.315, 428.576, 34.1709, 0.6682", "352.765, 427.575, 34.1827, 0.7582", "352.651, 426.437, 34.1558, 0.7644", "352.342, 425.336, 34.1132, 0.8694" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "347.785, 471.441, 36.806, 0.3206", "347.599, 471.534, 39.2171, 0.2288", "347.761, 472.229, 40.4673, 0.2998", "347.779, 473.09, 40.7893, 0.3234", "347.479, 474.117, 41.1421, 0.3548", "347.747, 474.987, 41.7362, 0.4742", "348.427, 475.71, 42.4805, 0.3968", "349.176, 476.447, 43.2796, 0.3322", "349.771, 477.395, 44.0023, 0.287", "350.296, 478.365, 44.7132, 0.2988", "351.292, 478.873, 45.2992, 0.3142", "351.504, 479.909, 45.8287, 0.3734", "352.249, 480.574, 46.2868, 0.3338", "353.2, 481.171, 46.6094, 0.3", "353.91, 482.054, 46.823, 0.2746", "354.486, 483.043, 46.9496, 0.2746", "355.037, 484.045, 47.0165, 0.2746", "355.388, 485.12, 47.038, 0.2746", "356.092, 485.911, 47.04, 0.2746", "357.145, 486.332, 47.04, 0.2746", "358.0, 487.027, 47.04, 0.2746", "358.966, 487.593, 47.04, 0.2746", "359.607, 488.479, 47.04, 0.2744", "359.809, 489.592, 47.04, 0.2744", "360.43, 490.511, 47.04, 0.2742", "360.756, 491.593, 47.04, 0.274", "361.075, 492.691, 47.04, 0.2736", "361.285, 493.815, 47.04, 0.2728", "361.59, 494.917, 47.04, 0.2712", "362.013, 495.98, 47.04, 0.2684", "362.268, 497.094, 47.04, 0.2626", "362.415, 498.228, 47.04, 0.2542", "362.465, 499.371, 47.04, 0.2288", "362.648, 500.5, 47.04, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "347.785, 471.441, 36.806, 0.3206", "346.887, 472.218, 36.5406, 0.354", "345.824, 472.634, 36.3107, 0.4506", "344.733, 472.934, 36.1253, 0.4612", "343.876, 473.64, 35.9425, 0.6128", "343.421, 474.679, 35.7487, 0.4822", "342.883, 475.674, 35.6042, 0.4068", "342.602, 476.759, 35.4295, 0.3748", "342.534, 477.866, 35.254, 0.4766", "342.057, 478.873, 34.9877, 0.5712", "341.716, 479.938, 34.6822, 0.5174", "341.278, 480.973, 34.41, 0.3848", "340.485, 481.539, 34.0542, 0.3", "339.376, 481.639, 33.6874, 0.2746", "338.245, 481.724, 33.4085, 0.2746", "337.118, 481.737, 33.1965, 0.2748", "336.034, 481.978, 32.9756, 0.275", "334.98, 482.417, 32.7922, 0.2754", "333.913, 482.828, 32.6682, 0.276", "332.998, 483.448, 32.5685, 0.2772", "332.297, 484.342, 32.459, 0.2792", "331.733, 485.327, 32.366, 0.2834", "331.278, 486.377, 32.3187, 0.2906", "330.748, 487.383, 32.3187, 0.3056", "330.004, 488.233, 32.3733, 0.3266", "329.072, 488.878, 32.4646, 0.3976", "328.06, 489.399, 32.5822, 0.3736", "327.091, 489.988, 32.6964, 0.399", "326.222, 490.726, 32.7634, 0.3342", "325.457, 491.573, 32.7729, 0.3006", "324.541, 492.089, 32.6836, 0.2758", "323.439, 492.315, 32.4957, 0.2768", "322.629, 492.993, 32.2731, 0.2786", "322.034, 493.966, 32.0771, 0.2822", "321.234, 494.732, 31.862, 0.2888", "320.315, 495.382, 31.5843, 0.301", "319.546, 496.209, 31.316, 0.3228", "318.827, 497.062, 30.9946, 0.367", "318.2, 497.993, 30.6362, 0.4314", "317.558, 498.928, 30.275, 0.6364", "316.978, 499.909, 29.9463, 0.6012", "316.187, 500.724, 29.6677, 0.492", "315.111, 500.849, 29.3622, 0.5028", "313.992, 501.008, 29.08, 0.4026", "312.903, 501.323, 28.8336, 0.3428", "311.893, 501.827, 28.6194, 0.3064", "311.194, 502.714, 28.5625, 0.3354", "310.458, 503.588, 28.5718, 0.378", "309.663, 504.406, 28.6919, 0.5122", "308.807, 505.163, 28.8705, 0.4926" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "344.353, 467.525, 39.7205, 0.3434", "343.373, 467.537, 40.5863, 0.2288", "342.27, 467.669, 41.5316, 0.2994", "341.133, 467.65, 41.8883, 0.3228", "340.052, 467.589, 42.334, 0.3536", "339.206, 467.172, 42.9506, 0.4722", "338.383, 466.742, 43.6758, 0.3932", "337.327, 466.681, 44.3607, 0.3254", "336.232, 466.451, 44.8832, 0.2746", "335.195, 465.975, 45.2648, 0.2746", "334.122, 465.637, 45.4748, 0.2746", "332.991, 465.531, 45.5137, 0.2746", "331.849, 465.481, 45.4614, 0.2746", "330.896, 465.019, 45.3446, 0.2746", "330.103, 464.208, 45.1842, 0.2746", "329.248, 463.456, 45.0363, 0.2746", "328.334, 462.767, 44.9302, 0.2746", "327.391, 462.121, 44.8616, 0.2746", "326.344, 461.716, 44.8213, 0.2746", "325.214, 461.539, 44.8036, 0.2746", "324.101, 461.29, 44.8, 0.2746", "323.001, 460.976, 44.8, 0.2746", "321.907, 460.644, 44.8, 0.2746", "320.821, 460.285, 44.8, 0.2746", "319.885, 459.675, 44.8, 0.2746", "319.24, 458.749, 44.8, 0.2746", "318.448, 457.983, 44.8, 0.2746", "317.74, 457.139, 44.8, 0.2746", "317.204, 456.129, 44.8, 0.2746", "316.56, 455.188, 44.8, 0.2746", "315.985, 454.207, 44.8, 0.2746", "315.401, 453.227, 44.8, 0.2746", "314.668, 452.354, 44.8, 0.2746", "313.87, 451.533, 44.8, 0.2746", "313.14, 450.655, 44.8, 0.2746", "312.282, 449.922, 44.8, 0.2746", "311.607, 449.037, 44.8, 0.2746", "310.9, 448.145, 44.8, 0.2746", "310.105, 447.322, 44.8, 0.2746", "309.288, 446.523, 44.8, 0.2746", "308.393, 445.813, 44.8, 0.2746", "307.509, 445.086, 44.8, 0.2746", "306.509, 444.548, 44.8, 0.2746", "305.591, 443.873, 44.8, 0.2746", "304.658, 443.213, 44.8, 0.2746", "303.854, 442.405, 44.8, 0.2746", "303.074, 441.568, 44.8, 0.2746", "302.455, 440.612, 44.8, 0.2746", "302.103, 439.53, 44.8, 0.2746", "301.57, 438.525, 44.8, 0.2746", "300.891, 437.605, 44.8, 0.2746", "300.27, 436.647, 44.8, 0.2746", "299.412, 435.906, 44.8, 0.2746", "298.372, 435.442, 44.8, 0.2744", "297.477, 434.739, 44.8, 0.2744", "296.609, 433.995, 44.8, 0.2742", "295.655, 433.364, 44.8, 0.274", "294.831, 432.576, 44.8, 0.2736", "294.127, 431.675, 44.8, 0.2728", "293.436, 430.763, 44.8, 0.2712", "292.986, 429.714, 44.8, 0.2684", "292.004, 429.167, 44.8, 0.2626", "290.923, 428.794, 44.8, 0.2542", "290.084, 428.017, 44.8, 0.2288", "288.974, 427.742, 44.8, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "344.353, 467.525, 39.7205, 0.3434", "343.947, 467.394, 40.1405, 0.3178", "343.524, 466.552, 40.595, 0.307", "343.307, 465.441, 40.9394, 0.3372", "342.835, 464.435, 41.1149, 0.3796", "342.2, 463.529, 41.2712, 0.5226", "341.597, 462.572, 41.3848, 0.4758", "340.893, 461.676, 41.4456, 0.5298", "340.1, 460.852, 41.4618, 0.4054", "339.346, 459.999, 41.4372, 0.3482", "338.571, 459.16, 41.3988, 0.3164", "337.756, 458.365, 41.3913, 0.354", "337.042, 457.478, 41.403, 0.412", "336.486, 456.481, 41.4064, 0.5776", "336.045, 455.427, 41.4173, 0.6028", "335.737, 454.328, 41.4254, 0.6432", "335.489, 453.212, 41.4389, 0.5218", "335.253, 452.107, 41.407, 0.5626", "335.214, 450.974, 41.3748, 0.492", "335.449, 449.865, 41.4355, 0.3848", "335.031, 448.831, 41.5565, 0.3", "334.237, 448.04, 41.7928, 0.2746", "333.741, 447.024, 42.0997, 0.2746", "333.294, 446.003, 42.4866, 0.2746", "332.894, 444.934, 42.8411, 0.2746", "332.283, 443.97, 43.139, 0.2746", "331.863, 442.945, 43.4963, 0.2746", "331.635, 441.877, 43.9009, 0.2746", "331.224, 440.827, 44.284, 0.2746", "330.868, 439.77, 44.6592, 0.2746", "330.372, 438.743, 44.9476, 0.2746", "329.893, 437.768, 45.0282, 0.2748", "329.575, 436.674, 45.0652, 0.275", "329.264, 435.627, 45.2057, 0.2754", "329.058, 434.507, 45.2948, 0.276", "328.859, 433.409, 45.425, 0.2772", "328.082, 432.586, 45.5764, 0.2796", "327.301, 431.842, 45.8307, 0.2838", "326.94, 430.765, 46.051, 0.292", "326.815, 429.629, 46.2353, 0.3064", "326.623, 428.509, 46.4335, 0.3354", "326.255, 427.441, 46.6564, 0.378", "325.849, 426.384, 46.881, 0.512", "325.58, 425.275, 47.0504, 0.4924", "325.203, 424.206, 47.1806, 0.3852", "324.711, 423.19, 47.357, 0.301", "324.134, 422.221, 47.5569, 0.2766", "323.409, 421.343, 47.747, 0.2782", "322.601, 420.542, 47.9268, 0.2814", "321.796, 419.736, 48.05, 0.287", "321.126, 418.819, 48.111, 0.2988", "320.533, 417.844, 48.1648, 0.3142", "319.812, 416.964, 48.2303, 0.3734", "318.907, 416.288, 48.2891, 0.334", "317.888, 415.869, 48.3759, 0.3", "316.861, 415.627, 48.5923, 0.2748", "315.757, 415.478, 48.7872, 0.2748", "314.9, 414.976, 48.8272, 0.2752", "314.473, 414.013, 48.6702, 0.2756", "313.799, 413.28, 48.4299, 0.2766", "312.822, 412.697, 48.2818, 0.2782", "311.785, 412.268, 48.1807, 0.2814", "310.773, 411.842, 48.0953, 0.287", "309.917, 411.132, 48.0735, 0.2988", "309.26, 410.445, 48.3476, 0.3142", "308.583, 409.74, 48.8555, 0.3736", "307.847, 409.07, 49.5054, 0.3342", "306.837, 408.634, 50.0758, 0.3006", "305.731, 408.541, 50.4423, 0.2758", "305.002, 407.708, 50.7136, 0.2768", "304.766, 406.647, 51.0084, 0.2796", "304.297, 405.626, 51.273, 0.2796", "303.766, 404.612, 51.4573, 0.305", "303.441, 403.515, 51.7384, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "352.342, 425.336, 34.1132, 0.8694", "351.181, 425.123, 34.5066, 0.2288", "350.067, 424.919, 34.9927, 0.2776", "348.954, 424.702, 35.2094, 0.2804", "347.849, 424.416, 35.4379, 0.2854", "346.756, 424.083, 35.6555, 0.2944", "345.64, 423.835, 35.8719, 0.3124", "344.543, 423.962, 36.1609, 0.339", "343.556, 424.494, 36.4773, 0.422", "342.659, 425.19, 36.7945, 0.4132", "341.713, 425.784, 37.149, 0.4982", "340.611, 425.777, 37.5175, 0.3942", "339.473, 425.863, 37.8204, 0.3274", "338.349, 426.076, 38.0405, 0.2782", "337.233, 426.317, 38.1864, 0.2814", "336.12, 426.575, 38.2788, 0.287", "335.071, 426.957, 38.4404, 0.2988", "334.08, 427.442, 38.6862, 0.3144", "333.203, 428.161, 38.9444, 0.3738", "332.333, 428.867, 39.0802, 0.3346", "331.537, 429.573, 39.0617, 0.3012", "330.84, 430.449, 39.1642, 0.277", "330.176, 431.106, 39.5074, 0.279", "329.489, 432.021, 39.802, 0.2828", "328.797, 432.93, 40.0736, 0.2898", "328.007, 433.714, 40.4158, 0.3026", "327.114, 434.401, 40.756, 0.3272", "326.05, 434.823, 40.9884, 0.3692", "324.964, 435.171, 41.1387, 0.465", "323.819, 435.152, 41.2572, 0.5558", "322.676, 435.124, 41.3507, 0.4582", "321.549, 434.936, 41.4347, 0.4244", "320.485, 434.522, 41.5405, 0.334", "319.399, 434.177, 41.6769, 0.3004", "318.284, 433.968, 41.8457, 0.2752", "317.163, 433.773, 42.0241, 0.2756", "316.027, 433.637, 42.1618, 0.2766", "314.893, 433.537, 42.2635, 0.2784", "313.829, 433.759, 42.2517, 0.2818", "312.696, 433.608, 42.308, 0.2876", "311.58, 433.576, 42.5023, 0.3", "310.617, 434.042, 42.87, 0.3164", "310.063, 434.972, 43.3608, 0.3776", "309.873, 436.068, 43.9015, 0.3416", "309.507, 437.094, 44.4646, 0.3142", "308.73, 437.845, 45.0265, 0.3006", "307.725, 438.314, 45.4728, 0.3248", "306.603, 438.356, 45.7075, 0.3574", "305.495, 438.271, 45.8408, 0.4792", "304.678, 438.7, 46.0673, 0.4056", "304.048, 439.362, 46.3184, 0.3496", "303.331, 439.967, 46.3072, 0.314", "302.588, 440.668, 46.1952, 0.3734", "301.556, 441.131, 46.0995, 0.3338", "300.458, 441.446, 45.9992, 0.3", "299.801, 442.232, 45.9589, 0.2744", "299.449, 443.215, 46.1037, 0.2744", "298.963, 444.191, 46.2428, 0.2742", "298.452, 445.197, 46.2563, 0.274", "298.15, 446.195, 46.3358, 0.2736", "297.71, 447.202, 46.4016, 0.2728", "297.279, 448.237, 46.2342, 0.2712", "296.667, 449.068, 45.7817, 0.2684", "296.381, 450.022, 45.1234, 0.2626", "296.216, 450.981, 44.322, 0.2542", "295.954, 451.886, 43.4249, 0.2288", "295.203, 452.724, 42.1781, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "352.342, 425.336, 34.1132, 0.8694", "351.738, 423.871, 34.0435, 0.8392", "351.365, 422.79, 33.9895, 0.9602", "350.868, 421.761, 33.955, 1.0108", "350.204, 420.833, 33.9511, 1.0334", "349.56, 419.889, 33.9668, 0.964", "349.113, 418.838, 33.9567, 0.9176", "348.792, 417.744, 33.901, 1.1186", "348.468, 416.648, 33.8187, 1.2422", "348.15, 415.55, 33.7439, 1.3074", "347.805, 414.461, 33.6778, 1.0804", "347.377, 413.403, 33.5768, 0.9744", "346.947, 412.35, 33.4373, 0.8512", "346.486, 411.303, 33.2945, 0.7256", "345.829, 410.371, 33.1428, 0.9084", "345.011, 409.586, 32.9582, 0.8302", "344.224, 408.763, 32.7757, 1.1092", "343.528, 407.855, 32.6402, 0.9404", "342.885, 406.909, 32.5483, 0.7552", "342.333, 405.907, 32.487, 0.7078", "341.771, 404.912, 32.4377, 1.012", "341.183, 403.933, 32.3904, 0.817", "340.85, 402.848, 32.4142, 0.7078", "340.78, 401.708, 32.4514, 0.8828", "340.756, 400.564, 32.4901, 0.9756", "340.826, 399.425, 32.4976, 0.8994", "341.047, 398.31, 32.4654, 0.8194", "341.341, 397.205, 32.447, 0.6028", "341.277, 396.191, 32.6133, 0.5324" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "308.807, 505.163, 28.8705, 0.4926", "308.64, 505.806, 29.1875, 0.3858", "308.11, 506.75, 29.5814, 0.302", "307.196, 507.375, 29.9552, 0.2784", "306.205, 507.938, 30.252, 0.2816", "305.359, 508.693, 30.4914, 0.2874", "304.68, 509.579, 30.7535, 0.2994", "304.301, 510.519, 31.1108, 0.3152", "304.061, 511.593, 31.3816, 0.3756", "303.802, 512.692, 31.4947, 0.3378", "303.86, 513.815, 31.5367, 0.3072", "304.031, 514.938, 31.5708, 0.288", "303.98, 515.981, 31.4188, 0.2996", "303.492, 516.969, 31.2365, 0.321", "302.852, 517.803, 31.2292, 0.361", "302.552, 518.883, 31.2264, 0.4324", "302.152, 519.892, 31.0486, 0.5786", "302.069, 521.028, 30.826, 0.7836", "302.07, 522.167, 30.5861, 0.797", "302.141, 523.299, 30.3215, 0.771", "302.461, 524.223, 29.9158, 0.5128", "301.898, 524.643, 29.381, 0.368", "301.056, 525.189, 29.1858, 0.3074", "300.921, 526.11, 29.3412, 0.3302", "301.266, 527.112, 29.6892, 0.4032", "301.56, 528.202, 30.0927, 0.389", "301.818, 529.242, 30.5774, 0.4036", "301.94, 530.282, 30.994, 0.4592", "301.958, 531.401, 31.1436, 0.6526", "302.104, 532.524, 31.1298, 0.802", "302.482, 533.562, 31.1203, 0.7212", "303.144, 534.433, 31.0702, 0.7074", "303.475, 535.226, 30.7933, 0.4792", "303.745, 536.16, 30.4161, 0.353", "304.392, 536.831, 30.329, 0.2796", "305.021, 537.575, 30.5119, 0.2796", "305.469, 538.579, 30.5973, 0.305", "305.273, 539.698, 30.9305, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "308.807, 505.163, 28.8705, 0.4926", "307.513, 505.96, 28.6275, 0.6864", "306.525, 506.509, 28.4567, 0.529", "305.693, 507.264, 28.3856, 0.5026", "304.85, 508.035, 28.3304, 0.508", "304.039, 508.84, 28.2999, 0.4832", "303.328, 509.734, 28.2775, 0.6062", "302.593, 510.567, 28.3385, 0.4702", "301.732, 511.296, 28.4262, 0.3848", "300.79, 511.929, 28.4287, 0.3324", "299.814, 512.478, 28.3049, 0.4068", "298.856, 513.074, 28.0991, 0.3978", "297.83, 513.565, 27.874, 0.4076", "296.818, 514.086, 27.6318, 0.5274", "295.904, 514.752, 27.3796, 0.4848", "295.02, 515.476, 27.1853, 0.5464", "294.108, 516.165, 27.0503, 0.4358", "293.324, 516.985, 26.9688, 0.4064", "292.39, 517.631, 26.8653, 0.4152", "291.583, 518.346, 26.6322, 0.5818", "290.936, 519.283, 26.4046, 0.6186", "290.324, 520.249, 26.2046, 0.6356", "290.397, 521.388, 25.8692, 0.6864" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "341.277, 396.191, 32.6133, 0.5324", "342.181, 395.616, 33.5549, 0.4576", "342.778, 394.658, 33.264, 0.6396", "343.156, 393.629, 33.0915, 0.6228", "343.467, 392.598, 32.839, 0.4562", "343.866, 391.542, 32.6872, 0.3476", "344.239, 390.491, 32.6869, 0.3168", "344.613, 389.42, 32.7426, 0.3486", "345.113, 388.395, 32.8, 0.432", "345.63, 387.384, 32.9087, 0.4676", "345.871, 386.304, 33.0702, 0.426", "345.82, 385.17, 33.182, 0.4144", "345.87, 384.044, 33.2539, 0.5322", "345.935, 382.928, 33.4057, 0.5308", "346.026, 381.826, 33.6339, 0.451", "346.352, 380.74, 33.8834, 0.4506", "346.703, 379.659, 34.1342, 0.4192", "346.884, 378.546, 34.384, 0.5092", "346.806, 377.423, 34.594, 0.4146", "346.699, 376.307, 34.767, 0.3646", "346.479, 375.235, 34.9866, 0.3492", "345.987, 374.218, 35.1946, 0.4032", "345.552, 373.168, 35.3343, 0.561", "345.36, 372.049, 35.42, 0.5728", "345.326, 370.906, 35.4754, 0.5856", "345.307, 369.766, 35.5275, 0.4244", "345.232, 368.631, 35.5622, 0.336", "345.506, 367.603, 35.5785, 0.294", "346.039, 366.604, 35.586, 0.3114", "346.263, 365.498, 35.5824, 0.3388", "346.384, 364.363, 35.5743, 0.414", "346.814, 363.344, 35.6012, 0.4348", "347.552, 362.482, 35.6639, 0.363", "348.356, 361.668, 35.7294, 0.3068", "349.136, 360.835, 35.8207, 0.287", "349.786, 359.906, 35.9484, 0.2988", "350.302, 358.889, 36.0962, 0.3142", "350.875, 357.905, 36.2354, 0.3734", "351.443, 356.927, 36.3989, 0.3338", "351.828, 355.866, 36.5744, 0.3", "352.1, 354.758, 36.696, 0.2746", "352.43, 353.667, 36.7699, 0.2746", "352.68, 352.574, 36.8808, 0.2746", "353.049, 351.519, 37.0068, 0.2746", "353.504, 350.471, 37.1, 0.2746", "354.12, 349.526, 37.1678, 0.2746", "355.075, 348.966, 37.2196, 0.2746", "356.138, 348.545, 37.2548, 0.2746", "356.906, 347.758, 37.2739, 0.2746", "357.586, 346.839, 37.2879, 0.2746", "358.122, 345.839, 37.3058, 0.2746", "358.614, 344.806, 37.3304, 0.2746", "359.081, 343.764, 37.3719, 0.2746", "359.296, 342.653, 37.4321, 0.2746", "359.455, 341.521, 37.4931, 0.2746", "359.926, 340.496, 37.548, 0.2746", "360.472, 339.491, 37.5978, 0.2746", "361.12, 338.553, 37.6575, 0.2746", "361.935, 337.759, 37.7328, 0.2746", "362.745, 336.953, 37.8056, 0.2746", "363.565, 336.155, 37.8759, 0.2746", "364.505, 335.511, 37.9501, 0.2746", "365.462, 334.885, 38.0346, 0.2746", "366.31, 334.12, 38.1357, 0.2746", "367.253, 333.481, 38.2654, 0.2746", "368.288, 333.007, 38.4566, 0.2746", "369.154, 332.308, 38.7475, 0.2746", "369.721, 331.342, 39.107, 0.2746", "370.417, 330.459, 39.5164, 0.2744", "371.064, 329.541, 39.9627, 0.2744", "371.722, 328.624, 40.4205, 0.2742", "372.096, 327.556, 40.8478, 0.274", "372.441, 326.471, 41.242, 0.2736", "372.722, 325.455, 41.7158, 0.2728", "373.306, 324.518, 42.1831, 0.2712", "373.657, 323.434, 42.5547, 0.2684", "373.866, 322.309, 42.8165, 0.2626", "374.531, 321.379, 42.9864, 0.2542", "375.317, 320.548, 43.0802, 0.2288", "375.346, 319.405, 43.12, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "341.277, 396.191, 32.6133, 0.5324", "340.556, 395.819, 32.748, 0.6254", "339.501, 395.456, 32.758, 0.8562", "338.491, 394.964, 32.6676, 1.0014", "337.696, 394.162, 32.5296, 0.8126", "336.926, 393.319, 32.3616, 0.8542", "336.107, 392.527, 32.165, 0.8612", "335.282, 391.739, 31.9889, 0.7576", "334.408, 391.002, 31.8657, 0.6726", "333.571, 390.224, 31.7948, 0.6816", "332.909, 389.297, 31.75, 0.805", "332.441, 388.256, 31.7122, 0.974", "332.08, 387.173, 31.6532, 0.8906", "331.713, 386.101, 31.5386, 0.8322", "331.152, 385.11, 31.4205, 1.172", "330.576, 384.123, 31.3233, 1.2284", "330.1, 383.083, 31.2346, 1.143", "329.575, 382.069, 31.1427, 0.7626", "328.895, 381.152, 31.0573, 0.6784", "328.086, 380.347, 30.9775, 0.709", "327.173, 379.666, 30.8781, 1.0036", "326.124, 379.334, 30.7023, 0.8536", "325.769, 378.332, 30.5931, 0.9806", "325.133, 377.421, 30.6135, 0.8512", "324.52, 376.455, 30.6236, 1.01", "323.601, 375.774, 30.6303, 0.7418", "322.601, 375.226, 30.5903, 0.6862", "321.652, 374.611, 30.4805, 0.7282" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "321.652, 374.611, 30.4805, 0.7282", "320.477, 374.396, 31.3379, 0.2288", "319.382, 374.2, 31.7052, 0.3238", "318.255, 374.008, 31.8363, 0.366", "317.129, 373.808, 31.941, 0.4428", "316.011, 373.582, 32.0107, 0.5932", "314.893, 373.341, 32.0824, 0.8328", "313.807, 373.1, 32.2496, 0.7804", "312.738, 372.812, 32.4839, 0.5786", "311.667, 372.417, 32.6936, 0.4832", "310.583, 372.048, 32.8527, 0.5546", "309.478, 371.762, 32.9398, 0.854", "308.45, 371.321, 32.9123, 1.0574", "307.614, 370.551, 32.8499, 1.0814", "306.893, 369.687, 32.8944, 0.7812", "305.965, 369.06, 33.0431, 0.7532", "304.857, 368.795, 33.2102, 0.6526", "303.716, 368.844, 33.3953, 0.4738", "302.594, 369.042, 33.6204, 0.3336", "301.481, 369.239, 33.8892, 0.2894", "300.359, 369.416, 34.1673, 0.303", "299.26, 369.727, 34.4344, 0.3222", "298.155, 370.021, 34.6954, 0.3882", "297.019, 370.156, 34.9588, 0.3624", "295.904, 370.312, 35.2568, 0.3476", "294.985, 370.757, 35.7322, 0.388", "294.16, 371.272, 36.3594, 0.362", "293.164, 371.784, 36.9544, 0.3468", "292.139, 372.279, 37.4452, 0.3872", "291.034, 372.564, 37.842, 0.3588", "289.911, 372.771, 38.1604, 0.3484", "288.799, 373.01, 38.4244, 0.3538", "287.692, 373.268, 38.6694, 0.4726", "286.578, 373.517, 38.9046, 0.3936", "285.461, 373.765, 39.1278, 0.3262", "284.365, 374.07, 39.3646, 0.276", "283.312, 374.47, 39.6519, 0.2774", "282.25, 374.861, 39.9644, 0.2798", "281.164, 375.187, 40.2839, 0.2842", "280.182, 375.684, 40.6347, 0.2926", "279.343, 376.445, 40.9704, 0.308", "278.404, 377.081, 41.2765, 0.337", "277.465, 377.702, 41.5736, 0.3882", "276.563, 378.396, 41.8009, 0.495", "275.689, 379.121, 41.9314, 0.636", "274.773, 379.805, 42.033, 0.488", "273.884, 380.516, 42.166, 0.3696", "273.048, 381.278, 42.3685, 0.3092", "272.179, 382.011, 42.6233, 0.3394", "271.329, 382.765, 42.9178, 0.3914", "270.572, 383.614, 43.2494, 0.5084", "269.841, 384.465, 43.6349, 0.6246", "269.095, 385.285, 44.0737, 0.6418", "268.268, 386.061, 44.4979, 0.4934", "267.429, 386.824, 44.896, 0.4064", "266.67, 387.638, 45.3158, 0.476", "265.854, 388.259, 45.7747, 0.4", "264.922, 388.815, 46.16, 0.3378", "263.828, 388.96, 46.4293, 0.2988", "262.684, 388.96, 46.6085, 0.3142", "261.545, 389.049, 46.7152, 0.3734", "260.443, 389.342, 46.7645, 0.3338", "259.341, 389.65, 46.7796, 0.3", "258.252, 389.999, 46.7874, 0.2746", "257.138, 390.257, 46.7984, 0.2746", "256.071, 390.661, 46.8138, 0.2746", "255.106, 391.27, 46.8348, 0.2746", "254.246, 392.021, 46.8642, 0.2746", "253.492, 392.88, 46.9062, 0.2746", "252.624, 393.62, 46.9664, 0.2746", "251.626, 394.176, 47.0478, 0.2746", "250.758, 394.913, 47.1526, 0.2746", "249.966, 395.736, 47.3054, 0.2746", "249.155, 396.485, 47.5734, 0.2746", "248.378, 397.276, 47.9184, 0.2746", "247.524, 398.031, 48.2224, 0.2746", "246.546, 398.61, 48.5083, 0.2746", "245.518, 399.083, 48.7838, 0.2746", "244.408, 399.34, 48.9952, 0.2746", "243.273, 399.481, 49.1288, 0.2746", "242.141, 399.65, 49.2078, 0.2744", "241.053, 400.003, 49.2548, 0.2744", "239.946, 400.289, 49.2752, 0.2742", "238.858, 400.642, 49.2797, 0.274", "237.756, 400.951, 49.28, 0.2736", "236.764, 401.521, 49.28, 0.2728", "235.664, 401.833, 49.28, 0.2712", "234.559, 402.127, 49.28, 0.2684", "233.437, 402.349, 49.28, 0.2626", "232.307, 402.532, 49.28, 0.2542", "231.278, 403.031, 49.28, 0.2288", "230.287, 403.603, 49.28, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "321.652, 374.611, 30.4805, 0.7282", "320.821, 373.349, 30.3778, 0.788", "320.304, 372.331, 30.263, 0.9866", "319.938, 371.259, 30.1311, 0.9288", "319.835, 370.134, 29.9841, 1.0594", "319.893, 368.997, 29.8421, 1.0632", "319.825, 367.867, 29.727, 0.8546", "319.447, 366.8, 29.6596, 0.8266", "318.849, 365.831, 29.6484, 1.0926", "318.109, 364.964, 29.6691, 1.1876", "317.3, 364.159, 29.7097, 1.0084", "316.554, 363.314, 29.787, 1.028", "315.83, 362.447, 29.8662, 0.9582", "315.031, 361.679, 29.82, 0.8862", "314.233, 360.962, 29.5904, 1.161", "313.502, 360.136, 29.283, 1.2904", "312.955, 359.146, 29.001, 1.3158", "312.607, 358.059, 28.7697, 1.2596", "312.352, 356.944, 28.5925, 0.9702", "312.153, 355.818, 28.4712, 0.8742", "312.0, 354.685, 28.3867, 0.8474", "311.909, 353.546, 28.3002, 0.9786", "311.723, 352.441, 28.1518, 0.8018", "311.12, 351.534, 27.9571, 0.9108", "310.362, 350.682, 27.7806, 0.824", "309.835, 349.68, 27.643, 0.6906", "309.585, 348.588, 27.5968, 0.7692", "309.089, 347.591, 27.5945, 0.7044", "308.303, 346.815, 27.5101, 0.9192", "307.635, 345.928, 27.3567, 0.837", "307.024, 344.981, 27.2711, 0.9576", "306.237, 344.222, 27.1256, 0.7704", "305.195, 343.843, 26.9546, 0.8166", "304.665, 342.99, 26.9731, 1.052", "304.571, 341.876, 27.0764, 1.2194", "304.44, 340.74, 27.1774, 1.2328", "304.128, 339.642, 27.2512, 1.099", "303.829, 338.538, 27.3024, 0.9346", "303.455, 337.457, 27.3144, 0.9102", "302.912, 336.454, 27.2744, 0.6478", "302.342, 335.462, 27.2035, 0.529", "301.771, 334.47, 27.1089, 0.5814", "301.208, 333.476, 26.9704, 0.7296", "300.674, 332.492, 26.7336, 0.985", "300.221, 331.456, 26.4438, 1.094", "299.948, 330.348, 26.1645, 0.778", "299.643, 329.257, 25.8593, 0.6476", "298.9, 328.454, 25.5019, 0.4824", "297.858, 328.039, 25.1597, 0.4926", "296.793, 327.716, 24.8053, 0.5752", "296.018, 326.901, 24.5074, 0.877", "295.413, 325.932, 24.2951, 1.1728", "294.864, 324.929, 24.163, 0.9426", "294.48, 323.853, 24.0957, 0.8626", "294.089, 322.777, 24.0716, 1.0908", "293.62, 321.734, 24.0785, 1.0596", "293.139, 320.698, 24.0985, 1.3756", "292.656, 319.66, 24.1247, 1.5192", "292.163, 318.628, 24.1613, 1.1882", "291.634, 317.617, 24.227, 1.1842", "291.086, 316.617, 24.3167, 1.1934", "290.528, 315.619, 24.4009, 1.3566", "289.981, 314.614, 24.4609, 1.4092", "289.51, 313.573, 24.4858, 1.5758", "289.127, 312.496, 24.4878, 1.3194", "288.904, 311.375, 24.4852, 1.3016", "288.813, 310.236, 24.4913, 1.105", "288.609, 309.111, 24.5223, 1.078", "288.075, 308.105, 24.5682, 1.2194", "287.371, 307.206, 24.6168, 1.2392", "286.773, 306.233, 24.6572, 1.0796", "286.682, 305.098, 24.6697, 1.0498", "286.796, 303.963, 24.6618, 0.8466", "286.543, 302.85, 24.5788, 0.9588", "285.986, 301.892, 24.3476, 1.083", "285.508, 300.867, 24.0459, 1.0322", "284.996, 299.87, 23.683, 1.1602", "284.42, 298.932, 23.2627, 1.2332", "283.695, 298.062, 22.8765, 1.2508", "282.982, 297.18, 22.5499, 1.1682", "282.326, 296.249, 22.312, 0.8882", "281.875, 295.206, 22.2239, 0.9858", "281.455, 294.149, 22.2463, 0.9172", "280.935, 293.129, 22.3094, 1.088", "280.243, 292.219, 22.386, 1.1012", "279.323, 291.54, 22.4586, 0.9968", "278.382, 290.891, 22.5254, 0.742", "277.441, 290.241, 22.5891, 0.5678", "276.53, 289.55, 22.6942, 0.6276", "275.685, 288.804, 22.8912, 0.7108", "274.843, 288.056, 23.1627, 0.542", "274.038, 287.262, 23.482, 0.4248", "273.58, 286.214, 23.7697, 0.4004", "273.138, 285.16, 24.0395, 0.5622", "272.709, 284.117, 24.3312, 0.5444", "272.612, 283.025, 24.6752, 0.6816", "272.737, 281.959, 25.0682, 0.5662" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "272.737, 281.959, 25.0682, 0.5662", "272.821, 281.663, 26.07, 0.2288", "273.113, 280.557, 26.1085, 0.6512", "273.298, 279.431, 26.1238, 1.1148", "273.298, 278.292, 26.1452, 1.1434", "273.064, 277.18, 26.1755, 1.1124", "272.706, 276.093, 26.218, 0.7754", "272.337, 275.01, 26.2754, 0.8204", "271.97, 273.926, 26.3542, 0.6278", "271.616, 272.842, 26.4732, 0.4672", "271.278, 271.759, 26.6481, 0.3592", "270.945, 270.68, 26.8677, 0.3814", "270.58, 269.609, 27.1032, 0.4872", "270.097, 268.584, 27.3191, 0.5978", "269.525, 267.599, 27.4884, 0.5318", "268.953, 266.612, 27.5866, 0.581", "268.442, 265.598, 27.5644, 0.527", "267.992, 264.571, 27.4023, 0.444", "267.559, 263.543, 27.134, 0.4368", "267.158, 262.495, 26.8186, 0.3984", "266.868, 261.399, 26.5364, 0.4476", "266.649, 260.276, 26.3302, 0.4136", "266.438, 259.151, 26.2013, 0.4988", "266.226, 258.028, 26.1379, 0.3952", "266.019, 256.902, 26.1208, 0.3292", "265.824, 255.775, 26.131, 0.2816", "265.637, 254.646, 26.1549, 0.2876", "265.449, 253.518, 26.1884, 0.2986", "265.266, 252.389, 26.2339, 0.32", "265.111, 251.256, 26.3002, 0.3546", "265.009, 250.118, 26.3994, 0.4428", "264.933, 248.98, 26.5305, 0.4902", "264.865, 247.842, 26.6826, 0.4554", "264.857, 246.705, 26.8519, 0.5292", "264.964, 245.583, 27.0407, 0.451", "265.132, 244.468, 27.2328, 0.436", "265.353, 243.354, 27.3733, 0.4632", "265.697, 242.284, 27.3746, 0.7048", "266.098, 241.243, 27.2266, 0.6814", "266.483, 240.194, 26.9772, 0.8668", "266.786, 239.107, 26.6925, 0.7872", "266.943, 237.98, 26.4475, 0.6348", "267.042, 236.84, 26.2749, 0.604", "267.14, 235.701, 26.1757, 0.6972", "267.242, 234.561, 26.1353, 0.828", "267.4, 233.429, 26.1338, 0.5884", "267.683, 232.322, 26.1547, 0.4244", "268.026, 231.231, 26.1886, 0.3622", "268.366, 230.14, 26.2347, 0.4446", "268.664, 229.036, 26.2992, 0.553", "268.811, 227.905, 26.3955, 0.9696", "268.823, 226.766, 26.5313, 0.6952", "268.797, 225.625, 26.7023, 0.4626", "268.812, 224.486, 26.9035, 0.2934", "268.95, 223.359, 27.1349, 0.3088", "269.169, 222.246, 27.3893, 0.3404", "269.405, 221.136, 27.6529, 0.386", "269.675, 220.033, 27.9088, 0.5322", "270.073, 218.969, 28.131, 0.5054", "270.58, 217.945, 28.2996, 0.527", "271.041, 216.899, 28.4178, 0.6794", "271.359, 215.803, 28.5009, 0.8752", "271.459, 214.669, 28.5659, 0.7432", "271.342, 213.536, 28.6286, 0.6144", "270.893, 212.503, 28.7036, 0.4978", "270.269, 211.544, 28.807, 0.6048", "269.822, 210.505, 28.961, 0.6062", "269.556, 209.405, 29.1788, 0.6494", "269.356, 208.295, 29.4549, 0.5332", "269.167, 207.185, 29.7674, 0.584", "268.989, 206.07, 30.0885, 0.5308", "268.864, 204.94, 30.3741, 0.4598", "268.802, 203.799, 30.5875, 0.4234", "268.729, 202.657, 30.7308, 0.5802", "268.607, 201.52, 30.8218, 0.4692", "268.252, 200.443, 30.8795, 0.3826", "267.517, 199.588, 30.9212, 0.3284", "266.629, 198.871, 30.9691, 0.3998", "265.804, 198.085, 31.0388, 0.3832", "265.35, 197.061, 31.1312, 0.3896", "265.181, 195.936, 31.2393, 0.4484", "265.111, 194.797, 31.3244, 0.5602", "265.095, 193.66, 31.3594, 0.983", "265.093, 192.519, 31.3746, 0.7196", "265.24, 191.388, 31.418, 0.51", "265.529, 190.285, 31.5168, 0.3704", "265.783, 189.205, 31.7374, 0.5046", "265.879, 188.125, 32.0816, 0.4474", "265.707, 187.018, 32.4433, 0.4526", "265.38, 185.924, 32.7488, 0.3814", "265.014, 184.841, 32.977, 0.4134", "264.439, 183.857, 33.1296, 0.3618", "263.811, 182.9, 33.2195, 0.3464", "263.484, 181.812, 33.2724, 0.386", "263.297, 180.684, 33.3186, 0.3584", "263.123, 179.553, 33.3774, 0.3402", "262.542, 178.581, 33.4524, 0.3746", "261.876, 177.652, 33.5538, 0.3362", "261.579, 176.564, 33.7142, 0.3042", "261.568, 175.445, 33.9522, 0.2824", "261.909, 174.414, 34.2849, 0.2894", "262.337, 173.403, 34.4568, 0.3016", "262.67, 172.328, 34.5307, 0.3268", "262.813, 171.237, 34.7138, 0.3608", "262.938, 170.156, 34.9868, 0.4854", "262.784, 169.024, 35.2106, 0.4184", "262.818, 167.88, 35.3875, 0.367", "263.029, 166.755, 35.5446, 0.3772", "263.136, 165.617, 35.6703, 0.341", "263.241, 164.477, 35.7591, 0.3132", "263.348, 163.338, 35.838, 0.3", "263.342, 162.2, 35.9719, 0.3166", "263.321, 161.064, 36.1547, 0.378", "263.302, 159.927, 36.3703, 0.3422", "263.281, 158.791, 36.601, 0.3154", "263.261, 157.654, 36.8287, 0.3034", "262.949, 156.568, 37.0518, 0.3278", "262.625, 155.483, 37.2389, 0.3744", "262.483, 154.347, 37.3237, 0.4534", "262.341, 153.212, 37.3201, 0.6362" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "272.737, 281.959, 25.0682, 0.5662", "272.238, 281.669, 25.3186, 0.5454", "271.27, 281.09, 25.404, 0.7148", "270.254, 280.612, 25.4513, 0.7046", "269.649, 279.711, 25.4664, 0.8872", "269.155, 278.783, 25.288, 0.9348", "268.503, 277.896, 25.0202, 1.0614", "267.755, 277.043, 24.8364, 1.1104", "267.202, 276.053, 24.7466, 1.1874", "266.932, 274.949, 24.6989, 1.1696", "267.031, 273.82, 24.697, 0.9994", "267.09, 272.682, 24.6861, 0.893", "267.186, 271.542, 24.6585, 0.8236", "267.143, 270.4, 24.6084, 0.9904", "266.953, 269.275, 24.5253, 1.0102", "266.382, 268.305, 24.3947, 0.8492", "265.491, 267.603, 24.2487, 1.0524", "264.587, 266.911, 24.103, 0.8252", "263.725, 266.16, 23.991, 0.8192", "262.824, 265.455, 23.9274, 0.8504", "261.93, 264.741, 23.9144, 0.7024", "261.072, 263.984, 23.9506, 0.513", "260.224, 263.216, 24.0289, 0.4354", "259.379, 262.446, 24.1425, 0.566", "258.633, 261.596, 24.3391, 0.619", "257.961, 260.708, 24.6267, 0.4908", "257.297, 259.817, 24.9764, 0.4376", "256.62, 258.92, 25.3342, 0.3582", "255.914, 258.022, 25.6236, 0.3462", "255.199, 257.129, 25.8239, 0.3546", "254.485, 256.235, 25.9402, 0.4504", "253.857, 255.28, 25.9895, 0.4682", "253.458, 254.21, 25.9924, 0.5894", "253.188, 253.099, 25.968, 0.6144", "253.015, 251.968, 25.9278, 0.4876", "252.719, 250.864, 25.8705, 0.4056", "251.884, 250.098, 25.7913, 0.4258", "250.846, 249.618, 25.6804, 0.5432", "249.731, 249.374, 25.5325, 0.83", "248.749, 248.823, 25.3066, 1.0254", "248.106, 247.94, 24.9817, 0.9618", "247.496, 247.034, 24.6018, 0.8514", "247.099, 245.962, 24.3171, 0.8404", "246.766, 244.867, 24.1356, 0.5644", "246.551, 243.744, 24.0618, 0.3796", "245.959, 242.769, 24.1, 0.2808", "245.356, 241.8, 24.2154, 0.2862", "244.754, 240.831, 24.3653, 0.296", "244.061, 239.955, 24.5693, 0.3144", "243.282, 239.247, 24.8679, 0.3478" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "262.341, 153.212, 37.3201, 0.6362", "262.197, 152.248, 37.8451, 0.2288", "261.982, 151.126, 38.0864, 0.541", "261.569, 150.062, 38.1816, 0.5482", "260.806, 149.255, 38.257, 0.4782", "259.74, 148.93, 38.5092, 0.5256", "258.835, 149.6, 38.8965, 0.4396", "258.379, 150.512, 39.5298, 0.4368", "257.585, 151.121, 40.3598, 0.358", "256.653, 151.166, 41.3672, 0.3396", "255.517, 151.161, 42.3088, 0.3736", "254.422, 151.056, 43.2085, 0.334", "253.712, 150.236, 44.1246, 0.3002", "253.057, 149.553, 45.0486, 0.2752", "252.035, 149.759, 45.9894, 0.2756", "251.387, 149.435, 47.0739, 0.2766", "251.29, 148.584, 48.2507, 0.2782", "251.761, 147.748, 49.4312, 0.2814", "252.509, 146.986, 50.5019, 0.2872", "253.25, 146.161, 51.4254, 0.2976", "253.476, 145.123, 52.2334, 0.3196", "253.637, 144.038, 52.9542, 0.3474", "254.341, 143.267, 53.4335, 0.4604", "255.088, 142.415, 53.7832, 0.3728", "255.307, 141.827, 54.4037, 0.2796", "254.648, 141.088, 56.0627, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "262.341, 153.212, 37.3201, 0.6362", "262.421, 152.727, 37.184, 0.7994", "262.598, 151.661, 36.8816, 0.5828", "263.258, 150.775, 36.5123, 0.413", "263.821, 149.79, 36.1595, 0.3448", "263.943, 148.655, 35.8915, 0.3936", "263.999, 147.512, 35.7098, 0.5496", "264.055, 146.37, 35.6068, 0.521", "263.66, 145.298, 35.5634, 0.6388", "263.087, 144.308, 35.5508, 0.4846", "262.591, 143.277, 35.5491, 0.4052", "262.384, 142.152, 35.5488, 0.4004", "262.196, 141.023, 35.5482, 0.3862", "262.008, 139.895, 35.5477, 0.3864", "261.82, 138.766, 35.5468, 0.486", "261.691, 137.63, 35.5454, 0.418", "261.612, 136.488, 35.5438, 0.3738", "261.534, 135.347, 35.5412, 0.3536", "261.457, 134.206, 35.5379, 0.4724", "261.379, 133.064, 35.5331, 0.3932", "261.132, 131.948, 35.5267, 0.3254", "260.514, 130.985, 35.5172, 0.2746", "259.886, 130.028, 35.5043, 0.2748", "259.257, 129.073, 35.4861, 0.2748", "258.621, 128.122, 35.4606, 0.2752", "257.964, 127.185, 35.4245, 0.2756", "257.306, 126.25, 35.3749, 0.2764", "256.648, 125.314, 35.308, 0.2782", "255.892, 124.456, 35.2125, 0.2812", "254.874, 123.942, 35.0616, 0.2868", "253.856, 123.432, 34.867, 0.2972", "252.845, 122.908, 34.6366, 0.3164", "252.126, 122.04, 34.3549, 0.353", "251.411, 121.169, 34.0472, 0.4152", "250.696, 120.297, 33.7358, 0.5592", "250.079, 119.335, 33.4911, 0.6864", "249.499, 118.349, 33.18, 1.6016" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "243.282, 239.247, 24.8679, 0.3478", "242.823, 238.43, 26.07, 0.2288", "242.602, 237.318, 26.1524, 0.279", "242.82, 236.204, 26.1853, 0.2826", "242.982, 235.073, 26.2305, 0.2896", "243.043, 233.931, 26.2921, 0.3026", "242.952, 232.793, 26.3856, 0.3256", "242.706, 231.679, 26.5198, 0.3736", "242.41, 230.58, 26.6833, 0.437", "242.013, 229.533, 26.9006, 0.678", "241.506, 228.577, 27.1874, 0.5266", "241.15, 227.499, 27.3956, 0.4046", "240.932, 226.39, 27.443, 0.322", "240.742, 225.279, 27.3455, 0.3878", "240.553, 224.168, 27.14, 0.3618", "240.383, 223.053, 26.8677, 0.3464", "240.375, 221.912, 26.6077, 0.3862", "240.425, 220.77, 26.4048, 0.3576", "240.48, 219.627, 26.2622, 0.3442", "240.508, 218.485, 26.1698, 0.3558", "240.478, 217.341, 26.1177, 0.4288", "240.431, 216.198, 26.0921, 0.5436", "240.382, 215.055, 26.079, 0.8556", "240.362, 213.911, 26.0726, 0.9526", "240.494, 212.775, 26.0702, 0.7232", "240.679, 211.647, 26.0698, 0.4554", "240.867, 210.518, 26.0697, 0.3376", "241.055, 209.39, 26.0696, 0.3402", "241.242, 208.261, 26.0695, 0.4166", "241.431, 207.133, 26.0693, 0.4396", "241.618, 206.003, 26.069, 0.3718", "241.806, 204.876, 26.0686, 0.3242", "241.995, 203.747, 26.068, 0.3142", "242.182, 202.618, 26.0673, 0.3736", "242.371, 201.49, 26.0662, 0.3342", "242.559, 200.361, 26.0647, 0.3004", "242.747, 199.233, 26.0626, 0.2754", "242.935, 198.105, 26.0597, 0.276", "242.979, 196.962, 26.0556, 0.2772", "242.839, 195.828, 26.0498, 0.2796", "242.654, 194.699, 26.0417, 0.284", "242.466, 193.57, 26.0306, 0.2918", "242.277, 192.443, 26.0151, 0.3074", "242.027, 191.326, 25.9931, 0.3304", "241.726, 190.222, 25.9608, 0.4034", "241.525, 189.096, 25.9175, 0.39", "241.408, 187.959, 25.8669, 0.401", "241.612, 186.84, 25.7806, 0.4768", "242.074, 185.813, 25.646, 0.5762", "242.652, 184.893, 25.4322, 0.5042", "242.847, 183.772, 25.3009, 0.4694", "242.689, 182.677, 25.3546, 0.6128", "242.509, 181.589, 25.5588, 0.5554", "242.22, 180.484, 25.7882, 0.4174", "241.907, 179.385, 26.0073, 0.3136", "241.562, 178.298, 26.2428, 0.2994", "241.55, 177.154, 26.4329, 0.323", "241.55, 176.01, 26.5849, 0.3538", "241.55, 174.866, 26.7233, 0.4724", "241.834, 173.771, 26.9285, 0.3934", "242.228, 172.725, 27.2056, 0.3258", "242.624, 171.678, 27.5257, 0.2752", "242.982, 170.613, 27.8574, 0.2758", "243.062, 169.471, 28.1064, 0.2768", "243.14, 168.329, 28.2775, 0.2786", "243.218, 167.189, 28.3777, 0.2822", "243.313, 166.048, 28.425, 0.2888", "243.477, 164.917, 28.4399, 0.3004", "243.642, 163.784, 28.4399, 0.3246", "243.807, 162.652, 28.4399, 0.3566", "243.972, 161.52, 28.4399, 0.4778", "244.214, 160.402, 28.4399, 0.4036", "244.697, 159.365, 28.4399, 0.3446", "245.18, 158.327, 28.4399, 0.3108", "245.661, 157.29, 28.4399, 0.3378", "246.142, 156.252, 28.4399, 0.412", "246.483, 155.16, 28.4399, 0.431", "246.824, 154.068, 28.4399, 0.356", "247.166, 152.976, 28.4399, 0.2938", "247.507, 151.884, 28.4399, 0.2626", "247.859, 150.795, 28.4399, 0.2542", "248.221, 149.711, 28.4399, 0.2288", "248.582, 148.625, 28.4399, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "243.282, 239.247, 24.8679, 0.3478", "242.876, 238.922, 24.9902, 0.4142", "242.038, 238.252, 24.9045, 0.5142", "241.161, 237.579, 24.7165, 0.8114", "240.231, 236.921, 24.5484, 0.8216", "239.434, 236.104, 24.455, 0.7188", "238.789, 235.163, 24.4579, 0.6618", "238.562, 234.1, 24.659, 0.5944", "238.494, 233.018, 25.0126, 0.5116", "238.428, 231.888, 25.3701, 0.612", "238.031, 230.819, 25.6564, 0.4812", "237.434, 229.843, 25.8562, 0.4032", "236.806, 228.888, 25.9759, 0.3762", "236.178, 227.932, 26.0268, 0.4418", "235.682, 226.901, 26.0348, 0.6866", "235.284, 225.828, 26.0256, 0.5438", "234.82, 224.783, 26.0083, 0.4304", "234.308, 223.76, 25.9836, 0.4002", "233.583, 222.876, 25.9505, 0.3848", "232.684, 222.172, 25.9039, 0.3886", "231.58, 221.887, 25.832, 0.4662", "230.531, 221.437, 25.7333, 0.4976", "229.881, 220.505, 25.6086, 0.6444", "229.423, 219.459, 25.4837, 0.7144", "229.348, 218.318, 25.3961, 0.6826", "229.218, 217.228, 25.2354, 0.7204" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "229.218, 217.228, 25.2354, 0.7204", "228.75, 216.294, 24.9158, 1.144", "228.245, 215.285, 25.3111, 0.614", "227.753, 214.268, 25.4933, 0.3772", "227.342, 213.205, 25.6687, 0.2762", "227.013, 212.111, 25.7995, 0.2778", "226.7, 211.011, 25.8794, 0.2804", "226.335, 209.926, 25.9094, 0.2854", "225.783, 208.93, 25.889, 0.2944", "225.076, 208.033, 25.8291, 0.3124", "224.316, 207.178, 25.7382, 0.3404", "223.39, 206.52, 25.6076, 0.417", "222.449, 205.883, 25.4098, 0.4404", "221.734, 205.027, 25.1339, 0.373", "221.133, 204.083, 24.7983, 0.3266", "220.545, 203.131, 24.4293, 0.3188", "220.059, 202.104, 24.0956, 0.382", "219.651, 201.035, 23.8346, 0.3498", "219.255, 199.962, 23.639, 0.3296", "218.857, 198.889, 23.4898, 0.3286", "218.364, 197.859, 23.3507, 0.378", "217.75, 196.9, 23.1876, 0.4512", "217.093, 195.968, 22.9858, 0.6756", "216.446, 195.034, 22.7396, 0.6612", "215.822, 194.091, 22.4485, 0.6646", "215.21, 193.144, 22.1242, 0.525", "214.602, 192.19, 21.7934, 0.5162", "214.009, 191.215, 21.5098, 0.6592", "213.366, 190.271, 21.2766, 0.8368", "212.618, 189.422, 21.0598, 0.6776", "212.019, 188.5, 20.8179, 0.4654", "211.29, 187.631, 20.6339, 0.3544", "210.3, 187.25, 20.673, 0.3794", "209.203, 186.981, 20.7997, 0.4492", "208.09, 186.719, 20.9439, 0.6948", "206.977, 186.457, 21.0888, 0.5848", "206.05, 187.089, 21.2123, 0.3814", "205.47, 188.075, 21.3301, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "229.218, 217.228, 25.2354, 0.7204", "228.099, 216.492, 25.2032, 0.5498", "227.15, 215.865, 25.265, 0.488", "226.202, 215.239, 25.3959, 0.509", "225.253, 214.613, 25.5706, 0.8066", "224.275, 214.025, 25.7522, 0.7878", "223.264, 213.49, 25.9113, 0.7776", "222.243, 212.976, 26.0208, 0.868", "221.215, 212.473, 26.0953, 0.9628", "220.1, 212.255, 26.1485, 0.805", "218.959, 212.302, 26.1938, 0.5304", "217.942, 212.797, 26.2471, 0.391", "216.914, 213.298, 26.3206, 0.3974", "215.781, 213.383, 26.4196, 0.4956", "214.771, 212.872, 26.5447, 0.7176", "214.145, 211.925, 26.7229, 0.9344", "213.703, 210.979, 27.071, 0.909", "212.81, 210.35, 27.4865, 0.6496", "211.681, 210.185, 27.8365, 0.5112", "210.543, 210.078, 28.1081, 0.652", "209.399, 210.033, 28.294, 0.5866", "208.257, 209.964, 28.4018, 0.6756", "207.122, 209.822, 28.4458, 0.507", "205.981, 209.89, 28.462, 0.4414", "204.839, 209.961, 28.474, 0.4932", "203.697, 210.033, 28.4869, 0.433", "202.555, 210.104, 28.5048, 0.3942", "201.414, 210.177, 28.5348, 0.4266", "200.272, 210.249, 28.574, 0.437", "199.13, 210.322, 28.6194, 0.47", "197.99, 210.395, 28.6672, 0.692", "196.848, 210.323, 28.7148, 0.5526", "195.708, 210.244, 28.7588, 0.4514", "194.566, 210.164, 28.7958, 0.4166", "193.428, 210.057, 28.8226, 0.5238", "192.325, 209.753, 28.8207, 0.8062", "191.223, 209.447, 28.7969, 0.9226", "190.121, 209.143, 28.758, 1.0552", "188.998, 208.924, 28.7129, 1.0198", "187.871, 208.733, 28.6686, 0.7184", "186.743, 208.542, 28.6306, 0.6164", "185.615, 208.35, 28.6028, 0.4974", "184.487, 208.159, 28.5872, 0.3946", "183.356, 207.994, 28.5944, 0.3184", "182.223, 207.829, 28.6261, 0.3084", "181.092, 207.665, 28.6843, 0.3378", "179.959, 207.5, 28.7703, 0.39", "178.826, 207.349, 28.8868, 0.4984", "177.711, 207.486, 29.1012, 0.642", "176.597, 207.626, 29.3832, 0.4994", "175.483, 207.765, 29.7038, 0.3904", "174.37, 207.904, 30.0359, 0.3498", "173.23, 207.991, 30.301, 0.4046", "172.089, 208.049, 30.4671, 0.5608", "170.946, 208.107, 30.5441, 0.5862", "169.803, 208.166, 30.5542, 0.543", "168.661, 208.223, 30.5183, 0.6732", "167.526, 208.365, 30.4531, 0.5786", "166.415, 208.635, 30.3699, 0.6614", "165.303, 208.906, 30.2775, 0.4782", "164.193, 209.176, 30.1742, 0.4004" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "164.193, 209.176, 30.1742, 0.4004", "163.006, 209.449, 29.2608, 0.2288", "161.952, 209.693, 27.8636, 0.3896", "160.897, 209.937, 27.2688, 0.4974", "159.84, 210.147, 26.5631, 0.6404", "158.778, 210.298, 25.783, 0.4964", "157.718, 210.451, 24.9717, 0.3854", "156.656, 210.601, 24.1685, 0.3378", "155.574, 210.774, 23.4359, 0.3956", "154.463, 210.987, 22.8292, 0.48", "153.353, 211.2, 22.3331, 0.7472", "152.242, 211.412, 21.9324, 0.7062", "151.133, 211.629, 21.6113, 0.4886", "150.057, 212.019, 21.4238, 0.3136", "148.983, 212.41, 21.3305, 0.2542", "147.908, 212.8, 21.2991, 0.2288", "146.765, 212.846, 21.3301, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "164.193, 209.176, 30.1742, 0.4004", "163.841, 209.043, 30.0751, 0.3562", "162.753, 208.709, 29.9208, 0.4768", "161.688, 208.429, 29.6831, 0.4016", "160.799, 208.789, 29.6055, 0.341", "159.763, 208.525, 29.3622, 0.3038", "158.745, 208.31, 28.9906, 0.328", "157.75, 207.79, 28.6199, 0.377", "156.661, 207.564, 28.3486, 0.4492", "155.565, 207.515, 28.1369, 0.672", "154.495, 207.184, 27.9114, 0.6542", "153.4, 206.872, 27.764, 0.653", "152.282, 206.672, 27.6191, 0.4962", "151.164, 206.487, 27.4532, 0.4982", "150.032, 206.412, 27.3311, 0.4552", "148.929, 206.579, 27.2189, 0.6016", "147.912, 207.011, 27.1558, 0.4616", "147.06, 207.469, 27.0206, 0.3678", "146.112, 207.626, 26.9678, 0.3058", "145.144, 207.231, 27.1057, 0.3346", "144.107, 206.801, 27.3019, 0.3752", "143.0, 206.536, 27.4645, 0.5124", "141.927, 206.231, 27.6874, 0.4668", "140.877, 205.913, 28.0104, 0.4652", "139.776, 205.664, 28.2386, 0.517", "139.114, 204.861, 28.2794, 0.805", "138.372, 204.013, 28.2624, 0.8644", "137.451, 203.542, 28.4416, 0.5338", "136.389, 203.474, 29.2435, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_696",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_697",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_12", "dend_7", "dend_0", "apic_0", "dend_27", "dend_18", "dend_14", "dend_13", "dend_11", "dend_8", "dend_4", "dend_1", "apic_20", "apic_1", "dend_30", "dend_29", "dend_28", "dend_22", "dend_19", "dend_16", "dend_15", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "apic_19", "apic_2", "dend_26", "dend_23", "dend_21", "dend_20", "apic_18", "apic_3", "dend_25", "dend_24", "apic_17", "apic_4", "apic_16", "apic_5", "apic_13", "apic_6", "apic_15", "apic_14", "apic_12", "apic_7", "apic_11", "apic_8", "apic_10", "apic_9" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_12", "dend_7", "dend_0", "dend_27", "dend_18", "dend_14", "dend_13", "dend_11", "dend_8", "dend_4", "dend_1", "dend_30", "dend_29", "dend_28", "dend_22", "dend_19", "dend_16", "dend_15", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_26", "dend_23", "dend_21", "dend_20", "dend_25", "dend_24" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_19", "apic_2", "apic_18", "apic_3", "apic_17", "apic_4", "apic_16", "apic_5", "apic_13", "apic_6", "apic_15", "apic_14", "apic_12", "apic_7", "apic_11", "apic_8", "apic_10", "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28793",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.4182842"
  }, {
    "group" : "apic",
    "value" : "3.4182842"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "131.79703"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.595575E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.995667E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.43420327",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "4.706734E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0026862223",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.45479E-6",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.15407269",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.2675367",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.8602892E-4",
    "erev" : "-87.64024"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.4634678E-4",
    "erev" : "-87.64024"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.7644044E-7",
    "erev" : "-87.64024"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.6817515E-4",
    "erev" : "-87.64024"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.881062E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.5629642E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_482657381",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_482657381

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_17
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_30, id: dend_30, parent: dend_27
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_19, id: apic_19, parent: apic_1
create apic_19
public apic_19
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: apic_18, id: apic_18, parent: apic_2
create apic_18
public apic_18
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: apic_17, id: apic_17, parent: apic_3
create apic_17
public apic_17
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_16, id: apic_16, parent: apic_4
create apic_16
public apic_16
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_13, id: apic_13, parent: apic_5
create apic_13
public apic_13
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_6
create apic_12
public apic_12
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_11, id: apic_11, parent: apic_7
create apic_11
public apic_11
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_696, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_696
// Group: {name=ModelViewParmSubset_697, groups=[], sections=[dend_17, dend_12, dend_7, dend_0, apic_0, dend_27, dend_18, dend_14, dend_13, dend_11, dend_8, dend_4, dend_1, apic_20, apic_1, dend_30, dend_29, dend_28, dend_22, dend_19, dend_16, dend_15, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, apic_19, apic_2, dend_26, dend_23, dend_21, dend_20, apic_18, apic_3, dend_25, dend_24, apic_17, apic_4, apic_16, apic_5, apic_13, apic_6, apic_15, apic_14, apic_12, apic_7, apic_11, apic_8, apic_10, apic_9]}
objref ModelViewParmSubset_697
// Group: {name=dend, groups=[], sections=[dend_17, dend_12, dend_7, dend_0, dend_27, dend_18, dend_14, dend_13, dend_11, dend_8, dend_4, dend_1, dend_30, dend_29, dend_28, dend_22, dend_19, dend_16, dend_15, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_26, dend_23, dend_21, dend_20, dend_25, dend_24]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_19, apic_2, apic_18, apic_3, apic_17, apic_4, apic_16, apic_5, apic_13, apic_6, apic_15, apic_14, apic_12, apic_7, apic_11, apic_8, apic_10, apic_9]}
objref apic
// Group: {name=OneSecGrp_SectionRef_28793, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_28793
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_482657381
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_17(0), soma_0(0.5)
    connect dend_12(0), soma_0(0.5)
    connect dend_7(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_30(0), dend_27(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_19(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect apic_18(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect apic_17(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_16(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_13(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_11(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 362.577, 458.63, 35.28, 10.4378 ) }
    soma_0 { pt3dadd( 367.796, 458.63, 35.28, 10.4378 ) }
    soma_0 { pt3dadd( 373.015, 458.63, 35.28, 10.4378 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 367.796, 458.63, 35.28, 1.0 ) }
    axon_0 { pt3dadd( 373.637, 472.446, 35.28, 1.0 ) }
    axon_0 { pt3dadd( 379.479, 486.262, 35.28, 1.0 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 364.206, 460.818, 35.819, 0.2288 ) }
    dend_17 { pt3dadd( 363.23, 461.413, 36.0674, 0.3566 ) }
    dend_17 { pt3dadd( 362.229, 461.967, 36.1463, 0.4152 ) }
    dend_17 { pt3dadd( 361.4, 462.711, 36.3194, 0.5908 ) }
    dend_17 { pt3dadd( 360.545, 463.471, 36.4778, 0.5918 ) }
    dend_17 { pt3dadd( 359.582, 464.086, 36.6083, 0.7962 ) }
    dend_17 { pt3dadd( 358.559, 464.6, 36.7125, 0.6496 ) }
    dend_17 { pt3dadd( 357.561, 465.158, 36.7965, 0.6412 ) }
    dend_17 { pt3dadd( 356.553, 465.691, 36.8869, 0.72 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 15/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 363.718, 459.548, 32.9798, 0.2288 ) }
    dend_12 { pt3dadd( 362.61, 459.363, 32.4884, 0.471 ) }
    dend_12 { pt3dadd( 361.549, 459.774, 32.3028, 0.5668 ) }
    dend_12 { pt3dadd( 360.612, 460.429, 32.1065, 0.4788 ) }
    dend_12 { pt3dadd( 359.74, 461.169, 31.8878, 0.4624 ) }
    dend_12 { pt3dadd( 358.869, 461.9, 31.6151, 0.4042 ) }
    dend_12 { pt3dadd( 358.014, 462.524, 31.2012, 0.433 ) }
    dend_12 { pt3dadd( 357.264, 463.17, 30.6491, 0.5082 ) }
    dend_12 { pt3dadd( 356.318, 463.809, 30.1885, 0.7704 ) }
    dend_12 { pt3dadd( 355.354, 464.421, 29.8665, 0.8904 ) }
    dend_12 { pt3dadd( 354.649, 465.321, 29.6388, 0.8312 ) }
    dend_12 { pt3dadd( 354.471, 466.451, 29.4832, 0.7142 ) }
    dend_12 { pt3dadd( 354.069, 467.522, 29.3745, 0.5342 ) }
    dend_12 { pt3dadd( 353.016, 467.965, 29.2732, 0.4778 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 368.104, 454.17, 35.8173, 0.2288 ) }
    dend_7 { pt3dadd( 368.136, 453.037, 36.2804, 0.2766 ) }
    dend_7 { pt3dadd( 367.87, 452.002, 36.5397, 0.2784 ) }
    dend_7 { pt3dadd( 367.337, 451.017, 36.7786, 0.2816 ) }
    dend_7 { pt3dadd( 366.955, 449.951, 36.9326, 0.2874 ) }
    dend_7 { pt3dadd( 367.136, 448.851, 37.0608, 0.2994 ) }
    dend_7 { pt3dadd( 367.431, 447.766, 37.2316, 0.3152 ) }
    dend_7 { pt3dadd( 367.529, 446.658, 37.2887, 0.3756 ) }
    dend_7 { pt3dadd( 368.139, 445.712, 37.333, 0.3378 ) }
    dend_7 { pt3dadd( 368.747, 444.746, 37.4472, 0.3074 ) }
    dend_7 { pt3dadd( 369.528, 443.911, 37.6132, 0.2882 ) }
    dend_7 { pt3dadd( 370.447, 443.229, 37.8258, 0.2994 ) }
    dend_7 { pt3dadd( 371.54, 442.9, 38.0876, 0.3228 ) }
    dend_7 { pt3dadd( 372.409, 443.53, 38.5392, 0.3536 ) }
    dend_7 { pt3dadd( 373.365, 443.594, 39.2087, 0.4722 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 44/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 372.28, 459.618, 34.5299, 0.2288 ) }
    dend_0 { pt3dadd( 373.331, 460.071, 34.3336, 0.3876 ) }
    dend_0 { pt3dadd( 374.448, 460.307, 34.2462, 0.36 ) }
    dend_0 { pt3dadd( 375.441, 460.872, 34.1502, 0.3498 ) }
    dend_0 { pt3dadd( 376.234, 461.695, 34.0334, 0.361 ) }
    dend_0 { pt3dadd( 377.154, 462.375, 33.9119, 0.4632 ) }
    dend_0 { pt3dadd( 378.236, 462.671, 33.7089, 0.4858 ) }
    dend_0 { pt3dadd( 379.33, 462.948, 33.4678, 0.6526 ) }
    dend_0 { pt3dadd( 380.431, 463.249, 33.2506, 0.5832 ) }
    dend_0 { pt3dadd( 381.563, 463.253, 33.017, 0.4638 ) }
    dend_0 { pt3dadd( 382.697, 463.405, 32.8395, 0.4246 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 55/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 367.111, 454.016, 34.228, 0.3984 ) }
    apic_0 { pt3dadd( 366.476, 453.072, 33.8503, 0.5212 ) }
    apic_0 { pt3dadd( 365.776, 452.173, 33.5549, 0.6496 ) }
    apic_0 { pt3dadd( 365.165, 451.206, 33.3712, 0.683 ) }
    apic_0 { pt3dadd( 364.668, 450.202, 33.3796, 0.5932 ) }
    apic_0 { pt3dadd( 364.234, 449.315, 33.656, 0.4784 ) }
    apic_0 { pt3dadd( 363.889, 448.229, 33.952, 0.4724 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 379.479, 486.262, 35.28, 1.0 ) }
    axon_1 { pt3dadd( 385.32, 500.078, 35.28, 1.0 ) }
    axon_1 { pt3dadd( 391.161, 513.894, 35.28, 1.0 ) }
    // Section: dend_27, id: dend_27, parent: dend_17 (entry count 65/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 356.553, 465.691, 36.8869, 0.72 ) }
    dend_27 { pt3dadd( 356.673, 465.941, 36.7368, 0.2288 ) }
    dend_27 { pt3dadd( 356.856, 467.033, 37.2274, 0.425 ) }
    dend_27 { pt3dadd( 356.975, 468.121, 37.4968, 0.425 ) }
    dend_27 { pt3dadd( 356.914, 469.241, 37.8106, 0.4904 ) }
    dend_27 { pt3dadd( 357.027, 470.341, 38.0215, 0.5234 ) }
    dend_27 { pt3dadd( 357.73, 471.199, 38.2889, 0.5558 ) }
    dend_27 { pt3dadd( 358.54, 471.952, 38.6635, 0.5266 ) }
    dend_27 { pt3dadd( 359.261, 472.831, 39.053, 0.6762 ) }
    dend_27 { pt3dadd( 359.845, 473.8, 39.4666, 0.6514 ) }
    dend_27 { pt3dadd( 360.611, 474.433, 40.0509, 0.4714 ) }
    dend_27 { pt3dadd( 361.424, 475.104, 40.7165, 0.3292 ) }
    dend_27 { pt3dadd( 362.203, 475.918, 41.1863, 0.2816 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 78/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 356.553, 465.691, 36.8869, 0.72 ) }
    dend_18 { pt3dadd( 355.544, 465.953, 36.9844, 0.6354 ) }
    dend_18 { pt3dadd( 354.42, 466.161, 37.0801, 0.6842 ) }
    dend_18 { pt3dadd( 353.329, 466.455, 37.0866, 0.6926 ) }
    dend_18 { pt3dadd( 352.241, 466.792, 37.0524, 0.6472 ) }
    dend_18 { pt3dadd( 351.264, 467.385, 37.044, 0.6314 ) }
    dend_18 { pt3dadd( 350.404, 468.127, 37.0787, 0.4988 ) }
    dend_18 { pt3dadd( 349.424, 468.713, 37.123, 0.5252 ) }
    dend_18 { pt3dadd( 348.371, 469.147, 37.1776, 0.397 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 87/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 353.016, 467.965, 29.2732, 0.4778 ) }
    dend_14 { pt3dadd( 352.384, 468.176, 29.1298, 0.6284 ) }
    dend_14 { pt3dadd( 351.407, 468.704, 28.894, 0.5838 ) }
    dend_14 { pt3dadd( 350.94, 469.715, 28.5986, 0.4726 ) }
    dend_14 { pt3dadd( 351.054, 470.849, 28.2918, 0.4046 ) }
    dend_14 { pt3dadd( 351.155, 471.972, 27.9865, 0.522 ) }
    dend_14 { pt3dadd( 350.618, 472.965, 27.6607, 0.4748 ) }
    dend_14 { pt3dadd( 349.928, 473.864, 27.3446, 0.5276 ) }
    dend_14 { pt3dadd( 349.164, 474.697, 27.0399, 0.4016 ) }
    dend_14 { pt3dadd( 348.819, 475.764, 26.7354, 0.341 ) }
    dend_14 { pt3dadd( 349.237, 476.827, 26.5068, 0.3032 ) }
    dend_14 { pt3dadd( 349.711, 477.867, 26.3595, 0.3298 ) }
    dend_14 { pt3dadd( 349.856, 479.002, 26.2665, 0.3664 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_14 { pt3dadd( 349.523, 480.096, 26.2032, 0.4958 ) }
    dend_14 { pt3dadd( 349.246, 481.193, 26.1174, 0.4378 ) }
    dend_14 { pt3dadd( 348.712, 482.201, 26.0422, 0.4036 ) }
    dend_14 { pt3dadd( 348.689, 483.34, 26.0406, 0.4408 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 353.016, 467.965, 29.2732, 0.4778 ) }
    dend_13 { pt3dadd( 352.232, 468.261, 29.4123, 1.144 ) }
    dend_13 { pt3dadd( 351.239, 468.823, 29.9877, 0.6936 ) }
    dend_13 { pt3dadd( 350.199, 469.206, 30.256, 0.5162 ) }
    dend_13 { pt3dadd( 349.277, 469.559, 30.7272, 0.5758 ) }
    dend_13 { pt3dadd( 348.239, 470.01, 31.1699, 0.6308 ) }
    dend_13 { pt3dadd( 347.102, 470.043, 31.5554, 0.5434 ) }
    dend_13 { pt3dadd( 345.997, 469.96, 31.9701, 0.3858 ) }
    dend_13 { pt3dadd( 344.868, 470.127, 32.3056, 0.302 ) }
    dend_13 { pt3dadd( 343.779, 470.437, 32.6164, 0.2782 ) }
    dend_13 { pt3dadd( 342.729, 470.836, 32.9302, 0.2814 ) }
    dend_13 { pt3dadd( 341.685, 471.287, 33.2181, 0.287 ) }
    dend_13 { pt3dadd( 340.708, 471.826, 33.5401, 0.2988 ) }
    dend_13 { pt3dadd( 339.63, 472.183, 33.8195, 0.3142 ) }
    dend_13 { pt3dadd( 338.513, 472.414, 34.0253, 0.3734 ) }
    dend_13 { pt3dadd( 337.411, 472.686, 34.2115, 0.3338 ) }
    dend_13 { pt3dadd( 336.286, 472.761, 34.4142, 0.3 ) }
    dend_13 { pt3dadd( 335.245, 473.123, 34.6542, 0.2746 ) }
    dend_13 { pt3dadd( 334.263, 473.695, 34.8477, 0.2746 ) }
    dend_13 { pt3dadd( 333.225, 474.17, 34.9782, 0.2746 ) }
    dend_13 { pt3dadd( 332.15, 474.456, 35.0977, 0.2746 ) }
    dend_13 { pt3dadd( 331.027, 474.537, 35.208, 0.2746 ) }
    dend_13 { pt3dadd( 329.93, 474.849, 35.3116, 0.2746 ) }
    dend_13 { pt3dadd( 328.86, 475.223, 35.4038, 0.2746 ) }
    dend_13 { pt3dadd( 327.826, 475.708, 35.4749, 0.2746 ) }
    dend_13 { pt3dadd( 326.732, 476.029, 35.5286, 0.2746 ) }
    dend_13 { pt3dadd( 325.603, 476.212, 35.5634, 0.2746 ) }
    dend_13 { pt3dadd( 324.516, 476.523, 35.5849, 0.2746 ) }
    dend_13 { pt3dadd( 323.504, 477.055, 35.6, 0.2746 ) }
    dend_13 { pt3dadd( 322.509, 477.619, 35.6163, 0.2746 ) }
    dend_13 { pt3dadd( 321.505, 478.168, 35.6387, 0.2748 ) }
    dend_13 { pt3dadd( 320.445, 478.579, 35.6698, 0.2748 ) }
    dend_13 { pt3dadd( 319.366, 478.944, 35.7129, 0.2752 ) }
    dend_13 { pt3dadd( 318.347, 479.462, 35.7748, 0.2758 ) }
    dend_13 { pt3dadd( 317.31, 479.937, 35.8627, 0.2768 ) }
    dend_13 { pt3dadd( 316.203, 480.192, 35.9811, 0.2786 ) }
    dend_13 { pt3dadd( 315.062, 480.251, 36.1357, 0.282 ) }
    dend_13 { pt3dadd( 313.932, 480.251, 36.3675, 0.2882 ) }
    dend_13 { pt3dadd( 312.868, 480.251, 36.7556, 0.2996 ) }
    dend_13 { pt3dadd( 311.801, 480.251, 37.2344, 0.323 ) }
    dend_13 { pt3dadd( 310.658, 480.251, 37.6726, 0.354 ) }
    dend_13 { pt3dadd( 309.514, 480.251, 38.0596, 0.4728 ) }
    dend_13 { pt3dadd( 308.381, 480.27, 38.4348, 0.3942 ) }
    dend_13 { pt3dadd( 307.324, 480.328, 38.8884, 0.3274 ) }
    dend_13 { pt3dadd( 306.268, 480.366, 39.3873, 0.2782 ) }
    dend_13 { pt3dadd( 305.14, 480.366, 39.8336, 0.2814 ) }
    dend_13 { pt3dadd( 303.999, 480.366, 40.1906, 0.287 ) }
    dend_13 { pt3dadd( 302.856, 480.366, 40.4555, 0.2988 ) }
    dend_13 { pt3dadd( 301.725, 480.241, 40.6342, 0.3142 ) }
    dend_13 { pt3dadd( 300.676, 479.82, 40.7266, 0.3734 ) }
    dend_13 { pt3dadd( 299.658, 479.301, 40.7562, 0.3338 ) }
    dend_13 { pt3dadd( 298.591, 478.894, 40.7506, 0.3 ) }
    dend_13 { pt3dadd( 297.505, 478.535, 40.7193, 0.2746 ) }
    dend_13 { pt3dadd( 296.434, 478.134, 40.663, 0.2746 ) }
    dend_13 { pt3dadd( 295.4, 477.649, 40.5838, 0.2746 ) }
    dend_13 { pt3dadd( 294.395, 477.104, 40.4726, 0.2746 ) }
    dend_13 { pt3dadd( 293.364, 476.676, 40.2816, 0.2746 ) }
    dend_13 { pt3dadd( 292.293, 476.367, 40.014, 0.2746 ) }
    dend_13 { pt3dadd( 291.284, 475.876, 39.7482, 0.2746 ) }
    dend_13 { pt3dadd( 290.366, 475.205, 39.5097, 0.2746 ) }
    dend_13 { pt3dadd( 289.402, 474.601, 39.3128, 0.2746 ) }
    dend_13 { pt3dadd( 288.405, 474.042, 39.1826, 0.2746 ) }
    dend_13 { pt3dadd( 287.531, 473.319, 39.1342, 0.2746 ) }
    dend_13 { pt3dadd( 286.82, 472.43, 39.151, 0.2746 ) }
    dend_13 { pt3dadd( 286.076, 471.565, 39.195, 0.2746 ) }
    dend_13 { pt3dadd( 285.229, 470.797, 39.2501, 0.2746 ) }
    dend_13 { pt3dadd( 284.365, 470.048, 39.3106, 0.2746 ) }
    dend_13 { pt3dadd( 283.361, 469.534, 39.3736, 0.2746 ) }
    dend_13 { pt3dadd( 282.304, 469.102, 39.4537, 0.2746 ) }
    dend_13 { pt3dadd( 281.241, 468.719, 39.5872, 0.2746 ) }
    dend_13 { pt3dadd( 280.122, 468.535, 39.7323, 0.2744 ) }
    dend_13 { pt3dadd( 279.229, 467.887, 39.8496, 0.2744 ) }
    dend_13 { pt3dadd( 278.3, 467.222, 39.933, 0.2742 ) }
    dend_13 { pt3dadd( 277.732, 466.244, 39.9854, 0.274 ) }
    dend_13 { pt3dadd( 277.166, 465.25, 40.0092, 0.2736 ) }
    dend_13 { pt3dadd( 276.278, 464.533, 40.0103, 0.2728 ) }
    dend_13 { pt3dadd( 275.329, 463.894, 39.9983, 0.2712 ) }
    dend_13 { pt3dadd( 274.438, 463.178, 39.9818, 0.2684 ) }
    dend_13 { pt3dadd( 273.739, 462.272, 39.9619, 0.2626 ) }
    dend_13 { pt3dadd( 273.338, 461.201, 39.9403, 0.2542 ) }
    dend_13 { pt3dadd( 272.753, 460.224, 39.8826, 0.2288 ) }
    dend_13 { pt3dadd( 271.929, 459.43, 39.76, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 373.365, 443.594, 39.2087, 0.4722 ) }
    dend_11 { pt3dadd( 373.547, 444.085, 39.8451, 0.2288 ) }
    dend_11 { pt3dadd( 374.142, 445.031, 39.8838, 0.374 ) }
    dend_11 { pt3dadd( 375.083, 445.665, 39.9384, 0.3348 ) }
    dend_11 { pt3dadd( 376.045, 446.262, 39.9988, 0.3016 ) }
    dend_11 { pt3dadd( 376.703, 447.178, 40.0674, 0.2776 ) }
    dend_11 { pt3dadd( 377.153, 448.192, 40.1498, 0.2804 ) }
    dend_11 { pt3dadd( 378.037, 448.911, 40.2654, 0.2854 ) }
    dend_11 { pt3dadd( 378.893, 449.64, 40.4359, 0.2944 ) }
    dend_11 { pt3dadd( 379.501, 450.601, 40.609, 0.3124 ) }
    dend_11 { pt3dadd( 380.143, 451.501, 40.7873, 0.339 ) }
    dend_11 { pt3dadd( 381.111, 452.025, 41.0292, 0.4218 ) }
    dend_11 { pt3dadd( 382.206, 452.324, 41.2628, 0.413 ) }
    dend_11 { pt3dadd( 383.293, 452.673, 41.4422, 0.4978 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( 384.232, 453.273, 41.5736, 0.3932 ) }
    dend_11 { pt3dadd( 385.094, 453.993, 41.6718, 0.3254 ) }
    dend_11 { pt3dadd( 386.138, 454.457, 41.7474, 0.2746 ) }
    dend_11 { pt3dadd( 387.221, 454.823, 41.8132, 0.2746 ) }
    dend_11 { pt3dadd( 388.206, 455.353, 41.895, 0.2746 ) }
    dend_11 { pt3dadd( 389.164, 455.956, 42.0073, 0.2746 ) }
    dend_11 { pt3dadd( 390.214, 456.41, 42.1576, 0.2746 ) }
    dend_11 { pt3dadd( 391.144, 457.041, 42.3573, 0.2746 ) }
    dend_11 { pt3dadd( 391.766, 457.922, 42.6866, 0.2746 ) }
    dend_11 { pt3dadd( 392.184, 458.893, 43.183, 0.2744 ) }
    dend_11 { pt3dadd( 392.695, 459.864, 43.689, 0.2744 ) }
    dend_11 { pt3dadd( 393.395, 460.372, 44.2896, 0.2742 ) }
    dend_11 { pt3dadd( 394.368, 460.647, 44.9392, 0.274 ) }
    dend_11 { pt3dadd( 395.17, 461.439, 45.4348, 0.2736 ) }
    dend_11 { pt3dadd( 395.705, 462.357, 45.9343, 0.2728 ) }
    dend_11 { pt3dadd( 396.214, 463.307, 46.3974, 0.2712 ) }
    dend_11 { pt3dadd( 396.878, 464.233, 46.6701, 0.2684 ) }
    dend_11 { pt3dadd( 397.581, 465.133, 46.788, 0.2626 ) }
    dend_11 { pt3dadd( 398.5, 465.812, 46.807, 0.2542 ) }
    dend_11 { pt3dadd( 399.594, 465.57, 46.7113, 0.2288 ) }
    dend_11 { pt3dadd( 400.699, 465.542, 46.1146, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 21/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 373.365, 443.594, 39.2087, 0.4722 ) }
    dend_8 { pt3dadd( 373.935, 442.698, 40.026, 0.3932 ) }
    dend_8 { pt3dadd( 374.739, 441.925, 40.7434, 0.3254 ) }
    dend_8 { pt3dadd( 375.466, 441.054, 41.3098, 0.2746 ) }
    dend_8 { pt3dadd( 375.871, 440.022, 41.8088, 0.2746 ) }
    dend_8 { pt3dadd( 375.974, 438.91, 42.2772, 0.2748 ) }
    dend_8 { pt3dadd( 376.206, 437.849, 42.7487, 0.2748 ) }
    dend_8 { pt3dadd( 376.862, 437.013, 43.2474, 0.2752 ) }
    dend_8 { pt3dadd( 377.623, 436.203, 43.7539, 0.2756 ) }
    dend_8 { pt3dadd( 378.386, 435.362, 44.1955, 0.2766 ) }
    dend_8 { pt3dadd( 379.119, 434.487, 44.5458, 0.2782 ) }
    dend_8 { pt3dadd( 379.817, 433.649, 44.9075, 0.2814 ) }
    dend_8 { pt3dadd( 380.645, 432.922, 45.2586, 0.287 ) }
    dend_8 { pt3dadd( 381.545, 432.223, 45.5081, 0.2988 ) }
    dend_8 { pt3dadd( 382.246, 431.35, 45.6529, 0.3142 ) }
    dend_8 { pt3dadd( 382.77, 430.359, 45.8122, 0.3734 ) }
    dend_8 { pt3dadd( 383.304, 429.365, 45.9981, 0.334 ) }
    dend_8 { pt3dadd( 384.04, 428.515, 46.1835, 0.3 ) }
    dend_8 { pt3dadd( 384.862, 427.732, 46.3142, 0.2746 ) }
    dend_8 { pt3dadd( 385.464, 426.781, 46.4162, 0.2748 ) }
    dend_8 { pt3dadd( 385.852, 425.72, 46.5562, 0.275 ) }
    dend_8 { pt3dadd( 386.312, 424.681, 46.6936, 0.2754 ) }
    dend_8 { pt3dadd( 386.661, 423.608, 46.755, 0.2762 ) }
    dend_8 { pt3dadd( 386.945, 422.517, 46.8415, 0.2774 ) }
    dend_8 { pt3dadd( 387.42, 421.532, 47.0308, 0.2798 ) }
    dend_8 { pt3dadd( 387.852, 420.489, 47.1355, 0.2844 ) }
    dend_8 { pt3dadd( 388.414, 419.498, 47.1677, 0.2928 ) }
    dend_8 { pt3dadd( 388.939, 418.483, 47.192, 0.3082 ) }
    dend_8 { pt3dadd( 389.384, 417.463, 47.2856, 0.3378 ) }
    dend_8 { pt3dadd( 389.493, 416.335, 47.2968, 0.3882 ) }
    dend_8 { pt3dadd( 389.68, 415.255, 47.1607, 0.5024 ) }
    dend_8 { pt3dadd( 390.101, 414.195, 47.028, 0.6136 ) }
    dend_8 { pt3dadd( 389.946, 413.088, 46.9913, 0.6218 ) }
    dend_8 { pt3dadd( 389.914, 411.958, 46.8927, 0.4544 ) }
    dend_8 { pt3dadd( 390.629, 411.068, 46.8048, 0.3446 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 382.697, 463.405, 32.8395, 0.4246 ) }
    dend_4 { pt3dadd( 382.814, 463.474, 32.7365, 0.3838 ) }
    dend_4 { pt3dadd( 383.789, 463.95, 32.7684, 0.382 ) }
    dend_4 { pt3dadd( 384.816, 464.321, 32.6894, 0.4776 ) }
    dend_4 { pt3dadd( 385.843, 464.739, 32.5041, 0.403 ) }
    dend_4 { pt3dadd( 386.815, 465.327, 32.3196, 0.3434 ) }
    dend_4 { pt3dadd( 387.854, 465.798, 32.1261, 0.309 ) }
    dend_4 { pt3dadd( 388.932, 466.178, 31.9346, 0.3334 ) }
    dend_4 { pt3dadd( 389.914, 466.757, 31.7372, 0.4088 ) }
    dend_4 { pt3dadd( 390.816, 467.458, 31.5781, 0.4016 ) }
    dend_4 { pt3dadd( 391.804, 468.012, 31.3695, 0.4146 ) }
    dend_4 { pt3dadd( 392.806, 468.463, 31.0349, 0.5402 ) }
    dend_4 { pt3dadd( 393.864, 468.819, 30.6309, 0.5084 ) }
    dend_4 { pt3dadd( 394.86, 469.345, 30.2002, 0.592 ) }
    dend_4 { pt3dadd( 395.736, 470.067, 29.7931, 0.511 ) }
    dend_4 { pt3dadd( 396.381, 470.947, 29.3471, 0.5908 ) }
    dend_4 { pt3dadd( 396.891, 471.938, 28.9302, 0.539 ) }
    dend_4 { pt3dadd( 397.792, 472.623, 28.6087, 0.4972 ) }
    dend_4 { pt3dadd( 398.856, 473.038, 28.4026, 0.3856 ) }
    dend_4 { pt3dadd( 399.861, 473.583, 28.2985, 0.3434 ) }
    dend_4 { pt3dadd( 400.707, 474.352, 28.2666, 0.3808 ) }
    dend_4 { pt3dadd( 401.733, 474.816, 28.3458, 0.3472 ) }
    dend_4 { pt3dadd( 402.833, 475.127, 28.4309, 0.326 ) }
    dend_4 { pt3dadd( 403.819, 475.705, 28.4939, 0.3174 ) }
    dend_4 { pt3dadd( 404.52, 476.608, 28.5219, 0.3794 ) }
    dend_4 { pt3dadd( 404.848, 477.699, 28.4992, 0.345 ) }
    dend_4 { pt3dadd( 405.073, 478.815, 28.4393, 0.3206 ) }
    dend_4 { pt3dadd( 405.641, 479.809, 28.4012, 0.3136 ) }
    dend_4 { pt3dadd( 406.264, 480.768, 28.4049, 0.3428 ) }
    dend_4 { pt3dadd( 406.835, 481.759, 28.4435, 0.4214 ) }
    dend_4 { pt3dadd( 407.258, 482.811, 28.4796, 0.4482 ) }
    dend_4 { pt3dadd( 407.803, 483.77, 28.6829, 0.389 ) }
    dend_4 { pt3dadd( 408.25, 484.768, 29.0186, 0.35 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 89/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 382.697, 463.405, 32.8395, 0.4246 ) }
    dend_1 { pt3dadd( 383.678, 463.158, 32.3126, 0.2288 ) }
    dend_1 { pt3dadd( 384.735, 462.734, 32.0426, 0.34 ) }
    dend_1 { pt3dadd( 385.843, 462.473, 31.9444, 0.3864 ) }
    dend_1 { pt3dadd( 386.982, 462.465, 31.8352, 0.5278 ) }
    dend_1 { pt3dadd( 388.112, 462.42, 31.6576, 0.5216 ) }
    dend_1 { pt3dadd( 389.155, 461.994, 31.4398, 0.439 ) }
    dend_1 { pt3dadd( 390.229, 461.684, 31.3068, 0.4036 ) }
    dend_1 { pt3dadd( 391.322, 461.424, 31.1013, 0.4528 ) }
    dend_1 { pt3dadd( 392.179, 460.891, 30.7126, 0.6714 ) }
    dend_1 { pt3dadd( 393.154, 460.389, 30.2856, 0.689 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 394.214, 460.048, 30.0619, 0.543 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 1/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 363.889, 448.229, 33.952, 0.4724 ) }
    apic_20 { pt3dadd( 363.658, 447.079, 34.1958, 0.9152 ) }
    apic_20 { pt3dadd( 363.641, 445.998, 34.7245, 0.727 ) }
    apic_20 { pt3dadd( 363.735, 444.921, 35.014, 0.4706 ) }
    apic_20 { pt3dadd( 364.057, 443.877, 35.189, 0.3274 ) }
    apic_20 { pt3dadd( 364.625, 442.928, 35.2145, 0.2782 ) }
    apic_20 { pt3dadd( 365.176, 441.942, 35.1694, 0.2814 ) }
    apic_20 { pt3dadd( 365.723, 440.94, 35.1352, 0.2872 ) }
    apic_20 { pt3dadd( 366.049, 439.893, 35.2117, 0.2988 ) }
    apic_20 { pt3dadd( 366.471, 438.843, 35.3136, 0.3144 ) }
    apic_20 { pt3dadd( 367.263, 438.033, 35.4298, 0.374 ) }
    apic_20 { pt3dadd( 368.132, 437.293, 35.5555, 0.335 ) }
    apic_20 { pt3dadd( 369.043, 436.627, 35.6975, 0.302 ) }
    apic_20 { pt3dadd( 370.086, 436.304, 35.8686, 0.2784 ) }
    apic_20 { pt3dadd( 370.647, 435.562, 35.7333, 0.2816 ) }
    apic_20 { pt3dadd( 371.72, 435.258, 35.5418, 0.2874 ) }
    apic_20 { pt3dadd( 372.74, 434.763, 35.3783, 0.2994 ) }
    apic_20 { pt3dadd( 373.454, 433.896, 35.1162, 0.3152 ) }
    apic_20 { pt3dadd( 374.185, 433.033, 34.7906, 0.3756 ) }
    apic_20 { pt3dadd( 374.874, 432.141, 34.4215, 0.3378 ) }
    apic_20 { pt3dadd( 375.774, 431.528, 34.0046, 0.3074 ) }
    apic_20 { pt3dadd( 376.718, 430.907, 33.6014, 0.288 ) }
    apic_20 { pt3dadd( 377.767, 430.567, 33.1831, 0.3006 ) }
    apic_20 { pt3dadd( 378.905, 430.659, 32.8952, 0.3176 ) }
    apic_20 { pt3dadd( 380.031, 430.717, 32.7449, 0.3798 ) }
    apic_20 { pt3dadd( 381.133, 430.525, 32.6956, 0.3458 ) }
    apic_20 { pt3dadd( 382.203, 430.396, 32.5374, 0.322 ) }
    apic_20 { pt3dadd( 383.156, 430.938, 32.2725, 0.3152 ) }
    apic_20 { pt3dadd( 384.113, 431.358, 31.9004, 0.3514 ) }
    apic_20 { pt3dadd( 385.207, 431.442, 31.6406, 0.4088 ) }
    apic_20 { pt3dadd( 386.28, 431.05, 31.4252, 0.5638 ) }
    apic_20 { pt3dadd( 387.366, 430.707, 31.2519, 0.6152 ) }
    apic_20 { pt3dadd( 388.475, 430.443, 31.0705, 0.4836 ) }
    apic_20 { pt3dadd( 389.551, 430.119, 30.8227, 0.4244 ) }
    apic_20 { pt3dadd( 390.596, 429.721, 30.4954, 0.334 ) }
    apic_20 { pt3dadd( 391.611, 429.247, 30.0936, 0.3002 ) }
    apic_20 { pt3dadd( 392.601, 428.693, 29.6976, 0.275 ) }
    apic_20 { pt3dadd( 393.666, 428.403, 29.3434, 0.2754 ) }
    apic_20 { pt3dadd( 394.69, 428.767, 28.952, 0.2762 ) }
    apic_20 { pt3dadd( 395.595, 429.38, 28.4875, 0.2774 ) }
    apic_20 { pt3dadd( 396.649, 429.657, 27.9705, 0.28 ) }
    apic_20 { pt3dadd( 397.767, 429.643, 27.4206, 0.2846 ) }
    apic_20 { pt3dadd( 398.342, 430.165, 26.745, 0.2928 ) }
    apic_20 { pt3dadd( 397.72, 430.973, 26.0793, 0.3096 ) }
    apic_20 { pt3dadd( 397.583, 432.028, 25.388, 0.334 ) }
    apic_20 { pt3dadd( 398.145, 432.863, 24.5986, 0.4124 ) }
    apic_20 { pt3dadd( 399.152, 433.101, 23.7712, 0.3954 ) }
    apic_20 { pt3dadd( 399.85, 433.881, 22.9475, 0.466 ) }
    apic_20 { pt3dadd( 400.733, 434.435, 22.1529, 0.3304 ) }
    apic_20 { pt3dadd( 401.843, 434.642, 20.8079, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 51/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 363.889, 448.229, 33.952, 0.4724 ) }
    apic_1 { pt3dadd( 363.654, 447.008, 34.1958, 0.6 ) }
    apic_1 { pt3dadd( 363.511, 445.879, 34.2922, 0.8502 ) }
    apic_1 { pt3dadd( 363.027, 444.862, 34.2236, 0.7906 ) }
    apic_1 { pt3dadd( 362.461, 443.877, 34.0463, 0.7042 ) }
    apic_1 { pt3dadd( 362.102, 442.815, 33.7702, 0.884 ) }
    apic_1 { pt3dadd( 361.559, 441.812, 33.5135, 0.9396 ) }
    apic_1 { pt3dadd( 361.243, 440.726, 33.2626, 0.7904 ) }
    apic_1 { pt3dadd( 360.857, 439.65, 33.0907, 0.8232 ) }
    apic_1 { pt3dadd( 360.472, 438.573, 33.0022, 0.9832 ) }
    apic_1 { pt3dadd( 360.048, 437.513, 33.0081, 1.0276 ) }
    apic_1 { pt3dadd( 359.458, 436.534, 33.0851, 0.732 ) }
    apic_1 { pt3dadd( 358.813, 435.591, 33.1901, 0.646 ) }
    apic_1 { pt3dadd( 358.158, 434.671, 33.3668, 0.531 ) }
    // Section: dend_30, id: dend_30, parent: dend_27 (entry count 65/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 362.203, 475.918, 41.1863, 0.2816 ) }
    dend_30 { pt3dadd( 362.55, 475.39, 41.4252, 0.2288 ) }
    dend_30 { pt3dadd( 363.174, 474.556, 42.6292, 0.2744 ) }
    dend_30 { pt3dadd( 363.949, 473.714, 43.0413, 0.2742 ) }
    dend_30 { pt3dadd( 364.534, 472.949, 43.6551, 0.274 ) }
    dend_30 { pt3dadd( 365.057, 472.21, 44.4741, 0.2736 ) }
    dend_30 { pt3dadd( 365.767, 471.331, 45.222, 0.2728 ) }
    dend_30 { pt3dadd( 366.467, 470.431, 45.9029, 0.2712 ) }
    dend_30 { pt3dadd( 367.148, 469.519, 46.5122, 0.2684 ) }
    dend_30 { pt3dadd( 367.768, 468.627, 47.145, 0.2626 ) }
    dend_30 { pt3dadd( 368.212, 467.73, 47.8257, 0.2542 ) }
    dend_30 { pt3dadd( 368.43, 466.769, 48.552, 0.2288 ) }
    dend_30 { pt3dadd( 368.76, 465.71, 49.84, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 78/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 362.203, 475.918, 41.1863, 0.2816 ) }
    dend_29 { pt3dadd( 362.097, 476.727, 41.5778, 0.2874 ) }
    dend_29 { pt3dadd( 361.87, 477.833, 41.9538, 0.2994 ) }
    dend_29 { pt3dadd( 361.471, 478.842, 42.4116, 0.3152 ) }
    dend_29 { pt3dadd( 361.297, 479.841, 42.9573, 0.3754 ) }
    dend_29 { pt3dadd( 361.597, 480.88, 43.5526, 0.3376 ) }
    dend_29 { pt3dadd( 362.297, 481.648, 44.1963, 0.3068 ) }
    dend_29 { pt3dadd( 363.329, 482.059, 44.7975, 0.287 ) }
    dend_29 { pt3dadd( 364.357, 482.501, 45.304, 0.2988 ) }
    dend_29 { pt3dadd( 364.894, 483.405, 45.7069, 0.3142 ) }
    dend_29 { pt3dadd( 364.883, 484.517, 46.0586, 0.3734 ) }
    dend_29 { pt3dadd( 364.966, 485.63, 46.3677, 0.3338 ) }
    dend_29 { pt3dadd( 365.37, 486.685, 46.6388, 0.3 ) }
    dend_29 { pt3dadd( 365.775, 487.727, 46.7992, 0.2746 ) }
    dend_29 { pt3dadd( 366.038, 488.806, 46.842, 0.2746 ) }
    dend_29 { pt3dadd( 366.254, 489.879, 46.9647, 0.2746 ) }
    dend_29 { pt3dadd( 366.518, 490.892, 47.2483, 0.2746 ) }
    dend_29 { pt3dadd( 366.914, 491.903, 47.6064, 0.2746 ) }
    dend_29 { pt3dadd( 367.523, 492.853, 47.9004, 0.2746 ) }
    dend_29 { pt3dadd( 367.178, 493.778, 48.1216, 0.2746 ) }
    dend_29 { pt3dadd( 366.376, 494.59, 48.2714, 0.2746 ) }
    dend_29 { pt3dadd( 365.987, 495.643, 48.3353, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_29 { pt3dadd( 366.419, 496.654, 48.377, 0.2746 ) }
    dend_29 { pt3dadd( 367.216, 497.471, 48.3952, 0.2744 ) }
    dend_29 { pt3dadd( 368.068, 498.234, 48.41, 0.2744 ) }
    dend_29 { pt3dadd( 368.885, 499.034, 48.4235, 0.2742 ) }
    dend_29 { pt3dadd( 369.535, 499.975, 48.4336, 0.274 ) }
    dend_29 { pt3dadd( 370.211, 500.898, 48.4397, 0.2736 ) }
    dend_29 { pt3dadd( 370.546, 501.988, 48.44, 0.2728 ) }
    dend_29 { pt3dadd( 371.051, 503.014, 48.44, 0.2712 ) }
    dend_29 { pt3dadd( 371.214, 504.146, 48.44, 0.2684 ) }
    dend_29 { pt3dadd( 371.228, 505.29, 48.44, 0.2626 ) }
    dend_29 { pt3dadd( 371.613, 506.365, 48.44, 0.2542 ) }
    dend_29 { pt3dadd( 372.118, 507.393, 48.44, 0.2288 ) }
    dend_29 { pt3dadd( 372.372, 508.508, 48.44, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 13/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 362.203, 475.918, 41.1863, 0.2816 ) }
    dend_28 { pt3dadd( 362.423, 475.936, 41.3045, 0.2288 ) }
    dend_28 { pt3dadd( 363.545, 475.851, 41.6489, 0.2746 ) }
    dend_28 { pt3dadd( 364.681, 475.896, 41.7561, 0.2746 ) }
    dend_28 { pt3dadd( 365.733, 476.341, 41.8726, 0.2746 ) }
    dend_28 { pt3dadd( 366.86, 476.53, 42.0073, 0.2746 ) }
    dend_28 { pt3dadd( 367.991, 476.608, 42.1896, 0.2746 ) }
    dend_28 { pt3dadd( 368.967, 477.16, 42.4346, 0.2746 ) }
    dend_28 { pt3dadd( 369.607, 478.085, 42.7448, 0.2746 ) }
    dend_28 { pt3dadd( 370.066, 479.073, 43.1099, 0.2746 ) }
    dend_28 { pt3dadd( 370.902, 479.731, 43.5453, 0.2746 ) }
    dend_28 { pt3dadd( 371.378, 480.725, 44.0266, 0.2746 ) }
    dend_28 { pt3dadd( 372.111, 481.435, 44.5063, 0.2746 ) }
    dend_28 { pt3dadd( 373.177, 481.592, 44.9168, 0.2746 ) }
    dend_28 { pt3dadd( 374.228, 481.393, 45.225, 0.2746 ) }
    dend_28 { pt3dadd( 374.786, 480.833, 45.6834, 0.2746 ) }
    dend_28 { pt3dadd( 375.373, 480.09, 46.1177, 0.2746 ) }
    dend_28 { pt3dadd( 376.395, 479.661, 46.3957, 0.2746 ) }
    dend_28 { pt3dadd( 377.515, 479.549, 46.6474, 0.2746 ) }
    dend_28 { pt3dadd( 378.631, 479.664, 46.9255, 0.2746 ) }
    dend_28 { pt3dadd( 379.731, 479.952, 47.1699, 0.2746 ) }
    dend_28 { pt3dadd( 380.808, 480.338, 47.3617, 0.2746 ) }
    dend_28 { pt3dadd( 381.92, 480.593, 47.5462, 0.2744 ) }
    dend_28 { pt3dadd( 383.036, 480.84, 47.7436, 0.2744 ) }
    dend_28 { pt3dadd( 383.997, 481.432, 47.9783, 0.2742 ) }
    dend_28 { pt3dadd( 384.943, 481.974, 48.33, 0.274 ) }
    dend_28 { pt3dadd( 385.915, 482.437, 48.7892, 0.2736 ) }
    dend_28 { pt3dadd( 386.86, 483.021, 49.2713, 0.2728 ) }
    dend_28 { pt3dadd( 387.513, 483.94, 49.6919, 0.2712 ) }
    dend_28 { pt3dadd( 387.544, 485.018, 50.1194, 0.2684 ) }
    dend_28 { pt3dadd( 387.919, 486.083, 50.377, 0.2626 ) }
    dend_28 { pt3dadd( 388.681, 486.921, 50.4717, 0.2542 ) }
    dend_28 { pt3dadd( 389.618, 487.564, 50.5506, 0.2288 ) }
    dend_28 { pt3dadd( 389.943, 488.659, 50.6136, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 47/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 348.371, 469.147, 37.1776, 0.397 ) }
    dend_22 { pt3dadd( 347.672, 469.09, 37.2322, 0.3324 ) }
    dend_22 { pt3dadd( 347.243, 469.623, 37.0958, 0.2878 ) }
    dend_22 { pt3dadd( 347.941, 470.374, 36.9342, 0.2988 ) }
    dend_22 { pt3dadd( 347.785, 471.441, 36.806, 0.3206 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 348.371, 469.147, 37.1776, 0.397 ) }
    dend_19 { pt3dadd( 347.934, 469.007, 37.9957, 0.4576 ) }
    dend_19 { pt3dadd( 347.179, 468.233, 38.7478, 0.385 ) }
    dend_19 { pt3dadd( 346.44, 467.367, 39.0183, 0.3424 ) }
    dend_19 { pt3dadd( 345.344, 467.154, 39.3089, 0.3786 ) }
    dend_19 { pt3dadd( 344.353, 467.525, 39.7205, 0.3434 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 58/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 348.689, 483.34, 26.0406, 0.4408 ) }
    dend_16 { pt3dadd( 348.311, 484.085, 25.3782, 0.9152 ) }
    dend_16 { pt3dadd( 347.821, 485.091, 25.0181, 0.5338 ) }
    dend_16 { pt3dadd( 347.527, 486.163, 24.9178, 0.3602 ) }
    dend_16 { pt3dadd( 347.628, 487.284, 24.8273, 0.2918 ) }
    dend_16 { pt3dadd( 347.672, 488.414, 24.6754, 0.3076 ) }
    dend_16 { pt3dadd( 347.471, 489.522, 24.4738, 0.3302 ) }
    dend_16 { pt3dadd( 347.151, 490.618, 24.2712, 0.4046 ) }
    dend_16 { pt3dadd( 346.877, 491.727, 24.082, 0.3862 ) }
    dend_16 { pt3dadd( 346.848, 492.863, 23.8868, 0.4236 ) }
    dend_16 { pt3dadd( 347.022, 493.988, 23.6907, 0.3744 ) }
    dend_16 { pt3dadd( 346.87, 495.088, 23.4605, 0.4006 ) }
    dend_16 { pt3dadd( 346.198, 495.986, 23.2437, 0.3372 ) }
    dend_16 { pt3dadd( 345.65, 496.979, 23.0358, 0.306 ) }
    dend_16 { pt3dadd( 345.288, 498.062, 22.8777, 0.286 ) }
    dend_16 { pt3dadd( 344.835, 499.108, 22.8036, 0.2954 ) }
    dend_16 { pt3dadd( 344.37, 500.149, 22.7955, 0.3142 ) }
    dend_16 { pt3dadd( 344.0, 501.217, 22.8549, 0.3438 ) }
    dend_16 { pt3dadd( 343.295, 502.068, 22.8007, 0.4232 ) }
    dend_16 { pt3dadd( 342.6, 502.969, 22.7041, 0.4514 ) }
    dend_16 { pt3dadd( 342.132, 504.012, 22.6069, 0.395 ) }
    dend_16 { pt3dadd( 341.474, 504.948, 22.5089, 0.3618 ) }
    dend_16 { pt3dadd( 340.751, 505.833, 22.4046, 0.4096 ) }
    dend_16 { pt3dadd( 339.84, 506.512, 22.351, 0.4266 ) }
    dend_16 { pt3dadd( 338.719, 506.735, 22.2889, 0.3474 ) }
    dend_16 { pt3dadd( 337.614, 506.94, 22.1396, 0.2796 ) }
    dend_16 { pt3dadd( 336.578, 507.367, 21.919, 0.2288 ) }
    dend_16 { pt3dadd( 335.479, 507.656, 21.3702, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 86/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 348.689, 483.34, 26.0406, 0.4408 ) }
    dend_15 { pt3dadd( 348.938, 484.266, 26.1041, 0.4792 ) }
    dend_15 { pt3dadd( 349.105, 485.384, 26.2283, 0.4706 ) }
    dend_15 { pt3dadd( 349.368, 486.489, 26.3752, 0.3834 ) }
    dend_15 { pt3dadd( 349.762, 487.561, 26.5217, 0.3396 ) }
    dend_15 { pt3dadd( 350.221, 488.608, 26.63, 0.3734 ) }
    dend_15 { pt3dadd( 350.358, 489.719, 26.6655, 0.3338 ) }
    dend_15 { pt3dadd( 350.454, 490.848, 26.7044, 0.3 ) }
    dend_15 { pt3dadd( 350.97, 491.834, 26.7439, 0.2746 ) }
    dend_15 { pt3dadd( 351.502, 492.843, 26.7583, 0.2746 ) }
    dend_15 { pt3dadd( 351.746, 493.947, 26.7286, 0.2746 ) }
    dend_15 { pt3dadd( 351.993, 495.059, 26.6653, 0.2746 ) }
    dend_15 { pt3dadd( 352.147, 496.189, 26.5994, 0.2746 ) }
    dend_15 { pt3dadd( 352.183, 497.33, 26.5259, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( 352.185, 498.473, 26.4639, 0.2746 ) }
    dend_15 { pt3dadd( 352.198, 499.604, 26.4847, 0.2746 ) }
    dend_15 { pt3dadd( 352.297, 500.732, 26.5746, 0.2746 ) }
    dend_15 { pt3dadd( 352.522, 501.85, 26.6615, 0.2746 ) }
    dend_15 { pt3dadd( 352.583, 502.98, 26.6915, 0.2746 ) }
    dend_15 { pt3dadd( 352.419, 504.106, 26.7102, 0.2748 ) }
    dend_15 { pt3dadd( 352.303, 505.242, 26.7494, 0.2748 ) }
    dend_15 { pt3dadd( 352.381, 506.38, 26.7922, 0.2752 ) }
    dend_15 { pt3dadd( 352.543, 507.51, 26.8577, 0.2756 ) }
    dend_15 { pt3dadd( 352.64, 508.648, 26.956, 0.2766 ) }
    dend_15 { pt3dadd( 352.765, 509.784, 27.0732, 0.2784 ) }
    dend_15 { pt3dadd( 353.053, 510.884, 27.2116, 0.2816 ) }
    dend_15 { pt3dadd( 353.279, 512.001, 27.3593, 0.2876 ) }
    dend_15 { pt3dadd( 353.332, 513.14, 27.485, 0.2988 ) }
    dend_15 { pt3dadd( 353.545, 514.26, 27.5872, 0.3192 ) }
    dend_15 { pt3dadd( 354.177, 515.198, 27.6752, 0.359 ) }
    dend_15 { pt3dadd( 354.625, 516.244, 27.7605, 0.4224 ) }
    dend_15 { pt3dadd( 354.614, 517.381, 27.8511, 0.5902 ) }
    dend_15 { pt3dadd( 354.558, 518.521, 27.9664, 0.6576 ) }
    dend_15 { pt3dadd( 354.68, 519.643, 28.1498, 0.594 ) }
    dend_15 { pt3dadd( 354.982, 520.726, 28.3864, 0.4764 ) }
    dend_15 { pt3dadd( 355.234, 521.832, 28.5401, 0.485 ) }
    dend_15 { pt3dadd( 355.466, 522.951, 28.6768, 0.5444 ) }
    dend_15 { pt3dadd( 355.737, 524.009, 28.8949, 0.4434 ) }
    dend_15 { pt3dadd( 355.865, 525.135, 29.0881, 0.366 ) }
    dend_15 { pt3dadd( 355.865, 526.279, 29.1917, 0.3756 ) }
    dend_15 { pt3dadd( 355.896, 527.422, 29.2298, 0.3378 ) }
    dend_15 { pt3dadd( 356.204, 528.513, 29.1833, 0.3074 ) }
    dend_15 { pt3dadd( 356.522, 529.352, 28.8756, 0.288 ) }
    dend_15 { pt3dadd( 356.176, 530.384, 28.5362, 0.3006 ) }
    dend_15 { pt3dadd( 355.886, 531.422, 28.4444, 0.3174 ) }
    dend_15 { pt3dadd( 355.704, 532.452, 28.5726, 0.3796 ) }
    dend_15 { pt3dadd( 355.537, 533.575, 28.7053, 0.3452 ) }
    dend_15 { pt3dadd( 355.698, 534.688, 28.8207, 0.321 ) }
    dend_15 { pt3dadd( 356.156, 535.729, 28.989, 0.313 ) }
    dend_15 { pt3dadd( 356.545, 536.785, 29.1785, 0.349 ) }
    dend_15 { pt3dadd( 356.82, 537.889, 29.2914, 0.397 ) }
    dend_15 { pt3dadd( 357.2, 538.949, 29.3098, 0.578 ) }
    dend_15 { pt3dadd( 357.762, 539.942, 29.3474, 0.4652 ) }
    dend_15 { pt3dadd( 358.333, 540.924, 29.4322, 0.3754 ) }
    dend_15 { pt3dadd( 358.828, 541.949, 29.5282, 0.3148 ) }
    dend_15 { pt3dadd( 359.218, 543.024, 29.6125, 0.3746 ) }
    dend_15 { pt3dadd( 359.572, 544.112, 29.6873, 0.336 ) }
    dend_15 { pt3dadd( 359.963, 545.187, 29.7556, 0.304 ) }
    dend_15 { pt3dadd( 360.432, 546.224, 29.8038, 0.2818 ) }
    dend_15 { pt3dadd( 361.074, 547.165, 29.8144, 0.2882 ) }
    dend_15 { pt3dadd( 361.672, 548.094, 29.8374, 0.2994 ) }
    dend_15 { pt3dadd( 361.943, 549.164, 29.976, 0.3228 ) }
    dend_15 { pt3dadd( 362.246, 550.235, 30.1647, 0.3536 ) }
    dend_15 { pt3dadd( 362.634, 551.31, 30.3145, 0.4722 ) }
    dend_15 { pt3dadd( 363.118, 552.335, 30.3873, 0.3932 ) }
    dend_15 { pt3dadd( 363.8, 553.227, 30.3436, 0.3254 ) }
    dend_15 { pt3dadd( 364.607, 554.012, 30.21, 0.2746 ) }
    dend_15 { pt3dadd( 365.532, 554.657, 30.0863, 0.2746 ) }
    dend_15 { pt3dadd( 366.279, 555.387, 30.0121, 0.2746 ) }
    dend_15 { pt3dadd( 366.642, 556.461, 29.9138, 0.2746 ) }
    dend_15 { pt3dadd( 367.053, 557.515, 29.7878, 0.2748 ) }
    dend_15 { pt3dadd( 367.478, 558.577, 29.6848, 0.275 ) }
    dend_15 { pt3dadd( 367.933, 559.62, 29.5641, 0.2752 ) }
    dend_15 { pt3dadd( 368.438, 560.632, 29.3894, 0.2758 ) }
    dend_15 { pt3dadd( 369.009, 561.592, 29.2561, 0.277 ) }
    dend_15 { pt3dadd( 369.598, 562.536, 29.1827, 0.2792 ) }
    dend_15 { pt3dadd( 370.115, 563.533, 29.0475, 0.283 ) }
    dend_15 { pt3dadd( 370.702, 564.493, 28.8926, 0.2904 ) }
    dend_15 { pt3dadd( 371.382, 565.413, 28.7804, 0.3034 ) }
    dend_15 { pt3dadd( 371.909, 566.412, 28.7025, 0.33 ) }
    dend_15 { pt3dadd( 372.251, 567.504, 28.6465, 0.3668 ) }
    dend_15 { pt3dadd( 372.621, 568.585, 28.6121, 0.4976 ) }
    dend_15 { pt3dadd( 373.038, 569.651, 28.6026, 0.4348 ) }
    dend_15 { pt3dadd( 373.514, 570.689, 28.6023, 0.4282 ) }
    dend_15 { pt3dadd( 374.08, 571.682, 28.6023, 0.3412 ) }
    dend_15 { pt3dadd( 374.728, 572.623, 28.6014, 0.3136 ) }
    dend_15 { pt3dadd( 375.462, 573.5, 28.5995, 0.2994 ) }
    dend_15 { pt3dadd( 376.185, 574.384, 28.5981, 0.3228 ) }
    dend_15 { pt3dadd( 376.82, 575.335, 28.6031, 0.3536 ) }
    dend_15 { pt3dadd( 377.417, 576.306, 28.6031, 0.4722 ) }
    dend_15 { pt3dadd( 378.013, 577.266, 28.5757, 0.3932 ) }
    dend_15 { pt3dadd( 378.682, 578.17, 28.5494, 0.3254 ) }
    dend_15 { pt3dadd( 379.509, 578.942, 28.6062, 0.2744 ) }
    dend_15 { pt3dadd( 379.495, 579.487, 28.877, 0.2744 ) }
    dend_15 { pt3dadd( 378.983, 580.257, 29.3348, 0.2742 ) }
    dend_15 { pt3dadd( 379.166, 581.229, 29.8847, 0.274 ) }
    dend_15 { pt3dadd( 379.524, 582.272, 30.3596, 0.2736 ) }
    dend_15 { pt3dadd( 379.821, 583.377, 30.6474, 0.2728 ) }
    dend_15 { pt3dadd( 380.205, 584.394, 30.7986, 0.2712 ) }
    dend_15 { pt3dadd( 380.001, 585.425, 30.7826, 0.2684 ) }
    dend_15 { pt3dadd( 379.561, 586.436, 30.4724, 0.2626 ) }
    dend_15 { pt3dadd( 379.806, 587.195, 29.7856, 0.2542 ) }
    dend_15 { pt3dadd( 380.065, 587.795, 28.8053, 0.2288 ) }
    dend_15 { pt3dadd( 379.681, 588.631, 26.3152, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 390.629, 411.068, 46.8048, 0.3446 ) }
    dend_10 { pt3dadd( 391.217, 410.603, 47.9497, 0.2288 ) }
    dend_10 { pt3dadd( 392.035, 409.861, 47.7196, 0.4422 ) }
    dend_10 { pt3dadd( 392.782, 409.02, 47.5944, 0.6514 ) }
    dend_10 { pt3dadd( 393.394, 408.086, 47.3911, 0.6524 ) }
    dend_10 { pt3dadd( 394.036, 407.174, 47.1419, 0.4734 ) }
    dend_10 { pt3dadd( 394.864, 406.412, 46.9132, 0.3328 ) }
    dend_10 { pt3dadd( 395.703, 405.68, 46.8258, 0.2884 ) }
    dend_10 { pt3dadd( 396.665, 405.119, 46.8412, 0.2996 ) }
    dend_10 { pt3dadd( 397.348, 404.274, 46.8591, 0.3232 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 397.789, 403.222, 46.898, 0.3542 ) }
    dend_10 { pt3dadd( 398.149, 402.201, 47.0635, 0.4734 ) }
    dend_10 { pt3dadd( 398.72, 401.242, 47.1593, 0.3954 ) }
    dend_10 { pt3dadd( 399.474, 400.394, 47.1747, 0.3294 ) }
    dend_10 { pt3dadd( 400.351, 399.664, 47.1831, 0.2818 ) }
    dend_10 { pt3dadd( 401.333, 399.107, 47.2354, 0.2882 ) }
    dend_10 { pt3dadd( 402.314, 398.523, 47.2629, 0.2994 ) }
    dend_10 { pt3dadd( 403.33, 398.007, 47.22, 0.3228 ) }
    dend_10 { pt3dadd( 404.364, 397.518, 47.1764, 0.3534 ) }
    dend_10 { pt3dadd( 405.352, 396.983, 47.0526, 0.4718 ) }
    dend_10 { pt3dadd( 406.193, 396.245, 46.858, 0.3922 ) }
    dend_10 { pt3dadd( 406.876, 395.329, 46.7071, 0.3236 ) }
    dend_10 { pt3dadd( 407.748, 394.589, 46.5979, 0.2712 ) }
    dend_10 { pt3dadd( 408.719, 393.984, 46.5282, 0.2684 ) }
    dend_10 { pt3dadd( 409.813, 393.65, 46.489, 0.2626 ) }
    dend_10 { pt3dadd( 410.699, 392.928, 46.478, 0.2542 ) }
    dend_10 { pt3dadd( 411.84, 392.85, 46.4797, 0.2288 ) }
    dend_10 { pt3dadd( 412.984, 392.85, 46.48, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 390.629, 411.068, 46.8048, 0.3446 ) }
    dend_9 { pt3dadd( 390.494, 410.547, 46.7552, 0.3096 ) }
    dend_9 { pt3dadd( 390.28, 409.427, 46.7342, 0.3418 ) }
    dend_9 { pt3dadd( 390.302, 408.284, 46.7197, 0.3882 ) }
    dend_9 { pt3dadd( 390.419, 407.151, 46.7194, 0.5384 ) }
    dend_9 { pt3dadd( 390.401, 406.036, 46.7737, 0.5054 ) }
    dend_9 { pt3dadd( 390.103, 404.955, 46.741, 0.5848 ) }
    dend_9 { pt3dadd( 389.966, 403.823, 46.716, 0.5056 ) }
    dend_9 { pt3dadd( 390.047, 402.683, 46.6936, 0.5434 ) }
    dend_9 { pt3dadd( 390.345, 401.598, 46.6729, 0.6316 ) }
    dend_9 { pt3dadd( 391.06, 400.717, 46.6348, 0.48 ) }
    dend_9 { pt3dadd( 391.726, 399.893, 46.5592, 0.3546 ) }
    dend_9 { pt3dadd( 391.784, 398.778, 46.6043, 0.2814 ) }
    dend_9 { pt3dadd( 391.896, 397.675, 46.6676, 0.2872 ) }
    dend_9 { pt3dadd( 392.24, 396.613, 46.6609, 0.2988 ) }
    dend_9 { pt3dadd( 392.774, 395.602, 46.6628, 0.3144 ) }
    dend_9 { pt3dadd( 393.251, 394.569, 46.6603, 0.374 ) }
    dend_9 { pt3dadd( 393.537, 393.465, 46.6351, 0.335 ) }
    dend_9 { pt3dadd( 393.758, 392.345, 46.5819, 0.302 ) }
    dend_9 { pt3dadd( 394.168, 391.302, 46.4976, 0.2782 ) }
    dend_9 { pt3dadd( 394.617, 390.285, 46.3593, 0.2814 ) }
    dend_9 { pt3dadd( 394.916, 389.22, 46.2958, 0.287 ) }
    dend_9 { pt3dadd( 395.325, 388.182, 46.3207, 0.2988 ) }
    dend_9 { pt3dadd( 395.716, 387.119, 46.3151, 0.3142 ) }
    dend_9 { pt3dadd( 395.958, 386.011, 46.3044, 0.3736 ) }
    dend_9 { pt3dadd( 395.792, 384.921, 46.324, 0.3342 ) }
    dend_9 { pt3dadd( 395.357, 383.863, 46.3358, 0.3006 ) }
    dend_9 { pt3dadd( 395.061, 382.81, 46.2356, 0.2756 ) }
    dend_9 { pt3dadd( 395.035, 381.709, 46.0634, 0.2766 ) }
    dend_9 { pt3dadd( 395.293, 380.651, 46.0116, 0.2782 ) }
    dend_9 { pt3dadd( 395.515, 379.58, 46.0894, 0.2814 ) }
    dend_9 { pt3dadd( 395.478, 378.457, 46.1294, 0.287 ) }
    dend_9 { pt3dadd( 395.525, 377.32, 46.1496, 0.2986 ) }
    dend_9 { pt3dadd( 395.896, 376.249, 46.1647, 0.3138 ) }
    dend_9 { pt3dadd( 396.325, 375.229, 46.0614, 0.3728 ) }
    dend_9 { pt3dadd( 396.712, 374.188, 45.8581, 0.3328 ) }
    dend_9 { pt3dadd( 397.009, 373.092, 45.6686, 0.2982 ) }
    dend_9 { pt3dadd( 397.625, 372.142, 45.5624, 0.2712 ) }
    dend_9 { pt3dadd( 398.483, 371.39, 45.5356, 0.2684 ) }
    dend_9 { pt3dadd( 399.095, 370.452, 45.6352, 0.2626 ) }
    dend_9 { pt3dadd( 399.293, 369.354, 45.8461, 0.2542 ) }
    dend_9 { pt3dadd( 399.477, 368.25, 46.1286, 0.2288 ) }
    dend_9 { pt3dadd( 400.47, 367.81, 46.6768, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 61/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 408.25, 484.768, 29.0186, 0.35 ) }
    dend_6 { pt3dadd( 408.453, 485.23, 28.3847, 0.2288 ) }
    dend_6 { pt3dadd( 409.083, 486.095, 28.0921, 0.3758 ) }
    dend_6 { pt3dadd( 410.012, 486.753, 27.9855, 0.3382 ) }
    dend_6 { pt3dadd( 410.765, 487.583, 27.9854, 0.308 ) }
    dend_6 { pt3dadd( 411.286, 488.578, 28.0577, 0.289 ) }
    dend_6 { pt3dadd( 411.734, 489.629, 28.0916, 0.3024 ) }
    dend_6 { pt3dadd( 412.241, 490.647, 28.0781, 0.321 ) }
    dend_6 { pt3dadd( 412.818, 491.623, 28.0372, 0.386 ) }
    dend_6 { pt3dadd( 413.454, 492.545, 28.0428, 0.3584 ) }
    dend_6 { pt3dadd( 414.273, 493.337, 27.9917, 0.3402 ) }
    dend_6 { pt3dadd( 414.989, 494.199, 27.9069, 0.3748 ) }
    dend_6 { pt3dadd( 415.489, 495.16, 27.8981, 0.3364 ) }
    dend_6 { pt3dadd( 415.774, 496.173, 27.738, 0.3046 ) }
    dend_6 { pt3dadd( 416.318, 497.002, 27.4953, 0.2832 ) }
    dend_6 { pt3dadd( 417.062, 497.827, 27.4017, 0.2904 ) }
    dend_6 { pt3dadd( 417.814, 498.662, 27.3784, 0.3042 ) }
    dend_6 { pt3dadd( 418.698, 499.367, 27.333, 0.3286 ) }
    dend_6 { pt3dadd( 419.684, 499.936, 27.2611, 0.379 ) }
    dend_6 { pt3dadd( 420.573, 500.628, 27.2026, 0.447 ) }
    dend_6 { pt3dadd( 421.227, 501.552, 27.173, 0.6976 ) }
    dend_6 { pt3dadd( 421.776, 502.55, 27.1576, 0.5576 ) }
    dend_6 { pt3dadd( 422.444, 503.466, 27.1398, 0.4868 ) }
    dend_6 { pt3dadd( 423.201, 504.324, 27.1101, 0.3554 ) }
    dend_6 { pt3dadd( 423.935, 505.141, 26.9777, 0.3406 ) }
    dend_6 { pt3dadd( 424.715, 505.901, 26.7227, 0.3456 ) }
    dend_6 { pt3dadd( 425.426, 506.769, 26.4649, 0.4268 ) }
    dend_6 { pt3dadd( 426.219, 507.578, 26.2339, 0.4578 ) }
    dend_6 { pt3dadd( 426.99, 508.405, 26.0872, 0.408 ) }
    dend_6 { pt3dadd( 427.617, 509.304, 26.098, 0.3796 ) }
    dend_6 { pt3dadd( 428.326, 510.076, 26.0494, 0.4732 ) }
    dend_6 { pt3dadd( 428.796, 511.053, 25.9699, 0.395 ) }
    dend_6 { pt3dadd( 429.414, 511.996, 25.8952, 0.3286 ) }
    dend_6 { pt3dadd( 430.365, 512.578, 25.7642, 0.2806 ) }
    dend_6 { pt3dadd( 431.155, 513.375, 25.7079, 0.2858 ) }
    dend_6 { pt3dadd( 431.841, 514.274, 25.5939, 0.2956 ) }
    dend_6 { pt3dadd( 432.288, 515.325, 25.5075, 0.3132 ) }
    dend_6 { pt3dadd( 432.598, 516.423, 25.4397, 0.348 ) }
    dend_6 { pt3dadd( 432.87, 517.512, 25.3188, 0.4022 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( 433.504, 518.378, 25.0956, 0.5518 ) }
    dend_6 { pt3dadd( 434.412, 519.004, 24.8306, 0.5916 ) }
    dend_6 { pt3dadd( 435.14, 519.718, 24.7152, 0.4454 ) }
    dend_6 { pt3dadd( 435.317, 520.573, 24.8412, 0.328 ) }
    dend_6 { pt3dadd( 435.918, 521.33, 24.8551, 0.2792 ) }
    dend_6 { pt3dadd( 436.965, 521.646, 24.903, 0.2832 ) }
    dend_6 { pt3dadd( 437.823, 521.956, 25.1965, 0.2906 ) }
    dend_6 { pt3dadd( 438.097, 522.541, 25.7671, 0.3038 ) }
    dend_6 { pt3dadd( 438.457, 523.451, 26.2123, 0.3304 ) }
    dend_6 { pt3dadd( 438.387, 524.206, 26.2398, 0.37 ) }
    dend_6 { pt3dadd( 438.838, 524.873, 25.9767, 0.4914 ) }
    dend_6 { pt3dadd( 439.178, 525.927, 25.8455, 0.483 ) }
    dend_6 { pt3dadd( 439.83, 526.423, 26.4314, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 13/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 408.25, 484.768, 29.0186, 0.35 ) }
    dend_5 { pt3dadd( 408.824, 485.223, 29.4409, 0.3926 ) }
    dend_5 { pt3dadd( 409.829, 485.761, 29.8175, 0.3696 ) }
    dend_5 { pt3dadd( 410.813, 486.332, 30.0989, 0.366 ) }
    dend_5 { pt3dadd( 411.626, 487.129, 30.3262, 0.3992 ) }
    dend_5 { pt3dadd( 412.345, 488.002, 30.5239, 0.4942 ) }
    dend_5 { pt3dadd( 413.161, 488.8, 30.655, 0.7372 ) }
    dend_5 { pt3dadd( 414.039, 489.534, 30.7194, 0.8626 ) }
    dend_5 { pt3dadd( 414.915, 490.263, 30.739, 0.615 ) }
    dend_5 { pt3dadd( 415.81, 490.976, 30.7633, 0.427 ) }
    dend_5 { pt3dadd( 416.736, 491.629, 30.805, 0.3654 ) }
    dend_5 { pt3dadd( 417.775, 492.08, 30.8081, 0.458 ) }
    dend_5 { pt3dadd( 418.885, 492.327, 30.842, 0.542 ) }
    dend_5 { pt3dadd( 419.991, 492.494, 30.963, 0.4378 ) }
    dend_5 { pt3dadd( 421.122, 492.532, 31.0786, 0.3606 ) }
    dend_5 { pt3dadd( 422.209, 492.834, 31.1853, 0.342 ) }
    dend_5 { pt3dadd( 423.247, 493.269, 31.3723, 0.3886 ) }
    dend_5 { pt3dadd( 424.318, 493.555, 31.6047, 0.539 ) }
    dend_5 { pt3dadd( 425.42, 493.457, 31.8338, 0.5074 ) }
    dend_5 { pt3dadd( 426.458, 493.093, 32.1395, 0.5826 ) }
    dend_5 { pt3dadd( 427.432, 492.665, 32.3898, 0.5302 ) }
    dend_5 { pt3dadd( 428.363, 492.122, 32.5184, 0.4504 ) }
    dend_5 { pt3dadd( 429.358, 491.617, 32.7068, 0.4466 ) }
    dend_5 { pt3dadd( 430.443, 491.397, 32.9204, 0.4256 ) }
    dend_5 { pt3dadd( 431.55, 491.187, 33.1274, 0.454 ) }
    dend_5 { pt3dadd( 432.631, 490.873, 33.39, 0.6376 ) }
    dend_5 { pt3dadd( 433.724, 490.933, 33.7072, 0.5722 ) }
    dend_5 { pt3dadd( 434.823, 491.238, 34.0099, 0.5896 ) }
    dend_5 { pt3dadd( 435.937, 491.486, 34.2899, 0.6348 ) }
    dend_5 { pt3dadd( 437.053, 491.61, 34.6279, 0.6558 ) }
    dend_5 { pt3dadd( 438.133, 491.54, 35.07, 0.543 ) }
    dend_5 { pt3dadd( 439.083, 491.727, 35.637, 0.3848 ) }
    dend_5 { pt3dadd( 440.052, 492.141, 36.2404, 0.3 ) }
    dend_5 { pt3dadd( 441.13, 492.438, 36.7097, 0.2746 ) }
    dend_5 { pt3dadd( 442.22, 492.275, 37.011, 0.2746 ) }
    dend_5 { pt3dadd( 443.338, 492.233, 37.219, 0.2746 ) }
    dend_5 { pt3dadd( 444.477, 492.203, 37.3478, 0.2746 ) }
    dend_5 { pt3dadd( 445.61, 492.309, 37.4237, 0.2746 ) }
    dend_5 { pt3dadd( 446.668, 492.699, 37.5245, 0.2746 ) }
    dend_5 { pt3dadd( 447.685, 493.19, 37.6877, 0.2746 ) }
    dend_5 { pt3dadd( 448.715, 493.67, 37.821, 0.2746 ) }
    dend_5 { pt3dadd( 449.756, 494.139, 37.9028, 0.2744 ) }
    dend_5 { pt3dadd( 450.805, 494.589, 37.9912, 0.2744 ) }
    dend_5 { pt3dadd( 451.908, 494.818, 38.1284, 0.2742 ) }
    dend_5 { pt3dadd( 452.969, 494.461, 38.2598, 0.274 ) }
    dend_5 { pt3dadd( 454.059, 494.181, 38.3205, 0.2736 ) }
    dend_5 { pt3dadd( 455.188, 494.203, 38.4714, 0.2728 ) }
    dend_5 { pt3dadd( 456.225, 494.678, 38.6747, 0.2712 ) }
    dend_5 { pt3dadd( 457.364, 494.612, 38.9169, 0.2684 ) }
    dend_5 { pt3dadd( 458.471, 494.609, 39.2616, 0.2626 ) }
    dend_5 { pt3dadd( 459.593, 494.737, 39.639, 0.2542 ) }
    dend_5 { pt3dadd( 460.69, 494.826, 40.0744, 0.2288 ) }
    dend_5 { pt3dadd( 461.798, 494.838, 41.0533, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 66/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 394.214, 460.048, 30.0619, 0.543 ) }
    dend_3 { pt3dadd( 395.349, 459.758, 29.3104, 0.2288 ) }
    dend_3 { pt3dadd( 396.275, 459.166, 27.8128, 0.2684 ) }
    dend_3 { pt3dadd( 397.28, 458.671, 27.2781, 0.2626 ) }
    dend_3 { pt3dadd( 398.308, 458.63, 26.5704, 0.2542 ) }
    dend_3 { pt3dadd( 398.772, 459.076, 25.5989, 0.2288 ) }
    dend_3 { pt3dadd( 398.798, 459.774, 22.96, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 73/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 394.214, 460.048, 30.0619, 0.543 ) }
    dend_2 { pt3dadd( 395.382, 460.175, 29.8763, 0.4536 ) }
    dend_2 { pt3dadd( 396.381, 460.281, 29.5621, 0.5526 ) }
    dend_2 { pt3dadd( 397.435, 460.458, 29.4557, 0.5934 ) }
    dend_2 { pt3dadd( 398.35, 460.513, 29.6604, 0.4484 ) }
    dend_2 { pt3dadd( 399.405, 460.77, 29.7867, 0.3338 ) }
    dend_2 { pt3dadd( 400.239, 461.12, 29.6649, 0.2898 ) }
    dend_2 { pt3dadd( 401.356, 461.249, 29.6139, 0.3038 ) }
    dend_2 { pt3dadd( 402.43, 461.578, 29.6419, 0.3236 ) }
    dend_2 { pt3dadd( 403.552, 461.754, 29.6268, 0.3906 ) }
    dend_2 { pt3dadd( 404.695, 461.731, 29.5784, 0.367 ) }
    dend_2 { pt3dadd( 405.827, 461.802, 29.5375, 0.356 ) }
    dend_2 { pt3dadd( 406.924, 462.107, 29.4918, 0.405 ) }
    dend_2 { pt3dadd( 408.009, 462.463, 29.4272, 0.387 ) }
    dend_2 { pt3dadd( 409.118, 462.72, 29.3608, 0.4238 ) }
    dend_2 { pt3dadd( 410.253, 462.795, 29.3278, 0.3822 ) }
    dend_2 { pt3dadd( 411.372, 462.637, 29.374, 0.3792 ) }
    dend_2 { pt3dadd( 412.412, 462.233, 29.5224, 0.4724 ) }
    dend_2 { pt3dadd( 413.364, 461.644, 29.7307, 0.3934 ) }
    dend_2 { pt3dadd( 414.083, 460.814, 29.8964, 0.3256 ) }
    dend_2 { pt3dadd( 414.533, 459.795, 30.0283, 0.275 ) }
    dend_2 { pt3dadd( 415.32, 459.183, 30.1255, 0.2754 ) }
    dend_2 { pt3dadd( 416.244, 458.635, 30.0849, 0.276 ) }
    dend_2 { pt3dadd( 416.792, 457.67, 29.9757, 0.2772 ) }
    dend_2 { pt3dadd( 417.266, 456.866, 29.7175, 0.2792 ) }
    dend_2 { pt3dadd( 417.979, 456.155, 29.4076, 0.2834 ) }
    dend_2 { pt3dadd( 418.427, 455.14, 29.2485, 0.2906 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 418.553, 454.359, 29.5526, 0.3056 ) }
    dend_2 { pt3dadd( 419.299, 453.75, 30.1812, 0.3266 ) }
    dend_2 { pt3dadd( 420.101, 453.08, 30.9966, 0.3976 ) }
    dend_2 { pt3dadd( 420.781, 452.212, 31.8718, 0.3736 ) }
    dend_2 { pt3dadd( 421.292, 451.255, 32.762, 0.3992 ) }
    dend_2 { pt3dadd( 421.526, 450.308, 33.6857, 0.3346 ) }
    dend_2 { pt3dadd( 421.856, 449.372, 34.566, 0.3012 ) }
    dend_2 { pt3dadd( 422.337, 448.503, 35.0476, 0.277 ) }
    dend_2 { pt3dadd( 423.336, 448.105, 35.4628, 0.279 ) }
    dend_2 { pt3dadd( 424.226, 448.501, 35.9976, 0.2826 ) }
    dend_2 { pt3dadd( 425.32, 448.684, 36.4496, 0.2896 ) }
    dend_2 { pt3dadd( 426.358, 448.56, 37.0236, 0.302 ) }
    dend_2 { pt3dadd( 427.338, 448.508, 37.7465, 0.3276 ) }
    dend_2 { pt3dadd( 428.35, 448.68, 38.5608, 0.3622 ) }
    dend_2 { pt3dadd( 429.395, 449.036, 39.2781, 0.488 ) }
    dend_2 { pt3dadd( 430.414, 449.55, 39.8496, 0.4234 ) }
    dend_2 { pt3dadd( 431.342, 450.199, 40.3382, 0.3762 ) }
    dend_2 { pt3dadd( 432.237, 450.905, 40.7299, 0.3942 ) }
    dend_2 { pt3dadd( 433.232, 451.44, 41.0726, 0.3722 ) }
    dend_2 { pt3dadd( 433.917, 452.189, 41.477, 0.3726 ) }
    dend_2 { pt3dadd( 433.995, 453.248, 41.9569, 0.401 ) }
    dend_2 { pt3dadd( 434.094, 454.344, 42.3606, 0.5496 ) }
    dend_2 { pt3dadd( 433.931, 455.404, 42.7952, 0.5876 ) }
    dend_2 { pt3dadd( 433.938, 456.285, 43.4162, 0.4378 ) }
    dend_2 { pt3dadd( 434.568, 457.143, 43.9866, 0.3136 ) }
    dend_2 { pt3dadd( 435.64, 457.495, 44.4282, 0.2542 ) }
    dend_2 { pt3dadd( 436.63, 457.933, 44.8829, 0.2288 ) }
    dend_2 { pt3dadd( 437.771, 457.989, 45.5521, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_1 (entry count 28/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 358.158, 434.671, 33.3668, 0.531 ) }
    apic_19 { pt3dadd( 357.762, 433.709, 34.1754, 0.9152 ) }
    apic_19 { pt3dadd( 356.811, 433.13, 33.0506, 0.5776 ) }
    apic_19 { pt3dadd( 355.792, 432.754, 32.5514, 0.4306 ) }
    apic_19 { pt3dadd( 354.77, 432.262, 32.0118, 0.4738 ) }
    apic_19 { pt3dadd( 353.831, 431.756, 31.3432, 0.3958 ) }
    apic_19 { pt3dadd( 352.941, 431.34, 30.5262, 0.3302 ) }
    apic_19 { pt3dadd( 352.032, 430.668, 29.7556, 0.2836 ) }
    apic_19 { pt3dadd( 351.171, 430.391, 28.9982, 0.2912 ) }
    apic_19 { pt3dadd( 350.275, 430.732, 28.1327, 0.3066 ) }
    apic_19 { pt3dadd( 349.46, 430.255, 27.2546, 0.3286 ) }
    apic_19 { pt3dadd( 348.628, 429.522, 26.4205, 0.4002 ) }
    apic_19 { pt3dadd( 348.029, 428.619, 25.6294, 0.3842 ) }
    apic_19 { pt3dadd( 347.895, 427.559, 24.8417, 0.3898 ) }
    apic_19 { pt3dadd( 346.907, 427.125, 24.2528, 0.4576 ) }
    apic_19 { pt3dadd( 345.835, 426.871, 23.6939, 0.5338 ) }
    apic_19 { pt3dadd( 345.32, 426.403, 21.9327, 1.144 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 45/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 358.158, 434.671, 33.3668, 0.531 ) }
    apic_2 { pt3dadd( 357.844, 433.426, 33.5569, 0.5602 ) }
    apic_2 { pt3dadd( 357.469, 432.346, 33.6904, 0.81 ) }
    apic_2 { pt3dadd( 356.903, 431.357, 33.8246, 0.7822 ) }
    apic_2 { pt3dadd( 356.0, 430.661, 33.9576, 0.8246 ) }
    apic_2 { pt3dadd( 354.993, 430.118, 34.0514, 0.6766 ) }
    apic_2 { pt3dadd( 354.094, 429.411, 34.1138, 0.5866 ) }
    apic_2 { pt3dadd( 353.315, 428.576, 34.1709, 0.6682 ) }
    apic_2 { pt3dadd( 352.765, 427.575, 34.1827, 0.7582 ) }
    apic_2 { pt3dadd( 352.651, 426.437, 34.1558, 0.7644 ) }
    apic_2 { pt3dadd( 352.342, 425.336, 34.1132, 0.8694 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 347.785, 471.441, 36.806, 0.3206 ) }
    dend_26 { pt3dadd( 347.599, 471.534, 39.2171, 0.2288 ) }
    dend_26 { pt3dadd( 347.761, 472.229, 40.4673, 0.2998 ) }
    dend_26 { pt3dadd( 347.779, 473.09, 40.7893, 0.3234 ) }
    dend_26 { pt3dadd( 347.479, 474.117, 41.1421, 0.3548 ) }
    dend_26 { pt3dadd( 347.747, 474.987, 41.7362, 0.4742 ) }
    dend_26 { pt3dadd( 348.427, 475.71, 42.4805, 0.3968 ) }
    dend_26 { pt3dadd( 349.176, 476.447, 43.2796, 0.3322 ) }
    dend_26 { pt3dadd( 349.771, 477.395, 44.0023, 0.287 ) }
    dend_26 { pt3dadd( 350.296, 478.365, 44.7132, 0.2988 ) }
    dend_26 { pt3dadd( 351.292, 478.873, 45.2992, 0.3142 ) }
    dend_26 { pt3dadd( 351.504, 479.909, 45.8287, 0.3734 ) }
    dend_26 { pt3dadd( 352.249, 480.574, 46.2868, 0.3338 ) }
    dend_26 { pt3dadd( 353.2, 481.171, 46.6094, 0.3 ) }
    dend_26 { pt3dadd( 353.91, 482.054, 46.823, 0.2746 ) }
    dend_26 { pt3dadd( 354.486, 483.043, 46.9496, 0.2746 ) }
    dend_26 { pt3dadd( 355.037, 484.045, 47.0165, 0.2746 ) }
    dend_26 { pt3dadd( 355.388, 485.12, 47.038, 0.2746 ) }
    dend_26 { pt3dadd( 356.092, 485.911, 47.04, 0.2746 ) }
    dend_26 { pt3dadd( 357.145, 486.332, 47.04, 0.2746 ) }
    dend_26 { pt3dadd( 358.0, 487.027, 47.04, 0.2746 ) }
    dend_26 { pt3dadd( 358.966, 487.593, 47.04, 0.2746 ) }
    dend_26 { pt3dadd( 359.607, 488.479, 47.04, 0.2744 ) }
    dend_26 { pt3dadd( 359.809, 489.592, 47.04, 0.2744 ) }
    dend_26 { pt3dadd( 360.43, 490.511, 47.04, 0.2742 ) }
    dend_26 { pt3dadd( 360.756, 491.593, 47.04, 0.274 ) }
    dend_26 { pt3dadd( 361.075, 492.691, 47.04, 0.2736 ) }
    dend_26 { pt3dadd( 361.285, 493.815, 47.04, 0.2728 ) }
    dend_26 { pt3dadd( 361.59, 494.917, 47.04, 0.2712 ) }
    dend_26 { pt3dadd( 362.013, 495.98, 47.04, 0.2684 ) }
    dend_26 { pt3dadd( 362.268, 497.094, 47.04, 0.2626 ) }
    dend_26 { pt3dadd( 362.415, 498.228, 47.04, 0.2542 ) }
    dend_26 { pt3dadd( 362.465, 499.371, 47.04, 0.2288 ) }
    dend_26 { pt3dadd( 362.648, 500.5, 47.04, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 90/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 347.785, 471.441, 36.806, 0.3206 ) }
    dend_23 { pt3dadd( 346.887, 472.218, 36.5406, 0.354 ) }
    dend_23 { pt3dadd( 345.824, 472.634, 36.3107, 0.4506 ) }
    dend_23 { pt3dadd( 344.733, 472.934, 36.1253, 0.4612 ) }
    dend_23 { pt3dadd( 343.876, 473.64, 35.9425, 0.6128 ) }
    dend_23 { pt3dadd( 343.421, 474.679, 35.7487, 0.4822 ) }
    dend_23 { pt3dadd( 342.883, 475.674, 35.6042, 0.4068 ) }
    dend_23 { pt3dadd( 342.602, 476.759, 35.4295, 0.3748 ) }
    dend_23 { pt3dadd( 342.534, 477.866, 35.254, 0.4766 ) }
    dend_23 { pt3dadd( 342.057, 478.873, 34.9877, 0.5712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( 341.716, 479.938, 34.6822, 0.5174 ) }
    dend_23 { pt3dadd( 341.278, 480.973, 34.41, 0.3848 ) }
    dend_23 { pt3dadd( 340.485, 481.539, 34.0542, 0.3 ) }
    dend_23 { pt3dadd( 339.376, 481.639, 33.6874, 0.2746 ) }
    dend_23 { pt3dadd( 338.245, 481.724, 33.4085, 0.2746 ) }
    dend_23 { pt3dadd( 337.118, 481.737, 33.1965, 0.2748 ) }
    dend_23 { pt3dadd( 336.034, 481.978, 32.9756, 0.275 ) }
    dend_23 { pt3dadd( 334.98, 482.417, 32.7922, 0.2754 ) }
    dend_23 { pt3dadd( 333.913, 482.828, 32.6682, 0.276 ) }
    dend_23 { pt3dadd( 332.998, 483.448, 32.5685, 0.2772 ) }
    dend_23 { pt3dadd( 332.297, 484.342, 32.459, 0.2792 ) }
    dend_23 { pt3dadd( 331.733, 485.327, 32.366, 0.2834 ) }
    dend_23 { pt3dadd( 331.278, 486.377, 32.3187, 0.2906 ) }
    dend_23 { pt3dadd( 330.748, 487.383, 32.3187, 0.3056 ) }
    dend_23 { pt3dadd( 330.004, 488.233, 32.3733, 0.3266 ) }
    dend_23 { pt3dadd( 329.072, 488.878, 32.4646, 0.3976 ) }
    dend_23 { pt3dadd( 328.06, 489.399, 32.5822, 0.3736 ) }
    dend_23 { pt3dadd( 327.091, 489.988, 32.6964, 0.399 ) }
    dend_23 { pt3dadd( 326.222, 490.726, 32.7634, 0.3342 ) }
    dend_23 { pt3dadd( 325.457, 491.573, 32.7729, 0.3006 ) }
    dend_23 { pt3dadd( 324.541, 492.089, 32.6836, 0.2758 ) }
    dend_23 { pt3dadd( 323.439, 492.315, 32.4957, 0.2768 ) }
    dend_23 { pt3dadd( 322.629, 492.993, 32.2731, 0.2786 ) }
    dend_23 { pt3dadd( 322.034, 493.966, 32.0771, 0.2822 ) }
    dend_23 { pt3dadd( 321.234, 494.732, 31.862, 0.2888 ) }
    dend_23 { pt3dadd( 320.315, 495.382, 31.5843, 0.301 ) }
    dend_23 { pt3dadd( 319.546, 496.209, 31.316, 0.3228 ) }
    dend_23 { pt3dadd( 318.827, 497.062, 30.9946, 0.367 ) }
    dend_23 { pt3dadd( 318.2, 497.993, 30.6362, 0.4314 ) }
    dend_23 { pt3dadd( 317.558, 498.928, 30.275, 0.6364 ) }
    dend_23 { pt3dadd( 316.978, 499.909, 29.9463, 0.6012 ) }
    dend_23 { pt3dadd( 316.187, 500.724, 29.6677, 0.492 ) }
    dend_23 { pt3dadd( 315.111, 500.849, 29.3622, 0.5028 ) }
    dend_23 { pt3dadd( 313.992, 501.008, 29.08, 0.4026 ) }
    dend_23 { pt3dadd( 312.903, 501.323, 28.8336, 0.3428 ) }
    dend_23 { pt3dadd( 311.893, 501.827, 28.6194, 0.3064 ) }
    dend_23 { pt3dadd( 311.194, 502.714, 28.5625, 0.3354 ) }
    dend_23 { pt3dadd( 310.458, 503.588, 28.5718, 0.378 ) }
    dend_23 { pt3dadd( 309.663, 504.406, 28.6919, 0.5122 ) }
    dend_23 { pt3dadd( 308.807, 505.163, 28.8705, 0.4926 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 344.353, 467.525, 39.7205, 0.3434 ) }
    dend_21 { pt3dadd( 343.373, 467.537, 40.5863, 0.2288 ) }
    dend_21 { pt3dadd( 342.27, 467.669, 41.5316, 0.2994 ) }
    dend_21 { pt3dadd( 341.133, 467.65, 41.8883, 0.3228 ) }
    dend_21 { pt3dadd( 340.052, 467.589, 42.334, 0.3536 ) }
    dend_21 { pt3dadd( 339.206, 467.172, 42.9506, 0.4722 ) }
    dend_21 { pt3dadd( 338.383, 466.742, 43.6758, 0.3932 ) }
    dend_21 { pt3dadd( 337.327, 466.681, 44.3607, 0.3254 ) }
    dend_21 { pt3dadd( 336.232, 466.451, 44.8832, 0.2746 ) }
    dend_21 { pt3dadd( 335.195, 465.975, 45.2648, 0.2746 ) }
    dend_21 { pt3dadd( 334.122, 465.637, 45.4748, 0.2746 ) }
    dend_21 { pt3dadd( 332.991, 465.531, 45.5137, 0.2746 ) }
    dend_21 { pt3dadd( 331.849, 465.481, 45.4614, 0.2746 ) }
    dend_21 { pt3dadd( 330.896, 465.019, 45.3446, 0.2746 ) }
    dend_21 { pt3dadd( 330.103, 464.208, 45.1842, 0.2746 ) }
    dend_21 { pt3dadd( 329.248, 463.456, 45.0363, 0.2746 ) }
    dend_21 { pt3dadd( 328.334, 462.767, 44.9302, 0.2746 ) }
    dend_21 { pt3dadd( 327.391, 462.121, 44.8616, 0.2746 ) }
    dend_21 { pt3dadd( 326.344, 461.716, 44.8213, 0.2746 ) }
    dend_21 { pt3dadd( 325.214, 461.539, 44.8036, 0.2746 ) }
    dend_21 { pt3dadd( 324.101, 461.29, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 323.001, 460.976, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 321.907, 460.644, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 320.821, 460.285, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 319.885, 459.675, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 319.24, 458.749, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 318.448, 457.983, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 317.74, 457.139, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 317.204, 456.129, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 316.56, 455.188, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 315.985, 454.207, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 315.401, 453.227, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 314.668, 452.354, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 313.87, 451.533, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 313.14, 450.655, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 312.282, 449.922, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 311.607, 449.037, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 310.9, 448.145, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 310.105, 447.322, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 309.288, 446.523, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 308.393, 445.813, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 307.509, 445.086, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 306.509, 444.548, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 305.591, 443.873, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 304.658, 443.213, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 303.854, 442.405, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 303.074, 441.568, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 302.455, 440.612, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 302.103, 439.53, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 301.57, 438.525, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 300.891, 437.605, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 300.27, 436.647, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 299.412, 435.906, 44.8, 0.2746 ) }
    dend_21 { pt3dadd( 298.372, 435.442, 44.8, 0.2744 ) }
    dend_21 { pt3dadd( 297.477, 434.739, 44.8, 0.2744 ) }
    dend_21 { pt3dadd( 296.609, 433.995, 44.8, 0.2742 ) }
    dend_21 { pt3dadd( 295.655, 433.364, 44.8, 0.274 ) }
    dend_21 { pt3dadd( 294.831, 432.576, 44.8, 0.2736 ) }
    dend_21 { pt3dadd( 294.127, 431.675, 44.8, 0.2728 ) }
    dend_21 { pt3dadd( 293.436, 430.763, 44.8, 0.2712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 292.986, 429.714, 44.8, 0.2684 ) }
    dend_21 { pt3dadd( 292.004, 429.167, 44.8, 0.2626 ) }
    dend_21 { pt3dadd( 290.923, 428.794, 44.8, 0.2542 ) }
    dend_21 { pt3dadd( 290.084, 428.017, 44.8, 0.2288 ) }
    dend_21 { pt3dadd( 288.974, 427.742, 44.8, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 5/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 344.353, 467.525, 39.7205, 0.3434 ) }
    dend_20 { pt3dadd( 343.947, 467.394, 40.1405, 0.3178 ) }
    dend_20 { pt3dadd( 343.524, 466.552, 40.595, 0.307 ) }
    dend_20 { pt3dadd( 343.307, 465.441, 40.9394, 0.3372 ) }
    dend_20 { pt3dadd( 342.835, 464.435, 41.1149, 0.3796 ) }
    dend_20 { pt3dadd( 342.2, 463.529, 41.2712, 0.5226 ) }
    dend_20 { pt3dadd( 341.597, 462.572, 41.3848, 0.4758 ) }
    dend_20 { pt3dadd( 340.893, 461.676, 41.4456, 0.5298 ) }
    dend_20 { pt3dadd( 340.1, 460.852, 41.4618, 0.4054 ) }
    dend_20 { pt3dadd( 339.346, 459.999, 41.4372, 0.3482 ) }
    dend_20 { pt3dadd( 338.571, 459.16, 41.3988, 0.3164 ) }
    dend_20 { pt3dadd( 337.756, 458.365, 41.3913, 0.354 ) }
    dend_20 { pt3dadd( 337.042, 457.478, 41.403, 0.412 ) }
    dend_20 { pt3dadd( 336.486, 456.481, 41.4064, 0.5776 ) }
    dend_20 { pt3dadd( 336.045, 455.427, 41.4173, 0.6028 ) }
    dend_20 { pt3dadd( 335.737, 454.328, 41.4254, 0.6432 ) }
    dend_20 { pt3dadd( 335.489, 453.212, 41.4389, 0.5218 ) }
    dend_20 { pt3dadd( 335.253, 452.107, 41.407, 0.5626 ) }
    dend_20 { pt3dadd( 335.214, 450.974, 41.3748, 0.492 ) }
    dend_20 { pt3dadd( 335.449, 449.865, 41.4355, 0.3848 ) }
    dend_20 { pt3dadd( 335.031, 448.831, 41.5565, 0.3 ) }
    dend_20 { pt3dadd( 334.237, 448.04, 41.7928, 0.2746 ) }
    dend_20 { pt3dadd( 333.741, 447.024, 42.0997, 0.2746 ) }
    dend_20 { pt3dadd( 333.294, 446.003, 42.4866, 0.2746 ) }
    dend_20 { pt3dadd( 332.894, 444.934, 42.8411, 0.2746 ) }
    dend_20 { pt3dadd( 332.283, 443.97, 43.139, 0.2746 ) }
    dend_20 { pt3dadd( 331.863, 442.945, 43.4963, 0.2746 ) }
    dend_20 { pt3dadd( 331.635, 441.877, 43.9009, 0.2746 ) }
    dend_20 { pt3dadd( 331.224, 440.827, 44.284, 0.2746 ) }
    dend_20 { pt3dadd( 330.868, 439.77, 44.6592, 0.2746 ) }
    dend_20 { pt3dadd( 330.372, 438.743, 44.9476, 0.2746 ) }
    dend_20 { pt3dadd( 329.893, 437.768, 45.0282, 0.2748 ) }
    dend_20 { pt3dadd( 329.575, 436.674, 45.0652, 0.275 ) }
    dend_20 { pt3dadd( 329.264, 435.627, 45.2057, 0.2754 ) }
    dend_20 { pt3dadd( 329.058, 434.507, 45.2948, 0.276 ) }
    dend_20 { pt3dadd( 328.859, 433.409, 45.425, 0.2772 ) }
    dend_20 { pt3dadd( 328.082, 432.586, 45.5764, 0.2796 ) }
    dend_20 { pt3dadd( 327.301, 431.842, 45.8307, 0.2838 ) }
    dend_20 { pt3dadd( 326.94, 430.765, 46.051, 0.292 ) }
    dend_20 { pt3dadd( 326.815, 429.629, 46.2353, 0.3064 ) }
    dend_20 { pt3dadd( 326.623, 428.509, 46.4335, 0.3354 ) }
    dend_20 { pt3dadd( 326.255, 427.441, 46.6564, 0.378 ) }
    dend_20 { pt3dadd( 325.849, 426.384, 46.881, 0.512 ) }
    dend_20 { pt3dadd( 325.58, 425.275, 47.0504, 0.4924 ) }
    dend_20 { pt3dadd( 325.203, 424.206, 47.1806, 0.3852 ) }
    dend_20 { pt3dadd( 324.711, 423.19, 47.357, 0.301 ) }
    dend_20 { pt3dadd( 324.134, 422.221, 47.5569, 0.2766 ) }
    dend_20 { pt3dadd( 323.409, 421.343, 47.747, 0.2782 ) }
    dend_20 { pt3dadd( 322.601, 420.542, 47.9268, 0.2814 ) }
    dend_20 { pt3dadd( 321.796, 419.736, 48.05, 0.287 ) }
    dend_20 { pt3dadd( 321.126, 418.819, 48.111, 0.2988 ) }
    dend_20 { pt3dadd( 320.533, 417.844, 48.1648, 0.3142 ) }
    dend_20 { pt3dadd( 319.812, 416.964, 48.2303, 0.3734 ) }
    dend_20 { pt3dadd( 318.907, 416.288, 48.2891, 0.334 ) }
    dend_20 { pt3dadd( 317.888, 415.869, 48.3759, 0.3 ) }
    dend_20 { pt3dadd( 316.861, 415.627, 48.5923, 0.2748 ) }
    dend_20 { pt3dadd( 315.757, 415.478, 48.7872, 0.2748 ) }
    dend_20 { pt3dadd( 314.9, 414.976, 48.8272, 0.2752 ) }
    dend_20 { pt3dadd( 314.473, 414.013, 48.6702, 0.2756 ) }
    dend_20 { pt3dadd( 313.799, 413.28, 48.4299, 0.2766 ) }
    dend_20 { pt3dadd( 312.822, 412.697, 48.2818, 0.2782 ) }
    dend_20 { pt3dadd( 311.785, 412.268, 48.1807, 0.2814 ) }
    dend_20 { pt3dadd( 310.773, 411.842, 48.0953, 0.287 ) }
    dend_20 { pt3dadd( 309.917, 411.132, 48.0735, 0.2988 ) }
    dend_20 { pt3dadd( 309.26, 410.445, 48.3476, 0.3142 ) }
    dend_20 { pt3dadd( 308.583, 409.74, 48.8555, 0.3736 ) }
    dend_20 { pt3dadd( 307.847, 409.07, 49.5054, 0.3342 ) }
    dend_20 { pt3dadd( 306.837, 408.634, 50.0758, 0.3006 ) }
    dend_20 { pt3dadd( 305.731, 408.541, 50.4423, 0.2758 ) }
    dend_20 { pt3dadd( 305.002, 407.708, 50.7136, 0.2768 ) }
    dend_20 { pt3dadd( 304.766, 406.647, 51.0084, 0.2796 ) }
    dend_20 { pt3dadd( 304.297, 405.626, 51.273, 0.2796 ) }
    dend_20 { pt3dadd( 303.766, 404.612, 51.4573, 0.305 ) }
    dend_20 { pt3dadd( 303.441, 403.515, 51.7384, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_2 (entry count 79/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 352.342, 425.336, 34.1132, 0.8694 ) }
    apic_18 { pt3dadd( 351.181, 425.123, 34.5066, 0.2288 ) }
    apic_18 { pt3dadd( 350.067, 424.919, 34.9927, 0.2776 ) }
    apic_18 { pt3dadd( 348.954, 424.702, 35.2094, 0.2804 ) }
    apic_18 { pt3dadd( 347.849, 424.416, 35.4379, 0.2854 ) }
    apic_18 { pt3dadd( 346.756, 424.083, 35.6555, 0.2944 ) }
    apic_18 { pt3dadd( 345.64, 423.835, 35.8719, 0.3124 ) }
    apic_18 { pt3dadd( 344.543, 423.962, 36.1609, 0.339 ) }
    apic_18 { pt3dadd( 343.556, 424.494, 36.4773, 0.422 ) }
    apic_18 { pt3dadd( 342.659, 425.19, 36.7945, 0.4132 ) }
    apic_18 { pt3dadd( 341.713, 425.784, 37.149, 0.4982 ) }
    apic_18 { pt3dadd( 340.611, 425.777, 37.5175, 0.3942 ) }
    apic_18 { pt3dadd( 339.473, 425.863, 37.8204, 0.3274 ) }
    apic_18 { pt3dadd( 338.349, 426.076, 38.0405, 0.2782 ) }
    apic_18 { pt3dadd( 337.233, 426.317, 38.1864, 0.2814 ) }
    apic_18 { pt3dadd( 336.12, 426.575, 38.2788, 0.287 ) }
    apic_18 { pt3dadd( 335.071, 426.957, 38.4404, 0.2988 ) }
    apic_18 { pt3dadd( 334.08, 427.442, 38.6862, 0.3144 ) }
    apic_18 { pt3dadd( 333.203, 428.161, 38.9444, 0.3738 ) }
    apic_18 { pt3dadd( 332.333, 428.867, 39.0802, 0.3346 ) }
    apic_18 { pt3dadd( 331.537, 429.573, 39.0617, 0.3012 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_18 { pt3dadd( 330.84, 430.449, 39.1642, 0.277 ) }
    apic_18 { pt3dadd( 330.176, 431.106, 39.5074, 0.279 ) }
    apic_18 { pt3dadd( 329.489, 432.021, 39.802, 0.2828 ) }
    apic_18 { pt3dadd( 328.797, 432.93, 40.0736, 0.2898 ) }
    apic_18 { pt3dadd( 328.007, 433.714, 40.4158, 0.3026 ) }
    apic_18 { pt3dadd( 327.114, 434.401, 40.756, 0.3272 ) }
    apic_18 { pt3dadd( 326.05, 434.823, 40.9884, 0.3692 ) }
    apic_18 { pt3dadd( 324.964, 435.171, 41.1387, 0.465 ) }
    apic_18 { pt3dadd( 323.819, 435.152, 41.2572, 0.5558 ) }
    apic_18 { pt3dadd( 322.676, 435.124, 41.3507, 0.4582 ) }
    apic_18 { pt3dadd( 321.549, 434.936, 41.4347, 0.4244 ) }
    apic_18 { pt3dadd( 320.485, 434.522, 41.5405, 0.334 ) }
    apic_18 { pt3dadd( 319.399, 434.177, 41.6769, 0.3004 ) }
    apic_18 { pt3dadd( 318.284, 433.968, 41.8457, 0.2752 ) }
    apic_18 { pt3dadd( 317.163, 433.773, 42.0241, 0.2756 ) }
    apic_18 { pt3dadd( 316.027, 433.637, 42.1618, 0.2766 ) }
    apic_18 { pt3dadd( 314.893, 433.537, 42.2635, 0.2784 ) }
    apic_18 { pt3dadd( 313.829, 433.759, 42.2517, 0.2818 ) }
    apic_18 { pt3dadd( 312.696, 433.608, 42.308, 0.2876 ) }
    apic_18 { pt3dadd( 311.58, 433.576, 42.5023, 0.3 ) }
    apic_18 { pt3dadd( 310.617, 434.042, 42.87, 0.3164 ) }
    apic_18 { pt3dadd( 310.063, 434.972, 43.3608, 0.3776 ) }
    apic_18 { pt3dadd( 309.873, 436.068, 43.9015, 0.3416 ) }
    apic_18 { pt3dadd( 309.507, 437.094, 44.4646, 0.3142 ) }
    apic_18 { pt3dadd( 308.73, 437.845, 45.0265, 0.3006 ) }
    apic_18 { pt3dadd( 307.725, 438.314, 45.4728, 0.3248 ) }
    apic_18 { pt3dadd( 306.603, 438.356, 45.7075, 0.3574 ) }
    apic_18 { pt3dadd( 305.495, 438.271, 45.8408, 0.4792 ) }
    apic_18 { pt3dadd( 304.678, 438.7, 46.0673, 0.4056 ) }
    apic_18 { pt3dadd( 304.048, 439.362, 46.3184, 0.3496 ) }
    apic_18 { pt3dadd( 303.331, 439.967, 46.3072, 0.314 ) }
    apic_18 { pt3dadd( 302.588, 440.668, 46.1952, 0.3734 ) }
    apic_18 { pt3dadd( 301.556, 441.131, 46.0995, 0.3338 ) }
    apic_18 { pt3dadd( 300.458, 441.446, 45.9992, 0.3 ) }
    apic_18 { pt3dadd( 299.801, 442.232, 45.9589, 0.2744 ) }
    apic_18 { pt3dadd( 299.449, 443.215, 46.1037, 0.2744 ) }
    apic_18 { pt3dadd( 298.963, 444.191, 46.2428, 0.2742 ) }
    apic_18 { pt3dadd( 298.452, 445.197, 46.2563, 0.274 ) }
    apic_18 { pt3dadd( 298.15, 446.195, 46.3358, 0.2736 ) }
    apic_18 { pt3dadd( 297.71, 447.202, 46.4016, 0.2728 ) }
    apic_18 { pt3dadd( 297.279, 448.237, 46.2342, 0.2712 ) }
    apic_18 { pt3dadd( 296.667, 449.068, 45.7817, 0.2684 ) }
    apic_18 { pt3dadd( 296.381, 450.022, 45.1234, 0.2626 ) }
    apic_18 { pt3dadd( 296.216, 450.981, 44.322, 0.2542 ) }
    apic_18 { pt3dadd( 295.954, 451.886, 43.4249, 0.2288 ) }
    apic_18 { pt3dadd( 295.203, 452.724, 42.1781, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 46/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 352.342, 425.336, 34.1132, 0.8694 ) }
    apic_3 { pt3dadd( 351.738, 423.871, 34.0435, 0.8392 ) }
    apic_3 { pt3dadd( 351.365, 422.79, 33.9895, 0.9602 ) }
    apic_3 { pt3dadd( 350.868, 421.761, 33.955, 1.0108 ) }
    apic_3 { pt3dadd( 350.204, 420.833, 33.9511, 1.0334 ) }
    apic_3 { pt3dadd( 349.56, 419.889, 33.9668, 0.964 ) }
    apic_3 { pt3dadd( 349.113, 418.838, 33.9567, 0.9176 ) }
    apic_3 { pt3dadd( 348.792, 417.744, 33.901, 1.1186 ) }
    apic_3 { pt3dadd( 348.468, 416.648, 33.8187, 1.2422 ) }
    apic_3 { pt3dadd( 348.15, 415.55, 33.7439, 1.3074 ) }
    apic_3 { pt3dadd( 347.805, 414.461, 33.6778, 1.0804 ) }
    apic_3 { pt3dadd( 347.377, 413.403, 33.5768, 0.9744 ) }
    apic_3 { pt3dadd( 346.947, 412.35, 33.4373, 0.8512 ) }
    apic_3 { pt3dadd( 346.486, 411.303, 33.2945, 0.7256 ) }
    apic_3 { pt3dadd( 345.829, 410.371, 33.1428, 0.9084 ) }
    apic_3 { pt3dadd( 345.011, 409.586, 32.9582, 0.8302 ) }
    apic_3 { pt3dadd( 344.224, 408.763, 32.7757, 1.1092 ) }
    apic_3 { pt3dadd( 343.528, 407.855, 32.6402, 0.9404 ) }
    apic_3 { pt3dadd( 342.885, 406.909, 32.5483, 0.7552 ) }
    apic_3 { pt3dadd( 342.333, 405.907, 32.487, 0.7078 ) }
    apic_3 { pt3dadd( 341.771, 404.912, 32.4377, 1.012 ) }
    apic_3 { pt3dadd( 341.183, 403.933, 32.3904, 0.817 ) }
    apic_3 { pt3dadd( 340.85, 402.848, 32.4142, 0.7078 ) }
    apic_3 { pt3dadd( 340.78, 401.708, 32.4514, 0.8828 ) }
    apic_3 { pt3dadd( 340.756, 400.564, 32.4901, 0.9756 ) }
    apic_3 { pt3dadd( 340.826, 399.425, 32.4976, 0.8994 ) }
    apic_3 { pt3dadd( 341.047, 398.31, 32.4654, 0.8194 ) }
    apic_3 { pt3dadd( 341.341, 397.205, 32.447, 0.6028 ) }
    apic_3 { pt3dadd( 341.277, 396.191, 32.6133, 0.5324 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 75/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 308.807, 505.163, 28.8705, 0.4926 ) }
    dend_25 { pt3dadd( 308.64, 505.806, 29.1875, 0.3858 ) }
    dend_25 { pt3dadd( 308.11, 506.75, 29.5814, 0.302 ) }
    dend_25 { pt3dadd( 307.196, 507.375, 29.9552, 0.2784 ) }
    dend_25 { pt3dadd( 306.205, 507.938, 30.252, 0.2816 ) }
    dend_25 { pt3dadd( 305.359, 508.693, 30.4914, 0.2874 ) }
    dend_25 { pt3dadd( 304.68, 509.579, 30.7535, 0.2994 ) }
    dend_25 { pt3dadd( 304.301, 510.519, 31.1108, 0.3152 ) }
    dend_25 { pt3dadd( 304.061, 511.593, 31.3816, 0.3756 ) }
    dend_25 { pt3dadd( 303.802, 512.692, 31.4947, 0.3378 ) }
    dend_25 { pt3dadd( 303.86, 513.815, 31.5367, 0.3072 ) }
    dend_25 { pt3dadd( 304.031, 514.938, 31.5708, 0.288 ) }
    dend_25 { pt3dadd( 303.98, 515.981, 31.4188, 0.2996 ) }
    dend_25 { pt3dadd( 303.492, 516.969, 31.2365, 0.321 ) }
    dend_25 { pt3dadd( 302.852, 517.803, 31.2292, 0.361 ) }
    dend_25 { pt3dadd( 302.552, 518.883, 31.2264, 0.4324 ) }
    dend_25 { pt3dadd( 302.152, 519.892, 31.0486, 0.5786 ) }
    dend_25 { pt3dadd( 302.069, 521.028, 30.826, 0.7836 ) }
    dend_25 { pt3dadd( 302.07, 522.167, 30.5861, 0.797 ) }
    dend_25 { pt3dadd( 302.141, 523.299, 30.3215, 0.771 ) }
    dend_25 { pt3dadd( 302.461, 524.223, 29.9158, 0.5128 ) }
    dend_25 { pt3dadd( 301.898, 524.643, 29.381, 0.368 ) }
    dend_25 { pt3dadd( 301.056, 525.189, 29.1858, 0.3074 ) }
    dend_25 { pt3dadd( 300.921, 526.11, 29.3412, 0.3302 ) }
    dend_25 { pt3dadd( 301.266, 527.112, 29.6892, 0.4032 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_25 { pt3dadd( 301.56, 528.202, 30.0927, 0.389 ) }
    dend_25 { pt3dadd( 301.818, 529.242, 30.5774, 0.4036 ) }
    dend_25 { pt3dadd( 301.94, 530.282, 30.994, 0.4592 ) }
    dend_25 { pt3dadd( 301.958, 531.401, 31.1436, 0.6526 ) }
    dend_25 { pt3dadd( 302.104, 532.524, 31.1298, 0.802 ) }
    dend_25 { pt3dadd( 302.482, 533.562, 31.1203, 0.7212 ) }
    dend_25 { pt3dadd( 303.144, 534.433, 31.0702, 0.7074 ) }
    dend_25 { pt3dadd( 303.475, 535.226, 30.7933, 0.4792 ) }
    dend_25 { pt3dadd( 303.745, 536.16, 30.4161, 0.353 ) }
    dend_25 { pt3dadd( 304.392, 536.831, 30.329, 0.2796 ) }
    dend_25 { pt3dadd( 305.021, 537.575, 30.5119, 0.2796 ) }
    dend_25 { pt3dadd( 305.469, 538.579, 30.5973, 0.305 ) }
    dend_25 { pt3dadd( 305.273, 539.698, 30.9305, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 13/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 308.807, 505.163, 28.8705, 0.4926 ) }
    dend_24 { pt3dadd( 307.513, 505.96, 28.6275, 0.6864 ) }
    dend_24 { pt3dadd( 306.525, 506.509, 28.4567, 0.529 ) }
    dend_24 { pt3dadd( 305.693, 507.264, 28.3856, 0.5026 ) }
    dend_24 { pt3dadd( 304.85, 508.035, 28.3304, 0.508 ) }
    dend_24 { pt3dadd( 304.039, 508.84, 28.2999, 0.4832 ) }
    dend_24 { pt3dadd( 303.328, 509.734, 28.2775, 0.6062 ) }
    dend_24 { pt3dadd( 302.593, 510.567, 28.3385, 0.4702 ) }
    dend_24 { pt3dadd( 301.732, 511.296, 28.4262, 0.3848 ) }
    dend_24 { pt3dadd( 300.79, 511.929, 28.4287, 0.3324 ) }
    dend_24 { pt3dadd( 299.814, 512.478, 28.3049, 0.4068 ) }
    dend_24 { pt3dadd( 298.856, 513.074, 28.0991, 0.3978 ) }
    dend_24 { pt3dadd( 297.83, 513.565, 27.874, 0.4076 ) }
    dend_24 { pt3dadd( 296.818, 514.086, 27.6318, 0.5274 ) }
    dend_24 { pt3dadd( 295.904, 514.752, 27.3796, 0.4848 ) }
    dend_24 { pt3dadd( 295.02, 515.476, 27.1853, 0.5464 ) }
    dend_24 { pt3dadd( 294.108, 516.165, 27.0503, 0.4358 ) }
    dend_24 { pt3dadd( 293.324, 516.985, 26.9688, 0.4064 ) }
    dend_24 { pt3dadd( 292.39, 517.631, 26.8653, 0.4152 ) }
    dend_24 { pt3dadd( 291.583, 518.346, 26.6322, 0.5818 ) }
    dend_24 { pt3dadd( 290.936, 519.283, 26.4046, 0.6186 ) }
    dend_24 { pt3dadd( 290.324, 520.249, 26.2046, 0.6356 ) }
    dend_24 { pt3dadd( 290.397, 521.388, 25.8692, 0.6864 ) }
    // Section: apic_17, id: apic_17, parent: apic_3 (entry count 36/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 341.277, 396.191, 32.6133, 0.5324 ) }
    apic_17 { pt3dadd( 342.181, 395.616, 33.5549, 0.4576 ) }
    apic_17 { pt3dadd( 342.778, 394.658, 33.264, 0.6396 ) }
    apic_17 { pt3dadd( 343.156, 393.629, 33.0915, 0.6228 ) }
    apic_17 { pt3dadd( 343.467, 392.598, 32.839, 0.4562 ) }
    apic_17 { pt3dadd( 343.866, 391.542, 32.6872, 0.3476 ) }
    apic_17 { pt3dadd( 344.239, 390.491, 32.6869, 0.3168 ) }
    apic_17 { pt3dadd( 344.613, 389.42, 32.7426, 0.3486 ) }
    apic_17 { pt3dadd( 345.113, 388.395, 32.8, 0.432 ) }
    apic_17 { pt3dadd( 345.63, 387.384, 32.9087, 0.4676 ) }
    apic_17 { pt3dadd( 345.871, 386.304, 33.0702, 0.426 ) }
    apic_17 { pt3dadd( 345.82, 385.17, 33.182, 0.4144 ) }
    apic_17 { pt3dadd( 345.87, 384.044, 33.2539, 0.5322 ) }
    apic_17 { pt3dadd( 345.935, 382.928, 33.4057, 0.5308 ) }
    apic_17 { pt3dadd( 346.026, 381.826, 33.6339, 0.451 ) }
    apic_17 { pt3dadd( 346.352, 380.74, 33.8834, 0.4506 ) }
    apic_17 { pt3dadd( 346.703, 379.659, 34.1342, 0.4192 ) }
    apic_17 { pt3dadd( 346.884, 378.546, 34.384, 0.5092 ) }
    apic_17 { pt3dadd( 346.806, 377.423, 34.594, 0.4146 ) }
    apic_17 { pt3dadd( 346.699, 376.307, 34.767, 0.3646 ) }
    apic_17 { pt3dadd( 346.479, 375.235, 34.9866, 0.3492 ) }
    apic_17 { pt3dadd( 345.987, 374.218, 35.1946, 0.4032 ) }
    apic_17 { pt3dadd( 345.552, 373.168, 35.3343, 0.561 ) }
    apic_17 { pt3dadd( 345.36, 372.049, 35.42, 0.5728 ) }
    apic_17 { pt3dadd( 345.326, 370.906, 35.4754, 0.5856 ) }
    apic_17 { pt3dadd( 345.307, 369.766, 35.5275, 0.4244 ) }
    apic_17 { pt3dadd( 345.232, 368.631, 35.5622, 0.336 ) }
    apic_17 { pt3dadd( 345.506, 367.603, 35.5785, 0.294 ) }
    apic_17 { pt3dadd( 346.039, 366.604, 35.586, 0.3114 ) }
    apic_17 { pt3dadd( 346.263, 365.498, 35.5824, 0.3388 ) }
    apic_17 { pt3dadd( 346.384, 364.363, 35.5743, 0.414 ) }
    apic_17 { pt3dadd( 346.814, 363.344, 35.6012, 0.4348 ) }
    apic_17 { pt3dadd( 347.552, 362.482, 35.6639, 0.363 ) }
    apic_17 { pt3dadd( 348.356, 361.668, 35.7294, 0.3068 ) }
    apic_17 { pt3dadd( 349.136, 360.835, 35.8207, 0.287 ) }
    apic_17 { pt3dadd( 349.786, 359.906, 35.9484, 0.2988 ) }
    apic_17 { pt3dadd( 350.302, 358.889, 36.0962, 0.3142 ) }
    apic_17 { pt3dadd( 350.875, 357.905, 36.2354, 0.3734 ) }
    apic_17 { pt3dadd( 351.443, 356.927, 36.3989, 0.3338 ) }
    apic_17 { pt3dadd( 351.828, 355.866, 36.5744, 0.3 ) }
    apic_17 { pt3dadd( 352.1, 354.758, 36.696, 0.2746 ) }
    apic_17 { pt3dadd( 352.43, 353.667, 36.7699, 0.2746 ) }
    apic_17 { pt3dadd( 352.68, 352.574, 36.8808, 0.2746 ) }
    apic_17 { pt3dadd( 353.049, 351.519, 37.0068, 0.2746 ) }
    apic_17 { pt3dadd( 353.504, 350.471, 37.1, 0.2746 ) }
    apic_17 { pt3dadd( 354.12, 349.526, 37.1678, 0.2746 ) }
    apic_17 { pt3dadd( 355.075, 348.966, 37.2196, 0.2746 ) }
    apic_17 { pt3dadd( 356.138, 348.545, 37.2548, 0.2746 ) }
    apic_17 { pt3dadd( 356.906, 347.758, 37.2739, 0.2746 ) }
    apic_17 { pt3dadd( 357.586, 346.839, 37.2879, 0.2746 ) }
    apic_17 { pt3dadd( 358.122, 345.839, 37.3058, 0.2746 ) }
    apic_17 { pt3dadd( 358.614, 344.806, 37.3304, 0.2746 ) }
    apic_17 { pt3dadd( 359.081, 343.764, 37.3719, 0.2746 ) }
    apic_17 { pt3dadd( 359.296, 342.653, 37.4321, 0.2746 ) }
    apic_17 { pt3dadd( 359.455, 341.521, 37.4931, 0.2746 ) }
    apic_17 { pt3dadd( 359.926, 340.496, 37.548, 0.2746 ) }
    apic_17 { pt3dadd( 360.472, 339.491, 37.5978, 0.2746 ) }
    apic_17 { pt3dadd( 361.12, 338.553, 37.6575, 0.2746 ) }
    apic_17 { pt3dadd( 361.935, 337.759, 37.7328, 0.2746 ) }
    apic_17 { pt3dadd( 362.745, 336.953, 37.8056, 0.2746 ) }
    apic_17 { pt3dadd( 363.565, 336.155, 37.8759, 0.2746 ) }
    apic_17 { pt3dadd( 364.505, 335.511, 37.9501, 0.2746 ) }
    apic_17 { pt3dadd( 365.462, 334.885, 38.0346, 0.2746 ) }
    apic_17 { pt3dadd( 366.31, 334.12, 38.1357, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_17 { pt3dadd( 367.253, 333.481, 38.2654, 0.2746 ) }
    apic_17 { pt3dadd( 368.288, 333.007, 38.4566, 0.2746 ) }
    apic_17 { pt3dadd( 369.154, 332.308, 38.7475, 0.2746 ) }
    apic_17 { pt3dadd( 369.721, 331.342, 39.107, 0.2746 ) }
    apic_17 { pt3dadd( 370.417, 330.459, 39.5164, 0.2744 ) }
    apic_17 { pt3dadd( 371.064, 329.541, 39.9627, 0.2744 ) }
    apic_17 { pt3dadd( 371.722, 328.624, 40.4205, 0.2742 ) }
    apic_17 { pt3dadd( 372.096, 327.556, 40.8478, 0.274 ) }
    apic_17 { pt3dadd( 372.441, 326.471, 41.242, 0.2736 ) }
    apic_17 { pt3dadd( 372.722, 325.455, 41.7158, 0.2728 ) }
    apic_17 { pt3dadd( 373.306, 324.518, 42.1831, 0.2712 ) }
    apic_17 { pt3dadd( 373.657, 323.434, 42.5547, 0.2684 ) }
    apic_17 { pt3dadd( 373.866, 322.309, 42.8165, 0.2626 ) }
    apic_17 { pt3dadd( 374.531, 321.379, 42.9864, 0.2542 ) }
    apic_17 { pt3dadd( 375.317, 320.548, 43.0802, 0.2288 ) }
    apic_17 { pt3dadd( 375.346, 319.405, 43.12, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 16/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 341.277, 396.191, 32.6133, 0.5324 ) }
    apic_4 { pt3dadd( 340.556, 395.819, 32.748, 0.6254 ) }
    apic_4 { pt3dadd( 339.501, 395.456, 32.758, 0.8562 ) }
    apic_4 { pt3dadd( 338.491, 394.964, 32.6676, 1.0014 ) }
    apic_4 { pt3dadd( 337.696, 394.162, 32.5296, 0.8126 ) }
    apic_4 { pt3dadd( 336.926, 393.319, 32.3616, 0.8542 ) }
    apic_4 { pt3dadd( 336.107, 392.527, 32.165, 0.8612 ) }
    apic_4 { pt3dadd( 335.282, 391.739, 31.9889, 0.7576 ) }
    apic_4 { pt3dadd( 334.408, 391.002, 31.8657, 0.6726 ) }
    apic_4 { pt3dadd( 333.571, 390.224, 31.7948, 0.6816 ) }
    apic_4 { pt3dadd( 332.909, 389.297, 31.75, 0.805 ) }
    apic_4 { pt3dadd( 332.441, 388.256, 31.7122, 0.974 ) }
    apic_4 { pt3dadd( 332.08, 387.173, 31.6532, 0.8906 ) }
    apic_4 { pt3dadd( 331.713, 386.101, 31.5386, 0.8322 ) }
    apic_4 { pt3dadd( 331.152, 385.11, 31.4205, 1.172 ) }
    apic_4 { pt3dadd( 330.576, 384.123, 31.3233, 1.2284 ) }
    apic_4 { pt3dadd( 330.1, 383.083, 31.2346, 1.143 ) }
    apic_4 { pt3dadd( 329.575, 382.069, 31.1427, 0.7626 ) }
    apic_4 { pt3dadd( 328.895, 381.152, 31.0573, 0.6784 ) }
    apic_4 { pt3dadd( 328.086, 380.347, 30.9775, 0.709 ) }
    apic_4 { pt3dadd( 327.173, 379.666, 30.8781, 1.0036 ) }
    apic_4 { pt3dadd( 326.124, 379.334, 30.7023, 0.8536 ) }
    apic_4 { pt3dadd( 325.769, 378.332, 30.5931, 0.9806 ) }
    apic_4 { pt3dadd( 325.133, 377.421, 30.6135, 0.8512 ) }
    apic_4 { pt3dadd( 324.52, 376.455, 30.6236, 1.01 ) }
    apic_4 { pt3dadd( 323.601, 375.774, 30.6303, 0.7418 ) }
    apic_4 { pt3dadd( 322.601, 375.226, 30.5903, 0.6862 ) }
    apic_4 { pt3dadd( 321.652, 374.611, 30.4805, 0.7282 ) }
    // Section: apic_16, id: apic_16, parent: apic_4 (entry count 44/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 321.652, 374.611, 30.4805, 0.7282 ) }
    apic_16 { pt3dadd( 320.477, 374.396, 31.3379, 0.2288 ) }
    apic_16 { pt3dadd( 319.382, 374.2, 31.7052, 0.3238 ) }
    apic_16 { pt3dadd( 318.255, 374.008, 31.8363, 0.366 ) }
    apic_16 { pt3dadd( 317.129, 373.808, 31.941, 0.4428 ) }
    apic_16 { pt3dadd( 316.011, 373.582, 32.0107, 0.5932 ) }
    apic_16 { pt3dadd( 314.893, 373.341, 32.0824, 0.8328 ) }
    apic_16 { pt3dadd( 313.807, 373.1, 32.2496, 0.7804 ) }
    apic_16 { pt3dadd( 312.738, 372.812, 32.4839, 0.5786 ) }
    apic_16 { pt3dadd( 311.667, 372.417, 32.6936, 0.4832 ) }
    apic_16 { pt3dadd( 310.583, 372.048, 32.8527, 0.5546 ) }
    apic_16 { pt3dadd( 309.478, 371.762, 32.9398, 0.854 ) }
    apic_16 { pt3dadd( 308.45, 371.321, 32.9123, 1.0574 ) }
    apic_16 { pt3dadd( 307.614, 370.551, 32.8499, 1.0814 ) }
    apic_16 { pt3dadd( 306.893, 369.687, 32.8944, 0.7812 ) }
    apic_16 { pt3dadd( 305.965, 369.06, 33.0431, 0.7532 ) }
    apic_16 { pt3dadd( 304.857, 368.795, 33.2102, 0.6526 ) }
    apic_16 { pt3dadd( 303.716, 368.844, 33.3953, 0.4738 ) }
    apic_16 { pt3dadd( 302.594, 369.042, 33.6204, 0.3336 ) }
    apic_16 { pt3dadd( 301.481, 369.239, 33.8892, 0.2894 ) }
    apic_16 { pt3dadd( 300.359, 369.416, 34.1673, 0.303 ) }
    apic_16 { pt3dadd( 299.26, 369.727, 34.4344, 0.3222 ) }
    apic_16 { pt3dadd( 298.155, 370.021, 34.6954, 0.3882 ) }
    apic_16 { pt3dadd( 297.019, 370.156, 34.9588, 0.3624 ) }
    apic_16 { pt3dadd( 295.904, 370.312, 35.2568, 0.3476 ) }
    apic_16 { pt3dadd( 294.985, 370.757, 35.7322, 0.388 ) }
    apic_16 { pt3dadd( 294.16, 371.272, 36.3594, 0.362 ) }
    apic_16 { pt3dadd( 293.164, 371.784, 36.9544, 0.3468 ) }
    apic_16 { pt3dadd( 292.139, 372.279, 37.4452, 0.3872 ) }
    apic_16 { pt3dadd( 291.034, 372.564, 37.842, 0.3588 ) }
    apic_16 { pt3dadd( 289.911, 372.771, 38.1604, 0.3484 ) }
    apic_16 { pt3dadd( 288.799, 373.01, 38.4244, 0.3538 ) }
    apic_16 { pt3dadd( 287.692, 373.268, 38.6694, 0.4726 ) }
    apic_16 { pt3dadd( 286.578, 373.517, 38.9046, 0.3936 ) }
    apic_16 { pt3dadd( 285.461, 373.765, 39.1278, 0.3262 ) }
    apic_16 { pt3dadd( 284.365, 374.07, 39.3646, 0.276 ) }
    apic_16 { pt3dadd( 283.312, 374.47, 39.6519, 0.2774 ) }
    apic_16 { pt3dadd( 282.25, 374.861, 39.9644, 0.2798 ) }
    apic_16 { pt3dadd( 281.164, 375.187, 40.2839, 0.2842 ) }
    apic_16 { pt3dadd( 280.182, 375.684, 40.6347, 0.2926 ) }
    apic_16 { pt3dadd( 279.343, 376.445, 40.9704, 0.308 ) }
    apic_16 { pt3dadd( 278.404, 377.081, 41.2765, 0.337 ) }
    apic_16 { pt3dadd( 277.465, 377.702, 41.5736, 0.3882 ) }
    apic_16 { pt3dadd( 276.563, 378.396, 41.8009, 0.495 ) }
    apic_16 { pt3dadd( 275.689, 379.121, 41.9314, 0.636 ) }
    apic_16 { pt3dadd( 274.773, 379.805, 42.033, 0.488 ) }
    apic_16 { pt3dadd( 273.884, 380.516, 42.166, 0.3696 ) }
    apic_16 { pt3dadd( 273.048, 381.278, 42.3685, 0.3092 ) }
    apic_16 { pt3dadd( 272.179, 382.011, 42.6233, 0.3394 ) }
    apic_16 { pt3dadd( 271.329, 382.765, 42.9178, 0.3914 ) }
    apic_16 { pt3dadd( 270.572, 383.614, 43.2494, 0.5084 ) }
    apic_16 { pt3dadd( 269.841, 384.465, 43.6349, 0.6246 ) }
    apic_16 { pt3dadd( 269.095, 385.285, 44.0737, 0.6418 ) }
    apic_16 { pt3dadd( 268.268, 386.061, 44.4979, 0.4934 ) }
    apic_16 { pt3dadd( 267.429, 386.824, 44.896, 0.4064 ) }
    apic_16 { pt3dadd( 266.67, 387.638, 45.3158, 0.476 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_16 { pt3dadd( 265.854, 388.259, 45.7747, 0.4 ) }
    apic_16 { pt3dadd( 264.922, 388.815, 46.16, 0.3378 ) }
    apic_16 { pt3dadd( 263.828, 388.96, 46.4293, 0.2988 ) }
    apic_16 { pt3dadd( 262.684, 388.96, 46.6085, 0.3142 ) }
    apic_16 { pt3dadd( 261.545, 389.049, 46.7152, 0.3734 ) }
    apic_16 { pt3dadd( 260.443, 389.342, 46.7645, 0.3338 ) }
    apic_16 { pt3dadd( 259.341, 389.65, 46.7796, 0.3 ) }
    apic_16 { pt3dadd( 258.252, 389.999, 46.7874, 0.2746 ) }
    apic_16 { pt3dadd( 257.138, 390.257, 46.7984, 0.2746 ) }
    apic_16 { pt3dadd( 256.071, 390.661, 46.8138, 0.2746 ) }
    apic_16 { pt3dadd( 255.106, 391.27, 46.8348, 0.2746 ) }
    apic_16 { pt3dadd( 254.246, 392.021, 46.8642, 0.2746 ) }
    apic_16 { pt3dadd( 253.492, 392.88, 46.9062, 0.2746 ) }
    apic_16 { pt3dadd( 252.624, 393.62, 46.9664, 0.2746 ) }
    apic_16 { pt3dadd( 251.626, 394.176, 47.0478, 0.2746 ) }
    apic_16 { pt3dadd( 250.758, 394.913, 47.1526, 0.2746 ) }
    apic_16 { pt3dadd( 249.966, 395.736, 47.3054, 0.2746 ) }
    apic_16 { pt3dadd( 249.155, 396.485, 47.5734, 0.2746 ) }
    apic_16 { pt3dadd( 248.378, 397.276, 47.9184, 0.2746 ) }
    apic_16 { pt3dadd( 247.524, 398.031, 48.2224, 0.2746 ) }
    apic_16 { pt3dadd( 246.546, 398.61, 48.5083, 0.2746 ) }
    apic_16 { pt3dadd( 245.518, 399.083, 48.7838, 0.2746 ) }
    apic_16 { pt3dadd( 244.408, 399.34, 48.9952, 0.2746 ) }
    apic_16 { pt3dadd( 243.273, 399.481, 49.1288, 0.2746 ) }
    apic_16 { pt3dadd( 242.141, 399.65, 49.2078, 0.2744 ) }
    apic_16 { pt3dadd( 241.053, 400.003, 49.2548, 0.2744 ) }
    apic_16 { pt3dadd( 239.946, 400.289, 49.2752, 0.2742 ) }
    apic_16 { pt3dadd( 238.858, 400.642, 49.2797, 0.274 ) }
    apic_16 { pt3dadd( 237.756, 400.951, 49.28, 0.2736 ) }
    apic_16 { pt3dadd( 236.764, 401.521, 49.28, 0.2728 ) }
    apic_16 { pt3dadd( 235.664, 401.833, 49.28, 0.2712 ) }
    apic_16 { pt3dadd( 234.559, 402.127, 49.28, 0.2684 ) }
    apic_16 { pt3dadd( 233.437, 402.349, 49.28, 0.2626 ) }
    apic_16 { pt3dadd( 232.307, 402.532, 49.28, 0.2542 ) }
    apic_16 { pt3dadd( 231.278, 403.031, 49.28, 0.2288 ) }
    apic_16 { pt3dadd( 230.287, 403.603, 49.28, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 36/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 321.652, 374.611, 30.4805, 0.7282 ) }
    apic_5 { pt3dadd( 320.821, 373.349, 30.3778, 0.788 ) }
    apic_5 { pt3dadd( 320.304, 372.331, 30.263, 0.9866 ) }
    apic_5 { pt3dadd( 319.938, 371.259, 30.1311, 0.9288 ) }
    apic_5 { pt3dadd( 319.835, 370.134, 29.9841, 1.0594 ) }
    apic_5 { pt3dadd( 319.893, 368.997, 29.8421, 1.0632 ) }
    apic_5 { pt3dadd( 319.825, 367.867, 29.727, 0.8546 ) }
    apic_5 { pt3dadd( 319.447, 366.8, 29.6596, 0.8266 ) }
    apic_5 { pt3dadd( 318.849, 365.831, 29.6484, 1.0926 ) }
    apic_5 { pt3dadd( 318.109, 364.964, 29.6691, 1.1876 ) }
    apic_5 { pt3dadd( 317.3, 364.159, 29.7097, 1.0084 ) }
    apic_5 { pt3dadd( 316.554, 363.314, 29.787, 1.028 ) }
    apic_5 { pt3dadd( 315.83, 362.447, 29.8662, 0.9582 ) }
    apic_5 { pt3dadd( 315.031, 361.679, 29.82, 0.8862 ) }
    apic_5 { pt3dadd( 314.233, 360.962, 29.5904, 1.161 ) }
    apic_5 { pt3dadd( 313.502, 360.136, 29.283, 1.2904 ) }
    apic_5 { pt3dadd( 312.955, 359.146, 29.001, 1.3158 ) }
    apic_5 { pt3dadd( 312.607, 358.059, 28.7697, 1.2596 ) }
    apic_5 { pt3dadd( 312.352, 356.944, 28.5925, 0.9702 ) }
    apic_5 { pt3dadd( 312.153, 355.818, 28.4712, 0.8742 ) }
    apic_5 { pt3dadd( 312.0, 354.685, 28.3867, 0.8474 ) }
    apic_5 { pt3dadd( 311.909, 353.546, 28.3002, 0.9786 ) }
    apic_5 { pt3dadd( 311.723, 352.441, 28.1518, 0.8018 ) }
    apic_5 { pt3dadd( 311.12, 351.534, 27.9571, 0.9108 ) }
    apic_5 { pt3dadd( 310.362, 350.682, 27.7806, 0.824 ) }
    apic_5 { pt3dadd( 309.835, 349.68, 27.643, 0.6906 ) }
    apic_5 { pt3dadd( 309.585, 348.588, 27.5968, 0.7692 ) }
    apic_5 { pt3dadd( 309.089, 347.591, 27.5945, 0.7044 ) }
    apic_5 { pt3dadd( 308.303, 346.815, 27.5101, 0.9192 ) }
    apic_5 { pt3dadd( 307.635, 345.928, 27.3567, 0.837 ) }
    apic_5 { pt3dadd( 307.024, 344.981, 27.2711, 0.9576 ) }
    apic_5 { pt3dadd( 306.237, 344.222, 27.1256, 0.7704 ) }
    apic_5 { pt3dadd( 305.195, 343.843, 26.9546, 0.8166 ) }
    apic_5 { pt3dadd( 304.665, 342.99, 26.9731, 1.052 ) }
    apic_5 { pt3dadd( 304.571, 341.876, 27.0764, 1.2194 ) }
    apic_5 { pt3dadd( 304.44, 340.74, 27.1774, 1.2328 ) }
    apic_5 { pt3dadd( 304.128, 339.642, 27.2512, 1.099 ) }
    apic_5 { pt3dadd( 303.829, 338.538, 27.3024, 0.9346 ) }
    apic_5 { pt3dadd( 303.455, 337.457, 27.3144, 0.9102 ) }
    apic_5 { pt3dadd( 302.912, 336.454, 27.2744, 0.6478 ) }
    apic_5 { pt3dadd( 302.342, 335.462, 27.2035, 0.529 ) }
    apic_5 { pt3dadd( 301.771, 334.47, 27.1089, 0.5814 ) }
    apic_5 { pt3dadd( 301.208, 333.476, 26.9704, 0.7296 ) }
    apic_5 { pt3dadd( 300.674, 332.492, 26.7336, 0.985 ) }
    apic_5 { pt3dadd( 300.221, 331.456, 26.4438, 1.094 ) }
    apic_5 { pt3dadd( 299.948, 330.348, 26.1645, 0.778 ) }
    apic_5 { pt3dadd( 299.643, 329.257, 25.8593, 0.6476 ) }
    apic_5 { pt3dadd( 298.9, 328.454, 25.5019, 0.4824 ) }
    apic_5 { pt3dadd( 297.858, 328.039, 25.1597, 0.4926 ) }
    apic_5 { pt3dadd( 296.793, 327.716, 24.8053, 0.5752 ) }
    apic_5 { pt3dadd( 296.018, 326.901, 24.5074, 0.877 ) }
    apic_5 { pt3dadd( 295.413, 325.932, 24.2951, 1.1728 ) }
    apic_5 { pt3dadd( 294.864, 324.929, 24.163, 0.9426 ) }
    apic_5 { pt3dadd( 294.48, 323.853, 24.0957, 0.8626 ) }
    apic_5 { pt3dadd( 294.089, 322.777, 24.0716, 1.0908 ) }
    apic_5 { pt3dadd( 293.62, 321.734, 24.0785, 1.0596 ) }
    apic_5 { pt3dadd( 293.139, 320.698, 24.0985, 1.3756 ) }
    apic_5 { pt3dadd( 292.656, 319.66, 24.1247, 1.5192 ) }
    apic_5 { pt3dadd( 292.163, 318.628, 24.1613, 1.1882 ) }
    apic_5 { pt3dadd( 291.634, 317.617, 24.227, 1.1842 ) }
    apic_5 { pt3dadd( 291.086, 316.617, 24.3167, 1.1934 ) }
    apic_5 { pt3dadd( 290.528, 315.619, 24.4009, 1.3566 ) }
    apic_5 { pt3dadd( 289.981, 314.614, 24.4609, 1.4092 ) }
    apic_5 { pt3dadd( 289.51, 313.573, 24.4858, 1.5758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_5 { pt3dadd( 289.127, 312.496, 24.4878, 1.3194 ) }
    apic_5 { pt3dadd( 288.904, 311.375, 24.4852, 1.3016 ) }
    apic_5 { pt3dadd( 288.813, 310.236, 24.4913, 1.105 ) }
    apic_5 { pt3dadd( 288.609, 309.111, 24.5223, 1.078 ) }
    apic_5 { pt3dadd( 288.075, 308.105, 24.5682, 1.2194 ) }
    apic_5 { pt3dadd( 287.371, 307.206, 24.6168, 1.2392 ) }
    apic_5 { pt3dadd( 286.773, 306.233, 24.6572, 1.0796 ) }
    apic_5 { pt3dadd( 286.682, 305.098, 24.6697, 1.0498 ) }
    apic_5 { pt3dadd( 286.796, 303.963, 24.6618, 0.8466 ) }
    apic_5 { pt3dadd( 286.543, 302.85, 24.5788, 0.9588 ) }
    apic_5 { pt3dadd( 285.986, 301.892, 24.3476, 1.083 ) }
    apic_5 { pt3dadd( 285.508, 300.867, 24.0459, 1.0322 ) }
    apic_5 { pt3dadd( 284.996, 299.87, 23.683, 1.1602 ) }
    apic_5 { pt3dadd( 284.42, 298.932, 23.2627, 1.2332 ) }
    apic_5 { pt3dadd( 283.695, 298.062, 22.8765, 1.2508 ) }
    apic_5 { pt3dadd( 282.982, 297.18, 22.5499, 1.1682 ) }
    apic_5 { pt3dadd( 282.326, 296.249, 22.312, 0.8882 ) }
    apic_5 { pt3dadd( 281.875, 295.206, 22.2239, 0.9858 ) }
    apic_5 { pt3dadd( 281.455, 294.149, 22.2463, 0.9172 ) }
    apic_5 { pt3dadd( 280.935, 293.129, 22.3094, 1.088 ) }
    apic_5 { pt3dadd( 280.243, 292.219, 22.386, 1.1012 ) }
    apic_5 { pt3dadd( 279.323, 291.54, 22.4586, 0.9968 ) }
    apic_5 { pt3dadd( 278.382, 290.891, 22.5254, 0.742 ) }
    apic_5 { pt3dadd( 277.441, 290.241, 22.5891, 0.5678 ) }
    apic_5 { pt3dadd( 276.53, 289.55, 22.6942, 0.6276 ) }
    apic_5 { pt3dadd( 275.685, 288.804, 22.8912, 0.7108 ) }
    apic_5 { pt3dadd( 274.843, 288.056, 23.1627, 0.542 ) }
    apic_5 { pt3dadd( 274.038, 287.262, 23.482, 0.4248 ) }
    apic_5 { pt3dadd( 273.58, 286.214, 23.7697, 0.4004 ) }
    apic_5 { pt3dadd( 273.138, 285.16, 24.0395, 0.5622 ) }
    apic_5 { pt3dadd( 272.709, 284.117, 24.3312, 0.5444 ) }
    apic_5 { pt3dadd( 272.612, 283.025, 24.6752, 0.6816 ) }
    apic_5 { pt3dadd( 272.737, 281.959, 25.0682, 0.5662 ) }
    // Section: apic_13, id: apic_13, parent: apic_5 (entry count 33/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 272.737, 281.959, 25.0682, 0.5662 ) }
    apic_13 { pt3dadd( 272.821, 281.663, 26.07, 0.2288 ) }
    apic_13 { pt3dadd( 273.113, 280.557, 26.1085, 0.6512 ) }
    apic_13 { pt3dadd( 273.298, 279.431, 26.1238, 1.1148 ) }
    apic_13 { pt3dadd( 273.298, 278.292, 26.1452, 1.1434 ) }
    apic_13 { pt3dadd( 273.064, 277.18, 26.1755, 1.1124 ) }
    apic_13 { pt3dadd( 272.706, 276.093, 26.218, 0.7754 ) }
    apic_13 { pt3dadd( 272.337, 275.01, 26.2754, 0.8204 ) }
    apic_13 { pt3dadd( 271.97, 273.926, 26.3542, 0.6278 ) }
    apic_13 { pt3dadd( 271.616, 272.842, 26.4732, 0.4672 ) }
    apic_13 { pt3dadd( 271.278, 271.759, 26.6481, 0.3592 ) }
    apic_13 { pt3dadd( 270.945, 270.68, 26.8677, 0.3814 ) }
    apic_13 { pt3dadd( 270.58, 269.609, 27.1032, 0.4872 ) }
    apic_13 { pt3dadd( 270.097, 268.584, 27.3191, 0.5978 ) }
    apic_13 { pt3dadd( 269.525, 267.599, 27.4884, 0.5318 ) }
    apic_13 { pt3dadd( 268.953, 266.612, 27.5866, 0.581 ) }
    apic_13 { pt3dadd( 268.442, 265.598, 27.5644, 0.527 ) }
    apic_13 { pt3dadd( 267.992, 264.571, 27.4023, 0.444 ) }
    apic_13 { pt3dadd( 267.559, 263.543, 27.134, 0.4368 ) }
    apic_13 { pt3dadd( 267.158, 262.495, 26.8186, 0.3984 ) }
    apic_13 { pt3dadd( 266.868, 261.399, 26.5364, 0.4476 ) }
    apic_13 { pt3dadd( 266.649, 260.276, 26.3302, 0.4136 ) }
    apic_13 { pt3dadd( 266.438, 259.151, 26.2013, 0.4988 ) }
    apic_13 { pt3dadd( 266.226, 258.028, 26.1379, 0.3952 ) }
    apic_13 { pt3dadd( 266.019, 256.902, 26.1208, 0.3292 ) }
    apic_13 { pt3dadd( 265.824, 255.775, 26.131, 0.2816 ) }
    apic_13 { pt3dadd( 265.637, 254.646, 26.1549, 0.2876 ) }
    apic_13 { pt3dadd( 265.449, 253.518, 26.1884, 0.2986 ) }
    apic_13 { pt3dadd( 265.266, 252.389, 26.2339, 0.32 ) }
    apic_13 { pt3dadd( 265.111, 251.256, 26.3002, 0.3546 ) }
    apic_13 { pt3dadd( 265.009, 250.118, 26.3994, 0.4428 ) }
    apic_13 { pt3dadd( 264.933, 248.98, 26.5305, 0.4902 ) }
    apic_13 { pt3dadd( 264.865, 247.842, 26.6826, 0.4554 ) }
    apic_13 { pt3dadd( 264.857, 246.705, 26.8519, 0.5292 ) }
    apic_13 { pt3dadd( 264.964, 245.583, 27.0407, 0.451 ) }
    apic_13 { pt3dadd( 265.132, 244.468, 27.2328, 0.436 ) }
    apic_13 { pt3dadd( 265.353, 243.354, 27.3733, 0.4632 ) }
    apic_13 { pt3dadd( 265.697, 242.284, 27.3746, 0.7048 ) }
    apic_13 { pt3dadd( 266.098, 241.243, 27.2266, 0.6814 ) }
    apic_13 { pt3dadd( 266.483, 240.194, 26.9772, 0.8668 ) }
    apic_13 { pt3dadd( 266.786, 239.107, 26.6925, 0.7872 ) }
    apic_13 { pt3dadd( 266.943, 237.98, 26.4475, 0.6348 ) }
    apic_13 { pt3dadd( 267.042, 236.84, 26.2749, 0.604 ) }
    apic_13 { pt3dadd( 267.14, 235.701, 26.1757, 0.6972 ) }
    apic_13 { pt3dadd( 267.242, 234.561, 26.1353, 0.828 ) }
    apic_13 { pt3dadd( 267.4, 233.429, 26.1338, 0.5884 ) }
    apic_13 { pt3dadd( 267.683, 232.322, 26.1547, 0.4244 ) }
    apic_13 { pt3dadd( 268.026, 231.231, 26.1886, 0.3622 ) }
    apic_13 { pt3dadd( 268.366, 230.14, 26.2347, 0.4446 ) }
    apic_13 { pt3dadd( 268.664, 229.036, 26.2992, 0.553 ) }
    apic_13 { pt3dadd( 268.811, 227.905, 26.3955, 0.9696 ) }
    apic_13 { pt3dadd( 268.823, 226.766, 26.5313, 0.6952 ) }
    apic_13 { pt3dadd( 268.797, 225.625, 26.7023, 0.4626 ) }
    apic_13 { pt3dadd( 268.812, 224.486, 26.9035, 0.2934 ) }
    apic_13 { pt3dadd( 268.95, 223.359, 27.1349, 0.3088 ) }
    apic_13 { pt3dadd( 269.169, 222.246, 27.3893, 0.3404 ) }
    apic_13 { pt3dadd( 269.405, 221.136, 27.6529, 0.386 ) }
    apic_13 { pt3dadd( 269.675, 220.033, 27.9088, 0.5322 ) }
    apic_13 { pt3dadd( 270.073, 218.969, 28.131, 0.5054 ) }
    apic_13 { pt3dadd( 270.58, 217.945, 28.2996, 0.527 ) }
    apic_13 { pt3dadd( 271.041, 216.899, 28.4178, 0.6794 ) }
    apic_13 { pt3dadd( 271.359, 215.803, 28.5009, 0.8752 ) }
    apic_13 { pt3dadd( 271.459, 214.669, 28.5659, 0.7432 ) }
    apic_13 { pt3dadd( 271.342, 213.536, 28.6286, 0.6144 ) }
    apic_13 { pt3dadd( 270.893, 212.503, 28.7036, 0.4978 ) }
    apic_13 { pt3dadd( 270.269, 211.544, 28.807, 0.6048 ) }
    apic_13 { pt3dadd( 269.822, 210.505, 28.961, 0.6062 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_13 { pt3dadd( 269.556, 209.405, 29.1788, 0.6494 ) }
    apic_13 { pt3dadd( 269.356, 208.295, 29.4549, 0.5332 ) }
    apic_13 { pt3dadd( 269.167, 207.185, 29.7674, 0.584 ) }
    apic_13 { pt3dadd( 268.989, 206.07, 30.0885, 0.5308 ) }
    apic_13 { pt3dadd( 268.864, 204.94, 30.3741, 0.4598 ) }
    apic_13 { pt3dadd( 268.802, 203.799, 30.5875, 0.4234 ) }
    apic_13 { pt3dadd( 268.729, 202.657, 30.7308, 0.5802 ) }
    apic_13 { pt3dadd( 268.607, 201.52, 30.8218, 0.4692 ) }
    apic_13 { pt3dadd( 268.252, 200.443, 30.8795, 0.3826 ) }
    apic_13 { pt3dadd( 267.517, 199.588, 30.9212, 0.3284 ) }
    apic_13 { pt3dadd( 266.629, 198.871, 30.9691, 0.3998 ) }
    apic_13 { pt3dadd( 265.804, 198.085, 31.0388, 0.3832 ) }
    apic_13 { pt3dadd( 265.35, 197.061, 31.1312, 0.3896 ) }
    apic_13 { pt3dadd( 265.181, 195.936, 31.2393, 0.4484 ) }
    apic_13 { pt3dadd( 265.111, 194.797, 31.3244, 0.5602 ) }
    apic_13 { pt3dadd( 265.095, 193.66, 31.3594, 0.983 ) }
    apic_13 { pt3dadd( 265.093, 192.519, 31.3746, 0.7196 ) }
    apic_13 { pt3dadd( 265.24, 191.388, 31.418, 0.51 ) }
    apic_13 { pt3dadd( 265.529, 190.285, 31.5168, 0.3704 ) }
    apic_13 { pt3dadd( 265.783, 189.205, 31.7374, 0.5046 ) }
    apic_13 { pt3dadd( 265.879, 188.125, 32.0816, 0.4474 ) }
    apic_13 { pt3dadd( 265.707, 187.018, 32.4433, 0.4526 ) }
    apic_13 { pt3dadd( 265.38, 185.924, 32.7488, 0.3814 ) }
    apic_13 { pt3dadd( 265.014, 184.841, 32.977, 0.4134 ) }
    apic_13 { pt3dadd( 264.439, 183.857, 33.1296, 0.3618 ) }
    apic_13 { pt3dadd( 263.811, 182.9, 33.2195, 0.3464 ) }
    apic_13 { pt3dadd( 263.484, 181.812, 33.2724, 0.386 ) }
    apic_13 { pt3dadd( 263.297, 180.684, 33.3186, 0.3584 ) }
    apic_13 { pt3dadd( 263.123, 179.553, 33.3774, 0.3402 ) }
    apic_13 { pt3dadd( 262.542, 178.581, 33.4524, 0.3746 ) }
    apic_13 { pt3dadd( 261.876, 177.652, 33.5538, 0.3362 ) }
    apic_13 { pt3dadd( 261.579, 176.564, 33.7142, 0.3042 ) }
    apic_13 { pt3dadd( 261.568, 175.445, 33.9522, 0.2824 ) }
    apic_13 { pt3dadd( 261.909, 174.414, 34.2849, 0.2894 ) }
    apic_13 { pt3dadd( 262.337, 173.403, 34.4568, 0.3016 ) }
    apic_13 { pt3dadd( 262.67, 172.328, 34.5307, 0.3268 ) }
    apic_13 { pt3dadd( 262.813, 171.237, 34.7138, 0.3608 ) }
    apic_13 { pt3dadd( 262.938, 170.156, 34.9868, 0.4854 ) }
    apic_13 { pt3dadd( 262.784, 169.024, 35.2106, 0.4184 ) }
    apic_13 { pt3dadd( 262.818, 167.88, 35.3875, 0.367 ) }
    apic_13 { pt3dadd( 263.029, 166.755, 35.5446, 0.3772 ) }
    apic_13 { pt3dadd( 263.136, 165.617, 35.6703, 0.341 ) }
    apic_13 { pt3dadd( 263.241, 164.477, 35.7591, 0.3132 ) }
    apic_13 { pt3dadd( 263.348, 163.338, 35.838, 0.3 ) }
    apic_13 { pt3dadd( 263.342, 162.2, 35.9719, 0.3166 ) }
    apic_13 { pt3dadd( 263.321, 161.064, 36.1547, 0.378 ) }
    apic_13 { pt3dadd( 263.302, 159.927, 36.3703, 0.3422 ) }
    apic_13 { pt3dadd( 263.281, 158.791, 36.601, 0.3154 ) }
    apic_13 { pt3dadd( 263.261, 157.654, 36.8287, 0.3034 ) }
    apic_13 { pt3dadd( 262.949, 156.568, 37.0518, 0.3278 ) }
    apic_13 { pt3dadd( 262.625, 155.483, 37.2389, 0.3744 ) }
    apic_13 { pt3dadd( 262.483, 154.347, 37.3237, 0.4534 ) }
    apic_13 { pt3dadd( 262.341, 153.212, 37.3201, 0.6362 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 53/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 272.737, 281.959, 25.0682, 0.5662 ) }
    apic_6 { pt3dadd( 272.238, 281.669, 25.3186, 0.5454 ) }
    apic_6 { pt3dadd( 271.27, 281.09, 25.404, 0.7148 ) }
    apic_6 { pt3dadd( 270.254, 280.612, 25.4513, 0.7046 ) }
    apic_6 { pt3dadd( 269.649, 279.711, 25.4664, 0.8872 ) }
    apic_6 { pt3dadd( 269.155, 278.783, 25.288, 0.9348 ) }
    apic_6 { pt3dadd( 268.503, 277.896, 25.0202, 1.0614 ) }
    apic_6 { pt3dadd( 267.755, 277.043, 24.8364, 1.1104 ) }
    apic_6 { pt3dadd( 267.202, 276.053, 24.7466, 1.1874 ) }
    apic_6 { pt3dadd( 266.932, 274.949, 24.6989, 1.1696 ) }
    apic_6 { pt3dadd( 267.031, 273.82, 24.697, 0.9994 ) }
    apic_6 { pt3dadd( 267.09, 272.682, 24.6861, 0.893 ) }
    apic_6 { pt3dadd( 267.186, 271.542, 24.6585, 0.8236 ) }
    apic_6 { pt3dadd( 267.143, 270.4, 24.6084, 0.9904 ) }
    apic_6 { pt3dadd( 266.953, 269.275, 24.5253, 1.0102 ) }
    apic_6 { pt3dadd( 266.382, 268.305, 24.3947, 0.8492 ) }
    apic_6 { pt3dadd( 265.491, 267.603, 24.2487, 1.0524 ) }
    apic_6 { pt3dadd( 264.587, 266.911, 24.103, 0.8252 ) }
    apic_6 { pt3dadd( 263.725, 266.16, 23.991, 0.8192 ) }
    apic_6 { pt3dadd( 262.824, 265.455, 23.9274, 0.8504 ) }
    apic_6 { pt3dadd( 261.93, 264.741, 23.9144, 0.7024 ) }
    apic_6 { pt3dadd( 261.072, 263.984, 23.9506, 0.513 ) }
    apic_6 { pt3dadd( 260.224, 263.216, 24.0289, 0.4354 ) }
    apic_6 { pt3dadd( 259.379, 262.446, 24.1425, 0.566 ) }
    apic_6 { pt3dadd( 258.633, 261.596, 24.3391, 0.619 ) }
    apic_6 { pt3dadd( 257.961, 260.708, 24.6267, 0.4908 ) }
    apic_6 { pt3dadd( 257.297, 259.817, 24.9764, 0.4376 ) }
    apic_6 { pt3dadd( 256.62, 258.92, 25.3342, 0.3582 ) }
    apic_6 { pt3dadd( 255.914, 258.022, 25.6236, 0.3462 ) }
    apic_6 { pt3dadd( 255.199, 257.129, 25.8239, 0.3546 ) }
    apic_6 { pt3dadd( 254.485, 256.235, 25.9402, 0.4504 ) }
    apic_6 { pt3dadd( 253.857, 255.28, 25.9895, 0.4682 ) }
    apic_6 { pt3dadd( 253.458, 254.21, 25.9924, 0.5894 ) }
    apic_6 { pt3dadd( 253.188, 253.099, 25.968, 0.6144 ) }
    apic_6 { pt3dadd( 253.015, 251.968, 25.9278, 0.4876 ) }
    apic_6 { pt3dadd( 252.719, 250.864, 25.8705, 0.4056 ) }
    apic_6 { pt3dadd( 251.884, 250.098, 25.7913, 0.4258 ) }
    apic_6 { pt3dadd( 250.846, 249.618, 25.6804, 0.5432 ) }
    apic_6 { pt3dadd( 249.731, 249.374, 25.5325, 0.83 ) }
    apic_6 { pt3dadd( 248.749, 248.823, 25.3066, 1.0254 ) }
    apic_6 { pt3dadd( 248.106, 247.94, 24.9817, 0.9618 ) }
    apic_6 { pt3dadd( 247.496, 247.034, 24.6018, 0.8514 ) }
    apic_6 { pt3dadd( 247.099, 245.962, 24.3171, 0.8404 ) }
    apic_6 { pt3dadd( 246.766, 244.867, 24.1356, 0.5644 ) }
    apic_6 { pt3dadd( 246.551, 243.744, 24.0618, 0.3796 ) }
    apic_6 { pt3dadd( 245.959, 242.769, 24.1, 0.2808 ) }
    apic_6 { pt3dadd( 245.356, 241.8, 24.2154, 0.2862 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_6 { pt3dadd( 244.754, 240.831, 24.3653, 0.296 ) }
    apic_6 { pt3dadd( 244.061, 239.955, 24.5693, 0.3144 ) }
    apic_6 { pt3dadd( 243.282, 239.247, 24.8679, 0.3478 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 3/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 262.341, 153.212, 37.3201, 0.6362 ) }
    apic_15 { pt3dadd( 262.197, 152.248, 37.8451, 0.2288 ) }
    apic_15 { pt3dadd( 261.982, 151.126, 38.0864, 0.541 ) }
    apic_15 { pt3dadd( 261.569, 150.062, 38.1816, 0.5482 ) }
    apic_15 { pt3dadd( 260.806, 149.255, 38.257, 0.4782 ) }
    apic_15 { pt3dadd( 259.74, 148.93, 38.5092, 0.5256 ) }
    apic_15 { pt3dadd( 258.835, 149.6, 38.8965, 0.4396 ) }
    apic_15 { pt3dadd( 258.379, 150.512, 39.5298, 0.4368 ) }
    apic_15 { pt3dadd( 257.585, 151.121, 40.3598, 0.358 ) }
    apic_15 { pt3dadd( 256.653, 151.166, 41.3672, 0.3396 ) }
    apic_15 { pt3dadd( 255.517, 151.161, 42.3088, 0.3736 ) }
    apic_15 { pt3dadd( 254.422, 151.056, 43.2085, 0.334 ) }
    apic_15 { pt3dadd( 253.712, 150.236, 44.1246, 0.3002 ) }
    apic_15 { pt3dadd( 253.057, 149.553, 45.0486, 0.2752 ) }
    apic_15 { pt3dadd( 252.035, 149.759, 45.9894, 0.2756 ) }
    apic_15 { pt3dadd( 251.387, 149.435, 47.0739, 0.2766 ) }
    apic_15 { pt3dadd( 251.29, 148.584, 48.2507, 0.2782 ) }
    apic_15 { pt3dadd( 251.761, 147.748, 49.4312, 0.2814 ) }
    apic_15 { pt3dadd( 252.509, 146.986, 50.5019, 0.2872 ) }
    apic_15 { pt3dadd( 253.25, 146.161, 51.4254, 0.2976 ) }
    apic_15 { pt3dadd( 253.476, 145.123, 52.2334, 0.3196 ) }
    apic_15 { pt3dadd( 253.637, 144.038, 52.9542, 0.3474 ) }
    apic_15 { pt3dadd( 254.341, 143.267, 53.4335, 0.4604 ) }
    apic_15 { pt3dadd( 255.088, 142.415, 53.7832, 0.3728 ) }
    apic_15 { pt3dadd( 255.307, 141.827, 54.4037, 0.2796 ) }
    apic_15 { pt3dadd( 254.648, 141.088, 56.0627, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 29/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 262.341, 153.212, 37.3201, 0.6362 ) }
    apic_14 { pt3dadd( 262.421, 152.727, 37.184, 0.7994 ) }
    apic_14 { pt3dadd( 262.598, 151.661, 36.8816, 0.5828 ) }
    apic_14 { pt3dadd( 263.258, 150.775, 36.5123, 0.413 ) }
    apic_14 { pt3dadd( 263.821, 149.79, 36.1595, 0.3448 ) }
    apic_14 { pt3dadd( 263.943, 148.655, 35.8915, 0.3936 ) }
    apic_14 { pt3dadd( 263.999, 147.512, 35.7098, 0.5496 ) }
    apic_14 { pt3dadd( 264.055, 146.37, 35.6068, 0.521 ) }
    apic_14 { pt3dadd( 263.66, 145.298, 35.5634, 0.6388 ) }
    apic_14 { pt3dadd( 263.087, 144.308, 35.5508, 0.4846 ) }
    apic_14 { pt3dadd( 262.591, 143.277, 35.5491, 0.4052 ) }
    apic_14 { pt3dadd( 262.384, 142.152, 35.5488, 0.4004 ) }
    apic_14 { pt3dadd( 262.196, 141.023, 35.5482, 0.3862 ) }
    apic_14 { pt3dadd( 262.008, 139.895, 35.5477, 0.3864 ) }
    apic_14 { pt3dadd( 261.82, 138.766, 35.5468, 0.486 ) }
    apic_14 { pt3dadd( 261.691, 137.63, 35.5454, 0.418 ) }
    apic_14 { pt3dadd( 261.612, 136.488, 35.5438, 0.3738 ) }
    apic_14 { pt3dadd( 261.534, 135.347, 35.5412, 0.3536 ) }
    apic_14 { pt3dadd( 261.457, 134.206, 35.5379, 0.4724 ) }
    apic_14 { pt3dadd( 261.379, 133.064, 35.5331, 0.3932 ) }
    apic_14 { pt3dadd( 261.132, 131.948, 35.5267, 0.3254 ) }
    apic_14 { pt3dadd( 260.514, 130.985, 35.5172, 0.2746 ) }
    apic_14 { pt3dadd( 259.886, 130.028, 35.5043, 0.2748 ) }
    apic_14 { pt3dadd( 259.257, 129.073, 35.4861, 0.2748 ) }
    apic_14 { pt3dadd( 258.621, 128.122, 35.4606, 0.2752 ) }
    apic_14 { pt3dadd( 257.964, 127.185, 35.4245, 0.2756 ) }
    apic_14 { pt3dadd( 257.306, 126.25, 35.3749, 0.2764 ) }
    apic_14 { pt3dadd( 256.648, 125.314, 35.308, 0.2782 ) }
    apic_14 { pt3dadd( 255.892, 124.456, 35.2125, 0.2812 ) }
    apic_14 { pt3dadd( 254.874, 123.942, 35.0616, 0.2868 ) }
    apic_14 { pt3dadd( 253.856, 123.432, 34.867, 0.2972 ) }
    apic_14 { pt3dadd( 252.845, 122.908, 34.6366, 0.3164 ) }
    apic_14 { pt3dadd( 252.126, 122.04, 34.3549, 0.353 ) }
    apic_14 { pt3dadd( 251.411, 121.169, 34.0472, 0.4152 ) }
    apic_14 { pt3dadd( 250.696, 120.297, 33.7358, 0.5592 ) }
    apic_14 { pt3dadd( 250.079, 119.335, 33.4911, 0.6864 ) }
    apic_14 { pt3dadd( 249.499, 118.349, 33.18, 1.6016 ) }
    // Section: apic_12, id: apic_12, parent: apic_6 (entry count 66/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 243.282, 239.247, 24.8679, 0.3478 ) }
    apic_12 { pt3dadd( 242.823, 238.43, 26.07, 0.2288 ) }
    apic_12 { pt3dadd( 242.602, 237.318, 26.1524, 0.279 ) }
    apic_12 { pt3dadd( 242.82, 236.204, 26.1853, 0.2826 ) }
    apic_12 { pt3dadd( 242.982, 235.073, 26.2305, 0.2896 ) }
    apic_12 { pt3dadd( 243.043, 233.931, 26.2921, 0.3026 ) }
    apic_12 { pt3dadd( 242.952, 232.793, 26.3856, 0.3256 ) }
    apic_12 { pt3dadd( 242.706, 231.679, 26.5198, 0.3736 ) }
    apic_12 { pt3dadd( 242.41, 230.58, 26.6833, 0.437 ) }
    apic_12 { pt3dadd( 242.013, 229.533, 26.9006, 0.678 ) }
    apic_12 { pt3dadd( 241.506, 228.577, 27.1874, 0.5266 ) }
    apic_12 { pt3dadd( 241.15, 227.499, 27.3956, 0.4046 ) }
    apic_12 { pt3dadd( 240.932, 226.39, 27.443, 0.322 ) }
    apic_12 { pt3dadd( 240.742, 225.279, 27.3455, 0.3878 ) }
    apic_12 { pt3dadd( 240.553, 224.168, 27.14, 0.3618 ) }
    apic_12 { pt3dadd( 240.383, 223.053, 26.8677, 0.3464 ) }
    apic_12 { pt3dadd( 240.375, 221.912, 26.6077, 0.3862 ) }
    apic_12 { pt3dadd( 240.425, 220.77, 26.4048, 0.3576 ) }
    apic_12 { pt3dadd( 240.48, 219.627, 26.2622, 0.3442 ) }
    apic_12 { pt3dadd( 240.508, 218.485, 26.1698, 0.3558 ) }
    apic_12 { pt3dadd( 240.478, 217.341, 26.1177, 0.4288 ) }
    apic_12 { pt3dadd( 240.431, 216.198, 26.0921, 0.5436 ) }
    apic_12 { pt3dadd( 240.382, 215.055, 26.079, 0.8556 ) }
    apic_12 { pt3dadd( 240.362, 213.911, 26.0726, 0.9526 ) }
    apic_12 { pt3dadd( 240.494, 212.775, 26.0702, 0.7232 ) }
    apic_12 { pt3dadd( 240.679, 211.647, 26.0698, 0.4554 ) }
    apic_12 { pt3dadd( 240.867, 210.518, 26.0697, 0.3376 ) }
    apic_12 { pt3dadd( 241.055, 209.39, 26.0696, 0.3402 ) }
    apic_12 { pt3dadd( 241.242, 208.261, 26.0695, 0.4166 ) }
    apic_12 { pt3dadd( 241.431, 207.133, 26.0693, 0.4396 ) }
    apic_12 { pt3dadd( 241.618, 206.003, 26.069, 0.3718 ) }
    apic_12 { pt3dadd( 241.806, 204.876, 26.0686, 0.3242 ) }
    apic_12 { pt3dadd( 241.995, 203.747, 26.068, 0.3142 ) }
    apic_12 { pt3dadd( 242.182, 202.618, 26.0673, 0.3736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_12 { pt3dadd( 242.371, 201.49, 26.0662, 0.3342 ) }
    apic_12 { pt3dadd( 242.559, 200.361, 26.0647, 0.3004 ) }
    apic_12 { pt3dadd( 242.747, 199.233, 26.0626, 0.2754 ) }
    apic_12 { pt3dadd( 242.935, 198.105, 26.0597, 0.276 ) }
    apic_12 { pt3dadd( 242.979, 196.962, 26.0556, 0.2772 ) }
    apic_12 { pt3dadd( 242.839, 195.828, 26.0498, 0.2796 ) }
    apic_12 { pt3dadd( 242.654, 194.699, 26.0417, 0.284 ) }
    apic_12 { pt3dadd( 242.466, 193.57, 26.0306, 0.2918 ) }
    apic_12 { pt3dadd( 242.277, 192.443, 26.0151, 0.3074 ) }
    apic_12 { pt3dadd( 242.027, 191.326, 25.9931, 0.3304 ) }
    apic_12 { pt3dadd( 241.726, 190.222, 25.9608, 0.4034 ) }
    apic_12 { pt3dadd( 241.525, 189.096, 25.9175, 0.39 ) }
    apic_12 { pt3dadd( 241.408, 187.959, 25.8669, 0.401 ) }
    apic_12 { pt3dadd( 241.612, 186.84, 25.7806, 0.4768 ) }
    apic_12 { pt3dadd( 242.074, 185.813, 25.646, 0.5762 ) }
    apic_12 { pt3dadd( 242.652, 184.893, 25.4322, 0.5042 ) }
    apic_12 { pt3dadd( 242.847, 183.772, 25.3009, 0.4694 ) }
    apic_12 { pt3dadd( 242.689, 182.677, 25.3546, 0.6128 ) }
    apic_12 { pt3dadd( 242.509, 181.589, 25.5588, 0.5554 ) }
    apic_12 { pt3dadd( 242.22, 180.484, 25.7882, 0.4174 ) }
    apic_12 { pt3dadd( 241.907, 179.385, 26.0073, 0.3136 ) }
    apic_12 { pt3dadd( 241.562, 178.298, 26.2428, 0.2994 ) }
    apic_12 { pt3dadd( 241.55, 177.154, 26.4329, 0.323 ) }
    apic_12 { pt3dadd( 241.55, 176.01, 26.5849, 0.3538 ) }
    apic_12 { pt3dadd( 241.55, 174.866, 26.7233, 0.4724 ) }
    apic_12 { pt3dadd( 241.834, 173.771, 26.9285, 0.3934 ) }
    apic_12 { pt3dadd( 242.228, 172.725, 27.2056, 0.3258 ) }
    apic_12 { pt3dadd( 242.624, 171.678, 27.5257, 0.2752 ) }
    apic_12 { pt3dadd( 242.982, 170.613, 27.8574, 0.2758 ) }
    apic_12 { pt3dadd( 243.062, 169.471, 28.1064, 0.2768 ) }
    apic_12 { pt3dadd( 243.14, 168.329, 28.2775, 0.2786 ) }
    apic_12 { pt3dadd( 243.218, 167.189, 28.3777, 0.2822 ) }
    apic_12 { pt3dadd( 243.313, 166.048, 28.425, 0.2888 ) }
    apic_12 { pt3dadd( 243.477, 164.917, 28.4399, 0.3004 ) }
    apic_12 { pt3dadd( 243.642, 163.784, 28.4399, 0.3246 ) }
    apic_12 { pt3dadd( 243.807, 162.652, 28.4399, 0.3566 ) }
    apic_12 { pt3dadd( 243.972, 161.52, 28.4399, 0.4778 ) }
    apic_12 { pt3dadd( 244.214, 160.402, 28.4399, 0.4036 ) }
    apic_12 { pt3dadd( 244.697, 159.365, 28.4399, 0.3446 ) }
    apic_12 { pt3dadd( 245.18, 158.327, 28.4399, 0.3108 ) }
    apic_12 { pt3dadd( 245.661, 157.29, 28.4399, 0.3378 ) }
    apic_12 { pt3dadd( 246.142, 156.252, 28.4399, 0.412 ) }
    apic_12 { pt3dadd( 246.483, 155.16, 28.4399, 0.431 ) }
    apic_12 { pt3dadd( 246.824, 154.068, 28.4399, 0.356 ) }
    apic_12 { pt3dadd( 247.166, 152.976, 28.4399, 0.2938 ) }
    apic_12 { pt3dadd( 247.507, 151.884, 28.4399, 0.2626 ) }
    apic_12 { pt3dadd( 247.859, 150.795, 28.4399, 0.2542 ) }
    apic_12 { pt3dadd( 248.221, 149.711, 28.4399, 0.2288 ) }
    apic_12 { pt3dadd( 248.582, 148.625, 28.4399, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 49/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 243.282, 239.247, 24.8679, 0.3478 ) }
    apic_7 { pt3dadd( 242.876, 238.922, 24.9902, 0.4142 ) }
    apic_7 { pt3dadd( 242.038, 238.252, 24.9045, 0.5142 ) }
    apic_7 { pt3dadd( 241.161, 237.579, 24.7165, 0.8114 ) }
    apic_7 { pt3dadd( 240.231, 236.921, 24.5484, 0.8216 ) }
    apic_7 { pt3dadd( 239.434, 236.104, 24.455, 0.7188 ) }
    apic_7 { pt3dadd( 238.789, 235.163, 24.4579, 0.6618 ) }
    apic_7 { pt3dadd( 238.562, 234.1, 24.659, 0.5944 ) }
    apic_7 { pt3dadd( 238.494, 233.018, 25.0126, 0.5116 ) }
    apic_7 { pt3dadd( 238.428, 231.888, 25.3701, 0.612 ) }
    apic_7 { pt3dadd( 238.031, 230.819, 25.6564, 0.4812 ) }
    apic_7 { pt3dadd( 237.434, 229.843, 25.8562, 0.4032 ) }
    apic_7 { pt3dadd( 236.806, 228.888, 25.9759, 0.3762 ) }
    apic_7 { pt3dadd( 236.178, 227.932, 26.0268, 0.4418 ) }
    apic_7 { pt3dadd( 235.682, 226.901, 26.0348, 0.6866 ) }
    apic_7 { pt3dadd( 235.284, 225.828, 26.0256, 0.5438 ) }
    apic_7 { pt3dadd( 234.82, 224.783, 26.0083, 0.4304 ) }
    apic_7 { pt3dadd( 234.308, 223.76, 25.9836, 0.4002 ) }
    apic_7 { pt3dadd( 233.583, 222.876, 25.9505, 0.3848 ) }
    apic_7 { pt3dadd( 232.684, 222.172, 25.9039, 0.3886 ) }
    apic_7 { pt3dadd( 231.58, 221.887, 25.832, 0.4662 ) }
    apic_7 { pt3dadd( 230.531, 221.437, 25.7333, 0.4976 ) }
    apic_7 { pt3dadd( 229.881, 220.505, 25.6086, 0.6444 ) }
    apic_7 { pt3dadd( 229.423, 219.459, 25.4837, 0.7144 ) }
    apic_7 { pt3dadd( 229.348, 218.318, 25.3961, 0.6826 ) }
    apic_7 { pt3dadd( 229.218, 217.228, 25.2354, 0.7204 ) }
    // Section: apic_11, id: apic_11, parent: apic_7 (entry count 75/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 229.218, 217.228, 25.2354, 0.7204 ) }
    apic_11 { pt3dadd( 228.75, 216.294, 24.9158, 1.144 ) }
    apic_11 { pt3dadd( 228.245, 215.285, 25.3111, 0.614 ) }
    apic_11 { pt3dadd( 227.753, 214.268, 25.4933, 0.3772 ) }
    apic_11 { pt3dadd( 227.342, 213.205, 25.6687, 0.2762 ) }
    apic_11 { pt3dadd( 227.013, 212.111, 25.7995, 0.2778 ) }
    apic_11 { pt3dadd( 226.7, 211.011, 25.8794, 0.2804 ) }
    apic_11 { pt3dadd( 226.335, 209.926, 25.9094, 0.2854 ) }
    apic_11 { pt3dadd( 225.783, 208.93, 25.889, 0.2944 ) }
    apic_11 { pt3dadd( 225.076, 208.033, 25.8291, 0.3124 ) }
    apic_11 { pt3dadd( 224.316, 207.178, 25.7382, 0.3404 ) }
    apic_11 { pt3dadd( 223.39, 206.52, 25.6076, 0.417 ) }
    apic_11 { pt3dadd( 222.449, 205.883, 25.4098, 0.4404 ) }
    apic_11 { pt3dadd( 221.734, 205.027, 25.1339, 0.373 ) }
    apic_11 { pt3dadd( 221.133, 204.083, 24.7983, 0.3266 ) }
    apic_11 { pt3dadd( 220.545, 203.131, 24.4293, 0.3188 ) }
    apic_11 { pt3dadd( 220.059, 202.104, 24.0956, 0.382 ) }
    apic_11 { pt3dadd( 219.651, 201.035, 23.8346, 0.3498 ) }
    apic_11 { pt3dadd( 219.255, 199.962, 23.639, 0.3296 ) }
    apic_11 { pt3dadd( 218.857, 198.889, 23.4898, 0.3286 ) }
    apic_11 { pt3dadd( 218.364, 197.859, 23.3507, 0.378 ) }
    apic_11 { pt3dadd( 217.75, 196.9, 23.1876, 0.4512 ) }
    apic_11 { pt3dadd( 217.093, 195.968, 22.9858, 0.6756 ) }
    apic_11 { pt3dadd( 216.446, 195.034, 22.7396, 0.6612 ) }
    apic_11 { pt3dadd( 215.822, 194.091, 22.4485, 0.6646 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_11 { pt3dadd( 215.21, 193.144, 22.1242, 0.525 ) }
    apic_11 { pt3dadd( 214.602, 192.19, 21.7934, 0.5162 ) }
    apic_11 { pt3dadd( 214.009, 191.215, 21.5098, 0.6592 ) }
    apic_11 { pt3dadd( 213.366, 190.271, 21.2766, 0.8368 ) }
    apic_11 { pt3dadd( 212.618, 189.422, 21.0598, 0.6776 ) }
    apic_11 { pt3dadd( 212.019, 188.5, 20.8179, 0.4654 ) }
    apic_11 { pt3dadd( 211.29, 187.631, 20.6339, 0.3544 ) }
    apic_11 { pt3dadd( 210.3, 187.25, 20.673, 0.3794 ) }
    apic_11 { pt3dadd( 209.203, 186.981, 20.7997, 0.4492 ) }
    apic_11 { pt3dadd( 208.09, 186.719, 20.9439, 0.6948 ) }
    apic_11 { pt3dadd( 206.977, 186.457, 21.0888, 0.5848 ) }
    apic_11 { pt3dadd( 206.05, 187.089, 21.2123, 0.3814 ) }
    apic_11 { pt3dadd( 205.47, 188.075, 21.3301, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 13/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 229.218, 217.228, 25.2354, 0.7204 ) }
    apic_8 { pt3dadd( 228.099, 216.492, 25.2032, 0.5498 ) }
    apic_8 { pt3dadd( 227.15, 215.865, 25.265, 0.488 ) }
    apic_8 { pt3dadd( 226.202, 215.239, 25.3959, 0.509 ) }
    apic_8 { pt3dadd( 225.253, 214.613, 25.5706, 0.8066 ) }
    apic_8 { pt3dadd( 224.275, 214.025, 25.7522, 0.7878 ) }
    apic_8 { pt3dadd( 223.264, 213.49, 25.9113, 0.7776 ) }
    apic_8 { pt3dadd( 222.243, 212.976, 26.0208, 0.868 ) }
    apic_8 { pt3dadd( 221.215, 212.473, 26.0953, 0.9628 ) }
    apic_8 { pt3dadd( 220.1, 212.255, 26.1485, 0.805 ) }
    apic_8 { pt3dadd( 218.959, 212.302, 26.1938, 0.5304 ) }
    apic_8 { pt3dadd( 217.942, 212.797, 26.2471, 0.391 ) }
    apic_8 { pt3dadd( 216.914, 213.298, 26.3206, 0.3974 ) }
    apic_8 { pt3dadd( 215.781, 213.383, 26.4196, 0.4956 ) }
    apic_8 { pt3dadd( 214.771, 212.872, 26.5447, 0.7176 ) }
    apic_8 { pt3dadd( 214.145, 211.925, 26.7229, 0.9344 ) }
    apic_8 { pt3dadd( 213.703, 210.979, 27.071, 0.909 ) }
    apic_8 { pt3dadd( 212.81, 210.35, 27.4865, 0.6496 ) }
    apic_8 { pt3dadd( 211.681, 210.185, 27.8365, 0.5112 ) }
    apic_8 { pt3dadd( 210.543, 210.078, 28.1081, 0.652 ) }
    apic_8 { pt3dadd( 209.399, 210.033, 28.294, 0.5866 ) }
    apic_8 { pt3dadd( 208.257, 209.964, 28.4018, 0.6756 ) }
    apic_8 { pt3dadd( 207.122, 209.822, 28.4458, 0.507 ) }
    apic_8 { pt3dadd( 205.981, 209.89, 28.462, 0.4414 ) }
    apic_8 { pt3dadd( 204.839, 209.961, 28.474, 0.4932 ) }
    apic_8 { pt3dadd( 203.697, 210.033, 28.4869, 0.433 ) }
    apic_8 { pt3dadd( 202.555, 210.104, 28.5048, 0.3942 ) }
    apic_8 { pt3dadd( 201.414, 210.177, 28.5348, 0.4266 ) }
    apic_8 { pt3dadd( 200.272, 210.249, 28.574, 0.437 ) }
    apic_8 { pt3dadd( 199.13, 210.322, 28.6194, 0.47 ) }
    apic_8 { pt3dadd( 197.99, 210.395, 28.6672, 0.692 ) }
    apic_8 { pt3dadd( 196.848, 210.323, 28.7148, 0.5526 ) }
    apic_8 { pt3dadd( 195.708, 210.244, 28.7588, 0.4514 ) }
    apic_8 { pt3dadd( 194.566, 210.164, 28.7958, 0.4166 ) }
    apic_8 { pt3dadd( 193.428, 210.057, 28.8226, 0.5238 ) }
    apic_8 { pt3dadd( 192.325, 209.753, 28.8207, 0.8062 ) }
    apic_8 { pt3dadd( 191.223, 209.447, 28.7969, 0.9226 ) }
    apic_8 { pt3dadd( 190.121, 209.143, 28.758, 1.0552 ) }
    apic_8 { pt3dadd( 188.998, 208.924, 28.7129, 1.0198 ) }
    apic_8 { pt3dadd( 187.871, 208.733, 28.6686, 0.7184 ) }
    apic_8 { pt3dadd( 186.743, 208.542, 28.6306, 0.6164 ) }
    apic_8 { pt3dadd( 185.615, 208.35, 28.6028, 0.4974 ) }
    apic_8 { pt3dadd( 184.487, 208.159, 28.5872, 0.3946 ) }
    apic_8 { pt3dadd( 183.356, 207.994, 28.5944, 0.3184 ) }
    apic_8 { pt3dadd( 182.223, 207.829, 28.6261, 0.3084 ) }
    apic_8 { pt3dadd( 181.092, 207.665, 28.6843, 0.3378 ) }
    apic_8 { pt3dadd( 179.959, 207.5, 28.7703, 0.39 ) }
    apic_8 { pt3dadd( 178.826, 207.349, 28.8868, 0.4984 ) }
    apic_8 { pt3dadd( 177.711, 207.486, 29.1012, 0.642 ) }
    apic_8 { pt3dadd( 176.597, 207.626, 29.3832, 0.4994 ) }
    apic_8 { pt3dadd( 175.483, 207.765, 29.7038, 0.3904 ) }
    apic_8 { pt3dadd( 174.37, 207.904, 30.0359, 0.3498 ) }
    apic_8 { pt3dadd( 173.23, 207.991, 30.301, 0.4046 ) }
    apic_8 { pt3dadd( 172.089, 208.049, 30.4671, 0.5608 ) }
    apic_8 { pt3dadd( 170.946, 208.107, 30.5441, 0.5862 ) }
    apic_8 { pt3dadd( 169.803, 208.166, 30.5542, 0.543 ) }
    apic_8 { pt3dadd( 168.661, 208.223, 30.5183, 0.6732 ) }
    apic_8 { pt3dadd( 167.526, 208.365, 30.4531, 0.5786 ) }
    apic_8 { pt3dadd( 166.415, 208.635, 30.3699, 0.6614 ) }
    apic_8 { pt3dadd( 165.303, 208.906, 30.2775, 0.4782 ) }
    apic_8 { pt3dadd( 164.193, 209.176, 30.1742, 0.4004 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 74/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 164.193, 209.176, 30.1742, 0.4004 ) }
    apic_10 { pt3dadd( 163.006, 209.449, 29.2608, 0.2288 ) }
    apic_10 { pt3dadd( 161.952, 209.693, 27.8636, 0.3896 ) }
    apic_10 { pt3dadd( 160.897, 209.937, 27.2688, 0.4974 ) }
    apic_10 { pt3dadd( 159.84, 210.147, 26.5631, 0.6404 ) }
    apic_10 { pt3dadd( 158.778, 210.298, 25.783, 0.4964 ) }
    apic_10 { pt3dadd( 157.718, 210.451, 24.9717, 0.3854 ) }
    apic_10 { pt3dadd( 156.656, 210.601, 24.1685, 0.3378 ) }
    apic_10 { pt3dadd( 155.574, 210.774, 23.4359, 0.3956 ) }
    apic_10 { pt3dadd( 154.463, 210.987, 22.8292, 0.48 ) }
    apic_10 { pt3dadd( 153.353, 211.2, 22.3331, 0.7472 ) }
    apic_10 { pt3dadd( 152.242, 211.412, 21.9324, 0.7062 ) }
    apic_10 { pt3dadd( 151.133, 211.629, 21.6113, 0.4886 ) }
    apic_10 { pt3dadd( 150.057, 212.019, 21.4238, 0.3136 ) }
    apic_10 { pt3dadd( 148.983, 212.41, 21.3305, 0.2542 ) }
    apic_10 { pt3dadd( 147.908, 212.8, 21.2991, 0.2288 ) }
    apic_10 { pt3dadd( 146.765, 212.846, 21.3301, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 91/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 164.193, 209.176, 30.1742, 0.4004 ) }
    apic_9 { pt3dadd( 163.841, 209.043, 30.0751, 0.3562 ) }
    apic_9 { pt3dadd( 162.753, 208.709, 29.9208, 0.4768 ) }
    apic_9 { pt3dadd( 161.688, 208.429, 29.6831, 0.4016 ) }
    apic_9 { pt3dadd( 160.799, 208.789, 29.6055, 0.341 ) }
    apic_9 { pt3dadd( 159.763, 208.525, 29.3622, 0.3038 ) }
    apic_9 { pt3dadd( 158.745, 208.31, 28.9906, 0.328 ) }
    apic_9 { pt3dadd( 157.75, 207.79, 28.6199, 0.377 ) }
    apic_9 { pt3dadd( 156.661, 207.564, 28.3486, 0.4492 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_9 { pt3dadd( 155.565, 207.515, 28.1369, 0.672 ) }
    apic_9 { pt3dadd( 154.495, 207.184, 27.9114, 0.6542 ) }
    apic_9 { pt3dadd( 153.4, 206.872, 27.764, 0.653 ) }
    apic_9 { pt3dadd( 152.282, 206.672, 27.6191, 0.4962 ) }
    apic_9 { pt3dadd( 151.164, 206.487, 27.4532, 0.4982 ) }
    apic_9 { pt3dadd( 150.032, 206.412, 27.3311, 0.4552 ) }
    apic_9 { pt3dadd( 148.929, 206.579, 27.2189, 0.6016 ) }
    apic_9 { pt3dadd( 147.912, 207.011, 27.1558, 0.4616 ) }
    apic_9 { pt3dadd( 147.06, 207.469, 27.0206, 0.3678 ) }
    apic_9 { pt3dadd( 146.112, 207.626, 26.9678, 0.3058 ) }
    apic_9 { pt3dadd( 145.144, 207.231, 27.1057, 0.3346 ) }
    apic_9 { pt3dadd( 144.107, 206.801, 27.3019, 0.3752 ) }
    apic_9 { pt3dadd( 143.0, 206.536, 27.4645, 0.5124 ) }
    apic_9 { pt3dadd( 141.927, 206.231, 27.6874, 0.4668 ) }
    apic_9 { pt3dadd( 140.877, 205.913, 28.0104, 0.4652 ) }
    apic_9 { pt3dadd( 139.776, 205.664, 28.2386, 0.517 ) }
    apic_9 { pt3dadd( 139.114, 204.861, 28.2794, 0.805 ) }
    apic_9 { pt3dadd( 138.372, 204.013, 28.2624, 0.8644 ) }
    apic_9 { pt3dadd( 137.451, 203.542, 28.4416, 0.5338 ) }
    apic_9 { pt3dadd( 136.389, 203.474, 29.2435, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_696, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_696 = new SectionList()
    soma_0 ModelViewParmSubset_696.append()
    axon_0 ModelViewParmSubset_696.append()
    axon_1 ModelViewParmSubset_696.append()

    // Group: {name=ModelViewParmSubset_697, groups=[], sections=[dend_17, dend_12, dend_7, dend_0, apic_0, dend_27, dend_18, dend_14, dend_13, dend_11, dend_8, dend_4, dend_1, apic_20, apic_1, dend_30, dend_29, dend_28, dend_22, dend_19, dend_16, dend_15, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, apic_19, apic_2, dend_26, dend_23, dend_21, dend_20, apic_18, apic_3, dend_25, dend_24, apic_17, apic_4, apic_16, apic_5, apic_13, apic_6, apic_15, apic_14, apic_12, apic_7, apic_11, apic_8, apic_10, apic_9]}
    ModelViewParmSubset_697 = new SectionList()
    dend_17 ModelViewParmSubset_697.append()
    dend_12 ModelViewParmSubset_697.append()
    dend_7 ModelViewParmSubset_697.append()
    dend_0 ModelViewParmSubset_697.append()
    apic_0 ModelViewParmSubset_697.append()
    dend_27 ModelViewParmSubset_697.append()
    dend_18 ModelViewParmSubset_697.append()
    dend_14 ModelViewParmSubset_697.append()
    dend_13 ModelViewParmSubset_697.append()
    dend_11 ModelViewParmSubset_697.append()
    dend_8 ModelViewParmSubset_697.append()
    dend_4 ModelViewParmSubset_697.append()
    dend_1 ModelViewParmSubset_697.append()
    apic_20 ModelViewParmSubset_697.append()
    apic_1 ModelViewParmSubset_697.append()
    dend_30 ModelViewParmSubset_697.append()
    dend_29 ModelViewParmSubset_697.append()
    dend_28 ModelViewParmSubset_697.append()
    dend_22 ModelViewParmSubset_697.append()
    dend_19 ModelViewParmSubset_697.append()
    dend_16 ModelViewParmSubset_697.append()
    dend_15 ModelViewParmSubset_697.append()
    dend_10 ModelViewParmSubset_697.append()
    dend_9 ModelViewParmSubset_697.append()
    dend_6 ModelViewParmSubset_697.append()
    dend_5 ModelViewParmSubset_697.append()
    dend_3 ModelViewParmSubset_697.append()
    dend_2 ModelViewParmSubset_697.append()
    apic_19 ModelViewParmSubset_697.append()
    apic_2 ModelViewParmSubset_697.append()
    dend_26 ModelViewParmSubset_697.append()
    dend_23 ModelViewParmSubset_697.append()
    dend_21 ModelViewParmSubset_697.append()
    dend_20 ModelViewParmSubset_697.append()
    apic_18 ModelViewParmSubset_697.append()
    apic_3 ModelViewParmSubset_697.append()
    dend_25 ModelViewParmSubset_697.append()
    dend_24 ModelViewParmSubset_697.append()
    apic_17 ModelViewParmSubset_697.append()
    apic_4 ModelViewParmSubset_697.append()
    apic_16 ModelViewParmSubset_697.append()
    apic_5 ModelViewParmSubset_697.append()
    apic_13 ModelViewParmSubset_697.append()
    apic_6 ModelViewParmSubset_697.append()
    apic_15 ModelViewParmSubset_697.append()
    apic_14 ModelViewParmSubset_697.append()
    apic_12 ModelViewParmSubset_697.append()
    apic_7 ModelViewParmSubset_697.append()
    apic_11 ModelViewParmSubset_697.append()
    apic_8 ModelViewParmSubset_697.append()
    apic_10 ModelViewParmSubset_697.append()
    apic_9 ModelViewParmSubset_697.append()

    // Group: {name=dend, groups=[], sections=[dend_17, dend_12, dend_7, dend_0, dend_27, dend_18, dend_14, dend_13, dend_11, dend_8, dend_4, dend_1, dend_30, dend_29, dend_28, dend_22, dend_19, dend_16, dend_15, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_26, dend_23, dend_21, dend_20, dend_25, dend_24]}
    dend = new SectionList()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_27 dend.append()
    dend_18 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_19, apic_2, apic_18, apic_3, apic_17, apic_4, apic_16, apic_5, apic_13, apic_6, apic_15, apic_14, apic_12, apic_7, apic_11, apic_8, apic_10, apic_9]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_19 apic.append()
    apic_2 apic.append()
    apic_18 apic.append()
    apic_3 apic.append()
    apic_17 apic.append()
    apic_4 apic.append()
    apic_16 apic.append()
    apic_5 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_13 apic.append()
    apic_6 apic.append()
    apic_15 apic.append()
    apic_14 apic.append()
    apic_12 apic.append()
    apic_7 apic.append()
    apic_11 apic.append()
    apic_8 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()

    // Group: {name=OneSecGrp_SectionRef_28793, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_28793 = new SectionList()
    soma_0 OneSecGrp_SectionRef_28793.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.4182842  // units: uF/cm2
    forsec apic cm = 3.4182842  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 131.79703  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 1.595575E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 4.995667E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.43420327  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 4.706734E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0026862223  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 7.45479E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.15407269  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.2675367  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.8602892E-4  // units: S cm-2
        e_pas_nml2 = -87.64024  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.4634678E-4  // units: S cm-2
        e_pas_nml2 = -87.64024  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.7644044E-7  // units: S cm-2
        e_pas_nml2 = -87.64024  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.6817515E-4  // units: S cm-2
        e_pas_nml2 = -87.64024  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.881062E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 2.5629642E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_482657381
    forsec soma {
        insert CaDynamics_482657381
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_13 nseg = 5
    apic_20 nseg = 3
    dend_15 nseg = 5
    dend_9 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_23 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    apic_18 nseg = 3
    dend_25 nseg = 3
    apic_17 nseg = 5
    apic_16 nseg = 5
    apic_5 nseg = 5
    apic_13 nseg = 7
    apic_6 nseg = 3
    apic_14 nseg = 3
    apic_12 nseg = 5
    apic_11 nseg = 3
    apic_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_482657381


