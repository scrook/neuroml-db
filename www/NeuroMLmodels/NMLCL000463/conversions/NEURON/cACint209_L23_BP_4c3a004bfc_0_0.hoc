// Cell: cACint209_L23_BP_4c3a004bfc_0_0
/*
{
  "id" : "cACint209_L23_BP_4c3a004bfc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.70147, 10.7418, 1.66", "-0.8332, -11.6765, 13.2701, 1.66", "-1.67539, -14.8875, 15.9989, 1.66", "-3.12174, -20.402, 20.6853, 1.39", "-8.8739, -42.3332, 39.3233, 1.11", "-9.88296, -46.1804, 42.5929, 1.11", "-11.161, -51.0531, 46.7338, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.66878, -0.778182, 1.39", "0.628855, 13.9134, 2.01643, 0.83", "0.632731, 15.9696, 2.93661, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.161, -51.0531, 46.7338, 0.83", "-14.5828, -57.9226, 44.2519, 0.83", "-15.3976, -59.5583, 43.6609, 0.83", "-17.4774, -63.7336, 42.1524, 0.83", "-18.4098, -65.6053, 41.4762, 0.83", "-20.4148, -69.6304, 40.0219, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.161, -51.0531, 46.7338, 0.83", "-11.0777, -52.85, 47.0596, 0.83", "-11.0008, -54.4779, 47.329, 0.83", "-10.9698, -56.6151, 47.6477, 0.83", "-10.8005, -61.4968, 48.249, 0.83", "-10.6011, -65.5231, 48.6865, 0.55", "-10.2535, -72.3549, 49.2743, 0.55", "-9.98445, -75.7458, 49.6045, 0.83", "-9.58551, -79.6178, 49.9938, 0.55", "-8.75437, -85.9274, 50.8389, 0.55", "-8.48048, -87.7266, 51.1059, 0.55", "-7.7239, -92.6037, 51.8599, 0.55", "-6.76025, -98.749, 52.9735, 0.55", "-6.19097, -102.428, 53.6836, 0.55", "-5.48531, -107.329, 54.673, 0.55", "-4.54309, -116.174, 56.5315, 0.55", "-4.184, -120.852, 57.4842, 0.55", "-3.99121, -124.351, 58.1385, 0.55", "-4.00169, -126.789, 58.4754, 0.55", "-4.12291, -128.932, 58.7168, 0.55", "-4.56372, -133.24, 59.284, 0.55", "-4.83655, -135.398, 59.5831, 0.55", "-5.28098, -138.693, 60.1822, 0.55", "-5.89715, -143.103, 61.0593, 0.55", "-6.87257, -149.47, 62.4199, 0.55", "-7.71995, -155.197, 63.735, 0.55", "-8.51475, -160.192, 64.9877, 0.83", "-9.30029, -164.958, 66.3564, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.632731, 15.9696, 2.93661, 0.83", "1.03908, 23.5906, -0.816674, 0.83", "1.20254, 25.5974, -1.72193, 0.83", "1.40365, 28.057, -2.85715, 0.83", "1.59504, 30.088, -3.73062, 0.83", "1.91102, 33.336, -5.05553, 0.83", "2.37139, 37.5824, -6.68605, 0.83", "2.64416, 40.6036, -7.59108, 0.83", "2.97521, 43.8711, -8.62663, 0.83", "3.37518, 47.2237, -9.82302, 0.55", "3.50243, 48.2853, -10.2084, 0.55", "3.69186, 50.1025, -10.8824, 0.55", "4.13462, 53.8954, -12.2135, 0.55", "4.42437, 56.6483, -13.1468, 0.55", "5.20701, 63.5451, -15.471, 0.55", "5.54118, 66.6586, -16.6599, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.632731, 15.9696, 2.93661, 0.83", "1.69913, 19.3342, 4.42978, 0.83", "2.45031, 21.9913, 5.69261, 0.83", "3.49107, 26.1867, 7.80947, 0.83", "4.44086, 30.232, 9.88101, 0.83", "5.52638, 35.3558, 12.2493, 0.83", "6.35846, 39.2179, 13.9255, 0.83", "6.87767, 42.1426, 15.1781, 0.83", "7.43162, 45.3515, 16.4288, 0.83", "7.55377, 46.2258, 16.7101, 0.83", "9.05371, 56.2743, 19.3835, 0.83", "9.35192, 58.4108, 19.7955, 0.83", "9.75903, 61.3161, 20.1925, 0.83", "10.0952, 63.8314, 20.4711, 0.83", "10.4464, 66.7498, 20.7338, 0.83", "10.9179, 70.435, 21.0739, 0.83", "11.3074, 74.2353, 21.3884, 0.83", "11.5689, 76.4052, 21.5792, 0.83", "12.0677, 79.7584, 21.891, 0.83", "12.5006, 83.0574, 22.1927, 0.83", "13.0249, 86.5224, 22.482, 0.83", "13.6989, 91.0514, 22.9104, 0.83", "14.1128, 94.0108, 23.3303, 0.83", "14.301, 95.6497, 23.6023, 0.83", "14.4575, 97.5053, 23.9993, 0.83", "14.652, 100.252, 24.7538, 0.83", "14.7025, 104.292, 26.087, 0.55", "14.7489, 109.591, 28.0635, 0.55", "14.6762, 111.152, 28.6549, 0.55", "14.5135, 114.437, 29.8758, 0.55", "14.4134, 115.815, 30.3583, 0.55", "14.1843, 118.4, 31.2474, 0.55", "14.0214, 121.095, 32.0565, 0.55", "14.0044, 125.004, 33.0393, 0.55", "14.0099, 127.58, 33.6484, 0.55", "13.9892, 129.925, 34.1156, 0.55", "14.0455, 132.853, 34.7056, 0.55", "14.2967, 135.896, 35.3007, 0.55", "14.7524, 140.044, 36.2036, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-20.4148, -69.6304, 40.0219, 0.83", "-22.6204, -74.7557, 42.3469, 0.83", "-24.3573, -78.8147, 43.9803, 0.83", "-26.4409, -83.7078, 45.7212, 0.83", "-28.175, -87.7484, 47.0149, 0.83", "-29.2288, -90.2039, 47.8011, 0.83", "-30.4853, -93.1317, 48.7385, 0.83", "-31.3135, -95.257, 49.2518, 0.83", "-32.2551, -97.6815, 49.7231, 0.83", "-33.4023, -100.779, 49.8296, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-20.4148, -69.6304, 40.0219, 0.55", "-18.4315, -70.0236, 48.2795, 0.55", "-16.047, -70.4082, 57.0553, 0.55", "-14.8357, -70.6035, 61.5133, 0.55", "-13.3101, -70.8496, 67.1281, 0.28", "-13.0581, -70.8902, 68.0557, 0.83", "-11.736, -71.1035, 72.9217, 0.28", "-11.4779, -71.0887, 73.7474, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.54118, 66.6586, -16.6599, 0.55", "5.84024, 69.2062, -16.6997, 0.55", "6.2076, 71.8982, -16.7984, 0.55", "6.45455, 73.7906, -16.8524, 0.55", "6.83829, 76.6327, -16.9016, 0.83", "7.10452, 78.653, -16.9262, 0.55", "7.36255, 80.5379, -16.9298, 0.55", "7.57238, 82.3013, -16.8918, 1.11", "8.01303, 85.3643, -16.8862, 0.55", "8.15097, 86.3876, -16.9189, 0.55", "8.33026, 87.6781, -16.9758, 1.11", "8.55378, 89.2792, -17.0614, 0.55", "8.68434, 90.3243, -17.131, 1.11", "9.03636, 93.5126, -17.3376, 0.55", "9.25033, 95.1896, -17.581, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.54118, 66.6586, -16.6599, 0.28", "6.80933, 69.4164, -19.3719, 0.28", "7.00808, 69.8298, -19.7577, 0.55", "8.74148, 73.4886, -22.9921, 0.28", "10.5381, 76.899, -26.1264, 1.11", "11.572, 78.6719, -27.8179, 0.28", "11.572, 78.6719, -27.8179, 0.55", "12.8361, 80.8387, -29.3125, 0.28", "13.3408, 81.6712, -29.76, 1.11", "15.6391, 85.3853, -30.3687, 0.55", "17.3357, 88.2925, -29.754, 0.28", "19.9658, 92.8481, -28.1001, 1.11", "22.1326, 96.7174, -26.2093, 0.28", "22.1797, 96.8076, -26.1424, 0.55", "23.4258, 99.3714, -23.6891, 0.28", "23.5148, 99.5977, -23.4094, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-33.4023, -100.779, 49.8296, 0.83", "-33.5557, -106.313, 51.9827, 0.83", "-33.7251, -110.741, 54.0198, 0.83", "-33.7459, -112.815, 54.9895, 0.83", "-33.7832, -114.003, 55.652, 0.83", "-33.9782, -117.245, 57.5395, 0.83", "-34.0955, -119.167, 58.5111, 0.83", "-34.2524, -122.836, 59.9894, 0.83", "-34.2533, -125.384, 61.0307, 0.83", "-34.021, -129.747, 62.6706, 0.83", "-33.768, -132.003, 63.3687, 0.83", "-32.963, -137.579, 64.5501, 0.83", "-32.2562, -142.566, 65.2699, 0.83", "-31.7511, -146.702, 65.4938, 0.83", "-31.525, -149.695, 65.5567, 0.83", "-31.4871, -150.3, 65.5488, 0.83", "-31.428, -153.755, 65.6745, 0.28", "-31.4817, -154.665, 65.7692, 0.83", "-31.7773, -157.009, 65.9373, 0.28", "-32.3537, -161.174, 66.1645, 0.28", "-32.4906, -162.066, 66.2468, 0.28", "-32.9075, -164.91, 66.533, 0.83", "-33.2153, -167.427, 66.826, 0.28", "-33.4513, -169.444, 67.0905, 0.83", "-33.5767, -171.06, 67.3522, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-33.4023, -100.779, 49.8296, 0.55", "-36.855, -105.998, 48.0686, 0.55", "-38.4146, -108.222, 47.3975, 0.55", "-41.8244, -112.923, 46.125, 0.55", "-43.3358, -114.926, 45.6381, 0.55", "-44.8825, -116.863, 45.2271, 0.28", "-45.5737, -117.728, 45.0434, 0.55", "-47.3636, -119.696, 44.8014, 0.28", "-48.5476, -120.971, 44.6862, 0.55", "-50.0195, -122.437, 44.7244, 0.28", "-52.3444, -124.621, 44.778, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "axon_0", "dend_7", "dend_6", "dend_2", "dend_1", "axon_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BP_4c3a004bfc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.70147, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.8332, -11.6765, 13.2701, 1.66 ) }
    dend_5 { pt3dadd( -1.67539, -14.8875, 15.9989, 1.66 ) }
    dend_5 { pt3dadd( -3.12174, -20.402, 20.6853, 1.39 ) }
    dend_5 { pt3dadd( -8.8739, -42.3332, 39.3233, 1.11 ) }
    dend_5 { pt3dadd( -9.88296, -46.1804, 42.5929, 1.11 ) }
    dend_5 { pt3dadd( -11.161, -51.0531, 46.7338, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.66878, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.628855, 13.9134, 2.01643, 0.83 ) }
    dend_0 { pt3dadd( 0.632731, 15.9696, 2.93661, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.161, -51.0531, 46.7338, 0.83 ) }
    dend_7 { pt3dadd( -14.5828, -57.9226, 44.2519, 0.83 ) }
    dend_7 { pt3dadd( -15.3976, -59.5583, 43.6609, 0.83 ) }
    dend_7 { pt3dadd( -17.4774, -63.7336, 42.1524, 0.83 ) }
    dend_7 { pt3dadd( -18.4098, -65.6053, 41.4762, 0.83 ) }
    dend_7 { pt3dadd( -20.4148, -69.6304, 40.0219, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.161, -51.0531, 46.7338, 0.83 ) }
    dend_6 { pt3dadd( -11.0777, -52.85, 47.0596, 0.83 ) }
    dend_6 { pt3dadd( -11.0008, -54.4779, 47.329, 0.83 ) }
    dend_6 { pt3dadd( -10.9698, -56.6151, 47.6477, 0.83 ) }
    dend_6 { pt3dadd( -10.8005, -61.4968, 48.249, 0.83 ) }
    dend_6 { pt3dadd( -10.6011, -65.5231, 48.6865, 0.55 ) }
    dend_6 { pt3dadd( -10.2535, -72.3549, 49.2743, 0.55 ) }
    dend_6 { pt3dadd( -9.98445, -75.7458, 49.6045, 0.83 ) }
    dend_6 { pt3dadd( -9.58551, -79.6178, 49.9938, 0.55 ) }
    dend_6 { pt3dadd( -8.75437, -85.9274, 50.8389, 0.55 ) }
    dend_6 { pt3dadd( -8.48048, -87.7266, 51.1059, 0.55 ) }
    dend_6 { pt3dadd( -7.7239, -92.6037, 51.8599, 0.55 ) }
    dend_6 { pt3dadd( -6.76025, -98.749, 52.9735, 0.55 ) }
    dend_6 { pt3dadd( -6.19097, -102.428, 53.6836, 0.55 ) }
    dend_6 { pt3dadd( -5.48531, -107.329, 54.673, 0.55 ) }
    dend_6 { pt3dadd( -4.54309, -116.174, 56.5315, 0.55 ) }
    dend_6 { pt3dadd( -4.184, -120.852, 57.4842, 0.55 ) }
    dend_6 { pt3dadd( -3.99121, -124.351, 58.1385, 0.55 ) }
    dend_6 { pt3dadd( -4.00169, -126.789, 58.4754, 0.55 ) }
    dend_6 { pt3dadd( -4.12291, -128.932, 58.7168, 0.55 ) }
    dend_6 { pt3dadd( -4.56372, -133.24, 59.284, 0.55 ) }
    dend_6 { pt3dadd( -4.83655, -135.398, 59.5831, 0.55 ) }
    dend_6 { pt3dadd( -5.28098, -138.693, 60.1822, 0.55 ) }
    dend_6 { pt3dadd( -5.89715, -143.103, 61.0593, 0.55 ) }
    dend_6 { pt3dadd( -6.87257, -149.47, 62.4199, 0.55 ) }
    dend_6 { pt3dadd( -7.71995, -155.197, 63.735, 0.55 ) }
    dend_6 { pt3dadd( -8.51475, -160.192, 64.9877, 0.83 ) }
    dend_6 { pt3dadd( -9.30029, -164.958, 66.3564, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.632731, 15.9696, 2.93661, 0.83 ) }
    dend_2 { pt3dadd( 1.03908, 23.5906, -0.816674, 0.83 ) }
    dend_2 { pt3dadd( 1.20254, 25.5974, -1.72193, 0.83 ) }
    dend_2 { pt3dadd( 1.40365, 28.057, -2.85715, 0.83 ) }
    dend_2 { pt3dadd( 1.59504, 30.088, -3.73062, 0.83 ) }
    dend_2 { pt3dadd( 1.91102, 33.336, -5.05553, 0.83 ) }
    dend_2 { pt3dadd( 2.37139, 37.5824, -6.68605, 0.83 ) }
    dend_2 { pt3dadd( 2.64416, 40.6036, -7.59108, 0.83 ) }
    dend_2 { pt3dadd( 2.97521, 43.8711, -8.62663, 0.83 ) }
    dend_2 { pt3dadd( 3.37518, 47.2237, -9.82302, 0.55 ) }
    dend_2 { pt3dadd( 3.50243, 48.2853, -10.2084, 0.55 ) }
    dend_2 { pt3dadd( 3.69186, 50.1025, -10.8824, 0.55 ) }
    dend_2 { pt3dadd( 4.13462, 53.8954, -12.2135, 0.55 ) }
    dend_2 { pt3dadd( 4.42437, 56.6483, -13.1468, 0.55 ) }
    dend_2 { pt3dadd( 5.20701, 63.5451, -15.471, 0.55 ) }
    dend_2 { pt3dadd( 5.54118, 66.6586, -16.6599, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.632731, 15.9696, 2.93661, 0.83 ) }
    dend_1 { pt3dadd( 1.69913, 19.3342, 4.42978, 0.83 ) }
    dend_1 { pt3dadd( 2.45031, 21.9913, 5.69261, 0.83 ) }
    dend_1 { pt3dadd( 3.49107, 26.1867, 7.80947, 0.83 ) }
    dend_1 { pt3dadd( 4.44086, 30.232, 9.88101, 0.83 ) }
    dend_1 { pt3dadd( 5.52638, 35.3558, 12.2493, 0.83 ) }
    dend_1 { pt3dadd( 6.35846, 39.2179, 13.9255, 0.83 ) }
    dend_1 { pt3dadd( 6.87767, 42.1426, 15.1781, 0.83 ) }
    dend_1 { pt3dadd( 7.43162, 45.3515, 16.4288, 0.83 ) }
    dend_1 { pt3dadd( 7.55377, 46.2258, 16.7101, 0.83 ) }
    dend_1 { pt3dadd( 9.05371, 56.2743, 19.3835, 0.83 ) }
    dend_1 { pt3dadd( 9.35192, 58.4108, 19.7955, 0.83 ) }
    dend_1 { pt3dadd( 9.75903, 61.3161, 20.1925, 0.83 ) }
    dend_1 { pt3dadd( 10.0952, 63.8314, 20.4711, 0.83 ) }
    dend_1 { pt3dadd( 10.4464, 66.7498, 20.7338, 0.83 ) }
    dend_1 { pt3dadd( 10.9179, 70.435, 21.0739, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 11.3074, 74.2353, 21.3884, 0.83 ) }
    dend_1 { pt3dadd( 11.5689, 76.4052, 21.5792, 0.83 ) }
    dend_1 { pt3dadd( 12.0677, 79.7584, 21.891, 0.83 ) }
    dend_1 { pt3dadd( 12.5006, 83.0574, 22.1927, 0.83 ) }
    dend_1 { pt3dadd( 13.0249, 86.5224, 22.482, 0.83 ) }
    dend_1 { pt3dadd( 13.6989, 91.0514, 22.9104, 0.83 ) }
    dend_1 { pt3dadd( 14.1128, 94.0108, 23.3303, 0.83 ) }
    dend_1 { pt3dadd( 14.301, 95.6497, 23.6023, 0.83 ) }
    dend_1 { pt3dadd( 14.4575, 97.5053, 23.9993, 0.83 ) }
    dend_1 { pt3dadd( 14.652, 100.252, 24.7538, 0.83 ) }
    dend_1 { pt3dadd( 14.7025, 104.292, 26.087, 0.55 ) }
    dend_1 { pt3dadd( 14.7489, 109.591, 28.0635, 0.55 ) }
    dend_1 { pt3dadd( 14.6762, 111.152, 28.6549, 0.55 ) }
    dend_1 { pt3dadd( 14.5135, 114.437, 29.8758, 0.55 ) }
    dend_1 { pt3dadd( 14.4134, 115.815, 30.3583, 0.55 ) }
    dend_1 { pt3dadd( 14.1843, 118.4, 31.2474, 0.55 ) }
    dend_1 { pt3dadd( 14.0214, 121.095, 32.0565, 0.55 ) }
    dend_1 { pt3dadd( 14.0044, 125.004, 33.0393, 0.55 ) }
    dend_1 { pt3dadd( 14.0099, 127.58, 33.6484, 0.55 ) }
    dend_1 { pt3dadd( 13.9892, 129.925, 34.1156, 0.55 ) }
    dend_1 { pt3dadd( 14.0455, 132.853, 34.7056, 0.55 ) }
    dend_1 { pt3dadd( 14.2967, 135.896, 35.3007, 0.55 ) }
    dend_1 { pt3dadd( 14.7524, 140.044, 36.2036, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -20.4148, -69.6304, 40.0219, 0.83 ) }
    dend_9 { pt3dadd( -22.6204, -74.7557, 42.3469, 0.83 ) }
    dend_9 { pt3dadd( -24.3573, -78.8147, 43.9803, 0.83 ) }
    dend_9 { pt3dadd( -26.4409, -83.7078, 45.7212, 0.83 ) }
    dend_9 { pt3dadd( -28.175, -87.7484, 47.0149, 0.83 ) }
    dend_9 { pt3dadd( -29.2288, -90.2039, 47.8011, 0.83 ) }
    dend_9 { pt3dadd( -30.4853, -93.1317, 48.7385, 0.83 ) }
    dend_9 { pt3dadd( -31.3135, -95.257, 49.2518, 0.83 ) }
    dend_9 { pt3dadd( -32.2551, -97.6815, 49.7231, 0.83 ) }
    dend_9 { pt3dadd( -33.4023, -100.779, 49.8296, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -20.4148, -69.6304, 40.0219, 0.55 ) }
    dend_8 { pt3dadd( -18.4315, -70.0236, 48.2795, 0.55 ) }
    dend_8 { pt3dadd( -16.047, -70.4082, 57.0553, 0.55 ) }
    dend_8 { pt3dadd( -14.8357, -70.6035, 61.5133, 0.55 ) }
    dend_8 { pt3dadd( -13.3101, -70.8496, 67.1281, 0.28 ) }
    dend_8 { pt3dadd( -13.0581, -70.8902, 68.0557, 0.83 ) }
    dend_8 { pt3dadd( -11.736, -71.1035, 72.9217, 0.28 ) }
    dend_8 { pt3dadd( -11.4779, -71.0887, 73.7474, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.54118, 66.6586, -16.6599, 0.55 ) }
    dend_4 { pt3dadd( 5.84024, 69.2062, -16.6997, 0.55 ) }
    dend_4 { pt3dadd( 6.2076, 71.8982, -16.7984, 0.55 ) }
    dend_4 { pt3dadd( 6.45455, 73.7906, -16.8524, 0.55 ) }
    dend_4 { pt3dadd( 6.83829, 76.6327, -16.9016, 0.83 ) }
    dend_4 { pt3dadd( 7.10452, 78.653, -16.9262, 0.55 ) }
    dend_4 { pt3dadd( 7.36255, 80.5379, -16.9298, 0.55 ) }
    dend_4 { pt3dadd( 7.57238, 82.3013, -16.8918, 1.11 ) }
    dend_4 { pt3dadd( 8.01303, 85.3643, -16.8862, 0.55 ) }
    dend_4 { pt3dadd( 8.15097, 86.3876, -16.9189, 0.55 ) }
    dend_4 { pt3dadd( 8.33026, 87.6781, -16.9758, 1.11 ) }
    dend_4 { pt3dadd( 8.55378, 89.2792, -17.0614, 0.55 ) }
    dend_4 { pt3dadd( 8.68434, 90.3243, -17.131, 1.11 ) }
    dend_4 { pt3dadd( 9.03636, 93.5126, -17.3376, 0.55 ) }
    dend_4 { pt3dadd( 9.25033, 95.1896, -17.581, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.54118, 66.6586, -16.6599, 0.28 ) }
    dend_3 { pt3dadd( 6.80933, 69.4164, -19.3719, 0.28 ) }
    dend_3 { pt3dadd( 7.00808, 69.8298, -19.7577, 0.55 ) }
    dend_3 { pt3dadd( 8.74148, 73.4886, -22.9921, 0.28 ) }
    dend_3 { pt3dadd( 10.5381, 76.899, -26.1264, 1.11 ) }
    dend_3 { pt3dadd( 11.572, 78.6719, -27.8179, 0.28 ) }
    dend_3 { pt3dadd( 11.572, 78.6719, -27.8179, 0.55 ) }
    dend_3 { pt3dadd( 12.8361, 80.8387, -29.3125, 0.28 ) }
    dend_3 { pt3dadd( 13.3408, 81.6712, -29.76, 1.11 ) }
    dend_3 { pt3dadd( 15.6391, 85.3853, -30.3687, 0.55 ) }
    dend_3 { pt3dadd( 17.3357, 88.2925, -29.754, 0.28 ) }
    dend_3 { pt3dadd( 19.9658, 92.8481, -28.1001, 1.11 ) }
    dend_3 { pt3dadd( 22.1326, 96.7174, -26.2093, 0.28 ) }
    dend_3 { pt3dadd( 22.1797, 96.8076, -26.1424, 0.55 ) }
    dend_3 { pt3dadd( 23.4258, 99.3714, -23.6891, 0.28 ) }
    dend_3 { pt3dadd( 23.5148, 99.5977, -23.4094, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -33.4023, -100.779, 49.8296, 0.83 ) }
    dend_11 { pt3dadd( -33.5557, -106.313, 51.9827, 0.83 ) }
    dend_11 { pt3dadd( -33.7251, -110.741, 54.0198, 0.83 ) }
    dend_11 { pt3dadd( -33.7459, -112.815, 54.9895, 0.83 ) }
    dend_11 { pt3dadd( -33.7832, -114.003, 55.652, 0.83 ) }
    dend_11 { pt3dadd( -33.9782, -117.245, 57.5395, 0.83 ) }
    dend_11 { pt3dadd( -34.0955, -119.167, 58.5111, 0.83 ) }
    dend_11 { pt3dadd( -34.2524, -122.836, 59.9894, 0.83 ) }
    dend_11 { pt3dadd( -34.2533, -125.384, 61.0307, 0.83 ) }
    dend_11 { pt3dadd( -34.021, -129.747, 62.6706, 0.83 ) }
    dend_11 { pt3dadd( -33.768, -132.003, 63.3687, 0.83 ) }
    dend_11 { pt3dadd( -32.963, -137.579, 64.5501, 0.83 ) }
    dend_11 { pt3dadd( -32.2562, -142.566, 65.2699, 0.83 ) }
    dend_11 { pt3dadd( -31.7511, -146.702, 65.4938, 0.83 ) }
    dend_11 { pt3dadd( -31.525, -149.695, 65.5567, 0.83 ) }
    dend_11 { pt3dadd( -31.4871, -150.3, 65.5488, 0.83 ) }
    dend_11 { pt3dadd( -31.428, -153.755, 65.6745, 0.28 ) }
    dend_11 { pt3dadd( -31.4817, -154.665, 65.7692, 0.83 ) }
    dend_11 { pt3dadd( -31.7773, -157.009, 65.9373, 0.28 ) }
    dend_11 { pt3dadd( -32.3537, -161.174, 66.1645, 0.28 ) }
    dend_11 { pt3dadd( -32.4906, -162.066, 66.2468, 0.28 ) }
    dend_11 { pt3dadd( -32.9075, -164.91, 66.533, 0.83 ) }
    dend_11 { pt3dadd( -33.2153, -167.427, 66.826, 0.28 ) }
    dend_11 { pt3dadd( -33.4513, -169.444, 67.0905, 0.83 ) }
    dend_11 { pt3dadd( -33.5767, -171.06, 67.3522, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -33.4023, -100.779, 49.8296, 0.55 ) }
    dend_10 { pt3dadd( -36.855, -105.998, 48.0686, 0.55 ) }
    dend_10 { pt3dadd( -38.4146, -108.222, 47.3975, 0.55 ) }
    dend_10 { pt3dadd( -41.8244, -112.923, 46.125, 0.55 ) }
    dend_10 { pt3dadd( -43.3358, -114.926, 45.6381, 0.55 ) }
    dend_10 { pt3dadd( -44.8825, -116.863, 45.2271, 0.28 ) }
    dend_10 { pt3dadd( -45.5737, -117.728, 45.0434, 0.55 ) }
    dend_10 { pt3dadd( -47.3636, -119.696, 44.8014, 0.28 ) }
    dend_10 { pt3dadd( -48.5476, -120.971, 44.6862, 0.55 ) }
    dend_10 { pt3dadd( -50.0195, -122.437, 44.7244, 0.28 ) }
    dend_10 { pt3dadd( -52.3444, -124.621, 44.778, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_5 = new SectionList()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BP_4c3a004bfc_0_0


