// Cell: bNAC219_L6_MC_5597e4d536_0_0
/*
{
  "id" : "bNAC219_L6_MC_5597e4d536_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.24331, 10.746, 0.33713, 2.37469", "1.15672, 9.59164, 0.30254, 4.11758", "1.07014, 8.43727, 0.26795, 5.23506", "0.983554, 7.28291, 0.23336, 6.11957", "0.89697, 6.12855, 0.19877, 7.12192", "0.810387, 4.97418, 0.164181, 8.18469", "0.723803, 3.81982, 0.129591, 9.27345", "0.637219, 2.66546, 0.095001, 10.2413", "0.550635, 1.5111, 0.0604113, 10.8301", "0.464052, 0.356733, 0.0258215, 11.3177", "0.377468, -0.79763, -0.00876834, 11.2674", "0.290884, -1.95199, -0.0433581, 10.846", "0.204301, -3.10636, -0.0779479, 10.2057", "0.117717, -4.26072, -0.112538, 9.47915", "0.0311331, -5.41508, -0.147128, 8.88403", "-0.0554507, -6.56944, -0.181717, 8.44045", "-0.142034, -7.72381, -0.216307, 7.70936", "-0.228618, -8.87817, -0.250897, 6.84096", "-0.315202, -10.0325, -0.285487, 5.77533", "-0.401786, -11.1869, -0.320077, 4.35755", "-0.488369, -12.3413, -0.354666, 2.49926" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.885881, 10.6664, 0.230613, 1.84", "-0.885881, 10.6664, 0.230613, 1.84", "-1.6455, 11.9792, 0.352823, 1.55", "-2.43925, 13.1512, 0.526076, 1.47", "-3.32048, 14.3334, 0.735418, 1.47", "-3.48573, 14.5469, 0.775537, 1.47", "-3.60608, 14.7013, 0.805151, 1.47", "-4.59371, 15.939, 1.05273, 0.88", "-5.23681, 16.7303, 1.24758, 0.88", "-5.837, 17.5059, 1.46097, 0.88", "-6.65352, 18.5934, 1.81233, 0.88", "-7.21288, 19.367, 2.10442, 0.81", "-8.08192, 20.5658, 2.64275, 0.81", "-8.64832, 21.3239, 3.04472, 0.96", "-9.47204, 22.3371, 3.71096, 0.81", "-10.2338, 23.1961, 4.38345, 0.81", "-10.9042, 23.904, 5.02189, 0.81", "-11.6341, 24.6495, 5.7485, 0.96", "-12.1772, 25.181, 6.32323, 0.96", "-12.7542, 25.6986, 6.921, 1.03", "-13.1814, 26.07, 7.36483, 1.03", "-13.9964, 26.8146, 8.1929, 0.81", "-14.7768, 27.6063, 8.98667, 0.66", "-15.4638, 28.4065, 9.72778, 0.96", "-16.0354, 29.1463, 10.4052, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999914784564564
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.31589, 10.0764, -1.51939, 0.37", "-1.31589, 10.0764, -1.51939, 0.37", "-1.91513, 10.7316, -1.58309, 0.37", "-3.1183, 12.0864, -1.73159, 0.37", "-4.30962, 13.4598, -1.88804, 0.37", "-5.13458, 14.4353, -2.01403, 0.59", "-5.88167, 15.3284, -2.13312, 0.59", "-6.53543, 16.1202, -2.24198, 0.59", "-7.17674, 16.9297, -2.36451, 0.59", "-7.86797, 17.8594, -2.53917, 0.59", "-8.54779, 18.8643, -2.74526, 0.44", "-9.20758, 19.908, -2.95276, 0.44", "-9.8583, 21.0075, -3.1592, 0.44", "-10.6388, 22.4431, -3.40238, 0.44", "-11.1918, 23.5983, -3.57999, 0.59", "-11.65, 24.6579, -3.72147, 0.59", "-12.2614, 26.1819, -3.89093, 0.52", "-12.8262, 27.6587, -4.03337, 0.66", "-13.2998, 28.9171, -4.12989, 0.66", "-14.0581, 30.8568, -4.22332, 0.52", "-14.5407, 32.0183, -4.24938, 0.52", "-14.9313, 32.9127, -4.26682, 0.88", "-15.2715, 33.6766, -4.27971, 1.03", "-15.5469, 34.2748, -4.2881, 0.44", "-15.8672, 34.958, -4.30519, 0.44", "-16.2996, 35.8815, -4.34275, 0.88", "-16.5815, 36.5067, -4.38537, 0.88", "-17.0627, 37.6251, -4.47983, 0.29", "-17.447, 38.5679, -4.57995, 0.29", "-17.8596, 39.6101, -4.71233, 0.66", "-18.2142, 40.5092, -4.84925, 0.81", "-18.5428, 41.3103, -4.98529, 0.81", "-18.8272, 41.9382, -5.10137, 0.29", "-19.4707, 43.2406, -5.35693, 0.29", "-19.9444, 44.1148, -5.52369, 0.74", "-20.2308, 44.6232, -5.62057, 0.74", "-20.8885, 45.7688, -5.85273, 0.29", "-21.6163, 47.0227, -6.10228, 0.29", "-22.0427, 47.7218, -6.23825, 0.29", "-22.6089, 48.6261, -6.38566, 0.81", "-23.0123, 49.2971, -6.4799, 0.81", "-23.2571, 49.734, -6.53059, 0.81", "-23.6758, 50.5506, -6.61069, 0.81", "-24.2731, 51.8757, -6.70807, 0.29", "-25.0307, 53.7275, -6.81233, 0.29", "-25.4694, 54.9165, -6.86133, 0.88", "-25.7358, 55.6824, -6.87809, 1.18", "-25.9868, 56.441, -6.88827, 0.59", "-26.3925, 57.7673, -6.90309, 0.29", "-26.5798, 58.4014, -6.90786, 0.66", "-26.7667, 58.9618, -6.91257, 0.66", "-27.1754, 60.0675, -6.92357, 0.52", "-27.5689, 61.0419, -6.95061, 0.29", "-28.0171, 62.0628, -6.99136, 0.29", "-28.7115, 63.5153, -7.06218, 0.29", "-29.2377, 64.5564, -7.11322, 0.74", "-29.5481, 65.1434, -7.14177, 0.74", "-29.9142, 65.8165, -7.16542, 0.22", "-30.5784, 66.9774, -7.17157, 0.22", "-31.277, 68.1206, -7.19072, 0.22", "-31.653, 68.715, -7.20525, 0.66", "-32.0681, 69.3165, -7.22191, 0.66", "-32.5212, 69.925, -7.24458, 0.29", "-32.9389, 70.4638, -7.26886, 0.29", "-33.7754, 71.5069, -7.33849, 0.66", "-34.2887, 72.1545, -7.3981, 0.88", "-34.9167, 72.9944, -7.49448, 0.37", "-35.6424, 74.0412, -7.62461, 0.74", "-36.1107, 74.7923, -7.71987, 0.96", "-36.5242, 75.5842, -7.81271, 0.96", "-37.0035, 76.7408, -7.93335, 0.52", "-37.3255, 77.7402, -8.09679, 0.66", "-37.4813, 78.3655, -8.24226, 0.66", "-37.6709, 79.2598, -8.50402, 0.37", "-37.8843, 80.4193, -8.88001, 0.37", "-38.0775, 81.5717, -9.28091, 0.44", "-38.2993, 82.7812, -9.7083, 0.59", "-38.6248, 84.2879, -10.2398, 0.29", "-38.9019, 85.3945, -10.6229, 0.29", "-39.2081, 86.4015, -10.9448, 0.52", "-39.3581, 86.826, -11.0603, 0.52", "-39.8117, 87.9924, -11.2945, 0.29", "-40.1587, 88.8262, -11.4077, 0.44", "-40.401, 89.3743, -11.4595, 0.44", "-40.9499, 90.5721, -11.5387, 0.22", "-41.2545, 91.2516, -11.5733, 0.22", "-41.7084, 92.3082, -11.6247, 0.66", "-41.9765, 92.9523, -11.6598, 0.96", "-42.1855, 93.4699, -11.6901, 0.96", "-43.1665, 96.1135, -11.854, 0.22", "-43.7095, 97.7249, -11.946, 0.22", "-44.032, 98.7062, -11.988, 0.59", "-44.2699, 99.4466, -12.0184, 0.59", "-44.5122, 100.208, -12.0496, 0.59", "-45.0827, 102.023, -12.1404, 0.22", "-46.3021, 105.892, -12.3568, 0.22", "-46.5787, 106.722, -12.4022, 0.59", "-46.8284, 107.456, -12.4362, 0.81", "-47.0074, 107.978, -12.465, 0.81", "-47.6529, 109.821, -12.604, 0.29", "-48.2185, 111.392, -12.7648, 0.29", "-48.8112, 113.064, -12.9689, 0.29", "-49.7889, 115.867, -13.3427, 0.29", "-50.1182, 116.814, -13.469, 0.52", "-50.3423, 117.452, -13.5608, 0.52", "-50.9769, 119.239, -13.8311, 0.29", "-51.5609, 120.92, -14.1178, 0.29", "-51.9284, 122.021, -14.3279, 0.74", "-52.2569, 122.947, -14.5215, 0.74", "-52.4775, 123.547, -14.6266, 0.52", "-56.3253, 132.679, -15.9664, 0.52", "-59.2199, 142.23, -15.3374, 0.52", "-60.7998, 152.096, -14.933, 0.52", "-61.2071, 162.078, -15.3894, 0.52", "-60.2642, 171.794, -17.5594, 0.52", "-57.752, 180.993, -20.5705, 0.52", "-53.6068, 188.817, -25.2173, 0.52", "-49.4889, 196.709, -29.7735, 0.52", "-46.5576, 203.57, -36.4327, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999914784564564,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.78589, -10.9136, -2.01939, 2.14", "-2.78589, -10.9136, -2.01939, 2.14", "-3.52749, -12.2811, -2.46295, 1.55", "-4.4537, -14.0409, -3.06422, 1.25", "-4.82414, -14.7735, -3.32112, 1.47", "-5.23455, -15.5746, -3.59622, 1.62", "-5.53598, -16.1493, -3.82665, 1.62", "-6.15782, -17.3593, -4.34299, 1.11", "-6.56501, -18.2156, -4.70659, 0.96", "-7.19953, -19.6674, -5.26151, 1.03", "-7.8145, -21.1903, -5.81173, 1.03", "-8.58027, -23.2407, -6.6379, 1.33", "-9.07816, -24.5948, -7.18345, 1.11", "-9.7336, -26.4656, -7.93148, 1.11", "-10.279, -28.1848, -8.60166, 1.18", "-10.7377, -29.822, -9.23495, 1.18", "-11.3094, -32.4177, -10.2066, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999914784564564
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.26588, -11.9036, 0.0506124, 2.28", "-0.26588, -11.9036, 0.0506124, 2.28", "-0.266347, -13.3658, 0.0506124, 1.99", "-0.252441, -15.1262, 0.0506124, 1.69", "-0.215723, -16.958, 0.0506124, 1.62", "-0.171663, -18.4096, 0.0506124, 1.62", "-0.118161, -20.0302, 0.0506124, 1.84", "-0.0560365, -21.8698, 0.0506124, 1.92", "-0.0072442, -23.3356, 0.0506124, 1.92", "0.0546181, -24.8831, 0.0506124, 1.55", "0.146344, -26.628, 0.0396639, 1.55", "0.246827, -28.0966, 0.0192163, 1.47", "0.368172, -29.4979, -0.013423, 1.47", "0.557611, -31.3189, -0.0386547, 1.33", "0.795453, -33.5516, -0.0730819, 1.33", "0.968625, -35.0695, -0.0992033, 1.33", "1.08948, -35.9802, -0.1166, 1.69", "1.23642, -36.87, -0.134749, 1.92", "1.54411, -38.3615, -0.164779, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999914784564564
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.22411, 9.58637, -0.579387, 1.77", "2.57167, 10.1818, -0.596969, 1.77", "3.30256, 11.3969, -0.630164, 1.47", "3.98044, 12.5154, -0.656899, 1.25", "4.48506, 13.3366, -0.674416, 1.25", "5.02457, 14.2002, -0.680434, 1.47", "5.53188, 15.0034, -0.661952, 1.47", "6.04998, 15.7887, -0.620553, 1.47", "6.77824, 16.8321, -0.533268, 1.25", "7.25938, 17.4474, -0.464731, 1.25", "7.8042, 18.0376, -0.377277, 1.4", "8.40394, 18.5777, -0.26695, 1.25", "9.1272, 19.1309, -0.127984, 1.25", "10.0662, 19.7634, 0.0558666, 1.25", "11.1683, 20.4461, 0.274404, 1.18", "11.8102, 20.8383, 0.399894, 1.18", "13.0811, 21.6232, 0.638104, 0.96", "14.164, 22.2856, 0.840293, 1.33", "15.1058, 22.873, 1.04956, 1.33", "15.5627, 23.1637, 1.15365, 1.33", "16.2446, 23.6276, 1.31829, 0.81", "16.8324, 24.0561, 1.45805, 0.81", "17.6056, 24.6497, 1.63568, 1.25", "18.4205, 25.2814, 1.83933, 1.47", "19.3219, 25.9296, 2.05858, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999914784564564
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.488369, -12.3413, -0.354666, 1.11709", "-1.6103, -27.2993, -0.354666, 1.11709", "-2.73224, -42.2573, -0.354666, 1.11709" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-16.0354, 29.1463, 10.4052, 0.66", "-17.0718, 29.4096, 10.5006, 0.66", "-17.7896, 29.582, 10.5891, 0.37", "-18.8471, 29.815, 10.7276, 0.74", "-19.5334, 29.9535, 10.8166, 0.74", "-20.057, 30.0476, 10.8842, 0.44", "-21.5276, 30.2714, 11.0667, 0.29", "-22.5231, 30.3948, 11.1844, 0.44", "-23.6162, 30.4881, 11.3236, 0.59", "-24.2013, 30.5152, 11.4011, 0.59", "-25.0893, 30.5436, 11.5413, 0.59", "-25.9674, 30.5744, 11.6857, 0.59", "-26.8002, 30.6071, 11.834, 0.59", "-27.4088, 30.6466, 11.9409, 0.44", "-28.0873, 30.6841, 12.0808, 0.44", "-28.9698, 30.7191, 12.3041, 0.81", "-29.7904, 30.6901, 12.5556, 0.81", "-30.1314, 30.6317, 12.69, 0.81", "-30.9075, 30.3867, 13.0491, 0.52", "-31.5641, 30.1143, 13.3662, 0.52", "-32.1806, 29.8483, 13.6517, 0.52", "-33.1504, 29.4677, 14.0539, 0.88", "-33.9669, 29.2159, 14.3787, 1.03", "-34.7712, 29.0634, 14.6559, 0.74", "-35.7483, 29.0234, 14.8782, 0.59", "-36.8022, 29.1214, 14.9976, 0.59", "-37.5549, 29.2679, 15.0228, 0.59", "-38.4571, 29.5311, 15.0042, 0.59", "-39.1182, 29.7684, 14.9564, 0.59", "-40.4528, 30.3247, 14.8179, 0.74", "-41.2666, 30.6706, 14.7215, 0.74", "-42.067, 30.9816, 14.6298, 0.59", "-42.845, 31.2451, 14.5517, 0.59", "-43.3948, 31.4168, 14.5025, 0.59", "-44.2945, 31.6701, 14.4757, 0.37", "-45.5372, 31.9804, 14.5177, 0.37", "-46.7069, 32.2412, 14.5926, 0.66", "-47.8949, 32.45, 14.7115, 0.66", "-48.634, 32.5484, 14.8044, 0.52", "-49.4462, 32.6297, 14.9179, 0.74", "-50.6555, 32.7201, 15.0785, 0.52", "-51.4936, 32.812, 15.1769, 0.52", "-52.3002, 32.9184, 15.2389, 0.44", "-52.9567, 33.0154, 15.2578, 0.44", "-53.6834, 33.1622, 15.2398, 0.59", "-54.5094, 33.3722, 15.1519, 0.59", "-55.5115, 33.6585, 14.992, 0.52", "-56.2256, 33.8797, 14.857, 0.52", "-56.9011, 34.0965, 14.7239, 0.74", "-58.1251, 34.4793, 14.5054, 0.96", "-58.7016, 34.6578, 14.4487, 0.96", "-59.7643, 34.9844, 14.3969, 0.52", "-60.4057, 35.1744, 14.3835, 0.52", "-61.1017, 35.3982, 14.382, 0.81", "-61.8581, 35.6587, 14.3736, 0.81", "-63.2102, 36.1976, 14.34, 0.52", "-64.1225, 36.6209, 14.3325, 0.44", "-64.6625, 36.9238, 14.3274, 0.44", "-65.4221, 37.4133, 14.3012, 0.81", "-65.8291, 37.7101, 14.2665, 0.96", "-66.3746, 38.1417, 14.1574, 0.81" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-16.0354, 29.1463, 10.4052, 0.37", "-16.6975, 29.6421, 11.0086, 0.37", "-17.2203, 29.9639, 11.6448, 0.37", "-17.7931, 30.288, 12.3617, 0.52", "-18.3097, 30.5909, 12.9552, 0.81", "-18.5605, 30.7431, 13.2155, 0.81", "-19.7804, 31.5179, 14.3661, 1.4", "-20.8932, 32.2422, 15.381, 1.11", "-21.3837, 32.5873, 15.8211, 0.59", "-22.2241, 33.2667, 16.6076, 0.59", "-23.0659, 34.0151, 17.4374, 0.59", "-23.7325, 34.6273, 18.0723, 0.52", "-24.4814, 35.2844, 18.7297, 0.52", "-25.0653, 35.7633, 19.252, 0.52", "-25.9249, 36.2927, 20.0524, 0.74", "-26.6989, 36.5576, 20.7787, 0.59", "-27.4978, 36.6353, 21.474, 0.44", "-28.4754, 36.5809, 22.2465, 0.44", "-29.0488, 36.5053, 22.6354, 0.44", "-30.359, 36.3007, 23.4204, 0.44", "-31.3111, 36.1502, 23.9287, 0.44", "-32.2144, 36.0454, 24.3743, 0.52", "-32.8027, 36.0116, 24.6613, 0.52", "-33.7384, 36.0108, 25.1093, 0.52", "-34.321, 36.0281, 25.4101, 0.74", "-34.9622, 36.0857, 25.7537, 0.74", "-35.9818, 36.2037, 26.2874, 0.59", "-36.6266, 36.2731, 26.622, 0.59", "-37.487, 36.3736, 27.0821, 0.52", "-38.2455, 36.4656, 27.4977, 0.74", "-39.3361, 36.58, 28.1442, 0.37", "-39.9247, 36.6519, 28.5353, 0.37", "-40.6389, 36.7667, 29.0418, 0.37", "-41.6195, 36.9668, 29.7889, 0.37", "-42.1502, 37.1105, 30.2448, 0.52", "-43.1428, 37.3786, 31.2045, 0.81", "-43.9637, 37.5537, 32.1232, 0.52", "-44.3436, 37.5963, 32.6065, 0.52", "-44.9889, 37.6503, 33.4947, 0.88", "-45.6126, 37.6769, 34.4279, 0.59", "-46.0337, 37.7072, 35.118, 0.44", "-46.429, 37.7451, 35.8031, 0.29", "-46.8735, 37.6467, 36.7003, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.3094, -32.4177, -10.2066, 1.25", "-11.7763, -33.6173, -9.87151, 1.25", "-12.0381, -34.2896, -9.68373, 1.25", "-12.6041, -35.7438, -9.27759, 1.03", "-13.0951, -37.005, -8.92536, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.3094, -32.4177, -10.2066, 0.59", "-12.4812, -33.827, -11.4704, 0.59", "-14.0604, -35.8479, -13.3135, 0.59", "-14.661, -36.6533, -14.0536, 0.44", "-15.7504, -38.1063, -15.3633, 0.44", "-16.5519, -39.2086, -16.362, 0.44", "-17.3181, -40.2831, -17.3403, 0.66", "-17.7485, -40.9792, -18.0128, 0.66", "-18.269, -41.9234, -18.8029, 0.44", "-19.1216, -43.5488, -20.1144, 0.29", "-19.7677, -44.79, -21.1401, 0.37", "-20.0937, -45.4346, -21.7843, 0.37", "-21.2091, -47.6022, -24.24, 0.22", "-22.258, -49.4827, -26.5, 0.22", "-22.7599, -50.3875, -27.6269, 0.22", "-23.411, -51.5681, -29.1687, 0.22", "-25.7204, -55.571, -34.6328, 0.22", "-26.9958, -57.689, -37.7279, 0.22", "-27.532, -58.4966, -39.0719, 0.22", "-30.6873, -64.2651, -46.6064, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.54411, -38.3615, -0.164779, 1.55", "1.27411, -40.0315, -2.29478, 1.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.54411, -38.3615, -0.164779, 0.74", "2.69312, -39.685, 0.943355, 0.74", "3.32942, -40.3571, 1.50712, 0.74", "4.5032, -41.5438, 2.48972, 1.11", "5.20465, -42.2492, 3.04415, 1.11", "6.15461, -43.2318, 3.86475, 1.03", "7.00752, -44.1582, 4.6367, 0.81", "7.68829, -44.955, 5.32689, 0.81", "8.18296, -45.5937, 5.84224, 0.81", "9.07262, -46.841, 6.74085, 0.96", "10.1075, -48.3502, 7.85532, 0.96", "10.4451, -48.8629, 8.25151, 0.96", "11.1481, -49.9935, 9.12503, 0.88", "11.6405, -50.8298, 9.78793, 0.96", "11.9842, -51.4173, 10.2614, 0.96", "12.6786, -52.5587, 11.197, 0.81", "13.0111, -53.0388, 11.5672, 0.81", "13.3688, -53.4772, 11.9616, 1.03", "13.7046, -53.8059, 12.3278, 1.03" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.3219, 25.9296, 2.05858, 0.66", "21.4722, 27.2872, 1.14475, 0.66", "22.7229, 28.0977, 0.624665, 0.66", "23.7503, 28.7847, 0.218345, 0.66", "24.8938, 29.5494, -0.233919, 0.81", "25.4371, 29.9127, -0.448788, 0.81", "26.3438, 30.519, -0.807415, 0.59", "26.8596, 30.8398, -0.937441, 1.11", "27.5343, 31.1997, -1.11565, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "19.3219, 25.9296, 2.05858, 0.96", "20.434, 26.256, 3.0626, 0.96", "21.4014, 26.5371, 3.98593, 0.66", "21.9813, 26.6795, 4.52629, 0.66", "22.7424, 26.8229, 5.20087, 0.66", "23.5746, 26.94, 5.89631, 0.81", "24.4441, 26.9993, 6.59077, 1.03", "24.9662, 26.9658, 7.01976, 1.03", "25.5453, 26.8779, 7.48695, 0.81", "26.1886, 26.7295, 8.00348, 0.81", "26.7204, 26.5868, 8.42845, 0.66", "27.5712, 26.3556, 9.0908, 0.66", "28.6556, 26.087, 9.86417, 0.96", "29.0853, 25.9889, 10.1838, 0.96", "29.9151, 25.8134, 10.8101, 0.74", "30.736, 25.6288, 11.4475, 0.59", "31.3855, 25.4578, 11.9574, 0.59", "32.4192, 25.1245, 12.806, 1.03", "33.1847, 24.8092, 13.4565, 1.03", "33.9787, 24.3936, 14.1602, 0.59", "35.1389, 23.6772, 15.1875, 0.96", "35.6492, 23.3282, 15.6335, 0.96", "36.3995, 22.7767, 16.3066, 0.74", "36.6148, 22.6126, 16.5058, 0.74", "37.0215, 22.3129, 16.8704, 0.74", "37.6118, 21.9433, 17.4299, 0.52", "38.2446, 21.6507, 17.9879, 0.52", "38.8426, 21.4492, 18.523, 0.52", "39.5989, 21.2344, 19.1828, 1.03", "40.1743, 21.0837, 19.7105, 1.03", "41.3012, 20.8104, 20.8546, 0.66", "41.7827, 20.6908, 21.4052, 0.44", "42.9492, 20.4486, 22.838, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.73224, -42.2573, -0.354666, 0.29", "-3.85417, -57.2152, -0.354666, 0.29", "-4.9761, -72.1732, -0.354666, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-66.3746, 38.1417, 14.1574, 0.29", "-67.9366, 38.6283, 14.5896, 0.29", "-68.6284, 38.8537, 14.747, 0.88", "-69.0671, 38.9883, 14.8292, 0.88", "-69.9575, 39.2341, 14.9679, 0.37", "-70.7819, 39.4569, 15.0768, 0.37", "-71.2949, 39.6052, 15.1335, 0.74", "-71.9165, 39.8082, 15.1386, 0.74", "-72.6109, 40.067, 15.1285, 0.74", "-73.2922, 40.3314, 15.1084, 0.59", "-73.9364, 40.5996, 15.0811, 0.59", "-74.6514, 40.9096, 15.0446, 0.29", "-75.3392, 41.2152, 15.008, 0.29", "-76.469, 41.746, 14.9508, 0.29", "-77.1551, 42.0968, 14.9192, 0.66", "-77.9011, 42.5028, 14.8853, 0.66", "-78.678, 42.9358, 14.8688, 0.37", "-79.4046, 43.3522, 14.8736, 0.37", "-80.083, 43.7463, 14.8971, 0.37", "-80.8813, 44.2315, 14.9383, 0.29", "-81.5953, 44.6822, 14.9822, 0.29", "-82.4389, 45.2424, 15.0407, 0.81", "-83.075, 45.6882, 15.0928, 0.81", "-83.7492, 46.1662, 15.1643, 0.22", "-84.4347, 46.6193, 15.254, 0.52", "-84.8322, 46.8652, 15.3352, 0.66", "-85.4668, 47.2246, 15.5293, 0.29", "-86.0081, 47.5245, 15.7061, 0.29", "-86.8735, 47.9964, 16.0297, 0.88", "-87.6321, 48.4115, 16.3602, 0.88", "-88.6151, 48.9054, 16.8549, 0.74", "-89.4694, 49.2878, 17.335, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-66.3746, 38.1417, 14.1574, 0.44", "-67.2796, 38.9254, 13.6869, 0.44", "-67.7242, 39.3479, 13.4533, 0.52", "-68.1744, 39.7853, 13.2114, 0.52", "-68.6019, 40.1841, 12.9924, 0.52", "-69.1589, 40.6772, 12.7317, 0.37", "-69.6455, 41.0903, 12.5137, 0.37", "-70.4594, 41.7595, 12.2157, 0.81", "-70.9512, 42.1476, 12.0606, 0.81", "-71.4914, 42.5619, 11.898, 0.44", "-72.0892, 43.0094, 11.7325, 0.29", "-72.6464, 43.41, 11.5852, 0.37", "-73.3208, 43.8804, 11.4288, 0.37", "-74.0828, 44.4055, 11.2748, 0.29", "-74.8062, 44.9223, 11.0605, 0.29", "-75.082, 45.1385, 10.9457, 0.66", "-75.4798, 45.4743, 10.7445, 0.66", "-75.9682, 45.9104, 10.4735, 0.66", "-76.3919, 46.3052, 10.2184, 0.74", "-77.5314, 47.4085, 9.53186, 0.29", "-78.1856, 48.0585, 9.14972, 0.29", "-78.6479, 48.5579, 8.88255, 0.66", "-79.0559, 49.0522, 8.65835, 0.66", "-79.3475, 49.4513, 8.50542, 0.66", "-79.7934, 50.1333, 8.3079, 0.96", "-80.0177, 50.507, 8.24576, 0.96", "-80.4334, 51.2158, 8.13569, 0.52", "-80.7729, 51.8068, 8.04835, 0.29", "-81.0638, 52.3129, 7.98445, 0.29", "-81.4257, 52.9426, 7.92206, 0.59", "-81.788, 53.596, 7.87423, 0.59", "-82.1112, 54.1914, 7.84552, 0.37", "-82.4759, 54.8988, 7.82035, 0.37", "-82.965, 55.961, 7.76964, 0.88", "-83.2942, 56.7697, 7.7697, 1.25", "-83.5533, 57.4563, 7.79352, 1.25", "-83.6713, 57.7963, 7.81475, 1.25", "-83.9683, 58.7082, 7.90371, 0.37", "-84.2622, 59.6018, 8.03047, 0.59", "-84.6894, 60.8306, 8.26878, 0.44", "-84.9764, 61.5924, 8.44261, 0.29", "-85.1843, 62.0876, 8.56261, 0.29", "-85.476, 62.7243, 8.7095, 0.74", "-85.7661, 63.285, 8.82333, 0.74", "-86.23, 64.1073, 8.92617, 0.29", "-86.6117, 64.729, 8.90152, 0.29", "-86.8396, 65.0731, 8.85938, 0.52", "-87.1528, 65.4727, 8.77775, 0.52", "-87.5637, 65.9204, 8.63466, 0.37", "-88.397, 66.7044, 8.32246, 1.03", "-89.0477, 67.2145, 8.09839, 1.18", "-89.4111, 67.4475, 7.99522, 0.88", "-90.269, 67.9026, 7.80553, 0.22", "-91.0382, 68.2513, 7.66233, 0.37", "-91.6252, 68.4683, 7.56819, 0.37", "-92.6918, 68.7725, 7.4123, 0.29", "-93.824, 69.0703, 7.25142, 0.29", "-94.8121, 69.3181, 7.09902, 0.88", "-95.2888, 69.4345, 7.02064, 1.11", "-95.9999, 69.6114, 6.89512, 1.11", "-97.1712, 69.9228, 6.64487, 0.29", "-98.2408, 70.244, 6.38501, 0.29", "-98.6258, 70.3811, 6.27932, 0.81", "-99.3928, 70.6942, 6.0612, 0.81", "-99.8375, 70.8925, 5.93341, 0.81", "-100.369, 71.159, 5.77419, 0.37", "-101.435, 71.7508, 5.45465, 0.29", "-102.115, 72.1561, 5.24707, 0.44", "-102.59, 72.4615, 5.10286, 0.59", "-102.971, 72.7265, 4.97544, 0.59", "-103.292, 72.9654, 4.86318, 0.37", "-104.028, 73.5885, 4.57497, 0.37", "-104.648, 74.1979, 4.2787, 0.44", "-105.103, 74.7035, 4.00938, 0.44", "-105.623, 75.3534, 3.6064, 0.22", "-106.014, 75.8668, 3.28188, 0.22", "-106.622, 76.7237, 2.71636, 0.66", "-107.004, 77.3322, 2.29247, 0.81", "-107.427, 78.1128, 1.72874, 0.66", "-107.738, 78.8057, 1.19897, 0.37", "-113.753, 86.3278, -1.49263, 0.37", "-119.375, 94.4707, -2.93673, 0.37", "-124.877, 102.81, -2.52745, 0.37", "-128.87, 111.899, -3.73177, 0.37", "-131.829, 121.305, -5.3986, 0.37", "-137.1, 129.555, -7.43537, 0.37", "-142.35, 138.066, -7.49598, 0.37", "-148.143, 146.198, -8.05118, 0.37", "-153.604, 154.566, -8.45256, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-13.0951, -37.005, -8.92536, 0.59", "-13.5188, -38.6643, -9.16782, 0.59", "-13.8349, -40.0896, -9.3339, 0.74", "-14.1189, -41.5257, -9.48085, 0.74", "-14.4137, -43.1842, -9.59445, 0.66", "-14.6637, -44.6434, -9.64976, 0.66", "-14.9633, -46.3117, -9.66288, 0.88", "-15.2095, -47.7656, -9.5864, 1.03", "-15.3657, -48.5602, -9.51205, 1.03", "-15.6729, -49.7684, -9.37415, 1.03", "-15.9565, -50.6591, -9.25775, 0.74", "-16.5187, -52.0208, -9.07665, 0.59", "-16.9906, -52.9299, -8.96728, 0.96", "-17.6205, -53.9471, -8.87902, 0.74", "-18.1524, -54.7193, -8.84939, 1.18", "-18.866, -55.6653, -8.86808, 1.18", "-19.7328, -56.7762, -8.93524, 0.88", "-20.4557, -57.706, -9.02084, 0.59", "-21.0873, -58.5364, -9.10846, 0.59", "-21.6501, -59.3148, -9.19125, 0.74", "-22.1813, -60.0952, -9.29005, 0.88", "-22.9069, -61.2647, -9.47216, 0.88", "-23.4299, -62.2373, -9.64842, 0.74", "-23.966, -63.4111, -9.87303, 0.74", "-24.508, -64.8175, -10.1639, 0.66", "-24.8712, -65.9235, -10.4333, 0.74", "-25.1449, -66.9246, -10.7088, 0.88", "-25.3547, -67.8629, -10.9938, 0.96", "-25.6288, -69.2976, -11.4667, 0.59", "-25.8163, -70.5254, -11.8978, 0.81", "-25.9647, -71.6532, -12.3232, 1.03", "-26.0943, -72.6461, -12.7028, 1.03", "-26.2863, -74.0062, -13.2157, 0.66", "-26.4278, -74.8107, -13.5196, 0.66", "-26.563, -75.4713, -13.755, 0.96", "-26.7129, -76.1406, -13.9606, 0.96", "-27.0271, -77.5505, -14.3248, 0.96", "-27.2873, -78.7299, -14.611, 0.96", "-27.6252, -80.1614, -14.937, 0.96", "-27.9685, -81.5103, -15.269, 0.66", "-28.2282, -82.4726, -15.5266, 0.66", "-28.6085, -83.8547, -15.9072, 0.52", "-28.7551, -84.3896, -16.0626, 0.52", "-29.0824, -85.5561, -16.4166, 0.66", "-29.4935, -86.8663, -16.8098, 0.88", "-29.9111, -87.9198, -17.107, 0.88", "-30.3085, -88.7471, -17.3041, 1.03", "-30.7054, -89.4645, -17.4173, 1.03", "-31.6303, -90.9688, -17.5065, 0.81", "-32.1926, -91.8306, -17.4738, 0.81", "-32.9365, -92.9669, -17.3472, 1.03", "-33.695, -94.1671, -17.1878, 0.81", "-34.2579, -95.1715, -17.0834, 0.74", "-34.7393, -96.2026, -17.0207, 1.03", "-35.0518, -97.1631, -17.0255, 1.03", "-35.2782, -98.4025, -17.1194, 0.66", "-35.3965, -99.64, -17.2731, 0.52", "-35.4114, -101.205, -17.5569, 0.52", "-35.3525, -102.089, -17.7845, 0.81", "-35.1923, -103.206, -18.1391, 0.88", "-35.1092, -103.648, -18.3068, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-13.0951, -37.005, -8.92536, 0.29", "-12.7804, -38.5243, -9.84501, 0.29", "-12.5006, -40.1864, -10.7574, 0.44", "-12.3823, -41.0708, -11.2015, 0.44", "-12.2612, -42.1334, -11.6844, 0.37", "-12.1081, -43.4739, -12.2594, 0.37", "-11.9173, -44.9634, -12.8989, 0.37", "-11.7128, -46.5244, -13.5653, 0.37", "-11.5116, -47.9868, -14.1838, 0.44", "-11.3611, -49.1189, -14.6719, 0.44", "-11.2237, -50.1636, -15.1814, 0.66", "-11.0896, -51.1028, -15.6987, 0.88", "-10.9101, -52.373, -16.4826, 0.74", "-10.7018, -53.8485, -17.5184, 0.52", "-10.5729, -54.8784, -18.3148, 0.37", "-10.4649, -56.0767, -19.2676, 0.37", "-10.4207, -57.0522, -20.0193, 0.59", "-10.3971, -58.3541, -21.012, 0.59", "-10.3791, -59.4354, -21.7529, 0.37", "-10.3399, -60.5326, -22.4408, 0.37", "-10.3159, -61.1851, -22.839, 0.37", "-10.2701, -63.1436, -23.9294, 0.29", "-10.249, -64.8736, -24.8254, 0.29", "-10.182, -66.6754, -25.6166, 0.29", "-10.1213, -67.7786, -26.0307, 0.29", "-8.51649, -76.0979, -31.3423, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.27411, -40.0315, -2.29478, 0.37", "0.497602, -41.4908, -2.28835, 0.37", "-0.5207, -43.5383, -2.28092, 0.66", "-1.05133, -44.6449, -2.2804, 0.81", "-1.82246, -46.3824, -2.28658, 0.66", "-2.47185, -47.9365, -2.29556, 0.66", "-2.99811, -49.2484, -2.30468, 0.52", "-3.31185, -50.16, -2.32059, 0.66", "-3.66376, -51.2832, -2.36145, 0.66", "-4.10875, -52.6836, -2.43427, 0.59", "-4.54226, -54.0229, -2.52147, 0.59", "-4.84382, -54.9267, -2.58891, 0.81", "-5.33812, -56.3459, -2.70504, 1.03", "-5.80158, -57.6179, -2.81775, 0.66", "-6.18789, -58.6651, -2.89702, 0.66", "-6.67604, -59.912, -2.9791, 0.52", "-7.16887, -61.1233, -3.04157, 0.74", "-7.43335, -61.7315, -3.05922, 0.74", "-7.77266, -62.4573, -3.05885, 0.59", "-8.17087, -63.3287, -3.04381, 0.88", "-8.47768, -63.9979, -3.01996, 0.88", "-8.92949, -64.9936, -2.96539, 0.66", "-9.5963, -66.4146, -2.86351, 0.66", "-10.203, -67.6538, -2.76753, 0.66", "-10.6884, -68.6326, -2.68194, 1.03", "-11.1605, -69.5949, -2.59891, 0.81", "-11.728, -70.7638, -2.48791, 0.74", "-12.3454, -72.0491, -2.36547, 0.66", "-12.9478, -73.3331, -2.24288, 1.18", "-13.4811, -74.4985, -2.13672, 1.33", "-14.1771, -76.008, -2.02761, 1.03", "-14.8404, -77.4266, -1.96583, 0.59", "-15.4369, -78.7032, -1.934, 0.59", "-15.8714, -79.7257, -1.93196, 0.81", "-16.2993, -80.8384, -1.95304, 0.96", "-16.6465, -81.8705, -1.96767, 0.66", "-16.9239, -82.8415, -1.96347, 0.66", "-17.1906, -83.9934, -1.93533, 1.03", "-17.4071, -85.0922, -1.89011, 1.03", "-17.5461, -85.8997, -1.84699, 1.03", "-17.7743, -87.5552, -1.72615, 0.96", "-17.885, -88.6826, -1.62552, 1.11", "-17.9639, -89.7981, -1.52376, 1.18", "-18.0282, -90.9814, -1.4211, 1.18", "-18.0897, -92.0809, -1.34765, 0.66", "-18.186, -93.4913, -1.29552, 0.59", "-18.2769, -94.4382, -1.29328, 0.59", "-18.4287, -95.5183, -1.26054, 0.74", "-18.6858, -96.9669, -1.21077, 0.74", "-18.9439, -98.1694, -1.17045, 0.52", "-19.3005, -99.6425, -1.13536, 0.88", "-19.5926, -100.755, -1.12021, 0.88", "-20.1147, -102.504, -1.11101, 0.66", "-20.6984, -104.291, -1.11783, 0.66", "-21.1364, -105.611, -1.1333, 1.03", "-21.3339, -106.28, -1.15035, 1.25", "-21.5891, -107.352, -1.2054, 1.47", "-21.8826, -108.837, -1.32188, 0.66", "-22.0796, -109.957, -1.44553, 0.59", "-22.2476, -110.898, -1.51692, 1.03", "-22.3863, -111.712, -1.55746, 1.03", "-22.4895, -112.361, -1.56234, 1.03", "-22.6549, -113.511, -1.52058, 0.52", "-22.7378, -114.351, -1.44328, 0.74", "-22.8056, -115.077, -1.33759, 0.96", "-22.8798, -115.847, -1.18762, 0.96", "-22.9892, -116.816, -0.965036, 0.66", "-23.1033, -117.618, -0.77394, 0.66", "-23.2428, -118.351, -0.596883, 0.88", "-23.3905, -119.006, -0.450282, 0.88", "-23.6648, -120.152, -0.244132, 0.66", "-23.9867, -121.417, -0.0690553, 0.88", "-24.3939, -122.843, 0.082542, 0.59", "-24.8848, -124.421, 0.220223, 0.44", "-25.2191, -125.479, 0.271926, 0.44", "-25.4553, -126.249, 0.285633, 0.81", "-25.7537, -127.335, 0.264316, 0.81", "-26.07, -128.702, 0.192551, 0.59", "-26.3178, -130.083, 0.0710324, 0.52", "-26.5551, -131.84, 0.0684515, 0.52", "-26.6468, -132.666, 0.139356, 0.74", "-26.7955, -134.198, 0.452177, 0.52", "-26.9157, -135.858, 0.937383, 0.52", "-26.9556, -136.857, 1.2895, 0.74", "-27.0245, -140.237, 2.66286, 0.96", "-27.0337, -140.92, 2.97806, 0.96", "-27.0328, -142.43, 3.7044, 0.74", "-27.0208, -143.904, 4.41236, 0.52", "-26.9891, -145.504, 5.11567, 0.74", "-26.9923, -146.575, 5.4936, 0.74", "-27.0191, -147.331, 5.63777, 0.74", "-27.0702, -148.085, 5.74918, 0.59", "-27.1888, -149.245, 5.84539, 0.44", "-27.2848, -149.817, 5.87978, 0.81", "-27.4649, -150.561, 5.89863, 0.81", "-27.7833, -151.657, 5.85014, 0.81", "-28.052, -152.527, 5.72802, 1.18", "-28.2485, -153.124, 5.60266, 1.18", "-28.551, -153.961, 5.39078, 1.33", "-28.7774, -154.542, 5.20354, 1.33", "-29.107, -155.32, 4.91805, 0.81", "-29.7135, -156.537, 4.44391, 0.74", "-30.145, -157.274, 4.1577, 0.96", "-30.6984, -158.154, 3.83289, 0.81", "-31.4576, -159.348, 3.38902, 0.81", "-32.0145, -160.25, 3.09373, 0.74", "-32.7074, -161.393, 2.81438, 0.74", "-33.1266, -162.1, 2.69242, 0.74", "-33.5971, -162.999, 2.58364, 0.59", "-34.1001, -164.211, 2.50726, 0.59", "-34.4319, -165.328, 2.51303, 0.52", "-34.6661, -166.608, 2.55049, 0.74", "-34.7399, -167.346, 2.59645, 0.74", "-34.787, -168.364, 2.68616, 0.59", "-34.7937, -169.441, 2.8212, 0.59", "-34.757, -170.492, 2.96279, 0.74", "-34.6497, -171.725, 3.09038, 0.52", "-34.5681, -172.358, 3.1533, 0.52", "-34.4691, -173.164, 3.25646, 0.74", "-34.4248, -173.869, 3.37577, 0.74", "-34.4447, -174.781, 3.57971, 0.52", "-34.4935, -175.364, 3.74562, 0.96", "-34.5668, -175.974, 3.95161, 0.96", "-34.6829, -176.79, 4.27627, 0.59", "-34.8282, -177.722, 4.68808, 0.37", "-34.9202, -178.353, 4.96875, 0.81", "-34.9971, -178.982, 5.2675, 0.81", "-35.0528, -179.545, 5.49882, 0.81", "-35.1035, -180.264, 5.74106, 0.81", "-35.1311, -181.117, 5.96461, 0.52", "-35.1134, -182.195, 6.18269, 0.44", "-35.0812, -182.914, 6.30239, 0.44", "-35.0436, -183.776, 6.44138, 0.74", "-35.0243, -184.214, 6.51594, 0.74", "-34.976, -185.257, 6.69103, 0.44", "-34.9351, -186.075, 6.83612, 0.66", "-34.9076, -186.814, 6.97407, 0.81", "-34.9071, -187.898, 7.14436, 0.52", "-34.9428, -188.742, 7.29089, 0.66", "-35.0329, -189.883, 7.48528, 0.66", "-35.1968, -191.389, 7.71745, 0.44", "-35.3047, -192.258, 7.845, 0.44", "-35.4644, -193.519, 8.01833, 0.44", "-35.5733, -194.433, 8.14969, 0.74", "-35.621, -194.833, 8.2134, 0.74", "-35.7373, -195.839, 8.39834, 0.44", "-35.8094, -196.689, 8.56187, 0.44", "-35.8372, -197.356, 8.72648, 0.59", "-35.8392, -197.683, 8.82525, 0.81", "-35.8209, -198.902, 9.22818, 0.59", "-35.7958, -199.517, 9.4675, 0.44", "-35.686, -200.836, 10.1003, 0.44", "-35.3338, -202.423, 10.9743, 0.22", "-35.0954, -203.079, 11.3643, 0.22", "-34.8637, -203.528, 11.624, 0.22", "-34.5164, -204.075, 11.9744, 0.29", "-34.0582, -204.683, 12.3835, 0.29", "-32.694, -206.126, 13.3742, 0.29", "-32.0986, -206.66, 13.6806, 0.29", "-30.7816, -207.812, 14.2413, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.27411, -40.0315, -2.29478, 0.81", "1.89461, -41.3993, -2.26854, 0.81", "2.23963, -42.2624, -2.25562, 0.81", "2.70006, -43.5852, -2.23958, 1.03", "2.98967, -44.5015, -2.23026, 1.03", "3.23577, -45.3224, -2.22097, 1.03", "3.67453, -46.7903, -2.22681, 1.03", "4.00742, -48.0093, -2.24618, 1.03", "4.27815, -49.0754, -2.26752, 1.11", "4.49938, -50.0082, -2.292, 0.88", "4.93712, -51.8517, -2.34871, 0.66", "5.19875, -52.9601, -2.38962, 0.66", "5.42074, -53.7727, -2.42883, 1.4" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "13.7046, -53.8059, 12.3278, 0.66", "14.6649, -55.6859, 15.4712, 0.66", "14.9471, -56.1897, 16.2274, 0.66", "15.3165, -56.7535, 17.0347, 0.66", "15.5895, -57.1562, 17.5778, 0.88", "15.9877, -57.7141, 18.2685, 0.88", "16.2136, -58.027, 18.6292, 0.88", "16.5683, -58.4928, 19.0009, 0.88", "17.0763, -59.1218, 19.4554, 1.11", "17.8132, -59.9578, 19.9903, 0.74", "18.402, -60.5797, 20.354, 0.52", "18.807, -61.0052, 20.5694, 0.52", "19.4127, -61.6688, 20.8341, 0.37", "19.8979, -62.2048, 20.9861, 0.74", "20.434, -62.7515, 21.0739, 0.81", "21.186, -63.4051, 21.1159, 0.37", "21.7122, -63.8364, 21.1384, 0.37", "22.4523, -64.4409, 21.1647, 0.37", "23.1416, -65.0676, 21.1997, 0.66", "23.788, -65.7756, 21.2591, 0.66", "24.2146, -66.396, 21.3341, 0.66", "24.6852, -67.3514, 21.4869, 0.37", "24.9157, -67.9598, 21.6004, 0.37", "25.2282, -68.9796, 21.826, 0.59", "25.468, -69.7791, 22.0281, 0.81", "25.6956, -70.4027, 22.2098, 0.81", "26.3101, -71.6284, 22.6662, 0.44", "26.7753, -72.2115, 22.9716, 0.44", "27.2201, -72.6071, 23.2346, 0.66", "28.0017, -73.185, 23.7402, 0.37", "28.8222, -73.7109, 24.2734, 0.37", "29.4502, -74.0676, 24.6981, 0.37", "30.0911, -74.3922, 25.1784, 0.59", "31.2522, -74.9816, 26.1035, 0.59", "32.5203, -75.7191, 27.1524, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "13.7046, -53.8059, 12.3278, 0.59", "13.9528, -55.2272, 12.7601, 0.59", "14.1377, -56.0005, 13.1339, 0.59", "14.3792, -56.9605, 13.6345, 0.59", "14.5732, -57.7427, 14.0369, 0.96", "14.7883, -58.648, 14.5037, 0.96", "15.4974, -61.5523, 15.9693, 0.59", "15.7401, -62.3302, 16.3504, 0.59", "15.9266, -62.8259, 16.5989, 0.59", "16.1722, -63.3805, 16.8607, 1.11", "16.562, -64.1817, 17.1749, 1.11", "16.8955, -64.8014, 17.3315, 0.96", "17.5391, -65.9069, 17.3881, 0.74", "18.1385, -66.8837, 17.4061, 0.74", "18.8484, -68.0262, 17.4367, 0.59", "19.398, -68.9236, 17.4695, 0.59", "19.8881, -69.747, 17.5071, 0.96", "20.1929, -70.3166, 17.5571, 0.96", "20.4201, -70.8058, 17.6287, 1.03", "20.7744, -71.7472, 17.8362, 0.81", "21.0664, -72.6645, 18.1024, 0.52", "21.253, -73.3027, 18.3551, 1.03", "21.4593, -73.9726, 18.679, 1.03", "21.5751, -74.2954, 18.867, 1.03", "21.9272, -75.0489, 19.3668, 0.74", "22.4113, -75.8278, 19.9593, 0.52", "22.9862, -76.5961, 20.6138, 0.74", "23.405, -77.1206, 21.052, 0.74", "23.8599, -77.6487, 21.4502, 0.74", "24.4655, -78.313, 21.8711, 0.81", "24.9054, -78.7962, 22.1221, 0.81", "25.4996, -79.4673, 22.3588, 0.66", "26.1376, -80.2409, 22.5523, 1.11", "26.7783, -81.1185, 22.7227, 1.11", "27.3492, -81.9852, 22.8514, 0.74", "27.9109, -82.904, 22.9709, 0.74", "28.5403, -83.9379, 23.141, 0.66", "29.055, -84.7683, 23.3286, 0.81", "29.442, -85.4017, 23.5159, 0.81", "29.7966, -86.0291, 23.7401, 0.81", "30.2033, -86.8198, 23.9906, 1.03", "30.8185, -88.1255, 24.2675, 1.03", "31.2988, -89.3174, 24.3841, 0.59", "31.4966, -89.8944, 24.3303, 0.59", "31.5964, -90.3068, 24.1817, 0.59", "31.7462, -91.7974, 23.1658, 0.74", "31.7463, -92.8951, 22.2426, 0.59", "31.7123, -93.6592, 21.5408, 0.44", "31.71, -94.1157, 21.1327, 0.44", "31.7037, -94.6634, 20.6395, 0.44", "31.7054, -95.5258, 19.9419, 0.29", "31.7826, -96.7694, 19.3299, 0.29", "31.8911, -97.5175, 19.1252, 0.29", "32.1038, -98.555, 18.95, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "27.5343, 31.1997, -1.11565, 0.59", "29.1421, 31.2022, -2.76619, 0.59", "29.8985, 31.189, -3.54314, 0.88", "30.4837, 31.1922, -4.14092, 0.88", "30.9846, 31.2071, -4.64785, 0.88", "31.5541, 31.2323, -5.22445, 0.66", "32.1772, 31.2751, -5.86355, 0.66", "33.1678, 31.4188, -6.84362, 0.52", "33.9522, 31.6056, -7.64696, 0.52", "34.4914, 31.7811, -8.19217, 0.52", "35.038, 32.0002, -8.74791, 0.52", "35.6603, 32.3157, -9.40227, 0.52", "36.3295, 32.7188, -10.1891, 0.52", "37.4705, 33.5615, -11.7574, 0.52", "37.9526, 33.9394, -12.4523, 0.52", "38.4603, 34.3609, -13.2206, 0.52", "38.9612, 34.8011, -14.0215, 0.44", "39.9707, 35.72, -15.7757, 0.44", "40.9128, 36.6162, -17.6839, 0.44", "47.5953, 39.7231, -24.4434, 0.44", "54.8077, 43.4014, -30.3129, 0.44", "63.4421, 45.9388, -34.6729, 0.44", "72.438, 47.4123, -38.7841, 0.44", "81.1895, 50.52, -42.4928, 0.44", "89.7556, 53.6477, -46.5964, 0.44", "99.0343, 55.8931, -49.5735, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "27.5343, 31.1997, -1.11565, 0.37", "28.0511, 32.3807, -1.46128, 0.37", "28.3893, 33.239, -1.68796, 0.37", "28.8763, 34.4683, -1.98642, 0.66", "29.1891, 35.2377, -2.17676, 0.44", "29.5643, 36.1083, -2.41324, 0.44", "29.9589, 36.9995, -2.70389, 0.44", "30.302, 37.74, -3.01609, 0.44", "30.7191, 38.6275, -3.43388, 0.44", "30.9183, 39.0534, -3.62877, 0.81", "31.2308, 39.7331, -3.93291, 0.81", "31.9061, 41.1953, -4.51243, 0.52", "32.3967, 42.2025, -4.8871, 0.37", "32.8118, 43.0334, -5.15723, 0.37", "33.2426, 43.8878, -5.37923, 0.29", "33.9507, 45.2467, -5.68082, 0.29", "34.9841, 47.1686, -6.04976, 0.29", "35.666, 48.401, -6.24468, 0.29", "36.5124, 49.8961, -6.45908, 0.29", "37.5155, 51.6009, -6.71278, 0.29", "38.2757, 52.8319, -6.90864, 0.29", "38.6897, 53.4782, -7.02518, 0.29", "41.5751, 62.2224, -10.9256, 0.29", "44.0621, 71.3446, -14.1813, 0.29", "44.933, 81.1126, -16.1377, 0.29", "47.7641, 90.7006, -16.3747, 0.29", "52.4904, 99.2354, -18.57, 0.29", "57.8662, 106.856, -22.178, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "42.9492, 20.4486, 22.838, 0.52", "43.143, 19.9902, 23.8097, 0.52", "43.2729, 19.6951, 24.3586, 0.52", "43.9041, 18.2767, 26.723, 1.03", "44.03, 17.9815, 27.1527, 1.18", "44.2392, 17.4758, 27.8444, 0.88", "44.5572, 16.6654, 28.8886, 0.59", "44.7276, 16.2392, 29.4425, 0.59", "44.841, 15.9476, 29.7882, 0.59", "45.2094, 14.98, 30.7075, 0.81", "45.4281, 14.4499, 31.2302, 1.03", "45.6329, 14.0156, 31.6875, 1.03", "45.9068, 13.4596, 32.304, 0.74", "46.0576, 13.1851, 32.6422, 0.81", "46.4678, 12.5383, 33.5355, 0.52", "46.7829, 12.1765, 34.1287, 0.29", "47.0907, 11.9088, 34.6171, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "42.9492, 20.4486, 22.838, 0.44", "43.7868, 20.752, 23.8256, 0.44", "44.1282, 20.9031, 24.2325, 0.44", "45.0761, 21.3225, 25.202, 0.66", "45.5034, 21.4972, 25.6188, 0.66", "45.9654, 21.673, 26.0499, 0.66", "46.3484, 21.8053, 26.393, 0.44", "47.1899, 22.0307, 27.1135, 0.44", "48.0031, 22.2235, 27.7512, 0.44", "49.0062, 22.4539, 28.4404, 1.03", "49.4003, 22.5454, 28.6909, 1.03", "49.8363, 22.6286, 28.9328, 0.74", "50.581, 22.7271, 29.2978, 1.18", "51.3562, 22.8164, 29.6275, 1.18", "51.8374, 22.8827, 29.8248, 0.88", "52.7901, 23.0525, 30.1995, 0.37", "53.5721, 23.2307, 30.5629, 0.81", "54.613, 23.4927, 31.052, 0.59", "55.2505, 23.6648, 31.3562, 0.29", "55.8232, 23.8152, 31.6168, 0.29", "56.4701, 23.9844, 31.9511, 0.29", "57.2562, 24.222, 32.493, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-35.1092, -103.648, -18.3068, 0.52", "-35.7929, -104.817, -19.1152, 0.52", "-36.1565, -105.424, -19.5281, 0.52", "-36.612, -106.14, -19.9866, 0.74", "-37.3744, -107.284, -20.7011, 0.52", "-37.8883, -108.0, -21.1597, 0.52", "-38.3941, -108.675, -21.5877, 0.66", "-39.0145, -109.439, -22.0616, 0.66", "-39.7978, -110.338, -22.6397, 0.52", "-40.3664, -110.965, -23.0584, 0.66", "-41.0154, -111.648, -23.5537, 0.88", "-41.9209, -112.536, -24.3159, 0.59", "-42.4827, -113.037, -24.8092, 0.74", "-43.2856, -113.721, -25.4898, 0.52", "-44.0612, -114.385, -26.152, 0.52", "-45.3738, -115.608, -27.1786, 0.52", "-46.1417, -116.409, -27.7529, 0.81", "-46.4949, -116.811, -27.9893, 0.81", "-47.2593, -117.811, -28.5114, 0.44", "-47.9254, -118.884, -28.9607, 0.29", "-48.7425, -120.462, -29.3976, 0.29", "-49.3255, -121.723, -29.6009, 0.96", "-49.6749, -122.496, -29.6797, 0.96", "-50.5922, -124.459, -29.8103, 0.74", "-51.35, -126.0, -29.8813, 0.37", "-52.4818, -128.141, -29.9076, 0.29", "-53.9418, -130.575, -29.8946, 0.29", "-54.4891, -131.39, -29.8549, 0.74", "-55.3154, -132.462, -29.7772, 0.59", "-55.6633, -132.845, -29.7193, 0.59", "-56.2039, -133.321, -29.6471, 0.59", "-57.5328, -134.217, -29.5345, 0.37", "-58.273, -134.616, -29.4479, 0.37", "-59.3209, -135.156, -29.2654, 0.81", "-60.0674, -135.539, -29.0864, 0.81", "-60.6419, -135.842, -28.9089, 0.81", "-61.151, -136.134, -28.7156, 0.81", "-62.883, -137.221, -27.9989, 0.44", "-63.89, -137.897, -27.6024, 0.74", "-64.2746, -138.176, -27.4722, 0.74", "-65.0131, -138.768, -27.2699, 0.37", "-66.4467, -140.025, -26.9333, 0.29", "-67.1553, -140.684, -26.8017, 0.29", "-67.8599, -141.36, -26.7097, 0.52", "-68.7308, -142.191, -26.5978, 0.52", "-69.51, -142.928, -26.4867, 0.37", "-70.7256, -144.104, -26.2766, 0.29", "-71.1068, -144.481, -26.1972, 0.66", "-71.467, -144.841, -26.0989, 0.66", "-72.1475, -145.526, -25.8639, 0.44", "-72.7199, -146.095, -25.6416, 0.74", "-73.3908, -146.756, -25.4159, 0.59", "-74.2602, -147.639, -25.1882, 0.29", "-74.9425, -148.334, -25.0479, 0.66", "-75.3846, -148.787, -24.9927, 0.66", "-75.7672, -149.191, -24.9701, 0.66", "-76.5822, -150.069, -24.9832, 0.37", "-77.0177, -150.542, -25.0309, 0.29", "-77.4197, -151.007, -25.107, 0.29", "-78.0147, -151.719, -25.2552, 0.52", "-78.3608, -152.138, -25.3076, 0.74", "-78.8722, -152.762, -25.3165, 0.88", "-79.3683, -153.358, -25.2457, 0.88", "-79.8677, -153.958, -25.1322, 0.37", "-80.3754, -154.58, -24.984, 0.29", "-81.3921, -155.852, -24.6402, 0.44", "-81.8634, -156.456, -24.4614, 0.44", "-82.5789, -157.395, -24.1966, 0.44", "-83.1668, -158.2, -23.9983, 0.88", "-83.6411, -158.867, -23.8637, 0.96", "-84.0368, -159.43, -23.7551, 0.74", "-84.5526, -160.158, -23.6424, 0.59", "-85.0563, -160.85, -23.511, 0.52", "-85.4788, -161.412, -23.3783, 0.81", "-85.9071, -161.947, -23.2231, 0.81", "-87.0619, -163.315, -22.7379, 0.29", "-87.5411, -163.897, -22.5107, 0.29", "-87.9525, -164.425, -22.3004, 0.66", "-88.5071, -165.183, -21.9996, 0.81", "-88.9203, -165.786, -21.8012, 0.96", "-89.3266, -166.423, -21.6494, 0.96", "-89.9354, -167.423, -21.5245, 0.37", "-90.3165, -168.034, -21.4893, 0.37", "-90.9245, -169.007, -21.511, 0.66", "-91.2699, -169.592, -21.5577, 0.96", "-91.5062, -170.079, -21.6236, 1.11", "-91.7094, -170.621, -21.7123, 1.11", "-91.9786, -171.613, -21.8855, 0.29", "-92.1873, -172.863, -22.1067, 0.29", "-92.2897, -174.1, -22.3258, 0.29", "-92.3271, -175.835, -22.6623, 0.29", "-92.2956, -176.946, -22.9042, 0.88", "-92.2361, -177.853, -23.1169, 1.03", "-92.159, -178.662, -23.3221, 1.03", "-92.1184, -179.191, -23.4633, 0.81", "-92.1307, -180.462, -23.8248, 0.52", "-92.2829, -181.682, -24.171, 0.52", "-92.4679, -182.605, -24.4331, 0.88", "-92.6168, -183.24, -24.6, 0.88", "-92.8041, -184.025, -24.7785, 0.37", "-93.0703, -185.223, -25.0078, 0.37", "-93.2633, -186.161, -25.1431, 0.96", "-93.3865, -186.931, -25.2382, 0.96", "-93.488, -187.964, -25.3445, 0.74", "-93.5286, -188.984, -25.3811, 0.44", "-93.5189, -189.43, -25.3774, 0.59", "-93.483, -190.169, -25.3399, 0.59", "-93.4562, -191.107, -25.2676, 0.29", "-93.4517, -192.125, -25.1858, 0.29", "-93.4657, -193.426, -25.1138, 0.52", "-93.4751, -194.095, -25.0942, 0.52", "-93.4846, -194.943, -25.0908, 0.37", "-93.4869, -196.123, -25.115, 0.37", "-93.4894, -196.894, -25.1517, 0.88", "-93.5076, -197.654, -25.2075, 1.03", "-93.5419, -198.455, -25.2762, 1.03", "-93.5735, -198.961, -25.3074, 1.03", "-93.6335, -199.847, -25.3525, 0.37", "-93.7143, -200.817, -25.4158, 0.37", "-93.9124, -202.836, -25.5697, 0.29", "-94.0412, -203.953, -25.6771, 0.59", "-94.1468, -204.704, -25.7689, 0.59", "-94.2898, -205.66, -25.9, 0.81", "-94.4271, -206.629, -26.0434, 1.18", "-94.4986, -207.254, -26.1437, 1.18", "-94.6196, -208.659, -26.3795, 0.29", "-94.6735, -209.505, -26.5159, 0.29", "-94.7394, -210.67, -26.6748, 0.29", "-94.7813, -211.624, -26.7767, 0.52", "-94.7849, -212.307, -26.831, 0.74", "-94.7692, -212.827, -26.8712, 0.74", "-94.7313, -213.629, -26.9152, 0.52", "-94.6974, -214.588, -26.9409, 0.52", "-94.6969, -215.556, -26.9273, 0.88", "-94.7055, -216.085, -26.8767, 0.88", "-94.7141, -216.675, -26.8055, 0.59", "-94.752, -217.6, -26.6811, 0.37", "-94.8455, -218.944, -26.4843, 0.81", "-94.9198, -219.629, -26.3803, 0.81", "-95.1547, -220.797, -26.1631, 0.52", "-95.4616, -221.956, -25.9137, 0.29", "-95.705, -222.797, -25.712, 0.29", "-95.8856, -223.432, -25.5453, 0.66", "-96.0481, -224.052, -25.3505, 0.66", "-96.3154, -225.57, -24.7546, 0.29", "-96.3883, -226.261, -24.4293, 0.29", "-96.419, -226.87, -24.1109, 0.74", "-96.4475, -227.649, -23.7124, 0.59", "-96.5159, -228.643, -23.2302, 0.59", "-96.6723, -230.098, -22.5893, 1.03", "-96.7774, -230.685, -22.3785, 1.03", "-97.1197, -231.81, -22.0683, 0.59", "-97.5829, -232.936, -21.864, 0.37", "-97.9358, -233.684, -21.7955, 0.37", "-98.2376, -234.32, -21.7806, 0.29", "-98.4967, -234.941, -21.7993, 0.66", "-98.8682, -236.085, -21.845, 0.88", "-99.1338, -237.112, -21.8827, 0.66", "-99.4409, -238.5, -21.9835, 0.29", "-99.7746, -239.917, -22.1248, 0.29", "-100.18, -241.404, -22.3053, 0.29", "-100.436, -242.256, -22.4252, 0.88", "-100.759, -243.185, -22.5763, 0.88", "-101.215, -244.369, -22.7382, 0.88", "-101.64, -245.371, -22.849, 0.29", "-102.121, -246.47, -22.9046, 0.29", "-102.61, -247.726, -22.8629, 0.29", "-102.839, -248.485, -22.7748, 0.74", "-103.076, -249.763, -22.5011, 0.88", "-103.11, -250.161, -22.381, 0.88", "-103.124, -251.263, -21.9842, 0.59", "-103.084, -252.565, -21.4439, 0.59", "-103.048, -253.362, -21.0782, 0.88", "-102.987, -254.321, -20.6347, 1.03", "-102.962, -254.894, -20.3783, 1.03", "-102.955, -256.015, -19.8446, 0.66", "-103.012, -256.876, -19.4108, 0.88", "-103.082, -257.615, -19.0629, 0.88", "-103.133, -258.201, -18.8304, 0.88", "-103.152, -258.846, -18.6511, 0.44", "-103.118, -259.347, -18.5788, 0.44", "-102.931, -260.409, -18.5877, 0.44", "-102.595, -261.914, -18.7549, 1.03", "-102.481, -262.437, -18.853, 1.03", "-102.259, -263.639, -19.1248, 0.44", "-102.129, -264.415, -19.276, 0.66", "-102.058, -265.0, -19.3584, 0.96", "-102.042, -265.361, -19.3799, 1.18", "-102.169, -266.732, -19.2946, 0.29", "-102.256, -267.392, -19.2147, 0.29", "-102.403, -268.47, -19.0207, 0.29", "-102.462, -269.142, -18.8901, 0.88", "-102.488, -269.792, -18.7703, 0.96", "-102.48, -270.586, -18.6428, 0.96", "-102.4, -271.781, -18.5117, 0.37", "-102.281, -273.06, -18.4728, 0.29", "-102.208, -273.8, -18.5096, 0.74", "-102.147, -274.378, -18.567, 0.96", "-102.074, -275.044, -18.6557, 0.96", "-101.909, -276.512, -18.9346, 0.29", "-101.787, -277.886, -19.2464, 0.29", "-101.751, -278.377, -19.3637, 0.74", "-101.69, -279.223, -19.5456, 0.81", "-101.594, -280.295, -19.7593, 0.59", "-101.476, -281.435, -19.9576, 1.03", "-101.385, -282.35, -20.1144, 1.03", "-101.232, -283.863, -20.3698, 0.74", "-101.11, -285.226, -20.6171, 0.52", "-101.063, -286.078, -20.7758, 0.59", "-101.028, -287.722, -21.1187, 0.44", "-101.033, -288.919, -21.4077, 1.03", "-101.044, -289.558, -21.5808, 1.03", "-101.093, -290.483, -21.8336, 0.59", "-101.196, -291.703, -22.1584, 0.44", "-101.305, -292.624, -22.3743, 0.96", "-101.432, -293.69, -22.5867, 1.03", "-101.585, -295.179, -22.792, 0.29", "-101.73, -296.877, -22.9592, 0.29", "-101.755, -297.497, -22.9944, 0.52", "-101.747, -298.869, -23.0183, 0.44", "-101.731, -300.141, -22.9691, 0.59", "-101.708, -301.271, -22.8894, 0.66", "-101.664, -302.299, -22.8192, 0.44", "-101.512, -303.77, -22.7215, 0.44", "-101.389, -304.637, -22.6646, 1.11", "-101.203, -305.674, -22.6082, 1.25", "-100.985, -306.782, -22.5695, 1.03", "-100.847, -307.43, -22.5703, 1.03", "-100.635, -308.377, -22.5954, 0.81", "-100.312, -309.816, -22.6832, 0.22", "-100.115, -310.674, -22.7406, 0.88", "-99.9454, -311.382, -22.763, 0.88", "-99.7926, -312.127, -22.7344, 0.66", "-99.6218, -313.236, -22.6366, 0.37", "-99.5032, -314.278, -22.4957, 0.66", "-99.3965, -315.332, -22.3142, 0.66", "-99.2954, -316.613, -22.0627, 0.44", "-99.1735, -318.253, -21.7215, 0.22", "-99.1262, -319.031, -21.5617, 0.81", "-99.095, -319.854, -21.4008, 0.81", "-99.089, -320.449, -21.3, 0.81", "-99.1021, -321.461, -21.1815, 0.59", "-99.1245, -322.577, -21.0922, 0.59", "-99.145, -323.532, -21.0268, 0.74", "-99.1627, -324.378, -20.9688, 0.44", "-99.1943, -325.43, -20.8985, 0.44", "-99.2156, -326.033, -20.854, 1.03", "-99.263, -326.652, -20.798, 1.03", "-99.4248, -328.088, -20.6163, 0.59", "-99.5419, -328.95, -20.48, 0.66", "-99.6819, -329.797, -20.3321, 0.88", "-99.83, -330.585, -20.1895, 0.88", "-100.228, -332.486, -19.8436, 0.37", "-100.453, -333.417, -19.6856, 0.88", "-100.718, -334.376, -19.5362, 1.18", "-100.944, -335.135, -19.426, 1.11", "-101.262, -336.171, -19.2955, 0.37", "-101.46, -336.806, -19.2277, 0.37", "-101.692, -337.565, -19.1689, 0.81", "-101.981, -338.511, -19.1209, 0.81", "-102.323, -339.663, -19.0643, 0.44", "-102.648, -340.781, -19.0041, 0.29", "-102.846, -341.471, -18.9633, 0.74", "-103.067, -342.332, -18.9045, 0.96", "-103.183, -342.91, -18.8598, 0.96", "-103.311, -343.862, -18.788, 0.74", "-103.433, -345.287, -18.6949, 0.59", "-103.485, -346.415, -18.6503, 0.59", "-103.518, -347.817, -18.6248, 0.44", "-103.524, -348.609, -18.6253, 0.44", "-103.519, -349.997, -18.6591, 0.81", "-103.514, -350.739, -18.6897, 0.81", "-103.477, -352.455, -18.8063, 0.37", "-103.441, -353.513, -18.9061, 0.37", "-103.423, -354.041, -18.9745, 0.81", "-103.41, -354.753, -19.0889, 0.96", "-103.389, -355.894, -19.3009, 0.29", "-103.354, -356.963, -19.4856, 0.29", "-103.32, -357.547, -19.5855, 0.96", "-103.258, -358.444, -19.7467, 0.96", "-103.198, -359.562, -19.944, 0.44", "-103.176, -360.285, -20.0711, 0.29", "-103.16, -361.206, -20.2457, 0.29", "-103.184, -361.762, -20.3585, 0.88", "-103.233, -362.36, -20.4708, 1.03", "-103.274, -362.776, -20.5433, 1.03", "-103.381, -363.783, -20.7167, 0.74", "-103.49, -364.766, -20.862, 0.59", "-103.665, -366.148, -21.019, 0.29", "-103.916, -368.339, -21.261, 0.29", "-103.998, -369.289, -21.3593, 0.81", "-104.029, -369.806, -21.4114, 0.81", "-104.079, -371.027, -21.5065, 0.88", "-104.094, -371.851, -21.5447, 0.88", "-104.094, -373.875, -21.5806, 0.29", "-104.121, -375.341, -21.6046, 0.29", "-104.147, -375.721, -21.6029, 1.11", "-104.219, -376.392, -21.5885, 1.25", "-104.309, -377.059, -21.5798, 0.81", "-104.464, -378.036, -21.5498, 0.29", "-104.664, -378.907, -21.4512, 0.29", "-104.985, -379.962, -21.3196, 0.52", "-105.206, -380.593, -21.2399, 0.52", "-105.61, -381.538, -21.0842, 0.88", "-105.783, -381.877, -21.0399, 0.88", "-106.318, -382.788, -20.9211, 0.29", "-106.92, -383.648, -20.7832, 0.52", "-107.422, -384.264, -20.6663, 0.37", "-108.179, -385.101, -20.4802, 0.52", "-109.606, -386.545, -20.0919, 0.88", "-110.288, -387.212, -19.8957, 0.88", "-111.202, -388.103, -19.6115, 1.25", "-112.076, -388.958, -19.3027, 0.29", "-112.444, -389.316, -19.1587, 0.29", "-113.044, -389.912, -18.8992, 1.11", "-113.878, -390.717, -18.4474, 0.22", "-114.364, -391.189, -18.1992, 0.59", "-114.624, -391.452, -18.064, 0.59", "-115.326, -392.198, -17.6772, 0.29", "-115.845, -392.805, -17.3859, 0.52", "-116.045, -393.08, -17.2703, 0.52", "-116.694, -394.067, -16.9211, 0.22", "-117.224, -394.948, -16.6576, 1.03", "-117.498, -395.455, -16.5068, 1.03", "-117.986, -396.469, -16.193, 0.29", "-118.531, -397.704, -15.7401, 0.29", "-118.765, -398.241, -15.5086, 0.96", "-119.058, -398.934, -15.1792, 0.96", "-119.492, -399.971, -14.6263, 0.52", "-120.032, -401.317, -13.861, 0.44", "-120.636, -402.871, -12.9162, 0.81", "-121.037, -403.892, -12.2665, 0.44", "-121.431, -404.841, -11.6687, 0.44", "-121.779, -405.674, -11.1402, 0.44", "-122.176, -406.617, -10.5696, 0.44", "-122.415, -407.184, -10.245, 0.29", "-122.705, -407.865, -9.93886, 0.29", "-123.191, -409.025, -9.50647, 0.29", "-124.571, -418.831, -8.11368, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-35.1092, -103.648, -18.3068, 0.52", "-34.7568, -104.481, -17.3091, 0.52", "-34.5049, -105.089, -16.6091, 0.59", "-33.7648, -106.989, -14.5339, 0.22", "-33.5859, -107.463, -14.0463, 0.74", "-33.4116, -107.919, -13.5939, 0.88", "-33.3227, -108.174, -13.3583, 0.88", "-33.1245, -108.912, -12.7061, 0.37", "-32.9689, -109.575, -12.131, 0.22", "-32.8998, -109.934, -11.8412, 0.22", "-32.7801, -110.721, -11.1929, 0.29", "-32.6055, -112.125, -9.99764, 0.74", "-32.5488, -112.718, -9.47377, 0.88", "-32.5169, -113.54, -8.72784, 0.66", "-32.5312, -114.694, -7.64346, 0.37", "-32.5702, -115.212, -7.13957, 0.37", "-32.646, -115.715, -6.67064, 0.37", "-32.7743, -116.342, -6.08697, 0.52", "-32.9309, -116.998, -5.50325, 0.66", "-33.1927, -118.082, -4.59274, 0.88", "-33.437, -119.04, -3.83662, 0.74", "-33.7333, -120.158, -2.95191, 0.52", "-34.0419, -121.365, -2.03217, 0.66", "-34.1702, -121.939, -1.60996, 0.74", "-34.3097, -122.826, -1.00914, 0.74", "-34.381, -123.754, -0.447123, 0.37", "-34.3424, -124.691, 0.0169197, 0.81", "-34.2725, -125.085, 0.170537, 0.81", "-34.1035, -125.652, 0.30001, 1.03", "-33.6609, -126.734, 0.403694, 0.59", "-33.2976, -127.481, 0.411021, 0.59", "-32.7405, -128.464, 0.383175, 0.59", "-32.48, -128.915, 0.356436, 0.59", "-32.0898, -129.679, 0.221592, 0.37", "-31.6961, -130.65, -0.0463326, 0.81", "-31.5065, -131.306, -0.277639, 1.03", "-31.3984, -131.837, -0.479891, 1.03", "-31.3213, -132.376, -0.691391, 0.88", "-31.1225, -134.713, -1.69535, 0.29", "-31.1074, -135.477, -2.06703, 0.29", "-31.1449, -136.247, -2.48883, 0.29", "-31.2376, -137.499, -3.28979, 0.29", "-28.8334, -146.751, -0.353689, 0.29", "-27.2547, -156.169, 2.61453, 0.29", "-26.2713, -165.042, 7.1201, 0.29", "-24.5247, -174.195, 10.7495, 0.29", "-24.7061, -183.994, 12.7379, 0.29", "-26.2117, -193.871, 13.1567, 0.29", "-25.7666, -203.852, 13.5886, 0.29", "-24.9438, -213.773, 14.5336, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "5.42074, -53.7727, -2.42883, 0.44", "6.11211, -55.2589, -2.77326, 0.44", "6.58559, -56.34, -2.99684, 0.59", "6.97656, -57.2363, -3.18349, 0.74", "7.40829, -58.2279, -3.38536, 0.74", "7.91262, -59.4334, -3.62239, 0.52", "8.62207, -61.126, -3.91875, 0.52", "9.12379, -62.4003, -4.06991, 0.59", "9.40931, -63.1046, -4.12874, 0.74", "9.65816, -63.6742, -4.1611, 0.88", "10.1263, -64.6782, -4.18852, 0.88", "10.9014, -66.2667, -4.15181, 0.59", "11.4074, -67.2738, -4.09266, 0.66", "11.8228, -68.0687, -4.04315, 0.52", "12.2156, -68.7993, -3.99837, 0.52", "12.5811, -69.4477, -3.97803, 0.88", "12.9704, -70.098, -3.96778, 0.88", "13.7662, -71.4155, -3.99912, 0.44", "14.2558, -72.2237, -4.04993, 0.44", "14.6436, -72.8721, -4.11021, 0.88", "15.1759, -73.7942, -4.21032, 0.88", "15.951, -75.1686, -4.36625, 0.37", "16.4091, -76.0094, -4.46551, 0.74", "16.7924, -76.7283, -4.53897, 0.88", "17.1535, -77.4221, -4.61128, 0.74", "17.8097, -78.6703, -4.74443, 0.52", "18.406, -79.7589, -4.81888, 0.74", "18.9102, -80.6197, -4.85455, 0.52", "19.2688, -81.1951, -4.84704, 0.74", "19.8185, -82.0304, -4.80244, 0.74", "20.1841, -82.5564, -4.74695, 0.74", "20.9846, -83.6414, -4.58848, 0.52", "21.5389, -84.3945, -4.4758, 0.44", "22.4836, -85.6986, -4.30261, 0.59", "23.0465, -86.501, -4.20584, 1.03", "23.4884, -87.1714, -4.13247, 1.25", "23.8526, -87.744, -4.07957, 1.25", "24.5027, -88.7382, -4.0276, 0.81", "25.3394, -89.9236, -3.95426, 0.66", "26.3038, -91.1395, -3.87305, 0.66", "27.0454, -91.9621, -3.82044, 0.52", "27.7337, -92.6448, -3.78697, 0.74", "28.7343, -93.5424, -3.76295, 0.52", "29.4984, -94.1485, -3.76762, 0.52", "30.6342, -94.9614, -3.83729, 0.52", "32.0518, -95.9269, -4.03563, 0.52", "32.9933, -96.5739, -4.24634, 0.74", "34.1316, -97.4303, -4.58457, 0.66", "34.6943, -97.9114, -4.78855, 0.66", "35.6007, -98.8048, -5.17419, 0.37", "36.4725, -99.8264, -5.58781, 0.22", "37.3236, -101.026, -6.01184, 0.44", "37.8487, -101.894, -6.24904, 0.44", "38.393, -102.936, -6.45531, 0.52", "38.896, -103.998, -6.61508, 0.52", "39.3542, -105.006, -6.69522, 0.52", "39.798, -106.022, -6.72727, 0.52", "40.4393, -107.531, -6.71525, 0.44", "40.8313, -108.437, -6.70611, 0.44", "41.2545, -109.359, -6.69358, 0.44", "41.8101, -110.514, -6.67153, 0.81", "48.0679, -118.221, -7.87209, 0.81" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.42074, -53.7727, -2.42883, 0.52", "5.75162, -55.1339, -2.41026, 0.52", "6.0208, -56.3762, -2.40238, 0.52", "6.25815, -57.7467, -2.40617, 0.52", "6.42663, -58.922, -2.41461, 0.52", "6.49628, -59.4542, -2.42265, 0.74", "6.61069, -60.3288, -2.46298, 0.74", "6.71461, -61.1075, -2.51676, 0.52", "6.87982, -62.6459, -2.64738, 0.37", "6.96369, -63.8094, -2.75518, 0.37", "7.00195, -64.8427, -2.86445, 0.37", "7.03943, -66.4073, -3.04727, 0.37", "7.06579, -67.4227, -3.17412, 0.81", "7.09567, -68.3665, -3.28916, 0.81", "7.1531, -69.635, -3.44312, 0.66", "7.21417, -70.5531, -3.54685, 0.66", "7.29681, -71.6473, -3.68931, 0.44", "7.41966, -73.0982, -3.88418, 0.29", "7.53385, -74.12, -4.02339, 0.59", "7.68845, -75.1201, -4.15488, 0.74", "7.89289, -76.0729, -4.26869, 0.74", "8.23607, -77.5219, -4.40349, 0.44", "8.40705, -78.253, -4.45282, 0.44", "8.63881, -79.3172, -4.49219, 0.81", "8.77176, -80.0437, -4.51085, 0.88", "8.90166, -81.0161, -4.52254, 1.11", "9.05368, -82.5728, -4.51587, 0.59", "9.09349, -83.0816, -4.49273, 0.59", "9.16186, -84.4108, -4.44093, 0.44", "9.18482, -85.8206, -4.40872, 0.59", "9.174, -86.6397, -4.38867, 0.81", "9.15414, -87.5099, -4.35961, 0.81", "9.15614, -88.9439, -4.29218, 0.44", "9.17295, -89.526, -4.25107, 0.44", "9.20316, -90.0315, -4.2046, 0.88", "9.27805, -90.755, -4.13041, 1.18", "9.36481, -91.4496, -4.06202, 1.18", "9.46985, -92.2807, -3.99627, 0.52", "9.63198, -93.5037, -3.93056, 0.37", "9.78381, -94.5937, -3.8813, 0.29", "9.98391, -95.8187, -3.85821, 0.29", "10.0665, -96.2534, -3.87604, 0.88", "10.2426, -97.0618, -3.97276, 0.88", "10.3356, -97.4367, -4.04884, 0.88", "10.4361, -97.7834, -4.14779, 0.88", "10.7116, -98.6098, -4.45789, 0.44", "11.0514, -99.529, -4.8689, 0.37", "11.2475, -100.076, -5.1175, 0.81", "11.4932, -100.801, -5.46064, 1.03", "11.6063, -101.19, -5.6525, 1.03", "11.764, -101.872, -5.99217, 1.03", "11.8511, -102.398, -6.24549, 0.81", "11.9565, -103.322, -6.69578, 0.37", "12.0204, -104.261, -7.14709, 0.37", "12.0582, -105.458, -7.72262, 1.18", "12.0594, -106.124, -8.0382, 1.18", "12.0429, -106.743, -8.30182, 1.18", "11.9992, -107.793, -8.7194, 0.74", "11.9591, -108.964, -9.16293, 0.37", "11.9572, -109.758, -9.42055, 0.37", "12.0219, -110.701, -9.69615, 1.03", "12.1396, -111.474, -9.90707, 1.25", "12.2661, -112.093, -10.0616, 1.25", "12.5506, -113.324, -10.3204, 0.37", "12.7939, -114.33, -10.5054, 0.29", "13.123, -115.705, -10.7326, 0.29", "13.3873, -116.854, -10.9136, 0.88", "13.5173, -117.514, -11.0159, 1.11", "13.7007, -118.764, -11.1761, 0.59", "13.7685, -119.491, -11.2433, 0.81", "13.7917, -119.999, -11.2813, 0.81", "13.7963, -121.14, -11.3224, 0.66", "13.7674, -122.531, -11.3462, 0.44", "13.7389, -123.563, -11.3542, 0.59", "13.7083, -124.324, -11.3534, 0.59", "13.6407, -125.269, -11.3509, 1.03", "13.5116, -126.427, -11.3418, 0.74", "13.3615, -127.32, -11.3271, 0.52", "13.2131, -127.985, -11.3237, 0.52", "13.0395, -128.643, -11.3286, 0.88", "12.8252, -129.352, -11.348, 0.88", "12.5576, -130.155, -11.3893, 0.88", "12.4101, -130.597, -11.4239, 0.88", "11.9895, -131.896, -11.5403, 0.44", "11.5869, -133.242, -11.6234, 0.37", "11.3987, -134.024, -11.6176, 0.37", "11.2625, -134.844, -11.5315, 0.81", "11.2288, -135.492, -11.3886, 0.81", "11.2492, -135.798, -11.2861, 0.81", "11.4131, -136.735, -10.8484, 0.66", "11.7662, -138.076, -10.1182, 0.52", "12.0192, -138.891, -9.65257, 0.52", "12.4711, -140.282, -8.81444, 0.37", "12.7027, -141.009, -8.39883, 0.37", "12.9567, -141.855, -7.9743, 0.74", "13.2351, -142.901, -7.57148, 0.74", "13.3926, -143.516, -7.41582, 0.74", "13.6311, -144.417, -7.20407, 0.96", "13.9155, -145.351, -7.06995, 0.66", "14.2196, -146.252, -7.00093, 0.37", "14.6128, -147.429, -6.9734, 0.37", "14.9726, -148.721, -6.99454, 0.37", "15.3411, -150.752, -7.1269, 0.66", "15.4776, -153.004, -7.37079, 0.59", "15.4265, -154.242, -7.52844, 0.44", "15.2409, -155.936, -7.78945, 0.44", "15.0624, -157.204, -8.00069, 0.44", "14.7957, -158.974, -8.29935, 0.44", "14.6431, -160.235, -8.47282, 0.44", "14.5523, -161.64, -8.52578, 0.81", "14.5928, -162.75, -8.49662, 0.81", "14.8511, -164.47, -8.28669, 0.59", "15.0671, -165.423, -8.0984, 0.59", "15.5216, -167.113, -7.68467, 0.59", "15.8508, -168.34, -7.32943, 0.37", "16.1449, -169.597, -6.91307, 0.59", "16.3517, -170.621, -6.57271, 0.59", "16.6089, -172.211, -6.07585, 0.37", "16.7108, -173.197, -5.79641, 0.37", "16.7233, -173.962, -5.62387, 0.52", "16.6405, -175.08, -5.39663, 0.52", "16.5187, -175.919, -5.25314, 0.59", "16.3151, -176.929, -5.08577, 0.52", "16.0485, -178.019, -4.89963, 0.52", "15.548, -179.831, -4.56347, 0.44", "15.2416, -180.874, -4.37742, 0.74", "15.0453, -181.545, -4.27672, 0.74", "14.8, -182.4, -4.19294, 0.44", "14.4531, -183.775, -4.16814, 0.29", "14.2866, -184.661, -4.23348, 0.59", "14.2307, -185.176, -4.31265, 0.59", "14.22, -186.439, -4.60315, 0.37", "14.3607, -187.77, -4.99377, 0.22", "14.6341, -189.079, -5.43638, 0.44", "14.8378, -189.745, -5.68642, 0.44", "15.1455, -190.587, -6.00558, 0.44", "15.7176, -191.965, -6.49913, 0.37", "16.2583, -193.135, -6.86545, 0.66", "16.6458, -193.918, -7.08732, 0.37", "17.149, -195.016, -7.37344, 0.37", "17.5113, -195.882, -7.58479, 0.88", "17.7214, -196.469, -7.71503, 1.03", "18.0605, -197.613, -7.92738, 0.22", "18.2582, -198.391, -8.05119, 0.22", "18.5738, -199.593, -8.2055, 0.22", "19.3531, -209.486, -6.96757, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "99.0343, 55.8931, -49.5735, 0.29", "107.153, 58.5115, -54.7914, 0.29", "114.572, 61.8277, -60.6202, 0.29", "122.112, 63.588, -66.9484, 0.29", "128.726, 64.1044, -74.4311, 0.29", "136.246, 66.2225, -80.673, 0.29", "143.95, 68.0631, -86.7772, 0.29", "151.391, 70.1135, -93.1352, 0.29", "158.364, 70.9283, -100.256, 0.29", "164.14, 71.0969, -108.418, 0.29", "169.772, 73.0249, -116.453, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "99.0343, 55.8931, -49.5735, 0.29", "106.952, 58.6747, -55.0117, 0.29", "113.317, 62.8555, -61.4934, 0.29", "119.583, 68.9938, -66.2955, 0.29", "127.145, 73.8603, -70.6682, 0.29", "134.834, 79.8887, -72.7999, 0.29", "141.455, 87.1173, -74.7774, 0.29", "148.186, 94.5123, -74.8774, 0.29", "155.746, 100.979, -75.8846, 0.29", "163.4, 107.404, -75.5062, 0.29", "171.438, 113.288, -76.3824, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "57.8662, 106.856, -22.178, 0.29", "61.6471, 115.722, -24.8426, 0.29", "65.0179, 124.718, -27.6203, 0.29", "69.0291, 133.838, -28.4709, 0.29", "72.7952, 142.819, -30.7455, 0.29", "76.2951, 151.943, -32.8656, 0.29", "80.7669, 160.033, -36.681, 0.29", "84.9075, 168.072, -40.9504, 0.29", "88.8725, 175.829, -45.8603, 0.29", "91.33, 183.327, -52.0034, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "57.8662, 106.856, -22.178, 0.29", "62.1277, 115.352, -25.2853, 0.29", "66.4176, 123.811, -28.455, 0.29", "69.3244, 133.082, -30.8217, 0.29", "73.8425, 141.979, -31.4716, 0.29", "79.6824, 150.093, -31.2318, 0.29", "85.7241, 157.919, -29.7304, 0.29", "91.3648, 165.587, -26.6672, 0.29", "97.3066, 172.262, -22.1799, 0.29", "104.615, 176.956, -17.2235, 0.29", "112.178, 180.404, -11.6638, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "48.0679, -118.221, -7.87209, 0.52", "53.5982, -126.552, -7.95684, 0.52", "57.9301, -135.515, -7.01058, 0.52", "63.8928, -143.53, -6.5501, 0.52", "69.1332, -152.024, -7.17621, 0.52", "73.0792, -161.206, -6.83228, 0.52", "77.3952, -170.138, -5.5695, 0.52", "82.2654, -178.803, -4.47782, 0.52", "86.691, -187.502, -2.30069, 0.52", "92.5433, -195.021, 0.735261, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "48.0679, -118.221, -7.87209, 0.44", "53.5521, -126.521, -8.88464, 0.52", "58.116, -135.398, -8.26853, 0.52", "64.135, -143.314, -7.21677, 0.52", "70.6449, -150.458, -4.65167, 0.52", "77.7724, -156.278, -0.736991, 0.52", "84.415, -160.89, 5.14601, 0.52", "92.0701, -164.627, 10.3841, 0.52", "99.2163, -168.708, 16.0651, 0.52", "106.37, -174.031, 20.5919, 0.52", "113.882, -179.796, 23.8083, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_29", "dend_22", "dend_11", "dend_0", "dend_32", "dend_31", "dend_24", "dend_23", "dend_15", "dend_12", "dend_4", "dend_1", "dend_34", "dend_33", "dend_26", "dend_25", "dend_21", "dend_16", "dend_14", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "dend_28", "dend_27", "dend_18", "dend_17", "dend_10", "dend_9", "dend_7", "dend_6", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_29", "dend_22", "dend_11", "dend_0", "dend_32", "dend_31", "dend_24", "dend_23", "dend_15", "dend_12", "dend_4", "dend_1", "dend_34", "dend_33", "dend_26", "dend_25", "dend_21", "dend_16", "dend_14", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "dend_28", "dend_27", "dend_18", "dend_17", "dend_10", "dend_9", "dend_7", "dend_6", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_MC_5597e4d536_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_15
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_22, dend_11, dend_0, dend_32, dend_31, dend_24, dend_23, dend_15, dend_12, dend_4, dend_1, dend_34, dend_33, dend_26, dend_25, dend_21, dend_16, dend_14, dend_13, dend_8, dend_5, dend_3, dend_2, dend_28, dend_27, dend_18, dend_17, dend_10, dend_9, dend_7, dend_6, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_29, dend_22, dend_11, dend_0, dend_32, dend_31, dend_24, dend_23, dend_15, dend_12, dend_4, dend_1, dend_34, dend_33, dend_26, dend_25, dend_21, dend_16, dend_14, dend_13, dend_8, dend_5, dend_3, dend_2, dend_28, dend_27, dend_18, dend_17, dend_10, dend_9, dend_7, dend_6, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_17
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999914784564564)
    connect dend_29(0), soma_0(0.49999914784564564)
    connect dend_22(0), soma_0(0.49999914784564564)
    connect dend_11(0), soma_0(0.49999914784564564)
    connect dend_0(0), soma_0(0.49999914784564564)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.24331, 10.746, 0.33713, 2.37469 ) }
    soma_0 { pt3dadd( 1.15672, 9.59164, 0.30254, 4.11758 ) }
    soma_0 { pt3dadd( 1.07014, 8.43727, 0.26795, 5.23506 ) }
    soma_0 { pt3dadd( 0.983554, 7.28291, 0.23336, 6.11957 ) }
    soma_0 { pt3dadd( 0.89697, 6.12855, 0.19877, 7.12192 ) }
    soma_0 { pt3dadd( 0.810387, 4.97418, 0.164181, 8.18469 ) }
    soma_0 { pt3dadd( 0.723803, 3.81982, 0.129591, 9.27345 ) }
    soma_0 { pt3dadd( 0.637219, 2.66546, 0.095001, 10.2413 ) }
    soma_0 { pt3dadd( 0.550635, 1.5111, 0.0604113, 10.8301 ) }
    soma_0 { pt3dadd( 0.464052, 0.356733, 0.0258215, 11.3177 ) }
    soma_0 { pt3dadd( 0.377468, -0.79763, -0.00876834, 11.2674 ) }
    soma_0 { pt3dadd( 0.290884, -1.95199, -0.0433581, 10.846 ) }
    soma_0 { pt3dadd( 0.204301, -3.10636, -0.0779479, 10.2057 ) }
    soma_0 { pt3dadd( 0.117717, -4.26072, -0.112538, 9.47915 ) }
    soma_0 { pt3dadd( 0.0311331, -5.41508, -0.147128, 8.88403 ) }
    soma_0 { pt3dadd( -0.0554507, -6.56944, -0.181717, 8.44045 ) }
    soma_0 { pt3dadd( -0.142034, -7.72381, -0.216307, 7.70936 ) }
    soma_0 { pt3dadd( -0.228618, -8.87817, -0.250897, 6.84096 ) }
    soma_0 { pt3dadd( -0.315202, -10.0325, -0.285487, 5.77533 ) }
    soma_0 { pt3dadd( -0.401786, -11.1869, -0.320077, 4.35755 ) }
    soma_0 { pt3dadd( -0.488369, -12.3413, -0.354666, 2.49926 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.885881, 10.6664, 0.230613, 1.84 ) }
    dend_30 { pt3dadd( -0.885881, 10.6664, 0.230613, 1.84 ) }
    dend_30 { pt3dadd( -1.6455, 11.9792, 0.352823, 1.55 ) }
    dend_30 { pt3dadd( -2.43925, 13.1512, 0.526076, 1.47 ) }
    dend_30 { pt3dadd( -3.32048, 14.3334, 0.735418, 1.47 ) }
    dend_30 { pt3dadd( -3.48573, 14.5469, 0.775537, 1.47 ) }
    dend_30 { pt3dadd( -3.60608, 14.7013, 0.805151, 1.47 ) }
    dend_30 { pt3dadd( -4.59371, 15.939, 1.05273, 0.88 ) }
    dend_30 { pt3dadd( -5.23681, 16.7303, 1.24758, 0.88 ) }
    dend_30 { pt3dadd( -5.837, 17.5059, 1.46097, 0.88 ) }
    dend_30 { pt3dadd( -6.65352, 18.5934, 1.81233, 0.88 ) }
    dend_30 { pt3dadd( -7.21288, 19.367, 2.10442, 0.81 ) }
    dend_30 { pt3dadd( -8.08192, 20.5658, 2.64275, 0.81 ) }
    dend_30 { pt3dadd( -8.64832, 21.3239, 3.04472, 0.96 ) }
    dend_30 { pt3dadd( -9.47204, 22.3371, 3.71096, 0.81 ) }
    dend_30 { pt3dadd( -10.2338, 23.1961, 4.38345, 0.81 ) }
    dend_30 { pt3dadd( -10.9042, 23.904, 5.02189, 0.81 ) }
    dend_30 { pt3dadd( -11.6341, 24.6495, 5.7485, 0.96 ) }
    dend_30 { pt3dadd( -12.1772, 25.181, 6.32323, 0.96 ) }
    dend_30 { pt3dadd( -12.7542, 25.6986, 6.921, 1.03 ) }
    dend_30 { pt3dadd( -13.1814, 26.07, 7.36483, 1.03 ) }
    dend_30 { pt3dadd( -13.9964, 26.8146, 8.1929, 0.81 ) }
    dend_30 { pt3dadd( -14.7768, 27.6063, 8.98667, 0.66 ) }
    dend_30 { pt3dadd( -15.4638, 28.4065, 9.72778, 0.96 ) }
    dend_30 { pt3dadd( -16.0354, 29.1463, 10.4052, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 46/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.31589, 10.0764, -1.51939, 0.37 ) }
    dend_29 { pt3dadd( -1.31589, 10.0764, -1.51939, 0.37 ) }
    dend_29 { pt3dadd( -1.91513, 10.7316, -1.58309, 0.37 ) }
    dend_29 { pt3dadd( -3.1183, 12.0864, -1.73159, 0.37 ) }
    dend_29 { pt3dadd( -4.30962, 13.4598, -1.88804, 0.37 ) }
    dend_29 { pt3dadd( -5.13458, 14.4353, -2.01403, 0.59 ) }
    dend_29 { pt3dadd( -5.88167, 15.3284, -2.13312, 0.59 ) }
    dend_29 { pt3dadd( -6.53543, 16.1202, -2.24198, 0.59 ) }
    dend_29 { pt3dadd( -7.17674, 16.9297, -2.36451, 0.59 ) }
    dend_29 { pt3dadd( -7.86797, 17.8594, -2.53917, 0.59 ) }
    dend_29 { pt3dadd( -8.54779, 18.8643, -2.74526, 0.44 ) }
    dend_29 { pt3dadd( -9.20758, 19.908, -2.95276, 0.44 ) }
    dend_29 { pt3dadd( -9.8583, 21.0075, -3.1592, 0.44 ) }
    dend_29 { pt3dadd( -10.6388, 22.4431, -3.40238, 0.44 ) }
    dend_29 { pt3dadd( -11.1918, 23.5983, -3.57999, 0.59 ) }
    dend_29 { pt3dadd( -11.65, 24.6579, -3.72147, 0.59 ) }
    dend_29 { pt3dadd( -12.2614, 26.1819, -3.89093, 0.52 ) }
    dend_29 { pt3dadd( -12.8262, 27.6587, -4.03337, 0.66 ) }
    dend_29 { pt3dadd( -13.2998, 28.9171, -4.12989, 0.66 ) }
    dend_29 { pt3dadd( -14.0581, 30.8568, -4.22332, 0.52 ) }
    dend_29 { pt3dadd( -14.5407, 32.0183, -4.24938, 0.52 ) }
    dend_29 { pt3dadd( -14.9313, 32.9127, -4.26682, 0.88 ) }
    dend_29 { pt3dadd( -15.2715, 33.6766, -4.27971, 1.03 ) }
    dend_29 { pt3dadd( -15.5469, 34.2748, -4.2881, 0.44 ) }
    dend_29 { pt3dadd( -15.8672, 34.958, -4.30519, 0.44 ) }
    dend_29 { pt3dadd( -16.2996, 35.8815, -4.34275, 0.88 ) }
    dend_29 { pt3dadd( -16.5815, 36.5067, -4.38537, 0.88 ) }
    dend_29 { pt3dadd( -17.0627, 37.6251, -4.47983, 0.29 ) }
    dend_29 { pt3dadd( -17.447, 38.5679, -4.57995, 0.29 ) }
    dend_29 { pt3dadd( -17.8596, 39.6101, -4.71233, 0.66 ) }
    dend_29 { pt3dadd( -18.2142, 40.5092, -4.84925, 0.81 ) }
    dend_29 { pt3dadd( -18.5428, 41.3103, -4.98529, 0.81 ) }
    dend_29 { pt3dadd( -18.8272, 41.9382, -5.10137, 0.29 ) }
    dend_29 { pt3dadd( -19.4707, 43.2406, -5.35693, 0.29 ) }
    dend_29 { pt3dadd( -19.9444, 44.1148, -5.52369, 0.74 ) }
    dend_29 { pt3dadd( -20.2308, 44.6232, -5.62057, 0.74 ) }
    dend_29 { pt3dadd( -20.8885, 45.7688, -5.85273, 0.29 ) }
    dend_29 { pt3dadd( -21.6163, 47.0227, -6.10228, 0.29 ) }
    dend_29 { pt3dadd( -22.0427, 47.7218, -6.23825, 0.29 ) }
    dend_29 { pt3dadd( -22.6089, 48.6261, -6.38566, 0.81 ) }
    dend_29 { pt3dadd( -23.0123, 49.2971, -6.4799, 0.81 ) }
    dend_29 { pt3dadd( -23.2571, 49.734, -6.53059, 0.81 ) }
    dend_29 { pt3dadd( -23.6758, 50.5506, -6.61069, 0.81 ) }
    dend_29 { pt3dadd( -24.2731, 51.8757, -6.70807, 0.29 ) }
    dend_29 { pt3dadd( -25.0307, 53.7275, -6.81233, 0.29 ) }
    dend_29 { pt3dadd( -25.4694, 54.9165, -6.86133, 0.88 ) }
    dend_29 { pt3dadd( -25.7358, 55.6824, -6.87809, 1.18 ) }
    dend_29 { pt3dadd( -25.9868, 56.441, -6.88827, 0.59 ) }
    dend_29 { pt3dadd( -26.3925, 57.7673, -6.90309, 0.29 ) }
    dend_29 { pt3dadd( -26.5798, 58.4014, -6.90786, 0.66 ) }
    dend_29 { pt3dadd( -26.7667, 58.9618, -6.91257, 0.66 ) }
    dend_29 { pt3dadd( -27.1754, 60.0675, -6.92357, 0.52 ) }
    dend_29 { pt3dadd( -27.5689, 61.0419, -6.95061, 0.29 ) }
    dend_29 { pt3dadd( -28.0171, 62.0628, -6.99136, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( -28.7115, 63.5153, -7.06218, 0.29 ) }
    dend_29 { pt3dadd( -29.2377, 64.5564, -7.11322, 0.74 ) }
    dend_29 { pt3dadd( -29.5481, 65.1434, -7.14177, 0.74 ) }
    dend_29 { pt3dadd( -29.9142, 65.8165, -7.16542, 0.22 ) }
    dend_29 { pt3dadd( -30.5784, 66.9774, -7.17157, 0.22 ) }
    dend_29 { pt3dadd( -31.277, 68.1206, -7.19072, 0.22 ) }
    dend_29 { pt3dadd( -31.653, 68.715, -7.20525, 0.66 ) }
    dend_29 { pt3dadd( -32.0681, 69.3165, -7.22191, 0.66 ) }
    dend_29 { pt3dadd( -32.5212, 69.925, -7.24458, 0.29 ) }
    dend_29 { pt3dadd( -32.9389, 70.4638, -7.26886, 0.29 ) }
    dend_29 { pt3dadd( -33.7754, 71.5069, -7.33849, 0.66 ) }
    dend_29 { pt3dadd( -34.2887, 72.1545, -7.3981, 0.88 ) }
    dend_29 { pt3dadd( -34.9167, 72.9944, -7.49448, 0.37 ) }
    dend_29 { pt3dadd( -35.6424, 74.0412, -7.62461, 0.74 ) }
    dend_29 { pt3dadd( -36.1107, 74.7923, -7.71987, 0.96 ) }
    dend_29 { pt3dadd( -36.5242, 75.5842, -7.81271, 0.96 ) }
    dend_29 { pt3dadd( -37.0035, 76.7408, -7.93335, 0.52 ) }
    dend_29 { pt3dadd( -37.3255, 77.7402, -8.09679, 0.66 ) }
    dend_29 { pt3dadd( -37.4813, 78.3655, -8.24226, 0.66 ) }
    dend_29 { pt3dadd( -37.6709, 79.2598, -8.50402, 0.37 ) }
    dend_29 { pt3dadd( -37.8843, 80.4193, -8.88001, 0.37 ) }
    dend_29 { pt3dadd( -38.0775, 81.5717, -9.28091, 0.44 ) }
    dend_29 { pt3dadd( -38.2993, 82.7812, -9.7083, 0.59 ) }
    dend_29 { pt3dadd( -38.6248, 84.2879, -10.2398, 0.29 ) }
    dend_29 { pt3dadd( -38.9019, 85.3945, -10.6229, 0.29 ) }
    dend_29 { pt3dadd( -39.2081, 86.4015, -10.9448, 0.52 ) }
    dend_29 { pt3dadd( -39.3581, 86.826, -11.0603, 0.52 ) }
    dend_29 { pt3dadd( -39.8117, 87.9924, -11.2945, 0.29 ) }
    dend_29 { pt3dadd( -40.1587, 88.8262, -11.4077, 0.44 ) }
    dend_29 { pt3dadd( -40.401, 89.3743, -11.4595, 0.44 ) }
    dend_29 { pt3dadd( -40.9499, 90.5721, -11.5387, 0.22 ) }
    dend_29 { pt3dadd( -41.2545, 91.2516, -11.5733, 0.22 ) }
    dend_29 { pt3dadd( -41.7084, 92.3082, -11.6247, 0.66 ) }
    dend_29 { pt3dadd( -41.9765, 92.9523, -11.6598, 0.96 ) }
    dend_29 { pt3dadd( -42.1855, 93.4699, -11.6901, 0.96 ) }
    dend_29 { pt3dadd( -43.1665, 96.1135, -11.854, 0.22 ) }
    dend_29 { pt3dadd( -43.7095, 97.7249, -11.946, 0.22 ) }
    dend_29 { pt3dadd( -44.032, 98.7062, -11.988, 0.59 ) }
    dend_29 { pt3dadd( -44.2699, 99.4466, -12.0184, 0.59 ) }
    dend_29 { pt3dadd( -44.5122, 100.208, -12.0496, 0.59 ) }
    dend_29 { pt3dadd( -45.0827, 102.023, -12.1404, 0.22 ) }
    dend_29 { pt3dadd( -46.3021, 105.892, -12.3568, 0.22 ) }
    dend_29 { pt3dadd( -46.5787, 106.722, -12.4022, 0.59 ) }
    dend_29 { pt3dadd( -46.8284, 107.456, -12.4362, 0.81 ) }
    dend_29 { pt3dadd( -47.0074, 107.978, -12.465, 0.81 ) }
    dend_29 { pt3dadd( -47.6529, 109.821, -12.604, 0.29 ) }
    dend_29 { pt3dadd( -48.2185, 111.392, -12.7648, 0.29 ) }
    dend_29 { pt3dadd( -48.8112, 113.064, -12.9689, 0.29 ) }
    dend_29 { pt3dadd( -49.7889, 115.867, -13.3427, 0.29 ) }
    dend_29 { pt3dadd( -50.1182, 116.814, -13.469, 0.52 ) }
    dend_29 { pt3dadd( -50.3423, 117.452, -13.5608, 0.52 ) }
    dend_29 { pt3dadd( -50.9769, 119.239, -13.8311, 0.29 ) }
    dend_29 { pt3dadd( -51.5609, 120.92, -14.1178, 0.29 ) }
    dend_29 { pt3dadd( -51.9284, 122.021, -14.3279, 0.74 ) }
    dend_29 { pt3dadd( -52.2569, 122.947, -14.5215, 0.74 ) }
    dend_29 { pt3dadd( -52.4775, 123.547, -14.6266, 0.52 ) }
    dend_29 { pt3dadd( -56.3253, 132.679, -15.9664, 0.52 ) }
    dend_29 { pt3dadd( -59.2199, 142.23, -15.3374, 0.52 ) }
    dend_29 { pt3dadd( -60.7998, 152.096, -14.933, 0.52 ) }
    dend_29 { pt3dadd( -61.2071, 162.078, -15.3894, 0.52 ) }
    dend_29 { pt3dadd( -60.2642, 171.794, -17.5594, 0.52 ) }
    dend_29 { pt3dadd( -57.752, 180.993, -20.5705, 0.52 ) }
    dend_29 { pt3dadd( -53.6068, 188.817, -25.2173, 0.52 ) }
    dend_29 { pt3dadd( -49.4889, 196.709, -29.7735, 0.52 ) }
    dend_29 { pt3dadd( -46.5576, 203.57, -36.4327, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.78589, -10.9136, -2.01939, 2.14 ) }
    dend_22 { pt3dadd( -2.78589, -10.9136, -2.01939, 2.14 ) }
    dend_22 { pt3dadd( -3.52749, -12.2811, -2.46295, 1.55 ) }
    dend_22 { pt3dadd( -4.4537, -14.0409, -3.06422, 1.25 ) }
    dend_22 { pt3dadd( -4.82414, -14.7735, -3.32112, 1.47 ) }
    dend_22 { pt3dadd( -5.23455, -15.5746, -3.59622, 1.62 ) }
    dend_22 { pt3dadd( -5.53598, -16.1493, -3.82665, 1.62 ) }
    dend_22 { pt3dadd( -6.15782, -17.3593, -4.34299, 1.11 ) }
    dend_22 { pt3dadd( -6.56501, -18.2156, -4.70659, 0.96 ) }
    dend_22 { pt3dadd( -7.19953, -19.6674, -5.26151, 1.03 ) }
    dend_22 { pt3dadd( -7.8145, -21.1903, -5.81173, 1.03 ) }
    dend_22 { pt3dadd( -8.58027, -23.2407, -6.6379, 1.33 ) }
    dend_22 { pt3dadd( -9.07816, -24.5948, -7.18345, 1.11 ) }
    dend_22 { pt3dadd( -9.7336, -26.4656, -7.93148, 1.11 ) }
    dend_22 { pt3dadd( -10.279, -28.1848, -8.60166, 1.18 ) }
    dend_22 { pt3dadd( -10.7377, -29.822, -9.23495, 1.18 ) }
    dend_22 { pt3dadd( -11.3094, -32.4177, -10.2066, 1.55 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 82/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.26588, -11.9036, 0.0506124, 2.28 ) }
    dend_11 { pt3dadd( -0.26588, -11.9036, 0.0506124, 2.28 ) }
    dend_11 { pt3dadd( -0.266347, -13.3658, 0.0506124, 1.99 ) }
    dend_11 { pt3dadd( -0.252441, -15.1262, 0.0506124, 1.69 ) }
    dend_11 { pt3dadd( -0.215723, -16.958, 0.0506124, 1.62 ) }
    dend_11 { pt3dadd( -0.171663, -18.4096, 0.0506124, 1.62 ) }
    dend_11 { pt3dadd( -0.118161, -20.0302, 0.0506124, 1.84 ) }
    dend_11 { pt3dadd( -0.0560365, -21.8698, 0.0506124, 1.92 ) }
    dend_11 { pt3dadd( -0.0072442, -23.3356, 0.0506124, 1.92 ) }
    dend_11 { pt3dadd( 0.0546181, -24.8831, 0.0506124, 1.55 ) }
    dend_11 { pt3dadd( 0.146344, -26.628, 0.0396639, 1.55 ) }
    dend_11 { pt3dadd( 0.246827, -28.0966, 0.0192163, 1.47 ) }
    dend_11 { pt3dadd( 0.368172, -29.4979, -0.013423, 1.47 ) }
    dend_11 { pt3dadd( 0.557611, -31.3189, -0.0386547, 1.33 ) }
    dend_11 { pt3dadd( 0.795453, -33.5516, -0.0730819, 1.33 ) }
    dend_11 { pt3dadd( 0.968625, -35.0695, -0.0992033, 1.33 ) }
    dend_11 { pt3dadd( 1.08948, -35.9802, -0.1166, 1.69 ) }
    dend_11 { pt3dadd( 1.23642, -36.87, -0.134749, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( 1.54411, -38.3615, -0.164779, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 1/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.22411, 9.58637, -0.579387, 1.77 ) }
    dend_0 { pt3dadd( 2.57167, 10.1818, -0.596969, 1.77 ) }
    dend_0 { pt3dadd( 3.30256, 11.3969, -0.630164, 1.47 ) }
    dend_0 { pt3dadd( 3.98044, 12.5154, -0.656899, 1.25 ) }
    dend_0 { pt3dadd( 4.48506, 13.3366, -0.674416, 1.25 ) }
    dend_0 { pt3dadd( 5.02457, 14.2002, -0.680434, 1.47 ) }
    dend_0 { pt3dadd( 5.53188, 15.0034, -0.661952, 1.47 ) }
    dend_0 { pt3dadd( 6.04998, 15.7887, -0.620553, 1.47 ) }
    dend_0 { pt3dadd( 6.77824, 16.8321, -0.533268, 1.25 ) }
    dend_0 { pt3dadd( 7.25938, 17.4474, -0.464731, 1.25 ) }
    dend_0 { pt3dadd( 7.8042, 18.0376, -0.377277, 1.4 ) }
    dend_0 { pt3dadd( 8.40394, 18.5777, -0.26695, 1.25 ) }
    dend_0 { pt3dadd( 9.1272, 19.1309, -0.127984, 1.25 ) }
    dend_0 { pt3dadd( 10.0662, 19.7634, 0.0558666, 1.25 ) }
    dend_0 { pt3dadd( 11.1683, 20.4461, 0.274404, 1.18 ) }
    dend_0 { pt3dadd( 11.8102, 20.8383, 0.399894, 1.18 ) }
    dend_0 { pt3dadd( 13.0811, 21.6232, 0.638104, 0.96 ) }
    dend_0 { pt3dadd( 14.164, 22.2856, 0.840293, 1.33 ) }
    dend_0 { pt3dadd( 15.1058, 22.873, 1.04956, 1.33 ) }
    dend_0 { pt3dadd( 15.5627, 23.1637, 1.15365, 1.33 ) }
    dend_0 { pt3dadd( 16.2446, 23.6276, 1.31829, 0.81 ) }
    dend_0 { pt3dadd( 16.8324, 24.0561, 1.45805, 0.81 ) }
    dend_0 { pt3dadd( 17.6056, 24.6497, 1.63568, 1.25 ) }
    dend_0 { pt3dadd( 18.4205, 25.2814, 1.83933, 1.47 ) }
    dend_0 { pt3dadd( 19.3219, 25.9296, 2.05858, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.488369, -12.3413, -0.354666, 1.11709 ) }
    axon_0 { pt3dadd( -1.6103, -27.2993, -0.354666, 1.11709 ) }
    axon_0 { pt3dadd( -2.73224, -42.2573, -0.354666, 1.11709 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -16.0354, 29.1463, 10.4052, 0.66 ) }
    dend_32 { pt3dadd( -17.0718, 29.4096, 10.5006, 0.66 ) }
    dend_32 { pt3dadd( -17.7896, 29.582, 10.5891, 0.37 ) }
    dend_32 { pt3dadd( -18.8471, 29.815, 10.7276, 0.74 ) }
    dend_32 { pt3dadd( -19.5334, 29.9535, 10.8166, 0.74 ) }
    dend_32 { pt3dadd( -20.057, 30.0476, 10.8842, 0.44 ) }
    dend_32 { pt3dadd( -21.5276, 30.2714, 11.0667, 0.29 ) }
    dend_32 { pt3dadd( -22.5231, 30.3948, 11.1844, 0.44 ) }
    dend_32 { pt3dadd( -23.6162, 30.4881, 11.3236, 0.59 ) }
    dend_32 { pt3dadd( -24.2013, 30.5152, 11.4011, 0.59 ) }
    dend_32 { pt3dadd( -25.0893, 30.5436, 11.5413, 0.59 ) }
    dend_32 { pt3dadd( -25.9674, 30.5744, 11.6857, 0.59 ) }
    dend_32 { pt3dadd( -26.8002, 30.6071, 11.834, 0.59 ) }
    dend_32 { pt3dadd( -27.4088, 30.6466, 11.9409, 0.44 ) }
    dend_32 { pt3dadd( -28.0873, 30.6841, 12.0808, 0.44 ) }
    dend_32 { pt3dadd( -28.9698, 30.7191, 12.3041, 0.81 ) }
    dend_32 { pt3dadd( -29.7904, 30.6901, 12.5556, 0.81 ) }
    dend_32 { pt3dadd( -30.1314, 30.6317, 12.69, 0.81 ) }
    dend_32 { pt3dadd( -30.9075, 30.3867, 13.0491, 0.52 ) }
    dend_32 { pt3dadd( -31.5641, 30.1143, 13.3662, 0.52 ) }
    dend_32 { pt3dadd( -32.1806, 29.8483, 13.6517, 0.52 ) }
    dend_32 { pt3dadd( -33.1504, 29.4677, 14.0539, 0.88 ) }
    dend_32 { pt3dadd( -33.9669, 29.2159, 14.3787, 1.03 ) }
    dend_32 { pt3dadd( -34.7712, 29.0634, 14.6559, 0.74 ) }
    dend_32 { pt3dadd( -35.7483, 29.0234, 14.8782, 0.59 ) }
    dend_32 { pt3dadd( -36.8022, 29.1214, 14.9976, 0.59 ) }
    dend_32 { pt3dadd( -37.5549, 29.2679, 15.0228, 0.59 ) }
    dend_32 { pt3dadd( -38.4571, 29.5311, 15.0042, 0.59 ) }
    dend_32 { pt3dadd( -39.1182, 29.7684, 14.9564, 0.59 ) }
    dend_32 { pt3dadd( -40.4528, 30.3247, 14.8179, 0.74 ) }
    dend_32 { pt3dadd( -41.2666, 30.6706, 14.7215, 0.74 ) }
    dend_32 { pt3dadd( -42.067, 30.9816, 14.6298, 0.59 ) }
    dend_32 { pt3dadd( -42.845, 31.2451, 14.5517, 0.59 ) }
    dend_32 { pt3dadd( -43.3948, 31.4168, 14.5025, 0.59 ) }
    dend_32 { pt3dadd( -44.2945, 31.6701, 14.4757, 0.37 ) }
    dend_32 { pt3dadd( -45.5372, 31.9804, 14.5177, 0.37 ) }
    dend_32 { pt3dadd( -46.7069, 32.2412, 14.5926, 0.66 ) }
    dend_32 { pt3dadd( -47.8949, 32.45, 14.7115, 0.66 ) }
    dend_32 { pt3dadd( -48.634, 32.5484, 14.8044, 0.52 ) }
    dend_32 { pt3dadd( -49.4462, 32.6297, 14.9179, 0.74 ) }
    dend_32 { pt3dadd( -50.6555, 32.7201, 15.0785, 0.52 ) }
    dend_32 { pt3dadd( -51.4936, 32.812, 15.1769, 0.52 ) }
    dend_32 { pt3dadd( -52.3002, 32.9184, 15.2389, 0.44 ) }
    dend_32 { pt3dadd( -52.9567, 33.0154, 15.2578, 0.44 ) }
    dend_32 { pt3dadd( -53.6834, 33.1622, 15.2398, 0.59 ) }
    dend_32 { pt3dadd( -54.5094, 33.3722, 15.1519, 0.59 ) }
    dend_32 { pt3dadd( -55.5115, 33.6585, 14.992, 0.52 ) }
    dend_32 { pt3dadd( -56.2256, 33.8797, 14.857, 0.52 ) }
    dend_32 { pt3dadd( -56.9011, 34.0965, 14.7239, 0.74 ) }
    dend_32 { pt3dadd( -58.1251, 34.4793, 14.5054, 0.96 ) }
    dend_32 { pt3dadd( -58.7016, 34.6578, 14.4487, 0.96 ) }
    dend_32 { pt3dadd( -59.7643, 34.9844, 14.3969, 0.52 ) }
    dend_32 { pt3dadd( -60.4057, 35.1744, 14.3835, 0.52 ) }
    dend_32 { pt3dadd( -61.1017, 35.3982, 14.382, 0.81 ) }
    dend_32 { pt3dadd( -61.8581, 35.6587, 14.3736, 0.81 ) }
    dend_32 { pt3dadd( -63.2102, 36.1976, 14.34, 0.52 ) }
    dend_32 { pt3dadd( -64.1225, 36.6209, 14.3325, 0.44 ) }
    dend_32 { pt3dadd( -64.6625, 36.9238, 14.3274, 0.44 ) }
    dend_32 { pt3dadd( -65.4221, 37.4133, 14.3012, 0.81 ) }
    dend_32 { pt3dadd( -65.8291, 37.7101, 14.2665, 0.96 ) }
    dend_32 { pt3dadd( -66.3746, 38.1417, 14.1574, 0.81 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 90/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -16.0354, 29.1463, 10.4052, 0.37 ) }
    dend_31 { pt3dadd( -16.6975, 29.6421, 11.0086, 0.37 ) }
    dend_31 { pt3dadd( -17.2203, 29.9639, 11.6448, 0.37 ) }
    dend_31 { pt3dadd( -17.7931, 30.288, 12.3617, 0.52 ) }
    dend_31 { pt3dadd( -18.3097, 30.5909, 12.9552, 0.81 ) }
    dend_31 { pt3dadd( -18.5605, 30.7431, 13.2155, 0.81 ) }
    dend_31 { pt3dadd( -19.7804, 31.5179, 14.3661, 1.4 ) }
    dend_31 { pt3dadd( -20.8932, 32.2422, 15.381, 1.11 ) }
    dend_31 { pt3dadd( -21.3837, 32.5873, 15.8211, 0.59 ) }
    dend_31 { pt3dadd( -22.2241, 33.2667, 16.6076, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( -23.0659, 34.0151, 17.4374, 0.59 ) }
    dend_31 { pt3dadd( -23.7325, 34.6273, 18.0723, 0.52 ) }
    dend_31 { pt3dadd( -24.4814, 35.2844, 18.7297, 0.52 ) }
    dend_31 { pt3dadd( -25.0653, 35.7633, 19.252, 0.52 ) }
    dend_31 { pt3dadd( -25.9249, 36.2927, 20.0524, 0.74 ) }
    dend_31 { pt3dadd( -26.6989, 36.5576, 20.7787, 0.59 ) }
    dend_31 { pt3dadd( -27.4978, 36.6353, 21.474, 0.44 ) }
    dend_31 { pt3dadd( -28.4754, 36.5809, 22.2465, 0.44 ) }
    dend_31 { pt3dadd( -29.0488, 36.5053, 22.6354, 0.44 ) }
    dend_31 { pt3dadd( -30.359, 36.3007, 23.4204, 0.44 ) }
    dend_31 { pt3dadd( -31.3111, 36.1502, 23.9287, 0.44 ) }
    dend_31 { pt3dadd( -32.2144, 36.0454, 24.3743, 0.52 ) }
    dend_31 { pt3dadd( -32.8027, 36.0116, 24.6613, 0.52 ) }
    dend_31 { pt3dadd( -33.7384, 36.0108, 25.1093, 0.52 ) }
    dend_31 { pt3dadd( -34.321, 36.0281, 25.4101, 0.74 ) }
    dend_31 { pt3dadd( -34.9622, 36.0857, 25.7537, 0.74 ) }
    dend_31 { pt3dadd( -35.9818, 36.2037, 26.2874, 0.59 ) }
    dend_31 { pt3dadd( -36.6266, 36.2731, 26.622, 0.59 ) }
    dend_31 { pt3dadd( -37.487, 36.3736, 27.0821, 0.52 ) }
    dend_31 { pt3dadd( -38.2455, 36.4656, 27.4977, 0.74 ) }
    dend_31 { pt3dadd( -39.3361, 36.58, 28.1442, 0.37 ) }
    dend_31 { pt3dadd( -39.9247, 36.6519, 28.5353, 0.37 ) }
    dend_31 { pt3dadd( -40.6389, 36.7667, 29.0418, 0.37 ) }
    dend_31 { pt3dadd( -41.6195, 36.9668, 29.7889, 0.37 ) }
    dend_31 { pt3dadd( -42.1502, 37.1105, 30.2448, 0.52 ) }
    dend_31 { pt3dadd( -43.1428, 37.3786, 31.2045, 0.81 ) }
    dend_31 { pt3dadd( -43.9637, 37.5537, 32.1232, 0.52 ) }
    dend_31 { pt3dadd( -44.3436, 37.5963, 32.6065, 0.52 ) }
    dend_31 { pt3dadd( -44.9889, 37.6503, 33.4947, 0.88 ) }
    dend_31 { pt3dadd( -45.6126, 37.6769, 34.4279, 0.59 ) }
    dend_31 { pt3dadd( -46.0337, 37.7072, 35.118, 0.44 ) }
    dend_31 { pt3dadd( -46.429, 37.7451, 35.8031, 0.29 ) }
    dend_31 { pt3dadd( -46.8735, 37.6467, 36.7003, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.3094, -32.4177, -10.2066, 1.25 ) }
    dend_24 { pt3dadd( -11.7763, -33.6173, -9.87151, 1.25 ) }
    dend_24 { pt3dadd( -12.0381, -34.2896, -9.68373, 1.25 ) }
    dend_24 { pt3dadd( -12.6041, -35.7438, -9.27759, 1.03 ) }
    dend_24 { pt3dadd( -13.0951, -37.005, -8.92536, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.3094, -32.4177, -10.2066, 0.59 ) }
    dend_23 { pt3dadd( -12.4812, -33.827, -11.4704, 0.59 ) }
    dend_23 { pt3dadd( -14.0604, -35.8479, -13.3135, 0.59 ) }
    dend_23 { pt3dadd( -14.661, -36.6533, -14.0536, 0.44 ) }
    dend_23 { pt3dadd( -15.7504, -38.1063, -15.3633, 0.44 ) }
    dend_23 { pt3dadd( -16.5519, -39.2086, -16.362, 0.44 ) }
    dend_23 { pt3dadd( -17.3181, -40.2831, -17.3403, 0.66 ) }
    dend_23 { pt3dadd( -17.7485, -40.9792, -18.0128, 0.66 ) }
    dend_23 { pt3dadd( -18.269, -41.9234, -18.8029, 0.44 ) }
    dend_23 { pt3dadd( -19.1216, -43.5488, -20.1144, 0.29 ) }
    dend_23 { pt3dadd( -19.7677, -44.79, -21.1401, 0.37 ) }
    dend_23 { pt3dadd( -20.0937, -45.4346, -21.7843, 0.37 ) }
    dend_23 { pt3dadd( -21.2091, -47.6022, -24.24, 0.22 ) }
    dend_23 { pt3dadd( -22.258, -49.4827, -26.5, 0.22 ) }
    dend_23 { pt3dadd( -22.7599, -50.3875, -27.6269, 0.22 ) }
    dend_23 { pt3dadd( -23.411, -51.5681, -29.1687, 0.22 ) }
    dend_23 { pt3dadd( -25.7204, -55.571, -34.6328, 0.22 ) }
    dend_23 { pt3dadd( -26.9958, -57.689, -37.7279, 0.22 ) }
    dend_23 { pt3dadd( -27.532, -58.4966, -39.0719, 0.22 ) }
    dend_23 { pt3dadd( -30.6873, -64.2651, -46.6064, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 58/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.54411, -38.3615, -0.164779, 1.55 ) }
    dend_15 { pt3dadd( 1.27411, -40.0315, -2.29478, 1.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 60/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.54411, -38.3615, -0.164779, 0.74 ) }
    dend_12 { pt3dadd( 2.69312, -39.685, 0.943355, 0.74 ) }
    dend_12 { pt3dadd( 3.32942, -40.3571, 1.50712, 0.74 ) }
    dend_12 { pt3dadd( 4.5032, -41.5438, 2.48972, 1.11 ) }
    dend_12 { pt3dadd( 5.20465, -42.2492, 3.04415, 1.11 ) }
    dend_12 { pt3dadd( 6.15461, -43.2318, 3.86475, 1.03 ) }
    dend_12 { pt3dadd( 7.00752, -44.1582, 4.6367, 0.81 ) }
    dend_12 { pt3dadd( 7.68829, -44.955, 5.32689, 0.81 ) }
    dend_12 { pt3dadd( 8.18296, -45.5937, 5.84224, 0.81 ) }
    dend_12 { pt3dadd( 9.07262, -46.841, 6.74085, 0.96 ) }
    dend_12 { pt3dadd( 10.1075, -48.3502, 7.85532, 0.96 ) }
    dend_12 { pt3dadd( 10.4451, -48.8629, 8.25151, 0.96 ) }
    dend_12 { pt3dadd( 11.1481, -49.9935, 9.12503, 0.88 ) }
    dend_12 { pt3dadd( 11.6405, -50.8298, 9.78793, 0.96 ) }
    dend_12 { pt3dadd( 11.9842, -51.4173, 10.2614, 0.96 ) }
    dend_12 { pt3dadd( 12.6786, -52.5587, 11.197, 0.81 ) }
    dend_12 { pt3dadd( 13.0111, -53.0388, 11.5672, 0.81 ) }
    dend_12 { pt3dadd( 13.3688, -53.4772, 11.9616, 1.03 ) }
    dend_12 { pt3dadd( 13.7046, -53.8059, 12.3278, 1.03 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.3219, 25.9296, 2.05858, 0.66 ) }
    dend_4 { pt3dadd( 21.4722, 27.2872, 1.14475, 0.66 ) }
    dend_4 { pt3dadd( 22.7229, 28.0977, 0.624665, 0.66 ) }
    dend_4 { pt3dadd( 23.7503, 28.7847, 0.218345, 0.66 ) }
    dend_4 { pt3dadd( 24.8938, 29.5494, -0.233919, 0.81 ) }
    dend_4 { pt3dadd( 25.4371, 29.9127, -0.448788, 0.81 ) }
    dend_4 { pt3dadd( 26.3438, 30.519, -0.807415, 0.59 ) }
    dend_4 { pt3dadd( 26.8596, 30.8398, -0.937441, 1.11 ) }
    dend_4 { pt3dadd( 27.5343, 31.1997, -1.11565, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 88/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 19.3219, 25.9296, 2.05858, 0.96 ) }
    dend_1 { pt3dadd( 20.434, 26.256, 3.0626, 0.96 ) }
    dend_1 { pt3dadd( 21.4014, 26.5371, 3.98593, 0.66 ) }
    dend_1 { pt3dadd( 21.9813, 26.6795, 4.52629, 0.66 ) }
    dend_1 { pt3dadd( 22.7424, 26.8229, 5.20087, 0.66 ) }
    dend_1 { pt3dadd( 23.5746, 26.94, 5.89631, 0.81 ) }
    dend_1 { pt3dadd( 24.4441, 26.9993, 6.59077, 1.03 ) }
    dend_1 { pt3dadd( 24.9662, 26.9658, 7.01976, 1.03 ) }
    dend_1 { pt3dadd( 25.5453, 26.8779, 7.48695, 0.81 ) }
    dend_1 { pt3dadd( 26.1886, 26.7295, 8.00348, 0.81 ) }
    dend_1 { pt3dadd( 26.7204, 26.5868, 8.42845, 0.66 ) }
    dend_1 { pt3dadd( 27.5712, 26.3556, 9.0908, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 28.6556, 26.087, 9.86417, 0.96 ) }
    dend_1 { pt3dadd( 29.0853, 25.9889, 10.1838, 0.96 ) }
    dend_1 { pt3dadd( 29.9151, 25.8134, 10.8101, 0.74 ) }
    dend_1 { pt3dadd( 30.736, 25.6288, 11.4475, 0.59 ) }
    dend_1 { pt3dadd( 31.3855, 25.4578, 11.9574, 0.59 ) }
    dend_1 { pt3dadd( 32.4192, 25.1245, 12.806, 1.03 ) }
    dend_1 { pt3dadd( 33.1847, 24.8092, 13.4565, 1.03 ) }
    dend_1 { pt3dadd( 33.9787, 24.3936, 14.1602, 0.59 ) }
    dend_1 { pt3dadd( 35.1389, 23.6772, 15.1875, 0.96 ) }
    dend_1 { pt3dadd( 35.6492, 23.3282, 15.6335, 0.96 ) }
    dend_1 { pt3dadd( 36.3995, 22.7767, 16.3066, 0.74 ) }
    dend_1 { pt3dadd( 36.6148, 22.6126, 16.5058, 0.74 ) }
    dend_1 { pt3dadd( 37.0215, 22.3129, 16.8704, 0.74 ) }
    dend_1 { pt3dadd( 37.6118, 21.9433, 17.4299, 0.52 ) }
    dend_1 { pt3dadd( 38.2446, 21.6507, 17.9879, 0.52 ) }
    dend_1 { pt3dadd( 38.8426, 21.4492, 18.523, 0.52 ) }
    dend_1 { pt3dadd( 39.5989, 21.2344, 19.1828, 1.03 ) }
    dend_1 { pt3dadd( 40.1743, 21.0837, 19.7105, 1.03 ) }
    dend_1 { pt3dadd( 41.3012, 20.8104, 20.8546, 0.66 ) }
    dend_1 { pt3dadd( 41.7827, 20.6908, 21.4052, 0.44 ) }
    dend_1 { pt3dadd( 42.9492, 20.4486, 22.838, 0.81 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.73224, -42.2573, -0.354666, 0.29 ) }
    axon_1 { pt3dadd( -3.85417, -57.2152, -0.354666, 0.29 ) }
    axon_1 { pt3dadd( -4.9761, -72.1732, -0.354666, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 24/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -66.3746, 38.1417, 14.1574, 0.29 ) }
    dend_34 { pt3dadd( -67.9366, 38.6283, 14.5896, 0.29 ) }
    dend_34 { pt3dadd( -68.6284, 38.8537, 14.747, 0.88 ) }
    dend_34 { pt3dadd( -69.0671, 38.9883, 14.8292, 0.88 ) }
    dend_34 { pt3dadd( -69.9575, 39.2341, 14.9679, 0.37 ) }
    dend_34 { pt3dadd( -70.7819, 39.4569, 15.0768, 0.37 ) }
    dend_34 { pt3dadd( -71.2949, 39.6052, 15.1335, 0.74 ) }
    dend_34 { pt3dadd( -71.9165, 39.8082, 15.1386, 0.74 ) }
    dend_34 { pt3dadd( -72.6109, 40.067, 15.1285, 0.74 ) }
    dend_34 { pt3dadd( -73.2922, 40.3314, 15.1084, 0.59 ) }
    dend_34 { pt3dadd( -73.9364, 40.5996, 15.0811, 0.59 ) }
    dend_34 { pt3dadd( -74.6514, 40.9096, 15.0446, 0.29 ) }
    dend_34 { pt3dadd( -75.3392, 41.2152, 15.008, 0.29 ) }
    dend_34 { pt3dadd( -76.469, 41.746, 14.9508, 0.29 ) }
    dend_34 { pt3dadd( -77.1551, 42.0968, 14.9192, 0.66 ) }
    dend_34 { pt3dadd( -77.9011, 42.5028, 14.8853, 0.66 ) }
    dend_34 { pt3dadd( -78.678, 42.9358, 14.8688, 0.37 ) }
    dend_34 { pt3dadd( -79.4046, 43.3522, 14.8736, 0.37 ) }
    dend_34 { pt3dadd( -80.083, 43.7463, 14.8971, 0.37 ) }
    dend_34 { pt3dadd( -80.8813, 44.2315, 14.9383, 0.29 ) }
    dend_34 { pt3dadd( -81.5953, 44.6822, 14.9822, 0.29 ) }
    dend_34 { pt3dadd( -82.4389, 45.2424, 15.0407, 0.81 ) }
    dend_34 { pt3dadd( -83.075, 45.6882, 15.0928, 0.81 ) }
    dend_34 { pt3dadd( -83.7492, 46.1662, 15.1643, 0.22 ) }
    dend_34 { pt3dadd( -84.4347, 46.6193, 15.254, 0.52 ) }
    dend_34 { pt3dadd( -84.8322, 46.8652, 15.3352, 0.66 ) }
    dend_34 { pt3dadd( -85.4668, 47.2246, 15.5293, 0.29 ) }
    dend_34 { pt3dadd( -86.0081, 47.5245, 15.7061, 0.29 ) }
    dend_34 { pt3dadd( -86.8735, 47.9964, 16.0297, 0.88 ) }
    dend_34 { pt3dadd( -87.6321, 48.4115, 16.3602, 0.88 ) }
    dend_34 { pt3dadd( -88.6151, 48.9054, 16.8549, 0.74 ) }
    dend_34 { pt3dadd( -89.4694, 49.2878, 17.335, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 56/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -66.3746, 38.1417, 14.1574, 0.44 ) }
    dend_33 { pt3dadd( -67.2796, 38.9254, 13.6869, 0.44 ) }
    dend_33 { pt3dadd( -67.7242, 39.3479, 13.4533, 0.52 ) }
    dend_33 { pt3dadd( -68.1744, 39.7853, 13.2114, 0.52 ) }
    dend_33 { pt3dadd( -68.6019, 40.1841, 12.9924, 0.52 ) }
    dend_33 { pt3dadd( -69.1589, 40.6772, 12.7317, 0.37 ) }
    dend_33 { pt3dadd( -69.6455, 41.0903, 12.5137, 0.37 ) }
    dend_33 { pt3dadd( -70.4594, 41.7595, 12.2157, 0.81 ) }
    dend_33 { pt3dadd( -70.9512, 42.1476, 12.0606, 0.81 ) }
    dend_33 { pt3dadd( -71.4914, 42.5619, 11.898, 0.44 ) }
    dend_33 { pt3dadd( -72.0892, 43.0094, 11.7325, 0.29 ) }
    dend_33 { pt3dadd( -72.6464, 43.41, 11.5852, 0.37 ) }
    dend_33 { pt3dadd( -73.3208, 43.8804, 11.4288, 0.37 ) }
    dend_33 { pt3dadd( -74.0828, 44.4055, 11.2748, 0.29 ) }
    dend_33 { pt3dadd( -74.8062, 44.9223, 11.0605, 0.29 ) }
    dend_33 { pt3dadd( -75.082, 45.1385, 10.9457, 0.66 ) }
    dend_33 { pt3dadd( -75.4798, 45.4743, 10.7445, 0.66 ) }
    dend_33 { pt3dadd( -75.9682, 45.9104, 10.4735, 0.66 ) }
    dend_33 { pt3dadd( -76.3919, 46.3052, 10.2184, 0.74 ) }
    dend_33 { pt3dadd( -77.5314, 47.4085, 9.53186, 0.29 ) }
    dend_33 { pt3dadd( -78.1856, 48.0585, 9.14972, 0.29 ) }
    dend_33 { pt3dadd( -78.6479, 48.5579, 8.88255, 0.66 ) }
    dend_33 { pt3dadd( -79.0559, 49.0522, 8.65835, 0.66 ) }
    dend_33 { pt3dadd( -79.3475, 49.4513, 8.50542, 0.66 ) }
    dend_33 { pt3dadd( -79.7934, 50.1333, 8.3079, 0.96 ) }
    dend_33 { pt3dadd( -80.0177, 50.507, 8.24576, 0.96 ) }
    dend_33 { pt3dadd( -80.4334, 51.2158, 8.13569, 0.52 ) }
    dend_33 { pt3dadd( -80.7729, 51.8068, 8.04835, 0.29 ) }
    dend_33 { pt3dadd( -81.0638, 52.3129, 7.98445, 0.29 ) }
    dend_33 { pt3dadd( -81.4257, 52.9426, 7.92206, 0.59 ) }
    dend_33 { pt3dadd( -81.788, 53.596, 7.87423, 0.59 ) }
    dend_33 { pt3dadd( -82.1112, 54.1914, 7.84552, 0.37 ) }
    dend_33 { pt3dadd( -82.4759, 54.8988, 7.82035, 0.37 ) }
    dend_33 { pt3dadd( -82.965, 55.961, 7.76964, 0.88 ) }
    dend_33 { pt3dadd( -83.2942, 56.7697, 7.7697, 1.25 ) }
    dend_33 { pt3dadd( -83.5533, 57.4563, 7.79352, 1.25 ) }
    dend_33 { pt3dadd( -83.6713, 57.7963, 7.81475, 1.25 ) }
    dend_33 { pt3dadd( -83.9683, 58.7082, 7.90371, 0.37 ) }
    dend_33 { pt3dadd( -84.2622, 59.6018, 8.03047, 0.59 ) }
    dend_33 { pt3dadd( -84.6894, 60.8306, 8.26878, 0.44 ) }
    dend_33 { pt3dadd( -84.9764, 61.5924, 8.44261, 0.29 ) }
    dend_33 { pt3dadd( -85.1843, 62.0876, 8.56261, 0.29 ) }
    dend_33 { pt3dadd( -85.476, 62.7243, 8.7095, 0.74 ) }
    dend_33 { pt3dadd( -85.7661, 63.285, 8.82333, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( -86.23, 64.1073, 8.92617, 0.29 ) }
    dend_33 { pt3dadd( -86.6117, 64.729, 8.90152, 0.29 ) }
    dend_33 { pt3dadd( -86.8396, 65.0731, 8.85938, 0.52 ) }
    dend_33 { pt3dadd( -87.1528, 65.4727, 8.77775, 0.52 ) }
    dend_33 { pt3dadd( -87.5637, 65.9204, 8.63466, 0.37 ) }
    dend_33 { pt3dadd( -88.397, 66.7044, 8.32246, 1.03 ) }
    dend_33 { pt3dadd( -89.0477, 67.2145, 8.09839, 1.18 ) }
    dend_33 { pt3dadd( -89.4111, 67.4475, 7.99522, 0.88 ) }
    dend_33 { pt3dadd( -90.269, 67.9026, 7.80553, 0.22 ) }
    dend_33 { pt3dadd( -91.0382, 68.2513, 7.66233, 0.37 ) }
    dend_33 { pt3dadd( -91.6252, 68.4683, 7.56819, 0.37 ) }
    dend_33 { pt3dadd( -92.6918, 68.7725, 7.4123, 0.29 ) }
    dend_33 { pt3dadd( -93.824, 69.0703, 7.25142, 0.29 ) }
    dend_33 { pt3dadd( -94.8121, 69.3181, 7.09902, 0.88 ) }
    dend_33 { pt3dadd( -95.2888, 69.4345, 7.02064, 1.11 ) }
    dend_33 { pt3dadd( -95.9999, 69.6114, 6.89512, 1.11 ) }
    dend_33 { pt3dadd( -97.1712, 69.9228, 6.64487, 0.29 ) }
    dend_33 { pt3dadd( -98.2408, 70.244, 6.38501, 0.29 ) }
    dend_33 { pt3dadd( -98.6258, 70.3811, 6.27932, 0.81 ) }
    dend_33 { pt3dadd( -99.3928, 70.6942, 6.0612, 0.81 ) }
    dend_33 { pt3dadd( -99.8375, 70.8925, 5.93341, 0.81 ) }
    dend_33 { pt3dadd( -100.369, 71.159, 5.77419, 0.37 ) }
    dend_33 { pt3dadd( -101.435, 71.7508, 5.45465, 0.29 ) }
    dend_33 { pt3dadd( -102.115, 72.1561, 5.24707, 0.44 ) }
    dend_33 { pt3dadd( -102.59, 72.4615, 5.10286, 0.59 ) }
    dend_33 { pt3dadd( -102.971, 72.7265, 4.97544, 0.59 ) }
    dend_33 { pt3dadd( -103.292, 72.9654, 4.86318, 0.37 ) }
    dend_33 { pt3dadd( -104.028, 73.5885, 4.57497, 0.37 ) }
    dend_33 { pt3dadd( -104.648, 74.1979, 4.2787, 0.44 ) }
    dend_33 { pt3dadd( -105.103, 74.7035, 4.00938, 0.44 ) }
    dend_33 { pt3dadd( -105.623, 75.3534, 3.6064, 0.22 ) }
    dend_33 { pt3dadd( -106.014, 75.8668, 3.28188, 0.22 ) }
    dend_33 { pt3dadd( -106.622, 76.7237, 2.71636, 0.66 ) }
    dend_33 { pt3dadd( -107.004, 77.3322, 2.29247, 0.81 ) }
    dend_33 { pt3dadd( -107.427, 78.1128, 1.72874, 0.66 ) }
    dend_33 { pt3dadd( -107.738, 78.8057, 1.19897, 0.37 ) }
    dend_33 { pt3dadd( -113.753, 86.3278, -1.49263, 0.37 ) }
    dend_33 { pt3dadd( -119.375, 94.4707, -2.93673, 0.37 ) }
    dend_33 { pt3dadd( -124.877, 102.81, -2.52745, 0.37 ) }
    dend_33 { pt3dadd( -128.87, 111.899, -3.73177, 0.37 ) }
    dend_33 { pt3dadd( -131.829, 121.305, -5.3986, 0.37 ) }
    dend_33 { pt3dadd( -137.1, 129.555, -7.43537, 0.37 ) }
    dend_33 { pt3dadd( -142.35, 138.066, -7.49598, 0.37 ) }
    dend_33 { pt3dadd( -148.143, 146.198, -8.05118, 0.37 ) }
    dend_33 { pt3dadd( -153.604, 154.566, -8.45256, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 45/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -13.0951, -37.005, -8.92536, 0.59 ) }
    dend_26 { pt3dadd( -13.5188, -38.6643, -9.16782, 0.59 ) }
    dend_26 { pt3dadd( -13.8349, -40.0896, -9.3339, 0.74 ) }
    dend_26 { pt3dadd( -14.1189, -41.5257, -9.48085, 0.74 ) }
    dend_26 { pt3dadd( -14.4137, -43.1842, -9.59445, 0.66 ) }
    dend_26 { pt3dadd( -14.6637, -44.6434, -9.64976, 0.66 ) }
    dend_26 { pt3dadd( -14.9633, -46.3117, -9.66288, 0.88 ) }
    dend_26 { pt3dadd( -15.2095, -47.7656, -9.5864, 1.03 ) }
    dend_26 { pt3dadd( -15.3657, -48.5602, -9.51205, 1.03 ) }
    dend_26 { pt3dadd( -15.6729, -49.7684, -9.37415, 1.03 ) }
    dend_26 { pt3dadd( -15.9565, -50.6591, -9.25775, 0.74 ) }
    dend_26 { pt3dadd( -16.5187, -52.0208, -9.07665, 0.59 ) }
    dend_26 { pt3dadd( -16.9906, -52.9299, -8.96728, 0.96 ) }
    dend_26 { pt3dadd( -17.6205, -53.9471, -8.87902, 0.74 ) }
    dend_26 { pt3dadd( -18.1524, -54.7193, -8.84939, 1.18 ) }
    dend_26 { pt3dadd( -18.866, -55.6653, -8.86808, 1.18 ) }
    dend_26 { pt3dadd( -19.7328, -56.7762, -8.93524, 0.88 ) }
    dend_26 { pt3dadd( -20.4557, -57.706, -9.02084, 0.59 ) }
    dend_26 { pt3dadd( -21.0873, -58.5364, -9.10846, 0.59 ) }
    dend_26 { pt3dadd( -21.6501, -59.3148, -9.19125, 0.74 ) }
    dend_26 { pt3dadd( -22.1813, -60.0952, -9.29005, 0.88 ) }
    dend_26 { pt3dadd( -22.9069, -61.2647, -9.47216, 0.88 ) }
    dend_26 { pt3dadd( -23.4299, -62.2373, -9.64842, 0.74 ) }
    dend_26 { pt3dadd( -23.966, -63.4111, -9.87303, 0.74 ) }
    dend_26 { pt3dadd( -24.508, -64.8175, -10.1639, 0.66 ) }
    dend_26 { pt3dadd( -24.8712, -65.9235, -10.4333, 0.74 ) }
    dend_26 { pt3dadd( -25.1449, -66.9246, -10.7088, 0.88 ) }
    dend_26 { pt3dadd( -25.3547, -67.8629, -10.9938, 0.96 ) }
    dend_26 { pt3dadd( -25.6288, -69.2976, -11.4667, 0.59 ) }
    dend_26 { pt3dadd( -25.8163, -70.5254, -11.8978, 0.81 ) }
    dend_26 { pt3dadd( -25.9647, -71.6532, -12.3232, 1.03 ) }
    dend_26 { pt3dadd( -26.0943, -72.6461, -12.7028, 1.03 ) }
    dend_26 { pt3dadd( -26.2863, -74.0062, -13.2157, 0.66 ) }
    dend_26 { pt3dadd( -26.4278, -74.8107, -13.5196, 0.66 ) }
    dend_26 { pt3dadd( -26.563, -75.4713, -13.755, 0.96 ) }
    dend_26 { pt3dadd( -26.7129, -76.1406, -13.9606, 0.96 ) }
    dend_26 { pt3dadd( -27.0271, -77.5505, -14.3248, 0.96 ) }
    dend_26 { pt3dadd( -27.2873, -78.7299, -14.611, 0.96 ) }
    dend_26 { pt3dadd( -27.6252, -80.1614, -14.937, 0.96 ) }
    dend_26 { pt3dadd( -27.9685, -81.5103, -15.269, 0.66 ) }
    dend_26 { pt3dadd( -28.2282, -82.4726, -15.5266, 0.66 ) }
    dend_26 { pt3dadd( -28.6085, -83.8547, -15.9072, 0.52 ) }
    dend_26 { pt3dadd( -28.7551, -84.3896, -16.0626, 0.52 ) }
    dend_26 { pt3dadd( -29.0824, -85.5561, -16.4166, 0.66 ) }
    dend_26 { pt3dadd( -29.4935, -86.8663, -16.8098, 0.88 ) }
    dend_26 { pt3dadd( -29.9111, -87.9198, -17.107, 0.88 ) }
    dend_26 { pt3dadd( -30.3085, -88.7471, -17.3041, 1.03 ) }
    dend_26 { pt3dadd( -30.7054, -89.4645, -17.4173, 1.03 ) }
    dend_26 { pt3dadd( -31.6303, -90.9688, -17.5065, 0.81 ) }
    dend_26 { pt3dadd( -32.1926, -91.8306, -17.4738, 0.81 ) }
    dend_26 { pt3dadd( -32.9365, -92.9669, -17.3472, 1.03 ) }
    dend_26 { pt3dadd( -33.695, -94.1671, -17.1878, 0.81 ) }
    dend_26 { pt3dadd( -34.2579, -95.1715, -17.0834, 0.74 ) }
    dend_26 { pt3dadd( -34.7393, -96.2026, -17.0207, 1.03 ) }
    dend_26 { pt3dadd( -35.0518, -97.1631, -17.0255, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( -35.2782, -98.4025, -17.1194, 0.66 ) }
    dend_26 { pt3dadd( -35.3965, -99.64, -17.2731, 0.52 ) }
    dend_26 { pt3dadd( -35.4114, -101.205, -17.5569, 0.52 ) }
    dend_26 { pt3dadd( -35.3525, -102.089, -17.7845, 0.81 ) }
    dend_26 { pt3dadd( -35.1923, -103.206, -18.1391, 0.88 ) }
    dend_26 { pt3dadd( -35.1092, -103.648, -18.3068, 0.88 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -13.0951, -37.005, -8.92536, 0.29 ) }
    dend_25 { pt3dadd( -12.7804, -38.5243, -9.84501, 0.29 ) }
    dend_25 { pt3dadd( -12.5006, -40.1864, -10.7574, 0.44 ) }
    dend_25 { pt3dadd( -12.3823, -41.0708, -11.2015, 0.44 ) }
    dend_25 { pt3dadd( -12.2612, -42.1334, -11.6844, 0.37 ) }
    dend_25 { pt3dadd( -12.1081, -43.4739, -12.2594, 0.37 ) }
    dend_25 { pt3dadd( -11.9173, -44.9634, -12.8989, 0.37 ) }
    dend_25 { pt3dadd( -11.7128, -46.5244, -13.5653, 0.37 ) }
    dend_25 { pt3dadd( -11.5116, -47.9868, -14.1838, 0.44 ) }
    dend_25 { pt3dadd( -11.3611, -49.1189, -14.6719, 0.44 ) }
    dend_25 { pt3dadd( -11.2237, -50.1636, -15.1814, 0.66 ) }
    dend_25 { pt3dadd( -11.0896, -51.1028, -15.6987, 0.88 ) }
    dend_25 { pt3dadd( -10.9101, -52.373, -16.4826, 0.74 ) }
    dend_25 { pt3dadd( -10.7018, -53.8485, -17.5184, 0.52 ) }
    dend_25 { pt3dadd( -10.5729, -54.8784, -18.3148, 0.37 ) }
    dend_25 { pt3dadd( -10.4649, -56.0767, -19.2676, 0.37 ) }
    dend_25 { pt3dadd( -10.4207, -57.0522, -20.0193, 0.59 ) }
    dend_25 { pt3dadd( -10.3971, -58.3541, -21.012, 0.59 ) }
    dend_25 { pt3dadd( -10.3791, -59.4354, -21.7529, 0.37 ) }
    dend_25 { pt3dadd( -10.3399, -60.5326, -22.4408, 0.37 ) }
    dend_25 { pt3dadd( -10.3159, -61.1851, -22.839, 0.37 ) }
    dend_25 { pt3dadd( -10.2701, -63.1436, -23.9294, 0.29 ) }
    dend_25 { pt3dadd( -10.249, -64.8736, -24.8254, 0.29 ) }
    dend_25 { pt3dadd( -10.182, -66.6754, -25.6166, 0.29 ) }
    dend_25 { pt3dadd( -10.1213, -67.7786, -26.0307, 0.29 ) }
    dend_25 { pt3dadd( -8.51649, -76.0979, -31.3423, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_15 (entry count 32/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.27411, -40.0315, -2.29478, 0.37 ) }
    dend_21 { pt3dadd( 0.497602, -41.4908, -2.28835, 0.37 ) }
    dend_21 { pt3dadd( -0.5207, -43.5383, -2.28092, 0.66 ) }
    dend_21 { pt3dadd( -1.05133, -44.6449, -2.2804, 0.81 ) }
    dend_21 { pt3dadd( -1.82246, -46.3824, -2.28658, 0.66 ) }
    dend_21 { pt3dadd( -2.47185, -47.9365, -2.29556, 0.66 ) }
    dend_21 { pt3dadd( -2.99811, -49.2484, -2.30468, 0.52 ) }
    dend_21 { pt3dadd( -3.31185, -50.16, -2.32059, 0.66 ) }
    dend_21 { pt3dadd( -3.66376, -51.2832, -2.36145, 0.66 ) }
    dend_21 { pt3dadd( -4.10875, -52.6836, -2.43427, 0.59 ) }
    dend_21 { pt3dadd( -4.54226, -54.0229, -2.52147, 0.59 ) }
    dend_21 { pt3dadd( -4.84382, -54.9267, -2.58891, 0.81 ) }
    dend_21 { pt3dadd( -5.33812, -56.3459, -2.70504, 1.03 ) }
    dend_21 { pt3dadd( -5.80158, -57.6179, -2.81775, 0.66 ) }
    dend_21 { pt3dadd( -6.18789, -58.6651, -2.89702, 0.66 ) }
    dend_21 { pt3dadd( -6.67604, -59.912, -2.9791, 0.52 ) }
    dend_21 { pt3dadd( -7.16887, -61.1233, -3.04157, 0.74 ) }
    dend_21 { pt3dadd( -7.43335, -61.7315, -3.05922, 0.74 ) }
    dend_21 { pt3dadd( -7.77266, -62.4573, -3.05885, 0.59 ) }
    dend_21 { pt3dadd( -8.17087, -63.3287, -3.04381, 0.88 ) }
    dend_21 { pt3dadd( -8.47768, -63.9979, -3.01996, 0.88 ) }
    dend_21 { pt3dadd( -8.92949, -64.9936, -2.96539, 0.66 ) }
    dend_21 { pt3dadd( -9.5963, -66.4146, -2.86351, 0.66 ) }
    dend_21 { pt3dadd( -10.203, -67.6538, -2.76753, 0.66 ) }
    dend_21 { pt3dadd( -10.6884, -68.6326, -2.68194, 1.03 ) }
    dend_21 { pt3dadd( -11.1605, -69.5949, -2.59891, 0.81 ) }
    dend_21 { pt3dadd( -11.728, -70.7638, -2.48791, 0.74 ) }
    dend_21 { pt3dadd( -12.3454, -72.0491, -2.36547, 0.66 ) }
    dend_21 { pt3dadd( -12.9478, -73.3331, -2.24288, 1.18 ) }
    dend_21 { pt3dadd( -13.4811, -74.4985, -2.13672, 1.33 ) }
    dend_21 { pt3dadd( -14.1771, -76.008, -2.02761, 1.03 ) }
    dend_21 { pt3dadd( -14.8404, -77.4266, -1.96583, 0.59 ) }
    dend_21 { pt3dadd( -15.4369, -78.7032, -1.934, 0.59 ) }
    dend_21 { pt3dadd( -15.8714, -79.7257, -1.93196, 0.81 ) }
    dend_21 { pt3dadd( -16.2993, -80.8384, -1.95304, 0.96 ) }
    dend_21 { pt3dadd( -16.6465, -81.8705, -1.96767, 0.66 ) }
    dend_21 { pt3dadd( -16.9239, -82.8415, -1.96347, 0.66 ) }
    dend_21 { pt3dadd( -17.1906, -83.9934, -1.93533, 1.03 ) }
    dend_21 { pt3dadd( -17.4071, -85.0922, -1.89011, 1.03 ) }
    dend_21 { pt3dadd( -17.5461, -85.8997, -1.84699, 1.03 ) }
    dend_21 { pt3dadd( -17.7743, -87.5552, -1.72615, 0.96 ) }
    dend_21 { pt3dadd( -17.885, -88.6826, -1.62552, 1.11 ) }
    dend_21 { pt3dadd( -17.9639, -89.7981, -1.52376, 1.18 ) }
    dend_21 { pt3dadd( -18.0282, -90.9814, -1.4211, 1.18 ) }
    dend_21 { pt3dadd( -18.0897, -92.0809, -1.34765, 0.66 ) }
    dend_21 { pt3dadd( -18.186, -93.4913, -1.29552, 0.59 ) }
    dend_21 { pt3dadd( -18.2769, -94.4382, -1.29328, 0.59 ) }
    dend_21 { pt3dadd( -18.4287, -95.5183, -1.26054, 0.74 ) }
    dend_21 { pt3dadd( -18.6858, -96.9669, -1.21077, 0.74 ) }
    dend_21 { pt3dadd( -18.9439, -98.1694, -1.17045, 0.52 ) }
    dend_21 { pt3dadd( -19.3005, -99.6425, -1.13536, 0.88 ) }
    dend_21 { pt3dadd( -19.5926, -100.755, -1.12021, 0.88 ) }
    dend_21 { pt3dadd( -20.1147, -102.504, -1.11101, 0.66 ) }
    dend_21 { pt3dadd( -20.6984, -104.291, -1.11783, 0.66 ) }
    dend_21 { pt3dadd( -21.1364, -105.611, -1.1333, 1.03 ) }
    dend_21 { pt3dadd( -21.3339, -106.28, -1.15035, 1.25 ) }
    dend_21 { pt3dadd( -21.5891, -107.352, -1.2054, 1.47 ) }
    dend_21 { pt3dadd( -21.8826, -108.837, -1.32188, 0.66 ) }
    dend_21 { pt3dadd( -22.0796, -109.957, -1.44553, 0.59 ) }
    dend_21 { pt3dadd( -22.2476, -110.898, -1.51692, 1.03 ) }
    dend_21 { pt3dadd( -22.3863, -111.712, -1.55746, 1.03 ) }
    dend_21 { pt3dadd( -22.4895, -112.361, -1.56234, 1.03 ) }
    dend_21 { pt3dadd( -22.6549, -113.511, -1.52058, 0.52 ) }
    dend_21 { pt3dadd( -22.7378, -114.351, -1.44328, 0.74 ) }
    dend_21 { pt3dadd( -22.8056, -115.077, -1.33759, 0.96 ) }
    dend_21 { pt3dadd( -22.8798, -115.847, -1.18762, 0.96 ) }
    dend_21 { pt3dadd( -22.9892, -116.816, -0.965036, 0.66 ) }
    dend_21 { pt3dadd( -23.1033, -117.618, -0.77394, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( -23.2428, -118.351, -0.596883, 0.88 ) }
    dend_21 { pt3dadd( -23.3905, -119.006, -0.450282, 0.88 ) }
    dend_21 { pt3dadd( -23.6648, -120.152, -0.244132, 0.66 ) }
    dend_21 { pt3dadd( -23.9867, -121.417, -0.0690553, 0.88 ) }
    dend_21 { pt3dadd( -24.3939, -122.843, 0.082542, 0.59 ) }
    dend_21 { pt3dadd( -24.8848, -124.421, 0.220223, 0.44 ) }
    dend_21 { pt3dadd( -25.2191, -125.479, 0.271926, 0.44 ) }
    dend_21 { pt3dadd( -25.4553, -126.249, 0.285633, 0.81 ) }
    dend_21 { pt3dadd( -25.7537, -127.335, 0.264316, 0.81 ) }
    dend_21 { pt3dadd( -26.07, -128.702, 0.192551, 0.59 ) }
    dend_21 { pt3dadd( -26.3178, -130.083, 0.0710324, 0.52 ) }
    dend_21 { pt3dadd( -26.5551, -131.84, 0.0684515, 0.52 ) }
    dend_21 { pt3dadd( -26.6468, -132.666, 0.139356, 0.74 ) }
    dend_21 { pt3dadd( -26.7955, -134.198, 0.452177, 0.52 ) }
    dend_21 { pt3dadd( -26.9157, -135.858, 0.937383, 0.52 ) }
    dend_21 { pt3dadd( -26.9556, -136.857, 1.2895, 0.74 ) }
    dend_21 { pt3dadd( -27.0245, -140.237, 2.66286, 0.96 ) }
    dend_21 { pt3dadd( -27.0337, -140.92, 2.97806, 0.96 ) }
    dend_21 { pt3dadd( -27.0328, -142.43, 3.7044, 0.74 ) }
    dend_21 { pt3dadd( -27.0208, -143.904, 4.41236, 0.52 ) }
    dend_21 { pt3dadd( -26.9891, -145.504, 5.11567, 0.74 ) }
    dend_21 { pt3dadd( -26.9923, -146.575, 5.4936, 0.74 ) }
    dend_21 { pt3dadd( -27.0191, -147.331, 5.63777, 0.74 ) }
    dend_21 { pt3dadd( -27.0702, -148.085, 5.74918, 0.59 ) }
    dend_21 { pt3dadd( -27.1888, -149.245, 5.84539, 0.44 ) }
    dend_21 { pt3dadd( -27.2848, -149.817, 5.87978, 0.81 ) }
    dend_21 { pt3dadd( -27.4649, -150.561, 5.89863, 0.81 ) }
    dend_21 { pt3dadd( -27.7833, -151.657, 5.85014, 0.81 ) }
    dend_21 { pt3dadd( -28.052, -152.527, 5.72802, 1.18 ) }
    dend_21 { pt3dadd( -28.2485, -153.124, 5.60266, 1.18 ) }
    dend_21 { pt3dadd( -28.551, -153.961, 5.39078, 1.33 ) }
    dend_21 { pt3dadd( -28.7774, -154.542, 5.20354, 1.33 ) }
    dend_21 { pt3dadd( -29.107, -155.32, 4.91805, 0.81 ) }
    dend_21 { pt3dadd( -29.7135, -156.537, 4.44391, 0.74 ) }
    dend_21 { pt3dadd( -30.145, -157.274, 4.1577, 0.96 ) }
    dend_21 { pt3dadd( -30.6984, -158.154, 3.83289, 0.81 ) }
    dend_21 { pt3dadd( -31.4576, -159.348, 3.38902, 0.81 ) }
    dend_21 { pt3dadd( -32.0145, -160.25, 3.09373, 0.74 ) }
    dend_21 { pt3dadd( -32.7074, -161.393, 2.81438, 0.74 ) }
    dend_21 { pt3dadd( -33.1266, -162.1, 2.69242, 0.74 ) }
    dend_21 { pt3dadd( -33.5971, -162.999, 2.58364, 0.59 ) }
    dend_21 { pt3dadd( -34.1001, -164.211, 2.50726, 0.59 ) }
    dend_21 { pt3dadd( -34.4319, -165.328, 2.51303, 0.52 ) }
    dend_21 { pt3dadd( -34.6661, -166.608, 2.55049, 0.74 ) }
    dend_21 { pt3dadd( -34.7399, -167.346, 2.59645, 0.74 ) }
    dend_21 { pt3dadd( -34.787, -168.364, 2.68616, 0.59 ) }
    dend_21 { pt3dadd( -34.7937, -169.441, 2.8212, 0.59 ) }
    dend_21 { pt3dadd( -34.757, -170.492, 2.96279, 0.74 ) }
    dend_21 { pt3dadd( -34.6497, -171.725, 3.09038, 0.52 ) }
    dend_21 { pt3dadd( -34.5681, -172.358, 3.1533, 0.52 ) }
    dend_21 { pt3dadd( -34.4691, -173.164, 3.25646, 0.74 ) }
    dend_21 { pt3dadd( -34.4248, -173.869, 3.37577, 0.74 ) }
    dend_21 { pt3dadd( -34.4447, -174.781, 3.57971, 0.52 ) }
    dend_21 { pt3dadd( -34.4935, -175.364, 3.74562, 0.96 ) }
    dend_21 { pt3dadd( -34.5668, -175.974, 3.95161, 0.96 ) }
    dend_21 { pt3dadd( -34.6829, -176.79, 4.27627, 0.59 ) }
    dend_21 { pt3dadd( -34.8282, -177.722, 4.68808, 0.37 ) }
    dend_21 { pt3dadd( -34.9202, -178.353, 4.96875, 0.81 ) }
    dend_21 { pt3dadd( -34.9971, -178.982, 5.2675, 0.81 ) }
    dend_21 { pt3dadd( -35.0528, -179.545, 5.49882, 0.81 ) }
    dend_21 { pt3dadd( -35.1035, -180.264, 5.74106, 0.81 ) }
    dend_21 { pt3dadd( -35.1311, -181.117, 5.96461, 0.52 ) }
    dend_21 { pt3dadd( -35.1134, -182.195, 6.18269, 0.44 ) }
    dend_21 { pt3dadd( -35.0812, -182.914, 6.30239, 0.44 ) }
    dend_21 { pt3dadd( -35.0436, -183.776, 6.44138, 0.74 ) }
    dend_21 { pt3dadd( -35.0243, -184.214, 6.51594, 0.74 ) }
    dend_21 { pt3dadd( -34.976, -185.257, 6.69103, 0.44 ) }
    dend_21 { pt3dadd( -34.9351, -186.075, 6.83612, 0.66 ) }
    dend_21 { pt3dadd( -34.9076, -186.814, 6.97407, 0.81 ) }
    dend_21 { pt3dadd( -34.9071, -187.898, 7.14436, 0.52 ) }
    dend_21 { pt3dadd( -34.9428, -188.742, 7.29089, 0.66 ) }
    dend_21 { pt3dadd( -35.0329, -189.883, 7.48528, 0.66 ) }
    dend_21 { pt3dadd( -35.1968, -191.389, 7.71745, 0.44 ) }
    dend_21 { pt3dadd( -35.3047, -192.258, 7.845, 0.44 ) }
    dend_21 { pt3dadd( -35.4644, -193.519, 8.01833, 0.44 ) }
    dend_21 { pt3dadd( -35.5733, -194.433, 8.14969, 0.74 ) }
    dend_21 { pt3dadd( -35.621, -194.833, 8.2134, 0.74 ) }
    dend_21 { pt3dadd( -35.7373, -195.839, 8.39834, 0.44 ) }
    dend_21 { pt3dadd( -35.8094, -196.689, 8.56187, 0.44 ) }
    dend_21 { pt3dadd( -35.8372, -197.356, 8.72648, 0.59 ) }
    dend_21 { pt3dadd( -35.8392, -197.683, 8.82525, 0.81 ) }
    dend_21 { pt3dadd( -35.8209, -198.902, 9.22818, 0.59 ) }
    dend_21 { pt3dadd( -35.7958, -199.517, 9.4675, 0.44 ) }
    dend_21 { pt3dadd( -35.686, -200.836, 10.1003, 0.44 ) }
    dend_21 { pt3dadd( -35.3338, -202.423, 10.9743, 0.22 ) }
    dend_21 { pt3dadd( -35.0954, -203.079, 11.3643, 0.22 ) }
    dend_21 { pt3dadd( -34.8637, -203.528, 11.624, 0.22 ) }
    dend_21 { pt3dadd( -34.5164, -204.075, 11.9744, 0.29 ) }
    dend_21 { pt3dadd( -34.0582, -204.683, 12.3835, 0.29 ) }
    dend_21 { pt3dadd( -32.694, -206.126, 13.3742, 0.29 ) }
    dend_21 { pt3dadd( -32.0986, -206.66, 13.6806, 0.29 ) }
    dend_21 { pt3dadd( -30.7816, -207.812, 14.2413, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 92/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.27411, -40.0315, -2.29478, 0.81 ) }
    dend_16 { pt3dadd( 1.89461, -41.3993, -2.26854, 0.81 ) }
    dend_16 { pt3dadd( 2.23963, -42.2624, -2.25562, 0.81 ) }
    dend_16 { pt3dadd( 2.70006, -43.5852, -2.23958, 1.03 ) }
    dend_16 { pt3dadd( 2.98967, -44.5015, -2.23026, 1.03 ) }
    dend_16 { pt3dadd( 3.23577, -45.3224, -2.22097, 1.03 ) }
    dend_16 { pt3dadd( 3.67453, -46.7903, -2.22681, 1.03 ) }
    dend_16 { pt3dadd( 4.00742, -48.0093, -2.24618, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 4.27815, -49.0754, -2.26752, 1.11 ) }
    dend_16 { pt3dadd( 4.49938, -50.0082, -2.292, 0.88 ) }
    dend_16 { pt3dadd( 4.93712, -51.8517, -2.34871, 0.66 ) }
    dend_16 { pt3dadd( 5.19875, -52.9601, -2.38962, 0.66 ) }
    dend_16 { pt3dadd( 5.42074, -53.7727, -2.42883, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 5/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 13.7046, -53.8059, 12.3278, 0.66 ) }
    dend_14 { pt3dadd( 14.6649, -55.6859, 15.4712, 0.66 ) }
    dend_14 { pt3dadd( 14.9471, -56.1897, 16.2274, 0.66 ) }
    dend_14 { pt3dadd( 15.3165, -56.7535, 17.0347, 0.66 ) }
    dend_14 { pt3dadd( 15.5895, -57.1562, 17.5778, 0.88 ) }
    dend_14 { pt3dadd( 15.9877, -57.7141, 18.2685, 0.88 ) }
    dend_14 { pt3dadd( 16.2136, -58.027, 18.6292, 0.88 ) }
    dend_14 { pt3dadd( 16.5683, -58.4928, 19.0009, 0.88 ) }
    dend_14 { pt3dadd( 17.0763, -59.1218, 19.4554, 1.11 ) }
    dend_14 { pt3dadd( 17.8132, -59.9578, 19.9903, 0.74 ) }
    dend_14 { pt3dadd( 18.402, -60.5797, 20.354, 0.52 ) }
    dend_14 { pt3dadd( 18.807, -61.0052, 20.5694, 0.52 ) }
    dend_14 { pt3dadd( 19.4127, -61.6688, 20.8341, 0.37 ) }
    dend_14 { pt3dadd( 19.8979, -62.2048, 20.9861, 0.74 ) }
    dend_14 { pt3dadd( 20.434, -62.7515, 21.0739, 0.81 ) }
    dend_14 { pt3dadd( 21.186, -63.4051, 21.1159, 0.37 ) }
    dend_14 { pt3dadd( 21.7122, -63.8364, 21.1384, 0.37 ) }
    dend_14 { pt3dadd( 22.4523, -64.4409, 21.1647, 0.37 ) }
    dend_14 { pt3dadd( 23.1416, -65.0676, 21.1997, 0.66 ) }
    dend_14 { pt3dadd( 23.788, -65.7756, 21.2591, 0.66 ) }
    dend_14 { pt3dadd( 24.2146, -66.396, 21.3341, 0.66 ) }
    dend_14 { pt3dadd( 24.6852, -67.3514, 21.4869, 0.37 ) }
    dend_14 { pt3dadd( 24.9157, -67.9598, 21.6004, 0.37 ) }
    dend_14 { pt3dadd( 25.2282, -68.9796, 21.826, 0.59 ) }
    dend_14 { pt3dadd( 25.468, -69.7791, 22.0281, 0.81 ) }
    dend_14 { pt3dadd( 25.6956, -70.4027, 22.2098, 0.81 ) }
    dend_14 { pt3dadd( 26.3101, -71.6284, 22.6662, 0.44 ) }
    dend_14 { pt3dadd( 26.7753, -72.2115, 22.9716, 0.44 ) }
    dend_14 { pt3dadd( 27.2201, -72.6071, 23.2346, 0.66 ) }
    dend_14 { pt3dadd( 28.0017, -73.185, 23.7402, 0.37 ) }
    dend_14 { pt3dadd( 28.8222, -73.7109, 24.2734, 0.37 ) }
    dend_14 { pt3dadd( 29.4502, -74.0676, 24.6981, 0.37 ) }
    dend_14 { pt3dadd( 30.0911, -74.3922, 25.1784, 0.59 ) }
    dend_14 { pt3dadd( 31.2522, -74.9816, 26.1035, 0.59 ) }
    dend_14 { pt3dadd( 32.5203, -75.7191, 27.1524, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 40/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 13.7046, -53.8059, 12.3278, 0.59 ) }
    dend_13 { pt3dadd( 13.9528, -55.2272, 12.7601, 0.59 ) }
    dend_13 { pt3dadd( 14.1377, -56.0005, 13.1339, 0.59 ) }
    dend_13 { pt3dadd( 14.3792, -56.9605, 13.6345, 0.59 ) }
    dend_13 { pt3dadd( 14.5732, -57.7427, 14.0369, 0.96 ) }
    dend_13 { pt3dadd( 14.7883, -58.648, 14.5037, 0.96 ) }
    dend_13 { pt3dadd( 15.4974, -61.5523, 15.9693, 0.59 ) }
    dend_13 { pt3dadd( 15.7401, -62.3302, 16.3504, 0.59 ) }
    dend_13 { pt3dadd( 15.9266, -62.8259, 16.5989, 0.59 ) }
    dend_13 { pt3dadd( 16.1722, -63.3805, 16.8607, 1.11 ) }
    dend_13 { pt3dadd( 16.562, -64.1817, 17.1749, 1.11 ) }
    dend_13 { pt3dadd( 16.8955, -64.8014, 17.3315, 0.96 ) }
    dend_13 { pt3dadd( 17.5391, -65.9069, 17.3881, 0.74 ) }
    dend_13 { pt3dadd( 18.1385, -66.8837, 17.4061, 0.74 ) }
    dend_13 { pt3dadd( 18.8484, -68.0262, 17.4367, 0.59 ) }
    dend_13 { pt3dadd( 19.398, -68.9236, 17.4695, 0.59 ) }
    dend_13 { pt3dadd( 19.8881, -69.747, 17.5071, 0.96 ) }
    dend_13 { pt3dadd( 20.1929, -70.3166, 17.5571, 0.96 ) }
    dend_13 { pt3dadd( 20.4201, -70.8058, 17.6287, 1.03 ) }
    dend_13 { pt3dadd( 20.7744, -71.7472, 17.8362, 0.81 ) }
    dend_13 { pt3dadd( 21.0664, -72.6645, 18.1024, 0.52 ) }
    dend_13 { pt3dadd( 21.253, -73.3027, 18.3551, 1.03 ) }
    dend_13 { pt3dadd( 21.4593, -73.9726, 18.679, 1.03 ) }
    dend_13 { pt3dadd( 21.5751, -74.2954, 18.867, 1.03 ) }
    dend_13 { pt3dadd( 21.9272, -75.0489, 19.3668, 0.74 ) }
    dend_13 { pt3dadd( 22.4113, -75.8278, 19.9593, 0.52 ) }
    dend_13 { pt3dadd( 22.9862, -76.5961, 20.6138, 0.74 ) }
    dend_13 { pt3dadd( 23.405, -77.1206, 21.052, 0.74 ) }
    dend_13 { pt3dadd( 23.8599, -77.6487, 21.4502, 0.74 ) }
    dend_13 { pt3dadd( 24.4655, -78.313, 21.8711, 0.81 ) }
    dend_13 { pt3dadd( 24.9054, -78.7962, 22.1221, 0.81 ) }
    dend_13 { pt3dadd( 25.4996, -79.4673, 22.3588, 0.66 ) }
    dend_13 { pt3dadd( 26.1376, -80.2409, 22.5523, 1.11 ) }
    dend_13 { pt3dadd( 26.7783, -81.1185, 22.7227, 1.11 ) }
    dend_13 { pt3dadd( 27.3492, -81.9852, 22.8514, 0.74 ) }
    dend_13 { pt3dadd( 27.9109, -82.904, 22.9709, 0.74 ) }
    dend_13 { pt3dadd( 28.5403, -83.9379, 23.141, 0.66 ) }
    dend_13 { pt3dadd( 29.055, -84.7683, 23.3286, 0.81 ) }
    dend_13 { pt3dadd( 29.442, -85.4017, 23.5159, 0.81 ) }
    dend_13 { pt3dadd( 29.7966, -86.0291, 23.7401, 0.81 ) }
    dend_13 { pt3dadd( 30.2033, -86.8198, 23.9906, 1.03 ) }
    dend_13 { pt3dadd( 30.8185, -88.1255, 24.2675, 1.03 ) }
    dend_13 { pt3dadd( 31.2988, -89.3174, 24.3841, 0.59 ) }
    dend_13 { pt3dadd( 31.4966, -89.8944, 24.3303, 0.59 ) }
    dend_13 { pt3dadd( 31.5964, -90.3068, 24.1817, 0.59 ) }
    dend_13 { pt3dadd( 31.7462, -91.7974, 23.1658, 0.74 ) }
    dend_13 { pt3dadd( 31.7463, -92.8951, 22.2426, 0.59 ) }
    dend_13 { pt3dadd( 31.7123, -93.6592, 21.5408, 0.44 ) }
    dend_13 { pt3dadd( 31.71, -94.1157, 21.1327, 0.44 ) }
    dend_13 { pt3dadd( 31.7037, -94.6634, 20.6395, 0.44 ) }
    dend_13 { pt3dadd( 31.7054, -95.5258, 19.9419, 0.29 ) }
    dend_13 { pt3dadd( 31.7826, -96.7694, 19.3299, 0.29 ) }
    dend_13 { pt3dadd( 31.8911, -97.5175, 19.1252, 0.29 ) }
    dend_13 { pt3dadd( 32.1038, -98.555, 18.95, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 94/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 27.5343, 31.1997, -1.11565, 0.59 ) }
    dend_8 { pt3dadd( 29.1421, 31.2022, -2.76619, 0.59 ) }
    dend_8 { pt3dadd( 29.8985, 31.189, -3.54314, 0.88 ) }
    dend_8 { pt3dadd( 30.4837, 31.1922, -4.14092, 0.88 ) }
    dend_8 { pt3dadd( 30.9846, 31.2071, -4.64785, 0.88 ) }
    dend_8 { pt3dadd( 31.5541, 31.2323, -5.22445, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_8 { pt3dadd( 32.1772, 31.2751, -5.86355, 0.66 ) }
    dend_8 { pt3dadd( 33.1678, 31.4188, -6.84362, 0.52 ) }
    dend_8 { pt3dadd( 33.9522, 31.6056, -7.64696, 0.52 ) }
    dend_8 { pt3dadd( 34.4914, 31.7811, -8.19217, 0.52 ) }
    dend_8 { pt3dadd( 35.038, 32.0002, -8.74791, 0.52 ) }
    dend_8 { pt3dadd( 35.6603, 32.3157, -9.40227, 0.52 ) }
    dend_8 { pt3dadd( 36.3295, 32.7188, -10.1891, 0.52 ) }
    dend_8 { pt3dadd( 37.4705, 33.5615, -11.7574, 0.52 ) }
    dend_8 { pt3dadd( 37.9526, 33.9394, -12.4523, 0.52 ) }
    dend_8 { pt3dadd( 38.4603, 34.3609, -13.2206, 0.52 ) }
    dend_8 { pt3dadd( 38.9612, 34.8011, -14.0215, 0.44 ) }
    dend_8 { pt3dadd( 39.9707, 35.72, -15.7757, 0.44 ) }
    dend_8 { pt3dadd( 40.9128, 36.6162, -17.6839, 0.44 ) }
    dend_8 { pt3dadd( 47.5953, 39.7231, -24.4434, 0.44 ) }
    dend_8 { pt3dadd( 54.8077, 43.4014, -30.3129, 0.44 ) }
    dend_8 { pt3dadd( 63.4421, 45.9388, -34.6729, 0.44 ) }
    dend_8 { pt3dadd( 72.438, 47.4123, -38.7841, 0.44 ) }
    dend_8 { pt3dadd( 81.1895, 50.52, -42.4928, 0.44 ) }
    dend_8 { pt3dadd( 89.7556, 53.6477, -46.5964, 0.44 ) }
    dend_8 { pt3dadd( 99.0343, 55.8931, -49.5735, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 20/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 27.5343, 31.1997, -1.11565, 0.37 ) }
    dend_5 { pt3dadd( 28.0511, 32.3807, -1.46128, 0.37 ) }
    dend_5 { pt3dadd( 28.3893, 33.239, -1.68796, 0.37 ) }
    dend_5 { pt3dadd( 28.8763, 34.4683, -1.98642, 0.66 ) }
    dend_5 { pt3dadd( 29.1891, 35.2377, -2.17676, 0.44 ) }
    dend_5 { pt3dadd( 29.5643, 36.1083, -2.41324, 0.44 ) }
    dend_5 { pt3dadd( 29.9589, 36.9995, -2.70389, 0.44 ) }
    dend_5 { pt3dadd( 30.302, 37.74, -3.01609, 0.44 ) }
    dend_5 { pt3dadd( 30.7191, 38.6275, -3.43388, 0.44 ) }
    dend_5 { pt3dadd( 30.9183, 39.0534, -3.62877, 0.81 ) }
    dend_5 { pt3dadd( 31.2308, 39.7331, -3.93291, 0.81 ) }
    dend_5 { pt3dadd( 31.9061, 41.1953, -4.51243, 0.52 ) }
    dend_5 { pt3dadd( 32.3967, 42.2025, -4.8871, 0.37 ) }
    dend_5 { pt3dadd( 32.8118, 43.0334, -5.15723, 0.37 ) }
    dend_5 { pt3dadd( 33.2426, 43.8878, -5.37923, 0.29 ) }
    dend_5 { pt3dadd( 33.9507, 45.2467, -5.68082, 0.29 ) }
    dend_5 { pt3dadd( 34.9841, 47.1686, -6.04976, 0.29 ) }
    dend_5 { pt3dadd( 35.666, 48.401, -6.24468, 0.29 ) }
    dend_5 { pt3dadd( 36.5124, 49.8961, -6.45908, 0.29 ) }
    dend_5 { pt3dadd( 37.5155, 51.6009, -6.71278, 0.29 ) }
    dend_5 { pt3dadd( 38.2757, 52.8319, -6.90864, 0.29 ) }
    dend_5 { pt3dadd( 38.6897, 53.4782, -7.02518, 0.29 ) }
    dend_5 { pt3dadd( 41.5751, 62.2224, -10.9256, 0.29 ) }
    dend_5 { pt3dadd( 44.0621, 71.3446, -14.1813, 0.29 ) }
    dend_5 { pt3dadd( 44.933, 81.1126, -16.1377, 0.29 ) }
    dend_5 { pt3dadd( 47.7641, 90.7006, -16.3747, 0.29 ) }
    dend_5 { pt3dadd( 52.4904, 99.2354, -18.57, 0.29 ) }
    dend_5 { pt3dadd( 57.8662, 106.856, -22.178, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 48/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 42.9492, 20.4486, 22.838, 0.52 ) }
    dend_3 { pt3dadd( 43.143, 19.9902, 23.8097, 0.52 ) }
    dend_3 { pt3dadd( 43.2729, 19.6951, 24.3586, 0.52 ) }
    dend_3 { pt3dadd( 43.9041, 18.2767, 26.723, 1.03 ) }
    dend_3 { pt3dadd( 44.03, 17.9815, 27.1527, 1.18 ) }
    dend_3 { pt3dadd( 44.2392, 17.4758, 27.8444, 0.88 ) }
    dend_3 { pt3dadd( 44.5572, 16.6654, 28.8886, 0.59 ) }
    dend_3 { pt3dadd( 44.7276, 16.2392, 29.4425, 0.59 ) }
    dend_3 { pt3dadd( 44.841, 15.9476, 29.7882, 0.59 ) }
    dend_3 { pt3dadd( 45.2094, 14.98, 30.7075, 0.81 ) }
    dend_3 { pt3dadd( 45.4281, 14.4499, 31.2302, 1.03 ) }
    dend_3 { pt3dadd( 45.6329, 14.0156, 31.6875, 1.03 ) }
    dend_3 { pt3dadd( 45.9068, 13.4596, 32.304, 0.74 ) }
    dend_3 { pt3dadd( 46.0576, 13.1851, 32.6422, 0.81 ) }
    dend_3 { pt3dadd( 46.4678, 12.5383, 33.5355, 0.52 ) }
    dend_3 { pt3dadd( 46.7829, 12.1765, 34.1287, 0.29 ) }
    dend_3 { pt3dadd( 47.0907, 11.9088, 34.6171, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 65/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 42.9492, 20.4486, 22.838, 0.44 ) }
    dend_2 { pt3dadd( 43.7868, 20.752, 23.8256, 0.44 ) }
    dend_2 { pt3dadd( 44.1282, 20.9031, 24.2325, 0.44 ) }
    dend_2 { pt3dadd( 45.0761, 21.3225, 25.202, 0.66 ) }
    dend_2 { pt3dadd( 45.5034, 21.4972, 25.6188, 0.66 ) }
    dend_2 { pt3dadd( 45.9654, 21.673, 26.0499, 0.66 ) }
    dend_2 { pt3dadd( 46.3484, 21.8053, 26.393, 0.44 ) }
    dend_2 { pt3dadd( 47.1899, 22.0307, 27.1135, 0.44 ) }
    dend_2 { pt3dadd( 48.0031, 22.2235, 27.7512, 0.44 ) }
    dend_2 { pt3dadd( 49.0062, 22.4539, 28.4404, 1.03 ) }
    dend_2 { pt3dadd( 49.4003, 22.5454, 28.6909, 1.03 ) }
    dend_2 { pt3dadd( 49.8363, 22.6286, 28.9328, 0.74 ) }
    dend_2 { pt3dadd( 50.581, 22.7271, 29.2978, 1.18 ) }
    dend_2 { pt3dadd( 51.3562, 22.8164, 29.6275, 1.18 ) }
    dend_2 { pt3dadd( 51.8374, 22.8827, 29.8248, 0.88 ) }
    dend_2 { pt3dadd( 52.7901, 23.0525, 30.1995, 0.37 ) }
    dend_2 { pt3dadd( 53.5721, 23.2307, 30.5629, 0.81 ) }
    dend_2 { pt3dadd( 54.613, 23.4927, 31.052, 0.59 ) }
    dend_2 { pt3dadd( 55.2505, 23.6648, 31.3562, 0.29 ) }
    dend_2 { pt3dadd( 55.8232, 23.8152, 31.6168, 0.29 ) }
    dend_2 { pt3dadd( 56.4701, 23.9844, 31.9511, 0.29 ) }
    dend_2 { pt3dadd( 57.2562, 24.222, 32.493, 0.52 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -35.1092, -103.648, -18.3068, 0.52 ) }
    dend_28 { pt3dadd( -35.7929, -104.817, -19.1152, 0.52 ) }
    dend_28 { pt3dadd( -36.1565, -105.424, -19.5281, 0.52 ) }
    dend_28 { pt3dadd( -36.612, -106.14, -19.9866, 0.74 ) }
    dend_28 { pt3dadd( -37.3744, -107.284, -20.7011, 0.52 ) }
    dend_28 { pt3dadd( -37.8883, -108.0, -21.1597, 0.52 ) }
    dend_28 { pt3dadd( -38.3941, -108.675, -21.5877, 0.66 ) }
    dend_28 { pt3dadd( -39.0145, -109.439, -22.0616, 0.66 ) }
    dend_28 { pt3dadd( -39.7978, -110.338, -22.6397, 0.52 ) }
    dend_28 { pt3dadd( -40.3664, -110.965, -23.0584, 0.66 ) }
    dend_28 { pt3dadd( -41.0154, -111.648, -23.5537, 0.88 ) }
    dend_28 { pt3dadd( -41.9209, -112.536, -24.3159, 0.59 ) }
    dend_28 { pt3dadd( -42.4827, -113.037, -24.8092, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -43.2856, -113.721, -25.4898, 0.52 ) }
    dend_28 { pt3dadd( -44.0612, -114.385, -26.152, 0.52 ) }
    dend_28 { pt3dadd( -45.3738, -115.608, -27.1786, 0.52 ) }
    dend_28 { pt3dadd( -46.1417, -116.409, -27.7529, 0.81 ) }
    dend_28 { pt3dadd( -46.4949, -116.811, -27.9893, 0.81 ) }
    dend_28 { pt3dadd( -47.2593, -117.811, -28.5114, 0.44 ) }
    dend_28 { pt3dadd( -47.9254, -118.884, -28.9607, 0.29 ) }
    dend_28 { pt3dadd( -48.7425, -120.462, -29.3976, 0.29 ) }
    dend_28 { pt3dadd( -49.3255, -121.723, -29.6009, 0.96 ) }
    dend_28 { pt3dadd( -49.6749, -122.496, -29.6797, 0.96 ) }
    dend_28 { pt3dadd( -50.5922, -124.459, -29.8103, 0.74 ) }
    dend_28 { pt3dadd( -51.35, -126.0, -29.8813, 0.37 ) }
    dend_28 { pt3dadd( -52.4818, -128.141, -29.9076, 0.29 ) }
    dend_28 { pt3dadd( -53.9418, -130.575, -29.8946, 0.29 ) }
    dend_28 { pt3dadd( -54.4891, -131.39, -29.8549, 0.74 ) }
    dend_28 { pt3dadd( -55.3154, -132.462, -29.7772, 0.59 ) }
    dend_28 { pt3dadd( -55.6633, -132.845, -29.7193, 0.59 ) }
    dend_28 { pt3dadd( -56.2039, -133.321, -29.6471, 0.59 ) }
    dend_28 { pt3dadd( -57.5328, -134.217, -29.5345, 0.37 ) }
    dend_28 { pt3dadd( -58.273, -134.616, -29.4479, 0.37 ) }
    dend_28 { pt3dadd( -59.3209, -135.156, -29.2654, 0.81 ) }
    dend_28 { pt3dadd( -60.0674, -135.539, -29.0864, 0.81 ) }
    dend_28 { pt3dadd( -60.6419, -135.842, -28.9089, 0.81 ) }
    dend_28 { pt3dadd( -61.151, -136.134, -28.7156, 0.81 ) }
    dend_28 { pt3dadd( -62.883, -137.221, -27.9989, 0.44 ) }
    dend_28 { pt3dadd( -63.89, -137.897, -27.6024, 0.74 ) }
    dend_28 { pt3dadd( -64.2746, -138.176, -27.4722, 0.74 ) }
    dend_28 { pt3dadd( -65.0131, -138.768, -27.2699, 0.37 ) }
    dend_28 { pt3dadd( -66.4467, -140.025, -26.9333, 0.29 ) }
    dend_28 { pt3dadd( -67.1553, -140.684, -26.8017, 0.29 ) }
    dend_28 { pt3dadd( -67.8599, -141.36, -26.7097, 0.52 ) }
    dend_28 { pt3dadd( -68.7308, -142.191, -26.5978, 0.52 ) }
    dend_28 { pt3dadd( -69.51, -142.928, -26.4867, 0.37 ) }
    dend_28 { pt3dadd( -70.7256, -144.104, -26.2766, 0.29 ) }
    dend_28 { pt3dadd( -71.1068, -144.481, -26.1972, 0.66 ) }
    dend_28 { pt3dadd( -71.467, -144.841, -26.0989, 0.66 ) }
    dend_28 { pt3dadd( -72.1475, -145.526, -25.8639, 0.44 ) }
    dend_28 { pt3dadd( -72.7199, -146.095, -25.6416, 0.74 ) }
    dend_28 { pt3dadd( -73.3908, -146.756, -25.4159, 0.59 ) }
    dend_28 { pt3dadd( -74.2602, -147.639, -25.1882, 0.29 ) }
    dend_28 { pt3dadd( -74.9425, -148.334, -25.0479, 0.66 ) }
    dend_28 { pt3dadd( -75.3846, -148.787, -24.9927, 0.66 ) }
    dend_28 { pt3dadd( -75.7672, -149.191, -24.9701, 0.66 ) }
    dend_28 { pt3dadd( -76.5822, -150.069, -24.9832, 0.37 ) }
    dend_28 { pt3dadd( -77.0177, -150.542, -25.0309, 0.29 ) }
    dend_28 { pt3dadd( -77.4197, -151.007, -25.107, 0.29 ) }
    dend_28 { pt3dadd( -78.0147, -151.719, -25.2552, 0.52 ) }
    dend_28 { pt3dadd( -78.3608, -152.138, -25.3076, 0.74 ) }
    dend_28 { pt3dadd( -78.8722, -152.762, -25.3165, 0.88 ) }
    dend_28 { pt3dadd( -79.3683, -153.358, -25.2457, 0.88 ) }
    dend_28 { pt3dadd( -79.8677, -153.958, -25.1322, 0.37 ) }
    dend_28 { pt3dadd( -80.3754, -154.58, -24.984, 0.29 ) }
    dend_28 { pt3dadd( -81.3921, -155.852, -24.6402, 0.44 ) }
    dend_28 { pt3dadd( -81.8634, -156.456, -24.4614, 0.44 ) }
    dend_28 { pt3dadd( -82.5789, -157.395, -24.1966, 0.44 ) }
    dend_28 { pt3dadd( -83.1668, -158.2, -23.9983, 0.88 ) }
    dend_28 { pt3dadd( -83.6411, -158.867, -23.8637, 0.96 ) }
    dend_28 { pt3dadd( -84.0368, -159.43, -23.7551, 0.74 ) }
    dend_28 { pt3dadd( -84.5526, -160.158, -23.6424, 0.59 ) }
    dend_28 { pt3dadd( -85.0563, -160.85, -23.511, 0.52 ) }
    dend_28 { pt3dadd( -85.4788, -161.412, -23.3783, 0.81 ) }
    dend_28 { pt3dadd( -85.9071, -161.947, -23.2231, 0.81 ) }
    dend_28 { pt3dadd( -87.0619, -163.315, -22.7379, 0.29 ) }
    dend_28 { pt3dadd( -87.5411, -163.897, -22.5107, 0.29 ) }
    dend_28 { pt3dadd( -87.9525, -164.425, -22.3004, 0.66 ) }
    dend_28 { pt3dadd( -88.5071, -165.183, -21.9996, 0.81 ) }
    dend_28 { pt3dadd( -88.9203, -165.786, -21.8012, 0.96 ) }
    dend_28 { pt3dadd( -89.3266, -166.423, -21.6494, 0.96 ) }
    dend_28 { pt3dadd( -89.9354, -167.423, -21.5245, 0.37 ) }
    dend_28 { pt3dadd( -90.3165, -168.034, -21.4893, 0.37 ) }
    dend_28 { pt3dadd( -90.9245, -169.007, -21.511, 0.66 ) }
    dend_28 { pt3dadd( -91.2699, -169.592, -21.5577, 0.96 ) }
    dend_28 { pt3dadd( -91.5062, -170.079, -21.6236, 1.11 ) }
    dend_28 { pt3dadd( -91.7094, -170.621, -21.7123, 1.11 ) }
    dend_28 { pt3dadd( -91.9786, -171.613, -21.8855, 0.29 ) }
    dend_28 { pt3dadd( -92.1873, -172.863, -22.1067, 0.29 ) }
    dend_28 { pt3dadd( -92.2897, -174.1, -22.3258, 0.29 ) }
    dend_28 { pt3dadd( -92.3271, -175.835, -22.6623, 0.29 ) }
    dend_28 { pt3dadd( -92.2956, -176.946, -22.9042, 0.88 ) }
    dend_28 { pt3dadd( -92.2361, -177.853, -23.1169, 1.03 ) }
    dend_28 { pt3dadd( -92.159, -178.662, -23.3221, 1.03 ) }
    dend_28 { pt3dadd( -92.1184, -179.191, -23.4633, 0.81 ) }
    dend_28 { pt3dadd( -92.1307, -180.462, -23.8248, 0.52 ) }
    dend_28 { pt3dadd( -92.2829, -181.682, -24.171, 0.52 ) }
    dend_28 { pt3dadd( -92.4679, -182.605, -24.4331, 0.88 ) }
    dend_28 { pt3dadd( -92.6168, -183.24, -24.6, 0.88 ) }
    dend_28 { pt3dadd( -92.8041, -184.025, -24.7785, 0.37 ) }
    dend_28 { pt3dadd( -93.0703, -185.223, -25.0078, 0.37 ) }
    dend_28 { pt3dadd( -93.2633, -186.161, -25.1431, 0.96 ) }
    dend_28 { pt3dadd( -93.3865, -186.931, -25.2382, 0.96 ) }
    dend_28 { pt3dadd( -93.488, -187.964, -25.3445, 0.74 ) }
    dend_28 { pt3dadd( -93.5286, -188.984, -25.3811, 0.44 ) }
    dend_28 { pt3dadd( -93.5189, -189.43, -25.3774, 0.59 ) }
    dend_28 { pt3dadd( -93.483, -190.169, -25.3399, 0.59 ) }
    dend_28 { pt3dadd( -93.4562, -191.107, -25.2676, 0.29 ) }
    dend_28 { pt3dadd( -93.4517, -192.125, -25.1858, 0.29 ) }
    dend_28 { pt3dadd( -93.4657, -193.426, -25.1138, 0.52 ) }
    dend_28 { pt3dadd( -93.4751, -194.095, -25.0942, 0.52 ) }
    dend_28 { pt3dadd( -93.4846, -194.943, -25.0908, 0.37 ) }
    dend_28 { pt3dadd( -93.4869, -196.123, -25.115, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -93.4894, -196.894, -25.1517, 0.88 ) }
    dend_28 { pt3dadd( -93.5076, -197.654, -25.2075, 1.03 ) }
    dend_28 { pt3dadd( -93.5419, -198.455, -25.2762, 1.03 ) }
    dend_28 { pt3dadd( -93.5735, -198.961, -25.3074, 1.03 ) }
    dend_28 { pt3dadd( -93.6335, -199.847, -25.3525, 0.37 ) }
    dend_28 { pt3dadd( -93.7143, -200.817, -25.4158, 0.37 ) }
    dend_28 { pt3dadd( -93.9124, -202.836, -25.5697, 0.29 ) }
    dend_28 { pt3dadd( -94.0412, -203.953, -25.6771, 0.59 ) }
    dend_28 { pt3dadd( -94.1468, -204.704, -25.7689, 0.59 ) }
    dend_28 { pt3dadd( -94.2898, -205.66, -25.9, 0.81 ) }
    dend_28 { pt3dadd( -94.4271, -206.629, -26.0434, 1.18 ) }
    dend_28 { pt3dadd( -94.4986, -207.254, -26.1437, 1.18 ) }
    dend_28 { pt3dadd( -94.6196, -208.659, -26.3795, 0.29 ) }
    dend_28 { pt3dadd( -94.6735, -209.505, -26.5159, 0.29 ) }
    dend_28 { pt3dadd( -94.7394, -210.67, -26.6748, 0.29 ) }
    dend_28 { pt3dadd( -94.7813, -211.624, -26.7767, 0.52 ) }
    dend_28 { pt3dadd( -94.7849, -212.307, -26.831, 0.74 ) }
    dend_28 { pt3dadd( -94.7692, -212.827, -26.8712, 0.74 ) }
    dend_28 { pt3dadd( -94.7313, -213.629, -26.9152, 0.52 ) }
    dend_28 { pt3dadd( -94.6974, -214.588, -26.9409, 0.52 ) }
    dend_28 { pt3dadd( -94.6969, -215.556, -26.9273, 0.88 ) }
    dend_28 { pt3dadd( -94.7055, -216.085, -26.8767, 0.88 ) }
    dend_28 { pt3dadd( -94.7141, -216.675, -26.8055, 0.59 ) }
    dend_28 { pt3dadd( -94.752, -217.6, -26.6811, 0.37 ) }
    dend_28 { pt3dadd( -94.8455, -218.944, -26.4843, 0.81 ) }
    dend_28 { pt3dadd( -94.9198, -219.629, -26.3803, 0.81 ) }
    dend_28 { pt3dadd( -95.1547, -220.797, -26.1631, 0.52 ) }
    dend_28 { pt3dadd( -95.4616, -221.956, -25.9137, 0.29 ) }
    dend_28 { pt3dadd( -95.705, -222.797, -25.712, 0.29 ) }
    dend_28 { pt3dadd( -95.8856, -223.432, -25.5453, 0.66 ) }
    dend_28 { pt3dadd( -96.0481, -224.052, -25.3505, 0.66 ) }
    dend_28 { pt3dadd( -96.3154, -225.57, -24.7546, 0.29 ) }
    dend_28 { pt3dadd( -96.3883, -226.261, -24.4293, 0.29 ) }
    dend_28 { pt3dadd( -96.419, -226.87, -24.1109, 0.74 ) }
    dend_28 { pt3dadd( -96.4475, -227.649, -23.7124, 0.59 ) }
    dend_28 { pt3dadd( -96.5159, -228.643, -23.2302, 0.59 ) }
    dend_28 { pt3dadd( -96.6723, -230.098, -22.5893, 1.03 ) }
    dend_28 { pt3dadd( -96.7774, -230.685, -22.3785, 1.03 ) }
    dend_28 { pt3dadd( -97.1197, -231.81, -22.0683, 0.59 ) }
    dend_28 { pt3dadd( -97.5829, -232.936, -21.864, 0.37 ) }
    dend_28 { pt3dadd( -97.9358, -233.684, -21.7955, 0.37 ) }
    dend_28 { pt3dadd( -98.2376, -234.32, -21.7806, 0.29 ) }
    dend_28 { pt3dadd( -98.4967, -234.941, -21.7993, 0.66 ) }
    dend_28 { pt3dadd( -98.8682, -236.085, -21.845, 0.88 ) }
    dend_28 { pt3dadd( -99.1338, -237.112, -21.8827, 0.66 ) }
    dend_28 { pt3dadd( -99.4409, -238.5, -21.9835, 0.29 ) }
    dend_28 { pt3dadd( -99.7746, -239.917, -22.1248, 0.29 ) }
    dend_28 { pt3dadd( -100.18, -241.404, -22.3053, 0.29 ) }
    dend_28 { pt3dadd( -100.436, -242.256, -22.4252, 0.88 ) }
    dend_28 { pt3dadd( -100.759, -243.185, -22.5763, 0.88 ) }
    dend_28 { pt3dadd( -101.215, -244.369, -22.7382, 0.88 ) }
    dend_28 { pt3dadd( -101.64, -245.371, -22.849, 0.29 ) }
    dend_28 { pt3dadd( -102.121, -246.47, -22.9046, 0.29 ) }
    dend_28 { pt3dadd( -102.61, -247.726, -22.8629, 0.29 ) }
    dend_28 { pt3dadd( -102.839, -248.485, -22.7748, 0.74 ) }
    dend_28 { pt3dadd( -103.076, -249.763, -22.5011, 0.88 ) }
    dend_28 { pt3dadd( -103.11, -250.161, -22.381, 0.88 ) }
    dend_28 { pt3dadd( -103.124, -251.263, -21.9842, 0.59 ) }
    dend_28 { pt3dadd( -103.084, -252.565, -21.4439, 0.59 ) }
    dend_28 { pt3dadd( -103.048, -253.362, -21.0782, 0.88 ) }
    dend_28 { pt3dadd( -102.987, -254.321, -20.6347, 1.03 ) }
    dend_28 { pt3dadd( -102.962, -254.894, -20.3783, 1.03 ) }
    dend_28 { pt3dadd( -102.955, -256.015, -19.8446, 0.66 ) }
    dend_28 { pt3dadd( -103.012, -256.876, -19.4108, 0.88 ) }
    dend_28 { pt3dadd( -103.082, -257.615, -19.0629, 0.88 ) }
    dend_28 { pt3dadd( -103.133, -258.201, -18.8304, 0.88 ) }
    dend_28 { pt3dadd( -103.152, -258.846, -18.6511, 0.44 ) }
    dend_28 { pt3dadd( -103.118, -259.347, -18.5788, 0.44 ) }
    dend_28 { pt3dadd( -102.931, -260.409, -18.5877, 0.44 ) }
    dend_28 { pt3dadd( -102.595, -261.914, -18.7549, 1.03 ) }
    dend_28 { pt3dadd( -102.481, -262.437, -18.853, 1.03 ) }
    dend_28 { pt3dadd( -102.259, -263.639, -19.1248, 0.44 ) }
    dend_28 { pt3dadd( -102.129, -264.415, -19.276, 0.66 ) }
    dend_28 { pt3dadd( -102.058, -265.0, -19.3584, 0.96 ) }
    dend_28 { pt3dadd( -102.042, -265.361, -19.3799, 1.18 ) }
    dend_28 { pt3dadd( -102.169, -266.732, -19.2946, 0.29 ) }
    dend_28 { pt3dadd( -102.256, -267.392, -19.2147, 0.29 ) }
    dend_28 { pt3dadd( -102.403, -268.47, -19.0207, 0.29 ) }
    dend_28 { pt3dadd( -102.462, -269.142, -18.8901, 0.88 ) }
    dend_28 { pt3dadd( -102.488, -269.792, -18.7703, 0.96 ) }
    dend_28 { pt3dadd( -102.48, -270.586, -18.6428, 0.96 ) }
    dend_28 { pt3dadd( -102.4, -271.781, -18.5117, 0.37 ) }
    dend_28 { pt3dadd( -102.281, -273.06, -18.4728, 0.29 ) }
    dend_28 { pt3dadd( -102.208, -273.8, -18.5096, 0.74 ) }
    dend_28 { pt3dadd( -102.147, -274.378, -18.567, 0.96 ) }
    dend_28 { pt3dadd( -102.074, -275.044, -18.6557, 0.96 ) }
    dend_28 { pt3dadd( -101.909, -276.512, -18.9346, 0.29 ) }
    dend_28 { pt3dadd( -101.787, -277.886, -19.2464, 0.29 ) }
    dend_28 { pt3dadd( -101.751, -278.377, -19.3637, 0.74 ) }
    dend_28 { pt3dadd( -101.69, -279.223, -19.5456, 0.81 ) }
    dend_28 { pt3dadd( -101.594, -280.295, -19.7593, 0.59 ) }
    dend_28 { pt3dadd( -101.476, -281.435, -19.9576, 1.03 ) }
    dend_28 { pt3dadd( -101.385, -282.35, -20.1144, 1.03 ) }
    dend_28 { pt3dadd( -101.232, -283.863, -20.3698, 0.74 ) }
    dend_28 { pt3dadd( -101.11, -285.226, -20.6171, 0.52 ) }
    dend_28 { pt3dadd( -101.063, -286.078, -20.7758, 0.59 ) }
    dend_28 { pt3dadd( -101.028, -287.722, -21.1187, 0.44 ) }
    dend_28 { pt3dadd( -101.033, -288.919, -21.4077, 1.03 ) }
    dend_28 { pt3dadd( -101.044, -289.558, -21.5808, 1.03 ) }
    dend_28 { pt3dadd( -101.093, -290.483, -21.8336, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_28 { pt3dadd( -101.196, -291.703, -22.1584, 0.44 ) }
    dend_28 { pt3dadd( -101.305, -292.624, -22.3743, 0.96 ) }
    dend_28 { pt3dadd( -101.432, -293.69, -22.5867, 1.03 ) }
    dend_28 { pt3dadd( -101.585, -295.179, -22.792, 0.29 ) }
    dend_28 { pt3dadd( -101.73, -296.877, -22.9592, 0.29 ) }
    dend_28 { pt3dadd( -101.755, -297.497, -22.9944, 0.52 ) }
    dend_28 { pt3dadd( -101.747, -298.869, -23.0183, 0.44 ) }
    dend_28 { pt3dadd( -101.731, -300.141, -22.9691, 0.59 ) }
    dend_28 { pt3dadd( -101.708, -301.271, -22.8894, 0.66 ) }
    dend_28 { pt3dadd( -101.664, -302.299, -22.8192, 0.44 ) }
    dend_28 { pt3dadd( -101.512, -303.77, -22.7215, 0.44 ) }
    dend_28 { pt3dadd( -101.389, -304.637, -22.6646, 1.11 ) }
    dend_28 { pt3dadd( -101.203, -305.674, -22.6082, 1.25 ) }
    dend_28 { pt3dadd( -100.985, -306.782, -22.5695, 1.03 ) }
    dend_28 { pt3dadd( -100.847, -307.43, -22.5703, 1.03 ) }
    dend_28 { pt3dadd( -100.635, -308.377, -22.5954, 0.81 ) }
    dend_28 { pt3dadd( -100.312, -309.816, -22.6832, 0.22 ) }
    dend_28 { pt3dadd( -100.115, -310.674, -22.7406, 0.88 ) }
    dend_28 { pt3dadd( -99.9454, -311.382, -22.763, 0.88 ) }
    dend_28 { pt3dadd( -99.7926, -312.127, -22.7344, 0.66 ) }
    dend_28 { pt3dadd( -99.6218, -313.236, -22.6366, 0.37 ) }
    dend_28 { pt3dadd( -99.5032, -314.278, -22.4957, 0.66 ) }
    dend_28 { pt3dadd( -99.3965, -315.332, -22.3142, 0.66 ) }
    dend_28 { pt3dadd( -99.2954, -316.613, -22.0627, 0.44 ) }
    dend_28 { pt3dadd( -99.1735, -318.253, -21.7215, 0.22 ) }
    dend_28 { pt3dadd( -99.1262, -319.031, -21.5617, 0.81 ) }
    dend_28 { pt3dadd( -99.095, -319.854, -21.4008, 0.81 ) }
    dend_28 { pt3dadd( -99.089, -320.449, -21.3, 0.81 ) }
    dend_28 { pt3dadd( -99.1021, -321.461, -21.1815, 0.59 ) }
    dend_28 { pt3dadd( -99.1245, -322.577, -21.0922, 0.59 ) }
    dend_28 { pt3dadd( -99.145, -323.532, -21.0268, 0.74 ) }
    dend_28 { pt3dadd( -99.1627, -324.378, -20.9688, 0.44 ) }
    dend_28 { pt3dadd( -99.1943, -325.43, -20.8985, 0.44 ) }
    dend_28 { pt3dadd( -99.2156, -326.033, -20.854, 1.03 ) }
    dend_28 { pt3dadd( -99.263, -326.652, -20.798, 1.03 ) }
    dend_28 { pt3dadd( -99.4248, -328.088, -20.6163, 0.59 ) }
    dend_28 { pt3dadd( -99.5419, -328.95, -20.48, 0.66 ) }
    dend_28 { pt3dadd( -99.6819, -329.797, -20.3321, 0.88 ) }
    dend_28 { pt3dadd( -99.83, -330.585, -20.1895, 0.88 ) }
    dend_28 { pt3dadd( -100.228, -332.486, -19.8436, 0.37 ) }
    dend_28 { pt3dadd( -100.453, -333.417, -19.6856, 0.88 ) }
    dend_28 { pt3dadd( -100.718, -334.376, -19.5362, 1.18 ) }
    dend_28 { pt3dadd( -100.944, -335.135, -19.426, 1.11 ) }
    dend_28 { pt3dadd( -101.262, -336.171, -19.2955, 0.37 ) }
    dend_28 { pt3dadd( -101.46, -336.806, -19.2277, 0.37 ) }
    dend_28 { pt3dadd( -101.692, -337.565, -19.1689, 0.81 ) }
    dend_28 { pt3dadd( -101.981, -338.511, -19.1209, 0.81 ) }
    dend_28 { pt3dadd( -102.323, -339.663, -19.0643, 0.44 ) }
    dend_28 { pt3dadd( -102.648, -340.781, -19.0041, 0.29 ) }
    dend_28 { pt3dadd( -102.846, -341.471, -18.9633, 0.74 ) }
    dend_28 { pt3dadd( -103.067, -342.332, -18.9045, 0.96 ) }
    dend_28 { pt3dadd( -103.183, -342.91, -18.8598, 0.96 ) }
    dend_28 { pt3dadd( -103.311, -343.862, -18.788, 0.74 ) }
    dend_28 { pt3dadd( -103.433, -345.287, -18.6949, 0.59 ) }
    dend_28 { pt3dadd( -103.485, -346.415, -18.6503, 0.59 ) }
    dend_28 { pt3dadd( -103.518, -347.817, -18.6248, 0.44 ) }
    dend_28 { pt3dadd( -103.524, -348.609, -18.6253, 0.44 ) }
    dend_28 { pt3dadd( -103.519, -349.997, -18.6591, 0.81 ) }
    dend_28 { pt3dadd( -103.514, -350.739, -18.6897, 0.81 ) }
    dend_28 { pt3dadd( -103.477, -352.455, -18.8063, 0.37 ) }
    dend_28 { pt3dadd( -103.441, -353.513, -18.9061, 0.37 ) }
    dend_28 { pt3dadd( -103.423, -354.041, -18.9745, 0.81 ) }
    dend_28 { pt3dadd( -103.41, -354.753, -19.0889, 0.96 ) }
    dend_28 { pt3dadd( -103.389, -355.894, -19.3009, 0.29 ) }
    dend_28 { pt3dadd( -103.354, -356.963, -19.4856, 0.29 ) }
    dend_28 { pt3dadd( -103.32, -357.547, -19.5855, 0.96 ) }
    dend_28 { pt3dadd( -103.258, -358.444, -19.7467, 0.96 ) }
    dend_28 { pt3dadd( -103.198, -359.562, -19.944, 0.44 ) }
    dend_28 { pt3dadd( -103.176, -360.285, -20.0711, 0.29 ) }
    dend_28 { pt3dadd( -103.16, -361.206, -20.2457, 0.29 ) }
    dend_28 { pt3dadd( -103.184, -361.762, -20.3585, 0.88 ) }
    dend_28 { pt3dadd( -103.233, -362.36, -20.4708, 1.03 ) }
    dend_28 { pt3dadd( -103.274, -362.776, -20.5433, 1.03 ) }
    dend_28 { pt3dadd( -103.381, -363.783, -20.7167, 0.74 ) }
    dend_28 { pt3dadd( -103.49, -364.766, -20.862, 0.59 ) }
    dend_28 { pt3dadd( -103.665, -366.148, -21.019, 0.29 ) }
    dend_28 { pt3dadd( -103.916, -368.339, -21.261, 0.29 ) }
    dend_28 { pt3dadd( -103.998, -369.289, -21.3593, 0.81 ) }
    dend_28 { pt3dadd( -104.029, -369.806, -21.4114, 0.81 ) }
    dend_28 { pt3dadd( -104.079, -371.027, -21.5065, 0.88 ) }
    dend_28 { pt3dadd( -104.094, -371.851, -21.5447, 0.88 ) }
    dend_28 { pt3dadd( -104.094, -373.875, -21.5806, 0.29 ) }
    dend_28 { pt3dadd( -104.121, -375.341, -21.6046, 0.29 ) }
    dend_28 { pt3dadd( -104.147, -375.721, -21.6029, 1.11 ) }
    dend_28 { pt3dadd( -104.219, -376.392, -21.5885, 1.25 ) }
    dend_28 { pt3dadd( -104.309, -377.059, -21.5798, 0.81 ) }
    dend_28 { pt3dadd( -104.464, -378.036, -21.5498, 0.29 ) }
    dend_28 { pt3dadd( -104.664, -378.907, -21.4512, 0.29 ) }
    dend_28 { pt3dadd( -104.985, -379.962, -21.3196, 0.52 ) }
    dend_28 { pt3dadd( -105.206, -380.593, -21.2399, 0.52 ) }
    dend_28 { pt3dadd( -105.61, -381.538, -21.0842, 0.88 ) }
    dend_28 { pt3dadd( -105.783, -381.877, -21.0399, 0.88 ) }
    dend_28 { pt3dadd( -106.318, -382.788, -20.9211, 0.29 ) }
    dend_28 { pt3dadd( -106.92, -383.648, -20.7832, 0.52 ) }
    dend_28 { pt3dadd( -107.422, -384.264, -20.6663, 0.37 ) }
    dend_28 { pt3dadd( -108.179, -385.101, -20.4802, 0.52 ) }
    dend_28 { pt3dadd( -109.606, -386.545, -20.0919, 0.88 ) }
    dend_28 { pt3dadd( -110.288, -387.212, -19.8957, 0.88 ) }
    dend_28 { pt3dadd( -111.202, -388.103, -19.6115, 1.25 ) }
    dend_28 { pt3dadd( -112.076, -388.958, -19.3027, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_28 { pt3dadd( -112.444, -389.316, -19.1587, 0.29 ) }
    dend_28 { pt3dadd( -113.044, -389.912, -18.8992, 1.11 ) }
    dend_28 { pt3dadd( -113.878, -390.717, -18.4474, 0.22 ) }
    dend_28 { pt3dadd( -114.364, -391.189, -18.1992, 0.59 ) }
    dend_28 { pt3dadd( -114.624, -391.452, -18.064, 0.59 ) }
    dend_28 { pt3dadd( -115.326, -392.198, -17.6772, 0.29 ) }
    dend_28 { pt3dadd( -115.845, -392.805, -17.3859, 0.52 ) }
    dend_28 { pt3dadd( -116.045, -393.08, -17.2703, 0.52 ) }
    dend_28 { pt3dadd( -116.694, -394.067, -16.9211, 0.22 ) }
    dend_28 { pt3dadd( -117.224, -394.948, -16.6576, 1.03 ) }
    dend_28 { pt3dadd( -117.498, -395.455, -16.5068, 1.03 ) }
    dend_28 { pt3dadd( -117.986, -396.469, -16.193, 0.29 ) }
    dend_28 { pt3dadd( -118.531, -397.704, -15.7401, 0.29 ) }
    dend_28 { pt3dadd( -118.765, -398.241, -15.5086, 0.96 ) }
    dend_28 { pt3dadd( -119.058, -398.934, -15.1792, 0.96 ) }
    dend_28 { pt3dadd( -119.492, -399.971, -14.6263, 0.52 ) }
    dend_28 { pt3dadd( -120.032, -401.317, -13.861, 0.44 ) }
    dend_28 { pt3dadd( -120.636, -402.871, -12.9162, 0.81 ) }
    dend_28 { pt3dadd( -121.037, -403.892, -12.2665, 0.44 ) }
    dend_28 { pt3dadd( -121.431, -404.841, -11.6687, 0.44 ) }
    dend_28 { pt3dadd( -121.779, -405.674, -11.1402, 0.44 ) }
    dend_28 { pt3dadd( -122.176, -406.617, -10.5696, 0.44 ) }
    dend_28 { pt3dadd( -122.415, -407.184, -10.245, 0.29 ) }
    dend_28 { pt3dadd( -122.705, -407.865, -9.93886, 0.29 ) }
    dend_28 { pt3dadd( -123.191, -409.025, -9.50647, 0.29 ) }
    dend_28 { pt3dadd( -124.571, -418.831, -8.11368, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -35.1092, -103.648, -18.3068, 0.52 ) }
    dend_27 { pt3dadd( -34.7568, -104.481, -17.3091, 0.52 ) }
    dend_27 { pt3dadd( -34.5049, -105.089, -16.6091, 0.59 ) }
    dend_27 { pt3dadd( -33.7648, -106.989, -14.5339, 0.22 ) }
    dend_27 { pt3dadd( -33.5859, -107.463, -14.0463, 0.74 ) }
    dend_27 { pt3dadd( -33.4116, -107.919, -13.5939, 0.88 ) }
    dend_27 { pt3dadd( -33.3227, -108.174, -13.3583, 0.88 ) }
    dend_27 { pt3dadd( -33.1245, -108.912, -12.7061, 0.37 ) }
    dend_27 { pt3dadd( -32.9689, -109.575, -12.131, 0.22 ) }
    dend_27 { pt3dadd( -32.8998, -109.934, -11.8412, 0.22 ) }
    dend_27 { pt3dadd( -32.7801, -110.721, -11.1929, 0.29 ) }
    dend_27 { pt3dadd( -32.6055, -112.125, -9.99764, 0.74 ) }
    dend_27 { pt3dadd( -32.5488, -112.718, -9.47377, 0.88 ) }
    dend_27 { pt3dadd( -32.5169, -113.54, -8.72784, 0.66 ) }
    dend_27 { pt3dadd( -32.5312, -114.694, -7.64346, 0.37 ) }
    dend_27 { pt3dadd( -32.5702, -115.212, -7.13957, 0.37 ) }
    dend_27 { pt3dadd( -32.646, -115.715, -6.67064, 0.37 ) }
    dend_27 { pt3dadd( -32.7743, -116.342, -6.08697, 0.52 ) }
    dend_27 { pt3dadd( -32.9309, -116.998, -5.50325, 0.66 ) }
    dend_27 { pt3dadd( -33.1927, -118.082, -4.59274, 0.88 ) }
    dend_27 { pt3dadd( -33.437, -119.04, -3.83662, 0.74 ) }
    dend_27 { pt3dadd( -33.7333, -120.158, -2.95191, 0.52 ) }
    dend_27 { pt3dadd( -34.0419, -121.365, -2.03217, 0.66 ) }
    dend_27 { pt3dadd( -34.1702, -121.939, -1.60996, 0.74 ) }
    dend_27 { pt3dadd( -34.3097, -122.826, -1.00914, 0.74 ) }
    dend_27 { pt3dadd( -34.381, -123.754, -0.447123, 0.37 ) }
    dend_27 { pt3dadd( -34.3424, -124.691, 0.0169197, 0.81 ) }
    dend_27 { pt3dadd( -34.2725, -125.085, 0.170537, 0.81 ) }
    dend_27 { pt3dadd( -34.1035, -125.652, 0.30001, 1.03 ) }
    dend_27 { pt3dadd( -33.6609, -126.734, 0.403694, 0.59 ) }
    dend_27 { pt3dadd( -33.2976, -127.481, 0.411021, 0.59 ) }
    dend_27 { pt3dadd( -32.7405, -128.464, 0.383175, 0.59 ) }
    dend_27 { pt3dadd( -32.48, -128.915, 0.356436, 0.59 ) }
    dend_27 { pt3dadd( -32.0898, -129.679, 0.221592, 0.37 ) }
    dend_27 { pt3dadd( -31.6961, -130.65, -0.0463326, 0.81 ) }
    dend_27 { pt3dadd( -31.5065, -131.306, -0.277639, 1.03 ) }
    dend_27 { pt3dadd( -31.3984, -131.837, -0.479891, 1.03 ) }
    dend_27 { pt3dadd( -31.3213, -132.376, -0.691391, 0.88 ) }
    dend_27 { pt3dadd( -31.1225, -134.713, -1.69535, 0.29 ) }
    dend_27 { pt3dadd( -31.1074, -135.477, -2.06703, 0.29 ) }
    dend_27 { pt3dadd( -31.1449, -136.247, -2.48883, 0.29 ) }
    dend_27 { pt3dadd( -31.2376, -137.499, -3.28979, 0.29 ) }
    dend_27 { pt3dadd( -28.8334, -146.751, -0.353689, 0.29 ) }
    dend_27 { pt3dadd( -27.2547, -156.169, 2.61453, 0.29 ) }
    dend_27 { pt3dadd( -26.2713, -165.042, 7.1201, 0.29 ) }
    dend_27 { pt3dadd( -24.5247, -174.195, 10.7495, 0.29 ) }
    dend_27 { pt3dadd( -24.7061, -183.994, 12.7379, 0.29 ) }
    dend_27 { pt3dadd( -26.2117, -193.871, 13.1567, 0.29 ) }
    dend_27 { pt3dadd( -25.7666, -203.852, 13.5886, 0.29 ) }
    dend_27 { pt3dadd( -24.9438, -213.773, 14.5336, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 5.42074, -53.7727, -2.42883, 0.44 ) }
    dend_18 { pt3dadd( 6.11211, -55.2589, -2.77326, 0.44 ) }
    dend_18 { pt3dadd( 6.58559, -56.34, -2.99684, 0.59 ) }
    dend_18 { pt3dadd( 6.97656, -57.2363, -3.18349, 0.74 ) }
    dend_18 { pt3dadd( 7.40829, -58.2279, -3.38536, 0.74 ) }
    dend_18 { pt3dadd( 7.91262, -59.4334, -3.62239, 0.52 ) }
    dend_18 { pt3dadd( 8.62207, -61.126, -3.91875, 0.52 ) }
    dend_18 { pt3dadd( 9.12379, -62.4003, -4.06991, 0.59 ) }
    dend_18 { pt3dadd( 9.40931, -63.1046, -4.12874, 0.74 ) }
    dend_18 { pt3dadd( 9.65816, -63.6742, -4.1611, 0.88 ) }
    dend_18 { pt3dadd( 10.1263, -64.6782, -4.18852, 0.88 ) }
    dend_18 { pt3dadd( 10.9014, -66.2667, -4.15181, 0.59 ) }
    dend_18 { pt3dadd( 11.4074, -67.2738, -4.09266, 0.66 ) }
    dend_18 { pt3dadd( 11.8228, -68.0687, -4.04315, 0.52 ) }
    dend_18 { pt3dadd( 12.2156, -68.7993, -3.99837, 0.52 ) }
    dend_18 { pt3dadd( 12.5811, -69.4477, -3.97803, 0.88 ) }
    dend_18 { pt3dadd( 12.9704, -70.098, -3.96778, 0.88 ) }
    dend_18 { pt3dadd( 13.7662, -71.4155, -3.99912, 0.44 ) }
    dend_18 { pt3dadd( 14.2558, -72.2237, -4.04993, 0.44 ) }
    dend_18 { pt3dadd( 14.6436, -72.8721, -4.11021, 0.88 ) }
    dend_18 { pt3dadd( 15.1759, -73.7942, -4.21032, 0.88 ) }
    dend_18 { pt3dadd( 15.951, -75.1686, -4.36625, 0.37 ) }
    dend_18 { pt3dadd( 16.4091, -76.0094, -4.46551, 0.74 ) }
    dend_18 { pt3dadd( 16.7924, -76.7283, -4.53897, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_18 { pt3dadd( 17.1535, -77.4221, -4.61128, 0.74 ) }
    dend_18 { pt3dadd( 17.8097, -78.6703, -4.74443, 0.52 ) }
    dend_18 { pt3dadd( 18.406, -79.7589, -4.81888, 0.74 ) }
    dend_18 { pt3dadd( 18.9102, -80.6197, -4.85455, 0.52 ) }
    dend_18 { pt3dadd( 19.2688, -81.1951, -4.84704, 0.74 ) }
    dend_18 { pt3dadd( 19.8185, -82.0304, -4.80244, 0.74 ) }
    dend_18 { pt3dadd( 20.1841, -82.5564, -4.74695, 0.74 ) }
    dend_18 { pt3dadd( 20.9846, -83.6414, -4.58848, 0.52 ) }
    dend_18 { pt3dadd( 21.5389, -84.3945, -4.4758, 0.44 ) }
    dend_18 { pt3dadd( 22.4836, -85.6986, -4.30261, 0.59 ) }
    dend_18 { pt3dadd( 23.0465, -86.501, -4.20584, 1.03 ) }
    dend_18 { pt3dadd( 23.4884, -87.1714, -4.13247, 1.25 ) }
    dend_18 { pt3dadd( 23.8526, -87.744, -4.07957, 1.25 ) }
    dend_18 { pt3dadd( 24.5027, -88.7382, -4.0276, 0.81 ) }
    dend_18 { pt3dadd( 25.3394, -89.9236, -3.95426, 0.66 ) }
    dend_18 { pt3dadd( 26.3038, -91.1395, -3.87305, 0.66 ) }
    dend_18 { pt3dadd( 27.0454, -91.9621, -3.82044, 0.52 ) }
    dend_18 { pt3dadd( 27.7337, -92.6448, -3.78697, 0.74 ) }
    dend_18 { pt3dadd( 28.7343, -93.5424, -3.76295, 0.52 ) }
    dend_18 { pt3dadd( 29.4984, -94.1485, -3.76762, 0.52 ) }
    dend_18 { pt3dadd( 30.6342, -94.9614, -3.83729, 0.52 ) }
    dend_18 { pt3dadd( 32.0518, -95.9269, -4.03563, 0.52 ) }
    dend_18 { pt3dadd( 32.9933, -96.5739, -4.24634, 0.74 ) }
    dend_18 { pt3dadd( 34.1316, -97.4303, -4.58457, 0.66 ) }
    dend_18 { pt3dadd( 34.6943, -97.9114, -4.78855, 0.66 ) }
    dend_18 { pt3dadd( 35.6007, -98.8048, -5.17419, 0.37 ) }
    dend_18 { pt3dadd( 36.4725, -99.8264, -5.58781, 0.22 ) }
    dend_18 { pt3dadd( 37.3236, -101.026, -6.01184, 0.44 ) }
    dend_18 { pt3dadd( 37.8487, -101.894, -6.24904, 0.44 ) }
    dend_18 { pt3dadd( 38.393, -102.936, -6.45531, 0.52 ) }
    dend_18 { pt3dadd( 38.896, -103.998, -6.61508, 0.52 ) }
    dend_18 { pt3dadd( 39.3542, -105.006, -6.69522, 0.52 ) }
    dend_18 { pt3dadd( 39.798, -106.022, -6.72727, 0.52 ) }
    dend_18 { pt3dadd( 40.4393, -107.531, -6.71525, 0.44 ) }
    dend_18 { pt3dadd( 40.8313, -108.437, -6.70611, 0.44 ) }
    dend_18 { pt3dadd( 41.2545, -109.359, -6.69358, 0.44 ) }
    dend_18 { pt3dadd( 41.8101, -110.514, -6.67153, 0.81 ) }
    dend_18 { pt3dadd( 48.0679, -118.221, -7.87209, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.42074, -53.7727, -2.42883, 0.52 ) }
    dend_17 { pt3dadd( 5.75162, -55.1339, -2.41026, 0.52 ) }
    dend_17 { pt3dadd( 6.0208, -56.3762, -2.40238, 0.52 ) }
    dend_17 { pt3dadd( 6.25815, -57.7467, -2.40617, 0.52 ) }
    dend_17 { pt3dadd( 6.42663, -58.922, -2.41461, 0.52 ) }
    dend_17 { pt3dadd( 6.49628, -59.4542, -2.42265, 0.74 ) }
    dend_17 { pt3dadd( 6.61069, -60.3288, -2.46298, 0.74 ) }
    dend_17 { pt3dadd( 6.71461, -61.1075, -2.51676, 0.52 ) }
    dend_17 { pt3dadd( 6.87982, -62.6459, -2.64738, 0.37 ) }
    dend_17 { pt3dadd( 6.96369, -63.8094, -2.75518, 0.37 ) }
    dend_17 { pt3dadd( 7.00195, -64.8427, -2.86445, 0.37 ) }
    dend_17 { pt3dadd( 7.03943, -66.4073, -3.04727, 0.37 ) }
    dend_17 { pt3dadd( 7.06579, -67.4227, -3.17412, 0.81 ) }
    dend_17 { pt3dadd( 7.09567, -68.3665, -3.28916, 0.81 ) }
    dend_17 { pt3dadd( 7.1531, -69.635, -3.44312, 0.66 ) }
    dend_17 { pt3dadd( 7.21417, -70.5531, -3.54685, 0.66 ) }
    dend_17 { pt3dadd( 7.29681, -71.6473, -3.68931, 0.44 ) }
    dend_17 { pt3dadd( 7.41966, -73.0982, -3.88418, 0.29 ) }
    dend_17 { pt3dadd( 7.53385, -74.12, -4.02339, 0.59 ) }
    dend_17 { pt3dadd( 7.68845, -75.1201, -4.15488, 0.74 ) }
    dend_17 { pt3dadd( 7.89289, -76.0729, -4.26869, 0.74 ) }
    dend_17 { pt3dadd( 8.23607, -77.5219, -4.40349, 0.44 ) }
    dend_17 { pt3dadd( 8.40705, -78.253, -4.45282, 0.44 ) }
    dend_17 { pt3dadd( 8.63881, -79.3172, -4.49219, 0.81 ) }
    dend_17 { pt3dadd( 8.77176, -80.0437, -4.51085, 0.88 ) }
    dend_17 { pt3dadd( 8.90166, -81.0161, -4.52254, 1.11 ) }
    dend_17 { pt3dadd( 9.05368, -82.5728, -4.51587, 0.59 ) }
    dend_17 { pt3dadd( 9.09349, -83.0816, -4.49273, 0.59 ) }
    dend_17 { pt3dadd( 9.16186, -84.4108, -4.44093, 0.44 ) }
    dend_17 { pt3dadd( 9.18482, -85.8206, -4.40872, 0.59 ) }
    dend_17 { pt3dadd( 9.174, -86.6397, -4.38867, 0.81 ) }
    dend_17 { pt3dadd( 9.15414, -87.5099, -4.35961, 0.81 ) }
    dend_17 { pt3dadd( 9.15614, -88.9439, -4.29218, 0.44 ) }
    dend_17 { pt3dadd( 9.17295, -89.526, -4.25107, 0.44 ) }
    dend_17 { pt3dadd( 9.20316, -90.0315, -4.2046, 0.88 ) }
    dend_17 { pt3dadd( 9.27805, -90.755, -4.13041, 1.18 ) }
    dend_17 { pt3dadd( 9.36481, -91.4496, -4.06202, 1.18 ) }
    dend_17 { pt3dadd( 9.46985, -92.2807, -3.99627, 0.52 ) }
    dend_17 { pt3dadd( 9.63198, -93.5037, -3.93056, 0.37 ) }
    dend_17 { pt3dadd( 9.78381, -94.5937, -3.8813, 0.29 ) }
    dend_17 { pt3dadd( 9.98391, -95.8187, -3.85821, 0.29 ) }
    dend_17 { pt3dadd( 10.0665, -96.2534, -3.87604, 0.88 ) }
    dend_17 { pt3dadd( 10.2426, -97.0618, -3.97276, 0.88 ) }
    dend_17 { pt3dadd( 10.3356, -97.4367, -4.04884, 0.88 ) }
    dend_17 { pt3dadd( 10.4361, -97.7834, -4.14779, 0.88 ) }
    dend_17 { pt3dadd( 10.7116, -98.6098, -4.45789, 0.44 ) }
    dend_17 { pt3dadd( 11.0514, -99.529, -4.8689, 0.37 ) }
    dend_17 { pt3dadd( 11.2475, -100.076, -5.1175, 0.81 ) }
    dend_17 { pt3dadd( 11.4932, -100.801, -5.46064, 1.03 ) }
    dend_17 { pt3dadd( 11.6063, -101.19, -5.6525, 1.03 ) }
    dend_17 { pt3dadd( 11.764, -101.872, -5.99217, 1.03 ) }
    dend_17 { pt3dadd( 11.8511, -102.398, -6.24549, 0.81 ) }
    dend_17 { pt3dadd( 11.9565, -103.322, -6.69578, 0.37 ) }
    dend_17 { pt3dadd( 12.0204, -104.261, -7.14709, 0.37 ) }
    dend_17 { pt3dadd( 12.0582, -105.458, -7.72262, 1.18 ) }
    dend_17 { pt3dadd( 12.0594, -106.124, -8.0382, 1.18 ) }
    dend_17 { pt3dadd( 12.0429, -106.743, -8.30182, 1.18 ) }
    dend_17 { pt3dadd( 11.9992, -107.793, -8.7194, 0.74 ) }
    dend_17 { pt3dadd( 11.9591, -108.964, -9.16293, 0.37 ) }
    dend_17 { pt3dadd( 11.9572, -109.758, -9.42055, 0.37 ) }
    dend_17 { pt3dadd( 12.0219, -110.701, -9.69615, 1.03 ) }
    dend_17 { pt3dadd( 12.1396, -111.474, -9.90707, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 12.2661, -112.093, -10.0616, 1.25 ) }
    dend_17 { pt3dadd( 12.5506, -113.324, -10.3204, 0.37 ) }
    dend_17 { pt3dadd( 12.7939, -114.33, -10.5054, 0.29 ) }
    dend_17 { pt3dadd( 13.123, -115.705, -10.7326, 0.29 ) }
    dend_17 { pt3dadd( 13.3873, -116.854, -10.9136, 0.88 ) }
    dend_17 { pt3dadd( 13.5173, -117.514, -11.0159, 1.11 ) }
    dend_17 { pt3dadd( 13.7007, -118.764, -11.1761, 0.59 ) }
    dend_17 { pt3dadd( 13.7685, -119.491, -11.2433, 0.81 ) }
    dend_17 { pt3dadd( 13.7917, -119.999, -11.2813, 0.81 ) }
    dend_17 { pt3dadd( 13.7963, -121.14, -11.3224, 0.66 ) }
    dend_17 { pt3dadd( 13.7674, -122.531, -11.3462, 0.44 ) }
    dend_17 { pt3dadd( 13.7389, -123.563, -11.3542, 0.59 ) }
    dend_17 { pt3dadd( 13.7083, -124.324, -11.3534, 0.59 ) }
    dend_17 { pt3dadd( 13.6407, -125.269, -11.3509, 1.03 ) }
    dend_17 { pt3dadd( 13.5116, -126.427, -11.3418, 0.74 ) }
    dend_17 { pt3dadd( 13.3615, -127.32, -11.3271, 0.52 ) }
    dend_17 { pt3dadd( 13.2131, -127.985, -11.3237, 0.52 ) }
    dend_17 { pt3dadd( 13.0395, -128.643, -11.3286, 0.88 ) }
    dend_17 { pt3dadd( 12.8252, -129.352, -11.348, 0.88 ) }
    dend_17 { pt3dadd( 12.5576, -130.155, -11.3893, 0.88 ) }
    dend_17 { pt3dadd( 12.4101, -130.597, -11.4239, 0.88 ) }
    dend_17 { pt3dadd( 11.9895, -131.896, -11.5403, 0.44 ) }
    dend_17 { pt3dadd( 11.5869, -133.242, -11.6234, 0.37 ) }
    dend_17 { pt3dadd( 11.3987, -134.024, -11.6176, 0.37 ) }
    dend_17 { pt3dadd( 11.2625, -134.844, -11.5315, 0.81 ) }
    dend_17 { pt3dadd( 11.2288, -135.492, -11.3886, 0.81 ) }
    dend_17 { pt3dadd( 11.2492, -135.798, -11.2861, 0.81 ) }
    dend_17 { pt3dadd( 11.4131, -136.735, -10.8484, 0.66 ) }
    dend_17 { pt3dadd( 11.7662, -138.076, -10.1182, 0.52 ) }
    dend_17 { pt3dadd( 12.0192, -138.891, -9.65257, 0.52 ) }
    dend_17 { pt3dadd( 12.4711, -140.282, -8.81444, 0.37 ) }
    dend_17 { pt3dadd( 12.7027, -141.009, -8.39883, 0.37 ) }
    dend_17 { pt3dadd( 12.9567, -141.855, -7.9743, 0.74 ) }
    dend_17 { pt3dadd( 13.2351, -142.901, -7.57148, 0.74 ) }
    dend_17 { pt3dadd( 13.3926, -143.516, -7.41582, 0.74 ) }
    dend_17 { pt3dadd( 13.6311, -144.417, -7.20407, 0.96 ) }
    dend_17 { pt3dadd( 13.9155, -145.351, -7.06995, 0.66 ) }
    dend_17 { pt3dadd( 14.2196, -146.252, -7.00093, 0.37 ) }
    dend_17 { pt3dadd( 14.6128, -147.429, -6.9734, 0.37 ) }
    dend_17 { pt3dadd( 14.9726, -148.721, -6.99454, 0.37 ) }
    dend_17 { pt3dadd( 15.3411, -150.752, -7.1269, 0.66 ) }
    dend_17 { pt3dadd( 15.4776, -153.004, -7.37079, 0.59 ) }
    dend_17 { pt3dadd( 15.4265, -154.242, -7.52844, 0.44 ) }
    dend_17 { pt3dadd( 15.2409, -155.936, -7.78945, 0.44 ) }
    dend_17 { pt3dadd( 15.0624, -157.204, -8.00069, 0.44 ) }
    dend_17 { pt3dadd( 14.7957, -158.974, -8.29935, 0.44 ) }
    dend_17 { pt3dadd( 14.6431, -160.235, -8.47282, 0.44 ) }
    dend_17 { pt3dadd( 14.5523, -161.64, -8.52578, 0.81 ) }
    dend_17 { pt3dadd( 14.5928, -162.75, -8.49662, 0.81 ) }
    dend_17 { pt3dadd( 14.8511, -164.47, -8.28669, 0.59 ) }
    dend_17 { pt3dadd( 15.0671, -165.423, -8.0984, 0.59 ) }
    dend_17 { pt3dadd( 15.5216, -167.113, -7.68467, 0.59 ) }
    dend_17 { pt3dadd( 15.8508, -168.34, -7.32943, 0.37 ) }
    dend_17 { pt3dadd( 16.1449, -169.597, -6.91307, 0.59 ) }
    dend_17 { pt3dadd( 16.3517, -170.621, -6.57271, 0.59 ) }
    dend_17 { pt3dadd( 16.6089, -172.211, -6.07585, 0.37 ) }
    dend_17 { pt3dadd( 16.7108, -173.197, -5.79641, 0.37 ) }
    dend_17 { pt3dadd( 16.7233, -173.962, -5.62387, 0.52 ) }
    dend_17 { pt3dadd( 16.6405, -175.08, -5.39663, 0.52 ) }
    dend_17 { pt3dadd( 16.5187, -175.919, -5.25314, 0.59 ) }
    dend_17 { pt3dadd( 16.3151, -176.929, -5.08577, 0.52 ) }
    dend_17 { pt3dadd( 16.0485, -178.019, -4.89963, 0.52 ) }
    dend_17 { pt3dadd( 15.548, -179.831, -4.56347, 0.44 ) }
    dend_17 { pt3dadd( 15.2416, -180.874, -4.37742, 0.74 ) }
    dend_17 { pt3dadd( 15.0453, -181.545, -4.27672, 0.74 ) }
    dend_17 { pt3dadd( 14.8, -182.4, -4.19294, 0.44 ) }
    dend_17 { pt3dadd( 14.4531, -183.775, -4.16814, 0.29 ) }
    dend_17 { pt3dadd( 14.2866, -184.661, -4.23348, 0.59 ) }
    dend_17 { pt3dadd( 14.2307, -185.176, -4.31265, 0.59 ) }
    dend_17 { pt3dadd( 14.22, -186.439, -4.60315, 0.37 ) }
    dend_17 { pt3dadd( 14.3607, -187.77, -4.99377, 0.22 ) }
    dend_17 { pt3dadd( 14.6341, -189.079, -5.43638, 0.44 ) }
    dend_17 { pt3dadd( 14.8378, -189.745, -5.68642, 0.44 ) }
    dend_17 { pt3dadd( 15.1455, -190.587, -6.00558, 0.44 ) }
    dend_17 { pt3dadd( 15.7176, -191.965, -6.49913, 0.37 ) }
    dend_17 { pt3dadd( 16.2583, -193.135, -6.86545, 0.66 ) }
    dend_17 { pt3dadd( 16.6458, -193.918, -7.08732, 0.37 ) }
    dend_17 { pt3dadd( 17.149, -195.016, -7.37344, 0.37 ) }
    dend_17 { pt3dadd( 17.5113, -195.882, -7.58479, 0.88 ) }
    dend_17 { pt3dadd( 17.7214, -196.469, -7.71503, 1.03 ) }
    dend_17 { pt3dadd( 18.0605, -197.613, -7.92738, 0.22 ) }
    dend_17 { pt3dadd( 18.2582, -198.391, -8.05119, 0.22 ) }
    dend_17 { pt3dadd( 18.5738, -199.593, -8.2055, 0.22 ) }
    dend_17 { pt3dadd( 19.3531, -209.486, -6.96757, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 99.0343, 55.8931, -49.5735, 0.29 ) }
    dend_10 { pt3dadd( 107.153, 58.5115, -54.7914, 0.29 ) }
    dend_10 { pt3dadd( 114.572, 61.8277, -60.6202, 0.29 ) }
    dend_10 { pt3dadd( 122.112, 63.588, -66.9484, 0.29 ) }
    dend_10 { pt3dadd( 128.726, 64.1044, -74.4311, 0.29 ) }
    dend_10 { pt3dadd( 136.246, 66.2225, -80.673, 0.29 ) }
    dend_10 { pt3dadd( 143.95, 68.0631, -86.7772, 0.29 ) }
    dend_10 { pt3dadd( 151.391, 70.1135, -93.1352, 0.29 ) }
    dend_10 { pt3dadd( 158.364, 70.9283, -100.256, 0.29 ) }
    dend_10 { pt3dadd( 164.14, 71.0969, -108.418, 0.29 ) }
    dend_10 { pt3dadd( 169.772, 73.0249, -116.453, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 95/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 99.0343, 55.8931, -49.5735, 0.29 ) }
    dend_9 { pt3dadd( 106.952, 58.6747, -55.0117, 0.29 ) }
    dend_9 { pt3dadd( 113.317, 62.8555, -61.4934, 0.29 ) }
    dend_9 { pt3dadd( 119.583, 68.9938, -66.2955, 0.29 ) }
    dend_9 { pt3dadd( 127.145, 73.8603, -70.6682, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_9 { pt3dadd( 134.834, 79.8887, -72.7999, 0.29 ) }
    dend_9 { pt3dadd( 141.455, 87.1173, -74.7774, 0.29 ) }
    dend_9 { pt3dadd( 148.186, 94.5123, -74.8774, 0.29 ) }
    dend_9 { pt3dadd( 155.746, 100.979, -75.8846, 0.29 ) }
    dend_9 { pt3dadd( 163.4, 107.404, -75.5062, 0.29 ) }
    dend_9 { pt3dadd( 171.438, 113.288, -76.3824, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 57.8662, 106.856, -22.178, 0.29 ) }
    dend_7 { pt3dadd( 61.6471, 115.722, -24.8426, 0.29 ) }
    dend_7 { pt3dadd( 65.0179, 124.718, -27.6203, 0.29 ) }
    dend_7 { pt3dadd( 69.0291, 133.838, -28.4709, 0.29 ) }
    dend_7 { pt3dadd( 72.7952, 142.819, -30.7455, 0.29 ) }
    dend_7 { pt3dadd( 76.2951, 151.943, -32.8656, 0.29 ) }
    dend_7 { pt3dadd( 80.7669, 160.033, -36.681, 0.29 ) }
    dend_7 { pt3dadd( 84.9075, 168.072, -40.9504, 0.29 ) }
    dend_7 { pt3dadd( 88.8725, 175.829, -45.8603, 0.29 ) }
    dend_7 { pt3dadd( 91.33, 183.327, -52.0034, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 57.8662, 106.856, -22.178, 0.29 ) }
    dend_6 { pt3dadd( 62.1277, 115.352, -25.2853, 0.29 ) }
    dend_6 { pt3dadd( 66.4176, 123.811, -28.455, 0.29 ) }
    dend_6 { pt3dadd( 69.3244, 133.082, -30.8217, 0.29 ) }
    dend_6 { pt3dadd( 73.8425, 141.979, -31.4716, 0.29 ) }
    dend_6 { pt3dadd( 79.6824, 150.093, -31.2318, 0.29 ) }
    dend_6 { pt3dadd( 85.7241, 157.919, -29.7304, 0.29 ) }
    dend_6 { pt3dadd( 91.3648, 165.587, -26.6672, 0.29 ) }
    dend_6 { pt3dadd( 97.3066, 172.262, -22.1799, 0.29 ) }
    dend_6 { pt3dadd( 104.615, 176.956, -17.2235, 0.29 ) }
    dend_6 { pt3dadd( 112.178, 180.404, -11.6638, 0.29 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 48.0679, -118.221, -7.87209, 0.52 ) }
    dend_20 { pt3dadd( 53.5982, -126.552, -7.95684, 0.52 ) }
    dend_20 { pt3dadd( 57.9301, -135.515, -7.01058, 0.52 ) }
    dend_20 { pt3dadd( 63.8928, -143.53, -6.5501, 0.52 ) }
    dend_20 { pt3dadd( 69.1332, -152.024, -7.17621, 0.52 ) }
    dend_20 { pt3dadd( 73.0792, -161.206, -6.83228, 0.52 ) }
    dend_20 { pt3dadd( 77.3952, -170.138, -5.5695, 0.52 ) }
    dend_20 { pt3dadd( 82.2654, -178.803, -4.47782, 0.52 ) }
    dend_20 { pt3dadd( 86.691, -187.502, -2.30069, 0.52 ) }
    dend_20 { pt3dadd( 92.5433, -195.021, 0.735261, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 48.0679, -118.221, -7.87209, 0.44 ) }
    dend_19 { pt3dadd( 53.5521, -126.521, -8.88464, 0.52 ) }
    dend_19 { pt3dadd( 58.116, -135.398, -8.26853, 0.52 ) }
    dend_19 { pt3dadd( 64.135, -143.314, -7.21677, 0.52 ) }
    dend_19 { pt3dadd( 70.6449, -150.458, -4.65167, 0.52 ) }
    dend_19 { pt3dadd( 77.7724, -156.278, -0.736991, 0.52 ) }
    dend_19 { pt3dadd( 84.415, -160.89, 5.14601, 0.52 ) }
    dend_19 { pt3dadd( 92.0701, -164.627, 10.3841, 0.52 ) }
    dend_19 { pt3dadd( 99.2163, -168.708, 16.0651, 0.52 ) }
    dend_19 { pt3dadd( 106.37, -174.031, 20.5919, 0.52 ) }
    dend_19 { pt3dadd( 113.882, -179.796, 23.8083, 0.52 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_29, dend_22, dend_11, dend_0, dend_32, dend_31, dend_24, dend_23, dend_15, dend_12, dend_4, dend_1, dend_34, dend_33, dend_26, dend_25, dend_21, dend_16, dend_14, dend_13, dend_8, dend_5, dend_3, dend_2, dend_28, dend_27, dend_18, dend_17, dend_10, dend_9, dend_7, dend_6, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_29, dend_22, dend_11, dend_0, dend_32, dend_31, dend_24, dend_23, dend_15, dend_12, dend_4, dend_1, dend_34, dend_33, dend_26, dend_25, dend_21, dend_16, dend_14, dend_13, dend_8, dend_5, dend_3, dend_2, dend_28, dend_27, dend_18, dend_17, dend_10, dend_9, dend_7, dend_6, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_31 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_33 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_26 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_21 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_8 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_7 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_6 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_15 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_24 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_16 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_12 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_2 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_14 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_34 OneSecGrp_SectionRef_17.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 11
    dend_32 nseg = 3
    dend_31 nseg = 3
    dend_23 nseg = 3
    dend_33 nseg = 7
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_21 nseg = 9
    dend_13 nseg = 3
    dend_8 nseg = 5
    dend_5 nseg = 5
    dend_28 nseg = 17
    dend_27 nseg = 7
    dend_18 nseg = 3
    dend_17 nseg = 9
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_7 nseg = 5
    dend_6 nseg = 5
    dend_20 nseg = 5
    dend_19 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_MC_5597e4d536_0_0


