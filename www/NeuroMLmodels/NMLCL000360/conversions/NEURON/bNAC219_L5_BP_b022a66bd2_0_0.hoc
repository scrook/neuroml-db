// Cell: bNAC219_L5_BP_b022a66bd2_0_0
/*
{
  "id" : "bNAC219_L5_BP_b022a66bd2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.11512, 8.3137, 2.84795, 0.83", "-5.9994, 10.5493, 3.28294, 1.11", "-7.69999, 11.8665, 3.50921, 0.83", "-9.35218, 13.1351, 3.71195, 0.83", "-10.3304, 13.8585, 3.82304, 1.11", "-13.3938, 16.119, 4.1791, 1.11", "-18.8728, 19.9891, 4.80851, 0.83", "-20.8468, 21.3302, 5.01636, 0.83", "-22.4099, 22.3607, 5.14546, 0.83", "-23.9342, 23.3819, 5.25721, 0.83", "-25.175, 24.2236, 5.31751, 0.55", "-26.1076, 24.7935, 5.3787, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.95434, 6.39222, -6.32788, 0.55", "8.13668, 7.08063, -7.03855, 0.55", "9.98328, 7.25441, -7.97893, 0.83", "12.9058, 7.43934, -9.72573, 0.55", "14.3166, 7.52862, -10.5689, 1.38", "17.7854, 7.74811, -12.6422, 0.55", "19.2628, 7.67379, -13.6314, 0.83", "26.9052, 6.31064, -19.1897, 0.55", "27.6445, 6.12733, -19.8012, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.689681, -10.9776, 3.40837, 1.11", "-0.748577, -16.174, 5.27129, 1.11", "-0.772564, -18.2903, 6.02998, 0.83", "-0.80443, -21.102, 7.03795, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "1.01816, 10.6616, -1.43506, 1.11", "1.2323, 13.3615, -1.42458, 1.11", "1.59112, 17.7659, -1.2461, 1.38", "1.6159, 18.0111, -1.23235, 1.38", "2.10811, 21.037, -1.05556, 0.83", "2.78032, 24.2307, -0.715184, 0.83", "3.90407, 27.8222, 0.0643216, 0.83", "4.52139, 29.177, 0.50582, 0.83", "5.11425, 30.1525, 0.907773, 1.11", "6.81023, 32.5191, 1.92173, 0.55", "8.77841, 34.9814, 3.13875, 0.83", "11.2985, 37.4954, 4.47885, 0.55", "12.5629, 38.5314, 5.06852, 0.83", "14.3454, 39.9316, 6.014, 0.55", "16.5738, 41.7138, 7.31986, 0.55", "19.7216, 44.4034, 9.35146, 0.55", "23.1952, 47.4826, 11.5957, 0.55", "25.4308, 49.481, 13.3219, 0.55", "28.2242, 52.0085, 15.8091, 0.55", "28.8114, 52.5142, 16.3796, 0.83", "30.3778, 53.8499, 18.0013, 0.55", "31.6791, 54.8881, 19.2641, 0.83", "34.705, 57.7454, 22.2699, 0.55", "35.8047, 58.7896, 23.1185, 0.83", "36.7921, 59.5528, 23.6598, 0.55", "37.7477, 60.206, 24.0472, 0.83", "39.8298, 61.4092, 24.6993, 0.83", "42.5536, 63.0519, 25.3325, 0.83", "44.2039, 64.144, 25.5506, 0.55", "45.4674, 65.0951, 25.7239, 0.55", "48.7716, 67.5512, 26.1308, 0.83", "50.8938, 69.1263, 26.3114, 0.55", "54.095, 71.4305, 26.46, 0.55", "57.0054, 73.354, 26.4827, 0.55", "59.5957, 74.979, 26.4348, 0.55", "62.8428, 76.8752, 26.2292, 0.55", "64.8097, 77.7904, 26.0398, 0.55", "66.1248, 78.2974, 25.7519, 0.55", "67.839, 78.6496, 25.2207, 0.55", "70.3511, 78.7489, 24.2131, 0.55", "71.9011, 78.6034, 23.5216, 0.55", "74.1879, 78.3245, 22.6774, 0.55", "78.608, 77.9354, 21.4739, 0.55", "82.1187, 77.7935, 20.7827, 0.55", "85.8787, 77.8221, 20.275, 0.55", "88.3202, 77.9222, 20.1401, 0.55", "94.7433, 78.7513, 20.2036, 0.55", "98.5944, 79.5276, 20.5212, 0.55", "101.527, 80.2917, 21.0204, 0.55", "103.328, 81.0387, 21.3902, 0.55", "105.423, 82.1714, 21.8101, 0.55", "108.939, 84.4285, 22.2254, 0.55", "109.731, 84.9743, 22.2153, 0.55", "111.979, 86.4291, 22.042, 0.55", "114.051, 87.9907, 21.8758, 0.83", "115.18, 88.8577, 21.7678, 0.55", "116.868, 90.3551, 21.5415, 0.83", "126.091, 98.3395, 22.6278, 0.83", "134.105, 107.594, 22.9842, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-26.1076, 24.7935, 5.3787, 0.55", "-28.5262, 25.5726, 4.55824, 0.55", "-31.1561, 26.4197, 3.66607, 0.55", "-34.3299, 27.4421, 2.58941, 0.55", "-36.9505, 28.2863, 1.70038, 0.83", "-39.1467, 28.9937, 0.955381, 0.55", "-43.2229, 30.3067, -0.427451, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-26.1076, 24.7935, 5.3787, 0.55", "-27.4462, 25.1189, 5.07431, 0.55", "-28.8908, 25.3991, 4.88732, 0.55", "-30.5344, 25.7084, 4.71479, 0.55", "-32.9449, 26.0991, 4.67855, 0.55", "-34.9822, 26.3477, 4.78083, 0.55", "-37.1316, 26.5633, 4.97236, 0.55", "-39.2412, 26.6032, 5.35483, 0.55", "-41.0829, 26.4431, 5.82763, 0.55", "-43.412, 26.0576, 6.62696, 0.55", "-44.4437, 25.8015, 7.09591, 0.55", "-45.5643, 25.5076, 7.64484, 0.55", "-47.5322, 24.864, 8.51169, 0.55", "-48.5589, 24.5461, 8.82283, 0.55", "-49.6341, 24.1831, 9.13838, 0.55", "-50.8961, 23.784, 9.39508, 0.55", "-52.2623, 23.3825, 9.64254, 0.55", "-54.2067, 22.8106, 9.95477, 0.55", "-56.7709, 22.2446, 10.1744, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.6445, 6.12733, -19.8012, 0.55", "32.4024, 7.97088, -20.9667, 0.55", "35.1949, 8.7937, -22.0012, 0.55", "37.973, 9.47472, -23.0378, 0.55", "39.8829, 9.86521, -23.7304, 0.55", "42.6832, 10.3764, -24.7085, 0.55", "48.5207, 11.2922, -26.8952, 0.55", "55.1762, 12.2063, -29.8029, 0.55", "58.448, 12.4116, -31.3928, 0.55", "60.2136, 12.4588, -32.3474, 0.55", "62.1528, 12.5049, -33.4713, 0.55", "65.6269, 12.498, -35.4456, 0.55", "66.9021, 12.4177, -36.1887, 0.55", "72.3049, 12.1278, -39.754, 0.55", "76.1364, 11.9282, -42.5568, 0.55", "78.3395, 11.8422, -44.2357, 0.55", "80.5396, 11.7387, -45.9051, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "27.6445, 6.12733, -19.8012, 0.83", "30.0196, 7.63107, -19.8405, 0.83", "31.3775, 8.48896, -19.9259, 0.55", "33.3766, 9.79534, -20.2243, 0.83", "34.7205, 10.7084, -20.4665, 0.55", "36.5731, 12.018, -20.7731, 0.83", "38.7999, 13.6375, -21.0586, 0.55", "39.9211, 14.3687, -21.1545, 0.55", "42.5051, 15.6967, -21.1883, 0.83", "44.853, 16.618, -20.9079, 0.55", "46.1649, 17.1201, -20.6236, 0.83", "48.1314, 17.9187, -19.9873, 0.55", "50.953, 19.1195, -18.7067, 0.55", "54.8727, 20.5833, -16.7224, 0.55", "58.6103, 21.8447, -14.5665, 0.55", "61.5715, 22.8124, -12.8041, 0.55", "66.4529, 24.431, -9.87283, 0.55", "70.0222, 25.72, -7.64894, 0.55", "72.1739, 26.6823, -6.2267, 0.55", "76.1296, 28.8681, -3.57251, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.80443, -21.102, 7.03795, 0.83", "-1.09774, -24.2568, 6.91273, 0.83", "-1.38351, -27.3304, 6.79073, 0.83", "-1.70256, -30.7622, 6.65452, 0.83", "-1.86917, -32.5542, 6.5834, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.80443, -21.102, 7.03795, 0.55", "-0.362719, -22.5705, 8.18862, 0.55", "-0.0180871, -24.3806, 9.64385, 0.55", "0.0516518, -26.777, 11.5801, 0.55", "0.00912846, -27.7128, 12.346, 0.83", "-0.366257, -30.1148, 14.5323, 0.55", "-0.664782, -31.3619, 15.6665, 0.55", "-1.31421, -33.7903, 17.9641, 0.83", "-1.91904, -35.6001, 19.7642, 0.55", "-2.54357, -37.1015, 21.2029, 0.55", "-3.77944, -39.9494, 23.8662, 0.55", "-4.75749, -42.2192, 25.9633, 0.55", "-5.51024, -44.0364, 27.6759, 0.55", "-6.19531, -45.959, 29.4537, 0.28", "-6.4095, -46.7555, 30.1761, 0.55", "-6.75267, -48.2244, 31.4351, 0.28", "-6.91806, -50.4977, 33.1059, 0.55", "-9.34578, -58.1796, 38.7425, 0.55", "-12.1129, -65.2979, 44.9353, 0.55", "-14.7461, -71.1396, 52.3931, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-43.2229, 30.3067, -0.427451, 0.55", "-44.4704, 31.7309, 1.396, 0.55", "-44.9143, 32.3743, 2.25763, 0.83", "-45.3341, 33.1896, 3.37823, 0.55", "-45.6124, 33.8672, 4.27603, 0.83", "-46.3773, 35.687, 6.56658, 0.55", "-46.6676, 36.391, 7.42811, 0.28", "-47.0904, 37.6595, 8.91616, 0.55", "-47.666, 39.3635, 10.9009, 0.55", "-48.1399, 40.6115, 12.3734, 0.55", "-48.807, 42.2355, 14.3089, 0.28", "-49.015, 42.6181, 14.7782, 0.55", "-49.4711, 43.3916, 15.7212, 0.28", "-49.8231, 43.8842, 16.3154, 0.55", "-50.6078, 44.7955, 17.4708, 0.28", "-51.0784, 45.266, 18.1567, 0.55", "-51.8682, 46.0255, 19.444, 0.28", "-52.4161, 46.5064, 20.2949, 0.55", "-54.1019, 50.9688, 27.1937, 0.55", "-54.9116, 55.0389, 34.4827, 0.55", "-55.3342, 58.4793, 42.1204, 0.55", "-55.6699, 60.9457, 50.1301, 0.55", "-54.8876, 64.1042, 57.8606, 0.55", "-54.8609, 67.3701, 65.5861, 0.55", "-55.1441, 71.8418, 72.6765, 0.55", "-55.2823, 75.7453, 80.099, 0.55", "-55.3271, 80.1879, 87.2132, 0.55", "-54.9002, 84.6398, 94.3088, 0.55", "-53.4226, 88.4249, 101.646, 0.55", "-52.1441, 92.8916, 108.629, 0.55", "-50.8605, 96.5885, 116.048, 0.55", "-48.5236, 100.084, 123.305, 0.55", "-44.9332, 104.131, 129.715, 0.55", "-41.1586, 106.687, 136.755, 0.55", "-36.351, 108.961, 143.241, 0.55", "-31.9259, 111.657, 149.837, 0.55", "-28.3284, 115.021, 156.626, 0.55", "-26.586, 119.51, 163.493, 0.55", "-23.9806, 123.227, 170.546, 0.55", "-20.1724, 128.118, 176.196, 0.55", "-17.7243, 133.544, 182.105, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-43.2229, 30.3067, -0.427451, 0.55", "-45.3509, 30.302, -1.92193, 0.55", "-47.1885, 30.3017, -3.74525, 0.55", "-49.0019, 30.4394, -5.76549, 0.55", "-50.1374, 30.5256, -7.03055, 0.55", "-52.2087, 30.6828, -9.33815, 0.83", "-53.724, 30.7979, -11.0264, 0.55", "-55.6391, 30.8918, -13.5699, 0.83", "-56.5221, 31.0722, -15.1035, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-56.7709, 22.2446, 10.1744, 0.28", "-58.0521, 20.0566, 9.09347, 0.28", "-58.6541, 19.1349, 8.53581, 0.28", "-59.4281, 17.8385, 7.70554, 0.55", "-60.0661, 16.6946, 6.99254, 0.28", "-61.0093, 14.9459, 5.93469, 0.55", "-63.6397, 9.78147, 2.93805, 0.28", "-64.4747, 7.99693, 1.74178, 0.55", "-65.7249, 5.26698, -0.198332, 0.28", "-66.4299, 3.64798, -1.43478, 0.55", "-66.9131, 2.53799, -2.31675, 0.28", "-67.4649, 1.2616, -3.31685, 0.55", "-69.1292, -3.02928, -6.51109, 0.28", "-69.6481, -4.31658, -7.53092, 0.55", "-70.5395, -6.2359, -9.3343, 0.28", "-71.2801, -7.43267, -10.6379, 0.28", "-71.9625, -8.21571, -11.5719, 0.55", "-74.3977, -10.401, -14.1964, 0.28", "-75.5439, -11.2819, -15.2601, 0.55", "-78.3396, -13.2483, -17.8646, 0.28", "-81.1509, -14.9606, -20.2745, 0.28", "-84.217, -16.553, -22.7402, 0.28", "-85.6349, -17.1377, -23.7171, 0.55", "-92.3759, -24.5992, -30.653, 0.55", "-100.223, -32.5773, -35.5506, 0.55", "-107.661, -39.7502, -42.0659, 0.55", "-115.15, -45.9731, -49.4426, 0.55", "-122.588, -51.133, -57.6446, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-56.7709, 22.2446, 10.1744, 0.55", "-57.5458, 22.1985, 10.1667, 0.55", "-59.7689, 22.0323, 10.4213, 0.55", "-60.6107, 21.9432, 10.5567, 0.55", "-62.5956, 21.6721, 10.8958, 0.55", "-65.6284, 21.3045, 11.2815, 0.55", "-67.1997, 21.1638, 11.4619, 0.28", "-69.6399, 20.8999, 11.6895, 0.55", "-71.4445, 20.6768, 11.7908, 0.55", "-72.2069, 20.5774, 11.8345, 0.28", "-76.7792, 19.98, 12.0904, 0.55", "-78.9016, 19.6227, 12.0706, 0.28", "-81.7423, 19.153, 11.8796, 0.28", "-84.1714, 18.8029, 11.58, 0.55", "-93.8918, 18.5309, 12.6352, 0.55", "-103.43, 17.8635, 14.6933, 0.55", "-112.593, 16.0622, 17.6031, 0.55", "-121.56, 15.7731, 21.4998, 0.55", "-129.538, 14.8902, 27.0898, 0.55", "-136.267, 14.3087, 34.1649, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "80.5396, 11.7387, -45.9051, 0.55", "85.1905, 13.1844, -49.7921, 0.55", "86.6707, 13.5642, -51.1051, 0.55", "88.5291, 13.9816, -52.718, 0.55", "91.9113, 14.6831, -55.8388, 0.55", "95.4598, 15.2588, -59.1632, 0.55", "97.208, 15.4082, -60.7263, 0.83", "98.6611, 15.4191, -62.1069, 0.55", "99.7611, 15.3251, -63.2348, 0.83", "102.457, 14.7155, -66.0823, 0.55", "104.698, 14.0137, -68.4146, 0.55", "107.273, 13.2059, -70.9747, 0.55", "110.134, 12.3771, -73.8911, 0.55", "112.059, 11.7721, -75.8866, 0.55", "114.233, 11.0744, -78.2025, 0.55", "116.11, 10.5179, -80.3366, 0.55", "117.285, 10.2504, -81.8419, 0.55", "118.82, 9.68387, -84.8979, 0.55", "119.675, 9.25714, -86.8031, 0.55", "120.465, 8.54013, -89.3264, 0.55", "121.604, 7.17419, -93.5775, 0.55", "121.846, 6.82711, -94.5311, 0.28", "124.939, 2.48866, -106.103, 0.28", "125.95, 1.25054, -109.501, 0.83", "129.874, -3.32977, -121.512, 0.83", "131.877, -5.67244, -127.054, 0.83", "132.821, -6.7036, -129.281, 0.55", "133.878, -7.70464, -131.447, 0.55", "136.667, -9.57462, -135.425, 0.55", "139.599, -11.2065, -138.901, 0.28", "140.437, -11.4138, -139.062, 0.55", "142.247, -11.6597, -138.799, 0.28", "143.354, -11.7124, -138.489, 0.55", "144.505, -11.7693, -138.066, 0.28", "145.877, -11.7605, -137.504, 0.55", "147.928, -11.669, -136.899, 0.28", "149.581, -11.6535, -136.459, 0.55", "151.404, -11.5353, -136.135, 0.28", "153.889, -11.3964, -135.915, 0.55", "156.675, -11.1993, -135.845, 0.55", "159.129, -11.0191, -135.95, 0.28", "162.528, -10.7644, -136.286, 0.55", "168.41, -10.2479, -137.511, 0.55", "171.007, -9.92882, -138.383, 0.55", "172.122, -9.76192, -138.884, 0.83", "174.253, -9.45536, -140.034, 0.55", "175.729, -9.19577, -140.932, 0.83", "179.691, -8.39958, -143.409, 0.55", "182.13, -8.088, -144.961, 0.28", "183.159, -8.00432, -145.491, 0.55", "185.993, -7.98997, -146.597, 0.28", "186.993, -8.06553, -146.908, 0.55", "189.055, -8.30435, -147.221, 0.28", "191.161, -8.69685, -147.157, 0.55", "195.411, -9.61098, -146.274, 0.28", "197.372, -10.0883, -145.651, 0.55", "200.3, -10.9393, -144.552, 0.28", "203.992, -11.9828, -143.037, 0.55", "206.657, -12.6965, -141.905, 0.55", "211.257, -13.7828, -139.891, 0.28", "213.141, -14.1647, -139.227, 0.55", "216.384, -14.6907, -138.457, 0.28", "219.599, -15.0044, -137.944, 0.55", "221.351, -15.0142, -137.932, 0.28", "222.917, -14.8303, -138.073, 0.55", "227.325, -14.1062, -138.926, 0.28", "230.453, -13.3785, -139.617, 0.28", "233.153, -12.5521, -140.286, 0.55", "236.131, -11.5767, -141.191, 0.28", "236.876, -11.2797, -141.4, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "80.5396, 11.7387, -45.9051, 0.55", "81.4601, 9.72845, -46.8054, 0.55", "82.0898, 8.01653, -47.455, 0.28", "82.6584, 6.46822, -47.9232, 0.55", "84.0258, 3.21375, -48.9433, 0.28", "84.108, 3.00337, -49.0356, 0.55", "84.5712, 1.89327, -49.6041, 0.28", "84.8834, 0.937512, -50.2119, 0.55", "85.1638, -0.0867344, -50.9497, 0.28", "85.5138, -1.50001, -52.0134, 0.55", "86.3873, -5.03989, -54.626, 0.55", "87.1542, -8.28066, -57.0577, 0.55", "87.7452, -10.8758, -59.0047, 0.55", "88.284, -13.4285, -60.8796, 0.55", "88.4202, -14.0846, -61.3398, 0.28", "88.5801, -14.7738, -61.7802, 0.55", "88.8757, -15.7005, -62.3112, 0.28", "89.5503, -17.3097, -63.1227, 0.55", "91.0624, -20.2698, -64.2162, 0.55", "91.8818, -21.8367, -64.6652, 0.28", "92.628, -23.4585, -65.1915, 0.55", "93.5176, -25.7745, -66.0137, 0.28", "94.1251, -27.6725, -66.7204, 0.55", "94.9215, -30.5332, -67.7837, 0.28", "95.7608, -33.4756, -68.7985, 0.55", "96.9289, -37.7637, -70.3077, 0.28", "97.506, -40.0596, -71.1197, 0.55", "98.064, -42.4232, -72.0022, 0.28", "98.5417, -44.5276, -72.8985, 0.28", "99.2316, -47.1777, -74.2249, 0.55", "100.021, -49.5957, -75.397, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "76.1296, 28.8681, -3.57251, 0.55", "78.257, 28.6104, -3.09694, 0.55", "79.8074, 28.3606, -2.8982, 0.55", "83.2014, 27.7721, -2.64143, 0.55", "84.7273, 27.4738, -2.66265, 0.55", "86.3925, 27.1829, -2.77145, 0.55", "88.6282, 26.83, -3.07755, 0.55", "90.9856, 26.3917, -3.62537, 0.55", "92.2223, 26.1436, -4.05531, 0.55", "94.7341, 25.6341, -5.27548, 0.55", "95.8908, 25.4086, -5.87471, 0.55", "98.6005, 24.8269, -7.34941, 0.55", "100.436, 24.3579, -8.33222, 0.55", "101.786, 24.0049, -8.99309, 0.83", "103.944, 23.3595, -10.0235, 0.55", "106.056, 22.6231, -10.9483, 0.83", "107.848, 21.915, -11.6674, 0.55", "109.444, 21.3097, -12.2225, 0.55", "110.352, 21.0066, -12.4876, 0.83", "112.473, 20.3072, -12.9928, 0.28", "113.529, 20.0047, -13.1763, 0.28", "114.55, 19.6453, -13.407, 0.28", "115.653, 19.2869, -13.6616, 0.28", "117.419, 18.7467, -14.1064, 0.28", "118.13, 18.5385, -14.264, 0.55", "119.831, 18.0605, -14.472, 0.55", "122.894, 17.1719, -14.6897, 0.55", "123.742, 16.9036, -14.7121, 0.55", "124.499, 16.6393, -14.699, 0.83", "126.146, 16.1184, -14.5363, 0.55", "127.577, 15.6687, -14.3716, 0.55", "128.93, 15.2498, -14.2096, 0.55", "129.977, 14.9063, -14.1142, 0.55", "131.635, 14.2429, -14.0446, 0.55", "133.586, 13.284, -14.0718, 0.55", "136.61, 11.4423, -14.3296, 0.55", "138.265, 10.1788, -14.5785, 0.55", "139.694, 8.82962, -14.8678, 0.28", "140.119, 8.32982, -14.9796, 0.55", "141.05, 6.92837, -15.277, 0.28", "141.844, 5.35522, -15.5767, 0.55", "142.581, 3.39244, -15.7933, 0.55", "143.08, 2.10334, -15.8748, 0.28", "143.264, 1.64829, -15.8816, 0.55", "143.74, 0.51835, -15.883, 0.28", "144.393, -0.950909, -15.8497, 0.55", "146.102, -4.48851, -15.6829, 0.55", "146.994, -6.27041, -15.5618, 0.55", "147.823, -7.90312, -15.4363, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "76.1296, 28.8681, -3.57251, 0.55", "77.4379, 29.479, -2.38674, 0.55", "77.8613, 29.6656, -2.0307, 0.55", "79.4535, 30.2575, -0.752353, 0.55", "81.2253, 30.9642, 0.691518, 0.55", "83.4866, 31.8837, 2.60763, 0.55", "84.1118, 32.1372, 3.13222, 0.55", "85.2374, 32.5419, 4.07536, 0.55", "86.4776, 33.0012, 5.05085, 0.55", "87.9281, 33.5574, 6.10396, 0.55", "89.2934, 34.1037, 7.09543, 0.55", "90.0464, 34.4285, 7.59225, 0.55", "90.9295, 34.8363, 8.16603, 0.55", "92.0237, 35.3679, 8.84549, 0.83", "93.846, 36.1756, 9.76416, 0.55", "95.0638, 36.6431, 10.3276, 0.83", "96.767, 37.1947, 11.0742, 0.55", "97.2925, 37.3327, 11.3044, 0.55", "98.9315, 37.6686, 12.0087, 0.55", "101.89, 38.0556, 13.2043, 0.55", "104.069, 38.2038, 14.0659, 0.55", "105.791, 38.2533, 14.8113, 0.55", "107.542, 38.2296, 15.6574, 0.55", "107.911, 38.2153, 15.8401, 0.28", "108.659, 38.1557, 16.2176, 0.83", "111.733, 37.8718, 17.7986, 0.55", "113.889, 37.6634, 18.8625, 0.55", "115.65, 37.5501, 19.7667, 0.55", "116.701, 37.4823, 20.3178, 0.83", "117.527, 37.4413, 20.7497, 0.28", "118.278, 37.4033, 21.1341, 0.55", "123.942, 38.7876, 24.5506, 0.55", "130.167, 38.8803, 27.1778, 0.55", "136.288, 39.8439, 29.8732, 0.55", "141.571, 40.243, 34.0683, 0.55", "146.449, 39.8272, 38.727, 0.55", "152.11, 37.9993, 41.9316, 0.55", "157.848, 35.2542, 44.2147, 0.55", "164.18, 33.5711, 45.869, 0.55", "170.385, 31.9106, 47.969, 0.55", "176.88, 30.8464, 49.4985, 0.55", "183.222, 30.3047, 51.7687, 0.55", "189.144, 28.741, 54.6248, 0.55", "195.097, 28.5046, 57.8126, 0.55", "200.621, 29.4594, 61.5863, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.86917, -32.5542, 6.5834, 1.38", "-0.395999, -34.1055, 6.2134, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.86917, -32.5542, 6.5834, 0.55", "-3.66112, -34.7793, 6.46262, 0.55", "-5.63785, -37.6302, 6.33093, 0.55", "-7.18246, -39.5189, 6.24565, 0.55", "-8.46451, -41.0981, 5.96292, 0.55", "-11.2378, -44.3704, 5.06761, 0.55", "-13.1787, -46.5563, 4.38224, 0.55", "-14.8977, -48.5162, 3.70342, 0.55", "-19.3179, -53.288, 1.96351, 0.55", "-24.6359, -58.8141, -0.0823379, 0.55", "-28.7484, -63.0002, -1.74292, 0.55", "-31.3683, -65.7486, -2.84318, 0.55", "-34.3734, -69.0453, -4.09567, 0.55", "-38.1839, -73.7704, -5.63046, 0.55", "-40.4108, -77.1199, -6.47749, 0.55", "-43.1737, -81.935, -7.26391, 0.55", "-45.3776, -86.4449, -7.79768, 0.55", "-47.5967, -92.0703, -8.29567, 0.55", "-49.6834, -98.6722, -8.66834, 0.55", "-50.7987, -103.716, -8.78517, 0.55", "-51.1998, -106.225, -8.66384, 0.55", "-51.8214, -112.117, -8.02522, 0.55", "-52.319, -117.63, -7.27481, 0.55", "-52.5755, -123.18, -6.08266, 0.55", "-52.7723, -126.365, -5.22909, 0.55", "-53.3553, -136.209, -2.22432, 0.55", "-53.4042, -136.934, -1.99089, 0.55", "-53.631, -141.372, -0.444976, 0.55", "-54.4228, -149.31, 2.46932, 0.55", "-54.688, -151.965, 3.28547, 0.55", "-55.1369, -156.118, 3.84375, 0.55", "-55.2305, -157.661, 3.70408, 0.55", "-55.2247, -162.887, 2.27889, 0.55", "-54.9657, -166.273, 0.665163, 0.55", "-54.3028, -171.669, -2.97936, 0.55", "-53.1779, -178.27, -7.91918, 0.28", "-52.8535, -179.903, -9.35689, 0.55", "-52.3329, -182.378, -11.7523, 0.28", "-52.256, -182.751, -12.1333, 0.55", "-51.8642, -184.794, -14.047, 0.28", "-51.7934, -185.487, -14.5428, 0.55", "-51.5724, -189.091, -16.4368, 0.28", "-51.5458, -190.317, -17.0704, 0.55", "-51.5321, -193.863, -18.7067, 0.28", "-51.5232, -194.979, -19.2172, 0.55", "-51.5299, -198.831, -20.9196, 0.28", "-51.5229, -200.603, -21.7109, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.7461, -71.1396, 52.3931, 0.55", "-19.9962, -80.7369, 58.5932, 0.55", "-26.7131, -89.6922, 64.3201, 0.55", "-32.6417, -99.3077, 69.8432, 0.55", "-38.6367, -109.029, 75.1022, 0.55", "-42.7308, -119.652, 80.4413, 0.55", "-47.1414, -129.865, 86.3019, 0.55", "-48.6212, -141.434, 91.0019, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.7461, -71.1396, 52.3931, 0.55", "-15.3492, -80.0614, 61.7914, 0.55", "-14.5434, -90.2753, 69.7487, 0.55", "-15.6132, -101.011, 76.9517, 0.55", "-16.8237, -112.512, 82.8304, 0.55", "-17.6353, -123.856, 89.0707, 0.55", "-18.7323, -134.725, 96.0666, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-56.5221, 31.0722, -15.1035, 0.83", "-56.7576, 31.8911, -16.8241, 0.83", "-57.3481, 33.9403, -20.7263, 0.55", "-57.5751, 34.8604, -22.3048, 0.83", "-57.7899, 35.8768, -23.9026, 0.55", "-57.9625, 36.9901, -25.3494, 0.55", "-58.0213, 37.5806, -25.988, 0.28", "-58.0613, 38.0093, -26.2865, 0.55", "-58.0647, 39.5571, -26.9692, 0.28", "-58.041, 40.2319, -27.2331, 0.55", "-57.964, 42.607, -28.0495, 0.28", "-57.9357, 44.5061, -28.6213, 0.55", "-58.0085, 47.4902, -29.3859, 0.28", "-58.1499, 50.1219, -29.9841, 0.28", "-58.3048, 51.5971, -30.2676, 0.55", "-58.5924, 53.3373, -30.5721, 0.28", "-58.7799, 54.1667, -30.6907, 0.55", "-59.346, 56.08, -31.0219, 0.28", "-59.824, 57.3257, -31.2817, 0.28", "-60.3292, 58.5342, -31.5658, 0.28", "-60.5718, 59.1742, -31.7258, 0.55", "-61.4269, 61.7567, -32.4759, 0.28", "-62.3502, 64.8068, -33.4515, 0.55", "-62.6543, 65.8604, -33.7972, 0.55", "-62.9706, 66.9226, -34.116, 0.55", "-63.774, 69.1549, -34.7933, 0.55", "-64.4068, 70.5996, -35.2406, 0.28", "-64.7145, 71.1371, -35.3976, 0.55", "-65.6482, 72.5918, -35.758, 0.28", "-66.726, 74.1117, -36.1851, 0.55", "-68.5192, 76.2428, -36.8229, 0.28", "-69.3828, 77.1101, -37.0881, 0.28", "-70.7948, 78.2514, -37.538, 0.55", "-72.3805, 79.4048, -38.0517, 0.28", "-72.666, 79.5784, -38.1331, 0.55", "-73.6849, 80.111, -38.3912, 0.28", "-77.1674, 81.7878, -39.1706, 0.55", "-82.0153, 83.7058, -40.2872, 0.28", "-82.9181, 83.9969, -40.5218, 0.55", "-85.3978, 84.7042, -41.1739, 0.28", "-86.444, 84.9812, -41.4667, 0.28", "-87.3611, 85.1904, -41.7499, 0.55", "-90.0636, 85.4799, -42.6589, 0.28", "-91.9395, 85.5445, -43.1895, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-56.5221, 31.0722, -15.1035, 0.55", "-56.9333, 32.3313, -15.4757, 0.55", "-57.1819, 33.0877, -15.6194, 0.28", "-57.4442, 33.6443, -15.5637, 0.55", "-58.0465, 34.9223, -15.4359, 0.28", "-58.4695, 35.82, -15.3461, 0.55", "-59.2494, 37.475, -15.1805, 0.28", "-59.7272, 38.384, -14.9199, 0.55", "-61.3486, 40.6305, -13.4217, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-122.588, -51.133, -57.6446, 0.55", "-128.531, -58.5032, -62.7182, 0.55", "-132.729, -66.7113, -68.2306, 0.55", "-135.626, -74.0091, -75.5611, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-122.588, -51.133, -57.6446, 0.55", "-128.045, -56.1482, -64.2531, 0.55", "-132.379, -60.9648, -71.7774, 0.55", "-136.293, -65.8739, -79.4702, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-136.267, 14.3087, 34.1649, 0.55", "-145.132, 14.0543, 38.7182, 0.55", "-154.355, 15.1081, 42.3529, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-136.267, 14.3087, 34.1649, 0.55", "-147.99, 12.7978, 36.1903, 0.55", "-159.687, 13.1808, 38.8063, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "100.021, -49.5957, -75.397, 0.28", "109.521, -56.6376, -86.9228, 0.28", "110.48, -57.3357, -87.9103, 0.55", "112.099, -58.5144, -89.5777, 0.28", "113.462, -59.5068, -90.9815, 0.28", "115.267, -60.8205, -92.8399, 0.55", "117.646, -62.5526, -95.29, 0.55", "120.903, -64.2717, -96.0928, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "100.021, -49.5957, -75.397, 0.55", "101.28, -51.2998, -76.7084, 0.55", "101.709, -52.0857, -77.2976, 0.28", "102.378, -53.448, -78.338, 0.55", "103.854, -56.4493, -80.6299, 0.28", "104.876, -58.5292, -82.2183, 0.55", "106.609, -62.0531, -84.9094, 0.28", "108.635, -66.4283, -88.5223, 0.28", "109.49, -68.459, -90.2253, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "147.823, -7.90312, -15.4363, 0.28", "149.907, -10.1995, -13.9746, 0.28", "152.543, -13.1459, -11.7469, 0.28", "154.21, -15.0304, -10.2069, 0.55", "155.215, -16.0443, -9.29248, 0.28", "155.749, -16.5884, -8.79345, 0.28", "158.397, -19.2917, -6.38307, 0.55", "159.006, -19.8585, -5.74686, 0.28", "160.447, -21.319, -3.93457, 0.55", "161.678, -22.6145, -2.43231, 0.28", "162.751, -23.672, -1.23805, 0.55", "164.011, -24.9741, 0.0834186, 0.55", "166.018, -27.1556, 1.84097, 0.55", "166.502, -27.6996, 2.24813, 0.55", "168.236, -29.7451, 3.74005, 0.28", "168.908, -30.5924, 4.32255, 0.55", "169.845, -31.6706, 5.0626, 0.28", "171.169, -33.2299, 6.02932, 0.55", "173.364, -35.8204, 7.13423, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "147.823, -7.90312, -15.4363, 0.55", "145.563, -7.9399, -15.4865, 0.55", "143.729, -7.96976, -15.5273, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.395999, -34.1055, 6.2134, 0.83", "-0.305606, -34.2796, 6.20881, 0.83", "0.714604, -35.8139, 6.29277, 0.83", "1.6195, -37.1574, 6.275, 0.55", "2.34142, -38.2292, 6.26083, 0.55", "3.87589, -40.5074, 6.23069, 0.83", "5.73709, -43.2706, 6.19414, 0.55", "6.74677, -44.7158, 6.20898, 0.83", "8.51407, -47.0101, 6.35837, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.395999, -34.1055, 6.2134, 0.55", "-0.799316, -34.9913, 3.60999, 0.55", "-1.23223, -35.9422, 0.815562, 0.55", "-1.74329, -37.0647, -2.48329, 0.55", "-2.36387, -38.4278, -6.48917, 0.55", "-2.71604, -39.2013, -8.76237, 0.55", "-2.78678, -39.3567, -9.21902, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.7323, -134.725, 96.0666, 0.55", "-19.1242, -144.438, 103.448, 0.55", "-17.5079, -154.525, 110.129, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.7323, -134.725, 96.0666, 0.55", "-19.5331, -144.105, 101.568, 0.55", "-20.9126, -153.319, 107.234, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-61.3486, 40.6305, -13.4217, 0.28", "-63.0349, 42.3234, -11.4993, 0.28", "-63.6617, 42.9703, -10.682, 0.55", "-65.4496, 44.8515, -8.26974, 0.28", "-66.3503, 45.7769, -7.18751, 0.55", "-68.8221, 48.2717, -4.36214, 0.28", "-71.3344, 50.8074, -1.49052, 0.55", "-75.449, 54.7548, 3.31832, 0.28", "-76.3261, 55.6038, 4.34292, 0.55", "-78.2846, 57.6044, 6.50872, 0.28", "-79.0553, 58.4404, 7.35644, 0.55", "-87.3714, 63.4726, 14.9039, 0.55", "-96.9691, 69.4948, 19.7062, 0.55", "-105.234, 76.1481, 25.9402, 0.55", "-112.186, 84.5186, 31.6884, 0.55", "-120.383, 92.1604, 36.7748, 0.55", "-129.17, 97.8655, 43.2301, 0.55", "-136.873, 102.893, 51.4053, 0.55", "-143.126, 107.009, 61.173, 0.55", "-149.547, 111.784, 70.5223, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-61.3486, 40.6305, -13.4217, 0.55", "-63.6266, 39.2699, -12.4248, 0.55", "-64.8019, 38.5199, -11.9108, 0.28", "-65.6764, 37.9617, -11.5284, 0.55", "-66.4053, 37.4965, -11.2097, 0.28", "-66.9159, 37.1706, -10.9864, 0.55", "-68.3237, 36.2721, -10.3708, 0.28", "-69.2435, 35.5919, -10.0977, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-135.626, -74.0091, -75.5611, 0.55", "-139.319, -82.0182, -79.8496, 0.55", "-142.886, -90.5337, -83.1553, 0.55", "-145.609, -98.5716, -88.0695, 0.55", "-149.398, -106.823, -91.7744, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-135.626, -74.0091, -75.5611, 0.55", "-138.378, -76.8795, -82.2152, 0.55", "-140.617, -78.6841, -89.414, 0.55", "-143.645, -81.4082, -96.0096, 0.55", "-148.205, -82.914, -102.096, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-136.293, -65.8739, -79.4702, 0.55", "-140.846, -68.4481, -90.1209, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-136.293, -65.8739, -79.4702, 0.55", "-142.515, -76.3508, -80.2257, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "120.903, -64.2717, -96.0928, 0.28", "124.053, -65.4915, -97.1816, 0.28", "125.516, -66.0581, -97.6873, 0.55", "128.307, -67.1385, -98.6518, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "120.903, -64.2717, -96.0928, 0.55", "120.808, -65.8749, -97.0764, 0.55", "120.618, -69.0816, -99.044, 0.28", "120.556, -70.1262, -99.6849, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "109.49, -68.459, -90.2253, 0.28", "111.237, -72.069, -93.6158, 0.28", "112.102, -73.8564, -95.2947, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "109.49, -68.459, -90.2253, 0.55", "107.821, -69.1524, -89.6258, 0.55", "103.167, -71.0857, -87.954, 0.28", "102.061, -71.545, -87.5569, 0.55", "99.0354, -72.8013, -86.4705, 0.28", "97.0856, -73.6112, -85.7703, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.51407, -47.0101, 6.35837, 0.83", "8.5649, -47.3095, 6.32614, 0.83", "9.27268, -51.2243, 6.02147, 0.83", "9.52221, -54.1682, 5.94261, 0.83", "9.52239, -57.0183, 6.1292, 0.83", "9.34809, -60.8163, 6.64179, 0.83", "9.00422, -65.1965, 7.37478, 0.83", "8.60358, -70.0857, 8.45001, 0.83", "8.18384, -74.8343, 9.71173, 0.83", "7.31216, -80.6796, 11.0716, 0.83", "6.78806, -83.3715, 11.5241, 0.83", "6.40465, -85.3965, 11.7373, 0.83", "5.59958, -89.2852, 12.0529, 0.83", "4.98699, -92.7657, 12.1577, 0.83", "4.19831, -100.175, 11.6214, 0.83", "3.89027, -104.227, 10.8121, 0.83", "3.6436, -107.962, 9.79623, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.51407, -47.0101, 6.35837, 0.55", "8.08413, -48.0459, 6.35711, 0.55", "7.75314, -48.7971, 6.40999, 0.55", "7.54693, -49.2761, 6.4931, 0.55", "7.24852, -50.0233, 6.70023, 0.55", "6.68154, -51.4997, 7.21019, 0.55", "6.22502, -52.6153, 7.71666, 0.55", "5.8458, -53.5077, 8.2175, 0.55", "5.43149, -54.4085, 8.78367, 0.55", "5.07589, -55.1551, 9.29118, 0.28", "4.76334, -55.7637, 9.79353, 0.55", "4.14593, -56.869, 10.8594, 0.55", "3.71944, -57.5464, 11.5806, 0.55", "3.47687, -57.926, 11.9802, 0.55", "3.17155, -58.375, 12.4246, 0.83", "2.26751, -59.7087, 13.6513, 0.28", "1.97054, -60.1503, 14.0453, 0.55", "1.46314, -60.9473, 14.7342, 0.28", "1.3043, -61.1925, 14.9646, 0.55", "0.965218, -61.7677, 15.4988, 0.28", "0.778188, -62.0953, 15.7788, 0.55", "0.145889, -63.169, 16.3918, 0.55", "-1.00234, -66.0169, 19.2791, 0.55", "-1.98173, -68.7193, 22.3618, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.78678, -39.3567, -9.21902, 0.55", "-2.20311, -40.2901, -12.105, 0.55", "-2.04972, -40.512, -12.942, 0.55", "-1.71537, -41.0637, -15.014, 0.55", "-1.09339, -42.155, -19.4768, 0.28", "-1.02636, -42.3027, -20.125, 0.55", "-0.82341, -42.9683, -22.7865, 0.55", "-0.778803, -43.8543, -26.2895, 0.55", "-0.779926, -44.1569, -27.6166, 0.28", "-0.818935, -44.3531, -28.752, 0.28", "-1.0638, -44.6353, -30.5777, 0.55", "-1.2909, -44.8962, -32.845, 0.28", "-1.44902, -44.9893, -34.9634, 0.55", "-1.58019, -44.9452, -36.5886, 0.55", "-1.63598, -44.8388, -37.7251, 0.55", "-1.71478, -44.4092, -41.1116, 0.55", "-1.82133, -43.7532, -44.6493, 0.55", "-1.88294, -43.4127, -46.0956, 0.28", "-1.92574, -43.1094, -47.4811, 0.55", "-2.05105, -42.6421, -50.2775, 0.28", "-2.10265, -42.5066, -51.2141, 0.83", "-2.28135, -42.2265, -52.9099, 0.28", "-2.53577, -42.0906, -54.0562, 0.55", "-2.93768, -41.9436, -55.7034, 0.28", "-3.11373, -41.8753, -56.3486, 0.55", "-3.49366, -41.7641, -57.5106, 0.55", "-4.10178, -41.4195, -59.232, 0.55", "-4.54312, -41.1198, -60.3221, 0.28", "-4.94488, -40.7607, -61.1616, 0.55", "-5.39865, -40.2087, -62.1548, 0.28", "-5.46675, -40.1047, -62.3217, 0.55", "-5.86149, -39.1349, -64.0228, 0.28", "-6.04268, -38.4197, -65.3289, 0.55", "-6.09393, -37.3952, -67.1743, 0.83", "-6.01465, -36.5359, -68.7761, 0.28", "-5.96755, -36.3194, -69.2083, 0.55", "-5.49413, -34.709, -72.6028, 0.28", "-5.37589, -34.4387, -73.2215, 0.55", "-4.94739, -33.5609, -75.0939, 0.28", "-4.83479, -33.3353, -75.5787, 0.55", "-4.59477, -32.7422, -76.7894, 0.28", "-4.45659, -32.3112, -77.6252, 0.55", "-4.32253, -31.3289, -79.3758, 0.28", "-4.27719, -30.8005, -80.3979, 0.55", "-4.27384, -29.7736, -82.5276, 0.28", "-4.28362, -29.4956, -83.1576, 0.55", "-4.33263, -29.12, -84.129, 0.28", "-4.40281, -28.8006, -84.9328, 0.55", "-4.6239, -28.1484, -86.5533, 0.28", "-4.70375, -27.9604, -87.0333, 0.55", "-5.41432, -26.4862, -90.5136, 0.28", "-5.73517, -25.8798, -91.6765, 0.55", "-6.40183, -24.6887, -93.6745, 0.28", "-6.72064, -24.1131, -94.5583, 0.55", "-7.55217, -22.7974, -96.5135, 0.28", "-7.88945, -22.3454, -97.2115, 0.55", "-9.26527, -20.9463, -99.6485, 0.28", "-9.86739, -20.5074, -100.66, 0.55", "-10.7794, -20.1515, -102.092, 0.55", "-11.3689, -19.9952, -102.959, 0.55", "-12.7069, -19.7159, -104.627, 0.28", "-14.1289, -19.4501, -106.186, 0.28", "-15.352, -19.2178, -107.453, 0.55", "-17.0013, -18.7319, -108.85, 0.28", "-17.9065, -18.3494, -109.446, 0.55", "-20.191, -17.018, -110.69, 0.28", "-21.554, -16.0539, -111.109, 0.55", "-22.5449, -15.2852, -111.243, 0.28", "-23.8129, -14.4004, -111.219, 0.55", "-25.4897, -13.2385, -111.075, 0.28", "-26.1267, -12.8243, -111.026, 0.55", "-29.281, -10.9378, -111.014, 0.28", "-30.3452, -10.3359, -111.019, 0.55", "-32.9192, -8.97921, -110.993, 0.28", "-34.3196, -8.25555, -110.98, 0.55", "-35.4704, -7.66236, -110.971, 0.55", "-36.8298, -6.96401, -110.984, 0.28", "-37.483, -6.61373, -111.068, 0.55", "-39.5939, -5.38552, -111.443, 0.28", "-40.6938, -4.6258, -111.619, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.78678, -39.3567, -9.21902, 0.55", "-2.06813, -39.4971, -9.59827, 0.55", "-1.32777, -39.5499, -9.95752, 0.55", "-0.378794, -39.5477, -10.3569, 0.55", "0.411456, -39.482, -10.6481, 0.55", "5.74304, -38.5176, -12.1658, 0.55", "6.95441, -38.1712, -12.5188, 0.55", "8.74995, -37.5376, -13.0709, 0.55", "10.023, -37.0492, -13.468, 0.55", "11.2682, -36.5058, -13.8279, 0.28", "13.1925, -35.569, -14.2929, 0.55", "16.064, -34.0933, -14.838, 0.28", "16.3144, -34.0107, -14.9432, 0.55", "17.7809, -33.7908, -16.0415, 0.28", "18.6416, -33.7144, -16.9462, 0.55", "19.4789, -33.723, -18.0138, 0.55", "20.9517, -33.8599, -19.9541, 0.55", "23.8508, -34.1625, -23.7537, 0.55", "25.841, -34.4003, -26.2702, 0.55", "26.5503, -34.4929, -27.12, 0.55", "31.3447, -35.0477, -32.5917, 0.55", "32.7057, -35.1712, -34.0173, 0.55", "33.5293, -35.242, -34.7591, 0.55", "35.597, -35.4731, -36.3198, 0.55", "40.7654, -36.3397, -39.7707, 0.55", "42.1949, -36.6401, -40.6396, 0.28", "43.0449, -36.8525, -41.0714, 0.55", "44.3148, -37.2233, -41.6868, 0.28", "44.8533, -37.4319, -41.8991, 0.55", "46.5597, -38.297, -42.1027, 0.28", "47.6087, -39.368, -41.5603, 0.55", "48.205, -40.1206, -41.1897, 0.28", "48.6978, -40.9394, -40.7732, 0.55", "49.0883, -41.8217, -40.3581, 0.28", "49.2571, -42.2745, -40.1862, 0.55", "49.61, -43.4549, -39.7407, 0.28", "49.7242, -43.8082, -39.669, 0.55", "50.4329, -45.8372, -39.3586, 0.28", "50.8486, -46.7809, -39.3025, 0.55", "51.9201, -48.8069, -39.3334, 0.28", "52.3856, -49.5569, -39.3977, 0.55", "54.0758, -52.0273, -39.6823, 0.28", "54.5037, -52.6289, -39.7708, 0.55", "55.8508, -54.5344, -40.1366, 0.28", "56.1266, -54.979, -40.2076, 0.55", "56.8169, -56.1524, -40.4072, 0.28", "57.2581, -56.8356, -40.575, 0.55", "57.7392, -57.5088, -40.772, 0.55", "58.6945, -58.8518, -41.1561, 0.28", "59.4014, -59.6881, -41.4332, 0.55", "61.7615, -61.8037, -42.3061, 0.28", "62.7171, -62.4988, -42.6688, 0.55", "63.3827, -62.9426, -42.9047, 0.28", "64.0647, -63.3507, -43.1301, 0.55", "66.186, -64.5024, -43.7779, 0.28", "67.7821, -65.3934, -44.2315, 0.55", "70.439, -67.0695, -44.8342, 0.28", "71.2758, -67.5914, -45.0199, 0.55", "72.8514, -68.5516, -45.2559, 0.28", "73.3654, -68.8663, -45.2978, 0.55", "74.1546, -69.3671, -45.2359, 0.28", "74.8319, -69.7898, -45.1268, 0.55", "76.605, -70.8404, -44.6544, 0.28", "78.635, -71.9616, -44.078, 0.28", "79.6367, -72.4808, -43.7164, 0.28", "80.6778, -72.9729, -43.4093, 0.55", "82.2099, -73.6216, -42.9641, 0.28", "82.8863, -73.8995, -42.7523, 0.83", "84.5803, -74.6298, -42.151, 0.28", "85.3315, -74.9647, -41.9296, 0.55", "88.6848, -76.5657, -41.1035, 0.28", "90.4148, -77.3888, -40.8152, 0.28", "91.7046, -77.9889, -40.6796, 0.55", "92.4852, -78.3549, -40.6758, 0.55", "94.6086, -79.3548, -40.8066, 0.28", "96.6096, -80.3702, -40.9995, 0.55", "98.4258, -81.3446, -41.1772, 0.28", "100.093, -82.2483, -41.4115, 0.55", "101.47, -82.9808, -41.5977, 0.28", "102.588, -83.5089, -41.6971, 0.55", "105.266, -84.6471, -41.8273, 0.28", "106.606, -85.2212, -41.8458, 0.55", "108.595, -86.0873, -41.8102, 0.28", "110.217, -86.7526, -41.7469, 0.55", "114.032, -88.1576, -41.5983, 0.28", "115.629, -88.6515, -41.6253, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.5079, -154.525, 110.129, 0.55", "-16.8138, -164.88, 115.911, 0.55", "-13.8363, -175.711, 119.783, 0.55", "-12.2159, -186.353, 124.811, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.5079, -154.525, 110.129, 0.55", "-16.8635, -163.124, 117.158, 0.55", "-18.217, -170.659, 125.23, 0.55", "-20.1519, -176.372, 134.579, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-20.9126, -153.319, 107.234, 0.55", "-20.6894, -162.634, 113.376, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.9126, -153.319, 107.234, 0.55", "-22.8096, -163.646, 113.148, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.6436, -107.962, 9.79623, 0.83", "4.43238, -111.271, 10.4817, 0.83", "5.16686, -114.052, 11.2934, 0.83", "5.89694, -116.817, 12.1002, 0.83", "6.59028, -119.443, 12.8665, 0.83", "7.65876, -123.49, 14.0473, 0.83", "8.71953, -127.507, 15.2197, 0.83", "9.53826, -130.155, 16.3864, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.6436, -107.962, 9.79623, 0.55", "4.93785, -109.702, 9.6662, 0.55", "5.89801, -111.068, 9.33117, 0.55", "6.54728, -112.082, 8.99057, 0.55", "7.10713, -113.28, 8.46853, 0.83", "7.63019, -114.646, 7.72521, 0.55", "8.1418, -115.983, 6.99815, 0.83", "8.59646, -117.439, 6.08917, 0.55", "8.84719, -118.286, 5.48484, 0.83", "9.51474, -121.035, 3.33648, 0.55", "9.84518, -123.201, 1.5434, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.98173, -68.7193, 22.3618, 0.55", "-6.02433, -76.2745, 26.7885, 0.55", "-11.4315, -82.9971, 31.1, 0.55", "-17.6145, -88.8622, 35.6158, 0.55", "-24.688, -93.6678, 40.0757, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.98173, -68.7193, 22.3618, 0.55", "-4.06166, -74.5862, 27.7102, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "9.53826, -130.155, 16.3864, 0.55", "9.61556, -131.748, 16.841, 0.55", "9.75669, -133.779, 17.4843, 0.55", "9.89305, -135.695, 18.0814, 0.55", "9.97941, -137.059, 18.4818, 0.55", "10.1156, -139.495, 19.153, 0.55", "10.6411, -146.337, 20.8925, 0.55", "10.8978, -148.657, 21.3977, 0.55", "11.1041, -150.294, 21.6744, 0.55", "11.3895, -152.164, 21.8466, 0.55", "11.6159, -153.612, 21.848, 0.55", "12.2757, -156.991, 21.7368, 0.55", "12.6893, -159.561, 21.6287, 0.55", "12.9942, -161.246, 21.6169, 0.55", "13.7183, -165.614, 21.8031, 0.55", "14.1571, -168.551, 22.0522, 0.55", "14.6923, -172.336, 22.5873, 0.55", "15.2796, -176.624, 23.5327, 0.55", "15.7588, -179.479, 24.3676, 0.55", "16.0721, -181.163, 24.9148, 0.55", "16.3335, -182.718, 25.4084, 0.55", "16.7184, -184.685, 25.9489, 0.55", "17.6631, -189.432, 26.9208, 0.55", "18.1056, -191.266, 27.2432, 0.55", "18.5531, -193.311, 27.5775, 0.55", "19.2037, -196.384, 28.0581, 0.55", "19.5899, -198.753, 28.4255, 0.55", "19.8346, -201.011, 28.7171, 0.55", "19.9736, -203.17, 28.9743, 0.55", "20.067, -205.279, 29.2474, 0.55", "20.1458, -206.78, 29.4292, 0.55", "20.3088, -209.234, 29.6465, 0.55", "20.5149, -212.185, 29.6777, 0.55", "20.6759, -213.616, 29.595, 0.55", "20.8526, -214.873, 29.4316, 0.55", "21.3252, -217.238, 29.0085, 0.55", "21.6194, -218.739, 28.6956, 0.55", "21.9865, -220.587, 28.3838, 0.55", "22.178, -221.888, 28.2316, 0.55", "22.5852, -225.275, 27.9533, 0.55", "22.787, -227.813, 27.9103, 0.55", "22.9608, -231.745, 28.1461, 0.55", "23.0718, -234.278, 28.546, 0.55", "23.1483, -236.938, 29.0464, 0.28", "23.1428, -238.009, 29.2849, 0.28", "23.0631, -240.607, 30.0931, 0.28", "22.9235, -243.007, 31.0222, 0.28", "22.9503, -246.16, 32.638, 0.28", "24.3477, -253.207, 34.6893, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "9.53826, -130.155, 16.3864, 0.55", "10.5188, -130.606, 17.5766, 0.55", "12.407, -131.791, 20.1862, 0.55", "13.9745, -132.974, 22.5205, 0.28", "15.606, -134.327, 25.0868, 0.55", "16.4434, -135.198, 26.8026, 0.28", "17.7182, -136.776, 29.9754, 0.55", "18.0226, -137.629, 31.554, 0.28", "18.0756, -137.94, 32.1834, 0.28", "18.1557, -138.381, 33.2783, 0.55", "18.6439, -139.811, 37.3792, 0.28", "18.8919, -140.365, 39.0885, 0.55", "20.0045, -141.954, 43.9409, 0.28", "20.7298, -142.727, 46.4683, 0.28", "21.7616, -143.718, 49.5074, 0.55", "23.5741, -145.251, 53.7844, 0.28", "23.8639, -145.453, 54.3218, 0.55", "25.4261, -146.428, 56.8375, 0.28", "25.5875, -146.518, 57.0464, 0.55", "26.9786, -147.615, 58.9398, 0.28", "27.5995, -148.22, 59.8871, 0.55", "32.6268, -152.671, 67.7308, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-24.688, -93.6678, 40.0757, 0.55", "-31.8327, -98.864, 47.6924, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-24.688, -93.6678, 40.0757, 0.55", "-30.3221, -101.445, 42.5009, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_BP_b022a66bd2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.11512, 8.3137, 2.84795, 0.83 ) }
    dend_43 { pt3dadd( -5.9994, 10.5493, 3.28294, 1.11 ) }
    dend_43 { pt3dadd( -7.69999, 11.8665, 3.50921, 0.83 ) }
    dend_43 { pt3dadd( -9.35218, 13.1351, 3.71195, 0.83 ) }
    dend_43 { pt3dadd( -10.3304, 13.8585, 3.82304, 1.11 ) }
    dend_43 { pt3dadd( -13.3938, 16.119, 4.1791, 1.11 ) }
    dend_43 { pt3dadd( -18.8728, 19.9891, 4.80851, 0.83 ) }
    dend_43 { pt3dadd( -20.8468, 21.3302, 5.01636, 0.83 ) }
    dend_43 { pt3dadd( -22.4099, 22.3607, 5.14546, 0.83 ) }
    dend_43 { pt3dadd( -23.9342, 23.3819, 5.25721, 0.83 ) }
    dend_43 { pt3dadd( -25.175, 24.2236, 5.31751, 0.55 ) }
    dend_43 { pt3dadd( -26.1076, 24.7935, 5.3787, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.95434, 6.39222, -6.32788, 0.55 ) }
    dend_28 { pt3dadd( 8.13668, 7.08063, -7.03855, 0.55 ) }
    dend_28 { pt3dadd( 9.98328, 7.25441, -7.97893, 0.83 ) }
    dend_28 { pt3dadd( 12.9058, 7.43934, -9.72573, 0.55 ) }
    dend_28 { pt3dadd( 14.3166, 7.52862, -10.5689, 1.38 ) }
    dend_28 { pt3dadd( 17.7854, 7.74811, -12.6422, 0.55 ) }
    dend_28 { pt3dadd( 19.2628, 7.67379, -13.6314, 0.83 ) }
    dend_28 { pt3dadd( 26.9052, 6.31064, -19.1897, 0.55 ) }
    dend_28 { pt3dadd( 27.6445, 6.12733, -19.8012, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.689681, -10.9776, 3.40837, 1.11 ) }
    dend_1 { pt3dadd( -0.748577, -16.174, 5.27129, 1.11 ) }
    dend_1 { pt3dadd( -0.772564, -18.2903, 6.02998, 0.83 ) }
    dend_1 { pt3dadd( -0.80443, -21.102, 7.03795, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.01816, 10.6616, -1.43506, 1.11 ) }
    dend_0 { pt3dadd( 1.2323, 13.3615, -1.42458, 1.11 ) }
    dend_0 { pt3dadd( 1.59112, 17.7659, -1.2461, 1.38 ) }
    dend_0 { pt3dadd( 1.6159, 18.0111, -1.23235, 1.38 ) }
    dend_0 { pt3dadd( 2.10811, 21.037, -1.05556, 0.83 ) }
    dend_0 { pt3dadd( 2.78032, 24.2307, -0.715184, 0.83 ) }
    dend_0 { pt3dadd( 3.90407, 27.8222, 0.0643216, 0.83 ) }
    dend_0 { pt3dadd( 4.52139, 29.177, 0.50582, 0.83 ) }
    dend_0 { pt3dadd( 5.11425, 30.1525, 0.907773, 1.11 ) }
    dend_0 { pt3dadd( 6.81023, 32.5191, 1.92173, 0.55 ) }
    dend_0 { pt3dadd( 8.77841, 34.9814, 3.13875, 0.83 ) }
    dend_0 { pt3dadd( 11.2985, 37.4954, 4.47885, 0.55 ) }
    dend_0 { pt3dadd( 12.5629, 38.5314, 5.06852, 0.83 ) }
    dend_0 { pt3dadd( 14.3454, 39.9316, 6.014, 0.55 ) }
    dend_0 { pt3dadd( 16.5738, 41.7138, 7.31986, 0.55 ) }
    dend_0 { pt3dadd( 19.7216, 44.4034, 9.35146, 0.55 ) }
    dend_0 { pt3dadd( 23.1952, 47.4826, 11.5957, 0.55 ) }
    dend_0 { pt3dadd( 25.4308, 49.481, 13.3219, 0.55 ) }
    dend_0 { pt3dadd( 28.2242, 52.0085, 15.8091, 0.55 ) }
    dend_0 { pt3dadd( 28.8114, 52.5142, 16.3796, 0.83 ) }
    dend_0 { pt3dadd( 30.3778, 53.8499, 18.0013, 0.55 ) }
    dend_0 { pt3dadd( 31.6791, 54.8881, 19.2641, 0.83 ) }
    dend_0 { pt3dadd( 34.705, 57.7454, 22.2699, 0.55 ) }
    dend_0 { pt3dadd( 35.8047, 58.7896, 23.1185, 0.83 ) }
    dend_0 { pt3dadd( 36.7921, 59.5528, 23.6598, 0.55 ) }
    dend_0 { pt3dadd( 37.7477, 60.206, 24.0472, 0.83 ) }
    dend_0 { pt3dadd( 39.8298, 61.4092, 24.6993, 0.83 ) }
    dend_0 { pt3dadd( 42.5536, 63.0519, 25.3325, 0.83 ) }
    dend_0 { pt3dadd( 44.2039, 64.144, 25.5506, 0.55 ) }
    dend_0 { pt3dadd( 45.4674, 65.0951, 25.7239, 0.55 ) }
    dend_0 { pt3dadd( 48.7716, 67.5512, 26.1308, 0.83 ) }
    dend_0 { pt3dadd( 50.8938, 69.1263, 26.3114, 0.55 ) }
    dend_0 { pt3dadd( 54.095, 71.4305, 26.46, 0.55 ) }
    dend_0 { pt3dadd( 57.0054, 73.354, 26.4827, 0.55 ) }
    dend_0 { pt3dadd( 59.5957, 74.979, 26.4348, 0.55 ) }
    dend_0 { pt3dadd( 62.8428, 76.8752, 26.2292, 0.55 ) }
    dend_0 { pt3dadd( 64.8097, 77.7904, 26.0398, 0.55 ) }
    dend_0 { pt3dadd( 66.1248, 78.2974, 25.7519, 0.55 ) }
    dend_0 { pt3dadd( 67.839, 78.6496, 25.2207, 0.55 ) }
    dend_0 { pt3dadd( 70.3511, 78.7489, 24.2131, 0.55 ) }
    dend_0 { pt3dadd( 71.9011, 78.6034, 23.5216, 0.55 ) }
    dend_0 { pt3dadd( 74.1879, 78.3245, 22.6774, 0.55 ) }
    dend_0 { pt3dadd( 78.608, 77.9354, 21.4739, 0.55 ) }
    dend_0 { pt3dadd( 82.1187, 77.7935, 20.7827, 0.55 ) }
    dend_0 { pt3dadd( 85.8787, 77.8221, 20.275, 0.55 ) }
    dend_0 { pt3dadd( 88.3202, 77.9222, 20.1401, 0.55 ) }
    dend_0 { pt3dadd( 94.7433, 78.7513, 20.2036, 0.55 ) }
    dend_0 { pt3dadd( 98.5944, 79.5276, 20.5212, 0.55 ) }
    dend_0 { pt3dadd( 101.527, 80.2917, 21.0204, 0.55 ) }
    dend_0 { pt3dadd( 103.328, 81.0387, 21.3902, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 105.423, 82.1714, 21.8101, 0.55 ) }
    dend_0 { pt3dadd( 108.939, 84.4285, 22.2254, 0.55 ) }
    dend_0 { pt3dadd( 109.731, 84.9743, 22.2153, 0.55 ) }
    dend_0 { pt3dadd( 111.979, 86.4291, 22.042, 0.55 ) }
    dend_0 { pt3dadd( 114.051, 87.9907, 21.8758, 0.83 ) }
    dend_0 { pt3dadd( 115.18, 88.8577, 21.7678, 0.55 ) }
    dend_0 { pt3dadd( 116.868, 90.3551, 21.5415, 0.83 ) }
    dend_0 { pt3dadd( 126.091, 98.3395, 22.6278, 0.83 ) }
    dend_0 { pt3dadd( 134.105, 107.594, 22.9842, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -26.1076, 24.7935, 5.3787, 0.55 ) }
    dend_55 { pt3dadd( -28.5262, 25.5726, 4.55824, 0.55 ) }
    dend_55 { pt3dadd( -31.1561, 26.4197, 3.66607, 0.55 ) }
    dend_55 { pt3dadd( -34.3299, 27.4421, 2.58941, 0.55 ) }
    dend_55 { pt3dadd( -36.9505, 28.2863, 1.70038, 0.83 ) }
    dend_55 { pt3dadd( -39.1467, 28.9937, 0.955381, 0.55 ) }
    dend_55 { pt3dadd( -43.2229, 30.3067, -0.427451, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -26.1076, 24.7935, 5.3787, 0.55 ) }
    dend_44 { pt3dadd( -27.4462, 25.1189, 5.07431, 0.55 ) }
    dend_44 { pt3dadd( -28.8908, 25.3991, 4.88732, 0.55 ) }
    dend_44 { pt3dadd( -30.5344, 25.7084, 4.71479, 0.55 ) }
    dend_44 { pt3dadd( -32.9449, 26.0991, 4.67855, 0.55 ) }
    dend_44 { pt3dadd( -34.9822, 26.3477, 4.78083, 0.55 ) }
    dend_44 { pt3dadd( -37.1316, 26.5633, 4.97236, 0.55 ) }
    dend_44 { pt3dadd( -39.2412, 26.6032, 5.35483, 0.55 ) }
    dend_44 { pt3dadd( -41.0829, 26.4431, 5.82763, 0.55 ) }
    dend_44 { pt3dadd( -43.412, 26.0576, 6.62696, 0.55 ) }
    dend_44 { pt3dadd( -44.4437, 25.8015, 7.09591, 0.55 ) }
    dend_44 { pt3dadd( -45.5643, 25.5076, 7.64484, 0.55 ) }
    dend_44 { pt3dadd( -47.5322, 24.864, 8.51169, 0.55 ) }
    dend_44 { pt3dadd( -48.5589, 24.5461, 8.82283, 0.55 ) }
    dend_44 { pt3dadd( -49.6341, 24.1831, 9.13838, 0.55 ) }
    dend_44 { pt3dadd( -50.8961, 23.784, 9.39508, 0.55 ) }
    dend_44 { pt3dadd( -52.2623, 23.3825, 9.64254, 0.55 ) }
    dend_44 { pt3dadd( -54.2067, 22.8106, 9.95477, 0.55 ) }
    dend_44 { pt3dadd( -56.7709, 22.2446, 10.1744, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.6445, 6.12733, -19.8012, 0.55 ) }
    dend_34 { pt3dadd( 32.4024, 7.97088, -20.9667, 0.55 ) }
    dend_34 { pt3dadd( 35.1949, 8.7937, -22.0012, 0.55 ) }
    dend_34 { pt3dadd( 37.973, 9.47472, -23.0378, 0.55 ) }
    dend_34 { pt3dadd( 39.8829, 9.86521, -23.7304, 0.55 ) }
    dend_34 { pt3dadd( 42.6832, 10.3764, -24.7085, 0.55 ) }
    dend_34 { pt3dadd( 48.5207, 11.2922, -26.8952, 0.55 ) }
    dend_34 { pt3dadd( 55.1762, 12.2063, -29.8029, 0.55 ) }
    dend_34 { pt3dadd( 58.448, 12.4116, -31.3928, 0.55 ) }
    dend_34 { pt3dadd( 60.2136, 12.4588, -32.3474, 0.55 ) }
    dend_34 { pt3dadd( 62.1528, 12.5049, -33.4713, 0.55 ) }
    dend_34 { pt3dadd( 65.6269, 12.498, -35.4456, 0.55 ) }
    dend_34 { pt3dadd( 66.9021, 12.4177, -36.1887, 0.55 ) }
    dend_34 { pt3dadd( 72.3049, 12.1278, -39.754, 0.55 ) }
    dend_34 { pt3dadd( 76.1364, 11.9282, -42.5568, 0.55 ) }
    dend_34 { pt3dadd( 78.3395, 11.8422, -44.2357, 0.55 ) }
    dend_34 { pt3dadd( 80.5396, 11.7387, -45.9051, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 27.6445, 6.12733, -19.8012, 0.83 ) }
    dend_29 { pt3dadd( 30.0196, 7.63107, -19.8405, 0.83 ) }
    dend_29 { pt3dadd( 31.3775, 8.48896, -19.9259, 0.55 ) }
    dend_29 { pt3dadd( 33.3766, 9.79534, -20.2243, 0.83 ) }
    dend_29 { pt3dadd( 34.7205, 10.7084, -20.4665, 0.55 ) }
    dend_29 { pt3dadd( 36.5731, 12.018, -20.7731, 0.83 ) }
    dend_29 { pt3dadd( 38.7999, 13.6375, -21.0586, 0.55 ) }
    dend_29 { pt3dadd( 39.9211, 14.3687, -21.1545, 0.55 ) }
    dend_29 { pt3dadd( 42.5051, 15.6967, -21.1883, 0.83 ) }
    dend_29 { pt3dadd( 44.853, 16.618, -20.9079, 0.55 ) }
    dend_29 { pt3dadd( 46.1649, 17.1201, -20.6236, 0.83 ) }
    dend_29 { pt3dadd( 48.1314, 17.9187, -19.9873, 0.55 ) }
    dend_29 { pt3dadd( 50.953, 19.1195, -18.7067, 0.55 ) }
    dend_29 { pt3dadd( 54.8727, 20.5833, -16.7224, 0.55 ) }
    dend_29 { pt3dadd( 58.6103, 21.8447, -14.5665, 0.55 ) }
    dend_29 { pt3dadd( 61.5715, 22.8124, -12.8041, 0.55 ) }
    dend_29 { pt3dadd( 66.4529, 24.431, -9.87283, 0.55 ) }
    dend_29 { pt3dadd( 70.0222, 25.72, -7.64894, 0.55 ) }
    dend_29 { pt3dadd( 72.1739, 26.6823, -6.2267, 0.55 ) }
    dend_29 { pt3dadd( 76.1296, 28.8681, -3.57251, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.80443, -21.102, 7.03795, 0.83 ) }
    dend_11 { pt3dadd( -1.09774, -24.2568, 6.91273, 0.83 ) }
    dend_11 { pt3dadd( -1.38351, -27.3304, 6.79073, 0.83 ) }
    dend_11 { pt3dadd( -1.70256, -30.7622, 6.65452, 0.83 ) }
    dend_11 { pt3dadd( -1.86917, -32.5542, 6.5834, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.80443, -21.102, 7.03795, 0.55 ) }
    dend_2 { pt3dadd( -0.362719, -22.5705, 8.18862, 0.55 ) }
    dend_2 { pt3dadd( -0.0180871, -24.3806, 9.64385, 0.55 ) }
    dend_2 { pt3dadd( 0.0516518, -26.777, 11.5801, 0.55 ) }
    dend_2 { pt3dadd( 0.00912846, -27.7128, 12.346, 0.83 ) }
    dend_2 { pt3dadd( -0.366257, -30.1148, 14.5323, 0.55 ) }
    dend_2 { pt3dadd( -0.664782, -31.3619, 15.6665, 0.55 ) }
    dend_2 { pt3dadd( -1.31421, -33.7903, 17.9641, 0.83 ) }
    dend_2 { pt3dadd( -1.91904, -35.6001, 19.7642, 0.55 ) }
    dend_2 { pt3dadd( -2.54357, -37.1015, 21.2029, 0.55 ) }
    dend_2 { pt3dadd( -3.77944, -39.9494, 23.8662, 0.55 ) }
    dend_2 { pt3dadd( -4.75749, -42.2192, 25.9633, 0.55 ) }
    dend_2 { pt3dadd( -5.51024, -44.0364, 27.6759, 0.55 ) }
    dend_2 { pt3dadd( -6.19531, -45.959, 29.4537, 0.28 ) }
    dend_2 { pt3dadd( -6.4095, -46.7555, 30.1761, 0.55 ) }
    dend_2 { pt3dadd( -6.75267, -48.2244, 31.4351, 0.28 ) }
    dend_2 { pt3dadd( -6.91806, -50.4977, 33.1059, 0.55 ) }
    dend_2 { pt3dadd( -9.34578, -58.1796, 38.7425, 0.55 ) }
    dend_2 { pt3dadd( -12.1129, -65.2979, 44.9353, 0.55 ) }
    dend_2 { pt3dadd( -14.7461, -71.1396, 52.3931, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -43.2229, 30.3067, -0.427451, 0.55 ) }
    dend_61 { pt3dadd( -44.4704, 31.7309, 1.396, 0.55 ) }
    dend_61 { pt3dadd( -44.9143, 32.3743, 2.25763, 0.83 ) }
    dend_61 { pt3dadd( -45.3341, 33.1896, 3.37823, 0.55 ) }
    dend_61 { pt3dadd( -45.6124, 33.8672, 4.27603, 0.83 ) }
    dend_61 { pt3dadd( -46.3773, 35.687, 6.56658, 0.55 ) }
    dend_61 { pt3dadd( -46.6676, 36.391, 7.42811, 0.28 ) }
    dend_61 { pt3dadd( -47.0904, 37.6595, 8.91616, 0.55 ) }
    dend_61 { pt3dadd( -47.666, 39.3635, 10.9009, 0.55 ) }
    dend_61 { pt3dadd( -48.1399, 40.6115, 12.3734, 0.55 ) }
    dend_61 { pt3dadd( -48.807, 42.2355, 14.3089, 0.28 ) }
    dend_61 { pt3dadd( -49.015, 42.6181, 14.7782, 0.55 ) }
    dend_61 { pt3dadd( -49.4711, 43.3916, 15.7212, 0.28 ) }
    dend_61 { pt3dadd( -49.8231, 43.8842, 16.3154, 0.55 ) }
    dend_61 { pt3dadd( -50.6078, 44.7955, 17.4708, 0.28 ) }
    dend_61 { pt3dadd( -51.0784, 45.266, 18.1567, 0.55 ) }
    dend_61 { pt3dadd( -51.8682, 46.0255, 19.444, 0.28 ) }
    dend_61 { pt3dadd( -52.4161, 46.5064, 20.2949, 0.55 ) }
    dend_61 { pt3dadd( -54.1019, 50.9688, 27.1937, 0.55 ) }
    dend_61 { pt3dadd( -54.9116, 55.0389, 34.4827, 0.55 ) }
    dend_61 { pt3dadd( -55.3342, 58.4793, 42.1204, 0.55 ) }
    dend_61 { pt3dadd( -55.6699, 60.9457, 50.1301, 0.55 ) }
    dend_61 { pt3dadd( -54.8876, 64.1042, 57.8606, 0.55 ) }
    dend_61 { pt3dadd( -54.8609, 67.3701, 65.5861, 0.55 ) }
    dend_61 { pt3dadd( -55.1441, 71.8418, 72.6765, 0.55 ) }
    dend_61 { pt3dadd( -55.2823, 75.7453, 80.099, 0.55 ) }
    dend_61 { pt3dadd( -55.3271, 80.1879, 87.2132, 0.55 ) }
    dend_61 { pt3dadd( -54.9002, 84.6398, 94.3088, 0.55 ) }
    dend_61 { pt3dadd( -53.4226, 88.4249, 101.646, 0.55 ) }
    dend_61 { pt3dadd( -52.1441, 92.8916, 108.629, 0.55 ) }
    dend_61 { pt3dadd( -50.8605, 96.5885, 116.048, 0.55 ) }
    dend_61 { pt3dadd( -48.5236, 100.084, 123.305, 0.55 ) }
    dend_61 { pt3dadd( -44.9332, 104.131, 129.715, 0.55 ) }
    dend_61 { pt3dadd( -41.1586, 106.687, 136.755, 0.55 ) }
    dend_61 { pt3dadd( -36.351, 108.961, 143.241, 0.55 ) }
    dend_61 { pt3dadd( -31.9259, 111.657, 149.837, 0.55 ) }
    dend_61 { pt3dadd( -28.3284, 115.021, 156.626, 0.55 ) }
    dend_61 { pt3dadd( -26.586, 119.51, 163.493, 0.55 ) }
    dend_61 { pt3dadd( -23.9806, 123.227, 170.546, 0.55 ) }
    dend_61 { pt3dadd( -20.1724, 128.118, 176.196, 0.55 ) }
    dend_61 { pt3dadd( -17.7243, 133.544, 182.105, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -43.2229, 30.3067, -0.427451, 0.55 ) }
    dend_56 { pt3dadd( -45.3509, 30.302, -1.92193, 0.55 ) }
    dend_56 { pt3dadd( -47.1885, 30.3017, -3.74525, 0.55 ) }
    dend_56 { pt3dadd( -49.0019, 30.4394, -5.76549, 0.55 ) }
    dend_56 { pt3dadd( -50.1374, 30.5256, -7.03055, 0.55 ) }
    dend_56 { pt3dadd( -52.2087, 30.6828, -9.33815, 0.83 ) }
    dend_56 { pt3dadd( -53.724, 30.7979, -11.0264, 0.55 ) }
    dend_56 { pt3dadd( -55.6391, 30.8918, -13.5699, 0.83 ) }
    dend_56 { pt3dadd( -56.5221, 31.0722, -15.1035, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -56.7709, 22.2446, 10.1744, 0.28 ) }
    dend_48 { pt3dadd( -58.0521, 20.0566, 9.09347, 0.28 ) }
    dend_48 { pt3dadd( -58.6541, 19.1349, 8.53581, 0.28 ) }
    dend_48 { pt3dadd( -59.4281, 17.8385, 7.70554, 0.55 ) }
    dend_48 { pt3dadd( -60.0661, 16.6946, 6.99254, 0.28 ) }
    dend_48 { pt3dadd( -61.0093, 14.9459, 5.93469, 0.55 ) }
    dend_48 { pt3dadd( -63.6397, 9.78147, 2.93805, 0.28 ) }
    dend_48 { pt3dadd( -64.4747, 7.99693, 1.74178, 0.55 ) }
    dend_48 { pt3dadd( -65.7249, 5.26698, -0.198332, 0.28 ) }
    dend_48 { pt3dadd( -66.4299, 3.64798, -1.43478, 0.55 ) }
    dend_48 { pt3dadd( -66.9131, 2.53799, -2.31675, 0.28 ) }
    dend_48 { pt3dadd( -67.4649, 1.2616, -3.31685, 0.55 ) }
    dend_48 { pt3dadd( -69.1292, -3.02928, -6.51109, 0.28 ) }
    dend_48 { pt3dadd( -69.6481, -4.31658, -7.53092, 0.55 ) }
    dend_48 { pt3dadd( -70.5395, -6.2359, -9.3343, 0.28 ) }
    dend_48 { pt3dadd( -71.2801, -7.43267, -10.6379, 0.28 ) }
    dend_48 { pt3dadd( -71.9625, -8.21571, -11.5719, 0.55 ) }
    dend_48 { pt3dadd( -74.3977, -10.401, -14.1964, 0.28 ) }
    dend_48 { pt3dadd( -75.5439, -11.2819, -15.2601, 0.55 ) }
    dend_48 { pt3dadd( -78.3396, -13.2483, -17.8646, 0.28 ) }
    dend_48 { pt3dadd( -81.1509, -14.9606, -20.2745, 0.28 ) }
    dend_48 { pt3dadd( -84.217, -16.553, -22.7402, 0.28 ) }
    dend_48 { pt3dadd( -85.6349, -17.1377, -23.7171, 0.55 ) }
    dend_48 { pt3dadd( -92.3759, -24.5992, -30.653, 0.55 ) }
    dend_48 { pt3dadd( -100.223, -32.5773, -35.5506, 0.55 ) }
    dend_48 { pt3dadd( -107.661, -39.7502, -42.0659, 0.55 ) }
    dend_48 { pt3dadd( -115.15, -45.9731, -49.4426, 0.55 ) }
    dend_48 { pt3dadd( -122.588, -51.133, -57.6446, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -56.7709, 22.2446, 10.1744, 0.55 ) }
    dend_45 { pt3dadd( -57.5458, 22.1985, 10.1667, 0.55 ) }
    dend_45 { pt3dadd( -59.7689, 22.0323, 10.4213, 0.55 ) }
    dend_45 { pt3dadd( -60.6107, 21.9432, 10.5567, 0.55 ) }
    dend_45 { pt3dadd( -62.5956, 21.6721, 10.8958, 0.55 ) }
    dend_45 { pt3dadd( -65.6284, 21.3045, 11.2815, 0.55 ) }
    dend_45 { pt3dadd( -67.1997, 21.1638, 11.4619, 0.28 ) }
    dend_45 { pt3dadd( -69.6399, 20.8999, 11.6895, 0.55 ) }
    dend_45 { pt3dadd( -71.4445, 20.6768, 11.7908, 0.55 ) }
    dend_45 { pt3dadd( -72.2069, 20.5774, 11.8345, 0.28 ) }
    dend_45 { pt3dadd( -76.7792, 19.98, 12.0904, 0.55 ) }
    dend_45 { pt3dadd( -78.9016, 19.6227, 12.0706, 0.28 ) }
    dend_45 { pt3dadd( -81.7423, 19.153, 11.8796, 0.28 ) }
    dend_45 { pt3dadd( -84.1714, 18.8029, 11.58, 0.55 ) }
    dend_45 { pt3dadd( -93.8918, 18.5309, 12.6352, 0.55 ) }
    dend_45 { pt3dadd( -103.43, 17.8635, 14.6933, 0.55 ) }
    dend_45 { pt3dadd( -112.593, 16.0622, 17.6031, 0.55 ) }
    dend_45 { pt3dadd( -121.56, 15.7731, 21.4998, 0.55 ) }
    dend_45 { pt3dadd( -129.538, 14.8902, 27.0898, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -136.267, 14.3087, 34.1649, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 80.5396, 11.7387, -45.9051, 0.55 ) }
    dend_42 { pt3dadd( 85.1905, 13.1844, -49.7921, 0.55 ) }
    dend_42 { pt3dadd( 86.6707, 13.5642, -51.1051, 0.55 ) }
    dend_42 { pt3dadd( 88.5291, 13.9816, -52.718, 0.55 ) }
    dend_42 { pt3dadd( 91.9113, 14.6831, -55.8388, 0.55 ) }
    dend_42 { pt3dadd( 95.4598, 15.2588, -59.1632, 0.55 ) }
    dend_42 { pt3dadd( 97.208, 15.4082, -60.7263, 0.83 ) }
    dend_42 { pt3dadd( 98.6611, 15.4191, -62.1069, 0.55 ) }
    dend_42 { pt3dadd( 99.7611, 15.3251, -63.2348, 0.83 ) }
    dend_42 { pt3dadd( 102.457, 14.7155, -66.0823, 0.55 ) }
    dend_42 { pt3dadd( 104.698, 14.0137, -68.4146, 0.55 ) }
    dend_42 { pt3dadd( 107.273, 13.2059, -70.9747, 0.55 ) }
    dend_42 { pt3dadd( 110.134, 12.3771, -73.8911, 0.55 ) }
    dend_42 { pt3dadd( 112.059, 11.7721, -75.8866, 0.55 ) }
    dend_42 { pt3dadd( 114.233, 11.0744, -78.2025, 0.55 ) }
    dend_42 { pt3dadd( 116.11, 10.5179, -80.3366, 0.55 ) }
    dend_42 { pt3dadd( 117.285, 10.2504, -81.8419, 0.55 ) }
    dend_42 { pt3dadd( 118.82, 9.68387, -84.8979, 0.55 ) }
    dend_42 { pt3dadd( 119.675, 9.25714, -86.8031, 0.55 ) }
    dend_42 { pt3dadd( 120.465, 8.54013, -89.3264, 0.55 ) }
    dend_42 { pt3dadd( 121.604, 7.17419, -93.5775, 0.55 ) }
    dend_42 { pt3dadd( 121.846, 6.82711, -94.5311, 0.28 ) }
    dend_42 { pt3dadd( 124.939, 2.48866, -106.103, 0.28 ) }
    dend_42 { pt3dadd( 125.95, 1.25054, -109.501, 0.83 ) }
    dend_42 { pt3dadd( 129.874, -3.32977, -121.512, 0.83 ) }
    dend_42 { pt3dadd( 131.877, -5.67244, -127.054, 0.83 ) }
    dend_42 { pt3dadd( 132.821, -6.7036, -129.281, 0.55 ) }
    dend_42 { pt3dadd( 133.878, -7.70464, -131.447, 0.55 ) }
    dend_42 { pt3dadd( 136.667, -9.57462, -135.425, 0.55 ) }
    dend_42 { pt3dadd( 139.599, -11.2065, -138.901, 0.28 ) }
    dend_42 { pt3dadd( 140.437, -11.4138, -139.062, 0.55 ) }
    dend_42 { pt3dadd( 142.247, -11.6597, -138.799, 0.28 ) }
    dend_42 { pt3dadd( 143.354, -11.7124, -138.489, 0.55 ) }
    dend_42 { pt3dadd( 144.505, -11.7693, -138.066, 0.28 ) }
    dend_42 { pt3dadd( 145.877, -11.7605, -137.504, 0.55 ) }
    dend_42 { pt3dadd( 147.928, -11.669, -136.899, 0.28 ) }
    dend_42 { pt3dadd( 149.581, -11.6535, -136.459, 0.55 ) }
    dend_42 { pt3dadd( 151.404, -11.5353, -136.135, 0.28 ) }
    dend_42 { pt3dadd( 153.889, -11.3964, -135.915, 0.55 ) }
    dend_42 { pt3dadd( 156.675, -11.1993, -135.845, 0.55 ) }
    dend_42 { pt3dadd( 159.129, -11.0191, -135.95, 0.28 ) }
    dend_42 { pt3dadd( 162.528, -10.7644, -136.286, 0.55 ) }
    dend_42 { pt3dadd( 168.41, -10.2479, -137.511, 0.55 ) }
    dend_42 { pt3dadd( 171.007, -9.92882, -138.383, 0.55 ) }
    dend_42 { pt3dadd( 172.122, -9.76192, -138.884, 0.83 ) }
    dend_42 { pt3dadd( 174.253, -9.45536, -140.034, 0.55 ) }
    dend_42 { pt3dadd( 175.729, -9.19577, -140.932, 0.83 ) }
    dend_42 { pt3dadd( 179.691, -8.39958, -143.409, 0.55 ) }
    dend_42 { pt3dadd( 182.13, -8.088, -144.961, 0.28 ) }
    dend_42 { pt3dadd( 183.159, -8.00432, -145.491, 0.55 ) }
    dend_42 { pt3dadd( 185.993, -7.98997, -146.597, 0.28 ) }
    dend_42 { pt3dadd( 186.993, -8.06553, -146.908, 0.55 ) }
    dend_42 { pt3dadd( 189.055, -8.30435, -147.221, 0.28 ) }
    dend_42 { pt3dadd( 191.161, -8.69685, -147.157, 0.55 ) }
    dend_42 { pt3dadd( 195.411, -9.61098, -146.274, 0.28 ) }
    dend_42 { pt3dadd( 197.372, -10.0883, -145.651, 0.55 ) }
    dend_42 { pt3dadd( 200.3, -10.9393, -144.552, 0.28 ) }
    dend_42 { pt3dadd( 203.992, -11.9828, -143.037, 0.55 ) }
    dend_42 { pt3dadd( 206.657, -12.6965, -141.905, 0.55 ) }
    dend_42 { pt3dadd( 211.257, -13.7828, -139.891, 0.28 ) }
    dend_42 { pt3dadd( 213.141, -14.1647, -139.227, 0.55 ) }
    dend_42 { pt3dadd( 216.384, -14.6907, -138.457, 0.28 ) }
    dend_42 { pt3dadd( 219.599, -15.0044, -137.944, 0.55 ) }
    dend_42 { pt3dadd( 221.351, -15.0142, -137.932, 0.28 ) }
    dend_42 { pt3dadd( 222.917, -14.8303, -138.073, 0.55 ) }
    dend_42 { pt3dadd( 227.325, -14.1062, -138.926, 0.28 ) }
    dend_42 { pt3dadd( 230.453, -13.3785, -139.617, 0.28 ) }
    dend_42 { pt3dadd( 233.153, -12.5521, -140.286, 0.55 ) }
    dend_42 { pt3dadd( 236.131, -11.5767, -141.191, 0.28 ) }
    dend_42 { pt3dadd( 236.876, -11.2797, -141.4, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 80.5396, 11.7387, -45.9051, 0.55 ) }
    dend_35 { pt3dadd( 81.4601, 9.72845, -46.8054, 0.55 ) }
    dend_35 { pt3dadd( 82.0898, 8.01653, -47.455, 0.28 ) }
    dend_35 { pt3dadd( 82.6584, 6.46822, -47.9232, 0.55 ) }
    dend_35 { pt3dadd( 84.0258, 3.21375, -48.9433, 0.28 ) }
    dend_35 { pt3dadd( 84.108, 3.00337, -49.0356, 0.55 ) }
    dend_35 { pt3dadd( 84.5712, 1.89327, -49.6041, 0.28 ) }
    dend_35 { pt3dadd( 84.8834, 0.937512, -50.2119, 0.55 ) }
    dend_35 { pt3dadd( 85.1638, -0.0867344, -50.9497, 0.28 ) }
    dend_35 { pt3dadd( 85.5138, -1.50001, -52.0134, 0.55 ) }
    dend_35 { pt3dadd( 86.3873, -5.03989, -54.626, 0.55 ) }
    dend_35 { pt3dadd( 87.1542, -8.28066, -57.0577, 0.55 ) }
    dend_35 { pt3dadd( 87.7452, -10.8758, -59.0047, 0.55 ) }
    dend_35 { pt3dadd( 88.284, -13.4285, -60.8796, 0.55 ) }
    dend_35 { pt3dadd( 88.4202, -14.0846, -61.3398, 0.28 ) }
    dend_35 { pt3dadd( 88.5801, -14.7738, -61.7802, 0.55 ) }
    dend_35 { pt3dadd( 88.8757, -15.7005, -62.3112, 0.28 ) }
    dend_35 { pt3dadd( 89.5503, -17.3097, -63.1227, 0.55 ) }
    dend_35 { pt3dadd( 91.0624, -20.2698, -64.2162, 0.55 ) }
    dend_35 { pt3dadd( 91.8818, -21.8367, -64.6652, 0.28 ) }
    dend_35 { pt3dadd( 92.628, -23.4585, -65.1915, 0.55 ) }
    dend_35 { pt3dadd( 93.5176, -25.7745, -66.0137, 0.28 ) }
    dend_35 { pt3dadd( 94.1251, -27.6725, -66.7204, 0.55 ) }
    dend_35 { pt3dadd( 94.9215, -30.5332, -67.7837, 0.28 ) }
    dend_35 { pt3dadd( 95.7608, -33.4756, -68.7985, 0.55 ) }
    dend_35 { pt3dadd( 96.9289, -37.7637, -70.3077, 0.28 ) }
    dend_35 { pt3dadd( 97.506, -40.0596, -71.1197, 0.55 ) }
    dend_35 { pt3dadd( 98.064, -42.4232, -72.0022, 0.28 ) }
    dend_35 { pt3dadd( 98.5417, -44.5276, -72.8985, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 99.2316, -47.1777, -74.2249, 0.55 ) }
    dend_35 { pt3dadd( 100.021, -49.5957, -75.397, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 76.1296, 28.8681, -3.57251, 0.55 ) }
    dend_31 { pt3dadd( 78.257, 28.6104, -3.09694, 0.55 ) }
    dend_31 { pt3dadd( 79.8074, 28.3606, -2.8982, 0.55 ) }
    dend_31 { pt3dadd( 83.2014, 27.7721, -2.64143, 0.55 ) }
    dend_31 { pt3dadd( 84.7273, 27.4738, -2.66265, 0.55 ) }
    dend_31 { pt3dadd( 86.3925, 27.1829, -2.77145, 0.55 ) }
    dend_31 { pt3dadd( 88.6282, 26.83, -3.07755, 0.55 ) }
    dend_31 { pt3dadd( 90.9856, 26.3917, -3.62537, 0.55 ) }
    dend_31 { pt3dadd( 92.2223, 26.1436, -4.05531, 0.55 ) }
    dend_31 { pt3dadd( 94.7341, 25.6341, -5.27548, 0.55 ) }
    dend_31 { pt3dadd( 95.8908, 25.4086, -5.87471, 0.55 ) }
    dend_31 { pt3dadd( 98.6005, 24.8269, -7.34941, 0.55 ) }
    dend_31 { pt3dadd( 100.436, 24.3579, -8.33222, 0.55 ) }
    dend_31 { pt3dadd( 101.786, 24.0049, -8.99309, 0.83 ) }
    dend_31 { pt3dadd( 103.944, 23.3595, -10.0235, 0.55 ) }
    dend_31 { pt3dadd( 106.056, 22.6231, -10.9483, 0.83 ) }
    dend_31 { pt3dadd( 107.848, 21.915, -11.6674, 0.55 ) }
    dend_31 { pt3dadd( 109.444, 21.3097, -12.2225, 0.55 ) }
    dend_31 { pt3dadd( 110.352, 21.0066, -12.4876, 0.83 ) }
    dend_31 { pt3dadd( 112.473, 20.3072, -12.9928, 0.28 ) }
    dend_31 { pt3dadd( 113.529, 20.0047, -13.1763, 0.28 ) }
    dend_31 { pt3dadd( 114.55, 19.6453, -13.407, 0.28 ) }
    dend_31 { pt3dadd( 115.653, 19.2869, -13.6616, 0.28 ) }
    dend_31 { pt3dadd( 117.419, 18.7467, -14.1064, 0.28 ) }
    dend_31 { pt3dadd( 118.13, 18.5385, -14.264, 0.55 ) }
    dend_31 { pt3dadd( 119.831, 18.0605, -14.472, 0.55 ) }
    dend_31 { pt3dadd( 122.894, 17.1719, -14.6897, 0.55 ) }
    dend_31 { pt3dadd( 123.742, 16.9036, -14.7121, 0.55 ) }
    dend_31 { pt3dadd( 124.499, 16.6393, -14.699, 0.83 ) }
    dend_31 { pt3dadd( 126.146, 16.1184, -14.5363, 0.55 ) }
    dend_31 { pt3dadd( 127.577, 15.6687, -14.3716, 0.55 ) }
    dend_31 { pt3dadd( 128.93, 15.2498, -14.2096, 0.55 ) }
    dend_31 { pt3dadd( 129.977, 14.9063, -14.1142, 0.55 ) }
    dend_31 { pt3dadd( 131.635, 14.2429, -14.0446, 0.55 ) }
    dend_31 { pt3dadd( 133.586, 13.284, -14.0718, 0.55 ) }
    dend_31 { pt3dadd( 136.61, 11.4423, -14.3296, 0.55 ) }
    dend_31 { pt3dadd( 138.265, 10.1788, -14.5785, 0.55 ) }
    dend_31 { pt3dadd( 139.694, 8.82962, -14.8678, 0.28 ) }
    dend_31 { pt3dadd( 140.119, 8.32982, -14.9796, 0.55 ) }
    dend_31 { pt3dadd( 141.05, 6.92837, -15.277, 0.28 ) }
    dend_31 { pt3dadd( 141.844, 5.35522, -15.5767, 0.55 ) }
    dend_31 { pt3dadd( 142.581, 3.39244, -15.7933, 0.55 ) }
    dend_31 { pt3dadd( 143.08, 2.10334, -15.8748, 0.28 ) }
    dend_31 { pt3dadd( 143.264, 1.64829, -15.8816, 0.55 ) }
    dend_31 { pt3dadd( 143.74, 0.51835, -15.883, 0.28 ) }
    dend_31 { pt3dadd( 144.393, -0.950909, -15.8497, 0.55 ) }
    dend_31 { pt3dadd( 146.102, -4.48851, -15.6829, 0.55 ) }
    dend_31 { pt3dadd( 146.994, -6.27041, -15.5618, 0.55 ) }
    dend_31 { pt3dadd( 147.823, -7.90312, -15.4363, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 76.1296, 28.8681, -3.57251, 0.55 ) }
    dend_30 { pt3dadd( 77.4379, 29.479, -2.38674, 0.55 ) }
    dend_30 { pt3dadd( 77.8613, 29.6656, -2.0307, 0.55 ) }
    dend_30 { pt3dadd( 79.4535, 30.2575, -0.752353, 0.55 ) }
    dend_30 { pt3dadd( 81.2253, 30.9642, 0.691518, 0.55 ) }
    dend_30 { pt3dadd( 83.4866, 31.8837, 2.60763, 0.55 ) }
    dend_30 { pt3dadd( 84.1118, 32.1372, 3.13222, 0.55 ) }
    dend_30 { pt3dadd( 85.2374, 32.5419, 4.07536, 0.55 ) }
    dend_30 { pt3dadd( 86.4776, 33.0012, 5.05085, 0.55 ) }
    dend_30 { pt3dadd( 87.9281, 33.5574, 6.10396, 0.55 ) }
    dend_30 { pt3dadd( 89.2934, 34.1037, 7.09543, 0.55 ) }
    dend_30 { pt3dadd( 90.0464, 34.4285, 7.59225, 0.55 ) }
    dend_30 { pt3dadd( 90.9295, 34.8363, 8.16603, 0.55 ) }
    dend_30 { pt3dadd( 92.0237, 35.3679, 8.84549, 0.83 ) }
    dend_30 { pt3dadd( 93.846, 36.1756, 9.76416, 0.55 ) }
    dend_30 { pt3dadd( 95.0638, 36.6431, 10.3276, 0.83 ) }
    dend_30 { pt3dadd( 96.767, 37.1947, 11.0742, 0.55 ) }
    dend_30 { pt3dadd( 97.2925, 37.3327, 11.3044, 0.55 ) }
    dend_30 { pt3dadd( 98.9315, 37.6686, 12.0087, 0.55 ) }
    dend_30 { pt3dadd( 101.89, 38.0556, 13.2043, 0.55 ) }
    dend_30 { pt3dadd( 104.069, 38.2038, 14.0659, 0.55 ) }
    dend_30 { pt3dadd( 105.791, 38.2533, 14.8113, 0.55 ) }
    dend_30 { pt3dadd( 107.542, 38.2296, 15.6574, 0.55 ) }
    dend_30 { pt3dadd( 107.911, 38.2153, 15.8401, 0.28 ) }
    dend_30 { pt3dadd( 108.659, 38.1557, 16.2176, 0.83 ) }
    dend_30 { pt3dadd( 111.733, 37.8718, 17.7986, 0.55 ) }
    dend_30 { pt3dadd( 113.889, 37.6634, 18.8625, 0.55 ) }
    dend_30 { pt3dadd( 115.65, 37.5501, 19.7667, 0.55 ) }
    dend_30 { pt3dadd( 116.701, 37.4823, 20.3178, 0.83 ) }
    dend_30 { pt3dadd( 117.527, 37.4413, 20.7497, 0.28 ) }
    dend_30 { pt3dadd( 118.278, 37.4033, 21.1341, 0.55 ) }
    dend_30 { pt3dadd( 123.942, 38.7876, 24.5506, 0.55 ) }
    dend_30 { pt3dadd( 130.167, 38.8803, 27.1778, 0.55 ) }
    dend_30 { pt3dadd( 136.288, 39.8439, 29.8732, 0.55 ) }
    dend_30 { pt3dadd( 141.571, 40.243, 34.0683, 0.55 ) }
    dend_30 { pt3dadd( 146.449, 39.8272, 38.727, 0.55 ) }
    dend_30 { pt3dadd( 152.11, 37.9993, 41.9316, 0.55 ) }
    dend_30 { pt3dadd( 157.848, 35.2542, 44.2147, 0.55 ) }
    dend_30 { pt3dadd( 164.18, 33.5711, 45.869, 0.55 ) }
    dend_30 { pt3dadd( 170.385, 31.9106, 47.969, 0.55 ) }
    dend_30 { pt3dadd( 176.88, 30.8464, 49.4985, 0.55 ) }
    dend_30 { pt3dadd( 183.222, 30.3047, 51.7687, 0.55 ) }
    dend_30 { pt3dadd( 189.144, 28.741, 54.6248, 0.55 ) }
    dend_30 { pt3dadd( 195.097, 28.5046, 57.8126, 0.55 ) }
    dend_30 { pt3dadd( 200.621, 29.4594, 61.5863, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.86917, -32.5542, 6.5834, 1.38 ) }
    dend_13 { pt3dadd( -0.395999, -34.1055, 6.2134, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.86917, -32.5542, 6.5834, 0.55 ) }
    dend_12 { pt3dadd( -3.66112, -34.7793, 6.46262, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.63785, -37.6302, 6.33093, 0.55 ) }
    dend_12 { pt3dadd( -7.18246, -39.5189, 6.24565, 0.55 ) }
    dend_12 { pt3dadd( -8.46451, -41.0981, 5.96292, 0.55 ) }
    dend_12 { pt3dadd( -11.2378, -44.3704, 5.06761, 0.55 ) }
    dend_12 { pt3dadd( -13.1787, -46.5563, 4.38224, 0.55 ) }
    dend_12 { pt3dadd( -14.8977, -48.5162, 3.70342, 0.55 ) }
    dend_12 { pt3dadd( -19.3179, -53.288, 1.96351, 0.55 ) }
    dend_12 { pt3dadd( -24.6359, -58.8141, -0.0823379, 0.55 ) }
    dend_12 { pt3dadd( -28.7484, -63.0002, -1.74292, 0.55 ) }
    dend_12 { pt3dadd( -31.3683, -65.7486, -2.84318, 0.55 ) }
    dend_12 { pt3dadd( -34.3734, -69.0453, -4.09567, 0.55 ) }
    dend_12 { pt3dadd( -38.1839, -73.7704, -5.63046, 0.55 ) }
    dend_12 { pt3dadd( -40.4108, -77.1199, -6.47749, 0.55 ) }
    dend_12 { pt3dadd( -43.1737, -81.935, -7.26391, 0.55 ) }
    dend_12 { pt3dadd( -45.3776, -86.4449, -7.79768, 0.55 ) }
    dend_12 { pt3dadd( -47.5967, -92.0703, -8.29567, 0.55 ) }
    dend_12 { pt3dadd( -49.6834, -98.6722, -8.66834, 0.55 ) }
    dend_12 { pt3dadd( -50.7987, -103.716, -8.78517, 0.55 ) }
    dend_12 { pt3dadd( -51.1998, -106.225, -8.66384, 0.55 ) }
    dend_12 { pt3dadd( -51.8214, -112.117, -8.02522, 0.55 ) }
    dend_12 { pt3dadd( -52.319, -117.63, -7.27481, 0.55 ) }
    dend_12 { pt3dadd( -52.5755, -123.18, -6.08266, 0.55 ) }
    dend_12 { pt3dadd( -52.7723, -126.365, -5.22909, 0.55 ) }
    dend_12 { pt3dadd( -53.3553, -136.209, -2.22432, 0.55 ) }
    dend_12 { pt3dadd( -53.4042, -136.934, -1.99089, 0.55 ) }
    dend_12 { pt3dadd( -53.631, -141.372, -0.444976, 0.55 ) }
    dend_12 { pt3dadd( -54.4228, -149.31, 2.46932, 0.55 ) }
    dend_12 { pt3dadd( -54.688, -151.965, 3.28547, 0.55 ) }
    dend_12 { pt3dadd( -55.1369, -156.118, 3.84375, 0.55 ) }
    dend_12 { pt3dadd( -55.2305, -157.661, 3.70408, 0.55 ) }
    dend_12 { pt3dadd( -55.2247, -162.887, 2.27889, 0.55 ) }
    dend_12 { pt3dadd( -54.9657, -166.273, 0.665163, 0.55 ) }
    dend_12 { pt3dadd( -54.3028, -171.669, -2.97936, 0.55 ) }
    dend_12 { pt3dadd( -53.1779, -178.27, -7.91918, 0.28 ) }
    dend_12 { pt3dadd( -52.8535, -179.903, -9.35689, 0.55 ) }
    dend_12 { pt3dadd( -52.3329, -182.378, -11.7523, 0.28 ) }
    dend_12 { pt3dadd( -52.256, -182.751, -12.1333, 0.55 ) }
    dend_12 { pt3dadd( -51.8642, -184.794, -14.047, 0.28 ) }
    dend_12 { pt3dadd( -51.7934, -185.487, -14.5428, 0.55 ) }
    dend_12 { pt3dadd( -51.5724, -189.091, -16.4368, 0.28 ) }
    dend_12 { pt3dadd( -51.5458, -190.317, -17.0704, 0.55 ) }
    dend_12 { pt3dadd( -51.5321, -193.863, -18.7067, 0.28 ) }
    dend_12 { pt3dadd( -51.5232, -194.979, -19.2172, 0.55 ) }
    dend_12 { pt3dadd( -51.5299, -198.831, -20.9196, 0.28 ) }
    dend_12 { pt3dadd( -51.5229, -200.603, -21.7109, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.7461, -71.1396, 52.3931, 0.55 ) }
    dend_10 { pt3dadd( -19.9962, -80.7369, 58.5932, 0.55 ) }
    dend_10 { pt3dadd( -26.7131, -89.6922, 64.3201, 0.55 ) }
    dend_10 { pt3dadd( -32.6417, -99.3077, 69.8432, 0.55 ) }
    dend_10 { pt3dadd( -38.6367, -109.029, 75.1022, 0.55 ) }
    dend_10 { pt3dadd( -42.7308, -119.652, 80.4413, 0.55 ) }
    dend_10 { pt3dadd( -47.1414, -129.865, 86.3019, 0.55 ) }
    dend_10 { pt3dadd( -48.6212, -141.434, 91.0019, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.7461, -71.1396, 52.3931, 0.55 ) }
    dend_3 { pt3dadd( -15.3492, -80.0614, 61.7914, 0.55 ) }
    dend_3 { pt3dadd( -14.5434, -90.2753, 69.7487, 0.55 ) }
    dend_3 { pt3dadd( -15.6132, -101.011, 76.9517, 0.55 ) }
    dend_3 { pt3dadd( -16.8237, -112.512, 82.8304, 0.55 ) }
    dend_3 { pt3dadd( -17.6353, -123.856, 89.0707, 0.55 ) }
    dend_3 { pt3dadd( -18.7323, -134.725, 96.0666, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -56.5221, 31.0722, -15.1035, 0.83 ) }
    dend_60 { pt3dadd( -56.7576, 31.8911, -16.8241, 0.83 ) }
    dend_60 { pt3dadd( -57.3481, 33.9403, -20.7263, 0.55 ) }
    dend_60 { pt3dadd( -57.5751, 34.8604, -22.3048, 0.83 ) }
    dend_60 { pt3dadd( -57.7899, 35.8768, -23.9026, 0.55 ) }
    dend_60 { pt3dadd( -57.9625, 36.9901, -25.3494, 0.55 ) }
    dend_60 { pt3dadd( -58.0213, 37.5806, -25.988, 0.28 ) }
    dend_60 { pt3dadd( -58.0613, 38.0093, -26.2865, 0.55 ) }
    dend_60 { pt3dadd( -58.0647, 39.5571, -26.9692, 0.28 ) }
    dend_60 { pt3dadd( -58.041, 40.2319, -27.2331, 0.55 ) }
    dend_60 { pt3dadd( -57.964, 42.607, -28.0495, 0.28 ) }
    dend_60 { pt3dadd( -57.9357, 44.5061, -28.6213, 0.55 ) }
    dend_60 { pt3dadd( -58.0085, 47.4902, -29.3859, 0.28 ) }
    dend_60 { pt3dadd( -58.1499, 50.1219, -29.9841, 0.28 ) }
    dend_60 { pt3dadd( -58.3048, 51.5971, -30.2676, 0.55 ) }
    dend_60 { pt3dadd( -58.5924, 53.3373, -30.5721, 0.28 ) }
    dend_60 { pt3dadd( -58.7799, 54.1667, -30.6907, 0.55 ) }
    dend_60 { pt3dadd( -59.346, 56.08, -31.0219, 0.28 ) }
    dend_60 { pt3dadd( -59.824, 57.3257, -31.2817, 0.28 ) }
    dend_60 { pt3dadd( -60.3292, 58.5342, -31.5658, 0.28 ) }
    dend_60 { pt3dadd( -60.5718, 59.1742, -31.7258, 0.55 ) }
    dend_60 { pt3dadd( -61.4269, 61.7567, -32.4759, 0.28 ) }
    dend_60 { pt3dadd( -62.3502, 64.8068, -33.4515, 0.55 ) }
    dend_60 { pt3dadd( -62.6543, 65.8604, -33.7972, 0.55 ) }
    dend_60 { pt3dadd( -62.9706, 66.9226, -34.116, 0.55 ) }
    dend_60 { pt3dadd( -63.774, 69.1549, -34.7933, 0.55 ) }
    dend_60 { pt3dadd( -64.4068, 70.5996, -35.2406, 0.28 ) }
    dend_60 { pt3dadd( -64.7145, 71.1371, -35.3976, 0.55 ) }
    dend_60 { pt3dadd( -65.6482, 72.5918, -35.758, 0.28 ) }
    dend_60 { pt3dadd( -66.726, 74.1117, -36.1851, 0.55 ) }
    dend_60 { pt3dadd( -68.5192, 76.2428, -36.8229, 0.28 ) }
    dend_60 { pt3dadd( -69.3828, 77.1101, -37.0881, 0.28 ) }
    dend_60 { pt3dadd( -70.7948, 78.2514, -37.538, 0.55 ) }
    dend_60 { pt3dadd( -72.3805, 79.4048, -38.0517, 0.28 ) }
    dend_60 { pt3dadd( -72.666, 79.5784, -38.1331, 0.55 ) }
    dend_60 { pt3dadd( -73.6849, 80.111, -38.3912, 0.28 ) }
    dend_60 { pt3dadd( -77.1674, 81.7878, -39.1706, 0.55 ) }
    dend_60 { pt3dadd( -82.0153, 83.7058, -40.2872, 0.28 ) }
    dend_60 { pt3dadd( -82.9181, 83.9969, -40.5218, 0.55 ) }
    dend_60 { pt3dadd( -85.3978, 84.7042, -41.1739, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -86.444, 84.9812, -41.4667, 0.28 ) }
    dend_60 { pt3dadd( -87.3611, 85.1904, -41.7499, 0.55 ) }
    dend_60 { pt3dadd( -90.0636, 85.4799, -42.6589, 0.28 ) }
    dend_60 { pt3dadd( -91.9395, 85.5445, -43.1895, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -56.5221, 31.0722, -15.1035, 0.55 ) }
    dend_57 { pt3dadd( -56.9333, 32.3313, -15.4757, 0.55 ) }
    dend_57 { pt3dadd( -57.1819, 33.0877, -15.6194, 0.28 ) }
    dend_57 { pt3dadd( -57.4442, 33.6443, -15.5637, 0.55 ) }
    dend_57 { pt3dadd( -58.0465, 34.9223, -15.4359, 0.28 ) }
    dend_57 { pt3dadd( -58.4695, 35.82, -15.3461, 0.55 ) }
    dend_57 { pt3dadd( -59.2494, 37.475, -15.1805, 0.28 ) }
    dend_57 { pt3dadd( -59.7272, 38.384, -14.9199, 0.55 ) }
    dend_57 { pt3dadd( -61.3486, 40.6305, -13.4217, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -122.588, -51.133, -57.6446, 0.55 ) }
    dend_52 { pt3dadd( -128.531, -58.5032, -62.7182, 0.55 ) }
    dend_52 { pt3dadd( -132.729, -66.7113, -68.2306, 0.55 ) }
    dend_52 { pt3dadd( -135.626, -74.0091, -75.5611, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -122.588, -51.133, -57.6446, 0.55 ) }
    dend_49 { pt3dadd( -128.045, -56.1482, -64.2531, 0.55 ) }
    dend_49 { pt3dadd( -132.379, -60.9648, -71.7774, 0.55 ) }
    dend_49 { pt3dadd( -136.293, -65.8739, -79.4702, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -136.267, 14.3087, 34.1649, 0.55 ) }
    dend_47 { pt3dadd( -145.132, 14.0543, 38.7182, 0.55 ) }
    dend_47 { pt3dadd( -154.355, 15.1081, 42.3529, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -136.267, 14.3087, 34.1649, 0.55 ) }
    dend_46 { pt3dadd( -147.99, 12.7978, 36.1903, 0.55 ) }
    dend_46 { pt3dadd( -159.687, 13.1808, 38.8063, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 100.021, -49.5957, -75.397, 0.28 ) }
    dend_39 { pt3dadd( 109.521, -56.6376, -86.9228, 0.28 ) }
    dend_39 { pt3dadd( 110.48, -57.3357, -87.9103, 0.55 ) }
    dend_39 { pt3dadd( 112.099, -58.5144, -89.5777, 0.28 ) }
    dend_39 { pt3dadd( 113.462, -59.5068, -90.9815, 0.28 ) }
    dend_39 { pt3dadd( 115.267, -60.8205, -92.8399, 0.55 ) }
    dend_39 { pt3dadd( 117.646, -62.5526, -95.29, 0.55 ) }
    dend_39 { pt3dadd( 120.903, -64.2717, -96.0928, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 100.021, -49.5957, -75.397, 0.55 ) }
    dend_36 { pt3dadd( 101.28, -51.2998, -76.7084, 0.55 ) }
    dend_36 { pt3dadd( 101.709, -52.0857, -77.2976, 0.28 ) }
    dend_36 { pt3dadd( 102.378, -53.448, -78.338, 0.55 ) }
    dend_36 { pt3dadd( 103.854, -56.4493, -80.6299, 0.28 ) }
    dend_36 { pt3dadd( 104.876, -58.5292, -82.2183, 0.55 ) }
    dend_36 { pt3dadd( 106.609, -62.0531, -84.9094, 0.28 ) }
    dend_36 { pt3dadd( 108.635, -66.4283, -88.5223, 0.28 ) }
    dend_36 { pt3dadd( 109.49, -68.459, -90.2253, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 147.823, -7.90312, -15.4363, 0.28 ) }
    dend_33 { pt3dadd( 149.907, -10.1995, -13.9746, 0.28 ) }
    dend_33 { pt3dadd( 152.543, -13.1459, -11.7469, 0.28 ) }
    dend_33 { pt3dadd( 154.21, -15.0304, -10.2069, 0.55 ) }
    dend_33 { pt3dadd( 155.215, -16.0443, -9.29248, 0.28 ) }
    dend_33 { pt3dadd( 155.749, -16.5884, -8.79345, 0.28 ) }
    dend_33 { pt3dadd( 158.397, -19.2917, -6.38307, 0.55 ) }
    dend_33 { pt3dadd( 159.006, -19.8585, -5.74686, 0.28 ) }
    dend_33 { pt3dadd( 160.447, -21.319, -3.93457, 0.55 ) }
    dend_33 { pt3dadd( 161.678, -22.6145, -2.43231, 0.28 ) }
    dend_33 { pt3dadd( 162.751, -23.672, -1.23805, 0.55 ) }
    dend_33 { pt3dadd( 164.011, -24.9741, 0.0834186, 0.55 ) }
    dend_33 { pt3dadd( 166.018, -27.1556, 1.84097, 0.55 ) }
    dend_33 { pt3dadd( 166.502, -27.6996, 2.24813, 0.55 ) }
    dend_33 { pt3dadd( 168.236, -29.7451, 3.74005, 0.28 ) }
    dend_33 { pt3dadd( 168.908, -30.5924, 4.32255, 0.55 ) }
    dend_33 { pt3dadd( 169.845, -31.6706, 5.0626, 0.28 ) }
    dend_33 { pt3dadd( 171.169, -33.2299, 6.02932, 0.55 ) }
    dend_33 { pt3dadd( 173.364, -35.8204, 7.13423, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 147.823, -7.90312, -15.4363, 0.55 ) }
    dend_32 { pt3dadd( 145.563, -7.9399, -15.4865, 0.55 ) }
    dend_32 { pt3dadd( 143.729, -7.96976, -15.5273, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.395999, -34.1055, 6.2134, 0.83 ) }
    dend_17 { pt3dadd( -0.305606, -34.2796, 6.20881, 0.83 ) }
    dend_17 { pt3dadd( 0.714604, -35.8139, 6.29277, 0.83 ) }
    dend_17 { pt3dadd( 1.6195, -37.1574, 6.275, 0.55 ) }
    dend_17 { pt3dadd( 2.34142, -38.2292, 6.26083, 0.55 ) }
    dend_17 { pt3dadd( 3.87589, -40.5074, 6.23069, 0.83 ) }
    dend_17 { pt3dadd( 5.73709, -43.2706, 6.19414, 0.55 ) }
    dend_17 { pt3dadd( 6.74677, -44.7158, 6.20898, 0.83 ) }
    dend_17 { pt3dadd( 8.51407, -47.0101, 6.35837, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.395999, -34.1055, 6.2134, 0.55 ) }
    dend_14 { pt3dadd( -0.799316, -34.9913, 3.60999, 0.55 ) }
    dend_14 { pt3dadd( -1.23223, -35.9422, 0.815562, 0.55 ) }
    dend_14 { pt3dadd( -1.74329, -37.0647, -2.48329, 0.55 ) }
    dend_14 { pt3dadd( -2.36387, -38.4278, -6.48917, 0.55 ) }
    dend_14 { pt3dadd( -2.71604, -39.2013, -8.76237, 0.55 ) }
    dend_14 { pt3dadd( -2.78678, -39.3567, -9.21902, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.7323, -134.725, 96.0666, 0.55 ) }
    dend_7 { pt3dadd( -19.1242, -144.438, 103.448, 0.55 ) }
    dend_7 { pt3dadd( -17.5079, -154.525, 110.129, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.7323, -134.725, 96.0666, 0.55 ) }
    dend_4 { pt3dadd( -19.5331, -144.105, 101.568, 0.55 ) }
    dend_4 { pt3dadd( -20.9126, -153.319, 107.234, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -61.3486, 40.6305, -13.4217, 0.28 ) }
    dend_59 { pt3dadd( -63.0349, 42.3234, -11.4993, 0.28 ) }
    dend_59 { pt3dadd( -63.6617, 42.9703, -10.682, 0.55 ) }
    dend_59 { pt3dadd( -65.4496, 44.8515, -8.26974, 0.28 ) }
    dend_59 { pt3dadd( -66.3503, 45.7769, -7.18751, 0.55 ) }
    dend_59 { pt3dadd( -68.8221, 48.2717, -4.36214, 0.28 ) }
    dend_59 { pt3dadd( -71.3344, 50.8074, -1.49052, 0.55 ) }
    dend_59 { pt3dadd( -75.449, 54.7548, 3.31832, 0.28 ) }
    dend_59 { pt3dadd( -76.3261, 55.6038, 4.34292, 0.55 ) }
    dend_59 { pt3dadd( -78.2846, 57.6044, 6.50872, 0.28 ) }
    dend_59 { pt3dadd( -79.0553, 58.4404, 7.35644, 0.55 ) }
    dend_59 { pt3dadd( -87.3714, 63.4726, 14.9039, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -96.9691, 69.4948, 19.7062, 0.55 ) }
    dend_59 { pt3dadd( -105.234, 76.1481, 25.9402, 0.55 ) }
    dend_59 { pt3dadd( -112.186, 84.5186, 31.6884, 0.55 ) }
    dend_59 { pt3dadd( -120.383, 92.1604, 36.7748, 0.55 ) }
    dend_59 { pt3dadd( -129.17, 97.8655, 43.2301, 0.55 ) }
    dend_59 { pt3dadd( -136.873, 102.893, 51.4053, 0.55 ) }
    dend_59 { pt3dadd( -143.126, 107.009, 61.173, 0.55 ) }
    dend_59 { pt3dadd( -149.547, 111.784, 70.5223, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -61.3486, 40.6305, -13.4217, 0.55 ) }
    dend_58 { pt3dadd( -63.6266, 39.2699, -12.4248, 0.55 ) }
    dend_58 { pt3dadd( -64.8019, 38.5199, -11.9108, 0.28 ) }
    dend_58 { pt3dadd( -65.6764, 37.9617, -11.5284, 0.55 ) }
    dend_58 { pt3dadd( -66.4053, 37.4965, -11.2097, 0.28 ) }
    dend_58 { pt3dadd( -66.9159, 37.1706, -10.9864, 0.55 ) }
    dend_58 { pt3dadd( -68.3237, 36.2721, -10.3708, 0.28 ) }
    dend_58 { pt3dadd( -69.2435, 35.5919, -10.0977, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -135.626, -74.0091, -75.5611, 0.55 ) }
    dend_54 { pt3dadd( -139.319, -82.0182, -79.8496, 0.55 ) }
    dend_54 { pt3dadd( -142.886, -90.5337, -83.1553, 0.55 ) }
    dend_54 { pt3dadd( -145.609, -98.5716, -88.0695, 0.55 ) }
    dend_54 { pt3dadd( -149.398, -106.823, -91.7744, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -135.626, -74.0091, -75.5611, 0.55 ) }
    dend_53 { pt3dadd( -138.378, -76.8795, -82.2152, 0.55 ) }
    dend_53 { pt3dadd( -140.617, -78.6841, -89.414, 0.55 ) }
    dend_53 { pt3dadd( -143.645, -81.4082, -96.0096, 0.55 ) }
    dend_53 { pt3dadd( -148.205, -82.914, -102.096, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -136.293, -65.8739, -79.4702, 0.55 ) }
    dend_51 { pt3dadd( -140.846, -68.4481, -90.1209, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -136.293, -65.8739, -79.4702, 0.55 ) }
    dend_50 { pt3dadd( -142.515, -76.3508, -80.2257, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 120.903, -64.2717, -96.0928, 0.28 ) }
    dend_41 { pt3dadd( 124.053, -65.4915, -97.1816, 0.28 ) }
    dend_41 { pt3dadd( 125.516, -66.0581, -97.6873, 0.55 ) }
    dend_41 { pt3dadd( 128.307, -67.1385, -98.6518, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 120.903, -64.2717, -96.0928, 0.55 ) }
    dend_40 { pt3dadd( 120.808, -65.8749, -97.0764, 0.55 ) }
    dend_40 { pt3dadd( 120.618, -69.0816, -99.044, 0.28 ) }
    dend_40 { pt3dadd( 120.556, -70.1262, -99.6849, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 109.49, -68.459, -90.2253, 0.28 ) }
    dend_38 { pt3dadd( 111.237, -72.069, -93.6158, 0.28 ) }
    dend_38 { pt3dadd( 112.102, -73.8564, -95.2947, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 109.49, -68.459, -90.2253, 0.55 ) }
    dend_37 { pt3dadd( 107.821, -69.1524, -89.6258, 0.55 ) }
    dend_37 { pt3dadd( 103.167, -71.0857, -87.954, 0.28 ) }
    dend_37 { pt3dadd( 102.061, -71.545, -87.5569, 0.55 ) }
    dend_37 { pt3dadd( 99.0354, -72.8013, -86.4705, 0.28 ) }
    dend_37 { pt3dadd( 97.0856, -73.6112, -85.7703, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.51407, -47.0101, 6.35837, 0.83 ) }
    dend_23 { pt3dadd( 8.5649, -47.3095, 6.32614, 0.83 ) }
    dend_23 { pt3dadd( 9.27268, -51.2243, 6.02147, 0.83 ) }
    dend_23 { pt3dadd( 9.52221, -54.1682, 5.94261, 0.83 ) }
    dend_23 { pt3dadd( 9.52239, -57.0183, 6.1292, 0.83 ) }
    dend_23 { pt3dadd( 9.34809, -60.8163, 6.64179, 0.83 ) }
    dend_23 { pt3dadd( 9.00422, -65.1965, 7.37478, 0.83 ) }
    dend_23 { pt3dadd( 8.60358, -70.0857, 8.45001, 0.83 ) }
    dend_23 { pt3dadd( 8.18384, -74.8343, 9.71173, 0.83 ) }
    dend_23 { pt3dadd( 7.31216, -80.6796, 11.0716, 0.83 ) }
    dend_23 { pt3dadd( 6.78806, -83.3715, 11.5241, 0.83 ) }
    dend_23 { pt3dadd( 6.40465, -85.3965, 11.7373, 0.83 ) }
    dend_23 { pt3dadd( 5.59958, -89.2852, 12.0529, 0.83 ) }
    dend_23 { pt3dadd( 4.98699, -92.7657, 12.1577, 0.83 ) }
    dend_23 { pt3dadd( 4.19831, -100.175, 11.6214, 0.83 ) }
    dend_23 { pt3dadd( 3.89027, -104.227, 10.8121, 0.83 ) }
    dend_23 { pt3dadd( 3.6436, -107.962, 9.79623, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.51407, -47.0101, 6.35837, 0.55 ) }
    dend_18 { pt3dadd( 8.08413, -48.0459, 6.35711, 0.55 ) }
    dend_18 { pt3dadd( 7.75314, -48.7971, 6.40999, 0.55 ) }
    dend_18 { pt3dadd( 7.54693, -49.2761, 6.4931, 0.55 ) }
    dend_18 { pt3dadd( 7.24852, -50.0233, 6.70023, 0.55 ) }
    dend_18 { pt3dadd( 6.68154, -51.4997, 7.21019, 0.55 ) }
    dend_18 { pt3dadd( 6.22502, -52.6153, 7.71666, 0.55 ) }
    dend_18 { pt3dadd( 5.8458, -53.5077, 8.2175, 0.55 ) }
    dend_18 { pt3dadd( 5.43149, -54.4085, 8.78367, 0.55 ) }
    dend_18 { pt3dadd( 5.07589, -55.1551, 9.29118, 0.28 ) }
    dend_18 { pt3dadd( 4.76334, -55.7637, 9.79353, 0.55 ) }
    dend_18 { pt3dadd( 4.14593, -56.869, 10.8594, 0.55 ) }
    dend_18 { pt3dadd( 3.71944, -57.5464, 11.5806, 0.55 ) }
    dend_18 { pt3dadd( 3.47687, -57.926, 11.9802, 0.55 ) }
    dend_18 { pt3dadd( 3.17155, -58.375, 12.4246, 0.83 ) }
    dend_18 { pt3dadd( 2.26751, -59.7087, 13.6513, 0.28 ) }
    dend_18 { pt3dadd( 1.97054, -60.1503, 14.0453, 0.55 ) }
    dend_18 { pt3dadd( 1.46314, -60.9473, 14.7342, 0.28 ) }
    dend_18 { pt3dadd( 1.3043, -61.1925, 14.9646, 0.55 ) }
    dend_18 { pt3dadd( 0.965218, -61.7677, 15.4988, 0.28 ) }
    dend_18 { pt3dadd( 0.778188, -62.0953, 15.7788, 0.55 ) }
    dend_18 { pt3dadd( 0.145889, -63.169, 16.3918, 0.55 ) }
    dend_18 { pt3dadd( -1.00234, -66.0169, 19.2791, 0.55 ) }
    dend_18 { pt3dadd( -1.98173, -68.7193, 22.3618, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.78678, -39.3567, -9.21902, 0.55 ) }
    dend_16 { pt3dadd( -2.20311, -40.2901, -12.105, 0.55 ) }
    dend_16 { pt3dadd( -2.04972, -40.512, -12.942, 0.55 ) }
    dend_16 { pt3dadd( -1.71537, -41.0637, -15.014, 0.55 ) }
    dend_16 { pt3dadd( -1.09339, -42.155, -19.4768, 0.28 ) }
    dend_16 { pt3dadd( -1.02636, -42.3027, -20.125, 0.55 ) }
    dend_16 { pt3dadd( -0.82341, -42.9683, -22.7865, 0.55 ) }
    dend_16 { pt3dadd( -0.778803, -43.8543, -26.2895, 0.55 ) }
    dend_16 { pt3dadd( -0.779926, -44.1569, -27.6166, 0.28 ) }
    dend_16 { pt3dadd( -0.818935, -44.3531, -28.752, 0.28 ) }
    dend_16 { pt3dadd( -1.0638, -44.6353, -30.5777, 0.55 ) }
    dend_16 { pt3dadd( -1.2909, -44.8962, -32.845, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -1.44902, -44.9893, -34.9634, 0.55 ) }
    dend_16 { pt3dadd( -1.58019, -44.9452, -36.5886, 0.55 ) }
    dend_16 { pt3dadd( -1.63598, -44.8388, -37.7251, 0.55 ) }
    dend_16 { pt3dadd( -1.71478, -44.4092, -41.1116, 0.55 ) }
    dend_16 { pt3dadd( -1.82133, -43.7532, -44.6493, 0.55 ) }
    dend_16 { pt3dadd( -1.88294, -43.4127, -46.0956, 0.28 ) }
    dend_16 { pt3dadd( -1.92574, -43.1094, -47.4811, 0.55 ) }
    dend_16 { pt3dadd( -2.05105, -42.6421, -50.2775, 0.28 ) }
    dend_16 { pt3dadd( -2.10265, -42.5066, -51.2141, 0.83 ) }
    dend_16 { pt3dadd( -2.28135, -42.2265, -52.9099, 0.28 ) }
    dend_16 { pt3dadd( -2.53577, -42.0906, -54.0562, 0.55 ) }
    dend_16 { pt3dadd( -2.93768, -41.9436, -55.7034, 0.28 ) }
    dend_16 { pt3dadd( -3.11373, -41.8753, -56.3486, 0.55 ) }
    dend_16 { pt3dadd( -3.49366, -41.7641, -57.5106, 0.55 ) }
    dend_16 { pt3dadd( -4.10178, -41.4195, -59.232, 0.55 ) }
    dend_16 { pt3dadd( -4.54312, -41.1198, -60.3221, 0.28 ) }
    dend_16 { pt3dadd( -4.94488, -40.7607, -61.1616, 0.55 ) }
    dend_16 { pt3dadd( -5.39865, -40.2087, -62.1548, 0.28 ) }
    dend_16 { pt3dadd( -5.46675, -40.1047, -62.3217, 0.55 ) }
    dend_16 { pt3dadd( -5.86149, -39.1349, -64.0228, 0.28 ) }
    dend_16 { pt3dadd( -6.04268, -38.4197, -65.3289, 0.55 ) }
    dend_16 { pt3dadd( -6.09393, -37.3952, -67.1743, 0.83 ) }
    dend_16 { pt3dadd( -6.01465, -36.5359, -68.7761, 0.28 ) }
    dend_16 { pt3dadd( -5.96755, -36.3194, -69.2083, 0.55 ) }
    dend_16 { pt3dadd( -5.49413, -34.709, -72.6028, 0.28 ) }
    dend_16 { pt3dadd( -5.37589, -34.4387, -73.2215, 0.55 ) }
    dend_16 { pt3dadd( -4.94739, -33.5609, -75.0939, 0.28 ) }
    dend_16 { pt3dadd( -4.83479, -33.3353, -75.5787, 0.55 ) }
    dend_16 { pt3dadd( -4.59477, -32.7422, -76.7894, 0.28 ) }
    dend_16 { pt3dadd( -4.45659, -32.3112, -77.6252, 0.55 ) }
    dend_16 { pt3dadd( -4.32253, -31.3289, -79.3758, 0.28 ) }
    dend_16 { pt3dadd( -4.27719, -30.8005, -80.3979, 0.55 ) }
    dend_16 { pt3dadd( -4.27384, -29.7736, -82.5276, 0.28 ) }
    dend_16 { pt3dadd( -4.28362, -29.4956, -83.1576, 0.55 ) }
    dend_16 { pt3dadd( -4.33263, -29.12, -84.129, 0.28 ) }
    dend_16 { pt3dadd( -4.40281, -28.8006, -84.9328, 0.55 ) }
    dend_16 { pt3dadd( -4.6239, -28.1484, -86.5533, 0.28 ) }
    dend_16 { pt3dadd( -4.70375, -27.9604, -87.0333, 0.55 ) }
    dend_16 { pt3dadd( -5.41432, -26.4862, -90.5136, 0.28 ) }
    dend_16 { pt3dadd( -5.73517, -25.8798, -91.6765, 0.55 ) }
    dend_16 { pt3dadd( -6.40183, -24.6887, -93.6745, 0.28 ) }
    dend_16 { pt3dadd( -6.72064, -24.1131, -94.5583, 0.55 ) }
    dend_16 { pt3dadd( -7.55217, -22.7974, -96.5135, 0.28 ) }
    dend_16 { pt3dadd( -7.88945, -22.3454, -97.2115, 0.55 ) }
    dend_16 { pt3dadd( -9.26527, -20.9463, -99.6485, 0.28 ) }
    dend_16 { pt3dadd( -9.86739, -20.5074, -100.66, 0.55 ) }
    dend_16 { pt3dadd( -10.7794, -20.1515, -102.092, 0.55 ) }
    dend_16 { pt3dadd( -11.3689, -19.9952, -102.959, 0.55 ) }
    dend_16 { pt3dadd( -12.7069, -19.7159, -104.627, 0.28 ) }
    dend_16 { pt3dadd( -14.1289, -19.4501, -106.186, 0.28 ) }
    dend_16 { pt3dadd( -15.352, -19.2178, -107.453, 0.55 ) }
    dend_16 { pt3dadd( -17.0013, -18.7319, -108.85, 0.28 ) }
    dend_16 { pt3dadd( -17.9065, -18.3494, -109.446, 0.55 ) }
    dend_16 { pt3dadd( -20.191, -17.018, -110.69, 0.28 ) }
    dend_16 { pt3dadd( -21.554, -16.0539, -111.109, 0.55 ) }
    dend_16 { pt3dadd( -22.5449, -15.2852, -111.243, 0.28 ) }
    dend_16 { pt3dadd( -23.8129, -14.4004, -111.219, 0.55 ) }
    dend_16 { pt3dadd( -25.4897, -13.2385, -111.075, 0.28 ) }
    dend_16 { pt3dadd( -26.1267, -12.8243, -111.026, 0.55 ) }
    dend_16 { pt3dadd( -29.281, -10.9378, -111.014, 0.28 ) }
    dend_16 { pt3dadd( -30.3452, -10.3359, -111.019, 0.55 ) }
    dend_16 { pt3dadd( -32.9192, -8.97921, -110.993, 0.28 ) }
    dend_16 { pt3dadd( -34.3196, -8.25555, -110.98, 0.55 ) }
    dend_16 { pt3dadd( -35.4704, -7.66236, -110.971, 0.55 ) }
    dend_16 { pt3dadd( -36.8298, -6.96401, -110.984, 0.28 ) }
    dend_16 { pt3dadd( -37.483, -6.61373, -111.068, 0.55 ) }
    dend_16 { pt3dadd( -39.5939, -5.38552, -111.443, 0.28 ) }
    dend_16 { pt3dadd( -40.6938, -4.6258, -111.619, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.78678, -39.3567, -9.21902, 0.55 ) }
    dend_15 { pt3dadd( -2.06813, -39.4971, -9.59827, 0.55 ) }
    dend_15 { pt3dadd( -1.32777, -39.5499, -9.95752, 0.55 ) }
    dend_15 { pt3dadd( -0.378794, -39.5477, -10.3569, 0.55 ) }
    dend_15 { pt3dadd( 0.411456, -39.482, -10.6481, 0.55 ) }
    dend_15 { pt3dadd( 5.74304, -38.5176, -12.1658, 0.55 ) }
    dend_15 { pt3dadd( 6.95441, -38.1712, -12.5188, 0.55 ) }
    dend_15 { pt3dadd( 8.74995, -37.5376, -13.0709, 0.55 ) }
    dend_15 { pt3dadd( 10.023, -37.0492, -13.468, 0.55 ) }
    dend_15 { pt3dadd( 11.2682, -36.5058, -13.8279, 0.28 ) }
    dend_15 { pt3dadd( 13.1925, -35.569, -14.2929, 0.55 ) }
    dend_15 { pt3dadd( 16.064, -34.0933, -14.838, 0.28 ) }
    dend_15 { pt3dadd( 16.3144, -34.0107, -14.9432, 0.55 ) }
    dend_15 { pt3dadd( 17.7809, -33.7908, -16.0415, 0.28 ) }
    dend_15 { pt3dadd( 18.6416, -33.7144, -16.9462, 0.55 ) }
    dend_15 { pt3dadd( 19.4789, -33.723, -18.0138, 0.55 ) }
    dend_15 { pt3dadd( 20.9517, -33.8599, -19.9541, 0.55 ) }
    dend_15 { pt3dadd( 23.8508, -34.1625, -23.7537, 0.55 ) }
    dend_15 { pt3dadd( 25.841, -34.4003, -26.2702, 0.55 ) }
    dend_15 { pt3dadd( 26.5503, -34.4929, -27.12, 0.55 ) }
    dend_15 { pt3dadd( 31.3447, -35.0477, -32.5917, 0.55 ) }
    dend_15 { pt3dadd( 32.7057, -35.1712, -34.0173, 0.55 ) }
    dend_15 { pt3dadd( 33.5293, -35.242, -34.7591, 0.55 ) }
    dend_15 { pt3dadd( 35.597, -35.4731, -36.3198, 0.55 ) }
    dend_15 { pt3dadd( 40.7654, -36.3397, -39.7707, 0.55 ) }
    dend_15 { pt3dadd( 42.1949, -36.6401, -40.6396, 0.28 ) }
    dend_15 { pt3dadd( 43.0449, -36.8525, -41.0714, 0.55 ) }
    dend_15 { pt3dadd( 44.3148, -37.2233, -41.6868, 0.28 ) }
    dend_15 { pt3dadd( 44.8533, -37.4319, -41.8991, 0.55 ) }
    dend_15 { pt3dadd( 46.5597, -38.297, -42.1027, 0.28 ) }
    dend_15 { pt3dadd( 47.6087, -39.368, -41.5603, 0.55 ) }
    dend_15 { pt3dadd( 48.205, -40.1206, -41.1897, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 48.6978, -40.9394, -40.7732, 0.55 ) }
    dend_15 { pt3dadd( 49.0883, -41.8217, -40.3581, 0.28 ) }
    dend_15 { pt3dadd( 49.2571, -42.2745, -40.1862, 0.55 ) }
    dend_15 { pt3dadd( 49.61, -43.4549, -39.7407, 0.28 ) }
    dend_15 { pt3dadd( 49.7242, -43.8082, -39.669, 0.55 ) }
    dend_15 { pt3dadd( 50.4329, -45.8372, -39.3586, 0.28 ) }
    dend_15 { pt3dadd( 50.8486, -46.7809, -39.3025, 0.55 ) }
    dend_15 { pt3dadd( 51.9201, -48.8069, -39.3334, 0.28 ) }
    dend_15 { pt3dadd( 52.3856, -49.5569, -39.3977, 0.55 ) }
    dend_15 { pt3dadd( 54.0758, -52.0273, -39.6823, 0.28 ) }
    dend_15 { pt3dadd( 54.5037, -52.6289, -39.7708, 0.55 ) }
    dend_15 { pt3dadd( 55.8508, -54.5344, -40.1366, 0.28 ) }
    dend_15 { pt3dadd( 56.1266, -54.979, -40.2076, 0.55 ) }
    dend_15 { pt3dadd( 56.8169, -56.1524, -40.4072, 0.28 ) }
    dend_15 { pt3dadd( 57.2581, -56.8356, -40.575, 0.55 ) }
    dend_15 { pt3dadd( 57.7392, -57.5088, -40.772, 0.55 ) }
    dend_15 { pt3dadd( 58.6945, -58.8518, -41.1561, 0.28 ) }
    dend_15 { pt3dadd( 59.4014, -59.6881, -41.4332, 0.55 ) }
    dend_15 { pt3dadd( 61.7615, -61.8037, -42.3061, 0.28 ) }
    dend_15 { pt3dadd( 62.7171, -62.4988, -42.6688, 0.55 ) }
    dend_15 { pt3dadd( 63.3827, -62.9426, -42.9047, 0.28 ) }
    dend_15 { pt3dadd( 64.0647, -63.3507, -43.1301, 0.55 ) }
    dend_15 { pt3dadd( 66.186, -64.5024, -43.7779, 0.28 ) }
    dend_15 { pt3dadd( 67.7821, -65.3934, -44.2315, 0.55 ) }
    dend_15 { pt3dadd( 70.439, -67.0695, -44.8342, 0.28 ) }
    dend_15 { pt3dadd( 71.2758, -67.5914, -45.0199, 0.55 ) }
    dend_15 { pt3dadd( 72.8514, -68.5516, -45.2559, 0.28 ) }
    dend_15 { pt3dadd( 73.3654, -68.8663, -45.2978, 0.55 ) }
    dend_15 { pt3dadd( 74.1546, -69.3671, -45.2359, 0.28 ) }
    dend_15 { pt3dadd( 74.8319, -69.7898, -45.1268, 0.55 ) }
    dend_15 { pt3dadd( 76.605, -70.8404, -44.6544, 0.28 ) }
    dend_15 { pt3dadd( 78.635, -71.9616, -44.078, 0.28 ) }
    dend_15 { pt3dadd( 79.6367, -72.4808, -43.7164, 0.28 ) }
    dend_15 { pt3dadd( 80.6778, -72.9729, -43.4093, 0.55 ) }
    dend_15 { pt3dadd( 82.2099, -73.6216, -42.9641, 0.28 ) }
    dend_15 { pt3dadd( 82.8863, -73.8995, -42.7523, 0.83 ) }
    dend_15 { pt3dadd( 84.5803, -74.6298, -42.151, 0.28 ) }
    dend_15 { pt3dadd( 85.3315, -74.9647, -41.9296, 0.55 ) }
    dend_15 { pt3dadd( 88.6848, -76.5657, -41.1035, 0.28 ) }
    dend_15 { pt3dadd( 90.4148, -77.3888, -40.8152, 0.28 ) }
    dend_15 { pt3dadd( 91.7046, -77.9889, -40.6796, 0.55 ) }
    dend_15 { pt3dadd( 92.4852, -78.3549, -40.6758, 0.55 ) }
    dend_15 { pt3dadd( 94.6086, -79.3548, -40.8066, 0.28 ) }
    dend_15 { pt3dadd( 96.6096, -80.3702, -40.9995, 0.55 ) }
    dend_15 { pt3dadd( 98.4258, -81.3446, -41.1772, 0.28 ) }
    dend_15 { pt3dadd( 100.093, -82.2483, -41.4115, 0.55 ) }
    dend_15 { pt3dadd( 101.47, -82.9808, -41.5977, 0.28 ) }
    dend_15 { pt3dadd( 102.588, -83.5089, -41.6971, 0.55 ) }
    dend_15 { pt3dadd( 105.266, -84.6471, -41.8273, 0.28 ) }
    dend_15 { pt3dadd( 106.606, -85.2212, -41.8458, 0.55 ) }
    dend_15 { pt3dadd( 108.595, -86.0873, -41.8102, 0.28 ) }
    dend_15 { pt3dadd( 110.217, -86.7526, -41.7469, 0.55 ) }
    dend_15 { pt3dadd( 114.032, -88.1576, -41.5983, 0.28 ) }
    dend_15 { pt3dadd( 115.629, -88.6515, -41.6253, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.5079, -154.525, 110.129, 0.55 ) }
    dend_9 { pt3dadd( -16.8138, -164.88, 115.911, 0.55 ) }
    dend_9 { pt3dadd( -13.8363, -175.711, 119.783, 0.55 ) }
    dend_9 { pt3dadd( -12.2159, -186.353, 124.811, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.5079, -154.525, 110.129, 0.55 ) }
    dend_8 { pt3dadd( -16.8635, -163.124, 117.158, 0.55 ) }
    dend_8 { pt3dadd( -18.217, -170.659, 125.23, 0.55 ) }
    dend_8 { pt3dadd( -20.1519, -176.372, 134.579, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -20.9126, -153.319, 107.234, 0.55 ) }
    dend_6 { pt3dadd( -20.6894, -162.634, 113.376, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.9126, -153.319, 107.234, 0.55 ) }
    dend_5 { pt3dadd( -22.8096, -163.646, 113.148, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.6436, -107.962, 9.79623, 0.83 ) }
    dend_25 { pt3dadd( 4.43238, -111.271, 10.4817, 0.83 ) }
    dend_25 { pt3dadd( 5.16686, -114.052, 11.2934, 0.83 ) }
    dend_25 { pt3dadd( 5.89694, -116.817, 12.1002, 0.83 ) }
    dend_25 { pt3dadd( 6.59028, -119.443, 12.8665, 0.83 ) }
    dend_25 { pt3dadd( 7.65876, -123.49, 14.0473, 0.83 ) }
    dend_25 { pt3dadd( 8.71953, -127.507, 15.2197, 0.83 ) }
    dend_25 { pt3dadd( 9.53826, -130.155, 16.3864, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.6436, -107.962, 9.79623, 0.55 ) }
    dend_24 { pt3dadd( 4.93785, -109.702, 9.6662, 0.55 ) }
    dend_24 { pt3dadd( 5.89801, -111.068, 9.33117, 0.55 ) }
    dend_24 { pt3dadd( 6.54728, -112.082, 8.99057, 0.55 ) }
    dend_24 { pt3dadd( 7.10713, -113.28, 8.46853, 0.83 ) }
    dend_24 { pt3dadd( 7.63019, -114.646, 7.72521, 0.55 ) }
    dend_24 { pt3dadd( 8.1418, -115.983, 6.99815, 0.83 ) }
    dend_24 { pt3dadd( 8.59646, -117.439, 6.08917, 0.55 ) }
    dend_24 { pt3dadd( 8.84719, -118.286, 5.48484, 0.83 ) }
    dend_24 { pt3dadd( 9.51474, -121.035, 3.33648, 0.55 ) }
    dend_24 { pt3dadd( 9.84518, -123.201, 1.5434, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.98173, -68.7193, 22.3618, 0.55 ) }
    dend_20 { pt3dadd( -6.02433, -76.2745, 26.7885, 0.55 ) }
    dend_20 { pt3dadd( -11.4315, -82.9971, 31.1, 0.55 ) }
    dend_20 { pt3dadd( -17.6145, -88.8622, 35.6158, 0.55 ) }
    dend_20 { pt3dadd( -24.688, -93.6678, 40.0757, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.98173, -68.7193, 22.3618, 0.55 ) }
    dend_19 { pt3dadd( -4.06166, -74.5862, 27.7102, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 9.53826, -130.155, 16.3864, 0.55 ) }
    dend_27 { pt3dadd( 9.61556, -131.748, 16.841, 0.55 ) }
    dend_27 { pt3dadd( 9.75669, -133.779, 17.4843, 0.55 ) }
    dend_27 { pt3dadd( 9.89305, -135.695, 18.0814, 0.55 ) }
    dend_27 { pt3dadd( 9.97941, -137.059, 18.4818, 0.55 ) }
    dend_27 { pt3dadd( 10.1156, -139.495, 19.153, 0.55 ) }
    dend_27 { pt3dadd( 10.6411, -146.337, 20.8925, 0.55 ) }
    dend_27 { pt3dadd( 10.8978, -148.657, 21.3977, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 11.1041, -150.294, 21.6744, 0.55 ) }
    dend_27 { pt3dadd( 11.3895, -152.164, 21.8466, 0.55 ) }
    dend_27 { pt3dadd( 11.6159, -153.612, 21.848, 0.55 ) }
    dend_27 { pt3dadd( 12.2757, -156.991, 21.7368, 0.55 ) }
    dend_27 { pt3dadd( 12.6893, -159.561, 21.6287, 0.55 ) }
    dend_27 { pt3dadd( 12.9942, -161.246, 21.6169, 0.55 ) }
    dend_27 { pt3dadd( 13.7183, -165.614, 21.8031, 0.55 ) }
    dend_27 { pt3dadd( 14.1571, -168.551, 22.0522, 0.55 ) }
    dend_27 { pt3dadd( 14.6923, -172.336, 22.5873, 0.55 ) }
    dend_27 { pt3dadd( 15.2796, -176.624, 23.5327, 0.55 ) }
    dend_27 { pt3dadd( 15.7588, -179.479, 24.3676, 0.55 ) }
    dend_27 { pt3dadd( 16.0721, -181.163, 24.9148, 0.55 ) }
    dend_27 { pt3dadd( 16.3335, -182.718, 25.4084, 0.55 ) }
    dend_27 { pt3dadd( 16.7184, -184.685, 25.9489, 0.55 ) }
    dend_27 { pt3dadd( 17.6631, -189.432, 26.9208, 0.55 ) }
    dend_27 { pt3dadd( 18.1056, -191.266, 27.2432, 0.55 ) }
    dend_27 { pt3dadd( 18.5531, -193.311, 27.5775, 0.55 ) }
    dend_27 { pt3dadd( 19.2037, -196.384, 28.0581, 0.55 ) }
    dend_27 { pt3dadd( 19.5899, -198.753, 28.4255, 0.55 ) }
    dend_27 { pt3dadd( 19.8346, -201.011, 28.7171, 0.55 ) }
    dend_27 { pt3dadd( 19.9736, -203.17, 28.9743, 0.55 ) }
    dend_27 { pt3dadd( 20.067, -205.279, 29.2474, 0.55 ) }
    dend_27 { pt3dadd( 20.1458, -206.78, 29.4292, 0.55 ) }
    dend_27 { pt3dadd( 20.3088, -209.234, 29.6465, 0.55 ) }
    dend_27 { pt3dadd( 20.5149, -212.185, 29.6777, 0.55 ) }
    dend_27 { pt3dadd( 20.6759, -213.616, 29.595, 0.55 ) }
    dend_27 { pt3dadd( 20.8526, -214.873, 29.4316, 0.55 ) }
    dend_27 { pt3dadd( 21.3252, -217.238, 29.0085, 0.55 ) }
    dend_27 { pt3dadd( 21.6194, -218.739, 28.6956, 0.55 ) }
    dend_27 { pt3dadd( 21.9865, -220.587, 28.3838, 0.55 ) }
    dend_27 { pt3dadd( 22.178, -221.888, 28.2316, 0.55 ) }
    dend_27 { pt3dadd( 22.5852, -225.275, 27.9533, 0.55 ) }
    dend_27 { pt3dadd( 22.787, -227.813, 27.9103, 0.55 ) }
    dend_27 { pt3dadd( 22.9608, -231.745, 28.1461, 0.55 ) }
    dend_27 { pt3dadd( 23.0718, -234.278, 28.546, 0.55 ) }
    dend_27 { pt3dadd( 23.1483, -236.938, 29.0464, 0.28 ) }
    dend_27 { pt3dadd( 23.1428, -238.009, 29.2849, 0.28 ) }
    dend_27 { pt3dadd( 23.0631, -240.607, 30.0931, 0.28 ) }
    dend_27 { pt3dadd( 22.9235, -243.007, 31.0222, 0.28 ) }
    dend_27 { pt3dadd( 22.9503, -246.16, 32.638, 0.28 ) }
    dend_27 { pt3dadd( 24.3477, -253.207, 34.6893, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 9.53826, -130.155, 16.3864, 0.55 ) }
    dend_26 { pt3dadd( 10.5188, -130.606, 17.5766, 0.55 ) }
    dend_26 { pt3dadd( 12.407, -131.791, 20.1862, 0.55 ) }
    dend_26 { pt3dadd( 13.9745, -132.974, 22.5205, 0.28 ) }
    dend_26 { pt3dadd( 15.606, -134.327, 25.0868, 0.55 ) }
    dend_26 { pt3dadd( 16.4434, -135.198, 26.8026, 0.28 ) }
    dend_26 { pt3dadd( 17.7182, -136.776, 29.9754, 0.55 ) }
    dend_26 { pt3dadd( 18.0226, -137.629, 31.554, 0.28 ) }
    dend_26 { pt3dadd( 18.0756, -137.94, 32.1834, 0.28 ) }
    dend_26 { pt3dadd( 18.1557, -138.381, 33.2783, 0.55 ) }
    dend_26 { pt3dadd( 18.6439, -139.811, 37.3792, 0.28 ) }
    dend_26 { pt3dadd( 18.8919, -140.365, 39.0885, 0.55 ) }
    dend_26 { pt3dadd( 20.0045, -141.954, 43.9409, 0.28 ) }
    dend_26 { pt3dadd( 20.7298, -142.727, 46.4683, 0.28 ) }
    dend_26 { pt3dadd( 21.7616, -143.718, 49.5074, 0.55 ) }
    dend_26 { pt3dadd( 23.5741, -145.251, 53.7844, 0.28 ) }
    dend_26 { pt3dadd( 23.8639, -145.453, 54.3218, 0.55 ) }
    dend_26 { pt3dadd( 25.4261, -146.428, 56.8375, 0.28 ) }
    dend_26 { pt3dadd( 25.5875, -146.518, 57.0464, 0.55 ) }
    dend_26 { pt3dadd( 26.9786, -147.615, 58.9398, 0.28 ) }
    dend_26 { pt3dadd( 27.5995, -148.22, 59.8871, 0.55 ) }
    dend_26 { pt3dadd( 32.6268, -152.671, 67.7308, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -24.688, -93.6678, 40.0757, 0.55 ) }
    dend_22 { pt3dadd( -31.8327, -98.864, 47.6924, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -24.688, -93.6678, 40.0757, 0.55 ) }
    dend_21 { pt3dadd( -30.3221, -101.445, 42.5009, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 11
    dend_48 nseg = 7
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 7
    dend_12 nseg = 9
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_23 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 7
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_BP_b022a66bd2_0_0


