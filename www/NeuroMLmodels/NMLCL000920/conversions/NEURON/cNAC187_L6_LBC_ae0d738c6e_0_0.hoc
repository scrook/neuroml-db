// Cell: cNAC187_L6_LBC_ae0d738c6e_0_0
/*
{
  "id" : "cNAC187_L6_LBC_ae0d738c6e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.0872, -14.5298, 1.66446, 3.93857", "1.03391, -13.142, 1.51424, 6.52863", "0.980623, -11.7541, 1.36402, 8.04637", "0.927335, -10.3662, 1.21381, 9.63708", "0.874048, -8.97833, 1.06359, 11.064", "0.820761, -7.59046, 0.913373, 11.9239", "0.767473, -6.20258, 0.763156, 12.4398", "0.714186, -4.81471, 0.612939, 12.9921", "0.660898, -3.42683, 0.462723, 13.7517", "0.607611, -2.03896, 0.312506, 14.5599", "0.554324, -0.651085, 0.162289, 15.2134", "0.501036, 0.73679, 0.0120717, 15.5164", "0.447749, 2.12466, -0.138145, 15.3298", "0.394461, 3.51254, -0.288362, 13.7024", "0.341174, 4.90041, -0.438579, 11.5148", "0.287887, 6.28829, -0.588796, 9.87312", "0.234599, 7.67616, -0.739013, 8.2425", "0.181312, 9.06404, -0.88923, 6.9098", "0.128024, 10.4519, -1.03945, 5.83952", "0.0747371, 11.8398, -1.18966, 4.73272", "0.0214497, 13.2277, -1.33988, 2.78861" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.14716, -13.2806, 1.14781, 5.97", "1.14308, -13.3404, 1.14841, 6.04", "1.02875, -15.0165, 1.16522, 6.04", "1.00132, -15.4186, 1.16926, 5.0", "0.905337, -16.8256, 1.18336, 5.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.10284, 2.42939, -0.602184, 1.84", "-6.10284, 2.42939, -0.602184, 1.84", "-6.5228, 2.98402, -0.670099, 1.62", "-7.00942, 3.64843, -0.749261, 1.33", "-7.14346, 3.83806, -0.778846, 1.33", "-8.0469, 5.11615, -1.01942, 1.33", "-8.72907, 6.08498, -1.21564, 1.33", "-8.77389, 6.14983, -1.22929, 1.33", "-9.58946, 7.35657, -1.49819, 1.33", "-10.0975, 8.1516, -1.67048, 1.33", "-10.6889, 9.1019, -1.8871, 1.33", "-10.7241, 9.16092, -1.90032, 1.33", "-11.3962, 10.3413, -2.13859, 1.33", "-11.429, 10.4017, -2.15212, 1.33", "-11.8722, 11.2691, -2.36081, 1.33", "-12.4929, 12.5508, -2.65425, 0.96", "-13.0098, 13.7073, -2.91849, 0.96", "-13.0365, 13.7698, -2.93501, 0.96", "-13.4621, 14.8139, -3.24367, 1.47", "-13.5133, 14.9391, -3.27983, 1.47", "-13.7743, 15.5932, -3.4517, 1.77", "-14.0129, 16.2113, -3.5902, 1.77", "-14.4077, 17.2099, -3.807, 1.77", "-14.633, 17.7563, -3.91259, 1.62", "-15.0732, 18.795, -4.07908, 1.62", "-15.547, 19.9156, -4.23944, 1.62", "-15.5739, 19.9797, -4.24757, 1.62", "-15.8869, 20.7136, -4.33274, 1.4", "-16.059, 21.1186, -4.36082, 1.33", "-16.1142, 21.2468, -4.3727, 1.33", "-16.7516, 22.708, -4.52672, 1.33", "-16.7802, 22.7715, -4.53362, 1.33", "-17.0378, 23.3282, -4.59208, 1.18", "-18.8214, 27.0311, -5.00673, 1.18", "-19.2148, 27.8426, -5.104, 1.18", "-19.2879, 27.9899, -5.12264, 1.18", "-19.6446, 28.6893, -5.21593, 1.18", "-19.9505, 29.2928, -5.29444, 1.18", "-20.381, 30.1536, -5.40018, 1.4", "-20.7428, 30.8744, -5.50976, 1.69", "-20.8043, 31.0104, -5.52447, 1.69", "-20.9814, 31.4277, -5.56826, 1.69", "-21.0362, 31.5668, -5.58005, 1.69", "-21.2276, 32.0909, -5.60764, 1.69", "-21.2543, 32.1663, -5.6096, 1.69", "-21.6396, 33.2507, -5.63515, 1.69", "-21.8154, 33.7617, -5.64526, 1.03", "-22.3419, 35.3521, -5.67053, 1.03", "-22.6927, 36.411, -5.68255, 1.03", "-22.8115, 36.7684, -5.68468, 1.33", "-22.8816, 36.9769, -5.68532, 1.33", "-23.1386, 37.7492, -5.68418, 1.33", "-23.3209, 38.3275, -5.67982, 1.47", "-23.5683, 39.1486, -5.6762, 1.47", "-23.7397, 39.774, -5.6762, 1.47", "-23.842, 40.1599, -5.6762, 1.47", "-23.8775, 40.2953, -5.6762, 1.47", "-24.1548, 41.3703, -5.6762, 1.25", "-24.231, 41.65, -5.68374, 1.25", "-24.5611, 42.8545, -5.73627, 1.25", "-24.7405, 43.4523, -5.74722, 1.25", "-24.8222, 43.7058, -5.74757, 1.25", "-25.2522, 44.855, -5.73071, 1.25", "-25.9093, 46.4205, -5.6875, 1.25", "-25.9384, 46.4841, -5.6851, 1.25", "-26.4779, 47.6089, -5.6293, 1.25", "-26.5439, 47.7436, -5.62456, 1.25", "-27.3239, 49.3065, -5.58033, 1.25", "-27.3607, 49.3775, -5.57876, 1.25", "-27.8572, 50.3345, -5.56308, 1.55", "-28.3364, 51.2658, -5.56587, 1.55", "-29.6969, 53.9362, -5.64129, 1.55", "-29.7284, 53.9987, -5.64313, 1.55", "-30.3435, 55.2383, -5.68163, 1.47", "-30.6812, 55.9215, -5.70229, 1.62", "-30.7486, 56.0555, -5.70375, 1.62", "-31.0488, 56.6354, -5.69471, 1.62", "-31.0841, 56.707, -5.68925, 1.62", "-31.308, 57.1733, -5.65185, 1.62", "-31.5778, 57.7172, -5.60691, 1.33", "-32.0184, 58.5716, -5.54478, 1.25", "-32.0507, 58.6336, -5.54029, 1.25", "-32.3363, 59.1828, -5.50117, 1.11", "-33.3227, 61.077, -5.37529, 1.11", "-33.7025, 61.8108, -5.33314, 1.92", "-34.2328, 62.8297, -5.29386, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.96716, 2.31939, -0.292184, 1.69", "7.96716, 2.31939, -0.292184, 1.69", "8.86531, 2.50332, -0.292184, 1.69", "9.9139, 2.71654, -0.292184, 1.62", "11.6722, 3.07046, -0.292184, 1.62", "13.0021, 3.32331, -0.292184, 1.62", "13.9581, 3.4885, -0.292184, 1.84", "14.1066, 3.50957, -0.292184, 1.84", "15.0872, 3.60072, -0.292184, 1.84", "15.2271, 3.60639, -0.292184, 1.84", "16.0399, 3.58761, -0.292184, 1.84", "16.4694, 3.55892, -0.292184, 1.84", "17.0968, 3.50498, -0.292184, 1.84", "18.4215, 3.38646, -0.292184, 1.55", "18.5707, 3.37059, -0.292184, 1.55", "19.9648, 3.2245, -0.292184, 1.55", "20.104, 3.21018, -0.292184, 1.55", "21.2121, 3.10622, -0.292184, 1.33", "22.4588, 2.99178, -0.292184, 1.18", "23.3807, 2.89963, -0.282794, 1.4", "24.4194, 2.80645, -0.264033, 1.4", "25.4571, 2.75076, -0.238549, 1.25", "26.6363, 2.72393, -0.204336, 1.25", "26.7761, 2.72723, -0.197533, 1.25", "27.8416, 2.80231, -0.1275, 1.03", "28.8945, 2.9225, -0.0439009, 1.03", "30.3559, 3.15608, 0.128713, 1.03", "30.4336, 3.17094, 0.14044, 1.03", "31.2741, 3.35135, 0.290608, 1.33", "32.2603, 3.57989, 0.480479, 1.62", "32.3362, 3.59944, 0.496527, 1.62", "33.3544, 3.85078, 0.761352, 1.99", "33.6554, 3.91488, 0.856232, 2.43", "33.7209, 3.92802, 0.876938, 2.43", "34.3111, 4.04217, 1.06446, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.237159, 12.8794, -1.85219, 4.13", "0.237159, 12.8794, -1.85219, 4.13", "0.299423, 13.4002, -1.89288, 4.13", "0.501951, 15.0528, -2.04542, 3.32", "0.660489, 16.298, -2.14173, 2.95", "0.880977, 18.0722, -2.25669, 2.28", "1.02878, 19.3351, -2.32576, 2.28", "1.17497, 20.5667, -2.3925, 2.28", "1.32447, 21.7951, -2.45797, 2.43", "1.54892, 23.5407, -2.54506, 2.5", "1.74978, 25.2089, -2.60765, 2.5", "1.92258, 26.8903, -2.61829, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999876050328307
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.0214497, 13.2277, -1.33988, 1.03278", "-0.554051, 28.2167, -1.33988, 1.03278", "-1.12955, 43.2056, -1.33988, 1.03278" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.905337, -16.8256, 1.18336, 1.5", "2.71138, -18.699, 1.18336, 1.5", "3.39889, -19.4202, 1.18336, 2.0", "4.8235, -20.9343, 1.18336, 1.77", "5.45173, -21.6151, 1.18336, 1.77", "5.50561, -21.6742, 1.18336, 1.4", "6.2455, -22.4882, 1.18336, 1.77", "7.1072, -23.4548, 1.18336, 1.77", "7.79832, -24.2366, 1.18336, 2.14", "7.99884, -24.4705, 1.18336, 2.14", "8.93647, -25.5771, 1.18336, 2.36", "9.44372, -26.1781, 1.18336, 2.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.905337, -16.8256, 1.18336, 3.02", "0.615002, -19.3729, 1.19375, 3.02", "0.494601, -20.4293, 1.19805, 3.5", "0.215641, -22.8768, 1.20802, 3.5", "-0.164898, -26.2155, 1.22163, 3.9", "-0.190646, -26.4414, 1.22255, 4.13" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-34.2328, 62.8297, -5.29386, 0.88", "-34.5184, 63.0941, -5.34054, 0.88", "-34.9904, 63.5054, -5.41166, 0.88", "-35.662, 64.0277, -5.49066, 0.88", "-36.2118, 64.4369, -5.54796, 0.29", "-36.2684, 64.4778, -5.55236, 0.29", "-37.1126, 65.0804, -5.60544, 0.29", "-37.2369, 65.1641, -5.61161, 0.29", "-38.1999, 65.7987, -5.64623, 0.29", "-38.284, 65.8509, -5.64787, 0.29", "-39.838, 66.8399, -5.73435, 0.29", "-40.451, 67.2315, -5.79673, 0.66", "-40.6955, 67.3831, -5.8328, 0.96", "-41.0619, 67.6008, -5.89351, 1.25", "-41.5071, 67.8556, -5.97913, 1.25", "-42.4046, 68.3469, -6.15732, 0.29", "-42.636, 68.4695, -6.20512, 0.29", "-43.7511, 69.0734, -6.41594, 0.29", "-45.1462, 69.8449, -6.65065, 0.29", "-45.4869, 70.034, -6.70906, 0.59", "-45.9977, 70.3288, -6.79078, 0.96", "-46.4392, 70.591, -6.84437, 0.96", "-46.9235, 70.8944, -6.91833, 0.96", "-46.9803, 70.9337, -6.92974, 0.96", "-47.651, 71.4415, -7.09337, 0.29", "-47.7054, 71.4836, -7.10635, 0.29", "-48.5941, 72.1933, -7.28396, 0.29", "-48.6484, 72.2366, -7.29278, 0.29", "-49.016, 72.5266, -7.33486, 0.29", "-49.0789, 72.5759, -7.33894, 0.29", "-49.3204, 72.7608, -7.33894, 0.29", "-50.539, 73.6606, -7.33894, 0.29", "-50.596, 73.7012, -7.33792, 0.29", "-51.007, 73.9874, -7.32574, 0.29", "-51.1412, 74.0766, -7.32047, 0.29", "-51.8175, 74.5054, -7.28521, 0.29", "-52.347, 74.8341, -7.25011, 0.29", "-52.6656, 75.0291, -7.17642, 1.11", "-52.7929, 75.1109, -7.13657, 1.11", "-53.3187, 75.4614, -6.95499, 1.4", "-53.403, 75.5188, -6.92527, 1.4", "-53.7781, 75.7714, -6.79664, 1.4", "-54.8488, 76.5104, -6.39426, 0.22", "-56.7029, 77.8218, -5.67427, 0.22", "-57.1423, 78.1546, -5.51075, 1.03", "-57.4963, 78.4363, -5.38293, 1.47", "-57.9572, 78.8062, -5.22508, 1.47", "-59.0359, 79.6788, -4.88932, 0.22", "-59.0887, 79.7233, -4.87732, 0.22", "-60.374, 80.9404, -4.44041, 0.22", "-60.422, 80.9881, -4.42241, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-34.2328, 62.8297, -5.29386, 2.06", "-34.4363, 63.7433, -5.4269, 2.06", "-34.4679, 63.9046, -5.4466, 2.06", "-34.6716, 65.0254, -5.57034, 1.55", "-34.8927, 66.0142, -5.64443, 0.88", "-35.1436, 67.0225, -5.70537, 0.74", "-35.1784, 67.1579, -5.71253, 0.74", "-35.4389, 68.0708, -5.74748, 0.74", "-35.4841, 68.2138, -5.75066, 0.74", "-36.5037, 71.0282, -5.75066, 0.74", "-36.7169, 71.5655, -5.75066, 1.11", "-36.8354, 71.8301, -5.7581, 1.11", "-37.3244, 72.8207, -5.81097, 1.11", "-37.4817, 73.1009, -5.83276, 1.11", "-38.0515, 74.0444, -5.92401, 1.11", "-38.0897, 74.1026, -5.93138, 1.11", "-38.7259, 75.086, -6.04596, 1.55", "-39.356, 76.0803, -6.15385, 1.55", "-39.8481, 76.9367, -6.23307, 1.11", "-40.3271, 77.9006, -6.29659, 0.96", "-40.3547, 77.9649, -6.29921, 0.96", "-41.0683, 79.8287, -6.33318, 0.96", "-41.1377, 80.0375, -6.332, 0.96", "-41.5558, 81.4535, -6.3227, 0.96", "-42.1109, 83.5621, -6.30792, 0.96", "-42.3403, 84.498, -6.30138, 1.18", "-42.5944, 85.5398, -6.26988, 1.62", "-42.8475, 86.6212, -6.21564, 1.62", "-42.867, 86.6986, -6.21056, 1.62", "-43.2042, 87.9225, -6.11001, 1.62", "-43.6378, 89.4289, -5.96686, 1.62", "-44.0453, 90.8191, -5.83748, 1.62", "-44.0677, 90.8954, -5.82846, 1.62", "-44.4254, 92.1098, -5.66605, 1.62", "-44.7152, 93.0545, -5.53946, 1.25", "-44.941, 93.747, -5.4547, 1.03", "-45.4671, 95.2243, -5.31802, 1.03", "-46.0871, 96.9074, -5.20614, 0.88", "-46.1152, 96.9822, -5.20162, 0.88", "-46.8083, 98.8118, -5.10713, 0.74", "-47.634, 101.025, -5.01742, 0.74", "-48.8306, 104.286, -4.88022, 0.74", "-49.2919, 105.588, -4.83868, 0.59", "-49.3882, 105.872, -4.83353, 0.59", "-50.1561, 108.295, -4.78155, 0.59", "-50.7666, 110.429, -4.70002, 0.59", "-50.9468, 111.164, -4.65763, 1.92", "-51.2287, 112.654, -4.54278, 2.65", "-51.2403, 112.722, -4.53673, 2.65", "-51.3607, 113.525, -4.46127, 2.65", "-51.465, 114.436, -4.36587, 0.66", "-51.5577, 115.38, -4.27341, 0.66", "-51.7026, 117.274, -4.12697, 0.66", "-51.7068, 117.354, -4.12017, 0.66", "-51.7383, 118.221, -4.06274, 0.88", "-51.7405, 118.371, -4.05675, 0.88", "-51.7349, 119.25, -4.01375, 0.88", "-51.7483, 120.187, -3.92905, 1.33", "-51.7558, 120.406, -3.90293, 1.33", "-51.8285, 121.494, -3.76242, 1.33", "-51.8343, 121.553, -3.75412, 1.33", "-52.0156, 122.832, -3.57237, 0.52", "-52.3056, 124.373, -3.34559, 0.52", "-52.4975, 125.156, -3.23661, 0.52", "-52.6198, 125.546, -3.20299, 1.03", "-52.6742, 125.686, -3.20089, 1.03", "-52.9803, 126.417, -3.22609, 1.03", "-53.0091, 126.481, -3.23197, 1.03", "-53.4112, 127.343, -3.31285, 1.03", "-53.8978, 128.408, -3.40142, 0.29", "-54.6732, 130.152, -3.5347, 0.29", "-54.9687, 130.847, -3.58151, 1.03", "-55.2673, 131.573, -3.62249, 1.18", "-55.6574, 132.543, -3.66687, 1.18", "-56.1143, 133.706, -3.70177, 1.33", "-56.5242, 134.792, -3.70987, 1.69", "-56.9213, 135.818, -3.72489, 2.43", "-57.378, 136.98, -3.75281, 2.95", "-57.4071, 137.054, -3.75475, 2.95", "-57.8163, 138.123, -3.78402, 3.32" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "34.3111, 4.04217, 1.06446, 0.81", "35.3507, 3.1372, 2.16872, 0.81", "36.3977, 2.2247, 3.18397, 0.52", "36.4418, 2.18838, 3.22451, 0.52", "37.3056, 1.48904, 4.00045, 0.66", "37.9327, 1.0052, 4.5185, 0.66", "38.1307, 0.858824, 4.67165, 0.66", "38.4262, 0.662657, 4.84698, 0.66", "39.5306, -2.36958E-4, 5.34906, 0.44", "39.5887, -0.0316879, 5.37213, 0.44", "40.3496, -0.377757, 5.59002, 0.44", "40.5422, -0.453309, 5.6646, 0.74", "40.674, -0.499909, 5.71913, 0.74", "41.3387, -0.72483, 5.99256, 0.74", "41.4865, -0.77201, 6.05016, 0.74", "42.2559, -0.97738, 6.37741, 0.74", "43.6344, -1.27788, 7.03778, 0.88", "44.2365, -1.36429, 7.33457, 0.88", "44.7072, -1.39622, 7.5736, 0.37", "44.769, -1.39526, 7.60643, 0.37", "45.3677, -1.33723, 7.87818, 0.37", "45.4674, -1.31826, 7.90958, 0.37", "46.032, -1.2254, 7.96543, 0.37", "46.4908, -1.1848, 8.01042, 0.96", "46.7626, -1.18276, 8.03468, 0.96", "47.502, -1.23532, 8.09039, 0.96", "48.0058, -1.30724, 8.1229, 1.25", "48.2753, -1.35029, 8.15298, 1.25", "48.769, -1.44719, 8.2621, 1.25", "48.9754, -1.49557, 8.32082, 1.25", "49.3846, -1.60613, 8.45814, 1.25", "49.4561, -1.62956, 8.48528, 1.25", "50.1684, -1.93419, 8.86596, 1.25", "51.1391, -2.37832, 9.58746, 0.74", "51.6244, -2.61167, 10.0156, 0.74", "51.8154, -2.69783, 10.2315, 0.74", "52.1218, -2.80399, 10.6015, 0.74", "53.3165, -3.11351, 12.0607, 0.74", "54.2269, -3.28691, 13.2316, 0.66", "54.2766, -3.29426, 13.2938, 0.66", "55.5613, -3.44194, 14.8463, 0.96", "56.4244, -3.54482, 15.7809, 0.96", "57.4513, -3.67409, 16.7068, 0.52", "58.2872, -3.79043, 17.273, 1.11", "59.3885, -4.01044, 17.8377, 1.25", "59.4519, -4.02649, 17.8626, 1.25", "60.6218, -4.40885, 18.1126, 1.25", "61.5479, -4.75938, 18.2891, 0.96", "61.8471, -4.87083, 18.3307, 0.96", "62.2216, -5.00196, 18.3747, 1.25", "62.9484, -5.24003, 18.4801, 1.25", "64.386, -5.66229, 18.7069, 1.25", "65.5091, -5.93175, 18.8979, 0.96", "65.7222, -5.97274, 18.934, 0.96", "66.5165, -6.09432, 19.0633, 0.96", "66.5854, -6.10173, 19.0736, 0.96", "67.5497, -6.14816, 19.1833, 0.96", "68.3608, -6.13867, 19.2384, 1.25", "68.7307, -6.1298, 19.2412, 1.47", "68.8007, -6.12781, 19.2408, 1.47", "69.2394, -6.11275, 19.2116, 1.47", "70.5634, -6.05905, 19.0775, 0.88", "70.6229, -6.05661, 19.0701, 0.88", "71.5652, -6.01944, 18.8904, 0.66", "73.0873, -5.97957, 18.5561, 0.66", "74.3391, -5.96235, 18.2701, 1.03", "75.0007, -5.95877, 18.1275, 1.25", "75.9422, -5.97581, 17.9409, 1.47", "77.4412, -6.03329, 17.6733, 0.81", "78.9846, -6.15113, 17.5183, 0.74", "80.1571, -6.30033, 17.5312, 0.74", "80.9754, -6.4419, 17.6274, 1.11", "82.1165, -6.67963, 17.8395, 1.11", "82.192, -6.69736, 17.8591, 1.11", "84.0975, -7.19711, 18.6083, 1.11", "84.9071, -7.43706, 18.9826, 1.33", "85.6431, -7.67779, 19.3576, 1.47", "86.5829, -8.00201, 19.8518, 1.62", "86.641, -8.02211, 19.8852, 1.62", "87.908, -8.46199, 20.6262, 1.62", "88.7952, -8.76871, 21.127, 0.96", "89.9571, -9.14881, 21.7476, 0.59", "90.0163, -9.16791, 21.7797, 0.59", "90.9392, -9.45381, 22.318, 0.88", "91.1269, -9.50398, 22.4213, 1.25", "91.8757, -9.65712, 22.7682, 1.25", "92.6074, -9.72052, 23.1414, 1.25", "92.6782, -9.71772, 23.1784, 1.25", "93.8891, -9.57397, 23.8294, 1.33", "94.4584, -9.44207, 24.1441, 1.33", "95.1678, -9.20155, 24.6111, 0.59", "96.2954, -8.72056, 25.3884, 0.59", "96.8122, -8.48572, 25.7277, 0.44", "96.8774, -8.45742, 25.7644, 0.44", "97.3307, -8.2848, 25.9221, 0.44", "98.5508, -7.90911, 26.2269, 0.44", "99.5214, -7.7403, 26.313, 1.25", "100.21, -7.71364, 26.219, 1.62", "100.57, -7.70793, 26.11, 1.62", "101.655, -7.6733, 25.7162, 0.96", "101.73, -7.66894, 25.6884, 0.96", "102.611, -7.5909, 25.3437, 0.96", "103.866, -7.44345, 24.9065, 0.96", "105.377, -7.2581, 24.4063, 0.52", "106.589, -7.10881, 24.0282, 0.52", "108.177, -6.92193, 23.5826, 0.52", "108.245, -6.91301, 23.5667, 0.52", "109.04, -6.79062, 23.4722, 0.52", "109.727, -6.67359, 23.5045, 0.52", "109.837, -6.65639, 23.5265, 0.52", "110.398, -6.56774, 23.6847, 0.29", "111.44, -6.40707, 24.0438, 0.29", "112.744, -6.2022, 24.5176, 1.11", "112.796, -6.19253, 24.5633, 1.11", "113.371, -6.10472, 25.2592, 1.11", "113.414, -6.10138, 25.3145, 1.11", "113.804, -6.09364, 25.8589, 1.11", "113.842, -6.09511, 25.9178, 1.11", "115.958, -6.21351, 29.3603, 0.66", "116.28, -6.22892, 29.9334, 0.22", "116.736, -6.24343, 30.8691, 0.22", "116.769, -6.24484, 30.9418, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "34.3111, 4.04217, 1.06446, 0.66", "35.3591, 4.24689, 1.06446, 0.66", "36.6661, 4.47864, 1.06446, 0.66", "36.7708, 4.49391, 1.05417, 0.66", "37.4923, 4.59015, 0.956987, 1.03", "37.7056, 4.61722, 0.910242, 1.03", "38.4209, 4.69299, 0.719028, 1.03", "38.5831, 4.69734, 0.668252, 1.03", "40.3027, 4.68264, 0.082539, 0.81", "40.3689, 4.68018, 0.0599778, 0.81", "42.0357, 4.58675, -0.519236, 0.66", "43.5481, 4.48988, -1.03351, 0.44", "44.5275, 4.4168, -1.35673, 0.44", "44.6711, 4.40525, -1.39841, 0.44", "45.1974, 4.35858, -1.51596, 0.44", "45.2759, 4.35266, -1.5299, 0.44", "45.8022, 4.32158, -1.57232, 0.66", "46.0218, 4.32366, -1.58447, 0.66", "46.8588, 4.36114, -1.63503, 0.66", "47.0285, 4.36504, -1.64491, 0.66", "48.0302, 4.35593, -1.69968, 0.66", "48.8415, 4.31948, -1.73892, 1.4", "49.5024, 4.26597, -1.76662, 1.99", "49.9645, 4.21795, -1.78317, 2.28", "50.7713, 4.12002, -1.80412, 1.92", "51.4728, 4.04917, -1.78819, 1.62", "52.282, 3.99006, -1.73601, 0.96", "53.023, 3.93601, -1.67835, 0.59", "53.1025, 3.93058, -1.67149, 0.59", "54.4148, 3.84581, -1.55672, 0.52", "55.6978, 3.77209, -1.44058, 0.52", "56.8714, 3.71566, -1.33227, 0.52", "58.6086, 3.63704, -1.1721, 0.52", "58.6882, 3.63356, -1.16499, 0.52", "60.0308, 3.57674, -1.05743, 0.52", "61.1374, 3.52814, -0.987798, 0.52", "61.2074, 3.52639, -0.986032, 0.52", "61.4272, 3.53379, -0.980047, 0.96", "61.5065, 3.54419, -0.981944, 0.96", "62.2387, 3.67299, -1.03326, 1.4", "62.7349, 3.81661, -1.09263, 1.69", "63.3306, 4.01078, -1.17895, 1.55", "63.8897, 4.19527, -1.26763, 1.18", "64.7146, 4.48098, -1.40786, 0.29", "64.7796, 4.50428, -1.41957, 0.29", "66.4871, 5.14519, -1.72994, 0.29", "66.6254, 5.19814, -1.75414, 0.29", "66.9491, 5.3138, -1.79936, 0.66", "67.1486, 5.38324, -1.8186, 0.66", "67.2151, 5.40498, -1.82138, 0.66", "68.1952, 5.705, -1.84531, 0.37", "68.2622, 5.72514, -1.84552, 0.37", "69.4974, 6.10686, -1.82897, 0.37", "69.7835, 6.19834, -1.84666, 0.74", "69.8495, 6.21986, -1.85548, 0.74", "70.5109, 6.46018, -1.99323, 0.96", "71.1809, 6.73699, -2.19245, 0.96", "71.309, 6.80031, -2.23808, 0.96", "72.2958, 7.43653, -2.74287, 0.29", "72.3477, 7.47349, -2.7718, 0.29", "73.0313, 8.00436, -3.18064, 0.29", "73.1449, 8.10197, -3.25107, 0.29", "73.5369, 8.45527, -3.47916, 0.29", "74.3607, 9.22618, -3.88016, 1.84", "74.5918, 9.4488, -3.96145, 2.21", "74.7871, 9.65128, -4.05458, 2.58", "75.1088, 10.0099, -4.24956, 2.58", "75.1574, 10.0662, -4.27896, 2.58", "75.3346, 10.3122, -4.40017, 2.58", "75.3682, 10.3663, -4.42919, 2.58", "76.1103, 11.663, -5.1259, 0.44", "76.1451, 11.7264, -5.16002, 0.44", "76.6199, 12.5984, -5.6146, 0.44", "77.4046, 14.0171, -6.36693, 0.44", "77.9997, 15.0605, -6.91794, 0.44", "78.455, 15.8382, -7.31282, 0.44", "78.489, 15.8934, -7.33917, 0.44", "78.973, 16.6146, -7.68082, 0.44", "79.9149, 17.8015, -8.24379, 1.84", "80.2305, 18.1209, -8.38314, 2.21", "80.5702, 18.4244, -8.49935, 1.84", "81.0018, 18.7761, -8.61631, 1.03", "81.5262, 19.1623, -8.70638, 0.59", "83.1032, 20.2368, -8.85712, 0.37", "83.6821, 20.6105, -8.87215, 0.59", "84.3367, 21.0203, -8.87758, 0.59", "85.1317, 21.5075, -8.86949, 0.29", "86.9566, 22.6273, -8.79888, 0.29", "87.4393, 22.9234, -8.7493, 0.29", "87.5073, 22.9639, -8.73755, 0.29", "88.1568, 23.3574, -8.6152, 1.33", "88.5611, 23.5973, -8.5386, 1.84", "89.3426, 24.0648, -8.39841, 1.84", "90.1419, 24.56, -8.21929, 0.29", "91.2379, 25.241, -7.96678, 0.29", "91.3044, 25.2841, -7.95607, 0.29", "91.5498, 25.4523, -7.93308, 0.59", "91.6156, 25.497, -7.94092, 0.59", "91.9003, 25.704, -8.0338, 0.59", "92.0979, 25.8569, -8.12581, 0.59", "92.9634, 26.5535, -8.57253, 0.22", "93.0146, 26.5941, -8.59755, 0.22", "94.109, 27.4791, -9.10306, 0.22", "94.9535, 28.1575, -9.46896, 0.22", "95.0045, 28.1994, -9.49227, 0.22", "95.3504, 28.4873, -9.65049, 1.03", "95.7906, 28.8607, -9.81541, 1.55", "96.199, 29.2104, -9.95496, 1.55", "96.2505, 29.2551, -9.97067, 1.55", "98.1659, 30.9547, -10.6154, 0.29", "98.2162, 31.0002, -10.6328, 0.29", "99.8791, 32.5499, -11.214, 0.29", "100.115, 32.7727, -11.2973, 0.59", "100.476, 33.1087, -11.4247, 0.59", "101.876, 34.4241, -11.9045, 0.22", "101.992, 34.5368, -11.9404, 0.44", "102.289, 34.8311, -12.0415, 0.44", "102.337, 34.8789, -12.0597, 0.44", "103.607, 36.1028, -12.5532, 0.22", "103.658, 36.1483, -12.5681, 0.22", "104.15, 36.5344, -12.6394, 1.33", "104.466, 36.7763, -12.6762, 1.69", "105.047, 37.2143, -12.7343, 1.69", "105.95, 37.8914, -12.8113, 0.22", "108.49, 39.7849, -12.9844, 0.22", "112.832, 42.9805, -13.2925, 0.22", "113.297, 43.318, -13.3255, 1.25", "113.43, 43.4161, -13.3345, 1.69", "113.555, 43.5093, -13.342, 1.69", "113.768, 43.6687, -13.3493, 1.69", "114.26, 44.0386, -13.3777, 1.18", "114.767, 44.4775, -13.4356, 0.29", "115.474, 45.0905, -13.5099, 0.29", "115.527, 45.1353, -13.522, 0.29", "116.171, 45.6499, -13.6931, 0.29", "116.224, 45.6932, -13.7079, 0.66", "116.733, 46.1119, -13.846, 0.66", "116.794, 46.1607, -13.8631, 0.66", "117.907, 47.0103, -14.1886, 0.22", "120.441, 48.8405, -14.8935, 0.22", "120.709, 49.0179, -14.9581, 0.74", "121.432, 49.4605, -15.1068, 0.74", "121.493, 49.4943, -15.1169, 0.74", "122.303, 49.9136, -15.2146, 0.37", "123.289, 50.3776, -15.2662, 0.37", "124.933, 51.0467, -15.3435, 0.37", "125.27, 51.1991, -15.3532, 1.47", "125.834, 51.4795, -15.3594, 1.92", "126.295, 51.7636, -15.3555, 1.92", "126.973, 52.2478, -15.3351, 0.37", "127.299, 52.5092, -15.3245, 0.22", "128.96, 53.9932, -15.2686, 0.22", "129.038, 54.0658, -15.2661, 0.22", "130.972, 55.9505, -15.2062, 0.22", "131.021, 56.0003, -15.2048, 0.22", "131.421, 56.4131, -15.197, 0.96", "131.829, 56.8418, -15.197, 0.96", "131.978, 57.0036, -15.197, 0.96" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.92258, 26.8903, -2.61829, 1.25", "0.716499, 27.8603, -2.61829, 1.25", "0.656956, 27.9134, -2.62454, 1.25", "0.11761, 28.4186, -2.70193, 1.25", "0.0611409, 28.473, -2.71788, 1.25", "-0.619427, 29.145, -2.94962, 1.25", "-0.692439, 29.2177, -2.97574, 1.25", "-1.34406, 29.9232, -3.32306, 1.18", "-2.03175, 30.6653, -3.7298, 1.18", "-2.8677, 31.5594, -4.23625, 0.96", "-2.92963, 31.6266, -4.27429, 0.96", "-3.40641, 32.1512, -4.59947, 1.25", "-4.22756, 33.0579, -5.23946, 1.69", "-4.68902, 33.5658, -5.6101, 2.14", "-5.32254, 34.2759, -6.15611, 2.14", "-5.36325, 34.3216, -6.19001, 2.14", "-5.96654, 34.9934, -6.71163, 2.14", "-6.79167, 35.9308, -7.5118, 1.69" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.92258, 26.8903, -2.61829, 2.5", "1.9116, 27.029, -2.58452, 2.5", "1.7906, 28.6412, -2.2328, 2.43", "1.65677, 30.4243, -1.84376, 2.43", "1.53417, 32.0578, -1.48738, 2.5", "1.43023, 33.4426, -1.18525, 2.87", "1.31322, 35.0017, -0.845123, 3.09", "1.27307, 35.5591, -0.732813, 3.09" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.12955, 43.2056, -1.33988, 1.1429", "-1.70505, 58.1946, -1.33988, 1.1429", "-2.28055, 73.1835, -1.33988, 1.1429" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "9.44372, -26.1781, 1.18336, 1.03", "10.7042, -26.7093, 1.16445, 1.03", "11.8501, -27.1876, 1.1908, 1.03", "13.5564, -27.8992, 1.26064, 1.03", "14.641, -28.3781, 1.32082, 1.33", "14.8478, -28.4768, 1.34113, 1.33", "15.7806, -28.9541, 1.45436, 1.33", "16.6867, -29.4997, 1.58756, 1.33", "16.7442, -29.5382, 1.59799, 1.33", "17.8127, -30.3411, 1.8277, 1.33", "18.8969, -31.237, 2.07153, 1.18", "19.5561, -31.8132, 2.20239, 1.18", "20.4657, -32.6474, 2.39037, 1.18", "21.1411, -33.2887, 2.52107, 1.11", "21.2421, -33.3838, 2.53955, 1.11", "21.9002, -33.977, 2.67526, 1.33", "22.7636, -34.7047, 2.85477, 1.33", "23.6598, -35.4114, 3.06755, 0.66", "24.0277, -35.6755, 3.16024, 0.66", "25.7306, -36.7942, 3.58837, 0.66", "26.6112, -37.3533, 3.81328, 1.33", "27.0536, -37.611, 3.92814, 1.62", "27.1138, -37.6432, 3.94316, 1.62", "27.8779, -38.0118, 4.0867, 1.84", "28.3534, -38.2121, 4.18164, 1.99" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "9.44372, -26.1781, 1.18336, 0.66", "9.65056, -26.9946, 1.11821, 0.66", "9.7748, -27.4225, 1.08003, 0.66", "10.0035, -28.1213, 1.01856, 0.66", "10.2699, -28.887, 0.956959, 0.66", "10.5002, -29.5338, 0.913139, 0.66", "10.9037, -30.6736, 0.850624, 0.66", "10.956, -30.814, 0.843178, 0.66", "11.231, -31.584, 0.806792, 1.03", "11.5291, -32.4606, 0.771119, 1.25", "11.9982, -33.83, 0.720959, 0.74", "12.4868, -35.3576, 0.676859, 0.74", "12.6942, -36.0342, 0.665251, 1.11", "12.9848, -36.9386, 0.65786, 1.11", "13.0168, -37.0323, 0.657621, 1.11", "13.3032, -37.8351, 0.659485, 0.66", "13.739, -39.0166, 0.670151, 0.52", "14.564, -41.1859, 0.702709, 0.52", "15.492, -43.5638, 0.734274, 0.52", "15.7006, -44.0996, 0.737427, 0.88", "16.0457, -45.0116, 0.737242, 0.96", "16.4947, -46.2264, 0.708917, 0.96", "16.5188, -46.292, 0.705754, 0.96", "16.7378, -46.9573, 0.641715, 1.25", "17.1069, -48.2965, 0.472899, 1.25", "17.1246, -48.3636, 0.463392, 1.25", "17.6492, -50.3867, 0.160874, 1.25", "17.666, -50.4537, 0.149698, 1.25", "18.1355, -52.3415, -0.154061, 1.25", "18.5975, -54.1968, -0.456141, 1.25", "18.8282, -55.1172, -0.608804, 1.25", "19.0045, -55.83, -0.724105, 1.25", "19.2352, -56.8074, -0.873783, 0.22", "19.7092, -58.8041, -1.19746, 0.22", "19.9016, -59.5933, -1.3303, 0.88", "20.0517, -60.2308, -1.43769, 1.25", "20.1348, -60.6075, -1.49494, 1.55", "20.255, -61.1794, -1.57629, 1.55", "20.35, -61.6944, -1.63523, 1.25", "20.4719, -62.636, -1.73421, 0.29", "20.6143, -64.1652, -1.80133, 0.29", "20.6219, -64.2713, -1.80209, 0.29", "20.6389, -64.5606, -1.79427, 0.52", "20.6717, -65.292, -1.75059, 0.52", "20.702, -66.2375, -1.66359, 0.29", "20.713, -67.1869, -1.56643, 0.29", "20.7286, -67.6279, -1.50494, 1.11", "20.7736, -68.4306, -1.37797, 1.47", "20.8253, -69.0814, -1.25223, 1.77", "20.8833, -69.5835, -1.14692, 1.77", "20.8924, -69.6516, -1.13379, 1.77", "21.0194, -70.6409, -1.01328, 1.11", "21.0293, -70.7199, -1.00509, 1.11", "21.106, -71.3136, -0.939933, 0.52", "21.3146, -72.9059, -0.7687, 0.52", "21.4869, -74.2101, -0.639646, 0.52", "21.89, -76.8062, -0.356367, 0.52", "21.9019, -76.8748, -0.348881, 0.52", "22.0097, -77.374, -0.288135, 1.25", "22.1388, -77.8626, -0.22009, 1.55", "22.3145, -78.3816, -0.129039, 1.55", "22.8613, -79.693, 0.127311, 1.55", "23.215, -80.4122, 0.281801, 0.44", "23.7753, -81.511, 0.473433, 0.44", "24.1167, -82.1669, 0.568516, 0.66", "24.4454, -82.8119, 0.645935, 0.66", "25.002, -83.9591, 0.726644, 0.52", "25.4123, -84.8582, 0.74843, 0.37", "26.388, -87.1465, 0.757318, 0.37", "26.4432, -87.286, 0.755464, 0.37", "27.1528, -89.195, 0.695545, 0.37", "27.5837, -90.3864, 0.645228, 0.52", "27.8038, -91.0128, 0.611369, 1.11", "28.1556, -92.0554, 0.547077, 1.11", "28.1867, -92.1493, 0.541777, 1.11", "28.4062, -92.7636, 0.514443, 0.29", "29.2968, -95.0571, 0.45364, 0.29", "29.6427, -95.8957, 0.45364, 0.52", "30.0945, -96.9425, 0.45364, 0.52", "30.1264, -97.0158, 0.45364, 0.52", "30.3678, -97.5971, 0.45364, 0.29", "30.4183, -97.7277, 0.45364, 0.29", "30.8072, -98.8468, 0.45364, 0.29", "30.8292, -98.9132, 0.45364, 0.29", "31.395, -100.681, 0.45364, 0.29", "31.4175, -100.757, 0.452399, 0.29", "31.6183, -101.493, 0.432869, 0.88", "31.8184, -102.231, 0.40836, 1.11", "31.9899, -102.868, 0.383422, 1.11", "32.0087, -102.935, 0.380599, 1.11", "32.5198, -104.667, 0.364447, 0.22", "33.0538, -106.366, 0.394975, 0.22", "33.0766, -106.432, 0.398126, 0.22", "33.2688, -106.952, 0.436534, 0.74", "33.5339, -107.616, 0.524703, 0.74", "33.873, -108.456, 0.684929, 0.29", "33.9123, -108.543, 0.710098, 0.29", "34.5383, -109.877, 1.15491, 0.29", "34.5671, -109.937, 1.17494, 0.29", "34.9027, -110.659, 1.4439, 0.88", "35.1324, -111.167, 1.60412, 1.25", "35.3655, -111.69, 1.74208, 1.33", "35.4667, -111.923, 1.80149, 1.33", "35.5089, -112.018, 1.82414, 1.33", "35.9318, -112.965, 2.01878, 0.37", "36.9477, -115.22, 2.36058, 0.37", "36.9881, -115.31, 2.37276, 0.66", "37.1404, -115.645, 2.41089, 0.66", "37.5683, -116.541, 2.49214, 0.66", "37.701, -116.809, 2.50821, 0.66", "38.485, -118.246, 2.50344, 0.66", "38.5202, -118.307, 2.50222, 0.66", "38.942, -119.01, 2.47955, 1.03", "39.2469, -119.497, 2.45859, 1.47", "39.5263, -119.942, 2.43498, 1.47", "39.9208, -120.561, 2.40101, 0.22", "40.0762, -120.805, 2.38753, 0.22", "40.9825, -122.258, 2.31715, 0.22", "41.1409, -122.517, 2.30985, 0.66", "41.4677, -123.055, 2.30484, 1.11", "41.779, -123.559, 2.31144, 1.33", "42.1401, -124.154, 2.3334, 1.33", "42.4712, -124.682, 2.35615, 0.66", "42.8224, -125.238, 2.38502, 0.29", "42.8597, -125.297, 2.38838, 0.29", "43.626, -126.494, 2.46273, 0.29", "43.6634, -126.553, 2.46627, 0.29", "43.8588, -126.869, 2.47759, 0.66", "43.8939, -126.93, 2.47828, 0.66", "44.1857, -127.448, 2.47194, 0.66", "44.2243, -127.518, 2.47072, 0.66", "44.6683, -128.356, 2.4511, 0.66", "45.1463, -129.268, 2.42748, 0.59", "45.3389, -129.652, 2.41648, 1.18", "45.4618, -129.888, 2.41605, 1.62", "45.4945, -129.95, 2.41726, 1.62", "45.7836, -130.545, 2.44585, 1.62", "45.8111, -130.609, 2.44937, 1.62", "45.9531, -130.95, 2.46922, 1.62", "46.297, -131.77, 2.51333, 0.22", "46.3232, -131.834, 2.51646, 0.22", "46.9065, -133.38, 2.55708, 0.22", "47.7335, -136.012, 2.56551, 0.22", "47.7526, -136.079, 2.5648, 0.22", "47.8169, -136.338, 2.55236, 0.88", "47.9509, -136.985, 2.50069, 1.18", "48.1299, -137.964, 2.4052, 0.22", "48.5722, -140.922, 2.04265, 0.22", "48.58, -140.991, 2.03281, 0.22", "48.6806, -141.855, 1.88309, 1.11", "48.7687, -142.572, 1.73948, 1.77", "48.8382, -143.002, 1.64675, 1.99", "48.8538, -143.078, 1.6294, 1.99", "49.0011, -143.664, 1.48723, 1.99", "49.3448, -144.966, 1.21487, 0.29", "49.364, -145.033, 1.20282, 0.29", "49.8573, -146.793, 0.882434, 0.29", "49.8751, -146.86, 0.871016, 0.29", "50.0949, -147.73, 0.736089, 0.29", "50.1114, -147.797, 0.726849, 0.29", "50.6704, -150.096, 0.483168, 0.29", "50.8319, -150.748, 0.401512, 1.77", "50.9377, -151.176, 0.337021, 2.28", "51.0593, -151.602, 0.275241, 2.58", "51.0797, -151.668, 0.265787, 2.58", "51.1571, -151.885, 0.241591, 2.58", "51.6637, -153.147, 0.141308, 0.29", "51.691, -153.212, 0.136864, 0.29", "52.4037, -154.854, 0.0383104, 0.29", "52.4642, -154.991, 0.0314933, 0.29", "53.2617, -156.794, -0.0392812, 0.29", "53.3035, -156.892, -0.0378915, 0.29", "53.7746, -158.046, 0.0490722, 0.29", "53.8796, -158.345, 0.081522, 0.74", "54.0083, -158.912, 0.158418, 0.74", "54.0194, -158.98, 0.168585, 0.74", "54.1185, -160.1, 0.364339, 0.22", "54.1233, -160.178, 0.378551, 0.22", "54.123, -161.415, 0.614356, 0.22", "54.0613, -163.354, 0.965205, 0.22", "54.0574, -163.423, 0.976255, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.190646, -26.4414, 1.22255, 2.21", "0.0531679, -28.9493, 1.67212, 2.21", "0.142611, -30.0708, 1.90693, 1.84", "0.229744, -31.4687, 2.20762, 1.77", "0.315319, -33.9057, 2.71818, 1.77", "0.409071, -36.3444, 3.2036, 1.77", "0.412555, -36.4031, 3.21529, 1.77", "0.538624, -37.7284, 3.49385, 1.92", "0.711908, -39.0822, 3.76892, 2.58", "0.93796, -40.3573, 4.00171, 2.58", "1.25879, -41.6881, 4.22867, 1.5", "1.77924, -43.3449, 4.48748, 0.66", "2.20867, -44.3971, 4.66202, 0.66", "2.55376, -45.0374, 4.77428, 0.96", "2.94225, -45.5633, 4.88821, 0.96", "3.00888, -45.6343, 4.90632, 0.96", "4.18486, -46.6849, 5.20294, 0.74", "5.01119, -47.2984, 5.35852, 0.74", "5.13211, -47.3852, 5.37701, 0.74", "6.30819, -48.2141, 5.51587, 0.74", "6.36583, -48.2536, 5.52037, 0.74", "7.00153, -48.7162, 5.53865, 0.74", "7.67891, -49.2342, 5.50663, 0.74", "8.61598, -50.0962, 5.45748, 0.74", "8.67183, -50.1534, 5.45446, 0.74", "8.89549, -50.4403, 5.4416, 0.96", "9.313, -51.071, 5.42104, 1.18", "9.3892, -51.2002, 5.41817, 1.18", "9.71468, -51.8434, 5.41817, 1.33", "9.7427, -51.9076, 5.41817, 1.33", "10.0604, -52.7282, 5.41817, 1.47", "10.2962, -53.4969, 5.41817, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.190646, -26.4414, 1.22255, 1.03", "0.868224, -29.3293, -1.68404, 1.03", "0.884079, -29.385, -1.72338, 1.03", "1.0822, -30.1736, -2.19225, 1.03", "1.20887, -30.651, -2.48653, 1.03", "1.50297, -31.7495, -3.17329, 1.03", "1.80358, -32.7733, -3.79323, 0.88", "2.02516, -33.6493, -4.27151, 0.88", "2.03948, -33.7122, -4.31885, 0.88", "2.12685, -34.566, -5.30349, 1.03", "2.12715, -34.6284, -5.3979, 1.03", "2.05783, -35.1029, -6.26497, 1.03", "1.57656, -36.5052, -8.92404, 1.03", "1.55864, -36.5383, -8.98304, 1.03", "0.803806, -37.6562, -10.6471, 1.18", "0.773697, -37.6951, -10.6969, 1.18", "0.28471, -38.2876, -11.4009, 1.18", "-0.268467, -38.9088, -12.0332, 1.18", "-1.1132, -39.8794, -12.7731, 1.4", "-1.62925, -40.5072, -13.2426, 1.4", "-2.60061, -41.7707, -14.09, 1.03", "-2.63708, -41.8197, -14.1241, 1.03", "-3.16364, -42.6113, -14.6736, 1.03", "-3.19508, -42.6633, -14.7083, 1.03", "-3.78222, -43.7873, -15.3706, 0.74", "-4.18519, -44.6894, -15.8541, 0.74", "-4.20995, -44.7588, -15.8851, 0.74", "-4.46164, -45.7124, -16.3492, 0.74", "-4.46137, -45.8346, -16.4362, 0.74", "-4.31856, -46.3612, -16.887, 0.52", "-4.29013, -46.4054, -16.9332, 0.52", "-3.93045, -46.856, -17.5614, 0.81", "-3.90242, -46.8926, -17.6141, 0.81", "-3.30113, -47.6679, -18.791, 1.03", "-3.07131, -48.0092, -19.2365, 1.25", "-3.04654, -48.0517, -19.2862, 1.25", "-2.39389, -49.2894, -20.6048, 1.84", "-2.28602, -49.5372, -20.8669, 2.21", "-2.24084, -49.6826, -21.0045, 2.21", "-2.09716, -50.3249, -21.5639, 2.21", "-2.08775, -50.3773, -21.6093, 2.21", "-1.88545, -51.757, -22.7691, 1.99", "-1.70343, -53.5645, -24.1309, 0.88", "-1.63063, -54.8327, -25.035, 0.88", "-1.6284, -54.8903, -25.0747, 0.88", "-1.5908, -56.0095, -25.815, 0.59", "-1.58788, -56.0781, -25.8562, 0.59", "-1.52222, -57.2229, -26.4895, 0.59", "-1.43906, -58.0945, -26.9757, 0.44", "-1.32313, -59.0308, -27.5249, 0.66", "-1.18576, -60.0551, -28.0753, 2.06", "-1.05246, -61.0222, -28.5463, 3.17", "-0.823413, -62.652, -29.2997, 3.17", "-0.626677, -63.9866, -29.873, 1.25", "-0.495158, -64.8753, -30.1876, 0.29", "-0.274847, -66.5835, -30.6516, 0.29", "-0.208202, -67.1135, -30.748, 1.03", "-0.198967, -67.1826, -30.7542, 1.03", "-0.0741219, -67.9868, -30.7422, 1.03", "0.070173, -68.8137, -30.7014, 0.96", "0.0842875, -68.8821, -30.6971, 0.96", "0.31772, -69.8965, -30.6249, 0.96", "0.49349, -70.6306, -30.5741, 0.29", "0.828405, -72.0254, -30.4675, 0.29", "0.844956, -72.0932, -30.462, 0.29", "1.19725, -73.5265, -30.3419, 0.29", "1.46597, -74.6174, -30.2429, 0.29", "1.48265, -74.685, -30.2359, 0.29", "1.58929, -75.1161, -30.199, 1.18", "1.74935, -75.7927, -30.1759, 1.47", "1.83702, -76.1609, -30.1803, 1.62", "1.85351, -76.2288, -30.1844, 1.62", "1.95919, -76.6551, -30.2116, 1.62", "2.2259, -77.728, -30.277, 0.29", "2.62985, -79.3107, -30.3667, 0.29", "2.76633, -79.8483, -30.3953, 0.44", "3.00054, -80.816, -30.4313, 0.44", "3.01635, -80.8841, -30.4331, 0.44", "3.1483, -81.4634, -30.4419, 0.15", "3.34817, -82.3874, -30.4419, 0.15", "3.36475, -82.4657, -30.4419, 0.15", "3.99448, -85.608, -30.4419, 0.15", "4.0076, -85.6767, -30.4419, 0.15", "4.11834, -86.2655, -30.4467, 0.88", "4.27266, -87.0718, -30.4887, 1.69", "4.28687, -87.1502, -30.4958, 1.69", "4.36351, -87.5698, -30.55, 2.06", "4.4532, -88.1477, -30.6548, 2.06", "4.55134, -88.8326, -30.7792, 2.06", "4.73113, -90.2003, -31.0347, 0.59", "4.788, -90.6413, -31.1115, 0.59", "4.80331, -90.7597, -31.1371, 0.59", "4.99172, -92.2519, -31.4732, 0.37", "5.00331, -92.3468, -31.4989, 0.37", "5.02099, -92.5096, -31.5444, 0.74", "5.13085, -93.5094, -31.8222, 0.74", "5.25262, -94.5298, -32.1151, 0.22", "5.48306, -96.4282, -32.6113, 0.22", "5.5686, -97.2375, -32.7979, 1.25", "5.64077, -98.0725, -32.9569, 1.77", "5.67726, -98.6216, -33.0318, 1.77", "5.6917, -99.1304, -33.0637, 1.77", "5.7016, -100.209, -33.0686, 0.29", "5.6927, -101.527, -33.047, 0.22", "5.68892, -101.747, -33.0396, 0.22", "5.65024, -103.287, -32.9977, 0.22", "5.53845, -106.143, -32.937, 0.22", "5.52756, -106.363, -32.9347, 0.22", "5.49239, -107.022, -32.9372, 0.88", "5.45287, -107.754, -32.9414, 1.33", "5.42805, -108.193, -32.9446, 1.62", "5.40003, -108.648, -32.9491, 1.62", "5.34048, -109.61, -32.9611, 0.29", "5.28063, -110.569, -32.9725, 0.22", "5.27463, -110.675, -32.9737, 0.22", "5.21491, -111.984, -32.9863, 0.22", "5.20951, -112.134, -32.9874, 0.22", "5.20555, -112.524, -32.9957, 1.18", "5.20575, -113.403, -33.0232, 1.62", "5.22126, -113.779, -33.0372, 1.84", "5.26354, -114.438, -33.0636, 1.84", "5.29119, -114.796, -33.0801, 1.84", "5.40236, -116.064, -33.1411, 0.22", "5.40969, -116.133, -33.1446, 0.22", "5.74619, -119.005, -33.2898, 0.22", "5.75828, -119.103, -33.2945, 0.22", "5.81964, -119.548, -33.3143, 1.11", "5.8295, -119.617, -33.3186, 1.11", "5.88517, -120.011, -33.3488, 1.4", "5.94584, -120.44, -33.3962, 1.92", "5.9645, -120.588, -33.417, 1.92", "6.02036, -121.045, -33.4756, 1.92", "6.14227, -122.098, -33.6479, 0.52", "6.15054, -122.176, -33.6621, 0.52", "6.21611, -122.838, -33.7868, 0.22", "6.34895, -124.644, -34.0745, 0.22", "6.3527, -124.713, -34.084, 0.22", "6.37496, -125.624, -34.1647, 1.03", "6.38101, -126.138, -34.1933, 1.03", "6.38015, -126.721, -34.2315, 0.59", "6.35259, -128.353, -34.3468, 0.22", "6.34956, -128.459, -34.3542, 0.22", "6.2596, -131.602, -34.5468, 0.22", "6.25695, -131.672, -34.5499, 0.22", "6.22977, -132.29, -34.5848, 0.66", "6.22714, -132.36, -34.5908, 0.66", "6.22567, -133.015, -34.6714, 0.66", "6.22764, -133.095, -34.6804, 0.66", "6.26347, -133.751, -34.7791, 0.66", "6.26871, -133.83, -34.7907, 0.66", "6.32124, -134.555, -34.888, 0.22", "6.43859, -136.153, -35.106, 0.22", "6.5887, -137.748, -35.2825, 0.22", "6.71277, -138.886, -35.3846, 1.55", "6.79274, -139.544, -35.4299, 1.55", "6.86937, -140.119, -35.4464, 1.55", "6.92057, -140.485, -35.4429, 1.47", "7.07369, -141.486, -35.4774, 0.59", "7.08497, -141.555, -35.4826, 0.59", "7.1563, -141.992, -35.5262, 0.22", "7.63559, -144.887, -35.9481, 0.22", "7.64692, -144.955, -35.9609, 0.22", "7.8657, -146.352, -36.4253, 1.25", "7.99007, -147.145, -36.7933, 1.47", "8.07929, -147.661, -37.0731, 1.47", "8.09289, -147.729, -37.1133, 1.47", "8.15991, -148.03, -37.3292, 1.47", "8.56497, -149.736, -38.4901, 0.29", "8.80725, -150.728, -39.0946, 0.15", "8.82066, -150.783, -39.1355, 0.15", "9.09088, -151.874, -40.1384, 0.15", "9.25648, -152.548, -40.7972, 0.81", "9.26987, -152.601, -40.8559, 0.81", "9.37051, -152.989, -41.2809, 0.81", "9.85457, -154.653, -43.1969, 0.22", "10.2684, -155.794, -44.458, 1.47", "10.4682, -156.271, -44.9992, 1.47", "11.0645, -157.538, -46.341, 0.22", "11.6025, -158.592, -47.3933, 0.22", "12.1733, -159.596, -48.3136, 0.22", "12.8771, -160.747, -49.1105, 0.22", "13.4476, -161.661, -49.6664, 1.55", "13.875, -162.326, -50.0488, 1.84", "14.0732, -162.637, -50.2012, 1.84", "14.6732, -163.599, -50.6711, 0.22", "15.6257, -165.325, -51.4781, 0.22", "16.0553, -166.222, -51.8585, 1.03", "16.341, -166.858, -52.0942, 1.33", "16.6481, -167.577, -52.3709, 1.33", "16.6766, -167.646, -52.4, 1.33", "17.2161, -168.997, -52.9827, 0.22", "17.9534, -170.871, -53.8147, 0.22", "17.9895, -170.964, -53.8527, 0.22", "18.9042, -173.452, -54.7309, 0.22", "19.2029, -174.287, -54.9987, 1.25", "19.4411, -175.015, -55.1883, 1.55", "19.5727, -175.447, -55.2878, 1.69", "19.9239, -176.686, -55.5643, 0.22", "20.8321, -180.193, -56.2485, 0.22", "20.8628, -180.335, -56.2736, 0.22", "21.3002, -182.529, -56.661, 0.22", "21.5104, -183.671, -56.8687, 1.4", "21.6344, -184.391, -57.0027, 1.69", "21.7694, -185.247, -57.1712, 1.69", "21.9557, -186.509, -57.4398, 0.22", "21.9777, -186.655, -57.4685, 0.22", "22.5829, -190.388, -58.1322, 0.22", "22.5959, -190.466, -58.1411, 0.22", "22.7244, -191.195, -58.2008, 1.25", "22.8881, -192.049, -58.2282, 1.55", "22.9178, -192.196, -58.2234, 1.55", "23.0552, -192.833, -58.1892, 1.55", "23.2434, -193.667, -58.1099, 0.22", "23.2653, -193.763, -58.0999, 0.22", "23.6027, -195.19, -57.9258, 0.22", "23.6294, -195.293, -57.9148, 0.22", "24.0759, -196.927, -57.7764, 0.22", "24.0961, -196.994, -57.7723, 0.22", "24.1957, -197.288, -57.7647, 1.55", "24.2209, -197.353, -57.7627, 1.55", "24.5072, -198.053, -57.7379, 1.99", "24.6554, -198.41, -57.7251, 1.99", "25.0894, -199.429, -57.6871, 0.22", "25.132, -199.526, -57.6837, 0.22", "26.48, -202.553, -57.5847, 0.22", "26.5077, -202.617, -57.5828, 0.22", "26.624, -202.904, -57.553, 0.96", "26.6501, -202.998, -57.5365, 0.96", "26.7474, -203.541, -57.4141, 0.96", "26.7603, -203.676, -57.38, 0.96", "26.758, -204.03, -57.2745, 0.96", "26.722, -205.656, -56.7942, 0.22", "26.5834, -208.415, -56.0347, 0.22", "26.5739, -208.55, -55.9993, 0.52", "26.4702, -209.687, -55.734, 0.52", "26.4624, -209.765, -55.7192, 0.52", "26.4017, -210.36, -55.6478, 0.22", "26.2628, -211.691, -55.6384, 0.22", "26.2513, -211.856, -55.6395, 0.22", "26.2286, -212.351, -55.6443, 1.25", "26.2091, -213.081, -55.6541, 1.47", "26.1998, -213.964, -55.6691, 1.55", "26.206, -214.917, -55.6978, 0.22", "26.1995, -217.257, -55.7601, 0.22", "26.1919, -217.904, -55.7737, 0.66", "26.1785, -218.564, -55.7818, 0.66", "26.1759, -218.644, -55.7831, 0.66", "26.1521, -219.127, -55.7932, 0.22", "26.0228, -221.167, -56.0171, 0.22", "25.995, -221.602, -56.1094, 0.88", "25.9893, -221.738, -56.145, 0.88", "25.9801, -222.094, -56.2433, 0.88", "25.9781, -222.239, -56.2839, 0.88", "25.9989, -223.964, -56.85, 0.22", "26.1506, -227.29, -58.1716, 0.22", "26.1945, -228.22, -58.5227, 1.18", "26.2264, -229.186, -58.8472, 1.18", "26.228, -229.253, -58.8676, 1.18", "26.2492, -230.45, -59.1915, 1.18", "26.2635, -231.475, -59.4158, 0.15", "26.2887, -234.82, -60.218, 0.15", "26.2831, -236.706, -60.6519, 0.15", "26.2825, -237.068, -60.7276, 0.74", "26.2818, -237.137, -60.7402, 0.74", "26.2665, -237.876, -60.8401, 0.74", "26.2539, -238.738, -60.9475, 0.22", "26.2532, -238.817, -60.9611, 0.22", "26.2472, -240.985, -61.35, 0.22", "26.2341, -241.345, -61.4347, 0.96", "26.229, -241.422, -61.4554, 0.96", "26.1725, -241.994, -61.6064, 0.96", "26.0741, -243.093, -61.843, 0.96", "26.0637, -243.203, -61.8667, 0.96", "25.9331, -244.656, -62.2151, 0.22", "25.9277, -244.724, -62.2309, 0.22", "25.8277, -246.646, -62.6582, 0.22", "25.7748, -248.444, -63.029, 0.22", "25.7713, -248.589, -63.0675, 0.22", "25.7386, -249.857, -63.4179, 0.22", "25.7271, -250.159, -63.4913, 0.96", "25.6753, -251.207, -63.7575, 2.14", "25.6264, -251.922, -63.9638, 2.14", "25.4486, -254.044, -64.5965, 0.22", "25.274, -256.126, -65.2548, 0.22", "24.9787, -258.777, -66.0903, 0.22", "24.9692, -258.852, -66.1142, 0.22", "24.8841, -259.417, -66.2898, 0.96", "24.8037, -259.971, -66.4421, 0.96", "24.6609, -260.923, -66.6072, 0.22", "24.3357, -262.631, -66.9501, 0.22", "24.2504, -263.055, -67.0316, 0.59", "24.1963, -263.331, -67.1006, 0.59", "24.1123, -263.742, -67.2033, 0.22", "23.707, -265.608, -67.6889, 0.22", "23.5775, -266.147, -67.8271, 0.96", "23.3984, -266.826, -68.0263, 0.96", "22.9072, -268.413, -68.5165, 0.22", "21.8816, -270.758, -69.2149, 0.22", "21.8425, -270.824, -69.2362, 0.22", "21.5583, -271.206, -69.3605, 1.55", "21.1183, -271.707, -69.4998, 1.55", "20.7173, -272.093, -69.6629, 0.22", "18.8824, -273.635, -70.4753, 0.22", "18.0918, -274.197, -70.9177, 0.96", "18.0432, -274.231, -70.9547, 0.96", "17.2174, -274.795, -71.6959, 0.96", "15.3934, -276.014, -73.5688, 0.22", "14.8022, -276.402, -74.2533, 0.22", "14.5912, -276.541, -74.5237, 0.96", "13.254, -277.435, -76.1412, 0.15", "12.5997, -277.861, -76.8998, 0.15", "12.4625, -277.946, -77.0491, 0.29", "12.2531, -278.079, -77.2151, 0.29", "11.4377, -278.579, -77.8802, 0.22", "11.394, -278.606, -77.9275, 0.22", "10.4865, -279.186, -78.6772, 0.59", "10.4204, -279.234, -78.7338, 0.59", "10.1422, -279.44, -78.9665, 0.59", "10.0966, -279.477, -79.0041, 0.59", "8.47496, -280.843, -80.3493, 0.15", "6.12359, -282.856, -82.1723, 0.15", "5.63736, -283.28, -82.5038, 1.18", "5.58352, -283.328, -82.5394, 1.18", "5.03061, -283.819, -82.8791, 1.77" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.190646, -26.4414, 1.22255, 1.4", "-0.982882, -26.7055, 1.18327, 1.4", "-2.39002, -27.2407, 1.11695, 1.4", "-2.79781, -27.4234, 1.09938, 1.4", "-4.04248, -28.0204, 1.04856, 1.25", "-5.11748, -28.5769, 0.979375, 1.25", "-6.16021, -29.1573, 0.89957, 1.25", "-6.21961, -29.194, 0.894455, 1.25", "-7.0269, -29.7636, 0.819019, 1.4", "-7.08467, -29.8028, 0.813995, 1.4", "-8.07859, -30.4425, 0.733971, 1.4", "-9.12243, -31.0417, 0.657349, 1.62", "-10.2424, -31.6128, 0.58385, 1.55", "-10.3061, -31.6417, 0.580503, 1.55", "-12.0513, -32.3343, 0.512948, 1.55", "-12.1175, -32.3572, 0.511494, 1.55", "-13.6342, -32.7954, 0.511494, 1.55", "-13.712, -32.8141, 0.511714, 1.55", "-14.952, -33.0845, 0.518264, 1.55", "-15.5708, -33.2013, 0.520639, 1.84", "-16.5198, -33.3461, 0.523481, 1.84", "-16.5892, -33.3554, 0.52359, 1.84", "-17.5709, -33.4542, 0.523712, 1.69", "-17.6408, -33.4592, 0.523657, 1.69", "-19.5662, -33.5309, 0.521114, 1.69", "-19.6362, -33.5324, 0.520996, 1.69", "-21.1859, -33.5487, 0.495589, 1.69", "-23.3951, -33.5548, 0.438004, 1.69", "-25.6738, -33.5411, 0.361597, 1.69", "-28.4041, -33.4951, 0.225089, 1.69", "-28.4739, -33.4927, 0.220485, 1.69", "-29.7513, -33.4183, 0.119478, 1.69", "-31.1414, -33.2995, -0.0160637, 1.69", "-31.2104, -33.2917, -0.0251603, 1.69", "-32.2163, -33.16, -0.181584, 1.55", "-33.0605, -33.0558, -0.310936, 1.55", "-34.8757, -32.8929, -0.578065, 1.55", "-34.9548, -32.8879, -0.588942, 1.55", "-35.9997, -32.8655, -0.742221, 1.55", "-37.6816, -32.8947, -0.987472, 1.55", "-39.134, -33.0299, -1.18656, 1.55", "-40.3501, -33.2426, -1.36332, 1.55", "-40.452, -33.2684, -1.37881, 1.55", "-41.5383, -33.6033, -1.52868, 1.55", "-41.6024, -33.6293, -1.53937, 1.55", "-42.6478, -34.1688, -1.79272, 1.33", "-43.2278, -34.5076, -1.95557, 1.11", "-43.2861, -34.5426, -1.97242, 1.11", "-44.2656, -35.1344, -2.28776, 1.11", "-45.4488, -35.8436, -2.72195, 1.11", "-46.4086, -36.4054, -3.10593, 1.4", "-47.1347, -36.8369, -3.41296, 1.84", "-47.1907, -36.8712, -3.437, 1.84", "-48.1427, -37.4877, -3.84631, 1.84", "-49.1194, -38.1612, -4.24704, 1.84", "-49.1966, -38.2168, -4.2743, 1.84", "-50.1232, -38.9159, -4.59497, 2.14", "-50.1768, -38.9572, -4.61276, 2.14", "-51.131, -39.6999, -4.90258, 2.5", "-52.119, -40.4552, -5.15602, 2.65", "-53.1194, -41.2273, -5.39488, 2.65", "-53.1745, -41.2684, -5.40829, 2.65", "-53.8852, -41.765, -5.587, 2.95", "-53.95, -41.8094, -5.60213, 2.95", "-54.4448, -42.12, -5.68495, 2.95" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-57.8163, 138.123, -3.78402, 0.74", "-58.1064, 138.358, -3.7825, 0.74", "-59.3911, 139.336, -3.78378, 0.29", "-60.1563, 139.911, -3.78637, 0.29", "-60.2847, 140.009, -3.78696, 0.29", "-61.0248, 140.59, -3.79087, 0.29", "-61.0796, 140.634, -3.79117, 0.29", "-62.304, 141.631, -3.80261, 0.29", "-62.4347, 141.739, -3.80466, 0.29", "-63.1402, 142.35, -3.81391, 0.29", "-63.3569, 142.543, -3.81569, 0.74", "-63.7831, 142.946, -3.81569, 1.03", "-63.8313, 142.997, -3.81841, 1.03", "-64.1906, 143.444, -3.85659, 1.03", "-64.2586, 143.534, -3.8681, 1.03", "-64.5521, 143.945, -3.92912, 0.81", "-65.0509, 144.668, -4.04072, 0.66", "-65.7094, 145.657, -4.19429, 0.29", "-66.7001, 147.205, -4.43072, 0.29", "-67.0742, 147.826, -4.52172, 0.66", "-67.4205, 148.453, -4.59927, 1.47", "-67.6102, 148.828, -4.63888, 1.69", "-67.8458, 149.35, -4.68415, 1.69", "-68.1263, 150.042, -4.72442, 0.88", "-68.3916, 150.756, -4.75831, 0.37", "-69.0634, 152.612, -4.81572, 0.37", "-69.1143, 152.753, -4.82035, 0.37", "-69.4274, 153.586, -4.84813, 0.37", "-69.5403, 153.875, -4.85776, 0.88", "-69.7256, 154.298, -4.87094, 0.88", "-69.7608, 154.37, -4.87336, 0.88", "-70.0374, 154.865, -4.88946, 0.88", "-70.3357, 155.356, -4.86864, 1.11", "-70.3736, 155.415, -4.8628, 1.11", "-70.5748, 155.726, -4.82765, 1.11", "-70.6502, 155.843, -4.81335, 1.11", "-70.891, 156.214, -4.75043, 1.11", "-71.3902, 156.998, -4.58895, 0.22", "-72.4901, 158.712, -4.20677, 0.22", "-72.5285, 158.769, -4.19412, 0.74", "-72.5677, 158.826, -4.18159, 0.74", "-72.9905, 159.414, -4.05464, 0.66", "-73.0377, 159.477, -4.04217, 0.66", "-73.6925, 160.349, -3.91416, 0.29", "-74.2127, 161.05, -3.76563, 0.29", "-74.2606, 161.113, -3.7527, 0.29", "-74.38, 161.268, -3.72243, 0.88", "-74.8061, 161.811, -3.63127, 1.18", "-75.2586, 162.381, -3.53237, 1.18", "-75.8954, 163.181, -3.38373, 0.29", "-77.0296, 164.569, -3.12559, 0.29", "-77.0804, 164.63, -3.11405, 0.29", "-77.8176, 165.487, -2.95315, 0.29", "-77.9933, 165.684, -2.91866, 0.88", "-78.0468, 165.743, -2.90891, 0.88", "-78.4222, 166.149, -2.85388, 0.88", "-78.8002, 166.586, -2.79501, 1.33", "-79.1693, 167.084, -2.74622, 1.77", "-79.544, 167.642, -2.70158, 1.77", "-80.2888, 168.841, -2.63106, 0.29", "-80.3291, 168.91, -2.62806, 0.29", "-80.9716, 170.121, -2.59685, 0.29", "-81.7382, 171.755, -2.58719, 0.29", "-81.7794, 171.853, -2.58743, 0.29", "-82.2367, 172.999, -2.47591, 0.29", "-82.2628, 173.063, -2.46339, 0.29", "-82.6363, 173.866, -2.17962, 0.96", "-83.1134, 174.74, -1.7119, 1.92", "-83.3093, 175.048, -1.50044, 1.92", "-84.454, 176.668, -0.127525, 0.37", "-85.1317, 177.549, 0.737775, 0.37", "-85.6499, 178.177, 1.39659, 0.96", "-86.0236, 178.594, 1.87419, 0.96", "-86.0608, 178.633, 1.91933, 0.96", "-86.8108, 179.48, 2.76734, 0.29", "-87.2547, 180.061, 3.20934, 0.29", "-87.3517, 180.209, 3.32729, 0.66", "-87.4658, 180.439, 3.4609, 0.66", "-87.6035, 180.775, 3.652, 0.66", "-87.7916, 181.272, 3.90754, 0.88", "-88.1576, 182.335, 4.39164, 0.22", "-88.2203, 182.527, 4.47912, 0.22", "-88.6744, 183.981, 5.11789, 0.22", "-89.0331, 185.112, 5.57712, 0.96", "-89.217, 185.661, 5.79834, 1.33", "-89.2391, 185.724, 5.82079, 1.33", "-89.5034, 186.473, 6.03781, 1.33", "-89.55, 186.6, 6.07432, 1.33", "-89.8177, 187.321, 6.26969, 1.33", "-90.2092, 188.397, 6.49605, 0.22", "-90.5457, 189.364, 6.69547, 0.22", "-90.6394, 189.65, 6.75047, 1.25", "-90.7007, 189.855, 6.80291, 1.25", "-90.8427, 190.395, 6.96009, 1.25", "-90.8868, 190.593, 7.01985, 1.25", "-91.021, 191.22, 7.19603, 1.25", "-91.1096, 191.554, 7.29766, 1.25", "-91.5088, 192.884, 7.70986, 0.29", "-91.5304, 192.948, 7.72966, 0.29", "-91.897, 193.855, 8.00397, 0.29", "-92.0502, 194.175, 8.11057, 0.29", "-92.4236, 194.835, 8.34319, 0.29", "-92.4715, 194.91, 8.36592, 0.81", "-92.5909, 195.081, 8.40438, 0.81", "-92.9702, 195.623, 8.53353, 0.81", "-93.51, 196.377, 8.71347, 0.22", "-93.5909, 196.49, 8.73215, 0.22", "-94.4188, 197.625, 8.8456, 0.22", "-94.6019, 197.876, 8.85799, 0.22", "-94.78, 198.117, 8.86596, 0.44", "-95.3953, 198.952, 8.86666, 0.44", "-95.9526, 199.705, 8.82958, 0.37", "-96.4274, 200.331, 8.80636, 0.37", "-96.4718, 200.385, 8.80531, 0.37", "-96.9131, 200.911, 8.80854, 0.37", "-96.966, 200.971, 8.81109, 0.37", "-97.1164, 201.13, 8.83031, 0.81", "-97.3348, 201.349, 8.86329, 0.81", "-97.7887, 201.781, 8.92422, 0.81", "-98.0211, 202.002, 8.95089, 0.81", "-98.0795, 202.057, 8.95602, 0.81", "-98.6695, 202.588, 9.00776, 0.29", "-99.8777, 203.65, 9.11629, 0.29", "-100.34, 204.062, 9.16904, 0.74", "-100.58, 204.282, 9.20012, 0.96", "-100.866, 204.543, 9.23948, 0.96", "-101.402, 205.042, 9.31388, 0.96", "-101.453, 205.09, 9.32109, 0.96", "-102.164, 205.769, 9.42328, 0.29", "-102.832, 206.425, 9.50566, 0.29", "-102.905, 206.502, 9.51468, 0.29", "-103.373, 207.035, 9.64515, 0.29", "-103.413, 207.089, 9.66279, 0.29", "-103.556, 207.303, 9.73287, 0.66", "-103.595, 207.369, 9.75513, 0.66", "-103.851, 207.834, 9.91875, 0.66", "-104.537, 209.045, 10.334, 0.29", "-104.925, 209.746, 10.5836, 0.29", "-105.55, 210.866, 10.9825, 0.29", "-105.587, 210.933, 11.006, 0.29", "-105.654, 211.05, 11.0451, 0.59", "-105.979, 211.605, 11.1993, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-57.8163, 138.123, -3.78402, 1.33", "-58.1572, 139.688, -4.01727, 1.33", "-58.3926, 140.689, -4.16994, 0.88", "-58.7898, 142.329, -4.42076, 0.66", "-59.1955, 143.922, -4.71083, 0.66", "-59.6313, 145.583, -5.04375, 0.66", "-59.6911, 145.802, -5.0897, 0.66", "-59.9287, 146.56, -5.2857, 1.11", "-59.9976, 146.76, -5.34497, 1.11", "-60.3207, 147.604, -5.60327, 1.11", "-60.3434, 147.669, -5.6158, 1.11", "-60.5688, 148.386, -5.70599, 1.11", "-60.6137, 148.535, -5.7148, 1.11", "-60.7098, 148.893, -5.71459, 1.11", "-61.0715, 150.33, -5.6478, 0.52", "-61.5682, 152.555, -5.44382, 0.52", "-61.5824, 152.623, -5.4375, 0.52", "-61.7081, 153.312, -5.37255, 0.88", "-61.8678, 154.244, -5.28769, 0.88", "-61.8801, 154.323, -5.27778, 0.88", "-62.0081, 155.255, -5.13367, 0.88", "-62.2094, 156.796, -4.87803, 0.44", "-62.2971, 157.584, -4.76108, 0.81", "-62.3615, 158.399, -4.65342, 1.47", "-62.418, 159.678, -4.49705, 1.62", "-62.4298, 160.485, -4.39224, 1.62", "-62.4266, 161.07, -4.31438, 0.96", "-62.3834, 162.593, -4.11365, 0.59", "-62.3319, 164.216, -3.91641, 0.59", "-62.1986, 166.981, -3.6209, 0.59", "-62.1378, 167.999, -3.53384, 1.47", "-62.0866, 168.739, -3.47075, 1.92", "-62.0287, 169.562, -3.40665, 1.33", "-61.9753, 170.388, -3.35271, 0.81", "-61.9242, 171.238, -3.31766, 0.44", "-61.9153, 171.388, -3.31528, 0.44", "-61.8384, 172.778, -3.33671, 0.44", "-61.7964, 173.518, -3.33702, 1.18", "-61.7441, 174.47, -3.32323, 1.47", "-61.7325, 174.619, -3.31894, 1.47", "-61.6686, 175.42, -3.28988, 1.47", "-61.6265, 175.858, -3.27155, 1.47", "-61.5289, 176.612, -3.23655, 0.52", "-61.3092, 178.001, -3.1707, 0.52", "-60.8952, 180.343, -3.07038, 0.52", "-60.7359, 181.201, -3.03818, 0.88", "-60.7031, 181.368, -3.03317, 0.88", "-60.4339, 182.681, -3.00835, 0.88", "-60.2577, 183.501, -3.01624, 0.88", "-60.1588, 184.073, -3.02911, 1.33", "-60.1503, 184.142, -3.03296, 1.33", "-60.1034, 184.884, -3.08916, 1.33", "-60.0994, 185.252, -3.12095, 1.33", "-60.1313, 185.907, -3.18369, 0.37", "-60.2813, 187.765, -3.36277, 0.37", "-60.3366, 188.308, -3.41048, 1.18", "-60.4554, 189.274, -3.4804, 1.77", "-60.5513, 190.076, -3.53227, 1.99", "-60.6005, 190.528, -3.55796, 1.99", "-60.6677, 191.199, -3.58782, 1.33", "-60.7321, 191.944, -3.61774, 0.81", "-60.8458, 193.346, -3.66426, 0.37", "-61.0565, 196.374, -3.7732, 0.37", "-61.0671, 196.544, -3.77971, 0.37", "-61.1362, 197.939, -3.83547, 0.37", "-61.144, 198.169, -3.84845, 0.88", "-61.1453, 198.239, -3.85343, 0.88", "-61.1482, 198.818, -3.89453, 1.18", "-61.1492, 198.887, -3.89666, 1.18", "-61.1636, 199.477, -3.90251, 1.18", "-61.1887, 200.327, -3.89906, 0.37", "-61.2441, 202.667, -3.8683, 0.37", "-61.2898, 204.786, -3.82536, 0.37", "-61.3034, 205.558, -3.80389, 0.96", "-61.3163, 206.518, -3.77291, 1.62", "-61.3239, 207.55, -3.73088, 1.77", "-61.3197, 208.338, -3.68615, 1.77", "-61.2936, 208.917, -3.66173, 1.77", "-61.2876, 208.986, -3.66091, 1.77", "-61.2013, 209.723, -3.6803, 0.74", "-61.0966, 210.448, -3.70069, 0.52", "-61.0471, 210.78, -3.70985, 0.52", "-60.8755, 212.097, -3.74151, 0.52", "-60.8666, 212.166, -3.74283, 0.52", "-60.8321, 212.464, -3.74633, 0.88", "-60.7795, 212.978, -3.75379, 1.03", "-60.7451, 213.416, -3.76618, 1.03", "-60.7267, 213.925, -3.78642, 1.03", "-60.7278, 213.995, -3.78935, 1.03", "-60.7458, 214.435, -3.78326, 1.03", "-60.7859, 215.109, -3.677, 0.74", "-60.7956, 215.245, -3.64461, 0.74", "-60.8607, 216.093, -3.40317, 0.52", "-60.995, 217.843, -2.86803, 0.52", "-61.1821, 220.147, -2.12285, 0.37", "-61.3473, 222.11, -1.47999, 1.18", "-61.4043, 222.771, -1.2582, 1.92", "-61.4164, 222.913, -1.21266, 1.92", "-61.5402, 224.176, -0.846315, 1.92", "-61.6661, 225.31, -0.565126, 0.59", "-61.824, 226.664, -0.284777, 0.59", "-61.8323, 226.733, -0.274323, 0.59", "-62.0027, 228.026, -0.0568628, 0.59", "-62.2102, 229.474, 0.192626, 0.59", "-62.2206, 229.542, 0.204498, 0.59", "-62.399, 230.748, 0.392999, 0.29", "-62.4278, 230.956, 0.423469, 0.29", "-62.6022, 232.49, 0.615285, 0.29", "-62.6798, 233.4, 0.708893, 1.18", "-62.7082, 234.127, 0.754993, 1.18", "-62.7081, 234.94, 0.770596, 1.18", "-62.6716, 235.742, 0.745081, 0.81", "-62.642, 236.272, 0.720813, 0.59", "-62.6362, 236.352, 0.716678, 0.59", "-62.577, 237.24, 0.671597, 0.59", "-62.5139, 238.191, 0.618416, 0.52", "-62.4096, 240.021, 0.510737, 0.44", "-62.3374, 241.828, 0.379616, 0.44", "-62.3114, 242.936, 0.288808, 1.18", "-62.3062, 243.755, 0.21856, 2.06", "-62.3139, 244.317, 0.166868, 2.28", "-62.3466, 244.922, 0.110821, 1.55", "-62.411, 245.742, 0.0376088, 1.11", "-62.454, 246.099, 0.0118903, 0.74", "-62.6153, 246.896, -0.0557725, 0.29", "-62.6508, 247.031, -0.0676391, 0.29", "-63.0058, 248.161, -0.164915, 0.29", "-63.0284, 248.227, -0.169967, 0.29", "-63.5758, 249.712, -0.261951, 0.29", "-63.7979, 250.279, -0.300466, 0.81", "-64.0179, 250.827, -0.324545, 1.11", "-64.0441, 250.892, -0.325174, 1.11", "-64.3461, 251.665, -0.296273, 1.11", "-64.3727, 251.74, -0.290135, 1.11", "-64.4873, 252.142, -0.23131, 0.88", "-64.6554, 252.834, -0.116744, 0.88", "-64.7792, 253.444, -0.0187744, 0.66", "-64.9094, 254.092, 0.0772998, 0.66", "-65.0552, 254.881, 0.190488, 0.44", "-65.2238, 255.829, 0.308136, 0.29", "-65.2493, 255.976, 0.322533, 0.29", "-65.3895, 256.69, 0.387703, 0.29", "-65.5091, 257.305, 0.448196, 0.29", "-65.5866, 257.687, 0.483804, 1.03", "-65.7827, 258.569, 0.561517, 1.47", "-65.9545, 259.31, 0.619625, 1.47", "-66.222, 260.414, 0.703786, 0.37", "-66.668, 262.188, 0.860586, 0.37", "-66.8312, 262.833, 0.921082, 0.81", "-66.9959, 263.458, 0.980245, 1.18", "-67.1627, 264.111, 1.04206, 1.18", "-67.3038, 264.745, 1.09329, 1.11", "-67.4099, 265.329, 1.11868, 0.52", "-67.5305, 266.082, 1.14362, 0.52", "-67.5486, 266.231, 1.14661, 0.52", "-67.6649, 267.694, 1.1513, 0.52", "-67.7453, 269.372, 1.12655, 0.52", "-67.7646, 270.117, 1.08748, 0.88", "-67.7671, 270.196, 1.08044, 0.88", "-67.7977, 270.788, 1.00662, 0.88", "-67.8452, 271.369, 0.916892, 0.88", "-67.8626, 271.505, 0.890997, 0.88", "-67.9716, 272.104, 0.765811, 0.66", "-68.2014, 273.221, 0.549823, 0.66", "-68.3495, 273.945, 0.393934, 0.96", "-68.4656, 274.503, 0.240398, 1.47", "-68.5737, 275.071, 0.0959098, 1.69", "-68.5847, 275.139, 0.0830878, 1.69", "-68.6568, 275.652, 0.0331814, 1.69", "-68.737, 276.272, 0.00640604, 1.69", "-68.8317, 277.032, 0.00993354, 1.33", "-68.965, 278.073, 0.0345891, 0.29", "-69.1754, 279.694, 0.101953, 0.29", "-69.3097, 280.71, 0.161916, 0.29", "-69.3783, 281.22, 0.20437, 0.96", "-69.4843, 282.016, 0.309529, 0.96", "-69.4924, 282.084, 0.3203, 0.96", "-69.5231, 282.379, 0.353537, 0.96", "-69.5598, 282.894, 0.420025, 1.03", "-69.5843, 283.251, 0.460873, 1.03", "-69.6331, 283.768, 0.519887, 0.81", "-69.6963, 284.271, 0.575968, 0.52", "-69.7129, 284.376, 0.584902, 0.52", "-69.8022, 284.877, 0.619044, 0.37", "-69.9142, 285.428, 0.66844, 0.29", "-70.0924, 286.217, 0.744217, 0.29", "-70.1168, 286.32, 0.753551, 0.29", "-70.4285, 287.623, 0.927834, 0.29", "-70.4441, 287.691, 0.938706, 0.29", "-70.6139, 288.447, 1.0767, 1.03", "-70.7389, 289.111, 1.19688, 1.77", "-70.8352, 289.689, 1.29483, 1.77", "-70.9322, 290.353, 1.39639, 1.33", "-70.9955, 290.859, 1.46449, 0.88", "-71.0651, 291.517, 1.53548, 0.74", "-71.1558, 292.83, 1.62725, 0.74", "-71.1815, 293.572, 1.67055, 1.03", "-71.1798, 293.862, 1.68165, 1.03", "-71.1597, 294.301, 1.68657, 1.03", "-71.1494, 294.44, 1.6994, 1.03", "-71.0456, 295.477, 1.88655, 1.33", "-71.0263, 295.635, 1.9299, 1.33", "-70.9278, 296.492, 2.17942, 1.33", "-70.9173, 296.6, 2.21138, 1.33", "-70.8366, 297.863, 2.52119, 0.81", "-70.8155, 298.511, 2.64399, 0.52", "-70.8152, 298.581, 2.65296, 0.52", "-70.839, 300.187, 2.78169, 0.52", "-70.8411, 300.257, 2.78378, 0.52", "-70.891, 301.799, 2.75042, 0.44", "-70.9229, 302.894, 2.65061, 0.44", "-70.9415, 303.448, 2.57823, 0.74", "-70.9498, 303.665, 2.54214, 0.74", "-70.9688, 304.016, 2.46828, 0.74", "-70.9725, 304.095, 2.45291, 0.74", "-71.0121, 304.66, 2.32957, 0.74", "-71.1009, 305.494, 2.14944, 0.29", "-71.1105, 305.572, 2.13363, 0.29", "-71.288, 306.715, 1.90958, 0.29", "-71.673, 308.769, 1.53248, 0.29", "-71.8415, 309.505, 1.38711, 1.11", "-72.0224, 310.227, 1.24957, 1.77", "-72.0384, 310.294, 1.23971, 1.77", "-72.1782, 310.903, 1.1546, 1.77", "-72.2946, 311.44, 1.0771, 1.77", "-72.5339, 312.643, 0.912229, 0.29", "-72.7926, 314.141, 0.74701, 0.29", "-73.2482, 317.107, 0.451878, 0.29", "-73.2586, 317.176, 0.446369, 0.29", "-73.3894, 318.098, 0.390081, 1.11", "-73.4848, 318.755, 0.368479, 1.25", "-73.6089, 319.568, 0.375834, 0.37", "-73.6375, 319.716, 0.376965, 0.37", "-73.9949, 321.25, 0.392941, 0.37", "-74.0144, 321.328, 0.393679, 0.37", "-74.3392, 322.562, 0.375408, 0.37", "-74.3562, 322.629, 0.371654, 0.37", "-74.5136, 323.286, 0.313694, 1.11", "-74.6533, 323.935, 0.254271, 1.47", "-74.8017, 324.706, 0.178621, 1.47", "-74.9467, 325.54, 0.103699, 0.74", "-75.0659, 326.258, 0.0437642, 0.44", "-75.305, 327.761, -0.0597155, 0.29", "-75.4728, 328.917, -0.117222, 0.29", "-75.482, 328.986, -0.119819, 0.29", "-75.5881, 329.93, -0.158466, 0.29", "-75.6117, 330.162, -0.166869, 0.29", "-75.6492, 330.604, -0.190239, 0.74", "-75.683, 331.182, -0.230482, 0.74", "-75.746, 332.349, -0.324607, 0.74", "-75.8114, 333.95, -0.460525, 0.29", "-75.8189, 334.246, -0.498085, 0.59", "-75.8203, 334.474, -0.534475, 0.59", "-75.8149, 334.906, -0.616564, 0.59", "-75.8089, 335.111, -0.660988, 0.59", "-75.7788, 335.548, -0.751405, 0.59", "-75.7228, 336.283, -0.902735, 0.29", "-75.7151, 336.42, -0.930814, 0.29", "-75.6626, 337.642, -1.17566, 0.29", "-75.659, 337.747, -1.19505, 0.29", "-75.6151, 339.252, -1.54452, 0.29", "-75.6094, 339.736, -1.66826, 0.96", "-75.6155, 340.236, -1.7899, 1.47", "-75.6227, 340.372, -1.82281, 1.47", "-75.6648, 340.939, -1.97812, 1.47", "-75.7462, 341.983, -2.2505, 1.47", "-75.8224, 342.777, -2.44831, 0.22", "-75.9369, 343.991, -2.71816, 0.22", "-76.1009, 345.514, -3.04858, 0.22", "-76.2863, 346.886, -3.30611, 1.25", "-76.4707, 348.026, -3.50619, 2.06", "-76.5638, 348.504, -3.57797, 2.43", "-76.6541, 348.919, -3.64358, 2.43", "-76.9463, 350.11, -3.83667, 0.37", "-77.5186, 352.195, -4.24452, 0.37", "-77.7993, 353.122, -4.43739, 1.03", "-78.1011, 354.073, -4.65594, 1.99", "-78.3003, 354.688, -4.79264, 2.36", "-78.4014, 354.991, -4.85816, 2.36", "-78.8717, 356.434, -5.20458, 0.29", "-78.8921, 356.498, -5.22214, 0.29", "-79.3572, 357.994, -5.62021, 0.29", "-79.8427, 359.657, -6.12501, 0.29", "-79.863, 359.731, -6.1474, 0.29", "-80.1464, 360.841, -6.47062, 1.33", "-80.297, 361.47, -6.63534, 1.84", "-80.392, 361.908, -6.77683, 1.84", "-80.5937, 363.055, -7.22667, 0.29", "-80.7668, 364.395, -7.79896, 0.29", "-80.7784, 364.486, -7.83649, 0.74", "-80.8459, 365.042, -8.04823, 0.74", "-80.9728, 366.319, -8.57553, 0.22", "-80.9891, 366.558, -8.67878, 0.74", "-81.0103, 366.897, -8.82653, 0.74" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.79167, 35.9308, -7.5118, 0.59", "-6.91606, 36.339, -8.46181, 0.59", "-7.18547, 36.9228, -9.73552, 0.88", "-7.57684, 37.6233, -11.1387, 0.88", "-7.60048, 37.6587, -11.2065, 0.88", "-7.76256, 37.8737, -11.6075, 0.88", "-9.3622, 39.813, -15.0928, 0.52", "-9.92446, 40.4024, -16.1423, 0.52", "-10.2999, 40.7512, -16.7302, 0.52", "-10.6907, 41.0813, -17.251, 0.52", "-10.8516, 41.2152, -17.4659, 0.52", "-11.1552, 41.4487, -17.8359, 0.88", "-12.2847, 42.2384, -18.9606, 0.88", "-12.5916, 42.4306, -19.4072, 0.88", "-12.7516, 42.5181, -19.6433, 0.88", "-13.7117, 42.9727, -21.1457, 0.52", "-14.1001, 43.1202, -21.7633, 0.52", "-14.7803, 43.2866, -23.1044, 1.03", "-16.3092, 43.5052, -26.2685, 0.44", "-16.8641, 43.5405, -27.4358, 0.44", "-17.5558, 43.5534, -29.0455, 1.92", "-17.7743, 43.5487, -29.5935, 1.92", "-19.7446, 43.4594, -34.8197, 0.52", "-20.0304, 43.4364, -35.5901, 1.18", "-20.327, 43.416, -36.375, 1.55", "-22.0107, 43.374, -40.8171, 0.29", "-22.0426, 43.3767, -40.8904, 0.29", "-22.3712, 43.4368, -41.5433, 0.29", "-22.6159, 43.5139, -41.9956, 0.74", "-22.8787, 43.5992, -42.5286, 0.74", "-22.9749, 43.6224, -42.7607, 0.74", "-23.2123, 43.6395, -43.3433, 0.74", "-23.2369, 43.6392, -43.4089, 0.74", "-25.0729, 43.473, -48.5657, 0.29", "-25.4692, 43.4145, -49.7129, 0.29", "-26.3601, 43.2437, -52.2156, 1.33", "-26.5637, 43.1966, -52.7511, 1.33", "-26.5904, 43.1898, -52.8155, 1.33", "-27.2711, 43.0351, -54.1757, 0.29", "-27.3811, 43.0196, -54.2985, 0.29", "-27.9045, 43.043, -54.8655, 0.29", "-28.2199, 43.1219, -55.1049, 0.59", "-28.463, 43.2146, -55.5632, 0.59", "-28.4948, 43.228, -55.6241, 0.59", "-29.1187, 43.5285, -56.872, 0.59", "-29.1545, 43.5456, -56.9415, 0.59", "-29.2794, 43.607, -57.1796, 0.59", "-31.2352, 44.5493, -60.9757, 0.22", "-32.1996, 44.969, -62.7401, 0.22", "-32.3694, 45.0372, -63.0233, 0.74", "-32.6167, 45.136, -63.3805, 0.74", "-32.9541, 45.2727, -63.8063, 0.74", "-34.4813, 45.9064, -65.2744, 0.22", "-35.0649, 46.1644, -65.6576, 0.22", "-35.6643, 46.4433, -66.0958, 1.33", "-36.3884, 46.7846, -66.5894, 1.77", "-36.8946, 47.0257, -66.9531, 0.22", "-37.934, 47.5176, -67.6849, 0.22", "-39.4016, 48.2243, -68.5971, 1.33", "-39.5255, 48.2833, -68.6897, 1.33", "-40.0332, 48.5166, -69.1041, 1.33", "-41.2972, 49.0494, -70.2628, 0.22", "-41.4065, 49.0884, -70.3577, 0.22", "-42.1527, 49.3217, -70.9551, 0.22", "-43.2275, 49.6124, -71.6495, 0.74", "-43.7568, 49.7452, -71.9526, 0.74", "-44.7408, 49.9684, -72.4249, 0.29", "-46.3507, 50.2795, -73.0915, 0.29", "-46.4498, 50.2936, -73.1274, 0.29", "-46.8666, 50.336, -73.2616, 0.74", "-47.3846, 50.3836, -73.3713, 1.18", "-47.8268, 50.4203, -73.4461, 1.18", "-49.2906, 50.5346, -73.7187, 0.22", "-51.9802, 50.8755, -74.6858, 0.22", "-52.0441, 50.8823, -74.7135, 0.22", "-53.1546, 50.988, -75.2507, 1.69", "-53.2147, 50.9938, -75.2862, 1.69", "-54.6813, 51.1381, -76.2719, 2.14", "-56.8041, 51.3324, -77.8473, 0.15", "-58.4198, 51.4713, -79.3366, 0.15", "-58.4699, 51.4752, -79.3854, 0.15", "-59.6548, 51.5489, -80.6381, 1.03", "-59.7781, 51.5562, -80.7636, 1.03", "-60.1798, 51.5741, -81.1114, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.79167, 35.9308, -7.5118, 0.66", "-7.40387, 36.5428, -7.78301, 0.66", "-8.21722, 37.4073, -8.30211, 0.66", "-8.97442, 38.2498, -8.85949, 0.66", "-9.5586, 38.8952, -9.27562, 0.66", "-9.82232, 39.1676, -9.43197, 0.88", "-10.451, 39.7777, -9.78002, 0.66", "-11.1523, 40.4494, -10.1667, 0.52", "-11.2572, 40.5402, -10.2236, 0.52", "-12.2121, 41.2997, -10.7064, 0.52", "-13.5293, 42.2753, -11.3198, 0.52", "-14.3246, 42.8289, -11.6803, 0.52", "-14.9004, 43.1967, -11.9113, 1.4", "-16.1247, 43.8798, -12.4601, 2.14", "-16.1733, 43.9042, -12.4853, 2.14", "-16.8602, 44.2043, -12.9249, 2.65", "-16.9377, 44.2354, -12.978, 2.65", "-17.7846, 44.5841, -13.5038, 2.65", "-19.3312, 45.2282, -14.4205, 1.11", "-19.3882, 45.253, -14.4527, 1.11", "-20.09, 45.5738, -14.8419, 0.29", "-21.2205, 46.1234, -15.4295, 0.29", "-22.6844, 46.8773, -16.139, 0.29", "-22.7332, 46.9051, -16.1601, 0.29", "-23.3335, 47.282, -16.3813, 1.11", "-23.3979, 47.3228, -16.4054, 1.11", "-24.0865, 47.7755, -16.6546, 1.4", "-24.7041, 48.197, -16.9024, 1.69", "-25.1451, 48.5035, -17.1075, 1.69", "-26.051, 49.1476, -17.5644, 1.11", "-26.1037, 49.1861, -17.5898, 1.11", "-26.6855, 49.6203, -17.8722, 0.44", "-26.7587, 49.6769, -17.9073, 0.44", "-27.5325, 50.2998, -18.239, 0.29", "-27.6964, 50.4347, -18.297, 0.29", "-28.8982, 51.4858, -18.6062, 0.29", "-29.2103, 51.7643, -18.677, 0.74", "-29.6984, 52.2039, -18.7934, 1.11", "-30.1135, 52.5923, -18.8793, 1.11", "-30.1941, 52.6706, -18.8919, 1.11", "-30.4071, 52.8758, -18.9309, 1.11", "-30.4559, 52.9251, -18.941, 1.11", "-31.0234, 53.5109, -19.0754, 0.37", "-32.3784, 54.9074, -19.4009, 0.37", "-33.2297, 55.768, -19.5903, 0.29", "-33.3347, 55.873, -19.6116, 0.29", "-34.0015, 56.5295, -19.7685, 0.29", "-34.5908, 57.1234, -19.9316, 1.25", "-35.3058, 57.8554, -20.1503, 2.21", "-36.0067, 58.5731, -20.4424, 2.43", "-36.2813, 58.8584, -20.574, 2.06", "-37.2998, 59.9248, -21.0637, 0.29", "-38.417, 61.0936, -21.6113, 0.29", "-38.4628, 61.1421, -21.6322, 0.29", "-39.2787, 62.0412, -22.0411, 0.29", "-39.5686, 62.3671, -22.2019, 0.29", "-40.6634, 63.5994, -22.8207, 0.29", "-40.7135, 63.6557, -22.8474, 0.29", "-41.628, 64.6657, -23.3424, 0.29", "-42.2846, 65.39, -23.6963, 1.18", "-42.7938, 65.9394, -24.065, 1.62", "-42.8384, 65.9802, -24.1004, 1.62", "-43.2596, 66.3092, -24.4327, 1.62", "-43.308, 66.3429, -24.4704, 1.62", "-43.5709, 66.5048, -24.6631, 1.62", "-45.2401, 67.4751, -25.8512, 0.29", "-46.689, 68.2953, -26.894, 0.29", "-47.403, 68.6888, -27.4082, 0.29", "-48.2204, 69.1259, -28.027, 1.11", "-48.73, 69.3929, -28.418, 1.47", "-49.6711, 69.8809, -29.0483, 1.47", "-49.7348, 69.9146, -29.083, 1.47", "-50.3155, 70.2647, -29.3395, 1.47", "-51.0882, 70.7613, -29.591, 0.22", "-51.1534, 70.8054, -29.6049, 0.22", "-53.21, 72.2505, -29.9277, 0.22", "-53.3851, 72.3765, -29.9708, 0.22", "-55.5916, 74.062, -30.7134, 0.22", "-55.9133, 74.3185, -30.8398, 1.92", "-56.5986, 74.8979, -31.0966, 2.28", "-56.8187, 75.0946, -31.1947, 2.58", "-59.0224, 77.1982, -32.3327, 0.29", "-60.8593, 78.9885, -33.3282, 0.29", "-60.9237, 79.054, -33.365, 0.29", "-63.5881, 81.8233, -34.7993, 0.29", "-64.4396, 82.7202, -35.2172, 1.03", "-64.9346, 83.2516, -35.4116, 1.69", "-64.9895, 83.3089, -35.4215, 1.69", "-65.6563, 83.9628, -35.5157, 1.69", "-66.1125, 84.3865, -35.56, 1.92", "-66.1722, 84.4394, -35.5665, 1.92", "-66.8794, 85.052, -35.641, 0.29", "-69.2182, 87.0391, -35.948, 0.22", "-71.1967, 88.716, -36.1847, 0.22", "-71.25, 88.7609, -36.1909, 0.22", "-72.3804, 89.7102, -36.3044, 1.47", "-73.009, 90.2451, -36.3601, 1.92", "-73.6868, 90.8337, -36.4039, 1.92", "-74.5189, 91.5859, -36.4279, 0.22", "-74.5714, 91.6321, -36.4271, 0.22", "-76.066, 92.9245, -36.3544, 0.22", "-76.1947, 93.0342, -36.3377, 0.22", "-78.0797, 94.6417, -36.0713, 0.22", "-78.7491, 95.2345, -35.981, 1.4", "-79.4329, 95.8476, -35.9018, 1.69", "-79.4917, 95.9013, -35.8946, 1.69", "-80.233, 96.6035, -35.792, 0.22", "-80.3093, 96.6768, -35.7815, 0.22", "-82.2772, 98.5863, -35.5183, 0.22", "-82.4416, 98.7473, -35.4996, 0.22", "-83.8218, 100.083, -35.3828, 0.22", "-83.9896, 100.241, -35.3743, 0.22", "-84.5296, 100.742, -35.3743, 1.4", "-85.084, 101.249, -35.3743, 1.62", "-85.4393, 101.567, -35.3743, 1.62", "-86.0269, 102.1, -35.3743, 0.22", "-86.0787, 102.147, -35.3743, 0.22", "-87.202, 103.151, -35.3518, 0.22", "-87.5828, 103.499, -35.3369, 0.66", "-87.7388, 103.643, -35.3283, 0.96", "-87.8119, 103.709, -35.324, 0.96", "-88.3229, 104.158, -35.2879, 0.96", "-88.7229, 104.501, -35.2579, 0.22", "-88.83, 104.591, -35.2505, 0.22", "-91.5269, 106.796, -35.2226, 0.22", "-91.5738, 106.834, -35.2243, 0.22", "-92.3873, 107.474, -35.2811, 1.47", "-93.0003, 107.949, -35.3598, 1.99", "-93.6645, 108.456, -35.4772, 1.99", "-94.5296, 109.07, -35.6471, 0.15", "-95.7894, 109.888, -35.9302, 0.15", "-96.0108, 110.028, -35.9764, 0.15", "-97.6802, 111.02, -36.3705, 0.15", "-97.7651, 111.067, -36.3905, 0.15", "-99.5921, 111.991, -36.7569, 0.15", "-100.006, 112.19, -36.8268, 1.4", "-100.909, 112.587, -36.971, 1.4", "-102.044, 113.059, -37.1521, 0.37", "-102.474, 113.225, -37.2178, 0.22", "-105.097, 114.202, -37.6484, 0.22", "-105.162, 114.225, -37.6605, 0.22", "-106.58, 114.71, -37.9897, 0.22", "-107.195, 114.91, -38.1539, 1.25", "-107.519, 115.042, -38.2392, 1.47", "-108.004, 115.268, -38.3818, 1.47", "-108.216, 115.381, -38.4508, 1.47", "-109.299, 116.009, -38.8078, 0.22", "-109.356, 116.045, -38.8265, 0.22", "-111.935, 117.882, -39.5168, 0.22", "-112.717, 118.481, -39.6993, 0.74", "-113.091, 118.787, -39.7652, 0.74", "-113.561, 119.192, -39.8236, 0.22", "-113.756, 119.373, -39.8377, 0.22", "-115.568, 121.154, -39.9609, 0.22", "-115.662, 121.257, -39.9741, 0.22", "-116.998, 122.77, -40.1923, 0.22", "-117.479, 123.323, -40.265, 1.55", "-118.14, 124.085, -40.3597, 2.06", "-118.819, 124.884, -40.4702, 2.36", "-120.015, 126.314, -40.686, 0.22", "-123.03, 129.926, -41.2539, 0.22", "-125.236, 132.593, -41.6896, 0.22", "-125.304, 132.674, -41.7027, 0.22", "-125.695, 133.141, -41.7738, 1.18", "-126.193, 133.736, -41.8512, 1.62", "-126.297, 133.86, -41.8586, 1.62", "-126.639, 134.335, -41.8985, 1.62", "-127.025, 134.894, -41.927, 1.62", "-127.355, 135.379, -41.9418, 0.15", "-127.4, 135.445, -41.9425, 0.15", "-127.893, 136.174, -41.9504, 0.15", "-128.07, 136.438, -41.9531, 0.15", "-129.462, 138.546, -41.9918, 0.15", "-129.907, 139.254, -42.0092, 0.88", "-130.262, 139.826, -42.0331, 1.18", "-130.64, 140.447, -42.067, 1.18", "-130.751, 140.637, -42.0799, 1.18", "-130.992, 141.059, -42.1123, 0.22", "-131.934, 142.731, -42.3017, 0.22", "-132.238, 143.283, -42.371, 0.66", "-132.468, 143.715, -42.4168, 0.66", "-132.535, 143.838, -42.4306, 0.66", "-132.647, 144.039, -42.4525, 0.66", "-132.829, 144.353, -42.4851, 0.15", "-132.945, 144.54, -42.5028, 0.15", "-134.851, 147.589, -42.7462, 0.15", "-135.009, 147.828, -42.761, 0.59", "-135.461, 148.479, -42.7949, 0.59", "-135.691, 148.805, -42.8082, 0.22", "-136.619, 150.136, -42.878, 0.22", "-136.695, 150.265, -42.8859, 0.22", "-138.231, 153.353, -43.1625, 0.22", "-138.525, 154.027, -43.2296, 1.25", "-138.973, 155.181, -43.3585, 1.55", "-139.311, 156.167, -43.4772, 0.22", "-140.477, 160.065, -44.0278, 0.22", "-140.772, 161.183, -44.2043, 1.11", "-140.913, 161.835, -44.3175, 1.4", "-140.928, 161.903, -44.329, 1.4", "-141.135, 162.696, -44.4535, 1.4", "-141.398, 163.508, -44.5337, 0.22", "-141.439, 163.599, -44.5381, 0.22", "-142.429, 165.603, -44.5081, 0.22", "-142.53, 165.8, -44.5001, 0.22", "-143.266, 167.149, -44.4177, 0.22", "-143.637, 167.795, -44.358, 1.03", "-144.027, 168.406, -44.2861, 1.4", "-144.35, 168.877, -44.2248, 1.4", "-144.393, 168.932, -44.2163, 1.4", "-144.814, 169.445, -44.141, 0.22", "-144.867, 169.505, -44.1335, 0.22", "-146.396, 171.19, -44.0031, 0.22", "-146.622, 171.443, -43.9797, 0.66", "-146.662, 171.488, -43.9741, 0.66", "-146.919, 171.804, -43.9348, 0.96", "-147.059, 171.987, -43.9117, 0.96", "-147.281, 172.283, -43.8775, 0.96", "-147.534, 172.63, -43.8447, 0.81", "-147.812, 173.0, -43.8197, 0.22", "-149.233, 174.865, -43.712, 0.22", "-149.329, 174.988, -43.7067, 0.59", "-149.423, 175.105, -43.7028, 0.59", "-149.974, 175.798, -43.717, 0.59", "-150.117, 175.975, -43.7298, 0.22", "-150.285, 176.18, -43.755, 0.22", "-151.615, 177.828, -44.0146, 0.22", "-151.658, 177.883, -44.0219, 0.22", "-152.149, 178.531, -44.0987, 1.25", "-152.608, 179.158, -44.167, 1.4", "-153.124, 179.88, -44.2351, 0.22", "-153.21, 180.003, -44.2452, 0.22", "-154.858, 182.375, -44.4001, 0.22", "-155.099, 182.721, -44.4087, 1.11", "-155.145, 182.786, -44.4069, 1.11", "-155.551, 183.39, -44.3809, 1.11", "-155.614, 183.484, -44.3758, 1.11", "-155.812, 183.789, -44.3568, 1.11", "-156.075, 184.207, -44.3257, 0.15", "-156.117, 184.275, -44.3209, 0.15", "-157.369, 186.32, -44.1938, 0.15", "-157.716, 186.901, -44.1623, 0.88", "-157.786, 187.022, -44.1717, 0.88", "-158.066, 187.512, -44.2798, 0.96", "-158.114, 187.649, -44.3177, 0.96", "-158.266, 188.247, -44.5166, 0.96", "-158.279, 188.321, -44.5445, 0.96", "-158.573, 190.251, -45.2557, 0.22", "-158.601, 190.456, -45.3285, 0.22", "-159.138, 195.093, -46.8749, 0.22", "-159.209, 195.799, -47.1252, 1.25", "-159.215, 195.865, -47.1487, 1.25", "-159.267, 196.5, -47.3199, 1.25", "-159.292, 196.784, -47.375, 1.25", "-159.341, 197.279, -47.4861, 1.25", "-159.512, 198.807, -47.876, 0.22", "-159.521, 198.885, -47.8944, 0.22", "-160.139, 203.882, -49.5317, 0.22", "-160.198, 204.27, -49.6737, 0.96", "-160.333, 205.128, -49.9417, 1.25", "-160.412, 205.633, -50.089, 1.25", "-160.427, 205.735, -50.116, 1.25", "-160.839, 208.531, -50.8723, 0.22", "-161.349, 211.931, -51.8752, 0.22", "-162.109, 217.033, -53.3225, 0.22", "-162.305, 218.265, -53.6349, 1.55", "-162.466, 219.246, -53.8623, 1.55", "-162.48, 219.324, -53.8771, 1.55", "-162.648, 220.283, -53.9847, 0.22", "-162.676, 220.435, -54.0056, 0.22", "-163.215, 222.568, -54.3291, 0.22", "-163.271, 222.778, -54.3647, 0.22", "-163.532, 223.743, -54.565, 0.22", "-163.649, 224.351, -54.6819, 0.96", "-163.735, 224.935, -54.7819, 0.96", "-163.746, 225.013, -54.7965, 0.96", "-163.897, 226.321, -55.0661, 0.22", "-163.922, 226.457, -55.0882, 0.22", "-164.677, 229.934, -55.5649, 0.22", "-164.813, 230.532, -55.6613, 0.22", "-164.858, 230.73, -55.6936, 0.59", "-164.943, 231.104, -55.7609, 0.22", "-165.742, 234.535, -56.3736, 0.22", "-165.757, 234.602, -56.3876, 0.22", "-166.101, 236.005, -56.7959, 1.18", "-166.341, 237.098, -57.1421, 1.18", "-166.501, 237.93, -57.4171, 0.22", "-166.522, 238.061, -57.4879, 0.22", "-166.794, 240.351, -59.3697, 0.22", "-166.848, 241.041, -59.9616, 0.66", "-166.858, 241.261, -60.1509, 0.66", "-166.859, 241.642, -60.4893, 0.66", "-166.729, 244.703, -63.1584, 0.22", "-166.719, 244.804, -63.2687, 0.22", "-166.444, 246.182, -64.8886, 0.22", "-166.336, 246.671, -65.4066, 1.25", "-166.21, 247.209, -65.9316, 1.25", "-166.197, 247.262, -65.9763, 1.25", "-165.545, 249.978, -67.6799, 0.22", "-165.168, 251.662, -68.9168, 0.22", "-165.156, 251.721, -68.9697, 0.22", "-165.122, 252.013, -69.1889, 0.74", "-165.114, 252.202, -69.3019, 0.74", "-165.12, 252.676, -69.5034, 0.74", "-165.208, 253.89, -69.7675, 0.22", "-165.231, 254.048, -69.8136, 0.22", "-165.711, 256.708, -70.6105, 0.22", "-165.772, 257.021, -70.6998, 0.59", "-165.826, 257.281, -70.8154, 0.59", "-165.869, 257.47, -70.9198, 0.59", "-166.248, 258.448, -71.456, 0.22", "-166.991, 259.909, -72.3065, 0.22", "-167.429, 260.623, -72.7604, 1.55", "-168.963, 262.942, -74.1505, 0.07", "-169.053, 263.068, -74.2215, 0.07", "-171.329, 266.072, -75.695, 0.07", "-171.729, 266.569, -75.9118, 0.66", "-171.779, 266.626, -75.936, 0.66", "-172.252, 267.15, -76.1137, 0.66", "-172.403, 267.322, -76.1438, 0.15", "-173.471, 268.649, -76.4335, 0.15", "-174.039, 269.522, -76.6967, 0.66", "-174.158, 269.715, -76.7514, 0.66", "-174.34, 270.037, -76.7946, 0.66", "-174.368, 270.09, -76.7984, 0.66", "-174.637, 270.603, -76.8132, 0.66", "-174.876, 271.059, -76.8072, 0.15", "-175.047, 271.389, -76.7942, 0.15", "-176.969, 275.106, -76.6679, 0.15", "-177.287, 275.729, -76.6404, 0.96", "-177.551, 276.239, -76.6147, 1.33", "-177.584, 276.301, -76.6114, 1.33", "-177.938, 277.001, -76.5744, 1.33", "-177.986, 277.096, -76.5678, 1.33", "-178.249, 277.612, -76.5136, 0.15", "-179.649, 280.31, -76.223, 0.15", "-179.694, 280.396, -76.2073, 1.03", "-179.763, 280.526, -76.1765, 1.03", "-180.083, 281.039, -76.0293, 1.25", "-180.196, 281.202, -75.9783, 1.25", "-180.482, 281.589, -75.8736, 1.25", "-181.335, 282.672, -75.5619, 0.15", "-181.394, 282.75, -75.543, 0.15", "-182.667, 284.503, -74.9713, 0.15", "-182.806, 284.72, -74.9049, 0.15", "-184.123, 286.905, -74.2838, 0.15", "-184.204, 287.045, -74.247, 0.81", "-184.522, 287.627, -74.1117, 0.81", "-185.441, 289.421, -73.5845, 0.15", "-187.221, 293.266, -72.2087, 0.15", "-187.402, 293.664, -72.0508, 0.81", "-187.429, 293.723, -72.0251, 0.81", "-187.578, 294.029, -71.8791, 0.81", "-188.314, 295.423, -71.1614, 0.15", "-188.42, 295.609, -71.0665, 0.15", "-188.865, 296.33, -70.5041, 0.15", "-189.401, 297.177, -69.8511, 0.15", "-190.094, 298.245, -69.0729, 0.66", "-190.128, 298.297, -69.0408, 0.66", "-190.477, 298.851, -68.8047, 0.66", "-190.615, 299.089, -68.7132, 0.07", "-190.672, 299.204, -68.6579, 0.15", "-190.739, 299.377, -68.5705, 0.15", "-191.055, 300.206, -68.291, 0.15", "-191.128, 300.388, -68.2297, 0.52", "-191.378, 300.985, -68.0313, 0.52", "-191.887, 302.122, -67.6038, 0.15", "-191.982, 302.316, -67.5302, 0.15", "-192.995, 304.241, -66.8009, 0.15", "-193.22, 304.639, -66.657, 0.81", "-193.477, 305.072, -66.5323, 0.81", "-193.894, 305.725, -66.4104, 0.22", "-194.578, 306.766, -66.33, 0.22", "-194.821, 307.121, -66.3133, 1.25", "-195.26, 307.732, -66.3117, 1.25", "-195.653, 308.324, -66.3537, 0.15", "-196.315, 309.386, -66.5236, 0.15", "-196.383, 309.505, -66.55, 0.37", "-196.435, 309.603, -66.5718, 0.37", "-196.8, 310.329, -66.7246, 0.37", "-197.811, 312.537, -67.0981, 0.22", "-198.118, 313.269, -67.1938, 1.11", "-198.293, 313.745, -67.2467, 1.11", "-198.462, 314.226, -67.2914, 0.15", "-198.581, 314.596, -67.3186, 0.15", "-199.166, 316.667, -67.4156, 0.15", "-199.235, 316.949, -67.4153, 0.15", "-199.567, 318.316, -67.3729, 0.15", "-199.631, 318.574, -67.3675, 0.59", "-199.668, 318.726, -67.3675, 0.59", "-199.72, 318.954, -67.3675, 0.59", "-199.731, 319.023, -67.3675, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.27307, 35.5591, -0.732813, 0.44", "-0.223878, 35.6963, 11.2562, 0.44", "-0.234594, 35.698, 11.3355, 0.44", "-0.319064, 35.7167, 11.9258, 0.44", "-0.344059, 35.7248, 12.0938, 0.44", "-0.449846, 35.7748, 12.7407, 0.44", "-0.497279, 35.8028, 13.0012, 0.44", "-0.712327, 36.0734, 13.1018, 0.44", "-0.807778, 36.181, 13.1443, 0.44", "-1.33039, 36.7432, 13.3803, 0.44", "-2.17599, 37.5678, 13.7348, 0.44", "-2.51044, 37.8699, 13.8685, 0.66", "-3.13092, 38.4358, 14.1647, 0.44", "-3.70118, 38.9473, 14.4629, 0.44", "-3.7733, 39.0142, 14.5031, 0.44", "-4.0583, 39.291, 14.6688, 0.44", "-4.13097, 39.4004, 14.7174, 0.44", "-4.44445, 40.4364, 15.3847, 0.44", "-4.4489, 40.4995, 15.4337, 0.44", "-4.44974, 40.7796, 15.6598, 0.52", "-4.45382, 40.9502, 15.7987, 0.52", "-4.48673, 41.4002, 16.1632, 0.52", "-4.65514, 42.3423, 16.8905, 0.52", "-4.68816, 42.4407, 16.9547, 0.52", "-4.87782, 42.9239, 17.2546, 0.52", "-4.94473, 43.0727, 17.3791, 0.52", "-5.08219, 43.372, 17.6514, 0.52", "-5.18629, 43.6218, 17.8516, 0.88", "-5.32451, 44.0857, 18.1831, 0.88", "-5.3375, 44.1427, 18.2215, 0.88", "-5.62415, 45.6081, 19.2457, 0.52", "-5.68402, 45.9636, 19.498, 0.44", "-5.80763, 46.8606, 20.1403, 0.44", "-5.96183, 48.167, 21.0763, 0.29", "-6.03469, 48.9714, 21.6431, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.27307, 35.5591, -0.732813, 3.09", "1.53137, 37.1511, -0.805777, 3.09", "1.69553, 38.1629, -0.85215, 3.09", "1.94068, 39.674, -0.921401, 3.09" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "28.3534, -38.2121, 4.18164, 0.66", "28.7599, -38.0325, 4.27697, 0.66", "29.4103, -37.8693, 4.46518, 0.52", "29.4763, -37.8571, 4.48507, 0.52", "30.0778, -37.7812, 4.65516, 0.52", "30.1545, -37.773, 4.67618, 0.52", "31.0096, -37.746, 4.97726, 0.81", "31.7761, -37.8064, 5.31406, 0.96", "31.8471, -37.8223, 5.34727, 0.96", "32.3728, -37.9585, 5.56249, 0.96", "32.4349, -37.976, 5.58974, 0.96", "33.4669, -38.2586, 6.017, 0.29", "33.5634, -38.284, 6.0537, 0.29", "34.7046, -38.5652, 6.49955, 0.29", "35.7156, -38.7952, 6.8757, 0.29", "36.5751, -38.9581, 7.20663, 0.81", "37.2078, -39.0453, 7.43071, 1.03", "37.5669, -39.0699, 7.53533, 1.33", "37.634, -39.0718, 7.55514, 1.33", "37.9874, -39.0599, 7.66413, 1.33", "38.8271, -39.0217, 7.89236, 1.11", "39.6976, -38.9694, 8.07048, 0.66", "40.6169, -38.8867, 8.33414, 0.66", "40.7751, -38.8707, 8.38745, 1.03", "40.9158, -38.8557, 8.43703, 1.03", "41.6004, -38.7778, 8.67821, 1.03", "41.7417, -38.7615, 8.72578, 1.03", "43.0036, -38.6177, 9.17263, 0.66", "43.0697, -38.6111, 9.19456, 0.66", "44.0344, -38.5306, 9.58294, 0.66", "44.4424, -38.4983, 9.759, 0.81", "44.5814, -38.492, 9.815, 0.81", "45.3443, -38.4711, 10.0954, 0.81", "45.8286, -38.4753, 10.2553, 0.81", "47.1746, -38.538, 10.706, 0.81", "47.8742, -38.5962, 10.95, 0.52", "49.2097, -38.7386, 11.4065, 0.52", "49.3168, -38.7528, 11.4401, 0.52", "49.985, -38.8742, 11.6339, 0.52", "51.0033, -39.1072, 11.8782, 0.52", "51.1045, -39.1368, 11.8921, 0.88", "51.2353, -39.1827, 11.9116, 0.88", "51.8721, -39.4721, 12.0009, 0.88", "52.4474, -39.7612, 12.0701, 0.44", "52.5079, -39.7936, 12.0839, 0.44", "53.3765, -40.2437, 12.371, 0.44", "53.5045, -40.3053, 12.4191, 0.44", "54.496, -40.7335, 12.8134, 0.44", "54.5553, -40.7551, 12.8438, 0.44", "55.832, -41.1351, 13.5906, 0.74", "56.3895, -41.2617, 13.9469, 0.74", "56.5669, -41.2867, 14.0746, 0.74", "57.0104, -41.3021, 14.4634, 0.74", "57.841, -41.2253, 15.3108, 0.74", "57.9456, -41.208, 15.4201, 0.74", "58.3097, -41.1106, 15.8131, 0.74", "58.374, -41.0878, 15.8848, 0.74", "59.4929, -40.7206, 17.0089, 1.03", "59.55, -40.7024, 17.0619, 1.03", "59.9928, -40.5758, 17.406, 1.03", "61.0715, -40.3206, 18.1739, 0.37", "61.6458, -40.2393, 18.5311, 0.37", "62.5041, -40.1981, 18.9529, 0.29", "62.5601, -40.2053, 18.9729, 0.29", "62.8251, -40.3008, 19.0714, 0.66", "63.0344, -40.4396, 19.1599, 0.66", "63.4873, -40.8339, 19.3506, 0.88", "63.56, -40.9032, 19.3856, 0.88", "64.3535, -41.5916, 19.7864, 0.88", "64.9526, -42.0636, 20.0832, 0.88", "65.7684, -42.6135, 20.4747, 0.37", "66.1585, -42.8012, 20.6442, 0.37", "66.2948, -42.8376, 20.6952, 0.37", "67.0493, -42.8583, 20.8916, 0.37", "67.117, -42.8429, 20.9004, 0.37", "67.6143, -42.683, 20.9988, 0.37", "68.2319, -42.4951, 21.1415, 0.74", "68.3386, -42.4745, 21.173, 0.74", "68.8116, -42.5107, 21.6818, 0.74", "68.8436, -42.5171, 21.7438, 0.74", "69.4442, -42.6539, 23.1131, 0.74", "69.6165, -42.7003, 23.5094, 0.96", "69.8571, -42.7743, 24.0764, 0.96", "71.5896, -43.3564, 28.0158, 1.11", "72.7451, -43.7791, 30.6526, 0.81", "72.786, -43.7946, 30.7414, 0.81", "73.3098, -43.9916, 31.8408, 0.81", "73.348, -44.0052, 31.9098, 0.81", "73.8854, -44.1819, 32.6316, 0.81", "73.9498, -44.2065, 32.6722, 0.81", "75.4977, -44.815, 33.2718, 0.52", "75.5669, -44.8388, 33.3278, 0.52", "76.1531, -44.9429, 34.0773, 0.52", "76.5478, -44.9482, 34.7072, 0.52", "76.7354, -44.9233, 35.0482, 0.88", "76.9805, -44.8716, 35.5108, 1.4", "78.8112, -44.3412, 39.0542, 0.37", "79.2293, -44.2375, 39.8361, 0.37", "79.2707, -44.2222, 39.9328, 0.37", "79.5507, -44.1021, 40.7374, 0.37", "79.671, -44.0478, 41.1332, 0.37", "79.8847, -43.9372, 41.9202, 0.37", "80.4104, -44.1167, 41.9202, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "28.3534, -38.2121, 4.18164, 0.59", "29.4489, -38.86, 3.95811, 0.59", "30.3839, -39.4519, 3.78476, 0.59", "31.9713, -40.4854, 3.50761, 0.59", "32.4766, -40.8159, 3.42741, 0.96", "32.6009, -40.8971, 3.40584, 0.96", "33.4568, -41.4546, 3.25641, 0.96", "33.8883, -41.7474, 3.21281, 1.18", "33.9532, -41.7938, 3.20716, 1.18", "34.5413, -42.2087, 3.16548, 1.18", "35.3635, -42.768, 3.11591, 1.33", "36.1539, -43.3056, 3.06632, 1.25", "36.8599, -43.7798, 3.02305, 0.37", "38.1118, -44.6302, 2.9559, 0.37", "38.2346, -44.7161, 2.95055, 0.37", "38.5238, -44.9337, 2.94341, 0.81", "38.5864, -44.9833, 2.94743, 0.81", "39.3625, -45.603, 3.02587, 0.81", "39.985, -46.0885, 3.10311, 0.37", "40.0401, -46.1307, 3.1126, 0.37", "40.9454, -46.8079, 3.28316, 0.37", "41.5851, -47.292, 3.41643, 1.11", "42.085, -47.6625, 3.5137, 1.11", "42.3304, -47.8406, 3.56771, 1.11", "42.6234, -48.0464, 3.63326, 0.74", "43.0269, -48.3166, 3.71185, 0.52", "43.5028, -48.6301, 3.78766, 0.44", "44.2928, -49.1626, 3.88018, 0.44", "44.9651, -49.6318, 3.9603, 0.22", "45.0803, -49.7104, 3.97317, 0.22", "46.0256, -50.3031, 4.0876, 0.22", "46.6051, -50.6396, 4.15539, 0.81", "46.6665, -50.6725, 4.16211, 0.81", "47.3638, -51.0155, 4.22818, 1.18", "47.987, -51.3004, 4.2716, 1.4", "48.7929, -51.6316, 4.38371, 0.29", "49.9355, -52.0828, 4.60507, 0.29", "50.0085, -52.1112, 4.62154, 0.29", "50.4669, -52.2994, 4.7419, 0.59", "51.0367, -52.5504, 4.95299, 0.59", "52.0719, -53.0637, 5.42639, 0.22", "53.2276, -53.7109, 6.04285, 0.22", "53.2889, -53.7484, 6.07811, 0.22", "53.8238, -54.0974, 6.38715, 0.22", "54.6793, -54.6988, 6.94441, 0.88", "55.101, -55.0072, 7.24025, 1.18", "55.2548, -55.1139, 7.33535, 1.18", "56.1042, -55.6282, 7.86806, 1.18", "56.159, -55.6573, 7.90042, 1.18", "57.1388, -56.0855, 8.40833, 0.22", "57.1995, -56.1076, 8.43526, 0.22", "58.4181, -56.4784, 8.96075, 0.22", "58.4819, -56.4942, 8.98483, 0.22", "59.3915, -56.689, 9.29264, 0.81", "59.9495, -56.8161, 9.43608, 1.11", "60.2635, -56.8948, 9.48586, 1.55", "60.907, -57.0952, 9.51958, 1.55", "61.7963, -57.4516, 9.43102, 0.29", "61.8681, -57.4837, 9.41661, 0.29", "62.7191, -57.9209, 9.16813, 0.29", "63.535, -58.3988, 8.89614, 0.29", "64.7371, -59.1637, 8.45189, 0.29", "65.6837, -59.8417, 8.03329, 0.29", "66.0053, -60.0962, 7.8737, 1.11", "66.5778, -60.5653, 7.58845, 1.25", "66.8792, -60.8324, 7.43645, 1.4", "66.9347, -60.8843, 7.41157, 1.4", "67.7504, -61.6587, 7.1505, 1.4", "68.195, -62.0791, 7.03767, 1.4", "68.7285, -62.602, 6.91699, 0.96", "69.0957, -62.982, 6.85108, 0.66", "69.4714, -63.4043, 6.79044, 0.66", "69.5166, -63.4575, 6.78523, 0.66", "69.853, -63.8621, 6.76311, 0.29", "70.6766, -64.8697, 6.70869, 0.29", "71.5027, -65.8856, 6.65708, 0.29", "72.5447, -67.063, 6.70195, 0.29", "73.0998, -67.6293, 6.76299, 1.4", "73.4137, -67.92, 6.81063, 1.99", "74.0072, -68.4238, 6.92216, 2.58", "74.8193, -69.0469, 7.10306, 2.87", "76.5727, -70.249, 7.5418, 0.52", "77.5549, -70.8696, 7.81683, 0.52", "78.1769, -71.2509, 7.99836, 0.81", "78.7023, -71.564, 8.1496, 0.81", "78.7912, -71.6172, 8.17365, 0.81", "79.1766, -71.8492, 8.27791, 0.81", "79.2348, -71.8855, 8.29158, 0.81", "80.107, -72.438, 8.52662, 0.37", "81.2197, -73.1407, 8.83693, 0.37", "82.7182, -74.1185, 9.30948, 0.37", "83.1744, -74.4397, 9.4605, 1.11", "83.6439, -74.8281, 9.61942, 1.4", "83.8327, -75.0047, 9.68305, 1.4", "84.2053, -75.4171, 9.80271, 1.03", "84.792, -76.2019, 10.0067, 0.22", "85.2816, -76.977, 10.2078, 0.22", "85.9625, -78.1307, 10.4987, 0.22", "85.9969, -78.1896, 10.5147, 0.22", "86.4436, -78.9304, 10.726, 0.22", "86.4802, -78.9877, 10.7426, 0.22", "86.9561, -79.6332, 10.9433, 1.11", "87.4078, -80.1583, 11.1685, 1.84", "87.7703, -80.5121, 11.3298, 2.06", "87.8183, -80.5595, 11.3486, 2.06", "88.1183, -80.8527, 11.4454, 2.06", "88.8066, -81.5278, 11.608, 0.22", "88.8549, -81.5779, 11.6154, 0.22", "89.8292, -82.6468, 11.7491, 0.22", "90.0194, -82.8757, 11.7702, 0.81", "90.4185, -83.3726, 11.8038, 1.25", "90.8924, -83.991, 11.8379, 1.55", "91.2521, -84.4613, 11.8533, 1.25", "91.7016, -85.0339, 11.8778, 0.44", "92.4049, -85.8925, 11.9233, 0.44", "92.4505, -85.9455, 11.9264, 0.44", "92.7873, -86.3174, 11.9501, 0.22", "93.9347, -87.5068, 12.0321, 0.22", "94.4408, -87.9763, 12.0663, 0.59", "94.8534, -88.3249, 12.0922, 1.03", "94.9655, -88.4087, 12.0965, 1.03", "95.3739, -88.6987, 12.0992, 1.03", "95.4308, -88.7394, 12.0977, 1.03", "95.726, -88.9568, 12.0873, 1.03", "95.8608, -89.0599, 12.0775, 1.03", "96.5553, -89.6072, 12.0101, 0.29", "97.5825, -90.4417, 11.8939, 0.29", "98.397, -91.1116, 11.7925, 0.29", "98.4506, -91.1565, 11.7885, 0.29", "98.8455, -91.5174, 11.7829, 0.66", "99.2622, -91.9132, 11.7961, 1.03", "99.3114, -91.9626, 11.8026, 1.03", "99.6443, -92.3171, 11.8769, 1.03", "100.366, -93.1022, 12.0846, 0.22", "101.554, -94.446, 12.4657, 0.22", "101.598, -94.4992, 12.4796, 0.22", "101.937, -94.9611, 12.5806, 0.96", "102.285, -95.4686, 12.6747, 1.47", "102.558, -95.9233, 12.7509, 1.92", "102.827, -96.4194, 12.82, 1.92", "103.264, -97.3048, 12.9436, 0.22", "104.018, -98.9027, 13.1508, 0.22", "104.059, -98.9921, 13.1609, 0.22", "104.753, -100.556, 13.3685, 0.22", "104.946, -100.974, 13.4273, 1.11", "105.141, -101.36, 13.4823, 1.4", "105.179, -101.429, 13.4925, 1.4", "105.487, -101.966, 13.5562, 1.4", "105.974, -102.756, 13.6655, 0.22", "106.906, -104.133, 13.867, 0.22", "107.629, -105.133, 14.0525, 0.22", "107.672, -105.188, 14.0633, 0.22", "107.899, -105.472, 14.1214, 1.4", "108.608, -106.324, 14.3339, 1.84", "109.139, -106.933, 14.5106, 1.84", "110.191, -108.08, 14.9004, 0.29", "111.328, -109.283, 15.3376, 0.29", "111.374, -109.331, 15.3576, 0.29", "112.061, -110.052, 15.692, 0.29", "112.099, -110.094, 15.7124, 0.29", "112.922, -111.048, 16.2059, 0.29", "112.985, -111.124, 16.2468, 0.29", "114.146, -112.63, 17.0872, 0.22", "114.838, -113.56, 17.5795, 0.22", "114.927, -113.685, 17.6399, 0.22", "115.661, -114.745, 18.1348, 0.22", "115.697, -114.8, 18.1597, 0.22", "116.374, -115.833, 18.5918, 0.22", "116.483, -116.006, 18.6475, 0.52", "116.811, -116.476, 18.7957, 0.52", "116.849, -116.532, 18.8147, 0.52", "117.023, -116.777, 18.9202, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.2962, -53.4969, 5.41817, 1.11", "9.63606, -54.2298, 6.66405, 1.11", "9.03152, -55.1503, 7.93629, 0.52", "9.007, -55.1971, 7.99637, 0.52", "8.73179, -55.7887, 8.73306, 0.52", "8.12658, -57.2772, 10.4848, 0.52", "7.79116, -58.2721, 11.578, 0.52", "7.5424, -59.3958, 12.6443, 0.74", "7.41057, -60.4513, 13.4968, 0.81", "7.40683, -60.5131, 13.5474, 0.81", "7.40713, -61.0257, 13.9709, 0.88", "7.43163, -61.6377, 14.4837, 0.44", "7.40142, -62.0919, 14.9187, 0.29", "7.36553, -62.3425, 15.2155, 0.29", "7.15681, -63.5228, 16.6702, 0.44", "7.05644, -64.0993, 17.3824, 0.44", "6.84627, -65.2369, 18.8535, 0.74", "6.7736, -65.9108, 19.7671, 0.74", "6.7765, -66.6365, 20.7688, 0.74", "6.78497, -66.6969, 20.848, 0.74", "6.91328, -67.1627, 21.3522, 0.74", "6.93241, -67.217, 21.4078, 0.74", "7.36195, -68.3183, 22.4746, 0.44", "7.53599, -68.8927, 23.2084, 0.74", "7.53911, -68.9304, 23.2672, 0.74", "7.46632, -69.2486, 23.9251, 0.74", "7.44105, -69.3024, 24.0518, 0.74", "7.3733, -69.4524, 24.3832, 0.74", "6.9341, -70.3652, 26.3106, 0.74", "6.67057, -71.0419, 27.6279, 0.74", "6.39248, -71.8861, 29.1988, 1.11", "6.19552, -72.6497, 30.5647, 0.29", "6.08064, -73.2939, 31.6233, 0.29", "6.07205, -73.4239, 31.8006, 0.29", "6.13791, -74.0904, 32.3737, 0.29", "6.1494, -74.1507, 32.4072, 0.29", "6.33766, -75.0017, 32.6708, 0.74", "6.35061, -75.0692, 32.6843, 0.74", "6.48942, -75.808, 32.9578, 0.74", "6.71478, -76.2339, 33.3054, 0.96", "6.75777, -76.2631, 33.3524, 0.96", "7.02963, -76.4292, 33.7567, 0.96", "7.16334, -76.5027, 33.9749, 0.96", "8.08323, -77.0955, 35.5597, 0.37", "8.72689, -77.528, 36.7127, 0.37", "9.27102, -77.953, 37.7856, 0.37", "10.5929, -79.27, 40.7601, 0.37", "10.6253, -79.3115, 40.8451, 0.37", "10.8824, -79.9371, 41.9792, 0.37", "10.8861, -79.9812, 42.0458, 0.37", "10.7961, -80.7739, 43.1694, 0.96", "10.6705, -81.1934, 43.7514, 0.96", "10.6492, -81.2422, 43.8111, 0.96", "9.9932, -82.4872, 45.5755, 0.74", "9.95687, -82.5321, 45.6647, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "10.2962, -53.4969, 5.41817, 1.25", "11.0391, -55.7241, 5.82978, 1.25", "11.0604, -55.7902, 5.8385, 1.25", "11.6428, -57.6349, 6.04467, 1.03", "11.6658, -57.7007, 6.05055, 1.03", "12.4127, -59.6742, 6.19361, 1.03", "12.4671, -59.8137, 6.20266, 1.03", "13.234, -61.5664, 6.21999, 1.03", "13.268, -61.6388, 6.22062, 1.03", "14.5346, -64.124, 6.17816, 1.03", "15.3569, -65.6463, 6.11974, 1.11", "15.3966, -65.7157, 6.11591, 1.11", "17.0869, -68.6069, 5.92273, 1.11", "17.2344, -68.8559, 5.90332, 1.11", "18.2408, -70.5763, 5.75431, 0.96", "19.3606, -72.5209, 5.57083, 0.96", "19.7793, -73.2602, 5.5034, 1.25", "19.8135, -73.3211, 5.49862, 1.25", "20.6915, -74.93, 5.39582, 1.25", "20.7656, -75.0603, 5.39059, 1.25", "22.0483, -77.2724, 5.38384, 1.33", "22.0843, -77.3324, 5.38384, 1.33", "22.9854, -78.8162, 5.38384, 1.55", "23.0277, -78.8841, 5.38123, 1.55", "23.6691, -79.8825, 5.30237, 1.69", "23.7215, -79.966, 5.29305, 1.69", "24.2555, -80.8564, 5.15836, 1.69", "24.3309, -80.984, 5.13549, 1.69", "25.0444, -82.2322, 4.88093, 1.11", "25.0806, -82.3025, 4.86811, 1.11", "25.9619, -84.1337, 4.54581, 1.03", "26.0247, -84.267, 4.51776, 1.03", "26.9382, -86.2973, 3.89752, 1.03", "26.9644, -86.3587, 3.8766, 1.03", "27.9219, -88.7293, 3.02011, 1.03", "27.9534, -88.8104, 2.9897, 1.03", "28.6472, -90.6606, 2.25043, 1.03", "29.3598, -92.5536, 1.53286, 1.03", "30.1373, -94.6113, 0.749378, 1.03", "30.1634, -94.6725, 0.7279, 1.03", "30.8763, -96.159, 0.256368, 1.03", "30.9429, -96.2892, 0.223131, 1.03", "31.8841, -97.9905, -0.0796903, 1.03", "32.7943, -99.5071, -0.270568, 0.81", "34.0775, -101.493, -0.53975, 0.66", "34.6266, -102.315, -0.650543, 1.25", "35.1127, -102.994, -0.740955, 1.55", "35.4135, -103.402, -0.789593, 1.55", "35.5054, -103.52, -0.799474, 1.55", "36.0672, -104.218, -0.799474, 1.11", "36.115, -104.282, -0.799474, 1.11", "36.7132, -105.131, -0.799474, 0.88", "36.7581, -105.198, -0.799474, 0.88", "37.5133, -106.355, -0.799474, 0.81", "37.6011, -106.496, -0.799474, 0.81", "38.1059, -107.33, -0.799474, 0.81", "38.1805, -107.46, -0.799474, 0.81", "38.5685, -108.199, -0.799474, 1.18", "38.6329, -108.323, -0.806361, 1.18", "39.0383, -109.147, -0.886686, 1.18", "39.0678, -109.21, -0.894027, 1.18", "39.4778, -110.137, -1.00605, 1.18", "39.5621, -110.338, -1.03036, 1.18", "40.0739, -111.623, -1.17117, 1.18", "40.5999, -112.93, -1.30388, 1.03", "40.6562, -113.068, -1.32196, 1.03", "41.2521, -114.484, -1.52936, 0.74", "41.2921, -114.573, -1.54347, 0.74", "42.0511, -116.195, -1.80058, 0.74", "42.1215, -116.338, -1.82184, 0.74", "42.604, -117.266, -2.01112, 1.18", "43.002, -118.043, -2.18653, 1.62", "43.2078, -118.469, -2.30591, 1.84", "43.2398, -118.539, -2.327, 1.84", "43.527, -119.21, -2.52504, 1.69", "44.0127, -120.409, -2.84872, 0.66", "44.4372, -121.492, -3.10295, 0.66", "44.9394, -122.757, -3.39327, 0.52", "44.9769, -122.846, -3.4119, 0.52", "45.6023, -124.198, -3.65898, 0.52", "45.634, -124.26, -3.66808, 0.52", "45.9655, -124.794, -3.71023, 1.18", "46.4392, -125.422, -3.73334, 1.62", "46.971, -126.059, -3.72282, 1.92", "47.2726, -126.409, -3.71764, 2.14", "47.5634, -126.734, -3.71353, 2.21", "48.2129, -127.473, -3.706, 1.92", "48.8237, -128.17, -3.70096, 1.62", "49.6284, -129.113, -3.68745, 0.96", "50.1916, -129.796, -3.67491, 0.66", "50.9381, -130.73, -3.65221, 0.59", "51.0728, -130.904, -3.64706, 0.59", "51.7792, -131.86, -3.61313, 0.59", "52.1539, -132.397, -3.63963, 1.4", "52.5352, -132.963, -3.72422, 1.62", "52.6151, -133.088, -3.74736, 1.62", "52.9774, -133.661, -3.86458, 1.62", "53.0688, -133.801, -3.89251, 1.62", "53.987, -135.179, -4.16292, 0.29", "55.0276, -136.674, -4.44004, 0.29", "56.866, -139.241, -4.86064, 0.29", "56.9132, -139.305, -4.86948, 0.29", "57.2067, -139.692, -4.91027, 1.11", "57.5615, -140.144, -4.93237, 1.77", "58.0923, -140.786, -4.89703, 2.36", "58.4298, -141.198, -4.87707, 2.65", "58.6535, -141.485, -4.88109, 2.8", "58.695, -141.541, -4.88385, 2.8", "59.3153, -142.435, -4.95219, 1.03", "59.9832, -143.433, -5.03905, 0.74", "60.9178, -144.894, -5.17585, 0.74", "61.6151, -146.029, -5.28689, 0.52", "61.6685, -146.12, -5.29909, 0.52", "61.949, -146.628, -5.38277, 0.81", "61.9793, -146.69, -5.39548, 0.81", "62.2746, -147.372, -5.56616, 0.81", "62.3031, -147.444, -5.58638, 0.81", "62.7362, -148.516, -5.84701, 0.74", "63.044, -149.195, -6.00585, 0.74", "63.1537, -149.406, -6.05289, 0.29", "63.1891, -149.465, -6.06499, 0.29", "63.5651, -150.043, -6.16076, 0.29", "64.0914, -150.816, -6.24247, 0.29", "64.309, -151.115, -6.24589, 0.29", "64.5728, -151.455, -6.24805, 0.29", "64.6749, -151.586, -6.24805, 0.29", "65.117, -152.166, -6.24805, 0.29", "65.2639, -152.382, -6.24805, 1.03", "65.5855, -152.924, -6.24805, 1.4", "65.6251, -152.993, -6.24805, 1.4", "65.9741, -153.641, -6.24805, 1.4", "66.008, -153.702, -6.24658, 1.4", "66.4347, -154.449, -6.20796, 0.37", "66.4693, -154.509, -6.20398, 0.37", "67.262, -155.859, -6.10571, 0.37", "67.4248, -156.14, -6.07371, 0.37", "67.8368, -156.848, -5.97404, 1.33", "68.4664, -157.92, -5.81349, 2.58", "68.7557, -158.411, -5.73525, 2.95", "69.2115, -159.216, -5.61406, 2.95", "69.995, -160.679, -5.40439, 0.44", "70.0262, -160.741, -5.39658, 0.44", "70.6646, -162.106, -5.25137, 0.44", "70.7205, -162.234, -5.23957, 0.44", "71.3269, -163.763, -5.12565, 0.44", "71.4807, -164.181, -5.10457, 0.74", "71.797, -165.081, -5.0945, 0.74", "71.8652, -165.29, -5.09219, 0.74", "72.0272, -165.957, -5.08603, 0.59", "72.1903, -166.764, -5.08, 0.44", "72.2288, -166.992, -5.07881, 0.44", "72.4359, -168.33, -5.07533, 0.44", "72.4708, -168.561, -5.07533, 0.44", "72.7661, -170.881, -4.96052, 0.44", "72.7737, -170.95, -4.95472, 0.44", "72.8731, -171.955, -4.84799, 1.4", "72.9827, -173.122, -4.70969, 2.28", "73.0727, -173.964, -4.60016, 2.65", "73.2857, -175.574, -4.38521, 0.96", "73.5589, -177.302, -4.13903, 0.96", "73.5925, -177.518, -4.11024, 0.96", "73.786, -178.821, -3.94564, 1.18", "73.9239, -179.696, -3.85432, 1.62", "74.0524, -180.47, -3.80234, 1.62", "74.0663, -180.538, -3.80234, 1.62", "74.2667, -181.477, -3.80234, 0.52", "74.296, -181.614, -3.80234, 0.52", "74.511, -182.659, -3.71486, 0.52", "74.5388, -182.794, -3.69412, 0.52", "74.7585, -183.822, -3.48028, 0.52", "75.0571, -185.01, -3.18809, 0.52", "75.0762, -185.075, -3.16968, 0.52", "75.4963, -186.411, -2.75558, 1.03", "75.5687, -186.62, -2.68981, 1.03", "75.7508, -187.153, -2.4966, 1.03", "75.9414, -187.701, -2.27145, 1.03", "76.117, -188.22, -2.06705, 0.29", "76.1402, -188.292, -2.04296, 0.29", "76.5155, -189.551, -1.72936, 0.29", "76.829, -190.674, -1.43665, 1.18", "76.8483, -190.747, -1.41137, 1.18", "77.0167, -191.498, -1.1216, 1.62", "77.0906, -191.851, -0.975403, 1.84", "77.1676, -192.186, -0.838005, 1.84", "77.2015, -192.321, -0.782514, 1.84", "77.7088, -193.797, -0.295819, 0.74", "77.9553, -194.381, -0.112953, 0.29", "77.9997, -194.467, -0.0887542, 0.29", "78.3979, -195.135, 0.0668728, 0.29", "78.4749, -195.25, 0.0868248, 0.29", "79.0626, -196.102, 0.242159, 0.29", "79.4026, -196.551, 0.316578, 1.11", "79.8549, -197.19, 0.445389, 1.47", "80.1405, -197.629, 0.542799, 1.77", "80.3538, -198.028, 0.63489, 1.77", "80.874, -199.289, 0.991955, 0.66", "81.0785, -199.956, 1.20976, 0.44", "81.3282, -200.911, 1.5129, 0.44", "81.3433, -200.976, 1.53306, 0.44", "81.5481, -201.875, 1.84999, 0.44", "81.8458, -203.243, 2.35536, 0.29", "81.8647, -203.334, 2.38803, 0.29", "82.2135, -205.084, 3.04528, 0.29", "82.2429, -205.219, 3.10409, 0.29", "82.5136, -206.476, 3.65651, 1.18", "82.6019, -206.876, 3.83548, 1.25", "82.7508, -207.604, 4.13369, 1.25", "82.825, -208.079, 4.32126, 1.03", "82.9161, -209.08, 4.70635, 0.59", "83.0128, -210.191, 5.06042, 0.59", "83.0183, -210.259, 5.07522, 0.59", "83.0771, -210.801, 5.18304, 0.88", "83.18, -211.515, 5.29563, 1.18", "83.2024, -211.652, 5.30876, 1.18", "83.2561, -211.907, 5.30876, 1.18", "83.362, -212.342, 5.30876, 0.74", "83.4741, -212.793, 5.30876, 0.74", "83.6416, -213.468, 5.30575, 0.37", "83.6674, -213.571, 5.30497, 0.37", "84.094, -215.356, 5.28751, 0.37", "84.1945, -215.78, 5.28262, 0.74", "84.2141, -215.858, 5.28163, 0.74", "84.3893, -216.534, 5.27228, 1.18", "84.4902, -216.89, 5.26715, 1.18", "84.5326, -217.024, 5.2652, 1.18", "84.7621, -217.578, 5.25665, 1.18", "85.1513, -218.364, 5.24668, 0.37", "85.2293, -218.493, 5.24572, 0.37", "85.538, -218.916, 5.24572, 0.37", "85.5811, -218.971, 5.24572, 0.37", "85.9353, -219.443, 5.24572, 0.37", "85.9835, -219.507, 5.24572, 0.37", "86.5021, -220.29, 5.24572, 0.37", "86.5322, -220.353, 5.24572, 0.37", "86.6319, -220.634, 5.24572, 0.81", "86.7852, -221.204, 5.24572, 0.81", "86.827, -221.42, 5.24572, 0.81", "86.9273, -221.996, 5.24572, 0.96", "87.0411, -222.798, 5.24572, 0.96", "87.1145, -223.326, 5.24572, 0.29", "87.1465, -223.555, 5.24572, 0.29", "87.2981, -224.585, 5.18434, 0.29", "87.3961, -225.249, 5.11765, 1.03", "87.5109, -225.893, 5.02549, 1.4", "87.6365, -226.523, 4.92765, 1.69", "87.7406, -227.02, 4.83352, 1.84", "88.0036, -228.196, 4.58413, 1.25", "88.1153, -228.687, 4.47323, 1.25", "88.3775, -229.827, 4.21226, 0.52", "88.8569, -231.891, 3.76784, 0.52", "89.0041, -232.554, 3.63993, 0.81", "89.0327, -232.699, 3.61692, 0.81", "89.1891, -233.634, 3.51608, 0.81", "89.2192, -233.85, 3.48858, 0.81", "89.321, -235.019, 3.28645, 0.81", "89.3367, -235.523, 3.1834, 1.69", "89.3457, -236.096, 3.06736, 1.99", "89.3463, -236.243, 3.03522, 1.99", "89.3423, -237.124, 2.83147, 1.99", "89.3298, -238.382, 2.5352, 0.29", "89.3082, -239.956, 2.16551, 0.29", "89.308, -240.024, 2.15059, 0.29", "89.3098, -240.53, 2.05643, 0.66", "89.3169, -241.262, 1.92943, 0.88", "89.3195, -241.332, 1.92041, 0.88", "89.3676, -241.99, 1.83689, 0.88", "89.3974, -242.203, 1.7921, 0.88", "89.4908, -242.759, 1.65553, 0.88", "89.6681, -243.661, 1.41735, 0.37", "89.9145, -244.803, 1.11112, 0.37", "89.9295, -244.87, 1.09401, 0.37", "90.2963, -246.332, 0.741105, 0.37", "90.325, -246.439, 0.71765, 0.37", "90.5881, -247.347, 0.551882, 0.37", "90.7417, -247.852, 0.489899, 0.66", "90.8748, -248.275, 0.44619, 0.66", "91.1257, -249.052, 0.394895, 0.66", "91.1478, -249.119, 0.394895, 0.66", "91.3824, -249.774, 0.394895, 1.4", "91.5617, -250.203, 0.394895, 1.99", "91.5896, -250.267, 0.399478, 1.99", "91.7558, -250.617, 0.44337, 1.99", "91.8015, -250.712, 0.458467, 1.99", "91.9817, -251.092, 0.533262, 1.99", "92.0413, -251.215, 0.560815, 1.99", "92.4836, -252.294, 0.81357, 0.52", "92.9406, -253.564, 1.12204, 0.52", "92.9589, -253.629, 1.139, 0.52", "93.2353, -254.863, 1.46887, 0.52", "93.2607, -255.021, 1.51098, 0.52", "93.3612, -255.883, 1.72565, 0.52", "93.3645, -255.942, 1.73852, 0.52", "93.36, -257.144, 2.00657, 0.52", "93.3611, -257.213, 2.01999, 0.52", "93.3896, -257.717, 2.09323, 0.88", "93.4649, -258.308, 2.16494, 1.03", "93.5396, -258.659, 2.19849, 1.03", "93.5775, -258.82, 2.2081, 1.03", "93.6618, -259.135, 2.21766, 1.03", "93.8765, -259.823, 2.19816, 1.03", "94.1082, -260.451, 2.15728, 0.52", "94.1336, -260.516, 2.15158, 0.52", "94.7725, -262.04, 1.99887, 0.52", "94.819, -262.141, 1.97997, 0.52", "95.4605, -263.448, 1.65078, 0.52", "95.8656, -264.214, 1.41146, 0.96", "95.9639, -264.387, 1.3442, 0.96", "96.3585, -265.051, 1.04787, 1.4", "97.0861, -266.23, 0.474491, 1.69", "97.3051, -266.602, 0.302156, 1.69", "97.3369, -266.659, 0.27721, 1.69", "97.7911, -267.524, -0.090809, 0.44", "97.8211, -267.583, -0.114072, 0.44", "98.4718, -268.913, -0.547655, 0.44", "98.5613, -269.109, -0.591341, 0.44", "99.184, -270.499, -0.869282, 0.44", "99.2876, -270.741, -0.90744, 1.33", "99.3181, -270.815, -0.915739, 1.33", "99.7144, -271.808, -1.04826, 1.92", "99.9179, -272.376, -1.13029, 1.92", "100.033, -272.746, -1.17715, 1.92", "100.329, -273.859, -1.29362, 0.59", "100.368, -274.015, -1.31026, 0.59", "100.504, -274.667, -1.38036, 0.44", "100.688, -275.738, -1.49871, 0.44", "100.879, -276.974, -1.62988, 0.37", "100.899, -277.111, -1.65107, 0.37", "100.975, -277.691, -1.76365, 1.03", "101.048, -278.185, -1.86694, 1.18", "101.088, -278.407, -1.91493, 1.18", "101.188, -278.75, -2.00819, 1.18", "101.629, -279.875, -2.35736, 0.29", "101.664, -279.944, -2.3751, 0.29", "102.081, -280.669, -2.53484, 0.29", "102.169, -280.807, -2.55805, 0.29", "102.796, -281.764, -2.66917, 0.29", "102.836, -281.821, -2.67218, 0.29", "103.726, -283.067, -2.62596, 0.29", "103.771, -283.133, -2.62356, 0.29", "104.208, -283.801, -2.59899, 0.29", "104.29, -283.943, -2.57458, 1.18", "104.378, -284.137, -2.52113, 1.18", "104.661, -284.833, -2.29078, 1.84", "104.803, -285.225, -2.15074, 1.84", "104.84, -285.326, -2.11596, 1.84", "105.486, -286.953, -1.58013, 0.29", "105.876, -287.865, -1.29877, 0.29", "105.906, -287.937, -1.28058, 0.29", "106.331, -288.947, -1.09678, 0.29", "106.528, -289.428, -1.0344, 1.62", "106.803, -290.155, -0.983234, 2.28", "106.87, -290.348, -0.985644, 2.28", "107.195, -291.429, -0.968783, 0.29", "107.531, -292.757, -0.913771, 0.29", "107.612, -293.255, -0.878922, 0.74", "107.648, -293.642, -0.843728, 0.74", "107.67, -294.247, -0.781495, 0.74", "107.677, -294.921, -0.706771, 0.29", "107.677, -295.013, -0.695736, 0.29", "107.647, -296.475, -0.547613, 0.29", "107.647, -296.545, -0.542553, 0.29", "107.692, -298.075, -0.472191, 0.29", "107.711, -298.444, -0.462918, 0.96", "107.754, -299.027, -0.461274, 1.18", "107.791, -299.465, -0.461274, 0.52", "107.842, -299.983, -0.461274, 0.22", "108.08, -302.18, -0.461274, 0.22", "108.089, -302.249, -0.461274, 0.22", "108.165, -302.753, -0.440061, 0.88", "108.235, -303.211, -0.403758, 1.33", "108.317, -303.713, -0.356088, 1.77", "108.328, -303.781, -0.347691, 1.77", "108.419, -304.297, -0.253715, 1.77", "108.638, -305.588, 6.94145E-4, 0.29", "108.867, -306.927, 0.304138, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-54.4448, -42.12, -5.68495, 0.96", "-54.5255, -42.7321, -6.20926, 0.96", "-54.5558, -43.6498, -7.00738, 0.74", "-54.5683, -44.5629, -7.75398, 0.74", "-54.5954, -45.6422, -8.62284, 0.74", "-54.5986, -45.6975, -8.66562, 0.74", "-54.7627, -47.4023, -9.97926, 0.74", "-54.8287, -48.0033, -10.4342, 0.52", "-54.914, -48.6385, -10.8883, 0.52", "-55.088, -49.4739, -11.4883, 0.52", "-55.2539, -50.006, -11.8665, 1.4", "-55.6768, -51.0862, -12.6185, 1.69", "-56.0105, -51.764, -13.0726, 1.69", "-56.041, -51.8154, -13.1091, 1.69", "-56.6756, -52.7416, -13.804, 1.69", "-57.4882, -53.8125, -14.6017, 0.66", "-57.8742, -54.2798, -14.9447, 0.52", "-57.9631, -54.3772, -15.0162, 0.52", "-58.6, -55.025, -15.4915, 0.52", "-59.3275, -55.7685, -16.0159, 0.52", "-59.4728, -55.9109, -16.1114, 1.03", "-59.934, -56.3796, -16.442, 1.55", "-60.7822, -57.2717, -17.1415, 2.28", "-61.2704, -57.8046, -17.5579, 2.28", "-62.0853, -58.6892, -18.209, 2.28", "-62.1885, -58.796, -18.2822, 2.28", "-63.116, -59.7095, -18.8846, 1.47", "-63.1636, -59.7535, -18.9109, 1.47", "-64.0268, -60.5343, -19.3657, 0.74", "-65.0113, -61.4799, -19.9618, 0.74", "-65.0571, -61.5246, -19.9901, 0.74", "-65.8054, -62.304, -20.4748, 0.74", "-66.3834, -62.9432, -20.8915, 0.74", "-67.2002, -63.9366, -21.5878, 0.66", "-67.7765, -64.7195, -22.2177, 0.52", "-67.8454, -64.8236, -22.3008, 0.52", "-68.2769, -65.4792, -22.8156, 0.52", "-68.7513, -66.208, -23.3433, 1.55", "-69.0567, -66.6702, -23.6304, 1.92", "-69.8664, -67.7778, -24.2739, 1.92", "-70.5099, -68.6106, -24.7468, 1.92", "-71.1531, -69.4219, -25.2037, 0.52", "-71.8096, -70.2185, -25.6337, 0.52", "-72.7165, -71.2667, -26.1449, 0.52", "-73.4294, -72.0583, -26.5293, 0.52", "-73.9066, -72.5598, -26.7447, 0.52", "-74.1839, -72.8186, -26.8693, 0.66", "-74.8252, -73.3631, -27.1228, 0.66", "-74.9322, -73.4518, -27.1792, 0.66", "-75.5853, -73.9939, -27.5699, 0.66", "-76.3867, -74.6891, -28.0512, 2.14", "-77.1299, -75.3821, -28.5672, 2.73", "-77.7113, -75.9683, -29.0515, 2.73", "-79.1692, -77.4918, -30.3316, 0.59", "-79.2138, -77.5396, -30.3777, 0.59", "-79.6856, -78.064, -30.9125, 0.59", "-80.8917, -79.4573, -32.4841, 0.59", "-82.1361, -80.9128, -34.2546, 0.44", "-82.6416, -81.4965, -35.0245, 0.44", "-83.9052, -82.8828, -36.927, 1.47", "-84.3065, -83.3109, -37.5452, 2.36", "-85.1586, -84.1574, -38.8058, 2.36", "-85.8843, -84.8018, -39.7931, 0.81", "-85.9237, -84.8348, -39.8406, 0.81", "-86.4985, -85.3012, -40.4303, 0.52", "-86.5547, -85.3452, -40.4666, 0.52", "-87.9291, -86.3759, -41.3577, 0.52", "-88.5718, -86.8622, -41.7237, 0.96", "-88.6279, -86.9103, -41.7543, 0.96", "-88.9772, -87.2289, -41.9617, 0.96", "-89.5286, -87.7648, -42.3047, 0.96", "-90.6107, -88.8621, -42.9774, 0.29", "-90.6541, -88.9101, -43.004, 0.29", "-92.2109, -90.7258, -43.8058, 0.29", "-92.6307, -91.234, -44.0195, 1.62", "-93.132, -91.8625, -44.2429, 1.99", "-93.174, -91.9163, -44.2586, 1.99", "-93.7714, -92.6845, -44.4031, 1.99", "-94.1671, -93.1952, -44.4981, 1.55", "-94.8863, -94.1289, -44.7235, 0.29", "-95.9388, -95.5122, -45.0711, 0.29", "-95.9792, -95.5674, -45.0859, 0.29", "-97.1186, -97.1795, -45.6176, 0.29", "-97.1619, -97.2424, -45.6414, 0.29", "-97.7124, -98.0659, -45.9751, 0.88", "-98.3573, -99.1268, -46.3941, 0.88", "-98.6562, -99.6734, -46.622, 0.88", "-99.1496, -100.702, -46.9541, 0.29", "-99.6057, -101.818, -47.5985, 0.29", "-99.6315, -101.881, -47.6409, 0.29", "-99.8549, -102.476, -48.0567, 1.77", "-100.076, -103.1, -48.5382, 2.5", "-100.471, -104.124, -49.3652, 2.5", "-101.843, -107.585, -52.2156, 0.88", "-102.086, -108.17, -52.7474, 0.52", "-102.411, -108.879, -53.4098, 0.37", "-102.439, -108.932, -53.4621, 0.37", "-103.002, -109.945, -54.534, 0.37", "-103.029, -109.989, -54.5818, 0.37", "-103.533, -110.743, -55.0906, 0.96", "-103.816, -111.152, -55.3795, 1.47", "-104.066, -111.499, -55.6231, 1.47", "-104.901, -112.702, -56.4063, 0.29", "-104.941, -112.763, -56.4401, 0.29", "-106.009, -114.404, -57.2483, 0.29", "-106.043, -114.458, -57.2777, 0.29", "-106.225, -114.73, -57.4442, 0.59", "-106.263, -114.786, -57.4868, 0.59", "-106.603, -115.264, -57.8525, 0.59", "-106.639, -115.312, -57.905, 0.59", "-107.376, -116.276, -59.1748, 0.44", "-107.862, -116.93, -59.8995, 0.37", "-108.664, -118.008, -61.0031, 2.06", "-109.088, -118.584, -61.5474, 2.21", "-110.378, -120.355, -63.1269, 0.29", "-110.411, -120.403, -63.1648, 0.29", "-111.729, -122.423, -64.437, 0.29", "-111.765, -122.485, -64.473, 0.29", "-112.453, -123.754, -65.101, 1.77", "-112.479, -123.814, -65.1254, 1.77", "-112.728, -124.705, -65.3504, 2.21", "-112.875, -125.509, -65.5935, 2.21", "-112.978, -126.822, -66.029, 0.22", "-112.98, -126.889, -66.0506, 0.22", "-112.961, -128.673, -66.7399, 0.22", "-112.888, -130.678, -67.6433, 0.22", "-112.803, -132.164, -68.4101, 1.33", "-112.743, -133.009, -68.865, 1.77", "-112.734, -133.136, -68.9452, 1.77", "-112.573, -135.26, -70.4065, 0.29", "-112.385, -137.193, -71.7415, 0.22", "-112.313, -137.862, -72.1871, 1.03", "-112.198, -138.809, -72.7513, 1.03", "-111.879, -141.346, -74.1895, 0.22", "-111.666, -142.953, -75.0039, 0.22", "-111.329, -145.232, -75.9716, 0.22", "-111.158, -146.253, -76.4071, 1.4", "-111.036, -146.922, -76.684, 1.92", "-111.024, -146.986, -76.7088, 1.92", "-110.891, -147.901, -76.9729, 1.92", "-110.885, -147.966, -76.9981, 1.92", "-110.82, -149.907, -77.8655, 0.22", "-110.819, -149.98, -77.8971, 0.22", "-110.82, -151.423, -78.6141, 0.22", "-110.841, -153.137, -79.4748, 0.22", "-110.869, -154.14, -79.9834, 1.47", "-110.889, -154.726, -80.2652, 1.47", "-110.924, -155.402, -80.5625, 1.47", "-111.025, -156.966, -81.2576, 0.22", "-111.132, -158.311, -81.984, 0.22", "-111.139, -158.38, -82.0244, 0.22", "-111.192, -158.715, -82.1918, 0.59", "-111.224, -158.861, -82.2623, 0.59", "-111.48, -159.911, -82.6868, 0.59", "-111.907, -161.504, -83.1869, 0.15", "-111.925, -161.568, -83.2104, 0.15", "-112.424, -163.413, -83.8957, 0.15", "-112.451, -163.509, -83.9307, 0.15", "-112.771, -164.642, -84.3213, 0.15", "-112.789, -164.706, -84.3442, 0.15", "-113.087, -165.662, -84.6551, 1.25", "-113.31, -166.44, -84.9291, 1.25", "-113.456, -167.001, -85.1537, 1.25", "-113.473, -167.064, -85.181, 1.25", "-113.729, -167.989, -85.5807, 0.22", "-113.748, -168.061, -85.6092, 0.22", "-114.192, -169.989, -86.2558, 0.22", "-114.217, -170.118, -86.305, 0.22", "-114.339, -170.957, -86.6163, 1.62", "-114.522, -172.019, -86.9275, 2.06", "-114.548, -172.168, -86.9942, 2.06", "-114.648, -172.668, -87.2703, 2.06", "-114.947, -173.903, -88.0573, 0.29", "-115.218, -174.861, -88.6718, 0.29", "-115.924, -177.104, -90.1155, 0.29", "-116.934, -180.021, -92.0781, 1.69", "-117.199, -180.702, -92.5675, 1.69", "-117.372, -181.111, -92.8498, 2.14", "-117.736, -181.912, -93.3702, 2.14", "-117.79, -182.035, -93.4378, 2.14", "-117.868, -182.239, -93.5108, 2.14", "-118.501, -184.037, -93.8708, 0.29", "-119.261, -186.458, -94.4247, 0.29", "-119.288, -186.551, -94.447, 0.29", "-119.878, -188.771, -94.9854, 0.29", "-120.43, -190.921, -95.4835, 0.29", "-120.465, -191.063, -95.5162, 0.29", "-120.81, -192.496, -95.804, 1.47", "-120.956, -193.112, -95.9542, 1.92", "-121.058, -193.53, -96.0675, 2.36", "-121.214, -194.107, -96.2664, 2.36", "-121.621, -195.601, -96.8346, 0.29", "-122.098, -197.331, -97.403, 0.29" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-54.4448, -42.12, -5.68495, 0.52", "-55.3026, -42.4679, -5.72415, 0.52", "-56.5282, -42.9687, -5.78226, 0.52", "-56.6032, -42.9963, -5.78546, 0.52", "-57.1504, -43.1952, -5.8179, 0.52", "-57.2823, -43.2414, -5.82624, 0.52", "-57.7612, -43.3857, -5.85386, 0.74", "-57.8288, -43.4034, -5.85788, 0.74", "-58.7647, -43.625, -5.91166, 0.74", "-59.4627, -43.7836, -5.94953, 0.74", "-60.3463, -43.9837, -5.99566, 0.44", "-61.7033, -44.3199, -6.06937, 0.44", "-61.7804, -44.341, -6.07359, 0.44", "-61.9758, -44.4027, -6.084, 0.44", "-62.3494, -44.5448, -6.10252, 0.81", "-62.6915, -44.7022, -6.11477, 1.11", "-63.2556, -45.0391, -6.13868, 1.11", "-63.673, -45.36, -6.16006, 1.11", "-63.8071, -45.4643, -6.16637, 1.25", "-64.1008, -45.6789, -6.18036, 1.25", "-64.4465, -45.9204, -6.19301, 1.25", "-64.516, -45.96, -6.19485, 1.25", "-65.0425, -46.1982, -6.18131, 0.96", "-65.5937, -46.3962, -6.14791, 0.74", "-66.1757, -46.5263, -6.10009, 0.52", "-66.281, -46.5366, -6.08979, 0.52", "-67.3082, -46.5075, -5.98342, 0.52", "-67.9182, -46.4191, -5.91285, 0.88", "-68.0631, -46.3842, -5.89578, 0.88", "-68.9438, -46.1304, -5.79822, 0.88", "-69.2899, -46.0227, -5.76451, 0.88", "-70.0878, -45.7692, -5.70475, 0.88", "-70.6928, -45.5765, -5.67268, 0.52", "-71.6806, -45.2861, -5.64665, 0.52", "-72.1839, -45.1556, -5.65268, 1.11", "-72.8595, -44.9922, -5.6827, 1.4", "-73.4484, -44.8567, -5.73327, 1.4", "-73.9533, -44.7464, -5.79086, 1.69", "-74.5458, -44.6173, -5.84468, 1.69", "-75.6258, -44.3661, -5.92264, 0.44", "-76.7903, -44.1011, -5.98172, 0.44", "-77.9169, -43.8476, -6.01815, 0.44", "-79.0019, -43.6033, -6.03207, 0.66", "-80.0619, -43.3671, -6.01884, 1.11", "-80.14, -43.3506, -6.0149, 1.11", "-80.9953, -43.1813, -5.89513, 1.11", "-81.1555, -43.1556, -5.8625, 1.4", "-81.2316, -43.1433, -5.84106, 1.4", "-81.6501, -43.0696, -5.72706, 1.4", "-81.718, -43.0575, -5.71526, 1.4", "-82.2902, -42.9447, -5.61519, 1.4", "-82.4343, -42.9108, -5.59079, 1.4", "-82.8641, -42.835, -5.53522, 0.96", "-83.2852, -42.7528, -5.5003, 0.96", "-83.9414, -42.5988, -5.43887, 0.44", "-84.0191, -42.581, -5.43205, 0.44", "-84.4986, -42.4866, -5.37556, 0.44", "-85.204, -42.3669, -5.26745, 0.37", "-86.2983, -42.2134, -5.07546, 0.37", "-87.104, -42.1278, -4.92637, 0.37", "-87.8252, -42.0759, -4.74993, 0.66", "-88.6362, -42.0379, -4.52436, 1.25", "-89.2016, -42.0393, -4.35558, 1.62", "-89.8252, -42.0707, -4.14191, 1.62", "-90.4421, -42.1516, -3.92149, 1.62", "-91.5261, -42.3354, -3.54326, 0.96", "-92.0014, -42.424, -3.38084, 0.66", "-92.8407, -42.5838, -3.12955, 0.66", "-93.5055, -42.7231, -2.93602, 0.96", "-94.2103, -42.8769, -2.75675, 0.96", "-94.2776, -42.8911, -2.74356, 0.96", "-95.0311, -43.0353, -2.65813, 0.74", "-95.8322, -43.1337, -2.58985, 0.59", "-95.902, -43.1361, -2.5843, 0.59", "-96.7132, -43.124, -2.53225, 0.59", "-97.2246, -43.0996, -2.49167, 0.37", "-97.3738, -43.0915, -2.47885, 0.37", "-98.6658, -43.0016, -2.35701, 0.37", "-99.5657, -42.9281, -2.26952, 0.66", "-99.6452, -42.9223, -2.26196, 0.66", "-100.452, -42.8929, -2.18978, 0.66", "-101.143, -42.9485, -2.14047, 0.66", "-101.222, -42.9628, -2.13611, 0.66", "-101.678, -43.1458, -2.12258, 0.96", "-102.007, -43.3207, -2.12258, 1.33", "-102.68, -43.7422, -2.13415, 1.33", "-103.686, -44.4621, -2.16477, 1.33", "-103.766, -44.5214, -2.16776, 1.33", "-104.711, -45.2372, -2.22899, 1.33", "-104.829, -45.3284, -2.2389, 1.33", "-105.702, -45.9437, -2.32043, 0.44", "-105.769, -45.9875, -2.32731, 0.44", "-107.186, -46.8324, -2.4307, 0.44", "-107.939, -47.2303, -2.4586, 0.44", "-108.003, -47.2587, -2.45892, 0.44", "-109.052, -47.6785, -2.40092, 0.44", "-109.118, -47.7006, -2.39242, 0.44", "-109.748, -47.9033, -2.27396, 0.66", "-110.503, -48.1027, -2.05651, 0.66", "-110.576, -48.1231, -2.03139, 0.66", "-111.14, -48.3026, -1.84167, 0.29", "-111.204, -48.3253, -1.82206, 0.29", "-111.94, -48.5871, -1.65691, 0.29", "-112.146, -48.6593, -1.63189, 0.29", "-112.543, -48.7996, -1.59531, 0.29", "-112.762, -48.8688, -1.58352, 0.96", "-113.257, -49.0094, -1.57585, 1.25", "-113.685, -49.1102, -1.56901, 1.25", "-114.055, -49.1784, -1.56368, 1.25", "-114.591, -49.2756, -1.55648, 0.88", "-115.324, -49.4122, -1.54774, 0.37", "-115.402, -49.4277, -1.5469, 0.37", "-116.5, -49.6572, -1.53712, 0.37", "-117.818, -49.9396, -1.52799, 0.37", "-117.887, -49.9541, -1.52771, 0.37", "-118.729, -50.1274, -1.53077, 0.37", "-118.808, -50.1435, -1.53133, 0.37", "-119.555, -50.2929, -1.53901, 0.37", "-119.634, -50.3083, -1.54018, 0.74", "-120.219, -50.4183, -1.54982, 1.4", "-120.743, -50.4793, -1.55683, 1.69", "-120.974, -50.4956, -1.55951, 1.84", "-121.343, -50.5141, -1.56285, 1.99", "-121.874, -50.5343, -1.56671, 1.99", "-123.153, -50.5819, -1.57321, 0.66", "-124.668, -50.604, -1.54234, 0.37", "-124.958, -50.6012, -1.5309, 0.37", "-126.137, -50.543, -1.46741, 0.37", "-126.207, -50.5367, -1.46294, 0.37", "-127.227, -50.3971, -1.38875, 0.37", "-128.183, -50.2149, -1.33384, 0.37", "-128.842, -50.0606, -1.33072, 0.88", "-129.92, -49.752, -1.37443, 1.55", "-130.852, -49.4512, -1.4738, 1.84", "-131.507, -49.2406, -1.57676, 1.84", "-132.388, -48.9642, -1.73925, 1.25", "-133.542, -48.6312, -1.97592, 0.37", "-134.696, -48.3198, -2.179, 0.29", "-135.354, -48.1566, -2.27043, 0.15", "-135.965, -48.0148, -2.32312, 0.15", "-136.857, -47.8092, -2.32936, 0.15", "-137.534, -47.6324, -2.22336, 0.66", "-138.175, -47.4193, -2.0334, 1.11", "-138.668, -47.2159, -1.8497, 1.11", "-138.727, -47.1883, -1.82327, 1.11", "-139.363, -46.8546, -1.51944, 1.11", "-140.281, -46.3802, -1.09576, 0.29", "-140.932, -46.0761, -0.759495, 0.29", "-140.989, -46.0512, -0.728357, 0.29", "-142.368, -45.5305, 0.0268279, 0.29", "-142.419, -45.514, 0.0539565, 0.29", "-143.138, -45.3369, 0.407516, 0.29", "-144.141, -45.1543, 0.823199, 0.29", "-144.28, -45.1334, 0.876084, 0.29", "-145.208, -45.0326, 1.11065, 0.96", "-145.586, -45.005, 1.14621, 1.69", "-146.399, -44.9558, 1.14156, 2.21", "-146.916, -44.9292, 1.09398, 2.21", "-146.985, -44.9266, 1.08319, 2.21", "-148.355, -44.8703, 0.790535, 0.29", "-149.375, -44.8095, 0.533952, 0.29", "-150.115, -44.7503, 0.332672, 1.03", "-150.542, -44.7065, 0.212067, 1.03", "-151.172, -44.6257, 0.0346413, 1.03", "-152.244, -44.4635, -0.276404, 0.29", "-153.511, -44.2204, -0.632203, 0.29", "-153.705, -44.1827, -0.688071, 0.29", "-154.064, -44.109, -0.780512, 0.66", "-154.284, -44.0609, -0.833229, 0.66", "-154.959, -43.9005, -1.004, 0.44", "-155.89, -43.6684, -1.22353, 0.44", "-155.965, -43.6483, -1.24446, 0.44", "-156.748, -43.4386, -1.46247, 0.44", "-156.937, -43.3878, -1.52236, 0.88", "-157.983, -43.1242, -1.8436, 1.33", "-158.226, -43.0623, -1.91529, 1.33", "-158.604, -42.9781, -2.01576, 1.33", "-159.384, -42.8245, -2.19237, 0.88", "-160.187, -42.73, -2.32869, 0.29", "-161.438, -42.6641, -2.46087, 0.29", "-161.603, -42.673, -2.46371, 0.29", "-162.401, -42.7712, -2.47795, 0.29", "-162.506, -42.7895, -2.47904, 0.29", "-163.421, -43.0032, -2.46913, 0.29", "-163.498, -43.026, -2.46629, 0.29", "-164.343, -43.3326, -2.47648, 0.29", "-164.988, -43.538, -2.60964, 1.55", "-165.357, -43.6091, -2.73428, 1.92", "-165.422, -43.6129, -2.75787, 1.92", "-165.754, -43.6107, -2.9074, 1.92", "-165.826, -43.6086, -2.94216, 1.92", "-167.309, -43.5241, -3.81128, 0.29", "-168.434, -43.4614, -4.53238, 0.29", "-169.561, -43.3939, -5.27076, 0.29", "-170.734, -43.3133, -6.09021, 0.29", "-170.923, -43.2982, -6.22667, 0.74", "-172.177, -43.195, -7.10259, 0.74", "-172.435, -43.1731, -7.27919, 0.37", "-173.351, -43.1258, -7.91084, 0.37", "-174.274, -43.0901, -8.49389, 0.96", "-174.8, -43.0581, -8.77258, 0.96", "-175.742, -42.9984, -9.20818, 0.29", "-175.807, -42.994, -9.23268, 0.29", "-176.391, -42.9481, -9.46247, 0.29", "-177.028, -42.8771, -9.70869, 1.18", "-177.977, -42.7507, -10.0204, 1.62", "-178.768, -42.6313, -10.2552, 1.62", "-178.845, -42.6179, -10.2744, 1.62", "-179.442, -42.4974, -10.3862, 0.29", "-180.438, -42.2639, -10.4932, 0.29", "-181.082, -42.12, -10.4942, 0.29", "-181.74, -41.9791, -10.4476, 1.03", "-182.194, -41.89, -10.3941, 1.03", "-182.656, -41.8098, -10.325, 1.03", "-183.469, -41.6866, -10.172, 0.66", "-184.27, -41.5756, -10.02, 0.29", "-184.776, -41.5081, -9.93933, 0.29", "-185.566, -41.3773, -9.8545, 1.18", "-185.928, -41.3132, -9.82598, 1.47", "-186.007, -41.2983, -9.82173, 1.47", "-186.586, -41.1813, -9.80816, 1.47", "-187.527, -40.9812, -9.81979, 0.29", "-188.938, -40.6775, -9.93769, 0.29", "-189.326, -40.6032, -9.9912, 1.03", "-189.394, -40.5913, -10.0017, 1.03", "-189.964, -40.5112, -10.1319, 1.03", "-190.527, -40.4497, -10.2953, 1.03", "-191.622, -40.3933, -10.6682, 0.29", "-192.651, -40.3966, -11.057, 0.29", "-192.726, -40.3978, -11.0852, 0.29", "-194.601, -40.4593, -11.8065, 0.29", "-194.666, -40.4629, -11.8312, 0.29", "-195.821, -40.5203, -12.274, 0.29", "-195.877, -40.5236, -12.294, 0.29", "-196.5, -40.557, -12.5391, 0.29", "-196.575, -40.5589, -12.5678, 0.29", "-197.879, -40.5342, -13.1148, 0.29", "-198.841, -40.47, -13.541, 0.29", "-199.536, -40.3955, -13.8684, 2.21", "-200.568, -40.2743, -14.3573, 2.58", "-201.1, -40.2054, -14.6166, 2.58", "-202.476, -39.9611, -15.2561, 0.37", "-203.406, -39.7477, -15.6729, 0.37", "-203.478, -39.7302, -15.7021, 0.37", "-203.955, -39.5899, -15.8758, 0.37", "-204.019, -39.5697, -15.8938, 0.37", "-205.382, -39.1286, -16.232, 0.37", "-205.479, -39.0939, -16.2568, 0.37", "-206.666, -38.6721, -16.6144, 0.37", "-207.337, -38.4462, -16.8176, 0.88", "-208.091, -38.2026, -17.0417, 0.88", "-208.155, -38.1848, -17.0625, 0.88", "-209.078, -37.9947, -17.3953, 0.37", "-210.248, -37.7733, -17.8339, 0.37", "-210.936, -37.6516, -18.0945, 1.03", "-211.62, -37.5317, -18.3323, 1.03", "-212.658, -37.3382, -18.6809, 0.37", "-213.472, -37.1805, -18.9262, 0.37", "-213.574, -37.1615, -18.9518, 0.37", "-213.858, -37.1105, -19.0271, 0.37", "-215.981, -36.7989, -19.5533, 0.37", "-217.102, -36.6771, -19.818, 1.84", "-217.762, -36.6169, -19.9576, 2.28", "-218.706, -36.5752, -20.1412, 1.4", "-219.713, -36.6156, -20.3226, 0.29", "-220.828, -36.7353, -20.5104, 0.37", "-221.778, -36.9108, -20.6566, 0.37", "-221.846, -36.9253, -20.6651, 0.37", "-224.047, -37.4341, -20.8789, 0.37", "-225.638, -37.7622, -20.9731, 0.37", "-226.442, -37.8979, -20.9855, 1.55", "-226.912, -37.9591, -20.9761, 1.92", "-227.424, -38.0093, -20.9474, 1.92", "-228.261, -38.0644, -20.8869, 0.29", "-229.992, -38.0723, -20.6555, 0.29", "-231.367, -37.9848, -20.4067, 0.29", "-231.752, -37.9559, -20.3262, 1.18", "-231.828, -37.9496, -20.3039, 1.18", "-232.31, -37.9195, -20.1392, 1.33", "-233.203, -37.8833, -19.796, 1.33", "-233.823, -37.8863, -19.5319, 0.29", "-234.84, -37.9117, -19.1136, 0.29", "-236.254, -37.9727, -18.5982, 0.29", "-237.521, -38.0438, -18.1743, 0.29", "-237.598, -38.0493, -18.1516, 0.29", "-238.45, -38.1309, -17.9349, 0.29", "-239.024, -38.199, -17.7962, 0.81", "-239.457, -38.2586, -17.7061, 0.81", "-239.535, -38.2716, -17.6959, 0.81", "-239.817, -38.3229, -17.6544, 0.81", "-240.77, -38.5089, -17.4987, 0.22", "-241.994, -38.7624, -17.2843, 0.22", "-242.095, -38.7847, -17.2625, 0.22", "-243.007, -38.9921, -17.0468, 0.22", "-243.425, -39.0883, -16.9476, 0.66", "-243.914, -39.204, -16.8487, 0.81", "-244.419, -39.3236, -16.7711, 0.81", "-245.221, -39.5112, -16.6491, 0.29", "-245.299, -39.5273, -16.6388, 0.29", "-246.172, -39.6872, -16.5412, 0.29", "-246.99, -39.8128, -16.4861, 0.96", "-247.434, -39.862, -16.4795, 0.96", "-247.504, -39.8679, -16.4807, 0.96", "-248.18, -39.8965, -16.5136, 0.29", "-248.25, -39.8976, -16.5162, 0.29", "-249.576, -39.9116, -16.6154, 0.29", "-250.239, -39.9154, -16.6789, 1.4", "-250.767, -39.9061, -16.7424, 1.77", "-251.391, -39.8885, -16.8279, 1.77", "-251.905, -39.8747, -16.9055, 1.77", "-253.1, -39.8399, -17.0942, 0.29", "-253.169, -39.8364, -17.1051, 0.29", "-254.694, -39.7383, -17.3257, 0.29", "-254.833, -39.7272, -17.3434, 0.29", "-255.578, -39.6603, -17.4466, 0.29", "-255.656, -39.649, -17.4566, 0.29", "-256.833, -39.4246, -17.595, 0.81", "-256.91, -39.4079, -17.6062, 0.81", "-257.267, -39.3336, -17.6681, 1.11", "-258.274, -39.1932, -17.8416, 0.15", "-259.53, -39.0731, -18.0843, 0.15", "-259.826, -39.0575, -18.1427, 1.03", "-260.503, -39.0468, -18.2795, 1.47", "-261.891, -39.0736, -18.6219, 0.22", "-264.287, -39.2009, -19.2838, 0.22", "-264.761, -39.2593, -19.3986, 1.03", "-265.398, -39.3849, -19.5379, 1.03", "-265.465, -39.4007, -19.5505, 1.03", "-267.335, -39.9225, -19.8528, 0.22", "-267.401, -39.9431, -19.861, 0.22", "-269.569, -40.6849, -20.0822, 0.22", "-270.776, -41.1163, -20.178, 0.22", "-271.344, -41.3279, -20.2362, 1.33", "-271.929, -41.551, -20.2995, 1.77", "-272.217, -41.6634, -20.3271, 1.77", "-273.1, -41.9938, -20.4707, 0.22", "-274.54, -42.5061, -20.8706, 0.22", "-275.427, -42.8103, -21.135, 0.59", "-275.492, -42.8315, -21.1535, 0.59", "-276.051, -43.0101, -21.3029, 0.59", "-276.746, -43.2212, -21.4627, 0.22", "-276.821, -43.2447, -21.4748, 0.22", "-277.5, -43.4805, -21.5309, 0.22", "-278.213, -43.7584, -21.5226, 1.03", "-278.606, -43.9318, -21.51, 1.03", "-278.669, -43.9625, -21.5069, 1.03", "-278.956, -44.1144, -21.4715, 1.03", "-279.62, -44.4628, -21.3618, 0.22", "-279.681, -44.4939, -21.3497, 0.22", "-280.439, -44.8724, -21.1975, 0.22", "-281.581, -45.4215, -20.9778, 0.22", "-282.333, -45.7377, -20.8581, 1.33", "-282.834, -45.9245, -20.7902, 1.69", "-283.394, -46.1, -20.7333, 1.69", "-284.413, -46.3772, -20.6458, 0.22", "-284.481, -46.3918, -20.6413, 0.22", "-286.165, -46.6568, -20.578, 0.22", "-286.235, -46.6638, -20.578, 0.22", "-287.483, -46.7315, -20.578, 0.22", "-287.563, -46.7264, -20.5762, 0.22", "-287.879, -46.6662, -20.5628, 0.96", "-288.232, -46.5566, -20.5432, 1.33", "-288.778, -46.3107, -20.5052, 1.33", "-288.839, -46.2773, -20.5011, 1.33", "-290.446, -45.2781, -20.3947, 0.22", "-290.704, -45.1072, -20.3589, 0.22", "-291.76, -44.3543, -20.1631, 0.22", "-292.051, -44.1309, -20.0999, 0.22", "-293.321, -43.0836, -19.8312, 0.22", "-293.401, -43.0144, -19.8148, 0.22", "-294.654, -41.7921, -19.5766, 0.22", "-295.448, -40.979, -19.4368, 1.55", "-295.78, -40.6186, -19.3865, 2.06", "-296.48, -39.8225, -19.305, 0.15", "-296.545, -39.7476, -19.3014, 0.15", "-297.612, -38.513, -19.3075, 0.15", "-297.783, -38.3164, -19.3241, 0.15", "-298.54, -37.4638, -19.3815, 0.15", "-298.721, -37.2688, -19.3934, 0.15", "-299.846, -36.0947, -19.4383, 0.15", "-299.903, -36.039, -19.4416, 0.15", "-300.027, -35.9294, -19.4513, 0.59", "-300.461, -35.556, -19.5032, 0.59", "-300.774, -35.2984, -19.5563, 0.15", "-300.827, -35.2547, -19.5675, 0.15", "-301.797, -34.4437, -19.8327, 0.15", "-301.849, -34.4002, -19.8479, 0.15", "-302.113, -34.1787, -19.9272, 0.74", "-302.164, -34.1332, -19.9411, 0.74", "-302.494, -33.806, -20.013, 0.74", "-302.541, -33.7552, -20.0232, 0.74", "-302.67, -33.5989, -20.0493, 0.22", "-302.772, -33.4893, -20.062, 0.22", "-303.458, -32.7852, -20.1054, 0.22", "-303.613, -32.6317, -20.1351, 0.66", "-303.665, -32.5868, -20.1502, 0.66", "-303.928, -32.3955, -20.2318, 0.81", "-304.376, -32.0994, -20.3741, 0.81", "-304.434, -32.065, -20.3918, 0.81", "-305.144, -31.7148, -20.6296, 0.22", "-305.538, -31.5465, -20.7319, 0.22", "-306.584, -31.1065, -20.995, 0.22", "-306.725, -31.0489, -21.0281, 1.03", "-307.423, -30.7728, -21.1241, 1.03", "-309.723, -29.8816, -21.2689, 0.22", "-312.098, -29.0481, -21.2135, 0.22", "-312.577, -28.8962, -21.1818, 1.25", "-313.522, -28.6391, -21.0813, 1.47", "-315.616, -28.1581, -20.7052, 0.22", "-315.775, -28.136, -20.6629, 0.22", "-318.258, -28.0448, -19.6983, 0.22", "-318.532, -28.062, -19.5808, 1.18", "-318.777, -28.0935, -19.4827, 1.18", "-319.883, -28.3711, -19.0897, 0.22", "-321.364, -28.8825, -18.7154, 0.22", "-321.426, -28.9116, -18.6979, 0.22", "-321.661, -29.08, -18.6256, 0.88", "-322.101, -29.4149, -18.5092, 0.88", "-323.324, -30.3735, -18.2595, 0.15", "-323.585, -30.5905, -18.2332, 0.44", "-323.861, -30.8275, -18.2137, 0.44", "-325.153, -31.9036, -18.1666, 0.15", "-325.208, -31.9464, -18.1669, 0.15", "-325.771, -32.3701, -18.1967, 0.15", "-326.175, -32.6413, -18.2575, 0.66", "-326.475, -32.8437, -18.2973, 0.88", "-326.541, -32.8872, -18.3082, 0.88", "-326.966, -33.141, -18.4321, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.94068, 39.674, -0.921401, 1.33", "1.66213, 40.6813, -0.820504, 1.33", "1.34973, 41.887, -0.726395, 1.62", "1.12002, 42.7836, -0.61426, 1.62", "0.814812, 43.9643, -0.445544, 1.47", "0.542165, 45.0286, -0.286528, 1.47", "-0.618096, 49.5462, 0.497949, 1.47", "-0.966827, 50.9675, 0.766731, 1.47", "-1.34297, 52.488, 1.08506, 1.47", "-1.51471, 53.2247, 1.25908, 1.47", "-1.69088, 53.9938, 1.45897, 1.47", "-1.92269, 55.01, 1.78419, 1.47", "-2.08872, 55.7409, 2.10486, 1.47", "-2.10104, 55.7955, 2.12648, 1.47", "-2.33985, 56.9192, 2.45409, 1.47", "-2.35351, 56.9856, 2.47125, 1.47", "-2.63099, 58.4073, 2.75743, 1.47", "-2.7898, 59.3159, 2.82643, 1.47", "-2.9521, 60.334, 2.83249, 1.47", "-3.09701, 61.3496, 2.73076, 1.62", "-3.10726, 61.4275, 2.71567, 1.62", "-3.23424, 62.4122, 2.48194, 1.62", "-3.42206, 63.8856, 2.07224, 1.62", "-3.55097, 64.7822, 1.77772, 1.62", "-3.75234, 66.0281, 1.35666, 1.62", "-3.8904, 66.8125, 1.0918, 1.62", "-4.05611, 67.6568, 0.836725, 1.69", "-4.24284, 68.516, 0.606169, 1.69", "-4.60169, 70.013, 0.304254, 1.84", "-4.90167, 71.2012, 0.102337, 1.84", "-4.92112, 71.278, 0.0910211, 1.84", "-5.31582, 72.8679, -0.173333, 1.84", "-5.34776, 73.0124, -0.197665, 1.84", "-5.56018, 74.2145, -0.466761, 1.84", "-5.56879, 74.282, -0.48309, 1.84", "-5.69365, 75.57, -0.830474, 1.84", "-5.69722, 75.6377, -0.84782, 1.84", "-5.71942, 77.136, -1.20967, 1.84", "-5.68497, 79.2561, -1.6663, 1.84", "-5.63665, 80.2524, -1.89054, 1.84", "-5.56233, 81.3246, -2.12481, 2.06", "-5.40382, 83.2629, -2.50832, 2.06", "-5.30774, 84.3389, -2.71551, 2.43", "-5.20897, 85.2684, -2.88181, 2.65", "-5.06969, 86.3058, -2.99997, 2.65", "-4.96504, 86.9865, -3.09842, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.94068, 39.674, -0.921401, 1.25", "2.77339, 40.4972, -0.972268, 1.25", "3.89106, 41.5897, -1.06907, 1.11", "4.78662, 42.4839, -1.15233, 1.03", "5.52127, 43.2324, -1.25632, 1.25", "6.24448, 43.986, -1.37482, 1.33", "6.76135, 44.547, -1.48555, 1.33", "7.61251, 45.5676, -1.72675, 1.33", "8.43842, 46.5978, -2.04414, 1.33", "9.1122, 47.4921, -2.36559, 0.88", "9.59551, 48.1975, -2.63403, 0.88", "10.0929, 48.9762, -2.94007, 0.88", "10.5592, 49.7746, -3.27618, 0.88", "10.9866, 50.5937, -3.66119, 1.11", "11.0155, 50.6514, -3.68829, 1.11", "11.4239, 51.4764, -4.04811, 1.11", "11.4672, 51.559, -4.08142, 1.11", "12.0616, 52.5849, -4.44022, 1.4", "12.3969, 53.1401, -4.62619, 1.4", "12.9449, 53.992, -4.87667, 0.96", "13.3604, 54.6048, -5.04537, 0.81", "13.9915, 55.4764, -5.26443, 0.81", "14.4991, 56.1437, -5.39713, 1.11", "14.5434, 56.1974, -5.40366, 1.11", "14.9332, 56.6445, -5.45584, 1.33", "15.3809, 57.1554, -5.50593, 1.84", "15.6873, 57.5083, -5.54021, 1.99", "16.1624, 58.0667, -5.60497, 1.99", "16.5943, 58.5856, -5.69578, 1.62", "17.1494, 59.2898, -5.84196, 1.33", "17.4973, 59.7551, -5.95403, 0.81", "17.9378, 60.3676, -6.15685, 0.66", "18.3645, 61.0232, -6.44734, 0.66", "18.8483, 61.8339, -6.88501, 0.66", "19.1966, 62.4895, -7.28298, 0.59", "19.2221, 62.5427, -7.32055, 0.59", "19.5839, 63.3744, -7.96811, 0.59", "19.9075, 64.2389, -8.65175, 0.81", "19.9244, 64.2916, -8.6946, 0.81", "20.0275, 64.6406, -8.95461, 1.03", "20.3111, 65.5491, -9.60543, 1.03", "20.3308, 65.6078, -9.63808, 1.03", "20.5401, 66.218, -9.83575, 1.25", "20.5666, 66.2922, -9.84956, 1.25", "20.7899, 66.9357, -9.99124, 1.4", "20.8115, 67.0007, -10.0056, 1.4", "21.0411, 67.7418, -10.1503, 1.4", "21.2831, 68.57, -10.3727, 1.55", "21.4762, 69.2768, -10.594, 1.62", "21.7391, 70.3376, -10.9318, 1.62", "21.863, 70.8807, -11.1079, 1.25", "22.0077, 71.5123, -11.3033, 0.96", "22.2276, 72.4919, -11.6012, 0.96", "22.3843, 73.2, -11.7726, 0.74", "22.6061, 74.194, -11.9328, 0.52", "22.7693, 74.9218, -11.9721, 0.37", "22.9557, 75.7531, -11.997, 0.37", "22.9766, 75.8498, -11.9989, 0.37", "23.1568, 76.8542, -12.0232, 0.37", "23.1953, 77.1254, -12.0431, 0.59", "23.2764, 77.8509, -12.1226, 1.33", "23.3504, 78.6681, -12.2331, 1.84", "23.4292, 79.7414, -12.4302, 1.84", "23.4983, 80.8339, -12.6657, 1.84", "23.553, 81.8333, -12.9129, 1.62", "23.5806, 82.4005, -13.0498, 1.33", "23.587, 82.5099, -13.0781, 1.33", "23.6335, 83.1656, -13.2409, 1.33", "23.6948, 84.0318, -13.4478, 0.81", "23.7435, 84.7492, -13.6435, 0.81", "23.7465, 84.8163, -13.6632, 0.81", "23.7762, 85.831, -13.9525, 0.59", "23.7859, 86.5319, -14.1565, 0.59", "23.785, 87.7277, -14.492, 0.59", "23.7717, 88.6438, -14.7823, 1.11", "23.7441, 89.4064, -15.0226, 1.4", "23.7148, 90.0388, -15.2089, 1.77", "23.6617, 90.9924, -15.4804, 1.92", "23.6267, 91.762, -15.7071, 1.33", "23.5922, 92.7222, -15.9925, 0.74", "23.5612, 93.9107, -16.3516, 0.74", "23.5548, 95.0372, -16.7152, 0.74", "23.5668, 96.0576, -17.0558, 0.44", "23.5844, 96.7205, -17.2664, 0.44", "23.5871, 96.7873, -17.2869, 0.44", "23.6406, 97.7567, -17.5446, 0.44", "23.693, 98.6096, -17.7595, 0.44", "23.7457, 99.4494, -17.9412, 0.81", "23.7999, 100.318, -18.0958, 1.11", "23.8326, 101.112, -18.2205, 1.77", "23.8632, 102.057, -18.3371, 1.77", "23.8781, 102.755, -18.3895, 1.77", "23.8811, 103.199, -18.4171, 1.33", "23.8874, 103.731, -18.4454, 1.11", "23.8969, 104.502, -18.4888, 0.66", "23.9058, 105.313, -18.5351, 0.52", "23.9161, 106.192, -18.5832, 0.52", "23.9332, 107.367, -18.6402, 0.88", "23.9405, 108.02, -18.6813, 1.62", "23.9521, 109.047, -18.7531, 2.21", "23.956, 109.347, -18.7763, 2.65", "23.9595, 109.925, -18.825, 2.65", "23.961, 110.653, -18.8838, 2.36", "23.9508, 111.797, -18.9698, 1.18", "23.9419, 112.525, -19.0235, 0.88", "23.9442, 113.406, -19.0843, 0.66", "23.9589, 114.496, -19.1517, 0.66", "24.0151, 116.103, -19.2317, 0.66", "24.0406, 116.498, -19.2374, 0.29", "24.0524, 116.637, -19.2331, 0.29", "24.1226, 117.381, -19.1996, 0.29", "24.131, 117.46, -19.1949, 0.29", "24.2179, 118.268, -19.1386, 0.29", "24.3189, 119.208, -19.07, 0.29", "24.3612, 119.697, -19.0382, 0.81", "24.401, 120.426, -19.013, 1.11", "24.4179, 121.089, -18.9984, 1.47", "24.427, 121.673, -18.9934, 1.84", "24.4261, 122.407, -19.0083, 1.84", "24.4231, 123.141, -19.0435, 1.84", "24.4341, 124.076, -19.0894, 0.74", "24.441, 124.403, -19.1118, 0.74", "24.4616, 124.911, -19.1517, 0.74", "24.5186, 125.741, -19.2208, 0.52", "24.6333, 126.973, -19.3267, 0.44", "24.8039, 128.356, -19.4444, 0.44", "24.9672, 129.435, -19.5317, 0.81", "25.1055, 130.206, -19.6003, 1.18", "25.2152, 130.725, -19.6445, 1.33", "25.2345, 130.802, -19.6498, 1.33", "25.3226, 131.11, -19.6879, 1.33", "25.343, 131.186, -19.7009, 1.33", "25.4532, 131.695, -19.7893, 0.88", "25.5478, 132.196, -19.8747, 0.66", "25.7201, 133.193, -20.0618, 0.52", "25.8729, 134.037, -20.2465, 0.29", "26.0066, 134.768, -20.4175, 0.29", "26.239, 136.056, -20.7226, 0.29", "26.4372, 137.166, -20.9824, 0.29", "26.5931, 138.047, -21.1797, 1.18", "26.7896, 139.171, -21.4061, 2.21", "26.8626, 139.605, -21.4745, 3.02", "26.9743, 140.248, -21.5726, 3.02", "27.0784, 140.968, -21.6677, 2.43", "27.1323, 141.403, -21.705, 1.77", "27.1964, 142.064, -21.7458, 1.33", "27.2319, 142.575, -21.7701, 0.88", "27.2551, 142.97, -21.7933, 0.37", "27.2993, 143.836, -21.8513, 0.37", "27.3365, 144.743, -21.9157, 0.37", "27.3808, 146.107, -22.0213, 0.22", "27.3909, 146.776, -22.0757, 0.81", "27.4019, 147.652, -22.1492, 1.25", "27.4052, 148.161, -22.189, 1.62", "27.409, 148.819, -22.2326, 1.62", "27.4108, 149.558, -22.2654, 0.88", "27.4234, 150.09, -22.2698, 0.52", "27.4342, 150.416, -22.2748, 0.59", "27.4687, 151.215, -22.2839, 0.37", "27.4878, 151.589, -22.298, 0.81", "27.5198, 152.097, -22.3315, 0.81", "27.5277, 152.203, -22.3377, 0.81", "27.5523, 152.572, -22.3559, 0.81", "27.556, 152.642, -22.3581, 0.81", "27.5874, 153.216, -22.3732, 0.44", "27.6324, 153.947, -22.3597, 0.44", "27.6922, 154.719, -22.3209, 0.22", "27.8244, 156.169, -22.2176, 0.22", "28.0646, 158.273, -22.0305, 0.22", "28.0743, 158.342, -22.0232, 0.22", "28.2217, 159.199, -21.914, 0.96", "28.4062, 160.087, -21.7755, 1.69", "28.5659, 160.735, -21.6623, 2.28", "28.7142, 161.231, -21.5407, 2.5", "28.856, 161.653, -21.4148, 2.36", "28.9788, 162.019, -21.3146, 1.92", "29.2928, 162.957, -21.0839, 1.62", "29.6313, 163.98, -20.8225, 0.37", "29.9141, 164.842, -20.6079, 0.29", "29.9379, 164.916, -20.5902, 0.29", "30.4762, 166.574, -20.2252, 0.29", "31.0484, 168.271, -19.8974, 0.29", "31.0712, 168.336, -19.8878, 0.29", "31.2821, 168.925, -19.8139, 1.11", "31.305, 168.991, -19.8085, 1.11", "31.5425, 169.71, -19.7516, 1.47", "31.5588, 169.767, -19.7477, 1.47", "31.7046, 170.488, -19.7357, 1.55", "31.7129, 170.548, -19.7348, 1.55", "31.7425, 170.836, -19.7309, 1.55", "31.7468, 170.896, -19.7285, 1.55", "31.7766, 171.694, -19.6812, 0.66", "31.7996, 172.435, -19.6254, 0.37", "31.818, 173.381, -19.5436, 0.29", "31.818, 173.461, -19.5362, 0.29", "31.8091, 173.941, -19.4921, 0.44", "31.8007, 174.09, -19.4793, 0.44", "31.7508, 174.595, -19.4321, 0.44", "31.7395, 174.664, -19.4259, 0.44", "31.6156, 175.177, -19.3659, 1.03", "31.4409, 175.809, -19.2876, 1.03", "31.3182, 176.21, -19.2449, 0.74", "31.2404, 176.476, -19.2244, 0.37", "31.1469, 176.827, -19.2045, 0.37", "30.9548, 177.651, -19.1699, 0.22", "30.9406, 177.72, -19.1678, 0.22", "30.6644, 179.297, -19.1398, 0.22", "30.5387, 180.271, -19.1352, 1.03", "30.4637, 181.148, -19.1426, 1.62", "30.4445, 181.514, -19.139, 1.92", "30.4326, 181.954, -19.1279, 1.84", "30.4247, 182.546, -19.0759, 1.47", "30.4244, 183.411, -18.9537, 0.37", "30.4162, 184.779, -18.7105, 0.29", "30.404, 186.182, -18.4387, 0.29", "30.3865, 187.403, -18.1949, 0.29", "30.3725, 188.521, -17.9338, 1.03", "30.3628, 189.097, -17.7881, 1.77", "30.3476, 189.66, -17.649, 1.77", "30.3304, 190.167, -17.5152, 1.4", "30.3026, 190.876, -17.3327, 0.66", "30.2569, 191.773, -17.0976, 0.22", "30.1697, 193.271, -16.7249, 0.22", "30.0649, 194.955, -16.2121, 0.22", "30.0042, 195.902, -15.8887, 0.81", "29.9759, 196.324, -15.7376, 1.18", "29.9246, 197.067, -15.4641, 1.77", "29.8855, 197.62, -15.2631, 1.77", "29.7854, 198.996, -14.7374, 0.96", "29.7591, 199.35, -14.6067, 0.52", "29.6798, 200.263, -14.3425, 0.29", "29.6731, 200.331, -14.3263, 0.29", "29.5637, 201.308, -14.1492, 0.15", "29.3871, 202.685, -13.9865, 0.15", "29.3773, 202.754, -13.9845, 0.15", "29.2869, 203.382, -13.9721, 0.81", "29.2152, 203.887, -13.9687, 1.18", "29.2055, 203.956, -13.9695, 1.18", "29.1174, 204.558, -13.9977, 1.18", "29.109, 204.628, -13.9966, 1.18", "29.0368, 205.286, -13.944, 0.59", "29.0238, 205.443, -13.9068, 0.74", "28.9987, 205.887, -13.7822, 0.74", "28.9957, 205.954, -13.7651, 0.74", "28.9673, 206.7, -13.5935, 0.29", "28.9011, 208.35, -13.2482, 0.29", "28.8503, 209.621, -13.0061, 0.29", "28.7982, 210.914, -12.79, 0.29", "28.7667, 211.761, -12.6724, 1.18", "28.7372, 212.419, -12.5867, 1.84", "28.6991, 212.86, -12.5412, 1.84", "28.6314, 213.364, -12.5024, 1.47", "28.5385, 213.888, -12.4854, 1.11", "28.391, 214.533, -12.4439, 0.44", "28.2109, 215.252, -12.3761, 0.22", "27.8789, 216.483, -12.27, 0.22", "27.7207, 217.031, -12.2278, 0.29", "27.6544, 217.252, -12.2144, 0.29", "27.4263, 218.003, -12.1864, 0.29", "27.3832, 218.147, -12.1858, 0.29", "27.1731, 218.949, -12.2169, 0.29", "27.1556, 219.027, -12.2185, 0.29", "27.0288, 219.607, -12.2249, 0.88", "26.9227, 220.128, -12.235, 1.55", "26.8172, 220.713, -12.2501, 1.55", "26.752, 221.138, -12.2618, 1.18", "26.6766, 221.762, -12.2773, 0.74", "26.6167, 222.285, -12.3012, 0.44", "26.5352, 223.013, -12.3433, 0.29", "26.5279, 223.083, -12.3477, 0.29", "26.3781, 224.544, -12.4466, 0.29", "26.1838, 226.355, -12.5716, 0.29", "26.0872, 227.201, -12.6282, 1.11", "26.0113, 227.779, -12.6763, 1.84", "25.9133, 228.428, -12.7418, 2.21", "25.902, 228.496, -12.7511, 2.21", "25.8128, 228.973, -12.8321, 2.21", "25.6576, 229.775, -12.9803, 1.03", "25.5042, 230.589, -13.1266, 0.66", "25.3074, 231.601, -13.3415, 0.37", "25.038, 232.944, -13.6536, 0.37", "24.8957, 233.672, -13.8289, 0.96", "24.8074, 234.16, -13.9484, 0.96", "24.7936, 234.237, -13.9671, 0.96", "24.6663, 234.956, -14.1484, 0.96", "24.5744, 235.458, -14.298, 0.52", "24.5137, 235.798, -14.4004, 0.52", "24.4367, 236.283, -14.5378, 0.52", "24.4144, 236.438, -14.5747, 0.52", "24.335, 237.028, -14.6846, 0.29", "24.2737, 237.552, -14.7527, 0.29", "24.1958, 238.208, -14.8256, 0.22", "24.0812, 239.173, -14.9089, 0.22", "24.008, 239.748, -14.9335, 1.03", "23.9516, 240.209, -14.9353, 1.4", "23.8875, 240.715, -14.916, 1.4", "23.8105, 241.387, -14.8859, 1.4", "23.73, 242.111, -14.8493, 0.81", "23.6557, 242.784, -14.8243, 0.29", "23.6076, 243.217, -14.8149, 0.29", "23.5684, 243.592, -14.812, 0.29", "23.4368, 244.905, -14.8211, 0.29", "23.4303, 244.975, -14.8243, 0.29", "23.3547, 245.728, -14.9175, 1.03", "23.2848, 246.444, -15.0442, 1.69", "23.2486, 246.794, -15.1199, 1.69", "23.1875, 247.433, -15.2714, 1.33", "23.1256, 248.11, -15.4433, 0.59", "23.0605, 248.826, -15.6222, 0.22", "22.8893, 250.814, -16.113, 0.22", "22.8224, 251.53, -16.2914, 0.81", "22.7663, 252.104, -16.4332, 1.18", "22.752, 252.241, -16.4618, 1.18", "22.7077, 252.664, -16.5288, 1.18", "22.7002, 252.733, -16.5362, 1.18", "22.6733, 252.95, -16.557, 1.18", "22.5667, 253.806, -16.6113, 0.37", "22.3664, 255.416, -16.704, 0.22", "22.358, 255.496, -16.7078, 0.22", "22.3111, 256.083, -16.7294, 0.96", "22.3071, 256.143, -16.7308, 0.96", "22.2811, 256.732, -16.7323, 1.47", "22.2805, 256.802, -16.7333, 1.47", "22.2962, 257.317, -16.7704, 1.47", "22.2967, 257.824, -16.8205, 1.18", "22.2806, 258.257, -16.9003, 0.96", "22.2538, 258.691, -16.9985, 0.59", "22.2105, 259.286, -17.1515, 0.29", "22.1633, 259.922, -17.3223, 0.29", "22.0617, 261.079, -17.6417, 0.22", "21.9666, 262.108, -17.9195, 0.59", "21.9531, 262.251, -17.9609, 0.59", "21.928, 262.501, -18.0315, 0.88", "21.8739, 263.0, -18.1521, 0.88", "21.8053, 263.52, -18.2379, 1.03", "21.7444, 263.953, -18.2893, 1.03", "21.6461, 264.615, -18.3364, 0.74", "21.544, 265.273, -18.3787, 0.37", "21.3902, 266.235, -18.4326, 0.29", "21.1562, 267.673, -18.4982, 0.22", "21.0339, 268.427, -18.5391, 1.11", "20.9401, 268.999, -18.5702, 1.77", "20.8619, 269.502, -18.5928, 2.14", "20.7892, 270.016, -18.6241, 2.14", "20.7115, 270.608, -18.6732, 1.77", "20.6017, 271.536, -18.7651, 0.81", "20.5333, 272.124, -18.8155, 0.29", "20.3025, 274.166, -18.9876, 0.29", "20.209, 275.029, -19.0824, 0.29", "20.1341, 275.789, -19.1794, 0.96", "20.0796, 276.444, -19.2711, 1.11", "20.0703, 276.592, -19.292, 1.11", "20.0421, 277.096, -19.3655, 1.11", "19.984, 278.038, -19.4839, 0.66", "19.9527, 278.475, -19.5226, 0.29", "19.9464, 278.555, -19.5271, 0.29", "19.8429, 279.709, -19.565, 0.29", "19.6403, 281.912, -19.5891, 0.29", "19.5236, 283.11, -19.573, 0.96", "19.4434, 283.912, -19.5402, 1.99", "19.3779, 284.572, -19.5168, 2.28", "19.3068, 285.305, -19.4957, 1.25", "19.2579, 285.812, -19.4852, 0.52", "19.1999, 286.484, -19.4802, 0.29", "19.111, 287.584, -19.4923, 0.29", "19.0738, 288.038, -19.5011, 0.29", "18.9888, 288.998, -19.5234, 0.29", "18.9398, 289.51, -19.5379, 1.03", "18.9326, 289.58, -19.5376, 1.03", "18.8508, 290.32, -19.5071, 1.03", "18.8226, 290.537, -19.4866, 1.03", "18.7626, 290.927, -19.428, 1.03", "18.7514, 290.995, -19.4143, 1.03", "18.6596, 291.691, -19.2826, 0.59", "18.651, 291.76, -19.2734, 0.59", "18.5909, 292.264, -19.2313, 0.29", "18.5785, 292.37, -19.2267, 0.29", "18.5224, 292.888, -19.2201, 0.29", "18.4114, 293.837, -19.2308, 0.22", "18.2436, 295.247, -19.3071, 0.22", "18.1895, 295.714, -19.3376, 0.88", "18.1088, 296.521, -19.4074, 1.4", "18.0454, 297.245, -19.4798, 1.55", "18.0043, 297.796, -19.536, 1.55", "17.9657, 298.463, -19.6008, 1.55", "17.9386, 299.412, -19.6842, 0.52", "17.9165, 301.176, -19.8087, 0.15", "17.9165, 301.246, -19.8129, 0.15", "17.9191, 301.644, -19.8299, 0.74", "17.9261, 302.298, -19.8416, 0.74", "17.9214, 302.742, -19.8349, 0.74", "17.9079, 303.112, -19.8251, 0.74", "17.8713, 303.625, -19.806, 0.29", "17.8168, 304.207, -19.7927, 0.29", "17.7119, 305.084, -19.7872, 0.29", "17.589, 305.968, -19.7843, 0.29", "17.5003, 306.546, -19.7843, 0.96", "17.3896, 307.201, -19.7892, 1.25", "17.322, 307.591, -19.7939, 1.25", "17.1884, 308.324, -19.8049, 0.52", "17.0768, 308.897, -19.8148, 0.52", "16.7554, 310.502, -19.8736, 0.52", "16.4238, 312.192, -19.9614, 0.52", "16.4086, 312.27, -19.9663, 0.52", "16.1858, 313.455, -20.0509, 0.52", "16.0806, 314.071, -20.1231, 0.52", "16.0119, 314.522, -20.194, 0.37", "15.8837, 315.525, -20.3917, 0.37", "15.8, 316.333, -20.5613, 0.37", "15.7513, 316.903, -20.6774, 1.25", "15.6731, 318.158, -20.9908, 2.43", "15.6424, 318.8, -21.1583, 2.43", "15.6167, 319.37, -21.321, 2.43", "15.5799, 320.343, -21.6352, 0.96", "15.5608, 320.907, -21.8259, 0.59", "15.5223, 322.008, -22.1871, 0.29", "15.4815, 323.049, -22.5393, 0.29", "15.4596, 324.018, -22.8593, 0.29", "15.4573, 324.319, -22.9552, 0.59", "15.4582, 324.756, -23.0821, 0.81", "15.4627, 325.477, -23.2619, 0.81", "15.4768, 326.496, -23.4639, 0.22", "15.5121, 328.814, -23.7933, 0.22", "15.5296, 329.728, -23.866, 1.18", "15.5516, 330.607, -23.8998, 1.62", "15.5731, 331.117, -23.8943, 1.62", "15.5919, 331.476, -23.872, 1.62", "15.6717, 332.653, -23.6648, 0.96", "15.7184, 333.217, -23.5184, 0.29", "15.782, 333.93, -23.3034, 0.29", "15.9494, 335.681, -22.753, 0.29", "15.9588, 335.775, -22.7236, 0.29", "16.0945, 337.051, -22.3509, 0.81", "16.1515, 337.547, -22.2293, 1.11", "16.2, 338.039, -22.1019, 1.11", "16.2199, 338.32, -22.0343, 1.11", "16.2234, 338.389, -22.0232, 1.11", "16.2208, 338.926, -21.9847, 0.74", "16.1974, 339.442, -21.9818, 0.37", "16.1047, 340.51, -21.9836, 0.37", "15.9488, 341.669, -21.9899, 0.29", "15.7471, 342.742, -22.0164, 0.22", "15.4148, 344.148, -22.0736, 0.22", "15.2187, 344.798, -22.0875, 0.96", "14.9905, 345.447, -22.0935, 1.62", "14.7404, 346.072, -22.0911, 1.62", "14.4426, 346.746, -22.0657, 0.74", "14.1889, 347.287, -22.0245, 0.37", "13.3489, 349.097, -21.8575, 0.22", "13.3202, 349.16, -21.8518, 0.22", "13.0237, 349.863, -21.7928, 0.96", "12.8545, 350.295, -21.7597, 1.62", "12.6142, 350.947, -21.7137, 1.62", "12.3361, 351.713, -21.6785, 0.29", "11.6838, 353.566, -21.6532, 0.29", "11.2654, 354.801, -21.6395, 0.29", "11.0018, 355.643, -21.6331, 0.29", "10.8801, 356.066, -21.6305, 0.74", "10.7437, 356.604, -21.6284, 0.96", "10.6947, 356.819, -21.6284, 0.96", "10.5722, 357.4, -21.6141, 0.44", "10.4155, 358.044, -21.5814, 0.29", "10.1744, 358.956, -21.5203, 0.22", "10.1434, 359.065, -21.5123, 0.22", "9.91497, 359.847, -21.438, 0.22", "9.74308, 360.441, -21.3758, 0.88", "9.45608, 361.444, -21.2876, 1.55", "9.26099, 362.146, -21.2409, 1.84", "9.06566, 362.91, -21.2041, 1.84", "8.80875, 363.967, -21.1693, 0.29", "8.65346, 364.68, -21.1583, 0.29", "8.42493, 365.837, -21.1648, 0.29", "8.16171, 367.32, -21.1778, 0.29", "8.03599, 368.044, -21.1875, 0.88", "8.02359, 368.123, -21.1891, 0.88", "7.92796, 368.765, -21.2085, 1.4", "7.83073, 369.422, -21.217, 1.55", "7.7495, 370.0, -21.2183, 1.55", "7.73769, 370.069, -21.2193, 1.55", "7.57607, 370.855, -21.2425, 0.66", "7.47358, 371.29, -21.259, 0.37", "7.2117, 372.299, -21.304, 0.37", "6.90916, 373.395, -21.3572, 0.37", "6.56381, 374.55, -21.4222, 0.37", "6.33256, 375.295, -21.4658, 0.96", "6.0856, 376.04, -21.5104, 1.84", "5.94624, 376.454, -21.5326, 2.14", "5.69563, 377.183, -21.564, 1.84", "5.41337, 377.998, -21.554, 0.81", "5.26546, 378.417, -21.533, 0.29", "4.99367, 379.156, -21.4744, 0.29", "4.40332, 380.681, -21.3262, 0.29", "3.88421, 381.99, -21.1813, 0.29", "3.5197, 382.894, -21.0646, 1.03", "3.24655, 383.571, -20.9679, 1.4", "3.0323, 384.117, -20.8908, 1.4", "2.73173, 384.907, -20.7836, 0.66", "2.58514, 385.319, -20.7354, 0.29", "2.56509, 385.386, -20.7306, 0.29", "2.34453, 386.289, -20.7172, 0.29", "2.16701, 387.226, -20.7043, 0.29", "2.09365, 387.703, -20.6985, 0.96", "2.02371, 388.289, -20.6768, 1.18", "1.98023, 388.646, -20.6559, 1.18", "1.88478, 389.232, -20.613, 0.81", "1.80203, 389.669, -20.5889, 0.52", "1.78545, 389.737, -20.5865, 0.52", "1.61918, 390.284, -20.5786, 0.52", "1.40784, 390.867, -20.5667, 0.22", "0.880482, 392.168, -20.5326, 0.22", "0.605246, 392.784, -20.5156, 1.03", "0.364663, 393.324, -20.5026, 1.47", "0.0165163, 394.067, -20.4897, 1.47", "-0.205711, 394.52, -20.466, 0.29", "-0.447725, 395.001, -20.4156, 0.29", "-0.687209, 395.471, -20.3412, 0.29", "-1.15718, 396.359, -20.1668, 0.29", "-1.71272, 397.398, -19.9612, 0.29", "-2.22869, 398.375, -19.7788, 0.29", "-2.37074, 398.648, -19.7345, 1.11", "-2.40619, 398.718, -19.7185, 1.11", "-2.6908, 399.305, -19.5516, 1.69", "-2.90888, 399.873, -19.3892, 1.92", "-3.02399, 400.448, -19.263, 1.92", "-3.09148, 400.961, -19.1714, 1.92", "-3.16161, 402.155, -18.9954, 0.29", "-3.17462, 402.845, -18.9053, 0.29", "-3.12657, 404.813, -18.6926, 0.29", "-3.01315, 406.942, -18.5099, 0.29", "-3.00817, 407.012, -18.5057, 0.29", "-2.81692, 409.223, -18.4393, 0.29", "-2.80815, 409.303, -18.4404, 0.29", "-2.68057, 410.333, -18.4571, 1.25", "-2.60735, 410.912, -18.4683, 1.62", "-2.53285, 411.643, -18.4837, 1.92", "-2.53009, 411.713, -18.4849, 1.92", "-2.57549, 412.466, -18.4926, 1.92", "-2.68955, 413.288, -18.4963, 1.03", "-2.76998, 413.721, -18.4899, 0.66", "-2.86923, 414.227, -18.4784, 0.37", "-3.28298, 416.268, -18.4232, 0.37", "-3.61982, 417.911, -18.3423, 0.37", "-4.04262, 419.978, -18.2037, 0.37", "-4.25013, 421.039, -18.1154, 0.29", "-4.56244, 422.753, -17.949, 0.29", "-4.57513, 422.831, -17.9402, 0.29", "-4.6724, 423.672, -17.7842, 1.03", "-4.70564, 424.379, -17.6052, 1.55", "-4.70087, 425.005, -17.3728, 1.62", "-4.69022, 425.552, -17.1288, 1.4", "-4.69011, 426.206, -16.7985, 0.81", "-4.70978, 427.606, -16.0734, 0.37", "-4.76099, 428.977, -15.3723, 0.29", "-4.84486, 430.283, -14.6696, 0.29", "-4.84936, 430.336, -14.6403, 0.29", "-4.93137, 431.022, -14.2472, 0.29", "-4.93912, 431.075, -14.2193, 0.29", "-5.10555, 432.049, -13.8314, 0.29", "-5.11912, 432.141, -13.7996, 0.29", "-5.20505, 433.23, -13.5484, 1.11", "-5.20806, 433.298, -13.5341, 1.11", "-5.21047, 434.086, -13.3736, 1.92", "-5.19862, 434.956, -13.2085, 2.28", "-5.16977, 435.544, -13.109, 2.5", "-5.13067, 436.173, -13.026, 1.99", "-5.10363, 436.533, -13.0116, 1.99" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-122.098, -197.331, -97.403, 0.29", "-121.728, -198.646, -97.0117, 0.29", "-121.71, -198.71, -96.9916, 0.29", "-121.49, -199.825, -96.6806, 0.29", "-121.408, -200.36, -96.5441, 0.59", "-121.328, -201.067, -96.3823, 0.59", "-121.322, -201.135, -96.3681, 0.59", "-121.322, -201.434, -96.3399, 0.22", "-121.308, -202.571, -96.346, 0.22", "-121.308, -202.861, -96.3625, 0.59", "-121.311, -203.442, -96.4321, 0.59", "-121.309, -203.815, -96.4883, 0.59", "-121.302, -204.529, -96.6092, 0.15", "-121.229, -207.676, -96.9849, 0.15", "-121.229, -207.826, -96.9863, 0.15", "-121.241, -208.447, -96.9581, 1.03", "-121.26, -208.955, -96.9153, 1.11", "-121.297, -209.534, -96.8457, 1.11", "-121.448, -211.17, -96.5777, 0.15", "-122.004, -215.404, -95.7498, 0.15", "-122.015, -215.472, -95.7375, 0.15", "-122.12, -215.989, -95.6467, 0.66", "-122.241, -216.496, -95.5739, 0.66", "-122.262, -216.573, -95.5628, 0.66", "-122.288, -216.637, -95.5548, 0.15", "-123.411, -218.672, -95.1349, 0.15", "-123.488, -218.805, -95.1066, 0.29", "-123.641, -219.058, -95.0499, 0.29", "-124.371, -220.275, -94.7796, 0.15", "-125.638, -222.383, -94.3183, 0.15", "-125.865, -222.775, -94.1359, 0.96", "-126.01, -223.035, -93.9135, 0.96", "-126.041, -223.098, -93.8739, 0.96", "-126.283, -223.621, -93.5742, 1.11", "-126.313, -223.687, -93.5403, 1.11", "-127.536, -226.688, -92.0021, 0.15", "-127.561, -226.747, -91.9746, 0.15", "-129.462, -231.247, -90.081, 0.15", "-129.488, -231.308, -90.0583, 0.15", "-129.66, -231.679, -89.9496, 0.66", "-130.031, -232.457, -89.8086, 0.66", "-130.449, -233.299, -89.804, 0.44", "-130.536, -233.468, -89.8021, 0.15", "-130.571, -233.529, -89.7962, 0.15", "-131.414, -234.77, -89.601, 0.15", "-131.532, -234.926, -89.5695, 0.52", "-131.684, -235.099, -89.5297, 0.52", "-131.887, -235.329, -89.4751, 0.52", "-132.441, -235.942, -89.3302, 0.22", "-134.324, -237.95, -88.8181, 0.22", "-134.517, -238.139, -88.7623, 0.66", "-134.985, -238.586, -88.6319, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-122.098, -197.331, -97.403, 0.22", "-122.734, -198.597, -98.0026, 0.22", "-122.759, -198.639, -98.0528, 0.22", "-123.307, -199.615, -99.0011, 0.22", "-123.333, -199.663, -99.0449, 0.22", "-123.707, -200.388, -99.6143, 0.74", "-124.04, -201.052, -100.097, 1.03", "-125.246, -203.43, -101.875, 0.22", "-126.133, -205.28, -103.114, 0.22", "-126.159, -205.336, -103.146, 0.22", "-126.787, -206.787, -103.871, 0.22", "-126.811, -206.848, -103.897, 0.22", "-126.909, -207.128, -103.99, 1.55", "-127.185, -207.944, -104.183, 2.06", "-127.471, -208.813, -104.433, 2.06", "-127.953, -210.279, -104.876, 1.18", "-128.48, -211.886, -105.391, 0.22", "-129.553, -215.124, -106.415, 0.22", "-129.574, -215.187, -106.435, 0.22", "-129.77, -215.756, -106.637, 1.03", "-130.005, -216.376, -106.848, 1.03", "-130.031, -216.438, -106.867, 1.03", "-130.367, -217.129, -107.063, 1.03", "-130.399, -217.188, -107.082, 1.03", "-131.147, -218.532, -107.538, 0.22", "-132.992, -221.651, -108.601, 0.22", "-133.24, -222.051, -108.744, 1.33", "-133.685, -222.728, -108.965, 1.33", "-133.723, -222.784, -108.985, 1.33", "-134.336, -223.693, -109.311, 0.15", "-134.805, -224.354, -109.537, 0.15", "-134.844, -224.406, -109.564, 0.15", "-136.291, -226.463, -110.576, 0.15", "-137.037, -227.628, -111.106, 1.47", "-137.393, -228.234, -111.348, 1.47", "-137.63, -228.687, -111.527, 1.47", "-138.161, -229.864, -111.999, 0.22", "-139.171, -232.575, -113.05, 0.22", "-139.355, -233.259, -113.348, 1.11", "-139.572, -234.221, -113.764, 1.11", "-139.79, -235.582, -114.381, 0.29", "-139.864, -236.501, -114.823, 0.29", "-139.864, -237.525, -115.333, 0.29", "-139.713, -239.126, -116.283, 0.15", "-139.703, -239.217, -116.337, 0.15", "-139.567, -240.22, -116.929, 0.15", "-139.399, -241.529, -118.001, 1.77", "-139.36, -241.858, -118.364, 2.65", "-139.353, -241.904, -118.416, 2.65", "-139.304, -242.241, -118.795, 2.65", "-139.295, -242.293, -118.856, 2.65", "-138.7, -245.112, -122.384, 0.15", "-138.69, -245.149, -122.444, 0.15", "-138.403, -246.093, -124.185, 0.15", "-138.321, -246.316, -124.605, 1.11", "-138.291, -246.384, -124.736, 1.11", "-138.162, -246.645, -125.231, 1.25", "-136.615, -249.219, -129.894, 0.22", "-136.59, -249.254, -129.962, 0.22", "-136.278, -249.624, -130.827, 0.22", "-136.207, -249.706, -131.01, 0.59", "-136.153, -249.77, -131.142, 0.59", "-135.996, -249.981, -131.539, 0.59", "-135.498, -250.766, -132.528, 1.25", "-135.477, -250.815, -132.588, 1.25", "-135.235, -251.714, -133.731, 1.25", "-135.227, -251.768, -133.789, 1.25", "-135.199, -253.045, -135.02, 0.22", "-135.207, -253.152, -135.11, 0.22", "-135.328, -254.064, -135.731, 0.22", "-135.336, -254.122, -135.77, 0.22", "-135.502, -255.219, -136.466, 0.22", "-135.758, -256.801, -137.44, 1.18", "-135.861, -257.442, -137.807, 2.06", "-135.955, -258.003, -138.141, 2.06", "-136.301, -259.973, -139.444, 0.22", "-136.433, -260.663, -139.923, 0.22", "-136.462, -260.797, -140.016, 0.52", "-136.57, -261.292, -140.318, 0.52", "-136.584, -261.361, -140.356, 0.52", "-136.783, -262.273, -140.769, 0.22", "-136.809, -262.426, -140.825, 0.22", "-136.962, -263.441, -141.248, 0.22", "-137.002, -263.705, -141.362, 0.96", "-137.146, -264.511, -141.752, 0.96", "-137.159, -264.573, -141.782, 0.96", "-137.454, -265.78, -142.374, 0.22", "-137.782, -267.067, -143.056, 0.22", "-137.802, -267.15, -143.119, 0.22", "-137.96, -267.798, -143.614, 1.25", "-138.049, -268.128, -143.865, 1.55", "-138.104, -268.302, -143.987, 1.55", "-138.207, -268.593, -144.174, 1.55", "-138.851, -270.251, -145.262, 0.22", "-139.365, -271.524, -146.034, 0.22", "-139.522, -271.874, -146.23, 0.44", "-139.748, -272.301, -146.454, 0.44", "-139.829, -272.426, -146.514, 0.15", "-140.24, -272.868, -146.909, 0.15", "-140.289, -272.91, -146.956, 0.15", "-140.838, -273.325, -147.577, 1.11", "-141.302, -273.67, -148.168, 1.33", "-141.422, -273.759, -148.33, 1.33", "-143.518, -275.27, -151.204, 0.22", "-144.061, -275.644, -151.948, 0.22", "-144.106, -275.672, -152.008, 0.22", "-144.706, -276.016, -152.801, 1.55", "-144.985, -276.177, -153.143, 1.99", "-145.029, -276.206, -153.189, 1.99", "-145.646, -276.663, -153.651, 1.99", "-147.245, -277.893, -154.881, 0.22", "-147.618, -278.218, -155.161, 0.22", "-148.216, -278.849, -155.66, 0.22", "-148.776, -279.587, -156.308, 0.22", "-148.805, -279.634, -156.351, 0.22", "-148.97, -280.147, -156.757, 1.25", "-149.056, -280.748, -157.162, 1.55", "-149.132, -281.983, -158.009, 0.74", "-149.131, -283.137, -158.832, 0.22", "-149.129, -283.195, -158.871, 0.22", "-149.015, -285.067, -159.983, 0.22", "-149.008, -285.156, -160.026, 0.44", "-148.968, -285.575, -160.178, 0.44", "-148.951, -285.738, -160.2, 0.44", "-148.866, -286.546, -160.2, 0.22", "-148.86, -286.626, -160.2, 0.22", "-148.91, -286.912, -160.2, 0.52", "-149.025, -287.336, -160.204, 0.52", "-149.053, -287.412, -160.205, 0.52", "-149.163, -287.654, -160.21, 0.22", "-149.198, -287.715, -160.211, 0.22", "-150.15, -289.249, -160.256, 0.22", "-150.238, -289.384, -160.26, 0.22", "-150.356, -289.56, -160.252, 0.66", "-150.556, -289.863, -160.223, 0.66", "-150.593, -289.922, -160.215, 0.66", "-150.818, -290.289, -160.156, 0.15", "-151.626, -291.715, -159.837, 0.15", "-151.975, -292.364, -159.681, 0.52", "-152.048, -292.508, -159.644, 0.52", "-152.264, -292.953, -159.519, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.96504, 86.9865, -3.09842, 0.59", "-5.32755, 87.7987, -2.87062, 0.59", "-5.88003, 89.0018, -2.5483, 0.59", "-6.26979, 89.8675, -2.3265, 0.59", "-6.99194, 91.4744, -1.92795, 0.59", "-7.50442, 92.6109, -1.65458, 0.59", "-7.89245, 93.4753, -1.42221, 0.59", "-8.21678, 94.2009, -1.22712, 1.03", "-8.37188, 94.5373, -1.14897, 1.03", "-8.45268, 94.7165, -1.09037, 1.03", "-8.5549, 94.9437, -0.996369, 1.03", "-9.01811, 95.9735, -0.539113, 0.81", "-9.34252, 96.6943, -0.224063, 0.81", "-9.7904, 97.6683, 0.202632, 0.74", "-10.2457, 98.6105, 0.585967, 1.18", "-10.5145, 99.1394, 0.798217, 1.18", "-10.843, 99.7167, 1.00479, 1.18", "-10.8949, 99.798, 1.02725, 1.18", "-11.2096, 100.242, 1.13681, 1.18", "-11.6429, 100.816, 1.25204, 1.18", "-12.3611, 101.718, 1.38116, 1.03", "-13.2502, 102.8, 1.53053, 0.88", "-14.0888, 103.808, 1.66088, 0.88", "-14.7149, 104.573, 1.73447, 1.03", "-15.1666, 105.153, 1.76719, 1.03", "-15.7379, 105.946, 1.77634, 1.03", "-15.7822, 106.013, 1.77388, 1.03", "-16.2411, 106.767, 1.72481, 0.88", "-16.6932, 107.619, 1.65249, 0.81", "-17.2552, 108.916, 1.53126, 0.81", "-17.7042, 110.179, 1.44591, 0.81", "-17.7223, 110.247, 1.4433, 0.81", "-17.887, 111.074, 1.43448, 0.81", "-18.0257, 112.308, 1.45568, 0.52", "-18.0596, 113.322, 1.5072, 0.52", "-18.0209, 114.222, 1.62403, 1.03", "-17.9081, 115.375, 1.8546, 1.4", "-17.8323, 116.048, 2.02847, 1.69", "-17.735, 116.765, 2.26732, 1.69", "-17.7273, 116.829, 2.29505, 1.69", "-17.651, 118.137, 2.95497, 1.11", "-17.654, 118.197, 2.98984, 1.11", "-17.7091, 118.562, 3.24033, 0.66", "-17.8138, 118.962, 3.53798, 0.66", "-18.148, 119.958, 4.29766, 0.59", "-18.3326, 120.422, 4.62842, 0.59", "-18.725, 121.245, 5.14178, 0.59", "-18.7764, 121.337, 5.19816, 0.59", "-19.1994, 121.992, 5.64748, 0.66", "-19.2381, 122.047, 5.69071, 0.66", "-19.5386, 122.471, 6.0203, 0.66", "-19.7845, 122.834, 6.32333, 0.88", "-20.1491, 123.397, 6.80352, 0.88", "-20.718, 124.295, 7.54906, 0.88", "-21.2235, 125.116, 8.28039, 0.44", "-21.5031, 125.589, 8.70656, 0.44", "-21.9418, 126.38, 9.40011, 1.11", "-21.9693, 126.43, 9.44069, 1.11", "-22.3274, 127.103, 9.91232, 1.11", "-22.9799, 128.3, 10.5669, 1.11", "-23.2244, 128.731, 10.7599, 0.81", "-23.5689, 129.326, 10.978, 1.11", "-23.9048, 129.902, 11.1229, 0.81", "-24.0948, 130.222, 11.1835, 0.74", "-24.3664, 130.674, 11.2348, 0.44", "-24.5895, 131.039, 11.2369, 0.29", "-25.1844, 131.988, 11.2433, 0.29", "-25.436, 132.391, 11.2464, 0.74", "-25.7171, 132.837, 11.2287, 1.11", "-25.7553, 132.895, 11.2237, 1.11", "-26.0283, 133.307, 11.1729, 1.11", "-26.3179, 133.742, 11.1087, 1.18", "-26.738, 134.35, 10.9947, 1.11", "-27.1747, 134.976, 10.8705, 0.88", "-27.2145, 135.032, 10.8589, 0.88", "-27.5234, 135.462, 10.7752, 0.44", "-28.0419, 136.2, 10.631, 0.44", "-28.5821, 136.988, 10.4893, 0.44", "-28.6204, 137.046, 10.4806, 0.44", "-28.8465, 137.41, 10.4409, 0.81", "-29.1932, 137.986, 10.3999, 1.18", "-29.6363, 138.754, 10.3765, 1.4", "-29.9323, 139.307, 10.4413, 1.4", "-30.1334, 139.742, 10.5497, 1.18", "-30.3344, 140.213, 10.6952, 0.88", "-30.5462, 140.744, 10.8824, 0.81", "-30.8903, 141.631, 11.2178, 0.59", "-31.4691, 143.105, 11.8013, 0.52", "-31.9089, 144.223, 12.2266, 0.52", "-31.9623, 144.355, 12.2728, 0.52", "-32.2707, 145.085, 12.4782, 0.52", "-32.5975, 145.837, 12.6268, 0.74", "-32.834, 146.38, 12.684, 0.74", "-33.0623, 146.886, 12.6943, 0.96", "-33.3394, 147.483, 12.7018, 0.96", "-33.6458, 148.201, 12.7261, 0.96", "-33.6986, 148.341, 12.7332, 0.96", "-34.0517, 149.39, 12.8431, 0.96", "-34.3567, 150.336, 12.9793, 1.18", "-34.5371, 150.958, 13.0901, 1.55", "-34.7546, 151.796, 13.2665, 1.55", "-34.9515, 152.637, 13.5126, 1.55", "-35.1615, 153.544, 13.8162, 0.88", "-35.1952, 153.696, 13.8738, 0.88", "-35.3217, 154.246, 14.0762, 0.88", "-35.3573, 154.373, 14.1227, 0.88", "-35.6942, 155.367, 14.56, 0.88", "-35.9127, 155.993, 14.8305, 0.88", "-35.9308, 156.046, 14.8507, 0.88", "-36.2229, 156.906, 15.1616, 0.81", "-36.5404, 157.831, 15.4578, 0.81", "-36.9889, 159.237, 15.8932, 0.66", "-37.2461, 160.124, 16.1294, 0.66", "-37.4413, 160.884, 16.3435, 0.66", "-37.4568, 160.95, 16.362, 0.66", "-37.7157, 162.154, 16.685, 0.52", "-37.9148, 163.11, 16.9095, 0.37", "-38.2306, 164.56, 17.1677, 0.37", "-38.4051, 165.292, 17.2899, 0.88", "-38.5357, 165.823, 17.3835, 1.18", "-38.7797, 166.772, 17.5463, 1.18", "-38.919, 167.279, 17.6288, 1.18", "-39.1262, 167.988, 17.7236, 0.74", "-39.4926, 169.172, 17.8833, 0.74", "-39.7865, 170.08, 17.9898, 1.03", "-39.9965, 170.74, 18.0654, 1.33", "-40.0264, 170.834, 18.0729, 1.33", "-40.1474, 171.193, 18.0791, 1.33", "-40.3594, 171.778, 18.0511, 1.03", "-40.624, 172.485, 17.9396, 0.81", "-40.9199, 173.232, 17.7608, 0.59", "-41.3054, 174.175, 17.4666, 0.59", "-41.558, 174.739, 17.267, 0.59", "-41.8529, 175.344, 16.9983, 0.88", "-42.2261, 176.035, 16.6409, 1.11", "-42.5447, 176.568, 16.3269, 1.11", "-42.9852, 177.251, 15.9124, 0.88", "-43.3935, 177.863, 15.5196, 0.88", "-43.8693, 178.586, 15.0525, 0.52", "-44.1596, 179.012, 14.781, 0.52", "-44.2103, 179.085, 14.7377, 0.52", "-44.701, 179.837, 14.3348, 0.52", "-45.3107, 180.838, 13.8896, 0.81", "-45.3841, 180.967, 13.8413, 0.81", "-45.7797, 181.685, 13.6552, 0.81", "-45.8165, 181.754, 13.6397, 0.81", "-46.1513, 182.412, 13.5334, 1.03", "-46.182, 182.474, 13.5284, 1.03", "-46.553, 183.284, 13.5071, 1.33", "-46.8283, 183.922, 13.4734, 1.33", "-46.8504, 183.978, 13.4684, 1.33", "-47.1215, 184.668, 13.394, 1.55", "-47.3191, 185.183, 13.3308, 1.55", "-47.645, 186.072, 13.2177, 0.74", "-47.9983, 187.099, 13.0832, 0.59", "-48.2162, 187.772, 12.9992, 0.88", "-48.4297, 188.456, 12.9217, 1.18", "-48.6869, 189.349, 12.8379, 1.4", "-48.817, 189.862, 12.7931, 1.77", "-48.9292, 190.378, 12.7571, 1.47", "-49.0902, 191.244, 12.6965, 1.03", "-49.1993, 191.911, 12.6533, 0.66", "-49.3397, 192.921, 12.5835, 0.66", "-49.4564, 193.869, 12.5184, 0.88", "-49.5474, 194.666, 12.4657, 1.18", "-49.615, 195.256, 12.4512, 1.33", "-49.6252, 195.326, 12.4526, 1.33", "-49.7549, 195.894, 12.4866, 1.33", "-50.0111, 196.746, 12.5623, 1.03", "-50.3237, 197.64, 12.6625, 0.59", "-50.6344, 198.449, 12.7539, 0.59", "-51.1309, 199.651, 12.9106, 0.59", "-51.775, 201.123, 13.1133, 0.59", "-52.2784, 202.221, 13.2674, 0.59", "-52.3078, 202.284, 13.2761, 0.59", "-52.5041, 202.702, 13.3276, 0.88", "-52.9421, 203.681, 13.4157, 0.81", "-53.2436, 204.44, 13.468, 1.11", "-53.4919, 205.142, 13.4972, 1.33", "-53.6173, 205.498, 13.4971, 1.33", "-53.7746, 205.963, 13.4813, 1.33", "-54.0509, 206.797, 13.4068, 0.81", "-54.4325, 207.99, 13.2372, 0.74", "-54.6255, 208.61, 13.1378, 0.52", "-54.8697, 209.374, 13.0106, 0.29", "-55.1738, 210.333, 12.7868, 0.29", "-55.3936, 211.105, 12.541, 0.88", "-55.4171, 211.196, 12.5074, 0.88", "-55.5369, 211.661, 12.3228, 1.55", "-55.7585, 212.546, 11.9538, 1.92", "-56.1304, 213.976, 11.3575, 1.92", "-56.4601, 215.072, 10.9175, 1.11", "-56.7516, 215.965, 10.5882, 0.96", "-57.0038, 216.643, 10.3833, 0.96", "-57.0307, 216.706, 10.3695, 0.96", "-57.3688, 217.381, 10.311, 1.18", "-57.8427, 218.186, 10.4158, 1.18", "-57.8799, 218.244, 10.4295, 1.18", "-58.5179, 219.158, 10.6821, 0.81", "-58.9417, 219.749, 10.8573, 0.59", "-59.7318, 220.771, 11.1556, 0.59", "-60.5582, 221.782, 11.4525, 0.59", "-60.6083, 221.841, 11.4721, 0.59", "-61.481, 222.814, 11.8032, 0.59", "-61.5348, 222.87, 11.8221, 0.59", "-62.5713, 223.874, 12.1692, 0.59", "-62.6421, 223.938, 12.1952, 0.59", "-63.4296, 224.623, 12.4701, 0.96", "-63.9181, 225.06, 12.6542, 1.69", "-64.279, 225.402, 12.7948, 2.06", "-64.8879, 226.001, 13.0277, 2.06", "-65.5983, 226.707, 13.3341, 1.77", "-66.2901, 227.373, 13.6266, 1.11", "-66.9243, 227.969, 13.9041, 0.29", "-67.8363, 228.8, 14.3554, 0.29", "-67.8924, 228.849, 14.3847, 0.29", "-68.71, 229.554, 14.8187, 0.29", "-68.9887, 229.79, 14.9567, 0.29", "-69.4526, 230.175, 15.2597, 0.66", "-69.7629, 230.419, 15.4984, 0.96", "-70.1061, 230.723, 15.775, 0.96", "-70.4873, 231.122, 16.0791, 0.96", "-70.5267, 231.171, 16.1096, 0.96", "-71.1692, 232.036, 16.6263, 0.37", "-71.2719, 232.188, 16.7009, 0.37", "-71.8044, 233.062, 17.0563, 0.37", "-72.3417, 233.972, 17.2564, 0.37", "-72.498, 234.24, 17.2688, 0.74", "-72.5325, 234.301, 17.2634, 0.74", "-73.1789, 235.483, 16.9976, 0.74", "-73.711, 236.459, 16.7247, 0.52", "-74.4933, 237.918, 16.2232, 0.59", "-74.8225, 238.521, 15.9911, 0.44", "-74.8549, 238.58, 15.9725, 0.44", "-75.261, 239.318, 15.7979, 0.44", "-75.6213, 239.946, 15.7179, 0.81", "-75.8128, 240.27, 15.7248, 1.33", "-76.1722, 240.834, 15.8116, 1.33", "-76.7518, 241.61, 15.9325, 0.88", "-77.0476, 241.968, 15.9954, 0.88", "-77.5001, 242.457, 16.0904, 0.59", "-77.8678, 242.828, 16.1647, 0.29", "-78.6369, 243.533, 16.3008, 0.29", "-79.4076, 244.186, 16.4124, 0.29", "-79.7323, 244.432, 16.4416, 0.29", "-80.0777, 244.686, 16.4828, 0.81", "-80.1342, 244.726, 16.4909, 0.81", "-80.5621, 245.035, 16.5613, 1.03", "-80.6458, 245.099, 16.577, 1.03", "-81.1454, 245.541, 16.6681, 1.03", "-81.6435, 246.036, 16.7429, 0.29", "-81.9402, 246.388, 16.7869, 0.29", "-82.0332, 246.519, 16.7987, 0.29", "-82.0686, 246.579, 16.8023, 0.29", "-82.4369, 247.32, 16.8263, 0.29", "-82.6002, 247.724, 16.8287, 0.59", "-82.846, 248.474, 16.8157, 1.33", "-83.0124, 249.063, 16.8057, 1.47", "-83.1403, 249.576, 16.7981, 1.47", "-83.277, 250.17, 16.7908, 1.03", "-83.3905, 250.672, 16.7859, 0.66", "-83.5887, 251.533, 16.7797, 0.37", "-83.6068, 251.611, 16.7794, 0.37", "-83.9384, 252.983, 16.7794, 0.37", "-84.1472, 253.818, 16.7794, 0.88", "-84.3338, 254.555, 16.7794, 0.96", "-84.4271, 254.92, 16.7794, 1.18", "-84.4521, 255.016, 16.7794, 1.18", "-84.6168, 255.672, 16.7794, 0.96", "-84.7743, 256.401, 16.7794, 0.96", "-84.8623, 256.903, 16.7794, 1.25", "-84.9772, 257.719, 16.7794, 1.03", "-85.055, 258.334, 16.7794, 0.59", "-85.1386, 259.063, 16.7794, 0.29", "-85.2899, 260.523, 16.7794, 0.29", "-85.3834, 261.468, 16.7794, 0.29", "-85.4382, 262.061, 16.7794, 0.74", "-85.5079, 262.872, 16.7634, 0.96", "-85.5634, 263.534, 16.7405, 1.11", "-85.5892, 263.822, 16.7267, 1.11", "-85.6455, 264.424, 16.6752, 0.37", "-85.7388, 265.363, 16.5687, 0.37", "-85.9318, 267.071, 16.3392, 0.37", "-85.9966, 267.578, 16.265, 0.96", "-86.0081, 267.656, 16.2533, 0.96", "-86.156, 268.513, 16.088, 1.25", "-86.292, 269.215, 15.9269, 1.25", "-86.4476, 269.903, 15.7494, 1.4", "-86.6701, 270.761, 15.5143, 1.55", "-86.831, 271.327, 15.3576, 1.55", "-87.2108, 272.551, 15.068, 0.22", "-87.258, 272.691, 15.0417, 0.22", "-87.3878, 273.132, 14.9743, 0.22", "-87.4245, 273.292, 14.9582, 0.22", "-87.5015, 273.842, 14.9478, 0.22", "-87.5532, 274.482, 15.0664, 0.29", "-87.5628, 274.702, 15.1453, 0.29", "-87.6425, 275.609, 15.495, 0.29", "-87.6505, 275.683, 15.525, 0.29", "-87.7164, 276.136, 15.7592, 0.29", "-87.93, 277.089, 16.3426, 0.29", "-87.9482, 277.145, 16.3802, 0.29", "-88.2195, 277.689, 16.7857, 0.29", "-88.2603, 277.745, 16.8257, 0.29", "-88.8848, 278.505, 17.2847, 0.88", "-89.1208, 278.756, 17.4015, 1.03", "-89.1696, 278.804, 17.4156, 1.03", "-89.667, 279.29, 17.5286, 1.03", "-90.4976, 280.069, 17.6164, 0.29", "-90.8092, 280.346, 17.6156, 0.29", "-91.3697, 280.822, 17.5734, 0.29", "-91.8294, 281.199, 17.5468, 0.29", "-91.8841, 281.243, 17.5447, 0.29", "-92.3796, 281.615, 17.5383, 0.29", "-92.4455, 281.661, 17.5394, 0.29", "-93.1009, 282.122, 17.5782, 0.29", "-93.1009, 282.122, 17.5782, 0.74", "-93.278, 282.263, 17.6235, 0.74", "-93.448, 282.405, 17.688, 0.74", "-93.5578, 282.513, 17.7612, 0.74", "-93.6574, 282.618, 17.8207, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.96504, 86.9865, -3.09842, 1.11", "-4.68443, 87.942, -3.31903, 1.11", "-4.36887, 88.9912, -3.62534, 0.96", "-3.94597, 90.4012, -4.11016, 0.81", "-3.71239, 91.2455, -4.41193, 0.81", "-3.6795, 91.3839, -4.45963, 0.81", "-3.50571, 92.2672, -4.77563, 0.81", "-3.35414, 93.3714, -5.19322, 0.81", "-3.31287, 94.1242, -5.46099, 1.03", "-3.33463, 94.7572, -5.64538, 1.33", "-3.41645, 95.7485, -5.91654, 1.33", "-3.52704, 96.7871, -6.1692, 1.33", "-3.65179, 97.752, -6.3692, 1.47", "-3.79169, 98.9019, -6.55196, 1.47", "-3.93029, 100.174, -6.74516, 1.47", "-4.0577, 101.58, -6.95619, 1.47", "-4.11754, 102.379, -7.07104, 1.18", "-4.15945, 103.176, -7.16794, 1.18", "-4.18036, 103.916, -7.25659, 1.47", "-4.19303, 104.957, -7.36876, 1.47", "-4.18983, 105.995, -7.44011, 1.69", "-4.1896, 106.065, -7.44182, 1.69", "-4.16744, 107.168, -7.44678, 1.69", "-4.11966, 108.407, -7.42957, 1.69", "-4.05177, 109.574, -7.39258, 1.69", "-3.96904, 110.524, -7.3456, 1.69", "-3.89005, 111.252, -7.31098, 1.33", "-3.75079, 112.452, -7.27318, 1.25", "-3.64748, 113.327, -7.25906, 1.25", "-3.54468, 114.23, -7.27225, 1.03", "-3.4337, 115.277, -7.32024, 0.96", "-3.38694, 116.073, -7.38062, 0.96", "-3.38051, 116.928, -7.45164, 1.18", "-3.41558, 117.601, -7.50955, 1.18", "-3.50528, 118.483, -7.58263, 1.18", "-3.51517, 118.552, -7.58793, 1.18", "-3.88749, 120.611, -7.72297, 1.18", "-4.04977, 121.398, -7.7618, 1.4", "-4.24668, 122.283, -7.78525, 1.69", "-4.41305, 123.027, -7.80264, 1.92", "-4.50454, 123.463, -7.81102, 2.06", "-4.65172, 124.238, -7.79146, 1.84", "-4.73994, 124.785, -7.75548, 1.69", "-4.87913, 125.803, -7.6845, 1.69", "-5.06407, 127.495, -7.56793, 1.69", "-5.15921, 128.663, -7.49265, 1.69", "-5.26025, 130.181, -7.40425, 1.84", "-5.3225, 131.269, -7.32924, 1.84", "-5.37635, 132.216, -7.25819, 1.33", "-5.46487, 133.601, -7.149, 1.25", "-5.5681, 134.905, -7.0476, 1.11", "-5.69558, 136.156, -6.97326, 1.11", "-5.8267, 137.243, -6.9416, 1.11", "-5.94553, 138.127, -6.90386, 1.4", "-6.02272, 138.649, -6.8716, 1.77", "-6.17232, 139.611, -6.81859, 1.99", "-6.32343, 140.64, -6.77736, 1.99", "-6.42424, 141.448, -6.75925, 1.47", "-6.48387, 142.178, -6.75925, 1.18", "-6.51179, 142.854, -6.75925, 1.11", "-6.51077, 144.026, -6.73252, 0.96", "-6.44431, 145.483, -6.67027, 0.96", "-6.43939, 145.553, -6.66679, 0.96", "-6.29596, 147.182, -6.57975, 0.96", "-6.22914, 147.921, -6.53992, 0.74", "-6.15779, 148.706, -6.49963, 0.59", "-6.06176, 149.879, -6.4254, 0.59", "-6.0033, 150.788, -6.36281, 1.25", "-5.96565, 151.668, -6.30309, 1.84", "-5.95268, 152.759, -6.23446, 1.84", "-5.96042, 153.928, -6.18656, 1.84", "-5.98664, 154.95, -6.14151, 1.84", "-6.01538, 155.758, -6.0884, 1.62", "-6.04181, 156.485, -6.02716, 1.33", "-6.09178, 157.657, -5.91978, 1.11", "-6.13885, 158.77, -5.81697, 1.11", "-6.19473, 160.005, -5.68499, 1.11", "-6.19774, 160.074, -5.67723, 1.11", "-6.21321, 160.947, -5.56571, 0.81", "-6.20603, 161.383, -5.50543, 0.74", "-6.15171, 162.461, -5.35499, 0.74", "-6.05939, 163.796, -5.19351, 0.52", "-6.05447, 163.866, -5.18802, 0.52", "-6.00412, 164.775, -5.12796, 0.52", "-5.98823, 165.372, -5.07547, 1.03", "-5.98625, 166.33, -4.98304, 1.33", "-6.00947, 167.338, -4.88548, 1.92", "-6.03527, 167.955, -4.83109, 1.92", "-6.09814, 168.981, -4.73263, 1.33", "-6.18599, 170.067, -4.62023, 0.59", "-6.29766, 171.448, -4.49055, 0.59", "-6.33186, 172.03, -4.44452, 0.81", "-6.35071, 172.553, -4.41179, 0.88", "-6.35036, 172.623, -4.41023, 0.88", "-6.33791, 173.505, -4.43801, 0.88", "-6.33051, 174.163, -4.5006, 0.66", "-6.36915, 175.119, -4.59993, 0.66", "-6.3752, 175.189, -4.60662, 0.66", "-6.47645, 175.9, -4.66564, 0.66", "-6.62369, 176.678, -4.7176, 0.66", "-6.78144, 177.335, -4.74963, 0.96", "-6.98981, 178.063, -4.76849, 1.25", "-7.25679, 178.904, -4.78442, 1.84", "-7.50694, 179.648, -4.79243, 1.99", "-7.73564, 180.306, -4.79243, 1.77", "-7.90473, 180.81, -4.79243, 1.69", "-8.15205, 181.525, -4.79243, 1.55", "-8.36771, 182.148, -4.79243, 1.4", "-8.56446, 182.747, -4.79243, 1.03", "-8.75712, 183.382, -4.79243, 0.88", "-9.03283, 184.363, -4.80867, 0.66", "-9.15142, 184.81, -4.82113, 0.44", "-9.16799, 184.878, -4.82351, 0.44", "-9.41382, 185.952, -4.86598, 0.44", "-9.64556, 187.086, -4.94154, 0.44", "-9.83698, 188.071, -5.02551, 1.11", "-10.0109, 189.044, -5.11994, 1.4", "-10.1428, 189.833, -5.19983, 1.69", "-10.2256, 190.333, -5.24996, 2.14", "-10.3738, 191.33, -5.34532, 2.14", "-10.4859, 192.295, -5.43081, 1.69", "-10.5499, 192.953, -5.47987, 1.4", "-10.6022, 193.61, -5.52363, 1.18", "-10.6754, 194.716, -5.58317, 0.81", "-10.7446, 195.886, -5.62597, 0.81", "-10.8242, 196.984, -5.6383, 0.66", "-10.8309, 197.053, -5.63803, 0.66", "-10.9272, 197.777, -5.62202, 0.52", "-11.0477, 198.43, -5.59499, 0.37", "-11.1422, 198.817, -5.57016, 0.37", "-11.4117, 199.649, -5.49767, 0.37", "-11.6415, 200.248, -5.43553, 0.74", "-11.8463, 200.74, -5.38568, 0.74", "-12.0729, 201.244, -5.33585, 0.81", "-12.1414, 201.394, -5.32349, 0.81", "-12.3333, 201.842, -5.29704, 0.81", "-12.4868, 202.244, -5.28662, 1.03", "-12.5111, 202.31, -5.28712, 1.03", "-12.8149, 203.236, -5.29916, 1.03", "-13.046, 204.096, -5.30974, 1.18", "-13.0591, 204.155, -5.3104, 1.18", "-13.2237, 205.037, -5.30972, 1.18", "-13.3451, 205.822, -5.30208, 1.69", "-13.4836, 206.903, -5.28387, 1.92", "-13.5693, 207.852, -5.26165, 1.92", "-13.6025, 208.359, -5.22048, 1.77", "-13.6415, 209.043, -5.13624, 1.25", "-13.6731, 209.625, -5.04519, 0.96", "-13.7104, 210.195, -4.94374, 0.66", "-13.8251, 211.272, -4.75398, 0.66", "-13.9904, 212.483, -4.50229, 0.66", "-14.1158, 213.336, -4.31479, 0.66", "-14.238, 214.137, -4.13453, 0.96", "-14.3923, 215.168, -3.90072, 0.96", "-14.6346, 216.928, -3.52141, 0.96", "-14.753, 217.998, -3.32196, 0.52", "-14.7936, 218.586, -3.24265, 0.52", "-14.7959, 218.684, -3.23084, 0.52", "-14.786, 219.425, -3.15725, 0.52", "-14.7347, 220.307, -3.11595, 1.03", "-14.6298, 221.41, -3.12275, 1.62", "-14.5289, 222.357, -3.17685, 2.28", "-14.384, 223.658, -3.2632, 2.58", "-14.3035, 224.328, -3.31116, 2.58", "-14.1975, 225.2, -3.37727, 0.96", "-14.1894, 225.269, -3.38424, 0.96", "-14.0809, 226.378, -3.51479, 0.96", "-14.042, 226.971, -3.58741, 1.55", "-14.0213, 227.872, -3.69138, 1.18", "-14.0454, 228.752, -3.77566, 1.18", "-14.1349, 229.884, -3.83766, 1.18", "-14.2191, 230.642, -3.8687, 0.96", "-14.3645, 231.606, -3.89318, 0.81", "-14.5329, 232.566, -3.90096, 0.74", "-14.7596, 233.752, -3.88844, 0.74", "-15.0165, 235.163, -3.84265, 0.74", "-15.033, 235.26, -3.83738, 0.74", "-15.1448, 235.997, -3.78016, 1.11", "-15.2971, 237.091, -3.67682, 1.33", "-15.4311, 238.187, -3.56226, 1.33", "-15.5631, 239.344, -3.4415, 1.33", "-15.6771, 240.363, -3.34099, 1.33", "-15.7991, 241.38, -3.24592, 1.33", "-15.8883, 242.037, -3.19335, 0.81", "-16.0078, 242.759, -3.14442, 0.66", "-16.2837, 244.152, -3.07558, 0.66", "-16.3026, 244.23, -3.0736, 0.66", "-16.7794, 245.97, -3.07322, 0.66", "-17.0128, 246.744, -3.09636, 1.25", "-17.2067, 247.343, -3.11453, 1.84", "-17.5023, 248.2, -3.14187, 2.14", "-17.768, 248.947, -3.16641, 2.14", "-17.912, 249.37, -3.17845, 2.14", "-18.1421, 250.097, -3.19394, 1.84", "-18.2936, 250.677, -3.19985, 1.62", "-18.4426, 251.573, -3.20785, 1.11", "-18.451, 251.643, -3.20906, 1.11", "-18.5726, 253.044, -3.2404, 1.03", "-18.6289, 253.856, -3.261, 0.96", "-18.6942, 255.316, -3.3007, 0.88", "-18.7399, 257.265, -3.3556, 0.88", "-18.7386, 257.852, -3.37189, 1.25", "-18.721, 258.584, -3.39242, 1.47", "-18.7102, 258.734, -3.39662, 1.47", "-18.6334, 259.406, -3.42231, 1.47", "-18.6184, 259.504, -3.42682, 1.47", "-18.4892, 260.237, -3.46124, 1.33", "-18.2799, 261.318, -3.50583, 1.18", "-18.0561, 262.456, -3.55375, 1.18", "-17.9231, 263.151, -3.58312, 1.18", "-17.7785, 263.961, -3.61604, 1.03", "-17.6518, 264.834, -3.64709, 0.96", "-17.572, 265.488, -3.68109, 0.88", "-17.4905, 266.305, -3.73364, 0.88", "-17.4876, 266.374, -3.73858, 0.88", "-17.4854, 267.474, -3.81657, 0.88", "-17.552, 268.797, -3.92528, 0.88", "-17.6111, 269.429, -3.98041, 1.11", "-17.621, 269.498, -3.98635, 1.11", "-17.785, 270.371, -4.05917, 1.11", "-17.8078, 270.474, -4.06859, 1.11", "-18.0441, 271.355, -4.16422, 1.11", "-18.2452, 272.207, -4.25375, 1.33", "-18.3591, 272.823, -4.32345, 1.33", "-18.3691, 272.901, -4.33344, 1.33", "-18.4482, 273.912, -4.47157, 0.59", "-18.4731, 274.341, -4.53101, 0.37", "-18.5247, 275.749, -4.72814, 0.37", "-18.5479, 276.825, -4.87687, 0.96", "-18.5635, 277.917, -5.01332, 1.25", "-18.5727, 278.285, -5.05122, 1.62", "-18.5956, 278.798, -5.08619, 1.77", "-18.6526, 279.326, -5.10548, 1.77", "-18.6662, 279.395, -5.10635, 1.77", "-18.8624, 280.221, -5.06026, 1.11", "-18.9601, 280.591, -5.028, 0.88", "-19.17, 281.32, -4.95504, 0.81", "-19.6312, 282.915, -4.78378, 0.81", "-19.9129, 283.932, -4.67997, 0.81", "-20.1016, 284.653, -4.61125, 0.59", "-20.3491, 285.715, -4.51719, 0.59", "-20.635, 287.119, -4.40854, 0.59", "-20.7753, 287.968, -4.3526, 0.59", "-20.8839, 288.85, -4.31073, 1.25", "-20.9441, 289.507, -4.29657, 1.62", "-20.9921, 290.251, -4.30507, 2.06", "-21.0099, 291.05, -4.31174, 2.21", "-21.0048, 291.714, -4.30766, 2.21", "-20.9806, 292.447, -4.28516, 1.55", "-20.9517, 292.961, -4.25471, 1.11", "-20.9034, 293.468, -4.22332, 0.81", "-20.8398, 293.908, -4.19666, 0.66", "-20.6513, 294.858, -4.14645, 0.52", "-20.4903, 295.561, -4.11893, 0.52", "-20.4745, 295.629, -4.11732, 0.52", "-20.3603, 296.121, -4.11286, 0.52", "-20.1939, 296.918, -4.14108, 0.52", "-20.0637, 297.705, -4.20047, 0.81", "-19.9787, 298.506, -4.28045, 0.81", "-19.9517, 299.179, -4.34542, 1.03", "-19.9518, 299.259, -4.35186, 1.03", "-19.9778, 300.01, -4.39869, 1.11", "-20.0226, 300.886, -4.47328, 1.18", "-20.103, 301.978, -4.57782, 1.18", "-20.1928, 302.992, -4.67591, 1.33", "-20.2691, 303.748, -4.74492, 1.33", "-20.3669, 304.69, -4.82053, 1.33", "-20.4729, 305.696, -4.88667, 1.18", "-20.5982, 306.915, -4.96463, 0.96", "-20.6883, 307.861, -5.02094, 0.96", "-20.7611, 308.671, -5.06281, 1.25", "-20.8535, 309.776, -5.10742, 1.92", "-20.9381, 310.796, -5.13276, 2.8", "-21.0001, 311.603, -5.13276, 2.43", "-21.0699, 312.36, -5.13276, 1.62", "-21.1552, 312.984, -5.13276, 1.4", "-21.2444, 313.491, -5.13276, 1.03", "-21.2603, 313.559, -5.13433, 1.03", "-21.4558, 314.266, -5.16377, 0.88", "-21.7959, 315.393, -5.22511, 0.81", "-22.2137, 316.676, -5.30542, 0.81", "-22.2354, 316.742, -5.30976, 0.81", "-22.639, 317.956, -5.389, 0.81", "-22.8391, 318.571, -5.42797, 1.11", "-23.0001, 319.071, -5.45871, 1.11", "-23.1989, 319.728, -5.50647, 1.4", "-23.4469, 320.582, -5.57133, 1.47", "-23.5869, 321.185, -5.611, 1.47", "-23.6775, 321.686, -5.63743, 1.47", "-23.7492, 322.314, -5.67177, 1.47", "-23.7999, 323.054, -5.71323, 0.96", "-23.8115, 323.703, -5.74737, 0.88", "-23.7922, 325.184, -5.86354, 0.88", "-23.7906, 325.254, -5.87006, 0.88", "-23.771, 326.504, -6.02382, 0.88", "-23.7723, 326.583, -6.03508, 0.88", "-23.882, 327.805, -6.21416, 0.88", "-24.0099, 328.594, -6.36526, 0.74", "-24.1948, 329.393, -6.54566, 0.74", "-24.3453, 329.96, -6.6827, 0.96", "-24.603, 330.858, -6.91193, 0.96", "-24.9743, 332.202, -7.25867, 0.96", "-25.1543, 332.882, -7.4262, 0.37", "-25.2646, 333.375, -7.5266, 0.37", "-25.2762, 333.443, -7.53955, 0.37", "-25.3662, 334.186, -7.65094, 0.37", "-25.4177, 334.985, -7.75451, 0.96", "-25.4494, 335.942, -7.84517, 1.55", "-25.4763, 336.53, -7.87424, 1.77", "-25.4792, 336.6, -7.87677, 1.77", "-25.5027, 337.487, -7.89618, 1.55", "-25.5082, 338.067, -7.90012, 1.18", "-25.4933, 338.577, -7.9036, 1.03", "-25.4561, 339.24, -7.91601, 0.81", "-25.3869, 340.36, -7.94473, 0.81", "-25.3197, 341.401, -7.97573, 0.81", "-25.257, 342.282, -7.99317, 1.11", "-25.1769, 343.478, -8.00523, 1.4", "-25.1191, 344.429, -8.00698, 1.55", "-25.0546, 345.67, -7.9994, 1.84", "-25.0272, 346.549, -7.98629, 1.84", "-25.0126, 347.555, -7.96144, 2.06", "-25.0092, 348.214, -7.93777, 2.06", "-25.0058, 348.874, -7.90662, 1.84", "-25.0034, 349.453, -7.88161, 1.69", "-24.9986, 350.048, -7.87247, 1.55", "-25.0005, 350.698, -7.88243, 1.25", "-25.0087, 351.357, -7.92286, 1.11", "-25.0291, 352.681, -8.02843, 1.11", "-25.0308, 352.751, -8.03461, 1.11", "-25.0775, 353.812, -8.15082, 1.11", "-25.1524, 354.913, -8.27964, 1.11", "-25.2293, 355.826, -8.39202, 0.88", "-25.2966, 356.546, -8.48857, 0.88", "-25.4162, 357.788, -8.65839, 0.88", "-25.5771, 359.593, -8.89382, 0.88", "-25.6763, 360.789, -9.03543, 1.25", "-25.6844, 360.894, -9.04821, 1.25", "-25.7532, 361.943, -9.16772, 1.84", "-25.804, 362.888, -9.27376, 1.92", "-25.8262, 363.395, -9.325, 1.84", "-25.879, 364.271, -9.39145, 1.4", "-25.9423, 365.053, -9.44523, 0.81", "-26.0365, 365.79, -9.49664, 0.81", "-26.2106, 366.734, -9.5577, 0.66", "-26.4302, 367.682, -9.62408, 0.59", "-26.6914, 368.661, -9.7138, 0.59", "-26.7107, 368.727, -9.72085, 0.59", "-27.0131, 369.768, -9.85741, 1.25", "-27.2317, 370.518, -9.96966, 1.69", "-27.4108, 371.162, -10.0746, 1.69", "-27.6248, 372.061, -10.2425, 1.4", "-27.7622, 372.845, -10.3898, 0.88", "-27.9084, 373.94, -10.5805, 0.59", "-28.0971, 375.81, -10.858, 0.59", "-28.1025, 375.879, -10.8672, 0.59", "-28.1968, 377.303, -11.0266, 0.59", "-28.279, 378.708, -11.1402, 0.59", "-28.3431, 379.877, -11.2139, 0.59", "-28.3803, 380.687, -11.241, 0.96", "-28.3841, 380.793, -11.2397, 0.96", "-28.4398, 381.682, -11.1828, 1.18", "-28.5266, 382.485, -11.0787, 1.4", "-28.5368, 382.552, -11.0631, 1.4", "-28.6262, 383.115, -10.8943, 1.4", "-28.7611, 383.963, -10.6194, 1.4", "-28.9248, 385.017, -10.2739, 1.4", "-29.0813, 386.069, -9.91655, 1.4", "-29.2934, 387.537, -9.44148, 1.11", "-29.3023, 387.603, -9.42233, 1.11", "-29.4314, 388.585, -9.13398, 1.11", "-29.5507, 389.574, -8.87099, 1.11", "-29.5582, 389.641, -8.85287, 1.11", "-29.6667, 390.568, -8.62229, 1.18", "-29.7759, 391.348, -8.46281, 1.18", "-29.9368, 392.348, -8.2449, 0.81", "-30.1418, 393.47, -7.98398, 0.74", "-30.4367, 394.871, -7.66132, 0.74", "-30.5249, 395.275, -7.57592, 1.03", "-30.6765, 395.877, -7.46929, 1.4", "-30.6975, 395.954, -7.45969, 1.4", "-30.8505, 396.516, -7.42284, 1.4", "-31.0312, 397.187, -7.385, 0.96", "-31.1565, 397.686, -7.36349, 0.88", "-31.4153, 398.834, -7.31225, 0.88", "-31.7657, 400.531, -7.23407, 0.88", "-31.9106, 401.26, -7.20103, 1.18", "-32.0447, 401.974, -7.13735, 1.47", "-32.0562, 402.043, -7.12852, 1.47", "-32.1323, 402.62, -7.03531, 1.47", "-32.1376, 402.689, -7.02302, 1.47", "-32.1857, 403.497, -6.93167, 1.47", "-32.2458, 404.643, -6.84661, 1.18", "-32.2937, 405.375, -6.81812, 0.81", "-32.336, 405.968, -6.81297, 0.66", "-32.4493, 407.601, -6.8468, 0.66", "-32.5492, 408.986, -6.9353, 0.66", "-32.5538, 409.056, -6.94326, 0.66", "-32.6064, 409.828, -7.07796, 0.96", "-32.6564, 410.476, -7.19376, 1.33", "-32.7344, 411.264, -7.32605, 1.62", "-32.7771, 411.842, -7.40504, 1.33", "-32.7909, 412.241, -7.43094, 1.18", "-32.7916, 412.31, -7.43483, 1.18", "-32.7756, 412.747, -7.45214, 1.18", "-32.7447, 413.421, -7.46867, 0.96", "-32.6909, 414.38, -7.48042, 0.74", "-32.6075, 415.854, -7.48042, 0.74", "-32.6033, 415.934, -7.48042, 0.74", "-32.5124, 417.775, -7.51524, 0.74", "-32.4661, 418.797, -7.5497, 1.11", "-32.4624, 418.877, -7.5563, 1.11", "-32.4301, 419.761, -7.67042, 1.69", "-32.4089, 420.835, -7.87117, 2.21", "-32.3984, 421.736, -8.07693, 2.21", "-32.3954, 422.505, -8.29842, 1.03", "-32.3845, 423.47, -8.59011, 0.88", "-32.3828, 423.536, -8.61109, 0.88", "-32.3463, 424.408, -8.89517, 0.66", "-32.3159, 425.106, -9.10709, 0.66", "-32.3103, 425.27, -9.15307, 0.66", "-32.287, 426.187, -9.4002, 0.66", "-32.2798, 426.984, -9.58014, 0.59", "-32.2809, 427.421, -9.67586, 0.74", "-32.2917, 428.062, -9.83288, 0.74", "-32.3609, 429.111, -10.0955, 0.81", "-32.3674, 429.178, -10.1124, 0.81", "-32.4575, 429.959, -10.3196, 0.81", "-32.5573, 430.742, -10.5206, 0.81", "-32.6886, 431.837, -10.7985, 0.66", "-32.8222, 433.047, -11.0811, 0.52", "-32.8295, 433.125, -11.0966, 0.52", "-32.904, 433.995, -11.2552, 0.52", "-32.9388, 434.498, -11.336, 0.52", "-32.9762, 435.152, -11.4169, 1.11", "-33.0106, 435.959, -11.4749, 1.69", "-33.0265, 436.394, -11.4973, 2.06", "-33.0734, 437.255, -11.5214, 1.4", "-33.1162, 437.984, -11.5214, 1.11", "-33.1572, 438.648, -11.5214, 0.81", "-33.1882, 439.172, -11.5149, 0.59", "-33.2364, 439.984, -11.4968, 0.59", "-33.2898, 440.865, -11.4701, 0.59", "-33.3889, 442.323, -11.4615, 0.59", "-33.4121, 442.62, -11.4663, 0.52", "-33.4523, 443.129, -11.4836, 0.52", "-33.4581, 443.199, -11.4869, 0.52", "-33.5581, 444.521, -11.5661, 0.52", "-33.6336, 445.54, -11.6385, 1.03", "-33.6969, 446.415, -11.7079, 1.55", "-33.7609, 447.65, -11.8053, 2.14", "-33.7764, 448.227, -11.8625, 2.36", "-33.7714, 448.67, -11.9061, 2.14", "-33.7476, 449.038, -11.9376, 1.84", "-33.6995, 449.695, -11.9752, 1.69", "-33.6533, 450.508, -11.9783, 1.4", "-33.6168, 451.308, -11.9461, 0.29", "-33.5846, 452.196, -11.8796, 0.29", "-33.5647, 452.824, -11.8141, 0.29", "-33.528, 454.025, -11.6537, 0.29", "-33.4941, 455.202, -11.4592, 0.29", "-33.4828, 455.496, -11.3982, 0.74", "-33.4744, 455.657, -11.3585, 0.74", "-33.4147, 456.38, -11.1897, 0.74", "-33.4042, 456.477, -11.1719, 0.74", "-33.3059, 457.13, -11.094, 0.88", "-33.2236, 457.868, -11.0341, 0.88", "-33.2071, 458.087, -11.0117, 0.88", "-33.1724, 458.814, -10.9225, 0.88", "-33.1684, 459.55, -10.8204, 1.25", "-33.1962, 460.272, -10.7194, 1.25", "-33.2425, 460.869, -10.6346, 1.11", "-33.2545, 460.973, -10.6174, 1.11", "-33.2921, 461.275, -10.5635, 1.11", "-33.3677, 461.86, -10.4576, 0.66", "-33.4678, 462.589, -10.3398, 0.66", "-33.4841, 462.693, -10.3263, 0.66", "-33.5933, 463.407, -10.2592, 0.52", "-33.7841, 464.497, -10.171, 0.52", "-33.8518, 464.855, -10.1481, 0.96", "-34.0059, 465.633, -10.087, 1.25", "-34.1313, 466.238, -10.0355, 1.55", "-34.2409, 466.739, -9.99527, 1.55", "-34.3993, 467.441, -9.94594, 1.18", "-34.6009, 468.449, -9.86426, 0.81", "-34.7122, 469.077, -9.81574, 0.88", "-34.7343, 469.225, -9.80703, 0.88", "-34.8972, 470.487, -9.75258, 0.88", "-34.9051, 470.556, -9.7506, 0.88", "-35.0791, 472.449, -9.72388, 0.88", "-35.2031, 474.013, -9.72628, 0.88", "-35.2619, 474.911, -9.74327, 1.33", "-35.3039, 475.64, -9.75706, 1.4", "-35.3494, 476.438, -9.78692, 1.4", "-35.3928, 477.096, -9.82021, 0.88", "-35.3976, 477.166, -9.82467, 0.88", "-35.4651, 478.191, -9.89495, 0.88", "-35.5665, 479.651, -9.99072, 0.88", "-35.6642, 481.05, -10.1488, 0.88", "-35.7228, 481.921, -10.2803, 1.18", "-35.7656, 482.71, -10.4234, 1.18", "-35.7683, 482.788, -10.4389, 1.18", "-35.7703, 483.639, -10.6628, 1.18", "-35.7263, 484.835, -11.0304, 0.96", "-35.7215, 484.902, -11.051, 0.96", "-35.6635, 485.634, -11.2733, 0.88", "-35.5628, 486.901, -11.6287, 0.81", "-35.4746, 488.109, -11.9183, 0.37", "-35.4171, 488.892, -12.0724, 0.59", "-35.3547, 489.773, -12.2015, 0.81", "-35.2842, 490.867, -12.3496, 0.96", "-35.2401, 491.604, -12.4357, 1.55", "-35.183, 492.621, -12.5199, 1.99", "-35.1623, 493.22, -12.5239, 2.21", "-35.1611, 493.3, -12.5221, 2.21", "-35.1607, 493.66, -12.5033, 2.21", "-35.1604, 494.539, -12.4299, 1.77", "-35.1783, 495.2, -12.3702, 1.47", "-35.2079, 495.857, -12.3078, 1.25", "-35.2632, 496.652, -12.2406, 0.59", "-35.3069, 497.245, -12.19, 0.37", "-35.3585, 497.905, -12.1341, 0.29", "-35.4346, 498.854, -12.0601, 0.29", "-35.4397, 498.923, -12.0556, 0.29", "-35.5263, 500.318, -12.0004, 0.29", "-35.5527, 500.672, -11.9852, 0.66", "-35.5632, 500.822, -11.9788, 0.66", "-35.5985, 501.41, -11.9553, 0.88", "-35.6004, 501.48, -11.9531, 0.88", "-35.6276, 502.209, -11.9203, 1.11", "-35.6562, 502.953, -11.8818, 1.33", "-35.6816, 503.483, -11.8549, 1.33", "-35.7209, 504.158, -11.8181, 0.81", "-35.8009, 505.175, -11.7573, 0.66", "-35.9122, 506.19, -11.6967, 0.66", "-35.9288, 506.302, -11.69, 0.66", "-36.0726, 507.021, -11.6501, 1.55", "-36.3316, 508.018, -11.6053, 2.14", "-36.5523, 508.75, -11.5814, 2.5", "-36.8982, 509.778, -11.5646, 2.5", "-37.0643, 510.278, -11.5647, 2.43", "-37.3704, 511.253, -11.5667, 1.62", "-37.6059, 512.039, -11.5699, 0.59", "-37.7892, 512.689, -11.5741, 0.59", "-38.1403, 514.067, -11.5869, 0.44", "-38.3545, 515.064, -11.5952, 0.44", "-38.4819, 515.787, -11.6002, 0.74", "-38.4931, 515.866, -11.6014, 0.74", "-38.559, 516.417, -11.6244, 0.74", "-38.5668, 516.487, -11.6294, 0.74", "-38.6666, 517.43, -11.7264, 0.74", "-38.6744, 517.499, -11.735, 0.74", "-38.7528, 518.274, -11.836, 0.37", "-38.8501, 519.549, -12.0036, 0.37", "-38.8527, 519.619, -12.0123, 0.37", "-38.8466, 520.195, -12.076, 0.66", "-38.84, 520.274, -12.0833, 0.66", "-38.7306, 520.998, -12.1258, 1.25", "-38.7128, 521.076, -12.1275, 1.25", "-38.4959, 521.849, -12.1275, 1.77", "-38.2777, 522.608, -12.1426, 1.77", "-38.107, 523.169, -12.1612, 1.92", "-37.8374, 524.105, -12.2005, 1.55", "-37.5707, 525.064, -12.2309, 0.74", "-37.3112, 526.05, -12.2546, 0.52", "-37.1951, 526.519, -12.2624, 0.37", "-37.1799, 526.587, -12.2629, 0.37", "-36.9602, 527.738, -12.2595, 0.37", "-36.8377, 528.49, -12.2471, 0.37", "-36.8283, 528.559, -12.245, 0.37", "-36.7598, 529.139, -12.2199, 1.03", "-36.7043, 529.6, -12.1964, 1.4", "-36.6343, 530.255, -12.1559, 1.55", "-36.5605, 530.983, -12.1079, 1.25", "-36.5114, 531.574, -12.0695, 0.81", "-36.4673, 532.156, -12.0245, 0.52", "-36.4352, 532.816, -11.9669, 0.52", "-36.4092, 533.852, -11.868, 0.52", "-36.4087, 533.921, -11.861, 0.52", "-36.4358, 534.723, -11.7812, 0.81", "-36.441, 534.803, -11.7739, 0.81", "-36.5238, 535.693, -11.7043, 0.96", "-36.5331, 535.773, -11.7002, 0.96", "-36.6354, 536.414, -11.667, 0.96", "-36.7347, 536.93, -11.6267, 0.96", "-36.8221, 537.294, -11.5914, 1.18", "-36.8631, 537.428, -11.5779, 1.18", "-37.0363, 537.92, -11.5244, 1.18", "-37.309, 538.628, -11.445, 1.03", "-37.4893, 539.035, -11.4001, 0.81", "-37.8902, 539.856, -11.3198, 0.52", "-38.4878, 540.97, -11.2283, 0.52", "-38.5224, 541.031, -11.2243, 0.52", "-38.6937, 541.312, -11.2117, 0.74", "-39.2029, 542.101, -11.1998, 1.03", "-39.7506, 542.892, -11.1879, 1.03", "-40.1587, 543.446, -11.1801, 1.03", "-40.2609, 543.582, -11.1786, 1.03", "-40.745, 544.199, -11.1413, 1.03", "-41.2021, 544.763, -11.0814, 0.74", "-41.2526, 544.824, -11.0718, 0.74", "-41.5544, 545.18, -10.978, 0.52", "-41.9819, 545.682, -10.781, 0.52", "-42.6439, 546.563, -10.4092, 0.52", "-42.9538, 547.074, -10.2, 0.44", "-42.9907, 547.14, -10.1737, 0.44", "-43.456, 548.004, -9.82796, 0.29", "-44.0625, 549.2, -9.34252, 0.29", "-44.6161, 550.393, -8.86617, 2.73", "-45.0419, 551.455, -8.48632, 3.17", "-45.2367, 551.985, -8.30287, 3.17" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.10363, 436.533, -13.0116, 0.37", "-5.40797, 437.47, -10.3851, 0.37", "-5.41667, 437.495, -10.3206, 0.37", "-5.48522, 437.726, -9.84651, 1.03", "-5.49608, 437.762, -9.776, 1.03", "-5.82099, 438.856, -7.73381, 1.03", "-6.07352, 439.592, -6.43827, 0.37", "-6.1944, 439.903, -5.9435, 0.29", "-6.38231, 440.375, -5.22493, 0.29", "-6.65794, 441.045, -4.24586, 0.29", "-6.69603, 441.138, -4.1343, 0.29", "-6.96738, 441.815, -3.55247, 0.29", "-6.98296, 441.862, -3.51956, 0.29", "-7.20879, 442.973, -2.90418, 0.29", "-7.22413, 443.113, -2.83716, 0.29", "-7.23718, 443.965, -2.51991, 0.29", "-7.22948, 444.107, -2.47094, 0.29", "-7.0812, 445.165, -2.14703, 0.29", "-6.83783, 446.538, -1.78923, 0.29", "-6.67997, 447.205, -1.66502, 0.96", "-6.52252, 447.739, -1.57026, 1.4", "-6.41762, 448.047, -1.50161, 1.4", "-6.2392, 448.534, -1.3818, 0.88", "-6.03709, 449.061, -1.23219, 0.52", "-5.49824, 450.441, -0.774817, 0.29", "-4.86803, 452.053, -0.20763, 0.29", "-4.50943, 452.994, 0.158026, 0.88", "-4.34498, 453.458, 0.345193, 0.88", "-4.16213, 454.063, 0.594529, 0.81", "-4.05452, 454.467, 0.764347, 0.22", "-4.04213, 454.531, 0.791123, 0.22", "-3.95777, 455.303, 1.03508, 0.22", "-3.87763, 456.232, 1.21305, 0.22", "-3.82516, 456.945, 1.31083, 0.22", "-3.79727, 457.208, 1.33854, 0.22", "-3.78647, 457.277, 1.34549, 0.22", "-3.66073, 457.879, 1.42542, 1.03", "-3.61885, 458.032, 1.45059, 1.4", "-3.46757, 458.516, 1.54192, 1.4", "-3.22802, 459.254, 1.68586, 0.22", "-3.02821, 459.967, 1.81699, 0.22", "-2.99846, 460.089, 1.83721, 0.22", "-2.82395, 460.954, 1.96966, 0.22", "-2.75228, 461.408, 2.02915, 0.66", "-2.73509, 461.546, 2.04415, 0.66", "-2.69435, 462.057, 2.09368, 0.66", "-2.66642, 462.573, 2.15282, 0.66", "-2.64112, 462.952, 2.19885, 0.15", "-2.56279, 463.882, 2.43183, 0.15", "-2.55567, 463.948, 2.45429, 0.15", "-2.5055, 464.297, 2.59561, 0.66", "-2.42394, 464.757, 2.81167, 0.88", "-2.3582, 465.041, 2.97702, 0.88", "-2.05971, 466.179, 3.65197, 0.29", "-2.04058, 466.246, 3.69115, 0.29", "-1.8696, 466.863, 4.01142, 0.29", "-1.85062, 466.934, 4.04283, 0.29", "-1.65951, 467.674, 4.34701, 0.22", "-1.40763, 468.696, 4.69907, 0.22", "-1.30444, 469.125, 4.81177, 0.88", "-1.21467, 469.481, 4.90402, 1.25", "-1.0861, 469.961, 5.0169, 1.25", "-0.847312, 470.856, 5.24816, 0.29", "-0.704435, 471.426, 5.39569, 0.22", "-0.671816, 471.557, 5.43438, 0.22", "-0.578508, 472.003, 5.5657, 0.22", "-0.425997, 472.946, 5.91183, 0.22", "-0.256459, 474.222, 6.40943, 0.22", "-0.221768, 474.571, 6.54678, 1.03", "-0.189726, 475.044, 6.73573, 1.03", "-0.175752, 475.772, 7.02931, 1.03", "-0.206696, 477.012, 7.58374, 0.29", "-0.239542, 478.026, 8.06208, 0.22", "-0.241171, 478.153, 8.12094, 0.22", "-0.230568, 478.729, 8.45026, 0.22", "-0.189922, 479.668, 9.0495, 0.22", "-0.114638, 480.783, 9.78172, 1.03", "-0.0893927, 481.2, 10.0419, 1.03", "-0.0866188, 481.288, 10.1002, 1.03", "-0.0216485, 482.837, 11.1548, 0.29", "0.00517299, 483.259, 11.4579, 0.22", "0.059667, 483.852, 11.8804, 0.22", "0.0811252, 484.242, 12.1335, 0.74", "0.082983, 484.516, 12.3112, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.10363, 436.533, -13.0116, 1.47", "-4.92048, 437.015, -13.0719, 1.47", "-4.58792, 437.852, -13.1816, 0.29", "-4.05487, 439.133, -13.3478, 0.29", "-3.57034, 440.276, -13.4901, 0.29", "-3.09438, 441.394, -13.6603, 0.29", "-2.5464, 442.667, -13.8756, 0.29", "-2.30485, 443.246, -13.9918, 0.81", "-2.09257, 443.827, -14.1138, 1.11", "-1.89746, 444.479, -14.2572, 1.11", "-1.73744, 445.202, -14.4397, 0.29", "-1.68511, 445.522, -14.5241, 0.29", "-1.52239, 446.876, -14.879, 0.37", "-1.31498, 449.0, -15.4342, 0.37", "-1.20749, 450.548, -15.8254, 0.37", "-1.16811, 451.357, -16.0372, 0.22", "-1.12362, 452.929, -16.4343, 0.22", "-1.12463, 453.658, -16.6414, 1.25", "-1.13528, 454.085, -16.7725, 1.62", "-1.13061, 454.624, -16.9722, 1.62", "-1.10418, 455.43, -17.2836, 0.52", "-1.07509, 455.995, -17.5018, 0.44", "-1.01735, 456.953, -17.8967, 0.22", "-0.91341, 458.176, -18.4043, 0.22", "-0.73284, 459.684, -19.0756, 0.22", "-0.723426, 459.748, -19.1026, 0.22", "-0.560784, 460.778, -19.5041, 1.11", "-0.491474, 461.133, -19.6522, 1.55", "-0.432773, 461.393, -19.7657, 1.55", "-0.168489, 462.465, -20.2621, 0.22", "0.210231, 463.966, -20.9396, 0.22", "0.227537, 464.028, -20.9669, 0.22", "0.678974, 465.433, -21.5483, 0.22", "0.909981, 466.096, -21.82, 1.11", "1.0173, 466.368, -21.9268, 1.4", "1.04912, 466.436, -21.9536, 1.4", "1.19349, 466.672, -22.0793, 1.4", "1.41158, 467.0, -22.2536, 0.96", "1.44973, 467.043, -22.2714, 0.96", "1.60872, 467.187, -22.3211, 0.96", "2.16763, 467.661, -22.5325, 0.29", "2.22078, 467.702, -22.5531, 0.29", "2.82491, 468.138, -22.7839, 0.29", "3.8063, 468.821, -23.2301, 0.29", "4.48264, 469.31, -23.5413, 0.29", "5.08497, 469.741, -23.8275, 1.11", "5.53976, 470.068, -24.0407, 1.47", "5.92918, 470.35, -24.2382, 1.47", "6.72336, 470.942, -24.6775, 0.22", "7.73749, 471.724, -25.3141, 0.22", "8.33143, 472.282, -25.6798, 0.66", "8.55566, 472.536, -25.8114, 0.66", "8.63996, 472.649, -25.8633, 0.66", "8.96173, 473.12, -26.0509, 0.66", "9.25396, 473.595, -26.1983, 0.22", "10.1345, 475.33, -26.6162, 0.22", "10.4163, 475.973, -26.7169, 0.81", "10.4429, 476.038, -26.7224, 0.81", "10.6232, 476.495, -26.7356, 1.18", "10.7409, 476.809, -26.7303, 1.18", "11.0412, 477.624, -26.665, 0.15", "11.0657, 477.689, -26.6571, 0.15", "11.6353, 479.286, -26.4443, 0.15", "11.6572, 479.352, -26.4374, 0.15", "11.7659, 479.718, -26.4143, 0.81", "11.8167, 479.923, -26.3941, 1.11", "11.8294, 479.992, -26.3873, 1.11", "11.8845, 480.421, -26.3073, 1.11", "11.8902, 480.489, -26.2904, 1.11", "11.9197, 480.87, -26.1881, 0.15", "12.0355, 482.475, -25.7419, 0.15", "12.1512, 484.166, -25.2823, 0.15", "12.1984, 484.854, -25.1033, 0.88", "12.2037, 484.921, -25.0866, 0.88", "12.2402, 485.356, -24.9979, 1.69", "12.2936, 485.943, -24.9215, 1.69", "12.3333, 486.31, -24.9147, 0.96", "12.3896, 486.816, -24.9333, 0.52", "12.4395, 487.304, -24.9713, 0.15", "12.5646, 488.616, -25.0783, 0.15", "12.6118, 489.193, -25.1225, 0.88", "12.6486, 489.77, -25.1636, 1.18", "12.661, 490.059, -25.182, 1.18", "12.6721, 490.506, -25.2062, 0.44", "12.6697, 490.951, -25.2425, 0.15", "12.6721, 492.553, -25.4005, 0.15", "12.6802, 492.991, -25.4443, 0.44", "12.6952, 493.435, -25.4964, 0.66", "12.7212, 493.868, -25.5683, 0.66", "12.7901, 494.673, -25.7388, 0.15", "12.9664, 496.194, -26.1351, 0.15", "13.0436, 496.625, -26.2902, 0.74", "13.0591, 496.696, -26.3228, 0.74", "13.2679, 497.429, -26.6836, 0.96", "13.2877, 497.488, -26.7142, 0.96", "13.4056, 497.838, -26.8673, 0.96", "13.6206, 498.486, -27.1515, 0.74", "13.8348, 499.154, -27.4453, 0.15", "14.1884, 500.32, -27.9251, 0.15", "14.2095, 500.393, -27.9521, 0.15", "14.5751, 501.734, -28.4235, 0.15", "14.5896, 501.797, -28.4503, 0.15", "14.7163, 502.532, -28.7858, 0.96", "14.7517, 502.864, -28.9443, 1.33", "14.7537, 502.924, -28.9804, 1.33", "14.7549, 503.541, -29.3708, 1.62", "14.6895, 504.85, -30.3506, 0.81", "14.6611, 505.219, -30.6324, 0.22", "14.5753, 506.106, -31.2761, 0.22", "14.5001, 506.828, -31.8011, 0.59", "14.4603, 507.254, -32.1049, 0.59", "14.3841, 508.243, -32.7739, 0.15", "14.3812, 508.304, -32.8085, 0.15", "14.3635, 508.968, -33.3864, 0.15", "14.3662, 509.03, -33.4367, 0.15", "14.4107, 509.619, -33.8615, 1.18", "14.4607, 509.987, -34.1064, 1.62", "14.4704, 510.046, -34.1428, 1.62", "14.8889, 512.28, -35.6173, 0.22", "15.3689, 514.678, -37.2729, 0.22", "15.3927, 514.793, -37.366, 0.22", "15.694, 516.455, -38.7129, 0.22", "15.7033, 516.509, -38.7566, 0.22", "15.8547, 517.503, -39.5274, 1.4", "15.8738, 517.641, -39.6256, 1.4", "16.0623, 519.476, -41.2503, 0.15", "16.1923, 521.251, -42.7775, 0.15", "16.2087, 521.712, -43.1614, 0.59", "16.2287, 522.083, -43.4408, 0.81", "16.2522, 522.372, -43.6656, 0.81", "16.3518, 523.177, -44.2594, 0.15", "16.586, 524.583, -45.2194, 0.15", "16.7092, 525.152, -45.6625, 1.33", "16.8232, 525.661, -46.079, 1.55", "17.1964, 527.399, -47.5051, 0.15", "17.5141, 528.987, -48.7813, 0.15", "17.5356, 529.105, -48.8705, 0.44", "17.5432, 529.161, -48.9125, 0.44", "17.6114, 530.002, -49.4977, 0.22", "17.621, 531.053, -50.2385, 0.22", "17.6139, 531.106, -50.2667, 0.22", "17.5411, 531.357, -50.4266, 0.88", "17.3744, 531.799, -50.6854, 0.88", "17.3489, 531.853, -50.721, 0.88", "16.6279, 533.004, -51.3862, 0.22", "15.6428, 534.38, -52.1818, 0.22", "15.1146, 535.083, -52.5654, 1.11", "14.637, 535.691, -52.878, 1.33", "13.7867, 536.736, -53.4021, 0.15", "11.927, 538.901, -54.3709, 0.15", "11.8812, 538.951, -54.3899, 0.15", "11.6048, 539.234, -54.5021, 0.52", "11.3905, 539.452, -54.6029, 0.52", "11.0611, 539.798, -54.7809, 0.22", "10.2955, 540.696, -55.4851, 0.22", "10.0544, 541.005, -55.836, 0.52", "9.733, 541.439, -56.3244, 0.52", "9.05109, 542.407, -57.4343, 0.15", "8.45066, 543.467, -58.5212, 0.15", "7.56952, 545.424, -60.3673, 0.88", "7.54485, 545.506, -60.4408, 1.69", "7.40574, 546.193, -60.9829, 0.15", "7.40058, 546.251, -61.0215, 0.15", "7.44257, 547.917, -61.714, 0.15", "7.58543, 548.341, -61.7808, 0.52", "7.76031, 548.724, -61.7576, 0.52", "7.79216, 548.787, -61.7538, 0.52", "7.9697, 549.105, -61.742, 0.15", "8.00504, 549.165, -61.7383, 0.15", "9.69384, 551.753, -61.4611, 0.15", "9.96841, 552.171, -61.4043, 1.03", "10.2356, 552.58, -61.3491, 1.25" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-45.2367, 551.985, -8.30287, 0.96", "-44.9871, 552.888, -7.69086, 0.96", "-44.7001, 554.189, -6.86549, 0.52", "-44.5801, 554.966, -6.41153, 0.52", "-44.4816, 556.137, -5.78978, 0.44", "-44.4791, 556.233, -5.74358, 0.44", "-44.511, 557.151, -5.24182, 0.44", "-44.5238, 557.212, -5.20924, 0.44", "-44.6872, 557.657, -4.96744, 0.81", "-44.918, 558.127, -4.70338, 0.96", "-45.0915, 558.446, -4.53607, 0.96", "-45.8451, 559.842, -3.81738, 0.74", "-46.0346, 560.19, -3.57386, 0.52", "-46.2107, 560.495, -3.34196, 0.52", "-46.5843, 561.123, -2.76169, 0.22", "-46.649, 561.23, -2.65276, 0.22", "-47.0104, 561.811, -2.05412, 0.22", "-47.8016, 563.029, -0.602205, 0.74", "-48.0632, 563.421, -0.0372412, 0.96", "-48.5137, 564.148, 1.10174, 1.11", "-48.5335, 564.187, 1.16869, 1.11", "-48.6548, 564.521, 1.7623, 1.11", "-48.7638, 565.451, 3.46551, 1.03", "-48.7602, 565.493, 3.53327, 1.03", "-48.6741, 565.951, 4.20341, 0.66", "-48.4807, 566.768, 5.25843, 0.29", "-48.3366, 567.328, 5.92241, 0.29", "-47.9824, 568.66, 7.34235, 0.29", "-47.8857, 569.089, 7.68129, 0.66", "-47.8124, 569.499, 7.97575, 0.66", "-47.8027, 569.558, 8.0132, 0.66", "-47.7578, 569.883, 8.18367, 0.66", "-47.6109, 570.999, 8.69437, 0.29", "-47.3901, 572.159, 9.1323, 0.29", "-47.3723, 572.232, 9.15978, 0.29", "-46.9689, 573.659, 9.67279, 0.29", "-46.9059, 573.858, 9.73932, 0.96", "-46.7069, 574.416, 9.92506, 1.25", "-46.6825, 574.479, 9.94324, 1.25", "-46.4504, 575.069, 10.1323, 1.25", "-46.3082, 575.485, 10.252, 1.25", "-46.281, 575.585, 10.2757, 1.25", "-46.1377, 576.334, 10.4441, 0.29", "-46.0521, 577.046, 10.5817, 0.29", "-46.0461, 577.158, 10.5995, 0.29", "-46.0504, 577.802, 10.6839, 0.29", "-46.0561, 577.882, 10.6911, 0.29", "-46.1853, 578.847, 10.7317, 0.29", "-46.3144, 579.48, 10.7215, 0.81", "-46.408, 579.832, 10.7162, 1.03", "-46.4313, 579.909, 10.7153, 1.03", "-46.6122, 580.446, 10.7093, 1.03", "-46.8342, 581.035, 10.7045, 0.44", "-47.2551, 582.006, 10.7777, 0.29", "-47.4373, 582.392, 10.8332, 0.59", "-47.6729, 582.933, 10.935, 0.59", "-47.7012, 583.006, 10.9513, 0.59", "-47.9617, 583.772, 11.1499, 0.59", "-48.2534, 584.771, 11.4495, 0.37", "-48.2681, 584.836, 11.4707, 0.37", "-48.4278, 585.857, 11.8475, 0.37", "-48.4662, 586.287, 12.006, 0.37", "-48.4714, 586.344, 12.0236, 0.37", "-48.4965, 586.67, 12.1019, 0.59", "-48.5422, 587.092, 12.1729, 0.59", "-48.6658, 587.938, 12.3133, 0.44", "-48.8206, 588.642, 12.4277, 0.29", "-49.1638, 589.894, 12.6085, 0.29", "-49.3651, 590.521, 12.6888, 0.74", "-49.5331, 590.972, 12.7353, 0.81", "-49.5919, 591.109, 12.7454, 0.81", "-49.8615, 591.688, 12.7555, 0.81", "-50.0622, 592.096, 12.7662, 0.96", "-50.1624, 592.308, 12.773, 0.96", "-50.1891, 592.373, 12.7749, 0.96", "-50.404, 592.996, 12.7947, 0.37", "-50.6713, 593.943, 12.8241, 0.37", "-50.8566, 594.777, 12.8485, 0.37", "-51.0069, 595.548, 12.8691, 0.22", "-51.1676, 596.486, 12.8915, 0.22", "-51.2618, 597.072, 12.9028, 0.37", "-51.3471, 597.65, 12.9098, 0.59", "-51.4264, 598.228, 12.9167, 0.88", "-51.4838, 598.69, 12.9212, 1.33", "-51.4939, 598.769, 12.9216, 1.33", "-51.5756, 599.318, 12.9412, 1.33", "-51.6977, 600.138, 12.9844, 1.03", "-51.8007, 600.859, 13.031, 0.59", "-51.9527, 602.018, 13.1151, 0.29", "-52.1641, 603.691, 13.2773, 0.29", "-52.2526, 604.397, 13.3778, 0.81", "-52.3463, 605.178, 13.5198, 0.81", "-52.4131, 605.748, 13.6595, 0.52", "-52.4381, 605.956, 13.7264, 0.44", "-52.6738, 607.608, 14.3776, 0.22", "-52.7998, 608.264, 14.7216, 0.59", "-52.8572, 608.509, 14.8656, 0.74", "-53.0812, 609.251, 15.347, 0.74", "-53.2459, 609.722, 15.6339, 0.15", "-53.5167, 610.412, 16.0157, 0.15", "-54.0555, 611.673, 16.5536, 0.15", "-54.1192, 611.82, 16.5948, 0.15", "-54.4382, 612.543, 16.7081, 0.15", "-54.8826, 613.55, 16.7492, 0.15", "-54.968, 613.758, 16.742, 0.15", "-55.3171, 614.73, 16.6281, 0.15", "-55.4146, 615.036, 16.5672, 0.15", "-55.7998, 616.332, 16.3296, 0.15", "-55.8207, 616.408, 16.3182, 0.52", "-55.8971, 616.696, 16.2942, 0.52", "-55.9855, 617.032, 16.2615, 0.15", "-56.1392, 617.616, 16.1856, 0.15", "-56.1557, 617.694, 16.1733, 0.15", "-56.179, 618.009, 16.0929, 0.52", "-56.193, 618.154, 16.0568, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-45.2367, 551.985, -8.30287, 0.59", "-46.1952, 552.865, -8.16613, 0.59", "-46.5367, 553.194, -8.12546, 0.59", "-46.5847, 553.245, -8.12084, 0.59", "-47.0806, 553.845, -8.08071, 0.52", "-47.8109, 554.852, -8.02818, 0.52", "-47.8494, 554.91, -8.02567, 0.52", "-48.1029, 555.372, -8.02744, 0.74", "-48.4603, 556.218, -8.0333, 0.74", "-48.7232, 557.069, -8.04107, 0.59", "-48.8283, 557.649, -8.04764, 0.29", "-48.8582, 558.18, -8.0545, 0.29", "-48.8567, 558.24, -8.05524, 0.29", "-48.7275, 559.609, -8.01147, 0.29", "-48.6792, 559.931, -7.98965, 0.59", "-48.6547, 560.078, -7.97518, 0.59", "-48.5592, 560.734, -7.89989, 0.59", "-48.4051, 562.193, -7.72598, 0.59", "-48.353, 562.952, -7.63723, 0.29", "-48.3515, 563.032, -7.62822, 0.29", "-48.3559, 563.539, -7.57674, 0.22", "-48.3904, 564.707, -7.47566, 0.22", "-48.4494, 565.665, -7.41272, 0.96", "-48.515, 566.407, -7.38621, 1.55", "-48.5625, 566.869, -7.38621, 1.84", "-48.6028, 567.227, -7.38621, 1.84", "-48.6864, 567.828, -7.38621, 1.55", "-48.7992, 568.495, -7.39498, 0.59", "-48.8548, 568.788, -7.40209, 0.52", "-48.9683, 569.307, -7.41918, 0.29", "-49.1757, 570.233, -7.45588, 0.29", "-49.3526, 570.936, -7.48749, 0.29", "-49.4998, 571.477, -7.51509, 0.66", "-49.5443, 571.62, -7.52279, 0.66", "-49.7289, 572.144, -7.54937, 0.96", "-49.7557, 572.208, -7.55217, 0.96", "-50.001, 572.728, -7.56821, 0.96", "-50.0309, 572.791, -7.56916, 0.96", "-50.3192, 573.424, -7.60694, 0.96", "-50.5927, 574.061, -7.66718, 0.96", "-50.8701, 574.751, -7.74752, 0.96", "-51.0777, 575.341, -7.82104, 0.59", "-51.2328, 575.845, -7.88835, 0.44", "-51.4491, 576.789, -8.00824, 0.29", "-51.5827, 577.699, -8.11565, 0.29", "-51.6006, 577.917, -8.1381, 0.29", "-51.6255, 578.787, -8.21157, 0.29", "-51.6255, 578.866, -8.21646, 0.29", "-51.5874, 580.353, -8.32089, 0.29", "-51.5599, 581.149, -8.39085, 0.96", "-51.5434, 581.884, -8.48045, 1.69", "-51.5436, 582.389, -8.55177, 1.92", "-51.5609, 583.085, -8.66251, 1.25", "-51.6098, 583.97, -8.83961, 0.88", "-51.6981, 584.973, -9.07666, 0.29", "-51.8173, 586.745, -9.50223, 0.29", "-51.8318, 587.044, -9.57366, 0.74", "-51.8378, 587.27, -9.62257, 0.74", "-51.8449, 588.48, -9.85257, 0.29", "-51.8275, 589.34, -9.98561, 0.29", "-51.7513, 590.678, -10.1761, 0.29", "-51.7428, 590.776, -10.1904, 0.29", "-51.6413, 591.931, -10.3431, 0.29", "-51.6293, 592.07, -10.3578, 0.29", "-51.5846, 592.789, -10.3975, 0.96", "-51.5884, 593.518, -10.4398, 1.25", "-51.5947, 593.587, -10.4462, 1.25", "-51.6313, 593.955, -10.4835, 1.25", "-51.6831, 594.46, -10.5361, 1.25", "-51.7703, 595.281, -10.6155, 0.52", "-51.8493, 595.938, -10.6842, 0.44", "-51.9196, 596.509, -10.7519, 0.22", "-52.1468, 598.163, -10.9518, 0.22", "-52.2299, 598.732, -11.0226, 0.81", "-52.3305, 599.251, -11.084, 0.81", "-52.4882, 599.93, -11.1593, 0.15", "-52.507, 599.998, -11.1655, 0.15", "-52.8697, 601.114, -11.2338, 0.15", "-52.9005, 601.187, -11.2381, 0.15", "-53.405, 602.373, -11.6356, 0.15", "-53.4279, 602.431, -11.6668, 0.15", "-53.5562, 602.809, -11.8989, 1.4", "-53.6577, 603.149, -12.1594, 1.69", "-53.8142, 603.68, -12.633, 1.69", "-54.497, 605.975, -14.8411, 0.29", "-54.7175, 606.776, -15.806, 0.29", "-54.8709, 607.34, -16.5554, 0.29", "-55.0579, 608.013, -17.5099, 0.59", "-55.1737, 608.411, -18.1011, 0.59", "-55.1871, 608.455, -18.1668, 0.59", "-55.8017, 609.97, -20.2584, 0.15", "-55.8202, 610.007, -20.3142, 0.15", "-56.0061, 610.351, -20.7704, 0.15", "-56.0665, 610.464, -20.8754, 0.15", "-56.2366, 610.779, -21.1138, 0.15", "-56.3655, 610.986, -21.2063, 0.15", "-56.9159, 611.743, -21.6108, 0.15", "-57.1507, 612.081, -21.8485, 0.96", "-57.3665, 612.392, -22.1368, 1.4", "-57.4632, 612.531, -22.2778, 1.77", "-57.7971, 612.997, -22.9425, 1.77", "-58.7442, 614.352, -25.467, 0.22", "-58.9736, 614.692, -26.1813, 0.22", "-59.2596, 615.138, -27.1652, 0.96", "-59.3797, 615.347, -27.7467, 0.96", "-59.892, 616.355, -30.9729, 0.74", "-60.1772, 616.955, -33.0071, 0.66", "-60.2421, 617.1, -33.5217, 0.66", "-60.2501, 617.119, -33.5887, 0.66", "-60.8455, 618.676, -38.9924, 0.88", "-60.8612, 618.718, -39.1357, 0.88", "-61.02, 619.104, -40.3695, 0.22", "-61.203, 619.434, -41.4344, 0.88", "-61.2732, 619.538, -41.7825, 0.88", "-61.2888, 619.559, -41.8474, 0.88", "-62.0016, 620.285, -43.1438, 0.22", "-62.032, 620.312, -43.2009, 0.22", "-62.326, 620.49, -43.8563, 0.22", "-62.3672, 620.506, -43.923, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_18", "dend_15", "dend_0", "dend_34", "dend_24", "dend_22", "dend_19", "dend_17", "dend_16", "dend_12", "dend_1", "dend_36", "dend_35", "dend_31", "dend_30", "dend_25", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_6", "dend_3", "dend_29", "dend_28", "dend_10", "dend_7", "dend_5", "dend_4", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_18", "dend_15", "dend_0", "dend_34", "dend_24", "dend_22", "dend_19", "dend_17", "dend_16", "dend_12", "dend_1", "dend_36", "dend_35", "dend_31", "dend_30", "dend_25", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_27", "dend_26", "dend_6", "dend_3", "dend_29", "dend_28", "dend_10", "dend_7", "dend_5", "dend_4", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_LBC_ae0d738c6e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_23
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_24
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.49999876050328307)
    connect dend_18(0), soma_0(0.49999876050328307)
    connect dend_15(0), soma_0(0.49999876050328307)
    connect dend_0(0), soma_0(0.49999876050328307)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_24(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.0872, -14.5298, 1.66446, 3.93857 ) }
    soma_0 { pt3dadd( 1.03391, -13.142, 1.51424, 6.52863 ) }
    soma_0 { pt3dadd( 0.980623, -11.7541, 1.36402, 8.04637 ) }
    soma_0 { pt3dadd( 0.927335, -10.3662, 1.21381, 9.63708 ) }
    soma_0 { pt3dadd( 0.874048, -8.97833, 1.06359, 11.064 ) }
    soma_0 { pt3dadd( 0.820761, -7.59046, 0.913373, 11.9239 ) }
    soma_0 { pt3dadd( 0.767473, -6.20258, 0.763156, 12.4398 ) }
    soma_0 { pt3dadd( 0.714186, -4.81471, 0.612939, 12.9921 ) }
    soma_0 { pt3dadd( 0.660898, -3.42683, 0.462723, 13.7517 ) }
    soma_0 { pt3dadd( 0.607611, -2.03896, 0.312506, 14.5599 ) }
    soma_0 { pt3dadd( 0.554324, -0.651085, 0.162289, 15.2134 ) }
    soma_0 { pt3dadd( 0.501036, 0.73679, 0.0120717, 15.5164 ) }
    soma_0 { pt3dadd( 0.447749, 2.12466, -0.138145, 15.3298 ) }
    soma_0 { pt3dadd( 0.394461, 3.51254, -0.288362, 13.7024 ) }
    soma_0 { pt3dadd( 0.341174, 4.90041, -0.438579, 11.5148 ) }
    soma_0 { pt3dadd( 0.287887, 6.28829, -0.588796, 9.87312 ) }
    soma_0 { pt3dadd( 0.234599, 7.67616, -0.739013, 8.2425 ) }
    soma_0 { pt3dadd( 0.181312, 9.06404, -0.88923, 6.9098 ) }
    soma_0 { pt3dadd( 0.128024, 10.4519, -1.03945, 5.83952 ) }
    soma_0 { pt3dadd( 0.0747371, 11.8398, -1.18966, 4.73272 ) }
    soma_0 { pt3dadd( 0.0214497, 13.2277, -1.33988, 2.78861 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.14716, -13.2806, 1.14781, 5.97 ) }
    dend_23 { pt3dadd( 1.14308, -13.3404, 1.14841, 6.04 ) }
    dend_23 { pt3dadd( 1.02875, -15.0165, 1.16522, 6.04 ) }
    dend_23 { pt3dadd( 1.00132, -15.4186, 1.16926, 5.0 ) }
    dend_23 { pt3dadd( 0.905337, -16.8256, 1.18336, 5.0 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.10284, 2.42939, -0.602184, 1.84 ) }
    dend_18 { pt3dadd( -6.10284, 2.42939, -0.602184, 1.84 ) }
    dend_18 { pt3dadd( -6.5228, 2.98402, -0.670099, 1.62 ) }
    dend_18 { pt3dadd( -7.00942, 3.64843, -0.749261, 1.33 ) }
    dend_18 { pt3dadd( -7.14346, 3.83806, -0.778846, 1.33 ) }
    dend_18 { pt3dadd( -8.0469, 5.11615, -1.01942, 1.33 ) }
    dend_18 { pt3dadd( -8.72907, 6.08498, -1.21564, 1.33 ) }
    dend_18 { pt3dadd( -8.77389, 6.14983, -1.22929, 1.33 ) }
    dend_18 { pt3dadd( -9.58946, 7.35657, -1.49819, 1.33 ) }
    dend_18 { pt3dadd( -10.0975, 8.1516, -1.67048, 1.33 ) }
    dend_18 { pt3dadd( -10.6889, 9.1019, -1.8871, 1.33 ) }
    dend_18 { pt3dadd( -10.7241, 9.16092, -1.90032, 1.33 ) }
    dend_18 { pt3dadd( -11.3962, 10.3413, -2.13859, 1.33 ) }
    dend_18 { pt3dadd( -11.429, 10.4017, -2.15212, 1.33 ) }
    dend_18 { pt3dadd( -11.8722, 11.2691, -2.36081, 1.33 ) }
    dend_18 { pt3dadd( -12.4929, 12.5508, -2.65425, 0.96 ) }
    dend_18 { pt3dadd( -13.0098, 13.7073, -2.91849, 0.96 ) }
    dend_18 { pt3dadd( -13.0365, 13.7698, -2.93501, 0.96 ) }
    dend_18 { pt3dadd( -13.4621, 14.8139, -3.24367, 1.47 ) }
    dend_18 { pt3dadd( -13.5133, 14.9391, -3.27983, 1.47 ) }
    dend_18 { pt3dadd( -13.7743, 15.5932, -3.4517, 1.77 ) }
    dend_18 { pt3dadd( -14.0129, 16.2113, -3.5902, 1.77 ) }
    dend_18 { pt3dadd( -14.4077, 17.2099, -3.807, 1.77 ) }
    dend_18 { pt3dadd( -14.633, 17.7563, -3.91259, 1.62 ) }
    dend_18 { pt3dadd( -15.0732, 18.795, -4.07908, 1.62 ) }
    dend_18 { pt3dadd( -15.547, 19.9156, -4.23944, 1.62 ) }
    dend_18 { pt3dadd( -15.5739, 19.9797, -4.24757, 1.62 ) }
    dend_18 { pt3dadd( -15.8869, 20.7136, -4.33274, 1.4 ) }
    dend_18 { pt3dadd( -16.059, 21.1186, -4.36082, 1.33 ) }
    dend_18 { pt3dadd( -16.1142, 21.2468, -4.3727, 1.33 ) }
    dend_18 { pt3dadd( -16.7516, 22.708, -4.52672, 1.33 ) }
    dend_18 { pt3dadd( -16.7802, 22.7715, -4.53362, 1.33 ) }
    dend_18 { pt3dadd( -17.0378, 23.3282, -4.59208, 1.18 ) }
    dend_18 { pt3dadd( -18.8214, 27.0311, -5.00673, 1.18 ) }
    dend_18 { pt3dadd( -19.2148, 27.8426, -5.104, 1.18 ) }
    dend_18 { pt3dadd( -19.2879, 27.9899, -5.12264, 1.18 ) }
    dend_18 { pt3dadd( -19.6446, 28.6893, -5.21593, 1.18 ) }
    dend_18 { pt3dadd( -19.9505, 29.2928, -5.29444, 1.18 ) }
    dend_18 { pt3dadd( -20.381, 30.1536, -5.40018, 1.4 ) }
    dend_18 { pt3dadd( -20.7428, 30.8744, -5.50976, 1.69 ) }
    dend_18 { pt3dadd( -20.8043, 31.0104, -5.52447, 1.69 ) }
    dend_18 { pt3dadd( -20.9814, 31.4277, -5.56826, 1.69 ) }
    dend_18 { pt3dadd( -21.0362, 31.5668, -5.58005, 1.69 ) }
    dend_18 { pt3dadd( -21.2276, 32.0909, -5.60764, 1.69 ) }
    dend_18 { pt3dadd( -21.2543, 32.1663, -5.6096, 1.69 ) }
    dend_18 { pt3dadd( -21.6396, 33.2507, -5.63515, 1.69 ) }
    dend_18 { pt3dadd( -21.8154, 33.7617, -5.64526, 1.03 ) }
    dend_18 { pt3dadd( -22.3419, 35.3521, -5.67053, 1.03 ) }
    dend_18 { pt3dadd( -22.6927, 36.411, -5.68255, 1.03 ) }
    dend_18 { pt3dadd( -22.8115, 36.7684, -5.68468, 1.33 ) }
    dend_18 { pt3dadd( -22.8816, 36.9769, -5.68532, 1.33 ) }
    dend_18 { pt3dadd( -23.1386, 37.7492, -5.68418, 1.33 ) }
    dend_18 { pt3dadd( -23.3209, 38.3275, -5.67982, 1.47 ) }
    dend_18 { pt3dadd( -23.5683, 39.1486, -5.6762, 1.47 ) }
    dend_18 { pt3dadd( -23.7397, 39.774, -5.6762, 1.47 ) }
    dend_18 { pt3dadd( -23.842, 40.1599, -5.6762, 1.47 ) }
    dend_18 { pt3dadd( -23.8775, 40.2953, -5.6762, 1.47 ) }
    dend_18 { pt3dadd( -24.1548, 41.3703, -5.6762, 1.25 ) }
    dend_18 { pt3dadd( -24.231, 41.65, -5.68374, 1.25 ) }
    dend_18 { pt3dadd( -24.5611, 42.8545, -5.73627, 1.25 ) }
    dend_18 { pt3dadd( -24.7405, 43.4523, -5.74722, 1.25 ) }
    dend_18 { pt3dadd( -24.8222, 43.7058, -5.74757, 1.25 ) }
    dend_18 { pt3dadd( -25.2522, 44.855, -5.73071, 1.25 ) }
    dend_18 { pt3dadd( -25.9093, 46.4205, -5.6875, 1.25 ) }
    dend_18 { pt3dadd( -25.9384, 46.4841, -5.6851, 1.25 ) }
    dend_18 { pt3dadd( -26.4779, 47.6089, -5.6293, 1.25 ) }
    dend_18 { pt3dadd( -26.5439, 47.7436, -5.62456, 1.25 ) }
    dend_18 { pt3dadd( -27.3239, 49.3065, -5.58033, 1.25 ) }
    dend_18 { pt3dadd( -27.3607, 49.3775, -5.57876, 1.25 ) }
    dend_18 { pt3dadd( -27.8572, 50.3345, -5.56308, 1.55 ) }
    dend_18 { pt3dadd( -28.3364, 51.2658, -5.56587, 1.55 ) }
    dend_18 { pt3dadd( -29.6969, 53.9362, -5.64129, 1.55 ) }
    dend_18 { pt3dadd( -29.7284, 53.9987, -5.64313, 1.55 ) }
    dend_18 { pt3dadd( -30.3435, 55.2383, -5.68163, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -30.6812, 55.9215, -5.70229, 1.62 ) }
    dend_18 { pt3dadd( -30.7486, 56.0555, -5.70375, 1.62 ) }
    dend_18 { pt3dadd( -31.0488, 56.6354, -5.69471, 1.62 ) }
    dend_18 { pt3dadd( -31.0841, 56.707, -5.68925, 1.62 ) }
    dend_18 { pt3dadd( -31.308, 57.1733, -5.65185, 1.62 ) }
    dend_18 { pt3dadd( -31.5778, 57.7172, -5.60691, 1.33 ) }
    dend_18 { pt3dadd( -32.0184, 58.5716, -5.54478, 1.25 ) }
    dend_18 { pt3dadd( -32.0507, 58.6336, -5.54029, 1.25 ) }
    dend_18 { pt3dadd( -32.3363, 59.1828, -5.50117, 1.11 ) }
    dend_18 { pt3dadd( -33.3227, 61.077, -5.37529, 1.11 ) }
    dend_18 { pt3dadd( -33.7025, 61.8108, -5.33314, 1.92 ) }
    dend_18 { pt3dadd( -34.2328, 62.8297, -5.29386, 2.5 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 12/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.96716, 2.31939, -0.292184, 1.69 ) }
    dend_15 { pt3dadd( 7.96716, 2.31939, -0.292184, 1.69 ) }
    dend_15 { pt3dadd( 8.86531, 2.50332, -0.292184, 1.69 ) }
    dend_15 { pt3dadd( 9.9139, 2.71654, -0.292184, 1.62 ) }
    dend_15 { pt3dadd( 11.6722, 3.07046, -0.292184, 1.62 ) }
    dend_15 { pt3dadd( 13.0021, 3.32331, -0.292184, 1.62 ) }
    dend_15 { pt3dadd( 13.9581, 3.4885, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 14.1066, 3.50957, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 15.0872, 3.60072, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 15.2271, 3.60639, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 16.0399, 3.58761, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 16.4694, 3.55892, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 17.0968, 3.50498, -0.292184, 1.84 ) }
    dend_15 { pt3dadd( 18.4215, 3.38646, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 18.5707, 3.37059, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 19.9648, 3.2245, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 20.104, 3.21018, -0.292184, 1.55 ) }
    dend_15 { pt3dadd( 21.2121, 3.10622, -0.292184, 1.33 ) }
    dend_15 { pt3dadd( 22.4588, 2.99178, -0.292184, 1.18 ) }
    dend_15 { pt3dadd( 23.3807, 2.89963, -0.282794, 1.4 ) }
    dend_15 { pt3dadd( 24.4194, 2.80645, -0.264033, 1.4 ) }
    dend_15 { pt3dadd( 25.4571, 2.75076, -0.238549, 1.25 ) }
    dend_15 { pt3dadd( 26.6363, 2.72393, -0.204336, 1.25 ) }
    dend_15 { pt3dadd( 26.7761, 2.72723, -0.197533, 1.25 ) }
    dend_15 { pt3dadd( 27.8416, 2.80231, -0.1275, 1.03 ) }
    dend_15 { pt3dadd( 28.8945, 2.9225, -0.0439009, 1.03 ) }
    dend_15 { pt3dadd( 30.3559, 3.15608, 0.128713, 1.03 ) }
    dend_15 { pt3dadd( 30.4336, 3.17094, 0.14044, 1.03 ) }
    dend_15 { pt3dadd( 31.2741, 3.35135, 0.290608, 1.33 ) }
    dend_15 { pt3dadd( 32.2603, 3.57989, 0.480479, 1.62 ) }
    dend_15 { pt3dadd( 32.3362, 3.59944, 0.496527, 1.62 ) }
    dend_15 { pt3dadd( 33.3544, 3.85078, 0.761352, 1.99 ) }
    dend_15 { pt3dadd( 33.6554, 3.91488, 0.856232, 2.43 ) }
    dend_15 { pt3dadd( 33.7209, 3.92802, 0.876938, 2.43 ) }
    dend_15 { pt3dadd( 34.3111, 4.04217, 1.06446, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 47/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.237159, 12.8794, -1.85219, 4.13 ) }
    dend_0 { pt3dadd( 0.237159, 12.8794, -1.85219, 4.13 ) }
    dend_0 { pt3dadd( 0.299423, 13.4002, -1.89288, 4.13 ) }
    dend_0 { pt3dadd( 0.501951, 15.0528, -2.04542, 3.32 ) }
    dend_0 { pt3dadd( 0.660489, 16.298, -2.14173, 2.95 ) }
    dend_0 { pt3dadd( 0.880977, 18.0722, -2.25669, 2.28 ) }
    dend_0 { pt3dadd( 1.02878, 19.3351, -2.32576, 2.28 ) }
    dend_0 { pt3dadd( 1.17497, 20.5667, -2.3925, 2.28 ) }
    dend_0 { pt3dadd( 1.32447, 21.7951, -2.45797, 2.43 ) }
    dend_0 { pt3dadd( 1.54892, 23.5407, -2.54506, 2.5 ) }
    dend_0 { pt3dadd( 1.74978, 25.2089, -2.60765, 2.5 ) }
    dend_0 { pt3dadd( 1.92258, 26.8903, -2.61829, 2.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.0214497, 13.2277, -1.33988, 1.03278 ) }
    axon_0 { pt3dadd( -0.554051, 28.2167, -1.33988, 1.03278 ) }
    axon_0 { pt3dadd( -1.12955, 43.2056, -1.33988, 1.03278 ) }
    // Section: dend_34, id: dend_34, parent: dend_23 (entry count 62/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.905337, -16.8256, 1.18336, 1.5 ) }
    dend_34 { pt3dadd( 2.71138, -18.699, 1.18336, 1.5 ) }
    dend_34 { pt3dadd( 3.39889, -19.4202, 1.18336, 2.0 ) }
    dend_34 { pt3dadd( 4.8235, -20.9343, 1.18336, 1.77 ) }
    dend_34 { pt3dadd( 5.45173, -21.6151, 1.18336, 1.77 ) }
    dend_34 { pt3dadd( 5.50561, -21.6742, 1.18336, 1.4 ) }
    dend_34 { pt3dadd( 6.2455, -22.4882, 1.18336, 1.77 ) }
    dend_34 { pt3dadd( 7.1072, -23.4548, 1.18336, 1.77 ) }
    dend_34 { pt3dadd( 7.79832, -24.2366, 1.18336, 2.14 ) }
    dend_34 { pt3dadd( 7.99884, -24.4705, 1.18336, 2.14 ) }
    dend_34 { pt3dadd( 8.93647, -25.5771, 1.18336, 2.36 ) }
    dend_34 { pt3dadd( 9.44372, -26.1781, 1.18336, 2.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.905337, -16.8256, 1.18336, 3.02 ) }
    dend_24 { pt3dadd( 0.615002, -19.3729, 1.19375, 3.02 ) }
    dend_24 { pt3dadd( 0.494601, -20.4293, 1.19805, 3.5 ) }
    dend_24 { pt3dadd( 0.215641, -22.8768, 1.20802, 3.5 ) }
    dend_24 { pt3dadd( -0.164898, -26.2155, 1.22163, 3.9 ) }
    dend_24 { pt3dadd( -0.190646, -26.4414, 1.22255, 4.13 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 80/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -34.2328, 62.8297, -5.29386, 0.88 ) }
    dend_22 { pt3dadd( -34.5184, 63.0941, -5.34054, 0.88 ) }
    dend_22 { pt3dadd( -34.9904, 63.5054, -5.41166, 0.88 ) }
    dend_22 { pt3dadd( -35.662, 64.0277, -5.49066, 0.88 ) }
    dend_22 { pt3dadd( -36.2118, 64.4369, -5.54796, 0.29 ) }
    dend_22 { pt3dadd( -36.2684, 64.4778, -5.55236, 0.29 ) }
    dend_22 { pt3dadd( -37.1126, 65.0804, -5.60544, 0.29 ) }
    dend_22 { pt3dadd( -37.2369, 65.1641, -5.61161, 0.29 ) }
    dend_22 { pt3dadd( -38.1999, 65.7987, -5.64623, 0.29 ) }
    dend_22 { pt3dadd( -38.284, 65.8509, -5.64787, 0.29 ) }
    dend_22 { pt3dadd( -39.838, 66.8399, -5.73435, 0.29 ) }
    dend_22 { pt3dadd( -40.451, 67.2315, -5.79673, 0.66 ) }
    dend_22 { pt3dadd( -40.6955, 67.3831, -5.8328, 0.96 ) }
    dend_22 { pt3dadd( -41.0619, 67.6008, -5.89351, 1.25 ) }
    dend_22 { pt3dadd( -41.5071, 67.8556, -5.97913, 1.25 ) }
    dend_22 { pt3dadd( -42.4046, 68.3469, -6.15732, 0.29 ) }
    dend_22 { pt3dadd( -42.636, 68.4695, -6.20512, 0.29 ) }
    dend_22 { pt3dadd( -43.7511, 69.0734, -6.41594, 0.29 ) }
    dend_22 { pt3dadd( -45.1462, 69.8449, -6.65065, 0.29 ) }
    dend_22 { pt3dadd( -45.4869, 70.034, -6.70906, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( -45.9977, 70.3288, -6.79078, 0.96 ) }
    dend_22 { pt3dadd( -46.4392, 70.591, -6.84437, 0.96 ) }
    dend_22 { pt3dadd( -46.9235, 70.8944, -6.91833, 0.96 ) }
    dend_22 { pt3dadd( -46.9803, 70.9337, -6.92974, 0.96 ) }
    dend_22 { pt3dadd( -47.651, 71.4415, -7.09337, 0.29 ) }
    dend_22 { pt3dadd( -47.7054, 71.4836, -7.10635, 0.29 ) }
    dend_22 { pt3dadd( -48.5941, 72.1933, -7.28396, 0.29 ) }
    dend_22 { pt3dadd( -48.6484, 72.2366, -7.29278, 0.29 ) }
    dend_22 { pt3dadd( -49.016, 72.5266, -7.33486, 0.29 ) }
    dend_22 { pt3dadd( -49.0789, 72.5759, -7.33894, 0.29 ) }
    dend_22 { pt3dadd( -49.3204, 72.7608, -7.33894, 0.29 ) }
    dend_22 { pt3dadd( -50.539, 73.6606, -7.33894, 0.29 ) }
    dend_22 { pt3dadd( -50.596, 73.7012, -7.33792, 0.29 ) }
    dend_22 { pt3dadd( -51.007, 73.9874, -7.32574, 0.29 ) }
    dend_22 { pt3dadd( -51.1412, 74.0766, -7.32047, 0.29 ) }
    dend_22 { pt3dadd( -51.8175, 74.5054, -7.28521, 0.29 ) }
    dend_22 { pt3dadd( -52.347, 74.8341, -7.25011, 0.29 ) }
    dend_22 { pt3dadd( -52.6656, 75.0291, -7.17642, 1.11 ) }
    dend_22 { pt3dadd( -52.7929, 75.1109, -7.13657, 1.11 ) }
    dend_22 { pt3dadd( -53.3187, 75.4614, -6.95499, 1.4 ) }
    dend_22 { pt3dadd( -53.403, 75.5188, -6.92527, 1.4 ) }
    dend_22 { pt3dadd( -53.7781, 75.7714, -6.79664, 1.4 ) }
    dend_22 { pt3dadd( -54.8488, 76.5104, -6.39426, 0.22 ) }
    dend_22 { pt3dadd( -56.7029, 77.8218, -5.67427, 0.22 ) }
    dend_22 { pt3dadd( -57.1423, 78.1546, -5.51075, 1.03 ) }
    dend_22 { pt3dadd( -57.4963, 78.4363, -5.38293, 1.47 ) }
    dend_22 { pt3dadd( -57.9572, 78.8062, -5.22508, 1.47 ) }
    dend_22 { pt3dadd( -59.0359, 79.6788, -4.88932, 0.22 ) }
    dend_22 { pt3dadd( -59.0887, 79.7233, -4.87732, 0.22 ) }
    dend_22 { pt3dadd( -60.374, 80.9404, -4.44041, 0.22 ) }
    dend_22 { pt3dadd( -60.422, 80.9881, -4.42241, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -34.2328, 62.8297, -5.29386, 2.06 ) }
    dend_19 { pt3dadd( -34.4363, 63.7433, -5.4269, 2.06 ) }
    dend_19 { pt3dadd( -34.4679, 63.9046, -5.4466, 2.06 ) }
    dend_19 { pt3dadd( -34.6716, 65.0254, -5.57034, 1.55 ) }
    dend_19 { pt3dadd( -34.8927, 66.0142, -5.64443, 0.88 ) }
    dend_19 { pt3dadd( -35.1436, 67.0225, -5.70537, 0.74 ) }
    dend_19 { pt3dadd( -35.1784, 67.1579, -5.71253, 0.74 ) }
    dend_19 { pt3dadd( -35.4389, 68.0708, -5.74748, 0.74 ) }
    dend_19 { pt3dadd( -35.4841, 68.2138, -5.75066, 0.74 ) }
    dend_19 { pt3dadd( -36.5037, 71.0282, -5.75066, 0.74 ) }
    dend_19 { pt3dadd( -36.7169, 71.5655, -5.75066, 1.11 ) }
    dend_19 { pt3dadd( -36.8354, 71.8301, -5.7581, 1.11 ) }
    dend_19 { pt3dadd( -37.3244, 72.8207, -5.81097, 1.11 ) }
    dend_19 { pt3dadd( -37.4817, 73.1009, -5.83276, 1.11 ) }
    dend_19 { pt3dadd( -38.0515, 74.0444, -5.92401, 1.11 ) }
    dend_19 { pt3dadd( -38.0897, 74.1026, -5.93138, 1.11 ) }
    dend_19 { pt3dadd( -38.7259, 75.086, -6.04596, 1.55 ) }
    dend_19 { pt3dadd( -39.356, 76.0803, -6.15385, 1.55 ) }
    dend_19 { pt3dadd( -39.8481, 76.9367, -6.23307, 1.11 ) }
    dend_19 { pt3dadd( -40.3271, 77.9006, -6.29659, 0.96 ) }
    dend_19 { pt3dadd( -40.3547, 77.9649, -6.29921, 0.96 ) }
    dend_19 { pt3dadd( -41.0683, 79.8287, -6.33318, 0.96 ) }
    dend_19 { pt3dadd( -41.1377, 80.0375, -6.332, 0.96 ) }
    dend_19 { pt3dadd( -41.5558, 81.4535, -6.3227, 0.96 ) }
    dend_19 { pt3dadd( -42.1109, 83.5621, -6.30792, 0.96 ) }
    dend_19 { pt3dadd( -42.3403, 84.498, -6.30138, 1.18 ) }
    dend_19 { pt3dadd( -42.5944, 85.5398, -6.26988, 1.62 ) }
    dend_19 { pt3dadd( -42.8475, 86.6212, -6.21564, 1.62 ) }
    dend_19 { pt3dadd( -42.867, 86.6986, -6.21056, 1.62 ) }
    dend_19 { pt3dadd( -43.2042, 87.9225, -6.11001, 1.62 ) }
    dend_19 { pt3dadd( -43.6378, 89.4289, -5.96686, 1.62 ) }
    dend_19 { pt3dadd( -44.0453, 90.8191, -5.83748, 1.62 ) }
    dend_19 { pt3dadd( -44.0677, 90.8954, -5.82846, 1.62 ) }
    dend_19 { pt3dadd( -44.4254, 92.1098, -5.66605, 1.62 ) }
    dend_19 { pt3dadd( -44.7152, 93.0545, -5.53946, 1.25 ) }
    dend_19 { pt3dadd( -44.941, 93.747, -5.4547, 1.03 ) }
    dend_19 { pt3dadd( -45.4671, 95.2243, -5.31802, 1.03 ) }
    dend_19 { pt3dadd( -46.0871, 96.9074, -5.20614, 0.88 ) }
    dend_19 { pt3dadd( -46.1152, 96.9822, -5.20162, 0.88 ) }
    dend_19 { pt3dadd( -46.8083, 98.8118, -5.10713, 0.74 ) }
    dend_19 { pt3dadd( -47.634, 101.025, -5.01742, 0.74 ) }
    dend_19 { pt3dadd( -48.8306, 104.286, -4.88022, 0.74 ) }
    dend_19 { pt3dadd( -49.2919, 105.588, -4.83868, 0.59 ) }
    dend_19 { pt3dadd( -49.3882, 105.872, -4.83353, 0.59 ) }
    dend_19 { pt3dadd( -50.1561, 108.295, -4.78155, 0.59 ) }
    dend_19 { pt3dadd( -50.7666, 110.429, -4.70002, 0.59 ) }
    dend_19 { pt3dadd( -50.9468, 111.164, -4.65763, 1.92 ) }
    dend_19 { pt3dadd( -51.2287, 112.654, -4.54278, 2.65 ) }
    dend_19 { pt3dadd( -51.2403, 112.722, -4.53673, 2.65 ) }
    dend_19 { pt3dadd( -51.3607, 113.525, -4.46127, 2.65 ) }
    dend_19 { pt3dadd( -51.465, 114.436, -4.36587, 0.66 ) }
    dend_19 { pt3dadd( -51.5577, 115.38, -4.27341, 0.66 ) }
    dend_19 { pt3dadd( -51.7026, 117.274, -4.12697, 0.66 ) }
    dend_19 { pt3dadd( -51.7068, 117.354, -4.12017, 0.66 ) }
    dend_19 { pt3dadd( -51.7383, 118.221, -4.06274, 0.88 ) }
    dend_19 { pt3dadd( -51.7405, 118.371, -4.05675, 0.88 ) }
    dend_19 { pt3dadd( -51.7349, 119.25, -4.01375, 0.88 ) }
    dend_19 { pt3dadd( -51.7483, 120.187, -3.92905, 1.33 ) }
    dend_19 { pt3dadd( -51.7558, 120.406, -3.90293, 1.33 ) }
    dend_19 { pt3dadd( -51.8285, 121.494, -3.76242, 1.33 ) }
    dend_19 { pt3dadd( -51.8343, 121.553, -3.75412, 1.33 ) }
    dend_19 { pt3dadd( -52.0156, 122.832, -3.57237, 0.52 ) }
    dend_19 { pt3dadd( -52.3056, 124.373, -3.34559, 0.52 ) }
    dend_19 { pt3dadd( -52.4975, 125.156, -3.23661, 0.52 ) }
    dend_19 { pt3dadd( -52.6198, 125.546, -3.20299, 1.03 ) }
    dend_19 { pt3dadd( -52.6742, 125.686, -3.20089, 1.03 ) }
    dend_19 { pt3dadd( -52.9803, 126.417, -3.22609, 1.03 ) }
    dend_19 { pt3dadd( -53.0091, 126.481, -3.23197, 1.03 ) }
    dend_19 { pt3dadd( -53.4112, 127.343, -3.31285, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( -53.8978, 128.408, -3.40142, 0.29 ) }
    dend_19 { pt3dadd( -54.6732, 130.152, -3.5347, 0.29 ) }
    dend_19 { pt3dadd( -54.9687, 130.847, -3.58151, 1.03 ) }
    dend_19 { pt3dadd( -55.2673, 131.573, -3.62249, 1.18 ) }
    dend_19 { pt3dadd( -55.6574, 132.543, -3.66687, 1.18 ) }
    dend_19 { pt3dadd( -56.1143, 133.706, -3.70177, 1.33 ) }
    dend_19 { pt3dadd( -56.5242, 134.792, -3.70987, 1.69 ) }
    dend_19 { pt3dadd( -56.9213, 135.818, -3.72489, 2.43 ) }
    dend_19 { pt3dadd( -57.378, 136.98, -3.75281, 2.95 ) }
    dend_19 { pt3dadd( -57.4071, 137.054, -3.75475, 2.95 ) }
    dend_19 { pt3dadd( -57.8163, 138.123, -3.78402, 3.32 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 34.3111, 4.04217, 1.06446, 0.81 ) }
    dend_17 { pt3dadd( 35.3507, 3.1372, 2.16872, 0.81 ) }
    dend_17 { pt3dadd( 36.3977, 2.2247, 3.18397, 0.52 ) }
    dend_17 { pt3dadd( 36.4418, 2.18838, 3.22451, 0.52 ) }
    dend_17 { pt3dadd( 37.3056, 1.48904, 4.00045, 0.66 ) }
    dend_17 { pt3dadd( 37.9327, 1.0052, 4.5185, 0.66 ) }
    dend_17 { pt3dadd( 38.1307, 0.858824, 4.67165, 0.66 ) }
    dend_17 { pt3dadd( 38.4262, 0.662657, 4.84698, 0.66 ) }
    dend_17 { pt3dadd( 39.5306, -2.36958E-4, 5.34906, 0.44 ) }
    dend_17 { pt3dadd( 39.5887, -0.0316879, 5.37213, 0.44 ) }
    dend_17 { pt3dadd( 40.3496, -0.377757, 5.59002, 0.44 ) }
    dend_17 { pt3dadd( 40.5422, -0.453309, 5.6646, 0.74 ) }
    dend_17 { pt3dadd( 40.674, -0.499909, 5.71913, 0.74 ) }
    dend_17 { pt3dadd( 41.3387, -0.72483, 5.99256, 0.74 ) }
    dend_17 { pt3dadd( 41.4865, -0.77201, 6.05016, 0.74 ) }
    dend_17 { pt3dadd( 42.2559, -0.97738, 6.37741, 0.74 ) }
    dend_17 { pt3dadd( 43.6344, -1.27788, 7.03778, 0.88 ) }
    dend_17 { pt3dadd( 44.2365, -1.36429, 7.33457, 0.88 ) }
    dend_17 { pt3dadd( 44.7072, -1.39622, 7.5736, 0.37 ) }
    dend_17 { pt3dadd( 44.769, -1.39526, 7.60643, 0.37 ) }
    dend_17 { pt3dadd( 45.3677, -1.33723, 7.87818, 0.37 ) }
    dend_17 { pt3dadd( 45.4674, -1.31826, 7.90958, 0.37 ) }
    dend_17 { pt3dadd( 46.032, -1.2254, 7.96543, 0.37 ) }
    dend_17 { pt3dadd( 46.4908, -1.1848, 8.01042, 0.96 ) }
    dend_17 { pt3dadd( 46.7626, -1.18276, 8.03468, 0.96 ) }
    dend_17 { pt3dadd( 47.502, -1.23532, 8.09039, 0.96 ) }
    dend_17 { pt3dadd( 48.0058, -1.30724, 8.1229, 1.25 ) }
    dend_17 { pt3dadd( 48.2753, -1.35029, 8.15298, 1.25 ) }
    dend_17 { pt3dadd( 48.769, -1.44719, 8.2621, 1.25 ) }
    dend_17 { pt3dadd( 48.9754, -1.49557, 8.32082, 1.25 ) }
    dend_17 { pt3dadd( 49.3846, -1.60613, 8.45814, 1.25 ) }
    dend_17 { pt3dadd( 49.4561, -1.62956, 8.48528, 1.25 ) }
    dend_17 { pt3dadd( 50.1684, -1.93419, 8.86596, 1.25 ) }
    dend_17 { pt3dadd( 51.1391, -2.37832, 9.58746, 0.74 ) }
    dend_17 { pt3dadd( 51.6244, -2.61167, 10.0156, 0.74 ) }
    dend_17 { pt3dadd( 51.8154, -2.69783, 10.2315, 0.74 ) }
    dend_17 { pt3dadd( 52.1218, -2.80399, 10.6015, 0.74 ) }
    dend_17 { pt3dadd( 53.3165, -3.11351, 12.0607, 0.74 ) }
    dend_17 { pt3dadd( 54.2269, -3.28691, 13.2316, 0.66 ) }
    dend_17 { pt3dadd( 54.2766, -3.29426, 13.2938, 0.66 ) }
    dend_17 { pt3dadd( 55.5613, -3.44194, 14.8463, 0.96 ) }
    dend_17 { pt3dadd( 56.4244, -3.54482, 15.7809, 0.96 ) }
    dend_17 { pt3dadd( 57.4513, -3.67409, 16.7068, 0.52 ) }
    dend_17 { pt3dadd( 58.2872, -3.79043, 17.273, 1.11 ) }
    dend_17 { pt3dadd( 59.3885, -4.01044, 17.8377, 1.25 ) }
    dend_17 { pt3dadd( 59.4519, -4.02649, 17.8626, 1.25 ) }
    dend_17 { pt3dadd( 60.6218, -4.40885, 18.1126, 1.25 ) }
    dend_17 { pt3dadd( 61.5479, -4.75938, 18.2891, 0.96 ) }
    dend_17 { pt3dadd( 61.8471, -4.87083, 18.3307, 0.96 ) }
    dend_17 { pt3dadd( 62.2216, -5.00196, 18.3747, 1.25 ) }
    dend_17 { pt3dadd( 62.9484, -5.24003, 18.4801, 1.25 ) }
    dend_17 { pt3dadd( 64.386, -5.66229, 18.7069, 1.25 ) }
    dend_17 { pt3dadd( 65.5091, -5.93175, 18.8979, 0.96 ) }
    dend_17 { pt3dadd( 65.7222, -5.97274, 18.934, 0.96 ) }
    dend_17 { pt3dadd( 66.5165, -6.09432, 19.0633, 0.96 ) }
    dend_17 { pt3dadd( 66.5854, -6.10173, 19.0736, 0.96 ) }
    dend_17 { pt3dadd( 67.5497, -6.14816, 19.1833, 0.96 ) }
    dend_17 { pt3dadd( 68.3608, -6.13867, 19.2384, 1.25 ) }
    dend_17 { pt3dadd( 68.7307, -6.1298, 19.2412, 1.47 ) }
    dend_17 { pt3dadd( 68.8007, -6.12781, 19.2408, 1.47 ) }
    dend_17 { pt3dadd( 69.2394, -6.11275, 19.2116, 1.47 ) }
    dend_17 { pt3dadd( 70.5634, -6.05905, 19.0775, 0.88 ) }
    dend_17 { pt3dadd( 70.6229, -6.05661, 19.0701, 0.88 ) }
    dend_17 { pt3dadd( 71.5652, -6.01944, 18.8904, 0.66 ) }
    dend_17 { pt3dadd( 73.0873, -5.97957, 18.5561, 0.66 ) }
    dend_17 { pt3dadd( 74.3391, -5.96235, 18.2701, 1.03 ) }
    dend_17 { pt3dadd( 75.0007, -5.95877, 18.1275, 1.25 ) }
    dend_17 { pt3dadd( 75.9422, -5.97581, 17.9409, 1.47 ) }
    dend_17 { pt3dadd( 77.4412, -6.03329, 17.6733, 0.81 ) }
    dend_17 { pt3dadd( 78.9846, -6.15113, 17.5183, 0.74 ) }
    dend_17 { pt3dadd( 80.1571, -6.30033, 17.5312, 0.74 ) }
    dend_17 { pt3dadd( 80.9754, -6.4419, 17.6274, 1.11 ) }
    dend_17 { pt3dadd( 82.1165, -6.67963, 17.8395, 1.11 ) }
    dend_17 { pt3dadd( 82.192, -6.69736, 17.8591, 1.11 ) }
    dend_17 { pt3dadd( 84.0975, -7.19711, 18.6083, 1.11 ) }
    dend_17 { pt3dadd( 84.9071, -7.43706, 18.9826, 1.33 ) }
    dend_17 { pt3dadd( 85.6431, -7.67779, 19.3576, 1.47 ) }
    dend_17 { pt3dadd( 86.5829, -8.00201, 19.8518, 1.62 ) }
    dend_17 { pt3dadd( 86.641, -8.02211, 19.8852, 1.62 ) }
    dend_17 { pt3dadd( 87.908, -8.46199, 20.6262, 1.62 ) }
    dend_17 { pt3dadd( 88.7952, -8.76871, 21.127, 0.96 ) }
    dend_17 { pt3dadd( 89.9571, -9.14881, 21.7476, 0.59 ) }
    dend_17 { pt3dadd( 90.0163, -9.16791, 21.7797, 0.59 ) }
    dend_17 { pt3dadd( 90.9392, -9.45381, 22.318, 0.88 ) }
    dend_17 { pt3dadd( 91.1269, -9.50398, 22.4213, 1.25 ) }
    dend_17 { pt3dadd( 91.8757, -9.65712, 22.7682, 1.25 ) }
    dend_17 { pt3dadd( 92.6074, -9.72052, 23.1414, 1.25 ) }
    dend_17 { pt3dadd( 92.6782, -9.71772, 23.1784, 1.25 ) }
    dend_17 { pt3dadd( 93.8891, -9.57397, 23.8294, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( 94.4584, -9.44207, 24.1441, 1.33 ) }
    dend_17 { pt3dadd( 95.1678, -9.20155, 24.6111, 0.59 ) }
    dend_17 { pt3dadd( 96.2954, -8.72056, 25.3884, 0.59 ) }
    dend_17 { pt3dadd( 96.8122, -8.48572, 25.7277, 0.44 ) }
    dend_17 { pt3dadd( 96.8774, -8.45742, 25.7644, 0.44 ) }
    dend_17 { pt3dadd( 97.3307, -8.2848, 25.9221, 0.44 ) }
    dend_17 { pt3dadd( 98.5508, -7.90911, 26.2269, 0.44 ) }
    dend_17 { pt3dadd( 99.5214, -7.7403, 26.313, 1.25 ) }
    dend_17 { pt3dadd( 100.21, -7.71364, 26.219, 1.62 ) }
    dend_17 { pt3dadd( 100.57, -7.70793, 26.11, 1.62 ) }
    dend_17 { pt3dadd( 101.655, -7.6733, 25.7162, 0.96 ) }
    dend_17 { pt3dadd( 101.73, -7.66894, 25.6884, 0.96 ) }
    dend_17 { pt3dadd( 102.611, -7.5909, 25.3437, 0.96 ) }
    dend_17 { pt3dadd( 103.866, -7.44345, 24.9065, 0.96 ) }
    dend_17 { pt3dadd( 105.377, -7.2581, 24.4063, 0.52 ) }
    dend_17 { pt3dadd( 106.589, -7.10881, 24.0282, 0.52 ) }
    dend_17 { pt3dadd( 108.177, -6.92193, 23.5826, 0.52 ) }
    dend_17 { pt3dadd( 108.245, -6.91301, 23.5667, 0.52 ) }
    dend_17 { pt3dadd( 109.04, -6.79062, 23.4722, 0.52 ) }
    dend_17 { pt3dadd( 109.727, -6.67359, 23.5045, 0.52 ) }
    dend_17 { pt3dadd( 109.837, -6.65639, 23.5265, 0.52 ) }
    dend_17 { pt3dadd( 110.398, -6.56774, 23.6847, 0.29 ) }
    dend_17 { pt3dadd( 111.44, -6.40707, 24.0438, 0.29 ) }
    dend_17 { pt3dadd( 112.744, -6.2022, 24.5176, 1.11 ) }
    dend_17 { pt3dadd( 112.796, -6.19253, 24.5633, 1.11 ) }
    dend_17 { pt3dadd( 113.371, -6.10472, 25.2592, 1.11 ) }
    dend_17 { pt3dadd( 113.414, -6.10138, 25.3145, 1.11 ) }
    dend_17 { pt3dadd( 113.804, -6.09364, 25.8589, 1.11 ) }
    dend_17 { pt3dadd( 113.842, -6.09511, 25.9178, 1.11 ) }
    dend_17 { pt3dadd( 115.958, -6.21351, 29.3603, 0.66 ) }
    dend_17 { pt3dadd( 116.28, -6.22892, 29.9334, 0.22 ) }
    dend_17 { pt3dadd( 116.736, -6.24343, 30.8691, 0.22 ) }
    dend_17 { pt3dadd( 116.769, -6.24484, 30.9418, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 33/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 34.3111, 4.04217, 1.06446, 0.66 ) }
    dend_16 { pt3dadd( 35.3591, 4.24689, 1.06446, 0.66 ) }
    dend_16 { pt3dadd( 36.6661, 4.47864, 1.06446, 0.66 ) }
    dend_16 { pt3dadd( 36.7708, 4.49391, 1.05417, 0.66 ) }
    dend_16 { pt3dadd( 37.4923, 4.59015, 0.956987, 1.03 ) }
    dend_16 { pt3dadd( 37.7056, 4.61722, 0.910242, 1.03 ) }
    dend_16 { pt3dadd( 38.4209, 4.69299, 0.719028, 1.03 ) }
    dend_16 { pt3dadd( 38.5831, 4.69734, 0.668252, 1.03 ) }
    dend_16 { pt3dadd( 40.3027, 4.68264, 0.082539, 0.81 ) }
    dend_16 { pt3dadd( 40.3689, 4.68018, 0.0599778, 0.81 ) }
    dend_16 { pt3dadd( 42.0357, 4.58675, -0.519236, 0.66 ) }
    dend_16 { pt3dadd( 43.5481, 4.48988, -1.03351, 0.44 ) }
    dend_16 { pt3dadd( 44.5275, 4.4168, -1.35673, 0.44 ) }
    dend_16 { pt3dadd( 44.6711, 4.40525, -1.39841, 0.44 ) }
    dend_16 { pt3dadd( 45.1974, 4.35858, -1.51596, 0.44 ) }
    dend_16 { pt3dadd( 45.2759, 4.35266, -1.5299, 0.44 ) }
    dend_16 { pt3dadd( 45.8022, 4.32158, -1.57232, 0.66 ) }
    dend_16 { pt3dadd( 46.0218, 4.32366, -1.58447, 0.66 ) }
    dend_16 { pt3dadd( 46.8588, 4.36114, -1.63503, 0.66 ) }
    dend_16 { pt3dadd( 47.0285, 4.36504, -1.64491, 0.66 ) }
    dend_16 { pt3dadd( 48.0302, 4.35593, -1.69968, 0.66 ) }
    dend_16 { pt3dadd( 48.8415, 4.31948, -1.73892, 1.4 ) }
    dend_16 { pt3dadd( 49.5024, 4.26597, -1.76662, 1.99 ) }
    dend_16 { pt3dadd( 49.9645, 4.21795, -1.78317, 2.28 ) }
    dend_16 { pt3dadd( 50.7713, 4.12002, -1.80412, 1.92 ) }
    dend_16 { pt3dadd( 51.4728, 4.04917, -1.78819, 1.62 ) }
    dend_16 { pt3dadd( 52.282, 3.99006, -1.73601, 0.96 ) }
    dend_16 { pt3dadd( 53.023, 3.93601, -1.67835, 0.59 ) }
    dend_16 { pt3dadd( 53.1025, 3.93058, -1.67149, 0.59 ) }
    dend_16 { pt3dadd( 54.4148, 3.84581, -1.55672, 0.52 ) }
    dend_16 { pt3dadd( 55.6978, 3.77209, -1.44058, 0.52 ) }
    dend_16 { pt3dadd( 56.8714, 3.71566, -1.33227, 0.52 ) }
    dend_16 { pt3dadd( 58.6086, 3.63704, -1.1721, 0.52 ) }
    dend_16 { pt3dadd( 58.6882, 3.63356, -1.16499, 0.52 ) }
    dend_16 { pt3dadd( 60.0308, 3.57674, -1.05743, 0.52 ) }
    dend_16 { pt3dadd( 61.1374, 3.52814, -0.987798, 0.52 ) }
    dend_16 { pt3dadd( 61.2074, 3.52639, -0.986032, 0.52 ) }
    dend_16 { pt3dadd( 61.4272, 3.53379, -0.980047, 0.96 ) }
    dend_16 { pt3dadd( 61.5065, 3.54419, -0.981944, 0.96 ) }
    dend_16 { pt3dadd( 62.2387, 3.67299, -1.03326, 1.4 ) }
    dend_16 { pt3dadd( 62.7349, 3.81661, -1.09263, 1.69 ) }
    dend_16 { pt3dadd( 63.3306, 4.01078, -1.17895, 1.55 ) }
    dend_16 { pt3dadd( 63.8897, 4.19527, -1.26763, 1.18 ) }
    dend_16 { pt3dadd( 64.7146, 4.48098, -1.40786, 0.29 ) }
    dend_16 { pt3dadd( 64.7796, 4.50428, -1.41957, 0.29 ) }
    dend_16 { pt3dadd( 66.4871, 5.14519, -1.72994, 0.29 ) }
    dend_16 { pt3dadd( 66.6254, 5.19814, -1.75414, 0.29 ) }
    dend_16 { pt3dadd( 66.9491, 5.3138, -1.79936, 0.66 ) }
    dend_16 { pt3dadd( 67.1486, 5.38324, -1.8186, 0.66 ) }
    dend_16 { pt3dadd( 67.2151, 5.40498, -1.82138, 0.66 ) }
    dend_16 { pt3dadd( 68.1952, 5.705, -1.84531, 0.37 ) }
    dend_16 { pt3dadd( 68.2622, 5.72514, -1.84552, 0.37 ) }
    dend_16 { pt3dadd( 69.4974, 6.10686, -1.82897, 0.37 ) }
    dend_16 { pt3dadd( 69.7835, 6.19834, -1.84666, 0.74 ) }
    dend_16 { pt3dadd( 69.8495, 6.21986, -1.85548, 0.74 ) }
    dend_16 { pt3dadd( 70.5109, 6.46018, -1.99323, 0.96 ) }
    dend_16 { pt3dadd( 71.1809, 6.73699, -2.19245, 0.96 ) }
    dend_16 { pt3dadd( 71.309, 6.80031, -2.23808, 0.96 ) }
    dend_16 { pt3dadd( 72.2958, 7.43653, -2.74287, 0.29 ) }
    dend_16 { pt3dadd( 72.3477, 7.47349, -2.7718, 0.29 ) }
    dend_16 { pt3dadd( 73.0313, 8.00436, -3.18064, 0.29 ) }
    dend_16 { pt3dadd( 73.1449, 8.10197, -3.25107, 0.29 ) }
    dend_16 { pt3dadd( 73.5369, 8.45527, -3.47916, 0.29 ) }
    dend_16 { pt3dadd( 74.3607, 9.22618, -3.88016, 1.84 ) }
    dend_16 { pt3dadd( 74.5918, 9.4488, -3.96145, 2.21 ) }
    dend_16 { pt3dadd( 74.7871, 9.65128, -4.05458, 2.58 ) }
    dend_16 { pt3dadd( 75.1088, 10.0099, -4.24956, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( 75.1574, 10.0662, -4.27896, 2.58 ) }
    dend_16 { pt3dadd( 75.3346, 10.3122, -4.40017, 2.58 ) }
    dend_16 { pt3dadd( 75.3682, 10.3663, -4.42919, 2.58 ) }
    dend_16 { pt3dadd( 76.1103, 11.663, -5.1259, 0.44 ) }
    dend_16 { pt3dadd( 76.1451, 11.7264, -5.16002, 0.44 ) }
    dend_16 { pt3dadd( 76.6199, 12.5984, -5.6146, 0.44 ) }
    dend_16 { pt3dadd( 77.4046, 14.0171, -6.36693, 0.44 ) }
    dend_16 { pt3dadd( 77.9997, 15.0605, -6.91794, 0.44 ) }
    dend_16 { pt3dadd( 78.455, 15.8382, -7.31282, 0.44 ) }
    dend_16 { pt3dadd( 78.489, 15.8934, -7.33917, 0.44 ) }
    dend_16 { pt3dadd( 78.973, 16.6146, -7.68082, 0.44 ) }
    dend_16 { pt3dadd( 79.9149, 17.8015, -8.24379, 1.84 ) }
    dend_16 { pt3dadd( 80.2305, 18.1209, -8.38314, 2.21 ) }
    dend_16 { pt3dadd( 80.5702, 18.4244, -8.49935, 1.84 ) }
    dend_16 { pt3dadd( 81.0018, 18.7761, -8.61631, 1.03 ) }
    dend_16 { pt3dadd( 81.5262, 19.1623, -8.70638, 0.59 ) }
    dend_16 { pt3dadd( 83.1032, 20.2368, -8.85712, 0.37 ) }
    dend_16 { pt3dadd( 83.6821, 20.6105, -8.87215, 0.59 ) }
    dend_16 { pt3dadd( 84.3367, 21.0203, -8.87758, 0.59 ) }
    dend_16 { pt3dadd( 85.1317, 21.5075, -8.86949, 0.29 ) }
    dend_16 { pt3dadd( 86.9566, 22.6273, -8.79888, 0.29 ) }
    dend_16 { pt3dadd( 87.4393, 22.9234, -8.7493, 0.29 ) }
    dend_16 { pt3dadd( 87.5073, 22.9639, -8.73755, 0.29 ) }
    dend_16 { pt3dadd( 88.1568, 23.3574, -8.6152, 1.33 ) }
    dend_16 { pt3dadd( 88.5611, 23.5973, -8.5386, 1.84 ) }
    dend_16 { pt3dadd( 89.3426, 24.0648, -8.39841, 1.84 ) }
    dend_16 { pt3dadd( 90.1419, 24.56, -8.21929, 0.29 ) }
    dend_16 { pt3dadd( 91.2379, 25.241, -7.96678, 0.29 ) }
    dend_16 { pt3dadd( 91.3044, 25.2841, -7.95607, 0.29 ) }
    dend_16 { pt3dadd( 91.5498, 25.4523, -7.93308, 0.59 ) }
    dend_16 { pt3dadd( 91.6156, 25.497, -7.94092, 0.59 ) }
    dend_16 { pt3dadd( 91.9003, 25.704, -8.0338, 0.59 ) }
    dend_16 { pt3dadd( 92.0979, 25.8569, -8.12581, 0.59 ) }
    dend_16 { pt3dadd( 92.9634, 26.5535, -8.57253, 0.22 ) }
    dend_16 { pt3dadd( 93.0146, 26.5941, -8.59755, 0.22 ) }
    dend_16 { pt3dadd( 94.109, 27.4791, -9.10306, 0.22 ) }
    dend_16 { pt3dadd( 94.9535, 28.1575, -9.46896, 0.22 ) }
    dend_16 { pt3dadd( 95.0045, 28.1994, -9.49227, 0.22 ) }
    dend_16 { pt3dadd( 95.3504, 28.4873, -9.65049, 1.03 ) }
    dend_16 { pt3dadd( 95.7906, 28.8607, -9.81541, 1.55 ) }
    dend_16 { pt3dadd( 96.199, 29.2104, -9.95496, 1.55 ) }
    dend_16 { pt3dadd( 96.2505, 29.2551, -9.97067, 1.55 ) }
    dend_16 { pt3dadd( 98.1659, 30.9547, -10.6154, 0.29 ) }
    dend_16 { pt3dadd( 98.2162, 31.0002, -10.6328, 0.29 ) }
    dend_16 { pt3dadd( 99.8791, 32.5499, -11.214, 0.29 ) }
    dend_16 { pt3dadd( 100.115, 32.7727, -11.2973, 0.59 ) }
    dend_16 { pt3dadd( 100.476, 33.1087, -11.4247, 0.59 ) }
    dend_16 { pt3dadd( 101.876, 34.4241, -11.9045, 0.22 ) }
    dend_16 { pt3dadd( 101.992, 34.5368, -11.9404, 0.44 ) }
    dend_16 { pt3dadd( 102.289, 34.8311, -12.0415, 0.44 ) }
    dend_16 { pt3dadd( 102.337, 34.8789, -12.0597, 0.44 ) }
    dend_16 { pt3dadd( 103.607, 36.1028, -12.5532, 0.22 ) }
    dend_16 { pt3dadd( 103.658, 36.1483, -12.5681, 0.22 ) }
    dend_16 { pt3dadd( 104.15, 36.5344, -12.6394, 1.33 ) }
    dend_16 { pt3dadd( 104.466, 36.7763, -12.6762, 1.69 ) }
    dend_16 { pt3dadd( 105.047, 37.2143, -12.7343, 1.69 ) }
    dend_16 { pt3dadd( 105.95, 37.8914, -12.8113, 0.22 ) }
    dend_16 { pt3dadd( 108.49, 39.7849, -12.9844, 0.22 ) }
    dend_16 { pt3dadd( 112.832, 42.9805, -13.2925, 0.22 ) }
    dend_16 { pt3dadd( 113.297, 43.318, -13.3255, 1.25 ) }
    dend_16 { pt3dadd( 113.43, 43.4161, -13.3345, 1.69 ) }
    dend_16 { pt3dadd( 113.555, 43.5093, -13.342, 1.69 ) }
    dend_16 { pt3dadd( 113.768, 43.6687, -13.3493, 1.69 ) }
    dend_16 { pt3dadd( 114.26, 44.0386, -13.3777, 1.18 ) }
    dend_16 { pt3dadd( 114.767, 44.4775, -13.4356, 0.29 ) }
    dend_16 { pt3dadd( 115.474, 45.0905, -13.5099, 0.29 ) }
    dend_16 { pt3dadd( 115.527, 45.1353, -13.522, 0.29 ) }
    dend_16 { pt3dadd( 116.171, 45.6499, -13.6931, 0.29 ) }
    dend_16 { pt3dadd( 116.224, 45.6932, -13.7079, 0.66 ) }
    dend_16 { pt3dadd( 116.733, 46.1119, -13.846, 0.66 ) }
    dend_16 { pt3dadd( 116.794, 46.1607, -13.8631, 0.66 ) }
    dend_16 { pt3dadd( 117.907, 47.0103, -14.1886, 0.22 ) }
    dend_16 { pt3dadd( 120.441, 48.8405, -14.8935, 0.22 ) }
    dend_16 { pt3dadd( 120.709, 49.0179, -14.9581, 0.74 ) }
    dend_16 { pt3dadd( 121.432, 49.4605, -15.1068, 0.74 ) }
    dend_16 { pt3dadd( 121.493, 49.4943, -15.1169, 0.74 ) }
    dend_16 { pt3dadd( 122.303, 49.9136, -15.2146, 0.37 ) }
    dend_16 { pt3dadd( 123.289, 50.3776, -15.2662, 0.37 ) }
    dend_16 { pt3dadd( 124.933, 51.0467, -15.3435, 0.37 ) }
    dend_16 { pt3dadd( 125.27, 51.1991, -15.3532, 1.47 ) }
    dend_16 { pt3dadd( 125.834, 51.4795, -15.3594, 1.92 ) }
    dend_16 { pt3dadd( 126.295, 51.7636, -15.3555, 1.92 ) }
    dend_16 { pt3dadd( 126.973, 52.2478, -15.3351, 0.37 ) }
    dend_16 { pt3dadd( 127.299, 52.5092, -15.3245, 0.22 ) }
    dend_16 { pt3dadd( 128.96, 53.9932, -15.2686, 0.22 ) }
    dend_16 { pt3dadd( 129.038, 54.0658, -15.2661, 0.22 ) }
    dend_16 { pt3dadd( 130.972, 55.9505, -15.2062, 0.22 ) }
    dend_16 { pt3dadd( 131.021, 56.0003, -15.2048, 0.22 ) }
    dend_16 { pt3dadd( 131.421, 56.4131, -15.197, 0.96 ) }
    dend_16 { pt3dadd( 131.829, 56.8418, -15.197, 0.96 ) }
    dend_16 { pt3dadd( 131.978, 57.0036, -15.197, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 91/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.92258, 26.8903, -2.61829, 1.25 ) }
    dend_12 { pt3dadd( 0.716499, 27.8603, -2.61829, 1.25 ) }
    dend_12 { pt3dadd( 0.656956, 27.9134, -2.62454, 1.25 ) }
    dend_12 { pt3dadd( 0.11761, 28.4186, -2.70193, 1.25 ) }
    dend_12 { pt3dadd( 0.0611409, 28.473, -2.71788, 1.25 ) }
    dend_12 { pt3dadd( -0.619427, 29.145, -2.94962, 1.25 ) }
    dend_12 { pt3dadd( -0.692439, 29.2177, -2.97574, 1.25 ) }
    dend_12 { pt3dadd( -1.34406, 29.9232, -3.32306, 1.18 ) }
    dend_12 { pt3dadd( -2.03175, 30.6653, -3.7298, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( -2.8677, 31.5594, -4.23625, 0.96 ) }
    dend_12 { pt3dadd( -2.92963, 31.6266, -4.27429, 0.96 ) }
    dend_12 { pt3dadd( -3.40641, 32.1512, -4.59947, 1.25 ) }
    dend_12 { pt3dadd( -4.22756, 33.0579, -5.23946, 1.69 ) }
    dend_12 { pt3dadd( -4.68902, 33.5658, -5.6101, 2.14 ) }
    dend_12 { pt3dadd( -5.32254, 34.2759, -6.15611, 2.14 ) }
    dend_12 { pt3dadd( -5.36325, 34.3216, -6.19001, 2.14 ) }
    dend_12 { pt3dadd( -5.96654, 34.9934, -6.71163, 2.14 ) }
    dend_12 { pt3dadd( -6.79167, 35.9308, -7.5118, 1.69 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.92258, 26.8903, -2.61829, 2.5 ) }
    dend_1 { pt3dadd( 1.9116, 27.029, -2.58452, 2.5 ) }
    dend_1 { pt3dadd( 1.7906, 28.6412, -2.2328, 2.43 ) }
    dend_1 { pt3dadd( 1.65677, 30.4243, -1.84376, 2.43 ) }
    dend_1 { pt3dadd( 1.53417, 32.0578, -1.48738, 2.5 ) }
    dend_1 { pt3dadd( 1.43023, 33.4426, -1.18525, 2.87 ) }
    dend_1 { pt3dadd( 1.31322, 35.0017, -0.845123, 3.09 ) }
    dend_1 { pt3dadd( 1.27307, 35.5591, -0.732813, 3.09 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 17/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.12955, 43.2056, -1.33988, 1.1429 ) }
    axon_1 { pt3dadd( -1.70505, 58.1946, -1.33988, 1.1429 ) }
    axon_1 { pt3dadd( -2.28055, 73.1835, -1.33988, 1.1429 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 9.44372, -26.1781, 1.18336, 1.03 ) }
    dend_36 { pt3dadd( 10.7042, -26.7093, 1.16445, 1.03 ) }
    dend_36 { pt3dadd( 11.8501, -27.1876, 1.1908, 1.03 ) }
    dend_36 { pt3dadd( 13.5564, -27.8992, 1.26064, 1.03 ) }
    dend_36 { pt3dadd( 14.641, -28.3781, 1.32082, 1.33 ) }
    dend_36 { pt3dadd( 14.8478, -28.4768, 1.34113, 1.33 ) }
    dend_36 { pt3dadd( 15.7806, -28.9541, 1.45436, 1.33 ) }
    dend_36 { pt3dadd( 16.6867, -29.4997, 1.58756, 1.33 ) }
    dend_36 { pt3dadd( 16.7442, -29.5382, 1.59799, 1.33 ) }
    dend_36 { pt3dadd( 17.8127, -30.3411, 1.8277, 1.33 ) }
    dend_36 { pt3dadd( 18.8969, -31.237, 2.07153, 1.18 ) }
    dend_36 { pt3dadd( 19.5561, -31.8132, 2.20239, 1.18 ) }
    dend_36 { pt3dadd( 20.4657, -32.6474, 2.39037, 1.18 ) }
    dend_36 { pt3dadd( 21.1411, -33.2887, 2.52107, 1.11 ) }
    dend_36 { pt3dadd( 21.2421, -33.3838, 2.53955, 1.11 ) }
    dend_36 { pt3dadd( 21.9002, -33.977, 2.67526, 1.33 ) }
    dend_36 { pt3dadd( 22.7636, -34.7047, 2.85477, 1.33 ) }
    dend_36 { pt3dadd( 23.6598, -35.4114, 3.06755, 0.66 ) }
    dend_36 { pt3dadd( 24.0277, -35.6755, 3.16024, 0.66 ) }
    dend_36 { pt3dadd( 25.7306, -36.7942, 3.58837, 0.66 ) }
    dend_36 { pt3dadd( 26.6112, -37.3533, 3.81328, 1.33 ) }
    dend_36 { pt3dadd( 27.0536, -37.611, 3.92814, 1.62 ) }
    dend_36 { pt3dadd( 27.1138, -37.6432, 3.94316, 1.62 ) }
    dend_36 { pt3dadd( 27.8779, -38.0118, 4.0867, 1.84 ) }
    dend_36 { pt3dadd( 28.3534, -38.2121, 4.18164, 1.99 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 45/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 9.44372, -26.1781, 1.18336, 0.66 ) }
    dend_35 { pt3dadd( 9.65056, -26.9946, 1.11821, 0.66 ) }
    dend_35 { pt3dadd( 9.7748, -27.4225, 1.08003, 0.66 ) }
    dend_35 { pt3dadd( 10.0035, -28.1213, 1.01856, 0.66 ) }
    dend_35 { pt3dadd( 10.2699, -28.887, 0.956959, 0.66 ) }
    dend_35 { pt3dadd( 10.5002, -29.5338, 0.913139, 0.66 ) }
    dend_35 { pt3dadd( 10.9037, -30.6736, 0.850624, 0.66 ) }
    dend_35 { pt3dadd( 10.956, -30.814, 0.843178, 0.66 ) }
    dend_35 { pt3dadd( 11.231, -31.584, 0.806792, 1.03 ) }
    dend_35 { pt3dadd( 11.5291, -32.4606, 0.771119, 1.25 ) }
    dend_35 { pt3dadd( 11.9982, -33.83, 0.720959, 0.74 ) }
    dend_35 { pt3dadd( 12.4868, -35.3576, 0.676859, 0.74 ) }
    dend_35 { pt3dadd( 12.6942, -36.0342, 0.665251, 1.11 ) }
    dend_35 { pt3dadd( 12.9848, -36.9386, 0.65786, 1.11 ) }
    dend_35 { pt3dadd( 13.0168, -37.0323, 0.657621, 1.11 ) }
    dend_35 { pt3dadd( 13.3032, -37.8351, 0.659485, 0.66 ) }
    dend_35 { pt3dadd( 13.739, -39.0166, 0.670151, 0.52 ) }
    dend_35 { pt3dadd( 14.564, -41.1859, 0.702709, 0.52 ) }
    dend_35 { pt3dadd( 15.492, -43.5638, 0.734274, 0.52 ) }
    dend_35 { pt3dadd( 15.7006, -44.0996, 0.737427, 0.88 ) }
    dend_35 { pt3dadd( 16.0457, -45.0116, 0.737242, 0.96 ) }
    dend_35 { pt3dadd( 16.4947, -46.2264, 0.708917, 0.96 ) }
    dend_35 { pt3dadd( 16.5188, -46.292, 0.705754, 0.96 ) }
    dend_35 { pt3dadd( 16.7378, -46.9573, 0.641715, 1.25 ) }
    dend_35 { pt3dadd( 17.1069, -48.2965, 0.472899, 1.25 ) }
    dend_35 { pt3dadd( 17.1246, -48.3636, 0.463392, 1.25 ) }
    dend_35 { pt3dadd( 17.6492, -50.3867, 0.160874, 1.25 ) }
    dend_35 { pt3dadd( 17.666, -50.4537, 0.149698, 1.25 ) }
    dend_35 { pt3dadd( 18.1355, -52.3415, -0.154061, 1.25 ) }
    dend_35 { pt3dadd( 18.5975, -54.1968, -0.456141, 1.25 ) }
    dend_35 { pt3dadd( 18.8282, -55.1172, -0.608804, 1.25 ) }
    dend_35 { pt3dadd( 19.0045, -55.83, -0.724105, 1.25 ) }
    dend_35 { pt3dadd( 19.2352, -56.8074, -0.873783, 0.22 ) }
    dend_35 { pt3dadd( 19.7092, -58.8041, -1.19746, 0.22 ) }
    dend_35 { pt3dadd( 19.9016, -59.5933, -1.3303, 0.88 ) }
    dend_35 { pt3dadd( 20.0517, -60.2308, -1.43769, 1.25 ) }
    dend_35 { pt3dadd( 20.1348, -60.6075, -1.49494, 1.55 ) }
    dend_35 { pt3dadd( 20.255, -61.1794, -1.57629, 1.55 ) }
    dend_35 { pt3dadd( 20.35, -61.6944, -1.63523, 1.25 ) }
    dend_35 { pt3dadd( 20.4719, -62.636, -1.73421, 0.29 ) }
    dend_35 { pt3dadd( 20.6143, -64.1652, -1.80133, 0.29 ) }
    dend_35 { pt3dadd( 20.6219, -64.2713, -1.80209, 0.29 ) }
    dend_35 { pt3dadd( 20.6389, -64.5606, -1.79427, 0.52 ) }
    dend_35 { pt3dadd( 20.6717, -65.292, -1.75059, 0.52 ) }
    dend_35 { pt3dadd( 20.702, -66.2375, -1.66359, 0.29 ) }
    dend_35 { pt3dadd( 20.713, -67.1869, -1.56643, 0.29 ) }
    dend_35 { pt3dadd( 20.7286, -67.6279, -1.50494, 1.11 ) }
    dend_35 { pt3dadd( 20.7736, -68.4306, -1.37797, 1.47 ) }
    dend_35 { pt3dadd( 20.8253, -69.0814, -1.25223, 1.77 ) }
    dend_35 { pt3dadd( 20.8833, -69.5835, -1.14692, 1.77 ) }
    dend_35 { pt3dadd( 20.8924, -69.6516, -1.13379, 1.77 ) }
    dend_35 { pt3dadd( 21.0194, -70.6409, -1.01328, 1.11 ) }
    dend_35 { pt3dadd( 21.0293, -70.7199, -1.00509, 1.11 ) }
    dend_35 { pt3dadd( 21.106, -71.3136, -0.939933, 0.52 ) }
    dend_35 { pt3dadd( 21.3146, -72.9059, -0.7687, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( 21.4869, -74.2101, -0.639646, 0.52 ) }
    dend_35 { pt3dadd( 21.89, -76.8062, -0.356367, 0.52 ) }
    dend_35 { pt3dadd( 21.9019, -76.8748, -0.348881, 0.52 ) }
    dend_35 { pt3dadd( 22.0097, -77.374, -0.288135, 1.25 ) }
    dend_35 { pt3dadd( 22.1388, -77.8626, -0.22009, 1.55 ) }
    dend_35 { pt3dadd( 22.3145, -78.3816, -0.129039, 1.55 ) }
    dend_35 { pt3dadd( 22.8613, -79.693, 0.127311, 1.55 ) }
    dend_35 { pt3dadd( 23.215, -80.4122, 0.281801, 0.44 ) }
    dend_35 { pt3dadd( 23.7753, -81.511, 0.473433, 0.44 ) }
    dend_35 { pt3dadd( 24.1167, -82.1669, 0.568516, 0.66 ) }
    dend_35 { pt3dadd( 24.4454, -82.8119, 0.645935, 0.66 ) }
    dend_35 { pt3dadd( 25.002, -83.9591, 0.726644, 0.52 ) }
    dend_35 { pt3dadd( 25.4123, -84.8582, 0.74843, 0.37 ) }
    dend_35 { pt3dadd( 26.388, -87.1465, 0.757318, 0.37 ) }
    dend_35 { pt3dadd( 26.4432, -87.286, 0.755464, 0.37 ) }
    dend_35 { pt3dadd( 27.1528, -89.195, 0.695545, 0.37 ) }
    dend_35 { pt3dadd( 27.5837, -90.3864, 0.645228, 0.52 ) }
    dend_35 { pt3dadd( 27.8038, -91.0128, 0.611369, 1.11 ) }
    dend_35 { pt3dadd( 28.1556, -92.0554, 0.547077, 1.11 ) }
    dend_35 { pt3dadd( 28.1867, -92.1493, 0.541777, 1.11 ) }
    dend_35 { pt3dadd( 28.4062, -92.7636, 0.514443, 0.29 ) }
    dend_35 { pt3dadd( 29.2968, -95.0571, 0.45364, 0.29 ) }
    dend_35 { pt3dadd( 29.6427, -95.8957, 0.45364, 0.52 ) }
    dend_35 { pt3dadd( 30.0945, -96.9425, 0.45364, 0.52 ) }
    dend_35 { pt3dadd( 30.1264, -97.0158, 0.45364, 0.52 ) }
    dend_35 { pt3dadd( 30.3678, -97.5971, 0.45364, 0.29 ) }
    dend_35 { pt3dadd( 30.4183, -97.7277, 0.45364, 0.29 ) }
    dend_35 { pt3dadd( 30.8072, -98.8468, 0.45364, 0.29 ) }
    dend_35 { pt3dadd( 30.8292, -98.9132, 0.45364, 0.29 ) }
    dend_35 { pt3dadd( 31.395, -100.681, 0.45364, 0.29 ) }
    dend_35 { pt3dadd( 31.4175, -100.757, 0.452399, 0.29 ) }
    dend_35 { pt3dadd( 31.6183, -101.493, 0.432869, 0.88 ) }
    dend_35 { pt3dadd( 31.8184, -102.231, 0.40836, 1.11 ) }
    dend_35 { pt3dadd( 31.9899, -102.868, 0.383422, 1.11 ) }
    dend_35 { pt3dadd( 32.0087, -102.935, 0.380599, 1.11 ) }
    dend_35 { pt3dadd( 32.5198, -104.667, 0.364447, 0.22 ) }
    dend_35 { pt3dadd( 33.0538, -106.366, 0.394975, 0.22 ) }
    dend_35 { pt3dadd( 33.0766, -106.432, 0.398126, 0.22 ) }
    dend_35 { pt3dadd( 33.2688, -106.952, 0.436534, 0.74 ) }
    dend_35 { pt3dadd( 33.5339, -107.616, 0.524703, 0.74 ) }
    dend_35 { pt3dadd( 33.873, -108.456, 0.684929, 0.29 ) }
    dend_35 { pt3dadd( 33.9123, -108.543, 0.710098, 0.29 ) }
    dend_35 { pt3dadd( 34.5383, -109.877, 1.15491, 0.29 ) }
    dend_35 { pt3dadd( 34.5671, -109.937, 1.17494, 0.29 ) }
    dend_35 { pt3dadd( 34.9027, -110.659, 1.4439, 0.88 ) }
    dend_35 { pt3dadd( 35.1324, -111.167, 1.60412, 1.25 ) }
    dend_35 { pt3dadd( 35.3655, -111.69, 1.74208, 1.33 ) }
    dend_35 { pt3dadd( 35.4667, -111.923, 1.80149, 1.33 ) }
    dend_35 { pt3dadd( 35.5089, -112.018, 1.82414, 1.33 ) }
    dend_35 { pt3dadd( 35.9318, -112.965, 2.01878, 0.37 ) }
    dend_35 { pt3dadd( 36.9477, -115.22, 2.36058, 0.37 ) }
    dend_35 { pt3dadd( 36.9881, -115.31, 2.37276, 0.66 ) }
    dend_35 { pt3dadd( 37.1404, -115.645, 2.41089, 0.66 ) }
    dend_35 { pt3dadd( 37.5683, -116.541, 2.49214, 0.66 ) }
    dend_35 { pt3dadd( 37.701, -116.809, 2.50821, 0.66 ) }
    dend_35 { pt3dadd( 38.485, -118.246, 2.50344, 0.66 ) }
    dend_35 { pt3dadd( 38.5202, -118.307, 2.50222, 0.66 ) }
    dend_35 { pt3dadd( 38.942, -119.01, 2.47955, 1.03 ) }
    dend_35 { pt3dadd( 39.2469, -119.497, 2.45859, 1.47 ) }
    dend_35 { pt3dadd( 39.5263, -119.942, 2.43498, 1.47 ) }
    dend_35 { pt3dadd( 39.9208, -120.561, 2.40101, 0.22 ) }
    dend_35 { pt3dadd( 40.0762, -120.805, 2.38753, 0.22 ) }
    dend_35 { pt3dadd( 40.9825, -122.258, 2.31715, 0.22 ) }
    dend_35 { pt3dadd( 41.1409, -122.517, 2.30985, 0.66 ) }
    dend_35 { pt3dadd( 41.4677, -123.055, 2.30484, 1.11 ) }
    dend_35 { pt3dadd( 41.779, -123.559, 2.31144, 1.33 ) }
    dend_35 { pt3dadd( 42.1401, -124.154, 2.3334, 1.33 ) }
    dend_35 { pt3dadd( 42.4712, -124.682, 2.35615, 0.66 ) }
    dend_35 { pt3dadd( 42.8224, -125.238, 2.38502, 0.29 ) }
    dend_35 { pt3dadd( 42.8597, -125.297, 2.38838, 0.29 ) }
    dend_35 { pt3dadd( 43.626, -126.494, 2.46273, 0.29 ) }
    dend_35 { pt3dadd( 43.6634, -126.553, 2.46627, 0.29 ) }
    dend_35 { pt3dadd( 43.8588, -126.869, 2.47759, 0.66 ) }
    dend_35 { pt3dadd( 43.8939, -126.93, 2.47828, 0.66 ) }
    dend_35 { pt3dadd( 44.1857, -127.448, 2.47194, 0.66 ) }
    dend_35 { pt3dadd( 44.2243, -127.518, 2.47072, 0.66 ) }
    dend_35 { pt3dadd( 44.6683, -128.356, 2.4511, 0.66 ) }
    dend_35 { pt3dadd( 45.1463, -129.268, 2.42748, 0.59 ) }
    dend_35 { pt3dadd( 45.3389, -129.652, 2.41648, 1.18 ) }
    dend_35 { pt3dadd( 45.4618, -129.888, 2.41605, 1.62 ) }
    dend_35 { pt3dadd( 45.4945, -129.95, 2.41726, 1.62 ) }
    dend_35 { pt3dadd( 45.7836, -130.545, 2.44585, 1.62 ) }
    dend_35 { pt3dadd( 45.8111, -130.609, 2.44937, 1.62 ) }
    dend_35 { pt3dadd( 45.9531, -130.95, 2.46922, 1.62 ) }
    dend_35 { pt3dadd( 46.297, -131.77, 2.51333, 0.22 ) }
    dend_35 { pt3dadd( 46.3232, -131.834, 2.51646, 0.22 ) }
    dend_35 { pt3dadd( 46.9065, -133.38, 2.55708, 0.22 ) }
    dend_35 { pt3dadd( 47.7335, -136.012, 2.56551, 0.22 ) }
    dend_35 { pt3dadd( 47.7526, -136.079, 2.5648, 0.22 ) }
    dend_35 { pt3dadd( 47.8169, -136.338, 2.55236, 0.88 ) }
    dend_35 { pt3dadd( 47.9509, -136.985, 2.50069, 1.18 ) }
    dend_35 { pt3dadd( 48.1299, -137.964, 2.4052, 0.22 ) }
    dend_35 { pt3dadd( 48.5722, -140.922, 2.04265, 0.22 ) }
    dend_35 { pt3dadd( 48.58, -140.991, 2.03281, 0.22 ) }
    dend_35 { pt3dadd( 48.6806, -141.855, 1.88309, 1.11 ) }
    dend_35 { pt3dadd( 48.7687, -142.572, 1.73948, 1.77 ) }
    dend_35 { pt3dadd( 48.8382, -143.002, 1.64675, 1.99 ) }
    dend_35 { pt3dadd( 48.8538, -143.078, 1.6294, 1.99 ) }
    dend_35 { pt3dadd( 49.0011, -143.664, 1.48723, 1.99 ) }
    dend_35 { pt3dadd( 49.3448, -144.966, 1.21487, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 49.364, -145.033, 1.20282, 0.29 ) }
    dend_35 { pt3dadd( 49.8573, -146.793, 0.882434, 0.29 ) }
    dend_35 { pt3dadd( 49.8751, -146.86, 0.871016, 0.29 ) }
    dend_35 { pt3dadd( 50.0949, -147.73, 0.736089, 0.29 ) }
    dend_35 { pt3dadd( 50.1114, -147.797, 0.726849, 0.29 ) }
    dend_35 { pt3dadd( 50.6704, -150.096, 0.483168, 0.29 ) }
    dend_35 { pt3dadd( 50.8319, -150.748, 0.401512, 1.77 ) }
    dend_35 { pt3dadd( 50.9377, -151.176, 0.337021, 2.28 ) }
    dend_35 { pt3dadd( 51.0593, -151.602, 0.275241, 2.58 ) }
    dend_35 { pt3dadd( 51.0797, -151.668, 0.265787, 2.58 ) }
    dend_35 { pt3dadd( 51.1571, -151.885, 0.241591, 2.58 ) }
    dend_35 { pt3dadd( 51.6637, -153.147, 0.141308, 0.29 ) }
    dend_35 { pt3dadd( 51.691, -153.212, 0.136864, 0.29 ) }
    dend_35 { pt3dadd( 52.4037, -154.854, 0.0383104, 0.29 ) }
    dend_35 { pt3dadd( 52.4642, -154.991, 0.0314933, 0.29 ) }
    dend_35 { pt3dadd( 53.2617, -156.794, -0.0392812, 0.29 ) }
    dend_35 { pt3dadd( 53.3035, -156.892, -0.0378915, 0.29 ) }
    dend_35 { pt3dadd( 53.7746, -158.046, 0.0490722, 0.29 ) }
    dend_35 { pt3dadd( 53.8796, -158.345, 0.081522, 0.74 ) }
    dend_35 { pt3dadd( 54.0083, -158.912, 0.158418, 0.74 ) }
    dend_35 { pt3dadd( 54.0194, -158.98, 0.168585, 0.74 ) }
    dend_35 { pt3dadd( 54.1185, -160.1, 0.364339, 0.22 ) }
    dend_35 { pt3dadd( 54.1233, -160.178, 0.378551, 0.22 ) }
    dend_35 { pt3dadd( 54.123, -161.415, 0.614356, 0.22 ) }
    dend_35 { pt3dadd( 54.0613, -163.354, 0.965205, 0.22 ) }
    dend_35 { pt3dadd( 54.0574, -163.423, 0.976255, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_24 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.190646, -26.4414, 1.22255, 2.21 ) }
    dend_31 { pt3dadd( 0.0531679, -28.9493, 1.67212, 2.21 ) }
    dend_31 { pt3dadd( 0.142611, -30.0708, 1.90693, 1.84 ) }
    dend_31 { pt3dadd( 0.229744, -31.4687, 2.20762, 1.77 ) }
    dend_31 { pt3dadd( 0.315319, -33.9057, 2.71818, 1.77 ) }
    dend_31 { pt3dadd( 0.409071, -36.3444, 3.2036, 1.77 ) }
    dend_31 { pt3dadd( 0.412555, -36.4031, 3.21529, 1.77 ) }
    dend_31 { pt3dadd( 0.538624, -37.7284, 3.49385, 1.92 ) }
    dend_31 { pt3dadd( 0.711908, -39.0822, 3.76892, 2.58 ) }
    dend_31 { pt3dadd( 0.93796, -40.3573, 4.00171, 2.58 ) }
    dend_31 { pt3dadd( 1.25879, -41.6881, 4.22867, 1.5 ) }
    dend_31 { pt3dadd( 1.77924, -43.3449, 4.48748, 0.66 ) }
    dend_31 { pt3dadd( 2.20867, -44.3971, 4.66202, 0.66 ) }
    dend_31 { pt3dadd( 2.55376, -45.0374, 4.77428, 0.96 ) }
    dend_31 { pt3dadd( 2.94225, -45.5633, 4.88821, 0.96 ) }
    dend_31 { pt3dadd( 3.00888, -45.6343, 4.90632, 0.96 ) }
    dend_31 { pt3dadd( 4.18486, -46.6849, 5.20294, 0.74 ) }
    dend_31 { pt3dadd( 5.01119, -47.2984, 5.35852, 0.74 ) }
    dend_31 { pt3dadd( 5.13211, -47.3852, 5.37701, 0.74 ) }
    dend_31 { pt3dadd( 6.30819, -48.2141, 5.51587, 0.74 ) }
    dend_31 { pt3dadd( 6.36583, -48.2536, 5.52037, 0.74 ) }
    dend_31 { pt3dadd( 7.00153, -48.7162, 5.53865, 0.74 ) }
    dend_31 { pt3dadd( 7.67891, -49.2342, 5.50663, 0.74 ) }
    dend_31 { pt3dadd( 8.61598, -50.0962, 5.45748, 0.74 ) }
    dend_31 { pt3dadd( 8.67183, -50.1534, 5.45446, 0.74 ) }
    dend_31 { pt3dadd( 8.89549, -50.4403, 5.4416, 0.96 ) }
    dend_31 { pt3dadd( 9.313, -51.071, 5.42104, 1.18 ) }
    dend_31 { pt3dadd( 9.3892, -51.2002, 5.41817, 1.18 ) }
    dend_31 { pt3dadd( 9.71468, -51.8434, 5.41817, 1.33 ) }
    dend_31 { pt3dadd( 9.7427, -51.9076, 5.41817, 1.33 ) }
    dend_31 { pt3dadd( 10.0604, -52.7282, 5.41817, 1.47 ) }
    dend_31 { pt3dadd( 10.2962, -53.4969, 5.41817, 1.62 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.190646, -26.4414, 1.22255, 1.03 ) }
    dend_30 { pt3dadd( 0.868224, -29.3293, -1.68404, 1.03 ) }
    dend_30 { pt3dadd( 0.884079, -29.385, -1.72338, 1.03 ) }
    dend_30 { pt3dadd( 1.0822, -30.1736, -2.19225, 1.03 ) }
    dend_30 { pt3dadd( 1.20887, -30.651, -2.48653, 1.03 ) }
    dend_30 { pt3dadd( 1.50297, -31.7495, -3.17329, 1.03 ) }
    dend_30 { pt3dadd( 1.80358, -32.7733, -3.79323, 0.88 ) }
    dend_30 { pt3dadd( 2.02516, -33.6493, -4.27151, 0.88 ) }
    dend_30 { pt3dadd( 2.03948, -33.7122, -4.31885, 0.88 ) }
    dend_30 { pt3dadd( 2.12685, -34.566, -5.30349, 1.03 ) }
    dend_30 { pt3dadd( 2.12715, -34.6284, -5.3979, 1.03 ) }
    dend_30 { pt3dadd( 2.05783, -35.1029, -6.26497, 1.03 ) }
    dend_30 { pt3dadd( 1.57656, -36.5052, -8.92404, 1.03 ) }
    dend_30 { pt3dadd( 1.55864, -36.5383, -8.98304, 1.03 ) }
    dend_30 { pt3dadd( 0.803806, -37.6562, -10.6471, 1.18 ) }
    dend_30 { pt3dadd( 0.773697, -37.6951, -10.6969, 1.18 ) }
    dend_30 { pt3dadd( 0.28471, -38.2876, -11.4009, 1.18 ) }
    dend_30 { pt3dadd( -0.268467, -38.9088, -12.0332, 1.18 ) }
    dend_30 { pt3dadd( -1.1132, -39.8794, -12.7731, 1.4 ) }
    dend_30 { pt3dadd( -1.62925, -40.5072, -13.2426, 1.4 ) }
    dend_30 { pt3dadd( -2.60061, -41.7707, -14.09, 1.03 ) }
    dend_30 { pt3dadd( -2.63708, -41.8197, -14.1241, 1.03 ) }
    dend_30 { pt3dadd( -3.16364, -42.6113, -14.6736, 1.03 ) }
    dend_30 { pt3dadd( -3.19508, -42.6633, -14.7083, 1.03 ) }
    dend_30 { pt3dadd( -3.78222, -43.7873, -15.3706, 0.74 ) }
    dend_30 { pt3dadd( -4.18519, -44.6894, -15.8541, 0.74 ) }
    dend_30 { pt3dadd( -4.20995, -44.7588, -15.8851, 0.74 ) }
    dend_30 { pt3dadd( -4.46164, -45.7124, -16.3492, 0.74 ) }
    dend_30 { pt3dadd( -4.46137, -45.8346, -16.4362, 0.74 ) }
    dend_30 { pt3dadd( -4.31856, -46.3612, -16.887, 0.52 ) }
    dend_30 { pt3dadd( -4.29013, -46.4054, -16.9332, 0.52 ) }
    dend_30 { pt3dadd( -3.93045, -46.856, -17.5614, 0.81 ) }
    dend_30 { pt3dadd( -3.90242, -46.8926, -17.6141, 0.81 ) }
    dend_30 { pt3dadd( -3.30113, -47.6679, -18.791, 1.03 ) }
    dend_30 { pt3dadd( -3.07131, -48.0092, -19.2365, 1.25 ) }
    dend_30 { pt3dadd( -3.04654, -48.0517, -19.2862, 1.25 ) }
    dend_30 { pt3dadd( -2.39389, -49.2894, -20.6048, 1.84 ) }
    dend_30 { pt3dadd( -2.28602, -49.5372, -20.8669, 2.21 ) }
    dend_30 { pt3dadd( -2.24084, -49.6826, -21.0045, 2.21 ) }
    dend_30 { pt3dadd( -2.09716, -50.3249, -21.5639, 2.21 ) }
    dend_30 { pt3dadd( -2.08775, -50.3773, -21.6093, 2.21 ) }
    dend_30 { pt3dadd( -1.88545, -51.757, -22.7691, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -1.70343, -53.5645, -24.1309, 0.88 ) }
    dend_30 { pt3dadd( -1.63063, -54.8327, -25.035, 0.88 ) }
    dend_30 { pt3dadd( -1.6284, -54.8903, -25.0747, 0.88 ) }
    dend_30 { pt3dadd( -1.5908, -56.0095, -25.815, 0.59 ) }
    dend_30 { pt3dadd( -1.58788, -56.0781, -25.8562, 0.59 ) }
    dend_30 { pt3dadd( -1.52222, -57.2229, -26.4895, 0.59 ) }
    dend_30 { pt3dadd( -1.43906, -58.0945, -26.9757, 0.44 ) }
    dend_30 { pt3dadd( -1.32313, -59.0308, -27.5249, 0.66 ) }
    dend_30 { pt3dadd( -1.18576, -60.0551, -28.0753, 2.06 ) }
    dend_30 { pt3dadd( -1.05246, -61.0222, -28.5463, 3.17 ) }
    dend_30 { pt3dadd( -0.823413, -62.652, -29.2997, 3.17 ) }
    dend_30 { pt3dadd( -0.626677, -63.9866, -29.873, 1.25 ) }
    dend_30 { pt3dadd( -0.495158, -64.8753, -30.1876, 0.29 ) }
    dend_30 { pt3dadd( -0.274847, -66.5835, -30.6516, 0.29 ) }
    dend_30 { pt3dadd( -0.208202, -67.1135, -30.748, 1.03 ) }
    dend_30 { pt3dadd( -0.198967, -67.1826, -30.7542, 1.03 ) }
    dend_30 { pt3dadd( -0.0741219, -67.9868, -30.7422, 1.03 ) }
    dend_30 { pt3dadd( 0.070173, -68.8137, -30.7014, 0.96 ) }
    dend_30 { pt3dadd( 0.0842875, -68.8821, -30.6971, 0.96 ) }
    dend_30 { pt3dadd( 0.31772, -69.8965, -30.6249, 0.96 ) }
    dend_30 { pt3dadd( 0.49349, -70.6306, -30.5741, 0.29 ) }
    dend_30 { pt3dadd( 0.828405, -72.0254, -30.4675, 0.29 ) }
    dend_30 { pt3dadd( 0.844956, -72.0932, -30.462, 0.29 ) }
    dend_30 { pt3dadd( 1.19725, -73.5265, -30.3419, 0.29 ) }
    dend_30 { pt3dadd( 1.46597, -74.6174, -30.2429, 0.29 ) }
    dend_30 { pt3dadd( 1.48265, -74.685, -30.2359, 0.29 ) }
    dend_30 { pt3dadd( 1.58929, -75.1161, -30.199, 1.18 ) }
    dend_30 { pt3dadd( 1.74935, -75.7927, -30.1759, 1.47 ) }
    dend_30 { pt3dadd( 1.83702, -76.1609, -30.1803, 1.62 ) }
    dend_30 { pt3dadd( 1.85351, -76.2288, -30.1844, 1.62 ) }
    dend_30 { pt3dadd( 1.95919, -76.6551, -30.2116, 1.62 ) }
    dend_30 { pt3dadd( 2.2259, -77.728, -30.277, 0.29 ) }
    dend_30 { pt3dadd( 2.62985, -79.3107, -30.3667, 0.29 ) }
    dend_30 { pt3dadd( 2.76633, -79.8483, -30.3953, 0.44 ) }
    dend_30 { pt3dadd( 3.00054, -80.816, -30.4313, 0.44 ) }
    dend_30 { pt3dadd( 3.01635, -80.8841, -30.4331, 0.44 ) }
    dend_30 { pt3dadd( 3.1483, -81.4634, -30.4419, 0.15 ) }
    dend_30 { pt3dadd( 3.34817, -82.3874, -30.4419, 0.15 ) }
    dend_30 { pt3dadd( 3.36475, -82.4657, -30.4419, 0.15 ) }
    dend_30 { pt3dadd( 3.99448, -85.608, -30.4419, 0.15 ) }
    dend_30 { pt3dadd( 4.0076, -85.6767, -30.4419, 0.15 ) }
    dend_30 { pt3dadd( 4.11834, -86.2655, -30.4467, 0.88 ) }
    dend_30 { pt3dadd( 4.27266, -87.0718, -30.4887, 1.69 ) }
    dend_30 { pt3dadd( 4.28687, -87.1502, -30.4958, 1.69 ) }
    dend_30 { pt3dadd( 4.36351, -87.5698, -30.55, 2.06 ) }
    dend_30 { pt3dadd( 4.4532, -88.1477, -30.6548, 2.06 ) }
    dend_30 { pt3dadd( 4.55134, -88.8326, -30.7792, 2.06 ) }
    dend_30 { pt3dadd( 4.73113, -90.2003, -31.0347, 0.59 ) }
    dend_30 { pt3dadd( 4.788, -90.6413, -31.1115, 0.59 ) }
    dend_30 { pt3dadd( 4.80331, -90.7597, -31.1371, 0.59 ) }
    dend_30 { pt3dadd( 4.99172, -92.2519, -31.4732, 0.37 ) }
    dend_30 { pt3dadd( 5.00331, -92.3468, -31.4989, 0.37 ) }
    dend_30 { pt3dadd( 5.02099, -92.5096, -31.5444, 0.74 ) }
    dend_30 { pt3dadd( 5.13085, -93.5094, -31.8222, 0.74 ) }
    dend_30 { pt3dadd( 5.25262, -94.5298, -32.1151, 0.22 ) }
    dend_30 { pt3dadd( 5.48306, -96.4282, -32.6113, 0.22 ) }
    dend_30 { pt3dadd( 5.5686, -97.2375, -32.7979, 1.25 ) }
    dend_30 { pt3dadd( 5.64077, -98.0725, -32.9569, 1.77 ) }
    dend_30 { pt3dadd( 5.67726, -98.6216, -33.0318, 1.77 ) }
    dend_30 { pt3dadd( 5.6917, -99.1304, -33.0637, 1.77 ) }
    dend_30 { pt3dadd( 5.7016, -100.209, -33.0686, 0.29 ) }
    dend_30 { pt3dadd( 5.6927, -101.527, -33.047, 0.22 ) }
    dend_30 { pt3dadd( 5.68892, -101.747, -33.0396, 0.22 ) }
    dend_30 { pt3dadd( 5.65024, -103.287, -32.9977, 0.22 ) }
    dend_30 { pt3dadd( 5.53845, -106.143, -32.937, 0.22 ) }
    dend_30 { pt3dadd( 5.52756, -106.363, -32.9347, 0.22 ) }
    dend_30 { pt3dadd( 5.49239, -107.022, -32.9372, 0.88 ) }
    dend_30 { pt3dadd( 5.45287, -107.754, -32.9414, 1.33 ) }
    dend_30 { pt3dadd( 5.42805, -108.193, -32.9446, 1.62 ) }
    dend_30 { pt3dadd( 5.40003, -108.648, -32.9491, 1.62 ) }
    dend_30 { pt3dadd( 5.34048, -109.61, -32.9611, 0.29 ) }
    dend_30 { pt3dadd( 5.28063, -110.569, -32.9725, 0.22 ) }
    dend_30 { pt3dadd( 5.27463, -110.675, -32.9737, 0.22 ) }
    dend_30 { pt3dadd( 5.21491, -111.984, -32.9863, 0.22 ) }
    dend_30 { pt3dadd( 5.20951, -112.134, -32.9874, 0.22 ) }
    dend_30 { pt3dadd( 5.20555, -112.524, -32.9957, 1.18 ) }
    dend_30 { pt3dadd( 5.20575, -113.403, -33.0232, 1.62 ) }
    dend_30 { pt3dadd( 5.22126, -113.779, -33.0372, 1.84 ) }
    dend_30 { pt3dadd( 5.26354, -114.438, -33.0636, 1.84 ) }
    dend_30 { pt3dadd( 5.29119, -114.796, -33.0801, 1.84 ) }
    dend_30 { pt3dadd( 5.40236, -116.064, -33.1411, 0.22 ) }
    dend_30 { pt3dadd( 5.40969, -116.133, -33.1446, 0.22 ) }
    dend_30 { pt3dadd( 5.74619, -119.005, -33.2898, 0.22 ) }
    dend_30 { pt3dadd( 5.75828, -119.103, -33.2945, 0.22 ) }
    dend_30 { pt3dadd( 5.81964, -119.548, -33.3143, 1.11 ) }
    dend_30 { pt3dadd( 5.8295, -119.617, -33.3186, 1.11 ) }
    dend_30 { pt3dadd( 5.88517, -120.011, -33.3488, 1.4 ) }
    dend_30 { pt3dadd( 5.94584, -120.44, -33.3962, 1.92 ) }
    dend_30 { pt3dadd( 5.9645, -120.588, -33.417, 1.92 ) }
    dend_30 { pt3dadd( 6.02036, -121.045, -33.4756, 1.92 ) }
    dend_30 { pt3dadd( 6.14227, -122.098, -33.6479, 0.52 ) }
    dend_30 { pt3dadd( 6.15054, -122.176, -33.6621, 0.52 ) }
    dend_30 { pt3dadd( 6.21611, -122.838, -33.7868, 0.22 ) }
    dend_30 { pt3dadd( 6.34895, -124.644, -34.0745, 0.22 ) }
    dend_30 { pt3dadd( 6.3527, -124.713, -34.084, 0.22 ) }
    dend_30 { pt3dadd( 6.37496, -125.624, -34.1647, 1.03 ) }
    dend_30 { pt3dadd( 6.38101, -126.138, -34.1933, 1.03 ) }
    dend_30 { pt3dadd( 6.38015, -126.721, -34.2315, 0.59 ) }
    dend_30 { pt3dadd( 6.35259, -128.353, -34.3468, 0.22 ) }
    dend_30 { pt3dadd( 6.34956, -128.459, -34.3542, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( 6.2596, -131.602, -34.5468, 0.22 ) }
    dend_30 { pt3dadd( 6.25695, -131.672, -34.5499, 0.22 ) }
    dend_30 { pt3dadd( 6.22977, -132.29, -34.5848, 0.66 ) }
    dend_30 { pt3dadd( 6.22714, -132.36, -34.5908, 0.66 ) }
    dend_30 { pt3dadd( 6.22567, -133.015, -34.6714, 0.66 ) }
    dend_30 { pt3dadd( 6.22764, -133.095, -34.6804, 0.66 ) }
    dend_30 { pt3dadd( 6.26347, -133.751, -34.7791, 0.66 ) }
    dend_30 { pt3dadd( 6.26871, -133.83, -34.7907, 0.66 ) }
    dend_30 { pt3dadd( 6.32124, -134.555, -34.888, 0.22 ) }
    dend_30 { pt3dadd( 6.43859, -136.153, -35.106, 0.22 ) }
    dend_30 { pt3dadd( 6.5887, -137.748, -35.2825, 0.22 ) }
    dend_30 { pt3dadd( 6.71277, -138.886, -35.3846, 1.55 ) }
    dend_30 { pt3dadd( 6.79274, -139.544, -35.4299, 1.55 ) }
    dend_30 { pt3dadd( 6.86937, -140.119, -35.4464, 1.55 ) }
    dend_30 { pt3dadd( 6.92057, -140.485, -35.4429, 1.47 ) }
    dend_30 { pt3dadd( 7.07369, -141.486, -35.4774, 0.59 ) }
    dend_30 { pt3dadd( 7.08497, -141.555, -35.4826, 0.59 ) }
    dend_30 { pt3dadd( 7.1563, -141.992, -35.5262, 0.22 ) }
    dend_30 { pt3dadd( 7.63559, -144.887, -35.9481, 0.22 ) }
    dend_30 { pt3dadd( 7.64692, -144.955, -35.9609, 0.22 ) }
    dend_30 { pt3dadd( 7.8657, -146.352, -36.4253, 1.25 ) }
    dend_30 { pt3dadd( 7.99007, -147.145, -36.7933, 1.47 ) }
    dend_30 { pt3dadd( 8.07929, -147.661, -37.0731, 1.47 ) }
    dend_30 { pt3dadd( 8.09289, -147.729, -37.1133, 1.47 ) }
    dend_30 { pt3dadd( 8.15991, -148.03, -37.3292, 1.47 ) }
    dend_30 { pt3dadd( 8.56497, -149.736, -38.4901, 0.29 ) }
    dend_30 { pt3dadd( 8.80725, -150.728, -39.0946, 0.15 ) }
    dend_30 { pt3dadd( 8.82066, -150.783, -39.1355, 0.15 ) }
    dend_30 { pt3dadd( 9.09088, -151.874, -40.1384, 0.15 ) }
    dend_30 { pt3dadd( 9.25648, -152.548, -40.7972, 0.81 ) }
    dend_30 { pt3dadd( 9.26987, -152.601, -40.8559, 0.81 ) }
    dend_30 { pt3dadd( 9.37051, -152.989, -41.2809, 0.81 ) }
    dend_30 { pt3dadd( 9.85457, -154.653, -43.1969, 0.22 ) }
    dend_30 { pt3dadd( 10.2684, -155.794, -44.458, 1.47 ) }
    dend_30 { pt3dadd( 10.4682, -156.271, -44.9992, 1.47 ) }
    dend_30 { pt3dadd( 11.0645, -157.538, -46.341, 0.22 ) }
    dend_30 { pt3dadd( 11.6025, -158.592, -47.3933, 0.22 ) }
    dend_30 { pt3dadd( 12.1733, -159.596, -48.3136, 0.22 ) }
    dend_30 { pt3dadd( 12.8771, -160.747, -49.1105, 0.22 ) }
    dend_30 { pt3dadd( 13.4476, -161.661, -49.6664, 1.55 ) }
    dend_30 { pt3dadd( 13.875, -162.326, -50.0488, 1.84 ) }
    dend_30 { pt3dadd( 14.0732, -162.637, -50.2012, 1.84 ) }
    dend_30 { pt3dadd( 14.6732, -163.599, -50.6711, 0.22 ) }
    dend_30 { pt3dadd( 15.6257, -165.325, -51.4781, 0.22 ) }
    dend_30 { pt3dadd( 16.0553, -166.222, -51.8585, 1.03 ) }
    dend_30 { pt3dadd( 16.341, -166.858, -52.0942, 1.33 ) }
    dend_30 { pt3dadd( 16.6481, -167.577, -52.3709, 1.33 ) }
    dend_30 { pt3dadd( 16.6766, -167.646, -52.4, 1.33 ) }
    dend_30 { pt3dadd( 17.2161, -168.997, -52.9827, 0.22 ) }
    dend_30 { pt3dadd( 17.9534, -170.871, -53.8147, 0.22 ) }
    dend_30 { pt3dadd( 17.9895, -170.964, -53.8527, 0.22 ) }
    dend_30 { pt3dadd( 18.9042, -173.452, -54.7309, 0.22 ) }
    dend_30 { pt3dadd( 19.2029, -174.287, -54.9987, 1.25 ) }
    dend_30 { pt3dadd( 19.4411, -175.015, -55.1883, 1.55 ) }
    dend_30 { pt3dadd( 19.5727, -175.447, -55.2878, 1.69 ) }
    dend_30 { pt3dadd( 19.9239, -176.686, -55.5643, 0.22 ) }
    dend_30 { pt3dadd( 20.8321, -180.193, -56.2485, 0.22 ) }
    dend_30 { pt3dadd( 20.8628, -180.335, -56.2736, 0.22 ) }
    dend_30 { pt3dadd( 21.3002, -182.529, -56.661, 0.22 ) }
    dend_30 { pt3dadd( 21.5104, -183.671, -56.8687, 1.4 ) }
    dend_30 { pt3dadd( 21.6344, -184.391, -57.0027, 1.69 ) }
    dend_30 { pt3dadd( 21.7694, -185.247, -57.1712, 1.69 ) }
    dend_30 { pt3dadd( 21.9557, -186.509, -57.4398, 0.22 ) }
    dend_30 { pt3dadd( 21.9777, -186.655, -57.4685, 0.22 ) }
    dend_30 { pt3dadd( 22.5829, -190.388, -58.1322, 0.22 ) }
    dend_30 { pt3dadd( 22.5959, -190.466, -58.1411, 0.22 ) }
    dend_30 { pt3dadd( 22.7244, -191.195, -58.2008, 1.25 ) }
    dend_30 { pt3dadd( 22.8881, -192.049, -58.2282, 1.55 ) }
    dend_30 { pt3dadd( 22.9178, -192.196, -58.2234, 1.55 ) }
    dend_30 { pt3dadd( 23.0552, -192.833, -58.1892, 1.55 ) }
    dend_30 { pt3dadd( 23.2434, -193.667, -58.1099, 0.22 ) }
    dend_30 { pt3dadd( 23.2653, -193.763, -58.0999, 0.22 ) }
    dend_30 { pt3dadd( 23.6027, -195.19, -57.9258, 0.22 ) }
    dend_30 { pt3dadd( 23.6294, -195.293, -57.9148, 0.22 ) }
    dend_30 { pt3dadd( 24.0759, -196.927, -57.7764, 0.22 ) }
    dend_30 { pt3dadd( 24.0961, -196.994, -57.7723, 0.22 ) }
    dend_30 { pt3dadd( 24.1957, -197.288, -57.7647, 1.55 ) }
    dend_30 { pt3dadd( 24.2209, -197.353, -57.7627, 1.55 ) }
    dend_30 { pt3dadd( 24.5072, -198.053, -57.7379, 1.99 ) }
    dend_30 { pt3dadd( 24.6554, -198.41, -57.7251, 1.99 ) }
    dend_30 { pt3dadd( 25.0894, -199.429, -57.6871, 0.22 ) }
    dend_30 { pt3dadd( 25.132, -199.526, -57.6837, 0.22 ) }
    dend_30 { pt3dadd( 26.48, -202.553, -57.5847, 0.22 ) }
    dend_30 { pt3dadd( 26.5077, -202.617, -57.5828, 0.22 ) }
    dend_30 { pt3dadd( 26.624, -202.904, -57.553, 0.96 ) }
    dend_30 { pt3dadd( 26.6501, -202.998, -57.5365, 0.96 ) }
    dend_30 { pt3dadd( 26.7474, -203.541, -57.4141, 0.96 ) }
    dend_30 { pt3dadd( 26.7603, -203.676, -57.38, 0.96 ) }
    dend_30 { pt3dadd( 26.758, -204.03, -57.2745, 0.96 ) }
    dend_30 { pt3dadd( 26.722, -205.656, -56.7942, 0.22 ) }
    dend_30 { pt3dadd( 26.5834, -208.415, -56.0347, 0.22 ) }
    dend_30 { pt3dadd( 26.5739, -208.55, -55.9993, 0.52 ) }
    dend_30 { pt3dadd( 26.4702, -209.687, -55.734, 0.52 ) }
    dend_30 { pt3dadd( 26.4624, -209.765, -55.7192, 0.52 ) }
    dend_30 { pt3dadd( 26.4017, -210.36, -55.6478, 0.22 ) }
    dend_30 { pt3dadd( 26.2628, -211.691, -55.6384, 0.22 ) }
    dend_30 { pt3dadd( 26.2513, -211.856, -55.6395, 0.22 ) }
    dend_30 { pt3dadd( 26.2286, -212.351, -55.6443, 1.25 ) }
    dend_30 { pt3dadd( 26.2091, -213.081, -55.6541, 1.47 ) }
    dend_30 { pt3dadd( 26.1998, -213.964, -55.6691, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( 26.206, -214.917, -55.6978, 0.22 ) }
    dend_30 { pt3dadd( 26.1995, -217.257, -55.7601, 0.22 ) }
    dend_30 { pt3dadd( 26.1919, -217.904, -55.7737, 0.66 ) }
    dend_30 { pt3dadd( 26.1785, -218.564, -55.7818, 0.66 ) }
    dend_30 { pt3dadd( 26.1759, -218.644, -55.7831, 0.66 ) }
    dend_30 { pt3dadd( 26.1521, -219.127, -55.7932, 0.22 ) }
    dend_30 { pt3dadd( 26.0228, -221.167, -56.0171, 0.22 ) }
    dend_30 { pt3dadd( 25.995, -221.602, -56.1094, 0.88 ) }
    dend_30 { pt3dadd( 25.9893, -221.738, -56.145, 0.88 ) }
    dend_30 { pt3dadd( 25.9801, -222.094, -56.2433, 0.88 ) }
    dend_30 { pt3dadd( 25.9781, -222.239, -56.2839, 0.88 ) }
    dend_30 { pt3dadd( 25.9989, -223.964, -56.85, 0.22 ) }
    dend_30 { pt3dadd( 26.1506, -227.29, -58.1716, 0.22 ) }
    dend_30 { pt3dadd( 26.1945, -228.22, -58.5227, 1.18 ) }
    dend_30 { pt3dadd( 26.2264, -229.186, -58.8472, 1.18 ) }
    dend_30 { pt3dadd( 26.228, -229.253, -58.8676, 1.18 ) }
    dend_30 { pt3dadd( 26.2492, -230.45, -59.1915, 1.18 ) }
    dend_30 { pt3dadd( 26.2635, -231.475, -59.4158, 0.15 ) }
    dend_30 { pt3dadd( 26.2887, -234.82, -60.218, 0.15 ) }
    dend_30 { pt3dadd( 26.2831, -236.706, -60.6519, 0.15 ) }
    dend_30 { pt3dadd( 26.2825, -237.068, -60.7276, 0.74 ) }
    dend_30 { pt3dadd( 26.2818, -237.137, -60.7402, 0.74 ) }
    dend_30 { pt3dadd( 26.2665, -237.876, -60.8401, 0.74 ) }
    dend_30 { pt3dadd( 26.2539, -238.738, -60.9475, 0.22 ) }
    dend_30 { pt3dadd( 26.2532, -238.817, -60.9611, 0.22 ) }
    dend_30 { pt3dadd( 26.2472, -240.985, -61.35, 0.22 ) }
    dend_30 { pt3dadd( 26.2341, -241.345, -61.4347, 0.96 ) }
    dend_30 { pt3dadd( 26.229, -241.422, -61.4554, 0.96 ) }
    dend_30 { pt3dadd( 26.1725, -241.994, -61.6064, 0.96 ) }
    dend_30 { pt3dadd( 26.0741, -243.093, -61.843, 0.96 ) }
    dend_30 { pt3dadd( 26.0637, -243.203, -61.8667, 0.96 ) }
    dend_30 { pt3dadd( 25.9331, -244.656, -62.2151, 0.22 ) }
    dend_30 { pt3dadd( 25.9277, -244.724, -62.2309, 0.22 ) }
    dend_30 { pt3dadd( 25.8277, -246.646, -62.6582, 0.22 ) }
    dend_30 { pt3dadd( 25.7748, -248.444, -63.029, 0.22 ) }
    dend_30 { pt3dadd( 25.7713, -248.589, -63.0675, 0.22 ) }
    dend_30 { pt3dadd( 25.7386, -249.857, -63.4179, 0.22 ) }
    dend_30 { pt3dadd( 25.7271, -250.159, -63.4913, 0.96 ) }
    dend_30 { pt3dadd( 25.6753, -251.207, -63.7575, 2.14 ) }
    dend_30 { pt3dadd( 25.6264, -251.922, -63.9638, 2.14 ) }
    dend_30 { pt3dadd( 25.4486, -254.044, -64.5965, 0.22 ) }
    dend_30 { pt3dadd( 25.274, -256.126, -65.2548, 0.22 ) }
    dend_30 { pt3dadd( 24.9787, -258.777, -66.0903, 0.22 ) }
    dend_30 { pt3dadd( 24.9692, -258.852, -66.1142, 0.22 ) }
    dend_30 { pt3dadd( 24.8841, -259.417, -66.2898, 0.96 ) }
    dend_30 { pt3dadd( 24.8037, -259.971, -66.4421, 0.96 ) }
    dend_30 { pt3dadd( 24.6609, -260.923, -66.6072, 0.22 ) }
    dend_30 { pt3dadd( 24.3357, -262.631, -66.9501, 0.22 ) }
    dend_30 { pt3dadd( 24.2504, -263.055, -67.0316, 0.59 ) }
    dend_30 { pt3dadd( 24.1963, -263.331, -67.1006, 0.59 ) }
    dend_30 { pt3dadd( 24.1123, -263.742, -67.2033, 0.22 ) }
    dend_30 { pt3dadd( 23.707, -265.608, -67.6889, 0.22 ) }
    dend_30 { pt3dadd( 23.5775, -266.147, -67.8271, 0.96 ) }
    dend_30 { pt3dadd( 23.3984, -266.826, -68.0263, 0.96 ) }
    dend_30 { pt3dadd( 22.9072, -268.413, -68.5165, 0.22 ) }
    dend_30 { pt3dadd( 21.8816, -270.758, -69.2149, 0.22 ) }
    dend_30 { pt3dadd( 21.8425, -270.824, -69.2362, 0.22 ) }
    dend_30 { pt3dadd( 21.5583, -271.206, -69.3605, 1.55 ) }
    dend_30 { pt3dadd( 21.1183, -271.707, -69.4998, 1.55 ) }
    dend_30 { pt3dadd( 20.7173, -272.093, -69.6629, 0.22 ) }
    dend_30 { pt3dadd( 18.8824, -273.635, -70.4753, 0.22 ) }
    dend_30 { pt3dadd( 18.0918, -274.197, -70.9177, 0.96 ) }
    dend_30 { pt3dadd( 18.0432, -274.231, -70.9547, 0.96 ) }
    dend_30 { pt3dadd( 17.2174, -274.795, -71.6959, 0.96 ) }
    dend_30 { pt3dadd( 15.3934, -276.014, -73.5688, 0.22 ) }
    dend_30 { pt3dadd( 14.8022, -276.402, -74.2533, 0.22 ) }
    dend_30 { pt3dadd( 14.5912, -276.541, -74.5237, 0.96 ) }
    dend_30 { pt3dadd( 13.254, -277.435, -76.1412, 0.15 ) }
    dend_30 { pt3dadd( 12.5997, -277.861, -76.8998, 0.15 ) }
    dend_30 { pt3dadd( 12.4625, -277.946, -77.0491, 0.29 ) }
    dend_30 { pt3dadd( 12.2531, -278.079, -77.2151, 0.29 ) }
    dend_30 { pt3dadd( 11.4377, -278.579, -77.8802, 0.22 ) }
    dend_30 { pt3dadd( 11.394, -278.606, -77.9275, 0.22 ) }
    dend_30 { pt3dadd( 10.4865, -279.186, -78.6772, 0.59 ) }
    dend_30 { pt3dadd( 10.4204, -279.234, -78.7338, 0.59 ) }
    dend_30 { pt3dadd( 10.1422, -279.44, -78.9665, 0.59 ) }
    dend_30 { pt3dadd( 10.0966, -279.477, -79.0041, 0.59 ) }
    dend_30 { pt3dadd( 8.47496, -280.843, -80.3493, 0.15 ) }
    dend_30 { pt3dadd( 6.12359, -282.856, -82.1723, 0.15 ) }
    dend_30 { pt3dadd( 5.63736, -283.28, -82.5038, 1.18 ) }
    dend_30 { pt3dadd( 5.58352, -283.328, -82.5394, 1.18 ) }
    dend_30 { pt3dadd( 5.03061, -283.819, -82.8791, 1.77 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 82/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.190646, -26.4414, 1.22255, 1.4 ) }
    dend_25 { pt3dadd( -0.982882, -26.7055, 1.18327, 1.4 ) }
    dend_25 { pt3dadd( -2.39002, -27.2407, 1.11695, 1.4 ) }
    dend_25 { pt3dadd( -2.79781, -27.4234, 1.09938, 1.4 ) }
    dend_25 { pt3dadd( -4.04248, -28.0204, 1.04856, 1.25 ) }
    dend_25 { pt3dadd( -5.11748, -28.5769, 0.979375, 1.25 ) }
    dend_25 { pt3dadd( -6.16021, -29.1573, 0.89957, 1.25 ) }
    dend_25 { pt3dadd( -6.21961, -29.194, 0.894455, 1.25 ) }
    dend_25 { pt3dadd( -7.0269, -29.7636, 0.819019, 1.4 ) }
    dend_25 { pt3dadd( -7.08467, -29.8028, 0.813995, 1.4 ) }
    dend_25 { pt3dadd( -8.07859, -30.4425, 0.733971, 1.4 ) }
    dend_25 { pt3dadd( -9.12243, -31.0417, 0.657349, 1.62 ) }
    dend_25 { pt3dadd( -10.2424, -31.6128, 0.58385, 1.55 ) }
    dend_25 { pt3dadd( -10.3061, -31.6417, 0.580503, 1.55 ) }
    dend_25 { pt3dadd( -12.0513, -32.3343, 0.512948, 1.55 ) }
    dend_25 { pt3dadd( -12.1175, -32.3572, 0.511494, 1.55 ) }
    dend_25 { pt3dadd( -13.6342, -32.7954, 0.511494, 1.55 ) }
    dend_25 { pt3dadd( -13.712, -32.8141, 0.511714, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_25 { pt3dadd( -14.952, -33.0845, 0.518264, 1.55 ) }
    dend_25 { pt3dadd( -15.5708, -33.2013, 0.520639, 1.84 ) }
    dend_25 { pt3dadd( -16.5198, -33.3461, 0.523481, 1.84 ) }
    dend_25 { pt3dadd( -16.5892, -33.3554, 0.52359, 1.84 ) }
    dend_25 { pt3dadd( -17.5709, -33.4542, 0.523712, 1.69 ) }
    dend_25 { pt3dadd( -17.6408, -33.4592, 0.523657, 1.69 ) }
    dend_25 { pt3dadd( -19.5662, -33.5309, 0.521114, 1.69 ) }
    dend_25 { pt3dadd( -19.6362, -33.5324, 0.520996, 1.69 ) }
    dend_25 { pt3dadd( -21.1859, -33.5487, 0.495589, 1.69 ) }
    dend_25 { pt3dadd( -23.3951, -33.5548, 0.438004, 1.69 ) }
    dend_25 { pt3dadd( -25.6738, -33.5411, 0.361597, 1.69 ) }
    dend_25 { pt3dadd( -28.4041, -33.4951, 0.225089, 1.69 ) }
    dend_25 { pt3dadd( -28.4739, -33.4927, 0.220485, 1.69 ) }
    dend_25 { pt3dadd( -29.7513, -33.4183, 0.119478, 1.69 ) }
    dend_25 { pt3dadd( -31.1414, -33.2995, -0.0160637, 1.69 ) }
    dend_25 { pt3dadd( -31.2104, -33.2917, -0.0251603, 1.69 ) }
    dend_25 { pt3dadd( -32.2163, -33.16, -0.181584, 1.55 ) }
    dend_25 { pt3dadd( -33.0605, -33.0558, -0.310936, 1.55 ) }
    dend_25 { pt3dadd( -34.8757, -32.8929, -0.578065, 1.55 ) }
    dend_25 { pt3dadd( -34.9548, -32.8879, -0.588942, 1.55 ) }
    dend_25 { pt3dadd( -35.9997, -32.8655, -0.742221, 1.55 ) }
    dend_25 { pt3dadd( -37.6816, -32.8947, -0.987472, 1.55 ) }
    dend_25 { pt3dadd( -39.134, -33.0299, -1.18656, 1.55 ) }
    dend_25 { pt3dadd( -40.3501, -33.2426, -1.36332, 1.55 ) }
    dend_25 { pt3dadd( -40.452, -33.2684, -1.37881, 1.55 ) }
    dend_25 { pt3dadd( -41.5383, -33.6033, -1.52868, 1.55 ) }
    dend_25 { pt3dadd( -41.6024, -33.6293, -1.53937, 1.55 ) }
    dend_25 { pt3dadd( -42.6478, -34.1688, -1.79272, 1.33 ) }
    dend_25 { pt3dadd( -43.2278, -34.5076, -1.95557, 1.11 ) }
    dend_25 { pt3dadd( -43.2861, -34.5426, -1.97242, 1.11 ) }
    dend_25 { pt3dadd( -44.2656, -35.1344, -2.28776, 1.11 ) }
    dend_25 { pt3dadd( -45.4488, -35.8436, -2.72195, 1.11 ) }
    dend_25 { pt3dadd( -46.4086, -36.4054, -3.10593, 1.4 ) }
    dend_25 { pt3dadd( -47.1347, -36.8369, -3.41296, 1.84 ) }
    dend_25 { pt3dadd( -47.1907, -36.8712, -3.437, 1.84 ) }
    dend_25 { pt3dadd( -48.1427, -37.4877, -3.84631, 1.84 ) }
    dend_25 { pt3dadd( -49.1194, -38.1612, -4.24704, 1.84 ) }
    dend_25 { pt3dadd( -49.1966, -38.2168, -4.2743, 1.84 ) }
    dend_25 { pt3dadd( -50.1232, -38.9159, -4.59497, 2.14 ) }
    dend_25 { pt3dadd( -50.1768, -38.9572, -4.61276, 2.14 ) }
    dend_25 { pt3dadd( -51.131, -39.6999, -4.90258, 2.5 ) }
    dend_25 { pt3dadd( -52.119, -40.4552, -5.15602, 2.65 ) }
    dend_25 { pt3dadd( -53.1194, -41.2273, -5.39488, 2.65 ) }
    dend_25 { pt3dadd( -53.1745, -41.2684, -5.40829, 2.65 ) }
    dend_25 { pt3dadd( -53.8852, -41.765, -5.587, 2.95 ) }
    dend_25 { pt3dadd( -53.95, -41.8094, -5.60213, 2.95 ) }
    dend_25 { pt3dadd( -54.4448, -42.12, -5.68495, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 47/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -57.8163, 138.123, -3.78402, 0.74 ) }
    dend_21 { pt3dadd( -58.1064, 138.358, -3.7825, 0.74 ) }
    dend_21 { pt3dadd( -59.3911, 139.336, -3.78378, 0.29 ) }
    dend_21 { pt3dadd( -60.1563, 139.911, -3.78637, 0.29 ) }
    dend_21 { pt3dadd( -60.2847, 140.009, -3.78696, 0.29 ) }
    dend_21 { pt3dadd( -61.0248, 140.59, -3.79087, 0.29 ) }
    dend_21 { pt3dadd( -61.0796, 140.634, -3.79117, 0.29 ) }
    dend_21 { pt3dadd( -62.304, 141.631, -3.80261, 0.29 ) }
    dend_21 { pt3dadd( -62.4347, 141.739, -3.80466, 0.29 ) }
    dend_21 { pt3dadd( -63.1402, 142.35, -3.81391, 0.29 ) }
    dend_21 { pt3dadd( -63.3569, 142.543, -3.81569, 0.74 ) }
    dend_21 { pt3dadd( -63.7831, 142.946, -3.81569, 1.03 ) }
    dend_21 { pt3dadd( -63.8313, 142.997, -3.81841, 1.03 ) }
    dend_21 { pt3dadd( -64.1906, 143.444, -3.85659, 1.03 ) }
    dend_21 { pt3dadd( -64.2586, 143.534, -3.8681, 1.03 ) }
    dend_21 { pt3dadd( -64.5521, 143.945, -3.92912, 0.81 ) }
    dend_21 { pt3dadd( -65.0509, 144.668, -4.04072, 0.66 ) }
    dend_21 { pt3dadd( -65.7094, 145.657, -4.19429, 0.29 ) }
    dend_21 { pt3dadd( -66.7001, 147.205, -4.43072, 0.29 ) }
    dend_21 { pt3dadd( -67.0742, 147.826, -4.52172, 0.66 ) }
    dend_21 { pt3dadd( -67.4205, 148.453, -4.59927, 1.47 ) }
    dend_21 { pt3dadd( -67.6102, 148.828, -4.63888, 1.69 ) }
    dend_21 { pt3dadd( -67.8458, 149.35, -4.68415, 1.69 ) }
    dend_21 { pt3dadd( -68.1263, 150.042, -4.72442, 0.88 ) }
    dend_21 { pt3dadd( -68.3916, 150.756, -4.75831, 0.37 ) }
    dend_21 { pt3dadd( -69.0634, 152.612, -4.81572, 0.37 ) }
    dend_21 { pt3dadd( -69.1143, 152.753, -4.82035, 0.37 ) }
    dend_21 { pt3dadd( -69.4274, 153.586, -4.84813, 0.37 ) }
    dend_21 { pt3dadd( -69.5403, 153.875, -4.85776, 0.88 ) }
    dend_21 { pt3dadd( -69.7256, 154.298, -4.87094, 0.88 ) }
    dend_21 { pt3dadd( -69.7608, 154.37, -4.87336, 0.88 ) }
    dend_21 { pt3dadd( -70.0374, 154.865, -4.88946, 0.88 ) }
    dend_21 { pt3dadd( -70.3357, 155.356, -4.86864, 1.11 ) }
    dend_21 { pt3dadd( -70.3736, 155.415, -4.8628, 1.11 ) }
    dend_21 { pt3dadd( -70.5748, 155.726, -4.82765, 1.11 ) }
    dend_21 { pt3dadd( -70.6502, 155.843, -4.81335, 1.11 ) }
    dend_21 { pt3dadd( -70.891, 156.214, -4.75043, 1.11 ) }
    dend_21 { pt3dadd( -71.3902, 156.998, -4.58895, 0.22 ) }
    dend_21 { pt3dadd( -72.4901, 158.712, -4.20677, 0.22 ) }
    dend_21 { pt3dadd( -72.5285, 158.769, -4.19412, 0.74 ) }
    dend_21 { pt3dadd( -72.5677, 158.826, -4.18159, 0.74 ) }
    dend_21 { pt3dadd( -72.9905, 159.414, -4.05464, 0.66 ) }
    dend_21 { pt3dadd( -73.0377, 159.477, -4.04217, 0.66 ) }
    dend_21 { pt3dadd( -73.6925, 160.349, -3.91416, 0.29 ) }
    dend_21 { pt3dadd( -74.2127, 161.05, -3.76563, 0.29 ) }
    dend_21 { pt3dadd( -74.2606, 161.113, -3.7527, 0.29 ) }
    dend_21 { pt3dadd( -74.38, 161.268, -3.72243, 0.88 ) }
    dend_21 { pt3dadd( -74.8061, 161.811, -3.63127, 1.18 ) }
    dend_21 { pt3dadd( -75.2586, 162.381, -3.53237, 1.18 ) }
    dend_21 { pt3dadd( -75.8954, 163.181, -3.38373, 0.29 ) }
    dend_21 { pt3dadd( -77.0296, 164.569, -3.12559, 0.29 ) }
    dend_21 { pt3dadd( -77.0804, 164.63, -3.11405, 0.29 ) }
    dend_21 { pt3dadd( -77.8176, 165.487, -2.95315, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( -77.9933, 165.684, -2.91866, 0.88 ) }
    dend_21 { pt3dadd( -78.0468, 165.743, -2.90891, 0.88 ) }
    dend_21 { pt3dadd( -78.4222, 166.149, -2.85388, 0.88 ) }
    dend_21 { pt3dadd( -78.8002, 166.586, -2.79501, 1.33 ) }
    dend_21 { pt3dadd( -79.1693, 167.084, -2.74622, 1.77 ) }
    dend_21 { pt3dadd( -79.544, 167.642, -2.70158, 1.77 ) }
    dend_21 { pt3dadd( -80.2888, 168.841, -2.63106, 0.29 ) }
    dend_21 { pt3dadd( -80.3291, 168.91, -2.62806, 0.29 ) }
    dend_21 { pt3dadd( -80.9716, 170.121, -2.59685, 0.29 ) }
    dend_21 { pt3dadd( -81.7382, 171.755, -2.58719, 0.29 ) }
    dend_21 { pt3dadd( -81.7794, 171.853, -2.58743, 0.29 ) }
    dend_21 { pt3dadd( -82.2367, 172.999, -2.47591, 0.29 ) }
    dend_21 { pt3dadd( -82.2628, 173.063, -2.46339, 0.29 ) }
    dend_21 { pt3dadd( -82.6363, 173.866, -2.17962, 0.96 ) }
    dend_21 { pt3dadd( -83.1134, 174.74, -1.7119, 1.92 ) }
    dend_21 { pt3dadd( -83.3093, 175.048, -1.50044, 1.92 ) }
    dend_21 { pt3dadd( -84.454, 176.668, -0.127525, 0.37 ) }
    dend_21 { pt3dadd( -85.1317, 177.549, 0.737775, 0.37 ) }
    dend_21 { pt3dadd( -85.6499, 178.177, 1.39659, 0.96 ) }
    dend_21 { pt3dadd( -86.0236, 178.594, 1.87419, 0.96 ) }
    dend_21 { pt3dadd( -86.0608, 178.633, 1.91933, 0.96 ) }
    dend_21 { pt3dadd( -86.8108, 179.48, 2.76734, 0.29 ) }
    dend_21 { pt3dadd( -87.2547, 180.061, 3.20934, 0.29 ) }
    dend_21 { pt3dadd( -87.3517, 180.209, 3.32729, 0.66 ) }
    dend_21 { pt3dadd( -87.4658, 180.439, 3.4609, 0.66 ) }
    dend_21 { pt3dadd( -87.6035, 180.775, 3.652, 0.66 ) }
    dend_21 { pt3dadd( -87.7916, 181.272, 3.90754, 0.88 ) }
    dend_21 { pt3dadd( -88.1576, 182.335, 4.39164, 0.22 ) }
    dend_21 { pt3dadd( -88.2203, 182.527, 4.47912, 0.22 ) }
    dend_21 { pt3dadd( -88.6744, 183.981, 5.11789, 0.22 ) }
    dend_21 { pt3dadd( -89.0331, 185.112, 5.57712, 0.96 ) }
    dend_21 { pt3dadd( -89.217, 185.661, 5.79834, 1.33 ) }
    dend_21 { pt3dadd( -89.2391, 185.724, 5.82079, 1.33 ) }
    dend_21 { pt3dadd( -89.5034, 186.473, 6.03781, 1.33 ) }
    dend_21 { pt3dadd( -89.55, 186.6, 6.07432, 1.33 ) }
    dend_21 { pt3dadd( -89.8177, 187.321, 6.26969, 1.33 ) }
    dend_21 { pt3dadd( -90.2092, 188.397, 6.49605, 0.22 ) }
    dend_21 { pt3dadd( -90.5457, 189.364, 6.69547, 0.22 ) }
    dend_21 { pt3dadd( -90.6394, 189.65, 6.75047, 1.25 ) }
    dend_21 { pt3dadd( -90.7007, 189.855, 6.80291, 1.25 ) }
    dend_21 { pt3dadd( -90.8427, 190.395, 6.96009, 1.25 ) }
    dend_21 { pt3dadd( -90.8868, 190.593, 7.01985, 1.25 ) }
    dend_21 { pt3dadd( -91.021, 191.22, 7.19603, 1.25 ) }
    dend_21 { pt3dadd( -91.1096, 191.554, 7.29766, 1.25 ) }
    dend_21 { pt3dadd( -91.5088, 192.884, 7.70986, 0.29 ) }
    dend_21 { pt3dadd( -91.5304, 192.948, 7.72966, 0.29 ) }
    dend_21 { pt3dadd( -91.897, 193.855, 8.00397, 0.29 ) }
    dend_21 { pt3dadd( -92.0502, 194.175, 8.11057, 0.29 ) }
    dend_21 { pt3dadd( -92.4236, 194.835, 8.34319, 0.29 ) }
    dend_21 { pt3dadd( -92.4715, 194.91, 8.36592, 0.81 ) }
    dend_21 { pt3dadd( -92.5909, 195.081, 8.40438, 0.81 ) }
    dend_21 { pt3dadd( -92.9702, 195.623, 8.53353, 0.81 ) }
    dend_21 { pt3dadd( -93.51, 196.377, 8.71347, 0.22 ) }
    dend_21 { pt3dadd( -93.5909, 196.49, 8.73215, 0.22 ) }
    dend_21 { pt3dadd( -94.4188, 197.625, 8.8456, 0.22 ) }
    dend_21 { pt3dadd( -94.6019, 197.876, 8.85799, 0.22 ) }
    dend_21 { pt3dadd( -94.78, 198.117, 8.86596, 0.44 ) }
    dend_21 { pt3dadd( -95.3953, 198.952, 8.86666, 0.44 ) }
    dend_21 { pt3dadd( -95.9526, 199.705, 8.82958, 0.37 ) }
    dend_21 { pt3dadd( -96.4274, 200.331, 8.80636, 0.37 ) }
    dend_21 { pt3dadd( -96.4718, 200.385, 8.80531, 0.37 ) }
    dend_21 { pt3dadd( -96.9131, 200.911, 8.80854, 0.37 ) }
    dend_21 { pt3dadd( -96.966, 200.971, 8.81109, 0.37 ) }
    dend_21 { pt3dadd( -97.1164, 201.13, 8.83031, 0.81 ) }
    dend_21 { pt3dadd( -97.3348, 201.349, 8.86329, 0.81 ) }
    dend_21 { pt3dadd( -97.7887, 201.781, 8.92422, 0.81 ) }
    dend_21 { pt3dadd( -98.0211, 202.002, 8.95089, 0.81 ) }
    dend_21 { pt3dadd( -98.0795, 202.057, 8.95602, 0.81 ) }
    dend_21 { pt3dadd( -98.6695, 202.588, 9.00776, 0.29 ) }
    dend_21 { pt3dadd( -99.8777, 203.65, 9.11629, 0.29 ) }
    dend_21 { pt3dadd( -100.34, 204.062, 9.16904, 0.74 ) }
    dend_21 { pt3dadd( -100.58, 204.282, 9.20012, 0.96 ) }
    dend_21 { pt3dadd( -100.866, 204.543, 9.23948, 0.96 ) }
    dend_21 { pt3dadd( -101.402, 205.042, 9.31388, 0.96 ) }
    dend_21 { pt3dadd( -101.453, 205.09, 9.32109, 0.96 ) }
    dend_21 { pt3dadd( -102.164, 205.769, 9.42328, 0.29 ) }
    dend_21 { pt3dadd( -102.832, 206.425, 9.50566, 0.29 ) }
    dend_21 { pt3dadd( -102.905, 206.502, 9.51468, 0.29 ) }
    dend_21 { pt3dadd( -103.373, 207.035, 9.64515, 0.29 ) }
    dend_21 { pt3dadd( -103.413, 207.089, 9.66279, 0.29 ) }
    dend_21 { pt3dadd( -103.556, 207.303, 9.73287, 0.66 ) }
    dend_21 { pt3dadd( -103.595, 207.369, 9.75513, 0.66 ) }
    dend_21 { pt3dadd( -103.851, 207.834, 9.91875, 0.66 ) }
    dend_21 { pt3dadd( -104.537, 209.045, 10.334, 0.29 ) }
    dend_21 { pt3dadd( -104.925, 209.746, 10.5836, 0.29 ) }
    dend_21 { pt3dadd( -105.55, 210.866, 10.9825, 0.29 ) }
    dend_21 { pt3dadd( -105.587, 210.933, 11.006, 0.29 ) }
    dend_21 { pt3dadd( -105.654, 211.05, 11.0451, 0.59 ) }
    dend_21 { pt3dadd( -105.979, 211.605, 11.1993, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 89/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -57.8163, 138.123, -3.78402, 1.33 ) }
    dend_20 { pt3dadd( -58.1572, 139.688, -4.01727, 1.33 ) }
    dend_20 { pt3dadd( -58.3926, 140.689, -4.16994, 0.88 ) }
    dend_20 { pt3dadd( -58.7898, 142.329, -4.42076, 0.66 ) }
    dend_20 { pt3dadd( -59.1955, 143.922, -4.71083, 0.66 ) }
    dend_20 { pt3dadd( -59.6313, 145.583, -5.04375, 0.66 ) }
    dend_20 { pt3dadd( -59.6911, 145.802, -5.0897, 0.66 ) }
    dend_20 { pt3dadd( -59.9287, 146.56, -5.2857, 1.11 ) }
    dend_20 { pt3dadd( -59.9976, 146.76, -5.34497, 1.11 ) }
    dend_20 { pt3dadd( -60.3207, 147.604, -5.60327, 1.11 ) }
    dend_20 { pt3dadd( -60.3434, 147.669, -5.6158, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_20 { pt3dadd( -60.5688, 148.386, -5.70599, 1.11 ) }
    dend_20 { pt3dadd( -60.6137, 148.535, -5.7148, 1.11 ) }
    dend_20 { pt3dadd( -60.7098, 148.893, -5.71459, 1.11 ) }
    dend_20 { pt3dadd( -61.0715, 150.33, -5.6478, 0.52 ) }
    dend_20 { pt3dadd( -61.5682, 152.555, -5.44382, 0.52 ) }
    dend_20 { pt3dadd( -61.5824, 152.623, -5.4375, 0.52 ) }
    dend_20 { pt3dadd( -61.7081, 153.312, -5.37255, 0.88 ) }
    dend_20 { pt3dadd( -61.8678, 154.244, -5.28769, 0.88 ) }
    dend_20 { pt3dadd( -61.8801, 154.323, -5.27778, 0.88 ) }
    dend_20 { pt3dadd( -62.0081, 155.255, -5.13367, 0.88 ) }
    dend_20 { pt3dadd( -62.2094, 156.796, -4.87803, 0.44 ) }
    dend_20 { pt3dadd( -62.2971, 157.584, -4.76108, 0.81 ) }
    dend_20 { pt3dadd( -62.3615, 158.399, -4.65342, 1.47 ) }
    dend_20 { pt3dadd( -62.418, 159.678, -4.49705, 1.62 ) }
    dend_20 { pt3dadd( -62.4298, 160.485, -4.39224, 1.62 ) }
    dend_20 { pt3dadd( -62.4266, 161.07, -4.31438, 0.96 ) }
    dend_20 { pt3dadd( -62.3834, 162.593, -4.11365, 0.59 ) }
    dend_20 { pt3dadd( -62.3319, 164.216, -3.91641, 0.59 ) }
    dend_20 { pt3dadd( -62.1986, 166.981, -3.6209, 0.59 ) }
    dend_20 { pt3dadd( -62.1378, 167.999, -3.53384, 1.47 ) }
    dend_20 { pt3dadd( -62.0866, 168.739, -3.47075, 1.92 ) }
    dend_20 { pt3dadd( -62.0287, 169.562, -3.40665, 1.33 ) }
    dend_20 { pt3dadd( -61.9753, 170.388, -3.35271, 0.81 ) }
    dend_20 { pt3dadd( -61.9242, 171.238, -3.31766, 0.44 ) }
    dend_20 { pt3dadd( -61.9153, 171.388, -3.31528, 0.44 ) }
    dend_20 { pt3dadd( -61.8384, 172.778, -3.33671, 0.44 ) }
    dend_20 { pt3dadd( -61.7964, 173.518, -3.33702, 1.18 ) }
    dend_20 { pt3dadd( -61.7441, 174.47, -3.32323, 1.47 ) }
    dend_20 { pt3dadd( -61.7325, 174.619, -3.31894, 1.47 ) }
    dend_20 { pt3dadd( -61.6686, 175.42, -3.28988, 1.47 ) }
    dend_20 { pt3dadd( -61.6265, 175.858, -3.27155, 1.47 ) }
    dend_20 { pt3dadd( -61.5289, 176.612, -3.23655, 0.52 ) }
    dend_20 { pt3dadd( -61.3092, 178.001, -3.1707, 0.52 ) }
    dend_20 { pt3dadd( -60.8952, 180.343, -3.07038, 0.52 ) }
    dend_20 { pt3dadd( -60.7359, 181.201, -3.03818, 0.88 ) }
    dend_20 { pt3dadd( -60.7031, 181.368, -3.03317, 0.88 ) }
    dend_20 { pt3dadd( -60.4339, 182.681, -3.00835, 0.88 ) }
    dend_20 { pt3dadd( -60.2577, 183.501, -3.01624, 0.88 ) }
    dend_20 { pt3dadd( -60.1588, 184.073, -3.02911, 1.33 ) }
    dend_20 { pt3dadd( -60.1503, 184.142, -3.03296, 1.33 ) }
    dend_20 { pt3dadd( -60.1034, 184.884, -3.08916, 1.33 ) }
    dend_20 { pt3dadd( -60.0994, 185.252, -3.12095, 1.33 ) }
    dend_20 { pt3dadd( -60.1313, 185.907, -3.18369, 0.37 ) }
    dend_20 { pt3dadd( -60.2813, 187.765, -3.36277, 0.37 ) }
    dend_20 { pt3dadd( -60.3366, 188.308, -3.41048, 1.18 ) }
    dend_20 { pt3dadd( -60.4554, 189.274, -3.4804, 1.77 ) }
    dend_20 { pt3dadd( -60.5513, 190.076, -3.53227, 1.99 ) }
    dend_20 { pt3dadd( -60.6005, 190.528, -3.55796, 1.99 ) }
    dend_20 { pt3dadd( -60.6677, 191.199, -3.58782, 1.33 ) }
    dend_20 { pt3dadd( -60.7321, 191.944, -3.61774, 0.81 ) }
    dend_20 { pt3dadd( -60.8458, 193.346, -3.66426, 0.37 ) }
    dend_20 { pt3dadd( -61.0565, 196.374, -3.7732, 0.37 ) }
    dend_20 { pt3dadd( -61.0671, 196.544, -3.77971, 0.37 ) }
    dend_20 { pt3dadd( -61.1362, 197.939, -3.83547, 0.37 ) }
    dend_20 { pt3dadd( -61.144, 198.169, -3.84845, 0.88 ) }
    dend_20 { pt3dadd( -61.1453, 198.239, -3.85343, 0.88 ) }
    dend_20 { pt3dadd( -61.1482, 198.818, -3.89453, 1.18 ) }
    dend_20 { pt3dadd( -61.1492, 198.887, -3.89666, 1.18 ) }
    dend_20 { pt3dadd( -61.1636, 199.477, -3.90251, 1.18 ) }
    dend_20 { pt3dadd( -61.1887, 200.327, -3.89906, 0.37 ) }
    dend_20 { pt3dadd( -61.2441, 202.667, -3.8683, 0.37 ) }
    dend_20 { pt3dadd( -61.2898, 204.786, -3.82536, 0.37 ) }
    dend_20 { pt3dadd( -61.3034, 205.558, -3.80389, 0.96 ) }
    dend_20 { pt3dadd( -61.3163, 206.518, -3.77291, 1.62 ) }
    dend_20 { pt3dadd( -61.3239, 207.55, -3.73088, 1.77 ) }
    dend_20 { pt3dadd( -61.3197, 208.338, -3.68615, 1.77 ) }
    dend_20 { pt3dadd( -61.2936, 208.917, -3.66173, 1.77 ) }
    dend_20 { pt3dadd( -61.2876, 208.986, -3.66091, 1.77 ) }
    dend_20 { pt3dadd( -61.2013, 209.723, -3.6803, 0.74 ) }
    dend_20 { pt3dadd( -61.0966, 210.448, -3.70069, 0.52 ) }
    dend_20 { pt3dadd( -61.0471, 210.78, -3.70985, 0.52 ) }
    dend_20 { pt3dadd( -60.8755, 212.097, -3.74151, 0.52 ) }
    dend_20 { pt3dadd( -60.8666, 212.166, -3.74283, 0.52 ) }
    dend_20 { pt3dadd( -60.8321, 212.464, -3.74633, 0.88 ) }
    dend_20 { pt3dadd( -60.7795, 212.978, -3.75379, 1.03 ) }
    dend_20 { pt3dadd( -60.7451, 213.416, -3.76618, 1.03 ) }
    dend_20 { pt3dadd( -60.7267, 213.925, -3.78642, 1.03 ) }
    dend_20 { pt3dadd( -60.7278, 213.995, -3.78935, 1.03 ) }
    dend_20 { pt3dadd( -60.7458, 214.435, -3.78326, 1.03 ) }
    dend_20 { pt3dadd( -60.7859, 215.109, -3.677, 0.74 ) }
    dend_20 { pt3dadd( -60.7956, 215.245, -3.64461, 0.74 ) }
    dend_20 { pt3dadd( -60.8607, 216.093, -3.40317, 0.52 ) }
    dend_20 { pt3dadd( -60.995, 217.843, -2.86803, 0.52 ) }
    dend_20 { pt3dadd( -61.1821, 220.147, -2.12285, 0.37 ) }
    dend_20 { pt3dadd( -61.3473, 222.11, -1.47999, 1.18 ) }
    dend_20 { pt3dadd( -61.4043, 222.771, -1.2582, 1.92 ) }
    dend_20 { pt3dadd( -61.4164, 222.913, -1.21266, 1.92 ) }
    dend_20 { pt3dadd( -61.5402, 224.176, -0.846315, 1.92 ) }
    dend_20 { pt3dadd( -61.6661, 225.31, -0.565126, 0.59 ) }
    dend_20 { pt3dadd( -61.824, 226.664, -0.284777, 0.59 ) }
    dend_20 { pt3dadd( -61.8323, 226.733, -0.274323, 0.59 ) }
    dend_20 { pt3dadd( -62.0027, 228.026, -0.0568628, 0.59 ) }
    dend_20 { pt3dadd( -62.2102, 229.474, 0.192626, 0.59 ) }
    dend_20 { pt3dadd( -62.2206, 229.542, 0.204498, 0.59 ) }
    dend_20 { pt3dadd( -62.399, 230.748, 0.392999, 0.29 ) }
    dend_20 { pt3dadd( -62.4278, 230.956, 0.423469, 0.29 ) }
    dend_20 { pt3dadd( -62.6022, 232.49, 0.615285, 0.29 ) }
    dend_20 { pt3dadd( -62.6798, 233.4, 0.708893, 1.18 ) }
    dend_20 { pt3dadd( -62.7082, 234.127, 0.754993, 1.18 ) }
    dend_20 { pt3dadd( -62.7081, 234.94, 0.770596, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_20 { pt3dadd( -62.6716, 235.742, 0.745081, 0.81 ) }
    dend_20 { pt3dadd( -62.642, 236.272, 0.720813, 0.59 ) }
    dend_20 { pt3dadd( -62.6362, 236.352, 0.716678, 0.59 ) }
    dend_20 { pt3dadd( -62.577, 237.24, 0.671597, 0.59 ) }
    dend_20 { pt3dadd( -62.5139, 238.191, 0.618416, 0.52 ) }
    dend_20 { pt3dadd( -62.4096, 240.021, 0.510737, 0.44 ) }
    dend_20 { pt3dadd( -62.3374, 241.828, 0.379616, 0.44 ) }
    dend_20 { pt3dadd( -62.3114, 242.936, 0.288808, 1.18 ) }
    dend_20 { pt3dadd( -62.3062, 243.755, 0.21856, 2.06 ) }
    dend_20 { pt3dadd( -62.3139, 244.317, 0.166868, 2.28 ) }
    dend_20 { pt3dadd( -62.3466, 244.922, 0.110821, 1.55 ) }
    dend_20 { pt3dadd( -62.411, 245.742, 0.0376088, 1.11 ) }
    dend_20 { pt3dadd( -62.454, 246.099, 0.0118903, 0.74 ) }
    dend_20 { pt3dadd( -62.6153, 246.896, -0.0557725, 0.29 ) }
    dend_20 { pt3dadd( -62.6508, 247.031, -0.0676391, 0.29 ) }
    dend_20 { pt3dadd( -63.0058, 248.161, -0.164915, 0.29 ) }
    dend_20 { pt3dadd( -63.0284, 248.227, -0.169967, 0.29 ) }
    dend_20 { pt3dadd( -63.5758, 249.712, -0.261951, 0.29 ) }
    dend_20 { pt3dadd( -63.7979, 250.279, -0.300466, 0.81 ) }
    dend_20 { pt3dadd( -64.0179, 250.827, -0.324545, 1.11 ) }
    dend_20 { pt3dadd( -64.0441, 250.892, -0.325174, 1.11 ) }
    dend_20 { pt3dadd( -64.3461, 251.665, -0.296273, 1.11 ) }
    dend_20 { pt3dadd( -64.3727, 251.74, -0.290135, 1.11 ) }
    dend_20 { pt3dadd( -64.4873, 252.142, -0.23131, 0.88 ) }
    dend_20 { pt3dadd( -64.6554, 252.834, -0.116744, 0.88 ) }
    dend_20 { pt3dadd( -64.7792, 253.444, -0.0187744, 0.66 ) }
    dend_20 { pt3dadd( -64.9094, 254.092, 0.0772998, 0.66 ) }
    dend_20 { pt3dadd( -65.0552, 254.881, 0.190488, 0.44 ) }
    dend_20 { pt3dadd( -65.2238, 255.829, 0.308136, 0.29 ) }
    dend_20 { pt3dadd( -65.2493, 255.976, 0.322533, 0.29 ) }
    dend_20 { pt3dadd( -65.3895, 256.69, 0.387703, 0.29 ) }
    dend_20 { pt3dadd( -65.5091, 257.305, 0.448196, 0.29 ) }
    dend_20 { pt3dadd( -65.5866, 257.687, 0.483804, 1.03 ) }
    dend_20 { pt3dadd( -65.7827, 258.569, 0.561517, 1.47 ) }
    dend_20 { pt3dadd( -65.9545, 259.31, 0.619625, 1.47 ) }
    dend_20 { pt3dadd( -66.222, 260.414, 0.703786, 0.37 ) }
    dend_20 { pt3dadd( -66.668, 262.188, 0.860586, 0.37 ) }
    dend_20 { pt3dadd( -66.8312, 262.833, 0.921082, 0.81 ) }
    dend_20 { pt3dadd( -66.9959, 263.458, 0.980245, 1.18 ) }
    dend_20 { pt3dadd( -67.1627, 264.111, 1.04206, 1.18 ) }
    dend_20 { pt3dadd( -67.3038, 264.745, 1.09329, 1.11 ) }
    dend_20 { pt3dadd( -67.4099, 265.329, 1.11868, 0.52 ) }
    dend_20 { pt3dadd( -67.5305, 266.082, 1.14362, 0.52 ) }
    dend_20 { pt3dadd( -67.5486, 266.231, 1.14661, 0.52 ) }
    dend_20 { pt3dadd( -67.6649, 267.694, 1.1513, 0.52 ) }
    dend_20 { pt3dadd( -67.7453, 269.372, 1.12655, 0.52 ) }
    dend_20 { pt3dadd( -67.7646, 270.117, 1.08748, 0.88 ) }
    dend_20 { pt3dadd( -67.7671, 270.196, 1.08044, 0.88 ) }
    dend_20 { pt3dadd( -67.7977, 270.788, 1.00662, 0.88 ) }
    dend_20 { pt3dadd( -67.8452, 271.369, 0.916892, 0.88 ) }
    dend_20 { pt3dadd( -67.8626, 271.505, 0.890997, 0.88 ) }
    dend_20 { pt3dadd( -67.9716, 272.104, 0.765811, 0.66 ) }
    dend_20 { pt3dadd( -68.2014, 273.221, 0.549823, 0.66 ) }
    dend_20 { pt3dadd( -68.3495, 273.945, 0.393934, 0.96 ) }
    dend_20 { pt3dadd( -68.4656, 274.503, 0.240398, 1.47 ) }
    dend_20 { pt3dadd( -68.5737, 275.071, 0.0959098, 1.69 ) }
    dend_20 { pt3dadd( -68.5847, 275.139, 0.0830878, 1.69 ) }
    dend_20 { pt3dadd( -68.6568, 275.652, 0.0331814, 1.69 ) }
    dend_20 { pt3dadd( -68.737, 276.272, 0.00640604, 1.69 ) }
    dend_20 { pt3dadd( -68.8317, 277.032, 0.00993354, 1.33 ) }
    dend_20 { pt3dadd( -68.965, 278.073, 0.0345891, 0.29 ) }
    dend_20 { pt3dadd( -69.1754, 279.694, 0.101953, 0.29 ) }
    dend_20 { pt3dadd( -69.3097, 280.71, 0.161916, 0.29 ) }
    dend_20 { pt3dadd( -69.3783, 281.22, 0.20437, 0.96 ) }
    dend_20 { pt3dadd( -69.4843, 282.016, 0.309529, 0.96 ) }
    dend_20 { pt3dadd( -69.4924, 282.084, 0.3203, 0.96 ) }
    dend_20 { pt3dadd( -69.5231, 282.379, 0.353537, 0.96 ) }
    dend_20 { pt3dadd( -69.5598, 282.894, 0.420025, 1.03 ) }
    dend_20 { pt3dadd( -69.5843, 283.251, 0.460873, 1.03 ) }
    dend_20 { pt3dadd( -69.6331, 283.768, 0.519887, 0.81 ) }
    dend_20 { pt3dadd( -69.6963, 284.271, 0.575968, 0.52 ) }
    dend_20 { pt3dadd( -69.7129, 284.376, 0.584902, 0.52 ) }
    dend_20 { pt3dadd( -69.8022, 284.877, 0.619044, 0.37 ) }
    dend_20 { pt3dadd( -69.9142, 285.428, 0.66844, 0.29 ) }
    dend_20 { pt3dadd( -70.0924, 286.217, 0.744217, 0.29 ) }
    dend_20 { pt3dadd( -70.1168, 286.32, 0.753551, 0.29 ) }
    dend_20 { pt3dadd( -70.4285, 287.623, 0.927834, 0.29 ) }
    dend_20 { pt3dadd( -70.4441, 287.691, 0.938706, 0.29 ) }
    dend_20 { pt3dadd( -70.6139, 288.447, 1.0767, 1.03 ) }
    dend_20 { pt3dadd( -70.7389, 289.111, 1.19688, 1.77 ) }
    dend_20 { pt3dadd( -70.8352, 289.689, 1.29483, 1.77 ) }
    dend_20 { pt3dadd( -70.9322, 290.353, 1.39639, 1.33 ) }
    dend_20 { pt3dadd( -70.9955, 290.859, 1.46449, 0.88 ) }
    dend_20 { pt3dadd( -71.0651, 291.517, 1.53548, 0.74 ) }
    dend_20 { pt3dadd( -71.1558, 292.83, 1.62725, 0.74 ) }
    dend_20 { pt3dadd( -71.1815, 293.572, 1.67055, 1.03 ) }
    dend_20 { pt3dadd( -71.1798, 293.862, 1.68165, 1.03 ) }
    dend_20 { pt3dadd( -71.1597, 294.301, 1.68657, 1.03 ) }
    dend_20 { pt3dadd( -71.1494, 294.44, 1.6994, 1.03 ) }
    dend_20 { pt3dadd( -71.0456, 295.477, 1.88655, 1.33 ) }
    dend_20 { pt3dadd( -71.0263, 295.635, 1.9299, 1.33 ) }
    dend_20 { pt3dadd( -70.9278, 296.492, 2.17942, 1.33 ) }
    dend_20 { pt3dadd( -70.9173, 296.6, 2.21138, 1.33 ) }
    dend_20 { pt3dadd( -70.8366, 297.863, 2.52119, 0.81 ) }
    dend_20 { pt3dadd( -70.8155, 298.511, 2.64399, 0.52 ) }
    dend_20 { pt3dadd( -70.8152, 298.581, 2.65296, 0.52 ) }
    dend_20 { pt3dadd( -70.839, 300.187, 2.78169, 0.52 ) }
    dend_20 { pt3dadd( -70.8411, 300.257, 2.78378, 0.52 ) }
    dend_20 { pt3dadd( -70.891, 301.799, 2.75042, 0.44 ) }
    dend_20 { pt3dadd( -70.9229, 302.894, 2.65061, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( -70.9415, 303.448, 2.57823, 0.74 ) }
    dend_20 { pt3dadd( -70.9498, 303.665, 2.54214, 0.74 ) }
    dend_20 { pt3dadd( -70.9688, 304.016, 2.46828, 0.74 ) }
    dend_20 { pt3dadd( -70.9725, 304.095, 2.45291, 0.74 ) }
    dend_20 { pt3dadd( -71.0121, 304.66, 2.32957, 0.74 ) }
    dend_20 { pt3dadd( -71.1009, 305.494, 2.14944, 0.29 ) }
    dend_20 { pt3dadd( -71.1105, 305.572, 2.13363, 0.29 ) }
    dend_20 { pt3dadd( -71.288, 306.715, 1.90958, 0.29 ) }
    dend_20 { pt3dadd( -71.673, 308.769, 1.53248, 0.29 ) }
    dend_20 { pt3dadd( -71.8415, 309.505, 1.38711, 1.11 ) }
    dend_20 { pt3dadd( -72.0224, 310.227, 1.24957, 1.77 ) }
    dend_20 { pt3dadd( -72.0384, 310.294, 1.23971, 1.77 ) }
    dend_20 { pt3dadd( -72.1782, 310.903, 1.1546, 1.77 ) }
    dend_20 { pt3dadd( -72.2946, 311.44, 1.0771, 1.77 ) }
    dend_20 { pt3dadd( -72.5339, 312.643, 0.912229, 0.29 ) }
    dend_20 { pt3dadd( -72.7926, 314.141, 0.74701, 0.29 ) }
    dend_20 { pt3dadd( -73.2482, 317.107, 0.451878, 0.29 ) }
    dend_20 { pt3dadd( -73.2586, 317.176, 0.446369, 0.29 ) }
    dend_20 { pt3dadd( -73.3894, 318.098, 0.390081, 1.11 ) }
    dend_20 { pt3dadd( -73.4848, 318.755, 0.368479, 1.25 ) }
    dend_20 { pt3dadd( -73.6089, 319.568, 0.375834, 0.37 ) }
    dend_20 { pt3dadd( -73.6375, 319.716, 0.376965, 0.37 ) }
    dend_20 { pt3dadd( -73.9949, 321.25, 0.392941, 0.37 ) }
    dend_20 { pt3dadd( -74.0144, 321.328, 0.393679, 0.37 ) }
    dend_20 { pt3dadd( -74.3392, 322.562, 0.375408, 0.37 ) }
    dend_20 { pt3dadd( -74.3562, 322.629, 0.371654, 0.37 ) }
    dend_20 { pt3dadd( -74.5136, 323.286, 0.313694, 1.11 ) }
    dend_20 { pt3dadd( -74.6533, 323.935, 0.254271, 1.47 ) }
    dend_20 { pt3dadd( -74.8017, 324.706, 0.178621, 1.47 ) }
    dend_20 { pt3dadd( -74.9467, 325.54, 0.103699, 0.74 ) }
    dend_20 { pt3dadd( -75.0659, 326.258, 0.0437642, 0.44 ) }
    dend_20 { pt3dadd( -75.305, 327.761, -0.0597155, 0.29 ) }
    dend_20 { pt3dadd( -75.4728, 328.917, -0.117222, 0.29 ) }
    dend_20 { pt3dadd( -75.482, 328.986, -0.119819, 0.29 ) }
    dend_20 { pt3dadd( -75.5881, 329.93, -0.158466, 0.29 ) }
    dend_20 { pt3dadd( -75.6117, 330.162, -0.166869, 0.29 ) }
    dend_20 { pt3dadd( -75.6492, 330.604, -0.190239, 0.74 ) }
    dend_20 { pt3dadd( -75.683, 331.182, -0.230482, 0.74 ) }
    dend_20 { pt3dadd( -75.746, 332.349, -0.324607, 0.74 ) }
    dend_20 { pt3dadd( -75.8114, 333.95, -0.460525, 0.29 ) }
    dend_20 { pt3dadd( -75.8189, 334.246, -0.498085, 0.59 ) }
    dend_20 { pt3dadd( -75.8203, 334.474, -0.534475, 0.59 ) }
    dend_20 { pt3dadd( -75.8149, 334.906, -0.616564, 0.59 ) }
    dend_20 { pt3dadd( -75.8089, 335.111, -0.660988, 0.59 ) }
    dend_20 { pt3dadd( -75.7788, 335.548, -0.751405, 0.59 ) }
    dend_20 { pt3dadd( -75.7228, 336.283, -0.902735, 0.29 ) }
    dend_20 { pt3dadd( -75.7151, 336.42, -0.930814, 0.29 ) }
    dend_20 { pt3dadd( -75.6626, 337.642, -1.17566, 0.29 ) }
    dend_20 { pt3dadd( -75.659, 337.747, -1.19505, 0.29 ) }
    dend_20 { pt3dadd( -75.6151, 339.252, -1.54452, 0.29 ) }
    dend_20 { pt3dadd( -75.6094, 339.736, -1.66826, 0.96 ) }
    dend_20 { pt3dadd( -75.6155, 340.236, -1.7899, 1.47 ) }
    dend_20 { pt3dadd( -75.6227, 340.372, -1.82281, 1.47 ) }
    dend_20 { pt3dadd( -75.6648, 340.939, -1.97812, 1.47 ) }
    dend_20 { pt3dadd( -75.7462, 341.983, -2.2505, 1.47 ) }
    dend_20 { pt3dadd( -75.8224, 342.777, -2.44831, 0.22 ) }
    dend_20 { pt3dadd( -75.9369, 343.991, -2.71816, 0.22 ) }
    dend_20 { pt3dadd( -76.1009, 345.514, -3.04858, 0.22 ) }
    dend_20 { pt3dadd( -76.2863, 346.886, -3.30611, 1.25 ) }
    dend_20 { pt3dadd( -76.4707, 348.026, -3.50619, 2.06 ) }
    dend_20 { pt3dadd( -76.5638, 348.504, -3.57797, 2.43 ) }
    dend_20 { pt3dadd( -76.6541, 348.919, -3.64358, 2.43 ) }
    dend_20 { pt3dadd( -76.9463, 350.11, -3.83667, 0.37 ) }
    dend_20 { pt3dadd( -77.5186, 352.195, -4.24452, 0.37 ) }
    dend_20 { pt3dadd( -77.7993, 353.122, -4.43739, 1.03 ) }
    dend_20 { pt3dadd( -78.1011, 354.073, -4.65594, 1.99 ) }
    dend_20 { pt3dadd( -78.3003, 354.688, -4.79264, 2.36 ) }
    dend_20 { pt3dadd( -78.4014, 354.991, -4.85816, 2.36 ) }
    dend_20 { pt3dadd( -78.8717, 356.434, -5.20458, 0.29 ) }
    dend_20 { pt3dadd( -78.8921, 356.498, -5.22214, 0.29 ) }
    dend_20 { pt3dadd( -79.3572, 357.994, -5.62021, 0.29 ) }
    dend_20 { pt3dadd( -79.8427, 359.657, -6.12501, 0.29 ) }
    dend_20 { pt3dadd( -79.863, 359.731, -6.1474, 0.29 ) }
    dend_20 { pt3dadd( -80.1464, 360.841, -6.47062, 1.33 ) }
    dend_20 { pt3dadd( -80.297, 361.47, -6.63534, 1.84 ) }
    dend_20 { pt3dadd( -80.392, 361.908, -6.77683, 1.84 ) }
    dend_20 { pt3dadd( -80.5937, 363.055, -7.22667, 0.29 ) }
    dend_20 { pt3dadd( -80.7668, 364.395, -7.79896, 0.29 ) }
    dend_20 { pt3dadd( -80.7784, 364.486, -7.83649, 0.74 ) }
    dend_20 { pt3dadd( -80.8459, 365.042, -8.04823, 0.74 ) }
    dend_20 { pt3dadd( -80.9728, 366.319, -8.57553, 0.22 ) }
    dend_20 { pt3dadd( -80.9891, 366.558, -8.67878, 0.74 ) }
    dend_20 { pt3dadd( -81.0103, 366.897, -8.82653, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.79167, 35.9308, -7.5118, 0.59 ) }
    dend_14 { pt3dadd( -6.91606, 36.339, -8.46181, 0.59 ) }
    dend_14 { pt3dadd( -7.18547, 36.9228, -9.73552, 0.88 ) }
    dend_14 { pt3dadd( -7.57684, 37.6233, -11.1387, 0.88 ) }
    dend_14 { pt3dadd( -7.60048, 37.6587, -11.2065, 0.88 ) }
    dend_14 { pt3dadd( -7.76256, 37.8737, -11.6075, 0.88 ) }
    dend_14 { pt3dadd( -9.3622, 39.813, -15.0928, 0.52 ) }
    dend_14 { pt3dadd( -9.92446, 40.4024, -16.1423, 0.52 ) }
    dend_14 { pt3dadd( -10.2999, 40.7512, -16.7302, 0.52 ) }
    dend_14 { pt3dadd( -10.6907, 41.0813, -17.251, 0.52 ) }
    dend_14 { pt3dadd( -10.8516, 41.2152, -17.4659, 0.52 ) }
    dend_14 { pt3dadd( -11.1552, 41.4487, -17.8359, 0.88 ) }
    dend_14 { pt3dadd( -12.2847, 42.2384, -18.9606, 0.88 ) }
    dend_14 { pt3dadd( -12.5916, 42.4306, -19.4072, 0.88 ) }
    dend_14 { pt3dadd( -12.7516, 42.5181, -19.6433, 0.88 ) }
    dend_14 { pt3dadd( -13.7117, 42.9727, -21.1457, 0.52 ) }
    dend_14 { pt3dadd( -14.1001, 43.1202, -21.7633, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -14.7803, 43.2866, -23.1044, 1.03 ) }
    dend_14 { pt3dadd( -16.3092, 43.5052, -26.2685, 0.44 ) }
    dend_14 { pt3dadd( -16.8641, 43.5405, -27.4358, 0.44 ) }
    dend_14 { pt3dadd( -17.5558, 43.5534, -29.0455, 1.92 ) }
    dend_14 { pt3dadd( -17.7743, 43.5487, -29.5935, 1.92 ) }
    dend_14 { pt3dadd( -19.7446, 43.4594, -34.8197, 0.52 ) }
    dend_14 { pt3dadd( -20.0304, 43.4364, -35.5901, 1.18 ) }
    dend_14 { pt3dadd( -20.327, 43.416, -36.375, 1.55 ) }
    dend_14 { pt3dadd( -22.0107, 43.374, -40.8171, 0.29 ) }
    dend_14 { pt3dadd( -22.0426, 43.3767, -40.8904, 0.29 ) }
    dend_14 { pt3dadd( -22.3712, 43.4368, -41.5433, 0.29 ) }
    dend_14 { pt3dadd( -22.6159, 43.5139, -41.9956, 0.74 ) }
    dend_14 { pt3dadd( -22.8787, 43.5992, -42.5286, 0.74 ) }
    dend_14 { pt3dadd( -22.9749, 43.6224, -42.7607, 0.74 ) }
    dend_14 { pt3dadd( -23.2123, 43.6395, -43.3433, 0.74 ) }
    dend_14 { pt3dadd( -23.2369, 43.6392, -43.4089, 0.74 ) }
    dend_14 { pt3dadd( -25.0729, 43.473, -48.5657, 0.29 ) }
    dend_14 { pt3dadd( -25.4692, 43.4145, -49.7129, 0.29 ) }
    dend_14 { pt3dadd( -26.3601, 43.2437, -52.2156, 1.33 ) }
    dend_14 { pt3dadd( -26.5637, 43.1966, -52.7511, 1.33 ) }
    dend_14 { pt3dadd( -26.5904, 43.1898, -52.8155, 1.33 ) }
    dend_14 { pt3dadd( -27.2711, 43.0351, -54.1757, 0.29 ) }
    dend_14 { pt3dadd( -27.3811, 43.0196, -54.2985, 0.29 ) }
    dend_14 { pt3dadd( -27.9045, 43.043, -54.8655, 0.29 ) }
    dend_14 { pt3dadd( -28.2199, 43.1219, -55.1049, 0.59 ) }
    dend_14 { pt3dadd( -28.463, 43.2146, -55.5632, 0.59 ) }
    dend_14 { pt3dadd( -28.4948, 43.228, -55.6241, 0.59 ) }
    dend_14 { pt3dadd( -29.1187, 43.5285, -56.872, 0.59 ) }
    dend_14 { pt3dadd( -29.1545, 43.5456, -56.9415, 0.59 ) }
    dend_14 { pt3dadd( -29.2794, 43.607, -57.1796, 0.59 ) }
    dend_14 { pt3dadd( -31.2352, 44.5493, -60.9757, 0.22 ) }
    dend_14 { pt3dadd( -32.1996, 44.969, -62.7401, 0.22 ) }
    dend_14 { pt3dadd( -32.3694, 45.0372, -63.0233, 0.74 ) }
    dend_14 { pt3dadd( -32.6167, 45.136, -63.3805, 0.74 ) }
    dend_14 { pt3dadd( -32.9541, 45.2727, -63.8063, 0.74 ) }
    dend_14 { pt3dadd( -34.4813, 45.9064, -65.2744, 0.22 ) }
    dend_14 { pt3dadd( -35.0649, 46.1644, -65.6576, 0.22 ) }
    dend_14 { pt3dadd( -35.6643, 46.4433, -66.0958, 1.33 ) }
    dend_14 { pt3dadd( -36.3884, 46.7846, -66.5894, 1.77 ) }
    dend_14 { pt3dadd( -36.8946, 47.0257, -66.9531, 0.22 ) }
    dend_14 { pt3dadd( -37.934, 47.5176, -67.6849, 0.22 ) }
    dend_14 { pt3dadd( -39.4016, 48.2243, -68.5971, 1.33 ) }
    dend_14 { pt3dadd( -39.5255, 48.2833, -68.6897, 1.33 ) }
    dend_14 { pt3dadd( -40.0332, 48.5166, -69.1041, 1.33 ) }
    dend_14 { pt3dadd( -41.2972, 49.0494, -70.2628, 0.22 ) }
    dend_14 { pt3dadd( -41.4065, 49.0884, -70.3577, 0.22 ) }
    dend_14 { pt3dadd( -42.1527, 49.3217, -70.9551, 0.22 ) }
    dend_14 { pt3dadd( -43.2275, 49.6124, -71.6495, 0.74 ) }
    dend_14 { pt3dadd( -43.7568, 49.7452, -71.9526, 0.74 ) }
    dend_14 { pt3dadd( -44.7408, 49.9684, -72.4249, 0.29 ) }
    dend_14 { pt3dadd( -46.3507, 50.2795, -73.0915, 0.29 ) }
    dend_14 { pt3dadd( -46.4498, 50.2936, -73.1274, 0.29 ) }
    dend_14 { pt3dadd( -46.8666, 50.336, -73.2616, 0.74 ) }
    dend_14 { pt3dadd( -47.3846, 50.3836, -73.3713, 1.18 ) }
    dend_14 { pt3dadd( -47.8268, 50.4203, -73.4461, 1.18 ) }
    dend_14 { pt3dadd( -49.2906, 50.5346, -73.7187, 0.22 ) }
    dend_14 { pt3dadd( -51.9802, 50.8755, -74.6858, 0.22 ) }
    dend_14 { pt3dadd( -52.0441, 50.8823, -74.7135, 0.22 ) }
    dend_14 { pt3dadd( -53.1546, 50.988, -75.2507, 1.69 ) }
    dend_14 { pt3dadd( -53.2147, 50.9938, -75.2862, 1.69 ) }
    dend_14 { pt3dadd( -54.6813, 51.1381, -76.2719, 2.14 ) }
    dend_14 { pt3dadd( -56.8041, 51.3324, -77.8473, 0.15 ) }
    dend_14 { pt3dadd( -58.4198, 51.4713, -79.3366, 0.15 ) }
    dend_14 { pt3dadd( -58.4699, 51.4752, -79.3854, 0.15 ) }
    dend_14 { pt3dadd( -59.6548, 51.5489, -80.6381, 1.03 ) }
    dend_14 { pt3dadd( -59.7781, 51.5562, -80.7636, 1.03 ) }
    dend_14 { pt3dadd( -60.1798, 51.5741, -81.1114, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.79167, 35.9308, -7.5118, 0.66 ) }
    dend_13 { pt3dadd( -7.40387, 36.5428, -7.78301, 0.66 ) }
    dend_13 { pt3dadd( -8.21722, 37.4073, -8.30211, 0.66 ) }
    dend_13 { pt3dadd( -8.97442, 38.2498, -8.85949, 0.66 ) }
    dend_13 { pt3dadd( -9.5586, 38.8952, -9.27562, 0.66 ) }
    dend_13 { pt3dadd( -9.82232, 39.1676, -9.43197, 0.88 ) }
    dend_13 { pt3dadd( -10.451, 39.7777, -9.78002, 0.66 ) }
    dend_13 { pt3dadd( -11.1523, 40.4494, -10.1667, 0.52 ) }
    dend_13 { pt3dadd( -11.2572, 40.5402, -10.2236, 0.52 ) }
    dend_13 { pt3dadd( -12.2121, 41.2997, -10.7064, 0.52 ) }
    dend_13 { pt3dadd( -13.5293, 42.2753, -11.3198, 0.52 ) }
    dend_13 { pt3dadd( -14.3246, 42.8289, -11.6803, 0.52 ) }
    dend_13 { pt3dadd( -14.9004, 43.1967, -11.9113, 1.4 ) }
    dend_13 { pt3dadd( -16.1247, 43.8798, -12.4601, 2.14 ) }
    dend_13 { pt3dadd( -16.1733, 43.9042, -12.4853, 2.14 ) }
    dend_13 { pt3dadd( -16.8602, 44.2043, -12.9249, 2.65 ) }
    dend_13 { pt3dadd( -16.9377, 44.2354, -12.978, 2.65 ) }
    dend_13 { pt3dadd( -17.7846, 44.5841, -13.5038, 2.65 ) }
    dend_13 { pt3dadd( -19.3312, 45.2282, -14.4205, 1.11 ) }
    dend_13 { pt3dadd( -19.3882, 45.253, -14.4527, 1.11 ) }
    dend_13 { pt3dadd( -20.09, 45.5738, -14.8419, 0.29 ) }
    dend_13 { pt3dadd( -21.2205, 46.1234, -15.4295, 0.29 ) }
    dend_13 { pt3dadd( -22.6844, 46.8773, -16.139, 0.29 ) }
    dend_13 { pt3dadd( -22.7332, 46.9051, -16.1601, 0.29 ) }
    dend_13 { pt3dadd( -23.3335, 47.282, -16.3813, 1.11 ) }
    dend_13 { pt3dadd( -23.3979, 47.3228, -16.4054, 1.11 ) }
    dend_13 { pt3dadd( -24.0865, 47.7755, -16.6546, 1.4 ) }
    dend_13 { pt3dadd( -24.7041, 48.197, -16.9024, 1.69 ) }
    dend_13 { pt3dadd( -25.1451, 48.5035, -17.1075, 1.69 ) }
    dend_13 { pt3dadd( -26.051, 49.1476, -17.5644, 1.11 ) }
    dend_13 { pt3dadd( -26.1037, 49.1861, -17.5898, 1.11 ) }
    dend_13 { pt3dadd( -26.6855, 49.6203, -17.8722, 0.44 ) }
    dend_13 { pt3dadd( -26.7587, 49.6769, -17.9073, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -27.5325, 50.2998, -18.239, 0.29 ) }
    dend_13 { pt3dadd( -27.6964, 50.4347, -18.297, 0.29 ) }
    dend_13 { pt3dadd( -28.8982, 51.4858, -18.6062, 0.29 ) }
    dend_13 { pt3dadd( -29.2103, 51.7643, -18.677, 0.74 ) }
    dend_13 { pt3dadd( -29.6984, 52.2039, -18.7934, 1.11 ) }
    dend_13 { pt3dadd( -30.1135, 52.5923, -18.8793, 1.11 ) }
    dend_13 { pt3dadd( -30.1941, 52.6706, -18.8919, 1.11 ) }
    dend_13 { pt3dadd( -30.4071, 52.8758, -18.9309, 1.11 ) }
    dend_13 { pt3dadd( -30.4559, 52.9251, -18.941, 1.11 ) }
    dend_13 { pt3dadd( -31.0234, 53.5109, -19.0754, 0.37 ) }
    dend_13 { pt3dadd( -32.3784, 54.9074, -19.4009, 0.37 ) }
    dend_13 { pt3dadd( -33.2297, 55.768, -19.5903, 0.29 ) }
    dend_13 { pt3dadd( -33.3347, 55.873, -19.6116, 0.29 ) }
    dend_13 { pt3dadd( -34.0015, 56.5295, -19.7685, 0.29 ) }
    dend_13 { pt3dadd( -34.5908, 57.1234, -19.9316, 1.25 ) }
    dend_13 { pt3dadd( -35.3058, 57.8554, -20.1503, 2.21 ) }
    dend_13 { pt3dadd( -36.0067, 58.5731, -20.4424, 2.43 ) }
    dend_13 { pt3dadd( -36.2813, 58.8584, -20.574, 2.06 ) }
    dend_13 { pt3dadd( -37.2998, 59.9248, -21.0637, 0.29 ) }
    dend_13 { pt3dadd( -38.417, 61.0936, -21.6113, 0.29 ) }
    dend_13 { pt3dadd( -38.4628, 61.1421, -21.6322, 0.29 ) }
    dend_13 { pt3dadd( -39.2787, 62.0412, -22.0411, 0.29 ) }
    dend_13 { pt3dadd( -39.5686, 62.3671, -22.2019, 0.29 ) }
    dend_13 { pt3dadd( -40.6634, 63.5994, -22.8207, 0.29 ) }
    dend_13 { pt3dadd( -40.7135, 63.6557, -22.8474, 0.29 ) }
    dend_13 { pt3dadd( -41.628, 64.6657, -23.3424, 0.29 ) }
    dend_13 { pt3dadd( -42.2846, 65.39, -23.6963, 1.18 ) }
    dend_13 { pt3dadd( -42.7938, 65.9394, -24.065, 1.62 ) }
    dend_13 { pt3dadd( -42.8384, 65.9802, -24.1004, 1.62 ) }
    dend_13 { pt3dadd( -43.2596, 66.3092, -24.4327, 1.62 ) }
    dend_13 { pt3dadd( -43.308, 66.3429, -24.4704, 1.62 ) }
    dend_13 { pt3dadd( -43.5709, 66.5048, -24.6631, 1.62 ) }
    dend_13 { pt3dadd( -45.2401, 67.4751, -25.8512, 0.29 ) }
    dend_13 { pt3dadd( -46.689, 68.2953, -26.894, 0.29 ) }
    dend_13 { pt3dadd( -47.403, 68.6888, -27.4082, 0.29 ) }
    dend_13 { pt3dadd( -48.2204, 69.1259, -28.027, 1.11 ) }
    dend_13 { pt3dadd( -48.73, 69.3929, -28.418, 1.47 ) }
    dend_13 { pt3dadd( -49.6711, 69.8809, -29.0483, 1.47 ) }
    dend_13 { pt3dadd( -49.7348, 69.9146, -29.083, 1.47 ) }
    dend_13 { pt3dadd( -50.3155, 70.2647, -29.3395, 1.47 ) }
    dend_13 { pt3dadd( -51.0882, 70.7613, -29.591, 0.22 ) }
    dend_13 { pt3dadd( -51.1534, 70.8054, -29.6049, 0.22 ) }
    dend_13 { pt3dadd( -53.21, 72.2505, -29.9277, 0.22 ) }
    dend_13 { pt3dadd( -53.3851, 72.3765, -29.9708, 0.22 ) }
    dend_13 { pt3dadd( -55.5916, 74.062, -30.7134, 0.22 ) }
    dend_13 { pt3dadd( -55.9133, 74.3185, -30.8398, 1.92 ) }
    dend_13 { pt3dadd( -56.5986, 74.8979, -31.0966, 2.28 ) }
    dend_13 { pt3dadd( -56.8187, 75.0946, -31.1947, 2.58 ) }
    dend_13 { pt3dadd( -59.0224, 77.1982, -32.3327, 0.29 ) }
    dend_13 { pt3dadd( -60.8593, 78.9885, -33.3282, 0.29 ) }
    dend_13 { pt3dadd( -60.9237, 79.054, -33.365, 0.29 ) }
    dend_13 { pt3dadd( -63.5881, 81.8233, -34.7993, 0.29 ) }
    dend_13 { pt3dadd( -64.4396, 82.7202, -35.2172, 1.03 ) }
    dend_13 { pt3dadd( -64.9346, 83.2516, -35.4116, 1.69 ) }
    dend_13 { pt3dadd( -64.9895, 83.3089, -35.4215, 1.69 ) }
    dend_13 { pt3dadd( -65.6563, 83.9628, -35.5157, 1.69 ) }
    dend_13 { pt3dadd( -66.1125, 84.3865, -35.56, 1.92 ) }
    dend_13 { pt3dadd( -66.1722, 84.4394, -35.5665, 1.92 ) }
    dend_13 { pt3dadd( -66.8794, 85.052, -35.641, 0.29 ) }
    dend_13 { pt3dadd( -69.2182, 87.0391, -35.948, 0.22 ) }
    dend_13 { pt3dadd( -71.1967, 88.716, -36.1847, 0.22 ) }
    dend_13 { pt3dadd( -71.25, 88.7609, -36.1909, 0.22 ) }
    dend_13 { pt3dadd( -72.3804, 89.7102, -36.3044, 1.47 ) }
    dend_13 { pt3dadd( -73.009, 90.2451, -36.3601, 1.92 ) }
    dend_13 { pt3dadd( -73.6868, 90.8337, -36.4039, 1.92 ) }
    dend_13 { pt3dadd( -74.5189, 91.5859, -36.4279, 0.22 ) }
    dend_13 { pt3dadd( -74.5714, 91.6321, -36.4271, 0.22 ) }
    dend_13 { pt3dadd( -76.066, 92.9245, -36.3544, 0.22 ) }
    dend_13 { pt3dadd( -76.1947, 93.0342, -36.3377, 0.22 ) }
    dend_13 { pt3dadd( -78.0797, 94.6417, -36.0713, 0.22 ) }
    dend_13 { pt3dadd( -78.7491, 95.2345, -35.981, 1.4 ) }
    dend_13 { pt3dadd( -79.4329, 95.8476, -35.9018, 1.69 ) }
    dend_13 { pt3dadd( -79.4917, 95.9013, -35.8946, 1.69 ) }
    dend_13 { pt3dadd( -80.233, 96.6035, -35.792, 0.22 ) }
    dend_13 { pt3dadd( -80.3093, 96.6768, -35.7815, 0.22 ) }
    dend_13 { pt3dadd( -82.2772, 98.5863, -35.5183, 0.22 ) }
    dend_13 { pt3dadd( -82.4416, 98.7473, -35.4996, 0.22 ) }
    dend_13 { pt3dadd( -83.8218, 100.083, -35.3828, 0.22 ) }
    dend_13 { pt3dadd( -83.9896, 100.241, -35.3743, 0.22 ) }
    dend_13 { pt3dadd( -84.5296, 100.742, -35.3743, 1.4 ) }
    dend_13 { pt3dadd( -85.084, 101.249, -35.3743, 1.62 ) }
    dend_13 { pt3dadd( -85.4393, 101.567, -35.3743, 1.62 ) }
    dend_13 { pt3dadd( -86.0269, 102.1, -35.3743, 0.22 ) }
    dend_13 { pt3dadd( -86.0787, 102.147, -35.3743, 0.22 ) }
    dend_13 { pt3dadd( -87.202, 103.151, -35.3518, 0.22 ) }
    dend_13 { pt3dadd( -87.5828, 103.499, -35.3369, 0.66 ) }
    dend_13 { pt3dadd( -87.7388, 103.643, -35.3283, 0.96 ) }
    dend_13 { pt3dadd( -87.8119, 103.709, -35.324, 0.96 ) }
    dend_13 { pt3dadd( -88.3229, 104.158, -35.2879, 0.96 ) }
    dend_13 { pt3dadd( -88.7229, 104.501, -35.2579, 0.22 ) }
    dend_13 { pt3dadd( -88.83, 104.591, -35.2505, 0.22 ) }
    dend_13 { pt3dadd( -91.5269, 106.796, -35.2226, 0.22 ) }
    dend_13 { pt3dadd( -91.5738, 106.834, -35.2243, 0.22 ) }
    dend_13 { pt3dadd( -92.3873, 107.474, -35.2811, 1.47 ) }
    dend_13 { pt3dadd( -93.0003, 107.949, -35.3598, 1.99 ) }
    dend_13 { pt3dadd( -93.6645, 108.456, -35.4772, 1.99 ) }
    dend_13 { pt3dadd( -94.5296, 109.07, -35.6471, 0.15 ) }
    dend_13 { pt3dadd( -95.7894, 109.888, -35.9302, 0.15 ) }
    dend_13 { pt3dadd( -96.0108, 110.028, -35.9764, 0.15 ) }
    dend_13 { pt3dadd( -97.6802, 111.02, -36.3705, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -97.7651, 111.067, -36.3905, 0.15 ) }
    dend_13 { pt3dadd( -99.5921, 111.991, -36.7569, 0.15 ) }
    dend_13 { pt3dadd( -100.006, 112.19, -36.8268, 1.4 ) }
    dend_13 { pt3dadd( -100.909, 112.587, -36.971, 1.4 ) }
    dend_13 { pt3dadd( -102.044, 113.059, -37.1521, 0.37 ) }
    dend_13 { pt3dadd( -102.474, 113.225, -37.2178, 0.22 ) }
    dend_13 { pt3dadd( -105.097, 114.202, -37.6484, 0.22 ) }
    dend_13 { pt3dadd( -105.162, 114.225, -37.6605, 0.22 ) }
    dend_13 { pt3dadd( -106.58, 114.71, -37.9897, 0.22 ) }
    dend_13 { pt3dadd( -107.195, 114.91, -38.1539, 1.25 ) }
    dend_13 { pt3dadd( -107.519, 115.042, -38.2392, 1.47 ) }
    dend_13 { pt3dadd( -108.004, 115.268, -38.3818, 1.47 ) }
    dend_13 { pt3dadd( -108.216, 115.381, -38.4508, 1.47 ) }
    dend_13 { pt3dadd( -109.299, 116.009, -38.8078, 0.22 ) }
    dend_13 { pt3dadd( -109.356, 116.045, -38.8265, 0.22 ) }
    dend_13 { pt3dadd( -111.935, 117.882, -39.5168, 0.22 ) }
    dend_13 { pt3dadd( -112.717, 118.481, -39.6993, 0.74 ) }
    dend_13 { pt3dadd( -113.091, 118.787, -39.7652, 0.74 ) }
    dend_13 { pt3dadd( -113.561, 119.192, -39.8236, 0.22 ) }
    dend_13 { pt3dadd( -113.756, 119.373, -39.8377, 0.22 ) }
    dend_13 { pt3dadd( -115.568, 121.154, -39.9609, 0.22 ) }
    dend_13 { pt3dadd( -115.662, 121.257, -39.9741, 0.22 ) }
    dend_13 { pt3dadd( -116.998, 122.77, -40.1923, 0.22 ) }
    dend_13 { pt3dadd( -117.479, 123.323, -40.265, 1.55 ) }
    dend_13 { pt3dadd( -118.14, 124.085, -40.3597, 2.06 ) }
    dend_13 { pt3dadd( -118.819, 124.884, -40.4702, 2.36 ) }
    dend_13 { pt3dadd( -120.015, 126.314, -40.686, 0.22 ) }
    dend_13 { pt3dadd( -123.03, 129.926, -41.2539, 0.22 ) }
    dend_13 { pt3dadd( -125.236, 132.593, -41.6896, 0.22 ) }
    dend_13 { pt3dadd( -125.304, 132.674, -41.7027, 0.22 ) }
    dend_13 { pt3dadd( -125.695, 133.141, -41.7738, 1.18 ) }
    dend_13 { pt3dadd( -126.193, 133.736, -41.8512, 1.62 ) }
    dend_13 { pt3dadd( -126.297, 133.86, -41.8586, 1.62 ) }
    dend_13 { pt3dadd( -126.639, 134.335, -41.8985, 1.62 ) }
    dend_13 { pt3dadd( -127.025, 134.894, -41.927, 1.62 ) }
    dend_13 { pt3dadd( -127.355, 135.379, -41.9418, 0.15 ) }
    dend_13 { pt3dadd( -127.4, 135.445, -41.9425, 0.15 ) }
    dend_13 { pt3dadd( -127.893, 136.174, -41.9504, 0.15 ) }
    dend_13 { pt3dadd( -128.07, 136.438, -41.9531, 0.15 ) }
    dend_13 { pt3dadd( -129.462, 138.546, -41.9918, 0.15 ) }
    dend_13 { pt3dadd( -129.907, 139.254, -42.0092, 0.88 ) }
    dend_13 { pt3dadd( -130.262, 139.826, -42.0331, 1.18 ) }
    dend_13 { pt3dadd( -130.64, 140.447, -42.067, 1.18 ) }
    dend_13 { pt3dadd( -130.751, 140.637, -42.0799, 1.18 ) }
    dend_13 { pt3dadd( -130.992, 141.059, -42.1123, 0.22 ) }
    dend_13 { pt3dadd( -131.934, 142.731, -42.3017, 0.22 ) }
    dend_13 { pt3dadd( -132.238, 143.283, -42.371, 0.66 ) }
    dend_13 { pt3dadd( -132.468, 143.715, -42.4168, 0.66 ) }
    dend_13 { pt3dadd( -132.535, 143.838, -42.4306, 0.66 ) }
    dend_13 { pt3dadd( -132.647, 144.039, -42.4525, 0.66 ) }
    dend_13 { pt3dadd( -132.829, 144.353, -42.4851, 0.15 ) }
    dend_13 { pt3dadd( -132.945, 144.54, -42.5028, 0.15 ) }
    dend_13 { pt3dadd( -134.851, 147.589, -42.7462, 0.15 ) }
    dend_13 { pt3dadd( -135.009, 147.828, -42.761, 0.59 ) }
    dend_13 { pt3dadd( -135.461, 148.479, -42.7949, 0.59 ) }
    dend_13 { pt3dadd( -135.691, 148.805, -42.8082, 0.22 ) }
    dend_13 { pt3dadd( -136.619, 150.136, -42.878, 0.22 ) }
    dend_13 { pt3dadd( -136.695, 150.265, -42.8859, 0.22 ) }
    dend_13 { pt3dadd( -138.231, 153.353, -43.1625, 0.22 ) }
    dend_13 { pt3dadd( -138.525, 154.027, -43.2296, 1.25 ) }
    dend_13 { pt3dadd( -138.973, 155.181, -43.3585, 1.55 ) }
    dend_13 { pt3dadd( -139.311, 156.167, -43.4772, 0.22 ) }
    dend_13 { pt3dadd( -140.477, 160.065, -44.0278, 0.22 ) }
    dend_13 { pt3dadd( -140.772, 161.183, -44.2043, 1.11 ) }
    dend_13 { pt3dadd( -140.913, 161.835, -44.3175, 1.4 ) }
    dend_13 { pt3dadd( -140.928, 161.903, -44.329, 1.4 ) }
    dend_13 { pt3dadd( -141.135, 162.696, -44.4535, 1.4 ) }
    dend_13 { pt3dadd( -141.398, 163.508, -44.5337, 0.22 ) }
    dend_13 { pt3dadd( -141.439, 163.599, -44.5381, 0.22 ) }
    dend_13 { pt3dadd( -142.429, 165.603, -44.5081, 0.22 ) }
    dend_13 { pt3dadd( -142.53, 165.8, -44.5001, 0.22 ) }
    dend_13 { pt3dadd( -143.266, 167.149, -44.4177, 0.22 ) }
    dend_13 { pt3dadd( -143.637, 167.795, -44.358, 1.03 ) }
    dend_13 { pt3dadd( -144.027, 168.406, -44.2861, 1.4 ) }
    dend_13 { pt3dadd( -144.35, 168.877, -44.2248, 1.4 ) }
    dend_13 { pt3dadd( -144.393, 168.932, -44.2163, 1.4 ) }
    dend_13 { pt3dadd( -144.814, 169.445, -44.141, 0.22 ) }
    dend_13 { pt3dadd( -144.867, 169.505, -44.1335, 0.22 ) }
    dend_13 { pt3dadd( -146.396, 171.19, -44.0031, 0.22 ) }
    dend_13 { pt3dadd( -146.622, 171.443, -43.9797, 0.66 ) }
    dend_13 { pt3dadd( -146.662, 171.488, -43.9741, 0.66 ) }
    dend_13 { pt3dadd( -146.919, 171.804, -43.9348, 0.96 ) }
    dend_13 { pt3dadd( -147.059, 171.987, -43.9117, 0.96 ) }
    dend_13 { pt3dadd( -147.281, 172.283, -43.8775, 0.96 ) }
    dend_13 { pt3dadd( -147.534, 172.63, -43.8447, 0.81 ) }
    dend_13 { pt3dadd( -147.812, 173.0, -43.8197, 0.22 ) }
    dend_13 { pt3dadd( -149.233, 174.865, -43.712, 0.22 ) }
    dend_13 { pt3dadd( -149.329, 174.988, -43.7067, 0.59 ) }
    dend_13 { pt3dadd( -149.423, 175.105, -43.7028, 0.59 ) }
    dend_13 { pt3dadd( -149.974, 175.798, -43.717, 0.59 ) }
    dend_13 { pt3dadd( -150.117, 175.975, -43.7298, 0.22 ) }
    dend_13 { pt3dadd( -150.285, 176.18, -43.755, 0.22 ) }
    dend_13 { pt3dadd( -151.615, 177.828, -44.0146, 0.22 ) }
    dend_13 { pt3dadd( -151.658, 177.883, -44.0219, 0.22 ) }
    dend_13 { pt3dadd( -152.149, 178.531, -44.0987, 1.25 ) }
    dend_13 { pt3dadd( -152.608, 179.158, -44.167, 1.4 ) }
    dend_13 { pt3dadd( -153.124, 179.88, -44.2351, 0.22 ) }
    dend_13 { pt3dadd( -153.21, 180.003, -44.2452, 0.22 ) }
    dend_13 { pt3dadd( -154.858, 182.375, -44.4001, 0.22 ) }
    dend_13 { pt3dadd( -155.099, 182.721, -44.4087, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -155.145, 182.786, -44.4069, 1.11 ) }
    dend_13 { pt3dadd( -155.551, 183.39, -44.3809, 1.11 ) }
    dend_13 { pt3dadd( -155.614, 183.484, -44.3758, 1.11 ) }
    dend_13 { pt3dadd( -155.812, 183.789, -44.3568, 1.11 ) }
    dend_13 { pt3dadd( -156.075, 184.207, -44.3257, 0.15 ) }
    dend_13 { pt3dadd( -156.117, 184.275, -44.3209, 0.15 ) }
    dend_13 { pt3dadd( -157.369, 186.32, -44.1938, 0.15 ) }
    dend_13 { pt3dadd( -157.716, 186.901, -44.1623, 0.88 ) }
    dend_13 { pt3dadd( -157.786, 187.022, -44.1717, 0.88 ) }
    dend_13 { pt3dadd( -158.066, 187.512, -44.2798, 0.96 ) }
    dend_13 { pt3dadd( -158.114, 187.649, -44.3177, 0.96 ) }
    dend_13 { pt3dadd( -158.266, 188.247, -44.5166, 0.96 ) }
    dend_13 { pt3dadd( -158.279, 188.321, -44.5445, 0.96 ) }
    dend_13 { pt3dadd( -158.573, 190.251, -45.2557, 0.22 ) }
    dend_13 { pt3dadd( -158.601, 190.456, -45.3285, 0.22 ) }
    dend_13 { pt3dadd( -159.138, 195.093, -46.8749, 0.22 ) }
    dend_13 { pt3dadd( -159.209, 195.799, -47.1252, 1.25 ) }
    dend_13 { pt3dadd( -159.215, 195.865, -47.1487, 1.25 ) }
    dend_13 { pt3dadd( -159.267, 196.5, -47.3199, 1.25 ) }
    dend_13 { pt3dadd( -159.292, 196.784, -47.375, 1.25 ) }
    dend_13 { pt3dadd( -159.341, 197.279, -47.4861, 1.25 ) }
    dend_13 { pt3dadd( -159.512, 198.807, -47.876, 0.22 ) }
    dend_13 { pt3dadd( -159.521, 198.885, -47.8944, 0.22 ) }
    dend_13 { pt3dadd( -160.139, 203.882, -49.5317, 0.22 ) }
    dend_13 { pt3dadd( -160.198, 204.27, -49.6737, 0.96 ) }
    dend_13 { pt3dadd( -160.333, 205.128, -49.9417, 1.25 ) }
    dend_13 { pt3dadd( -160.412, 205.633, -50.089, 1.25 ) }
    dend_13 { pt3dadd( -160.427, 205.735, -50.116, 1.25 ) }
    dend_13 { pt3dadd( -160.839, 208.531, -50.8723, 0.22 ) }
    dend_13 { pt3dadd( -161.349, 211.931, -51.8752, 0.22 ) }
    dend_13 { pt3dadd( -162.109, 217.033, -53.3225, 0.22 ) }
    dend_13 { pt3dadd( -162.305, 218.265, -53.6349, 1.55 ) }
    dend_13 { pt3dadd( -162.466, 219.246, -53.8623, 1.55 ) }
    dend_13 { pt3dadd( -162.48, 219.324, -53.8771, 1.55 ) }
    dend_13 { pt3dadd( -162.648, 220.283, -53.9847, 0.22 ) }
    dend_13 { pt3dadd( -162.676, 220.435, -54.0056, 0.22 ) }
    dend_13 { pt3dadd( -163.215, 222.568, -54.3291, 0.22 ) }
    dend_13 { pt3dadd( -163.271, 222.778, -54.3647, 0.22 ) }
    dend_13 { pt3dadd( -163.532, 223.743, -54.565, 0.22 ) }
    dend_13 { pt3dadd( -163.649, 224.351, -54.6819, 0.96 ) }
    dend_13 { pt3dadd( -163.735, 224.935, -54.7819, 0.96 ) }
    dend_13 { pt3dadd( -163.746, 225.013, -54.7965, 0.96 ) }
    dend_13 { pt3dadd( -163.897, 226.321, -55.0661, 0.22 ) }
    dend_13 { pt3dadd( -163.922, 226.457, -55.0882, 0.22 ) }
    dend_13 { pt3dadd( -164.677, 229.934, -55.5649, 0.22 ) }
    dend_13 { pt3dadd( -164.813, 230.532, -55.6613, 0.22 ) }
    dend_13 { pt3dadd( -164.858, 230.73, -55.6936, 0.59 ) }
    dend_13 { pt3dadd( -164.943, 231.104, -55.7609, 0.22 ) }
    dend_13 { pt3dadd( -165.742, 234.535, -56.3736, 0.22 ) }
    dend_13 { pt3dadd( -165.757, 234.602, -56.3876, 0.22 ) }
    dend_13 { pt3dadd( -166.101, 236.005, -56.7959, 1.18 ) }
    dend_13 { pt3dadd( -166.341, 237.098, -57.1421, 1.18 ) }
    dend_13 { pt3dadd( -166.501, 237.93, -57.4171, 0.22 ) }
    dend_13 { pt3dadd( -166.522, 238.061, -57.4879, 0.22 ) }
    dend_13 { pt3dadd( -166.794, 240.351, -59.3697, 0.22 ) }
    dend_13 { pt3dadd( -166.848, 241.041, -59.9616, 0.66 ) }
    dend_13 { pt3dadd( -166.858, 241.261, -60.1509, 0.66 ) }
    dend_13 { pt3dadd( -166.859, 241.642, -60.4893, 0.66 ) }
    dend_13 { pt3dadd( -166.729, 244.703, -63.1584, 0.22 ) }
    dend_13 { pt3dadd( -166.719, 244.804, -63.2687, 0.22 ) }
    dend_13 { pt3dadd( -166.444, 246.182, -64.8886, 0.22 ) }
    dend_13 { pt3dadd( -166.336, 246.671, -65.4066, 1.25 ) }
    dend_13 { pt3dadd( -166.21, 247.209, -65.9316, 1.25 ) }
    dend_13 { pt3dadd( -166.197, 247.262, -65.9763, 1.25 ) }
    dend_13 { pt3dadd( -165.545, 249.978, -67.6799, 0.22 ) }
    dend_13 { pt3dadd( -165.168, 251.662, -68.9168, 0.22 ) }
    dend_13 { pt3dadd( -165.156, 251.721, -68.9697, 0.22 ) }
    dend_13 { pt3dadd( -165.122, 252.013, -69.1889, 0.74 ) }
    dend_13 { pt3dadd( -165.114, 252.202, -69.3019, 0.74 ) }
    dend_13 { pt3dadd( -165.12, 252.676, -69.5034, 0.74 ) }
    dend_13 { pt3dadd( -165.208, 253.89, -69.7675, 0.22 ) }
    dend_13 { pt3dadd( -165.231, 254.048, -69.8136, 0.22 ) }
    dend_13 { pt3dadd( -165.711, 256.708, -70.6105, 0.22 ) }
    dend_13 { pt3dadd( -165.772, 257.021, -70.6998, 0.59 ) }
    dend_13 { pt3dadd( -165.826, 257.281, -70.8154, 0.59 ) }
    dend_13 { pt3dadd( -165.869, 257.47, -70.9198, 0.59 ) }
    dend_13 { pt3dadd( -166.248, 258.448, -71.456, 0.22 ) }
    dend_13 { pt3dadd( -166.991, 259.909, -72.3065, 0.22 ) }
    dend_13 { pt3dadd( -167.429, 260.623, -72.7604, 1.55 ) }
    dend_13 { pt3dadd( -168.963, 262.942, -74.1505, 0.07 ) }
    dend_13 { pt3dadd( -169.053, 263.068, -74.2215, 0.07 ) }
    dend_13 { pt3dadd( -171.329, 266.072, -75.695, 0.07 ) }
    dend_13 { pt3dadd( -171.729, 266.569, -75.9118, 0.66 ) }
    dend_13 { pt3dadd( -171.779, 266.626, -75.936, 0.66 ) }
    dend_13 { pt3dadd( -172.252, 267.15, -76.1137, 0.66 ) }
    dend_13 { pt3dadd( -172.403, 267.322, -76.1438, 0.15 ) }
    dend_13 { pt3dadd( -173.471, 268.649, -76.4335, 0.15 ) }
    dend_13 { pt3dadd( -174.039, 269.522, -76.6967, 0.66 ) }
    dend_13 { pt3dadd( -174.158, 269.715, -76.7514, 0.66 ) }
    dend_13 { pt3dadd( -174.34, 270.037, -76.7946, 0.66 ) }
    dend_13 { pt3dadd( -174.368, 270.09, -76.7984, 0.66 ) }
    dend_13 { pt3dadd( -174.637, 270.603, -76.8132, 0.66 ) }
    dend_13 { pt3dadd( -174.876, 271.059, -76.8072, 0.15 ) }
    dend_13 { pt3dadd( -175.047, 271.389, -76.7942, 0.15 ) }
    dend_13 { pt3dadd( -176.969, 275.106, -76.6679, 0.15 ) }
    dend_13 { pt3dadd( -177.287, 275.729, -76.6404, 0.96 ) }
    dend_13 { pt3dadd( -177.551, 276.239, -76.6147, 1.33 ) }
    dend_13 { pt3dadd( -177.584, 276.301, -76.6114, 1.33 ) }
    dend_13 { pt3dadd( -177.938, 277.001, -76.5744, 1.33 ) }
    dend_13 { pt3dadd( -177.986, 277.096, -76.5678, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -178.249, 277.612, -76.5136, 0.15 ) }
    dend_13 { pt3dadd( -179.649, 280.31, -76.223, 0.15 ) }
    dend_13 { pt3dadd( -179.694, 280.396, -76.2073, 1.03 ) }
    dend_13 { pt3dadd( -179.763, 280.526, -76.1765, 1.03 ) }
    dend_13 { pt3dadd( -180.083, 281.039, -76.0293, 1.25 ) }
    dend_13 { pt3dadd( -180.196, 281.202, -75.9783, 1.25 ) }
    dend_13 { pt3dadd( -180.482, 281.589, -75.8736, 1.25 ) }
    dend_13 { pt3dadd( -181.335, 282.672, -75.5619, 0.15 ) }
    dend_13 { pt3dadd( -181.394, 282.75, -75.543, 0.15 ) }
    dend_13 { pt3dadd( -182.667, 284.503, -74.9713, 0.15 ) }
    dend_13 { pt3dadd( -182.806, 284.72, -74.9049, 0.15 ) }
    dend_13 { pt3dadd( -184.123, 286.905, -74.2838, 0.15 ) }
    dend_13 { pt3dadd( -184.204, 287.045, -74.247, 0.81 ) }
    dend_13 { pt3dadd( -184.522, 287.627, -74.1117, 0.81 ) }
    dend_13 { pt3dadd( -185.441, 289.421, -73.5845, 0.15 ) }
    dend_13 { pt3dadd( -187.221, 293.266, -72.2087, 0.15 ) }
    dend_13 { pt3dadd( -187.402, 293.664, -72.0508, 0.81 ) }
    dend_13 { pt3dadd( -187.429, 293.723, -72.0251, 0.81 ) }
    dend_13 { pt3dadd( -187.578, 294.029, -71.8791, 0.81 ) }
    dend_13 { pt3dadd( -188.314, 295.423, -71.1614, 0.15 ) }
    dend_13 { pt3dadd( -188.42, 295.609, -71.0665, 0.15 ) }
    dend_13 { pt3dadd( -188.865, 296.33, -70.5041, 0.15 ) }
    dend_13 { pt3dadd( -189.401, 297.177, -69.8511, 0.15 ) }
    dend_13 { pt3dadd( -190.094, 298.245, -69.0729, 0.66 ) }
    dend_13 { pt3dadd( -190.128, 298.297, -69.0408, 0.66 ) }
    dend_13 { pt3dadd( -190.477, 298.851, -68.8047, 0.66 ) }
    dend_13 { pt3dadd( -190.615, 299.089, -68.7132, 0.07 ) }
    dend_13 { pt3dadd( -190.672, 299.204, -68.6579, 0.15 ) }
    dend_13 { pt3dadd( -190.739, 299.377, -68.5705, 0.15 ) }
    dend_13 { pt3dadd( -191.055, 300.206, -68.291, 0.15 ) }
    dend_13 { pt3dadd( -191.128, 300.388, -68.2297, 0.52 ) }
    dend_13 { pt3dadd( -191.378, 300.985, -68.0313, 0.52 ) }
    dend_13 { pt3dadd( -191.887, 302.122, -67.6038, 0.15 ) }
    dend_13 { pt3dadd( -191.982, 302.316, -67.5302, 0.15 ) }
    dend_13 { pt3dadd( -192.995, 304.241, -66.8009, 0.15 ) }
    dend_13 { pt3dadd( -193.22, 304.639, -66.657, 0.81 ) }
    dend_13 { pt3dadd( -193.477, 305.072, -66.5323, 0.81 ) }
    dend_13 { pt3dadd( -193.894, 305.725, -66.4104, 0.22 ) }
    dend_13 { pt3dadd( -194.578, 306.766, -66.33, 0.22 ) }
    dend_13 { pt3dadd( -194.821, 307.121, -66.3133, 1.25 ) }
    dend_13 { pt3dadd( -195.26, 307.732, -66.3117, 1.25 ) }
    dend_13 { pt3dadd( -195.653, 308.324, -66.3537, 0.15 ) }
    dend_13 { pt3dadd( -196.315, 309.386, -66.5236, 0.15 ) }
    dend_13 { pt3dadd( -196.383, 309.505, -66.55, 0.37 ) }
    dend_13 { pt3dadd( -196.435, 309.603, -66.5718, 0.37 ) }
    dend_13 { pt3dadd( -196.8, 310.329, -66.7246, 0.37 ) }
    dend_13 { pt3dadd( -197.811, 312.537, -67.0981, 0.22 ) }
    dend_13 { pt3dadd( -198.118, 313.269, -67.1938, 1.11 ) }
    dend_13 { pt3dadd( -198.293, 313.745, -67.2467, 1.11 ) }
    dend_13 { pt3dadd( -198.462, 314.226, -67.2914, 0.15 ) }
    dend_13 { pt3dadd( -198.581, 314.596, -67.3186, 0.15 ) }
    dend_13 { pt3dadd( -199.166, 316.667, -67.4156, 0.15 ) }
    dend_13 { pt3dadd( -199.235, 316.949, -67.4153, 0.15 ) }
    dend_13 { pt3dadd( -199.567, 318.316, -67.3729, 0.15 ) }
    dend_13 { pt3dadd( -199.631, 318.574, -67.3675, 0.59 ) }
    dend_13 { pt3dadd( -199.668, 318.726, -67.3675, 0.59 ) }
    dend_13 { pt3dadd( -199.72, 318.954, -67.3675, 0.59 ) }
    dend_13 { pt3dadd( -199.731, 319.023, -67.3675, 0.59 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.27307, 35.5591, -0.732813, 0.44 ) }
    dend_11 { pt3dadd( -0.223878, 35.6963, 11.2562, 0.44 ) }
    dend_11 { pt3dadd( -0.234594, 35.698, 11.3355, 0.44 ) }
    dend_11 { pt3dadd( -0.319064, 35.7167, 11.9258, 0.44 ) }
    dend_11 { pt3dadd( -0.344059, 35.7248, 12.0938, 0.44 ) }
    dend_11 { pt3dadd( -0.449846, 35.7748, 12.7407, 0.44 ) }
    dend_11 { pt3dadd( -0.497279, 35.8028, 13.0012, 0.44 ) }
    dend_11 { pt3dadd( -0.712327, 36.0734, 13.1018, 0.44 ) }
    dend_11 { pt3dadd( -0.807778, 36.181, 13.1443, 0.44 ) }
    dend_11 { pt3dadd( -1.33039, 36.7432, 13.3803, 0.44 ) }
    dend_11 { pt3dadd( -2.17599, 37.5678, 13.7348, 0.44 ) }
    dend_11 { pt3dadd( -2.51044, 37.8699, 13.8685, 0.66 ) }
    dend_11 { pt3dadd( -3.13092, 38.4358, 14.1647, 0.44 ) }
    dend_11 { pt3dadd( -3.70118, 38.9473, 14.4629, 0.44 ) }
    dend_11 { pt3dadd( -3.7733, 39.0142, 14.5031, 0.44 ) }
    dend_11 { pt3dadd( -4.0583, 39.291, 14.6688, 0.44 ) }
    dend_11 { pt3dadd( -4.13097, 39.4004, 14.7174, 0.44 ) }
    dend_11 { pt3dadd( -4.44445, 40.4364, 15.3847, 0.44 ) }
    dend_11 { pt3dadd( -4.4489, 40.4995, 15.4337, 0.44 ) }
    dend_11 { pt3dadd( -4.44974, 40.7796, 15.6598, 0.52 ) }
    dend_11 { pt3dadd( -4.45382, 40.9502, 15.7987, 0.52 ) }
    dend_11 { pt3dadd( -4.48673, 41.4002, 16.1632, 0.52 ) }
    dend_11 { pt3dadd( -4.65514, 42.3423, 16.8905, 0.52 ) }
    dend_11 { pt3dadd( -4.68816, 42.4407, 16.9547, 0.52 ) }
    dend_11 { pt3dadd( -4.87782, 42.9239, 17.2546, 0.52 ) }
    dend_11 { pt3dadd( -4.94473, 43.0727, 17.3791, 0.52 ) }
    dend_11 { pt3dadd( -5.08219, 43.372, 17.6514, 0.52 ) }
    dend_11 { pt3dadd( -5.18629, 43.6218, 17.8516, 0.88 ) }
    dend_11 { pt3dadd( -5.32451, 44.0857, 18.1831, 0.88 ) }
    dend_11 { pt3dadd( -5.3375, 44.1427, 18.2215, 0.88 ) }
    dend_11 { pt3dadd( -5.62415, 45.6081, 19.2457, 0.52 ) }
    dend_11 { pt3dadd( -5.68402, 45.9636, 19.498, 0.44 ) }
    dend_11 { pt3dadd( -5.80763, 46.8606, 20.1403, 0.44 ) }
    dend_11 { pt3dadd( -5.96183, 48.167, 21.0763, 0.29 ) }
    dend_11 { pt3dadd( -6.03469, 48.9714, 21.6431, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 93/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.27307, 35.5591, -0.732813, 3.09 ) }
    dend_2 { pt3dadd( 1.53137, 37.1511, -0.805777, 3.09 ) }
    dend_2 { pt3dadd( 1.69553, 38.1629, -0.85215, 3.09 ) }
    dend_2 { pt3dadd( 1.94068, 39.674, -0.921401, 3.09 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 97/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 28.3534, -38.2121, 4.18164, 0.66 ) }
    dend_38 { pt3dadd( 28.7599, -38.0325, 4.27697, 0.66 ) }
    dend_38 { pt3dadd( 29.4103, -37.8693, 4.46518, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_38 { pt3dadd( 29.4763, -37.8571, 4.48507, 0.52 ) }
    dend_38 { pt3dadd( 30.0778, -37.7812, 4.65516, 0.52 ) }
    dend_38 { pt3dadd( 30.1545, -37.773, 4.67618, 0.52 ) }
    dend_38 { pt3dadd( 31.0096, -37.746, 4.97726, 0.81 ) }
    dend_38 { pt3dadd( 31.7761, -37.8064, 5.31406, 0.96 ) }
    dend_38 { pt3dadd( 31.8471, -37.8223, 5.34727, 0.96 ) }
    dend_38 { pt3dadd( 32.3728, -37.9585, 5.56249, 0.96 ) }
    dend_38 { pt3dadd( 32.4349, -37.976, 5.58974, 0.96 ) }
    dend_38 { pt3dadd( 33.4669, -38.2586, 6.017, 0.29 ) }
    dend_38 { pt3dadd( 33.5634, -38.284, 6.0537, 0.29 ) }
    dend_38 { pt3dadd( 34.7046, -38.5652, 6.49955, 0.29 ) }
    dend_38 { pt3dadd( 35.7156, -38.7952, 6.8757, 0.29 ) }
    dend_38 { pt3dadd( 36.5751, -38.9581, 7.20663, 0.81 ) }
    dend_38 { pt3dadd( 37.2078, -39.0453, 7.43071, 1.03 ) }
    dend_38 { pt3dadd( 37.5669, -39.0699, 7.53533, 1.33 ) }
    dend_38 { pt3dadd( 37.634, -39.0718, 7.55514, 1.33 ) }
    dend_38 { pt3dadd( 37.9874, -39.0599, 7.66413, 1.33 ) }
    dend_38 { pt3dadd( 38.8271, -39.0217, 7.89236, 1.11 ) }
    dend_38 { pt3dadd( 39.6976, -38.9694, 8.07048, 0.66 ) }
    dend_38 { pt3dadd( 40.6169, -38.8867, 8.33414, 0.66 ) }
    dend_38 { pt3dadd( 40.7751, -38.8707, 8.38745, 1.03 ) }
    dend_38 { pt3dadd( 40.9158, -38.8557, 8.43703, 1.03 ) }
    dend_38 { pt3dadd( 41.6004, -38.7778, 8.67821, 1.03 ) }
    dend_38 { pt3dadd( 41.7417, -38.7615, 8.72578, 1.03 ) }
    dend_38 { pt3dadd( 43.0036, -38.6177, 9.17263, 0.66 ) }
    dend_38 { pt3dadd( 43.0697, -38.6111, 9.19456, 0.66 ) }
    dend_38 { pt3dadd( 44.0344, -38.5306, 9.58294, 0.66 ) }
    dend_38 { pt3dadd( 44.4424, -38.4983, 9.759, 0.81 ) }
    dend_38 { pt3dadd( 44.5814, -38.492, 9.815, 0.81 ) }
    dend_38 { pt3dadd( 45.3443, -38.4711, 10.0954, 0.81 ) }
    dend_38 { pt3dadd( 45.8286, -38.4753, 10.2553, 0.81 ) }
    dend_38 { pt3dadd( 47.1746, -38.538, 10.706, 0.81 ) }
    dend_38 { pt3dadd( 47.8742, -38.5962, 10.95, 0.52 ) }
    dend_38 { pt3dadd( 49.2097, -38.7386, 11.4065, 0.52 ) }
    dend_38 { pt3dadd( 49.3168, -38.7528, 11.4401, 0.52 ) }
    dend_38 { pt3dadd( 49.985, -38.8742, 11.6339, 0.52 ) }
    dend_38 { pt3dadd( 51.0033, -39.1072, 11.8782, 0.52 ) }
    dend_38 { pt3dadd( 51.1045, -39.1368, 11.8921, 0.88 ) }
    dend_38 { pt3dadd( 51.2353, -39.1827, 11.9116, 0.88 ) }
    dend_38 { pt3dadd( 51.8721, -39.4721, 12.0009, 0.88 ) }
    dend_38 { pt3dadd( 52.4474, -39.7612, 12.0701, 0.44 ) }
    dend_38 { pt3dadd( 52.5079, -39.7936, 12.0839, 0.44 ) }
    dend_38 { pt3dadd( 53.3765, -40.2437, 12.371, 0.44 ) }
    dend_38 { pt3dadd( 53.5045, -40.3053, 12.4191, 0.44 ) }
    dend_38 { pt3dadd( 54.496, -40.7335, 12.8134, 0.44 ) }
    dend_38 { pt3dadd( 54.5553, -40.7551, 12.8438, 0.44 ) }
    dend_38 { pt3dadd( 55.832, -41.1351, 13.5906, 0.74 ) }
    dend_38 { pt3dadd( 56.3895, -41.2617, 13.9469, 0.74 ) }
    dend_38 { pt3dadd( 56.5669, -41.2867, 14.0746, 0.74 ) }
    dend_38 { pt3dadd( 57.0104, -41.3021, 14.4634, 0.74 ) }
    dend_38 { pt3dadd( 57.841, -41.2253, 15.3108, 0.74 ) }
    dend_38 { pt3dadd( 57.9456, -41.208, 15.4201, 0.74 ) }
    dend_38 { pt3dadd( 58.3097, -41.1106, 15.8131, 0.74 ) }
    dend_38 { pt3dadd( 58.374, -41.0878, 15.8848, 0.74 ) }
    dend_38 { pt3dadd( 59.4929, -40.7206, 17.0089, 1.03 ) }
    dend_38 { pt3dadd( 59.55, -40.7024, 17.0619, 1.03 ) }
    dend_38 { pt3dadd( 59.9928, -40.5758, 17.406, 1.03 ) }
    dend_38 { pt3dadd( 61.0715, -40.3206, 18.1739, 0.37 ) }
    dend_38 { pt3dadd( 61.6458, -40.2393, 18.5311, 0.37 ) }
    dend_38 { pt3dadd( 62.5041, -40.1981, 18.9529, 0.29 ) }
    dend_38 { pt3dadd( 62.5601, -40.2053, 18.9729, 0.29 ) }
    dend_38 { pt3dadd( 62.8251, -40.3008, 19.0714, 0.66 ) }
    dend_38 { pt3dadd( 63.0344, -40.4396, 19.1599, 0.66 ) }
    dend_38 { pt3dadd( 63.4873, -40.8339, 19.3506, 0.88 ) }
    dend_38 { pt3dadd( 63.56, -40.9032, 19.3856, 0.88 ) }
    dend_38 { pt3dadd( 64.3535, -41.5916, 19.7864, 0.88 ) }
    dend_38 { pt3dadd( 64.9526, -42.0636, 20.0832, 0.88 ) }
    dend_38 { pt3dadd( 65.7684, -42.6135, 20.4747, 0.37 ) }
    dend_38 { pt3dadd( 66.1585, -42.8012, 20.6442, 0.37 ) }
    dend_38 { pt3dadd( 66.2948, -42.8376, 20.6952, 0.37 ) }
    dend_38 { pt3dadd( 67.0493, -42.8583, 20.8916, 0.37 ) }
    dend_38 { pt3dadd( 67.117, -42.8429, 20.9004, 0.37 ) }
    dend_38 { pt3dadd( 67.6143, -42.683, 20.9988, 0.37 ) }
    dend_38 { pt3dadd( 68.2319, -42.4951, 21.1415, 0.74 ) }
    dend_38 { pt3dadd( 68.3386, -42.4745, 21.173, 0.74 ) }
    dend_38 { pt3dadd( 68.8116, -42.5107, 21.6818, 0.74 ) }
    dend_38 { pt3dadd( 68.8436, -42.5171, 21.7438, 0.74 ) }
    dend_38 { pt3dadd( 69.4442, -42.6539, 23.1131, 0.74 ) }
    dend_38 { pt3dadd( 69.6165, -42.7003, 23.5094, 0.96 ) }
    dend_38 { pt3dadd( 69.8571, -42.7743, 24.0764, 0.96 ) }
    dend_38 { pt3dadd( 71.5896, -43.3564, 28.0158, 1.11 ) }
    dend_38 { pt3dadd( 72.7451, -43.7791, 30.6526, 0.81 ) }
    dend_38 { pt3dadd( 72.786, -43.7946, 30.7414, 0.81 ) }
    dend_38 { pt3dadd( 73.3098, -43.9916, 31.8408, 0.81 ) }
    dend_38 { pt3dadd( 73.348, -44.0052, 31.9098, 0.81 ) }
    dend_38 { pt3dadd( 73.8854, -44.1819, 32.6316, 0.81 ) }
    dend_38 { pt3dadd( 73.9498, -44.2065, 32.6722, 0.81 ) }
    dend_38 { pt3dadd( 75.4977, -44.815, 33.2718, 0.52 ) }
    dend_38 { pt3dadd( 75.5669, -44.8388, 33.3278, 0.52 ) }
    dend_38 { pt3dadd( 76.1531, -44.9429, 34.0773, 0.52 ) }
    dend_38 { pt3dadd( 76.5478, -44.9482, 34.7072, 0.52 ) }
    dend_38 { pt3dadd( 76.7354, -44.9233, 35.0482, 0.88 ) }
    dend_38 { pt3dadd( 76.9805, -44.8716, 35.5108, 1.4 ) }
    dend_38 { pt3dadd( 78.8112, -44.3412, 39.0542, 0.37 ) }
    dend_38 { pt3dadd( 79.2293, -44.2375, 39.8361, 0.37 ) }
    dend_38 { pt3dadd( 79.2707, -44.2222, 39.9328, 0.37 ) }
    dend_38 { pt3dadd( 79.5507, -44.1021, 40.7374, 0.37 ) }
    dend_38 { pt3dadd( 79.671, -44.0478, 41.1332, 0.37 ) }
    dend_38 { pt3dadd( 79.8847, -43.9372, 41.9202, 0.37 ) }
    dend_38 { pt3dadd( 80.4104, -44.1167, 41.9202, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 0/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 28.3534, -38.2121, 4.18164, 0.59 ) }
    dend_37 { pt3dadd( 29.4489, -38.86, 3.95811, 0.59 ) }
    dend_37 { pt3dadd( 30.3839, -39.4519, 3.78476, 0.59 ) }
    dend_37 { pt3dadd( 31.9713, -40.4854, 3.50761, 0.59 ) }
    dend_37 { pt3dadd( 32.4766, -40.8159, 3.42741, 0.96 ) }
    dend_37 { pt3dadd( 32.6009, -40.8971, 3.40584, 0.96 ) }
    dend_37 { pt3dadd( 33.4568, -41.4546, 3.25641, 0.96 ) }
    dend_37 { pt3dadd( 33.8883, -41.7474, 3.21281, 1.18 ) }
    dend_37 { pt3dadd( 33.9532, -41.7938, 3.20716, 1.18 ) }
    dend_37 { pt3dadd( 34.5413, -42.2087, 3.16548, 1.18 ) }
    dend_37 { pt3dadd( 35.3635, -42.768, 3.11591, 1.33 ) }
    dend_37 { pt3dadd( 36.1539, -43.3056, 3.06632, 1.25 ) }
    dend_37 { pt3dadd( 36.8599, -43.7798, 3.02305, 0.37 ) }
    dend_37 { pt3dadd( 38.1118, -44.6302, 2.9559, 0.37 ) }
    dend_37 { pt3dadd( 38.2346, -44.7161, 2.95055, 0.37 ) }
    dend_37 { pt3dadd( 38.5238, -44.9337, 2.94341, 0.81 ) }
    dend_37 { pt3dadd( 38.5864, -44.9833, 2.94743, 0.81 ) }
    dend_37 { pt3dadd( 39.3625, -45.603, 3.02587, 0.81 ) }
    dend_37 { pt3dadd( 39.985, -46.0885, 3.10311, 0.37 ) }
    dend_37 { pt3dadd( 40.0401, -46.1307, 3.1126, 0.37 ) }
    dend_37 { pt3dadd( 40.9454, -46.8079, 3.28316, 0.37 ) }
    dend_37 { pt3dadd( 41.5851, -47.292, 3.41643, 1.11 ) }
    dend_37 { pt3dadd( 42.085, -47.6625, 3.5137, 1.11 ) }
    dend_37 { pt3dadd( 42.3304, -47.8406, 3.56771, 1.11 ) }
    dend_37 { pt3dadd( 42.6234, -48.0464, 3.63326, 0.74 ) }
    dend_37 { pt3dadd( 43.0269, -48.3166, 3.71185, 0.52 ) }
    dend_37 { pt3dadd( 43.5028, -48.6301, 3.78766, 0.44 ) }
    dend_37 { pt3dadd( 44.2928, -49.1626, 3.88018, 0.44 ) }
    dend_37 { pt3dadd( 44.9651, -49.6318, 3.9603, 0.22 ) }
    dend_37 { pt3dadd( 45.0803, -49.7104, 3.97317, 0.22 ) }
    dend_37 { pt3dadd( 46.0256, -50.3031, 4.0876, 0.22 ) }
    dend_37 { pt3dadd( 46.6051, -50.6396, 4.15539, 0.81 ) }
    dend_37 { pt3dadd( 46.6665, -50.6725, 4.16211, 0.81 ) }
    dend_37 { pt3dadd( 47.3638, -51.0155, 4.22818, 1.18 ) }
    dend_37 { pt3dadd( 47.987, -51.3004, 4.2716, 1.4 ) }
    dend_37 { pt3dadd( 48.7929, -51.6316, 4.38371, 0.29 ) }
    dend_37 { pt3dadd( 49.9355, -52.0828, 4.60507, 0.29 ) }
    dend_37 { pt3dadd( 50.0085, -52.1112, 4.62154, 0.29 ) }
    dend_37 { pt3dadd( 50.4669, -52.2994, 4.7419, 0.59 ) }
    dend_37 { pt3dadd( 51.0367, -52.5504, 4.95299, 0.59 ) }
    dend_37 { pt3dadd( 52.0719, -53.0637, 5.42639, 0.22 ) }
    dend_37 { pt3dadd( 53.2276, -53.7109, 6.04285, 0.22 ) }
    dend_37 { pt3dadd( 53.2889, -53.7484, 6.07811, 0.22 ) }
    dend_37 { pt3dadd( 53.8238, -54.0974, 6.38715, 0.22 ) }
    dend_37 { pt3dadd( 54.6793, -54.6988, 6.94441, 0.88 ) }
    dend_37 { pt3dadd( 55.101, -55.0072, 7.24025, 1.18 ) }
    dend_37 { pt3dadd( 55.2548, -55.1139, 7.33535, 1.18 ) }
    dend_37 { pt3dadd( 56.1042, -55.6282, 7.86806, 1.18 ) }
    dend_37 { pt3dadd( 56.159, -55.6573, 7.90042, 1.18 ) }
    dend_37 { pt3dadd( 57.1388, -56.0855, 8.40833, 0.22 ) }
    dend_37 { pt3dadd( 57.1995, -56.1076, 8.43526, 0.22 ) }
    dend_37 { pt3dadd( 58.4181, -56.4784, 8.96075, 0.22 ) }
    dend_37 { pt3dadd( 58.4819, -56.4942, 8.98483, 0.22 ) }
    dend_37 { pt3dadd( 59.3915, -56.689, 9.29264, 0.81 ) }
    dend_37 { pt3dadd( 59.9495, -56.8161, 9.43608, 1.11 ) }
    dend_37 { pt3dadd( 60.2635, -56.8948, 9.48586, 1.55 ) }
    dend_37 { pt3dadd( 60.907, -57.0952, 9.51958, 1.55 ) }
    dend_37 { pt3dadd( 61.7963, -57.4516, 9.43102, 0.29 ) }
    dend_37 { pt3dadd( 61.8681, -57.4837, 9.41661, 0.29 ) }
    dend_37 { pt3dadd( 62.7191, -57.9209, 9.16813, 0.29 ) }
    dend_37 { pt3dadd( 63.535, -58.3988, 8.89614, 0.29 ) }
    dend_37 { pt3dadd( 64.7371, -59.1637, 8.45189, 0.29 ) }
    dend_37 { pt3dadd( 65.6837, -59.8417, 8.03329, 0.29 ) }
    dend_37 { pt3dadd( 66.0053, -60.0962, 7.8737, 1.11 ) }
    dend_37 { pt3dadd( 66.5778, -60.5653, 7.58845, 1.25 ) }
    dend_37 { pt3dadd( 66.8792, -60.8324, 7.43645, 1.4 ) }
    dend_37 { pt3dadd( 66.9347, -60.8843, 7.41157, 1.4 ) }
    dend_37 { pt3dadd( 67.7504, -61.6587, 7.1505, 1.4 ) }
    dend_37 { pt3dadd( 68.195, -62.0791, 7.03767, 1.4 ) }
    dend_37 { pt3dadd( 68.7285, -62.602, 6.91699, 0.96 ) }
    dend_37 { pt3dadd( 69.0957, -62.982, 6.85108, 0.66 ) }
    dend_37 { pt3dadd( 69.4714, -63.4043, 6.79044, 0.66 ) }
    dend_37 { pt3dadd( 69.5166, -63.4575, 6.78523, 0.66 ) }
    dend_37 { pt3dadd( 69.853, -63.8621, 6.76311, 0.29 ) }
    dend_37 { pt3dadd( 70.6766, -64.8697, 6.70869, 0.29 ) }
    dend_37 { pt3dadd( 71.5027, -65.8856, 6.65708, 0.29 ) }
    dend_37 { pt3dadd( 72.5447, -67.063, 6.70195, 0.29 ) }
    dend_37 { pt3dadd( 73.0998, -67.6293, 6.76299, 1.4 ) }
    dend_37 { pt3dadd( 73.4137, -67.92, 6.81063, 1.99 ) }
    dend_37 { pt3dadd( 74.0072, -68.4238, 6.92216, 2.58 ) }
    dend_37 { pt3dadd( 74.8193, -69.0469, 7.10306, 2.87 ) }
    dend_37 { pt3dadd( 76.5727, -70.249, 7.5418, 0.52 ) }
    dend_37 { pt3dadd( 77.5549, -70.8696, 7.81683, 0.52 ) }
    dend_37 { pt3dadd( 78.1769, -71.2509, 7.99836, 0.81 ) }
    dend_37 { pt3dadd( 78.7023, -71.564, 8.1496, 0.81 ) }
    dend_37 { pt3dadd( 78.7912, -71.6172, 8.17365, 0.81 ) }
    dend_37 { pt3dadd( 79.1766, -71.8492, 8.27791, 0.81 ) }
    dend_37 { pt3dadd( 79.2348, -71.8855, 8.29158, 0.81 ) }
    dend_37 { pt3dadd( 80.107, -72.438, 8.52662, 0.37 ) }
    dend_37 { pt3dadd( 81.2197, -73.1407, 8.83693, 0.37 ) }
    dend_37 { pt3dadd( 82.7182, -74.1185, 9.30948, 0.37 ) }
    dend_37 { pt3dadd( 83.1744, -74.4397, 9.4605, 1.11 ) }
    dend_37 { pt3dadd( 83.6439, -74.8281, 9.61942, 1.4 ) }
    dend_37 { pt3dadd( 83.8327, -75.0047, 9.68305, 1.4 ) }
    dend_37 { pt3dadd( 84.2053, -75.4171, 9.80271, 1.03 ) }
    dend_37 { pt3dadd( 84.792, -76.2019, 10.0067, 0.22 ) }
    dend_37 { pt3dadd( 85.2816, -76.977, 10.2078, 0.22 ) }
    dend_37 { pt3dadd( 85.9625, -78.1307, 10.4987, 0.22 ) }
    dend_37 { pt3dadd( 85.9969, -78.1896, 10.5147, 0.22 ) }
    dend_37 { pt3dadd( 86.4436, -78.9304, 10.726, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_37 { pt3dadd( 86.4802, -78.9877, 10.7426, 0.22 ) }
    dend_37 { pt3dadd( 86.9561, -79.6332, 10.9433, 1.11 ) }
    dend_37 { pt3dadd( 87.4078, -80.1583, 11.1685, 1.84 ) }
    dend_37 { pt3dadd( 87.7703, -80.5121, 11.3298, 2.06 ) }
    dend_37 { pt3dadd( 87.8183, -80.5595, 11.3486, 2.06 ) }
    dend_37 { pt3dadd( 88.1183, -80.8527, 11.4454, 2.06 ) }
    dend_37 { pt3dadd( 88.8066, -81.5278, 11.608, 0.22 ) }
    dend_37 { pt3dadd( 88.8549, -81.5779, 11.6154, 0.22 ) }
    dend_37 { pt3dadd( 89.8292, -82.6468, 11.7491, 0.22 ) }
    dend_37 { pt3dadd( 90.0194, -82.8757, 11.7702, 0.81 ) }
    dend_37 { pt3dadd( 90.4185, -83.3726, 11.8038, 1.25 ) }
    dend_37 { pt3dadd( 90.8924, -83.991, 11.8379, 1.55 ) }
    dend_37 { pt3dadd( 91.2521, -84.4613, 11.8533, 1.25 ) }
    dend_37 { pt3dadd( 91.7016, -85.0339, 11.8778, 0.44 ) }
    dend_37 { pt3dadd( 92.4049, -85.8925, 11.9233, 0.44 ) }
    dend_37 { pt3dadd( 92.4505, -85.9455, 11.9264, 0.44 ) }
    dend_37 { pt3dadd( 92.7873, -86.3174, 11.9501, 0.22 ) }
    dend_37 { pt3dadd( 93.9347, -87.5068, 12.0321, 0.22 ) }
    dend_37 { pt3dadd( 94.4408, -87.9763, 12.0663, 0.59 ) }
    dend_37 { pt3dadd( 94.8534, -88.3249, 12.0922, 1.03 ) }
    dend_37 { pt3dadd( 94.9655, -88.4087, 12.0965, 1.03 ) }
    dend_37 { pt3dadd( 95.3739, -88.6987, 12.0992, 1.03 ) }
    dend_37 { pt3dadd( 95.4308, -88.7394, 12.0977, 1.03 ) }
    dend_37 { pt3dadd( 95.726, -88.9568, 12.0873, 1.03 ) }
    dend_37 { pt3dadd( 95.8608, -89.0599, 12.0775, 1.03 ) }
    dend_37 { pt3dadd( 96.5553, -89.6072, 12.0101, 0.29 ) }
    dend_37 { pt3dadd( 97.5825, -90.4417, 11.8939, 0.29 ) }
    dend_37 { pt3dadd( 98.397, -91.1116, 11.7925, 0.29 ) }
    dend_37 { pt3dadd( 98.4506, -91.1565, 11.7885, 0.29 ) }
    dend_37 { pt3dadd( 98.8455, -91.5174, 11.7829, 0.66 ) }
    dend_37 { pt3dadd( 99.2622, -91.9132, 11.7961, 1.03 ) }
    dend_37 { pt3dadd( 99.3114, -91.9626, 11.8026, 1.03 ) }
    dend_37 { pt3dadd( 99.6443, -92.3171, 11.8769, 1.03 ) }
    dend_37 { pt3dadd( 100.366, -93.1022, 12.0846, 0.22 ) }
    dend_37 { pt3dadd( 101.554, -94.446, 12.4657, 0.22 ) }
    dend_37 { pt3dadd( 101.598, -94.4992, 12.4796, 0.22 ) }
    dend_37 { pt3dadd( 101.937, -94.9611, 12.5806, 0.96 ) }
    dend_37 { pt3dadd( 102.285, -95.4686, 12.6747, 1.47 ) }
    dend_37 { pt3dadd( 102.558, -95.9233, 12.7509, 1.92 ) }
    dend_37 { pt3dadd( 102.827, -96.4194, 12.82, 1.92 ) }
    dend_37 { pt3dadd( 103.264, -97.3048, 12.9436, 0.22 ) }
    dend_37 { pt3dadd( 104.018, -98.9027, 13.1508, 0.22 ) }
    dend_37 { pt3dadd( 104.059, -98.9921, 13.1609, 0.22 ) }
    dend_37 { pt3dadd( 104.753, -100.556, 13.3685, 0.22 ) }
    dend_37 { pt3dadd( 104.946, -100.974, 13.4273, 1.11 ) }
    dend_37 { pt3dadd( 105.141, -101.36, 13.4823, 1.4 ) }
    dend_37 { pt3dadd( 105.179, -101.429, 13.4925, 1.4 ) }
    dend_37 { pt3dadd( 105.487, -101.966, 13.5562, 1.4 ) }
    dend_37 { pt3dadd( 105.974, -102.756, 13.6655, 0.22 ) }
    dend_37 { pt3dadd( 106.906, -104.133, 13.867, 0.22 ) }
    dend_37 { pt3dadd( 107.629, -105.133, 14.0525, 0.22 ) }
    dend_37 { pt3dadd( 107.672, -105.188, 14.0633, 0.22 ) }
    dend_37 { pt3dadd( 107.899, -105.472, 14.1214, 1.4 ) }
    dend_37 { pt3dadd( 108.608, -106.324, 14.3339, 1.84 ) }
    dend_37 { pt3dadd( 109.139, -106.933, 14.5106, 1.84 ) }
    dend_37 { pt3dadd( 110.191, -108.08, 14.9004, 0.29 ) }
    dend_37 { pt3dadd( 111.328, -109.283, 15.3376, 0.29 ) }
    dend_37 { pt3dadd( 111.374, -109.331, 15.3576, 0.29 ) }
    dend_37 { pt3dadd( 112.061, -110.052, 15.692, 0.29 ) }
    dend_37 { pt3dadd( 112.099, -110.094, 15.7124, 0.29 ) }
    dend_37 { pt3dadd( 112.922, -111.048, 16.2059, 0.29 ) }
    dend_37 { pt3dadd( 112.985, -111.124, 16.2468, 0.29 ) }
    dend_37 { pt3dadd( 114.146, -112.63, 17.0872, 0.22 ) }
    dend_37 { pt3dadd( 114.838, -113.56, 17.5795, 0.22 ) }
    dend_37 { pt3dadd( 114.927, -113.685, 17.6399, 0.22 ) }
    dend_37 { pt3dadd( 115.661, -114.745, 18.1348, 0.22 ) }
    dend_37 { pt3dadd( 115.697, -114.8, 18.1597, 0.22 ) }
    dend_37 { pt3dadd( 116.374, -115.833, 18.5918, 0.22 ) }
    dend_37 { pt3dadd( 116.483, -116.006, 18.6475, 0.52 ) }
    dend_37 { pt3dadd( 116.811, -116.476, 18.7957, 0.52 ) }
    dend_37 { pt3dadd( 116.849, -116.532, 18.8147, 0.52 ) }
    dend_37 { pt3dadd( 117.023, -116.777, 18.9202, 0.52 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 72/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.2962, -53.4969, 5.41817, 1.11 ) }
    dend_33 { pt3dadd( 9.63606, -54.2298, 6.66405, 1.11 ) }
    dend_33 { pt3dadd( 9.03152, -55.1503, 7.93629, 0.52 ) }
    dend_33 { pt3dadd( 9.007, -55.1971, 7.99637, 0.52 ) }
    dend_33 { pt3dadd( 8.73179, -55.7887, 8.73306, 0.52 ) }
    dend_33 { pt3dadd( 8.12658, -57.2772, 10.4848, 0.52 ) }
    dend_33 { pt3dadd( 7.79116, -58.2721, 11.578, 0.52 ) }
    dend_33 { pt3dadd( 7.5424, -59.3958, 12.6443, 0.74 ) }
    dend_33 { pt3dadd( 7.41057, -60.4513, 13.4968, 0.81 ) }
    dend_33 { pt3dadd( 7.40683, -60.5131, 13.5474, 0.81 ) }
    dend_33 { pt3dadd( 7.40713, -61.0257, 13.9709, 0.88 ) }
    dend_33 { pt3dadd( 7.43163, -61.6377, 14.4837, 0.44 ) }
    dend_33 { pt3dadd( 7.40142, -62.0919, 14.9187, 0.29 ) }
    dend_33 { pt3dadd( 7.36553, -62.3425, 15.2155, 0.29 ) }
    dend_33 { pt3dadd( 7.15681, -63.5228, 16.6702, 0.44 ) }
    dend_33 { pt3dadd( 7.05644, -64.0993, 17.3824, 0.44 ) }
    dend_33 { pt3dadd( 6.84627, -65.2369, 18.8535, 0.74 ) }
    dend_33 { pt3dadd( 6.7736, -65.9108, 19.7671, 0.74 ) }
    dend_33 { pt3dadd( 6.7765, -66.6365, 20.7688, 0.74 ) }
    dend_33 { pt3dadd( 6.78497, -66.6969, 20.848, 0.74 ) }
    dend_33 { pt3dadd( 6.91328, -67.1627, 21.3522, 0.74 ) }
    dend_33 { pt3dadd( 6.93241, -67.217, 21.4078, 0.74 ) }
    dend_33 { pt3dadd( 7.36195, -68.3183, 22.4746, 0.44 ) }
    dend_33 { pt3dadd( 7.53599, -68.8927, 23.2084, 0.74 ) }
    dend_33 { pt3dadd( 7.53911, -68.9304, 23.2672, 0.74 ) }
    dend_33 { pt3dadd( 7.46632, -69.2486, 23.9251, 0.74 ) }
    dend_33 { pt3dadd( 7.44105, -69.3024, 24.0518, 0.74 ) }
    dend_33 { pt3dadd( 7.3733, -69.4524, 24.3832, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_33 { pt3dadd( 6.9341, -70.3652, 26.3106, 0.74 ) }
    dend_33 { pt3dadd( 6.67057, -71.0419, 27.6279, 0.74 ) }
    dend_33 { pt3dadd( 6.39248, -71.8861, 29.1988, 1.11 ) }
    dend_33 { pt3dadd( 6.19552, -72.6497, 30.5647, 0.29 ) }
    dend_33 { pt3dadd( 6.08064, -73.2939, 31.6233, 0.29 ) }
    dend_33 { pt3dadd( 6.07205, -73.4239, 31.8006, 0.29 ) }
    dend_33 { pt3dadd( 6.13791, -74.0904, 32.3737, 0.29 ) }
    dend_33 { pt3dadd( 6.1494, -74.1507, 32.4072, 0.29 ) }
    dend_33 { pt3dadd( 6.33766, -75.0017, 32.6708, 0.74 ) }
    dend_33 { pt3dadd( 6.35061, -75.0692, 32.6843, 0.74 ) }
    dend_33 { pt3dadd( 6.48942, -75.808, 32.9578, 0.74 ) }
    dend_33 { pt3dadd( 6.71478, -76.2339, 33.3054, 0.96 ) }
    dend_33 { pt3dadd( 6.75777, -76.2631, 33.3524, 0.96 ) }
    dend_33 { pt3dadd( 7.02963, -76.4292, 33.7567, 0.96 ) }
    dend_33 { pt3dadd( 7.16334, -76.5027, 33.9749, 0.96 ) }
    dend_33 { pt3dadd( 8.08323, -77.0955, 35.5597, 0.37 ) }
    dend_33 { pt3dadd( 8.72689, -77.528, 36.7127, 0.37 ) }
    dend_33 { pt3dadd( 9.27102, -77.953, 37.7856, 0.37 ) }
    dend_33 { pt3dadd( 10.5929, -79.27, 40.7601, 0.37 ) }
    dend_33 { pt3dadd( 10.6253, -79.3115, 40.8451, 0.37 ) }
    dend_33 { pt3dadd( 10.8824, -79.9371, 41.9792, 0.37 ) }
    dend_33 { pt3dadd( 10.8861, -79.9812, 42.0458, 0.37 ) }
    dend_33 { pt3dadd( 10.7961, -80.7739, 43.1694, 0.96 ) }
    dend_33 { pt3dadd( 10.6705, -81.1934, 43.7514, 0.96 ) }
    dend_33 { pt3dadd( 10.6492, -81.2422, 43.8111, 0.96 ) }
    dend_33 { pt3dadd( 9.9932, -82.4872, 45.5755, 0.74 ) }
    dend_33 { pt3dadd( 9.95687, -82.5321, 45.6647, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 27/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 10.2962, -53.4969, 5.41817, 1.25 ) }
    dend_32 { pt3dadd( 11.0391, -55.7241, 5.82978, 1.25 ) }
    dend_32 { pt3dadd( 11.0604, -55.7902, 5.8385, 1.25 ) }
    dend_32 { pt3dadd( 11.6428, -57.6349, 6.04467, 1.03 ) }
    dend_32 { pt3dadd( 11.6658, -57.7007, 6.05055, 1.03 ) }
    dend_32 { pt3dadd( 12.4127, -59.6742, 6.19361, 1.03 ) }
    dend_32 { pt3dadd( 12.4671, -59.8137, 6.20266, 1.03 ) }
    dend_32 { pt3dadd( 13.234, -61.5664, 6.21999, 1.03 ) }
    dend_32 { pt3dadd( 13.268, -61.6388, 6.22062, 1.03 ) }
    dend_32 { pt3dadd( 14.5346, -64.124, 6.17816, 1.03 ) }
    dend_32 { pt3dadd( 15.3569, -65.6463, 6.11974, 1.11 ) }
    dend_32 { pt3dadd( 15.3966, -65.7157, 6.11591, 1.11 ) }
    dend_32 { pt3dadd( 17.0869, -68.6069, 5.92273, 1.11 ) }
    dend_32 { pt3dadd( 17.2344, -68.8559, 5.90332, 1.11 ) }
    dend_32 { pt3dadd( 18.2408, -70.5763, 5.75431, 0.96 ) }
    dend_32 { pt3dadd( 19.3606, -72.5209, 5.57083, 0.96 ) }
    dend_32 { pt3dadd( 19.7793, -73.2602, 5.5034, 1.25 ) }
    dend_32 { pt3dadd( 19.8135, -73.3211, 5.49862, 1.25 ) }
    dend_32 { pt3dadd( 20.6915, -74.93, 5.39582, 1.25 ) }
    dend_32 { pt3dadd( 20.7656, -75.0603, 5.39059, 1.25 ) }
    dend_32 { pt3dadd( 22.0483, -77.2724, 5.38384, 1.33 ) }
    dend_32 { pt3dadd( 22.0843, -77.3324, 5.38384, 1.33 ) }
    dend_32 { pt3dadd( 22.9854, -78.8162, 5.38384, 1.55 ) }
    dend_32 { pt3dadd( 23.0277, -78.8841, 5.38123, 1.55 ) }
    dend_32 { pt3dadd( 23.6691, -79.8825, 5.30237, 1.69 ) }
    dend_32 { pt3dadd( 23.7215, -79.966, 5.29305, 1.69 ) }
    dend_32 { pt3dadd( 24.2555, -80.8564, 5.15836, 1.69 ) }
    dend_32 { pt3dadd( 24.3309, -80.984, 5.13549, 1.69 ) }
    dend_32 { pt3dadd( 25.0444, -82.2322, 4.88093, 1.11 ) }
    dend_32 { pt3dadd( 25.0806, -82.3025, 4.86811, 1.11 ) }
    dend_32 { pt3dadd( 25.9619, -84.1337, 4.54581, 1.03 ) }
    dend_32 { pt3dadd( 26.0247, -84.267, 4.51776, 1.03 ) }
    dend_32 { pt3dadd( 26.9382, -86.2973, 3.89752, 1.03 ) }
    dend_32 { pt3dadd( 26.9644, -86.3587, 3.8766, 1.03 ) }
    dend_32 { pt3dadd( 27.9219, -88.7293, 3.02011, 1.03 ) }
    dend_32 { pt3dadd( 27.9534, -88.8104, 2.9897, 1.03 ) }
    dend_32 { pt3dadd( 28.6472, -90.6606, 2.25043, 1.03 ) }
    dend_32 { pt3dadd( 29.3598, -92.5536, 1.53286, 1.03 ) }
    dend_32 { pt3dadd( 30.1373, -94.6113, 0.749378, 1.03 ) }
    dend_32 { pt3dadd( 30.1634, -94.6725, 0.7279, 1.03 ) }
    dend_32 { pt3dadd( 30.8763, -96.159, 0.256368, 1.03 ) }
    dend_32 { pt3dadd( 30.9429, -96.2892, 0.223131, 1.03 ) }
    dend_32 { pt3dadd( 31.8841, -97.9905, -0.0796903, 1.03 ) }
    dend_32 { pt3dadd( 32.7943, -99.5071, -0.270568, 0.81 ) }
    dend_32 { pt3dadd( 34.0775, -101.493, -0.53975, 0.66 ) }
    dend_32 { pt3dadd( 34.6266, -102.315, -0.650543, 1.25 ) }
    dend_32 { pt3dadd( 35.1127, -102.994, -0.740955, 1.55 ) }
    dend_32 { pt3dadd( 35.4135, -103.402, -0.789593, 1.55 ) }
    dend_32 { pt3dadd( 35.5054, -103.52, -0.799474, 1.55 ) }
    dend_32 { pt3dadd( 36.0672, -104.218, -0.799474, 1.11 ) }
    dend_32 { pt3dadd( 36.115, -104.282, -0.799474, 1.11 ) }
    dend_32 { pt3dadd( 36.7132, -105.131, -0.799474, 0.88 ) }
    dend_32 { pt3dadd( 36.7581, -105.198, -0.799474, 0.88 ) }
    dend_32 { pt3dadd( 37.5133, -106.355, -0.799474, 0.81 ) }
    dend_32 { pt3dadd( 37.6011, -106.496, -0.799474, 0.81 ) }
    dend_32 { pt3dadd( 38.1059, -107.33, -0.799474, 0.81 ) }
    dend_32 { pt3dadd( 38.1805, -107.46, -0.799474, 0.81 ) }
    dend_32 { pt3dadd( 38.5685, -108.199, -0.799474, 1.18 ) }
    dend_32 { pt3dadd( 38.6329, -108.323, -0.806361, 1.18 ) }
    dend_32 { pt3dadd( 39.0383, -109.147, -0.886686, 1.18 ) }
    dend_32 { pt3dadd( 39.0678, -109.21, -0.894027, 1.18 ) }
    dend_32 { pt3dadd( 39.4778, -110.137, -1.00605, 1.18 ) }
    dend_32 { pt3dadd( 39.5621, -110.338, -1.03036, 1.18 ) }
    dend_32 { pt3dadd( 40.0739, -111.623, -1.17117, 1.18 ) }
    dend_32 { pt3dadd( 40.5999, -112.93, -1.30388, 1.03 ) }
    dend_32 { pt3dadd( 40.6562, -113.068, -1.32196, 1.03 ) }
    dend_32 { pt3dadd( 41.2521, -114.484, -1.52936, 0.74 ) }
    dend_32 { pt3dadd( 41.2921, -114.573, -1.54347, 0.74 ) }
    dend_32 { pt3dadd( 42.0511, -116.195, -1.80058, 0.74 ) }
    dend_32 { pt3dadd( 42.1215, -116.338, -1.82184, 0.74 ) }
    dend_32 { pt3dadd( 42.604, -117.266, -2.01112, 1.18 ) }
    dend_32 { pt3dadd( 43.002, -118.043, -2.18653, 1.62 ) }
    dend_32 { pt3dadd( 43.2078, -118.469, -2.30591, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_32 { pt3dadd( 43.2398, -118.539, -2.327, 1.84 ) }
    dend_32 { pt3dadd( 43.527, -119.21, -2.52504, 1.69 ) }
    dend_32 { pt3dadd( 44.0127, -120.409, -2.84872, 0.66 ) }
    dend_32 { pt3dadd( 44.4372, -121.492, -3.10295, 0.66 ) }
    dend_32 { pt3dadd( 44.9394, -122.757, -3.39327, 0.52 ) }
    dend_32 { pt3dadd( 44.9769, -122.846, -3.4119, 0.52 ) }
    dend_32 { pt3dadd( 45.6023, -124.198, -3.65898, 0.52 ) }
    dend_32 { pt3dadd( 45.634, -124.26, -3.66808, 0.52 ) }
    dend_32 { pt3dadd( 45.9655, -124.794, -3.71023, 1.18 ) }
    dend_32 { pt3dadd( 46.4392, -125.422, -3.73334, 1.62 ) }
    dend_32 { pt3dadd( 46.971, -126.059, -3.72282, 1.92 ) }
    dend_32 { pt3dadd( 47.2726, -126.409, -3.71764, 2.14 ) }
    dend_32 { pt3dadd( 47.5634, -126.734, -3.71353, 2.21 ) }
    dend_32 { pt3dadd( 48.2129, -127.473, -3.706, 1.92 ) }
    dend_32 { pt3dadd( 48.8237, -128.17, -3.70096, 1.62 ) }
    dend_32 { pt3dadd( 49.6284, -129.113, -3.68745, 0.96 ) }
    dend_32 { pt3dadd( 50.1916, -129.796, -3.67491, 0.66 ) }
    dend_32 { pt3dadd( 50.9381, -130.73, -3.65221, 0.59 ) }
    dend_32 { pt3dadd( 51.0728, -130.904, -3.64706, 0.59 ) }
    dend_32 { pt3dadd( 51.7792, -131.86, -3.61313, 0.59 ) }
    dend_32 { pt3dadd( 52.1539, -132.397, -3.63963, 1.4 ) }
    dend_32 { pt3dadd( 52.5352, -132.963, -3.72422, 1.62 ) }
    dend_32 { pt3dadd( 52.6151, -133.088, -3.74736, 1.62 ) }
    dend_32 { pt3dadd( 52.9774, -133.661, -3.86458, 1.62 ) }
    dend_32 { pt3dadd( 53.0688, -133.801, -3.89251, 1.62 ) }
    dend_32 { pt3dadd( 53.987, -135.179, -4.16292, 0.29 ) }
    dend_32 { pt3dadd( 55.0276, -136.674, -4.44004, 0.29 ) }
    dend_32 { pt3dadd( 56.866, -139.241, -4.86064, 0.29 ) }
    dend_32 { pt3dadd( 56.9132, -139.305, -4.86948, 0.29 ) }
    dend_32 { pt3dadd( 57.2067, -139.692, -4.91027, 1.11 ) }
    dend_32 { pt3dadd( 57.5615, -140.144, -4.93237, 1.77 ) }
    dend_32 { pt3dadd( 58.0923, -140.786, -4.89703, 2.36 ) }
    dend_32 { pt3dadd( 58.4298, -141.198, -4.87707, 2.65 ) }
    dend_32 { pt3dadd( 58.6535, -141.485, -4.88109, 2.8 ) }
    dend_32 { pt3dadd( 58.695, -141.541, -4.88385, 2.8 ) }
    dend_32 { pt3dadd( 59.3153, -142.435, -4.95219, 1.03 ) }
    dend_32 { pt3dadd( 59.9832, -143.433, -5.03905, 0.74 ) }
    dend_32 { pt3dadd( 60.9178, -144.894, -5.17585, 0.74 ) }
    dend_32 { pt3dadd( 61.6151, -146.029, -5.28689, 0.52 ) }
    dend_32 { pt3dadd( 61.6685, -146.12, -5.29909, 0.52 ) }
    dend_32 { pt3dadd( 61.949, -146.628, -5.38277, 0.81 ) }
    dend_32 { pt3dadd( 61.9793, -146.69, -5.39548, 0.81 ) }
    dend_32 { pt3dadd( 62.2746, -147.372, -5.56616, 0.81 ) }
    dend_32 { pt3dadd( 62.3031, -147.444, -5.58638, 0.81 ) }
    dend_32 { pt3dadd( 62.7362, -148.516, -5.84701, 0.74 ) }
    dend_32 { pt3dadd( 63.044, -149.195, -6.00585, 0.74 ) }
    dend_32 { pt3dadd( 63.1537, -149.406, -6.05289, 0.29 ) }
    dend_32 { pt3dadd( 63.1891, -149.465, -6.06499, 0.29 ) }
    dend_32 { pt3dadd( 63.5651, -150.043, -6.16076, 0.29 ) }
    dend_32 { pt3dadd( 64.0914, -150.816, -6.24247, 0.29 ) }
    dend_32 { pt3dadd( 64.309, -151.115, -6.24589, 0.29 ) }
    dend_32 { pt3dadd( 64.5728, -151.455, -6.24805, 0.29 ) }
    dend_32 { pt3dadd( 64.6749, -151.586, -6.24805, 0.29 ) }
    dend_32 { pt3dadd( 65.117, -152.166, -6.24805, 0.29 ) }
    dend_32 { pt3dadd( 65.2639, -152.382, -6.24805, 1.03 ) }
    dend_32 { pt3dadd( 65.5855, -152.924, -6.24805, 1.4 ) }
    dend_32 { pt3dadd( 65.6251, -152.993, -6.24805, 1.4 ) }
    dend_32 { pt3dadd( 65.9741, -153.641, -6.24805, 1.4 ) }
    dend_32 { pt3dadd( 66.008, -153.702, -6.24658, 1.4 ) }
    dend_32 { pt3dadd( 66.4347, -154.449, -6.20796, 0.37 ) }
    dend_32 { pt3dadd( 66.4693, -154.509, -6.20398, 0.37 ) }
    dend_32 { pt3dadd( 67.262, -155.859, -6.10571, 0.37 ) }
    dend_32 { pt3dadd( 67.4248, -156.14, -6.07371, 0.37 ) }
    dend_32 { pt3dadd( 67.8368, -156.848, -5.97404, 1.33 ) }
    dend_32 { pt3dadd( 68.4664, -157.92, -5.81349, 2.58 ) }
    dend_32 { pt3dadd( 68.7557, -158.411, -5.73525, 2.95 ) }
    dend_32 { pt3dadd( 69.2115, -159.216, -5.61406, 2.95 ) }
    dend_32 { pt3dadd( 69.995, -160.679, -5.40439, 0.44 ) }
    dend_32 { pt3dadd( 70.0262, -160.741, -5.39658, 0.44 ) }
    dend_32 { pt3dadd( 70.6646, -162.106, -5.25137, 0.44 ) }
    dend_32 { pt3dadd( 70.7205, -162.234, -5.23957, 0.44 ) }
    dend_32 { pt3dadd( 71.3269, -163.763, -5.12565, 0.44 ) }
    dend_32 { pt3dadd( 71.4807, -164.181, -5.10457, 0.74 ) }
    dend_32 { pt3dadd( 71.797, -165.081, -5.0945, 0.74 ) }
    dend_32 { pt3dadd( 71.8652, -165.29, -5.09219, 0.74 ) }
    dend_32 { pt3dadd( 72.0272, -165.957, -5.08603, 0.59 ) }
    dend_32 { pt3dadd( 72.1903, -166.764, -5.08, 0.44 ) }
    dend_32 { pt3dadd( 72.2288, -166.992, -5.07881, 0.44 ) }
    dend_32 { pt3dadd( 72.4359, -168.33, -5.07533, 0.44 ) }
    dend_32 { pt3dadd( 72.4708, -168.561, -5.07533, 0.44 ) }
    dend_32 { pt3dadd( 72.7661, -170.881, -4.96052, 0.44 ) }
    dend_32 { pt3dadd( 72.7737, -170.95, -4.95472, 0.44 ) }
    dend_32 { pt3dadd( 72.8731, -171.955, -4.84799, 1.4 ) }
    dend_32 { pt3dadd( 72.9827, -173.122, -4.70969, 2.28 ) }
    dend_32 { pt3dadd( 73.0727, -173.964, -4.60016, 2.65 ) }
    dend_32 { pt3dadd( 73.2857, -175.574, -4.38521, 0.96 ) }
    dend_32 { pt3dadd( 73.5589, -177.302, -4.13903, 0.96 ) }
    dend_32 { pt3dadd( 73.5925, -177.518, -4.11024, 0.96 ) }
    dend_32 { pt3dadd( 73.786, -178.821, -3.94564, 1.18 ) }
    dend_32 { pt3dadd( 73.9239, -179.696, -3.85432, 1.62 ) }
    dend_32 { pt3dadd( 74.0524, -180.47, -3.80234, 1.62 ) }
    dend_32 { pt3dadd( 74.0663, -180.538, -3.80234, 1.62 ) }
    dend_32 { pt3dadd( 74.2667, -181.477, -3.80234, 0.52 ) }
    dend_32 { pt3dadd( 74.296, -181.614, -3.80234, 0.52 ) }
    dend_32 { pt3dadd( 74.511, -182.659, -3.71486, 0.52 ) }
    dend_32 { pt3dadd( 74.5388, -182.794, -3.69412, 0.52 ) }
    dend_32 { pt3dadd( 74.7585, -183.822, -3.48028, 0.52 ) }
    dend_32 { pt3dadd( 75.0571, -185.01, -3.18809, 0.52 ) }
    dend_32 { pt3dadd( 75.0762, -185.075, -3.16968, 0.52 ) }
    dend_32 { pt3dadd( 75.4963, -186.411, -2.75558, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_32 { pt3dadd( 75.5687, -186.62, -2.68981, 1.03 ) }
    dend_32 { pt3dadd( 75.7508, -187.153, -2.4966, 1.03 ) }
    dend_32 { pt3dadd( 75.9414, -187.701, -2.27145, 1.03 ) }
    dend_32 { pt3dadd( 76.117, -188.22, -2.06705, 0.29 ) }
    dend_32 { pt3dadd( 76.1402, -188.292, -2.04296, 0.29 ) }
    dend_32 { pt3dadd( 76.5155, -189.551, -1.72936, 0.29 ) }
    dend_32 { pt3dadd( 76.829, -190.674, -1.43665, 1.18 ) }
    dend_32 { pt3dadd( 76.8483, -190.747, -1.41137, 1.18 ) }
    dend_32 { pt3dadd( 77.0167, -191.498, -1.1216, 1.62 ) }
    dend_32 { pt3dadd( 77.0906, -191.851, -0.975403, 1.84 ) }
    dend_32 { pt3dadd( 77.1676, -192.186, -0.838005, 1.84 ) }
    dend_32 { pt3dadd( 77.2015, -192.321, -0.782514, 1.84 ) }
    dend_32 { pt3dadd( 77.7088, -193.797, -0.295819, 0.74 ) }
    dend_32 { pt3dadd( 77.9553, -194.381, -0.112953, 0.29 ) }
    dend_32 { pt3dadd( 77.9997, -194.467, -0.0887542, 0.29 ) }
    dend_32 { pt3dadd( 78.3979, -195.135, 0.0668728, 0.29 ) }
    dend_32 { pt3dadd( 78.4749, -195.25, 0.0868248, 0.29 ) }
    dend_32 { pt3dadd( 79.0626, -196.102, 0.242159, 0.29 ) }
    dend_32 { pt3dadd( 79.4026, -196.551, 0.316578, 1.11 ) }
    dend_32 { pt3dadd( 79.8549, -197.19, 0.445389, 1.47 ) }
    dend_32 { pt3dadd( 80.1405, -197.629, 0.542799, 1.77 ) }
    dend_32 { pt3dadd( 80.3538, -198.028, 0.63489, 1.77 ) }
    dend_32 { pt3dadd( 80.874, -199.289, 0.991955, 0.66 ) }
    dend_32 { pt3dadd( 81.0785, -199.956, 1.20976, 0.44 ) }
    dend_32 { pt3dadd( 81.3282, -200.911, 1.5129, 0.44 ) }
    dend_32 { pt3dadd( 81.3433, -200.976, 1.53306, 0.44 ) }
    dend_32 { pt3dadd( 81.5481, -201.875, 1.84999, 0.44 ) }
    dend_32 { pt3dadd( 81.8458, -203.243, 2.35536, 0.29 ) }
    dend_32 { pt3dadd( 81.8647, -203.334, 2.38803, 0.29 ) }
    dend_32 { pt3dadd( 82.2135, -205.084, 3.04528, 0.29 ) }
    dend_32 { pt3dadd( 82.2429, -205.219, 3.10409, 0.29 ) }
    dend_32 { pt3dadd( 82.5136, -206.476, 3.65651, 1.18 ) }
    dend_32 { pt3dadd( 82.6019, -206.876, 3.83548, 1.25 ) }
    dend_32 { pt3dadd( 82.7508, -207.604, 4.13369, 1.25 ) }
    dend_32 { pt3dadd( 82.825, -208.079, 4.32126, 1.03 ) }
    dend_32 { pt3dadd( 82.9161, -209.08, 4.70635, 0.59 ) }
    dend_32 { pt3dadd( 83.0128, -210.191, 5.06042, 0.59 ) }
    dend_32 { pt3dadd( 83.0183, -210.259, 5.07522, 0.59 ) }
    dend_32 { pt3dadd( 83.0771, -210.801, 5.18304, 0.88 ) }
    dend_32 { pt3dadd( 83.18, -211.515, 5.29563, 1.18 ) }
    dend_32 { pt3dadd( 83.2024, -211.652, 5.30876, 1.18 ) }
    dend_32 { pt3dadd( 83.2561, -211.907, 5.30876, 1.18 ) }
    dend_32 { pt3dadd( 83.362, -212.342, 5.30876, 0.74 ) }
    dend_32 { pt3dadd( 83.4741, -212.793, 5.30876, 0.74 ) }
    dend_32 { pt3dadd( 83.6416, -213.468, 5.30575, 0.37 ) }
    dend_32 { pt3dadd( 83.6674, -213.571, 5.30497, 0.37 ) }
    dend_32 { pt3dadd( 84.094, -215.356, 5.28751, 0.37 ) }
    dend_32 { pt3dadd( 84.1945, -215.78, 5.28262, 0.74 ) }
    dend_32 { pt3dadd( 84.2141, -215.858, 5.28163, 0.74 ) }
    dend_32 { pt3dadd( 84.3893, -216.534, 5.27228, 1.18 ) }
    dend_32 { pt3dadd( 84.4902, -216.89, 5.26715, 1.18 ) }
    dend_32 { pt3dadd( 84.5326, -217.024, 5.2652, 1.18 ) }
    dend_32 { pt3dadd( 84.7621, -217.578, 5.25665, 1.18 ) }
    dend_32 { pt3dadd( 85.1513, -218.364, 5.24668, 0.37 ) }
    dend_32 { pt3dadd( 85.2293, -218.493, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 85.538, -218.916, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 85.5811, -218.971, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 85.9353, -219.443, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 85.9835, -219.507, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 86.5021, -220.29, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 86.5322, -220.353, 5.24572, 0.37 ) }
    dend_32 { pt3dadd( 86.6319, -220.634, 5.24572, 0.81 ) }
    dend_32 { pt3dadd( 86.7852, -221.204, 5.24572, 0.81 ) }
    dend_32 { pt3dadd( 86.827, -221.42, 5.24572, 0.81 ) }
    dend_32 { pt3dadd( 86.9273, -221.996, 5.24572, 0.96 ) }
    dend_32 { pt3dadd( 87.0411, -222.798, 5.24572, 0.96 ) }
    dend_32 { pt3dadd( 87.1145, -223.326, 5.24572, 0.29 ) }
    dend_32 { pt3dadd( 87.1465, -223.555, 5.24572, 0.29 ) }
    dend_32 { pt3dadd( 87.2981, -224.585, 5.18434, 0.29 ) }
    dend_32 { pt3dadd( 87.3961, -225.249, 5.11765, 1.03 ) }
    dend_32 { pt3dadd( 87.5109, -225.893, 5.02549, 1.4 ) }
    dend_32 { pt3dadd( 87.6365, -226.523, 4.92765, 1.69 ) }
    dend_32 { pt3dadd( 87.7406, -227.02, 4.83352, 1.84 ) }
    dend_32 { pt3dadd( 88.0036, -228.196, 4.58413, 1.25 ) }
    dend_32 { pt3dadd( 88.1153, -228.687, 4.47323, 1.25 ) }
    dend_32 { pt3dadd( 88.3775, -229.827, 4.21226, 0.52 ) }
    dend_32 { pt3dadd( 88.8569, -231.891, 3.76784, 0.52 ) }
    dend_32 { pt3dadd( 89.0041, -232.554, 3.63993, 0.81 ) }
    dend_32 { pt3dadd( 89.0327, -232.699, 3.61692, 0.81 ) }
    dend_32 { pt3dadd( 89.1891, -233.634, 3.51608, 0.81 ) }
    dend_32 { pt3dadd( 89.2192, -233.85, 3.48858, 0.81 ) }
    dend_32 { pt3dadd( 89.321, -235.019, 3.28645, 0.81 ) }
    dend_32 { pt3dadd( 89.3367, -235.523, 3.1834, 1.69 ) }
    dend_32 { pt3dadd( 89.3457, -236.096, 3.06736, 1.99 ) }
    dend_32 { pt3dadd( 89.3463, -236.243, 3.03522, 1.99 ) }
    dend_32 { pt3dadd( 89.3423, -237.124, 2.83147, 1.99 ) }
    dend_32 { pt3dadd( 89.3298, -238.382, 2.5352, 0.29 ) }
    dend_32 { pt3dadd( 89.3082, -239.956, 2.16551, 0.29 ) }
    dend_32 { pt3dadd( 89.308, -240.024, 2.15059, 0.29 ) }
    dend_32 { pt3dadd( 89.3098, -240.53, 2.05643, 0.66 ) }
    dend_32 { pt3dadd( 89.3169, -241.262, 1.92943, 0.88 ) }
    dend_32 { pt3dadd( 89.3195, -241.332, 1.92041, 0.88 ) }
    dend_32 { pt3dadd( 89.3676, -241.99, 1.83689, 0.88 ) }
    dend_32 { pt3dadd( 89.3974, -242.203, 1.7921, 0.88 ) }
    dend_32 { pt3dadd( 89.4908, -242.759, 1.65553, 0.88 ) }
    dend_32 { pt3dadd( 89.6681, -243.661, 1.41735, 0.37 ) }
    dend_32 { pt3dadd( 89.9145, -244.803, 1.11112, 0.37 ) }
    dend_32 { pt3dadd( 89.9295, -244.87, 1.09401, 0.37 ) }
    dend_32 { pt3dadd( 90.2963, -246.332, 0.741105, 0.37 ) }
    dend_32 { pt3dadd( 90.325, -246.439, 0.71765, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( 90.5881, -247.347, 0.551882, 0.37 ) }
    dend_32 { pt3dadd( 90.7417, -247.852, 0.489899, 0.66 ) }
    dend_32 { pt3dadd( 90.8748, -248.275, 0.44619, 0.66 ) }
    dend_32 { pt3dadd( 91.1257, -249.052, 0.394895, 0.66 ) }
    dend_32 { pt3dadd( 91.1478, -249.119, 0.394895, 0.66 ) }
    dend_32 { pt3dadd( 91.3824, -249.774, 0.394895, 1.4 ) }
    dend_32 { pt3dadd( 91.5617, -250.203, 0.394895, 1.99 ) }
    dend_32 { pt3dadd( 91.5896, -250.267, 0.399478, 1.99 ) }
    dend_32 { pt3dadd( 91.7558, -250.617, 0.44337, 1.99 ) }
    dend_32 { pt3dadd( 91.8015, -250.712, 0.458467, 1.99 ) }
    dend_32 { pt3dadd( 91.9817, -251.092, 0.533262, 1.99 ) }
    dend_32 { pt3dadd( 92.0413, -251.215, 0.560815, 1.99 ) }
    dend_32 { pt3dadd( 92.4836, -252.294, 0.81357, 0.52 ) }
    dend_32 { pt3dadd( 92.9406, -253.564, 1.12204, 0.52 ) }
    dend_32 { pt3dadd( 92.9589, -253.629, 1.139, 0.52 ) }
    dend_32 { pt3dadd( 93.2353, -254.863, 1.46887, 0.52 ) }
    dend_32 { pt3dadd( 93.2607, -255.021, 1.51098, 0.52 ) }
    dend_32 { pt3dadd( 93.3612, -255.883, 1.72565, 0.52 ) }
    dend_32 { pt3dadd( 93.3645, -255.942, 1.73852, 0.52 ) }
    dend_32 { pt3dadd( 93.36, -257.144, 2.00657, 0.52 ) }
    dend_32 { pt3dadd( 93.3611, -257.213, 2.01999, 0.52 ) }
    dend_32 { pt3dadd( 93.3896, -257.717, 2.09323, 0.88 ) }
    dend_32 { pt3dadd( 93.4649, -258.308, 2.16494, 1.03 ) }
    dend_32 { pt3dadd( 93.5396, -258.659, 2.19849, 1.03 ) }
    dend_32 { pt3dadd( 93.5775, -258.82, 2.2081, 1.03 ) }
    dend_32 { pt3dadd( 93.6618, -259.135, 2.21766, 1.03 ) }
    dend_32 { pt3dadd( 93.8765, -259.823, 2.19816, 1.03 ) }
    dend_32 { pt3dadd( 94.1082, -260.451, 2.15728, 0.52 ) }
    dend_32 { pt3dadd( 94.1336, -260.516, 2.15158, 0.52 ) }
    dend_32 { pt3dadd( 94.7725, -262.04, 1.99887, 0.52 ) }
    dend_32 { pt3dadd( 94.819, -262.141, 1.97997, 0.52 ) }
    dend_32 { pt3dadd( 95.4605, -263.448, 1.65078, 0.52 ) }
    dend_32 { pt3dadd( 95.8656, -264.214, 1.41146, 0.96 ) }
    dend_32 { pt3dadd( 95.9639, -264.387, 1.3442, 0.96 ) }
    dend_32 { pt3dadd( 96.3585, -265.051, 1.04787, 1.4 ) }
    dend_32 { pt3dadd( 97.0861, -266.23, 0.474491, 1.69 ) }
    dend_32 { pt3dadd( 97.3051, -266.602, 0.302156, 1.69 ) }
    dend_32 { pt3dadd( 97.3369, -266.659, 0.27721, 1.69 ) }
    dend_32 { pt3dadd( 97.7911, -267.524, -0.090809, 0.44 ) }
    dend_32 { pt3dadd( 97.8211, -267.583, -0.114072, 0.44 ) }
    dend_32 { pt3dadd( 98.4718, -268.913, -0.547655, 0.44 ) }
    dend_32 { pt3dadd( 98.5613, -269.109, -0.591341, 0.44 ) }
    dend_32 { pt3dadd( 99.184, -270.499, -0.869282, 0.44 ) }
    dend_32 { pt3dadd( 99.2876, -270.741, -0.90744, 1.33 ) }
    dend_32 { pt3dadd( 99.3181, -270.815, -0.915739, 1.33 ) }
    dend_32 { pt3dadd( 99.7144, -271.808, -1.04826, 1.92 ) }
    dend_32 { pt3dadd( 99.9179, -272.376, -1.13029, 1.92 ) }
    dend_32 { pt3dadd( 100.033, -272.746, -1.17715, 1.92 ) }
    dend_32 { pt3dadd( 100.329, -273.859, -1.29362, 0.59 ) }
    dend_32 { pt3dadd( 100.368, -274.015, -1.31026, 0.59 ) }
    dend_32 { pt3dadd( 100.504, -274.667, -1.38036, 0.44 ) }
    dend_32 { pt3dadd( 100.688, -275.738, -1.49871, 0.44 ) }
    dend_32 { pt3dadd( 100.879, -276.974, -1.62988, 0.37 ) }
    dend_32 { pt3dadd( 100.899, -277.111, -1.65107, 0.37 ) }
    dend_32 { pt3dadd( 100.975, -277.691, -1.76365, 1.03 ) }
    dend_32 { pt3dadd( 101.048, -278.185, -1.86694, 1.18 ) }
    dend_32 { pt3dadd( 101.088, -278.407, -1.91493, 1.18 ) }
    dend_32 { pt3dadd( 101.188, -278.75, -2.00819, 1.18 ) }
    dend_32 { pt3dadd( 101.629, -279.875, -2.35736, 0.29 ) }
    dend_32 { pt3dadd( 101.664, -279.944, -2.3751, 0.29 ) }
    dend_32 { pt3dadd( 102.081, -280.669, -2.53484, 0.29 ) }
    dend_32 { pt3dadd( 102.169, -280.807, -2.55805, 0.29 ) }
    dend_32 { pt3dadd( 102.796, -281.764, -2.66917, 0.29 ) }
    dend_32 { pt3dadd( 102.836, -281.821, -2.67218, 0.29 ) }
    dend_32 { pt3dadd( 103.726, -283.067, -2.62596, 0.29 ) }
    dend_32 { pt3dadd( 103.771, -283.133, -2.62356, 0.29 ) }
    dend_32 { pt3dadd( 104.208, -283.801, -2.59899, 0.29 ) }
    dend_32 { pt3dadd( 104.29, -283.943, -2.57458, 1.18 ) }
    dend_32 { pt3dadd( 104.378, -284.137, -2.52113, 1.18 ) }
    dend_32 { pt3dadd( 104.661, -284.833, -2.29078, 1.84 ) }
    dend_32 { pt3dadd( 104.803, -285.225, -2.15074, 1.84 ) }
    dend_32 { pt3dadd( 104.84, -285.326, -2.11596, 1.84 ) }
    dend_32 { pt3dadd( 105.486, -286.953, -1.58013, 0.29 ) }
    dend_32 { pt3dadd( 105.876, -287.865, -1.29877, 0.29 ) }
    dend_32 { pt3dadd( 105.906, -287.937, -1.28058, 0.29 ) }
    dend_32 { pt3dadd( 106.331, -288.947, -1.09678, 0.29 ) }
    dend_32 { pt3dadd( 106.528, -289.428, -1.0344, 1.62 ) }
    dend_32 { pt3dadd( 106.803, -290.155, -0.983234, 2.28 ) }
    dend_32 { pt3dadd( 106.87, -290.348, -0.985644, 2.28 ) }
    dend_32 { pt3dadd( 107.195, -291.429, -0.968783, 0.29 ) }
    dend_32 { pt3dadd( 107.531, -292.757, -0.913771, 0.29 ) }
    dend_32 { pt3dadd( 107.612, -293.255, -0.878922, 0.74 ) }
    dend_32 { pt3dadd( 107.648, -293.642, -0.843728, 0.74 ) }
    dend_32 { pt3dadd( 107.67, -294.247, -0.781495, 0.74 ) }
    dend_32 { pt3dadd( 107.677, -294.921, -0.706771, 0.29 ) }
    dend_32 { pt3dadd( 107.677, -295.013, -0.695736, 0.29 ) }
    dend_32 { pt3dadd( 107.647, -296.475, -0.547613, 0.29 ) }
    dend_32 { pt3dadd( 107.647, -296.545, -0.542553, 0.29 ) }
    dend_32 { pt3dadd( 107.692, -298.075, -0.472191, 0.29 ) }
    dend_32 { pt3dadd( 107.711, -298.444, -0.462918, 0.96 ) }
    dend_32 { pt3dadd( 107.754, -299.027, -0.461274, 1.18 ) }
    dend_32 { pt3dadd( 107.791, -299.465, -0.461274, 0.52 ) }
    dend_32 { pt3dadd( 107.842, -299.983, -0.461274, 0.22 ) }
    dend_32 { pt3dadd( 108.08, -302.18, -0.461274, 0.22 ) }
    dend_32 { pt3dadd( 108.089, -302.249, -0.461274, 0.22 ) }
    dend_32 { pt3dadd( 108.165, -302.753, -0.440061, 0.88 ) }
    dend_32 { pt3dadd( 108.235, -303.211, -0.403758, 1.33 ) }
    dend_32 { pt3dadd( 108.317, -303.713, -0.356088, 1.77 ) }
    dend_32 { pt3dadd( 108.328, -303.781, -0.347691, 1.77 ) }
    dend_32 { pt3dadd( 108.419, -304.297, -0.253715, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_32 { pt3dadd( 108.638, -305.588, 6.94145E-4, 0.29 ) }
    dend_32 { pt3dadd( 108.867, -306.927, 0.304138, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 2/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -54.4448, -42.12, -5.68495, 0.96 ) }
    dend_27 { pt3dadd( -54.5255, -42.7321, -6.20926, 0.96 ) }
    dend_27 { pt3dadd( -54.5558, -43.6498, -7.00738, 0.74 ) }
    dend_27 { pt3dadd( -54.5683, -44.5629, -7.75398, 0.74 ) }
    dend_27 { pt3dadd( -54.5954, -45.6422, -8.62284, 0.74 ) }
    dend_27 { pt3dadd( -54.5986, -45.6975, -8.66562, 0.74 ) }
    dend_27 { pt3dadd( -54.7627, -47.4023, -9.97926, 0.74 ) }
    dend_27 { pt3dadd( -54.8287, -48.0033, -10.4342, 0.52 ) }
    dend_27 { pt3dadd( -54.914, -48.6385, -10.8883, 0.52 ) }
    dend_27 { pt3dadd( -55.088, -49.4739, -11.4883, 0.52 ) }
    dend_27 { pt3dadd( -55.2539, -50.006, -11.8665, 1.4 ) }
    dend_27 { pt3dadd( -55.6768, -51.0862, -12.6185, 1.69 ) }
    dend_27 { pt3dadd( -56.0105, -51.764, -13.0726, 1.69 ) }
    dend_27 { pt3dadd( -56.041, -51.8154, -13.1091, 1.69 ) }
    dend_27 { pt3dadd( -56.6756, -52.7416, -13.804, 1.69 ) }
    dend_27 { pt3dadd( -57.4882, -53.8125, -14.6017, 0.66 ) }
    dend_27 { pt3dadd( -57.8742, -54.2798, -14.9447, 0.52 ) }
    dend_27 { pt3dadd( -57.9631, -54.3772, -15.0162, 0.52 ) }
    dend_27 { pt3dadd( -58.6, -55.025, -15.4915, 0.52 ) }
    dend_27 { pt3dadd( -59.3275, -55.7685, -16.0159, 0.52 ) }
    dend_27 { pt3dadd( -59.4728, -55.9109, -16.1114, 1.03 ) }
    dend_27 { pt3dadd( -59.934, -56.3796, -16.442, 1.55 ) }
    dend_27 { pt3dadd( -60.7822, -57.2717, -17.1415, 2.28 ) }
    dend_27 { pt3dadd( -61.2704, -57.8046, -17.5579, 2.28 ) }
    dend_27 { pt3dadd( -62.0853, -58.6892, -18.209, 2.28 ) }
    dend_27 { pt3dadd( -62.1885, -58.796, -18.2822, 2.28 ) }
    dend_27 { pt3dadd( -63.116, -59.7095, -18.8846, 1.47 ) }
    dend_27 { pt3dadd( -63.1636, -59.7535, -18.9109, 1.47 ) }
    dend_27 { pt3dadd( -64.0268, -60.5343, -19.3657, 0.74 ) }
    dend_27 { pt3dadd( -65.0113, -61.4799, -19.9618, 0.74 ) }
    dend_27 { pt3dadd( -65.0571, -61.5246, -19.9901, 0.74 ) }
    dend_27 { pt3dadd( -65.8054, -62.304, -20.4748, 0.74 ) }
    dend_27 { pt3dadd( -66.3834, -62.9432, -20.8915, 0.74 ) }
    dend_27 { pt3dadd( -67.2002, -63.9366, -21.5878, 0.66 ) }
    dend_27 { pt3dadd( -67.7765, -64.7195, -22.2177, 0.52 ) }
    dend_27 { pt3dadd( -67.8454, -64.8236, -22.3008, 0.52 ) }
    dend_27 { pt3dadd( -68.2769, -65.4792, -22.8156, 0.52 ) }
    dend_27 { pt3dadd( -68.7513, -66.208, -23.3433, 1.55 ) }
    dend_27 { pt3dadd( -69.0567, -66.6702, -23.6304, 1.92 ) }
    dend_27 { pt3dadd( -69.8664, -67.7778, -24.2739, 1.92 ) }
    dend_27 { pt3dadd( -70.5099, -68.6106, -24.7468, 1.92 ) }
    dend_27 { pt3dadd( -71.1531, -69.4219, -25.2037, 0.52 ) }
    dend_27 { pt3dadd( -71.8096, -70.2185, -25.6337, 0.52 ) }
    dend_27 { pt3dadd( -72.7165, -71.2667, -26.1449, 0.52 ) }
    dend_27 { pt3dadd( -73.4294, -72.0583, -26.5293, 0.52 ) }
    dend_27 { pt3dadd( -73.9066, -72.5598, -26.7447, 0.52 ) }
    dend_27 { pt3dadd( -74.1839, -72.8186, -26.8693, 0.66 ) }
    dend_27 { pt3dadd( -74.8252, -73.3631, -27.1228, 0.66 ) }
    dend_27 { pt3dadd( -74.9322, -73.4518, -27.1792, 0.66 ) }
    dend_27 { pt3dadd( -75.5853, -73.9939, -27.5699, 0.66 ) }
    dend_27 { pt3dadd( -76.3867, -74.6891, -28.0512, 2.14 ) }
    dend_27 { pt3dadd( -77.1299, -75.3821, -28.5672, 2.73 ) }
    dend_27 { pt3dadd( -77.7113, -75.9683, -29.0515, 2.73 ) }
    dend_27 { pt3dadd( -79.1692, -77.4918, -30.3316, 0.59 ) }
    dend_27 { pt3dadd( -79.2138, -77.5396, -30.3777, 0.59 ) }
    dend_27 { pt3dadd( -79.6856, -78.064, -30.9125, 0.59 ) }
    dend_27 { pt3dadd( -80.8917, -79.4573, -32.4841, 0.59 ) }
    dend_27 { pt3dadd( -82.1361, -80.9128, -34.2546, 0.44 ) }
    dend_27 { pt3dadd( -82.6416, -81.4965, -35.0245, 0.44 ) }
    dend_27 { pt3dadd( -83.9052, -82.8828, -36.927, 1.47 ) }
    dend_27 { pt3dadd( -84.3065, -83.3109, -37.5452, 2.36 ) }
    dend_27 { pt3dadd( -85.1586, -84.1574, -38.8058, 2.36 ) }
    dend_27 { pt3dadd( -85.8843, -84.8018, -39.7931, 0.81 ) }
    dend_27 { pt3dadd( -85.9237, -84.8348, -39.8406, 0.81 ) }
    dend_27 { pt3dadd( -86.4985, -85.3012, -40.4303, 0.52 ) }
    dend_27 { pt3dadd( -86.5547, -85.3452, -40.4666, 0.52 ) }
    dend_27 { pt3dadd( -87.9291, -86.3759, -41.3577, 0.52 ) }
    dend_27 { pt3dadd( -88.5718, -86.8622, -41.7237, 0.96 ) }
    dend_27 { pt3dadd( -88.6279, -86.9103, -41.7543, 0.96 ) }
    dend_27 { pt3dadd( -88.9772, -87.2289, -41.9617, 0.96 ) }
    dend_27 { pt3dadd( -89.5286, -87.7648, -42.3047, 0.96 ) }
    dend_27 { pt3dadd( -90.6107, -88.8621, -42.9774, 0.29 ) }
    dend_27 { pt3dadd( -90.6541, -88.9101, -43.004, 0.29 ) }
    dend_27 { pt3dadd( -92.2109, -90.7258, -43.8058, 0.29 ) }
    dend_27 { pt3dadd( -92.6307, -91.234, -44.0195, 1.62 ) }
    dend_27 { pt3dadd( -93.132, -91.8625, -44.2429, 1.99 ) }
    dend_27 { pt3dadd( -93.174, -91.9163, -44.2586, 1.99 ) }
    dend_27 { pt3dadd( -93.7714, -92.6845, -44.4031, 1.99 ) }
    dend_27 { pt3dadd( -94.1671, -93.1952, -44.4981, 1.55 ) }
    dend_27 { pt3dadd( -94.8863, -94.1289, -44.7235, 0.29 ) }
    dend_27 { pt3dadd( -95.9388, -95.5122, -45.0711, 0.29 ) }
    dend_27 { pt3dadd( -95.9792, -95.5674, -45.0859, 0.29 ) }
    dend_27 { pt3dadd( -97.1186, -97.1795, -45.6176, 0.29 ) }
    dend_27 { pt3dadd( -97.1619, -97.2424, -45.6414, 0.29 ) }
    dend_27 { pt3dadd( -97.7124, -98.0659, -45.9751, 0.88 ) }
    dend_27 { pt3dadd( -98.3573, -99.1268, -46.3941, 0.88 ) }
    dend_27 { pt3dadd( -98.6562, -99.6734, -46.622, 0.88 ) }
    dend_27 { pt3dadd( -99.1496, -100.702, -46.9541, 0.29 ) }
    dend_27 { pt3dadd( -99.6057, -101.818, -47.5985, 0.29 ) }
    dend_27 { pt3dadd( -99.6315, -101.881, -47.6409, 0.29 ) }
    dend_27 { pt3dadd( -99.8549, -102.476, -48.0567, 1.77 ) }
    dend_27 { pt3dadd( -100.076, -103.1, -48.5382, 2.5 ) }
    dend_27 { pt3dadd( -100.471, -104.124, -49.3652, 2.5 ) }
    dend_27 { pt3dadd( -101.843, -107.585, -52.2156, 0.88 ) }
    dend_27 { pt3dadd( -102.086, -108.17, -52.7474, 0.52 ) }
    dend_27 { pt3dadd( -102.411, -108.879, -53.4098, 0.37 ) }
    dend_27 { pt3dadd( -102.439, -108.932, -53.4621, 0.37 ) }
    dend_27 { pt3dadd( -103.002, -109.945, -54.534, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_27 { pt3dadd( -103.029, -109.989, -54.5818, 0.37 ) }
    dend_27 { pt3dadd( -103.533, -110.743, -55.0906, 0.96 ) }
    dend_27 { pt3dadd( -103.816, -111.152, -55.3795, 1.47 ) }
    dend_27 { pt3dadd( -104.066, -111.499, -55.6231, 1.47 ) }
    dend_27 { pt3dadd( -104.901, -112.702, -56.4063, 0.29 ) }
    dend_27 { pt3dadd( -104.941, -112.763, -56.4401, 0.29 ) }
    dend_27 { pt3dadd( -106.009, -114.404, -57.2483, 0.29 ) }
    dend_27 { pt3dadd( -106.043, -114.458, -57.2777, 0.29 ) }
    dend_27 { pt3dadd( -106.225, -114.73, -57.4442, 0.59 ) }
    dend_27 { pt3dadd( -106.263, -114.786, -57.4868, 0.59 ) }
    dend_27 { pt3dadd( -106.603, -115.264, -57.8525, 0.59 ) }
    dend_27 { pt3dadd( -106.639, -115.312, -57.905, 0.59 ) }
    dend_27 { pt3dadd( -107.376, -116.276, -59.1748, 0.44 ) }
    dend_27 { pt3dadd( -107.862, -116.93, -59.8995, 0.37 ) }
    dend_27 { pt3dadd( -108.664, -118.008, -61.0031, 2.06 ) }
    dend_27 { pt3dadd( -109.088, -118.584, -61.5474, 2.21 ) }
    dend_27 { pt3dadd( -110.378, -120.355, -63.1269, 0.29 ) }
    dend_27 { pt3dadd( -110.411, -120.403, -63.1648, 0.29 ) }
    dend_27 { pt3dadd( -111.729, -122.423, -64.437, 0.29 ) }
    dend_27 { pt3dadd( -111.765, -122.485, -64.473, 0.29 ) }
    dend_27 { pt3dadd( -112.453, -123.754, -65.101, 1.77 ) }
    dend_27 { pt3dadd( -112.479, -123.814, -65.1254, 1.77 ) }
    dend_27 { pt3dadd( -112.728, -124.705, -65.3504, 2.21 ) }
    dend_27 { pt3dadd( -112.875, -125.509, -65.5935, 2.21 ) }
    dend_27 { pt3dadd( -112.978, -126.822, -66.029, 0.22 ) }
    dend_27 { pt3dadd( -112.98, -126.889, -66.0506, 0.22 ) }
    dend_27 { pt3dadd( -112.961, -128.673, -66.7399, 0.22 ) }
    dend_27 { pt3dadd( -112.888, -130.678, -67.6433, 0.22 ) }
    dend_27 { pt3dadd( -112.803, -132.164, -68.4101, 1.33 ) }
    dend_27 { pt3dadd( -112.743, -133.009, -68.865, 1.77 ) }
    dend_27 { pt3dadd( -112.734, -133.136, -68.9452, 1.77 ) }
    dend_27 { pt3dadd( -112.573, -135.26, -70.4065, 0.29 ) }
    dend_27 { pt3dadd( -112.385, -137.193, -71.7415, 0.22 ) }
    dend_27 { pt3dadd( -112.313, -137.862, -72.1871, 1.03 ) }
    dend_27 { pt3dadd( -112.198, -138.809, -72.7513, 1.03 ) }
    dend_27 { pt3dadd( -111.879, -141.346, -74.1895, 0.22 ) }
    dend_27 { pt3dadd( -111.666, -142.953, -75.0039, 0.22 ) }
    dend_27 { pt3dadd( -111.329, -145.232, -75.9716, 0.22 ) }
    dend_27 { pt3dadd( -111.158, -146.253, -76.4071, 1.4 ) }
    dend_27 { pt3dadd( -111.036, -146.922, -76.684, 1.92 ) }
    dend_27 { pt3dadd( -111.024, -146.986, -76.7088, 1.92 ) }
    dend_27 { pt3dadd( -110.891, -147.901, -76.9729, 1.92 ) }
    dend_27 { pt3dadd( -110.885, -147.966, -76.9981, 1.92 ) }
    dend_27 { pt3dadd( -110.82, -149.907, -77.8655, 0.22 ) }
    dend_27 { pt3dadd( -110.819, -149.98, -77.8971, 0.22 ) }
    dend_27 { pt3dadd( -110.82, -151.423, -78.6141, 0.22 ) }
    dend_27 { pt3dadd( -110.841, -153.137, -79.4748, 0.22 ) }
    dend_27 { pt3dadd( -110.869, -154.14, -79.9834, 1.47 ) }
    dend_27 { pt3dadd( -110.889, -154.726, -80.2652, 1.47 ) }
    dend_27 { pt3dadd( -110.924, -155.402, -80.5625, 1.47 ) }
    dend_27 { pt3dadd( -111.025, -156.966, -81.2576, 0.22 ) }
    dend_27 { pt3dadd( -111.132, -158.311, -81.984, 0.22 ) }
    dend_27 { pt3dadd( -111.139, -158.38, -82.0244, 0.22 ) }
    dend_27 { pt3dadd( -111.192, -158.715, -82.1918, 0.59 ) }
    dend_27 { pt3dadd( -111.224, -158.861, -82.2623, 0.59 ) }
    dend_27 { pt3dadd( -111.48, -159.911, -82.6868, 0.59 ) }
    dend_27 { pt3dadd( -111.907, -161.504, -83.1869, 0.15 ) }
    dend_27 { pt3dadd( -111.925, -161.568, -83.2104, 0.15 ) }
    dend_27 { pt3dadd( -112.424, -163.413, -83.8957, 0.15 ) }
    dend_27 { pt3dadd( -112.451, -163.509, -83.9307, 0.15 ) }
    dend_27 { pt3dadd( -112.771, -164.642, -84.3213, 0.15 ) }
    dend_27 { pt3dadd( -112.789, -164.706, -84.3442, 0.15 ) }
    dend_27 { pt3dadd( -113.087, -165.662, -84.6551, 1.25 ) }
    dend_27 { pt3dadd( -113.31, -166.44, -84.9291, 1.25 ) }
    dend_27 { pt3dadd( -113.456, -167.001, -85.1537, 1.25 ) }
    dend_27 { pt3dadd( -113.473, -167.064, -85.181, 1.25 ) }
    dend_27 { pt3dadd( -113.729, -167.989, -85.5807, 0.22 ) }
    dend_27 { pt3dadd( -113.748, -168.061, -85.6092, 0.22 ) }
    dend_27 { pt3dadd( -114.192, -169.989, -86.2558, 0.22 ) }
    dend_27 { pt3dadd( -114.217, -170.118, -86.305, 0.22 ) }
    dend_27 { pt3dadd( -114.339, -170.957, -86.6163, 1.62 ) }
    dend_27 { pt3dadd( -114.522, -172.019, -86.9275, 2.06 ) }
    dend_27 { pt3dadd( -114.548, -172.168, -86.9942, 2.06 ) }
    dend_27 { pt3dadd( -114.648, -172.668, -87.2703, 2.06 ) }
    dend_27 { pt3dadd( -114.947, -173.903, -88.0573, 0.29 ) }
    dend_27 { pt3dadd( -115.218, -174.861, -88.6718, 0.29 ) }
    dend_27 { pt3dadd( -115.924, -177.104, -90.1155, 0.29 ) }
    dend_27 { pt3dadd( -116.934, -180.021, -92.0781, 1.69 ) }
    dend_27 { pt3dadd( -117.199, -180.702, -92.5675, 1.69 ) }
    dend_27 { pt3dadd( -117.372, -181.111, -92.8498, 2.14 ) }
    dend_27 { pt3dadd( -117.736, -181.912, -93.3702, 2.14 ) }
    dend_27 { pt3dadd( -117.79, -182.035, -93.4378, 2.14 ) }
    dend_27 { pt3dadd( -117.868, -182.239, -93.5108, 2.14 ) }
    dend_27 { pt3dadd( -118.501, -184.037, -93.8708, 0.29 ) }
    dend_27 { pt3dadd( -119.261, -186.458, -94.4247, 0.29 ) }
    dend_27 { pt3dadd( -119.288, -186.551, -94.447, 0.29 ) }
    dend_27 { pt3dadd( -119.878, -188.771, -94.9854, 0.29 ) }
    dend_27 { pt3dadd( -120.43, -190.921, -95.4835, 0.29 ) }
    dend_27 { pt3dadd( -120.465, -191.063, -95.5162, 0.29 ) }
    dend_27 { pt3dadd( -120.81, -192.496, -95.804, 1.47 ) }
    dend_27 { pt3dadd( -120.956, -193.112, -95.9542, 1.92 ) }
    dend_27 { pt3dadd( -121.058, -193.53, -96.0675, 2.36 ) }
    dend_27 { pt3dadd( -121.214, -194.107, -96.2664, 2.36 ) }
    dend_27 { pt3dadd( -121.621, -195.601, -96.8346, 0.29 ) }
    dend_27 { pt3dadd( -122.098, -197.331, -97.403, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -54.4448, -42.12, -5.68495, 0.52 ) }
    dend_26 { pt3dadd( -55.3026, -42.4679, -5.72415, 0.52 ) }
    dend_26 { pt3dadd( -56.5282, -42.9687, -5.78226, 0.52 ) }
    dend_26 { pt3dadd( -56.6032, -42.9963, -5.78546, 0.52 ) }
    dend_26 { pt3dadd( -57.1504, -43.1952, -5.8179, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_26 { pt3dadd( -57.2823, -43.2414, -5.82624, 0.52 ) }
    dend_26 { pt3dadd( -57.7612, -43.3857, -5.85386, 0.74 ) }
    dend_26 { pt3dadd( -57.8288, -43.4034, -5.85788, 0.74 ) }
    dend_26 { pt3dadd( -58.7647, -43.625, -5.91166, 0.74 ) }
    dend_26 { pt3dadd( -59.4627, -43.7836, -5.94953, 0.74 ) }
    dend_26 { pt3dadd( -60.3463, -43.9837, -5.99566, 0.44 ) }
    dend_26 { pt3dadd( -61.7033, -44.3199, -6.06937, 0.44 ) }
    dend_26 { pt3dadd( -61.7804, -44.341, -6.07359, 0.44 ) }
    dend_26 { pt3dadd( -61.9758, -44.4027, -6.084, 0.44 ) }
    dend_26 { pt3dadd( -62.3494, -44.5448, -6.10252, 0.81 ) }
    dend_26 { pt3dadd( -62.6915, -44.7022, -6.11477, 1.11 ) }
    dend_26 { pt3dadd( -63.2556, -45.0391, -6.13868, 1.11 ) }
    dend_26 { pt3dadd( -63.673, -45.36, -6.16006, 1.11 ) }
    dend_26 { pt3dadd( -63.8071, -45.4643, -6.16637, 1.25 ) }
    dend_26 { pt3dadd( -64.1008, -45.6789, -6.18036, 1.25 ) }
    dend_26 { pt3dadd( -64.4465, -45.9204, -6.19301, 1.25 ) }
    dend_26 { pt3dadd( -64.516, -45.96, -6.19485, 1.25 ) }
    dend_26 { pt3dadd( -65.0425, -46.1982, -6.18131, 0.96 ) }
    dend_26 { pt3dadd( -65.5937, -46.3962, -6.14791, 0.74 ) }
    dend_26 { pt3dadd( -66.1757, -46.5263, -6.10009, 0.52 ) }
    dend_26 { pt3dadd( -66.281, -46.5366, -6.08979, 0.52 ) }
    dend_26 { pt3dadd( -67.3082, -46.5075, -5.98342, 0.52 ) }
    dend_26 { pt3dadd( -67.9182, -46.4191, -5.91285, 0.88 ) }
    dend_26 { pt3dadd( -68.0631, -46.3842, -5.89578, 0.88 ) }
    dend_26 { pt3dadd( -68.9438, -46.1304, -5.79822, 0.88 ) }
    dend_26 { pt3dadd( -69.2899, -46.0227, -5.76451, 0.88 ) }
    dend_26 { pt3dadd( -70.0878, -45.7692, -5.70475, 0.88 ) }
    dend_26 { pt3dadd( -70.6928, -45.5765, -5.67268, 0.52 ) }
    dend_26 { pt3dadd( -71.6806, -45.2861, -5.64665, 0.52 ) }
    dend_26 { pt3dadd( -72.1839, -45.1556, -5.65268, 1.11 ) }
    dend_26 { pt3dadd( -72.8595, -44.9922, -5.6827, 1.4 ) }
    dend_26 { pt3dadd( -73.4484, -44.8567, -5.73327, 1.4 ) }
    dend_26 { pt3dadd( -73.9533, -44.7464, -5.79086, 1.69 ) }
    dend_26 { pt3dadd( -74.5458, -44.6173, -5.84468, 1.69 ) }
    dend_26 { pt3dadd( -75.6258, -44.3661, -5.92264, 0.44 ) }
    dend_26 { pt3dadd( -76.7903, -44.1011, -5.98172, 0.44 ) }
    dend_26 { pt3dadd( -77.9169, -43.8476, -6.01815, 0.44 ) }
    dend_26 { pt3dadd( -79.0019, -43.6033, -6.03207, 0.66 ) }
    dend_26 { pt3dadd( -80.0619, -43.3671, -6.01884, 1.11 ) }
    dend_26 { pt3dadd( -80.14, -43.3506, -6.0149, 1.11 ) }
    dend_26 { pt3dadd( -80.9953, -43.1813, -5.89513, 1.11 ) }
    dend_26 { pt3dadd( -81.1555, -43.1556, -5.8625, 1.4 ) }
    dend_26 { pt3dadd( -81.2316, -43.1433, -5.84106, 1.4 ) }
    dend_26 { pt3dadd( -81.6501, -43.0696, -5.72706, 1.4 ) }
    dend_26 { pt3dadd( -81.718, -43.0575, -5.71526, 1.4 ) }
    dend_26 { pt3dadd( -82.2902, -42.9447, -5.61519, 1.4 ) }
    dend_26 { pt3dadd( -82.4343, -42.9108, -5.59079, 1.4 ) }
    dend_26 { pt3dadd( -82.8641, -42.835, -5.53522, 0.96 ) }
    dend_26 { pt3dadd( -83.2852, -42.7528, -5.5003, 0.96 ) }
    dend_26 { pt3dadd( -83.9414, -42.5988, -5.43887, 0.44 ) }
    dend_26 { pt3dadd( -84.0191, -42.581, -5.43205, 0.44 ) }
    dend_26 { pt3dadd( -84.4986, -42.4866, -5.37556, 0.44 ) }
    dend_26 { pt3dadd( -85.204, -42.3669, -5.26745, 0.37 ) }
    dend_26 { pt3dadd( -86.2983, -42.2134, -5.07546, 0.37 ) }
    dend_26 { pt3dadd( -87.104, -42.1278, -4.92637, 0.37 ) }
    dend_26 { pt3dadd( -87.8252, -42.0759, -4.74993, 0.66 ) }
    dend_26 { pt3dadd( -88.6362, -42.0379, -4.52436, 1.25 ) }
    dend_26 { pt3dadd( -89.2016, -42.0393, -4.35558, 1.62 ) }
    dend_26 { pt3dadd( -89.8252, -42.0707, -4.14191, 1.62 ) }
    dend_26 { pt3dadd( -90.4421, -42.1516, -3.92149, 1.62 ) }
    dend_26 { pt3dadd( -91.5261, -42.3354, -3.54326, 0.96 ) }
    dend_26 { pt3dadd( -92.0014, -42.424, -3.38084, 0.66 ) }
    dend_26 { pt3dadd( -92.8407, -42.5838, -3.12955, 0.66 ) }
    dend_26 { pt3dadd( -93.5055, -42.7231, -2.93602, 0.96 ) }
    dend_26 { pt3dadd( -94.2103, -42.8769, -2.75675, 0.96 ) }
    dend_26 { pt3dadd( -94.2776, -42.8911, -2.74356, 0.96 ) }
    dend_26 { pt3dadd( -95.0311, -43.0353, -2.65813, 0.74 ) }
    dend_26 { pt3dadd( -95.8322, -43.1337, -2.58985, 0.59 ) }
    dend_26 { pt3dadd( -95.902, -43.1361, -2.5843, 0.59 ) }
    dend_26 { pt3dadd( -96.7132, -43.124, -2.53225, 0.59 ) }
    dend_26 { pt3dadd( -97.2246, -43.0996, -2.49167, 0.37 ) }
    dend_26 { pt3dadd( -97.3738, -43.0915, -2.47885, 0.37 ) }
    dend_26 { pt3dadd( -98.6658, -43.0016, -2.35701, 0.37 ) }
    dend_26 { pt3dadd( -99.5657, -42.9281, -2.26952, 0.66 ) }
    dend_26 { pt3dadd( -99.6452, -42.9223, -2.26196, 0.66 ) }
    dend_26 { pt3dadd( -100.452, -42.8929, -2.18978, 0.66 ) }
    dend_26 { pt3dadd( -101.143, -42.9485, -2.14047, 0.66 ) }
    dend_26 { pt3dadd( -101.222, -42.9628, -2.13611, 0.66 ) }
    dend_26 { pt3dadd( -101.678, -43.1458, -2.12258, 0.96 ) }
    dend_26 { pt3dadd( -102.007, -43.3207, -2.12258, 1.33 ) }
    dend_26 { pt3dadd( -102.68, -43.7422, -2.13415, 1.33 ) }
    dend_26 { pt3dadd( -103.686, -44.4621, -2.16477, 1.33 ) }
    dend_26 { pt3dadd( -103.766, -44.5214, -2.16776, 1.33 ) }
    dend_26 { pt3dadd( -104.711, -45.2372, -2.22899, 1.33 ) }
    dend_26 { pt3dadd( -104.829, -45.3284, -2.2389, 1.33 ) }
    dend_26 { pt3dadd( -105.702, -45.9437, -2.32043, 0.44 ) }
    dend_26 { pt3dadd( -105.769, -45.9875, -2.32731, 0.44 ) }
    dend_26 { pt3dadd( -107.186, -46.8324, -2.4307, 0.44 ) }
    dend_26 { pt3dadd( -107.939, -47.2303, -2.4586, 0.44 ) }
    dend_26 { pt3dadd( -108.003, -47.2587, -2.45892, 0.44 ) }
    dend_26 { pt3dadd( -109.052, -47.6785, -2.40092, 0.44 ) }
    dend_26 { pt3dadd( -109.118, -47.7006, -2.39242, 0.44 ) }
    dend_26 { pt3dadd( -109.748, -47.9033, -2.27396, 0.66 ) }
    dend_26 { pt3dadd( -110.503, -48.1027, -2.05651, 0.66 ) }
    dend_26 { pt3dadd( -110.576, -48.1231, -2.03139, 0.66 ) }
    dend_26 { pt3dadd( -111.14, -48.3026, -1.84167, 0.29 ) }
    dend_26 { pt3dadd( -111.204, -48.3253, -1.82206, 0.29 ) }
    dend_26 { pt3dadd( -111.94, -48.5871, -1.65691, 0.29 ) }
    dend_26 { pt3dadd( -112.146, -48.6593, -1.63189, 0.29 ) }
    dend_26 { pt3dadd( -112.543, -48.7996, -1.59531, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_26 { pt3dadd( -112.762, -48.8688, -1.58352, 0.96 ) }
    dend_26 { pt3dadd( -113.257, -49.0094, -1.57585, 1.25 ) }
    dend_26 { pt3dadd( -113.685, -49.1102, -1.56901, 1.25 ) }
    dend_26 { pt3dadd( -114.055, -49.1784, -1.56368, 1.25 ) }
    dend_26 { pt3dadd( -114.591, -49.2756, -1.55648, 0.88 ) }
    dend_26 { pt3dadd( -115.324, -49.4122, -1.54774, 0.37 ) }
    dend_26 { pt3dadd( -115.402, -49.4277, -1.5469, 0.37 ) }
    dend_26 { pt3dadd( -116.5, -49.6572, -1.53712, 0.37 ) }
    dend_26 { pt3dadd( -117.818, -49.9396, -1.52799, 0.37 ) }
    dend_26 { pt3dadd( -117.887, -49.9541, -1.52771, 0.37 ) }
    dend_26 { pt3dadd( -118.729, -50.1274, -1.53077, 0.37 ) }
    dend_26 { pt3dadd( -118.808, -50.1435, -1.53133, 0.37 ) }
    dend_26 { pt3dadd( -119.555, -50.2929, -1.53901, 0.37 ) }
    dend_26 { pt3dadd( -119.634, -50.3083, -1.54018, 0.74 ) }
    dend_26 { pt3dadd( -120.219, -50.4183, -1.54982, 1.4 ) }
    dend_26 { pt3dadd( -120.743, -50.4793, -1.55683, 1.69 ) }
    dend_26 { pt3dadd( -120.974, -50.4956, -1.55951, 1.84 ) }
    dend_26 { pt3dadd( -121.343, -50.5141, -1.56285, 1.99 ) }
    dend_26 { pt3dadd( -121.874, -50.5343, -1.56671, 1.99 ) }
    dend_26 { pt3dadd( -123.153, -50.5819, -1.57321, 0.66 ) }
    dend_26 { pt3dadd( -124.668, -50.604, -1.54234, 0.37 ) }
    dend_26 { pt3dadd( -124.958, -50.6012, -1.5309, 0.37 ) }
    dend_26 { pt3dadd( -126.137, -50.543, -1.46741, 0.37 ) }
    dend_26 { pt3dadd( -126.207, -50.5367, -1.46294, 0.37 ) }
    dend_26 { pt3dadd( -127.227, -50.3971, -1.38875, 0.37 ) }
    dend_26 { pt3dadd( -128.183, -50.2149, -1.33384, 0.37 ) }
    dend_26 { pt3dadd( -128.842, -50.0606, -1.33072, 0.88 ) }
    dend_26 { pt3dadd( -129.92, -49.752, -1.37443, 1.55 ) }
    dend_26 { pt3dadd( -130.852, -49.4512, -1.4738, 1.84 ) }
    dend_26 { pt3dadd( -131.507, -49.2406, -1.57676, 1.84 ) }
    dend_26 { pt3dadd( -132.388, -48.9642, -1.73925, 1.25 ) }
    dend_26 { pt3dadd( -133.542, -48.6312, -1.97592, 0.37 ) }
    dend_26 { pt3dadd( -134.696, -48.3198, -2.179, 0.29 ) }
    dend_26 { pt3dadd( -135.354, -48.1566, -2.27043, 0.15 ) }
    dend_26 { pt3dadd( -135.965, -48.0148, -2.32312, 0.15 ) }
    dend_26 { pt3dadd( -136.857, -47.8092, -2.32936, 0.15 ) }
    dend_26 { pt3dadd( -137.534, -47.6324, -2.22336, 0.66 ) }
    dend_26 { pt3dadd( -138.175, -47.4193, -2.0334, 1.11 ) }
    dend_26 { pt3dadd( -138.668, -47.2159, -1.8497, 1.11 ) }
    dend_26 { pt3dadd( -138.727, -47.1883, -1.82327, 1.11 ) }
    dend_26 { pt3dadd( -139.363, -46.8546, -1.51944, 1.11 ) }
    dend_26 { pt3dadd( -140.281, -46.3802, -1.09576, 0.29 ) }
    dend_26 { pt3dadd( -140.932, -46.0761, -0.759495, 0.29 ) }
    dend_26 { pt3dadd( -140.989, -46.0512, -0.728357, 0.29 ) }
    dend_26 { pt3dadd( -142.368, -45.5305, 0.0268279, 0.29 ) }
    dend_26 { pt3dadd( -142.419, -45.514, 0.0539565, 0.29 ) }
    dend_26 { pt3dadd( -143.138, -45.3369, 0.407516, 0.29 ) }
    dend_26 { pt3dadd( -144.141, -45.1543, 0.823199, 0.29 ) }
    dend_26 { pt3dadd( -144.28, -45.1334, 0.876084, 0.29 ) }
    dend_26 { pt3dadd( -145.208, -45.0326, 1.11065, 0.96 ) }
    dend_26 { pt3dadd( -145.586, -45.005, 1.14621, 1.69 ) }
    dend_26 { pt3dadd( -146.399, -44.9558, 1.14156, 2.21 ) }
    dend_26 { pt3dadd( -146.916, -44.9292, 1.09398, 2.21 ) }
    dend_26 { pt3dadd( -146.985, -44.9266, 1.08319, 2.21 ) }
    dend_26 { pt3dadd( -148.355, -44.8703, 0.790535, 0.29 ) }
    dend_26 { pt3dadd( -149.375, -44.8095, 0.533952, 0.29 ) }
    dend_26 { pt3dadd( -150.115, -44.7503, 0.332672, 1.03 ) }
    dend_26 { pt3dadd( -150.542, -44.7065, 0.212067, 1.03 ) }
    dend_26 { pt3dadd( -151.172, -44.6257, 0.0346413, 1.03 ) }
    dend_26 { pt3dadd( -152.244, -44.4635, -0.276404, 0.29 ) }
    dend_26 { pt3dadd( -153.511, -44.2204, -0.632203, 0.29 ) }
    dend_26 { pt3dadd( -153.705, -44.1827, -0.688071, 0.29 ) }
    dend_26 { pt3dadd( -154.064, -44.109, -0.780512, 0.66 ) }
    dend_26 { pt3dadd( -154.284, -44.0609, -0.833229, 0.66 ) }
    dend_26 { pt3dadd( -154.959, -43.9005, -1.004, 0.44 ) }
    dend_26 { pt3dadd( -155.89, -43.6684, -1.22353, 0.44 ) }
    dend_26 { pt3dadd( -155.965, -43.6483, -1.24446, 0.44 ) }
    dend_26 { pt3dadd( -156.748, -43.4386, -1.46247, 0.44 ) }
    dend_26 { pt3dadd( -156.937, -43.3878, -1.52236, 0.88 ) }
    dend_26 { pt3dadd( -157.983, -43.1242, -1.8436, 1.33 ) }
    dend_26 { pt3dadd( -158.226, -43.0623, -1.91529, 1.33 ) }
    dend_26 { pt3dadd( -158.604, -42.9781, -2.01576, 1.33 ) }
    dend_26 { pt3dadd( -159.384, -42.8245, -2.19237, 0.88 ) }
    dend_26 { pt3dadd( -160.187, -42.73, -2.32869, 0.29 ) }
    dend_26 { pt3dadd( -161.438, -42.6641, -2.46087, 0.29 ) }
    dend_26 { pt3dadd( -161.603, -42.673, -2.46371, 0.29 ) }
    dend_26 { pt3dadd( -162.401, -42.7712, -2.47795, 0.29 ) }
    dend_26 { pt3dadd( -162.506, -42.7895, -2.47904, 0.29 ) }
    dend_26 { pt3dadd( -163.421, -43.0032, -2.46913, 0.29 ) }
    dend_26 { pt3dadd( -163.498, -43.026, -2.46629, 0.29 ) }
    dend_26 { pt3dadd( -164.343, -43.3326, -2.47648, 0.29 ) }
    dend_26 { pt3dadd( -164.988, -43.538, -2.60964, 1.55 ) }
    dend_26 { pt3dadd( -165.357, -43.6091, -2.73428, 1.92 ) }
    dend_26 { pt3dadd( -165.422, -43.6129, -2.75787, 1.92 ) }
    dend_26 { pt3dadd( -165.754, -43.6107, -2.9074, 1.92 ) }
    dend_26 { pt3dadd( -165.826, -43.6086, -2.94216, 1.92 ) }
    dend_26 { pt3dadd( -167.309, -43.5241, -3.81128, 0.29 ) }
    dend_26 { pt3dadd( -168.434, -43.4614, -4.53238, 0.29 ) }
    dend_26 { pt3dadd( -169.561, -43.3939, -5.27076, 0.29 ) }
    dend_26 { pt3dadd( -170.734, -43.3133, -6.09021, 0.29 ) }
    dend_26 { pt3dadd( -170.923, -43.2982, -6.22667, 0.74 ) }
    dend_26 { pt3dadd( -172.177, -43.195, -7.10259, 0.74 ) }
    dend_26 { pt3dadd( -172.435, -43.1731, -7.27919, 0.37 ) }
    dend_26 { pt3dadd( -173.351, -43.1258, -7.91084, 0.37 ) }
    dend_26 { pt3dadd( -174.274, -43.0901, -8.49389, 0.96 ) }
    dend_26 { pt3dadd( -174.8, -43.0581, -8.77258, 0.96 ) }
    dend_26 { pt3dadd( -175.742, -42.9984, -9.20818, 0.29 ) }
    dend_26 { pt3dadd( -175.807, -42.994, -9.23268, 0.29 ) }
    dend_26 { pt3dadd( -176.391, -42.9481, -9.46247, 0.29 ) }
    dend_26 { pt3dadd( -177.028, -42.8771, -9.70869, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_26 { pt3dadd( -177.977, -42.7507, -10.0204, 1.62 ) }
    dend_26 { pt3dadd( -178.768, -42.6313, -10.2552, 1.62 ) }
    dend_26 { pt3dadd( -178.845, -42.6179, -10.2744, 1.62 ) }
    dend_26 { pt3dadd( -179.442, -42.4974, -10.3862, 0.29 ) }
    dend_26 { pt3dadd( -180.438, -42.2639, -10.4932, 0.29 ) }
    dend_26 { pt3dadd( -181.082, -42.12, -10.4942, 0.29 ) }
    dend_26 { pt3dadd( -181.74, -41.9791, -10.4476, 1.03 ) }
    dend_26 { pt3dadd( -182.194, -41.89, -10.3941, 1.03 ) }
    dend_26 { pt3dadd( -182.656, -41.8098, -10.325, 1.03 ) }
    dend_26 { pt3dadd( -183.469, -41.6866, -10.172, 0.66 ) }
    dend_26 { pt3dadd( -184.27, -41.5756, -10.02, 0.29 ) }
    dend_26 { pt3dadd( -184.776, -41.5081, -9.93933, 0.29 ) }
    dend_26 { pt3dadd( -185.566, -41.3773, -9.8545, 1.18 ) }
    dend_26 { pt3dadd( -185.928, -41.3132, -9.82598, 1.47 ) }
    dend_26 { pt3dadd( -186.007, -41.2983, -9.82173, 1.47 ) }
    dend_26 { pt3dadd( -186.586, -41.1813, -9.80816, 1.47 ) }
    dend_26 { pt3dadd( -187.527, -40.9812, -9.81979, 0.29 ) }
    dend_26 { pt3dadd( -188.938, -40.6775, -9.93769, 0.29 ) }
    dend_26 { pt3dadd( -189.326, -40.6032, -9.9912, 1.03 ) }
    dend_26 { pt3dadd( -189.394, -40.5913, -10.0017, 1.03 ) }
    dend_26 { pt3dadd( -189.964, -40.5112, -10.1319, 1.03 ) }
    dend_26 { pt3dadd( -190.527, -40.4497, -10.2953, 1.03 ) }
    dend_26 { pt3dadd( -191.622, -40.3933, -10.6682, 0.29 ) }
    dend_26 { pt3dadd( -192.651, -40.3966, -11.057, 0.29 ) }
    dend_26 { pt3dadd( -192.726, -40.3978, -11.0852, 0.29 ) }
    dend_26 { pt3dadd( -194.601, -40.4593, -11.8065, 0.29 ) }
    dend_26 { pt3dadd( -194.666, -40.4629, -11.8312, 0.29 ) }
    dend_26 { pt3dadd( -195.821, -40.5203, -12.274, 0.29 ) }
    dend_26 { pt3dadd( -195.877, -40.5236, -12.294, 0.29 ) }
    dend_26 { pt3dadd( -196.5, -40.557, -12.5391, 0.29 ) }
    dend_26 { pt3dadd( -196.575, -40.5589, -12.5678, 0.29 ) }
    dend_26 { pt3dadd( -197.879, -40.5342, -13.1148, 0.29 ) }
    dend_26 { pt3dadd( -198.841, -40.47, -13.541, 0.29 ) }
    dend_26 { pt3dadd( -199.536, -40.3955, -13.8684, 2.21 ) }
    dend_26 { pt3dadd( -200.568, -40.2743, -14.3573, 2.58 ) }
    dend_26 { pt3dadd( -201.1, -40.2054, -14.6166, 2.58 ) }
    dend_26 { pt3dadd( -202.476, -39.9611, -15.2561, 0.37 ) }
    dend_26 { pt3dadd( -203.406, -39.7477, -15.6729, 0.37 ) }
    dend_26 { pt3dadd( -203.478, -39.7302, -15.7021, 0.37 ) }
    dend_26 { pt3dadd( -203.955, -39.5899, -15.8758, 0.37 ) }
    dend_26 { pt3dadd( -204.019, -39.5697, -15.8938, 0.37 ) }
    dend_26 { pt3dadd( -205.382, -39.1286, -16.232, 0.37 ) }
    dend_26 { pt3dadd( -205.479, -39.0939, -16.2568, 0.37 ) }
    dend_26 { pt3dadd( -206.666, -38.6721, -16.6144, 0.37 ) }
    dend_26 { pt3dadd( -207.337, -38.4462, -16.8176, 0.88 ) }
    dend_26 { pt3dadd( -208.091, -38.2026, -17.0417, 0.88 ) }
    dend_26 { pt3dadd( -208.155, -38.1848, -17.0625, 0.88 ) }
    dend_26 { pt3dadd( -209.078, -37.9947, -17.3953, 0.37 ) }
    dend_26 { pt3dadd( -210.248, -37.7733, -17.8339, 0.37 ) }
    dend_26 { pt3dadd( -210.936, -37.6516, -18.0945, 1.03 ) }
    dend_26 { pt3dadd( -211.62, -37.5317, -18.3323, 1.03 ) }
    dend_26 { pt3dadd( -212.658, -37.3382, -18.6809, 0.37 ) }
    dend_26 { pt3dadd( -213.472, -37.1805, -18.9262, 0.37 ) }
    dend_26 { pt3dadd( -213.574, -37.1615, -18.9518, 0.37 ) }
    dend_26 { pt3dadd( -213.858, -37.1105, -19.0271, 0.37 ) }
    dend_26 { pt3dadd( -215.981, -36.7989, -19.5533, 0.37 ) }
    dend_26 { pt3dadd( -217.102, -36.6771, -19.818, 1.84 ) }
    dend_26 { pt3dadd( -217.762, -36.6169, -19.9576, 2.28 ) }
    dend_26 { pt3dadd( -218.706, -36.5752, -20.1412, 1.4 ) }
    dend_26 { pt3dadd( -219.713, -36.6156, -20.3226, 0.29 ) }
    dend_26 { pt3dadd( -220.828, -36.7353, -20.5104, 0.37 ) }
    dend_26 { pt3dadd( -221.778, -36.9108, -20.6566, 0.37 ) }
    dend_26 { pt3dadd( -221.846, -36.9253, -20.6651, 0.37 ) }
    dend_26 { pt3dadd( -224.047, -37.4341, -20.8789, 0.37 ) }
    dend_26 { pt3dadd( -225.638, -37.7622, -20.9731, 0.37 ) }
    dend_26 { pt3dadd( -226.442, -37.8979, -20.9855, 1.55 ) }
    dend_26 { pt3dadd( -226.912, -37.9591, -20.9761, 1.92 ) }
    dend_26 { pt3dadd( -227.424, -38.0093, -20.9474, 1.92 ) }
    dend_26 { pt3dadd( -228.261, -38.0644, -20.8869, 0.29 ) }
    dend_26 { pt3dadd( -229.992, -38.0723, -20.6555, 0.29 ) }
    dend_26 { pt3dadd( -231.367, -37.9848, -20.4067, 0.29 ) }
    dend_26 { pt3dadd( -231.752, -37.9559, -20.3262, 1.18 ) }
    dend_26 { pt3dadd( -231.828, -37.9496, -20.3039, 1.18 ) }
    dend_26 { pt3dadd( -232.31, -37.9195, -20.1392, 1.33 ) }
    dend_26 { pt3dadd( -233.203, -37.8833, -19.796, 1.33 ) }
    dend_26 { pt3dadd( -233.823, -37.8863, -19.5319, 0.29 ) }
    dend_26 { pt3dadd( -234.84, -37.9117, -19.1136, 0.29 ) }
    dend_26 { pt3dadd( -236.254, -37.9727, -18.5982, 0.29 ) }
    dend_26 { pt3dadd( -237.521, -38.0438, -18.1743, 0.29 ) }
    dend_26 { pt3dadd( -237.598, -38.0493, -18.1516, 0.29 ) }
    dend_26 { pt3dadd( -238.45, -38.1309, -17.9349, 0.29 ) }
    dend_26 { pt3dadd( -239.024, -38.199, -17.7962, 0.81 ) }
    dend_26 { pt3dadd( -239.457, -38.2586, -17.7061, 0.81 ) }
    dend_26 { pt3dadd( -239.535, -38.2716, -17.6959, 0.81 ) }
    dend_26 { pt3dadd( -239.817, -38.3229, -17.6544, 0.81 ) }
    dend_26 { pt3dadd( -240.77, -38.5089, -17.4987, 0.22 ) }
    dend_26 { pt3dadd( -241.994, -38.7624, -17.2843, 0.22 ) }
    dend_26 { pt3dadd( -242.095, -38.7847, -17.2625, 0.22 ) }
    dend_26 { pt3dadd( -243.007, -38.9921, -17.0468, 0.22 ) }
    dend_26 { pt3dadd( -243.425, -39.0883, -16.9476, 0.66 ) }
    dend_26 { pt3dadd( -243.914, -39.204, -16.8487, 0.81 ) }
    dend_26 { pt3dadd( -244.419, -39.3236, -16.7711, 0.81 ) }
    dend_26 { pt3dadd( -245.221, -39.5112, -16.6491, 0.29 ) }
    dend_26 { pt3dadd( -245.299, -39.5273, -16.6388, 0.29 ) }
    dend_26 { pt3dadd( -246.172, -39.6872, -16.5412, 0.29 ) }
    dend_26 { pt3dadd( -246.99, -39.8128, -16.4861, 0.96 ) }
    dend_26 { pt3dadd( -247.434, -39.862, -16.4795, 0.96 ) }
    dend_26 { pt3dadd( -247.504, -39.8679, -16.4807, 0.96 ) }
    dend_26 { pt3dadd( -248.18, -39.8965, -16.5136, 0.29 ) }
    dend_26 { pt3dadd( -248.25, -39.8976, -16.5162, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_26 { pt3dadd( -249.576, -39.9116, -16.6154, 0.29 ) }
    dend_26 { pt3dadd( -250.239, -39.9154, -16.6789, 1.4 ) }
    dend_26 { pt3dadd( -250.767, -39.9061, -16.7424, 1.77 ) }
    dend_26 { pt3dadd( -251.391, -39.8885, -16.8279, 1.77 ) }
    dend_26 { pt3dadd( -251.905, -39.8747, -16.9055, 1.77 ) }
    dend_26 { pt3dadd( -253.1, -39.8399, -17.0942, 0.29 ) }
    dend_26 { pt3dadd( -253.169, -39.8364, -17.1051, 0.29 ) }
    dend_26 { pt3dadd( -254.694, -39.7383, -17.3257, 0.29 ) }
    dend_26 { pt3dadd( -254.833, -39.7272, -17.3434, 0.29 ) }
    dend_26 { pt3dadd( -255.578, -39.6603, -17.4466, 0.29 ) }
    dend_26 { pt3dadd( -255.656, -39.649, -17.4566, 0.29 ) }
    dend_26 { pt3dadd( -256.833, -39.4246, -17.595, 0.81 ) }
    dend_26 { pt3dadd( -256.91, -39.4079, -17.6062, 0.81 ) }
    dend_26 { pt3dadd( -257.267, -39.3336, -17.6681, 1.11 ) }
    dend_26 { pt3dadd( -258.274, -39.1932, -17.8416, 0.15 ) }
    dend_26 { pt3dadd( -259.53, -39.0731, -18.0843, 0.15 ) }
    dend_26 { pt3dadd( -259.826, -39.0575, -18.1427, 1.03 ) }
    dend_26 { pt3dadd( -260.503, -39.0468, -18.2795, 1.47 ) }
    dend_26 { pt3dadd( -261.891, -39.0736, -18.6219, 0.22 ) }
    dend_26 { pt3dadd( -264.287, -39.2009, -19.2838, 0.22 ) }
    dend_26 { pt3dadd( -264.761, -39.2593, -19.3986, 1.03 ) }
    dend_26 { pt3dadd( -265.398, -39.3849, -19.5379, 1.03 ) }
    dend_26 { pt3dadd( -265.465, -39.4007, -19.5505, 1.03 ) }
    dend_26 { pt3dadd( -267.335, -39.9225, -19.8528, 0.22 ) }
    dend_26 { pt3dadd( -267.401, -39.9431, -19.861, 0.22 ) }
    dend_26 { pt3dadd( -269.569, -40.6849, -20.0822, 0.22 ) }
    dend_26 { pt3dadd( -270.776, -41.1163, -20.178, 0.22 ) }
    dend_26 { pt3dadd( -271.344, -41.3279, -20.2362, 1.33 ) }
    dend_26 { pt3dadd( -271.929, -41.551, -20.2995, 1.77 ) }
    dend_26 { pt3dadd( -272.217, -41.6634, -20.3271, 1.77 ) }
    dend_26 { pt3dadd( -273.1, -41.9938, -20.4707, 0.22 ) }
    dend_26 { pt3dadd( -274.54, -42.5061, -20.8706, 0.22 ) }
    dend_26 { pt3dadd( -275.427, -42.8103, -21.135, 0.59 ) }
    dend_26 { pt3dadd( -275.492, -42.8315, -21.1535, 0.59 ) }
    dend_26 { pt3dadd( -276.051, -43.0101, -21.3029, 0.59 ) }
    dend_26 { pt3dadd( -276.746, -43.2212, -21.4627, 0.22 ) }
    dend_26 { pt3dadd( -276.821, -43.2447, -21.4748, 0.22 ) }
    dend_26 { pt3dadd( -277.5, -43.4805, -21.5309, 0.22 ) }
    dend_26 { pt3dadd( -278.213, -43.7584, -21.5226, 1.03 ) }
    dend_26 { pt3dadd( -278.606, -43.9318, -21.51, 1.03 ) }
    dend_26 { pt3dadd( -278.669, -43.9625, -21.5069, 1.03 ) }
    dend_26 { pt3dadd( -278.956, -44.1144, -21.4715, 1.03 ) }
    dend_26 { pt3dadd( -279.62, -44.4628, -21.3618, 0.22 ) }
    dend_26 { pt3dadd( -279.681, -44.4939, -21.3497, 0.22 ) }
    dend_26 { pt3dadd( -280.439, -44.8724, -21.1975, 0.22 ) }
    dend_26 { pt3dadd( -281.581, -45.4215, -20.9778, 0.22 ) }
    dend_26 { pt3dadd( -282.333, -45.7377, -20.8581, 1.33 ) }
    dend_26 { pt3dadd( -282.834, -45.9245, -20.7902, 1.69 ) }
    dend_26 { pt3dadd( -283.394, -46.1, -20.7333, 1.69 ) }
    dend_26 { pt3dadd( -284.413, -46.3772, -20.6458, 0.22 ) }
    dend_26 { pt3dadd( -284.481, -46.3918, -20.6413, 0.22 ) }
    dend_26 { pt3dadd( -286.165, -46.6568, -20.578, 0.22 ) }
    dend_26 { pt3dadd( -286.235, -46.6638, -20.578, 0.22 ) }
    dend_26 { pt3dadd( -287.483, -46.7315, -20.578, 0.22 ) }
    dend_26 { pt3dadd( -287.563, -46.7264, -20.5762, 0.22 ) }
    dend_26 { pt3dadd( -287.879, -46.6662, -20.5628, 0.96 ) }
    dend_26 { pt3dadd( -288.232, -46.5566, -20.5432, 1.33 ) }
    dend_26 { pt3dadd( -288.778, -46.3107, -20.5052, 1.33 ) }
    dend_26 { pt3dadd( -288.839, -46.2773, -20.5011, 1.33 ) }
    dend_26 { pt3dadd( -290.446, -45.2781, -20.3947, 0.22 ) }
    dend_26 { pt3dadd( -290.704, -45.1072, -20.3589, 0.22 ) }
    dend_26 { pt3dadd( -291.76, -44.3543, -20.1631, 0.22 ) }
    dend_26 { pt3dadd( -292.051, -44.1309, -20.0999, 0.22 ) }
    dend_26 { pt3dadd( -293.321, -43.0836, -19.8312, 0.22 ) }
    dend_26 { pt3dadd( -293.401, -43.0144, -19.8148, 0.22 ) }
    dend_26 { pt3dadd( -294.654, -41.7921, -19.5766, 0.22 ) }
    dend_26 { pt3dadd( -295.448, -40.979, -19.4368, 1.55 ) }
    dend_26 { pt3dadd( -295.78, -40.6186, -19.3865, 2.06 ) }
    dend_26 { pt3dadd( -296.48, -39.8225, -19.305, 0.15 ) }
    dend_26 { pt3dadd( -296.545, -39.7476, -19.3014, 0.15 ) }
    dend_26 { pt3dadd( -297.612, -38.513, -19.3075, 0.15 ) }
    dend_26 { pt3dadd( -297.783, -38.3164, -19.3241, 0.15 ) }
    dend_26 { pt3dadd( -298.54, -37.4638, -19.3815, 0.15 ) }
    dend_26 { pt3dadd( -298.721, -37.2688, -19.3934, 0.15 ) }
    dend_26 { pt3dadd( -299.846, -36.0947, -19.4383, 0.15 ) }
    dend_26 { pt3dadd( -299.903, -36.039, -19.4416, 0.15 ) }
    dend_26 { pt3dadd( -300.027, -35.9294, -19.4513, 0.59 ) }
    dend_26 { pt3dadd( -300.461, -35.556, -19.5032, 0.59 ) }
    dend_26 { pt3dadd( -300.774, -35.2984, -19.5563, 0.15 ) }
    dend_26 { pt3dadd( -300.827, -35.2547, -19.5675, 0.15 ) }
    dend_26 { pt3dadd( -301.797, -34.4437, -19.8327, 0.15 ) }
    dend_26 { pt3dadd( -301.849, -34.4002, -19.8479, 0.15 ) }
    dend_26 { pt3dadd( -302.113, -34.1787, -19.9272, 0.74 ) }
    dend_26 { pt3dadd( -302.164, -34.1332, -19.9411, 0.74 ) }
    dend_26 { pt3dadd( -302.494, -33.806, -20.013, 0.74 ) }
    dend_26 { pt3dadd( -302.541, -33.7552, -20.0232, 0.74 ) }
    dend_26 { pt3dadd( -302.67, -33.5989, -20.0493, 0.22 ) }
    dend_26 { pt3dadd( -302.772, -33.4893, -20.062, 0.22 ) }
    dend_26 { pt3dadd( -303.458, -32.7852, -20.1054, 0.22 ) }
    dend_26 { pt3dadd( -303.613, -32.6317, -20.1351, 0.66 ) }
    dend_26 { pt3dadd( -303.665, -32.5868, -20.1502, 0.66 ) }
    dend_26 { pt3dadd( -303.928, -32.3955, -20.2318, 0.81 ) }
    dend_26 { pt3dadd( -304.376, -32.0994, -20.3741, 0.81 ) }
    dend_26 { pt3dadd( -304.434, -32.065, -20.3918, 0.81 ) }
    dend_26 { pt3dadd( -305.144, -31.7148, -20.6296, 0.22 ) }
    dend_26 { pt3dadd( -305.538, -31.5465, -20.7319, 0.22 ) }
    dend_26 { pt3dadd( -306.584, -31.1065, -20.995, 0.22 ) }
    dend_26 { pt3dadd( -306.725, -31.0489, -21.0281, 1.03 ) }
    dend_26 { pt3dadd( -307.423, -30.7728, -21.1241, 1.03 ) }
    dend_26 { pt3dadd( -309.723, -29.8816, -21.2689, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_26 { pt3dadd( -312.098, -29.0481, -21.2135, 0.22 ) }
    dend_26 { pt3dadd( -312.577, -28.8962, -21.1818, 1.25 ) }
    dend_26 { pt3dadd( -313.522, -28.6391, -21.0813, 1.47 ) }
    dend_26 { pt3dadd( -315.616, -28.1581, -20.7052, 0.22 ) }
    dend_26 { pt3dadd( -315.775, -28.136, -20.6629, 0.22 ) }
    dend_26 { pt3dadd( -318.258, -28.0448, -19.6983, 0.22 ) }
    dend_26 { pt3dadd( -318.532, -28.062, -19.5808, 1.18 ) }
    dend_26 { pt3dadd( -318.777, -28.0935, -19.4827, 1.18 ) }
    dend_26 { pt3dadd( -319.883, -28.3711, -19.0897, 0.22 ) }
    dend_26 { pt3dadd( -321.364, -28.8825, -18.7154, 0.22 ) }
    dend_26 { pt3dadd( -321.426, -28.9116, -18.6979, 0.22 ) }
    dend_26 { pt3dadd( -321.661, -29.08, -18.6256, 0.88 ) }
    dend_26 { pt3dadd( -322.101, -29.4149, -18.5092, 0.88 ) }
    dend_26 { pt3dadd( -323.324, -30.3735, -18.2595, 0.15 ) }
    dend_26 { pt3dadd( -323.585, -30.5905, -18.2332, 0.44 ) }
    dend_26 { pt3dadd( -323.861, -30.8275, -18.2137, 0.44 ) }
    dend_26 { pt3dadd( -325.153, -31.9036, -18.1666, 0.15 ) }
    dend_26 { pt3dadd( -325.208, -31.9464, -18.1669, 0.15 ) }
    dend_26 { pt3dadd( -325.771, -32.3701, -18.1967, 0.15 ) }
    dend_26 { pt3dadd( -326.175, -32.6413, -18.2575, 0.66 ) }
    dend_26 { pt3dadd( -326.475, -32.8437, -18.2973, 0.88 ) }
    dend_26 { pt3dadd( -326.541, -32.8872, -18.3082, 0.88 ) }
    dend_26 { pt3dadd( -326.966, -33.141, -18.4321, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.94068, 39.674, -0.921401, 1.33 ) }
    dend_6 { pt3dadd( 1.66213, 40.6813, -0.820504, 1.33 ) }
    dend_6 { pt3dadd( 1.34973, 41.887, -0.726395, 1.62 ) }
    dend_6 { pt3dadd( 1.12002, 42.7836, -0.61426, 1.62 ) }
    dend_6 { pt3dadd( 0.814812, 43.9643, -0.445544, 1.47 ) }
    dend_6 { pt3dadd( 0.542165, 45.0286, -0.286528, 1.47 ) }
    dend_6 { pt3dadd( -0.618096, 49.5462, 0.497949, 1.47 ) }
    dend_6 { pt3dadd( -0.966827, 50.9675, 0.766731, 1.47 ) }
    dend_6 { pt3dadd( -1.34297, 52.488, 1.08506, 1.47 ) }
    dend_6 { pt3dadd( -1.51471, 53.2247, 1.25908, 1.47 ) }
    dend_6 { pt3dadd( -1.69088, 53.9938, 1.45897, 1.47 ) }
    dend_6 { pt3dadd( -1.92269, 55.01, 1.78419, 1.47 ) }
    dend_6 { pt3dadd( -2.08872, 55.7409, 2.10486, 1.47 ) }
    dend_6 { pt3dadd( -2.10104, 55.7955, 2.12648, 1.47 ) }
    dend_6 { pt3dadd( -2.33985, 56.9192, 2.45409, 1.47 ) }
    dend_6 { pt3dadd( -2.35351, 56.9856, 2.47125, 1.47 ) }
    dend_6 { pt3dadd( -2.63099, 58.4073, 2.75743, 1.47 ) }
    dend_6 { pt3dadd( -2.7898, 59.3159, 2.82643, 1.47 ) }
    dend_6 { pt3dadd( -2.9521, 60.334, 2.83249, 1.47 ) }
    dend_6 { pt3dadd( -3.09701, 61.3496, 2.73076, 1.62 ) }
    dend_6 { pt3dadd( -3.10726, 61.4275, 2.71567, 1.62 ) }
    dend_6 { pt3dadd( -3.23424, 62.4122, 2.48194, 1.62 ) }
    dend_6 { pt3dadd( -3.42206, 63.8856, 2.07224, 1.62 ) }
    dend_6 { pt3dadd( -3.55097, 64.7822, 1.77772, 1.62 ) }
    dend_6 { pt3dadd( -3.75234, 66.0281, 1.35666, 1.62 ) }
    dend_6 { pt3dadd( -3.8904, 66.8125, 1.0918, 1.62 ) }
    dend_6 { pt3dadd( -4.05611, 67.6568, 0.836725, 1.69 ) }
    dend_6 { pt3dadd( -4.24284, 68.516, 0.606169, 1.69 ) }
    dend_6 { pt3dadd( -4.60169, 70.013, 0.304254, 1.84 ) }
    dend_6 { pt3dadd( -4.90167, 71.2012, 0.102337, 1.84 ) }
    dend_6 { pt3dadd( -4.92112, 71.278, 0.0910211, 1.84 ) }
    dend_6 { pt3dadd( -5.31582, 72.8679, -0.173333, 1.84 ) }
    dend_6 { pt3dadd( -5.34776, 73.0124, -0.197665, 1.84 ) }
    dend_6 { pt3dadd( -5.56018, 74.2145, -0.466761, 1.84 ) }
    dend_6 { pt3dadd( -5.56879, 74.282, -0.48309, 1.84 ) }
    dend_6 { pt3dadd( -5.69365, 75.57, -0.830474, 1.84 ) }
    dend_6 { pt3dadd( -5.69722, 75.6377, -0.84782, 1.84 ) }
    dend_6 { pt3dadd( -5.71942, 77.136, -1.20967, 1.84 ) }
    dend_6 { pt3dadd( -5.68497, 79.2561, -1.6663, 1.84 ) }
    dend_6 { pt3dadd( -5.63665, 80.2524, -1.89054, 1.84 ) }
    dend_6 { pt3dadd( -5.56233, 81.3246, -2.12481, 2.06 ) }
    dend_6 { pt3dadd( -5.40382, 83.2629, -2.50832, 2.06 ) }
    dend_6 { pt3dadd( -5.30774, 84.3389, -2.71551, 2.43 ) }
    dend_6 { pt3dadd( -5.20897, 85.2684, -2.88181, 2.65 ) }
    dend_6 { pt3dadd( -5.06969, 86.3058, -2.99997, 2.65 ) }
    dend_6 { pt3dadd( -4.96504, 86.9865, -3.09842, 2.5 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.94068, 39.674, -0.921401, 1.25 ) }
    dend_3 { pt3dadd( 2.77339, 40.4972, -0.972268, 1.25 ) }
    dend_3 { pt3dadd( 3.89106, 41.5897, -1.06907, 1.11 ) }
    dend_3 { pt3dadd( 4.78662, 42.4839, -1.15233, 1.03 ) }
    dend_3 { pt3dadd( 5.52127, 43.2324, -1.25632, 1.25 ) }
    dend_3 { pt3dadd( 6.24448, 43.986, -1.37482, 1.33 ) }
    dend_3 { pt3dadd( 6.76135, 44.547, -1.48555, 1.33 ) }
    dend_3 { pt3dadd( 7.61251, 45.5676, -1.72675, 1.33 ) }
    dend_3 { pt3dadd( 8.43842, 46.5978, -2.04414, 1.33 ) }
    dend_3 { pt3dadd( 9.1122, 47.4921, -2.36559, 0.88 ) }
    dend_3 { pt3dadd( 9.59551, 48.1975, -2.63403, 0.88 ) }
    dend_3 { pt3dadd( 10.0929, 48.9762, -2.94007, 0.88 ) }
    dend_3 { pt3dadd( 10.5592, 49.7746, -3.27618, 0.88 ) }
    dend_3 { pt3dadd( 10.9866, 50.5937, -3.66119, 1.11 ) }
    dend_3 { pt3dadd( 11.0155, 50.6514, -3.68829, 1.11 ) }
    dend_3 { pt3dadd( 11.4239, 51.4764, -4.04811, 1.11 ) }
    dend_3 { pt3dadd( 11.4672, 51.559, -4.08142, 1.11 ) }
    dend_3 { pt3dadd( 12.0616, 52.5849, -4.44022, 1.4 ) }
    dend_3 { pt3dadd( 12.3969, 53.1401, -4.62619, 1.4 ) }
    dend_3 { pt3dadd( 12.9449, 53.992, -4.87667, 0.96 ) }
    dend_3 { pt3dadd( 13.3604, 54.6048, -5.04537, 0.81 ) }
    dend_3 { pt3dadd( 13.9915, 55.4764, -5.26443, 0.81 ) }
    dend_3 { pt3dadd( 14.4991, 56.1437, -5.39713, 1.11 ) }
    dend_3 { pt3dadd( 14.5434, 56.1974, -5.40366, 1.11 ) }
    dend_3 { pt3dadd( 14.9332, 56.6445, -5.45584, 1.33 ) }
    dend_3 { pt3dadd( 15.3809, 57.1554, -5.50593, 1.84 ) }
    dend_3 { pt3dadd( 15.6873, 57.5083, -5.54021, 1.99 ) }
    dend_3 { pt3dadd( 16.1624, 58.0667, -5.60497, 1.99 ) }
    dend_3 { pt3dadd( 16.5943, 58.5856, -5.69578, 1.62 ) }
    dend_3 { pt3dadd( 17.1494, 59.2898, -5.84196, 1.33 ) }
    dend_3 { pt3dadd( 17.4973, 59.7551, -5.95403, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_3 { pt3dadd( 17.9378, 60.3676, -6.15685, 0.66 ) }
    dend_3 { pt3dadd( 18.3645, 61.0232, -6.44734, 0.66 ) }
    dend_3 { pt3dadd( 18.8483, 61.8339, -6.88501, 0.66 ) }
    dend_3 { pt3dadd( 19.1966, 62.4895, -7.28298, 0.59 ) }
    dend_3 { pt3dadd( 19.2221, 62.5427, -7.32055, 0.59 ) }
    dend_3 { pt3dadd( 19.5839, 63.3744, -7.96811, 0.59 ) }
    dend_3 { pt3dadd( 19.9075, 64.2389, -8.65175, 0.81 ) }
    dend_3 { pt3dadd( 19.9244, 64.2916, -8.6946, 0.81 ) }
    dend_3 { pt3dadd( 20.0275, 64.6406, -8.95461, 1.03 ) }
    dend_3 { pt3dadd( 20.3111, 65.5491, -9.60543, 1.03 ) }
    dend_3 { pt3dadd( 20.3308, 65.6078, -9.63808, 1.03 ) }
    dend_3 { pt3dadd( 20.5401, 66.218, -9.83575, 1.25 ) }
    dend_3 { pt3dadd( 20.5666, 66.2922, -9.84956, 1.25 ) }
    dend_3 { pt3dadd( 20.7899, 66.9357, -9.99124, 1.4 ) }
    dend_3 { pt3dadd( 20.8115, 67.0007, -10.0056, 1.4 ) }
    dend_3 { pt3dadd( 21.0411, 67.7418, -10.1503, 1.4 ) }
    dend_3 { pt3dadd( 21.2831, 68.57, -10.3727, 1.55 ) }
    dend_3 { pt3dadd( 21.4762, 69.2768, -10.594, 1.62 ) }
    dend_3 { pt3dadd( 21.7391, 70.3376, -10.9318, 1.62 ) }
    dend_3 { pt3dadd( 21.863, 70.8807, -11.1079, 1.25 ) }
    dend_3 { pt3dadd( 22.0077, 71.5123, -11.3033, 0.96 ) }
    dend_3 { pt3dadd( 22.2276, 72.4919, -11.6012, 0.96 ) }
    dend_3 { pt3dadd( 22.3843, 73.2, -11.7726, 0.74 ) }
    dend_3 { pt3dadd( 22.6061, 74.194, -11.9328, 0.52 ) }
    dend_3 { pt3dadd( 22.7693, 74.9218, -11.9721, 0.37 ) }
    dend_3 { pt3dadd( 22.9557, 75.7531, -11.997, 0.37 ) }
    dend_3 { pt3dadd( 22.9766, 75.8498, -11.9989, 0.37 ) }
    dend_3 { pt3dadd( 23.1568, 76.8542, -12.0232, 0.37 ) }
    dend_3 { pt3dadd( 23.1953, 77.1254, -12.0431, 0.59 ) }
    dend_3 { pt3dadd( 23.2764, 77.8509, -12.1226, 1.33 ) }
    dend_3 { pt3dadd( 23.3504, 78.6681, -12.2331, 1.84 ) }
    dend_3 { pt3dadd( 23.4292, 79.7414, -12.4302, 1.84 ) }
    dend_3 { pt3dadd( 23.4983, 80.8339, -12.6657, 1.84 ) }
    dend_3 { pt3dadd( 23.553, 81.8333, -12.9129, 1.62 ) }
    dend_3 { pt3dadd( 23.5806, 82.4005, -13.0498, 1.33 ) }
    dend_3 { pt3dadd( 23.587, 82.5099, -13.0781, 1.33 ) }
    dend_3 { pt3dadd( 23.6335, 83.1656, -13.2409, 1.33 ) }
    dend_3 { pt3dadd( 23.6948, 84.0318, -13.4478, 0.81 ) }
    dend_3 { pt3dadd( 23.7435, 84.7492, -13.6435, 0.81 ) }
    dend_3 { pt3dadd( 23.7465, 84.8163, -13.6632, 0.81 ) }
    dend_3 { pt3dadd( 23.7762, 85.831, -13.9525, 0.59 ) }
    dend_3 { pt3dadd( 23.7859, 86.5319, -14.1565, 0.59 ) }
    dend_3 { pt3dadd( 23.785, 87.7277, -14.492, 0.59 ) }
    dend_3 { pt3dadd( 23.7717, 88.6438, -14.7823, 1.11 ) }
    dend_3 { pt3dadd( 23.7441, 89.4064, -15.0226, 1.4 ) }
    dend_3 { pt3dadd( 23.7148, 90.0388, -15.2089, 1.77 ) }
    dend_3 { pt3dadd( 23.6617, 90.9924, -15.4804, 1.92 ) }
    dend_3 { pt3dadd( 23.6267, 91.762, -15.7071, 1.33 ) }
    dend_3 { pt3dadd( 23.5922, 92.7222, -15.9925, 0.74 ) }
    dend_3 { pt3dadd( 23.5612, 93.9107, -16.3516, 0.74 ) }
    dend_3 { pt3dadd( 23.5548, 95.0372, -16.7152, 0.74 ) }
    dend_3 { pt3dadd( 23.5668, 96.0576, -17.0558, 0.44 ) }
    dend_3 { pt3dadd( 23.5844, 96.7205, -17.2664, 0.44 ) }
    dend_3 { pt3dadd( 23.5871, 96.7873, -17.2869, 0.44 ) }
    dend_3 { pt3dadd( 23.6406, 97.7567, -17.5446, 0.44 ) }
    dend_3 { pt3dadd( 23.693, 98.6096, -17.7595, 0.44 ) }
    dend_3 { pt3dadd( 23.7457, 99.4494, -17.9412, 0.81 ) }
    dend_3 { pt3dadd( 23.7999, 100.318, -18.0958, 1.11 ) }
    dend_3 { pt3dadd( 23.8326, 101.112, -18.2205, 1.77 ) }
    dend_3 { pt3dadd( 23.8632, 102.057, -18.3371, 1.77 ) }
    dend_3 { pt3dadd( 23.8781, 102.755, -18.3895, 1.77 ) }
    dend_3 { pt3dadd( 23.8811, 103.199, -18.4171, 1.33 ) }
    dend_3 { pt3dadd( 23.8874, 103.731, -18.4454, 1.11 ) }
    dend_3 { pt3dadd( 23.8969, 104.502, -18.4888, 0.66 ) }
    dend_3 { pt3dadd( 23.9058, 105.313, -18.5351, 0.52 ) }
    dend_3 { pt3dadd( 23.9161, 106.192, -18.5832, 0.52 ) }
    dend_3 { pt3dadd( 23.9332, 107.367, -18.6402, 0.88 ) }
    dend_3 { pt3dadd( 23.9405, 108.02, -18.6813, 1.62 ) }
    dend_3 { pt3dadd( 23.9521, 109.047, -18.7531, 2.21 ) }
    dend_3 { pt3dadd( 23.956, 109.347, -18.7763, 2.65 ) }
    dend_3 { pt3dadd( 23.9595, 109.925, -18.825, 2.65 ) }
    dend_3 { pt3dadd( 23.961, 110.653, -18.8838, 2.36 ) }
    dend_3 { pt3dadd( 23.9508, 111.797, -18.9698, 1.18 ) }
    dend_3 { pt3dadd( 23.9419, 112.525, -19.0235, 0.88 ) }
    dend_3 { pt3dadd( 23.9442, 113.406, -19.0843, 0.66 ) }
    dend_3 { pt3dadd( 23.9589, 114.496, -19.1517, 0.66 ) }
    dend_3 { pt3dadd( 24.0151, 116.103, -19.2317, 0.66 ) }
    dend_3 { pt3dadd( 24.0406, 116.498, -19.2374, 0.29 ) }
    dend_3 { pt3dadd( 24.0524, 116.637, -19.2331, 0.29 ) }
    dend_3 { pt3dadd( 24.1226, 117.381, -19.1996, 0.29 ) }
    dend_3 { pt3dadd( 24.131, 117.46, -19.1949, 0.29 ) }
    dend_3 { pt3dadd( 24.2179, 118.268, -19.1386, 0.29 ) }
    dend_3 { pt3dadd( 24.3189, 119.208, -19.07, 0.29 ) }
    dend_3 { pt3dadd( 24.3612, 119.697, -19.0382, 0.81 ) }
    dend_3 { pt3dadd( 24.401, 120.426, -19.013, 1.11 ) }
    dend_3 { pt3dadd( 24.4179, 121.089, -18.9984, 1.47 ) }
    dend_3 { pt3dadd( 24.427, 121.673, -18.9934, 1.84 ) }
    dend_3 { pt3dadd( 24.4261, 122.407, -19.0083, 1.84 ) }
    dend_3 { pt3dadd( 24.4231, 123.141, -19.0435, 1.84 ) }
    dend_3 { pt3dadd( 24.4341, 124.076, -19.0894, 0.74 ) }
    dend_3 { pt3dadd( 24.441, 124.403, -19.1118, 0.74 ) }
    dend_3 { pt3dadd( 24.4616, 124.911, -19.1517, 0.74 ) }
    dend_3 { pt3dadd( 24.5186, 125.741, -19.2208, 0.52 ) }
    dend_3 { pt3dadd( 24.6333, 126.973, -19.3267, 0.44 ) }
    dend_3 { pt3dadd( 24.8039, 128.356, -19.4444, 0.44 ) }
    dend_3 { pt3dadd( 24.9672, 129.435, -19.5317, 0.81 ) }
    dend_3 { pt3dadd( 25.1055, 130.206, -19.6003, 1.18 ) }
    dend_3 { pt3dadd( 25.2152, 130.725, -19.6445, 1.33 ) }
    dend_3 { pt3dadd( 25.2345, 130.802, -19.6498, 1.33 ) }
    dend_3 { pt3dadd( 25.3226, 131.11, -19.6879, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_3 { pt3dadd( 25.343, 131.186, -19.7009, 1.33 ) }
    dend_3 { pt3dadd( 25.4532, 131.695, -19.7893, 0.88 ) }
    dend_3 { pt3dadd( 25.5478, 132.196, -19.8747, 0.66 ) }
    dend_3 { pt3dadd( 25.7201, 133.193, -20.0618, 0.52 ) }
    dend_3 { pt3dadd( 25.8729, 134.037, -20.2465, 0.29 ) }
    dend_3 { pt3dadd( 26.0066, 134.768, -20.4175, 0.29 ) }
    dend_3 { pt3dadd( 26.239, 136.056, -20.7226, 0.29 ) }
    dend_3 { pt3dadd( 26.4372, 137.166, -20.9824, 0.29 ) }
    dend_3 { pt3dadd( 26.5931, 138.047, -21.1797, 1.18 ) }
    dend_3 { pt3dadd( 26.7896, 139.171, -21.4061, 2.21 ) }
    dend_3 { pt3dadd( 26.8626, 139.605, -21.4745, 3.02 ) }
    dend_3 { pt3dadd( 26.9743, 140.248, -21.5726, 3.02 ) }
    dend_3 { pt3dadd( 27.0784, 140.968, -21.6677, 2.43 ) }
    dend_3 { pt3dadd( 27.1323, 141.403, -21.705, 1.77 ) }
    dend_3 { pt3dadd( 27.1964, 142.064, -21.7458, 1.33 ) }
    dend_3 { pt3dadd( 27.2319, 142.575, -21.7701, 0.88 ) }
    dend_3 { pt3dadd( 27.2551, 142.97, -21.7933, 0.37 ) }
    dend_3 { pt3dadd( 27.2993, 143.836, -21.8513, 0.37 ) }
    dend_3 { pt3dadd( 27.3365, 144.743, -21.9157, 0.37 ) }
    dend_3 { pt3dadd( 27.3808, 146.107, -22.0213, 0.22 ) }
    dend_3 { pt3dadd( 27.3909, 146.776, -22.0757, 0.81 ) }
    dend_3 { pt3dadd( 27.4019, 147.652, -22.1492, 1.25 ) }
    dend_3 { pt3dadd( 27.4052, 148.161, -22.189, 1.62 ) }
    dend_3 { pt3dadd( 27.409, 148.819, -22.2326, 1.62 ) }
    dend_3 { pt3dadd( 27.4108, 149.558, -22.2654, 0.88 ) }
    dend_3 { pt3dadd( 27.4234, 150.09, -22.2698, 0.52 ) }
    dend_3 { pt3dadd( 27.4342, 150.416, -22.2748, 0.59 ) }
    dend_3 { pt3dadd( 27.4687, 151.215, -22.2839, 0.37 ) }
    dend_3 { pt3dadd( 27.4878, 151.589, -22.298, 0.81 ) }
    dend_3 { pt3dadd( 27.5198, 152.097, -22.3315, 0.81 ) }
    dend_3 { pt3dadd( 27.5277, 152.203, -22.3377, 0.81 ) }
    dend_3 { pt3dadd( 27.5523, 152.572, -22.3559, 0.81 ) }
    dend_3 { pt3dadd( 27.556, 152.642, -22.3581, 0.81 ) }
    dend_3 { pt3dadd( 27.5874, 153.216, -22.3732, 0.44 ) }
    dend_3 { pt3dadd( 27.6324, 153.947, -22.3597, 0.44 ) }
    dend_3 { pt3dadd( 27.6922, 154.719, -22.3209, 0.22 ) }
    dend_3 { pt3dadd( 27.8244, 156.169, -22.2176, 0.22 ) }
    dend_3 { pt3dadd( 28.0646, 158.273, -22.0305, 0.22 ) }
    dend_3 { pt3dadd( 28.0743, 158.342, -22.0232, 0.22 ) }
    dend_3 { pt3dadd( 28.2217, 159.199, -21.914, 0.96 ) }
    dend_3 { pt3dadd( 28.4062, 160.087, -21.7755, 1.69 ) }
    dend_3 { pt3dadd( 28.5659, 160.735, -21.6623, 2.28 ) }
    dend_3 { pt3dadd( 28.7142, 161.231, -21.5407, 2.5 ) }
    dend_3 { pt3dadd( 28.856, 161.653, -21.4148, 2.36 ) }
    dend_3 { pt3dadd( 28.9788, 162.019, -21.3146, 1.92 ) }
    dend_3 { pt3dadd( 29.2928, 162.957, -21.0839, 1.62 ) }
    dend_3 { pt3dadd( 29.6313, 163.98, -20.8225, 0.37 ) }
    dend_3 { pt3dadd( 29.9141, 164.842, -20.6079, 0.29 ) }
    dend_3 { pt3dadd( 29.9379, 164.916, -20.5902, 0.29 ) }
    dend_3 { pt3dadd( 30.4762, 166.574, -20.2252, 0.29 ) }
    dend_3 { pt3dadd( 31.0484, 168.271, -19.8974, 0.29 ) }
    dend_3 { pt3dadd( 31.0712, 168.336, -19.8878, 0.29 ) }
    dend_3 { pt3dadd( 31.2821, 168.925, -19.8139, 1.11 ) }
    dend_3 { pt3dadd( 31.305, 168.991, -19.8085, 1.11 ) }
    dend_3 { pt3dadd( 31.5425, 169.71, -19.7516, 1.47 ) }
    dend_3 { pt3dadd( 31.5588, 169.767, -19.7477, 1.47 ) }
    dend_3 { pt3dadd( 31.7046, 170.488, -19.7357, 1.55 ) }
    dend_3 { pt3dadd( 31.7129, 170.548, -19.7348, 1.55 ) }
    dend_3 { pt3dadd( 31.7425, 170.836, -19.7309, 1.55 ) }
    dend_3 { pt3dadd( 31.7468, 170.896, -19.7285, 1.55 ) }
    dend_3 { pt3dadd( 31.7766, 171.694, -19.6812, 0.66 ) }
    dend_3 { pt3dadd( 31.7996, 172.435, -19.6254, 0.37 ) }
    dend_3 { pt3dadd( 31.818, 173.381, -19.5436, 0.29 ) }
    dend_3 { pt3dadd( 31.818, 173.461, -19.5362, 0.29 ) }
    dend_3 { pt3dadd( 31.8091, 173.941, -19.4921, 0.44 ) }
    dend_3 { pt3dadd( 31.8007, 174.09, -19.4793, 0.44 ) }
    dend_3 { pt3dadd( 31.7508, 174.595, -19.4321, 0.44 ) }
    dend_3 { pt3dadd( 31.7395, 174.664, -19.4259, 0.44 ) }
    dend_3 { pt3dadd( 31.6156, 175.177, -19.3659, 1.03 ) }
    dend_3 { pt3dadd( 31.4409, 175.809, -19.2876, 1.03 ) }
    dend_3 { pt3dadd( 31.3182, 176.21, -19.2449, 0.74 ) }
    dend_3 { pt3dadd( 31.2404, 176.476, -19.2244, 0.37 ) }
    dend_3 { pt3dadd( 31.1469, 176.827, -19.2045, 0.37 ) }
    dend_3 { pt3dadd( 30.9548, 177.651, -19.1699, 0.22 ) }
    dend_3 { pt3dadd( 30.9406, 177.72, -19.1678, 0.22 ) }
    dend_3 { pt3dadd( 30.6644, 179.297, -19.1398, 0.22 ) }
    dend_3 { pt3dadd( 30.5387, 180.271, -19.1352, 1.03 ) }
    dend_3 { pt3dadd( 30.4637, 181.148, -19.1426, 1.62 ) }
    dend_3 { pt3dadd( 30.4445, 181.514, -19.139, 1.92 ) }
    dend_3 { pt3dadd( 30.4326, 181.954, -19.1279, 1.84 ) }
    dend_3 { pt3dadd( 30.4247, 182.546, -19.0759, 1.47 ) }
    dend_3 { pt3dadd( 30.4244, 183.411, -18.9537, 0.37 ) }
    dend_3 { pt3dadd( 30.4162, 184.779, -18.7105, 0.29 ) }
    dend_3 { pt3dadd( 30.404, 186.182, -18.4387, 0.29 ) }
    dend_3 { pt3dadd( 30.3865, 187.403, -18.1949, 0.29 ) }
    dend_3 { pt3dadd( 30.3725, 188.521, -17.9338, 1.03 ) }
    dend_3 { pt3dadd( 30.3628, 189.097, -17.7881, 1.77 ) }
    dend_3 { pt3dadd( 30.3476, 189.66, -17.649, 1.77 ) }
    dend_3 { pt3dadd( 30.3304, 190.167, -17.5152, 1.4 ) }
    dend_3 { pt3dadd( 30.3026, 190.876, -17.3327, 0.66 ) }
    dend_3 { pt3dadd( 30.2569, 191.773, -17.0976, 0.22 ) }
    dend_3 { pt3dadd( 30.1697, 193.271, -16.7249, 0.22 ) }
    dend_3 { pt3dadd( 30.0649, 194.955, -16.2121, 0.22 ) }
    dend_3 { pt3dadd( 30.0042, 195.902, -15.8887, 0.81 ) }
    dend_3 { pt3dadd( 29.9759, 196.324, -15.7376, 1.18 ) }
    dend_3 { pt3dadd( 29.9246, 197.067, -15.4641, 1.77 ) }
    dend_3 { pt3dadd( 29.8855, 197.62, -15.2631, 1.77 ) }
    dend_3 { pt3dadd( 29.7854, 198.996, -14.7374, 0.96 ) }
    dend_3 { pt3dadd( 29.7591, 199.35, -14.6067, 0.52 ) }
    dend_3 { pt3dadd( 29.6798, 200.263, -14.3425, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_3 { pt3dadd( 29.6731, 200.331, -14.3263, 0.29 ) }
    dend_3 { pt3dadd( 29.5637, 201.308, -14.1492, 0.15 ) }
    dend_3 { pt3dadd( 29.3871, 202.685, -13.9865, 0.15 ) }
    dend_3 { pt3dadd( 29.3773, 202.754, -13.9845, 0.15 ) }
    dend_3 { pt3dadd( 29.2869, 203.382, -13.9721, 0.81 ) }
    dend_3 { pt3dadd( 29.2152, 203.887, -13.9687, 1.18 ) }
    dend_3 { pt3dadd( 29.2055, 203.956, -13.9695, 1.18 ) }
    dend_3 { pt3dadd( 29.1174, 204.558, -13.9977, 1.18 ) }
    dend_3 { pt3dadd( 29.109, 204.628, -13.9966, 1.18 ) }
    dend_3 { pt3dadd( 29.0368, 205.286, -13.944, 0.59 ) }
    dend_3 { pt3dadd( 29.0238, 205.443, -13.9068, 0.74 ) }
    dend_3 { pt3dadd( 28.9987, 205.887, -13.7822, 0.74 ) }
    dend_3 { pt3dadd( 28.9957, 205.954, -13.7651, 0.74 ) }
    dend_3 { pt3dadd( 28.9673, 206.7, -13.5935, 0.29 ) }
    dend_3 { pt3dadd( 28.9011, 208.35, -13.2482, 0.29 ) }
    dend_3 { pt3dadd( 28.8503, 209.621, -13.0061, 0.29 ) }
    dend_3 { pt3dadd( 28.7982, 210.914, -12.79, 0.29 ) }
    dend_3 { pt3dadd( 28.7667, 211.761, -12.6724, 1.18 ) }
    dend_3 { pt3dadd( 28.7372, 212.419, -12.5867, 1.84 ) }
    dend_3 { pt3dadd( 28.6991, 212.86, -12.5412, 1.84 ) }
    dend_3 { pt3dadd( 28.6314, 213.364, -12.5024, 1.47 ) }
    dend_3 { pt3dadd( 28.5385, 213.888, -12.4854, 1.11 ) }
    dend_3 { pt3dadd( 28.391, 214.533, -12.4439, 0.44 ) }
    dend_3 { pt3dadd( 28.2109, 215.252, -12.3761, 0.22 ) }
    dend_3 { pt3dadd( 27.8789, 216.483, -12.27, 0.22 ) }
    dend_3 { pt3dadd( 27.7207, 217.031, -12.2278, 0.29 ) }
    dend_3 { pt3dadd( 27.6544, 217.252, -12.2144, 0.29 ) }
    dend_3 { pt3dadd( 27.4263, 218.003, -12.1864, 0.29 ) }
    dend_3 { pt3dadd( 27.3832, 218.147, -12.1858, 0.29 ) }
    dend_3 { pt3dadd( 27.1731, 218.949, -12.2169, 0.29 ) }
    dend_3 { pt3dadd( 27.1556, 219.027, -12.2185, 0.29 ) }
    dend_3 { pt3dadd( 27.0288, 219.607, -12.2249, 0.88 ) }
    dend_3 { pt3dadd( 26.9227, 220.128, -12.235, 1.55 ) }
    dend_3 { pt3dadd( 26.8172, 220.713, -12.2501, 1.55 ) }
    dend_3 { pt3dadd( 26.752, 221.138, -12.2618, 1.18 ) }
    dend_3 { pt3dadd( 26.6766, 221.762, -12.2773, 0.74 ) }
    dend_3 { pt3dadd( 26.6167, 222.285, -12.3012, 0.44 ) }
    dend_3 { pt3dadd( 26.5352, 223.013, -12.3433, 0.29 ) }
    dend_3 { pt3dadd( 26.5279, 223.083, -12.3477, 0.29 ) }
    dend_3 { pt3dadd( 26.3781, 224.544, -12.4466, 0.29 ) }
    dend_3 { pt3dadd( 26.1838, 226.355, -12.5716, 0.29 ) }
    dend_3 { pt3dadd( 26.0872, 227.201, -12.6282, 1.11 ) }
    dend_3 { pt3dadd( 26.0113, 227.779, -12.6763, 1.84 ) }
    dend_3 { pt3dadd( 25.9133, 228.428, -12.7418, 2.21 ) }
    dend_3 { pt3dadd( 25.902, 228.496, -12.7511, 2.21 ) }
    dend_3 { pt3dadd( 25.8128, 228.973, -12.8321, 2.21 ) }
    dend_3 { pt3dadd( 25.6576, 229.775, -12.9803, 1.03 ) }
    dend_3 { pt3dadd( 25.5042, 230.589, -13.1266, 0.66 ) }
    dend_3 { pt3dadd( 25.3074, 231.601, -13.3415, 0.37 ) }
    dend_3 { pt3dadd( 25.038, 232.944, -13.6536, 0.37 ) }
    dend_3 { pt3dadd( 24.8957, 233.672, -13.8289, 0.96 ) }
    dend_3 { pt3dadd( 24.8074, 234.16, -13.9484, 0.96 ) }
    dend_3 { pt3dadd( 24.7936, 234.237, -13.9671, 0.96 ) }
    dend_3 { pt3dadd( 24.6663, 234.956, -14.1484, 0.96 ) }
    dend_3 { pt3dadd( 24.5744, 235.458, -14.298, 0.52 ) }
    dend_3 { pt3dadd( 24.5137, 235.798, -14.4004, 0.52 ) }
    dend_3 { pt3dadd( 24.4367, 236.283, -14.5378, 0.52 ) }
    dend_3 { pt3dadd( 24.4144, 236.438, -14.5747, 0.52 ) }
    dend_3 { pt3dadd( 24.335, 237.028, -14.6846, 0.29 ) }
    dend_3 { pt3dadd( 24.2737, 237.552, -14.7527, 0.29 ) }
    dend_3 { pt3dadd( 24.1958, 238.208, -14.8256, 0.22 ) }
    dend_3 { pt3dadd( 24.0812, 239.173, -14.9089, 0.22 ) }
    dend_3 { pt3dadd( 24.008, 239.748, -14.9335, 1.03 ) }
    dend_3 { pt3dadd( 23.9516, 240.209, -14.9353, 1.4 ) }
    dend_3 { pt3dadd( 23.8875, 240.715, -14.916, 1.4 ) }
    dend_3 { pt3dadd( 23.8105, 241.387, -14.8859, 1.4 ) }
    dend_3 { pt3dadd( 23.73, 242.111, -14.8493, 0.81 ) }
    dend_3 { pt3dadd( 23.6557, 242.784, -14.8243, 0.29 ) }
    dend_3 { pt3dadd( 23.6076, 243.217, -14.8149, 0.29 ) }
    dend_3 { pt3dadd( 23.5684, 243.592, -14.812, 0.29 ) }
    dend_3 { pt3dadd( 23.4368, 244.905, -14.8211, 0.29 ) }
    dend_3 { pt3dadd( 23.4303, 244.975, -14.8243, 0.29 ) }
    dend_3 { pt3dadd( 23.3547, 245.728, -14.9175, 1.03 ) }
    dend_3 { pt3dadd( 23.2848, 246.444, -15.0442, 1.69 ) }
    dend_3 { pt3dadd( 23.2486, 246.794, -15.1199, 1.69 ) }
    dend_3 { pt3dadd( 23.1875, 247.433, -15.2714, 1.33 ) }
    dend_3 { pt3dadd( 23.1256, 248.11, -15.4433, 0.59 ) }
    dend_3 { pt3dadd( 23.0605, 248.826, -15.6222, 0.22 ) }
    dend_3 { pt3dadd( 22.8893, 250.814, -16.113, 0.22 ) }
    dend_3 { pt3dadd( 22.8224, 251.53, -16.2914, 0.81 ) }
    dend_3 { pt3dadd( 22.7663, 252.104, -16.4332, 1.18 ) }
    dend_3 { pt3dadd( 22.752, 252.241, -16.4618, 1.18 ) }
    dend_3 { pt3dadd( 22.7077, 252.664, -16.5288, 1.18 ) }
    dend_3 { pt3dadd( 22.7002, 252.733, -16.5362, 1.18 ) }
    dend_3 { pt3dadd( 22.6733, 252.95, -16.557, 1.18 ) }
    dend_3 { pt3dadd( 22.5667, 253.806, -16.6113, 0.37 ) }
    dend_3 { pt3dadd( 22.3664, 255.416, -16.704, 0.22 ) }
    dend_3 { pt3dadd( 22.358, 255.496, -16.7078, 0.22 ) }
    dend_3 { pt3dadd( 22.3111, 256.083, -16.7294, 0.96 ) }
    dend_3 { pt3dadd( 22.3071, 256.143, -16.7308, 0.96 ) }
    dend_3 { pt3dadd( 22.2811, 256.732, -16.7323, 1.47 ) }
    dend_3 { pt3dadd( 22.2805, 256.802, -16.7333, 1.47 ) }
    dend_3 { pt3dadd( 22.2962, 257.317, -16.7704, 1.47 ) }
    dend_3 { pt3dadd( 22.2967, 257.824, -16.8205, 1.18 ) }
    dend_3 { pt3dadd( 22.2806, 258.257, -16.9003, 0.96 ) }
    dend_3 { pt3dadd( 22.2538, 258.691, -16.9985, 0.59 ) }
    dend_3 { pt3dadd( 22.2105, 259.286, -17.1515, 0.29 ) }
    dend_3 { pt3dadd( 22.1633, 259.922, -17.3223, 0.29 ) }
    dend_3 { pt3dadd( 22.0617, 261.079, -17.6417, 0.22 ) }
    dend_3 { pt3dadd( 21.9666, 262.108, -17.9195, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_3 { pt3dadd( 21.9531, 262.251, -17.9609, 0.59 ) }
    dend_3 { pt3dadd( 21.928, 262.501, -18.0315, 0.88 ) }
    dend_3 { pt3dadd( 21.8739, 263.0, -18.1521, 0.88 ) }
    dend_3 { pt3dadd( 21.8053, 263.52, -18.2379, 1.03 ) }
    dend_3 { pt3dadd( 21.7444, 263.953, -18.2893, 1.03 ) }
    dend_3 { pt3dadd( 21.6461, 264.615, -18.3364, 0.74 ) }
    dend_3 { pt3dadd( 21.544, 265.273, -18.3787, 0.37 ) }
    dend_3 { pt3dadd( 21.3902, 266.235, -18.4326, 0.29 ) }
    dend_3 { pt3dadd( 21.1562, 267.673, -18.4982, 0.22 ) }
    dend_3 { pt3dadd( 21.0339, 268.427, -18.5391, 1.11 ) }
    dend_3 { pt3dadd( 20.9401, 268.999, -18.5702, 1.77 ) }
    dend_3 { pt3dadd( 20.8619, 269.502, -18.5928, 2.14 ) }
    dend_3 { pt3dadd( 20.7892, 270.016, -18.6241, 2.14 ) }
    dend_3 { pt3dadd( 20.7115, 270.608, -18.6732, 1.77 ) }
    dend_3 { pt3dadd( 20.6017, 271.536, -18.7651, 0.81 ) }
    dend_3 { pt3dadd( 20.5333, 272.124, -18.8155, 0.29 ) }
    dend_3 { pt3dadd( 20.3025, 274.166, -18.9876, 0.29 ) }
    dend_3 { pt3dadd( 20.209, 275.029, -19.0824, 0.29 ) }
    dend_3 { pt3dadd( 20.1341, 275.789, -19.1794, 0.96 ) }
    dend_3 { pt3dadd( 20.0796, 276.444, -19.2711, 1.11 ) }
    dend_3 { pt3dadd( 20.0703, 276.592, -19.292, 1.11 ) }
    dend_3 { pt3dadd( 20.0421, 277.096, -19.3655, 1.11 ) }
    dend_3 { pt3dadd( 19.984, 278.038, -19.4839, 0.66 ) }
    dend_3 { pt3dadd( 19.9527, 278.475, -19.5226, 0.29 ) }
    dend_3 { pt3dadd( 19.9464, 278.555, -19.5271, 0.29 ) }
    dend_3 { pt3dadd( 19.8429, 279.709, -19.565, 0.29 ) }
    dend_3 { pt3dadd( 19.6403, 281.912, -19.5891, 0.29 ) }
    dend_3 { pt3dadd( 19.5236, 283.11, -19.573, 0.96 ) }
    dend_3 { pt3dadd( 19.4434, 283.912, -19.5402, 1.99 ) }
    dend_3 { pt3dadd( 19.3779, 284.572, -19.5168, 2.28 ) }
    dend_3 { pt3dadd( 19.3068, 285.305, -19.4957, 1.25 ) }
    dend_3 { pt3dadd( 19.2579, 285.812, -19.4852, 0.52 ) }
    dend_3 { pt3dadd( 19.1999, 286.484, -19.4802, 0.29 ) }
    dend_3 { pt3dadd( 19.111, 287.584, -19.4923, 0.29 ) }
    dend_3 { pt3dadd( 19.0738, 288.038, -19.5011, 0.29 ) }
    dend_3 { pt3dadd( 18.9888, 288.998, -19.5234, 0.29 ) }
    dend_3 { pt3dadd( 18.9398, 289.51, -19.5379, 1.03 ) }
    dend_3 { pt3dadd( 18.9326, 289.58, -19.5376, 1.03 ) }
    dend_3 { pt3dadd( 18.8508, 290.32, -19.5071, 1.03 ) }
    dend_3 { pt3dadd( 18.8226, 290.537, -19.4866, 1.03 ) }
    dend_3 { pt3dadd( 18.7626, 290.927, -19.428, 1.03 ) }
    dend_3 { pt3dadd( 18.7514, 290.995, -19.4143, 1.03 ) }
    dend_3 { pt3dadd( 18.6596, 291.691, -19.2826, 0.59 ) }
    dend_3 { pt3dadd( 18.651, 291.76, -19.2734, 0.59 ) }
    dend_3 { pt3dadd( 18.5909, 292.264, -19.2313, 0.29 ) }
    dend_3 { pt3dadd( 18.5785, 292.37, -19.2267, 0.29 ) }
    dend_3 { pt3dadd( 18.5224, 292.888, -19.2201, 0.29 ) }
    dend_3 { pt3dadd( 18.4114, 293.837, -19.2308, 0.22 ) }
    dend_3 { pt3dadd( 18.2436, 295.247, -19.3071, 0.22 ) }
    dend_3 { pt3dadd( 18.1895, 295.714, -19.3376, 0.88 ) }
    dend_3 { pt3dadd( 18.1088, 296.521, -19.4074, 1.4 ) }
    dend_3 { pt3dadd( 18.0454, 297.245, -19.4798, 1.55 ) }
    dend_3 { pt3dadd( 18.0043, 297.796, -19.536, 1.55 ) }
    dend_3 { pt3dadd( 17.9657, 298.463, -19.6008, 1.55 ) }
    dend_3 { pt3dadd( 17.9386, 299.412, -19.6842, 0.52 ) }
    dend_3 { pt3dadd( 17.9165, 301.176, -19.8087, 0.15 ) }
    dend_3 { pt3dadd( 17.9165, 301.246, -19.8129, 0.15 ) }
    dend_3 { pt3dadd( 17.9191, 301.644, -19.8299, 0.74 ) }
    dend_3 { pt3dadd( 17.9261, 302.298, -19.8416, 0.74 ) }
    dend_3 { pt3dadd( 17.9214, 302.742, -19.8349, 0.74 ) }
    dend_3 { pt3dadd( 17.9079, 303.112, -19.8251, 0.74 ) }
    dend_3 { pt3dadd( 17.8713, 303.625, -19.806, 0.29 ) }
    dend_3 { pt3dadd( 17.8168, 304.207, -19.7927, 0.29 ) }
    dend_3 { pt3dadd( 17.7119, 305.084, -19.7872, 0.29 ) }
    dend_3 { pt3dadd( 17.589, 305.968, -19.7843, 0.29 ) }
    dend_3 { pt3dadd( 17.5003, 306.546, -19.7843, 0.96 ) }
    dend_3 { pt3dadd( 17.3896, 307.201, -19.7892, 1.25 ) }
    dend_3 { pt3dadd( 17.322, 307.591, -19.7939, 1.25 ) }
    dend_3 { pt3dadd( 17.1884, 308.324, -19.8049, 0.52 ) }
    dend_3 { pt3dadd( 17.0768, 308.897, -19.8148, 0.52 ) }
    dend_3 { pt3dadd( 16.7554, 310.502, -19.8736, 0.52 ) }
    dend_3 { pt3dadd( 16.4238, 312.192, -19.9614, 0.52 ) }
    dend_3 { pt3dadd( 16.4086, 312.27, -19.9663, 0.52 ) }
    dend_3 { pt3dadd( 16.1858, 313.455, -20.0509, 0.52 ) }
    dend_3 { pt3dadd( 16.0806, 314.071, -20.1231, 0.52 ) }
    dend_3 { pt3dadd( 16.0119, 314.522, -20.194, 0.37 ) }
    dend_3 { pt3dadd( 15.8837, 315.525, -20.3917, 0.37 ) }
    dend_3 { pt3dadd( 15.8, 316.333, -20.5613, 0.37 ) }
    dend_3 { pt3dadd( 15.7513, 316.903, -20.6774, 1.25 ) }
    dend_3 { pt3dadd( 15.6731, 318.158, -20.9908, 2.43 ) }
    dend_3 { pt3dadd( 15.6424, 318.8, -21.1583, 2.43 ) }
    dend_3 { pt3dadd( 15.6167, 319.37, -21.321, 2.43 ) }
    dend_3 { pt3dadd( 15.5799, 320.343, -21.6352, 0.96 ) }
    dend_3 { pt3dadd( 15.5608, 320.907, -21.8259, 0.59 ) }
    dend_3 { pt3dadd( 15.5223, 322.008, -22.1871, 0.29 ) }
    dend_3 { pt3dadd( 15.4815, 323.049, -22.5393, 0.29 ) }
    dend_3 { pt3dadd( 15.4596, 324.018, -22.8593, 0.29 ) }
    dend_3 { pt3dadd( 15.4573, 324.319, -22.9552, 0.59 ) }
    dend_3 { pt3dadd( 15.4582, 324.756, -23.0821, 0.81 ) }
    dend_3 { pt3dadd( 15.4627, 325.477, -23.2619, 0.81 ) }
    dend_3 { pt3dadd( 15.4768, 326.496, -23.4639, 0.22 ) }
    dend_3 { pt3dadd( 15.5121, 328.814, -23.7933, 0.22 ) }
    dend_3 { pt3dadd( 15.5296, 329.728, -23.866, 1.18 ) }
    dend_3 { pt3dadd( 15.5516, 330.607, -23.8998, 1.62 ) }
    dend_3 { pt3dadd( 15.5731, 331.117, -23.8943, 1.62 ) }
    dend_3 { pt3dadd( 15.5919, 331.476, -23.872, 1.62 ) }
    dend_3 { pt3dadd( 15.6717, 332.653, -23.6648, 0.96 ) }
    dend_3 { pt3dadd( 15.7184, 333.217, -23.5184, 0.29 ) }
    dend_3 { pt3dadd( 15.782, 333.93, -23.3034, 0.29 ) }
    dend_3 { pt3dadd( 15.9494, 335.681, -22.753, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_3 { pt3dadd( 15.9588, 335.775, -22.7236, 0.29 ) }
    dend_3 { pt3dadd( 16.0945, 337.051, -22.3509, 0.81 ) }
    dend_3 { pt3dadd( 16.1515, 337.547, -22.2293, 1.11 ) }
    dend_3 { pt3dadd( 16.2, 338.039, -22.1019, 1.11 ) }
    dend_3 { pt3dadd( 16.2199, 338.32, -22.0343, 1.11 ) }
    dend_3 { pt3dadd( 16.2234, 338.389, -22.0232, 1.11 ) }
    dend_3 { pt3dadd( 16.2208, 338.926, -21.9847, 0.74 ) }
    dend_3 { pt3dadd( 16.1974, 339.442, -21.9818, 0.37 ) }
    dend_3 { pt3dadd( 16.1047, 340.51, -21.9836, 0.37 ) }
    dend_3 { pt3dadd( 15.9488, 341.669, -21.9899, 0.29 ) }
    dend_3 { pt3dadd( 15.7471, 342.742, -22.0164, 0.22 ) }
    dend_3 { pt3dadd( 15.4148, 344.148, -22.0736, 0.22 ) }
    dend_3 { pt3dadd( 15.2187, 344.798, -22.0875, 0.96 ) }
    dend_3 { pt3dadd( 14.9905, 345.447, -22.0935, 1.62 ) }
    dend_3 { pt3dadd( 14.7404, 346.072, -22.0911, 1.62 ) }
    dend_3 { pt3dadd( 14.4426, 346.746, -22.0657, 0.74 ) }
    dend_3 { pt3dadd( 14.1889, 347.287, -22.0245, 0.37 ) }
    dend_3 { pt3dadd( 13.3489, 349.097, -21.8575, 0.22 ) }
    dend_3 { pt3dadd( 13.3202, 349.16, -21.8518, 0.22 ) }
    dend_3 { pt3dadd( 13.0237, 349.863, -21.7928, 0.96 ) }
    dend_3 { pt3dadd( 12.8545, 350.295, -21.7597, 1.62 ) }
    dend_3 { pt3dadd( 12.6142, 350.947, -21.7137, 1.62 ) }
    dend_3 { pt3dadd( 12.3361, 351.713, -21.6785, 0.29 ) }
    dend_3 { pt3dadd( 11.6838, 353.566, -21.6532, 0.29 ) }
    dend_3 { pt3dadd( 11.2654, 354.801, -21.6395, 0.29 ) }
    dend_3 { pt3dadd( 11.0018, 355.643, -21.6331, 0.29 ) }
    dend_3 { pt3dadd( 10.8801, 356.066, -21.6305, 0.74 ) }
    dend_3 { pt3dadd( 10.7437, 356.604, -21.6284, 0.96 ) }
    dend_3 { pt3dadd( 10.6947, 356.819, -21.6284, 0.96 ) }
    dend_3 { pt3dadd( 10.5722, 357.4, -21.6141, 0.44 ) }
    dend_3 { pt3dadd( 10.4155, 358.044, -21.5814, 0.29 ) }
    dend_3 { pt3dadd( 10.1744, 358.956, -21.5203, 0.22 ) }
    dend_3 { pt3dadd( 10.1434, 359.065, -21.5123, 0.22 ) }
    dend_3 { pt3dadd( 9.91497, 359.847, -21.438, 0.22 ) }
    dend_3 { pt3dadd( 9.74308, 360.441, -21.3758, 0.88 ) }
    dend_3 { pt3dadd( 9.45608, 361.444, -21.2876, 1.55 ) }
    dend_3 { pt3dadd( 9.26099, 362.146, -21.2409, 1.84 ) }
    dend_3 { pt3dadd( 9.06566, 362.91, -21.2041, 1.84 ) }
    dend_3 { pt3dadd( 8.80875, 363.967, -21.1693, 0.29 ) }
    dend_3 { pt3dadd( 8.65346, 364.68, -21.1583, 0.29 ) }
    dend_3 { pt3dadd( 8.42493, 365.837, -21.1648, 0.29 ) }
    dend_3 { pt3dadd( 8.16171, 367.32, -21.1778, 0.29 ) }
    dend_3 { pt3dadd( 8.03599, 368.044, -21.1875, 0.88 ) }
    dend_3 { pt3dadd( 8.02359, 368.123, -21.1891, 0.88 ) }
    dend_3 { pt3dadd( 7.92796, 368.765, -21.2085, 1.4 ) }
    dend_3 { pt3dadd( 7.83073, 369.422, -21.217, 1.55 ) }
    dend_3 { pt3dadd( 7.7495, 370.0, -21.2183, 1.55 ) }
    dend_3 { pt3dadd( 7.73769, 370.069, -21.2193, 1.55 ) }
    dend_3 { pt3dadd( 7.57607, 370.855, -21.2425, 0.66 ) }
    dend_3 { pt3dadd( 7.47358, 371.29, -21.259, 0.37 ) }
    dend_3 { pt3dadd( 7.2117, 372.299, -21.304, 0.37 ) }
    dend_3 { pt3dadd( 6.90916, 373.395, -21.3572, 0.37 ) }
    dend_3 { pt3dadd( 6.56381, 374.55, -21.4222, 0.37 ) }
    dend_3 { pt3dadd( 6.33256, 375.295, -21.4658, 0.96 ) }
    dend_3 { pt3dadd( 6.0856, 376.04, -21.5104, 1.84 ) }
    dend_3 { pt3dadd( 5.94624, 376.454, -21.5326, 2.14 ) }
    dend_3 { pt3dadd( 5.69563, 377.183, -21.564, 1.84 ) }
    dend_3 { pt3dadd( 5.41337, 377.998, -21.554, 0.81 ) }
    dend_3 { pt3dadd( 5.26546, 378.417, -21.533, 0.29 ) }
    dend_3 { pt3dadd( 4.99367, 379.156, -21.4744, 0.29 ) }
    dend_3 { pt3dadd( 4.40332, 380.681, -21.3262, 0.29 ) }
    dend_3 { pt3dadd( 3.88421, 381.99, -21.1813, 0.29 ) }
    dend_3 { pt3dadd( 3.5197, 382.894, -21.0646, 1.03 ) }
    dend_3 { pt3dadd( 3.24655, 383.571, -20.9679, 1.4 ) }
    dend_3 { pt3dadd( 3.0323, 384.117, -20.8908, 1.4 ) }
    dend_3 { pt3dadd( 2.73173, 384.907, -20.7836, 0.66 ) }
    dend_3 { pt3dadd( 2.58514, 385.319, -20.7354, 0.29 ) }
    dend_3 { pt3dadd( 2.56509, 385.386, -20.7306, 0.29 ) }
    dend_3 { pt3dadd( 2.34453, 386.289, -20.7172, 0.29 ) }
    dend_3 { pt3dadd( 2.16701, 387.226, -20.7043, 0.29 ) }
    dend_3 { pt3dadd( 2.09365, 387.703, -20.6985, 0.96 ) }
    dend_3 { pt3dadd( 2.02371, 388.289, -20.6768, 1.18 ) }
    dend_3 { pt3dadd( 1.98023, 388.646, -20.6559, 1.18 ) }
    dend_3 { pt3dadd( 1.88478, 389.232, -20.613, 0.81 ) }
    dend_3 { pt3dadd( 1.80203, 389.669, -20.5889, 0.52 ) }
    dend_3 { pt3dadd( 1.78545, 389.737, -20.5865, 0.52 ) }
    dend_3 { pt3dadd( 1.61918, 390.284, -20.5786, 0.52 ) }
    dend_3 { pt3dadd( 1.40784, 390.867, -20.5667, 0.22 ) }
    dend_3 { pt3dadd( 0.880482, 392.168, -20.5326, 0.22 ) }
    dend_3 { pt3dadd( 0.605246, 392.784, -20.5156, 1.03 ) }
    dend_3 { pt3dadd( 0.364663, 393.324, -20.5026, 1.47 ) }
    dend_3 { pt3dadd( 0.0165163, 394.067, -20.4897, 1.47 ) }
    dend_3 { pt3dadd( -0.205711, 394.52, -20.466, 0.29 ) }
    dend_3 { pt3dadd( -0.447725, 395.001, -20.4156, 0.29 ) }
    dend_3 { pt3dadd( -0.687209, 395.471, -20.3412, 0.29 ) }
    dend_3 { pt3dadd( -1.15718, 396.359, -20.1668, 0.29 ) }
    dend_3 { pt3dadd( -1.71272, 397.398, -19.9612, 0.29 ) }
    dend_3 { pt3dadd( -2.22869, 398.375, -19.7788, 0.29 ) }
    dend_3 { pt3dadd( -2.37074, 398.648, -19.7345, 1.11 ) }
    dend_3 { pt3dadd( -2.40619, 398.718, -19.7185, 1.11 ) }
    dend_3 { pt3dadd( -2.6908, 399.305, -19.5516, 1.69 ) }
    dend_3 { pt3dadd( -2.90888, 399.873, -19.3892, 1.92 ) }
    dend_3 { pt3dadd( -3.02399, 400.448, -19.263, 1.92 ) }
    dend_3 { pt3dadd( -3.09148, 400.961, -19.1714, 1.92 ) }
    dend_3 { pt3dadd( -3.16161, 402.155, -18.9954, 0.29 ) }
    dend_3 { pt3dadd( -3.17462, 402.845, -18.9053, 0.29 ) }
    dend_3 { pt3dadd( -3.12657, 404.813, -18.6926, 0.29 ) }
    dend_3 { pt3dadd( -3.01315, 406.942, -18.5099, 0.29 ) }
    dend_3 { pt3dadd( -3.00817, 407.012, -18.5057, 0.29 ) }
    dend_3 { pt3dadd( -2.81692, 409.223, -18.4393, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_3 { pt3dadd( -2.80815, 409.303, -18.4404, 0.29 ) }
    dend_3 { pt3dadd( -2.68057, 410.333, -18.4571, 1.25 ) }
    dend_3 { pt3dadd( -2.60735, 410.912, -18.4683, 1.62 ) }
    dend_3 { pt3dadd( -2.53285, 411.643, -18.4837, 1.92 ) }
    dend_3 { pt3dadd( -2.53009, 411.713, -18.4849, 1.92 ) }
    dend_3 { pt3dadd( -2.57549, 412.466, -18.4926, 1.92 ) }
    dend_3 { pt3dadd( -2.68955, 413.288, -18.4963, 1.03 ) }
    dend_3 { pt3dadd( -2.76998, 413.721, -18.4899, 0.66 ) }
    dend_3 { pt3dadd( -2.86923, 414.227, -18.4784, 0.37 ) }
    dend_3 { pt3dadd( -3.28298, 416.268, -18.4232, 0.37 ) }
    dend_3 { pt3dadd( -3.61982, 417.911, -18.3423, 0.37 ) }
    dend_3 { pt3dadd( -4.04262, 419.978, -18.2037, 0.37 ) }
    dend_3 { pt3dadd( -4.25013, 421.039, -18.1154, 0.29 ) }
    dend_3 { pt3dadd( -4.56244, 422.753, -17.949, 0.29 ) }
    dend_3 { pt3dadd( -4.57513, 422.831, -17.9402, 0.29 ) }
    dend_3 { pt3dadd( -4.6724, 423.672, -17.7842, 1.03 ) }
    dend_3 { pt3dadd( -4.70564, 424.379, -17.6052, 1.55 ) }
    dend_3 { pt3dadd( -4.70087, 425.005, -17.3728, 1.62 ) }
    dend_3 { pt3dadd( -4.69022, 425.552, -17.1288, 1.4 ) }
    dend_3 { pt3dadd( -4.69011, 426.206, -16.7985, 0.81 ) }
    dend_3 { pt3dadd( -4.70978, 427.606, -16.0734, 0.37 ) }
    dend_3 { pt3dadd( -4.76099, 428.977, -15.3723, 0.29 ) }
    dend_3 { pt3dadd( -4.84486, 430.283, -14.6696, 0.29 ) }
    dend_3 { pt3dadd( -4.84936, 430.336, -14.6403, 0.29 ) }
    dend_3 { pt3dadd( -4.93137, 431.022, -14.2472, 0.29 ) }
    dend_3 { pt3dadd( -4.93912, 431.075, -14.2193, 0.29 ) }
    dend_3 { pt3dadd( -5.10555, 432.049, -13.8314, 0.29 ) }
    dend_3 { pt3dadd( -5.11912, 432.141, -13.7996, 0.29 ) }
    dend_3 { pt3dadd( -5.20505, 433.23, -13.5484, 1.11 ) }
    dend_3 { pt3dadd( -5.20806, 433.298, -13.5341, 1.11 ) }
    dend_3 { pt3dadd( -5.21047, 434.086, -13.3736, 1.92 ) }
    dend_3 { pt3dadd( -5.19862, 434.956, -13.2085, 2.28 ) }
    dend_3 { pt3dadd( -5.16977, 435.544, -13.109, 2.5 ) }
    dend_3 { pt3dadd( -5.13067, 436.173, -13.026, 1.99 ) }
    dend_3 { pt3dadd( -5.10363, 436.533, -13.0116, 1.99 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 35/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -122.098, -197.331, -97.403, 0.29 ) }
    dend_29 { pt3dadd( -121.728, -198.646, -97.0117, 0.29 ) }
    dend_29 { pt3dadd( -121.71, -198.71, -96.9916, 0.29 ) }
    dend_29 { pt3dadd( -121.49, -199.825, -96.6806, 0.29 ) }
    dend_29 { pt3dadd( -121.408, -200.36, -96.5441, 0.59 ) }
    dend_29 { pt3dadd( -121.328, -201.067, -96.3823, 0.59 ) }
    dend_29 { pt3dadd( -121.322, -201.135, -96.3681, 0.59 ) }
    dend_29 { pt3dadd( -121.322, -201.434, -96.3399, 0.22 ) }
    dend_29 { pt3dadd( -121.308, -202.571, -96.346, 0.22 ) }
    dend_29 { pt3dadd( -121.308, -202.861, -96.3625, 0.59 ) }
    dend_29 { pt3dadd( -121.311, -203.442, -96.4321, 0.59 ) }
    dend_29 { pt3dadd( -121.309, -203.815, -96.4883, 0.59 ) }
    dend_29 { pt3dadd( -121.302, -204.529, -96.6092, 0.15 ) }
    dend_29 { pt3dadd( -121.229, -207.676, -96.9849, 0.15 ) }
    dend_29 { pt3dadd( -121.229, -207.826, -96.9863, 0.15 ) }
    dend_29 { pt3dadd( -121.241, -208.447, -96.9581, 1.03 ) }
    dend_29 { pt3dadd( -121.26, -208.955, -96.9153, 1.11 ) }
    dend_29 { pt3dadd( -121.297, -209.534, -96.8457, 1.11 ) }
    dend_29 { pt3dadd( -121.448, -211.17, -96.5777, 0.15 ) }
    dend_29 { pt3dadd( -122.004, -215.404, -95.7498, 0.15 ) }
    dend_29 { pt3dadd( -122.015, -215.472, -95.7375, 0.15 ) }
    dend_29 { pt3dadd( -122.12, -215.989, -95.6467, 0.66 ) }
    dend_29 { pt3dadd( -122.241, -216.496, -95.5739, 0.66 ) }
    dend_29 { pt3dadd( -122.262, -216.573, -95.5628, 0.66 ) }
    dend_29 { pt3dadd( -122.288, -216.637, -95.5548, 0.15 ) }
    dend_29 { pt3dadd( -123.411, -218.672, -95.1349, 0.15 ) }
    dend_29 { pt3dadd( -123.488, -218.805, -95.1066, 0.29 ) }
    dend_29 { pt3dadd( -123.641, -219.058, -95.0499, 0.29 ) }
    dend_29 { pt3dadd( -124.371, -220.275, -94.7796, 0.15 ) }
    dend_29 { pt3dadd( -125.638, -222.383, -94.3183, 0.15 ) }
    dend_29 { pt3dadd( -125.865, -222.775, -94.1359, 0.96 ) }
    dend_29 { pt3dadd( -126.01, -223.035, -93.9135, 0.96 ) }
    dend_29 { pt3dadd( -126.041, -223.098, -93.8739, 0.96 ) }
    dend_29 { pt3dadd( -126.283, -223.621, -93.5742, 1.11 ) }
    dend_29 { pt3dadd( -126.313, -223.687, -93.5403, 1.11 ) }
    dend_29 { pt3dadd( -127.536, -226.688, -92.0021, 0.15 ) }
    dend_29 { pt3dadd( -127.561, -226.747, -91.9746, 0.15 ) }
    dend_29 { pt3dadd( -129.462, -231.247, -90.081, 0.15 ) }
    dend_29 { pt3dadd( -129.488, -231.308, -90.0583, 0.15 ) }
    dend_29 { pt3dadd( -129.66, -231.679, -89.9496, 0.66 ) }
    dend_29 { pt3dadd( -130.031, -232.457, -89.8086, 0.66 ) }
    dend_29 { pt3dadd( -130.449, -233.299, -89.804, 0.44 ) }
    dend_29 { pt3dadd( -130.536, -233.468, -89.8021, 0.15 ) }
    dend_29 { pt3dadd( -130.571, -233.529, -89.7962, 0.15 ) }
    dend_29 { pt3dadd( -131.414, -234.77, -89.601, 0.15 ) }
    dend_29 { pt3dadd( -131.532, -234.926, -89.5695, 0.52 ) }
    dend_29 { pt3dadd( -131.684, -235.099, -89.5297, 0.52 ) }
    dend_29 { pt3dadd( -131.887, -235.329, -89.4751, 0.52 ) }
    dend_29 { pt3dadd( -132.441, -235.942, -89.3302, 0.22 ) }
    dend_29 { pt3dadd( -134.324, -237.95, -88.8181, 0.22 ) }
    dend_29 { pt3dadd( -134.517, -238.139, -88.7623, 0.66 ) }
    dend_29 { pt3dadd( -134.985, -238.586, -88.6319, 0.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -122.098, -197.331, -97.403, 0.22 ) }
    dend_28 { pt3dadd( -122.734, -198.597, -98.0026, 0.22 ) }
    dend_28 { pt3dadd( -122.759, -198.639, -98.0528, 0.22 ) }
    dend_28 { pt3dadd( -123.307, -199.615, -99.0011, 0.22 ) }
    dend_28 { pt3dadd( -123.333, -199.663, -99.0449, 0.22 ) }
    dend_28 { pt3dadd( -123.707, -200.388, -99.6143, 0.74 ) }
    dend_28 { pt3dadd( -124.04, -201.052, -100.097, 1.03 ) }
    dend_28 { pt3dadd( -125.246, -203.43, -101.875, 0.22 ) }
    dend_28 { pt3dadd( -126.133, -205.28, -103.114, 0.22 ) }
    dend_28 { pt3dadd( -126.159, -205.336, -103.146, 0.22 ) }
    dend_28 { pt3dadd( -126.787, -206.787, -103.871, 0.22 ) }
    dend_28 { pt3dadd( -126.811, -206.848, -103.897, 0.22 ) }
    dend_28 { pt3dadd( -126.909, -207.128, -103.99, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_28 { pt3dadd( -127.185, -207.944, -104.183, 2.06 ) }
    dend_28 { pt3dadd( -127.471, -208.813, -104.433, 2.06 ) }
    dend_28 { pt3dadd( -127.953, -210.279, -104.876, 1.18 ) }
    dend_28 { pt3dadd( -128.48, -211.886, -105.391, 0.22 ) }
    dend_28 { pt3dadd( -129.553, -215.124, -106.415, 0.22 ) }
    dend_28 { pt3dadd( -129.574, -215.187, -106.435, 0.22 ) }
    dend_28 { pt3dadd( -129.77, -215.756, -106.637, 1.03 ) }
    dend_28 { pt3dadd( -130.005, -216.376, -106.848, 1.03 ) }
    dend_28 { pt3dadd( -130.031, -216.438, -106.867, 1.03 ) }
    dend_28 { pt3dadd( -130.367, -217.129, -107.063, 1.03 ) }
    dend_28 { pt3dadd( -130.399, -217.188, -107.082, 1.03 ) }
    dend_28 { pt3dadd( -131.147, -218.532, -107.538, 0.22 ) }
    dend_28 { pt3dadd( -132.992, -221.651, -108.601, 0.22 ) }
    dend_28 { pt3dadd( -133.24, -222.051, -108.744, 1.33 ) }
    dend_28 { pt3dadd( -133.685, -222.728, -108.965, 1.33 ) }
    dend_28 { pt3dadd( -133.723, -222.784, -108.985, 1.33 ) }
    dend_28 { pt3dadd( -134.336, -223.693, -109.311, 0.15 ) }
    dend_28 { pt3dadd( -134.805, -224.354, -109.537, 0.15 ) }
    dend_28 { pt3dadd( -134.844, -224.406, -109.564, 0.15 ) }
    dend_28 { pt3dadd( -136.291, -226.463, -110.576, 0.15 ) }
    dend_28 { pt3dadd( -137.037, -227.628, -111.106, 1.47 ) }
    dend_28 { pt3dadd( -137.393, -228.234, -111.348, 1.47 ) }
    dend_28 { pt3dadd( -137.63, -228.687, -111.527, 1.47 ) }
    dend_28 { pt3dadd( -138.161, -229.864, -111.999, 0.22 ) }
    dend_28 { pt3dadd( -139.171, -232.575, -113.05, 0.22 ) }
    dend_28 { pt3dadd( -139.355, -233.259, -113.348, 1.11 ) }
    dend_28 { pt3dadd( -139.572, -234.221, -113.764, 1.11 ) }
    dend_28 { pt3dadd( -139.79, -235.582, -114.381, 0.29 ) }
    dend_28 { pt3dadd( -139.864, -236.501, -114.823, 0.29 ) }
    dend_28 { pt3dadd( -139.864, -237.525, -115.333, 0.29 ) }
    dend_28 { pt3dadd( -139.713, -239.126, -116.283, 0.15 ) }
    dend_28 { pt3dadd( -139.703, -239.217, -116.337, 0.15 ) }
    dend_28 { pt3dadd( -139.567, -240.22, -116.929, 0.15 ) }
    dend_28 { pt3dadd( -139.399, -241.529, -118.001, 1.77 ) }
    dend_28 { pt3dadd( -139.36, -241.858, -118.364, 2.65 ) }
    dend_28 { pt3dadd( -139.353, -241.904, -118.416, 2.65 ) }
    dend_28 { pt3dadd( -139.304, -242.241, -118.795, 2.65 ) }
    dend_28 { pt3dadd( -139.295, -242.293, -118.856, 2.65 ) }
    dend_28 { pt3dadd( -138.7, -245.112, -122.384, 0.15 ) }
    dend_28 { pt3dadd( -138.69, -245.149, -122.444, 0.15 ) }
    dend_28 { pt3dadd( -138.403, -246.093, -124.185, 0.15 ) }
    dend_28 { pt3dadd( -138.321, -246.316, -124.605, 1.11 ) }
    dend_28 { pt3dadd( -138.291, -246.384, -124.736, 1.11 ) }
    dend_28 { pt3dadd( -138.162, -246.645, -125.231, 1.25 ) }
    dend_28 { pt3dadd( -136.615, -249.219, -129.894, 0.22 ) }
    dend_28 { pt3dadd( -136.59, -249.254, -129.962, 0.22 ) }
    dend_28 { pt3dadd( -136.278, -249.624, -130.827, 0.22 ) }
    dend_28 { pt3dadd( -136.207, -249.706, -131.01, 0.59 ) }
    dend_28 { pt3dadd( -136.153, -249.77, -131.142, 0.59 ) }
    dend_28 { pt3dadd( -135.996, -249.981, -131.539, 0.59 ) }
    dend_28 { pt3dadd( -135.498, -250.766, -132.528, 1.25 ) }
    dend_28 { pt3dadd( -135.477, -250.815, -132.588, 1.25 ) }
    dend_28 { pt3dadd( -135.235, -251.714, -133.731, 1.25 ) }
    dend_28 { pt3dadd( -135.227, -251.768, -133.789, 1.25 ) }
    dend_28 { pt3dadd( -135.199, -253.045, -135.02, 0.22 ) }
    dend_28 { pt3dadd( -135.207, -253.152, -135.11, 0.22 ) }
    dend_28 { pt3dadd( -135.328, -254.064, -135.731, 0.22 ) }
    dend_28 { pt3dadd( -135.336, -254.122, -135.77, 0.22 ) }
    dend_28 { pt3dadd( -135.502, -255.219, -136.466, 0.22 ) }
    dend_28 { pt3dadd( -135.758, -256.801, -137.44, 1.18 ) }
    dend_28 { pt3dadd( -135.861, -257.442, -137.807, 2.06 ) }
    dend_28 { pt3dadd( -135.955, -258.003, -138.141, 2.06 ) }
    dend_28 { pt3dadd( -136.301, -259.973, -139.444, 0.22 ) }
    dend_28 { pt3dadd( -136.433, -260.663, -139.923, 0.22 ) }
    dend_28 { pt3dadd( -136.462, -260.797, -140.016, 0.52 ) }
    dend_28 { pt3dadd( -136.57, -261.292, -140.318, 0.52 ) }
    dend_28 { pt3dadd( -136.584, -261.361, -140.356, 0.52 ) }
    dend_28 { pt3dadd( -136.783, -262.273, -140.769, 0.22 ) }
    dend_28 { pt3dadd( -136.809, -262.426, -140.825, 0.22 ) }
    dend_28 { pt3dadd( -136.962, -263.441, -141.248, 0.22 ) }
    dend_28 { pt3dadd( -137.002, -263.705, -141.362, 0.96 ) }
    dend_28 { pt3dadd( -137.146, -264.511, -141.752, 0.96 ) }
    dend_28 { pt3dadd( -137.159, -264.573, -141.782, 0.96 ) }
    dend_28 { pt3dadd( -137.454, -265.78, -142.374, 0.22 ) }
    dend_28 { pt3dadd( -137.782, -267.067, -143.056, 0.22 ) }
    dend_28 { pt3dadd( -137.802, -267.15, -143.119, 0.22 ) }
    dend_28 { pt3dadd( -137.96, -267.798, -143.614, 1.25 ) }
    dend_28 { pt3dadd( -138.049, -268.128, -143.865, 1.55 ) }
    dend_28 { pt3dadd( -138.104, -268.302, -143.987, 1.55 ) }
    dend_28 { pt3dadd( -138.207, -268.593, -144.174, 1.55 ) }
    dend_28 { pt3dadd( -138.851, -270.251, -145.262, 0.22 ) }
    dend_28 { pt3dadd( -139.365, -271.524, -146.034, 0.22 ) }
    dend_28 { pt3dadd( -139.522, -271.874, -146.23, 0.44 ) }
    dend_28 { pt3dadd( -139.748, -272.301, -146.454, 0.44 ) }
    dend_28 { pt3dadd( -139.829, -272.426, -146.514, 0.15 ) }
    dend_28 { pt3dadd( -140.24, -272.868, -146.909, 0.15 ) }
    dend_28 { pt3dadd( -140.289, -272.91, -146.956, 0.15 ) }
    dend_28 { pt3dadd( -140.838, -273.325, -147.577, 1.11 ) }
    dend_28 { pt3dadd( -141.302, -273.67, -148.168, 1.33 ) }
    dend_28 { pt3dadd( -141.422, -273.759, -148.33, 1.33 ) }
    dend_28 { pt3dadd( -143.518, -275.27, -151.204, 0.22 ) }
    dend_28 { pt3dadd( -144.061, -275.644, -151.948, 0.22 ) }
    dend_28 { pt3dadd( -144.106, -275.672, -152.008, 0.22 ) }
    dend_28 { pt3dadd( -144.706, -276.016, -152.801, 1.55 ) }
    dend_28 { pt3dadd( -144.985, -276.177, -153.143, 1.99 ) }
    dend_28 { pt3dadd( -145.029, -276.206, -153.189, 1.99 ) }
    dend_28 { pt3dadd( -145.646, -276.663, -153.651, 1.99 ) }
    dend_28 { pt3dadd( -147.245, -277.893, -154.881, 0.22 ) }
    dend_28 { pt3dadd( -147.618, -278.218, -155.161, 0.22 ) }
    dend_28 { pt3dadd( -148.216, -278.849, -155.66, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_28 { pt3dadd( -148.776, -279.587, -156.308, 0.22 ) }
    dend_28 { pt3dadd( -148.805, -279.634, -156.351, 0.22 ) }
    dend_28 { pt3dadd( -148.97, -280.147, -156.757, 1.25 ) }
    dend_28 { pt3dadd( -149.056, -280.748, -157.162, 1.55 ) }
    dend_28 { pt3dadd( -149.132, -281.983, -158.009, 0.74 ) }
    dend_28 { pt3dadd( -149.131, -283.137, -158.832, 0.22 ) }
    dend_28 { pt3dadd( -149.129, -283.195, -158.871, 0.22 ) }
    dend_28 { pt3dadd( -149.015, -285.067, -159.983, 0.22 ) }
    dend_28 { pt3dadd( -149.008, -285.156, -160.026, 0.44 ) }
    dend_28 { pt3dadd( -148.968, -285.575, -160.178, 0.44 ) }
    dend_28 { pt3dadd( -148.951, -285.738, -160.2, 0.44 ) }
    dend_28 { pt3dadd( -148.866, -286.546, -160.2, 0.22 ) }
    dend_28 { pt3dadd( -148.86, -286.626, -160.2, 0.22 ) }
    dend_28 { pt3dadd( -148.91, -286.912, -160.2, 0.52 ) }
    dend_28 { pt3dadd( -149.025, -287.336, -160.204, 0.52 ) }
    dend_28 { pt3dadd( -149.053, -287.412, -160.205, 0.52 ) }
    dend_28 { pt3dadd( -149.163, -287.654, -160.21, 0.22 ) }
    dend_28 { pt3dadd( -149.198, -287.715, -160.211, 0.22 ) }
    dend_28 { pt3dadd( -150.15, -289.249, -160.256, 0.22 ) }
    dend_28 { pt3dadd( -150.238, -289.384, -160.26, 0.22 ) }
    dend_28 { pt3dadd( -150.356, -289.56, -160.252, 0.66 ) }
    dend_28 { pt3dadd( -150.556, -289.863, -160.223, 0.66 ) }
    dend_28 { pt3dadd( -150.593, -289.922, -160.215, 0.66 ) }
    dend_28 { pt3dadd( -150.818, -290.289, -160.156, 0.15 ) }
    dend_28 { pt3dadd( -151.626, -291.715, -159.837, 0.15 ) }
    dend_28 { pt3dadd( -151.975, -292.364, -159.681, 0.52 ) }
    dend_28 { pt3dadd( -152.048, -292.508, -159.644, 0.52 ) }
    dend_28 { pt3dadd( -152.264, -292.953, -159.519, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 28/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.96504, 86.9865, -3.09842, 0.59 ) }
    dend_10 { pt3dadd( -5.32755, 87.7987, -2.87062, 0.59 ) }
    dend_10 { pt3dadd( -5.88003, 89.0018, -2.5483, 0.59 ) }
    dend_10 { pt3dadd( -6.26979, 89.8675, -2.3265, 0.59 ) }
    dend_10 { pt3dadd( -6.99194, 91.4744, -1.92795, 0.59 ) }
    dend_10 { pt3dadd( -7.50442, 92.6109, -1.65458, 0.59 ) }
    dend_10 { pt3dadd( -7.89245, 93.4753, -1.42221, 0.59 ) }
    dend_10 { pt3dadd( -8.21678, 94.2009, -1.22712, 1.03 ) }
    dend_10 { pt3dadd( -8.37188, 94.5373, -1.14897, 1.03 ) }
    dend_10 { pt3dadd( -8.45268, 94.7165, -1.09037, 1.03 ) }
    dend_10 { pt3dadd( -8.5549, 94.9437, -0.996369, 1.03 ) }
    dend_10 { pt3dadd( -9.01811, 95.9735, -0.539113, 0.81 ) }
    dend_10 { pt3dadd( -9.34252, 96.6943, -0.224063, 0.81 ) }
    dend_10 { pt3dadd( -9.7904, 97.6683, 0.202632, 0.74 ) }
    dend_10 { pt3dadd( -10.2457, 98.6105, 0.585967, 1.18 ) }
    dend_10 { pt3dadd( -10.5145, 99.1394, 0.798217, 1.18 ) }
    dend_10 { pt3dadd( -10.843, 99.7167, 1.00479, 1.18 ) }
    dend_10 { pt3dadd( -10.8949, 99.798, 1.02725, 1.18 ) }
    dend_10 { pt3dadd( -11.2096, 100.242, 1.13681, 1.18 ) }
    dend_10 { pt3dadd( -11.6429, 100.816, 1.25204, 1.18 ) }
    dend_10 { pt3dadd( -12.3611, 101.718, 1.38116, 1.03 ) }
    dend_10 { pt3dadd( -13.2502, 102.8, 1.53053, 0.88 ) }
    dend_10 { pt3dadd( -14.0888, 103.808, 1.66088, 0.88 ) }
    dend_10 { pt3dadd( -14.7149, 104.573, 1.73447, 1.03 ) }
    dend_10 { pt3dadd( -15.1666, 105.153, 1.76719, 1.03 ) }
    dend_10 { pt3dadd( -15.7379, 105.946, 1.77634, 1.03 ) }
    dend_10 { pt3dadd( -15.7822, 106.013, 1.77388, 1.03 ) }
    dend_10 { pt3dadd( -16.2411, 106.767, 1.72481, 0.88 ) }
    dend_10 { pt3dadd( -16.6932, 107.619, 1.65249, 0.81 ) }
    dend_10 { pt3dadd( -17.2552, 108.916, 1.53126, 0.81 ) }
    dend_10 { pt3dadd( -17.7042, 110.179, 1.44591, 0.81 ) }
    dend_10 { pt3dadd( -17.7223, 110.247, 1.4433, 0.81 ) }
    dend_10 { pt3dadd( -17.887, 111.074, 1.43448, 0.81 ) }
    dend_10 { pt3dadd( -18.0257, 112.308, 1.45568, 0.52 ) }
    dend_10 { pt3dadd( -18.0596, 113.322, 1.5072, 0.52 ) }
    dend_10 { pt3dadd( -18.0209, 114.222, 1.62403, 1.03 ) }
    dend_10 { pt3dadd( -17.9081, 115.375, 1.8546, 1.4 ) }
    dend_10 { pt3dadd( -17.8323, 116.048, 2.02847, 1.69 ) }
    dend_10 { pt3dadd( -17.735, 116.765, 2.26732, 1.69 ) }
    dend_10 { pt3dadd( -17.7273, 116.829, 2.29505, 1.69 ) }
    dend_10 { pt3dadd( -17.651, 118.137, 2.95497, 1.11 ) }
    dend_10 { pt3dadd( -17.654, 118.197, 2.98984, 1.11 ) }
    dend_10 { pt3dadd( -17.7091, 118.562, 3.24033, 0.66 ) }
    dend_10 { pt3dadd( -17.8138, 118.962, 3.53798, 0.66 ) }
    dend_10 { pt3dadd( -18.148, 119.958, 4.29766, 0.59 ) }
    dend_10 { pt3dadd( -18.3326, 120.422, 4.62842, 0.59 ) }
    dend_10 { pt3dadd( -18.725, 121.245, 5.14178, 0.59 ) }
    dend_10 { pt3dadd( -18.7764, 121.337, 5.19816, 0.59 ) }
    dend_10 { pt3dadd( -19.1994, 121.992, 5.64748, 0.66 ) }
    dend_10 { pt3dadd( -19.2381, 122.047, 5.69071, 0.66 ) }
    dend_10 { pt3dadd( -19.5386, 122.471, 6.0203, 0.66 ) }
    dend_10 { pt3dadd( -19.7845, 122.834, 6.32333, 0.88 ) }
    dend_10 { pt3dadd( -20.1491, 123.397, 6.80352, 0.88 ) }
    dend_10 { pt3dadd( -20.718, 124.295, 7.54906, 0.88 ) }
    dend_10 { pt3dadd( -21.2235, 125.116, 8.28039, 0.44 ) }
    dend_10 { pt3dadd( -21.5031, 125.589, 8.70656, 0.44 ) }
    dend_10 { pt3dadd( -21.9418, 126.38, 9.40011, 1.11 ) }
    dend_10 { pt3dadd( -21.9693, 126.43, 9.44069, 1.11 ) }
    dend_10 { pt3dadd( -22.3274, 127.103, 9.91232, 1.11 ) }
    dend_10 { pt3dadd( -22.9799, 128.3, 10.5669, 1.11 ) }
    dend_10 { pt3dadd( -23.2244, 128.731, 10.7599, 0.81 ) }
    dend_10 { pt3dadd( -23.5689, 129.326, 10.978, 1.11 ) }
    dend_10 { pt3dadd( -23.9048, 129.902, 11.1229, 0.81 ) }
    dend_10 { pt3dadd( -24.0948, 130.222, 11.1835, 0.74 ) }
    dend_10 { pt3dadd( -24.3664, 130.674, 11.2348, 0.44 ) }
    dend_10 { pt3dadd( -24.5895, 131.039, 11.2369, 0.29 ) }
    dend_10 { pt3dadd( -25.1844, 131.988, 11.2433, 0.29 ) }
    dend_10 { pt3dadd( -25.436, 132.391, 11.2464, 0.74 ) }
    dend_10 { pt3dadd( -25.7171, 132.837, 11.2287, 1.11 ) }
    dend_10 { pt3dadd( -25.7553, 132.895, 11.2237, 1.11 ) }
    dend_10 { pt3dadd( -26.0283, 133.307, 11.1729, 1.11 ) }
    dend_10 { pt3dadd( -26.3179, 133.742, 11.1087, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_10 { pt3dadd( -26.738, 134.35, 10.9947, 1.11 ) }
    dend_10 { pt3dadd( -27.1747, 134.976, 10.8705, 0.88 ) }
    dend_10 { pt3dadd( -27.2145, 135.032, 10.8589, 0.88 ) }
    dend_10 { pt3dadd( -27.5234, 135.462, 10.7752, 0.44 ) }
    dend_10 { pt3dadd( -28.0419, 136.2, 10.631, 0.44 ) }
    dend_10 { pt3dadd( -28.5821, 136.988, 10.4893, 0.44 ) }
    dend_10 { pt3dadd( -28.6204, 137.046, 10.4806, 0.44 ) }
    dend_10 { pt3dadd( -28.8465, 137.41, 10.4409, 0.81 ) }
    dend_10 { pt3dadd( -29.1932, 137.986, 10.3999, 1.18 ) }
    dend_10 { pt3dadd( -29.6363, 138.754, 10.3765, 1.4 ) }
    dend_10 { pt3dadd( -29.9323, 139.307, 10.4413, 1.4 ) }
    dend_10 { pt3dadd( -30.1334, 139.742, 10.5497, 1.18 ) }
    dend_10 { pt3dadd( -30.3344, 140.213, 10.6952, 0.88 ) }
    dend_10 { pt3dadd( -30.5462, 140.744, 10.8824, 0.81 ) }
    dend_10 { pt3dadd( -30.8903, 141.631, 11.2178, 0.59 ) }
    dend_10 { pt3dadd( -31.4691, 143.105, 11.8013, 0.52 ) }
    dend_10 { pt3dadd( -31.9089, 144.223, 12.2266, 0.52 ) }
    dend_10 { pt3dadd( -31.9623, 144.355, 12.2728, 0.52 ) }
    dend_10 { pt3dadd( -32.2707, 145.085, 12.4782, 0.52 ) }
    dend_10 { pt3dadd( -32.5975, 145.837, 12.6268, 0.74 ) }
    dend_10 { pt3dadd( -32.834, 146.38, 12.684, 0.74 ) }
    dend_10 { pt3dadd( -33.0623, 146.886, 12.6943, 0.96 ) }
    dend_10 { pt3dadd( -33.3394, 147.483, 12.7018, 0.96 ) }
    dend_10 { pt3dadd( -33.6458, 148.201, 12.7261, 0.96 ) }
    dend_10 { pt3dadd( -33.6986, 148.341, 12.7332, 0.96 ) }
    dend_10 { pt3dadd( -34.0517, 149.39, 12.8431, 0.96 ) }
    dend_10 { pt3dadd( -34.3567, 150.336, 12.9793, 1.18 ) }
    dend_10 { pt3dadd( -34.5371, 150.958, 13.0901, 1.55 ) }
    dend_10 { pt3dadd( -34.7546, 151.796, 13.2665, 1.55 ) }
    dend_10 { pt3dadd( -34.9515, 152.637, 13.5126, 1.55 ) }
    dend_10 { pt3dadd( -35.1615, 153.544, 13.8162, 0.88 ) }
    dend_10 { pt3dadd( -35.1952, 153.696, 13.8738, 0.88 ) }
    dend_10 { pt3dadd( -35.3217, 154.246, 14.0762, 0.88 ) }
    dend_10 { pt3dadd( -35.3573, 154.373, 14.1227, 0.88 ) }
    dend_10 { pt3dadd( -35.6942, 155.367, 14.56, 0.88 ) }
    dend_10 { pt3dadd( -35.9127, 155.993, 14.8305, 0.88 ) }
    dend_10 { pt3dadd( -35.9308, 156.046, 14.8507, 0.88 ) }
    dend_10 { pt3dadd( -36.2229, 156.906, 15.1616, 0.81 ) }
    dend_10 { pt3dadd( -36.5404, 157.831, 15.4578, 0.81 ) }
    dend_10 { pt3dadd( -36.9889, 159.237, 15.8932, 0.66 ) }
    dend_10 { pt3dadd( -37.2461, 160.124, 16.1294, 0.66 ) }
    dend_10 { pt3dadd( -37.4413, 160.884, 16.3435, 0.66 ) }
    dend_10 { pt3dadd( -37.4568, 160.95, 16.362, 0.66 ) }
    dend_10 { pt3dadd( -37.7157, 162.154, 16.685, 0.52 ) }
    dend_10 { pt3dadd( -37.9148, 163.11, 16.9095, 0.37 ) }
    dend_10 { pt3dadd( -38.2306, 164.56, 17.1677, 0.37 ) }
    dend_10 { pt3dadd( -38.4051, 165.292, 17.2899, 0.88 ) }
    dend_10 { pt3dadd( -38.5357, 165.823, 17.3835, 1.18 ) }
    dend_10 { pt3dadd( -38.7797, 166.772, 17.5463, 1.18 ) }
    dend_10 { pt3dadd( -38.919, 167.279, 17.6288, 1.18 ) }
    dend_10 { pt3dadd( -39.1262, 167.988, 17.7236, 0.74 ) }
    dend_10 { pt3dadd( -39.4926, 169.172, 17.8833, 0.74 ) }
    dend_10 { pt3dadd( -39.7865, 170.08, 17.9898, 1.03 ) }
    dend_10 { pt3dadd( -39.9965, 170.74, 18.0654, 1.33 ) }
    dend_10 { pt3dadd( -40.0264, 170.834, 18.0729, 1.33 ) }
    dend_10 { pt3dadd( -40.1474, 171.193, 18.0791, 1.33 ) }
    dend_10 { pt3dadd( -40.3594, 171.778, 18.0511, 1.03 ) }
    dend_10 { pt3dadd( -40.624, 172.485, 17.9396, 0.81 ) }
    dend_10 { pt3dadd( -40.9199, 173.232, 17.7608, 0.59 ) }
    dend_10 { pt3dadd( -41.3054, 174.175, 17.4666, 0.59 ) }
    dend_10 { pt3dadd( -41.558, 174.739, 17.267, 0.59 ) }
    dend_10 { pt3dadd( -41.8529, 175.344, 16.9983, 0.88 ) }
    dend_10 { pt3dadd( -42.2261, 176.035, 16.6409, 1.11 ) }
    dend_10 { pt3dadd( -42.5447, 176.568, 16.3269, 1.11 ) }
    dend_10 { pt3dadd( -42.9852, 177.251, 15.9124, 0.88 ) }
    dend_10 { pt3dadd( -43.3935, 177.863, 15.5196, 0.88 ) }
    dend_10 { pt3dadd( -43.8693, 178.586, 15.0525, 0.52 ) }
    dend_10 { pt3dadd( -44.1596, 179.012, 14.781, 0.52 ) }
    dend_10 { pt3dadd( -44.2103, 179.085, 14.7377, 0.52 ) }
    dend_10 { pt3dadd( -44.701, 179.837, 14.3348, 0.52 ) }
    dend_10 { pt3dadd( -45.3107, 180.838, 13.8896, 0.81 ) }
    dend_10 { pt3dadd( -45.3841, 180.967, 13.8413, 0.81 ) }
    dend_10 { pt3dadd( -45.7797, 181.685, 13.6552, 0.81 ) }
    dend_10 { pt3dadd( -45.8165, 181.754, 13.6397, 0.81 ) }
    dend_10 { pt3dadd( -46.1513, 182.412, 13.5334, 1.03 ) }
    dend_10 { pt3dadd( -46.182, 182.474, 13.5284, 1.03 ) }
    dend_10 { pt3dadd( -46.553, 183.284, 13.5071, 1.33 ) }
    dend_10 { pt3dadd( -46.8283, 183.922, 13.4734, 1.33 ) }
    dend_10 { pt3dadd( -46.8504, 183.978, 13.4684, 1.33 ) }
    dend_10 { pt3dadd( -47.1215, 184.668, 13.394, 1.55 ) }
    dend_10 { pt3dadd( -47.3191, 185.183, 13.3308, 1.55 ) }
    dend_10 { pt3dadd( -47.645, 186.072, 13.2177, 0.74 ) }
    dend_10 { pt3dadd( -47.9983, 187.099, 13.0832, 0.59 ) }
    dend_10 { pt3dadd( -48.2162, 187.772, 12.9992, 0.88 ) }
    dend_10 { pt3dadd( -48.4297, 188.456, 12.9217, 1.18 ) }
    dend_10 { pt3dadd( -48.6869, 189.349, 12.8379, 1.4 ) }
    dend_10 { pt3dadd( -48.817, 189.862, 12.7931, 1.77 ) }
    dend_10 { pt3dadd( -48.9292, 190.378, 12.7571, 1.47 ) }
    dend_10 { pt3dadd( -49.0902, 191.244, 12.6965, 1.03 ) }
    dend_10 { pt3dadd( -49.1993, 191.911, 12.6533, 0.66 ) }
    dend_10 { pt3dadd( -49.3397, 192.921, 12.5835, 0.66 ) }
    dend_10 { pt3dadd( -49.4564, 193.869, 12.5184, 0.88 ) }
    dend_10 { pt3dadd( -49.5474, 194.666, 12.4657, 1.18 ) }
    dend_10 { pt3dadd( -49.615, 195.256, 12.4512, 1.33 ) }
    dend_10 { pt3dadd( -49.6252, 195.326, 12.4526, 1.33 ) }
    dend_10 { pt3dadd( -49.7549, 195.894, 12.4866, 1.33 ) }
    dend_10 { pt3dadd( -50.0111, 196.746, 12.5623, 1.03 ) }
    dend_10 { pt3dadd( -50.3237, 197.64, 12.6625, 0.59 ) }
    dend_10 { pt3dadd( -50.6344, 198.449, 12.7539, 0.59 ) }
    dend_10 { pt3dadd( -51.1309, 199.651, 12.9106, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_10 { pt3dadd( -51.775, 201.123, 13.1133, 0.59 ) }
    dend_10 { pt3dadd( -52.2784, 202.221, 13.2674, 0.59 ) }
    dend_10 { pt3dadd( -52.3078, 202.284, 13.2761, 0.59 ) }
    dend_10 { pt3dadd( -52.5041, 202.702, 13.3276, 0.88 ) }
    dend_10 { pt3dadd( -52.9421, 203.681, 13.4157, 0.81 ) }
    dend_10 { pt3dadd( -53.2436, 204.44, 13.468, 1.11 ) }
    dend_10 { pt3dadd( -53.4919, 205.142, 13.4972, 1.33 ) }
    dend_10 { pt3dadd( -53.6173, 205.498, 13.4971, 1.33 ) }
    dend_10 { pt3dadd( -53.7746, 205.963, 13.4813, 1.33 ) }
    dend_10 { pt3dadd( -54.0509, 206.797, 13.4068, 0.81 ) }
    dend_10 { pt3dadd( -54.4325, 207.99, 13.2372, 0.74 ) }
    dend_10 { pt3dadd( -54.6255, 208.61, 13.1378, 0.52 ) }
    dend_10 { pt3dadd( -54.8697, 209.374, 13.0106, 0.29 ) }
    dend_10 { pt3dadd( -55.1738, 210.333, 12.7868, 0.29 ) }
    dend_10 { pt3dadd( -55.3936, 211.105, 12.541, 0.88 ) }
    dend_10 { pt3dadd( -55.4171, 211.196, 12.5074, 0.88 ) }
    dend_10 { pt3dadd( -55.5369, 211.661, 12.3228, 1.55 ) }
    dend_10 { pt3dadd( -55.7585, 212.546, 11.9538, 1.92 ) }
    dend_10 { pt3dadd( -56.1304, 213.976, 11.3575, 1.92 ) }
    dend_10 { pt3dadd( -56.4601, 215.072, 10.9175, 1.11 ) }
    dend_10 { pt3dadd( -56.7516, 215.965, 10.5882, 0.96 ) }
    dend_10 { pt3dadd( -57.0038, 216.643, 10.3833, 0.96 ) }
    dend_10 { pt3dadd( -57.0307, 216.706, 10.3695, 0.96 ) }
    dend_10 { pt3dadd( -57.3688, 217.381, 10.311, 1.18 ) }
    dend_10 { pt3dadd( -57.8427, 218.186, 10.4158, 1.18 ) }
    dend_10 { pt3dadd( -57.8799, 218.244, 10.4295, 1.18 ) }
    dend_10 { pt3dadd( -58.5179, 219.158, 10.6821, 0.81 ) }
    dend_10 { pt3dadd( -58.9417, 219.749, 10.8573, 0.59 ) }
    dend_10 { pt3dadd( -59.7318, 220.771, 11.1556, 0.59 ) }
    dend_10 { pt3dadd( -60.5582, 221.782, 11.4525, 0.59 ) }
    dend_10 { pt3dadd( -60.6083, 221.841, 11.4721, 0.59 ) }
    dend_10 { pt3dadd( -61.481, 222.814, 11.8032, 0.59 ) }
    dend_10 { pt3dadd( -61.5348, 222.87, 11.8221, 0.59 ) }
    dend_10 { pt3dadd( -62.5713, 223.874, 12.1692, 0.59 ) }
    dend_10 { pt3dadd( -62.6421, 223.938, 12.1952, 0.59 ) }
    dend_10 { pt3dadd( -63.4296, 224.623, 12.4701, 0.96 ) }
    dend_10 { pt3dadd( -63.9181, 225.06, 12.6542, 1.69 ) }
    dend_10 { pt3dadd( -64.279, 225.402, 12.7948, 2.06 ) }
    dend_10 { pt3dadd( -64.8879, 226.001, 13.0277, 2.06 ) }
    dend_10 { pt3dadd( -65.5983, 226.707, 13.3341, 1.77 ) }
    dend_10 { pt3dadd( -66.2901, 227.373, 13.6266, 1.11 ) }
    dend_10 { pt3dadd( -66.9243, 227.969, 13.9041, 0.29 ) }
    dend_10 { pt3dadd( -67.8363, 228.8, 14.3554, 0.29 ) }
    dend_10 { pt3dadd( -67.8924, 228.849, 14.3847, 0.29 ) }
    dend_10 { pt3dadd( -68.71, 229.554, 14.8187, 0.29 ) }
    dend_10 { pt3dadd( -68.9887, 229.79, 14.9567, 0.29 ) }
    dend_10 { pt3dadd( -69.4526, 230.175, 15.2597, 0.66 ) }
    dend_10 { pt3dadd( -69.7629, 230.419, 15.4984, 0.96 ) }
    dend_10 { pt3dadd( -70.1061, 230.723, 15.775, 0.96 ) }
    dend_10 { pt3dadd( -70.4873, 231.122, 16.0791, 0.96 ) }
    dend_10 { pt3dadd( -70.5267, 231.171, 16.1096, 0.96 ) }
    dend_10 { pt3dadd( -71.1692, 232.036, 16.6263, 0.37 ) }
    dend_10 { pt3dadd( -71.2719, 232.188, 16.7009, 0.37 ) }
    dend_10 { pt3dadd( -71.8044, 233.062, 17.0563, 0.37 ) }
    dend_10 { pt3dadd( -72.3417, 233.972, 17.2564, 0.37 ) }
    dend_10 { pt3dadd( -72.498, 234.24, 17.2688, 0.74 ) }
    dend_10 { pt3dadd( -72.5325, 234.301, 17.2634, 0.74 ) }
    dend_10 { pt3dadd( -73.1789, 235.483, 16.9976, 0.74 ) }
    dend_10 { pt3dadd( -73.711, 236.459, 16.7247, 0.52 ) }
    dend_10 { pt3dadd( -74.4933, 237.918, 16.2232, 0.59 ) }
    dend_10 { pt3dadd( -74.8225, 238.521, 15.9911, 0.44 ) }
    dend_10 { pt3dadd( -74.8549, 238.58, 15.9725, 0.44 ) }
    dend_10 { pt3dadd( -75.261, 239.318, 15.7979, 0.44 ) }
    dend_10 { pt3dadd( -75.6213, 239.946, 15.7179, 0.81 ) }
    dend_10 { pt3dadd( -75.8128, 240.27, 15.7248, 1.33 ) }
    dend_10 { pt3dadd( -76.1722, 240.834, 15.8116, 1.33 ) }
    dend_10 { pt3dadd( -76.7518, 241.61, 15.9325, 0.88 ) }
    dend_10 { pt3dadd( -77.0476, 241.968, 15.9954, 0.88 ) }
    dend_10 { pt3dadd( -77.5001, 242.457, 16.0904, 0.59 ) }
    dend_10 { pt3dadd( -77.8678, 242.828, 16.1647, 0.29 ) }
    dend_10 { pt3dadd( -78.6369, 243.533, 16.3008, 0.29 ) }
    dend_10 { pt3dadd( -79.4076, 244.186, 16.4124, 0.29 ) }
    dend_10 { pt3dadd( -79.7323, 244.432, 16.4416, 0.29 ) }
    dend_10 { pt3dadd( -80.0777, 244.686, 16.4828, 0.81 ) }
    dend_10 { pt3dadd( -80.1342, 244.726, 16.4909, 0.81 ) }
    dend_10 { pt3dadd( -80.5621, 245.035, 16.5613, 1.03 ) }
    dend_10 { pt3dadd( -80.6458, 245.099, 16.577, 1.03 ) }
    dend_10 { pt3dadd( -81.1454, 245.541, 16.6681, 1.03 ) }
    dend_10 { pt3dadd( -81.6435, 246.036, 16.7429, 0.29 ) }
    dend_10 { pt3dadd( -81.9402, 246.388, 16.7869, 0.29 ) }
    dend_10 { pt3dadd( -82.0332, 246.519, 16.7987, 0.29 ) }
    dend_10 { pt3dadd( -82.0686, 246.579, 16.8023, 0.29 ) }
    dend_10 { pt3dadd( -82.4369, 247.32, 16.8263, 0.29 ) }
    dend_10 { pt3dadd( -82.6002, 247.724, 16.8287, 0.59 ) }
    dend_10 { pt3dadd( -82.846, 248.474, 16.8157, 1.33 ) }
    dend_10 { pt3dadd( -83.0124, 249.063, 16.8057, 1.47 ) }
    dend_10 { pt3dadd( -83.1403, 249.576, 16.7981, 1.47 ) }
    dend_10 { pt3dadd( -83.277, 250.17, 16.7908, 1.03 ) }
    dend_10 { pt3dadd( -83.3905, 250.672, 16.7859, 0.66 ) }
    dend_10 { pt3dadd( -83.5887, 251.533, 16.7797, 0.37 ) }
    dend_10 { pt3dadd( -83.6068, 251.611, 16.7794, 0.37 ) }
    dend_10 { pt3dadd( -83.9384, 252.983, 16.7794, 0.37 ) }
    dend_10 { pt3dadd( -84.1472, 253.818, 16.7794, 0.88 ) }
    dend_10 { pt3dadd( -84.3338, 254.555, 16.7794, 0.96 ) }
    dend_10 { pt3dadd( -84.4271, 254.92, 16.7794, 1.18 ) }
    dend_10 { pt3dadd( -84.4521, 255.016, 16.7794, 1.18 ) }
    dend_10 { pt3dadd( -84.6168, 255.672, 16.7794, 0.96 ) }
    dend_10 { pt3dadd( -84.7743, 256.401, 16.7794, 0.96 ) }
    dend_10 { pt3dadd( -84.8623, 256.903, 16.7794, 1.25 ) }
    dend_10 { pt3dadd( -84.9772, 257.719, 16.7794, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_10 { pt3dadd( -85.055, 258.334, 16.7794, 0.59 ) }
    dend_10 { pt3dadd( -85.1386, 259.063, 16.7794, 0.29 ) }
    dend_10 { pt3dadd( -85.2899, 260.523, 16.7794, 0.29 ) }
    dend_10 { pt3dadd( -85.3834, 261.468, 16.7794, 0.29 ) }
    dend_10 { pt3dadd( -85.4382, 262.061, 16.7794, 0.74 ) }
    dend_10 { pt3dadd( -85.5079, 262.872, 16.7634, 0.96 ) }
    dend_10 { pt3dadd( -85.5634, 263.534, 16.7405, 1.11 ) }
    dend_10 { pt3dadd( -85.5892, 263.822, 16.7267, 1.11 ) }
    dend_10 { pt3dadd( -85.6455, 264.424, 16.6752, 0.37 ) }
    dend_10 { pt3dadd( -85.7388, 265.363, 16.5687, 0.37 ) }
    dend_10 { pt3dadd( -85.9318, 267.071, 16.3392, 0.37 ) }
    dend_10 { pt3dadd( -85.9966, 267.578, 16.265, 0.96 ) }
    dend_10 { pt3dadd( -86.0081, 267.656, 16.2533, 0.96 ) }
    dend_10 { pt3dadd( -86.156, 268.513, 16.088, 1.25 ) }
    dend_10 { pt3dadd( -86.292, 269.215, 15.9269, 1.25 ) }
    dend_10 { pt3dadd( -86.4476, 269.903, 15.7494, 1.4 ) }
    dend_10 { pt3dadd( -86.6701, 270.761, 15.5143, 1.55 ) }
    dend_10 { pt3dadd( -86.831, 271.327, 15.3576, 1.55 ) }
    dend_10 { pt3dadd( -87.2108, 272.551, 15.068, 0.22 ) }
    dend_10 { pt3dadd( -87.258, 272.691, 15.0417, 0.22 ) }
    dend_10 { pt3dadd( -87.3878, 273.132, 14.9743, 0.22 ) }
    dend_10 { pt3dadd( -87.4245, 273.292, 14.9582, 0.22 ) }
    dend_10 { pt3dadd( -87.5015, 273.842, 14.9478, 0.22 ) }
    dend_10 { pt3dadd( -87.5532, 274.482, 15.0664, 0.29 ) }
    dend_10 { pt3dadd( -87.5628, 274.702, 15.1453, 0.29 ) }
    dend_10 { pt3dadd( -87.6425, 275.609, 15.495, 0.29 ) }
    dend_10 { pt3dadd( -87.6505, 275.683, 15.525, 0.29 ) }
    dend_10 { pt3dadd( -87.7164, 276.136, 15.7592, 0.29 ) }
    dend_10 { pt3dadd( -87.93, 277.089, 16.3426, 0.29 ) }
    dend_10 { pt3dadd( -87.9482, 277.145, 16.3802, 0.29 ) }
    dend_10 { pt3dadd( -88.2195, 277.689, 16.7857, 0.29 ) }
    dend_10 { pt3dadd( -88.2603, 277.745, 16.8257, 0.29 ) }
    dend_10 { pt3dadd( -88.8848, 278.505, 17.2847, 0.88 ) }
    dend_10 { pt3dadd( -89.1208, 278.756, 17.4015, 1.03 ) }
    dend_10 { pt3dadd( -89.1696, 278.804, 17.4156, 1.03 ) }
    dend_10 { pt3dadd( -89.667, 279.29, 17.5286, 1.03 ) }
    dend_10 { pt3dadd( -90.4976, 280.069, 17.6164, 0.29 ) }
    dend_10 { pt3dadd( -90.8092, 280.346, 17.6156, 0.29 ) }
    dend_10 { pt3dadd( -91.3697, 280.822, 17.5734, 0.29 ) }
    dend_10 { pt3dadd( -91.8294, 281.199, 17.5468, 0.29 ) }
    dend_10 { pt3dadd( -91.8841, 281.243, 17.5447, 0.29 ) }
    dend_10 { pt3dadd( -92.3796, 281.615, 17.5383, 0.29 ) }
    dend_10 { pt3dadd( -92.4455, 281.661, 17.5394, 0.29 ) }
    dend_10 { pt3dadd( -93.1009, 282.122, 17.5782, 0.29 ) }
    dend_10 { pt3dadd( -93.1009, 282.122, 17.5782, 0.74 ) }
    dend_10 { pt3dadd( -93.278, 282.263, 17.6235, 0.74 ) }
    dend_10 { pt3dadd( -93.448, 282.405, 17.688, 0.74 ) }
    dend_10 { pt3dadd( -93.5578, 282.513, 17.7612, 0.74 ) }
    dend_10 { pt3dadd( -93.6574, 282.618, 17.8207, 0.74 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.96504, 86.9865, -3.09842, 1.11 ) }
    dend_7 { pt3dadd( -4.68443, 87.942, -3.31903, 1.11 ) }
    dend_7 { pt3dadd( -4.36887, 88.9912, -3.62534, 0.96 ) }
    dend_7 { pt3dadd( -3.94597, 90.4012, -4.11016, 0.81 ) }
    dend_7 { pt3dadd( -3.71239, 91.2455, -4.41193, 0.81 ) }
    dend_7 { pt3dadd( -3.6795, 91.3839, -4.45963, 0.81 ) }
    dend_7 { pt3dadd( -3.50571, 92.2672, -4.77563, 0.81 ) }
    dend_7 { pt3dadd( -3.35414, 93.3714, -5.19322, 0.81 ) }
    dend_7 { pt3dadd( -3.31287, 94.1242, -5.46099, 1.03 ) }
    dend_7 { pt3dadd( -3.33463, 94.7572, -5.64538, 1.33 ) }
    dend_7 { pt3dadd( -3.41645, 95.7485, -5.91654, 1.33 ) }
    dend_7 { pt3dadd( -3.52704, 96.7871, -6.1692, 1.33 ) }
    dend_7 { pt3dadd( -3.65179, 97.752, -6.3692, 1.47 ) }
    dend_7 { pt3dadd( -3.79169, 98.9019, -6.55196, 1.47 ) }
    dend_7 { pt3dadd( -3.93029, 100.174, -6.74516, 1.47 ) }
    dend_7 { pt3dadd( -4.0577, 101.58, -6.95619, 1.47 ) }
    dend_7 { pt3dadd( -4.11754, 102.379, -7.07104, 1.18 ) }
    dend_7 { pt3dadd( -4.15945, 103.176, -7.16794, 1.18 ) }
    dend_7 { pt3dadd( -4.18036, 103.916, -7.25659, 1.47 ) }
    dend_7 { pt3dadd( -4.19303, 104.957, -7.36876, 1.47 ) }
    dend_7 { pt3dadd( -4.18983, 105.995, -7.44011, 1.69 ) }
    dend_7 { pt3dadd( -4.1896, 106.065, -7.44182, 1.69 ) }
    dend_7 { pt3dadd( -4.16744, 107.168, -7.44678, 1.69 ) }
    dend_7 { pt3dadd( -4.11966, 108.407, -7.42957, 1.69 ) }
    dend_7 { pt3dadd( -4.05177, 109.574, -7.39258, 1.69 ) }
    dend_7 { pt3dadd( -3.96904, 110.524, -7.3456, 1.69 ) }
    dend_7 { pt3dadd( -3.89005, 111.252, -7.31098, 1.33 ) }
    dend_7 { pt3dadd( -3.75079, 112.452, -7.27318, 1.25 ) }
    dend_7 { pt3dadd( -3.64748, 113.327, -7.25906, 1.25 ) }
    dend_7 { pt3dadd( -3.54468, 114.23, -7.27225, 1.03 ) }
    dend_7 { pt3dadd( -3.4337, 115.277, -7.32024, 0.96 ) }
    dend_7 { pt3dadd( -3.38694, 116.073, -7.38062, 0.96 ) }
    dend_7 { pt3dadd( -3.38051, 116.928, -7.45164, 1.18 ) }
    dend_7 { pt3dadd( -3.41558, 117.601, -7.50955, 1.18 ) }
    dend_7 { pt3dadd( -3.50528, 118.483, -7.58263, 1.18 ) }
    dend_7 { pt3dadd( -3.51517, 118.552, -7.58793, 1.18 ) }
    dend_7 { pt3dadd( -3.88749, 120.611, -7.72297, 1.18 ) }
    dend_7 { pt3dadd( -4.04977, 121.398, -7.7618, 1.4 ) }
    dend_7 { pt3dadd( -4.24668, 122.283, -7.78525, 1.69 ) }
    dend_7 { pt3dadd( -4.41305, 123.027, -7.80264, 1.92 ) }
    dend_7 { pt3dadd( -4.50454, 123.463, -7.81102, 2.06 ) }
    dend_7 { pt3dadd( -4.65172, 124.238, -7.79146, 1.84 ) }
    dend_7 { pt3dadd( -4.73994, 124.785, -7.75548, 1.69 ) }
    dend_7 { pt3dadd( -4.87913, 125.803, -7.6845, 1.69 ) }
    dend_7 { pt3dadd( -5.06407, 127.495, -7.56793, 1.69 ) }
    dend_7 { pt3dadd( -5.15921, 128.663, -7.49265, 1.69 ) }
    dend_7 { pt3dadd( -5.26025, 130.181, -7.40425, 1.84 ) }
    dend_7 { pt3dadd( -5.3225, 131.269, -7.32924, 1.84 ) }
    dend_7 { pt3dadd( -5.37635, 132.216, -7.25819, 1.33 ) }
    dend_7 { pt3dadd( -5.46487, 133.601, -7.149, 1.25 ) }
    dend_7 { pt3dadd( -5.5681, 134.905, -7.0476, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_7 { pt3dadd( -5.69558, 136.156, -6.97326, 1.11 ) }
    dend_7 { pt3dadd( -5.8267, 137.243, -6.9416, 1.11 ) }
    dend_7 { pt3dadd( -5.94553, 138.127, -6.90386, 1.4 ) }
    dend_7 { pt3dadd( -6.02272, 138.649, -6.8716, 1.77 ) }
    dend_7 { pt3dadd( -6.17232, 139.611, -6.81859, 1.99 ) }
    dend_7 { pt3dadd( -6.32343, 140.64, -6.77736, 1.99 ) }
    dend_7 { pt3dadd( -6.42424, 141.448, -6.75925, 1.47 ) }
    dend_7 { pt3dadd( -6.48387, 142.178, -6.75925, 1.18 ) }
    dend_7 { pt3dadd( -6.51179, 142.854, -6.75925, 1.11 ) }
    dend_7 { pt3dadd( -6.51077, 144.026, -6.73252, 0.96 ) }
    dend_7 { pt3dadd( -6.44431, 145.483, -6.67027, 0.96 ) }
    dend_7 { pt3dadd( -6.43939, 145.553, -6.66679, 0.96 ) }
    dend_7 { pt3dadd( -6.29596, 147.182, -6.57975, 0.96 ) }
    dend_7 { pt3dadd( -6.22914, 147.921, -6.53992, 0.74 ) }
    dend_7 { pt3dadd( -6.15779, 148.706, -6.49963, 0.59 ) }
    dend_7 { pt3dadd( -6.06176, 149.879, -6.4254, 0.59 ) }
    dend_7 { pt3dadd( -6.0033, 150.788, -6.36281, 1.25 ) }
    dend_7 { pt3dadd( -5.96565, 151.668, -6.30309, 1.84 ) }
    dend_7 { pt3dadd( -5.95268, 152.759, -6.23446, 1.84 ) }
    dend_7 { pt3dadd( -5.96042, 153.928, -6.18656, 1.84 ) }
    dend_7 { pt3dadd( -5.98664, 154.95, -6.14151, 1.84 ) }
    dend_7 { pt3dadd( -6.01538, 155.758, -6.0884, 1.62 ) }
    dend_7 { pt3dadd( -6.04181, 156.485, -6.02716, 1.33 ) }
    dend_7 { pt3dadd( -6.09178, 157.657, -5.91978, 1.11 ) }
    dend_7 { pt3dadd( -6.13885, 158.77, -5.81697, 1.11 ) }
    dend_7 { pt3dadd( -6.19473, 160.005, -5.68499, 1.11 ) }
    dend_7 { pt3dadd( -6.19774, 160.074, -5.67723, 1.11 ) }
    dend_7 { pt3dadd( -6.21321, 160.947, -5.56571, 0.81 ) }
    dend_7 { pt3dadd( -6.20603, 161.383, -5.50543, 0.74 ) }
    dend_7 { pt3dadd( -6.15171, 162.461, -5.35499, 0.74 ) }
    dend_7 { pt3dadd( -6.05939, 163.796, -5.19351, 0.52 ) }
    dend_7 { pt3dadd( -6.05447, 163.866, -5.18802, 0.52 ) }
    dend_7 { pt3dadd( -6.00412, 164.775, -5.12796, 0.52 ) }
    dend_7 { pt3dadd( -5.98823, 165.372, -5.07547, 1.03 ) }
    dend_7 { pt3dadd( -5.98625, 166.33, -4.98304, 1.33 ) }
    dend_7 { pt3dadd( -6.00947, 167.338, -4.88548, 1.92 ) }
    dend_7 { pt3dadd( -6.03527, 167.955, -4.83109, 1.92 ) }
    dend_7 { pt3dadd( -6.09814, 168.981, -4.73263, 1.33 ) }
    dend_7 { pt3dadd( -6.18599, 170.067, -4.62023, 0.59 ) }
    dend_7 { pt3dadd( -6.29766, 171.448, -4.49055, 0.59 ) }
    dend_7 { pt3dadd( -6.33186, 172.03, -4.44452, 0.81 ) }
    dend_7 { pt3dadd( -6.35071, 172.553, -4.41179, 0.88 ) }
    dend_7 { pt3dadd( -6.35036, 172.623, -4.41023, 0.88 ) }
    dend_7 { pt3dadd( -6.33791, 173.505, -4.43801, 0.88 ) }
    dend_7 { pt3dadd( -6.33051, 174.163, -4.5006, 0.66 ) }
    dend_7 { pt3dadd( -6.36915, 175.119, -4.59993, 0.66 ) }
    dend_7 { pt3dadd( -6.3752, 175.189, -4.60662, 0.66 ) }
    dend_7 { pt3dadd( -6.47645, 175.9, -4.66564, 0.66 ) }
    dend_7 { pt3dadd( -6.62369, 176.678, -4.7176, 0.66 ) }
    dend_7 { pt3dadd( -6.78144, 177.335, -4.74963, 0.96 ) }
    dend_7 { pt3dadd( -6.98981, 178.063, -4.76849, 1.25 ) }
    dend_7 { pt3dadd( -7.25679, 178.904, -4.78442, 1.84 ) }
    dend_7 { pt3dadd( -7.50694, 179.648, -4.79243, 1.99 ) }
    dend_7 { pt3dadd( -7.73564, 180.306, -4.79243, 1.77 ) }
    dend_7 { pt3dadd( -7.90473, 180.81, -4.79243, 1.69 ) }
    dend_7 { pt3dadd( -8.15205, 181.525, -4.79243, 1.55 ) }
    dend_7 { pt3dadd( -8.36771, 182.148, -4.79243, 1.4 ) }
    dend_7 { pt3dadd( -8.56446, 182.747, -4.79243, 1.03 ) }
    dend_7 { pt3dadd( -8.75712, 183.382, -4.79243, 0.88 ) }
    dend_7 { pt3dadd( -9.03283, 184.363, -4.80867, 0.66 ) }
    dend_7 { pt3dadd( -9.15142, 184.81, -4.82113, 0.44 ) }
    dend_7 { pt3dadd( -9.16799, 184.878, -4.82351, 0.44 ) }
    dend_7 { pt3dadd( -9.41382, 185.952, -4.86598, 0.44 ) }
    dend_7 { pt3dadd( -9.64556, 187.086, -4.94154, 0.44 ) }
    dend_7 { pt3dadd( -9.83698, 188.071, -5.02551, 1.11 ) }
    dend_7 { pt3dadd( -10.0109, 189.044, -5.11994, 1.4 ) }
    dend_7 { pt3dadd( -10.1428, 189.833, -5.19983, 1.69 ) }
    dend_7 { pt3dadd( -10.2256, 190.333, -5.24996, 2.14 ) }
    dend_7 { pt3dadd( -10.3738, 191.33, -5.34532, 2.14 ) }
    dend_7 { pt3dadd( -10.4859, 192.295, -5.43081, 1.69 ) }
    dend_7 { pt3dadd( -10.5499, 192.953, -5.47987, 1.4 ) }
    dend_7 { pt3dadd( -10.6022, 193.61, -5.52363, 1.18 ) }
    dend_7 { pt3dadd( -10.6754, 194.716, -5.58317, 0.81 ) }
    dend_7 { pt3dadd( -10.7446, 195.886, -5.62597, 0.81 ) }
    dend_7 { pt3dadd( -10.8242, 196.984, -5.6383, 0.66 ) }
    dend_7 { pt3dadd( -10.8309, 197.053, -5.63803, 0.66 ) }
    dend_7 { pt3dadd( -10.9272, 197.777, -5.62202, 0.52 ) }
    dend_7 { pt3dadd( -11.0477, 198.43, -5.59499, 0.37 ) }
    dend_7 { pt3dadd( -11.1422, 198.817, -5.57016, 0.37 ) }
    dend_7 { pt3dadd( -11.4117, 199.649, -5.49767, 0.37 ) }
    dend_7 { pt3dadd( -11.6415, 200.248, -5.43553, 0.74 ) }
    dend_7 { pt3dadd( -11.8463, 200.74, -5.38568, 0.74 ) }
    dend_7 { pt3dadd( -12.0729, 201.244, -5.33585, 0.81 ) }
    dend_7 { pt3dadd( -12.1414, 201.394, -5.32349, 0.81 ) }
    dend_7 { pt3dadd( -12.3333, 201.842, -5.29704, 0.81 ) }
    dend_7 { pt3dadd( -12.4868, 202.244, -5.28662, 1.03 ) }
    dend_7 { pt3dadd( -12.5111, 202.31, -5.28712, 1.03 ) }
    dend_7 { pt3dadd( -12.8149, 203.236, -5.29916, 1.03 ) }
    dend_7 { pt3dadd( -13.046, 204.096, -5.30974, 1.18 ) }
    dend_7 { pt3dadd( -13.0591, 204.155, -5.3104, 1.18 ) }
    dend_7 { pt3dadd( -13.2237, 205.037, -5.30972, 1.18 ) }
    dend_7 { pt3dadd( -13.3451, 205.822, -5.30208, 1.69 ) }
    dend_7 { pt3dadd( -13.4836, 206.903, -5.28387, 1.92 ) }
    dend_7 { pt3dadd( -13.5693, 207.852, -5.26165, 1.92 ) }
    dend_7 { pt3dadd( -13.6025, 208.359, -5.22048, 1.77 ) }
    dend_7 { pt3dadd( -13.6415, 209.043, -5.13624, 1.25 ) }
    dend_7 { pt3dadd( -13.6731, 209.625, -5.04519, 0.96 ) }
    dend_7 { pt3dadd( -13.7104, 210.195, -4.94374, 0.66 ) }
    dend_7 { pt3dadd( -13.8251, 211.272, -4.75398, 0.66 ) }
    dend_7 { pt3dadd( -13.9904, 212.483, -4.50229, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_7 { pt3dadd( -14.1158, 213.336, -4.31479, 0.66 ) }
    dend_7 { pt3dadd( -14.238, 214.137, -4.13453, 0.96 ) }
    dend_7 { pt3dadd( -14.3923, 215.168, -3.90072, 0.96 ) }
    dend_7 { pt3dadd( -14.6346, 216.928, -3.52141, 0.96 ) }
    dend_7 { pt3dadd( -14.753, 217.998, -3.32196, 0.52 ) }
    dend_7 { pt3dadd( -14.7936, 218.586, -3.24265, 0.52 ) }
    dend_7 { pt3dadd( -14.7959, 218.684, -3.23084, 0.52 ) }
    dend_7 { pt3dadd( -14.786, 219.425, -3.15725, 0.52 ) }
    dend_7 { pt3dadd( -14.7347, 220.307, -3.11595, 1.03 ) }
    dend_7 { pt3dadd( -14.6298, 221.41, -3.12275, 1.62 ) }
    dend_7 { pt3dadd( -14.5289, 222.357, -3.17685, 2.28 ) }
    dend_7 { pt3dadd( -14.384, 223.658, -3.2632, 2.58 ) }
    dend_7 { pt3dadd( -14.3035, 224.328, -3.31116, 2.58 ) }
    dend_7 { pt3dadd( -14.1975, 225.2, -3.37727, 0.96 ) }
    dend_7 { pt3dadd( -14.1894, 225.269, -3.38424, 0.96 ) }
    dend_7 { pt3dadd( -14.0809, 226.378, -3.51479, 0.96 ) }
    dend_7 { pt3dadd( -14.042, 226.971, -3.58741, 1.55 ) }
    dend_7 { pt3dadd( -14.0213, 227.872, -3.69138, 1.18 ) }
    dend_7 { pt3dadd( -14.0454, 228.752, -3.77566, 1.18 ) }
    dend_7 { pt3dadd( -14.1349, 229.884, -3.83766, 1.18 ) }
    dend_7 { pt3dadd( -14.2191, 230.642, -3.8687, 0.96 ) }
    dend_7 { pt3dadd( -14.3645, 231.606, -3.89318, 0.81 ) }
    dend_7 { pt3dadd( -14.5329, 232.566, -3.90096, 0.74 ) }
    dend_7 { pt3dadd( -14.7596, 233.752, -3.88844, 0.74 ) }
    dend_7 { pt3dadd( -15.0165, 235.163, -3.84265, 0.74 ) }
    dend_7 { pt3dadd( -15.033, 235.26, -3.83738, 0.74 ) }
    dend_7 { pt3dadd( -15.1448, 235.997, -3.78016, 1.11 ) }
    dend_7 { pt3dadd( -15.2971, 237.091, -3.67682, 1.33 ) }
    dend_7 { pt3dadd( -15.4311, 238.187, -3.56226, 1.33 ) }
    dend_7 { pt3dadd( -15.5631, 239.344, -3.4415, 1.33 ) }
    dend_7 { pt3dadd( -15.6771, 240.363, -3.34099, 1.33 ) }
    dend_7 { pt3dadd( -15.7991, 241.38, -3.24592, 1.33 ) }
    dend_7 { pt3dadd( -15.8883, 242.037, -3.19335, 0.81 ) }
    dend_7 { pt3dadd( -16.0078, 242.759, -3.14442, 0.66 ) }
    dend_7 { pt3dadd( -16.2837, 244.152, -3.07558, 0.66 ) }
    dend_7 { pt3dadd( -16.3026, 244.23, -3.0736, 0.66 ) }
    dend_7 { pt3dadd( -16.7794, 245.97, -3.07322, 0.66 ) }
    dend_7 { pt3dadd( -17.0128, 246.744, -3.09636, 1.25 ) }
    dend_7 { pt3dadd( -17.2067, 247.343, -3.11453, 1.84 ) }
    dend_7 { pt3dadd( -17.5023, 248.2, -3.14187, 2.14 ) }
    dend_7 { pt3dadd( -17.768, 248.947, -3.16641, 2.14 ) }
    dend_7 { pt3dadd( -17.912, 249.37, -3.17845, 2.14 ) }
    dend_7 { pt3dadd( -18.1421, 250.097, -3.19394, 1.84 ) }
    dend_7 { pt3dadd( -18.2936, 250.677, -3.19985, 1.62 ) }
    dend_7 { pt3dadd( -18.4426, 251.573, -3.20785, 1.11 ) }
    dend_7 { pt3dadd( -18.451, 251.643, -3.20906, 1.11 ) }
    dend_7 { pt3dadd( -18.5726, 253.044, -3.2404, 1.03 ) }
    dend_7 { pt3dadd( -18.6289, 253.856, -3.261, 0.96 ) }
    dend_7 { pt3dadd( -18.6942, 255.316, -3.3007, 0.88 ) }
    dend_7 { pt3dadd( -18.7399, 257.265, -3.3556, 0.88 ) }
    dend_7 { pt3dadd( -18.7386, 257.852, -3.37189, 1.25 ) }
    dend_7 { pt3dadd( -18.721, 258.584, -3.39242, 1.47 ) }
    dend_7 { pt3dadd( -18.7102, 258.734, -3.39662, 1.47 ) }
    dend_7 { pt3dadd( -18.6334, 259.406, -3.42231, 1.47 ) }
    dend_7 { pt3dadd( -18.6184, 259.504, -3.42682, 1.47 ) }
    dend_7 { pt3dadd( -18.4892, 260.237, -3.46124, 1.33 ) }
    dend_7 { pt3dadd( -18.2799, 261.318, -3.50583, 1.18 ) }
    dend_7 { pt3dadd( -18.0561, 262.456, -3.55375, 1.18 ) }
    dend_7 { pt3dadd( -17.9231, 263.151, -3.58312, 1.18 ) }
    dend_7 { pt3dadd( -17.7785, 263.961, -3.61604, 1.03 ) }
    dend_7 { pt3dadd( -17.6518, 264.834, -3.64709, 0.96 ) }
    dend_7 { pt3dadd( -17.572, 265.488, -3.68109, 0.88 ) }
    dend_7 { pt3dadd( -17.4905, 266.305, -3.73364, 0.88 ) }
    dend_7 { pt3dadd( -17.4876, 266.374, -3.73858, 0.88 ) }
    dend_7 { pt3dadd( -17.4854, 267.474, -3.81657, 0.88 ) }
    dend_7 { pt3dadd( -17.552, 268.797, -3.92528, 0.88 ) }
    dend_7 { pt3dadd( -17.6111, 269.429, -3.98041, 1.11 ) }
    dend_7 { pt3dadd( -17.621, 269.498, -3.98635, 1.11 ) }
    dend_7 { pt3dadd( -17.785, 270.371, -4.05917, 1.11 ) }
    dend_7 { pt3dadd( -17.8078, 270.474, -4.06859, 1.11 ) }
    dend_7 { pt3dadd( -18.0441, 271.355, -4.16422, 1.11 ) }
    dend_7 { pt3dadd( -18.2452, 272.207, -4.25375, 1.33 ) }
    dend_7 { pt3dadd( -18.3591, 272.823, -4.32345, 1.33 ) }
    dend_7 { pt3dadd( -18.3691, 272.901, -4.33344, 1.33 ) }
    dend_7 { pt3dadd( -18.4482, 273.912, -4.47157, 0.59 ) }
    dend_7 { pt3dadd( -18.4731, 274.341, -4.53101, 0.37 ) }
    dend_7 { pt3dadd( -18.5247, 275.749, -4.72814, 0.37 ) }
    dend_7 { pt3dadd( -18.5479, 276.825, -4.87687, 0.96 ) }
    dend_7 { pt3dadd( -18.5635, 277.917, -5.01332, 1.25 ) }
    dend_7 { pt3dadd( -18.5727, 278.285, -5.05122, 1.62 ) }
    dend_7 { pt3dadd( -18.5956, 278.798, -5.08619, 1.77 ) }
    dend_7 { pt3dadd( -18.6526, 279.326, -5.10548, 1.77 ) }
    dend_7 { pt3dadd( -18.6662, 279.395, -5.10635, 1.77 ) }
    dend_7 { pt3dadd( -18.8624, 280.221, -5.06026, 1.11 ) }
    dend_7 { pt3dadd( -18.9601, 280.591, -5.028, 0.88 ) }
    dend_7 { pt3dadd( -19.17, 281.32, -4.95504, 0.81 ) }
    dend_7 { pt3dadd( -19.6312, 282.915, -4.78378, 0.81 ) }
    dend_7 { pt3dadd( -19.9129, 283.932, -4.67997, 0.81 ) }
    dend_7 { pt3dadd( -20.1016, 284.653, -4.61125, 0.59 ) }
    dend_7 { pt3dadd( -20.3491, 285.715, -4.51719, 0.59 ) }
    dend_7 { pt3dadd( -20.635, 287.119, -4.40854, 0.59 ) }
    dend_7 { pt3dadd( -20.7753, 287.968, -4.3526, 0.59 ) }
    dend_7 { pt3dadd( -20.8839, 288.85, -4.31073, 1.25 ) }
    dend_7 { pt3dadd( -20.9441, 289.507, -4.29657, 1.62 ) }
    dend_7 { pt3dadd( -20.9921, 290.251, -4.30507, 2.06 ) }
    dend_7 { pt3dadd( -21.0099, 291.05, -4.31174, 2.21 ) }
    dend_7 { pt3dadd( -21.0048, 291.714, -4.30766, 2.21 ) }
    dend_7 { pt3dadd( -20.9806, 292.447, -4.28516, 1.55 ) }
    dend_7 { pt3dadd( -20.9517, 292.961, -4.25471, 1.11 ) }
    dend_7 { pt3dadd( -20.9034, 293.468, -4.22332, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_7 { pt3dadd( -20.8398, 293.908, -4.19666, 0.66 ) }
    dend_7 { pt3dadd( -20.6513, 294.858, -4.14645, 0.52 ) }
    dend_7 { pt3dadd( -20.4903, 295.561, -4.11893, 0.52 ) }
    dend_7 { pt3dadd( -20.4745, 295.629, -4.11732, 0.52 ) }
    dend_7 { pt3dadd( -20.3603, 296.121, -4.11286, 0.52 ) }
    dend_7 { pt3dadd( -20.1939, 296.918, -4.14108, 0.52 ) }
    dend_7 { pt3dadd( -20.0637, 297.705, -4.20047, 0.81 ) }
    dend_7 { pt3dadd( -19.9787, 298.506, -4.28045, 0.81 ) }
    dend_7 { pt3dadd( -19.9517, 299.179, -4.34542, 1.03 ) }
    dend_7 { pt3dadd( -19.9518, 299.259, -4.35186, 1.03 ) }
    dend_7 { pt3dadd( -19.9778, 300.01, -4.39869, 1.11 ) }
    dend_7 { pt3dadd( -20.0226, 300.886, -4.47328, 1.18 ) }
    dend_7 { pt3dadd( -20.103, 301.978, -4.57782, 1.18 ) }
    dend_7 { pt3dadd( -20.1928, 302.992, -4.67591, 1.33 ) }
    dend_7 { pt3dadd( -20.2691, 303.748, -4.74492, 1.33 ) }
    dend_7 { pt3dadd( -20.3669, 304.69, -4.82053, 1.33 ) }
    dend_7 { pt3dadd( -20.4729, 305.696, -4.88667, 1.18 ) }
    dend_7 { pt3dadd( -20.5982, 306.915, -4.96463, 0.96 ) }
    dend_7 { pt3dadd( -20.6883, 307.861, -5.02094, 0.96 ) }
    dend_7 { pt3dadd( -20.7611, 308.671, -5.06281, 1.25 ) }
    dend_7 { pt3dadd( -20.8535, 309.776, -5.10742, 1.92 ) }
    dend_7 { pt3dadd( -20.9381, 310.796, -5.13276, 2.8 ) }
    dend_7 { pt3dadd( -21.0001, 311.603, -5.13276, 2.43 ) }
    dend_7 { pt3dadd( -21.0699, 312.36, -5.13276, 1.62 ) }
    dend_7 { pt3dadd( -21.1552, 312.984, -5.13276, 1.4 ) }
    dend_7 { pt3dadd( -21.2444, 313.491, -5.13276, 1.03 ) }
    dend_7 { pt3dadd( -21.2603, 313.559, -5.13433, 1.03 ) }
    dend_7 { pt3dadd( -21.4558, 314.266, -5.16377, 0.88 ) }
    dend_7 { pt3dadd( -21.7959, 315.393, -5.22511, 0.81 ) }
    dend_7 { pt3dadd( -22.2137, 316.676, -5.30542, 0.81 ) }
    dend_7 { pt3dadd( -22.2354, 316.742, -5.30976, 0.81 ) }
    dend_7 { pt3dadd( -22.639, 317.956, -5.389, 0.81 ) }
    dend_7 { pt3dadd( -22.8391, 318.571, -5.42797, 1.11 ) }
    dend_7 { pt3dadd( -23.0001, 319.071, -5.45871, 1.11 ) }
    dend_7 { pt3dadd( -23.1989, 319.728, -5.50647, 1.4 ) }
    dend_7 { pt3dadd( -23.4469, 320.582, -5.57133, 1.47 ) }
    dend_7 { pt3dadd( -23.5869, 321.185, -5.611, 1.47 ) }
    dend_7 { pt3dadd( -23.6775, 321.686, -5.63743, 1.47 ) }
    dend_7 { pt3dadd( -23.7492, 322.314, -5.67177, 1.47 ) }
    dend_7 { pt3dadd( -23.7999, 323.054, -5.71323, 0.96 ) }
    dend_7 { pt3dadd( -23.8115, 323.703, -5.74737, 0.88 ) }
    dend_7 { pt3dadd( -23.7922, 325.184, -5.86354, 0.88 ) }
    dend_7 { pt3dadd( -23.7906, 325.254, -5.87006, 0.88 ) }
    dend_7 { pt3dadd( -23.771, 326.504, -6.02382, 0.88 ) }
    dend_7 { pt3dadd( -23.7723, 326.583, -6.03508, 0.88 ) }
    dend_7 { pt3dadd( -23.882, 327.805, -6.21416, 0.88 ) }
    dend_7 { pt3dadd( -24.0099, 328.594, -6.36526, 0.74 ) }
    dend_7 { pt3dadd( -24.1948, 329.393, -6.54566, 0.74 ) }
    dend_7 { pt3dadd( -24.3453, 329.96, -6.6827, 0.96 ) }
    dend_7 { pt3dadd( -24.603, 330.858, -6.91193, 0.96 ) }
    dend_7 { pt3dadd( -24.9743, 332.202, -7.25867, 0.96 ) }
    dend_7 { pt3dadd( -25.1543, 332.882, -7.4262, 0.37 ) }
    dend_7 { pt3dadd( -25.2646, 333.375, -7.5266, 0.37 ) }
    dend_7 { pt3dadd( -25.2762, 333.443, -7.53955, 0.37 ) }
    dend_7 { pt3dadd( -25.3662, 334.186, -7.65094, 0.37 ) }
    dend_7 { pt3dadd( -25.4177, 334.985, -7.75451, 0.96 ) }
    dend_7 { pt3dadd( -25.4494, 335.942, -7.84517, 1.55 ) }
    dend_7 { pt3dadd( -25.4763, 336.53, -7.87424, 1.77 ) }
    dend_7 { pt3dadd( -25.4792, 336.6, -7.87677, 1.77 ) }
    dend_7 { pt3dadd( -25.5027, 337.487, -7.89618, 1.55 ) }
    dend_7 { pt3dadd( -25.5082, 338.067, -7.90012, 1.18 ) }
    dend_7 { pt3dadd( -25.4933, 338.577, -7.9036, 1.03 ) }
    dend_7 { pt3dadd( -25.4561, 339.24, -7.91601, 0.81 ) }
    dend_7 { pt3dadd( -25.3869, 340.36, -7.94473, 0.81 ) }
    dend_7 { pt3dadd( -25.3197, 341.401, -7.97573, 0.81 ) }
    dend_7 { pt3dadd( -25.257, 342.282, -7.99317, 1.11 ) }
    dend_7 { pt3dadd( -25.1769, 343.478, -8.00523, 1.4 ) }
    dend_7 { pt3dadd( -25.1191, 344.429, -8.00698, 1.55 ) }
    dend_7 { pt3dadd( -25.0546, 345.67, -7.9994, 1.84 ) }
    dend_7 { pt3dadd( -25.0272, 346.549, -7.98629, 1.84 ) }
    dend_7 { pt3dadd( -25.0126, 347.555, -7.96144, 2.06 ) }
    dend_7 { pt3dadd( -25.0092, 348.214, -7.93777, 2.06 ) }
    dend_7 { pt3dadd( -25.0058, 348.874, -7.90662, 1.84 ) }
    dend_7 { pt3dadd( -25.0034, 349.453, -7.88161, 1.69 ) }
    dend_7 { pt3dadd( -24.9986, 350.048, -7.87247, 1.55 ) }
    dend_7 { pt3dadd( -25.0005, 350.698, -7.88243, 1.25 ) }
    dend_7 { pt3dadd( -25.0087, 351.357, -7.92286, 1.11 ) }
    dend_7 { pt3dadd( -25.0291, 352.681, -8.02843, 1.11 ) }
    dend_7 { pt3dadd( -25.0308, 352.751, -8.03461, 1.11 ) }
    dend_7 { pt3dadd( -25.0775, 353.812, -8.15082, 1.11 ) }
    dend_7 { pt3dadd( -25.1524, 354.913, -8.27964, 1.11 ) }
    dend_7 { pt3dadd( -25.2293, 355.826, -8.39202, 0.88 ) }
    dend_7 { pt3dadd( -25.2966, 356.546, -8.48857, 0.88 ) }
    dend_7 { pt3dadd( -25.4162, 357.788, -8.65839, 0.88 ) }
    dend_7 { pt3dadd( -25.5771, 359.593, -8.89382, 0.88 ) }
    dend_7 { pt3dadd( -25.6763, 360.789, -9.03543, 1.25 ) }
    dend_7 { pt3dadd( -25.6844, 360.894, -9.04821, 1.25 ) }
    dend_7 { pt3dadd( -25.7532, 361.943, -9.16772, 1.84 ) }
    dend_7 { pt3dadd( -25.804, 362.888, -9.27376, 1.92 ) }
    dend_7 { pt3dadd( -25.8262, 363.395, -9.325, 1.84 ) }
    dend_7 { pt3dadd( -25.879, 364.271, -9.39145, 1.4 ) }
    dend_7 { pt3dadd( -25.9423, 365.053, -9.44523, 0.81 ) }
    dend_7 { pt3dadd( -26.0365, 365.79, -9.49664, 0.81 ) }
    dend_7 { pt3dadd( -26.2106, 366.734, -9.5577, 0.66 ) }
    dend_7 { pt3dadd( -26.4302, 367.682, -9.62408, 0.59 ) }
    dend_7 { pt3dadd( -26.6914, 368.661, -9.7138, 0.59 ) }
    dend_7 { pt3dadd( -26.7107, 368.727, -9.72085, 0.59 ) }
    dend_7 { pt3dadd( -27.0131, 369.768, -9.85741, 1.25 ) }
    dend_7 { pt3dadd( -27.2317, 370.518, -9.96966, 1.69 ) }
    dend_7 { pt3dadd( -27.4108, 371.162, -10.0746, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_7 { pt3dadd( -27.6248, 372.061, -10.2425, 1.4 ) }
    dend_7 { pt3dadd( -27.7622, 372.845, -10.3898, 0.88 ) }
    dend_7 { pt3dadd( -27.9084, 373.94, -10.5805, 0.59 ) }
    dend_7 { pt3dadd( -28.0971, 375.81, -10.858, 0.59 ) }
    dend_7 { pt3dadd( -28.1025, 375.879, -10.8672, 0.59 ) }
    dend_7 { pt3dadd( -28.1968, 377.303, -11.0266, 0.59 ) }
    dend_7 { pt3dadd( -28.279, 378.708, -11.1402, 0.59 ) }
    dend_7 { pt3dadd( -28.3431, 379.877, -11.2139, 0.59 ) }
    dend_7 { pt3dadd( -28.3803, 380.687, -11.241, 0.96 ) }
    dend_7 { pt3dadd( -28.3841, 380.793, -11.2397, 0.96 ) }
    dend_7 { pt3dadd( -28.4398, 381.682, -11.1828, 1.18 ) }
    dend_7 { pt3dadd( -28.5266, 382.485, -11.0787, 1.4 ) }
    dend_7 { pt3dadd( -28.5368, 382.552, -11.0631, 1.4 ) }
    dend_7 { pt3dadd( -28.6262, 383.115, -10.8943, 1.4 ) }
    dend_7 { pt3dadd( -28.7611, 383.963, -10.6194, 1.4 ) }
    dend_7 { pt3dadd( -28.9248, 385.017, -10.2739, 1.4 ) }
    dend_7 { pt3dadd( -29.0813, 386.069, -9.91655, 1.4 ) }
    dend_7 { pt3dadd( -29.2934, 387.537, -9.44148, 1.11 ) }
    dend_7 { pt3dadd( -29.3023, 387.603, -9.42233, 1.11 ) }
    dend_7 { pt3dadd( -29.4314, 388.585, -9.13398, 1.11 ) }
    dend_7 { pt3dadd( -29.5507, 389.574, -8.87099, 1.11 ) }
    dend_7 { pt3dadd( -29.5582, 389.641, -8.85287, 1.11 ) }
    dend_7 { pt3dadd( -29.6667, 390.568, -8.62229, 1.18 ) }
    dend_7 { pt3dadd( -29.7759, 391.348, -8.46281, 1.18 ) }
    dend_7 { pt3dadd( -29.9368, 392.348, -8.2449, 0.81 ) }
    dend_7 { pt3dadd( -30.1418, 393.47, -7.98398, 0.74 ) }
    dend_7 { pt3dadd( -30.4367, 394.871, -7.66132, 0.74 ) }
    dend_7 { pt3dadd( -30.5249, 395.275, -7.57592, 1.03 ) }
    dend_7 { pt3dadd( -30.6765, 395.877, -7.46929, 1.4 ) }
    dend_7 { pt3dadd( -30.6975, 395.954, -7.45969, 1.4 ) }
    dend_7 { pt3dadd( -30.8505, 396.516, -7.42284, 1.4 ) }
    dend_7 { pt3dadd( -31.0312, 397.187, -7.385, 0.96 ) }
    dend_7 { pt3dadd( -31.1565, 397.686, -7.36349, 0.88 ) }
    dend_7 { pt3dadd( -31.4153, 398.834, -7.31225, 0.88 ) }
    dend_7 { pt3dadd( -31.7657, 400.531, -7.23407, 0.88 ) }
    dend_7 { pt3dadd( -31.9106, 401.26, -7.20103, 1.18 ) }
    dend_7 { pt3dadd( -32.0447, 401.974, -7.13735, 1.47 ) }
    dend_7 { pt3dadd( -32.0562, 402.043, -7.12852, 1.47 ) }
    dend_7 { pt3dadd( -32.1323, 402.62, -7.03531, 1.47 ) }
    dend_7 { pt3dadd( -32.1376, 402.689, -7.02302, 1.47 ) }
    dend_7 { pt3dadd( -32.1857, 403.497, -6.93167, 1.47 ) }
    dend_7 { pt3dadd( -32.2458, 404.643, -6.84661, 1.18 ) }
    dend_7 { pt3dadd( -32.2937, 405.375, -6.81812, 0.81 ) }
    dend_7 { pt3dadd( -32.336, 405.968, -6.81297, 0.66 ) }
    dend_7 { pt3dadd( -32.4493, 407.601, -6.8468, 0.66 ) }
    dend_7 { pt3dadd( -32.5492, 408.986, -6.9353, 0.66 ) }
    dend_7 { pt3dadd( -32.5538, 409.056, -6.94326, 0.66 ) }
    dend_7 { pt3dadd( -32.6064, 409.828, -7.07796, 0.96 ) }
    dend_7 { pt3dadd( -32.6564, 410.476, -7.19376, 1.33 ) }
    dend_7 { pt3dadd( -32.7344, 411.264, -7.32605, 1.62 ) }
    dend_7 { pt3dadd( -32.7771, 411.842, -7.40504, 1.33 ) }
    dend_7 { pt3dadd( -32.7909, 412.241, -7.43094, 1.18 ) }
    dend_7 { pt3dadd( -32.7916, 412.31, -7.43483, 1.18 ) }
    dend_7 { pt3dadd( -32.7756, 412.747, -7.45214, 1.18 ) }
    dend_7 { pt3dadd( -32.7447, 413.421, -7.46867, 0.96 ) }
    dend_7 { pt3dadd( -32.6909, 414.38, -7.48042, 0.74 ) }
    dend_7 { pt3dadd( -32.6075, 415.854, -7.48042, 0.74 ) }
    dend_7 { pt3dadd( -32.6033, 415.934, -7.48042, 0.74 ) }
    dend_7 { pt3dadd( -32.5124, 417.775, -7.51524, 0.74 ) }
    dend_7 { pt3dadd( -32.4661, 418.797, -7.5497, 1.11 ) }
    dend_7 { pt3dadd( -32.4624, 418.877, -7.5563, 1.11 ) }
    dend_7 { pt3dadd( -32.4301, 419.761, -7.67042, 1.69 ) }
    dend_7 { pt3dadd( -32.4089, 420.835, -7.87117, 2.21 ) }
    dend_7 { pt3dadd( -32.3984, 421.736, -8.07693, 2.21 ) }
    dend_7 { pt3dadd( -32.3954, 422.505, -8.29842, 1.03 ) }
    dend_7 { pt3dadd( -32.3845, 423.47, -8.59011, 0.88 ) }
    dend_7 { pt3dadd( -32.3828, 423.536, -8.61109, 0.88 ) }
    dend_7 { pt3dadd( -32.3463, 424.408, -8.89517, 0.66 ) }
    dend_7 { pt3dadd( -32.3159, 425.106, -9.10709, 0.66 ) }
    dend_7 { pt3dadd( -32.3103, 425.27, -9.15307, 0.66 ) }
    dend_7 { pt3dadd( -32.287, 426.187, -9.4002, 0.66 ) }
    dend_7 { pt3dadd( -32.2798, 426.984, -9.58014, 0.59 ) }
    dend_7 { pt3dadd( -32.2809, 427.421, -9.67586, 0.74 ) }
    dend_7 { pt3dadd( -32.2917, 428.062, -9.83288, 0.74 ) }
    dend_7 { pt3dadd( -32.3609, 429.111, -10.0955, 0.81 ) }
    dend_7 { pt3dadd( -32.3674, 429.178, -10.1124, 0.81 ) }
    dend_7 { pt3dadd( -32.4575, 429.959, -10.3196, 0.81 ) }
    dend_7 { pt3dadd( -32.5573, 430.742, -10.5206, 0.81 ) }
    dend_7 { pt3dadd( -32.6886, 431.837, -10.7985, 0.66 ) }
    dend_7 { pt3dadd( -32.8222, 433.047, -11.0811, 0.52 ) }
    dend_7 { pt3dadd( -32.8295, 433.125, -11.0966, 0.52 ) }
    dend_7 { pt3dadd( -32.904, 433.995, -11.2552, 0.52 ) }
    dend_7 { pt3dadd( -32.9388, 434.498, -11.336, 0.52 ) }
    dend_7 { pt3dadd( -32.9762, 435.152, -11.4169, 1.11 ) }
    dend_7 { pt3dadd( -33.0106, 435.959, -11.4749, 1.69 ) }
    dend_7 { pt3dadd( -33.0265, 436.394, -11.4973, 2.06 ) }
    dend_7 { pt3dadd( -33.0734, 437.255, -11.5214, 1.4 ) }
    dend_7 { pt3dadd( -33.1162, 437.984, -11.5214, 1.11 ) }
    dend_7 { pt3dadd( -33.1572, 438.648, -11.5214, 0.81 ) }
    dend_7 { pt3dadd( -33.1882, 439.172, -11.5149, 0.59 ) }
    dend_7 { pt3dadd( -33.2364, 439.984, -11.4968, 0.59 ) }
    dend_7 { pt3dadd( -33.2898, 440.865, -11.4701, 0.59 ) }
    dend_7 { pt3dadd( -33.3889, 442.323, -11.4615, 0.59 ) }
    dend_7 { pt3dadd( -33.4121, 442.62, -11.4663, 0.52 ) }
    dend_7 { pt3dadd( -33.4523, 443.129, -11.4836, 0.52 ) }
    dend_7 { pt3dadd( -33.4581, 443.199, -11.4869, 0.52 ) }
    dend_7 { pt3dadd( -33.5581, 444.521, -11.5661, 0.52 ) }
    dend_7 { pt3dadd( -33.6336, 445.54, -11.6385, 1.03 ) }
    dend_7 { pt3dadd( -33.6969, 446.415, -11.7079, 1.55 ) }
    dend_7 { pt3dadd( -33.7609, 447.65, -11.8053, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_7 { pt3dadd( -33.7764, 448.227, -11.8625, 2.36 ) }
    dend_7 { pt3dadd( -33.7714, 448.67, -11.9061, 2.14 ) }
    dend_7 { pt3dadd( -33.7476, 449.038, -11.9376, 1.84 ) }
    dend_7 { pt3dadd( -33.6995, 449.695, -11.9752, 1.69 ) }
    dend_7 { pt3dadd( -33.6533, 450.508, -11.9783, 1.4 ) }
    dend_7 { pt3dadd( -33.6168, 451.308, -11.9461, 0.29 ) }
    dend_7 { pt3dadd( -33.5846, 452.196, -11.8796, 0.29 ) }
    dend_7 { pt3dadd( -33.5647, 452.824, -11.8141, 0.29 ) }
    dend_7 { pt3dadd( -33.528, 454.025, -11.6537, 0.29 ) }
    dend_7 { pt3dadd( -33.4941, 455.202, -11.4592, 0.29 ) }
    dend_7 { pt3dadd( -33.4828, 455.496, -11.3982, 0.74 ) }
    dend_7 { pt3dadd( -33.4744, 455.657, -11.3585, 0.74 ) }
    dend_7 { pt3dadd( -33.4147, 456.38, -11.1897, 0.74 ) }
    dend_7 { pt3dadd( -33.4042, 456.477, -11.1719, 0.74 ) }
    dend_7 { pt3dadd( -33.3059, 457.13, -11.094, 0.88 ) }
    dend_7 { pt3dadd( -33.2236, 457.868, -11.0341, 0.88 ) }
    dend_7 { pt3dadd( -33.2071, 458.087, -11.0117, 0.88 ) }
    dend_7 { pt3dadd( -33.1724, 458.814, -10.9225, 0.88 ) }
    dend_7 { pt3dadd( -33.1684, 459.55, -10.8204, 1.25 ) }
    dend_7 { pt3dadd( -33.1962, 460.272, -10.7194, 1.25 ) }
    dend_7 { pt3dadd( -33.2425, 460.869, -10.6346, 1.11 ) }
    dend_7 { pt3dadd( -33.2545, 460.973, -10.6174, 1.11 ) }
    dend_7 { pt3dadd( -33.2921, 461.275, -10.5635, 1.11 ) }
    dend_7 { pt3dadd( -33.3677, 461.86, -10.4576, 0.66 ) }
    dend_7 { pt3dadd( -33.4678, 462.589, -10.3398, 0.66 ) }
    dend_7 { pt3dadd( -33.4841, 462.693, -10.3263, 0.66 ) }
    dend_7 { pt3dadd( -33.5933, 463.407, -10.2592, 0.52 ) }
    dend_7 { pt3dadd( -33.7841, 464.497, -10.171, 0.52 ) }
    dend_7 { pt3dadd( -33.8518, 464.855, -10.1481, 0.96 ) }
    dend_7 { pt3dadd( -34.0059, 465.633, -10.087, 1.25 ) }
    dend_7 { pt3dadd( -34.1313, 466.238, -10.0355, 1.55 ) }
    dend_7 { pt3dadd( -34.2409, 466.739, -9.99527, 1.55 ) }
    dend_7 { pt3dadd( -34.3993, 467.441, -9.94594, 1.18 ) }
    dend_7 { pt3dadd( -34.6009, 468.449, -9.86426, 0.81 ) }
    dend_7 { pt3dadd( -34.7122, 469.077, -9.81574, 0.88 ) }
    dend_7 { pt3dadd( -34.7343, 469.225, -9.80703, 0.88 ) }
    dend_7 { pt3dadd( -34.8972, 470.487, -9.75258, 0.88 ) }
    dend_7 { pt3dadd( -34.9051, 470.556, -9.7506, 0.88 ) }
    dend_7 { pt3dadd( -35.0791, 472.449, -9.72388, 0.88 ) }
    dend_7 { pt3dadd( -35.2031, 474.013, -9.72628, 0.88 ) }
    dend_7 { pt3dadd( -35.2619, 474.911, -9.74327, 1.33 ) }
    dend_7 { pt3dadd( -35.3039, 475.64, -9.75706, 1.4 ) }
    dend_7 { pt3dadd( -35.3494, 476.438, -9.78692, 1.4 ) }
    dend_7 { pt3dadd( -35.3928, 477.096, -9.82021, 0.88 ) }
    dend_7 { pt3dadd( -35.3976, 477.166, -9.82467, 0.88 ) }
    dend_7 { pt3dadd( -35.4651, 478.191, -9.89495, 0.88 ) }
    dend_7 { pt3dadd( -35.5665, 479.651, -9.99072, 0.88 ) }
    dend_7 { pt3dadd( -35.6642, 481.05, -10.1488, 0.88 ) }
    dend_7 { pt3dadd( -35.7228, 481.921, -10.2803, 1.18 ) }
    dend_7 { pt3dadd( -35.7656, 482.71, -10.4234, 1.18 ) }
    dend_7 { pt3dadd( -35.7683, 482.788, -10.4389, 1.18 ) }
    dend_7 { pt3dadd( -35.7703, 483.639, -10.6628, 1.18 ) }
    dend_7 { pt3dadd( -35.7263, 484.835, -11.0304, 0.96 ) }
    dend_7 { pt3dadd( -35.7215, 484.902, -11.051, 0.96 ) }
    dend_7 { pt3dadd( -35.6635, 485.634, -11.2733, 0.88 ) }
    dend_7 { pt3dadd( -35.5628, 486.901, -11.6287, 0.81 ) }
    dend_7 { pt3dadd( -35.4746, 488.109, -11.9183, 0.37 ) }
    dend_7 { pt3dadd( -35.4171, 488.892, -12.0724, 0.59 ) }
    dend_7 { pt3dadd( -35.3547, 489.773, -12.2015, 0.81 ) }
    dend_7 { pt3dadd( -35.2842, 490.867, -12.3496, 0.96 ) }
    dend_7 { pt3dadd( -35.2401, 491.604, -12.4357, 1.55 ) }
    dend_7 { pt3dadd( -35.183, 492.621, -12.5199, 1.99 ) }
    dend_7 { pt3dadd( -35.1623, 493.22, -12.5239, 2.21 ) }
    dend_7 { pt3dadd( -35.1611, 493.3, -12.5221, 2.21 ) }
    dend_7 { pt3dadd( -35.1607, 493.66, -12.5033, 2.21 ) }
    dend_7 { pt3dadd( -35.1604, 494.539, -12.4299, 1.77 ) }
    dend_7 { pt3dadd( -35.1783, 495.2, -12.3702, 1.47 ) }
    dend_7 { pt3dadd( -35.2079, 495.857, -12.3078, 1.25 ) }
    dend_7 { pt3dadd( -35.2632, 496.652, -12.2406, 0.59 ) }
    dend_7 { pt3dadd( -35.3069, 497.245, -12.19, 0.37 ) }
    dend_7 { pt3dadd( -35.3585, 497.905, -12.1341, 0.29 ) }
    dend_7 { pt3dadd( -35.4346, 498.854, -12.0601, 0.29 ) }
    dend_7 { pt3dadd( -35.4397, 498.923, -12.0556, 0.29 ) }
    dend_7 { pt3dadd( -35.5263, 500.318, -12.0004, 0.29 ) }
    dend_7 { pt3dadd( -35.5527, 500.672, -11.9852, 0.66 ) }
    dend_7 { pt3dadd( -35.5632, 500.822, -11.9788, 0.66 ) }
    dend_7 { pt3dadd( -35.5985, 501.41, -11.9553, 0.88 ) }
    dend_7 { pt3dadd( -35.6004, 501.48, -11.9531, 0.88 ) }
    dend_7 { pt3dadd( -35.6276, 502.209, -11.9203, 1.11 ) }
    dend_7 { pt3dadd( -35.6562, 502.953, -11.8818, 1.33 ) }
    dend_7 { pt3dadd( -35.6816, 503.483, -11.8549, 1.33 ) }
    dend_7 { pt3dadd( -35.7209, 504.158, -11.8181, 0.81 ) }
    dend_7 { pt3dadd( -35.8009, 505.175, -11.7573, 0.66 ) }
    dend_7 { pt3dadd( -35.9122, 506.19, -11.6967, 0.66 ) }
    dend_7 { pt3dadd( -35.9288, 506.302, -11.69, 0.66 ) }
    dend_7 { pt3dadd( -36.0726, 507.021, -11.6501, 1.55 ) }
    dend_7 { pt3dadd( -36.3316, 508.018, -11.6053, 2.14 ) }
    dend_7 { pt3dadd( -36.5523, 508.75, -11.5814, 2.5 ) }
    dend_7 { pt3dadd( -36.8982, 509.778, -11.5646, 2.5 ) }
    dend_7 { pt3dadd( -37.0643, 510.278, -11.5647, 2.43 ) }
    dend_7 { pt3dadd( -37.3704, 511.253, -11.5667, 1.62 ) }
    dend_7 { pt3dadd( -37.6059, 512.039, -11.5699, 0.59 ) }
    dend_7 { pt3dadd( -37.7892, 512.689, -11.5741, 0.59 ) }
    dend_7 { pt3dadd( -38.1403, 514.067, -11.5869, 0.44 ) }
    dend_7 { pt3dadd( -38.3545, 515.064, -11.5952, 0.44 ) }
    dend_7 { pt3dadd( -38.4819, 515.787, -11.6002, 0.74 ) }
    dend_7 { pt3dadd( -38.4931, 515.866, -11.6014, 0.74 ) }
    dend_7 { pt3dadd( -38.559, 516.417, -11.6244, 0.74 ) }
    dend_7 { pt3dadd( -38.5668, 516.487, -11.6294, 0.74 ) }
    dend_7 { pt3dadd( -38.6666, 517.43, -11.7264, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_7 { pt3dadd( -38.6744, 517.499, -11.735, 0.74 ) }
    dend_7 { pt3dadd( -38.7528, 518.274, -11.836, 0.37 ) }
    dend_7 { pt3dadd( -38.8501, 519.549, -12.0036, 0.37 ) }
    dend_7 { pt3dadd( -38.8527, 519.619, -12.0123, 0.37 ) }
    dend_7 { pt3dadd( -38.8466, 520.195, -12.076, 0.66 ) }
    dend_7 { pt3dadd( -38.84, 520.274, -12.0833, 0.66 ) }
    dend_7 { pt3dadd( -38.7306, 520.998, -12.1258, 1.25 ) }
    dend_7 { pt3dadd( -38.7128, 521.076, -12.1275, 1.25 ) }
    dend_7 { pt3dadd( -38.4959, 521.849, -12.1275, 1.77 ) }
    dend_7 { pt3dadd( -38.2777, 522.608, -12.1426, 1.77 ) }
    dend_7 { pt3dadd( -38.107, 523.169, -12.1612, 1.92 ) }
    dend_7 { pt3dadd( -37.8374, 524.105, -12.2005, 1.55 ) }
    dend_7 { pt3dadd( -37.5707, 525.064, -12.2309, 0.74 ) }
    dend_7 { pt3dadd( -37.3112, 526.05, -12.2546, 0.52 ) }
    dend_7 { pt3dadd( -37.1951, 526.519, -12.2624, 0.37 ) }
    dend_7 { pt3dadd( -37.1799, 526.587, -12.2629, 0.37 ) }
    dend_7 { pt3dadd( -36.9602, 527.738, -12.2595, 0.37 ) }
    dend_7 { pt3dadd( -36.8377, 528.49, -12.2471, 0.37 ) }
    dend_7 { pt3dadd( -36.8283, 528.559, -12.245, 0.37 ) }
    dend_7 { pt3dadd( -36.7598, 529.139, -12.2199, 1.03 ) }
    dend_7 { pt3dadd( -36.7043, 529.6, -12.1964, 1.4 ) }
    dend_7 { pt3dadd( -36.6343, 530.255, -12.1559, 1.55 ) }
    dend_7 { pt3dadd( -36.5605, 530.983, -12.1079, 1.25 ) }
    dend_7 { pt3dadd( -36.5114, 531.574, -12.0695, 0.81 ) }
    dend_7 { pt3dadd( -36.4673, 532.156, -12.0245, 0.52 ) }
    dend_7 { pt3dadd( -36.4352, 532.816, -11.9669, 0.52 ) }
    dend_7 { pt3dadd( -36.4092, 533.852, -11.868, 0.52 ) }
    dend_7 { pt3dadd( -36.4087, 533.921, -11.861, 0.52 ) }
    dend_7 { pt3dadd( -36.4358, 534.723, -11.7812, 0.81 ) }
    dend_7 { pt3dadd( -36.441, 534.803, -11.7739, 0.81 ) }
    dend_7 { pt3dadd( -36.5238, 535.693, -11.7043, 0.96 ) }
    dend_7 { pt3dadd( -36.5331, 535.773, -11.7002, 0.96 ) }
    dend_7 { pt3dadd( -36.6354, 536.414, -11.667, 0.96 ) }
    dend_7 { pt3dadd( -36.7347, 536.93, -11.6267, 0.96 ) }
    dend_7 { pt3dadd( -36.8221, 537.294, -11.5914, 1.18 ) }
    dend_7 { pt3dadd( -36.8631, 537.428, -11.5779, 1.18 ) }
    dend_7 { pt3dadd( -37.0363, 537.92, -11.5244, 1.18 ) }
    dend_7 { pt3dadd( -37.309, 538.628, -11.445, 1.03 ) }
    dend_7 { pt3dadd( -37.4893, 539.035, -11.4001, 0.81 ) }
    dend_7 { pt3dadd( -37.8902, 539.856, -11.3198, 0.52 ) }
    dend_7 { pt3dadd( -38.4878, 540.97, -11.2283, 0.52 ) }
    dend_7 { pt3dadd( -38.5224, 541.031, -11.2243, 0.52 ) }
    dend_7 { pt3dadd( -38.6937, 541.312, -11.2117, 0.74 ) }
    dend_7 { pt3dadd( -39.2029, 542.101, -11.1998, 1.03 ) }
    dend_7 { pt3dadd( -39.7506, 542.892, -11.1879, 1.03 ) }
    dend_7 { pt3dadd( -40.1587, 543.446, -11.1801, 1.03 ) }
    dend_7 { pt3dadd( -40.2609, 543.582, -11.1786, 1.03 ) }
    dend_7 { pt3dadd( -40.745, 544.199, -11.1413, 1.03 ) }
    dend_7 { pt3dadd( -41.2021, 544.763, -11.0814, 0.74 ) }
    dend_7 { pt3dadd( -41.2526, 544.824, -11.0718, 0.74 ) }
    dend_7 { pt3dadd( -41.5544, 545.18, -10.978, 0.52 ) }
    dend_7 { pt3dadd( -41.9819, 545.682, -10.781, 0.52 ) }
    dend_7 { pt3dadd( -42.6439, 546.563, -10.4092, 0.52 ) }
    dend_7 { pt3dadd( -42.9538, 547.074, -10.2, 0.44 ) }
    dend_7 { pt3dadd( -42.9907, 547.14, -10.1737, 0.44 ) }
    dend_7 { pt3dadd( -43.456, 548.004, -9.82796, 0.29 ) }
    dend_7 { pt3dadd( -44.0625, 549.2, -9.34252, 0.29 ) }
    dend_7 { pt3dadd( -44.6161, 550.393, -8.86617, 2.73 ) }
    dend_7 { pt3dadd( -45.0419, 551.455, -8.48632, 3.17 ) }
    dend_7 { pt3dadd( -45.2367, 551.985, -8.30287, 3.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.10363, 436.533, -13.0116, 0.37 ) }
    dend_5 { pt3dadd( -5.40797, 437.47, -10.3851, 0.37 ) }
    dend_5 { pt3dadd( -5.41667, 437.495, -10.3206, 0.37 ) }
    dend_5 { pt3dadd( -5.48522, 437.726, -9.84651, 1.03 ) }
    dend_5 { pt3dadd( -5.49608, 437.762, -9.776, 1.03 ) }
    dend_5 { pt3dadd( -5.82099, 438.856, -7.73381, 1.03 ) }
    dend_5 { pt3dadd( -6.07352, 439.592, -6.43827, 0.37 ) }
    dend_5 { pt3dadd( -6.1944, 439.903, -5.9435, 0.29 ) }
    dend_5 { pt3dadd( -6.38231, 440.375, -5.22493, 0.29 ) }
    dend_5 { pt3dadd( -6.65794, 441.045, -4.24586, 0.29 ) }
    dend_5 { pt3dadd( -6.69603, 441.138, -4.1343, 0.29 ) }
    dend_5 { pt3dadd( -6.96738, 441.815, -3.55247, 0.29 ) }
    dend_5 { pt3dadd( -6.98296, 441.862, -3.51956, 0.29 ) }
    dend_5 { pt3dadd( -7.20879, 442.973, -2.90418, 0.29 ) }
    dend_5 { pt3dadd( -7.22413, 443.113, -2.83716, 0.29 ) }
    dend_5 { pt3dadd( -7.23718, 443.965, -2.51991, 0.29 ) }
    dend_5 { pt3dadd( -7.22948, 444.107, -2.47094, 0.29 ) }
    dend_5 { pt3dadd( -7.0812, 445.165, -2.14703, 0.29 ) }
    dend_5 { pt3dadd( -6.83783, 446.538, -1.78923, 0.29 ) }
    dend_5 { pt3dadd( -6.67997, 447.205, -1.66502, 0.96 ) }
    dend_5 { pt3dadd( -6.52252, 447.739, -1.57026, 1.4 ) }
    dend_5 { pt3dadd( -6.41762, 448.047, -1.50161, 1.4 ) }
    dend_5 { pt3dadd( -6.2392, 448.534, -1.3818, 0.88 ) }
    dend_5 { pt3dadd( -6.03709, 449.061, -1.23219, 0.52 ) }
    dend_5 { pt3dadd( -5.49824, 450.441, -0.774817, 0.29 ) }
    dend_5 { pt3dadd( -4.86803, 452.053, -0.20763, 0.29 ) }
    dend_5 { pt3dadd( -4.50943, 452.994, 0.158026, 0.88 ) }
    dend_5 { pt3dadd( -4.34498, 453.458, 0.345193, 0.88 ) }
    dend_5 { pt3dadd( -4.16213, 454.063, 0.594529, 0.81 ) }
    dend_5 { pt3dadd( -4.05452, 454.467, 0.764347, 0.22 ) }
    dend_5 { pt3dadd( -4.04213, 454.531, 0.791123, 0.22 ) }
    dend_5 { pt3dadd( -3.95777, 455.303, 1.03508, 0.22 ) }
    dend_5 { pt3dadd( -3.87763, 456.232, 1.21305, 0.22 ) }
    dend_5 { pt3dadd( -3.82516, 456.945, 1.31083, 0.22 ) }
    dend_5 { pt3dadd( -3.79727, 457.208, 1.33854, 0.22 ) }
    dend_5 { pt3dadd( -3.78647, 457.277, 1.34549, 0.22 ) }
    dend_5 { pt3dadd( -3.66073, 457.879, 1.42542, 1.03 ) }
    dend_5 { pt3dadd( -3.61885, 458.032, 1.45059, 1.4 ) }
    dend_5 { pt3dadd( -3.46757, 458.516, 1.54192, 1.4 ) }
    dend_5 { pt3dadd( -3.22802, 459.254, 1.68586, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_5 { pt3dadd( -3.02821, 459.967, 1.81699, 0.22 ) }
    dend_5 { pt3dadd( -2.99846, 460.089, 1.83721, 0.22 ) }
    dend_5 { pt3dadd( -2.82395, 460.954, 1.96966, 0.22 ) }
    dend_5 { pt3dadd( -2.75228, 461.408, 2.02915, 0.66 ) }
    dend_5 { pt3dadd( -2.73509, 461.546, 2.04415, 0.66 ) }
    dend_5 { pt3dadd( -2.69435, 462.057, 2.09368, 0.66 ) }
    dend_5 { pt3dadd( -2.66642, 462.573, 2.15282, 0.66 ) }
    dend_5 { pt3dadd( -2.64112, 462.952, 2.19885, 0.15 ) }
    dend_5 { pt3dadd( -2.56279, 463.882, 2.43183, 0.15 ) }
    dend_5 { pt3dadd( -2.55567, 463.948, 2.45429, 0.15 ) }
    dend_5 { pt3dadd( -2.5055, 464.297, 2.59561, 0.66 ) }
    dend_5 { pt3dadd( -2.42394, 464.757, 2.81167, 0.88 ) }
    dend_5 { pt3dadd( -2.3582, 465.041, 2.97702, 0.88 ) }
    dend_5 { pt3dadd( -2.05971, 466.179, 3.65197, 0.29 ) }
    dend_5 { pt3dadd( -2.04058, 466.246, 3.69115, 0.29 ) }
    dend_5 { pt3dadd( -1.8696, 466.863, 4.01142, 0.29 ) }
    dend_5 { pt3dadd( -1.85062, 466.934, 4.04283, 0.29 ) }
    dend_5 { pt3dadd( -1.65951, 467.674, 4.34701, 0.22 ) }
    dend_5 { pt3dadd( -1.40763, 468.696, 4.69907, 0.22 ) }
    dend_5 { pt3dadd( -1.30444, 469.125, 4.81177, 0.88 ) }
    dend_5 { pt3dadd( -1.21467, 469.481, 4.90402, 1.25 ) }
    dend_5 { pt3dadd( -1.0861, 469.961, 5.0169, 1.25 ) }
    dend_5 { pt3dadd( -0.847312, 470.856, 5.24816, 0.29 ) }
    dend_5 { pt3dadd( -0.704435, 471.426, 5.39569, 0.22 ) }
    dend_5 { pt3dadd( -0.671816, 471.557, 5.43438, 0.22 ) }
    dend_5 { pt3dadd( -0.578508, 472.003, 5.5657, 0.22 ) }
    dend_5 { pt3dadd( -0.425997, 472.946, 5.91183, 0.22 ) }
    dend_5 { pt3dadd( -0.256459, 474.222, 6.40943, 0.22 ) }
    dend_5 { pt3dadd( -0.221768, 474.571, 6.54678, 1.03 ) }
    dend_5 { pt3dadd( -0.189726, 475.044, 6.73573, 1.03 ) }
    dend_5 { pt3dadd( -0.175752, 475.772, 7.02931, 1.03 ) }
    dend_5 { pt3dadd( -0.206696, 477.012, 7.58374, 0.29 ) }
    dend_5 { pt3dadd( -0.239542, 478.026, 8.06208, 0.22 ) }
    dend_5 { pt3dadd( -0.241171, 478.153, 8.12094, 0.22 ) }
    dend_5 { pt3dadd( -0.230568, 478.729, 8.45026, 0.22 ) }
    dend_5 { pt3dadd( -0.189922, 479.668, 9.0495, 0.22 ) }
    dend_5 { pt3dadd( -0.114638, 480.783, 9.78172, 1.03 ) }
    dend_5 { pt3dadd( -0.0893927, 481.2, 10.0419, 1.03 ) }
    dend_5 { pt3dadd( -0.0866188, 481.288, 10.1002, 1.03 ) }
    dend_5 { pt3dadd( -0.0216485, 482.837, 11.1548, 0.29 ) }
    dend_5 { pt3dadd( 0.00517299, 483.259, 11.4579, 0.22 ) }
    dend_5 { pt3dadd( 0.059667, 483.852, 11.8804, 0.22 ) }
    dend_5 { pt3dadd( 0.0811252, 484.242, 12.1335, 0.74 ) }
    dend_5 { pt3dadd( 0.082983, 484.516, 12.3112, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.10363, 436.533, -13.0116, 1.47 ) }
    dend_4 { pt3dadd( -4.92048, 437.015, -13.0719, 1.47 ) }
    dend_4 { pt3dadd( -4.58792, 437.852, -13.1816, 0.29 ) }
    dend_4 { pt3dadd( -4.05487, 439.133, -13.3478, 0.29 ) }
    dend_4 { pt3dadd( -3.57034, 440.276, -13.4901, 0.29 ) }
    dend_4 { pt3dadd( -3.09438, 441.394, -13.6603, 0.29 ) }
    dend_4 { pt3dadd( -2.5464, 442.667, -13.8756, 0.29 ) }
    dend_4 { pt3dadd( -2.30485, 443.246, -13.9918, 0.81 ) }
    dend_4 { pt3dadd( -2.09257, 443.827, -14.1138, 1.11 ) }
    dend_4 { pt3dadd( -1.89746, 444.479, -14.2572, 1.11 ) }
    dend_4 { pt3dadd( -1.73744, 445.202, -14.4397, 0.29 ) }
    dend_4 { pt3dadd( -1.68511, 445.522, -14.5241, 0.29 ) }
    dend_4 { pt3dadd( -1.52239, 446.876, -14.879, 0.37 ) }
    dend_4 { pt3dadd( -1.31498, 449.0, -15.4342, 0.37 ) }
    dend_4 { pt3dadd( -1.20749, 450.548, -15.8254, 0.37 ) }
    dend_4 { pt3dadd( -1.16811, 451.357, -16.0372, 0.22 ) }
    dend_4 { pt3dadd( -1.12362, 452.929, -16.4343, 0.22 ) }
    dend_4 { pt3dadd( -1.12463, 453.658, -16.6414, 1.25 ) }
    dend_4 { pt3dadd( -1.13528, 454.085, -16.7725, 1.62 ) }
    dend_4 { pt3dadd( -1.13061, 454.624, -16.9722, 1.62 ) }
    dend_4 { pt3dadd( -1.10418, 455.43, -17.2836, 0.52 ) }
    dend_4 { pt3dadd( -1.07509, 455.995, -17.5018, 0.44 ) }
    dend_4 { pt3dadd( -1.01735, 456.953, -17.8967, 0.22 ) }
    dend_4 { pt3dadd( -0.91341, 458.176, -18.4043, 0.22 ) }
    dend_4 { pt3dadd( -0.73284, 459.684, -19.0756, 0.22 ) }
    dend_4 { pt3dadd( -0.723426, 459.748, -19.1026, 0.22 ) }
    dend_4 { pt3dadd( -0.560784, 460.778, -19.5041, 1.11 ) }
    dend_4 { pt3dadd( -0.491474, 461.133, -19.6522, 1.55 ) }
    dend_4 { pt3dadd( -0.432773, 461.393, -19.7657, 1.55 ) }
    dend_4 { pt3dadd( -0.168489, 462.465, -20.2621, 0.22 ) }
    dend_4 { pt3dadd( 0.210231, 463.966, -20.9396, 0.22 ) }
    dend_4 { pt3dadd( 0.227537, 464.028, -20.9669, 0.22 ) }
    dend_4 { pt3dadd( 0.678974, 465.433, -21.5483, 0.22 ) }
    dend_4 { pt3dadd( 0.909981, 466.096, -21.82, 1.11 ) }
    dend_4 { pt3dadd( 1.0173, 466.368, -21.9268, 1.4 ) }
    dend_4 { pt3dadd( 1.04912, 466.436, -21.9536, 1.4 ) }
    dend_4 { pt3dadd( 1.19349, 466.672, -22.0793, 1.4 ) }
    dend_4 { pt3dadd( 1.41158, 467.0, -22.2536, 0.96 ) }
    dend_4 { pt3dadd( 1.44973, 467.043, -22.2714, 0.96 ) }
    dend_4 { pt3dadd( 1.60872, 467.187, -22.3211, 0.96 ) }
    dend_4 { pt3dadd( 2.16763, 467.661, -22.5325, 0.29 ) }
    dend_4 { pt3dadd( 2.22078, 467.702, -22.5531, 0.29 ) }
    dend_4 { pt3dadd( 2.82491, 468.138, -22.7839, 0.29 ) }
    dend_4 { pt3dadd( 3.8063, 468.821, -23.2301, 0.29 ) }
    dend_4 { pt3dadd( 4.48264, 469.31, -23.5413, 0.29 ) }
    dend_4 { pt3dadd( 5.08497, 469.741, -23.8275, 1.11 ) }
    dend_4 { pt3dadd( 5.53976, 470.068, -24.0407, 1.47 ) }
    dend_4 { pt3dadd( 5.92918, 470.35, -24.2382, 1.47 ) }
    dend_4 { pt3dadd( 6.72336, 470.942, -24.6775, 0.22 ) }
    dend_4 { pt3dadd( 7.73749, 471.724, -25.3141, 0.22 ) }
    dend_4 { pt3dadd( 8.33143, 472.282, -25.6798, 0.66 ) }
    dend_4 { pt3dadd( 8.55566, 472.536, -25.8114, 0.66 ) }
    dend_4 { pt3dadd( 8.63996, 472.649, -25.8633, 0.66 ) }
    dend_4 { pt3dadd( 8.96173, 473.12, -26.0509, 0.66 ) }
    dend_4 { pt3dadd( 9.25396, 473.595, -26.1983, 0.22 ) }
    dend_4 { pt3dadd( 10.1345, 475.33, -26.6162, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_4 { pt3dadd( 10.4163, 475.973, -26.7169, 0.81 ) }
    dend_4 { pt3dadd( 10.4429, 476.038, -26.7224, 0.81 ) }
    dend_4 { pt3dadd( 10.6232, 476.495, -26.7356, 1.18 ) }
    dend_4 { pt3dadd( 10.7409, 476.809, -26.7303, 1.18 ) }
    dend_4 { pt3dadd( 11.0412, 477.624, -26.665, 0.15 ) }
    dend_4 { pt3dadd( 11.0657, 477.689, -26.6571, 0.15 ) }
    dend_4 { pt3dadd( 11.6353, 479.286, -26.4443, 0.15 ) }
    dend_4 { pt3dadd( 11.6572, 479.352, -26.4374, 0.15 ) }
    dend_4 { pt3dadd( 11.7659, 479.718, -26.4143, 0.81 ) }
    dend_4 { pt3dadd( 11.8167, 479.923, -26.3941, 1.11 ) }
    dend_4 { pt3dadd( 11.8294, 479.992, -26.3873, 1.11 ) }
    dend_4 { pt3dadd( 11.8845, 480.421, -26.3073, 1.11 ) }
    dend_4 { pt3dadd( 11.8902, 480.489, -26.2904, 1.11 ) }
    dend_4 { pt3dadd( 11.9197, 480.87, -26.1881, 0.15 ) }
    dend_4 { pt3dadd( 12.0355, 482.475, -25.7419, 0.15 ) }
    dend_4 { pt3dadd( 12.1512, 484.166, -25.2823, 0.15 ) }
    dend_4 { pt3dadd( 12.1984, 484.854, -25.1033, 0.88 ) }
    dend_4 { pt3dadd( 12.2037, 484.921, -25.0866, 0.88 ) }
    dend_4 { pt3dadd( 12.2402, 485.356, -24.9979, 1.69 ) }
    dend_4 { pt3dadd( 12.2936, 485.943, -24.9215, 1.69 ) }
    dend_4 { pt3dadd( 12.3333, 486.31, -24.9147, 0.96 ) }
    dend_4 { pt3dadd( 12.3896, 486.816, -24.9333, 0.52 ) }
    dend_4 { pt3dadd( 12.4395, 487.304, -24.9713, 0.15 ) }
    dend_4 { pt3dadd( 12.5646, 488.616, -25.0783, 0.15 ) }
    dend_4 { pt3dadd( 12.6118, 489.193, -25.1225, 0.88 ) }
    dend_4 { pt3dadd( 12.6486, 489.77, -25.1636, 1.18 ) }
    dend_4 { pt3dadd( 12.661, 490.059, -25.182, 1.18 ) }
    dend_4 { pt3dadd( 12.6721, 490.506, -25.2062, 0.44 ) }
    dend_4 { pt3dadd( 12.6697, 490.951, -25.2425, 0.15 ) }
    dend_4 { pt3dadd( 12.6721, 492.553, -25.4005, 0.15 ) }
    dend_4 { pt3dadd( 12.6802, 492.991, -25.4443, 0.44 ) }
    dend_4 { pt3dadd( 12.6952, 493.435, -25.4964, 0.66 ) }
    dend_4 { pt3dadd( 12.7212, 493.868, -25.5683, 0.66 ) }
    dend_4 { pt3dadd( 12.7901, 494.673, -25.7388, 0.15 ) }
    dend_4 { pt3dadd( 12.9664, 496.194, -26.1351, 0.15 ) }
    dend_4 { pt3dadd( 13.0436, 496.625, -26.2902, 0.74 ) }
    dend_4 { pt3dadd( 13.0591, 496.696, -26.3228, 0.74 ) }
    dend_4 { pt3dadd( 13.2679, 497.429, -26.6836, 0.96 ) }
    dend_4 { pt3dadd( 13.2877, 497.488, -26.7142, 0.96 ) }
    dend_4 { pt3dadd( 13.4056, 497.838, -26.8673, 0.96 ) }
    dend_4 { pt3dadd( 13.6206, 498.486, -27.1515, 0.74 ) }
    dend_4 { pt3dadd( 13.8348, 499.154, -27.4453, 0.15 ) }
    dend_4 { pt3dadd( 14.1884, 500.32, -27.9251, 0.15 ) }
    dend_4 { pt3dadd( 14.2095, 500.393, -27.9521, 0.15 ) }
    dend_4 { pt3dadd( 14.5751, 501.734, -28.4235, 0.15 ) }
    dend_4 { pt3dadd( 14.5896, 501.797, -28.4503, 0.15 ) }
    dend_4 { pt3dadd( 14.7163, 502.532, -28.7858, 0.96 ) }
    dend_4 { pt3dadd( 14.7517, 502.864, -28.9443, 1.33 ) }
    dend_4 { pt3dadd( 14.7537, 502.924, -28.9804, 1.33 ) }
    dend_4 { pt3dadd( 14.7549, 503.541, -29.3708, 1.62 ) }
    dend_4 { pt3dadd( 14.6895, 504.85, -30.3506, 0.81 ) }
    dend_4 { pt3dadd( 14.6611, 505.219, -30.6324, 0.22 ) }
    dend_4 { pt3dadd( 14.5753, 506.106, -31.2761, 0.22 ) }
    dend_4 { pt3dadd( 14.5001, 506.828, -31.8011, 0.59 ) }
    dend_4 { pt3dadd( 14.4603, 507.254, -32.1049, 0.59 ) }
    dend_4 { pt3dadd( 14.3841, 508.243, -32.7739, 0.15 ) }
    dend_4 { pt3dadd( 14.3812, 508.304, -32.8085, 0.15 ) }
    dend_4 { pt3dadd( 14.3635, 508.968, -33.3864, 0.15 ) }
    dend_4 { pt3dadd( 14.3662, 509.03, -33.4367, 0.15 ) }
    dend_4 { pt3dadd( 14.4107, 509.619, -33.8615, 1.18 ) }
    dend_4 { pt3dadd( 14.4607, 509.987, -34.1064, 1.62 ) }
    dend_4 { pt3dadd( 14.4704, 510.046, -34.1428, 1.62 ) }
    dend_4 { pt3dadd( 14.8889, 512.28, -35.6173, 0.22 ) }
    dend_4 { pt3dadd( 15.3689, 514.678, -37.2729, 0.22 ) }
    dend_4 { pt3dadd( 15.3927, 514.793, -37.366, 0.22 ) }
    dend_4 { pt3dadd( 15.694, 516.455, -38.7129, 0.22 ) }
    dend_4 { pt3dadd( 15.7033, 516.509, -38.7566, 0.22 ) }
    dend_4 { pt3dadd( 15.8547, 517.503, -39.5274, 1.4 ) }
    dend_4 { pt3dadd( 15.8738, 517.641, -39.6256, 1.4 ) }
    dend_4 { pt3dadd( 16.0623, 519.476, -41.2503, 0.15 ) }
    dend_4 { pt3dadd( 16.1923, 521.251, -42.7775, 0.15 ) }
    dend_4 { pt3dadd( 16.2087, 521.712, -43.1614, 0.59 ) }
    dend_4 { pt3dadd( 16.2287, 522.083, -43.4408, 0.81 ) }
    dend_4 { pt3dadd( 16.2522, 522.372, -43.6656, 0.81 ) }
    dend_4 { pt3dadd( 16.3518, 523.177, -44.2594, 0.15 ) }
    dend_4 { pt3dadd( 16.586, 524.583, -45.2194, 0.15 ) }
    dend_4 { pt3dadd( 16.7092, 525.152, -45.6625, 1.33 ) }
    dend_4 { pt3dadd( 16.8232, 525.661, -46.079, 1.55 ) }
    dend_4 { pt3dadd( 17.1964, 527.399, -47.5051, 0.15 ) }
    dend_4 { pt3dadd( 17.5141, 528.987, -48.7813, 0.15 ) }
    dend_4 { pt3dadd( 17.5356, 529.105, -48.8705, 0.44 ) }
    dend_4 { pt3dadd( 17.5432, 529.161, -48.9125, 0.44 ) }
    dend_4 { pt3dadd( 17.6114, 530.002, -49.4977, 0.22 ) }
    dend_4 { pt3dadd( 17.621, 531.053, -50.2385, 0.22 ) }
    dend_4 { pt3dadd( 17.6139, 531.106, -50.2667, 0.22 ) }
    dend_4 { pt3dadd( 17.5411, 531.357, -50.4266, 0.88 ) }
    dend_4 { pt3dadd( 17.3744, 531.799, -50.6854, 0.88 ) }
    dend_4 { pt3dadd( 17.3489, 531.853, -50.721, 0.88 ) }
    dend_4 { pt3dadd( 16.6279, 533.004, -51.3862, 0.22 ) }
    dend_4 { pt3dadd( 15.6428, 534.38, -52.1818, 0.22 ) }
    dend_4 { pt3dadd( 15.1146, 535.083, -52.5654, 1.11 ) }
    dend_4 { pt3dadd( 14.637, 535.691, -52.878, 1.33 ) }
    dend_4 { pt3dadd( 13.7867, 536.736, -53.4021, 0.15 ) }
    dend_4 { pt3dadd( 11.927, 538.901, -54.3709, 0.15 ) }
    dend_4 { pt3dadd( 11.8812, 538.951, -54.3899, 0.15 ) }
    dend_4 { pt3dadd( 11.6048, 539.234, -54.5021, 0.52 ) }
    dend_4 { pt3dadd( 11.3905, 539.452, -54.6029, 0.52 ) }
    dend_4 { pt3dadd( 11.0611, 539.798, -54.7809, 0.22 ) }
    dend_4 { pt3dadd( 10.2955, 540.696, -55.4851, 0.22 ) }
    dend_4 { pt3dadd( 10.0544, 541.005, -55.836, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_4 { pt3dadd( 9.733, 541.439, -56.3244, 0.52 ) }
    dend_4 { pt3dadd( 9.05109, 542.407, -57.4343, 0.15 ) }
    dend_4 { pt3dadd( 8.45066, 543.467, -58.5212, 0.15 ) }
    dend_4 { pt3dadd( 7.56952, 545.424, -60.3673, 0.88 ) }
    dend_4 { pt3dadd( 7.54485, 545.506, -60.4408, 1.69 ) }
    dend_4 { pt3dadd( 7.40574, 546.193, -60.9829, 0.15 ) }
    dend_4 { pt3dadd( 7.40058, 546.251, -61.0215, 0.15 ) }
    dend_4 { pt3dadd( 7.44257, 547.917, -61.714, 0.15 ) }
    dend_4 { pt3dadd( 7.58543, 548.341, -61.7808, 0.52 ) }
    dend_4 { pt3dadd( 7.76031, 548.724, -61.7576, 0.52 ) }
    dend_4 { pt3dadd( 7.79216, 548.787, -61.7538, 0.52 ) }
    dend_4 { pt3dadd( 7.9697, 549.105, -61.742, 0.15 ) }
    dend_4 { pt3dadd( 8.00504, 549.165, -61.7383, 0.15 ) }
    dend_4 { pt3dadd( 9.69384, 551.753, -61.4611, 0.15 ) }
    dend_4 { pt3dadd( 9.96841, 552.171, -61.4043, 1.03 ) }
    dend_4 { pt3dadd( 10.2356, 552.58, -61.3491, 1.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -45.2367, 551.985, -8.30287, 0.96 ) }
    dend_9 { pt3dadd( -44.9871, 552.888, -7.69086, 0.96 ) }
    dend_9 { pt3dadd( -44.7001, 554.189, -6.86549, 0.52 ) }
    dend_9 { pt3dadd( -44.5801, 554.966, -6.41153, 0.52 ) }
    dend_9 { pt3dadd( -44.4816, 556.137, -5.78978, 0.44 ) }
    dend_9 { pt3dadd( -44.4791, 556.233, -5.74358, 0.44 ) }
    dend_9 { pt3dadd( -44.511, 557.151, -5.24182, 0.44 ) }
    dend_9 { pt3dadd( -44.5238, 557.212, -5.20924, 0.44 ) }
    dend_9 { pt3dadd( -44.6872, 557.657, -4.96744, 0.81 ) }
    dend_9 { pt3dadd( -44.918, 558.127, -4.70338, 0.96 ) }
    dend_9 { pt3dadd( -45.0915, 558.446, -4.53607, 0.96 ) }
    dend_9 { pt3dadd( -45.8451, 559.842, -3.81738, 0.74 ) }
    dend_9 { pt3dadd( -46.0346, 560.19, -3.57386, 0.52 ) }
    dend_9 { pt3dadd( -46.2107, 560.495, -3.34196, 0.52 ) }
    dend_9 { pt3dadd( -46.5843, 561.123, -2.76169, 0.22 ) }
    dend_9 { pt3dadd( -46.649, 561.23, -2.65276, 0.22 ) }
    dend_9 { pt3dadd( -47.0104, 561.811, -2.05412, 0.22 ) }
    dend_9 { pt3dadd( -47.8016, 563.029, -0.602205, 0.74 ) }
    dend_9 { pt3dadd( -48.0632, 563.421, -0.0372412, 0.96 ) }
    dend_9 { pt3dadd( -48.5137, 564.148, 1.10174, 1.11 ) }
    dend_9 { pt3dadd( -48.5335, 564.187, 1.16869, 1.11 ) }
    dend_9 { pt3dadd( -48.6548, 564.521, 1.7623, 1.11 ) }
    dend_9 { pt3dadd( -48.7638, 565.451, 3.46551, 1.03 ) }
    dend_9 { pt3dadd( -48.7602, 565.493, 3.53327, 1.03 ) }
    dend_9 { pt3dadd( -48.6741, 565.951, 4.20341, 0.66 ) }
    dend_9 { pt3dadd( -48.4807, 566.768, 5.25843, 0.29 ) }
    dend_9 { pt3dadd( -48.3366, 567.328, 5.92241, 0.29 ) }
    dend_9 { pt3dadd( -47.9824, 568.66, 7.34235, 0.29 ) }
    dend_9 { pt3dadd( -47.8857, 569.089, 7.68129, 0.66 ) }
    dend_9 { pt3dadd( -47.8124, 569.499, 7.97575, 0.66 ) }
    dend_9 { pt3dadd( -47.8027, 569.558, 8.0132, 0.66 ) }
    dend_9 { pt3dadd( -47.7578, 569.883, 8.18367, 0.66 ) }
    dend_9 { pt3dadd( -47.6109, 570.999, 8.69437, 0.29 ) }
    dend_9 { pt3dadd( -47.3901, 572.159, 9.1323, 0.29 ) }
    dend_9 { pt3dadd( -47.3723, 572.232, 9.15978, 0.29 ) }
    dend_9 { pt3dadd( -46.9689, 573.659, 9.67279, 0.29 ) }
    dend_9 { pt3dadd( -46.9059, 573.858, 9.73932, 0.96 ) }
    dend_9 { pt3dadd( -46.7069, 574.416, 9.92506, 1.25 ) }
    dend_9 { pt3dadd( -46.6825, 574.479, 9.94324, 1.25 ) }
    dend_9 { pt3dadd( -46.4504, 575.069, 10.1323, 1.25 ) }
    dend_9 { pt3dadd( -46.3082, 575.485, 10.252, 1.25 ) }
    dend_9 { pt3dadd( -46.281, 575.585, 10.2757, 1.25 ) }
    dend_9 { pt3dadd( -46.1377, 576.334, 10.4441, 0.29 ) }
    dend_9 { pt3dadd( -46.0521, 577.046, 10.5817, 0.29 ) }
    dend_9 { pt3dadd( -46.0461, 577.158, 10.5995, 0.29 ) }
    dend_9 { pt3dadd( -46.0504, 577.802, 10.6839, 0.29 ) }
    dend_9 { pt3dadd( -46.0561, 577.882, 10.6911, 0.29 ) }
    dend_9 { pt3dadd( -46.1853, 578.847, 10.7317, 0.29 ) }
    dend_9 { pt3dadd( -46.3144, 579.48, 10.7215, 0.81 ) }
    dend_9 { pt3dadd( -46.408, 579.832, 10.7162, 1.03 ) }
    dend_9 { pt3dadd( -46.4313, 579.909, 10.7153, 1.03 ) }
    dend_9 { pt3dadd( -46.6122, 580.446, 10.7093, 1.03 ) }
    dend_9 { pt3dadd( -46.8342, 581.035, 10.7045, 0.44 ) }
    dend_9 { pt3dadd( -47.2551, 582.006, 10.7777, 0.29 ) }
    dend_9 { pt3dadd( -47.4373, 582.392, 10.8332, 0.59 ) }
    dend_9 { pt3dadd( -47.6729, 582.933, 10.935, 0.59 ) }
    dend_9 { pt3dadd( -47.7012, 583.006, 10.9513, 0.59 ) }
    dend_9 { pt3dadd( -47.9617, 583.772, 11.1499, 0.59 ) }
    dend_9 { pt3dadd( -48.2534, 584.771, 11.4495, 0.37 ) }
    dend_9 { pt3dadd( -48.2681, 584.836, 11.4707, 0.37 ) }
    dend_9 { pt3dadd( -48.4278, 585.857, 11.8475, 0.37 ) }
    dend_9 { pt3dadd( -48.4662, 586.287, 12.006, 0.37 ) }
    dend_9 { pt3dadd( -48.4714, 586.344, 12.0236, 0.37 ) }
    dend_9 { pt3dadd( -48.4965, 586.67, 12.1019, 0.59 ) }
    dend_9 { pt3dadd( -48.5422, 587.092, 12.1729, 0.59 ) }
    dend_9 { pt3dadd( -48.6658, 587.938, 12.3133, 0.44 ) }
    dend_9 { pt3dadd( -48.8206, 588.642, 12.4277, 0.29 ) }
    dend_9 { pt3dadd( -49.1638, 589.894, 12.6085, 0.29 ) }
    dend_9 { pt3dadd( -49.3651, 590.521, 12.6888, 0.74 ) }
    dend_9 { pt3dadd( -49.5331, 590.972, 12.7353, 0.81 ) }
    dend_9 { pt3dadd( -49.5919, 591.109, 12.7454, 0.81 ) }
    dend_9 { pt3dadd( -49.8615, 591.688, 12.7555, 0.81 ) }
    dend_9 { pt3dadd( -50.0622, 592.096, 12.7662, 0.96 ) }
    dend_9 { pt3dadd( -50.1624, 592.308, 12.773, 0.96 ) }
    dend_9 { pt3dadd( -50.1891, 592.373, 12.7749, 0.96 ) }
    dend_9 { pt3dadd( -50.404, 592.996, 12.7947, 0.37 ) }
    dend_9 { pt3dadd( -50.6713, 593.943, 12.8241, 0.37 ) }
    dend_9 { pt3dadd( -50.8566, 594.777, 12.8485, 0.37 ) }
    dend_9 { pt3dadd( -51.0069, 595.548, 12.8691, 0.22 ) }
    dend_9 { pt3dadd( -51.1676, 596.486, 12.8915, 0.22 ) }
    dend_9 { pt3dadd( -51.2618, 597.072, 12.9028, 0.37 ) }
    dend_9 { pt3dadd( -51.3471, 597.65, 12.9098, 0.59 ) }
    dend_9 { pt3dadd( -51.4264, 598.228, 12.9167, 0.88 ) }
    dend_9 { pt3dadd( -51.4838, 598.69, 12.9212, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_9 { pt3dadd( -51.4939, 598.769, 12.9216, 1.33 ) }
    dend_9 { pt3dadd( -51.5756, 599.318, 12.9412, 1.33 ) }
    dend_9 { pt3dadd( -51.6977, 600.138, 12.9844, 1.03 ) }
    dend_9 { pt3dadd( -51.8007, 600.859, 13.031, 0.59 ) }
    dend_9 { pt3dadd( -51.9527, 602.018, 13.1151, 0.29 ) }
    dend_9 { pt3dadd( -52.1641, 603.691, 13.2773, 0.29 ) }
    dend_9 { pt3dadd( -52.2526, 604.397, 13.3778, 0.81 ) }
    dend_9 { pt3dadd( -52.3463, 605.178, 13.5198, 0.81 ) }
    dend_9 { pt3dadd( -52.4131, 605.748, 13.6595, 0.52 ) }
    dend_9 { pt3dadd( -52.4381, 605.956, 13.7264, 0.44 ) }
    dend_9 { pt3dadd( -52.6738, 607.608, 14.3776, 0.22 ) }
    dend_9 { pt3dadd( -52.7998, 608.264, 14.7216, 0.59 ) }
    dend_9 { pt3dadd( -52.8572, 608.509, 14.8656, 0.74 ) }
    dend_9 { pt3dadd( -53.0812, 609.251, 15.347, 0.74 ) }
    dend_9 { pt3dadd( -53.2459, 609.722, 15.6339, 0.15 ) }
    dend_9 { pt3dadd( -53.5167, 610.412, 16.0157, 0.15 ) }
    dend_9 { pt3dadd( -54.0555, 611.673, 16.5536, 0.15 ) }
    dend_9 { pt3dadd( -54.1192, 611.82, 16.5948, 0.15 ) }
    dend_9 { pt3dadd( -54.4382, 612.543, 16.7081, 0.15 ) }
    dend_9 { pt3dadd( -54.8826, 613.55, 16.7492, 0.15 ) }
    dend_9 { pt3dadd( -54.968, 613.758, 16.742, 0.15 ) }
    dend_9 { pt3dadd( -55.3171, 614.73, 16.6281, 0.15 ) }
    dend_9 { pt3dadd( -55.4146, 615.036, 16.5672, 0.15 ) }
    dend_9 { pt3dadd( -55.7998, 616.332, 16.3296, 0.15 ) }
    dend_9 { pt3dadd( -55.8207, 616.408, 16.3182, 0.52 ) }
    dend_9 { pt3dadd( -55.8971, 616.696, 16.2942, 0.52 ) }
    dend_9 { pt3dadd( -55.9855, 617.032, 16.2615, 0.15 ) }
    dend_9 { pt3dadd( -56.1392, 617.616, 16.1856, 0.15 ) }
    dend_9 { pt3dadd( -56.1557, 617.694, 16.1733, 0.15 ) }
    dend_9 { pt3dadd( -56.179, 618.009, 16.0929, 0.52 ) }
    dend_9 { pt3dadd( -56.193, 618.154, 16.0568, 0.52 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 31/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -45.2367, 551.985, -8.30287, 0.59 ) }
    dend_8 { pt3dadd( -46.1952, 552.865, -8.16613, 0.59 ) }
    dend_8 { pt3dadd( -46.5367, 553.194, -8.12546, 0.59 ) }
    dend_8 { pt3dadd( -46.5847, 553.245, -8.12084, 0.59 ) }
    dend_8 { pt3dadd( -47.0806, 553.845, -8.08071, 0.52 ) }
    dend_8 { pt3dadd( -47.8109, 554.852, -8.02818, 0.52 ) }
    dend_8 { pt3dadd( -47.8494, 554.91, -8.02567, 0.52 ) }
    dend_8 { pt3dadd( -48.1029, 555.372, -8.02744, 0.74 ) }
    dend_8 { pt3dadd( -48.4603, 556.218, -8.0333, 0.74 ) }
    dend_8 { pt3dadd( -48.7232, 557.069, -8.04107, 0.59 ) }
    dend_8 { pt3dadd( -48.8283, 557.649, -8.04764, 0.29 ) }
    dend_8 { pt3dadd( -48.8582, 558.18, -8.0545, 0.29 ) }
    dend_8 { pt3dadd( -48.8567, 558.24, -8.05524, 0.29 ) }
    dend_8 { pt3dadd( -48.7275, 559.609, -8.01147, 0.29 ) }
    dend_8 { pt3dadd( -48.6792, 559.931, -7.98965, 0.59 ) }
    dend_8 { pt3dadd( -48.6547, 560.078, -7.97518, 0.59 ) }
    dend_8 { pt3dadd( -48.5592, 560.734, -7.89989, 0.59 ) }
    dend_8 { pt3dadd( -48.4051, 562.193, -7.72598, 0.59 ) }
    dend_8 { pt3dadd( -48.353, 562.952, -7.63723, 0.29 ) }
    dend_8 { pt3dadd( -48.3515, 563.032, -7.62822, 0.29 ) }
    dend_8 { pt3dadd( -48.3559, 563.539, -7.57674, 0.22 ) }
    dend_8 { pt3dadd( -48.3904, 564.707, -7.47566, 0.22 ) }
    dend_8 { pt3dadd( -48.4494, 565.665, -7.41272, 0.96 ) }
    dend_8 { pt3dadd( -48.515, 566.407, -7.38621, 1.55 ) }
    dend_8 { pt3dadd( -48.5625, 566.869, -7.38621, 1.84 ) }
    dend_8 { pt3dadd( -48.6028, 567.227, -7.38621, 1.84 ) }
    dend_8 { pt3dadd( -48.6864, 567.828, -7.38621, 1.55 ) }
    dend_8 { pt3dadd( -48.7992, 568.495, -7.39498, 0.59 ) }
    dend_8 { pt3dadd( -48.8548, 568.788, -7.40209, 0.52 ) }
    dend_8 { pt3dadd( -48.9683, 569.307, -7.41918, 0.29 ) }
    dend_8 { pt3dadd( -49.1757, 570.233, -7.45588, 0.29 ) }
    dend_8 { pt3dadd( -49.3526, 570.936, -7.48749, 0.29 ) }
    dend_8 { pt3dadd( -49.4998, 571.477, -7.51509, 0.66 ) }
    dend_8 { pt3dadd( -49.5443, 571.62, -7.52279, 0.66 ) }
    dend_8 { pt3dadd( -49.7289, 572.144, -7.54937, 0.96 ) }
    dend_8 { pt3dadd( -49.7557, 572.208, -7.55217, 0.96 ) }
    dend_8 { pt3dadd( -50.001, 572.728, -7.56821, 0.96 ) }
    dend_8 { pt3dadd( -50.0309, 572.791, -7.56916, 0.96 ) }
    dend_8 { pt3dadd( -50.3192, 573.424, -7.60694, 0.96 ) }
    dend_8 { pt3dadd( -50.5927, 574.061, -7.66718, 0.96 ) }
    dend_8 { pt3dadd( -50.8701, 574.751, -7.74752, 0.96 ) }
    dend_8 { pt3dadd( -51.0777, 575.341, -7.82104, 0.59 ) }
    dend_8 { pt3dadd( -51.2328, 575.845, -7.88835, 0.44 ) }
    dend_8 { pt3dadd( -51.4491, 576.789, -8.00824, 0.29 ) }
    dend_8 { pt3dadd( -51.5827, 577.699, -8.11565, 0.29 ) }
    dend_8 { pt3dadd( -51.6006, 577.917, -8.1381, 0.29 ) }
    dend_8 { pt3dadd( -51.6255, 578.787, -8.21157, 0.29 ) }
    dend_8 { pt3dadd( -51.6255, 578.866, -8.21646, 0.29 ) }
    dend_8 { pt3dadd( -51.5874, 580.353, -8.32089, 0.29 ) }
    dend_8 { pt3dadd( -51.5599, 581.149, -8.39085, 0.96 ) }
    dend_8 { pt3dadd( -51.5434, 581.884, -8.48045, 1.69 ) }
    dend_8 { pt3dadd( -51.5436, 582.389, -8.55177, 1.92 ) }
    dend_8 { pt3dadd( -51.5609, 583.085, -8.66251, 1.25 ) }
    dend_8 { pt3dadd( -51.6098, 583.97, -8.83961, 0.88 ) }
    dend_8 { pt3dadd( -51.6981, 584.973, -9.07666, 0.29 ) }
    dend_8 { pt3dadd( -51.8173, 586.745, -9.50223, 0.29 ) }
    dend_8 { pt3dadd( -51.8318, 587.044, -9.57366, 0.74 ) }
    dend_8 { pt3dadd( -51.8378, 587.27, -9.62257, 0.74 ) }
    dend_8 { pt3dadd( -51.8449, 588.48, -9.85257, 0.29 ) }
    dend_8 { pt3dadd( -51.8275, 589.34, -9.98561, 0.29 ) }
    dend_8 { pt3dadd( -51.7513, 590.678, -10.1761, 0.29 ) }
    dend_8 { pt3dadd( -51.7428, 590.776, -10.1904, 0.29 ) }
    dend_8 { pt3dadd( -51.6413, 591.931, -10.3431, 0.29 ) }
    dend_8 { pt3dadd( -51.6293, 592.07, -10.3578, 0.29 ) }
    dend_8 { pt3dadd( -51.5846, 592.789, -10.3975, 0.96 ) }
    dend_8 { pt3dadd( -51.5884, 593.518, -10.4398, 1.25 ) }
    dend_8 { pt3dadd( -51.5947, 593.587, -10.4462, 1.25 ) }
    dend_8 { pt3dadd( -51.6313, 593.955, -10.4835, 1.25 ) }
    dend_8 { pt3dadd( -51.6831, 594.46, -10.5361, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_8 { pt3dadd( -51.7703, 595.281, -10.6155, 0.52 ) }
    dend_8 { pt3dadd( -51.8493, 595.938, -10.6842, 0.44 ) }
    dend_8 { pt3dadd( -51.9196, 596.509, -10.7519, 0.22 ) }
    dend_8 { pt3dadd( -52.1468, 598.163, -10.9518, 0.22 ) }
    dend_8 { pt3dadd( -52.2299, 598.732, -11.0226, 0.81 ) }
    dend_8 { pt3dadd( -52.3305, 599.251, -11.084, 0.81 ) }
    dend_8 { pt3dadd( -52.4882, 599.93, -11.1593, 0.15 ) }
    dend_8 { pt3dadd( -52.507, 599.998, -11.1655, 0.15 ) }
    dend_8 { pt3dadd( -52.8697, 601.114, -11.2338, 0.15 ) }
    dend_8 { pt3dadd( -52.9005, 601.187, -11.2381, 0.15 ) }
    dend_8 { pt3dadd( -53.405, 602.373, -11.6356, 0.15 ) }
    dend_8 { pt3dadd( -53.4279, 602.431, -11.6668, 0.15 ) }
    dend_8 { pt3dadd( -53.5562, 602.809, -11.8989, 1.4 ) }
    dend_8 { pt3dadd( -53.6577, 603.149, -12.1594, 1.69 ) }
    dend_8 { pt3dadd( -53.8142, 603.68, -12.633, 1.69 ) }
    dend_8 { pt3dadd( -54.497, 605.975, -14.8411, 0.29 ) }
    dend_8 { pt3dadd( -54.7175, 606.776, -15.806, 0.29 ) }
    dend_8 { pt3dadd( -54.8709, 607.34, -16.5554, 0.29 ) }
    dend_8 { pt3dadd( -55.0579, 608.013, -17.5099, 0.59 ) }
    dend_8 { pt3dadd( -55.1737, 608.411, -18.1011, 0.59 ) }
    dend_8 { pt3dadd( -55.1871, 608.455, -18.1668, 0.59 ) }
    dend_8 { pt3dadd( -55.8017, 609.97, -20.2584, 0.15 ) }
    dend_8 { pt3dadd( -55.8202, 610.007, -20.3142, 0.15 ) }
    dend_8 { pt3dadd( -56.0061, 610.351, -20.7704, 0.15 ) }
    dend_8 { pt3dadd( -56.0665, 610.464, -20.8754, 0.15 ) }
    dend_8 { pt3dadd( -56.2366, 610.779, -21.1138, 0.15 ) }
    dend_8 { pt3dadd( -56.3655, 610.986, -21.2063, 0.15 ) }
    dend_8 { pt3dadd( -56.9159, 611.743, -21.6108, 0.15 ) }
    dend_8 { pt3dadd( -57.1507, 612.081, -21.8485, 0.96 ) }
    dend_8 { pt3dadd( -57.3665, 612.392, -22.1368, 1.4 ) }
    dend_8 { pt3dadd( -57.4632, 612.531, -22.2778, 1.77 ) }
    dend_8 { pt3dadd( -57.7971, 612.997, -22.9425, 1.77 ) }
    dend_8 { pt3dadd( -58.7442, 614.352, -25.467, 0.22 ) }
    dend_8 { pt3dadd( -58.9736, 614.692, -26.1813, 0.22 ) }
    dend_8 { pt3dadd( -59.2596, 615.138, -27.1652, 0.96 ) }
    dend_8 { pt3dadd( -59.3797, 615.347, -27.7467, 0.96 ) }
    dend_8 { pt3dadd( -59.892, 616.355, -30.9729, 0.74 ) }
    dend_8 { pt3dadd( -60.1772, 616.955, -33.0071, 0.66 ) }
    dend_8 { pt3dadd( -60.2421, 617.1, -33.5217, 0.66 ) }
    dend_8 { pt3dadd( -60.2501, 617.119, -33.5887, 0.66 ) }
    dend_8 { pt3dadd( -60.8455, 618.676, -38.9924, 0.88 ) }
    dend_8 { pt3dadd( -60.8612, 618.718, -39.1357, 0.88 ) }
    dend_8 { pt3dadd( -61.02, 619.104, -40.3695, 0.22 ) }
    dend_8 { pt3dadd( -61.203, 619.434, -41.4344, 0.88 ) }
    dend_8 { pt3dadd( -61.2732, 619.538, -41.7825, 0.88 ) }
    dend_8 { pt3dadd( -61.2888, 619.559, -41.8474, 0.88 ) }
    dend_8 { pt3dadd( -62.0016, 620.285, -43.1438, 0.22 ) }
    dend_8 { pt3dadd( -62.032, 620.312, -43.2009, 0.22 ) }
    dend_8 { pt3dadd( -62.326, 620.49, -43.8563, 0.22 ) }
    dend_8 { pt3dadd( -62.3672, 620.506, -43.923, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_18, dend_15, dend_0, dend_34, dend_24, dend_22, dend_19, dend_17, dend_16, dend_12, dend_1, dend_36, dend_35, dend_31, dend_30, dend_25, dend_21, dend_20, dend_14, dend_13, dend_11, dend_2, dend_38, dend_37, dend_33, dend_32, dend_27, dend_26, dend_6, dend_3, dend_29, dend_28, dend_10, dend_7, dend_5, dend_4, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_18 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_19 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_17 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_21 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_20 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_14 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_33 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_29 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_5 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_12 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_36 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 3
    dend_19 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 7
    dend_35 nseg = 7
    dend_30 nseg = 15
    dend_25 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 11
    dend_14 nseg = 5
    dend_13 nseg = 19
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_33 nseg = 3
    dend_32 nseg = 15
    dend_27 nseg = 11
    dend_26 nseg = 15
    dend_6 nseg = 3
    dend_3 nseg = 21
    dend_29 nseg = 3
    dend_28 nseg = 7
    dend_10 nseg = 11
    dend_7 nseg = 23
    dend_5 nseg = 3
    dend_4 nseg = 7
    dend_9 nseg = 3
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_LBC_ae0d738c6e_0_0


