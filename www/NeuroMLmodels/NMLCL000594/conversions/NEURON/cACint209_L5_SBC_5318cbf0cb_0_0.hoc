// Cell: cACint209_L5_SBC_5318cbf0cb_0_0
/*
{
  "id" : "cACint209_L5_SBC_5318cbf0cb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.327285, 12.2563, -2.37682, 3.20394", "-0.32997, 10.9888, -2.12879, 5.58325", "-0.332655, 9.7213, -1.88076, 6.08709", "-0.335339, 8.45379, -1.63272, 7.22603", "-0.338024, 7.18628, -1.38469, 8.89261", "-0.340709, 5.91877, -1.13666, 10.2823", "-0.343394, 4.65126, -0.888622, 11.3086", "-0.346078, 3.38375, -0.640589, 12.3784", "-0.348763, 2.11624, -0.392555, 13.7451", "-0.351448, 0.84873, -0.144521, 14.7054", "-0.354133, -0.41878, 0.103512, 15.1673", "-0.356817, -1.68629, 0.351546, 15.492", "-0.359502, -2.9538, 0.599579, 15.6089", "-0.362187, -4.22131, 0.847613, 15.0499", "-0.364872, -5.48882, 1.09565, 14.3371", "-0.367556, -6.75633, 1.34368, 13.225", "-0.370241, -8.02384, 1.59171, 11.7728", "-0.372926, -9.29135, 1.83975, 10.2754", "-0.375611, -10.5589, 2.08778, 7.58879", "-0.378295, -11.8264, 2.33581, 5.07363", "-0.38098, -13.0939, 2.58385, 2.91986" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.63702, -12.1088, 3.2994, 4.13", "-1.63702, -12.1088, 3.2994, 4.13", "-1.49399, -13.3768, 3.7198, 4.13", "-1.28472, -15.232, 4.33493, 3.76", "-0.953767, -18.166, 5.30771, 3.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0870214, -5.00883, -15.4506, 1.69", "0.0185795, -5.02909, -15.4506, 1.69", "0.346516, -5.097, -15.4506, 1.69", "1.66928, -5.38485, -15.4423, 1.69", "3.59498, -5.87815, -15.3674, 1.69", "3.72876, -5.91847, -15.3789, 1.69", "5.83395, -6.7552, -15.8462, 1.69", "5.93284, -6.8096, -15.8916, 1.69", "7.18634, -8.02314, -17.447, 1.84", "7.0444, -9.02657, -19.6513, 1.84", "5.94322, -9.98048, -22.9707, 1.99", "4.85952, -10.7562, -25.8531, 1.99", "3.57584, -11.4988, -28.8488, 1.99", "1.58346, -12.4502, -33.036, 2.14", "-0.662139, -13.2742, -37.1917, 2.43", "-4.39439, -14.2491, -43.3481, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.632978, 11.1212, -5.6406, 2.58", "0.632978, 11.1212, -5.6406, 2.58", "1.03253, 11.4598, -5.79976, 2.28", "1.44284, 11.8308, -5.94702, 2.21", "2.23235, 12.6455, -6.20834, 0.81", "3.1338, 13.7473, -6.48885, 0.81", "3.58473, 14.3544, -6.62265, 1.25", "4.11169, 15.1972, -6.74781, 1.99", "4.13478, 15.2473, -6.75125, 1.99", "4.34786, 16.0768, -6.73952, 2.14", "4.41545, 16.9233, -6.67348, 2.14", "4.41321, 16.9788, -6.66918, 2.14", "4.32552, 17.9789, -6.61867, 1.84", "4.20303, 18.9334, -6.63554, 1.4", "3.97905, 20.2224, -6.73003, 0.81", "3.77887, 21.0895, -6.86781, 0.81", "3.47443, 22.187, -7.12229, 1.11", "3.46018, 22.2314, -7.13681, 1.11", "3.15444, 23.0542, -7.49974, 1.69", "2.79606, 23.9471, -7.98167, 1.77", "2.50959, 24.7083, -8.45858, 1.18", "2.49964, 24.7478, -8.48457, 1.18", "2.45564, 25.4301, -8.90021, 0.88", "2.52541, 25.9679, -9.17776, 0.74", "2.56033, 26.0603, -9.21388, 0.74", "2.92221, 26.7019, -9.38879, 0.74", "3.4535, 27.5138, -9.53396, 0.88", "3.86259, 28.1045, -9.61023, 1.69", "4.15022, 28.5112, -9.63947, 1.92", "4.38842, 28.8695, -9.66055, 2.21", "4.63504, 29.2797, -9.67894, 1.84", "4.9256, 29.867, -9.69403, 1.25", "5.1893, 30.5834, -9.73235, 0.81", "5.35879, 31.2282, -9.80855, 0.81", "5.43862, 31.8645, -9.94747, 1.11", "5.43493, 31.9147, -9.97029, 1.11", "5.33517, 32.3314, -10.273, 1.11", "5.07073, 33.0336, -10.9154, 0.59", "4.93615, 33.3179, -11.2177, 0.59", "4.63663, 33.8712, -11.9175, 0.52", "4.05202, 34.8723, -13.2955, 1.99", "3.76816, 35.3397, -13.973, 3.02", "3.63277, 35.5483, -14.3037, 3.02", "3.60945, 35.581, -14.359, 3.02", "3.20126, 36.1507, -15.3777, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.77298, 8.24117, 1.3594, 1.47", "3.20185, 8.59394, 1.39022, 1.47", "4.07588, 9.26257, 1.55235, 1.25", "4.35981, 9.47275, 1.6158, 1.62", "4.89279, 9.82525, 1.73739, 1.92", "5.5066, 10.2054, 1.87829, 1.69", "6.42807, 10.6656, 2.14339, 0.88", "7.36759, 10.9713, 2.72661, 0.88", "7.40686, 10.982, 2.77395, 0.88", "7.80444, 11.0884, 3.48597, 0.81", "7.82187, 11.0951, 3.53691, 0.81", "8.12549, 11.3831, 5.16765, 1.03", "8.30564, 12.0728, 7.98975, 1.11", "8.26997, 12.5889, 9.57763, 1.11", "8.26437, 12.6148, 9.63416, 1.11", "8.05226, 13.2881, 10.7629, 1.33", "7.80462, 14.0171, 11.6187, 1.99", "7.62625, 14.5314, 11.9913, 2.73", "7.51965, 14.9954, 12.218, 2.65", "7.44024, 15.9519, 12.6442, 2.36", "7.44328, 16.0011, 12.6649, 2.36", "7.72542, 17.2937, 13.1564, 0.81", "8.01283, 18.1016, 13.4625, 0.59", "8.69401, 19.5905, 13.995, 0.44", "9.26333, 20.5832, 14.2929, 0.44", "9.83873, 21.413, 14.4516, 1.18", "10.3109, 22.0065, 14.5224, 1.99", "10.8024, 22.5571, 14.62, 2.65", "11.0767, 22.8624, 14.6897, 2.65", "11.8421, 23.7594, 14.9798, 1.77", "12.5784, 24.6515, 15.4434, 0.44", "13.3008, 25.577, 16.0411, 0.44", "14.5803, 27.3253, 17.4047, 1.25", "14.9471, 27.8781, 17.8765, 2.43", "15.5409, 28.8726, 18.7513, 2.43", "15.9971, 29.7327, 19.5466, 2.21", "16.3276, 30.4395, 20.1824, 1.25", "16.7071, 31.3595, 20.872, 0.52", "16.9768, 32.0335, 21.2231, 0.52", "17.3056, 32.8514, 21.5562, 0.52", "17.3284, 32.9078, 21.5701, 0.52", "17.6633, 33.6748, 21.7117, 0.88", "18.0142, 34.417, 21.8237, 1.25", "18.3344, 35.0683, 21.8684, 1.69", "18.5738, 35.5251, 21.9088, 1.69", "18.618, 35.6084, 21.9184, 1.69", "19.0509, 36.3986, 22.0275, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.16702, 11.2212, -3.0206, 1.62", "-3.16702, 11.2212, -3.0206, 1.62", "-3.59259, 12.0077, -2.43008, 1.4", "-4.36183, 13.4351, -1.24865, 1.4", "-4.88973, 14.4048, -0.472792, 1.4", "-5.357, 15.2775, 0.205438, 1.69", "-6.02115, 16.5112, 1.14396, 1.99", "-6.73842, 17.8373, 2.11593, 2.36", "-7.43782, 19.126, 3.01407, 3.09", "-8.13932, 20.3423, 3.77343, 3.32", "-8.79383, 21.4142, 4.32721, 3.09", "-9.38734, 22.3052, 4.6514, 2.43", "-10.1412, 23.3477, 4.77231, 1.4", "-10.6136, 23.9595, 4.75098, 1.33", "-11.3691, 24.8695, 4.57046, 1.18", "-12.0989, 25.6674, 4.28726, 1.4", "-13.0904, 26.637, 3.71029, 1.69", "-14.2425, 27.6812, 2.8187, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.38098, -13.0939, 2.58385, 1.02022", "-0.412752, -28.0939, 2.58385, 1.02022", "-0.444525, -43.0938, 2.58385, 1.02022" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.953767, -18.166, 5.30771, 1.99", "-0.202459, -19.4055, 5.17158, 1.99", "0.587115, -20.6061, 5.09115, 1.62", "0.629044, -20.6677, 5.08842, 1.62", "1.59325, -22.0615, 5.09261, 1.18", "2.13668, -22.8584, 5.11222, 1.18", "2.83945, -23.9153, 5.14818, 1.18", "3.83881, -25.4464, 5.24057, 1.18", "4.67517, -26.7817, 5.3463, 1.47", "5.54262, -28.2732, 5.48344, 2.21", "6.28044, -29.595, 5.63298, 2.73", "6.98278, -30.9262, 5.79159, 2.8", "7.59511, -32.1624, 5.94174, 2.95", "8.18579, -33.4807, 6.0922, 2.95", "8.45778, -34.1562, 6.16725, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.953767, -18.166, 5.30771, 1.18", "-2.55227, -19.9014, 9.2516, 1.18", "-3.71461, -21.1633, 12.1194, 1.18", "-4.4324, -21.9425, 13.8904, 1.69", "-5.02037, -22.5808, 15.341, 2.36", "-5.37417, -22.9649, 16.2139, 2.73" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.39439, -14.2491, -43.3481, 0.66", "-2.61117, -15.6268, -44.9076, 0.66", "-1.55673, -16.3703, -45.7311, 0.74", "-0.811451, -16.8479, -46.3457, 0.74", "-0.202575, -17.1996, -46.8677, 0.74", "-0.154306, -17.2251, -46.9103, 0.74", "1.00803, -17.7777, -47.9587, 0.52", "1.56468, -17.8437, -48.4253, 0.52", "2.20379, -17.6158, -49.2489, 0.44", "2.57017, -17.3554, -49.8984, 0.44", "2.66888, -17.2887, -50.0814, 0.44", "3.03994, -17.1165, -50.6779, 0.44", "3.96766, -16.8106, -52.1151, 0.88", "4.0067, -16.8042, -52.1719, 0.88", "4.88153, -16.7742, -53.3209, 1.11", "6.0805, -16.8201, -54.8173, 1.84", "7.45946, -16.9325, -56.4409, 2.14", "9.65265, -17.2019, -58.8816, 0.29", "10.4241, -17.3163, -59.6687, 0.29", "11.0234, -17.4012, -60.2215, 1.03", "11.0856, -17.4105, -60.2694, 1.03", "11.5845, -17.5126, -60.576, 1.33", "11.6432, -17.5257, -60.6116, 1.33", "12.2478, -17.6199, -61.0329, 1.18", "13.2626, -17.6662, -61.8864, 0.37", "13.9309, -17.6314, -62.5512, 0.37", "15.0038, -17.4674, -63.8405, 0.52", "16.3316, -17.1686, -65.7075, 0.74", "17.0123, -17.0095, -66.7415, 1.62", "17.3797, -16.9156, -67.3364, 1.92", "18.035, -16.7247, -68.4343, 2.43", "19.1033, -16.3286, -70.1729, 1.69", "20.0545, -15.8663, -71.7253, 0.37", "20.5067, -15.6369, -72.4502, 0.37", "20.8206, -15.485, -72.9421, 0.37", "21.2393, -15.3074, -73.5993, 1.11", "21.7295, -15.1482, -74.2653, 1.33", "23.4078, -14.6473, -76.1293, 0.22", "23.4645, -14.6319, -76.183, 0.22", "24.0242, -14.5284, -76.6723, 0.22", "24.7742, -14.5357, -77.2416, 0.22", "25.753, -14.6701, -77.8802, 0.88", "26.7627, -14.8488, -78.5151, 1.55", "27.3898, -14.9034, -79.078, 1.77", "28.4285, -14.8355, -80.5444, 0.22", "28.999, -14.697, -81.7006, 0.22", "29.4504, -14.529, -82.8019, 1.47", "30.0212, -14.2886, -84.3646, 2.43", "31.6782, -13.4724, -89.2314, 1.99", "32.6331, -12.8989, -92.3471, 1.77", "33.7059, -12.0934, -96.2897, 0.22", "33.7195, -12.0808, -96.346, 0.22", "33.9409, -11.8548, -97.3789, 0.22", "34.1235, -11.6639, -98.2927, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.39439, -14.2491, -43.3481, 1.03", "-5.57191, -16.3093, -44.026, 1.03", "-6.24626, -17.9647, -44.4377, 0.88", "-6.2787, -18.0625, -44.4584, 0.88", "-6.59405, -19.3072, -44.678, 0.88", "-6.72271, -20.4475, -44.9292, 1.69", "-6.7589, -21.4396, -45.1549, 1.84", "-6.69869, -22.0299, -45.2988, 1.99", "-6.69099, -22.0971, -45.3164, 1.99", "-6.63473, -22.9258, -45.5798, 1.69", "-6.65094, -25.1721, -46.4757, 1.03", "-6.91102, -26.5392, -47.3081, 0.88", "-7.27251, -27.4831, -48.0399, 0.66", "-7.53586, -28.026, -48.5027, 0.66", "-8.03067, -28.8225, -49.2591, 0.52", "-8.55183, -29.3454, -49.8892, 0.52", "-10.4456, -30.2599, -51.5313, 1.77", "-10.937, -30.4012, -51.9704, 1.77" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "3.20126, 36.1507, -15.3777, 0.52", "3.65335, 36.6905, -17.5783, 0.52", "3.73258, 36.7764, -17.9352, 0.52", "3.86221, 36.9771, -18.6755, 0.37", "4.00695, 37.307, -19.6796, 1.4", "4.03398, 37.4075, -19.9239, 1.55", "4.23597, 38.4745, -22.1387, 0.74", "4.23895, 38.7005, -22.5016, 0.74", "4.16545, 39.6479, -23.854, 0.29", "4.09582, 40.1399, -24.4625, 0.29", "3.93547, 40.9675, -25.3588, 1.92", "3.85343, 41.3043, -25.6706, 2.28", "3.51389, 42.5752, -26.661, 0.22", "3.4965, 42.6448, -26.7164, 0.22", "3.44012, 42.9453, -26.9555, 0.22", "3.34711, 43.7483, -27.6919, 1.18", "3.32898, 44.0612, -27.9998, 1.77", "3.30495, 45.3993, -29.2783, 0.22", "3.32962, 46.1595, -29.965, 1.84", "3.35366, 46.5298, -30.287, 2.21", "3.50859, 47.7528, -31.2962, 0.22", "3.5168, 47.789, -31.3228, 0.22", "3.76988, 48.5764, -31.834, 0.22", "3.78922, 48.6198, -31.8554, 0.22", "4.09023, 49.168, -32.1198, 0.66", "4.35941, 49.6425, -32.4359, 0.88", "4.71717, 50.2647, -32.9093, 0.22", "5.041, 50.823, -33.4127, 1.99", "5.1999, 51.1088, -33.7163, 2.5", "5.58623, 51.919, -34.6443, 0.22", "6.08788, 53.1816, -36.1825, 0.59", "6.13309, 53.3501, -36.3919, 0.59", "6.13757, 53.3789, -36.4272, 0.59", "6.19475, 54.1041, -37.2271, 0.96", "6.21078, 54.4861, -37.6058, 1.11", "6.22569, 54.8587, -37.9233, 0.96", "6.28983, 55.6928, -38.5534, 0.22", "6.29302, 55.8147, -38.6961, 0.22", "6.28807, 56.2454, -39.3402, 0.22", "6.26308, 56.6074, -40.0077, 1.11", "6.16202, 57.0656, -41.034, 1.4", "6.05292, 57.4122, -41.9066, 2.06", "5.57574, 58.7872, -45.6132, 1.18", "5.37207, 59.3051, -47.1012, 1.18", "5.06464, 59.9602, -49.1595, 1.4", "4.59161, 60.8224, -52.0524, 1.55", "4.58378, 60.834, -52.0959, 1.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.20126, 36.1507, -15.3777, 0.52", "3.27653, 37.73, -15.2068, 0.52", "3.33849, 38.7229, -15.1065, 0.52", "3.4195, 39.7868, -15.0889, 1.18", "3.50484, 40.6515, -15.1178, 1.99", "3.55297, 41.0134, -15.1387, 2.28", "3.64453, 41.4566, -15.1681, 1.84", "3.79505, 41.8919, -15.2061, 1.55", "4.22941, 42.9693, -15.349, 0.88", "4.539, 43.7179, -15.5188, 0.29", "4.79911, 44.3697, -15.6741, 0.29", "5.122, 45.3277, -15.9353, 0.29", "5.14716, 45.4069, -15.9609, 0.29", "5.33283, 46.0658, -16.183, 0.29", "5.65243, 47.5025, -16.6564, 1.92", "5.76267, 48.3461, -16.9411, 2.21", "5.8185, 49.6272, -17.4097, 0.29", "5.78697, 50.7042, -17.8178, 0.29", "5.68533, 51.5907, -18.187, 0.29", "5.51366, 52.3487, -18.5175, 0.29", "5.15709, 53.3848, -18.9641, 1.84", "4.73602, 54.3143, -19.3738, 2.58", "4.58753, 54.5752, -19.4865, 2.5", "3.3358, 56.4201, -20.3182, 0.22", "2.65137, 57.3331, -20.7622, 0.22", "2.19597, 57.9079, -21.0421, 0.96", "1.94997, 58.2004, -21.1837, 1.18", "1.72493, 58.4593, -21.2982, 1.18", "0.944231, 59.3492, -21.6858, 0.29", "0.533432, 59.8069, -21.8729, 0.29", "-0.27291, 60.7221, -22.2824, 0.29", "-1.33146, 61.9401, -22.8507, 2.21", "-1.6958, 62.3684, -23.0498, 2.65" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.0509, 36.3986, 22.0275, 0.29", "19.3858, 37.4608, 21.9672, 0.29", "19.6224, 38.2251, 21.9759, 0.59", "19.7804, 38.6989, 22.0385, 0.74", "20.0559, 39.5117, 22.1839, 0.22", "20.3168, 40.2844, 22.3346, 0.22", "20.7203, 41.4865, 22.5763, 2.28", "20.855, 41.9042, 22.6866, 2.28", "21.3316, 43.3827, 23.1071, 0.29", "21.4445, 43.7247, 23.2099, 0.29", "21.7551, 44.6582, 23.5028, 0.22", "21.8403, 44.9093, 23.5742, 0.88", "21.8765, 45.0044, 23.5936, 0.88", "21.9801, 45.2515, 23.6291, 0.88", "22.0434, 45.3898, 23.6357, 0.88", "22.27, 45.8432, 23.6767, 0.52", "22.4234, 46.1551, 23.7561, 0.15", "22.6345, 46.6102, 23.9081, 0.15", "22.7287, 46.8452, 23.9962, 0.15", "22.9359, 47.432, 24.2219, 0.81", "23.0197, 47.7398, 24.3553, 0.96", "23.2091, 48.6883, 24.8114, 0.15", "23.2179, 48.7484, 24.8425, 0.15", "23.3331, 49.5503, 25.2596, 1.55", "23.4057, 49.9856, 25.4845, 2.28", "23.6833, 51.3424, 26.1975, 0.22", "23.9098, 52.2864, 26.7347, 2.65", "24.261, 53.608, 27.5102, 0.29", "24.3996, 54.0643, 27.7877, 0.15", "24.5032, 54.3815, 27.9896, 0.15", "24.9532, 55.6429, 28.8175, 2.58", "25.5152, 56.9703, 29.6963, 0.15", "25.6366, 57.2211, 29.8674, 0.37", "25.7958, 57.5187, 30.0832, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.0509, 36.3986, 22.0275, 0.29", "17.9173, 37.0557, 23.1345, 0.29", "17.1664, 37.5915, 23.8594, 0.29", "16.7316, 37.9651, 24.2757, 0.29", "16.3212, 38.3618, 24.6659, 0.88", "16.2825, 38.4128, 24.7029, 0.88", "16.0636, 38.8052, 24.9737, 0.88", "15.9966, 39.0024, 25.0719, 0.88", "15.9499, 39.2761, 25.1958, 0.88", "15.9451, 39.3508, 25.2345, 0.88", "15.9331, 40.3611, 25.7846, 0.44", "15.9386, 41.2019, 26.2391, 0.44", "15.9411, 41.264, 26.2792, 0.44", "15.9368, 42.0159, 26.8135, 0.44", "15.9204, 43.1917, 27.8215, 1.77", "15.942, 43.6838, 28.2635, 2.65", "15.9923, 44.13, 28.6735, 3.02", "16.3282, 46.1413, 30.4388, 0.22", "16.6285, 47.2086, 31.3803, 1.03", "17.181, 48.718, 32.7023, 0.29", "17.658, 49.7793, 33.644, 0.22", "17.9891, 50.4167, 34.2059, 1.92", "18.371, 51.0715, 34.7464, 2.28", "19.5178, 52.8117, 36.0112, 0.22", "19.8482, 53.2837, 36.4104, 0.22", "20.4789, 54.2435, 37.3875, 1.11", "20.6624, 54.5666, 37.7965, 1.55", "20.8804, 54.9754, 38.4123, 1.84", "20.8972, 55.0111, 38.4748, 1.84", "21.5913, 56.6993, 41.7282, 0.29", "21.8698, 57.4571, 43.3077, 0.29", "22.0648, 58.1488, 44.7876, 2.65", "22.1745, 58.6973, 45.9815, 2.36", "22.2713, 59.6233, 48.011, 0.37", "22.2699, 59.6511, 48.0672, 0.37", "22.1371, 60.042, 48.7285, 0.22", "21.9235, 60.4037, 49.2775, 0.66", "21.6345, 60.8033, 49.8164, 0.96", "21.3153, 61.2146, 50.3077, 0.96", "20.814, 61.8394, 51.007, 0.22", "20.462, 62.3107, 51.5687, 0.22", "19.896, 63.1257, 52.6382, 2.43", "19.0803, 64.3074, 54.5089, 0.22", "18.9567, 64.4878, 54.817, 0.88", "18.815, 64.7036, 55.1886, 1.03", "18.3463, 65.4458, 56.5205, 0.66", "18.0393, 66.1146, 57.9901, 1.62", "17.9241, 66.7373, 59.4177, 1.62", "17.951, 67.3644, 60.7974, 0.37", "18.0215, 67.6401, 61.3347, 2.06", "18.0326, 67.6708, 61.3883, 2.06", "18.8866, 69.919, 64.6964, 1.62", "19.2903, 70.8125, 65.9302, 0.22", "19.5693, 71.3731, 66.6625, 2.06", "20.5969, 73.1154, 69.0138, 0.29", "20.7513, 73.378, 69.3601, 0.29", "21.1772, 74.1908, 70.3039, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-14.2425, 27.6812, 2.8187, 1.18", "-16.1142, 29.5719, -0.151139, 1.18", "-16.5802, 30.0325, -0.776567, 1.18", "-17.1936, 30.6247, -1.48996, 1.4", "-17.8333, 31.2414, -2.13256, 1.4", "-18.6493, 32.0827, -2.95282, 1.03", "-19.3664, 32.8664, -3.64915, 0.66", "-19.9662, 33.5586, -4.10043, 0.66", "-20.3737, 34.0884, -4.41282, 1.11", "-20.9534, 34.9203, -4.79879, 0.81", "-22.2386, 36.9647, -5.50297, 0.66", "-22.8019, 37.9238, -5.71209, 0.66", "-23.2318, 38.7116, -5.81272, 0.66", "-23.8471, 39.89, -5.89343, 1.25", "-24.4891, 41.1731, -5.84993, 1.62", "-25.0489, 42.3085, -5.677, 1.99", "-25.4599, 43.1353, -5.44682, 1.99", "-25.5367, 43.2924, -5.40194, 1.99", "-25.8817, 44.0139, -5.20123, 1.84", "-26.4153, 45.163, -4.93231, 1.03", "-26.8246, 46.0899, -4.78598, 0.74", "-27.2841, 47.1704, -4.65883, 0.74", "-27.6254, 47.9938, -4.57333, 0.44", "-27.8745, 48.5951, -4.51799, 0.59", "-28.1916, 49.3036, -4.49094, 0.59", "-28.5273, 49.9732, -4.51436, 0.59", "-28.5709, 50.0488, -4.52108, 0.59", "-29.0802, 50.8218, -4.62887, 0.44", "-29.4634, 51.3495, -4.72307, 0.29", "-30.1609, 52.2652, -4.95489, 0.29", "-30.6677, 52.9634, -5.15472, 1.47", "-31.1999, 53.7725, -5.39014, 2.06", "-31.3738, 54.1112, -5.48305, 2.21", "-31.4963, 54.4977, -5.60038, 2.21", "-31.6712, 55.6548, -5.95353, 1.18", "-31.6877, 56.9655, -6.32722, 0.37", "-31.6244, 57.67, -6.52679, 0.37", "-31.3964, 59.0375, -6.87341, 0.37", "-31.0809, 60.6379, -7.27523, 1.33", "-30.9918, 61.0992, -7.36997, 1.77", "-30.9758, 61.1968, -7.38453, 1.77", "-30.9376, 61.7002, -7.40557, 1.77", "-31.0007, 62.8098, -7.28828, 0.81", "-31.1783, 64.0013, -7.01773, 0.29", "-31.3296, 64.9793, -6.61437, 0.74", "-31.4083, 65.5938, -6.3193, 0.74", "-31.5494, 67.0868, -5.5336, 0.37", "-31.6058, 68.0843, -4.96663, 0.37", "-31.6119, 68.8717, -4.47759, 0.37", "-31.5281, 70.4375, -3.40694, 1.4", "-31.4365, 71.0504, -3.04155, 2.06", "-31.3627, 71.4417, -2.84067, 2.5", "-31.2392, 72.0427, -2.59259, 2.5", "-31.2298, 72.1137, -2.56744, 2.5", "-31.1166, 74.6118, -1.84571, 0.44", "-31.2155, 76.1644, -1.55524, 0.37", "-31.3446, 76.9971, -1.41592, 0.37", "-31.3689, 77.1017, -1.40059, 0.37", "-31.806, 78.619, -1.22915, 0.37", "-31.859, 78.7854, -1.21818, 0.37", "-32.1351, 79.5589, -1.22956, 0.37", "-32.1533, 79.6326, -1.23186, 0.37", "-32.2261, 80.4417, -1.34468, 1.47", "-32.242, 81.3769, -1.53667, 2.21", "-32.2187, 82.0164, -1.69784, 2.65", "-32.2109, 82.644, -1.87108, 2.5", "-32.25, 84.6882, -2.46404, 0.29", "-32.3216, 85.5959, -2.77826, 0.29", "-32.4484, 86.4493, -3.11723, 0.29", "-32.5954, 87.0353, -3.34898, 0.29", "-32.8061, 87.7081, -3.59464, 1.33", "-33.1171, 88.5997, -3.87358, 2.28", "-33.5356, 89.74, -4.13609, 2.73", "-33.7483, 90.3815, -4.27314, 2.43", "-34.1987, 91.9071, -4.62981, 0.29", "-34.3896, 92.5613, -4.81109, 0.29", "-34.5484, 93.1585, -4.97931, 0.29", "-34.6661, 93.636, -5.10887, 0.29", "-34.9118, 94.7608, -5.34642, 0.88", "-35.0133, 95.2369, -5.48328, 1.55", "-35.2391, 96.0847, -5.89426, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-14.2425, 27.6812, 2.8187, 0.74", "-15.4547, 27.8849, 2.57969, 0.74", "-16.4602, 28.094, 2.3815, 0.74", "-17.3757, 28.2987, 2.20672, 0.59", "-17.929, 28.4322, 2.10645, 0.74", "-18.7984, 28.6531, 1.95879, 0.74", "-19.4526, 28.8247, 1.85583, 1.03", "-20.3063, 29.073, 1.7347, 1.33", "-21.0099, 29.2711, 1.64568, 1.55", "-21.8619, 29.4837, 1.5533, 1.4", "-22.9108, 29.7042, 1.48364, 1.25", "-24.2679, 29.9674, 1.4875, 0.74", "-24.9809, 30.1118, 1.54823, 0.96", "-25.7519, 30.2727, 1.68231, 0.96", "-26.9039, 30.548, 2.03271, 0.52", "-27.9412, 30.8493, 2.52993, 0.52", "-28.724, 31.1623, 3.09643, 0.88", "-29.2865, 31.4664, 3.63138, 0.59", "-29.3252, 31.4922, 3.66798, 0.59", "-29.9023, 31.9581, 4.20309, 0.29", "-30.2975, 32.2896, 4.43134, 0.29", "-31.0065, 32.7166, 4.42092, 0.74", "-31.6121, 32.9833, 4.25741, 0.96", "-32.7473, 33.355, 3.85343, 0.59", "-32.8188, 33.3727, 3.82368, 0.59", "-33.7033, 33.5228, 3.40428, 0.29", "-34.2835, 33.5899, 3.11461, 0.29", "-35.0883, 33.6292, 2.7074, 1.62", "-35.9482, 33.6029, 2.33198, 2.43", "-36.6919, 33.5382, 2.07057, 2.65", "-37.3545, 33.4623, 1.86572, 2.65", "-37.4114, 33.4559, 1.85068, 2.65", "-38.974, 33.3258, 1.5324, 1.11", "-40.2029, 33.286, 1.38337, 0.37", "-41.0016, 33.3248, 1.3374, 0.37", "-41.853, 33.4449, 1.34601, 0.37", "-42.5938, 33.6445, 1.44835, 0.37", "-43.4415, 33.9987, 1.69351, 0.81", "-44.0786, 34.3566, 1.99096, 1.47", "-44.5493, 34.6372, 2.27011, 1.69", "-44.841, 34.7926, 2.45637, 1.69", "-46.1153, 35.3419, 3.29072, 0.66", "-47.0884, 35.6584, 3.91653, 0.37", "-47.7455, 35.8151, 4.33109, 0.37", "-48.9162, 35.9724, 5.00814, 1.25", "-49.7935, 35.9791, 5.50625, 2.36", "-50.5633, 35.943, 5.94855, 2.36", "-50.6214, 35.9377, 5.98554, 2.36", "-51.1228, 35.8855, 6.33662, 2.21", "-52.3909, 35.7766, 7.33248, 0.37", "-53.8607, 35.6683, 8.60536, 0.59", "-54.7547, 35.6136, 9.40821, 0.37", "-56.257, 35.5398, 10.7184, 1.18", "-56.6548, 35.524, 11.044, 1.4", "-57.4815, 35.4945, 11.6931, 1.25", "-57.534, 35.4921, 11.7378, 1.25", "-58.2667, 35.4199, 12.4249, 0.52", "-59.074, 35.2753, 13.2008, 2.14", "-59.8202, 35.1536, 13.9419, 2.95", "-60.8523, 34.9517, 15.0386, 1.92", "-62.4236, 34.6869, 16.68, 1.03", "-64.1904, 34.4805, 18.5338, 0.44", "-64.6026, 34.433, 18.9915, 0.44", "-65.7759, 34.3066, 20.3247, 0.44", "-67.2187, 34.1739, 21.9625, 2.36", "-68.8845, 34.0932, 23.7173, 0.22", "-69.6243, 34.1135, 24.3719, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.444525, -43.0938, 2.58385, 0.318625", "-0.476297, -58.0938, 2.58385, 0.318625", "-0.508069, -73.0938, 2.58385, 0.318625" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "8.45778, -34.1562, 6.16725, 0.37", "9.02365, -35.1021, 5.24314, 0.37", "9.48743, -35.7695, 4.42922, 0.29", "9.77438, -36.1518, 3.92067, 0.29", "10.6458, -37.1276, 2.45658, 0.74", "10.6866, -37.1642, 2.39378, 0.74", "11.4719, -37.7497, 1.26039, 0.66", "12.1787, -38.1539, 0.172664, 0.29", "12.2335, -38.1675, 0.0962852, 0.29", "12.8036, -38.1465, -0.525437, 0.29", "13.4243, -37.9626, -0.96453, 0.74", "13.6216, -37.8727, -1.0716, 0.74", "14.0228, -37.6661, -1.21792, 1.03", "14.1805, -37.5979, -1.26135, 1.03", "14.5808, -37.5015, -1.36964, 1.03", "15.4337, -37.4517, -1.59462, 0.59", "16.469, -37.5491, -1.85946, 0.22", "17.3544, -37.7329, -2.05478, 0.22", "17.998, -37.9114, -2.1828, 0.88", "19.2114, -38.2531, -2.45474, 1.84", "19.8313, -38.4394, -2.60099, 2.14", "20.7008, -38.6966, -2.7911, 2.36", "22.2267, -39.0633, -3.07646, 0.66", "23.4488, -39.2344, -3.27617, 0.59", "25.3001, -39.3344, -3.5413, 0.52", "25.3827, -39.3297, -3.55164, 0.52", "26.349, -39.1708, -3.6993, 1.33", "27.5195, -38.8227, -3.91992, 1.77", "28.2489, -38.5288, -4.03613, 1.77", "28.5372, -38.4162, -4.07015, 1.77", "29.5379, -38.1112, -4.15695, 1.25", "30.9787, -37.7792, -4.30516, 0.52", "32.3431, -37.5668, -4.48563, 0.29", "33.7274, -37.4484, -4.6773, 0.29", "35.0686, -37.3885, -4.83991, 0.22", "36.2848, -37.4005, -5.10922, 0.22", "36.375, -37.4041, -5.13878, 0.22", "36.9417, -37.3993, -5.40541, 1.03", "37.3998, -37.3873, -5.70037, 1.47", "37.9778, -37.3407, -6.15755, 1.47", "39.7877, -37.1205, -7.71888, 0.59", "40.5449, -37.0414, -8.42528, 0.22", "41.432, -37.0194, -9.22341, 0.22", "42.0271, -37.0532, -9.75427, 0.22", "42.0896, -37.0613, -9.80753, 0.22", "42.9114, -37.245, -10.4154, 0.22", "42.9768, -37.2623, -10.4626, 0.22", "43.8567, -37.5395, -11.2561, 1.03", "44.5957, -37.8106, -11.9578, 1.62", "44.6529, -37.8284, -12.0145, 1.62", "44.9255, -37.9089, -12.2747, 1.62", "46.5957, -38.371, -13.7445, 0.15", "46.6586, -38.3916, -13.7951, 0.15", "47.4934, -38.7302, -14.4274, 0.15", "47.5666, -38.762, -14.4777, 0.15", "48.862, -39.331, -15.3214, 1.77", "49.749, -39.7615, -15.8167, 2.73", "50.3166, -40.0353, -16.0246, 3.02", "53.4235, -41.4704, -16.9015, 0.22", "54.0619, -41.738, -17.0146, 0.22", "54.1278, -41.7632, -17.0191, 0.22", "55.81, -42.3032, -16.871, 0.22", "58.1569, -42.829, -16.3756, 0.22", "58.3122, -42.8555, -16.325, 0.22", "59.366, -43.0106, -15.8379, 1.55", "60.3962, -43.1648, -15.3904, 2.21", "61.3609, -43.3104, -15.0175, 1.4", "63.0229, -43.5499, -14.5166, 0.22", "64.1264, -43.7829, -14.2268, 0.22", "65.0522, -44.0027, -13.9457, 0.22", "65.6051, -44.1609, -13.731, 0.44", "65.6784, -44.1841, -13.6987, 0.44", "66.4265, -44.4548, -13.2958, 0.22", "68.1449, -45.1384, -12.2809, 1.62", "68.8106, -45.431, -11.8774, 2.14", "71.3271, -46.6522, -10.3745, 0.22", "72.0111, -47.0174, -9.97219, 1.47", "74.2046, -48.2849, -8.72653, 1.11", "74.87, -48.7136, -8.36991, 1.33", "76.6034, -49.9047, -7.61807, 0.22", "77.4585, -50.4881, -7.2606, 0.22", "77.9092, -50.7897, -7.09248, 1.47", "78.3545, -51.0514, -6.88409, 2.14", "79.2092, -51.4979, -6.46782, 2.14", "81.362, -52.5998, -5.28013, 0.22", "83.2198, -53.5275, -4.15498, 1.77", "83.6454, -53.7471, -3.87957, 2.36", "86.7905, -55.4343, -1.66362, 0.29", "87.8049, -56.0007, -0.921462, 0.29", "88.4801, -56.409, -0.401826, 0.29", "88.5378, -56.4496, -0.357472, 0.29", "89.0902, -56.867, 0.0435114, 0.29", "90.9887, -58.3349, 1.37608, 2.28", "91.5561, -58.7682, 1.7406, 2.65", "93.7104, -60.3239, 3.16706, 0.22", "94.4971, -60.8627, 3.67868, 0.22", "95.8311, -61.7289, 4.47301, 0.96", "96.5302, -62.143, 4.84006, 1.47", "98.9232, -63.3986, 5.80992, 0.22", "100.129, -63.919, 6.19857, 0.81", "100.295, -63.976, 6.2358, 0.81", "102.334, -64.5098, 6.48902, 0.22", "103.359, -64.7153, 6.46696, 0.22", "105.586, -65.065, 6.29497, 0.22", "106.762, -65.1701, 6.06376, 0.22", "106.843, -65.1737, 6.043, 0.22", "108.698, -65.213, 5.49973, 0.96", "109.799, -65.1663, 5.04886, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "8.45778, -34.1562, 6.16725, 1.25", "7.87586, -35.6016, 6.22558, 1.25", "7.39416, -37.0755, 6.22783, 0.81", "7.12791, -38.2396, 6.17114, 0.81", "6.95427, -39.59, 6.0609, 0.96", "6.88562, -40.9762, 5.9003, 0.74", "6.83358, -42.0271, 5.77855, 1.11", "6.86537, -42.734, 5.63467, 1.69", "7.09008, -43.8908, 5.32486, 2.36", "7.41974, -44.7764, 5.03187, 2.65", "7.744, -45.3222, 4.82084, 2.65" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-5.37417, -22.9649, 16.2139, 0.81", "-5.92499, -21.7298, 16.3979, 0.81", "-6.35866, -20.7097, 16.4465, 0.66", "-6.78985, -19.6525, 16.4579, 0.66", "-7.05243, -19.0604, 16.4326, 0.96", "-7.56219, -18.0357, 16.3725, 0.44", "-7.96272, -17.2866, 16.322, 0.44", "-8.63054, -16.1479, 16.1608, 0.59", "-8.91436, -15.7678, 16.0893, 0.59", "-9.64379, -15.1386, 15.9914, 0.59", "-10.2674, -14.8342, 15.9965, 0.59", "-10.3387, -14.8196, 16.0068, 0.59", "-11.0424, -14.7929, 16.1616, 0.59", "-11.967, -14.8515, 16.4675, 1.33", "-12.7566, -14.9294, 16.78, 1.69", "-13.5331, -15.0137, 17.1642, 1.55", "-14.3897, -15.1117, 17.7374, 0.88", "-15.001, -15.1711, 18.4773, 0.44", "-15.4004, -15.2302, 19.3548, 0.44", "-15.514, -15.2793, 19.8118, 0.74", "-15.6047, -15.4069, 20.5778, 0.88", "-15.7205, -15.7968, 22.4706, 1.03", "-15.8209, -16.5686, 25.6767, 0.52", "-15.8493, -16.9832, 27.2182, 1.25", "-15.8693, -17.4211, 28.6168, 1.25", "-15.8097, -17.8803, 29.935, 0.44", "-15.728, -18.2652, 30.9362, 0.44", "-15.5562, -18.7344, 32.2556, 0.29", "-15.1418, -19.3437, 34.385, 1.99", "-15.0262, -19.4951, 34.9908, 1.99", "-14.2576, -20.4903, 39.3087, 1.99", "-14.2455, -20.5055, 39.3796, 1.99", "-13.0954, -21.9038, 46.118, 2.73", "-11.875, -23.4933, 53.8638, 1.4", "-11.722, -23.7229, 55.0096, 1.25", "-11.6278, -23.9213, 56.0633, 0.22", "-11.6159, -24.0537, 56.7425, 0.22", "-11.6217, -24.1228, 57.0434, 1.11", "-11.7629, -24.4288, 57.9908, 1.47", "-12.5331, -25.5822, 60.641, 1.18", "-12.7136, -25.9029, 61.4197, 1.99", "-13.097, -26.652, 63.3333, 0.22", "-13.3359, -27.1187, 64.5204, 0.22", "-13.4158, -27.2576, 64.8728, 0.66", "-13.7733, -27.8256, 66.3309, 0.66", "-14.1121, -28.2035, 67.2399, 0.29", "-14.489, -28.5494, 68.2583, 1.33", "-14.6394, -28.5858, 68.5595, 1.62", "-14.9266, -28.5905, 69.1087, 1.84" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.37417, -22.9649, 16.2139, 1.62", "-5.68787, -23.9556, 16.0434, 1.62", "-5.94659, -24.7353, 15.9044, 1.33", "-6.27455, -25.7016, 15.7177, 0.88", "-6.64488, -26.8094, 15.4872, 0.74", "-7.08069, -28.1305, 15.2075, 0.74", "-7.4549, -29.3611, 14.9545, 2.14", "-7.76252, -30.5231, 14.7342, 2.21", "-8.0393, -31.9252, 14.533, 1.47", "-8.15084, -33.0235, 14.4293, 1.18", "-8.13128, -33.6726, 14.4059, 0.88", "-7.92425, -34.6985, 14.4796, 0.59", "-7.52211, -35.9013, 14.6671, 0.59", "-7.05207, -37.0554, 14.9274, 1.18", "-6.83092, -37.5486, 15.0815, 1.47", "-6.51479, -38.2847, 15.3625, 1.11", "-6.12991, -39.5226, 15.8773, 0.74", "-6.22996, -40.126, 16.1263, 0.44", "-6.79776, -40.711, 16.3395, 0.44", "-7.43176, -41.1625, 16.4762, 0.52", "-8.168, -41.5695, 16.6126, 0.52", "-8.88175, -41.9082, 16.7262, 1.18", "-9.85355, -42.3576, 16.8594, 1.92", "-10.8654, -42.8939, 16.9774, 2.5", "-11.8371, -43.5208, 17.0614, 2.36", "-12.9835, -44.4018, 17.1244, 2.06", "-13.8976, -45.2108, 17.1419, 0.59", "-14.691, -45.9812, 17.1575, 0.52", "-15.481, -46.8321, 17.1734, 0.44", "-16.2597, -47.7506, 17.1499, 1.4", "-16.9061, -48.5913, 17.1069, 1.84", "-17.5908, -49.5692, 17.0292, 1.84", "-18.1208, -50.3539, 16.9547, 1.69", "-18.6891, -51.2227, 16.8634, 1.18", "-19.2368, -52.1067, 16.7443, 0.74", "-19.5583, -52.6699, 16.6321, 0.66", "-19.9933, -53.5118, 16.4042, 0.59", "-20.3385, -54.248, 16.1341, 0.52", "-20.5754, -54.7702, 15.8958, 0.37", "-20.9986, -55.7095, 15.4322, 0.29", "-21.4049, -56.5752, 15.0017, 0.29", "-21.4375, -56.6375, 14.9701, 0.29", "-22.139, -57.8033, 14.4015, 1.77", "-22.762, -58.7763, 14.0239, 2.36", "-22.7923, -58.8226, 14.0089, 2.36", "-23.1393, -59.363, 13.8777, 2.58", "-23.5107, -59.9536, 13.7496, 2.58", "-24.1186, -60.8995, 13.5409, 1.84", "-24.7551, -61.9308, 13.318, 0.81", "-25.2977, -62.8672, 13.1142, 0.52", "-25.7473, -63.711, 12.9516, 0.44", "-26.3268, -64.8662, 12.7615, 0.44", "-26.785, -65.8835, 12.6497, 0.37", "-27.045, -66.563, 12.6248, 0.37", "-27.2637, -67.2251, 12.6411, 0.37", "-27.5178, -68.144, 12.7362, 0.29", "-27.6861, -68.911, 12.8382, 0.29", "-27.8711, -70.1428, 13.0949, 1.99", "-27.9678, -70.95, 13.317, 2.95", "-28.027, -71.4495, 13.4807, 2.95", "-28.2051, -73.1185, 14.0607, 0.59", "-28.2729, -74.0868, 14.4188, 0.44", "-28.3184, -75.4079, 14.941, 0.37", "-28.3208, -76.3612, 15.3243, 0.37", "-28.2577, -77.3041, 15.6921, 1.69", "-28.1845, -77.8348, 15.8984, 2.58", "-28.0247, -78.6363, 16.2044, 2.58", "-27.7559, -79.9777, 16.6939, 0.29", "-27.5997, -80.8955, 16.9671, 0.29", "-27.4041, -82.1192, 17.363, 0.29", "-27.2632, -83.0543, 17.6885, 0.66", "-27.2157, -83.4007, 17.8233, 0.74", "-27.1055, -84.2836, 18.1874, 0.29", "-26.9971, -85.1237, 18.5896, 0.29", "-26.8787, -86.51, 19.3084, 1.4", "-26.8583, -86.9676, 19.5351, 1.92", "-26.8533, -87.0291, 19.5608, 1.92", "-26.802, -87.3704, 19.6831, 1.92", "-26.5413, -88.6182, 20.0026, 0.22", "-26.5248, -88.6827, 20.0142, 0.22", "-26.2985, -89.4952, 20.1295, 0.66", "-26.1982, -89.8247, 20.1775, 0.81", "-25.8385, -90.8368, 20.304, 0.22", "-25.4852, -91.764, 20.3996, 2.14", "-25.1778, -92.5183, 20.4543, 2.58", "-24.3877, -94.3055, 20.5721, 0.22", "-23.9777, -95.1885, 20.6295, 0.22", "-23.5029, -96.1804, 20.686, 0.22", "-23.1275, -96.9334, 20.7132, 0.22", "-22.7417, -97.6525, 20.7345, 2.36", "-22.1338, -98.7465, 20.7308, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "34.1235, -11.6639, -98.2927, 0.15", "35.7547, -13.6317, -112.047, 0.15", "35.8797, -13.7803, -112.977, 1.69", "35.9465, -13.8588, -113.437, 1.92", "35.9573, -13.8709, -113.502, 1.92", "36.4136, -14.3442, -115.843, 0.22", "36.515, -14.442, -116.287, 0.22", "36.9873, -14.776, -116.808, 1.18", "37.0189, -14.8026, -116.849, 1.18", "37.6267, -15.3478, -117.714, 0.29", "37.8922, -15.5679, -118.087, 0.59", "38.4145, -15.9678, -118.795, 0.37", "39.3019, -16.5179, -119.996, 0.74", "39.3388, -16.5373, -120.047, 0.74", "40.0694, -16.9604, -121.18, 0.15", "40.4075, -17.1753, -121.793, 0.15", "40.4337, -17.1944, -121.841, 0.15", "40.6031, -17.3343, -122.158, 0.15", "40.6408, -17.3703, -122.221, 0.15", "41.1404, -17.8434, -122.99, 0.15", "41.5346, -18.2178, -123.562, 1.4", "41.8072, -18.4717, -123.948, 1.69", "43.0183, -19.579, -125.624, 0.22", "43.4334, -19.9481, -126.191, 0.22", "43.9414, -20.3851, -126.824, 0.22", "44.3174, -20.6803, -127.231, 0.96", "44.4719, -20.8066, -127.383, 0.96", "45.1887, -21.3576, -128.023, 0.22", "45.2226, -21.383, -128.049, 0.22", "45.8836, -21.8929, -128.56, 0.22", "46.5273, -22.4406, -129.019, 1.55", "46.8798, -22.7258, -129.235, 1.99", "47.8794, -23.5249, -129.873, 0.29", "47.9203, -23.5564, -129.9, 0.29", "48.5055, -24.0244, -130.353, 0.29", "49.244, -24.6779, -131.009, 0.29", "49.4824, -24.9293, -131.272, 0.29", "50.2937, -25.9311, -132.443, 1.4", "50.5331, -26.286, -132.888, 1.69", "51.1401, -27.2705, -134.177, 0.29", "51.5214, -27.9937, -135.169, 0.29", "51.9394, -28.9385, -136.465, 1.47", "52.3237, -30.0165, -137.886, 1.18", "52.6097, -31.0348, -139.138, 0.22", "52.7012, -31.4692, -139.627, 0.22", "52.8209, -32.323, -140.483, 1.69", "52.8585, -32.7283, -140.842, 1.77", "52.9042, -33.7964, -141.543, 0.66", "52.895, -34.3634, -141.817, 0.22", "52.8549, -35.0771, -142.108, 0.96", "52.8106, -35.8113, -142.427, 0.22", "52.8037, -36.1642, -142.634, 0.15", "52.828, -36.7646, -143.137, 0.15", "52.9, -37.4928, -143.836, 0.44", "52.9633, -38.0836, -144.464, 1.33", "53.0152, -38.5956, -145.042, 1.25", "53.0827, -40.2825, -147.038, 1.25", "53.0951, -41.4595, -148.498, 0.15", "53.0888, -41.8936, -149.044, 0.15", "53.0431, -42.4746, -149.772, 0.81", "53.0153, -42.7058, -150.05, 0.96", "52.8766, -43.8117, -151.268, 0.52", "52.7715, -44.7643, -152.218, 0.22", "52.7343, -45.2148, -152.654, 1.18", "52.6834, -46.9232, -154.376, 0.22", "52.6979, -47.509, -154.968, 0.96", "52.7939, -48.6882, -156.151, 0.22", "52.8499, -49.0311, -156.48, 0.52", "52.8717, -49.164, -156.602, 0.52", "53.1333, -50.526, -157.867, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "34.1235, -11.6639, -98.2927, 1.55", "34.621, -9.83634, -102.836, 1.55", "34.7627, -9.47629, -103.702, 1.62", "35.8082, -7.53324, -108.254, 0.22", "35.8329, -7.49578, -108.34, 0.22", "36.1735, -7.08209, -109.328, 1.33", "36.3881, -6.85688, -109.87, 1.25", "37.8028, -5.73178, -112.415, 0.22", "38.4223, -5.30337, -113.377, 1.18", "38.7713, -5.09362, -113.807, 1.33", "40.384, -4.15396, -115.7, 0.22", "41.5306, -3.50803, -116.999, 1.84", "41.8707, -3.30488, -117.359, 1.84", "42.8959, -2.65706, -118.288, 0.29", "43.1602, -2.47815, -118.516, 0.74", "44.253, -1.67771, -119.393, 0.22", "44.3665, -1.58137, -119.477, 0.22", "44.8312, -1.1438, -119.832, 0.88", "45.8661, 0.0424979, -120.898, 0.22", "46.0559, 0.299158, -121.138, 0.52", "46.3622, 0.757186, -121.58, 0.22", "47.0244, 1.8022, -122.652, 1.92", "47.3084, 2.27787, -123.149, 1.92", "48.131, 3.81246, -124.779, 0.22", "48.2524, 4.07329, -125.046, 0.88", "48.3582, 4.29462, -125.273, 0.88", "48.8258, 5.18324, -126.156, 0.22", "49.0624, 5.60051, -126.573, 0.22", "49.0878, 5.65013, -126.623, 0.22", "49.2311, 5.87775, -126.867, 0.22", "49.8505, 6.75407, -127.892, 1.4", "49.9957, 6.94385, -128.119, 1.4", "50.8029, 7.91458, -129.31, 0.22", "51.1398, 8.24623, -129.747, 0.96", "51.9875, 8.97338, -130.724, 0.22", "52.2329, 9.15158, -130.972, 0.22", "52.6348, 9.36439, -131.277, 0.66", "53.2578, 9.60423, -131.642, 0.66", "54.4239, 9.88723, -132.11, 0.22", "55.0145, 9.97677, -132.296, 1.11", "55.4094, 10.0053, -132.396, 1.4", "57.0602, 9.95677, -132.775, 0.22", "57.8123, 9.86913, -132.926, 0.22", "58.7276, 9.69555, -133.076, 0.96", "59.4982, 9.51545, -133.19, 1.47", "60.7785, 9.18257, -133.389, 0.22", "61.4488, 9.0145, -133.542, 0.22", "61.567, 8.9846, -133.58, 0.22", "62.2929, 8.8305, -133.852, 0.22", "63.3171, 8.64487, -134.291, 1.33", "63.7676, 8.58999, -134.504, 1.62", "65.3601, 8.49147, -135.317, 0.22", "66.0793, 8.46627, -135.686, 0.66", "66.501, 8.44858, -135.909, 0.66", "66.6303, 8.44083, -135.981, 0.66", "67.9015, 8.34301, -136.695, 0.22", "68.811, 8.24835, -137.278, 1.11", "69.4348, 8.16755, -137.7, 1.33", "70.7723, 7.9828, -138.674, 0.22", "71.7102, 7.86996, -139.41, 1.25", "72.0912, 7.83481, -139.771, 1.33", "73.8351, 7.6996, -141.657, 0.22", "74.0452, 7.68767, -141.903, 0.44", "74.1362, 7.68588, -142.02, 0.44", "74.8457, 7.70319, -143.039, 1.18", "76.4839, 7.84534, -145.559, 0.22", "76.8584, 7.89946, -146.169, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.937, -30.4012, -51.9704, 1.55", "-11.8149, -31.3813, -54.1878, 1.55", "-12.6178, -32.0643, -56.0502, 0.22", "-12.9599, -32.3776, -56.8284, 0.22", "-13.5249, -32.9402, -58.2863, 2.36", "-13.956, -33.4074, -59.6657, 2.87", "-15.7792, -35.1652, -65.8352, 0.81", "-15.7957, -35.1772, -65.8988, 0.81", "-16.1311, -35.3993, -67.5522, 0.81", "-16.5285, -35.7195, -70.7565, 2.06", "-16.6921, -35.9979, -74.1193, 1.25", "-16.661, -36.2362, -76.5703, 0.81", "-16.3846, -36.8717, -81.1322, 0.96", "-16.3695, -37.0072, -82.0842, 1.47", "-16.4038, -37.2901, -84.0933, 0.22", "-16.426, -37.436, -84.9212, 0.22", "-16.5013, -37.8226, -87.201, 1.4", "-16.5883, -38.2791, -89.8225, 1.03", "-16.7281, -38.7048, -92.1434, 1.69", "-16.9163, -39.2031, -94.8812, 1.4", "-17.0573, -39.6858, -97.614, 1.4", "-17.1292, -40.5519, -102.564, 1.84", "-16.9792, -41.2206, -106.287, 0.15", "-16.8465, -41.4893, -107.58, 1.84", "-16.7709, -41.6057, -108.048, 1.84", "-16.2173, -42.4751, -110.89, 0.22", "-15.983, -42.824, -111.984, 1.55", "-15.8768, -42.9275, -112.34, 1.77", "-15.298, -43.2368, -114.177, 0.22", "-15.1163, -43.2931, -114.747, 0.22", "-14.6727, -43.3868, -116.077, 1.77", "-12.6199, -43.619, -122.001, 1.25", "-11.7115, -43.6583, -124.522, 0.81", "-11.0621, -43.6705, -126.273, 0.15", "-10.7722, -43.6641, -127.035, 0.37", "-10.2484, -43.6695, -128.288, 0.22", "-9.48792, -43.6842, -129.836, 1.77", "-9.24312, -43.7059, -130.233, 1.84", "-7.33046, -43.9243, -133.289, 0.96", "-6.68329, -44.0023, -134.285, 1.4", "-5.44641, -44.0731, -136.228, 0.22", "-5.19104, -44.0637, -136.618, 0.22", "-5.09337, -44.0499, -136.747, 0.22", "-4.33541, -43.884, -137.6, 0.22", "-3.86782, -43.7566, -137.952, 1.18", "-3.80388, -43.7407, -137.991, 1.18", "-3.25921, -43.6007, -138.278, 1.18", "-1.6763, -43.2948, -139.108, 0.29", "-1.00105, -43.1807, -139.477, 0.44", "-0.452038, -43.0849, -139.778, 0.44", "0.430455, -42.9261, -140.245, 0.22", "1.46995, -42.7351, -140.775, 1.47", "2.00684, -42.6416, -141.036, 1.62", "3.52206, -42.3834, -141.699, 0.22", "4.31311, -42.2467, -142.074, 0.22", "4.755, -42.1946, -142.307, 0.59", "4.8126, -42.1983, -142.34, 0.59", "5.07779, -42.2979, -142.557, 0.59", "5.17734, -42.386, -142.738, 0.59", "5.49157, -42.9037, -143.685, 0.15", "5.63331, -43.1999, -144.212, 1.18", "5.78318, -43.554, -144.852, 1.18", "6.13251, -44.5018, -146.591, 0.44", "6.52142, -45.8808, -149.06, 0.22", "6.56219, -46.1852, -149.61, 0.22", "6.53076, -46.3806, -150.033, 0.74", "6.50035, -46.4277, -150.154, 0.74", "5.90834, -46.9202, -151.669, 0.22", "5.62329, -47.1044, -152.262, 0.22", "4.52348, -47.6696, -154.237, 1.47", "3.10863, -48.2519, -156.538, 1.33", "1.57594, -48.8129, -158.926, 0.59", "0.50219, -49.1572, -160.523, 0.44", "0.135032, -49.2502, -161.028, 0.44", "-0.813392, -49.452, -162.297, 0.22", "-1.40393, -49.5714, -162.991, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.937, -30.4012, -51.9704, 2.87", "-11.6866, -30.5991, -52.3482, 2.87", "-13.0197, -30.96, -52.917, 2.73", "-15.3077, -31.579, -53.7973, 0.29", "-15.6039, -31.6585, -53.9258, 0.29", "-17.3176, -32.1043, -54.6819, 0.29", "-19.035, -32.5057, -55.4496, 1.55", "-19.8369, -32.6505, -55.7772, 2.21", "-20.2001, -32.6984, -55.9368, 2.21", "-22.6388, -32.9629, -57.1956, 0.22", "-23.4513, -33.043, -57.7092, 0.22", "-24.1568, -33.1038, -58.24, 0.66", "-24.4319, -33.1113, -58.4609, 0.81", "-26.0644, -33.0908, -59.7505, 0.22", "-26.7204, -33.0704, -60.2275, 0.22", "-27.9071, -33.0295, -61.0168, 1.84", "-28.516, -33.0214, -61.4285, 2.21", "-29.489, -33.0651, -62.1632, 2.06", "-31.0702, -33.2097, -63.489, 0.29", "-31.7258, -33.3265, -64.1297, 0.29", "-33.0136, -33.6614, -65.5774, 1.69", "-33.5335, -33.8448, -66.2256, 1.99", "-35.2931, -34.6189, -68.6095, 1.11", "-36.0245, -35.0562, -69.7051, 1.11", "-37.1116, -35.9495, -71.5745, 0.29", "-37.447, -36.2974, -72.2206, 0.29", "-37.5397, -36.4265, -72.43, 0.52", "-37.7658, -36.8296, -72.9969, 0.52", "-37.9401, -37.3812, -73.6804, 0.22", "-37.9999, -37.7589, -74.1421, 0.22", "-38.0033, -37.8086, -74.2014, 0.22", "-38.078, -40.0849, -76.8182, 2.06", "-38.1054, -40.6948, -77.4957, 2.36", "-38.3003, -42.6009, -79.6146, 0.22", "-38.3616, -43.0521, -80.1463, 0.22", "-38.4428, -43.58, -80.7437, 0.22", "-38.5902, -44.5972, -81.8102, 1.33", "-38.6878, -45.3227, -82.575, 1.47", "-38.9273, -46.7493, -84.1803, 0.22", "-39.2919, -48.1326, -86.1081, 0.22", "-39.4739, -48.7569, -87.0577, 1.4", "-39.5587, -49.054, -87.544, 1.69", "-40.0298, -51.0474, -90.9097, 0.22", "-40.1723, -51.8713, -92.3894, 1.92", "-40.4433, -53.8674, -96.4621, 0.29", "-40.4907, -54.2828, -97.4404, 0.29", "-40.4934, -54.3444, -97.5949, 0.29", "-40.4986, -54.8167, -98.7044, 0.74", "-40.4521, -55.7048, -100.579, 1.55", "-40.2171, -57.894, -104.814, 1.47", "-39.905, -59.9698, -108.422, 0.29", "-39.8302, -60.5116, -109.351, 0.29", "-39.7151, -61.5088, -110.954, 1.4", "-39.5566, -63.2571, -113.506, 1.69", "-39.5051, -63.6871, -114.044, 1.69", "-39.0012, -66.227, -116.767, 0.22", "-38.9732, -66.3376, -116.888, 0.22", "-38.8305, -66.8105, -117.441, 0.22", "-38.582, -67.5237, -118.323, 1.47", "-37.936, -69.3719, -120.558, 0.22", "-37.7656, -69.8406, -121.118, 1.4", "-37.1601, -71.3408, -123.06, 1.4", "-36.6517, -72.5245, -124.695, 0.22", "-36.0844, -73.7542, -126.726, 1.62", "-36.0671, -73.7904, -126.793, 1.62", "-35.923, -74.1491, -127.512, 1.62", "-35.4066, -75.8521, -131.151, 0.15", "-35.3338, -76.2011, -131.945, 1.4", "-35.2263, -77.8763, -136.311, 1.11", "-35.2286, -77.9005, -136.373, 1.11", "-35.4411, -78.747, -138.397, 0.37", "-35.6051, -79.1116, -139.176, 0.74", "-35.7488, -79.3418, -139.581, 0.88", "-36.7429, -80.8657, -141.921, 0.22", "-37.1958, -81.6256, -142.709, 1.33", "-37.5401, -82.4211, -143.328, 1.11", "-37.8814, -83.4447, -143.997, 0.22", "-37.8986, -83.5103, -144.035, 0.22", "-38.1415, -84.692, -144.577, 0.22", "-38.3379, -85.9846, -144.796, 0.22", "-38.4837, -87.9317, -145.002, 1.84" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "4.58378, 60.834, -52.0959, 0.22", "3.90569, 63.2148, -52.3148, 0.22", "3.85862, 63.3961, -52.3296, 0.22", "3.55286, 64.8141, -52.5247, 0.22", "3.41145, 65.9022, -52.7973, 0.66", "3.40237, 66.0686, -52.8496, 0.66", "3.41314, 66.6363, -53.0919, 0.66", "3.42874, 66.7164, -53.1379, 0.66", "3.69785, 67.6623, -53.7678, 0.22", "4.19774, 68.8426, -54.6763, 0.88", "4.4095, 69.2426, -54.9925, 0.88", "5.16157, 70.4736, -55.9437, 0.29", "5.23456, 70.5776, -56.0079, 0.29", "5.85178, 71.4334, -56.3773, 0.29", "6.76482, 72.6953, -56.6532, 1.03", "7.17234, 73.2715, -56.6969, 1.25", "8.1971, 74.7851, -56.6922, 0.37", "9.55109, 76.7747, -56.5592, 0.22", "10.6537, 78.4309, -56.4016, 0.22", "11.5604, 79.8478, -56.1948, 0.81", "12.289, 81.0659, -55.9287, 0.22", "12.6172, 81.6625, -55.7731, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.58378, 60.834, -52.0959, 0.81", "5.34599, 61.9276, -53.0867, 0.81", "5.81203, 62.4573, -53.6196, 0.22", "6.20797, 62.8675, -54.0257, 0.22", "6.63277, 63.3008, -54.4336, 1.18", "6.9653, 63.6259, -54.7181, 1.18", "7.00311, 63.6624, -54.7505, 1.18", "7.84719, 64.4545, -55.3544, 0.29", "8.25712, 64.7996, -55.6277, 0.44", "8.43155, 64.9667, -55.8467, 0.44", "8.82544, 65.4455, -56.5789, 0.22", "9.04716, 65.7843, -57.1197, 1.18", "9.08299, 65.9774, -57.533, 1.47", "9.04905, 66.1105, -57.8749, 1.47", "8.44842, 67.351, -61.1089, 0.52", "8.30652, 67.5457, -61.6648, 0.81", "8.19559, 67.6642, -62.0243, 0.81", "6.64688, 69.0204, -66.4456, 1.11", "5.52744, 69.7865, -69.1834, 0.59", "4.98911, 70.0658, -70.296, 0.29", "4.1013, 70.3566, -71.7488, 0.74", "4.05972, 70.3627, -71.8046, 0.74", "3.55282, 70.3198, -72.2673, 0.81", "2.46236, 69.8592, -72.5387, 0.29", "1.68776, 69.43, -72.5786, 0.29", "0.561346, 68.7375, -72.5664, 0.29", "-0.581534, 68.0284, -72.4641, 0.29", "-1.78904, 67.2769, -72.3481, 0.22", "-2.54081, 66.81, -72.2647, 0.59", "-2.75311, 66.664, -72.2331, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.6958, 62.3684, -23.0498, 0.22", "-3.06324, 63.5745, -22.2043, 0.22", "-3.39442, 63.8578, -22.0365, 0.66", "-4.02511, 64.394, -21.7558, 0.22", "-4.66487, 64.9295, -21.495, 1.4", "-5.00849, 65.2035, -21.3555, 1.4", "-6.35911, 66.2692, -20.8127, 0.22", "-7.10401, 66.8235, -20.571, 0.22", "-8.19632, 67.6191, -20.2487, 1.47", "-8.42464, 67.7877, -20.1878, 1.84", "-9.92927, 68.9298, -19.8419, 0.22", "-10.1772, 69.122, -19.7912, 0.52", "-10.9871, 69.7808, -19.6787, 0.15", "-11.4747, 70.199, -19.6285, 0.88", "-12.0543, 70.7297, -19.6039, 0.22", "-12.8126, 71.4703, -19.6147, 1.84", "-13.0755, 71.7405, -19.6398, 1.99", "-14.278, 72.9786, -19.763, 0.22", "-14.6383, 73.3594, -19.8025, 1.11", "-14.9453, 73.6856, -19.8294, 1.25", "-15.7127, 74.4716, -19.8658, 0.15", "-16.131, 74.8858, -19.8572, 0.44", "-16.297, 75.0452, -19.8441, 0.44", "-16.3481, 75.0931, -19.8364, 0.44", "-17.1842, 75.8573, -19.6532, 0.15", "-17.7322, 76.374, -19.5035, 0.15", "-17.7681, 76.4101, -19.4914, 0.15", "-18.038, 76.7015, -19.3995, 0.66", "-18.3741, 77.0897, -19.2997, 0.81", "-19.0596, 77.921, -19.1369, 0.15", "-19.3211, 78.2556, -19.0941, 0.15", "-19.9061, 79.0457, -19.0294, 1.47", "-20.1801, 79.4297, -19.0081, 1.47", "-20.6873, 80.1612, -18.9842, 0.22", "-20.9091, 80.496, -18.9973, 0.52", "-21.0083, 80.6517, -19.0162, 0.52", "-21.4053, 81.2797, -19.1198, 0.15", "-21.8666, 82.0102, -19.3126, 1.33", "-22.0336, 82.2722, -19.3943, 1.69", "-22.5537, 83.0746, -19.6961, 0.22", "-22.8142, 83.4807, -19.8571, 0.59", "-23.0352, 83.8248, -20.0032, 0.59", "-23.432, 84.4295, -20.2929, 0.15", "-24.0751, 85.3899, -20.8084, 1.33", "-24.3428, 85.7877, -21.0269, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.6958, 62.3684, -23.0498, 0.29", "-2.84722, 63.3597, -24.3531, 0.29", "-3.29837, 63.7413, -24.8267, 0.52", "-4.00821, 64.3371, -25.5079, 0.74", "-4.29434, 64.5741, -25.759, 0.88", "-5.06727, 65.2261, -26.3942, 0.15", "-5.35716, 65.4835, -26.6198, 0.15", "-5.74367, 65.865, -26.8698, 1.33", "-6.12876, 66.2735, -27.0857, 1.77", "-6.88149, 67.0962, -27.432, 0.22", "-7.19566, 67.4538, -27.5542, 0.22", "-7.6091, 67.983, -27.6868, 0.88", "-7.79513, 68.2522, -27.7499, 0.88", "-8.23021, 68.9601, -27.9022, 0.15", "-8.49627, 69.5106, -27.979, 0.15", "-8.65273, 69.9659, -28.0066, 0.15", "-8.8775, 70.8894, -28.0315, 2.14", "-8.923, 71.2114, -28.0293, 2.14", "-8.92497, 71.2737, -28.0269, 2.14", "-8.8052, 72.6051, -27.9279, 0.15", "-8.71119, 73.029, -27.8912, 0.15", "-8.59561, 73.3881, -27.8741, 0.15", "-8.44638, 73.7622, -27.8687, 0.66", "-8.25031, 74.2043, -27.8946, 0.81", "-8.21098, 74.2816, -27.9058, 0.81", "-7.84141, 74.8628, -28.1344, 0.15", "-7.47875, 75.4477, -28.4137, 0.88", "-7.45317, 75.4887, -28.4393, 0.88", "-7.32814, 75.7009, -28.5831, 0.88", "-7.27827, 75.7958, -28.6469, 0.88", "-6.89263, 76.664, -29.1807, 0.15", "-6.77566, 76.9898, -29.3721, 0.15", "-6.57501, 77.6716, -29.753, 1.11", "-6.46348, 78.1783, -30.0278, 1.11", "-6.23559, 79.6389, -30.7865, 0.22", "-6.18965, 80.1303, -31.0631, 0.22", "-6.16776, 80.8786, -31.4981, 1.47", "-6.1845, 81.4258, -31.8269, 1.69", "-6.36549, 82.8922, -33.0075, 0.15", "-6.45363, 83.2625, -33.3965, 0.88", "-6.81855, 84.2798, -34.671, 0.22", "-6.89386, 84.4581, -34.9231, 1.55", "-7.06084, 84.8043, -35.4423, 1.84", "-8.00623, 86.5676, -38.1993, 0.59", "-8.31609, 87.0591, -39.0024, 0.22", "-8.45304, 87.2712, -39.3299, 0.74", "-8.89385, 87.9307, -40.2224, 0.15", "-9.17055, 88.3418, -40.7159, 0.15", "-9.38626, 88.6483, -41.0278, 0.81", "-9.59526, 88.9092, -41.227, 0.81", "-10.175, 89.5544, -41.8817, 0.15", "-10.4289, 89.8103, -42.2684, 0.96", "-10.6687, 90.0315, -42.6727, 0.96", "-11.3451, 90.6186, -43.8774, 0.22", "-11.7128, 90.933, -44.543, 1.4", "-12.5068, 91.6156, -46.0157, 1.69", "-13.4246, 92.4236, -47.7228, 0.74", "-13.7921, 92.7581, -48.4025, 0.22", "-13.9815, 92.9364, -48.7263, 0.59", "-14.3, 93.2469, -49.1383, 0.22", "-14.334, 93.2825, -49.1619, 0.22", "-14.7412, 93.7306, -49.2245, 0.22", "-14.9986, 94.0351, -49.1922, 0.52", "-15.5264, 94.7683, -49.077, 0.15", "-16.0457, 95.6085, -48.9086, 1.84", "-16.7183, 96.8246, -48.6244, 0.15", "-16.8998, 97.1769, -48.5251, 0.29", "-16.9493, 97.2903, -48.4901, 0.29", "-17.1874, 97.9565, -48.2712, 0.15", "-17.3528, 98.5398, -48.075, 0.74", "-17.3972, 98.7358, -48.0179, 0.74", "-17.6147, 99.761, -47.7635, 0.22", "-17.8294, 100.679, -47.5495, 0.22", "-18.0182, 101.445, -47.3828, 1.69", "-18.0987, 101.771, -47.3195, 1.69", "-18.2899, 102.678, -47.1767, 0.22", "-18.361, 103.071, -47.1264, 0.37", "-18.4641, 103.815, -47.0655, 0.15", "-18.4868, 103.997, -47.056, 0.37", "-18.563, 104.666, -47.0522, 0.15", "-18.6052, 105.229, -47.0892, 0.74", "-18.6117, 105.344, -47.1039, 0.74", "-18.6211, 105.5, -47.1313, 0.74", "-18.663, 106.289, -47.2877, 0.15", "-18.6997, 106.849, -47.4025, 1.03", "-18.8005, 108.0, -47.6105, 0.15", "-18.9074, 109.014, -47.7753, 1.99", "-18.9719, 109.432, -47.8366, 1.99", "-19.1817, 110.369, -47.9605, 0.22", "-19.3555, 110.968, -48.0332, 0.81", "-19.6495, 111.791, -48.1174, 0.22", "-19.6716, 111.84, -48.1215, 0.22", "-19.9951, 112.48, -48.1875, 0.22", "-20.3142, 113.03, -48.2822, 0.22", "-20.6107, 113.497, -48.4246, 0.22", "-20.9845, 114.108, -48.6815, 0.22", "-21.1992, 114.499, -48.8492, 1.03", "-21.3035, 114.717, -48.9379, 1.03", "-21.7085, 115.787, -49.3255, 0.22", "-22.0299, 116.679, -49.6475, 0.59", "-22.3202, 117.496, -49.9366, 0.22", "-22.6294, 118.448, -50.2682, 2.06", "-22.7449, 118.853, -50.3957, 1.69", "-22.9937, 119.947, -50.6916, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-35.2391, 96.0847, -5.89426, 0.22", "-35.4775, 97.028, -6.18984, 0.22", "-35.6066, 97.499, -6.36686, 0.66", "-35.6997, 97.8348, -6.49742, 0.81", "-35.9959, 98.8349, -6.88638, 0.22", "-36.1971, 99.4512, -7.12276, 0.66", "-36.3618, 99.8619, -7.27825, 0.96", "-36.8154, 100.827, -7.65673, 0.22", "-36.9285, 101.044, -7.73828, 0.22", "-37.0893, 101.345, -7.83764, 0.52", "-37.2626, 101.698, -7.92753, 0.52", "-37.6679, 102.636, -8.11265, 0.22", "-37.9169, 103.307, -8.22714, 0.22", "-38.127, 103.932, -8.2829, 1.77", "-38.2408, 104.327, -8.28152, 2.06", "-38.5482, 105.755, -8.12586, 0.22", "-38.5989, 106.101, -8.06269, 0.59", "-38.6407, 106.592, -7.93442, 0.66", "-38.7395, 107.948, -7.51114, 0.22", "-38.8117, 109.117, -7.1022, 0.22", "-38.8771, 110.305, -6.65575, 1.47", "-38.9013, 110.737, -6.47871, 1.92", "-38.9849, 112.088, -5.95365, 0.22", "-39.0135, 112.519, -5.80195, 0.22", "-39.0517, 113.071, -5.64354, 0.74", "-39.0738, 113.268, -5.60217, 0.74", "-39.2226, 114.139, -5.46093, 0.15", "-39.3797, 114.88, -5.33621, 0.15", "-39.4976, 115.369, -5.25723, 0.96", "-39.5599, 115.616, -5.2139, 1.33", "-39.6182, 115.833, -5.17657, 1.33", "-39.6335, 115.886, -5.16808, 1.33", "-39.9715, 116.882, -5.03707, 0.22", "-40.1088, 117.236, -4.98692, 0.81", "-40.2875, 117.647, -4.9299, 0.81", "-40.5677, 118.26, -4.84608, 0.22", "-40.6692, 118.469, -4.82015, 0.44", "-41.1314, 119.352, -4.7293, 0.22", "-41.2851, 119.615, -4.71005, 0.59", "-41.5108, 119.989, -4.66356, 0.59", "-41.8402, 120.534, -4.57637, 0.15", "-42.2039, 121.134, -4.46404, 0.15", "-42.5054, 121.636, -4.36531, 1.11", "-42.6935, 121.946, -4.30352, 1.62", "-43.344, 122.979, -4.10876, 0.15", "-43.5367, 123.273, -4.05324, 0.59", "-43.6239, 123.401, -4.03084, 0.59", "-43.922, 123.863, -3.9553, 0.22", "-44.1652, 124.259, -3.8998, 0.22", "-44.294, 124.48, -3.87854, 0.59", "-44.4321, 124.736, -3.87078, 0.59", "-44.6558, 125.214, -3.85169, 0.22", "-44.9318, 125.94, -3.8167, 0.22", "-44.9318, 125.94, -3.8167, 0.66", "-44.9868, 126.319, -3.79873, 0.66", "-45.0495, 126.979, -3.77091, 0.22", "-45.078, 127.487, -3.75218, 1.4", "-45.087, 127.794, -3.74263, 1.77", "-45.1118, 129.276, -3.70532, 0.22", "-45.117, 129.744, -3.69386, 0.96", "-45.1201, 130.147, -3.68435, 0.96", "-45.1283, 130.857, -3.66916, 0.22", "-45.1536, 131.782, -3.64927, 0.22", "-45.1811, 132.436, -3.63441, 0.88", "-45.199, 132.792, -3.62491, 1.25", "-45.2253, 133.41, -3.604, 0.22", "-45.2294, 133.514, -3.59811, 0.22", "-45.2269, 133.897, -3.5488, 0.22", "-45.2032, 134.212, -3.48693, 0.22", "-45.1016, 134.952, -3.28517, 0.22", "-45.0475, 135.255, -3.19047, 0.81", "-44.9549, 135.674, -3.01174, 0.81", "-44.7477, 136.533, -2.58944, 0.15", "-44.5839, 137.139, -2.25696, 0.15", "-44.327, 138.049, -1.71302, 1.4", "-44.2655, 138.274, -1.57105, 1.84", "-43.9565, 139.475, -0.80796, 0.22", "-43.9465, 139.516, -0.782372, 0.22", "-43.9127, 139.669, -0.68588, 0.22", "-43.9046, 139.71, -0.661045, 0.22", "-43.8203, 140.228, -0.381806, 0.22", "-43.7119, 140.897, -0.0696221, 0.88", "-43.701, 140.948, -0.0488871, 0.88", "-43.6445, 141.151, 0.0377435, 1.03", "-43.3574, 142.06, 0.431444, 0.22", "-43.0194, 143.017, 0.84708, 1.55", "-42.865, 143.416, 1.03694, 1.92", "-42.4183, 144.54, 1.58884, 0.22", "-42.2966, 144.845, 1.74261, 0.22", "-42.1912, 145.101, 1.87606, 0.52", "-42.0913, 145.309, 1.99544, 0.52", "-41.7219, 146.027, 2.41754, 0.22", "-41.6219, 146.223, 2.54953, 0.59", "-41.5277, 146.409, 2.69035, 0.59", "-41.4961, 146.472, 2.73656, 0.59", "-41.2042, 147.009, 3.11829, 0.22", "-41.1858, 147.047, 3.142, 0.22", "-40.9193, 147.65, 3.46008, 0.22", "-40.9068, 147.687, 3.47659, 0.22", "-40.7389, 148.352, 3.7186, 0.88", "-40.6742, 148.706, 3.8208, 1.47", "-40.573, 149.657, 4.04163, 0.22", "-40.5707, 149.698, 4.05001, 0.22", "-40.55, 150.556, 4.19382, 0.22", "-40.5174, 151.301, 4.30409, 0.88", "-40.4985, 151.565, 4.33642, 1.33", "-40.411, 152.373, 4.42019, 0.15", "-40.3681, 152.677, 4.44275, 0.15", "-40.2446, 153.47, 4.50288, 0.15", "-40.0264, 154.663, 4.59208, 1.77", "-39.7861, 155.812, 4.67226, 0.22", "-39.6544, 156.389, 4.7036, 0.22", "-39.5587, 156.752, 4.7117, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-35.2391, 96.0847, -5.89426, 0.22", "-36.1859, 97.5537, -7.28846, 0.22", "-36.2051, 97.6023, -7.34169, 0.22", "-36.3268, 98.0835, -7.85566, 0.22", "-36.4469, 98.7196, -8.52832, 1.11", "-36.5382, 99.2987, -9.16492, 1.92", "-36.606, 99.7348, -9.6295, 2.14", "-36.8172, 101.934, -11.7318, 0.22", "-36.8381, 102.396, -12.2781, 0.22", "-36.8378, 102.449, -12.3442, 0.22", "-36.7997, 103.259, -13.3847, 0.22", "-36.7398, 103.719, -13.9415, 0.88", "-36.6741, 104.173, -14.4592, 0.88", "-36.3213, 106.74, -17.0946, 1.25", "-36.2143, 107.675, -18.004, 1.62", "-36.2065, 107.737, -18.0604, 1.62", "-35.9974, 109.088, -19.1849, 0.29", "-35.9328, 109.499, -19.505, 0.66", "-35.9246, 109.561, -19.5444, 0.66", "-35.8901, 110.091, -19.8819, 0.66", "-35.8871, 110.15, -19.9259, 0.66", "-35.8145, 111.331, -20.9045, 0.22", "-35.766, 112.595, -22.1079, 2.14", "-35.7537, 113.039, -22.546, 2.8", "-35.6983, 115.916, -25.4417, 0.37", "-35.6802, 117.008, -26.5572, 0.37", "-35.6627, 118.662, -28.232, 0.96", "-35.627, 120.26, -29.8106, 0.22", "-35.6, 120.916, -30.4429, 1.11", "-35.5964, 120.971, -30.4921, 1.11", "-35.5695, 121.283, -30.7111, 1.11", "-35.457, 122.39, -31.395, 0.15", "-35.3688, 123.436, -31.9003, 0.15", "-35.2863, 124.312, -32.2791, 0.15", "-35.2053, 125.557, -32.8367, 1.99", "-35.1992, 126.338, -33.1842, 2.21", "-35.2726, 127.567, -33.6932, 0.74", "-35.4438, 128.79, -34.137, 0.29", "-35.4584, 128.859, -34.1579, 0.29", "-35.6009, 129.444, -34.3179, 0.52", "-35.7267, 129.95, -34.4547, 0.52", "-35.8913, 130.68, -34.6714, 0.29", "-35.9783, 131.14, -34.8319, 0.74", "-36.0573, 131.888, -35.2209, 0.96", "-36.125, 133.176, -36.0047, 0.22", "-36.1378, 134.257, -36.7302, 1.55", "-36.1405, 134.828, -37.1303, 1.99", "-36.1891, 135.7, -37.879, 1.99", "-36.4125, 137.332, -39.4602, 0.37", "-36.5017, 137.558, -39.8876, 0.37", "-36.6275, 137.745, -40.3759, 0.37", "-36.8531, 137.972, -41.1079, 0.37", "-37.6932, 138.587, -43.457, 1.92", "-37.9575, 138.731, -44.0981, 2.43", "-41.3866, 140.189, -51.4958, 0.37", "-41.6844, 140.3, -52.1161, 0.44", "-42.0683, 140.431, -52.8791, 0.29", "-42.3988, 140.538, -53.496, 0.29", "-42.7064, 140.649, -53.9876, 0.66", "-42.943, 140.743, -54.339, 0.88", "-43.7419, 141.037, -55.4665, 0.66", "-44.1558, 141.164, -56.2053, 0.22", "-44.5267, 141.235, -56.9917, 1.55", "-44.9906, 141.318, -58.0423, 2.36", "-46.1681, 141.495, -60.8623, 2.36", "-47.8123, 141.679, -64.9867, 0.88", "-48.3107, 141.713, -66.2994, 0.52", "-49.2669, 141.719, -69.0742, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "7.744, -45.3222, 4.82084, 0.37", "9.22758, -45.989, 4.00975, 0.37", "9.99851, -46.4143, 3.60452, 0.29", "10.9294, -47.0, 3.18307, 0.66", "11.791, -47.5714, 2.82881, 1.33", "12.3419, -47.9449, 2.61578, 1.62", "12.9557, -48.3647, 2.38702, 1.62", "13.8445, -49.0872, 2.08285, 0.59", "14.6889, -49.8559, 1.80102, 0.37", "15.1208, -50.3001, 1.6268, 0.74", "15.4127, -50.6501, 1.45836, 0.74", "15.4488, -50.7007, 1.42849, 0.74", "15.7936, -51.3083, 1.0185, 0.29", "16.2424, -52.2535, 0.408009, 0.29", "16.6646, -53.1773, -0.0613489, 1.92", "17.162, -54.2253, -0.464721, 3.09", "17.3218, -54.5293, -0.544884, 3.61", "17.8578, -55.4286, -0.675839, 3.32", "18.8648, -56.9561, -0.728952, 0.88", "19.9234, -58.3286, -0.564328, 0.44", "20.514, -59.0065, -0.414113, 0.44", "21.3103, -59.8384, -0.166023, 1.18", "22.0374, -60.5119, 0.056181, 1.69", "22.5315, -60.884, 0.197682, 1.69", "24.3231, -61.9438, 0.596103, 0.44", "25.0212, -62.3009, 0.701342, 0.66", "25.0829, -62.3304, 0.71125, 0.66", "25.7235, -62.6366, 0.803741, 0.66", "26.6603, -63.1514, 1.01479, 0.29", "26.9917, -63.4234, 1.16614, 0.29", "27.2145, -64.0768, 1.5993, 0.29", "27.3481, -64.8668, 2.16458, 0.81", "27.4043, -65.2563, 2.4339, 1.03", "27.6506, -66.4136, 3.25196, 0.37", "27.8122, -66.9631, 3.61287, 0.37", "27.8654, -67.0747, 3.69196, 0.37", "28.3851, -67.8522, 4.25403, 0.52", "28.817, -68.3771, 4.6236, 0.88", "29.8332, -69.4188, 5.39806, 0.37", "30.5752, -70.1274, 5.87441, 0.29", "31.7294, -71.2209, 6.53775, 1.77", "32.2683, -71.7521, 6.87155, 2.58", "32.3407, -71.8278, 6.92395, 2.58", "33.2587, -72.8727, 7.77171, 2.58", "34.0937, -73.9085, 8.65543, 0.37", "34.91, -74.9437, 9.58066, 0.37", "35.682, -75.9532, 10.4425, 0.66", "36.3052, -76.7583, 11.1237, 0.74", "37.112, -77.7595, 11.8976, 0.29", "37.5223, -78.2315, 12.2392, 0.29", "37.79, -78.4951, 12.4149, 1.11", "38.1176, -78.7886, 12.5595, 1.33", "38.7794, -79.3358, 12.7306, 0.88", "39.8149, -80.1482, 12.9402, 0.29", "40.8986, -80.949, 13.1185, 0.29", "41.9368, -81.6839, 13.3021, 2.65", "41.9916, -81.7226, 13.3152, 2.65", "42.656, -82.1895, 13.5349, 3.09", "43.8221, -83.0237, 14.1845, 0.37", "44.6946, -83.6834, 14.7902, 0.15", "45.2339, -84.1145, 15.204, 0.15", "46.2089, -84.9261, 16.0258, 2.14", "47.0199, -85.6578, 16.7887, 2.58", "49.1209, -87.7579, 18.9369, 0.44", "49.5416, -88.2278, 19.4436, 0.88", "49.6822, -88.3985, 19.6366, 0.88", "49.7171, -88.4448, 19.689, 0.88", "50.4428, -89.5128, 20.817, 0.22", "50.8764, -90.2029, 21.4927, 0.22", "51.4022, -91.0967, 22.307, 1.55", "52.0961, -92.2603, 23.3741, 2.14", "52.8744, -93.6349, 24.5842, 0.15", "53.1128, -94.0942, 24.9691, 0.81", "53.586, -95.0587, 25.7266, 0.15", "53.8846, -95.7049, 26.2181, 1.55", "54.016, -96.0042, 26.4283, 1.77", "54.6131, -97.4656, 27.4093, 0.15", "55.2585, -99.0273, 28.5731, 0.15", "55.388, -99.3155, 28.8423, 0.52", "55.8183, -100.264, 29.8643, 0.22", "56.2041, -101.088, 30.8711, 0.74", "56.297, -101.276, 31.1234, 0.74", "56.83, -102.243, 32.6333, 0.59", "57.4589, -103.318, 34.6043, 0.22", "57.5484, -103.473, 34.9218, 0.52", "57.7309, -103.779, 35.6746, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.744, -45.3222, 4.82084, 0.88", "7.28603, -46.3882, 5.32314, 0.88", "7.00233, -47.056, 5.639, 0.37", "6.70323, -47.7868, 5.9977, 0.37", "6.2473, -48.8771, 6.51988, 0.37", "6.00632, -49.4797, 6.79047, 1.47", "5.71278, -50.21, 7.03348, 2.14", "5.58898, -50.5214, 7.11599, 2.14", "5.28427, -51.3999, 7.23615, 1.03", "5.05768, -52.1677, 7.10903, 0.44", "4.85188, -52.946, 6.83109, 0.37", "4.4564, -54.4574, 6.13439, 1.77", "4.33765, -54.865, 5.92919, 2.14", "4.09887, -55.5802, 5.57371, 2.21", "3.25847, -57.8383, 4.5091, 0.29", "2.99024, -58.5073, 4.23361, 0.29", "2.54008, -59.485, 3.91335, 0.29", "2.08609, -60.3883, 3.72625, 0.29", "1.55273, -61.3535, 3.57936, 0.29", "1.02547, -62.2104, 3.54588, 0.88", "0.764397, -62.6006, 3.60694, 1.62", "0.138057, -63.4845, 3.76857, 1.99", "-0.0359569, -63.7483, 3.82698, 1.99" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.1338, -98.7465, 20.7308, 0.29", "-21.84, -100.394, 19.1293, 0.29", "-21.7636, -100.795, 18.76, 0.44", "-21.4616, -102.222, 17.5849, 0.22", "-21.1759, -103.414, 16.7708, 0.22", "-21.1589, -103.48, 16.7311, 0.22", "-21.0725, -103.803, 16.5525, 0.66", "-20.9284, -104.288, 16.3604, 0.66", "-20.5102, -105.448, 15.9685, 0.22", "-20.0169, -106.636, 15.6385, 1.4", "-19.8125, -107.129, 15.5003, 1.84", "-19.7878, -107.19, 15.483, 1.84", "-19.2242, -108.634, 15.0708, 0.29", "-18.748, -110.037, 14.7189, 0.29", "-18.4713, -111.096, 14.4896, 0.29", "-18.2763, -112.256, 14.2794, 1.69", "-18.2206, -112.896, 14.2134, 2.28", "-18.2196, -113.41, 14.1903, 2.5", "-18.3653, -115.204, 14.3105, 0.29", "-18.5384, -116.451, 14.484, 0.29", "-18.7354, -117.692, 14.6958, 0.29", "-18.9556, -119.105, 14.9613, 2.06", "-19.1018, -120.133, 15.1592, 2.65", "-19.3513, -122.343, 15.5677, 0.29", "-19.4322, -123.419, 15.7553, 0.22", "-19.4668, -124.273, 15.9014, 0.22", "-19.4786, -124.961, 16.0035, 0.88", "-19.4775, -125.456, 16.0605, 1.18", "-19.4632, -125.864, 16.0979, 1.18", "-19.3765, -127.057, 16.1467, 0.22", "-19.309, -127.628, 16.173, 0.22", "-19.2086, -128.306, 16.2288, 0.22", "-19.1034, -128.902, 16.2787, 1.25", "-18.9504, -129.475, 16.3294, 1.25", "-18.4399, -131.069, 16.4452, 0.22", "-18.0794, -131.916, 16.4517, 0.22", "-17.4709, -133.089, 16.3605, 1.11", "-17.1656, -133.602, 16.2816, 1.55", "-16.1586, -135.142, 15.9326, 0.22", "-15.4733, -136.054, 15.6121, 0.22", "-14.4179, -137.234, 14.9621, 0.22", "-13.7122, -137.932, 14.4669, 1.69", "-13.445, -138.16, 14.2431, 1.99", "-13.394, -138.197, 14.1963, 1.99", "-12.3942, -138.825, 13.0096, 0.29", "-11.5729, -139.272, 11.9316, 0.29", "-11.5301, -139.295, 11.868, 0.29", "-10.7659, -139.69, 10.7011, 1.4", "-10.3747, -139.882, 10.0759, 1.62", "-9.0876, -140.483, 7.88703, 0.22", "-9.05218, -140.497, 7.81787, 0.22", "-8.58759, -140.641, 6.77452, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.1338, -98.7465, 20.7308, 0.29", "-22.2133, -100.142, 20.8122, 0.29", "-22.2634, -101.053, 20.8614, 0.29", "-22.2877, -101.462, 20.88, 0.74", "-22.345, -102.198, 20.9061, 0.81", "-22.3854, -102.661, 20.9186, 1.11", "-22.4486, -103.323, 20.9291, 0.44", "-22.5154, -103.885, 20.9208, 0.29", "-22.5995, -104.569, 20.905, 0.29", "-22.7152, -105.537, 20.8708, 2.21", "-22.769, -105.983, 20.8407, 2.73", "-22.9072, -107.216, 20.7123, 0.29", "-22.9579, -107.69, 20.6436, 0.29", "-23.0019, -108.215, 20.5516, 0.81", "-23.0078, -108.321, 20.5293, 0.96", "-23.0133, -109.032, 20.365, 0.22", "-22.9996, -109.655, 20.2205, 0.22", "-22.9772, -110.044, 20.1324, 1.33", "-22.956, -110.383, 20.0795, 1.62", "-22.9538, -110.437, 20.0749, 1.62", "-22.9305, -111.207, 20.0618, 0.29", "-22.9065, -111.765, 20.0803, 0.22", "-22.8742, -112.283, 20.1083, 0.22", "-22.8297, -112.851, 20.1444, 1.11", "-22.7917, -113.298, 20.1764, 1.47", "-22.7156, -114.099, 20.2831, 0.22", "-22.6632, -114.649, 20.4022, 0.22", "-22.6075, -115.212, 20.5564, 0.74", "-22.5998, -115.368, 20.6104, 0.74", "-22.5998, -115.411, 20.6284, 0.74", "-22.6762, -116.701, 21.2857, 0.22", "-22.7547, -117.42, 21.6937, 1.99", "-22.7906, -117.665, 21.8395, 1.99", "-22.958, -118.706, 22.5206, 0.22", "-23.1293, -119.748, 23.2363, 0.22", "-23.2618, -120.489, 23.7612, 1.84", "-23.2889, -120.626, 23.8601, 1.99", "-23.3067, -120.718, 23.9291, 1.99", "-23.5496, -122.053, 24.9705, 0.22", "-23.6056, -122.434, 25.2793, 0.96", "-23.6936, -123.035, 25.7861, 0.22", "-23.7237, -123.295, 26.0058, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-38.4837, -87.9317, -145.002, 0.29", "-37.6415, -89.4783, -145.076, 0.29", "-36.7396, -91.1901, -145.193, 0.22", "-36.4475, -91.8103, -145.239, 0.52", "-36.2353, -92.3603, -145.294, 0.52", "-35.8233, -93.6359, -145.431, 0.22", "-35.5043, -94.7156, -145.551, 0.22", "-35.3137, -95.6352, -145.675, 0.81", "-35.1609, -96.5073, -145.799, 1.11", "-34.9319, -98.0696, -145.988, 0.22", "-34.8236, -99.0229, -146.086, 0.22", "-34.7439, -100.103, -146.177, 0.22", "-34.7132, -100.9, -146.256, 1.11", "-34.6467, -102.537, -146.431, 0.22", "-34.5217, -104.519, -146.651, 0.22", "-34.4161, -105.664, -146.777, 1.33", "-34.3572, -106.081, -146.839, 1.47", "-33.9564, -108.366, -147.25, 0.22", "-33.6975, -109.354, -147.477, 1.11", "-33.4514, -110.04, -147.676, 1.47", "-33.1636, -110.677, -147.892, 1.47", "-32.1403, -112.53, -148.585, 0.15", "-32.0966, -112.595, -148.612, 0.15", "-31.1272, -113.628, -149.121, 0.88", "-31.0722, -113.682, -149.153, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-38.4837, -87.9317, -145.002, 1.69", "-39.7258, -89.1456, -145.291, 1.69", "-41.074, -90.1057, -145.698, 0.22", "-41.1417, -90.1474, -145.719, 0.22", "-42.4262, -90.8942, -146.122, 0.22", "-43.4872, -91.4924, -146.518, 0.88", "-44.4531, -92.0268, -146.909, 1.11", "-46.0992, -92.7456, -147.617, 0.22", "-46.7687, -92.984, -147.905, 0.52", "-46.9886, -93.0435, -148.002, 0.52", "-48.593, -93.2641, -148.813, 0.37", "-48.6647, -93.2718, -148.851, 0.29", "-49.3999, -93.3621, -149.193, 0.22", "-49.7817, -93.4221, -149.359, 0.37", "-50.6039, -93.5628, -149.769, 0.37", "-51.9168, -93.9668, -150.762, 0.29", "-52.8588, -94.4178, -151.636, 0.29", "-53.6018, -94.8774, -152.441, 0.22", "-54.5593, -95.6933, -153.686, 1.11", "-55.1769, -96.3454, -154.6, 1.33", "-56.9174, -98.361, -157.376, 0.29", "-57.3667, -98.9636, -158.188, 0.59", "-57.3911, -99.0012, -158.242, 0.59", "-57.9688, -100.034, -159.748, 0.29", "-57.9906, -100.081, -159.812, 0.29", "-58.6733, -101.462, -161.438, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.9937, 119.947, -50.6916, 0.22", "-22.23, 123.81, -55.066, 0.22", "-21.9345, 125.111, -56.4801, 0.37", "-21.7587, 125.832, -57.1962, 0.15", "-21.5978, 126.373, -57.7487, 0.44", "-21.2305, 127.601, -59.0158, 0.22", "-20.7939, 129.201, -60.6905, 1.25", "-20.2906, 131.223, -62.5549, 0.22", "-20.0944, 132.164, -63.4885, 1.03", "-19.6943, 134.512, -65.9298, 0.22", "-19.6336, 134.965, -66.4114, 0.22", "-19.5251, 136.274, -67.7672, 1.11", "-19.5183, 136.704, -68.1851, 1.4", "-19.625, 138.712, -69.9068, 0.22", "-19.6661, 139.173, -70.2659, 0.59", "-19.9091, 141.391, -71.6108, 0.22", "-19.9837, 142.204, -72.034, 0.88", "-20.0391, 142.865, -72.2861, 1.03", "-20.2134, 144.588, -72.7853, 0.22", "-20.3097, 145.467, -72.943, 0.59", "-20.5211, 147.126, -73.153, 0.22", "-20.6551, 148.282, -73.2489, 0.22", "-20.8243, 150.273, -73.4274, 1.47", "-20.8553, 150.847, -73.4767, 1.47", "-20.8614, 152.403, -73.6701, 0.22", "-20.8305, 153.179, -73.8142, 0.52", "-20.6926, 155.278, -74.3009, 0.22", "-20.6403, 155.887, -74.4629, 1.03", "-20.6023, 156.282, -74.5888, 1.03", "-20.2093, 160.529, -76.096, 0.22", "-20.095, 161.824, -76.5725, 0.96", "-20.0429, 162.492, -76.8277, 0.96", "-20.0387, 162.582, -76.8627, 0.96", "-19.9387, 164.863, -77.8164, 0.22", "-19.883, 166.133, -78.3893, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-22.9937, 119.947, -50.6916, 0.22", "-23.7029, 120.123, -52.1266, 0.22", "-24.8605, 120.304, -54.4397, 0.15", "-25.727, 120.397, -56.1265, 1.4", "-26.4359, 120.474, -57.5065, 1.4", "-27.3337, 120.57, -59.2543, 0.22", "-27.6863, 120.608, -59.9407, 0.22", "-28.0855, 120.609, -60.8308, 0.88", "-28.2144, 120.588, -61.0808, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-49.2669, 141.719, -69.0742, 0.66", "-51.5773, 141.445, -75.6207, 0.66", "-51.9129, 141.491, -76.4722, 0.29", "-52.1122, 141.577, -76.9256, 0.22", "-52.4515, 141.78, -77.626, 0.22", "-52.7582, 141.996, -78.2179, 1.03", "-53.0347, 142.2, -78.701, 1.47", "-53.7463, 143.057, -79.1964, 0.88", "-54.4286, 143.819, -79.6766, 0.22", "-54.6431, 144.001, -79.8353, 0.29", "-54.7096, 144.037, -79.8792, 0.29", "-55.2318, 144.226, -80.198, 0.15", "-55.8473, 144.361, -80.5725, 0.96", "-56.4331, 144.436, -80.9018, 1.4", "-57.5959, 144.547, -81.6944, 0.22", "-58.3921, 144.65, -82.3487, 0.22", "-59.0277, 144.764, -83.0562, 0.74", "-59.8629, 144.958, -84.1543, 0.22", "-60.1484, 145.036, -84.5788, 0.96", "-61.1086, 145.357, -86.2083, 1.33", "-61.5163, 145.537, -86.949, 1.84", "-62.9289, 146.248, -89.728, 0.88", "-63.1349, 146.35, -90.1325, 1.03", "-63.1679, 146.365, -90.1922, 1.03", "-64.3178, 146.866, -92.1392, 0.22", "-64.9901, 147.129, -93.1132, 1.33", "-66.7069, 147.711, -95.2476, 0.22", "-67.461, 147.939, -96.0093, 1.33", "-68.3191, 148.147, -96.7731, 0.22", "-68.3606, 148.154, -96.8044, 0.22", "-69.2338, 148.198, -97.2752, 0.22", "-70.0724, 148.138, -97.6047, 1.4", "-70.5915, 148.065, -97.6913, 1.84", "-71.2899, 147.898, -97.7662, 1.33", "-72.1609, 147.613, -97.8557, 0.81", "-72.9337, 147.312, -97.936, 0.22", "-73.6505, 146.938, -98.0177, 1.4", "-74.0415, 146.701, -98.0629, 1.69", "-74.2817, 146.547, -98.0866, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-49.2669, 141.719, -69.0742, 0.29", "-50.8004, 143.87, -72.5171, 0.29", "-51.2302, 144.513, -73.4301, 0.22", "-51.4368, 144.873, -73.8869, 0.96", "-51.5733, 145.129, -74.1955, 1.18", "-52.0883, 146.21, -75.3769, 0.22", "-52.252, 146.579, -75.7568, 0.52", "-52.3329, 146.817, -75.902, 0.52", "-52.8972, 148.459, -76.7956, 0.22", "-52.919, 148.52, -76.8234, 0.22", "-53.2015, 149.305, -77.1071, 0.22", "-53.2247, 149.37, -77.1216, 0.22", "-53.8395, 150.878, -77.3325, 0.22", "-53.8681, 150.942, -77.3357, 0.22", "-54.478, 152.265, -77.3911, 0.22", "-54.5054, 152.329, -77.3971, 0.22", "-54.7808, 153.015, -77.4876, 0.44", "-55.3343, 154.549, -77.7281, 0.15", "-55.9812, 156.669, -78.1779, 0.15", "-56.4924, 158.568, -78.6399, 0.15", "-56.8159, 159.995, -79.0335, 0.15", "-57.0082, 160.981, -79.3499, 0.88", "-57.1151, 161.675, -79.6029, 1.25", "-57.285, 163.493, -80.3522, 0.22", "-57.3045, 163.959, -80.5587, 0.59", "-57.3133, 164.462, -80.768, 0.59", "-57.3436, 166.126, -81.4278, 0.22", "-57.3541, 166.745, -81.661, 0.22", "-57.3622, 167.023, -81.7618, 0.66", "-57.379, 167.586, -81.9397, 0.74", "-57.3936, 169.267, -82.3192, 0.15", "-57.391, 170.273, -82.4441, 0.15", "-57.3898, 170.333, -82.4458, 0.15", "-57.37, 171.106, -82.444, 0.52", "-57.3453, 171.764, -82.3987, 0.52", "-57.2749, 173.684, -82.1319, 0.22", "-57.2533, 174.827, -81.874, 1.03", "-57.2644, 175.455, -81.7017, 1.03", "-57.2721, 175.532, -81.6783, 1.03", "-57.5074, 176.64, -81.2974, 0.15", "-57.6849, 177.1, -81.1437, 0.52", "-57.9205, 177.484, -81.0377, 0.52", "-58.4175, 178.166, -80.8315, 0.22", "-59.0863, 178.981, -80.5879, 0.22", "-59.4313, 179.368, -80.4858, 0.22", "-59.8722, 179.792, -80.4081, 0.59", "-60.3919, 180.295, -80.3176, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-0.0359569, -63.7483, 3.82698, 0.37", "-0.637337, -65.0758, 4.62095, 0.37", "-0.859644, -65.6135, 5.03892, 0.74", "-1.331, -66.8496, 6.14614, 0.22", "-1.55836, -67.4597, 6.73038, 0.81", "-1.68336, -67.8103, 7.09193, 0.81", "-2.11386, -69.0646, 8.46699, 1.47", "-2.37002, -69.9111, 9.55943, 2.06", "-2.57722, -70.8767, 10.9384, 0.22", "-2.62391, -71.2026, 11.4205, 0.52", "-2.69875, -71.7934, 12.3187, 0.22", "-2.76673, -72.3407, 13.1486, 1.77", "-2.85647, -73.0106, 14.1354, 2.43", "-3.13953, -74.871, 16.8035, 0.22", "-3.17194, -75.0996, 17.1312, 0.59", "-3.22154, -75.447, 17.6162, 0.22", "-3.25521, -75.6504, 17.8857, 0.44", "-3.38627, -76.3224, 18.738, 0.15", "-3.54319, -76.8534, 19.3694, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.0359569, -63.7483, 3.82698, 0.29", "-1.33161, -65.1641, 4.25389, 0.29", "-1.96553, -65.88, 4.45688, 0.29", "-2.60295, -66.6116, 4.66256, 0.29", "-3.32595, -67.4901, 4.97981, 0.29", "-3.97678, -68.3036, 5.3197, 0.29", "-4.4629, -68.9246, 5.59191, 1.77", "-4.97552, -69.6144, 5.97278, 2.21", "-5.14718, -69.8591, 6.1094, 2.36", "-5.91103, -71.0533, 6.76393, 0.74", "-6.31559, -71.6553, 7.12198, 0.29", "-6.771, -72.2744, 7.49979, 0.29", "-7.41615, -73.092, 8.00748, 1.92", "-7.82376, -73.5743, 8.30509, 2.28", "-8.15202, -73.934, 8.50245, 2.28", "-9.18462, -75.0062, 8.99019, 0.29", "-10.036, -75.8993, 9.36058, 0.22", "-10.3304, -76.21, 9.4757, 0.96", "-10.5477, -76.4346, 9.50721, 1.18", "-11.3094, -77.2274, 9.49009, 0.22", "-11.5714, -77.4743, 9.39549, 0.22", "-11.8859, -77.7517, 9.22033, 0.22", "-12.3664, -78.1301, 8.94076, 0.66", "-14.1296, -79.3364, 7.90831, 1.62", "-14.3672, -79.4678, 7.77344, 2.14", "-16.8904, -80.5718, 6.46906, 0.37", "-17.6939, -80.8536, 6.09933, 0.37", "-18.3915, -81.0331, 5.80442, 1.47", "-19.3745, -81.1919, 5.41056, 1.47", "-21.2331, -81.3515, 4.76514, 0.22", "-22.1306, -81.3787, 4.48049, 1.25", "-22.5311, -81.3662, 4.37699, 1.84", "-23.8651, -81.315, 4.0101, 1.84", "-26.8477, -81.2768, 3.14618, 0.22", "-27.3654, -81.2798, 3.0046, 0.88", "-28.1355, -81.3149, 2.77694, 0.88", "-28.8654, -81.3913, 2.54535, 0.22", "-30.0527, -81.5816, 2.18525, 0.22", "-30.8794, -81.7701, 1.94055, 1.03", "-31.1551, -81.8496, 1.85448, 1.03", "-32.772, -82.3839, 1.14017, 0.22", "-33.2747, -82.5785, 0.882025, 0.22", "-34.289, -83.0139, 0.312242, 1.25", "-35.2796, -83.4564, -0.234724, 1.18", "-35.3371, -83.4851, -0.267606, 1.18", "-37.1038, -84.4999, -1.3594, 0.22", "-37.542, -84.8011, -1.6548, 1.18", "-37.8621, -85.0558, -1.89735, 1.18", "-38.7858, -86.0202, -2.79621, 0.22", "-38.9876, -86.2564, -3.01939, 0.22", "-39.4597, -86.7923, -3.57235, 0.66", "-39.6801, -87.053, -3.83052, 0.81", "-39.8704, -87.2761, -4.05884, 0.81", "-40.8092, -88.3307, -5.25708, 0.52", "-41.7849, -89.4815, -6.55852, 0.22", "-42.615, -90.4491, -7.62735, 0.22", "-43.1326, -91.0454, -8.27003, 2.21", "-43.6488, -91.6269, -8.86276, 2.28", "-45.7943, -94.0181, -11.0962, 0.22", "-46.2753, -94.5513, -11.524, 0.22", "-47.1521, -95.5521, -12.2188, 0.22", "-47.1906, -95.5938, -12.2433, 0.22", "-47.8784, -96.236, -12.5482, 0.37", "-48.4057, -96.6561, -12.6264, 0.88", "-49.3915, -97.3262, -12.4861, 1.69", "-49.9762, -97.6863, -12.3959, 2.21", "-50.8847, -98.2434, -12.2303, 2.21", "-51.6694, -98.7463, -12.1083, 1.11", "-52.3504, -99.2295, -12.0342, 0.37", "-52.3971, -99.2699, -12.0307, 0.37", "-53.2118, -100.151, -11.9644, 0.37", "-53.5184, -100.548, -11.9181, 0.74", "-53.6022, -100.676, -11.8956, 0.74", "-53.9554, -101.254, -11.7761, 0.66", "-54.4372, -102.039, -11.5814, 0.66", "-54.819, -102.626, -11.4228, 0.52", "-55.6124, -103.779, -11.0687, 0.22", "-56.1925, -104.613, -10.8155, 1.47", "-56.6087, -105.226, -10.6812, 1.92", "-56.9697, -105.75, -10.5961, 2.14", "-57.5362, -106.582, -10.528, 0.74", "-57.9359, -107.202, -10.5303, 0.29", "-58.3837, -107.914, -10.6064, 0.29", "-59.2867, -109.371, -10.8261, 0.29", "-59.6068, -109.935, -10.9158, 1.33", "-59.9954, -110.653, -11.026, 1.33", "-60.1383, -110.931, -11.0564, 1.33", "-60.7443, -112.048, -11.1784, 0.29", "-61.0814, -112.614, -11.2175, 0.29", "-61.7874, -113.704, -11.2422, 0.29", "-61.8274, -113.764, -11.245, 0.29", "-62.3384, -114.524, -11.2782, 0.29", "-63.0527, -115.539, -11.3211, 1.18", "-63.2554, -115.819, -11.3346, 1.33", "-64.0662, -116.949, -11.4077, 0.22", "-64.108, -117.009, -11.4117, 0.22", "-64.4938, -117.64, -11.4507, 0.88", "-64.6902, -118.031, -11.4684, 0.88", "-65.1603, -119.311, -11.4751, 0.22", "-65.3956, -120.036, -11.4785, 1.33", "-65.5033, -120.392, -11.4699, 1.77", "-65.7899, -121.297, -11.4359, 0.88", "-66.0538, -122.088, -11.3932, 0.22", "-66.3582, -122.929, -11.3099, 0.59", "-66.8733, -124.223, -11.1034, 0.22", "-67.2664, -125.15, -10.9223, 0.22", "-67.5516, -125.789, -10.7731, 1.18", "-67.7428, -126.182, -10.6621, 1.18", "-68.2537, -127.135, -10.3563, 0.15", "-68.5766, -127.691, -10.1696, 0.15", "-69.0165, -128.459, -9.91191, 0.88", "-69.1972, -128.77, -9.81523, 1.11", "-69.7394, -129.586, -9.67523, 0.37", "-70.3042, -130.366, -9.63923, 0.22", "-70.7216, -130.936, -9.68718, 1.18", "-71.0424, -131.363, -9.75774, 1.18", "-71.0875, -131.418, -9.77057, 1.18", "-72.5913, -133.223, -10.254, 0.22", "-72.6655, -133.309, -10.2795, 0.37", "-73.2527, -133.967, -10.4968, 0.15", "-73.5127, -134.257, -10.5859, 0.59", "-74.5258, -135.402, -10.8694, 0.22", "-74.9866, -135.959, -10.9617, 1.03", "-75.1466, -136.171, -10.975, 1.03", "-76.1435, -137.64, -11.015, 0.22", "-76.3555, -137.98, -11.0106, 0.52", "-76.8771, -138.939, -10.9402, 0.22", "-77.1392, -139.503, -10.8637, 1.03", "-77.2963, -139.866, -10.7957, 1.03", "-77.8902, -141.234, -10.4951, 0.15", "-78.1036, -141.722, -10.3606, 0.44", "-78.506, -142.622, -10.1263, 0.15", "-78.7057, -143.068, -10.0188, 0.88", "-78.9763, -143.669, -9.92665, 0.88", "-79.4938, -144.873, -9.84215, 0.22", "-80.0392, -145.961, -9.98891, 0.22", "-80.2097, -146.241, -10.0683, 0.66", "-80.371, -146.498, -10.1447, 0.66", "-81.4194, -148.006, -10.6142, 0.37", "-81.8279, -148.565, -10.7945, 1.25", "-83.744, -151.245, -11.6534, 0.44", "-85.9222, -154.336, -12.6197, 0.15", "-86.6785, -155.433, -12.9271, 0.96", "-87.5574, -156.772, -13.2506, 0.29", "-87.8003, -157.179, -13.3262, 0.52", "-88.7719, -159.05, -13.65, 0.22", "-88.8998, -159.405, -13.7067, 0.66", "-89.095, -160.052, -13.8831, 0.66", "-89.6001, -161.478, -14.3463, 0.15", "-89.9723, -162.354, -14.6553, 0.15", "-90.5038, -163.461, -15.0745, 1.03", "-90.6818, -163.777, -15.2076, 1.03", "-92.1324, -166.141, -16.2788, 0.22", "-93.0295, -167.438, -16.9251, 0.22", "-93.9539, -168.569, -17.5337, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-74.2817, 146.547, -98.0866, 0.22", "-75.1749, 145.812, -98.8453, 0.22", "-75.6589, 145.43, -99.2505, 0.22", "-76.5863, 144.696, -99.9967, 0.59", "-77.673, 143.838, -100.832, 0.15", "-77.9702, 143.602, -101.055, 0.81", "-78.4955, 143.185, -101.45, 1.11", "-79.3375, 142.54, -102.056, 0.22", "-79.848, 142.133, -102.431, 1.03", "-80.1869, 141.845, -102.684, 1.33", "-80.2634, 141.789, -102.723, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-74.2817, 146.547, -98.0866, 0.22", "-75.579, 146.935, -97.6926, 0.22", "-76.806, 147.287, -97.1501, 0.22", "-77.5365, 147.492, -96.8071, 1.25", "-77.5946, 147.512, -96.7742, 1.25", "-79.2219, 148.136, -95.7595, 0.15", "-79.9167, 148.444, -95.313, 0.15", "-81.3422, 149.202, -94.2072, 0.96", "-81.7588, 149.456, -93.8781, 1.18", "-82.8151, 150.136, -93.0235, 0.15", "-82.8635, 150.168, -92.9835, 0.15", "-83.6035, 150.698, -92.3394, 0.15", "-84.9451, 151.707, -91.1748, 0.15", "-85.5644, 152.209, -90.7364, 0.66", "-85.8205, 152.396, -90.5674, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-93.9539, -168.569, -17.5337, 0.22", "-96.1895, -168.741, -18.0023, 0.22", "-97.2018, -168.809, -18.1589, 0.22", "-97.6893, -168.864, -18.2769, 1.03", "-97.918, -168.893, -18.3319, 1.33", "-100.101, -169.18, -18.8594, 0.22", "-101.707, -169.369, -19.2661, 0.22", "-102.218, -169.417, -19.3976, 0.88", "-104.443, -169.636, -20.0548, 0.22", "-105.74, -169.76, -20.4065, 0.22", "-105.791, -169.767, -20.4168, 0.22", "-107.343, -170.017, -20.6115, 0.22", "-107.433, -170.036, -20.6202, 0.22", "-108.78, -170.38, -20.6466, 0.22", "-110.168, -170.869, -20.5546, 0.22", "-111.7, -171.636, -20.4434, 0.22", "-111.751, -171.668, -20.438, 0.22", "-112.324, -172.121, -20.3523, 0.74", "-112.642, -172.428, -20.3115, 0.74", "-113.741, -173.873, -20.289, 0.22", "-114.375, -174.863, -20.3707, 0.22", "-114.601, -175.229, -20.4059, 0.29", "-114.702, -175.4, -20.4123, 0.37", "-115.368, -176.554, -20.4504, 0.15", "-116.496, -178.557, -20.4705, 0.15", "-116.526, -178.61, -20.4691, 0.15", "-117.456, -180.202, -20.3874, 0.15", "-119.489, -183.475, -20.091, 0.15", "-120.212, -184.58, -19.9725, 0.44", "-120.805, -185.456, -19.8548, 0.15", "-122.303, -187.62, -19.5024, 0.15", "-123.199, -188.899, -19.297, 0.37", "-124.098, -190.138, -19.1027, 0.15", "-125.115, -191.365, -18.8409, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-93.9539, -168.569, -17.5337, 0.22", "-94.3256, -170.819, -17.3458, 0.22", "-94.6813, -173.235, -17.1935, 0.22", "-95.0842, -175.97, -17.021, 0.22", "-95.1892, -176.683, -16.976, 1.33", "-95.3526, -177.793, -16.9061, 1.33", "-95.5825, -179.354, -16.8076, 0.22", "-95.637, -179.735, -16.7898, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-80.2634, 141.789, -102.723, 0.22", "-81.6902, 140.8, -103.584, 0.22", "-82.2599, 140.405, -103.928, 0.59", "-83.1747, 139.77, -104.48, 0.22", "-83.703, 139.404, -104.799, 0.66", "-83.7698, 139.358, -104.84, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-80.2634, 141.789, -102.723, 0.15", "-79.1066, 140.455, -103.109, 0.15", "-78.3043, 139.53, -103.376, 0.29", "-77.9725, 139.147, -103.487, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-95.637, -179.735, -16.7898, 0.29", "-95.2123, -180.666, -17.7703, 0.29", "-94.912, -181.324, -18.4638, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-95.637, -179.735, -16.7898, 0.22", "-97.0591, -181.522, -16.1211, 0.22", "-97.8151, -182.509, -15.7796, 0.44", "-98.7904, -184.008, -15.4247, 0.15", "-99.9334, -185.842, -15.038, 0.15", "-100.252, -186.37, -14.9314, 0.81", "-100.46, -186.726, -14.862, 0.81", "-102.487, -190.338, -14.2051, 0.15", "-104.934, -195.159, -13.4936, 0.15", "-104.934, -195.159, -13.4936, 0.37", "-105.421, -196.281, -13.4144, 0.15", "-105.642, -196.832, -13.382, 0.81", "-105.877, -197.464, -13.3555, 0.81", "-106.427, -199.291, -13.3424, 0.15", "-106.597, -199.937, -13.3309, 0.44", "-106.695, -200.254, -13.3466, 0.44", "-107.029, -201.257, -13.4346, 0.15", "-107.164, -201.664, -13.4555, 0.66", "-107.205, -201.787, -13.4577, 0.66", "-107.407, -202.393, -13.4602, 0.66", "-108.649, -206.139, -13.4938, 0.15", "-108.917, -206.946, -13.5032, 0.44", "-110.568, -211.961, -13.5815, 0.15", "-112.108, -216.664, -13.6434, 0.15", "-112.158, -216.816, -13.6443, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "axon_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_SBC_5318cbf0cb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, axon_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999992178869266)
    connect dend_23(0), soma_0(0.4999992178869266)
    connect dend_14(0), soma_0(0.4999992178869266)
    connect dend_11(0), soma_0(0.4999992178869266)
    connect dend_0(0), soma_0(0.4999992178869266)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.327285, 12.2563, -2.37682, 3.20394 ) }
    soma_0 { pt3dadd( -0.32997, 10.9888, -2.12879, 5.58325 ) }
    soma_0 { pt3dadd( -0.332655, 9.7213, -1.88076, 6.08709 ) }
    soma_0 { pt3dadd( -0.335339, 8.45379, -1.63272, 7.22603 ) }
    soma_0 { pt3dadd( -0.338024, 7.18628, -1.38469, 8.89261 ) }
    soma_0 { pt3dadd( -0.340709, 5.91877, -1.13666, 10.2823 ) }
    soma_0 { pt3dadd( -0.343394, 4.65126, -0.888622, 11.3086 ) }
    soma_0 { pt3dadd( -0.346078, 3.38375, -0.640589, 12.3784 ) }
    soma_0 { pt3dadd( -0.348763, 2.11624, -0.392555, 13.7451 ) }
    soma_0 { pt3dadd( -0.351448, 0.84873, -0.144521, 14.7054 ) }
    soma_0 { pt3dadd( -0.354133, -0.41878, 0.103512, 15.1673 ) }
    soma_0 { pt3dadd( -0.356817, -1.68629, 0.351546, 15.492 ) }
    soma_0 { pt3dadd( -0.359502, -2.9538, 0.599579, 15.6089 ) }
    soma_0 { pt3dadd( -0.362187, -4.22131, 0.847613, 15.0499 ) }
    soma_0 { pt3dadd( -0.364872, -5.48882, 1.09565, 14.3371 ) }
    soma_0 { pt3dadd( -0.367556, -6.75633, 1.34368, 13.225 ) }
    soma_0 { pt3dadd( -0.370241, -8.02384, 1.59171, 11.7728 ) }
    soma_0 { pt3dadd( -0.372926, -9.29135, 1.83975, 10.2754 ) }
    soma_0 { pt3dadd( -0.375611, -10.5589, 2.08778, 7.58879 ) }
    soma_0 { pt3dadd( -0.378295, -11.8264, 2.33581, 5.07363 ) }
    soma_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 2.91986 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.63702, -12.1088, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.63702, -12.1088, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.49399, -13.3768, 3.7198, 4.13 ) }
    dend_32 { pt3dadd( -1.28472, -15.232, 4.33493, 3.76 ) }
    dend_32 { pt3dadd( -0.953767, -18.166, 5.30771, 3.68 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0870214, -5.00883, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.0185795, -5.02909, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.346516, -5.097, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 1.66928, -5.38485, -15.4423, 1.69 ) }
    dend_23 { pt3dadd( 3.59498, -5.87815, -15.3674, 1.69 ) }
    dend_23 { pt3dadd( 3.72876, -5.91847, -15.3789, 1.69 ) }
    dend_23 { pt3dadd( 5.83395, -6.7552, -15.8462, 1.69 ) }
    dend_23 { pt3dadd( 5.93284, -6.8096, -15.8916, 1.69 ) }
    dend_23 { pt3dadd( 7.18634, -8.02314, -17.447, 1.84 ) }
    dend_23 { pt3dadd( 7.0444, -9.02657, -19.6513, 1.84 ) }
    dend_23 { pt3dadd( 5.94322, -9.98048, -22.9707, 1.99 ) }
    dend_23 { pt3dadd( 4.85952, -10.7562, -25.8531, 1.99 ) }
    dend_23 { pt3dadd( 3.57584, -11.4988, -28.8488, 1.99 ) }
    dend_23 { pt3dadd( 1.58346, -12.4502, -33.036, 2.14 ) }
    dend_23 { pt3dadd( -0.662139, -13.2742, -37.1917, 2.43 ) }
    dend_23 { pt3dadd( -4.39439, -14.2491, -43.3481, 2.87 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.632978, 11.1212, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.632978, 11.1212, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 1.03253, 11.4598, -5.79976, 2.28 ) }
    dend_14 { pt3dadd( 1.44284, 11.8308, -5.94702, 2.21 ) }
    dend_14 { pt3dadd( 2.23235, 12.6455, -6.20834, 0.81 ) }
    dend_14 { pt3dadd( 3.1338, 13.7473, -6.48885, 0.81 ) }
    dend_14 { pt3dadd( 3.58473, 14.3544, -6.62265, 1.25 ) }
    dend_14 { pt3dadd( 4.11169, 15.1972, -6.74781, 1.99 ) }
    dend_14 { pt3dadd( 4.13478, 15.2473, -6.75125, 1.99 ) }
    dend_14 { pt3dadd( 4.34786, 16.0768, -6.73952, 2.14 ) }
    dend_14 { pt3dadd( 4.41545, 16.9233, -6.67348, 2.14 ) }
    dend_14 { pt3dadd( 4.41321, 16.9788, -6.66918, 2.14 ) }
    dend_14 { pt3dadd( 4.32552, 17.9789, -6.61867, 1.84 ) }
    dend_14 { pt3dadd( 4.20303, 18.9334, -6.63554, 1.4 ) }
    dend_14 { pt3dadd( 3.97905, 20.2224, -6.73003, 0.81 ) }
    dend_14 { pt3dadd( 3.77887, 21.0895, -6.86781, 0.81 ) }
    dend_14 { pt3dadd( 3.47443, 22.187, -7.12229, 1.11 ) }
    dend_14 { pt3dadd( 3.46018, 22.2314, -7.13681, 1.11 ) }
    dend_14 { pt3dadd( 3.15444, 23.0542, -7.49974, 1.69 ) }
    dend_14 { pt3dadd( 2.79606, 23.9471, -7.98167, 1.77 ) }
    dend_14 { pt3dadd( 2.50959, 24.7083, -8.45858, 1.18 ) }
    dend_14 { pt3dadd( 2.49964, 24.7478, -8.48457, 1.18 ) }
    dend_14 { pt3dadd( 2.45564, 25.4301, -8.90021, 0.88 ) }
    dend_14 { pt3dadd( 2.52541, 25.9679, -9.17776, 0.74 ) }
    dend_14 { pt3dadd( 2.56033, 26.0603, -9.21388, 0.74 ) }
    dend_14 { pt3dadd( 2.92221, 26.7019, -9.38879, 0.74 ) }
    dend_14 { pt3dadd( 3.4535, 27.5138, -9.53396, 0.88 ) }
    dend_14 { pt3dadd( 3.86259, 28.1045, -9.61023, 1.69 ) }
    dend_14 { pt3dadd( 4.15022, 28.5112, -9.63947, 1.92 ) }
    dend_14 { pt3dadd( 4.38842, 28.8695, -9.66055, 2.21 ) }
    dend_14 { pt3dadd( 4.63504, 29.2797, -9.67894, 1.84 ) }
    dend_14 { pt3dadd( 4.9256, 29.867, -9.69403, 1.25 ) }
    dend_14 { pt3dadd( 5.1893, 30.5834, -9.73235, 0.81 ) }
    dend_14 { pt3dadd( 5.35879, 31.2282, -9.80855, 0.81 ) }
    dend_14 { pt3dadd( 5.43862, 31.8645, -9.94747, 1.11 ) }
    dend_14 { pt3dadd( 5.43493, 31.9147, -9.97029, 1.11 ) }
    dend_14 { pt3dadd( 5.33517, 32.3314, -10.273, 1.11 ) }
    dend_14 { pt3dadd( 5.07073, 33.0336, -10.9154, 0.59 ) }
    dend_14 { pt3dadd( 4.93615, 33.3179, -11.2177, 0.59 ) }
    dend_14 { pt3dadd( 4.63663, 33.8712, -11.9175, 0.52 ) }
    dend_14 { pt3dadd( 4.05202, 34.8723, -13.2955, 1.99 ) }
    dend_14 { pt3dadd( 3.76816, 35.3397, -13.973, 3.02 ) }
    dend_14 { pt3dadd( 3.63277, 35.5483, -14.3037, 3.02 ) }
    dend_14 { pt3dadd( 3.60945, 35.581, -14.359, 3.02 ) }
    dend_14 { pt3dadd( 3.20126, 36.1507, -15.3777, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.77298, 8.24117, 1.3594, 1.47 ) }
    dend_11 { pt3dadd( 3.20185, 8.59394, 1.39022, 1.47 ) }
    dend_11 { pt3dadd( 4.07588, 9.26257, 1.55235, 1.25 ) }
    dend_11 { pt3dadd( 4.35981, 9.47275, 1.6158, 1.62 ) }
    dend_11 { pt3dadd( 4.89279, 9.82525, 1.73739, 1.92 ) }
    dend_11 { pt3dadd( 5.5066, 10.2054, 1.87829, 1.69 ) }
    dend_11 { pt3dadd( 6.42807, 10.6656, 2.14339, 0.88 ) }
    dend_11 { pt3dadd( 7.36759, 10.9713, 2.72661, 0.88 ) }
    dend_11 { pt3dadd( 7.40686, 10.982, 2.77395, 0.88 ) }
    dend_11 { pt3dadd( 7.80444, 11.0884, 3.48597, 0.81 ) }
    dend_11 { pt3dadd( 7.82187, 11.0951, 3.53691, 0.81 ) }
    dend_11 { pt3dadd( 8.12549, 11.3831, 5.16765, 1.03 ) }
    dend_11 { pt3dadd( 8.30564, 12.0728, 7.98975, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 8.26997, 12.5889, 9.57763, 1.11 ) }
    dend_11 { pt3dadd( 8.26437, 12.6148, 9.63416, 1.11 ) }
    dend_11 { pt3dadd( 8.05226, 13.2881, 10.7629, 1.33 ) }
    dend_11 { pt3dadd( 7.80462, 14.0171, 11.6187, 1.99 ) }
    dend_11 { pt3dadd( 7.62625, 14.5314, 11.9913, 2.73 ) }
    dend_11 { pt3dadd( 7.51965, 14.9954, 12.218, 2.65 ) }
    dend_11 { pt3dadd( 7.44024, 15.9519, 12.6442, 2.36 ) }
    dend_11 { pt3dadd( 7.44328, 16.0011, 12.6649, 2.36 ) }
    dend_11 { pt3dadd( 7.72542, 17.2937, 13.1564, 0.81 ) }
    dend_11 { pt3dadd( 8.01283, 18.1016, 13.4625, 0.59 ) }
    dend_11 { pt3dadd( 8.69401, 19.5905, 13.995, 0.44 ) }
    dend_11 { pt3dadd( 9.26333, 20.5832, 14.2929, 0.44 ) }
    dend_11 { pt3dadd( 9.83873, 21.413, 14.4516, 1.18 ) }
    dend_11 { pt3dadd( 10.3109, 22.0065, 14.5224, 1.99 ) }
    dend_11 { pt3dadd( 10.8024, 22.5571, 14.62, 2.65 ) }
    dend_11 { pt3dadd( 11.0767, 22.8624, 14.6897, 2.65 ) }
    dend_11 { pt3dadd( 11.8421, 23.7594, 14.9798, 1.77 ) }
    dend_11 { pt3dadd( 12.5784, 24.6515, 15.4434, 0.44 ) }
    dend_11 { pt3dadd( 13.3008, 25.577, 16.0411, 0.44 ) }
    dend_11 { pt3dadd( 14.5803, 27.3253, 17.4047, 1.25 ) }
    dend_11 { pt3dadd( 14.9471, 27.8781, 17.8765, 2.43 ) }
    dend_11 { pt3dadd( 15.5409, 28.8726, 18.7513, 2.43 ) }
    dend_11 { pt3dadd( 15.9971, 29.7327, 19.5466, 2.21 ) }
    dend_11 { pt3dadd( 16.3276, 30.4395, 20.1824, 1.25 ) }
    dend_11 { pt3dadd( 16.7071, 31.3595, 20.872, 0.52 ) }
    dend_11 { pt3dadd( 16.9768, 32.0335, 21.2231, 0.52 ) }
    dend_11 { pt3dadd( 17.3056, 32.8514, 21.5562, 0.52 ) }
    dend_11 { pt3dadd( 17.3284, 32.9078, 21.5701, 0.52 ) }
    dend_11 { pt3dadd( 17.6633, 33.6748, 21.7117, 0.88 ) }
    dend_11 { pt3dadd( 18.0142, 34.417, 21.8237, 1.25 ) }
    dend_11 { pt3dadd( 18.3344, 35.0683, 21.8684, 1.69 ) }
    dend_11 { pt3dadd( 18.5738, 35.5251, 21.9088, 1.69 ) }
    dend_11 { pt3dadd( 18.618, 35.6084, 21.9184, 1.69 ) }
    dend_11 { pt3dadd( 19.0509, 36.3986, 22.0275, 1.69 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.16702, 11.2212, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.16702, 11.2212, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.59259, 12.0077, -2.43008, 1.4 ) }
    dend_0 { pt3dadd( -4.36183, 13.4351, -1.24865, 1.4 ) }
    dend_0 { pt3dadd( -4.88973, 14.4048, -0.472792, 1.4 ) }
    dend_0 { pt3dadd( -5.357, 15.2775, 0.205438, 1.69 ) }
    dend_0 { pt3dadd( -6.02115, 16.5112, 1.14396, 1.99 ) }
    dend_0 { pt3dadd( -6.73842, 17.8373, 2.11593, 2.36 ) }
    dend_0 { pt3dadd( -7.43782, 19.126, 3.01407, 3.09 ) }
    dend_0 { pt3dadd( -8.13932, 20.3423, 3.77343, 3.32 ) }
    dend_0 { pt3dadd( -8.79383, 21.4142, 4.32721, 3.09 ) }
    dend_0 { pt3dadd( -9.38734, 22.3052, 4.6514, 2.43 ) }
    dend_0 { pt3dadd( -10.1412, 23.3477, 4.77231, 1.4 ) }
    dend_0 { pt3dadd( -10.6136, 23.9595, 4.75098, 1.33 ) }
    dend_0 { pt3dadd( -11.3691, 24.8695, 4.57046, 1.18 ) }
    dend_0 { pt3dadd( -12.0989, 25.6674, 4.28726, 1.4 ) }
    dend_0 { pt3dadd( -13.0904, 26.637, 3.71029, 1.69 ) }
    dend_0 { pt3dadd( -14.2425, 27.6812, 2.8187, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 1.02022 ) }
    axon_0 { pt3dadd( -0.412752, -28.0939, 2.58385, 1.02022 ) }
    axon_0 { pt3dadd( -0.444525, -43.0938, 2.58385, 1.02022 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 55/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.953767, -18.166, 5.30771, 1.99 ) }
    dend_38 { pt3dadd( -0.202459, -19.4055, 5.17158, 1.99 ) }
    dend_38 { pt3dadd( 0.587115, -20.6061, 5.09115, 1.62 ) }
    dend_38 { pt3dadd( 0.629044, -20.6677, 5.08842, 1.62 ) }
    dend_38 { pt3dadd( 1.59325, -22.0615, 5.09261, 1.18 ) }
    dend_38 { pt3dadd( 2.13668, -22.8584, 5.11222, 1.18 ) }
    dend_38 { pt3dadd( 2.83945, -23.9153, 5.14818, 1.18 ) }
    dend_38 { pt3dadd( 3.83881, -25.4464, 5.24057, 1.18 ) }
    dend_38 { pt3dadd( 4.67517, -26.7817, 5.3463, 1.47 ) }
    dend_38 { pt3dadd( 5.54262, -28.2732, 5.48344, 2.21 ) }
    dend_38 { pt3dadd( 6.28044, -29.595, 5.63298, 2.73 ) }
    dend_38 { pt3dadd( 6.98278, -30.9262, 5.79159, 2.8 ) }
    dend_38 { pt3dadd( 7.59511, -32.1624, 5.94174, 2.95 ) }
    dend_38 { pt3dadd( 8.18579, -33.4807, 6.0922, 2.95 ) }
    dend_38 { pt3dadd( 8.45778, -34.1562, 6.16725, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.953767, -18.166, 5.30771, 1.18 ) }
    dend_33 { pt3dadd( -2.55227, -19.9014, 9.2516, 1.18 ) }
    dend_33 { pt3dadd( -3.71461, -21.1633, 12.1194, 1.18 ) }
    dend_33 { pt3dadd( -4.4324, -21.9425, 13.8904, 1.69 ) }
    dend_33 { pt3dadd( -5.02037, -22.5808, 15.341, 2.36 ) }
    dend_33 { pt3dadd( -5.37417, -22.9649, 16.2139, 2.73 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.39439, -14.2491, -43.3481, 0.66 ) }
    dend_29 { pt3dadd( -2.61117, -15.6268, -44.9076, 0.66 ) }
    dend_29 { pt3dadd( -1.55673, -16.3703, -45.7311, 0.74 ) }
    dend_29 { pt3dadd( -0.811451, -16.8479, -46.3457, 0.74 ) }
    dend_29 { pt3dadd( -0.202575, -17.1996, -46.8677, 0.74 ) }
    dend_29 { pt3dadd( -0.154306, -17.2251, -46.9103, 0.74 ) }
    dend_29 { pt3dadd( 1.00803, -17.7777, -47.9587, 0.52 ) }
    dend_29 { pt3dadd( 1.56468, -17.8437, -48.4253, 0.52 ) }
    dend_29 { pt3dadd( 2.20379, -17.6158, -49.2489, 0.44 ) }
    dend_29 { pt3dadd( 2.57017, -17.3554, -49.8984, 0.44 ) }
    dend_29 { pt3dadd( 2.66888, -17.2887, -50.0814, 0.44 ) }
    dend_29 { pt3dadd( 3.03994, -17.1165, -50.6779, 0.44 ) }
    dend_29 { pt3dadd( 3.96766, -16.8106, -52.1151, 0.88 ) }
    dend_29 { pt3dadd( 4.0067, -16.8042, -52.1719, 0.88 ) }
    dend_29 { pt3dadd( 4.88153, -16.7742, -53.3209, 1.11 ) }
    dend_29 { pt3dadd( 6.0805, -16.8201, -54.8173, 1.84 ) }
    dend_29 { pt3dadd( 7.45946, -16.9325, -56.4409, 2.14 ) }
    dend_29 { pt3dadd( 9.65265, -17.2019, -58.8816, 0.29 ) }
    dend_29 { pt3dadd( 10.4241, -17.3163, -59.6687, 0.29 ) }
    dend_29 { pt3dadd( 11.0234, -17.4012, -60.2215, 1.03 ) }
    dend_29 { pt3dadd( 11.0856, -17.4105, -60.2694, 1.03 ) }
    dend_29 { pt3dadd( 11.5845, -17.5126, -60.576, 1.33 ) }
    dend_29 { pt3dadd( 11.6432, -17.5257, -60.6116, 1.33 ) }
    dend_29 { pt3dadd( 12.2478, -17.6199, -61.0329, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 13.2626, -17.6662, -61.8864, 0.37 ) }
    dend_29 { pt3dadd( 13.9309, -17.6314, -62.5512, 0.37 ) }
    dend_29 { pt3dadd( 15.0038, -17.4674, -63.8405, 0.52 ) }
    dend_29 { pt3dadd( 16.3316, -17.1686, -65.7075, 0.74 ) }
    dend_29 { pt3dadd( 17.0123, -17.0095, -66.7415, 1.62 ) }
    dend_29 { pt3dadd( 17.3797, -16.9156, -67.3364, 1.92 ) }
    dend_29 { pt3dadd( 18.035, -16.7247, -68.4343, 2.43 ) }
    dend_29 { pt3dadd( 19.1033, -16.3286, -70.1729, 1.69 ) }
    dend_29 { pt3dadd( 20.0545, -15.8663, -71.7253, 0.37 ) }
    dend_29 { pt3dadd( 20.5067, -15.6369, -72.4502, 0.37 ) }
    dend_29 { pt3dadd( 20.8206, -15.485, -72.9421, 0.37 ) }
    dend_29 { pt3dadd( 21.2393, -15.3074, -73.5993, 1.11 ) }
    dend_29 { pt3dadd( 21.7295, -15.1482, -74.2653, 1.33 ) }
    dend_29 { pt3dadd( 23.4078, -14.6473, -76.1293, 0.22 ) }
    dend_29 { pt3dadd( 23.4645, -14.6319, -76.183, 0.22 ) }
    dend_29 { pt3dadd( 24.0242, -14.5284, -76.6723, 0.22 ) }
    dend_29 { pt3dadd( 24.7742, -14.5357, -77.2416, 0.22 ) }
    dend_29 { pt3dadd( 25.753, -14.6701, -77.8802, 0.88 ) }
    dend_29 { pt3dadd( 26.7627, -14.8488, -78.5151, 1.55 ) }
    dend_29 { pt3dadd( 27.3898, -14.9034, -79.078, 1.77 ) }
    dend_29 { pt3dadd( 28.4285, -14.8355, -80.5444, 0.22 ) }
    dend_29 { pt3dadd( 28.999, -14.697, -81.7006, 0.22 ) }
    dend_29 { pt3dadd( 29.4504, -14.529, -82.8019, 1.47 ) }
    dend_29 { pt3dadd( 30.0212, -14.2886, -84.3646, 2.43 ) }
    dend_29 { pt3dadd( 31.6782, -13.4724, -89.2314, 1.99 ) }
    dend_29 { pt3dadd( 32.6331, -12.8989, -92.3471, 1.77 ) }
    dend_29 { pt3dadd( 33.7059, -12.0934, -96.2897, 0.22 ) }
    dend_29 { pt3dadd( 33.7195, -12.0808, -96.346, 0.22 ) }
    dend_29 { pt3dadd( 33.9409, -11.8548, -97.3789, 0.22 ) }
    dend_29 { pt3dadd( 34.1235, -11.6639, -98.2927, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.39439, -14.2491, -43.3481, 1.03 ) }
    dend_24 { pt3dadd( -5.57191, -16.3093, -44.026, 1.03 ) }
    dend_24 { pt3dadd( -6.24626, -17.9647, -44.4377, 0.88 ) }
    dend_24 { pt3dadd( -6.2787, -18.0625, -44.4584, 0.88 ) }
    dend_24 { pt3dadd( -6.59405, -19.3072, -44.678, 0.88 ) }
    dend_24 { pt3dadd( -6.72271, -20.4475, -44.9292, 1.69 ) }
    dend_24 { pt3dadd( -6.7589, -21.4396, -45.1549, 1.84 ) }
    dend_24 { pt3dadd( -6.69869, -22.0299, -45.2988, 1.99 ) }
    dend_24 { pt3dadd( -6.69099, -22.0971, -45.3164, 1.99 ) }
    dend_24 { pt3dadd( -6.63473, -22.9258, -45.5798, 1.69 ) }
    dend_24 { pt3dadd( -6.65094, -25.1721, -46.4757, 1.03 ) }
    dend_24 { pt3dadd( -6.91102, -26.5392, -47.3081, 0.88 ) }
    dend_24 { pt3dadd( -7.27251, -27.4831, -48.0399, 0.66 ) }
    dend_24 { pt3dadd( -7.53586, -28.026, -48.5027, 0.66 ) }
    dend_24 { pt3dadd( -8.03067, -28.8225, -49.2591, 0.52 ) }
    dend_24 { pt3dadd( -8.55183, -29.3454, -49.8892, 0.52 ) }
    dend_24 { pt3dadd( -10.4456, -30.2599, -51.5313, 1.77 ) }
    dend_24 { pt3dadd( -10.937, -30.4012, -51.9704, 1.77 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 3.20126, 36.1507, -15.3777, 0.52 ) }
    dend_20 { pt3dadd( 3.65335, 36.6905, -17.5783, 0.52 ) }
    dend_20 { pt3dadd( 3.73258, 36.7764, -17.9352, 0.52 ) }
    dend_20 { pt3dadd( 3.86221, 36.9771, -18.6755, 0.37 ) }
    dend_20 { pt3dadd( 4.00695, 37.307, -19.6796, 1.4 ) }
    dend_20 { pt3dadd( 4.03398, 37.4075, -19.9239, 1.55 ) }
    dend_20 { pt3dadd( 4.23597, 38.4745, -22.1387, 0.74 ) }
    dend_20 { pt3dadd( 4.23895, 38.7005, -22.5016, 0.74 ) }
    dend_20 { pt3dadd( 4.16545, 39.6479, -23.854, 0.29 ) }
    dend_20 { pt3dadd( 4.09582, 40.1399, -24.4625, 0.29 ) }
    dend_20 { pt3dadd( 3.93547, 40.9675, -25.3588, 1.92 ) }
    dend_20 { pt3dadd( 3.85343, 41.3043, -25.6706, 2.28 ) }
    dend_20 { pt3dadd( 3.51389, 42.5752, -26.661, 0.22 ) }
    dend_20 { pt3dadd( 3.4965, 42.6448, -26.7164, 0.22 ) }
    dend_20 { pt3dadd( 3.44012, 42.9453, -26.9555, 0.22 ) }
    dend_20 { pt3dadd( 3.34711, 43.7483, -27.6919, 1.18 ) }
    dend_20 { pt3dadd( 3.32898, 44.0612, -27.9998, 1.77 ) }
    dend_20 { pt3dadd( 3.30495, 45.3993, -29.2783, 0.22 ) }
    dend_20 { pt3dadd( 3.32962, 46.1595, -29.965, 1.84 ) }
    dend_20 { pt3dadd( 3.35366, 46.5298, -30.287, 2.21 ) }
    dend_20 { pt3dadd( 3.50859, 47.7528, -31.2962, 0.22 ) }
    dend_20 { pt3dadd( 3.5168, 47.789, -31.3228, 0.22 ) }
    dend_20 { pt3dadd( 3.76988, 48.5764, -31.834, 0.22 ) }
    dend_20 { pt3dadd( 3.78922, 48.6198, -31.8554, 0.22 ) }
    dend_20 { pt3dadd( 4.09023, 49.168, -32.1198, 0.66 ) }
    dend_20 { pt3dadd( 4.35941, 49.6425, -32.4359, 0.88 ) }
    dend_20 { pt3dadd( 4.71717, 50.2647, -32.9093, 0.22 ) }
    dend_20 { pt3dadd( 5.041, 50.823, -33.4127, 1.99 ) }
    dend_20 { pt3dadd( 5.1999, 51.1088, -33.7163, 2.5 ) }
    dend_20 { pt3dadd( 5.58623, 51.919, -34.6443, 0.22 ) }
    dend_20 { pt3dadd( 6.08788, 53.1816, -36.1825, 0.59 ) }
    dend_20 { pt3dadd( 6.13309, 53.3501, -36.3919, 0.59 ) }
    dend_20 { pt3dadd( 6.13757, 53.3789, -36.4272, 0.59 ) }
    dend_20 { pt3dadd( 6.19475, 54.1041, -37.2271, 0.96 ) }
    dend_20 { pt3dadd( 6.21078, 54.4861, -37.6058, 1.11 ) }
    dend_20 { pt3dadd( 6.22569, 54.8587, -37.9233, 0.96 ) }
    dend_20 { pt3dadd( 6.28983, 55.6928, -38.5534, 0.22 ) }
    dend_20 { pt3dadd( 6.29302, 55.8147, -38.6961, 0.22 ) }
    dend_20 { pt3dadd( 6.28807, 56.2454, -39.3402, 0.22 ) }
    dend_20 { pt3dadd( 6.26308, 56.6074, -40.0077, 1.11 ) }
    dend_20 { pt3dadd( 6.16202, 57.0656, -41.034, 1.4 ) }
    dend_20 { pt3dadd( 6.05292, 57.4122, -41.9066, 2.06 ) }
    dend_20 { pt3dadd( 5.57574, 58.7872, -45.6132, 1.18 ) }
    dend_20 { pt3dadd( 5.37207, 59.3051, -47.1012, 1.18 ) }
    dend_20 { pt3dadd( 5.06464, 59.9602, -49.1595, 1.4 ) }
    dend_20 { pt3dadd( 4.59161, 60.8224, -52.0524, 1.55 ) }
    dend_20 { pt3dadd( 4.58378, 60.834, -52.0959, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.20126, 36.1507, -15.3777, 0.52 ) }
    dend_15 { pt3dadd( 3.27653, 37.73, -15.2068, 0.52 ) }
    dend_15 { pt3dadd( 3.33849, 38.7229, -15.1065, 0.52 ) }
    dend_15 { pt3dadd( 3.4195, 39.7868, -15.0889, 1.18 ) }
    dend_15 { pt3dadd( 3.50484, 40.6515, -15.1178, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 3.55297, 41.0134, -15.1387, 2.28 ) }
    dend_15 { pt3dadd( 3.64453, 41.4566, -15.1681, 1.84 ) }
    dend_15 { pt3dadd( 3.79505, 41.8919, -15.2061, 1.55 ) }
    dend_15 { pt3dadd( 4.22941, 42.9693, -15.349, 0.88 ) }
    dend_15 { pt3dadd( 4.539, 43.7179, -15.5188, 0.29 ) }
    dend_15 { pt3dadd( 4.79911, 44.3697, -15.6741, 0.29 ) }
    dend_15 { pt3dadd( 5.122, 45.3277, -15.9353, 0.29 ) }
    dend_15 { pt3dadd( 5.14716, 45.4069, -15.9609, 0.29 ) }
    dend_15 { pt3dadd( 5.33283, 46.0658, -16.183, 0.29 ) }
    dend_15 { pt3dadd( 5.65243, 47.5025, -16.6564, 1.92 ) }
    dend_15 { pt3dadd( 5.76267, 48.3461, -16.9411, 2.21 ) }
    dend_15 { pt3dadd( 5.8185, 49.6272, -17.4097, 0.29 ) }
    dend_15 { pt3dadd( 5.78697, 50.7042, -17.8178, 0.29 ) }
    dend_15 { pt3dadd( 5.68533, 51.5907, -18.187, 0.29 ) }
    dend_15 { pt3dadd( 5.51366, 52.3487, -18.5175, 0.29 ) }
    dend_15 { pt3dadd( 5.15709, 53.3848, -18.9641, 1.84 ) }
    dend_15 { pt3dadd( 4.73602, 54.3143, -19.3738, 2.58 ) }
    dend_15 { pt3dadd( 4.58753, 54.5752, -19.4865, 2.5 ) }
    dend_15 { pt3dadd( 3.3358, 56.4201, -20.3182, 0.22 ) }
    dend_15 { pt3dadd( 2.65137, 57.3331, -20.7622, 0.22 ) }
    dend_15 { pt3dadd( 2.19597, 57.9079, -21.0421, 0.96 ) }
    dend_15 { pt3dadd( 1.94997, 58.2004, -21.1837, 1.18 ) }
    dend_15 { pt3dadd( 1.72493, 58.4593, -21.2982, 1.18 ) }
    dend_15 { pt3dadd( 0.944231, 59.3492, -21.6858, 0.29 ) }
    dend_15 { pt3dadd( 0.533432, 59.8069, -21.8729, 0.29 ) }
    dend_15 { pt3dadd( -0.27291, 60.7221, -22.2824, 0.29 ) }
    dend_15 { pt3dadd( -1.33146, 61.9401, -22.8507, 2.21 ) }
    dend_15 { pt3dadd( -1.6958, 62.3684, -23.0498, 2.65 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 28/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.0509, 36.3986, 22.0275, 0.29 ) }
    dend_13 { pt3dadd( 19.3858, 37.4608, 21.9672, 0.29 ) }
    dend_13 { pt3dadd( 19.6224, 38.2251, 21.9759, 0.59 ) }
    dend_13 { pt3dadd( 19.7804, 38.6989, 22.0385, 0.74 ) }
    dend_13 { pt3dadd( 20.0559, 39.5117, 22.1839, 0.22 ) }
    dend_13 { pt3dadd( 20.3168, 40.2844, 22.3346, 0.22 ) }
    dend_13 { pt3dadd( 20.7203, 41.4865, 22.5763, 2.28 ) }
    dend_13 { pt3dadd( 20.855, 41.9042, 22.6866, 2.28 ) }
    dend_13 { pt3dadd( 21.3316, 43.3827, 23.1071, 0.29 ) }
    dend_13 { pt3dadd( 21.4445, 43.7247, 23.2099, 0.29 ) }
    dend_13 { pt3dadd( 21.7551, 44.6582, 23.5028, 0.22 ) }
    dend_13 { pt3dadd( 21.8403, 44.9093, 23.5742, 0.88 ) }
    dend_13 { pt3dadd( 21.8765, 45.0044, 23.5936, 0.88 ) }
    dend_13 { pt3dadd( 21.9801, 45.2515, 23.6291, 0.88 ) }
    dend_13 { pt3dadd( 22.0434, 45.3898, 23.6357, 0.88 ) }
    dend_13 { pt3dadd( 22.27, 45.8432, 23.6767, 0.52 ) }
    dend_13 { pt3dadd( 22.4234, 46.1551, 23.7561, 0.15 ) }
    dend_13 { pt3dadd( 22.6345, 46.6102, 23.9081, 0.15 ) }
    dend_13 { pt3dadd( 22.7287, 46.8452, 23.9962, 0.15 ) }
    dend_13 { pt3dadd( 22.9359, 47.432, 24.2219, 0.81 ) }
    dend_13 { pt3dadd( 23.0197, 47.7398, 24.3553, 0.96 ) }
    dend_13 { pt3dadd( 23.2091, 48.6883, 24.8114, 0.15 ) }
    dend_13 { pt3dadd( 23.2179, 48.7484, 24.8425, 0.15 ) }
    dend_13 { pt3dadd( 23.3331, 49.5503, 25.2596, 1.55 ) }
    dend_13 { pt3dadd( 23.4057, 49.9856, 25.4845, 2.28 ) }
    dend_13 { pt3dadd( 23.6833, 51.3424, 26.1975, 0.22 ) }
    dend_13 { pt3dadd( 23.9098, 52.2864, 26.7347, 2.65 ) }
    dend_13 { pt3dadd( 24.261, 53.608, 27.5102, 0.29 ) }
    dend_13 { pt3dadd( 24.3996, 54.0643, 27.7877, 0.15 ) }
    dend_13 { pt3dadd( 24.5032, 54.3815, 27.9896, 0.15 ) }
    dend_13 { pt3dadd( 24.9532, 55.6429, 28.8175, 2.58 ) }
    dend_13 { pt3dadd( 25.5152, 56.9703, 29.6963, 0.15 ) }
    dend_13 { pt3dadd( 25.6366, 57.2211, 29.8674, 0.37 ) }
    dend_13 { pt3dadd( 25.7958, 57.5187, 30.0832, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.0509, 36.3986, 22.0275, 0.29 ) }
    dend_12 { pt3dadd( 17.9173, 37.0557, 23.1345, 0.29 ) }
    dend_12 { pt3dadd( 17.1664, 37.5915, 23.8594, 0.29 ) }
    dend_12 { pt3dadd( 16.7316, 37.9651, 24.2757, 0.29 ) }
    dend_12 { pt3dadd( 16.3212, 38.3618, 24.6659, 0.88 ) }
    dend_12 { pt3dadd( 16.2825, 38.4128, 24.7029, 0.88 ) }
    dend_12 { pt3dadd( 16.0636, 38.8052, 24.9737, 0.88 ) }
    dend_12 { pt3dadd( 15.9966, 39.0024, 25.0719, 0.88 ) }
    dend_12 { pt3dadd( 15.9499, 39.2761, 25.1958, 0.88 ) }
    dend_12 { pt3dadd( 15.9451, 39.3508, 25.2345, 0.88 ) }
    dend_12 { pt3dadd( 15.9331, 40.3611, 25.7846, 0.44 ) }
    dend_12 { pt3dadd( 15.9386, 41.2019, 26.2391, 0.44 ) }
    dend_12 { pt3dadd( 15.9411, 41.264, 26.2792, 0.44 ) }
    dend_12 { pt3dadd( 15.9368, 42.0159, 26.8135, 0.44 ) }
    dend_12 { pt3dadd( 15.9204, 43.1917, 27.8215, 1.77 ) }
    dend_12 { pt3dadd( 15.942, 43.6838, 28.2635, 2.65 ) }
    dend_12 { pt3dadd( 15.9923, 44.13, 28.6735, 3.02 ) }
    dend_12 { pt3dadd( 16.3282, 46.1413, 30.4388, 0.22 ) }
    dend_12 { pt3dadd( 16.6285, 47.2086, 31.3803, 1.03 ) }
    dend_12 { pt3dadd( 17.181, 48.718, 32.7023, 0.29 ) }
    dend_12 { pt3dadd( 17.658, 49.7793, 33.644, 0.22 ) }
    dend_12 { pt3dadd( 17.9891, 50.4167, 34.2059, 1.92 ) }
    dend_12 { pt3dadd( 18.371, 51.0715, 34.7464, 2.28 ) }
    dend_12 { pt3dadd( 19.5178, 52.8117, 36.0112, 0.22 ) }
    dend_12 { pt3dadd( 19.8482, 53.2837, 36.4104, 0.22 ) }
    dend_12 { pt3dadd( 20.4789, 54.2435, 37.3875, 1.11 ) }
    dend_12 { pt3dadd( 20.6624, 54.5666, 37.7965, 1.55 ) }
    dend_12 { pt3dadd( 20.8804, 54.9754, 38.4123, 1.84 ) }
    dend_12 { pt3dadd( 20.8972, 55.0111, 38.4748, 1.84 ) }
    dend_12 { pt3dadd( 21.5913, 56.6993, 41.7282, 0.29 ) }
    dend_12 { pt3dadd( 21.8698, 57.4571, 43.3077, 0.29 ) }
    dend_12 { pt3dadd( 22.0648, 58.1488, 44.7876, 2.65 ) }
    dend_12 { pt3dadd( 22.1745, 58.6973, 45.9815, 2.36 ) }
    dend_12 { pt3dadd( 22.2713, 59.6233, 48.011, 0.37 ) }
    dend_12 { pt3dadd( 22.2699, 59.6511, 48.0672, 0.37 ) }
    dend_12 { pt3dadd( 22.1371, 60.042, 48.7285, 0.22 ) }
    dend_12 { pt3dadd( 21.9235, 60.4037, 49.2775, 0.66 ) }
    dend_12 { pt3dadd( 21.6345, 60.8033, 49.8164, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 21.3153, 61.2146, 50.3077, 0.96 ) }
    dend_12 { pt3dadd( 20.814, 61.8394, 51.007, 0.22 ) }
    dend_12 { pt3dadd( 20.462, 62.3107, 51.5687, 0.22 ) }
    dend_12 { pt3dadd( 19.896, 63.1257, 52.6382, 2.43 ) }
    dend_12 { pt3dadd( 19.0803, 64.3074, 54.5089, 0.22 ) }
    dend_12 { pt3dadd( 18.9567, 64.4878, 54.817, 0.88 ) }
    dend_12 { pt3dadd( 18.815, 64.7036, 55.1886, 1.03 ) }
    dend_12 { pt3dadd( 18.3463, 65.4458, 56.5205, 0.66 ) }
    dend_12 { pt3dadd( 18.0393, 66.1146, 57.9901, 1.62 ) }
    dend_12 { pt3dadd( 17.9241, 66.7373, 59.4177, 1.62 ) }
    dend_12 { pt3dadd( 17.951, 67.3644, 60.7974, 0.37 ) }
    dend_12 { pt3dadd( 18.0215, 67.6401, 61.3347, 2.06 ) }
    dend_12 { pt3dadd( 18.0326, 67.6708, 61.3883, 2.06 ) }
    dend_12 { pt3dadd( 18.8866, 69.919, 64.6964, 1.62 ) }
    dend_12 { pt3dadd( 19.2903, 70.8125, 65.9302, 0.22 ) }
    dend_12 { pt3dadd( 19.5693, 71.3731, 66.6625, 2.06 ) }
    dend_12 { pt3dadd( 20.5969, 73.1154, 69.0138, 0.29 ) }
    dend_12 { pt3dadd( 20.7513, 73.378, 69.3601, 0.29 ) }
    dend_12 { pt3dadd( 21.1772, 74.1908, 70.3039, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -14.2425, 27.6812, 2.8187, 1.18 ) }
    dend_2 { pt3dadd( -16.1142, 29.5719, -0.151139, 1.18 ) }
    dend_2 { pt3dadd( -16.5802, 30.0325, -0.776567, 1.18 ) }
    dend_2 { pt3dadd( -17.1936, 30.6247, -1.48996, 1.4 ) }
    dend_2 { pt3dadd( -17.8333, 31.2414, -2.13256, 1.4 ) }
    dend_2 { pt3dadd( -18.6493, 32.0827, -2.95282, 1.03 ) }
    dend_2 { pt3dadd( -19.3664, 32.8664, -3.64915, 0.66 ) }
    dend_2 { pt3dadd( -19.9662, 33.5586, -4.10043, 0.66 ) }
    dend_2 { pt3dadd( -20.3737, 34.0884, -4.41282, 1.11 ) }
    dend_2 { pt3dadd( -20.9534, 34.9203, -4.79879, 0.81 ) }
    dend_2 { pt3dadd( -22.2386, 36.9647, -5.50297, 0.66 ) }
    dend_2 { pt3dadd( -22.8019, 37.9238, -5.71209, 0.66 ) }
    dend_2 { pt3dadd( -23.2318, 38.7116, -5.81272, 0.66 ) }
    dend_2 { pt3dadd( -23.8471, 39.89, -5.89343, 1.25 ) }
    dend_2 { pt3dadd( -24.4891, 41.1731, -5.84993, 1.62 ) }
    dend_2 { pt3dadd( -25.0489, 42.3085, -5.677, 1.99 ) }
    dend_2 { pt3dadd( -25.4599, 43.1353, -5.44682, 1.99 ) }
    dend_2 { pt3dadd( -25.5367, 43.2924, -5.40194, 1.99 ) }
    dend_2 { pt3dadd( -25.8817, 44.0139, -5.20123, 1.84 ) }
    dend_2 { pt3dadd( -26.4153, 45.163, -4.93231, 1.03 ) }
    dend_2 { pt3dadd( -26.8246, 46.0899, -4.78598, 0.74 ) }
    dend_2 { pt3dadd( -27.2841, 47.1704, -4.65883, 0.74 ) }
    dend_2 { pt3dadd( -27.6254, 47.9938, -4.57333, 0.44 ) }
    dend_2 { pt3dadd( -27.8745, 48.5951, -4.51799, 0.59 ) }
    dend_2 { pt3dadd( -28.1916, 49.3036, -4.49094, 0.59 ) }
    dend_2 { pt3dadd( -28.5273, 49.9732, -4.51436, 0.59 ) }
    dend_2 { pt3dadd( -28.5709, 50.0488, -4.52108, 0.59 ) }
    dend_2 { pt3dadd( -29.0802, 50.8218, -4.62887, 0.44 ) }
    dend_2 { pt3dadd( -29.4634, 51.3495, -4.72307, 0.29 ) }
    dend_2 { pt3dadd( -30.1609, 52.2652, -4.95489, 0.29 ) }
    dend_2 { pt3dadd( -30.6677, 52.9634, -5.15472, 1.47 ) }
    dend_2 { pt3dadd( -31.1999, 53.7725, -5.39014, 2.06 ) }
    dend_2 { pt3dadd( -31.3738, 54.1112, -5.48305, 2.21 ) }
    dend_2 { pt3dadd( -31.4963, 54.4977, -5.60038, 2.21 ) }
    dend_2 { pt3dadd( -31.6712, 55.6548, -5.95353, 1.18 ) }
    dend_2 { pt3dadd( -31.6877, 56.9655, -6.32722, 0.37 ) }
    dend_2 { pt3dadd( -31.6244, 57.67, -6.52679, 0.37 ) }
    dend_2 { pt3dadd( -31.3964, 59.0375, -6.87341, 0.37 ) }
    dend_2 { pt3dadd( -31.0809, 60.6379, -7.27523, 1.33 ) }
    dend_2 { pt3dadd( -30.9918, 61.0992, -7.36997, 1.77 ) }
    dend_2 { pt3dadd( -30.9758, 61.1968, -7.38453, 1.77 ) }
    dend_2 { pt3dadd( -30.9376, 61.7002, -7.40557, 1.77 ) }
    dend_2 { pt3dadd( -31.0007, 62.8098, -7.28828, 0.81 ) }
    dend_2 { pt3dadd( -31.1783, 64.0013, -7.01773, 0.29 ) }
    dend_2 { pt3dadd( -31.3296, 64.9793, -6.61437, 0.74 ) }
    dend_2 { pt3dadd( -31.4083, 65.5938, -6.3193, 0.74 ) }
    dend_2 { pt3dadd( -31.5494, 67.0868, -5.5336, 0.37 ) }
    dend_2 { pt3dadd( -31.6058, 68.0843, -4.96663, 0.37 ) }
    dend_2 { pt3dadd( -31.6119, 68.8717, -4.47759, 0.37 ) }
    dend_2 { pt3dadd( -31.5281, 70.4375, -3.40694, 1.4 ) }
    dend_2 { pt3dadd( -31.4365, 71.0504, -3.04155, 2.06 ) }
    dend_2 { pt3dadd( -31.3627, 71.4417, -2.84067, 2.5 ) }
    dend_2 { pt3dadd( -31.2392, 72.0427, -2.59259, 2.5 ) }
    dend_2 { pt3dadd( -31.2298, 72.1137, -2.56744, 2.5 ) }
    dend_2 { pt3dadd( -31.1166, 74.6118, -1.84571, 0.44 ) }
    dend_2 { pt3dadd( -31.2155, 76.1644, -1.55524, 0.37 ) }
    dend_2 { pt3dadd( -31.3446, 76.9971, -1.41592, 0.37 ) }
    dend_2 { pt3dadd( -31.3689, 77.1017, -1.40059, 0.37 ) }
    dend_2 { pt3dadd( -31.806, 78.619, -1.22915, 0.37 ) }
    dend_2 { pt3dadd( -31.859, 78.7854, -1.21818, 0.37 ) }
    dend_2 { pt3dadd( -32.1351, 79.5589, -1.22956, 0.37 ) }
    dend_2 { pt3dadd( -32.1533, 79.6326, -1.23186, 0.37 ) }
    dend_2 { pt3dadd( -32.2261, 80.4417, -1.34468, 1.47 ) }
    dend_2 { pt3dadd( -32.242, 81.3769, -1.53667, 2.21 ) }
    dend_2 { pt3dadd( -32.2187, 82.0164, -1.69784, 2.65 ) }
    dend_2 { pt3dadd( -32.2109, 82.644, -1.87108, 2.5 ) }
    dend_2 { pt3dadd( -32.25, 84.6882, -2.46404, 0.29 ) }
    dend_2 { pt3dadd( -32.3216, 85.5959, -2.77826, 0.29 ) }
    dend_2 { pt3dadd( -32.4484, 86.4493, -3.11723, 0.29 ) }
    dend_2 { pt3dadd( -32.5954, 87.0353, -3.34898, 0.29 ) }
    dend_2 { pt3dadd( -32.8061, 87.7081, -3.59464, 1.33 ) }
    dend_2 { pt3dadd( -33.1171, 88.5997, -3.87358, 2.28 ) }
    dend_2 { pt3dadd( -33.5356, 89.74, -4.13609, 2.73 ) }
    dend_2 { pt3dadd( -33.7483, 90.3815, -4.27314, 2.43 ) }
    dend_2 { pt3dadd( -34.1987, 91.9071, -4.62981, 0.29 ) }
    dend_2 { pt3dadd( -34.3896, 92.5613, -4.81109, 0.29 ) }
    dend_2 { pt3dadd( -34.5484, 93.1585, -4.97931, 0.29 ) }
    dend_2 { pt3dadd( -34.6661, 93.636, -5.10887, 0.29 ) }
    dend_2 { pt3dadd( -34.9118, 94.7608, -5.34642, 0.88 ) }
    dend_2 { pt3dadd( -35.0133, 95.2369, -5.48328, 1.55 ) }
    dend_2 { pt3dadd( -35.2391, 96.0847, -5.89426, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -14.2425, 27.6812, 2.8187, 0.74 ) }
    dend_1 { pt3dadd( -15.4547, 27.8849, 2.57969, 0.74 ) }
    dend_1 { pt3dadd( -16.4602, 28.094, 2.3815, 0.74 ) }
    dend_1 { pt3dadd( -17.3757, 28.2987, 2.20672, 0.59 ) }
    dend_1 { pt3dadd( -17.929, 28.4322, 2.10645, 0.74 ) }
    dend_1 { pt3dadd( -18.7984, 28.6531, 1.95879, 0.74 ) }
    dend_1 { pt3dadd( -19.4526, 28.8247, 1.85583, 1.03 ) }
    dend_1 { pt3dadd( -20.3063, 29.073, 1.7347, 1.33 ) }
    dend_1 { pt3dadd( -21.0099, 29.2711, 1.64568, 1.55 ) }
    dend_1 { pt3dadd( -21.8619, 29.4837, 1.5533, 1.4 ) }
    dend_1 { pt3dadd( -22.9108, 29.7042, 1.48364, 1.25 ) }
    dend_1 { pt3dadd( -24.2679, 29.9674, 1.4875, 0.74 ) }
    dend_1 { pt3dadd( -24.9809, 30.1118, 1.54823, 0.96 ) }
    dend_1 { pt3dadd( -25.7519, 30.2727, 1.68231, 0.96 ) }
    dend_1 { pt3dadd( -26.9039, 30.548, 2.03271, 0.52 ) }
    dend_1 { pt3dadd( -27.9412, 30.8493, 2.52993, 0.52 ) }
    dend_1 { pt3dadd( -28.724, 31.1623, 3.09643, 0.88 ) }
    dend_1 { pt3dadd( -29.2865, 31.4664, 3.63138, 0.59 ) }
    dend_1 { pt3dadd( -29.3252, 31.4922, 3.66798, 0.59 ) }
    dend_1 { pt3dadd( -29.9023, 31.9581, 4.20309, 0.29 ) }
    dend_1 { pt3dadd( -30.2975, 32.2896, 4.43134, 0.29 ) }
    dend_1 { pt3dadd( -31.0065, 32.7166, 4.42092, 0.74 ) }
    dend_1 { pt3dadd( -31.6121, 32.9833, 4.25741, 0.96 ) }
    dend_1 { pt3dadd( -32.7473, 33.355, 3.85343, 0.59 ) }
    dend_1 { pt3dadd( -32.8188, 33.3727, 3.82368, 0.59 ) }
    dend_1 { pt3dadd( -33.7033, 33.5228, 3.40428, 0.29 ) }
    dend_1 { pt3dadd( -34.2835, 33.5899, 3.11461, 0.29 ) }
    dend_1 { pt3dadd( -35.0883, 33.6292, 2.7074, 1.62 ) }
    dend_1 { pt3dadd( -35.9482, 33.6029, 2.33198, 2.43 ) }
    dend_1 { pt3dadd( -36.6919, 33.5382, 2.07057, 2.65 ) }
    dend_1 { pt3dadd( -37.3545, 33.4623, 1.86572, 2.65 ) }
    dend_1 { pt3dadd( -37.4114, 33.4559, 1.85068, 2.65 ) }
    dend_1 { pt3dadd( -38.974, 33.3258, 1.5324, 1.11 ) }
    dend_1 { pt3dadd( -40.2029, 33.286, 1.38337, 0.37 ) }
    dend_1 { pt3dadd( -41.0016, 33.3248, 1.3374, 0.37 ) }
    dend_1 { pt3dadd( -41.853, 33.4449, 1.34601, 0.37 ) }
    dend_1 { pt3dadd( -42.5938, 33.6445, 1.44835, 0.37 ) }
    dend_1 { pt3dadd( -43.4415, 33.9987, 1.69351, 0.81 ) }
    dend_1 { pt3dadd( -44.0786, 34.3566, 1.99096, 1.47 ) }
    dend_1 { pt3dadd( -44.5493, 34.6372, 2.27011, 1.69 ) }
    dend_1 { pt3dadd( -44.841, 34.7926, 2.45637, 1.69 ) }
    dend_1 { pt3dadd( -46.1153, 35.3419, 3.29072, 0.66 ) }
    dend_1 { pt3dadd( -47.0884, 35.6584, 3.91653, 0.37 ) }
    dend_1 { pt3dadd( -47.7455, 35.8151, 4.33109, 0.37 ) }
    dend_1 { pt3dadd( -48.9162, 35.9724, 5.00814, 1.25 ) }
    dend_1 { pt3dadd( -49.7935, 35.9791, 5.50625, 2.36 ) }
    dend_1 { pt3dadd( -50.5633, 35.943, 5.94855, 2.36 ) }
    dend_1 { pt3dadd( -50.6214, 35.9377, 5.98554, 2.36 ) }
    dend_1 { pt3dadd( -51.1228, 35.8855, 6.33662, 2.21 ) }
    dend_1 { pt3dadd( -52.3909, 35.7766, 7.33248, 0.37 ) }
    dend_1 { pt3dadd( -53.8607, 35.6683, 8.60536, 0.59 ) }
    dend_1 { pt3dadd( -54.7547, 35.6136, 9.40821, 0.37 ) }
    dend_1 { pt3dadd( -56.257, 35.5398, 10.7184, 1.18 ) }
    dend_1 { pt3dadd( -56.6548, 35.524, 11.044, 1.4 ) }
    dend_1 { pt3dadd( -57.4815, 35.4945, 11.6931, 1.25 ) }
    dend_1 { pt3dadd( -57.534, 35.4921, 11.7378, 1.25 ) }
    dend_1 { pt3dadd( -58.2667, 35.4199, 12.4249, 0.52 ) }
    dend_1 { pt3dadd( -59.074, 35.2753, 13.2008, 2.14 ) }
    dend_1 { pt3dadd( -59.8202, 35.1536, 13.9419, 2.95 ) }
    dend_1 { pt3dadd( -60.8523, 34.9517, 15.0386, 1.92 ) }
    dend_1 { pt3dadd( -62.4236, 34.6869, 16.68, 1.03 ) }
    dend_1 { pt3dadd( -64.1904, 34.4805, 18.5338, 0.44 ) }
    dend_1 { pt3dadd( -64.6026, 34.433, 18.9915, 0.44 ) }
    dend_1 { pt3dadd( -65.7759, 34.3066, 20.3247, 0.44 ) }
    dend_1 { pt3dadd( -67.2187, 34.1739, 21.9625, 2.36 ) }
    dend_1 { pt3dadd( -68.8845, 34.0932, 23.7173, 0.22 ) }
    dend_1 { pt3dadd( -69.6243, 34.1135, 24.3719, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.444525, -43.0938, 2.58385, 0.318625 ) }
    axon_1 { pt3dadd( -0.476297, -58.0938, 2.58385, 0.318625 ) }
    axon_1 { pt3dadd( -0.508069, -73.0938, 2.58385, 0.318625 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 8.45778, -34.1562, 6.16725, 0.37 ) }
    dend_48 { pt3dadd( 9.02365, -35.1021, 5.24314, 0.37 ) }
    dend_48 { pt3dadd( 9.48743, -35.7695, 4.42922, 0.29 ) }
    dend_48 { pt3dadd( 9.77438, -36.1518, 3.92067, 0.29 ) }
    dend_48 { pt3dadd( 10.6458, -37.1276, 2.45658, 0.74 ) }
    dend_48 { pt3dadd( 10.6866, -37.1642, 2.39378, 0.74 ) }
    dend_48 { pt3dadd( 11.4719, -37.7497, 1.26039, 0.66 ) }
    dend_48 { pt3dadd( 12.1787, -38.1539, 0.172664, 0.29 ) }
    dend_48 { pt3dadd( 12.2335, -38.1675, 0.0962852, 0.29 ) }
    dend_48 { pt3dadd( 12.8036, -38.1465, -0.525437, 0.29 ) }
    dend_48 { pt3dadd( 13.4243, -37.9626, -0.96453, 0.74 ) }
    dend_48 { pt3dadd( 13.6216, -37.8727, -1.0716, 0.74 ) }
    dend_48 { pt3dadd( 14.0228, -37.6661, -1.21792, 1.03 ) }
    dend_48 { pt3dadd( 14.1805, -37.5979, -1.26135, 1.03 ) }
    dend_48 { pt3dadd( 14.5808, -37.5015, -1.36964, 1.03 ) }
    dend_48 { pt3dadd( 15.4337, -37.4517, -1.59462, 0.59 ) }
    dend_48 { pt3dadd( 16.469, -37.5491, -1.85946, 0.22 ) }
    dend_48 { pt3dadd( 17.3544, -37.7329, -2.05478, 0.22 ) }
    dend_48 { pt3dadd( 17.998, -37.9114, -2.1828, 0.88 ) }
    dend_48 { pt3dadd( 19.2114, -38.2531, -2.45474, 1.84 ) }
    dend_48 { pt3dadd( 19.8313, -38.4394, -2.60099, 2.14 ) }
    dend_48 { pt3dadd( 20.7008, -38.6966, -2.7911, 2.36 ) }
    dend_48 { pt3dadd( 22.2267, -39.0633, -3.07646, 0.66 ) }
    dend_48 { pt3dadd( 23.4488, -39.2344, -3.27617, 0.59 ) }
    dend_48 { pt3dadd( 25.3001, -39.3344, -3.5413, 0.52 ) }
    dend_48 { pt3dadd( 25.3827, -39.3297, -3.55164, 0.52 ) }
    dend_48 { pt3dadd( 26.349, -39.1708, -3.6993, 1.33 ) }
    dend_48 { pt3dadd( 27.5195, -38.8227, -3.91992, 1.77 ) }
    dend_48 { pt3dadd( 28.2489, -38.5288, -4.03613, 1.77 ) }
    dend_48 { pt3dadd( 28.5372, -38.4162, -4.07015, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 29.5379, -38.1112, -4.15695, 1.25 ) }
    dend_48 { pt3dadd( 30.9787, -37.7792, -4.30516, 0.52 ) }
    dend_48 { pt3dadd( 32.3431, -37.5668, -4.48563, 0.29 ) }
    dend_48 { pt3dadd( 33.7274, -37.4484, -4.6773, 0.29 ) }
    dend_48 { pt3dadd( 35.0686, -37.3885, -4.83991, 0.22 ) }
    dend_48 { pt3dadd( 36.2848, -37.4005, -5.10922, 0.22 ) }
    dend_48 { pt3dadd( 36.375, -37.4041, -5.13878, 0.22 ) }
    dend_48 { pt3dadd( 36.9417, -37.3993, -5.40541, 1.03 ) }
    dend_48 { pt3dadd( 37.3998, -37.3873, -5.70037, 1.47 ) }
    dend_48 { pt3dadd( 37.9778, -37.3407, -6.15755, 1.47 ) }
    dend_48 { pt3dadd( 39.7877, -37.1205, -7.71888, 0.59 ) }
    dend_48 { pt3dadd( 40.5449, -37.0414, -8.42528, 0.22 ) }
    dend_48 { pt3dadd( 41.432, -37.0194, -9.22341, 0.22 ) }
    dend_48 { pt3dadd( 42.0271, -37.0532, -9.75427, 0.22 ) }
    dend_48 { pt3dadd( 42.0896, -37.0613, -9.80753, 0.22 ) }
    dend_48 { pt3dadd( 42.9114, -37.245, -10.4154, 0.22 ) }
    dend_48 { pt3dadd( 42.9768, -37.2623, -10.4626, 0.22 ) }
    dend_48 { pt3dadd( 43.8567, -37.5395, -11.2561, 1.03 ) }
    dend_48 { pt3dadd( 44.5957, -37.8106, -11.9578, 1.62 ) }
    dend_48 { pt3dadd( 44.6529, -37.8284, -12.0145, 1.62 ) }
    dend_48 { pt3dadd( 44.9255, -37.9089, -12.2747, 1.62 ) }
    dend_48 { pt3dadd( 46.5957, -38.371, -13.7445, 0.15 ) }
    dend_48 { pt3dadd( 46.6586, -38.3916, -13.7951, 0.15 ) }
    dend_48 { pt3dadd( 47.4934, -38.7302, -14.4274, 0.15 ) }
    dend_48 { pt3dadd( 47.5666, -38.762, -14.4777, 0.15 ) }
    dend_48 { pt3dadd( 48.862, -39.331, -15.3214, 1.77 ) }
    dend_48 { pt3dadd( 49.749, -39.7615, -15.8167, 2.73 ) }
    dend_48 { pt3dadd( 50.3166, -40.0353, -16.0246, 3.02 ) }
    dend_48 { pt3dadd( 53.4235, -41.4704, -16.9015, 0.22 ) }
    dend_48 { pt3dadd( 54.0619, -41.738, -17.0146, 0.22 ) }
    dend_48 { pt3dadd( 54.1278, -41.7632, -17.0191, 0.22 ) }
    dend_48 { pt3dadd( 55.81, -42.3032, -16.871, 0.22 ) }
    dend_48 { pt3dadd( 58.1569, -42.829, -16.3756, 0.22 ) }
    dend_48 { pt3dadd( 58.3122, -42.8555, -16.325, 0.22 ) }
    dend_48 { pt3dadd( 59.366, -43.0106, -15.8379, 1.55 ) }
    dend_48 { pt3dadd( 60.3962, -43.1648, -15.3904, 2.21 ) }
    dend_48 { pt3dadd( 61.3609, -43.3104, -15.0175, 1.4 ) }
    dend_48 { pt3dadd( 63.0229, -43.5499, -14.5166, 0.22 ) }
    dend_48 { pt3dadd( 64.1264, -43.7829, -14.2268, 0.22 ) }
    dend_48 { pt3dadd( 65.0522, -44.0027, -13.9457, 0.22 ) }
    dend_48 { pt3dadd( 65.6051, -44.1609, -13.731, 0.44 ) }
    dend_48 { pt3dadd( 65.6784, -44.1841, -13.6987, 0.44 ) }
    dend_48 { pt3dadd( 66.4265, -44.4548, -13.2958, 0.22 ) }
    dend_48 { pt3dadd( 68.1449, -45.1384, -12.2809, 1.62 ) }
    dend_48 { pt3dadd( 68.8106, -45.431, -11.8774, 2.14 ) }
    dend_48 { pt3dadd( 71.3271, -46.6522, -10.3745, 0.22 ) }
    dend_48 { pt3dadd( 72.0111, -47.0174, -9.97219, 1.47 ) }
    dend_48 { pt3dadd( 74.2046, -48.2849, -8.72653, 1.11 ) }
    dend_48 { pt3dadd( 74.87, -48.7136, -8.36991, 1.33 ) }
    dend_48 { pt3dadd( 76.6034, -49.9047, -7.61807, 0.22 ) }
    dend_48 { pt3dadd( 77.4585, -50.4881, -7.2606, 0.22 ) }
    dend_48 { pt3dadd( 77.9092, -50.7897, -7.09248, 1.47 ) }
    dend_48 { pt3dadd( 78.3545, -51.0514, -6.88409, 2.14 ) }
    dend_48 { pt3dadd( 79.2092, -51.4979, -6.46782, 2.14 ) }
    dend_48 { pt3dadd( 81.362, -52.5998, -5.28013, 0.22 ) }
    dend_48 { pt3dadd( 83.2198, -53.5275, -4.15498, 1.77 ) }
    dend_48 { pt3dadd( 83.6454, -53.7471, -3.87957, 2.36 ) }
    dend_48 { pt3dadd( 86.7905, -55.4343, -1.66362, 0.29 ) }
    dend_48 { pt3dadd( 87.8049, -56.0007, -0.921462, 0.29 ) }
    dend_48 { pt3dadd( 88.4801, -56.409, -0.401826, 0.29 ) }
    dend_48 { pt3dadd( 88.5378, -56.4496, -0.357472, 0.29 ) }
    dend_48 { pt3dadd( 89.0902, -56.867, 0.0435114, 0.29 ) }
    dend_48 { pt3dadd( 90.9887, -58.3349, 1.37608, 2.28 ) }
    dend_48 { pt3dadd( 91.5561, -58.7682, 1.7406, 2.65 ) }
    dend_48 { pt3dadd( 93.7104, -60.3239, 3.16706, 0.22 ) }
    dend_48 { pt3dadd( 94.4971, -60.8627, 3.67868, 0.22 ) }
    dend_48 { pt3dadd( 95.8311, -61.7289, 4.47301, 0.96 ) }
    dend_48 { pt3dadd( 96.5302, -62.143, 4.84006, 1.47 ) }
    dend_48 { pt3dadd( 98.9232, -63.3986, 5.80992, 0.22 ) }
    dend_48 { pt3dadd( 100.129, -63.919, 6.19857, 0.81 ) }
    dend_48 { pt3dadd( 100.295, -63.976, 6.2358, 0.81 ) }
    dend_48 { pt3dadd( 102.334, -64.5098, 6.48902, 0.22 ) }
    dend_48 { pt3dadd( 103.359, -64.7153, 6.46696, 0.22 ) }
    dend_48 { pt3dadd( 105.586, -65.065, 6.29497, 0.22 ) }
    dend_48 { pt3dadd( 106.762, -65.1701, 6.06376, 0.22 ) }
    dend_48 { pt3dadd( 106.843, -65.1737, 6.043, 0.22 ) }
    dend_48 { pt3dadd( 108.698, -65.213, 5.49973, 0.96 ) }
    dend_48 { pt3dadd( 109.799, -65.1663, 5.04886, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 8.45778, -34.1562, 6.16725, 1.25 ) }
    dend_39 { pt3dadd( 7.87586, -35.6016, 6.22558, 1.25 ) }
    dend_39 { pt3dadd( 7.39416, -37.0755, 6.22783, 0.81 ) }
    dend_39 { pt3dadd( 7.12791, -38.2396, 6.17114, 0.81 ) }
    dend_39 { pt3dadd( 6.95427, -39.59, 6.0609, 0.96 ) }
    dend_39 { pt3dadd( 6.88562, -40.9762, 5.9003, 0.74 ) }
    dend_39 { pt3dadd( 6.83358, -42.0271, 5.77855, 1.11 ) }
    dend_39 { pt3dadd( 6.86537, -42.734, 5.63467, 1.69 ) }
    dend_39 { pt3dadd( 7.09008, -43.8908, 5.32486, 2.36 ) }
    dend_39 { pt3dadd( 7.41974, -44.7764, 5.03187, 2.65 ) }
    dend_39 { pt3dadd( 7.744, -45.3222, 4.82084, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -5.37417, -22.9649, 16.2139, 0.81 ) }
    dend_37 { pt3dadd( -5.92499, -21.7298, 16.3979, 0.81 ) }
    dend_37 { pt3dadd( -6.35866, -20.7097, 16.4465, 0.66 ) }
    dend_37 { pt3dadd( -6.78985, -19.6525, 16.4579, 0.66 ) }
    dend_37 { pt3dadd( -7.05243, -19.0604, 16.4326, 0.96 ) }
    dend_37 { pt3dadd( -7.56219, -18.0357, 16.3725, 0.44 ) }
    dend_37 { pt3dadd( -7.96272, -17.2866, 16.322, 0.44 ) }
    dend_37 { pt3dadd( -8.63054, -16.1479, 16.1608, 0.59 ) }
    dend_37 { pt3dadd( -8.91436, -15.7678, 16.0893, 0.59 ) }
    dend_37 { pt3dadd( -9.64379, -15.1386, 15.9914, 0.59 ) }
    dend_37 { pt3dadd( -10.2674, -14.8342, 15.9965, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -10.3387, -14.8196, 16.0068, 0.59 ) }
    dend_37 { pt3dadd( -11.0424, -14.7929, 16.1616, 0.59 ) }
    dend_37 { pt3dadd( -11.967, -14.8515, 16.4675, 1.33 ) }
    dend_37 { pt3dadd( -12.7566, -14.9294, 16.78, 1.69 ) }
    dend_37 { pt3dadd( -13.5331, -15.0137, 17.1642, 1.55 ) }
    dend_37 { pt3dadd( -14.3897, -15.1117, 17.7374, 0.88 ) }
    dend_37 { pt3dadd( -15.001, -15.1711, 18.4773, 0.44 ) }
    dend_37 { pt3dadd( -15.4004, -15.2302, 19.3548, 0.44 ) }
    dend_37 { pt3dadd( -15.514, -15.2793, 19.8118, 0.74 ) }
    dend_37 { pt3dadd( -15.6047, -15.4069, 20.5778, 0.88 ) }
    dend_37 { pt3dadd( -15.7205, -15.7968, 22.4706, 1.03 ) }
    dend_37 { pt3dadd( -15.8209, -16.5686, 25.6767, 0.52 ) }
    dend_37 { pt3dadd( -15.8493, -16.9832, 27.2182, 1.25 ) }
    dend_37 { pt3dadd( -15.8693, -17.4211, 28.6168, 1.25 ) }
    dend_37 { pt3dadd( -15.8097, -17.8803, 29.935, 0.44 ) }
    dend_37 { pt3dadd( -15.728, -18.2652, 30.9362, 0.44 ) }
    dend_37 { pt3dadd( -15.5562, -18.7344, 32.2556, 0.29 ) }
    dend_37 { pt3dadd( -15.1418, -19.3437, 34.385, 1.99 ) }
    dend_37 { pt3dadd( -15.0262, -19.4951, 34.9908, 1.99 ) }
    dend_37 { pt3dadd( -14.2576, -20.4903, 39.3087, 1.99 ) }
    dend_37 { pt3dadd( -14.2455, -20.5055, 39.3796, 1.99 ) }
    dend_37 { pt3dadd( -13.0954, -21.9038, 46.118, 2.73 ) }
    dend_37 { pt3dadd( -11.875, -23.4933, 53.8638, 1.4 ) }
    dend_37 { pt3dadd( -11.722, -23.7229, 55.0096, 1.25 ) }
    dend_37 { pt3dadd( -11.6278, -23.9213, 56.0633, 0.22 ) }
    dend_37 { pt3dadd( -11.6159, -24.0537, 56.7425, 0.22 ) }
    dend_37 { pt3dadd( -11.6217, -24.1228, 57.0434, 1.11 ) }
    dend_37 { pt3dadd( -11.7629, -24.4288, 57.9908, 1.47 ) }
    dend_37 { pt3dadd( -12.5331, -25.5822, 60.641, 1.18 ) }
    dend_37 { pt3dadd( -12.7136, -25.9029, 61.4197, 1.99 ) }
    dend_37 { pt3dadd( -13.097, -26.652, 63.3333, 0.22 ) }
    dend_37 { pt3dadd( -13.3359, -27.1187, 64.5204, 0.22 ) }
    dend_37 { pt3dadd( -13.4158, -27.2576, 64.8728, 0.66 ) }
    dend_37 { pt3dadd( -13.7733, -27.8256, 66.3309, 0.66 ) }
    dend_37 { pt3dadd( -14.1121, -28.2035, 67.2399, 0.29 ) }
    dend_37 { pt3dadd( -14.489, -28.5494, 68.2583, 1.33 ) }
    dend_37 { pt3dadd( -14.6394, -28.5858, 68.5595, 1.62 ) }
    dend_37 { pt3dadd( -14.9266, -28.5905, 69.1087, 1.84 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.37417, -22.9649, 16.2139, 1.62 ) }
    dend_34 { pt3dadd( -5.68787, -23.9556, 16.0434, 1.62 ) }
    dend_34 { pt3dadd( -5.94659, -24.7353, 15.9044, 1.33 ) }
    dend_34 { pt3dadd( -6.27455, -25.7016, 15.7177, 0.88 ) }
    dend_34 { pt3dadd( -6.64488, -26.8094, 15.4872, 0.74 ) }
    dend_34 { pt3dadd( -7.08069, -28.1305, 15.2075, 0.74 ) }
    dend_34 { pt3dadd( -7.4549, -29.3611, 14.9545, 2.14 ) }
    dend_34 { pt3dadd( -7.76252, -30.5231, 14.7342, 2.21 ) }
    dend_34 { pt3dadd( -8.0393, -31.9252, 14.533, 1.47 ) }
    dend_34 { pt3dadd( -8.15084, -33.0235, 14.4293, 1.18 ) }
    dend_34 { pt3dadd( -8.13128, -33.6726, 14.4059, 0.88 ) }
    dend_34 { pt3dadd( -7.92425, -34.6985, 14.4796, 0.59 ) }
    dend_34 { pt3dadd( -7.52211, -35.9013, 14.6671, 0.59 ) }
    dend_34 { pt3dadd( -7.05207, -37.0554, 14.9274, 1.18 ) }
    dend_34 { pt3dadd( -6.83092, -37.5486, 15.0815, 1.47 ) }
    dend_34 { pt3dadd( -6.51479, -38.2847, 15.3625, 1.11 ) }
    dend_34 { pt3dadd( -6.12991, -39.5226, 15.8773, 0.74 ) }
    dend_34 { pt3dadd( -6.22996, -40.126, 16.1263, 0.44 ) }
    dend_34 { pt3dadd( -6.79776, -40.711, 16.3395, 0.44 ) }
    dend_34 { pt3dadd( -7.43176, -41.1625, 16.4762, 0.52 ) }
    dend_34 { pt3dadd( -8.168, -41.5695, 16.6126, 0.52 ) }
    dend_34 { pt3dadd( -8.88175, -41.9082, 16.7262, 1.18 ) }
    dend_34 { pt3dadd( -9.85355, -42.3576, 16.8594, 1.92 ) }
    dend_34 { pt3dadd( -10.8654, -42.8939, 16.9774, 2.5 ) }
    dend_34 { pt3dadd( -11.8371, -43.5208, 17.0614, 2.36 ) }
    dend_34 { pt3dadd( -12.9835, -44.4018, 17.1244, 2.06 ) }
    dend_34 { pt3dadd( -13.8976, -45.2108, 17.1419, 0.59 ) }
    dend_34 { pt3dadd( -14.691, -45.9812, 17.1575, 0.52 ) }
    dend_34 { pt3dadd( -15.481, -46.8321, 17.1734, 0.44 ) }
    dend_34 { pt3dadd( -16.2597, -47.7506, 17.1499, 1.4 ) }
    dend_34 { pt3dadd( -16.9061, -48.5913, 17.1069, 1.84 ) }
    dend_34 { pt3dadd( -17.5908, -49.5692, 17.0292, 1.84 ) }
    dend_34 { pt3dadd( -18.1208, -50.3539, 16.9547, 1.69 ) }
    dend_34 { pt3dadd( -18.6891, -51.2227, 16.8634, 1.18 ) }
    dend_34 { pt3dadd( -19.2368, -52.1067, 16.7443, 0.74 ) }
    dend_34 { pt3dadd( -19.5583, -52.6699, 16.6321, 0.66 ) }
    dend_34 { pt3dadd( -19.9933, -53.5118, 16.4042, 0.59 ) }
    dend_34 { pt3dadd( -20.3385, -54.248, 16.1341, 0.52 ) }
    dend_34 { pt3dadd( -20.5754, -54.7702, 15.8958, 0.37 ) }
    dend_34 { pt3dadd( -20.9986, -55.7095, 15.4322, 0.29 ) }
    dend_34 { pt3dadd( -21.4049, -56.5752, 15.0017, 0.29 ) }
    dend_34 { pt3dadd( -21.4375, -56.6375, 14.9701, 0.29 ) }
    dend_34 { pt3dadd( -22.139, -57.8033, 14.4015, 1.77 ) }
    dend_34 { pt3dadd( -22.762, -58.7763, 14.0239, 2.36 ) }
    dend_34 { pt3dadd( -22.7923, -58.8226, 14.0089, 2.36 ) }
    dend_34 { pt3dadd( -23.1393, -59.363, 13.8777, 2.58 ) }
    dend_34 { pt3dadd( -23.5107, -59.9536, 13.7496, 2.58 ) }
    dend_34 { pt3dadd( -24.1186, -60.8995, 13.5409, 1.84 ) }
    dend_34 { pt3dadd( -24.7551, -61.9308, 13.318, 0.81 ) }
    dend_34 { pt3dadd( -25.2977, -62.8672, 13.1142, 0.52 ) }
    dend_34 { pt3dadd( -25.7473, -63.711, 12.9516, 0.44 ) }
    dend_34 { pt3dadd( -26.3268, -64.8662, 12.7615, 0.44 ) }
    dend_34 { pt3dadd( -26.785, -65.8835, 12.6497, 0.37 ) }
    dend_34 { pt3dadd( -27.045, -66.563, 12.6248, 0.37 ) }
    dend_34 { pt3dadd( -27.2637, -67.2251, 12.6411, 0.37 ) }
    dend_34 { pt3dadd( -27.5178, -68.144, 12.7362, 0.29 ) }
    dend_34 { pt3dadd( -27.6861, -68.911, 12.8382, 0.29 ) }
    dend_34 { pt3dadd( -27.8711, -70.1428, 13.0949, 1.99 ) }
    dend_34 { pt3dadd( -27.9678, -70.95, 13.317, 2.95 ) }
    dend_34 { pt3dadd( -28.027, -71.4495, 13.4807, 2.95 ) }
    dend_34 { pt3dadd( -28.2051, -73.1185, 14.0607, 0.59 ) }
    dend_34 { pt3dadd( -28.2729, -74.0868, 14.4188, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -28.3184, -75.4079, 14.941, 0.37 ) }
    dend_34 { pt3dadd( -28.3208, -76.3612, 15.3243, 0.37 ) }
    dend_34 { pt3dadd( -28.2577, -77.3041, 15.6921, 1.69 ) }
    dend_34 { pt3dadd( -28.1845, -77.8348, 15.8984, 2.58 ) }
    dend_34 { pt3dadd( -28.0247, -78.6363, 16.2044, 2.58 ) }
    dend_34 { pt3dadd( -27.7559, -79.9777, 16.6939, 0.29 ) }
    dend_34 { pt3dadd( -27.5997, -80.8955, 16.9671, 0.29 ) }
    dend_34 { pt3dadd( -27.4041, -82.1192, 17.363, 0.29 ) }
    dend_34 { pt3dadd( -27.2632, -83.0543, 17.6885, 0.66 ) }
    dend_34 { pt3dadd( -27.2157, -83.4007, 17.8233, 0.74 ) }
    dend_34 { pt3dadd( -27.1055, -84.2836, 18.1874, 0.29 ) }
    dend_34 { pt3dadd( -26.9971, -85.1237, 18.5896, 0.29 ) }
    dend_34 { pt3dadd( -26.8787, -86.51, 19.3084, 1.4 ) }
    dend_34 { pt3dadd( -26.8583, -86.9676, 19.5351, 1.92 ) }
    dend_34 { pt3dadd( -26.8533, -87.0291, 19.5608, 1.92 ) }
    dend_34 { pt3dadd( -26.802, -87.3704, 19.6831, 1.92 ) }
    dend_34 { pt3dadd( -26.5413, -88.6182, 20.0026, 0.22 ) }
    dend_34 { pt3dadd( -26.5248, -88.6827, 20.0142, 0.22 ) }
    dend_34 { pt3dadd( -26.2985, -89.4952, 20.1295, 0.66 ) }
    dend_34 { pt3dadd( -26.1982, -89.8247, 20.1775, 0.81 ) }
    dend_34 { pt3dadd( -25.8385, -90.8368, 20.304, 0.22 ) }
    dend_34 { pt3dadd( -25.4852, -91.764, 20.3996, 2.14 ) }
    dend_34 { pt3dadd( -25.1778, -92.5183, 20.4543, 2.58 ) }
    dend_34 { pt3dadd( -24.3877, -94.3055, 20.5721, 0.22 ) }
    dend_34 { pt3dadd( -23.9777, -95.1885, 20.6295, 0.22 ) }
    dend_34 { pt3dadd( -23.5029, -96.1804, 20.686, 0.22 ) }
    dend_34 { pt3dadd( -23.1275, -96.9334, 20.7132, 0.22 ) }
    dend_34 { pt3dadd( -22.7417, -97.6525, 20.7345, 2.36 ) }
    dend_34 { pt3dadd( -22.1338, -98.7465, 20.7308, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 34.1235, -11.6639, -98.2927, 0.15 ) }
    dend_31 { pt3dadd( 35.7547, -13.6317, -112.047, 0.15 ) }
    dend_31 { pt3dadd( 35.8797, -13.7803, -112.977, 1.69 ) }
    dend_31 { pt3dadd( 35.9465, -13.8588, -113.437, 1.92 ) }
    dend_31 { pt3dadd( 35.9573, -13.8709, -113.502, 1.92 ) }
    dend_31 { pt3dadd( 36.4136, -14.3442, -115.843, 0.22 ) }
    dend_31 { pt3dadd( 36.515, -14.442, -116.287, 0.22 ) }
    dend_31 { pt3dadd( 36.9873, -14.776, -116.808, 1.18 ) }
    dend_31 { pt3dadd( 37.0189, -14.8026, -116.849, 1.18 ) }
    dend_31 { pt3dadd( 37.6267, -15.3478, -117.714, 0.29 ) }
    dend_31 { pt3dadd( 37.8922, -15.5679, -118.087, 0.59 ) }
    dend_31 { pt3dadd( 38.4145, -15.9678, -118.795, 0.37 ) }
    dend_31 { pt3dadd( 39.3019, -16.5179, -119.996, 0.74 ) }
    dend_31 { pt3dadd( 39.3388, -16.5373, -120.047, 0.74 ) }
    dend_31 { pt3dadd( 40.0694, -16.9604, -121.18, 0.15 ) }
    dend_31 { pt3dadd( 40.4075, -17.1753, -121.793, 0.15 ) }
    dend_31 { pt3dadd( 40.4337, -17.1944, -121.841, 0.15 ) }
    dend_31 { pt3dadd( 40.6031, -17.3343, -122.158, 0.15 ) }
    dend_31 { pt3dadd( 40.6408, -17.3703, -122.221, 0.15 ) }
    dend_31 { pt3dadd( 41.1404, -17.8434, -122.99, 0.15 ) }
    dend_31 { pt3dadd( 41.5346, -18.2178, -123.562, 1.4 ) }
    dend_31 { pt3dadd( 41.8072, -18.4717, -123.948, 1.69 ) }
    dend_31 { pt3dadd( 43.0183, -19.579, -125.624, 0.22 ) }
    dend_31 { pt3dadd( 43.4334, -19.9481, -126.191, 0.22 ) }
    dend_31 { pt3dadd( 43.9414, -20.3851, -126.824, 0.22 ) }
    dend_31 { pt3dadd( 44.3174, -20.6803, -127.231, 0.96 ) }
    dend_31 { pt3dadd( 44.4719, -20.8066, -127.383, 0.96 ) }
    dend_31 { pt3dadd( 45.1887, -21.3576, -128.023, 0.22 ) }
    dend_31 { pt3dadd( 45.2226, -21.383, -128.049, 0.22 ) }
    dend_31 { pt3dadd( 45.8836, -21.8929, -128.56, 0.22 ) }
    dend_31 { pt3dadd( 46.5273, -22.4406, -129.019, 1.55 ) }
    dend_31 { pt3dadd( 46.8798, -22.7258, -129.235, 1.99 ) }
    dend_31 { pt3dadd( 47.8794, -23.5249, -129.873, 0.29 ) }
    dend_31 { pt3dadd( 47.9203, -23.5564, -129.9, 0.29 ) }
    dend_31 { pt3dadd( 48.5055, -24.0244, -130.353, 0.29 ) }
    dend_31 { pt3dadd( 49.244, -24.6779, -131.009, 0.29 ) }
    dend_31 { pt3dadd( 49.4824, -24.9293, -131.272, 0.29 ) }
    dend_31 { pt3dadd( 50.2937, -25.9311, -132.443, 1.4 ) }
    dend_31 { pt3dadd( 50.5331, -26.286, -132.888, 1.69 ) }
    dend_31 { pt3dadd( 51.1401, -27.2705, -134.177, 0.29 ) }
    dend_31 { pt3dadd( 51.5214, -27.9937, -135.169, 0.29 ) }
    dend_31 { pt3dadd( 51.9394, -28.9385, -136.465, 1.47 ) }
    dend_31 { pt3dadd( 52.3237, -30.0165, -137.886, 1.18 ) }
    dend_31 { pt3dadd( 52.6097, -31.0348, -139.138, 0.22 ) }
    dend_31 { pt3dadd( 52.7012, -31.4692, -139.627, 0.22 ) }
    dend_31 { pt3dadd( 52.8209, -32.323, -140.483, 1.69 ) }
    dend_31 { pt3dadd( 52.8585, -32.7283, -140.842, 1.77 ) }
    dend_31 { pt3dadd( 52.9042, -33.7964, -141.543, 0.66 ) }
    dend_31 { pt3dadd( 52.895, -34.3634, -141.817, 0.22 ) }
    dend_31 { pt3dadd( 52.8549, -35.0771, -142.108, 0.96 ) }
    dend_31 { pt3dadd( 52.8106, -35.8113, -142.427, 0.22 ) }
    dend_31 { pt3dadd( 52.8037, -36.1642, -142.634, 0.15 ) }
    dend_31 { pt3dadd( 52.828, -36.7646, -143.137, 0.15 ) }
    dend_31 { pt3dadd( 52.9, -37.4928, -143.836, 0.44 ) }
    dend_31 { pt3dadd( 52.9633, -38.0836, -144.464, 1.33 ) }
    dend_31 { pt3dadd( 53.0152, -38.5956, -145.042, 1.25 ) }
    dend_31 { pt3dadd( 53.0827, -40.2825, -147.038, 1.25 ) }
    dend_31 { pt3dadd( 53.0951, -41.4595, -148.498, 0.15 ) }
    dend_31 { pt3dadd( 53.0888, -41.8936, -149.044, 0.15 ) }
    dend_31 { pt3dadd( 53.0431, -42.4746, -149.772, 0.81 ) }
    dend_31 { pt3dadd( 53.0153, -42.7058, -150.05, 0.96 ) }
    dend_31 { pt3dadd( 52.8766, -43.8117, -151.268, 0.52 ) }
    dend_31 { pt3dadd( 52.7715, -44.7643, -152.218, 0.22 ) }
    dend_31 { pt3dadd( 52.7343, -45.2148, -152.654, 1.18 ) }
    dend_31 { pt3dadd( 52.6834, -46.9232, -154.376, 0.22 ) }
    dend_31 { pt3dadd( 52.6979, -47.509, -154.968, 0.96 ) }
    dend_31 { pt3dadd( 52.7939, -48.6882, -156.151, 0.22 ) }
    dend_31 { pt3dadd( 52.8499, -49.0311, -156.48, 0.52 ) }
    dend_31 { pt3dadd( 52.8717, -49.164, -156.602, 0.52 ) }
    dend_31 { pt3dadd( 53.1333, -50.526, -157.867, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 34.1235, -11.6639, -98.2927, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 34.621, -9.83634, -102.836, 1.55 ) }
    dend_30 { pt3dadd( 34.7627, -9.47629, -103.702, 1.62 ) }
    dend_30 { pt3dadd( 35.8082, -7.53324, -108.254, 0.22 ) }
    dend_30 { pt3dadd( 35.8329, -7.49578, -108.34, 0.22 ) }
    dend_30 { pt3dadd( 36.1735, -7.08209, -109.328, 1.33 ) }
    dend_30 { pt3dadd( 36.3881, -6.85688, -109.87, 1.25 ) }
    dend_30 { pt3dadd( 37.8028, -5.73178, -112.415, 0.22 ) }
    dend_30 { pt3dadd( 38.4223, -5.30337, -113.377, 1.18 ) }
    dend_30 { pt3dadd( 38.7713, -5.09362, -113.807, 1.33 ) }
    dend_30 { pt3dadd( 40.384, -4.15396, -115.7, 0.22 ) }
    dend_30 { pt3dadd( 41.5306, -3.50803, -116.999, 1.84 ) }
    dend_30 { pt3dadd( 41.8707, -3.30488, -117.359, 1.84 ) }
    dend_30 { pt3dadd( 42.8959, -2.65706, -118.288, 0.29 ) }
    dend_30 { pt3dadd( 43.1602, -2.47815, -118.516, 0.74 ) }
    dend_30 { pt3dadd( 44.253, -1.67771, -119.393, 0.22 ) }
    dend_30 { pt3dadd( 44.3665, -1.58137, -119.477, 0.22 ) }
    dend_30 { pt3dadd( 44.8312, -1.1438, -119.832, 0.88 ) }
    dend_30 { pt3dadd( 45.8661, 0.0424979, -120.898, 0.22 ) }
    dend_30 { pt3dadd( 46.0559, 0.299158, -121.138, 0.52 ) }
    dend_30 { pt3dadd( 46.3622, 0.757186, -121.58, 0.22 ) }
    dend_30 { pt3dadd( 47.0244, 1.8022, -122.652, 1.92 ) }
    dend_30 { pt3dadd( 47.3084, 2.27787, -123.149, 1.92 ) }
    dend_30 { pt3dadd( 48.131, 3.81246, -124.779, 0.22 ) }
    dend_30 { pt3dadd( 48.2524, 4.07329, -125.046, 0.88 ) }
    dend_30 { pt3dadd( 48.3582, 4.29462, -125.273, 0.88 ) }
    dend_30 { pt3dadd( 48.8258, 5.18324, -126.156, 0.22 ) }
    dend_30 { pt3dadd( 49.0624, 5.60051, -126.573, 0.22 ) }
    dend_30 { pt3dadd( 49.0878, 5.65013, -126.623, 0.22 ) }
    dend_30 { pt3dadd( 49.2311, 5.87775, -126.867, 0.22 ) }
    dend_30 { pt3dadd( 49.8505, 6.75407, -127.892, 1.4 ) }
    dend_30 { pt3dadd( 49.9957, 6.94385, -128.119, 1.4 ) }
    dend_30 { pt3dadd( 50.8029, 7.91458, -129.31, 0.22 ) }
    dend_30 { pt3dadd( 51.1398, 8.24623, -129.747, 0.96 ) }
    dend_30 { pt3dadd( 51.9875, 8.97338, -130.724, 0.22 ) }
    dend_30 { pt3dadd( 52.2329, 9.15158, -130.972, 0.22 ) }
    dend_30 { pt3dadd( 52.6348, 9.36439, -131.277, 0.66 ) }
    dend_30 { pt3dadd( 53.2578, 9.60423, -131.642, 0.66 ) }
    dend_30 { pt3dadd( 54.4239, 9.88723, -132.11, 0.22 ) }
    dend_30 { pt3dadd( 55.0145, 9.97677, -132.296, 1.11 ) }
    dend_30 { pt3dadd( 55.4094, 10.0053, -132.396, 1.4 ) }
    dend_30 { pt3dadd( 57.0602, 9.95677, -132.775, 0.22 ) }
    dend_30 { pt3dadd( 57.8123, 9.86913, -132.926, 0.22 ) }
    dend_30 { pt3dadd( 58.7276, 9.69555, -133.076, 0.96 ) }
    dend_30 { pt3dadd( 59.4982, 9.51545, -133.19, 1.47 ) }
    dend_30 { pt3dadd( 60.7785, 9.18257, -133.389, 0.22 ) }
    dend_30 { pt3dadd( 61.4488, 9.0145, -133.542, 0.22 ) }
    dend_30 { pt3dadd( 61.567, 8.9846, -133.58, 0.22 ) }
    dend_30 { pt3dadd( 62.2929, 8.8305, -133.852, 0.22 ) }
    dend_30 { pt3dadd( 63.3171, 8.64487, -134.291, 1.33 ) }
    dend_30 { pt3dadd( 63.7676, 8.58999, -134.504, 1.62 ) }
    dend_30 { pt3dadd( 65.3601, 8.49147, -135.317, 0.22 ) }
    dend_30 { pt3dadd( 66.0793, 8.46627, -135.686, 0.66 ) }
    dend_30 { pt3dadd( 66.501, 8.44858, -135.909, 0.66 ) }
    dend_30 { pt3dadd( 66.6303, 8.44083, -135.981, 0.66 ) }
    dend_30 { pt3dadd( 67.9015, 8.34301, -136.695, 0.22 ) }
    dend_30 { pt3dadd( 68.811, 8.24835, -137.278, 1.11 ) }
    dend_30 { pt3dadd( 69.4348, 8.16755, -137.7, 1.33 ) }
    dend_30 { pt3dadd( 70.7723, 7.9828, -138.674, 0.22 ) }
    dend_30 { pt3dadd( 71.7102, 7.86996, -139.41, 1.25 ) }
    dend_30 { pt3dadd( 72.0912, 7.83481, -139.771, 1.33 ) }
    dend_30 { pt3dadd( 73.8351, 7.6996, -141.657, 0.22 ) }
    dend_30 { pt3dadd( 74.0452, 7.68767, -141.903, 0.44 ) }
    dend_30 { pt3dadd( 74.1362, 7.68588, -142.02, 0.44 ) }
    dend_30 { pt3dadd( 74.8457, 7.70319, -143.039, 1.18 ) }
    dend_30 { pt3dadd( 76.4839, 7.84534, -145.559, 0.22 ) }
    dend_30 { pt3dadd( 76.8584, 7.89946, -146.169, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.937, -30.4012, -51.9704, 1.55 ) }
    dend_28 { pt3dadd( -11.8149, -31.3813, -54.1878, 1.55 ) }
    dend_28 { pt3dadd( -12.6178, -32.0643, -56.0502, 0.22 ) }
    dend_28 { pt3dadd( -12.9599, -32.3776, -56.8284, 0.22 ) }
    dend_28 { pt3dadd( -13.5249, -32.9402, -58.2863, 2.36 ) }
    dend_28 { pt3dadd( -13.956, -33.4074, -59.6657, 2.87 ) }
    dend_28 { pt3dadd( -15.7792, -35.1652, -65.8352, 0.81 ) }
    dend_28 { pt3dadd( -15.7957, -35.1772, -65.8988, 0.81 ) }
    dend_28 { pt3dadd( -16.1311, -35.3993, -67.5522, 0.81 ) }
    dend_28 { pt3dadd( -16.5285, -35.7195, -70.7565, 2.06 ) }
    dend_28 { pt3dadd( -16.6921, -35.9979, -74.1193, 1.25 ) }
    dend_28 { pt3dadd( -16.661, -36.2362, -76.5703, 0.81 ) }
    dend_28 { pt3dadd( -16.3846, -36.8717, -81.1322, 0.96 ) }
    dend_28 { pt3dadd( -16.3695, -37.0072, -82.0842, 1.47 ) }
    dend_28 { pt3dadd( -16.4038, -37.2901, -84.0933, 0.22 ) }
    dend_28 { pt3dadd( -16.426, -37.436, -84.9212, 0.22 ) }
    dend_28 { pt3dadd( -16.5013, -37.8226, -87.201, 1.4 ) }
    dend_28 { pt3dadd( -16.5883, -38.2791, -89.8225, 1.03 ) }
    dend_28 { pt3dadd( -16.7281, -38.7048, -92.1434, 1.69 ) }
    dend_28 { pt3dadd( -16.9163, -39.2031, -94.8812, 1.4 ) }
    dend_28 { pt3dadd( -17.0573, -39.6858, -97.614, 1.4 ) }
    dend_28 { pt3dadd( -17.1292, -40.5519, -102.564, 1.84 ) }
    dend_28 { pt3dadd( -16.9792, -41.2206, -106.287, 0.15 ) }
    dend_28 { pt3dadd( -16.8465, -41.4893, -107.58, 1.84 ) }
    dend_28 { pt3dadd( -16.7709, -41.6057, -108.048, 1.84 ) }
    dend_28 { pt3dadd( -16.2173, -42.4751, -110.89, 0.22 ) }
    dend_28 { pt3dadd( -15.983, -42.824, -111.984, 1.55 ) }
    dend_28 { pt3dadd( -15.8768, -42.9275, -112.34, 1.77 ) }
    dend_28 { pt3dadd( -15.298, -43.2368, -114.177, 0.22 ) }
    dend_28 { pt3dadd( -15.1163, -43.2931, -114.747, 0.22 ) }
    dend_28 { pt3dadd( -14.6727, -43.3868, -116.077, 1.77 ) }
    dend_28 { pt3dadd( -12.6199, -43.619, -122.001, 1.25 ) }
    dend_28 { pt3dadd( -11.7115, -43.6583, -124.522, 0.81 ) }
    dend_28 { pt3dadd( -11.0621, -43.6705, -126.273, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -10.7722, -43.6641, -127.035, 0.37 ) }
    dend_28 { pt3dadd( -10.2484, -43.6695, -128.288, 0.22 ) }
    dend_28 { pt3dadd( -9.48792, -43.6842, -129.836, 1.77 ) }
    dend_28 { pt3dadd( -9.24312, -43.7059, -130.233, 1.84 ) }
    dend_28 { pt3dadd( -7.33046, -43.9243, -133.289, 0.96 ) }
    dend_28 { pt3dadd( -6.68329, -44.0023, -134.285, 1.4 ) }
    dend_28 { pt3dadd( -5.44641, -44.0731, -136.228, 0.22 ) }
    dend_28 { pt3dadd( -5.19104, -44.0637, -136.618, 0.22 ) }
    dend_28 { pt3dadd( -5.09337, -44.0499, -136.747, 0.22 ) }
    dend_28 { pt3dadd( -4.33541, -43.884, -137.6, 0.22 ) }
    dend_28 { pt3dadd( -3.86782, -43.7566, -137.952, 1.18 ) }
    dend_28 { pt3dadd( -3.80388, -43.7407, -137.991, 1.18 ) }
    dend_28 { pt3dadd( -3.25921, -43.6007, -138.278, 1.18 ) }
    dend_28 { pt3dadd( -1.6763, -43.2948, -139.108, 0.29 ) }
    dend_28 { pt3dadd( -1.00105, -43.1807, -139.477, 0.44 ) }
    dend_28 { pt3dadd( -0.452038, -43.0849, -139.778, 0.44 ) }
    dend_28 { pt3dadd( 0.430455, -42.9261, -140.245, 0.22 ) }
    dend_28 { pt3dadd( 1.46995, -42.7351, -140.775, 1.47 ) }
    dend_28 { pt3dadd( 2.00684, -42.6416, -141.036, 1.62 ) }
    dend_28 { pt3dadd( 3.52206, -42.3834, -141.699, 0.22 ) }
    dend_28 { pt3dadd( 4.31311, -42.2467, -142.074, 0.22 ) }
    dend_28 { pt3dadd( 4.755, -42.1946, -142.307, 0.59 ) }
    dend_28 { pt3dadd( 4.8126, -42.1983, -142.34, 0.59 ) }
    dend_28 { pt3dadd( 5.07779, -42.2979, -142.557, 0.59 ) }
    dend_28 { pt3dadd( 5.17734, -42.386, -142.738, 0.59 ) }
    dend_28 { pt3dadd( 5.49157, -42.9037, -143.685, 0.15 ) }
    dend_28 { pt3dadd( 5.63331, -43.1999, -144.212, 1.18 ) }
    dend_28 { pt3dadd( 5.78318, -43.554, -144.852, 1.18 ) }
    dend_28 { pt3dadd( 6.13251, -44.5018, -146.591, 0.44 ) }
    dend_28 { pt3dadd( 6.52142, -45.8808, -149.06, 0.22 ) }
    dend_28 { pt3dadd( 6.56219, -46.1852, -149.61, 0.22 ) }
    dend_28 { pt3dadd( 6.53076, -46.3806, -150.033, 0.74 ) }
    dend_28 { pt3dadd( 6.50035, -46.4277, -150.154, 0.74 ) }
    dend_28 { pt3dadd( 5.90834, -46.9202, -151.669, 0.22 ) }
    dend_28 { pt3dadd( 5.62329, -47.1044, -152.262, 0.22 ) }
    dend_28 { pt3dadd( 4.52348, -47.6696, -154.237, 1.47 ) }
    dend_28 { pt3dadd( 3.10863, -48.2519, -156.538, 1.33 ) }
    dend_28 { pt3dadd( 1.57594, -48.8129, -158.926, 0.59 ) }
    dend_28 { pt3dadd( 0.50219, -49.1572, -160.523, 0.44 ) }
    dend_28 { pt3dadd( 0.135032, -49.2502, -161.028, 0.44 ) }
    dend_28 { pt3dadd( -0.813392, -49.452, -162.297, 0.22 ) }
    dend_28 { pt3dadd( -1.40393, -49.5714, -162.991, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.937, -30.4012, -51.9704, 2.87 ) }
    dend_25 { pt3dadd( -11.6866, -30.5991, -52.3482, 2.87 ) }
    dend_25 { pt3dadd( -13.0197, -30.96, -52.917, 2.73 ) }
    dend_25 { pt3dadd( -15.3077, -31.579, -53.7973, 0.29 ) }
    dend_25 { pt3dadd( -15.6039, -31.6585, -53.9258, 0.29 ) }
    dend_25 { pt3dadd( -17.3176, -32.1043, -54.6819, 0.29 ) }
    dend_25 { pt3dadd( -19.035, -32.5057, -55.4496, 1.55 ) }
    dend_25 { pt3dadd( -19.8369, -32.6505, -55.7772, 2.21 ) }
    dend_25 { pt3dadd( -20.2001, -32.6984, -55.9368, 2.21 ) }
    dend_25 { pt3dadd( -22.6388, -32.9629, -57.1956, 0.22 ) }
    dend_25 { pt3dadd( -23.4513, -33.043, -57.7092, 0.22 ) }
    dend_25 { pt3dadd( -24.1568, -33.1038, -58.24, 0.66 ) }
    dend_25 { pt3dadd( -24.4319, -33.1113, -58.4609, 0.81 ) }
    dend_25 { pt3dadd( -26.0644, -33.0908, -59.7505, 0.22 ) }
    dend_25 { pt3dadd( -26.7204, -33.0704, -60.2275, 0.22 ) }
    dend_25 { pt3dadd( -27.9071, -33.0295, -61.0168, 1.84 ) }
    dend_25 { pt3dadd( -28.516, -33.0214, -61.4285, 2.21 ) }
    dend_25 { pt3dadd( -29.489, -33.0651, -62.1632, 2.06 ) }
    dend_25 { pt3dadd( -31.0702, -33.2097, -63.489, 0.29 ) }
    dend_25 { pt3dadd( -31.7258, -33.3265, -64.1297, 0.29 ) }
    dend_25 { pt3dadd( -33.0136, -33.6614, -65.5774, 1.69 ) }
    dend_25 { pt3dadd( -33.5335, -33.8448, -66.2256, 1.99 ) }
    dend_25 { pt3dadd( -35.2931, -34.6189, -68.6095, 1.11 ) }
    dend_25 { pt3dadd( -36.0245, -35.0562, -69.7051, 1.11 ) }
    dend_25 { pt3dadd( -37.1116, -35.9495, -71.5745, 0.29 ) }
    dend_25 { pt3dadd( -37.447, -36.2974, -72.2206, 0.29 ) }
    dend_25 { pt3dadd( -37.5397, -36.4265, -72.43, 0.52 ) }
    dend_25 { pt3dadd( -37.7658, -36.8296, -72.9969, 0.52 ) }
    dend_25 { pt3dadd( -37.9401, -37.3812, -73.6804, 0.22 ) }
    dend_25 { pt3dadd( -37.9999, -37.7589, -74.1421, 0.22 ) }
    dend_25 { pt3dadd( -38.0033, -37.8086, -74.2014, 0.22 ) }
    dend_25 { pt3dadd( -38.078, -40.0849, -76.8182, 2.06 ) }
    dend_25 { pt3dadd( -38.1054, -40.6948, -77.4957, 2.36 ) }
    dend_25 { pt3dadd( -38.3003, -42.6009, -79.6146, 0.22 ) }
    dend_25 { pt3dadd( -38.3616, -43.0521, -80.1463, 0.22 ) }
    dend_25 { pt3dadd( -38.4428, -43.58, -80.7437, 0.22 ) }
    dend_25 { pt3dadd( -38.5902, -44.5972, -81.8102, 1.33 ) }
    dend_25 { pt3dadd( -38.6878, -45.3227, -82.575, 1.47 ) }
    dend_25 { pt3dadd( -38.9273, -46.7493, -84.1803, 0.22 ) }
    dend_25 { pt3dadd( -39.2919, -48.1326, -86.1081, 0.22 ) }
    dend_25 { pt3dadd( -39.4739, -48.7569, -87.0577, 1.4 ) }
    dend_25 { pt3dadd( -39.5587, -49.054, -87.544, 1.69 ) }
    dend_25 { pt3dadd( -40.0298, -51.0474, -90.9097, 0.22 ) }
    dend_25 { pt3dadd( -40.1723, -51.8713, -92.3894, 1.92 ) }
    dend_25 { pt3dadd( -40.4433, -53.8674, -96.4621, 0.29 ) }
    dend_25 { pt3dadd( -40.4907, -54.2828, -97.4404, 0.29 ) }
    dend_25 { pt3dadd( -40.4934, -54.3444, -97.5949, 0.29 ) }
    dend_25 { pt3dadd( -40.4986, -54.8167, -98.7044, 0.74 ) }
    dend_25 { pt3dadd( -40.4521, -55.7048, -100.579, 1.55 ) }
    dend_25 { pt3dadd( -40.2171, -57.894, -104.814, 1.47 ) }
    dend_25 { pt3dadd( -39.905, -59.9698, -108.422, 0.29 ) }
    dend_25 { pt3dadd( -39.8302, -60.5116, -109.351, 0.29 ) }
    dend_25 { pt3dadd( -39.7151, -61.5088, -110.954, 1.4 ) }
    dend_25 { pt3dadd( -39.5566, -63.2571, -113.506, 1.69 ) }
    dend_25 { pt3dadd( -39.5051, -63.6871, -114.044, 1.69 ) }
    dend_25 { pt3dadd( -39.0012, -66.227, -116.767, 0.22 ) }
    dend_25 { pt3dadd( -38.9732, -66.3376, -116.888, 0.22 ) }
    dend_25 { pt3dadd( -38.8305, -66.8105, -117.441, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -38.582, -67.5237, -118.323, 1.47 ) }
    dend_25 { pt3dadd( -37.936, -69.3719, -120.558, 0.22 ) }
    dend_25 { pt3dadd( -37.7656, -69.8406, -121.118, 1.4 ) }
    dend_25 { pt3dadd( -37.1601, -71.3408, -123.06, 1.4 ) }
    dend_25 { pt3dadd( -36.6517, -72.5245, -124.695, 0.22 ) }
    dend_25 { pt3dadd( -36.0844, -73.7542, -126.726, 1.62 ) }
    dend_25 { pt3dadd( -36.0671, -73.7904, -126.793, 1.62 ) }
    dend_25 { pt3dadd( -35.923, -74.1491, -127.512, 1.62 ) }
    dend_25 { pt3dadd( -35.4066, -75.8521, -131.151, 0.15 ) }
    dend_25 { pt3dadd( -35.3338, -76.2011, -131.945, 1.4 ) }
    dend_25 { pt3dadd( -35.2263, -77.8763, -136.311, 1.11 ) }
    dend_25 { pt3dadd( -35.2286, -77.9005, -136.373, 1.11 ) }
    dend_25 { pt3dadd( -35.4411, -78.747, -138.397, 0.37 ) }
    dend_25 { pt3dadd( -35.6051, -79.1116, -139.176, 0.74 ) }
    dend_25 { pt3dadd( -35.7488, -79.3418, -139.581, 0.88 ) }
    dend_25 { pt3dadd( -36.7429, -80.8657, -141.921, 0.22 ) }
    dend_25 { pt3dadd( -37.1958, -81.6256, -142.709, 1.33 ) }
    dend_25 { pt3dadd( -37.5401, -82.4211, -143.328, 1.11 ) }
    dend_25 { pt3dadd( -37.8814, -83.4447, -143.997, 0.22 ) }
    dend_25 { pt3dadd( -37.8986, -83.5103, -144.035, 0.22 ) }
    dend_25 { pt3dadd( -38.1415, -84.692, -144.577, 0.22 ) }
    dend_25 { pt3dadd( -38.3379, -85.9846, -144.796, 0.22 ) }
    dend_25 { pt3dadd( -38.4837, -87.9317, -145.002, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 23/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 4.58378, 60.834, -52.0959, 0.22 ) }
    dend_22 { pt3dadd( 3.90569, 63.2148, -52.3148, 0.22 ) }
    dend_22 { pt3dadd( 3.85862, 63.3961, -52.3296, 0.22 ) }
    dend_22 { pt3dadd( 3.55286, 64.8141, -52.5247, 0.22 ) }
    dend_22 { pt3dadd( 3.41145, 65.9022, -52.7973, 0.66 ) }
    dend_22 { pt3dadd( 3.40237, 66.0686, -52.8496, 0.66 ) }
    dend_22 { pt3dadd( 3.41314, 66.6363, -53.0919, 0.66 ) }
    dend_22 { pt3dadd( 3.42874, 66.7164, -53.1379, 0.66 ) }
    dend_22 { pt3dadd( 3.69785, 67.6623, -53.7678, 0.22 ) }
    dend_22 { pt3dadd( 4.19774, 68.8426, -54.6763, 0.88 ) }
    dend_22 { pt3dadd( 4.4095, 69.2426, -54.9925, 0.88 ) }
    dend_22 { pt3dadd( 5.16157, 70.4736, -55.9437, 0.29 ) }
    dend_22 { pt3dadd( 5.23456, 70.5776, -56.0079, 0.29 ) }
    dend_22 { pt3dadd( 5.85178, 71.4334, -56.3773, 0.29 ) }
    dend_22 { pt3dadd( 6.76482, 72.6953, -56.6532, 1.03 ) }
    dend_22 { pt3dadd( 7.17234, 73.2715, -56.6969, 1.25 ) }
    dend_22 { pt3dadd( 8.1971, 74.7851, -56.6922, 0.37 ) }
    dend_22 { pt3dadd( 9.55109, 76.7747, -56.5592, 0.22 ) }
    dend_22 { pt3dadd( 10.6537, 78.4309, -56.4016, 0.22 ) }
    dend_22 { pt3dadd( 11.5604, 79.8478, -56.1948, 0.81 ) }
    dend_22 { pt3dadd( 12.289, 81.0659, -55.9287, 0.22 ) }
    dend_22 { pt3dadd( 12.6172, 81.6625, -55.7731, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.58378, 60.834, -52.0959, 0.81 ) }
    dend_21 { pt3dadd( 5.34599, 61.9276, -53.0867, 0.81 ) }
    dend_21 { pt3dadd( 5.81203, 62.4573, -53.6196, 0.22 ) }
    dend_21 { pt3dadd( 6.20797, 62.8675, -54.0257, 0.22 ) }
    dend_21 { pt3dadd( 6.63277, 63.3008, -54.4336, 1.18 ) }
    dend_21 { pt3dadd( 6.9653, 63.6259, -54.7181, 1.18 ) }
    dend_21 { pt3dadd( 7.00311, 63.6624, -54.7505, 1.18 ) }
    dend_21 { pt3dadd( 7.84719, 64.4545, -55.3544, 0.29 ) }
    dend_21 { pt3dadd( 8.25712, 64.7996, -55.6277, 0.44 ) }
    dend_21 { pt3dadd( 8.43155, 64.9667, -55.8467, 0.44 ) }
    dend_21 { pt3dadd( 8.82544, 65.4455, -56.5789, 0.22 ) }
    dend_21 { pt3dadd( 9.04716, 65.7843, -57.1197, 1.18 ) }
    dend_21 { pt3dadd( 9.08299, 65.9774, -57.533, 1.47 ) }
    dend_21 { pt3dadd( 9.04905, 66.1105, -57.8749, 1.47 ) }
    dend_21 { pt3dadd( 8.44842, 67.351, -61.1089, 0.52 ) }
    dend_21 { pt3dadd( 8.30652, 67.5457, -61.6648, 0.81 ) }
    dend_21 { pt3dadd( 8.19559, 67.6642, -62.0243, 0.81 ) }
    dend_21 { pt3dadd( 6.64688, 69.0204, -66.4456, 1.11 ) }
    dend_21 { pt3dadd( 5.52744, 69.7865, -69.1834, 0.59 ) }
    dend_21 { pt3dadd( 4.98911, 70.0658, -70.296, 0.29 ) }
    dend_21 { pt3dadd( 4.1013, 70.3566, -71.7488, 0.74 ) }
    dend_21 { pt3dadd( 4.05972, 70.3627, -71.8046, 0.74 ) }
    dend_21 { pt3dadd( 3.55282, 70.3198, -72.2673, 0.81 ) }
    dend_21 { pt3dadd( 2.46236, 69.8592, -72.5387, 0.29 ) }
    dend_21 { pt3dadd( 1.68776, 69.43, -72.5786, 0.29 ) }
    dend_21 { pt3dadd( 0.561346, 68.7375, -72.5664, 0.29 ) }
    dend_21 { pt3dadd( -0.581534, 68.0284, -72.4641, 0.29 ) }
    dend_21 { pt3dadd( -1.78904, 67.2769, -72.3481, 0.22 ) }
    dend_21 { pt3dadd( -2.54081, 66.81, -72.2647, 0.59 ) }
    dend_21 { pt3dadd( -2.75311, 66.664, -72.2331, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.6958, 62.3684, -23.0498, 0.22 ) }
    dend_19 { pt3dadd( -3.06324, 63.5745, -22.2043, 0.22 ) }
    dend_19 { pt3dadd( -3.39442, 63.8578, -22.0365, 0.66 ) }
    dend_19 { pt3dadd( -4.02511, 64.394, -21.7558, 0.22 ) }
    dend_19 { pt3dadd( -4.66487, 64.9295, -21.495, 1.4 ) }
    dend_19 { pt3dadd( -5.00849, 65.2035, -21.3555, 1.4 ) }
    dend_19 { pt3dadd( -6.35911, 66.2692, -20.8127, 0.22 ) }
    dend_19 { pt3dadd( -7.10401, 66.8235, -20.571, 0.22 ) }
    dend_19 { pt3dadd( -8.19632, 67.6191, -20.2487, 1.47 ) }
    dend_19 { pt3dadd( -8.42464, 67.7877, -20.1878, 1.84 ) }
    dend_19 { pt3dadd( -9.92927, 68.9298, -19.8419, 0.22 ) }
    dend_19 { pt3dadd( -10.1772, 69.122, -19.7912, 0.52 ) }
    dend_19 { pt3dadd( -10.9871, 69.7808, -19.6787, 0.15 ) }
    dend_19 { pt3dadd( -11.4747, 70.199, -19.6285, 0.88 ) }
    dend_19 { pt3dadd( -12.0543, 70.7297, -19.6039, 0.22 ) }
    dend_19 { pt3dadd( -12.8126, 71.4703, -19.6147, 1.84 ) }
    dend_19 { pt3dadd( -13.0755, 71.7405, -19.6398, 1.99 ) }
    dend_19 { pt3dadd( -14.278, 72.9786, -19.763, 0.22 ) }
    dend_19 { pt3dadd( -14.6383, 73.3594, -19.8025, 1.11 ) }
    dend_19 { pt3dadd( -14.9453, 73.6856, -19.8294, 1.25 ) }
    dend_19 { pt3dadd( -15.7127, 74.4716, -19.8658, 0.15 ) }
    dend_19 { pt3dadd( -16.131, 74.8858, -19.8572, 0.44 ) }
    dend_19 { pt3dadd( -16.297, 75.0452, -19.8441, 0.44 ) }
    dend_19 { pt3dadd( -16.3481, 75.0931, -19.8364, 0.44 ) }
    dend_19 { pt3dadd( -17.1842, 75.8573, -19.6532, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -17.7322, 76.374, -19.5035, 0.15 ) }
    dend_19 { pt3dadd( -17.7681, 76.4101, -19.4914, 0.15 ) }
    dend_19 { pt3dadd( -18.038, 76.7015, -19.3995, 0.66 ) }
    dend_19 { pt3dadd( -18.3741, 77.0897, -19.2997, 0.81 ) }
    dend_19 { pt3dadd( -19.0596, 77.921, -19.1369, 0.15 ) }
    dend_19 { pt3dadd( -19.3211, 78.2556, -19.0941, 0.15 ) }
    dend_19 { pt3dadd( -19.9061, 79.0457, -19.0294, 1.47 ) }
    dend_19 { pt3dadd( -20.1801, 79.4297, -19.0081, 1.47 ) }
    dend_19 { pt3dadd( -20.6873, 80.1612, -18.9842, 0.22 ) }
    dend_19 { pt3dadd( -20.9091, 80.496, -18.9973, 0.52 ) }
    dend_19 { pt3dadd( -21.0083, 80.6517, -19.0162, 0.52 ) }
    dend_19 { pt3dadd( -21.4053, 81.2797, -19.1198, 0.15 ) }
    dend_19 { pt3dadd( -21.8666, 82.0102, -19.3126, 1.33 ) }
    dend_19 { pt3dadd( -22.0336, 82.2722, -19.3943, 1.69 ) }
    dend_19 { pt3dadd( -22.5537, 83.0746, -19.6961, 0.22 ) }
    dend_19 { pt3dadd( -22.8142, 83.4807, -19.8571, 0.59 ) }
    dend_19 { pt3dadd( -23.0352, 83.8248, -20.0032, 0.59 ) }
    dend_19 { pt3dadd( -23.432, 84.4295, -20.2929, 0.15 ) }
    dend_19 { pt3dadd( -24.0751, 85.3899, -20.8084, 1.33 ) }
    dend_19 { pt3dadd( -24.3428, 85.7877, -21.0269, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.6958, 62.3684, -23.0498, 0.29 ) }
    dend_16 { pt3dadd( -2.84722, 63.3597, -24.3531, 0.29 ) }
    dend_16 { pt3dadd( -3.29837, 63.7413, -24.8267, 0.52 ) }
    dend_16 { pt3dadd( -4.00821, 64.3371, -25.5079, 0.74 ) }
    dend_16 { pt3dadd( -4.29434, 64.5741, -25.759, 0.88 ) }
    dend_16 { pt3dadd( -5.06727, 65.2261, -26.3942, 0.15 ) }
    dend_16 { pt3dadd( -5.35716, 65.4835, -26.6198, 0.15 ) }
    dend_16 { pt3dadd( -5.74367, 65.865, -26.8698, 1.33 ) }
    dend_16 { pt3dadd( -6.12876, 66.2735, -27.0857, 1.77 ) }
    dend_16 { pt3dadd( -6.88149, 67.0962, -27.432, 0.22 ) }
    dend_16 { pt3dadd( -7.19566, 67.4538, -27.5542, 0.22 ) }
    dend_16 { pt3dadd( -7.6091, 67.983, -27.6868, 0.88 ) }
    dend_16 { pt3dadd( -7.79513, 68.2522, -27.7499, 0.88 ) }
    dend_16 { pt3dadd( -8.23021, 68.9601, -27.9022, 0.15 ) }
    dend_16 { pt3dadd( -8.49627, 69.5106, -27.979, 0.15 ) }
    dend_16 { pt3dadd( -8.65273, 69.9659, -28.0066, 0.15 ) }
    dend_16 { pt3dadd( -8.8775, 70.8894, -28.0315, 2.14 ) }
    dend_16 { pt3dadd( -8.923, 71.2114, -28.0293, 2.14 ) }
    dend_16 { pt3dadd( -8.92497, 71.2737, -28.0269, 2.14 ) }
    dend_16 { pt3dadd( -8.8052, 72.6051, -27.9279, 0.15 ) }
    dend_16 { pt3dadd( -8.71119, 73.029, -27.8912, 0.15 ) }
    dend_16 { pt3dadd( -8.59561, 73.3881, -27.8741, 0.15 ) }
    dend_16 { pt3dadd( -8.44638, 73.7622, -27.8687, 0.66 ) }
    dend_16 { pt3dadd( -8.25031, 74.2043, -27.8946, 0.81 ) }
    dend_16 { pt3dadd( -8.21098, 74.2816, -27.9058, 0.81 ) }
    dend_16 { pt3dadd( -7.84141, 74.8628, -28.1344, 0.15 ) }
    dend_16 { pt3dadd( -7.47875, 75.4477, -28.4137, 0.88 ) }
    dend_16 { pt3dadd( -7.45317, 75.4887, -28.4393, 0.88 ) }
    dend_16 { pt3dadd( -7.32814, 75.7009, -28.5831, 0.88 ) }
    dend_16 { pt3dadd( -7.27827, 75.7958, -28.6469, 0.88 ) }
    dend_16 { pt3dadd( -6.89263, 76.664, -29.1807, 0.15 ) }
    dend_16 { pt3dadd( -6.77566, 76.9898, -29.3721, 0.15 ) }
    dend_16 { pt3dadd( -6.57501, 77.6716, -29.753, 1.11 ) }
    dend_16 { pt3dadd( -6.46348, 78.1783, -30.0278, 1.11 ) }
    dend_16 { pt3dadd( -6.23559, 79.6389, -30.7865, 0.22 ) }
    dend_16 { pt3dadd( -6.18965, 80.1303, -31.0631, 0.22 ) }
    dend_16 { pt3dadd( -6.16776, 80.8786, -31.4981, 1.47 ) }
    dend_16 { pt3dadd( -6.1845, 81.4258, -31.8269, 1.69 ) }
    dend_16 { pt3dadd( -6.36549, 82.8922, -33.0075, 0.15 ) }
    dend_16 { pt3dadd( -6.45363, 83.2625, -33.3965, 0.88 ) }
    dend_16 { pt3dadd( -6.81855, 84.2798, -34.671, 0.22 ) }
    dend_16 { pt3dadd( -6.89386, 84.4581, -34.9231, 1.55 ) }
    dend_16 { pt3dadd( -7.06084, 84.8043, -35.4423, 1.84 ) }
    dend_16 { pt3dadd( -8.00623, 86.5676, -38.1993, 0.59 ) }
    dend_16 { pt3dadd( -8.31609, 87.0591, -39.0024, 0.22 ) }
    dend_16 { pt3dadd( -8.45304, 87.2712, -39.3299, 0.74 ) }
    dend_16 { pt3dadd( -8.89385, 87.9307, -40.2224, 0.15 ) }
    dend_16 { pt3dadd( -9.17055, 88.3418, -40.7159, 0.15 ) }
    dend_16 { pt3dadd( -9.38626, 88.6483, -41.0278, 0.81 ) }
    dend_16 { pt3dadd( -9.59526, 88.9092, -41.227, 0.81 ) }
    dend_16 { pt3dadd( -10.175, 89.5544, -41.8817, 0.15 ) }
    dend_16 { pt3dadd( -10.4289, 89.8103, -42.2684, 0.96 ) }
    dend_16 { pt3dadd( -10.6687, 90.0315, -42.6727, 0.96 ) }
    dend_16 { pt3dadd( -11.3451, 90.6186, -43.8774, 0.22 ) }
    dend_16 { pt3dadd( -11.7128, 90.933, -44.543, 1.4 ) }
    dend_16 { pt3dadd( -12.5068, 91.6156, -46.0157, 1.69 ) }
    dend_16 { pt3dadd( -13.4246, 92.4236, -47.7228, 0.74 ) }
    dend_16 { pt3dadd( -13.7921, 92.7581, -48.4025, 0.22 ) }
    dend_16 { pt3dadd( -13.9815, 92.9364, -48.7263, 0.59 ) }
    dend_16 { pt3dadd( -14.3, 93.2469, -49.1383, 0.22 ) }
    dend_16 { pt3dadd( -14.334, 93.2825, -49.1619, 0.22 ) }
    dend_16 { pt3dadd( -14.7412, 93.7306, -49.2245, 0.22 ) }
    dend_16 { pt3dadd( -14.9986, 94.0351, -49.1922, 0.52 ) }
    dend_16 { pt3dadd( -15.5264, 94.7683, -49.077, 0.15 ) }
    dend_16 { pt3dadd( -16.0457, 95.6085, -48.9086, 1.84 ) }
    dend_16 { pt3dadd( -16.7183, 96.8246, -48.6244, 0.15 ) }
    dend_16 { pt3dadd( -16.8998, 97.1769, -48.5251, 0.29 ) }
    dend_16 { pt3dadd( -16.9493, 97.2903, -48.4901, 0.29 ) }
    dend_16 { pt3dadd( -17.1874, 97.9565, -48.2712, 0.15 ) }
    dend_16 { pt3dadd( -17.3528, 98.5398, -48.075, 0.74 ) }
    dend_16 { pt3dadd( -17.3972, 98.7358, -48.0179, 0.74 ) }
    dend_16 { pt3dadd( -17.6147, 99.761, -47.7635, 0.22 ) }
    dend_16 { pt3dadd( -17.8294, 100.679, -47.5495, 0.22 ) }
    dend_16 { pt3dadd( -18.0182, 101.445, -47.3828, 1.69 ) }
    dend_16 { pt3dadd( -18.0987, 101.771, -47.3195, 1.69 ) }
    dend_16 { pt3dadd( -18.2899, 102.678, -47.1767, 0.22 ) }
    dend_16 { pt3dadd( -18.361, 103.071, -47.1264, 0.37 ) }
    dend_16 { pt3dadd( -18.4641, 103.815, -47.0655, 0.15 ) }
    dend_16 { pt3dadd( -18.4868, 103.997, -47.056, 0.37 ) }
    dend_16 { pt3dadd( -18.563, 104.666, -47.0522, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -18.6052, 105.229, -47.0892, 0.74 ) }
    dend_16 { pt3dadd( -18.6117, 105.344, -47.1039, 0.74 ) }
    dend_16 { pt3dadd( -18.6211, 105.5, -47.1313, 0.74 ) }
    dend_16 { pt3dadd( -18.663, 106.289, -47.2877, 0.15 ) }
    dend_16 { pt3dadd( -18.6997, 106.849, -47.4025, 1.03 ) }
    dend_16 { pt3dadd( -18.8005, 108.0, -47.6105, 0.15 ) }
    dend_16 { pt3dadd( -18.9074, 109.014, -47.7753, 1.99 ) }
    dend_16 { pt3dadd( -18.9719, 109.432, -47.8366, 1.99 ) }
    dend_16 { pt3dadd( -19.1817, 110.369, -47.9605, 0.22 ) }
    dend_16 { pt3dadd( -19.3555, 110.968, -48.0332, 0.81 ) }
    dend_16 { pt3dadd( -19.6495, 111.791, -48.1174, 0.22 ) }
    dend_16 { pt3dadd( -19.6716, 111.84, -48.1215, 0.22 ) }
    dend_16 { pt3dadd( -19.9951, 112.48, -48.1875, 0.22 ) }
    dend_16 { pt3dadd( -20.3142, 113.03, -48.2822, 0.22 ) }
    dend_16 { pt3dadd( -20.6107, 113.497, -48.4246, 0.22 ) }
    dend_16 { pt3dadd( -20.9845, 114.108, -48.6815, 0.22 ) }
    dend_16 { pt3dadd( -21.1992, 114.499, -48.8492, 1.03 ) }
    dend_16 { pt3dadd( -21.3035, 114.717, -48.9379, 1.03 ) }
    dend_16 { pt3dadd( -21.7085, 115.787, -49.3255, 0.22 ) }
    dend_16 { pt3dadd( -22.0299, 116.679, -49.6475, 0.59 ) }
    dend_16 { pt3dadd( -22.3202, 117.496, -49.9366, 0.22 ) }
    dend_16 { pt3dadd( -22.6294, 118.448, -50.2682, 2.06 ) }
    dend_16 { pt3dadd( -22.7449, 118.853, -50.3957, 1.69 ) }
    dend_16 { pt3dadd( -22.9937, 119.947, -50.6916, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -35.2391, 96.0847, -5.89426, 0.22 ) }
    dend_10 { pt3dadd( -35.4775, 97.028, -6.18984, 0.22 ) }
    dend_10 { pt3dadd( -35.6066, 97.499, -6.36686, 0.66 ) }
    dend_10 { pt3dadd( -35.6997, 97.8348, -6.49742, 0.81 ) }
    dend_10 { pt3dadd( -35.9959, 98.8349, -6.88638, 0.22 ) }
    dend_10 { pt3dadd( -36.1971, 99.4512, -7.12276, 0.66 ) }
    dend_10 { pt3dadd( -36.3618, 99.8619, -7.27825, 0.96 ) }
    dend_10 { pt3dadd( -36.8154, 100.827, -7.65673, 0.22 ) }
    dend_10 { pt3dadd( -36.9285, 101.044, -7.73828, 0.22 ) }
    dend_10 { pt3dadd( -37.0893, 101.345, -7.83764, 0.52 ) }
    dend_10 { pt3dadd( -37.2626, 101.698, -7.92753, 0.52 ) }
    dend_10 { pt3dadd( -37.6679, 102.636, -8.11265, 0.22 ) }
    dend_10 { pt3dadd( -37.9169, 103.307, -8.22714, 0.22 ) }
    dend_10 { pt3dadd( -38.127, 103.932, -8.2829, 1.77 ) }
    dend_10 { pt3dadd( -38.2408, 104.327, -8.28152, 2.06 ) }
    dend_10 { pt3dadd( -38.5482, 105.755, -8.12586, 0.22 ) }
    dend_10 { pt3dadd( -38.5989, 106.101, -8.06269, 0.59 ) }
    dend_10 { pt3dadd( -38.6407, 106.592, -7.93442, 0.66 ) }
    dend_10 { pt3dadd( -38.7395, 107.948, -7.51114, 0.22 ) }
    dend_10 { pt3dadd( -38.8117, 109.117, -7.1022, 0.22 ) }
    dend_10 { pt3dadd( -38.8771, 110.305, -6.65575, 1.47 ) }
    dend_10 { pt3dadd( -38.9013, 110.737, -6.47871, 1.92 ) }
    dend_10 { pt3dadd( -38.9849, 112.088, -5.95365, 0.22 ) }
    dend_10 { pt3dadd( -39.0135, 112.519, -5.80195, 0.22 ) }
    dend_10 { pt3dadd( -39.0517, 113.071, -5.64354, 0.74 ) }
    dend_10 { pt3dadd( -39.0738, 113.268, -5.60217, 0.74 ) }
    dend_10 { pt3dadd( -39.2226, 114.139, -5.46093, 0.15 ) }
    dend_10 { pt3dadd( -39.3797, 114.88, -5.33621, 0.15 ) }
    dend_10 { pt3dadd( -39.4976, 115.369, -5.25723, 0.96 ) }
    dend_10 { pt3dadd( -39.5599, 115.616, -5.2139, 1.33 ) }
    dend_10 { pt3dadd( -39.6182, 115.833, -5.17657, 1.33 ) }
    dend_10 { pt3dadd( -39.6335, 115.886, -5.16808, 1.33 ) }
    dend_10 { pt3dadd( -39.9715, 116.882, -5.03707, 0.22 ) }
    dend_10 { pt3dadd( -40.1088, 117.236, -4.98692, 0.81 ) }
    dend_10 { pt3dadd( -40.2875, 117.647, -4.9299, 0.81 ) }
    dend_10 { pt3dadd( -40.5677, 118.26, -4.84608, 0.22 ) }
    dend_10 { pt3dadd( -40.6692, 118.469, -4.82015, 0.44 ) }
    dend_10 { pt3dadd( -41.1314, 119.352, -4.7293, 0.22 ) }
    dend_10 { pt3dadd( -41.2851, 119.615, -4.71005, 0.59 ) }
    dend_10 { pt3dadd( -41.5108, 119.989, -4.66356, 0.59 ) }
    dend_10 { pt3dadd( -41.8402, 120.534, -4.57637, 0.15 ) }
    dend_10 { pt3dadd( -42.2039, 121.134, -4.46404, 0.15 ) }
    dend_10 { pt3dadd( -42.5054, 121.636, -4.36531, 1.11 ) }
    dend_10 { pt3dadd( -42.6935, 121.946, -4.30352, 1.62 ) }
    dend_10 { pt3dadd( -43.344, 122.979, -4.10876, 0.15 ) }
    dend_10 { pt3dadd( -43.5367, 123.273, -4.05324, 0.59 ) }
    dend_10 { pt3dadd( -43.6239, 123.401, -4.03084, 0.59 ) }
    dend_10 { pt3dadd( -43.922, 123.863, -3.9553, 0.22 ) }
    dend_10 { pt3dadd( -44.1652, 124.259, -3.8998, 0.22 ) }
    dend_10 { pt3dadd( -44.294, 124.48, -3.87854, 0.59 ) }
    dend_10 { pt3dadd( -44.4321, 124.736, -3.87078, 0.59 ) }
    dend_10 { pt3dadd( -44.6558, 125.214, -3.85169, 0.22 ) }
    dend_10 { pt3dadd( -44.9318, 125.94, -3.8167, 0.22 ) }
    dend_10 { pt3dadd( -44.9318, 125.94, -3.8167, 0.66 ) }
    dend_10 { pt3dadd( -44.9868, 126.319, -3.79873, 0.66 ) }
    dend_10 { pt3dadd( -45.0495, 126.979, -3.77091, 0.22 ) }
    dend_10 { pt3dadd( -45.078, 127.487, -3.75218, 1.4 ) }
    dend_10 { pt3dadd( -45.087, 127.794, -3.74263, 1.77 ) }
    dend_10 { pt3dadd( -45.1118, 129.276, -3.70532, 0.22 ) }
    dend_10 { pt3dadd( -45.117, 129.744, -3.69386, 0.96 ) }
    dend_10 { pt3dadd( -45.1201, 130.147, -3.68435, 0.96 ) }
    dend_10 { pt3dadd( -45.1283, 130.857, -3.66916, 0.22 ) }
    dend_10 { pt3dadd( -45.1536, 131.782, -3.64927, 0.22 ) }
    dend_10 { pt3dadd( -45.1811, 132.436, -3.63441, 0.88 ) }
    dend_10 { pt3dadd( -45.199, 132.792, -3.62491, 1.25 ) }
    dend_10 { pt3dadd( -45.2253, 133.41, -3.604, 0.22 ) }
    dend_10 { pt3dadd( -45.2294, 133.514, -3.59811, 0.22 ) }
    dend_10 { pt3dadd( -45.2269, 133.897, -3.5488, 0.22 ) }
    dend_10 { pt3dadd( -45.2032, 134.212, -3.48693, 0.22 ) }
    dend_10 { pt3dadd( -45.1016, 134.952, -3.28517, 0.22 ) }
    dend_10 { pt3dadd( -45.0475, 135.255, -3.19047, 0.81 ) }
    dend_10 { pt3dadd( -44.9549, 135.674, -3.01174, 0.81 ) }
    dend_10 { pt3dadd( -44.7477, 136.533, -2.58944, 0.15 ) }
    dend_10 { pt3dadd( -44.5839, 137.139, -2.25696, 0.15 ) }
    dend_10 { pt3dadd( -44.327, 138.049, -1.71302, 1.4 ) }
    dend_10 { pt3dadd( -44.2655, 138.274, -1.57105, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -43.9565, 139.475, -0.80796, 0.22 ) }
    dend_10 { pt3dadd( -43.9465, 139.516, -0.782372, 0.22 ) }
    dend_10 { pt3dadd( -43.9127, 139.669, -0.68588, 0.22 ) }
    dend_10 { pt3dadd( -43.9046, 139.71, -0.661045, 0.22 ) }
    dend_10 { pt3dadd( -43.8203, 140.228, -0.381806, 0.22 ) }
    dend_10 { pt3dadd( -43.7119, 140.897, -0.0696221, 0.88 ) }
    dend_10 { pt3dadd( -43.701, 140.948, -0.0488871, 0.88 ) }
    dend_10 { pt3dadd( -43.6445, 141.151, 0.0377435, 1.03 ) }
    dend_10 { pt3dadd( -43.3574, 142.06, 0.431444, 0.22 ) }
    dend_10 { pt3dadd( -43.0194, 143.017, 0.84708, 1.55 ) }
    dend_10 { pt3dadd( -42.865, 143.416, 1.03694, 1.92 ) }
    dend_10 { pt3dadd( -42.4183, 144.54, 1.58884, 0.22 ) }
    dend_10 { pt3dadd( -42.2966, 144.845, 1.74261, 0.22 ) }
    dend_10 { pt3dadd( -42.1912, 145.101, 1.87606, 0.52 ) }
    dend_10 { pt3dadd( -42.0913, 145.309, 1.99544, 0.52 ) }
    dend_10 { pt3dadd( -41.7219, 146.027, 2.41754, 0.22 ) }
    dend_10 { pt3dadd( -41.6219, 146.223, 2.54953, 0.59 ) }
    dend_10 { pt3dadd( -41.5277, 146.409, 2.69035, 0.59 ) }
    dend_10 { pt3dadd( -41.4961, 146.472, 2.73656, 0.59 ) }
    dend_10 { pt3dadd( -41.2042, 147.009, 3.11829, 0.22 ) }
    dend_10 { pt3dadd( -41.1858, 147.047, 3.142, 0.22 ) }
    dend_10 { pt3dadd( -40.9193, 147.65, 3.46008, 0.22 ) }
    dend_10 { pt3dadd( -40.9068, 147.687, 3.47659, 0.22 ) }
    dend_10 { pt3dadd( -40.7389, 148.352, 3.7186, 0.88 ) }
    dend_10 { pt3dadd( -40.6742, 148.706, 3.8208, 1.47 ) }
    dend_10 { pt3dadd( -40.573, 149.657, 4.04163, 0.22 ) }
    dend_10 { pt3dadd( -40.5707, 149.698, 4.05001, 0.22 ) }
    dend_10 { pt3dadd( -40.55, 150.556, 4.19382, 0.22 ) }
    dend_10 { pt3dadd( -40.5174, 151.301, 4.30409, 0.88 ) }
    dend_10 { pt3dadd( -40.4985, 151.565, 4.33642, 1.33 ) }
    dend_10 { pt3dadd( -40.411, 152.373, 4.42019, 0.15 ) }
    dend_10 { pt3dadd( -40.3681, 152.677, 4.44275, 0.15 ) }
    dend_10 { pt3dadd( -40.2446, 153.47, 4.50288, 0.15 ) }
    dend_10 { pt3dadd( -40.0264, 154.663, 4.59208, 1.77 ) }
    dend_10 { pt3dadd( -39.7861, 155.812, 4.67226, 0.22 ) }
    dend_10 { pt3dadd( -39.6544, 156.389, 4.7036, 0.22 ) }
    dend_10 { pt3dadd( -39.5587, 156.752, 4.7117, 1.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -35.2391, 96.0847, -5.89426, 0.22 ) }
    dend_3 { pt3dadd( -36.1859, 97.5537, -7.28846, 0.22 ) }
    dend_3 { pt3dadd( -36.2051, 97.6023, -7.34169, 0.22 ) }
    dend_3 { pt3dadd( -36.3268, 98.0835, -7.85566, 0.22 ) }
    dend_3 { pt3dadd( -36.4469, 98.7196, -8.52832, 1.11 ) }
    dend_3 { pt3dadd( -36.5382, 99.2987, -9.16492, 1.92 ) }
    dend_3 { pt3dadd( -36.606, 99.7348, -9.6295, 2.14 ) }
    dend_3 { pt3dadd( -36.8172, 101.934, -11.7318, 0.22 ) }
    dend_3 { pt3dadd( -36.8381, 102.396, -12.2781, 0.22 ) }
    dend_3 { pt3dadd( -36.8378, 102.449, -12.3442, 0.22 ) }
    dend_3 { pt3dadd( -36.7997, 103.259, -13.3847, 0.22 ) }
    dend_3 { pt3dadd( -36.7398, 103.719, -13.9415, 0.88 ) }
    dend_3 { pt3dadd( -36.6741, 104.173, -14.4592, 0.88 ) }
    dend_3 { pt3dadd( -36.3213, 106.74, -17.0946, 1.25 ) }
    dend_3 { pt3dadd( -36.2143, 107.675, -18.004, 1.62 ) }
    dend_3 { pt3dadd( -36.2065, 107.737, -18.0604, 1.62 ) }
    dend_3 { pt3dadd( -35.9974, 109.088, -19.1849, 0.29 ) }
    dend_3 { pt3dadd( -35.9328, 109.499, -19.505, 0.66 ) }
    dend_3 { pt3dadd( -35.9246, 109.561, -19.5444, 0.66 ) }
    dend_3 { pt3dadd( -35.8901, 110.091, -19.8819, 0.66 ) }
    dend_3 { pt3dadd( -35.8871, 110.15, -19.9259, 0.66 ) }
    dend_3 { pt3dadd( -35.8145, 111.331, -20.9045, 0.22 ) }
    dend_3 { pt3dadd( -35.766, 112.595, -22.1079, 2.14 ) }
    dend_3 { pt3dadd( -35.7537, 113.039, -22.546, 2.8 ) }
    dend_3 { pt3dadd( -35.6983, 115.916, -25.4417, 0.37 ) }
    dend_3 { pt3dadd( -35.6802, 117.008, -26.5572, 0.37 ) }
    dend_3 { pt3dadd( -35.6627, 118.662, -28.232, 0.96 ) }
    dend_3 { pt3dadd( -35.627, 120.26, -29.8106, 0.22 ) }
    dend_3 { pt3dadd( -35.6, 120.916, -30.4429, 1.11 ) }
    dend_3 { pt3dadd( -35.5964, 120.971, -30.4921, 1.11 ) }
    dend_3 { pt3dadd( -35.5695, 121.283, -30.7111, 1.11 ) }
    dend_3 { pt3dadd( -35.457, 122.39, -31.395, 0.15 ) }
    dend_3 { pt3dadd( -35.3688, 123.436, -31.9003, 0.15 ) }
    dend_3 { pt3dadd( -35.2863, 124.312, -32.2791, 0.15 ) }
    dend_3 { pt3dadd( -35.2053, 125.557, -32.8367, 1.99 ) }
    dend_3 { pt3dadd( -35.1992, 126.338, -33.1842, 2.21 ) }
    dend_3 { pt3dadd( -35.2726, 127.567, -33.6932, 0.74 ) }
    dend_3 { pt3dadd( -35.4438, 128.79, -34.137, 0.29 ) }
    dend_3 { pt3dadd( -35.4584, 128.859, -34.1579, 0.29 ) }
    dend_3 { pt3dadd( -35.6009, 129.444, -34.3179, 0.52 ) }
    dend_3 { pt3dadd( -35.7267, 129.95, -34.4547, 0.52 ) }
    dend_3 { pt3dadd( -35.8913, 130.68, -34.6714, 0.29 ) }
    dend_3 { pt3dadd( -35.9783, 131.14, -34.8319, 0.74 ) }
    dend_3 { pt3dadd( -36.0573, 131.888, -35.2209, 0.96 ) }
    dend_3 { pt3dadd( -36.125, 133.176, -36.0047, 0.22 ) }
    dend_3 { pt3dadd( -36.1378, 134.257, -36.7302, 1.55 ) }
    dend_3 { pt3dadd( -36.1405, 134.828, -37.1303, 1.99 ) }
    dend_3 { pt3dadd( -36.1891, 135.7, -37.879, 1.99 ) }
    dend_3 { pt3dadd( -36.4125, 137.332, -39.4602, 0.37 ) }
    dend_3 { pt3dadd( -36.5017, 137.558, -39.8876, 0.37 ) }
    dend_3 { pt3dadd( -36.6275, 137.745, -40.3759, 0.37 ) }
    dend_3 { pt3dadd( -36.8531, 137.972, -41.1079, 0.37 ) }
    dend_3 { pt3dadd( -37.6932, 138.587, -43.457, 1.92 ) }
    dend_3 { pt3dadd( -37.9575, 138.731, -44.0981, 2.43 ) }
    dend_3 { pt3dadd( -41.3866, 140.189, -51.4958, 0.37 ) }
    dend_3 { pt3dadd( -41.6844, 140.3, -52.1161, 0.44 ) }
    dend_3 { pt3dadd( -42.0683, 140.431, -52.8791, 0.29 ) }
    dend_3 { pt3dadd( -42.3988, 140.538, -53.496, 0.29 ) }
    dend_3 { pt3dadd( -42.7064, 140.649, -53.9876, 0.66 ) }
    dend_3 { pt3dadd( -42.943, 140.743, -54.339, 0.88 ) }
    dend_3 { pt3dadd( -43.7419, 141.037, -55.4665, 0.66 ) }
    dend_3 { pt3dadd( -44.1558, 141.164, -56.2053, 0.22 ) }
    dend_3 { pt3dadd( -44.5267, 141.235, -56.9917, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( -44.9906, 141.318, -58.0423, 2.36 ) }
    dend_3 { pt3dadd( -46.1681, 141.495, -60.8623, 2.36 ) }
    dend_3 { pt3dadd( -47.8123, 141.679, -64.9867, 0.88 ) }
    dend_3 { pt3dadd( -48.3107, 141.713, -66.2994, 0.52 ) }
    dend_3 { pt3dadd( -49.2669, 141.719, -69.0742, 1.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 7.744, -45.3222, 4.82084, 0.37 ) }
    dend_47 { pt3dadd( 9.22758, -45.989, 4.00975, 0.37 ) }
    dend_47 { pt3dadd( 9.99851, -46.4143, 3.60452, 0.29 ) }
    dend_47 { pt3dadd( 10.9294, -47.0, 3.18307, 0.66 ) }
    dend_47 { pt3dadd( 11.791, -47.5714, 2.82881, 1.33 ) }
    dend_47 { pt3dadd( 12.3419, -47.9449, 2.61578, 1.62 ) }
    dend_47 { pt3dadd( 12.9557, -48.3647, 2.38702, 1.62 ) }
    dend_47 { pt3dadd( 13.8445, -49.0872, 2.08285, 0.59 ) }
    dend_47 { pt3dadd( 14.6889, -49.8559, 1.80102, 0.37 ) }
    dend_47 { pt3dadd( 15.1208, -50.3001, 1.6268, 0.74 ) }
    dend_47 { pt3dadd( 15.4127, -50.6501, 1.45836, 0.74 ) }
    dend_47 { pt3dadd( 15.4488, -50.7007, 1.42849, 0.74 ) }
    dend_47 { pt3dadd( 15.7936, -51.3083, 1.0185, 0.29 ) }
    dend_47 { pt3dadd( 16.2424, -52.2535, 0.408009, 0.29 ) }
    dend_47 { pt3dadd( 16.6646, -53.1773, -0.0613489, 1.92 ) }
    dend_47 { pt3dadd( 17.162, -54.2253, -0.464721, 3.09 ) }
    dend_47 { pt3dadd( 17.3218, -54.5293, -0.544884, 3.61 ) }
    dend_47 { pt3dadd( 17.8578, -55.4286, -0.675839, 3.32 ) }
    dend_47 { pt3dadd( 18.8648, -56.9561, -0.728952, 0.88 ) }
    dend_47 { pt3dadd( 19.9234, -58.3286, -0.564328, 0.44 ) }
    dend_47 { pt3dadd( 20.514, -59.0065, -0.414113, 0.44 ) }
    dend_47 { pt3dadd( 21.3103, -59.8384, -0.166023, 1.18 ) }
    dend_47 { pt3dadd( 22.0374, -60.5119, 0.056181, 1.69 ) }
    dend_47 { pt3dadd( 22.5315, -60.884, 0.197682, 1.69 ) }
    dend_47 { pt3dadd( 24.3231, -61.9438, 0.596103, 0.44 ) }
    dend_47 { pt3dadd( 25.0212, -62.3009, 0.701342, 0.66 ) }
    dend_47 { pt3dadd( 25.0829, -62.3304, 0.71125, 0.66 ) }
    dend_47 { pt3dadd( 25.7235, -62.6366, 0.803741, 0.66 ) }
    dend_47 { pt3dadd( 26.6603, -63.1514, 1.01479, 0.29 ) }
    dend_47 { pt3dadd( 26.9917, -63.4234, 1.16614, 0.29 ) }
    dend_47 { pt3dadd( 27.2145, -64.0768, 1.5993, 0.29 ) }
    dend_47 { pt3dadd( 27.3481, -64.8668, 2.16458, 0.81 ) }
    dend_47 { pt3dadd( 27.4043, -65.2563, 2.4339, 1.03 ) }
    dend_47 { pt3dadd( 27.6506, -66.4136, 3.25196, 0.37 ) }
    dend_47 { pt3dadd( 27.8122, -66.9631, 3.61287, 0.37 ) }
    dend_47 { pt3dadd( 27.8654, -67.0747, 3.69196, 0.37 ) }
    dend_47 { pt3dadd( 28.3851, -67.8522, 4.25403, 0.52 ) }
    dend_47 { pt3dadd( 28.817, -68.3771, 4.6236, 0.88 ) }
    dend_47 { pt3dadd( 29.8332, -69.4188, 5.39806, 0.37 ) }
    dend_47 { pt3dadd( 30.5752, -70.1274, 5.87441, 0.29 ) }
    dend_47 { pt3dadd( 31.7294, -71.2209, 6.53775, 1.77 ) }
    dend_47 { pt3dadd( 32.2683, -71.7521, 6.87155, 2.58 ) }
    dend_47 { pt3dadd( 32.3407, -71.8278, 6.92395, 2.58 ) }
    dend_47 { pt3dadd( 33.2587, -72.8727, 7.77171, 2.58 ) }
    dend_47 { pt3dadd( 34.0937, -73.9085, 8.65543, 0.37 ) }
    dend_47 { pt3dadd( 34.91, -74.9437, 9.58066, 0.37 ) }
    dend_47 { pt3dadd( 35.682, -75.9532, 10.4425, 0.66 ) }
    dend_47 { pt3dadd( 36.3052, -76.7583, 11.1237, 0.74 ) }
    dend_47 { pt3dadd( 37.112, -77.7595, 11.8976, 0.29 ) }
    dend_47 { pt3dadd( 37.5223, -78.2315, 12.2392, 0.29 ) }
    dend_47 { pt3dadd( 37.79, -78.4951, 12.4149, 1.11 ) }
    dend_47 { pt3dadd( 38.1176, -78.7886, 12.5595, 1.33 ) }
    dend_47 { pt3dadd( 38.7794, -79.3358, 12.7306, 0.88 ) }
    dend_47 { pt3dadd( 39.8149, -80.1482, 12.9402, 0.29 ) }
    dend_47 { pt3dadd( 40.8986, -80.949, 13.1185, 0.29 ) }
    dend_47 { pt3dadd( 41.9368, -81.6839, 13.3021, 2.65 ) }
    dend_47 { pt3dadd( 41.9916, -81.7226, 13.3152, 2.65 ) }
    dend_47 { pt3dadd( 42.656, -82.1895, 13.5349, 3.09 ) }
    dend_47 { pt3dadd( 43.8221, -83.0237, 14.1845, 0.37 ) }
    dend_47 { pt3dadd( 44.6946, -83.6834, 14.7902, 0.15 ) }
    dend_47 { pt3dadd( 45.2339, -84.1145, 15.204, 0.15 ) }
    dend_47 { pt3dadd( 46.2089, -84.9261, 16.0258, 2.14 ) }
    dend_47 { pt3dadd( 47.0199, -85.6578, 16.7887, 2.58 ) }
    dend_47 { pt3dadd( 49.1209, -87.7579, 18.9369, 0.44 ) }
    dend_47 { pt3dadd( 49.5416, -88.2278, 19.4436, 0.88 ) }
    dend_47 { pt3dadd( 49.6822, -88.3985, 19.6366, 0.88 ) }
    dend_47 { pt3dadd( 49.7171, -88.4448, 19.689, 0.88 ) }
    dend_47 { pt3dadd( 50.4428, -89.5128, 20.817, 0.22 ) }
    dend_47 { pt3dadd( 50.8764, -90.2029, 21.4927, 0.22 ) }
    dend_47 { pt3dadd( 51.4022, -91.0967, 22.307, 1.55 ) }
    dend_47 { pt3dadd( 52.0961, -92.2603, 23.3741, 2.14 ) }
    dend_47 { pt3dadd( 52.8744, -93.6349, 24.5842, 0.15 ) }
    dend_47 { pt3dadd( 53.1128, -94.0942, 24.9691, 0.81 ) }
    dend_47 { pt3dadd( 53.586, -95.0587, 25.7266, 0.15 ) }
    dend_47 { pt3dadd( 53.8846, -95.7049, 26.2181, 1.55 ) }
    dend_47 { pt3dadd( 54.016, -96.0042, 26.4283, 1.77 ) }
    dend_47 { pt3dadd( 54.6131, -97.4656, 27.4093, 0.15 ) }
    dend_47 { pt3dadd( 55.2585, -99.0273, 28.5731, 0.15 ) }
    dend_47 { pt3dadd( 55.388, -99.3155, 28.8423, 0.52 ) }
    dend_47 { pt3dadd( 55.8183, -100.264, 29.8643, 0.22 ) }
    dend_47 { pt3dadd( 56.2041, -101.088, 30.8711, 0.74 ) }
    dend_47 { pt3dadd( 56.297, -101.276, 31.1234, 0.74 ) }
    dend_47 { pt3dadd( 56.83, -102.243, 32.6333, 0.59 ) }
    dend_47 { pt3dadd( 57.4589, -103.318, 34.6043, 0.22 ) }
    dend_47 { pt3dadd( 57.5484, -103.473, 34.9218, 0.52 ) }
    dend_47 { pt3dadd( 57.7309, -103.779, 35.6746, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.744, -45.3222, 4.82084, 0.88 ) }
    dend_40 { pt3dadd( 7.28603, -46.3882, 5.32314, 0.88 ) }
    dend_40 { pt3dadd( 7.00233, -47.056, 5.639, 0.37 ) }
    dend_40 { pt3dadd( 6.70323, -47.7868, 5.9977, 0.37 ) }
    dend_40 { pt3dadd( 6.2473, -48.8771, 6.51988, 0.37 ) }
    dend_40 { pt3dadd( 6.00632, -49.4797, 6.79047, 1.47 ) }
    dend_40 { pt3dadd( 5.71278, -50.21, 7.03348, 2.14 ) }
    dend_40 { pt3dadd( 5.58898, -50.5214, 7.11599, 2.14 ) }
    dend_40 { pt3dadd( 5.28427, -51.3999, 7.23615, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 5.05768, -52.1677, 7.10903, 0.44 ) }
    dend_40 { pt3dadd( 4.85188, -52.946, 6.83109, 0.37 ) }
    dend_40 { pt3dadd( 4.4564, -54.4574, 6.13439, 1.77 ) }
    dend_40 { pt3dadd( 4.33765, -54.865, 5.92919, 2.14 ) }
    dend_40 { pt3dadd( 4.09887, -55.5802, 5.57371, 2.21 ) }
    dend_40 { pt3dadd( 3.25847, -57.8383, 4.5091, 0.29 ) }
    dend_40 { pt3dadd( 2.99024, -58.5073, 4.23361, 0.29 ) }
    dend_40 { pt3dadd( 2.54008, -59.485, 3.91335, 0.29 ) }
    dend_40 { pt3dadd( 2.08609, -60.3883, 3.72625, 0.29 ) }
    dend_40 { pt3dadd( 1.55273, -61.3535, 3.57936, 0.29 ) }
    dend_40 { pt3dadd( 1.02547, -62.2104, 3.54588, 0.88 ) }
    dend_40 { pt3dadd( 0.764397, -62.6006, 3.60694, 1.62 ) }
    dend_40 { pt3dadd( 0.138057, -63.4845, 3.76857, 1.99 ) }
    dend_40 { pt3dadd( -0.0359569, -63.7483, 3.82698, 1.99 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 14/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.1338, -98.7465, 20.7308, 0.29 ) }
    dend_36 { pt3dadd( -21.84, -100.394, 19.1293, 0.29 ) }
    dend_36 { pt3dadd( -21.7636, -100.795, 18.76, 0.44 ) }
    dend_36 { pt3dadd( -21.4616, -102.222, 17.5849, 0.22 ) }
    dend_36 { pt3dadd( -21.1759, -103.414, 16.7708, 0.22 ) }
    dend_36 { pt3dadd( -21.1589, -103.48, 16.7311, 0.22 ) }
    dend_36 { pt3dadd( -21.0725, -103.803, 16.5525, 0.66 ) }
    dend_36 { pt3dadd( -20.9284, -104.288, 16.3604, 0.66 ) }
    dend_36 { pt3dadd( -20.5102, -105.448, 15.9685, 0.22 ) }
    dend_36 { pt3dadd( -20.0169, -106.636, 15.6385, 1.4 ) }
    dend_36 { pt3dadd( -19.8125, -107.129, 15.5003, 1.84 ) }
    dend_36 { pt3dadd( -19.7878, -107.19, 15.483, 1.84 ) }
    dend_36 { pt3dadd( -19.2242, -108.634, 15.0708, 0.29 ) }
    dend_36 { pt3dadd( -18.748, -110.037, 14.7189, 0.29 ) }
    dend_36 { pt3dadd( -18.4713, -111.096, 14.4896, 0.29 ) }
    dend_36 { pt3dadd( -18.2763, -112.256, 14.2794, 1.69 ) }
    dend_36 { pt3dadd( -18.2206, -112.896, 14.2134, 2.28 ) }
    dend_36 { pt3dadd( -18.2196, -113.41, 14.1903, 2.5 ) }
    dend_36 { pt3dadd( -18.3653, -115.204, 14.3105, 0.29 ) }
    dend_36 { pt3dadd( -18.5384, -116.451, 14.484, 0.29 ) }
    dend_36 { pt3dadd( -18.7354, -117.692, 14.6958, 0.29 ) }
    dend_36 { pt3dadd( -18.9556, -119.105, 14.9613, 2.06 ) }
    dend_36 { pt3dadd( -19.1018, -120.133, 15.1592, 2.65 ) }
    dend_36 { pt3dadd( -19.3513, -122.343, 15.5677, 0.29 ) }
    dend_36 { pt3dadd( -19.4322, -123.419, 15.7553, 0.22 ) }
    dend_36 { pt3dadd( -19.4668, -124.273, 15.9014, 0.22 ) }
    dend_36 { pt3dadd( -19.4786, -124.961, 16.0035, 0.88 ) }
    dend_36 { pt3dadd( -19.4775, -125.456, 16.0605, 1.18 ) }
    dend_36 { pt3dadd( -19.4632, -125.864, 16.0979, 1.18 ) }
    dend_36 { pt3dadd( -19.3765, -127.057, 16.1467, 0.22 ) }
    dend_36 { pt3dadd( -19.309, -127.628, 16.173, 0.22 ) }
    dend_36 { pt3dadd( -19.2086, -128.306, 16.2288, 0.22 ) }
    dend_36 { pt3dadd( -19.1034, -128.902, 16.2787, 1.25 ) }
    dend_36 { pt3dadd( -18.9504, -129.475, 16.3294, 1.25 ) }
    dend_36 { pt3dadd( -18.4399, -131.069, 16.4452, 0.22 ) }
    dend_36 { pt3dadd( -18.0794, -131.916, 16.4517, 0.22 ) }
    dend_36 { pt3dadd( -17.4709, -133.089, 16.3605, 1.11 ) }
    dend_36 { pt3dadd( -17.1656, -133.602, 16.2816, 1.55 ) }
    dend_36 { pt3dadd( -16.1586, -135.142, 15.9326, 0.22 ) }
    dend_36 { pt3dadd( -15.4733, -136.054, 15.6121, 0.22 ) }
    dend_36 { pt3dadd( -14.4179, -137.234, 14.9621, 0.22 ) }
    dend_36 { pt3dadd( -13.7122, -137.932, 14.4669, 1.69 ) }
    dend_36 { pt3dadd( -13.445, -138.16, 14.2431, 1.99 ) }
    dend_36 { pt3dadd( -13.394, -138.197, 14.1963, 1.99 ) }
    dend_36 { pt3dadd( -12.3942, -138.825, 13.0096, 0.29 ) }
    dend_36 { pt3dadd( -11.5729, -139.272, 11.9316, 0.29 ) }
    dend_36 { pt3dadd( -11.5301, -139.295, 11.868, 0.29 ) }
    dend_36 { pt3dadd( -10.7659, -139.69, 10.7011, 1.4 ) }
    dend_36 { pt3dadd( -10.3747, -139.882, 10.0759, 1.62 ) }
    dend_36 { pt3dadd( -9.0876, -140.483, 7.88703, 0.22 ) }
    dend_36 { pt3dadd( -9.05218, -140.497, 7.81787, 0.22 ) }
    dend_36 { pt3dadd( -8.58759, -140.641, 6.77452, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.1338, -98.7465, 20.7308, 0.29 ) }
    dend_35 { pt3dadd( -22.2133, -100.142, 20.8122, 0.29 ) }
    dend_35 { pt3dadd( -22.2634, -101.053, 20.8614, 0.29 ) }
    dend_35 { pt3dadd( -22.2877, -101.462, 20.88, 0.74 ) }
    dend_35 { pt3dadd( -22.345, -102.198, 20.9061, 0.81 ) }
    dend_35 { pt3dadd( -22.3854, -102.661, 20.9186, 1.11 ) }
    dend_35 { pt3dadd( -22.4486, -103.323, 20.9291, 0.44 ) }
    dend_35 { pt3dadd( -22.5154, -103.885, 20.9208, 0.29 ) }
    dend_35 { pt3dadd( -22.5995, -104.569, 20.905, 0.29 ) }
    dend_35 { pt3dadd( -22.7152, -105.537, 20.8708, 2.21 ) }
    dend_35 { pt3dadd( -22.769, -105.983, 20.8407, 2.73 ) }
    dend_35 { pt3dadd( -22.9072, -107.216, 20.7123, 0.29 ) }
    dend_35 { pt3dadd( -22.9579, -107.69, 20.6436, 0.29 ) }
    dend_35 { pt3dadd( -23.0019, -108.215, 20.5516, 0.81 ) }
    dend_35 { pt3dadd( -23.0078, -108.321, 20.5293, 0.96 ) }
    dend_35 { pt3dadd( -23.0133, -109.032, 20.365, 0.22 ) }
    dend_35 { pt3dadd( -22.9996, -109.655, 20.2205, 0.22 ) }
    dend_35 { pt3dadd( -22.9772, -110.044, 20.1324, 1.33 ) }
    dend_35 { pt3dadd( -22.956, -110.383, 20.0795, 1.62 ) }
    dend_35 { pt3dadd( -22.9538, -110.437, 20.0749, 1.62 ) }
    dend_35 { pt3dadd( -22.9305, -111.207, 20.0618, 0.29 ) }
    dend_35 { pt3dadd( -22.9065, -111.765, 20.0803, 0.22 ) }
    dend_35 { pt3dadd( -22.8742, -112.283, 20.1083, 0.22 ) }
    dend_35 { pt3dadd( -22.8297, -112.851, 20.1444, 1.11 ) }
    dend_35 { pt3dadd( -22.7917, -113.298, 20.1764, 1.47 ) }
    dend_35 { pt3dadd( -22.7156, -114.099, 20.2831, 0.22 ) }
    dend_35 { pt3dadd( -22.6632, -114.649, 20.4022, 0.22 ) }
    dend_35 { pt3dadd( -22.6075, -115.212, 20.5564, 0.74 ) }
    dend_35 { pt3dadd( -22.5998, -115.368, 20.6104, 0.74 ) }
    dend_35 { pt3dadd( -22.5998, -115.411, 20.6284, 0.74 ) }
    dend_35 { pt3dadd( -22.6762, -116.701, 21.2857, 0.22 ) }
    dend_35 { pt3dadd( -22.7547, -117.42, 21.6937, 1.99 ) }
    dend_35 { pt3dadd( -22.7906, -117.665, 21.8395, 1.99 ) }
    dend_35 { pt3dadd( -22.958, -118.706, 22.5206, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( -23.1293, -119.748, 23.2363, 0.22 ) }
    dend_35 { pt3dadd( -23.2618, -120.489, 23.7612, 1.84 ) }
    dend_35 { pt3dadd( -23.2889, -120.626, 23.8601, 1.99 ) }
    dend_35 { pt3dadd( -23.3067, -120.718, 23.9291, 1.99 ) }
    dend_35 { pt3dadd( -23.5496, -122.053, 24.9705, 0.22 ) }
    dend_35 { pt3dadd( -23.6056, -122.434, 25.2793, 0.96 ) }
    dend_35 { pt3dadd( -23.6936, -123.035, 25.7861, 0.22 ) }
    dend_35 { pt3dadd( -23.7237, -123.295, 26.0058, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -38.4837, -87.9317, -145.002, 0.29 ) }
    dend_27 { pt3dadd( -37.6415, -89.4783, -145.076, 0.29 ) }
    dend_27 { pt3dadd( -36.7396, -91.1901, -145.193, 0.22 ) }
    dend_27 { pt3dadd( -36.4475, -91.8103, -145.239, 0.52 ) }
    dend_27 { pt3dadd( -36.2353, -92.3603, -145.294, 0.52 ) }
    dend_27 { pt3dadd( -35.8233, -93.6359, -145.431, 0.22 ) }
    dend_27 { pt3dadd( -35.5043, -94.7156, -145.551, 0.22 ) }
    dend_27 { pt3dadd( -35.3137, -95.6352, -145.675, 0.81 ) }
    dend_27 { pt3dadd( -35.1609, -96.5073, -145.799, 1.11 ) }
    dend_27 { pt3dadd( -34.9319, -98.0696, -145.988, 0.22 ) }
    dend_27 { pt3dadd( -34.8236, -99.0229, -146.086, 0.22 ) }
    dend_27 { pt3dadd( -34.7439, -100.103, -146.177, 0.22 ) }
    dend_27 { pt3dadd( -34.7132, -100.9, -146.256, 1.11 ) }
    dend_27 { pt3dadd( -34.6467, -102.537, -146.431, 0.22 ) }
    dend_27 { pt3dadd( -34.5217, -104.519, -146.651, 0.22 ) }
    dend_27 { pt3dadd( -34.4161, -105.664, -146.777, 1.33 ) }
    dend_27 { pt3dadd( -34.3572, -106.081, -146.839, 1.47 ) }
    dend_27 { pt3dadd( -33.9564, -108.366, -147.25, 0.22 ) }
    dend_27 { pt3dadd( -33.6975, -109.354, -147.477, 1.11 ) }
    dend_27 { pt3dadd( -33.4514, -110.04, -147.676, 1.47 ) }
    dend_27 { pt3dadd( -33.1636, -110.677, -147.892, 1.47 ) }
    dend_27 { pt3dadd( -32.1403, -112.53, -148.585, 0.15 ) }
    dend_27 { pt3dadd( -32.0966, -112.595, -148.612, 0.15 ) }
    dend_27 { pt3dadd( -31.1272, -113.628, -149.121, 0.88 ) }
    dend_27 { pt3dadd( -31.0722, -113.682, -149.153, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -38.4837, -87.9317, -145.002, 1.69 ) }
    dend_26 { pt3dadd( -39.7258, -89.1456, -145.291, 1.69 ) }
    dend_26 { pt3dadd( -41.074, -90.1057, -145.698, 0.22 ) }
    dend_26 { pt3dadd( -41.1417, -90.1474, -145.719, 0.22 ) }
    dend_26 { pt3dadd( -42.4262, -90.8942, -146.122, 0.22 ) }
    dend_26 { pt3dadd( -43.4872, -91.4924, -146.518, 0.88 ) }
    dend_26 { pt3dadd( -44.4531, -92.0268, -146.909, 1.11 ) }
    dend_26 { pt3dadd( -46.0992, -92.7456, -147.617, 0.22 ) }
    dend_26 { pt3dadd( -46.7687, -92.984, -147.905, 0.52 ) }
    dend_26 { pt3dadd( -46.9886, -93.0435, -148.002, 0.52 ) }
    dend_26 { pt3dadd( -48.593, -93.2641, -148.813, 0.37 ) }
    dend_26 { pt3dadd( -48.6647, -93.2718, -148.851, 0.29 ) }
    dend_26 { pt3dadd( -49.3999, -93.3621, -149.193, 0.22 ) }
    dend_26 { pt3dadd( -49.7817, -93.4221, -149.359, 0.37 ) }
    dend_26 { pt3dadd( -50.6039, -93.5628, -149.769, 0.37 ) }
    dend_26 { pt3dadd( -51.9168, -93.9668, -150.762, 0.29 ) }
    dend_26 { pt3dadd( -52.8588, -94.4178, -151.636, 0.29 ) }
    dend_26 { pt3dadd( -53.6018, -94.8774, -152.441, 0.22 ) }
    dend_26 { pt3dadd( -54.5593, -95.6933, -153.686, 1.11 ) }
    dend_26 { pt3dadd( -55.1769, -96.3454, -154.6, 1.33 ) }
    dend_26 { pt3dadd( -56.9174, -98.361, -157.376, 0.29 ) }
    dend_26 { pt3dadd( -57.3667, -98.9636, -158.188, 0.59 ) }
    dend_26 { pt3dadd( -57.3911, -99.0012, -158.242, 0.59 ) }
    dend_26 { pt3dadd( -57.9688, -100.034, -159.748, 0.29 ) }
    dend_26 { pt3dadd( -57.9906, -100.081, -159.812, 0.29 ) }
    dend_26 { pt3dadd( -58.6733, -101.462, -161.438, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.9937, 119.947, -50.6916, 0.22 ) }
    dend_18 { pt3dadd( -22.23, 123.81, -55.066, 0.22 ) }
    dend_18 { pt3dadd( -21.9345, 125.111, -56.4801, 0.37 ) }
    dend_18 { pt3dadd( -21.7587, 125.832, -57.1962, 0.15 ) }
    dend_18 { pt3dadd( -21.5978, 126.373, -57.7487, 0.44 ) }
    dend_18 { pt3dadd( -21.2305, 127.601, -59.0158, 0.22 ) }
    dend_18 { pt3dadd( -20.7939, 129.201, -60.6905, 1.25 ) }
    dend_18 { pt3dadd( -20.2906, 131.223, -62.5549, 0.22 ) }
    dend_18 { pt3dadd( -20.0944, 132.164, -63.4885, 1.03 ) }
    dend_18 { pt3dadd( -19.6943, 134.512, -65.9298, 0.22 ) }
    dend_18 { pt3dadd( -19.6336, 134.965, -66.4114, 0.22 ) }
    dend_18 { pt3dadd( -19.5251, 136.274, -67.7672, 1.11 ) }
    dend_18 { pt3dadd( -19.5183, 136.704, -68.1851, 1.4 ) }
    dend_18 { pt3dadd( -19.625, 138.712, -69.9068, 0.22 ) }
    dend_18 { pt3dadd( -19.6661, 139.173, -70.2659, 0.59 ) }
    dend_18 { pt3dadd( -19.9091, 141.391, -71.6108, 0.22 ) }
    dend_18 { pt3dadd( -19.9837, 142.204, -72.034, 0.88 ) }
    dend_18 { pt3dadd( -20.0391, 142.865, -72.2861, 1.03 ) }
    dend_18 { pt3dadd( -20.2134, 144.588, -72.7853, 0.22 ) }
    dend_18 { pt3dadd( -20.3097, 145.467, -72.943, 0.59 ) }
    dend_18 { pt3dadd( -20.5211, 147.126, -73.153, 0.22 ) }
    dend_18 { pt3dadd( -20.6551, 148.282, -73.2489, 0.22 ) }
    dend_18 { pt3dadd( -20.8243, 150.273, -73.4274, 1.47 ) }
    dend_18 { pt3dadd( -20.8553, 150.847, -73.4767, 1.47 ) }
    dend_18 { pt3dadd( -20.8614, 152.403, -73.6701, 0.22 ) }
    dend_18 { pt3dadd( -20.8305, 153.179, -73.8142, 0.52 ) }
    dend_18 { pt3dadd( -20.6926, 155.278, -74.3009, 0.22 ) }
    dend_18 { pt3dadd( -20.6403, 155.887, -74.4629, 1.03 ) }
    dend_18 { pt3dadd( -20.6023, 156.282, -74.5888, 1.03 ) }
    dend_18 { pt3dadd( -20.2093, 160.529, -76.096, 0.22 ) }
    dend_18 { pt3dadd( -20.095, 161.824, -76.5725, 0.96 ) }
    dend_18 { pt3dadd( -20.0429, 162.492, -76.8277, 0.96 ) }
    dend_18 { pt3dadd( -20.0387, 162.582, -76.8627, 0.96 ) }
    dend_18 { pt3dadd( -19.9387, 164.863, -77.8164, 0.22 ) }
    dend_18 { pt3dadd( -19.883, 166.133, -78.3893, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -22.9937, 119.947, -50.6916, 0.22 ) }
    dend_17 { pt3dadd( -23.7029, 120.123, -52.1266, 0.22 ) }
    dend_17 { pt3dadd( -24.8605, 120.304, -54.4397, 0.15 ) }
    dend_17 { pt3dadd( -25.727, 120.397, -56.1265, 1.4 ) }
    dend_17 { pt3dadd( -26.4359, 120.474, -57.5065, 1.4 ) }
    dend_17 { pt3dadd( -27.3337, 120.57, -59.2543, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -27.6863, 120.608, -59.9407, 0.22 ) }
    dend_17 { pt3dadd( -28.0855, 120.609, -60.8308, 0.88 ) }
    dend_17 { pt3dadd( -28.2144, 120.588, -61.0808, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -49.2669, 141.719, -69.0742, 0.66 ) }
    dend_5 { pt3dadd( -51.5773, 141.445, -75.6207, 0.66 ) }
    dend_5 { pt3dadd( -51.9129, 141.491, -76.4722, 0.29 ) }
    dend_5 { pt3dadd( -52.1122, 141.577, -76.9256, 0.22 ) }
    dend_5 { pt3dadd( -52.4515, 141.78, -77.626, 0.22 ) }
    dend_5 { pt3dadd( -52.7582, 141.996, -78.2179, 1.03 ) }
    dend_5 { pt3dadd( -53.0347, 142.2, -78.701, 1.47 ) }
    dend_5 { pt3dadd( -53.7463, 143.057, -79.1964, 0.88 ) }
    dend_5 { pt3dadd( -54.4286, 143.819, -79.6766, 0.22 ) }
    dend_5 { pt3dadd( -54.6431, 144.001, -79.8353, 0.29 ) }
    dend_5 { pt3dadd( -54.7096, 144.037, -79.8792, 0.29 ) }
    dend_5 { pt3dadd( -55.2318, 144.226, -80.198, 0.15 ) }
    dend_5 { pt3dadd( -55.8473, 144.361, -80.5725, 0.96 ) }
    dend_5 { pt3dadd( -56.4331, 144.436, -80.9018, 1.4 ) }
    dend_5 { pt3dadd( -57.5959, 144.547, -81.6944, 0.22 ) }
    dend_5 { pt3dadd( -58.3921, 144.65, -82.3487, 0.22 ) }
    dend_5 { pt3dadd( -59.0277, 144.764, -83.0562, 0.74 ) }
    dend_5 { pt3dadd( -59.8629, 144.958, -84.1543, 0.22 ) }
    dend_5 { pt3dadd( -60.1484, 145.036, -84.5788, 0.96 ) }
    dend_5 { pt3dadd( -61.1086, 145.357, -86.2083, 1.33 ) }
    dend_5 { pt3dadd( -61.5163, 145.537, -86.949, 1.84 ) }
    dend_5 { pt3dadd( -62.9289, 146.248, -89.728, 0.88 ) }
    dend_5 { pt3dadd( -63.1349, 146.35, -90.1325, 1.03 ) }
    dend_5 { pt3dadd( -63.1679, 146.365, -90.1922, 1.03 ) }
    dend_5 { pt3dadd( -64.3178, 146.866, -92.1392, 0.22 ) }
    dend_5 { pt3dadd( -64.9901, 147.129, -93.1132, 1.33 ) }
    dend_5 { pt3dadd( -66.7069, 147.711, -95.2476, 0.22 ) }
    dend_5 { pt3dadd( -67.461, 147.939, -96.0093, 1.33 ) }
    dend_5 { pt3dadd( -68.3191, 148.147, -96.7731, 0.22 ) }
    dend_5 { pt3dadd( -68.3606, 148.154, -96.8044, 0.22 ) }
    dend_5 { pt3dadd( -69.2338, 148.198, -97.2752, 0.22 ) }
    dend_5 { pt3dadd( -70.0724, 148.138, -97.6047, 1.4 ) }
    dend_5 { pt3dadd( -70.5915, 148.065, -97.6913, 1.84 ) }
    dend_5 { pt3dadd( -71.2899, 147.898, -97.7662, 1.33 ) }
    dend_5 { pt3dadd( -72.1609, 147.613, -97.8557, 0.81 ) }
    dend_5 { pt3dadd( -72.9337, 147.312, -97.936, 0.22 ) }
    dend_5 { pt3dadd( -73.6505, 146.938, -98.0177, 1.4 ) }
    dend_5 { pt3dadd( -74.0415, 146.701, -98.0629, 1.69 ) }
    dend_5 { pt3dadd( -74.2817, 146.547, -98.0866, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -49.2669, 141.719, -69.0742, 0.29 ) }
    dend_4 { pt3dadd( -50.8004, 143.87, -72.5171, 0.29 ) }
    dend_4 { pt3dadd( -51.2302, 144.513, -73.4301, 0.22 ) }
    dend_4 { pt3dadd( -51.4368, 144.873, -73.8869, 0.96 ) }
    dend_4 { pt3dadd( -51.5733, 145.129, -74.1955, 1.18 ) }
    dend_4 { pt3dadd( -52.0883, 146.21, -75.3769, 0.22 ) }
    dend_4 { pt3dadd( -52.252, 146.579, -75.7568, 0.52 ) }
    dend_4 { pt3dadd( -52.3329, 146.817, -75.902, 0.52 ) }
    dend_4 { pt3dadd( -52.8972, 148.459, -76.7956, 0.22 ) }
    dend_4 { pt3dadd( -52.919, 148.52, -76.8234, 0.22 ) }
    dend_4 { pt3dadd( -53.2015, 149.305, -77.1071, 0.22 ) }
    dend_4 { pt3dadd( -53.2247, 149.37, -77.1216, 0.22 ) }
    dend_4 { pt3dadd( -53.8395, 150.878, -77.3325, 0.22 ) }
    dend_4 { pt3dadd( -53.8681, 150.942, -77.3357, 0.22 ) }
    dend_4 { pt3dadd( -54.478, 152.265, -77.3911, 0.22 ) }
    dend_4 { pt3dadd( -54.5054, 152.329, -77.3971, 0.22 ) }
    dend_4 { pt3dadd( -54.7808, 153.015, -77.4876, 0.44 ) }
    dend_4 { pt3dadd( -55.3343, 154.549, -77.7281, 0.15 ) }
    dend_4 { pt3dadd( -55.9812, 156.669, -78.1779, 0.15 ) }
    dend_4 { pt3dadd( -56.4924, 158.568, -78.6399, 0.15 ) }
    dend_4 { pt3dadd( -56.8159, 159.995, -79.0335, 0.15 ) }
    dend_4 { pt3dadd( -57.0082, 160.981, -79.3499, 0.88 ) }
    dend_4 { pt3dadd( -57.1151, 161.675, -79.6029, 1.25 ) }
    dend_4 { pt3dadd( -57.285, 163.493, -80.3522, 0.22 ) }
    dend_4 { pt3dadd( -57.3045, 163.959, -80.5587, 0.59 ) }
    dend_4 { pt3dadd( -57.3133, 164.462, -80.768, 0.59 ) }
    dend_4 { pt3dadd( -57.3436, 166.126, -81.4278, 0.22 ) }
    dend_4 { pt3dadd( -57.3541, 166.745, -81.661, 0.22 ) }
    dend_4 { pt3dadd( -57.3622, 167.023, -81.7618, 0.66 ) }
    dend_4 { pt3dadd( -57.379, 167.586, -81.9397, 0.74 ) }
    dend_4 { pt3dadd( -57.3936, 169.267, -82.3192, 0.15 ) }
    dend_4 { pt3dadd( -57.391, 170.273, -82.4441, 0.15 ) }
    dend_4 { pt3dadd( -57.3898, 170.333, -82.4458, 0.15 ) }
    dend_4 { pt3dadd( -57.37, 171.106, -82.444, 0.52 ) }
    dend_4 { pt3dadd( -57.3453, 171.764, -82.3987, 0.52 ) }
    dend_4 { pt3dadd( -57.2749, 173.684, -82.1319, 0.22 ) }
    dend_4 { pt3dadd( -57.2533, 174.827, -81.874, 1.03 ) }
    dend_4 { pt3dadd( -57.2644, 175.455, -81.7017, 1.03 ) }
    dend_4 { pt3dadd( -57.2721, 175.532, -81.6783, 1.03 ) }
    dend_4 { pt3dadd( -57.5074, 176.64, -81.2974, 0.15 ) }
    dend_4 { pt3dadd( -57.6849, 177.1, -81.1437, 0.52 ) }
    dend_4 { pt3dadd( -57.9205, 177.484, -81.0377, 0.52 ) }
    dend_4 { pt3dadd( -58.4175, 178.166, -80.8315, 0.22 ) }
    dend_4 { pt3dadd( -59.0863, 178.981, -80.5879, 0.22 ) }
    dend_4 { pt3dadd( -59.4313, 179.368, -80.4858, 0.22 ) }
    dend_4 { pt3dadd( -59.8722, 179.792, -80.4081, 0.59 ) }
    dend_4 { pt3dadd( -60.3919, 180.295, -80.3176, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -0.0359569, -63.7483, 3.82698, 0.37 ) }
    dend_46 { pt3dadd( -0.637337, -65.0758, 4.62095, 0.37 ) }
    dend_46 { pt3dadd( -0.859644, -65.6135, 5.03892, 0.74 ) }
    dend_46 { pt3dadd( -1.331, -66.8496, 6.14614, 0.22 ) }
    dend_46 { pt3dadd( -1.55836, -67.4597, 6.73038, 0.81 ) }
    dend_46 { pt3dadd( -1.68336, -67.8103, 7.09193, 0.81 ) }
    dend_46 { pt3dadd( -2.11386, -69.0646, 8.46699, 1.47 ) }
    dend_46 { pt3dadd( -2.37002, -69.9111, 9.55943, 2.06 ) }
    dend_46 { pt3dadd( -2.57722, -70.8767, 10.9384, 0.22 ) }
    dend_46 { pt3dadd( -2.62391, -71.2026, 11.4205, 0.52 ) }
    dend_46 { pt3dadd( -2.69875, -71.7934, 12.3187, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( -2.76673, -72.3407, 13.1486, 1.77 ) }
    dend_46 { pt3dadd( -2.85647, -73.0106, 14.1354, 2.43 ) }
    dend_46 { pt3dadd( -3.13953, -74.871, 16.8035, 0.22 ) }
    dend_46 { pt3dadd( -3.17194, -75.0996, 17.1312, 0.59 ) }
    dend_46 { pt3dadd( -3.22154, -75.447, 17.6162, 0.22 ) }
    dend_46 { pt3dadd( -3.25521, -75.6504, 17.8857, 0.44 ) }
    dend_46 { pt3dadd( -3.38627, -76.3224, 18.738, 0.15 ) }
    dend_46 { pt3dadd( -3.54319, -76.8534, 19.3694, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 8/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.0359569, -63.7483, 3.82698, 0.29 ) }
    dend_41 { pt3dadd( -1.33161, -65.1641, 4.25389, 0.29 ) }
    dend_41 { pt3dadd( -1.96553, -65.88, 4.45688, 0.29 ) }
    dend_41 { pt3dadd( -2.60295, -66.6116, 4.66256, 0.29 ) }
    dend_41 { pt3dadd( -3.32595, -67.4901, 4.97981, 0.29 ) }
    dend_41 { pt3dadd( -3.97678, -68.3036, 5.3197, 0.29 ) }
    dend_41 { pt3dadd( -4.4629, -68.9246, 5.59191, 1.77 ) }
    dend_41 { pt3dadd( -4.97552, -69.6144, 5.97278, 2.21 ) }
    dend_41 { pt3dadd( -5.14718, -69.8591, 6.1094, 2.36 ) }
    dend_41 { pt3dadd( -5.91103, -71.0533, 6.76393, 0.74 ) }
    dend_41 { pt3dadd( -6.31559, -71.6553, 7.12198, 0.29 ) }
    dend_41 { pt3dadd( -6.771, -72.2744, 7.49979, 0.29 ) }
    dend_41 { pt3dadd( -7.41615, -73.092, 8.00748, 1.92 ) }
    dend_41 { pt3dadd( -7.82376, -73.5743, 8.30509, 2.28 ) }
    dend_41 { pt3dadd( -8.15202, -73.934, 8.50245, 2.28 ) }
    dend_41 { pt3dadd( -9.18462, -75.0062, 8.99019, 0.29 ) }
    dend_41 { pt3dadd( -10.036, -75.8993, 9.36058, 0.22 ) }
    dend_41 { pt3dadd( -10.3304, -76.21, 9.4757, 0.96 ) }
    dend_41 { pt3dadd( -10.5477, -76.4346, 9.50721, 1.18 ) }
    dend_41 { pt3dadd( -11.3094, -77.2274, 9.49009, 0.22 ) }
    dend_41 { pt3dadd( -11.5714, -77.4743, 9.39549, 0.22 ) }
    dend_41 { pt3dadd( -11.8859, -77.7517, 9.22033, 0.22 ) }
    dend_41 { pt3dadd( -12.3664, -78.1301, 8.94076, 0.66 ) }
    dend_41 { pt3dadd( -14.1296, -79.3364, 7.90831, 1.62 ) }
    dend_41 { pt3dadd( -14.3672, -79.4678, 7.77344, 2.14 ) }
    dend_41 { pt3dadd( -16.8904, -80.5718, 6.46906, 0.37 ) }
    dend_41 { pt3dadd( -17.6939, -80.8536, 6.09933, 0.37 ) }
    dend_41 { pt3dadd( -18.3915, -81.0331, 5.80442, 1.47 ) }
    dend_41 { pt3dadd( -19.3745, -81.1919, 5.41056, 1.47 ) }
    dend_41 { pt3dadd( -21.2331, -81.3515, 4.76514, 0.22 ) }
    dend_41 { pt3dadd( -22.1306, -81.3787, 4.48049, 1.25 ) }
    dend_41 { pt3dadd( -22.5311, -81.3662, 4.37699, 1.84 ) }
    dend_41 { pt3dadd( -23.8651, -81.315, 4.0101, 1.84 ) }
    dend_41 { pt3dadd( -26.8477, -81.2768, 3.14618, 0.22 ) }
    dend_41 { pt3dadd( -27.3654, -81.2798, 3.0046, 0.88 ) }
    dend_41 { pt3dadd( -28.1355, -81.3149, 2.77694, 0.88 ) }
    dend_41 { pt3dadd( -28.8654, -81.3913, 2.54535, 0.22 ) }
    dend_41 { pt3dadd( -30.0527, -81.5816, 2.18525, 0.22 ) }
    dend_41 { pt3dadd( -30.8794, -81.7701, 1.94055, 1.03 ) }
    dend_41 { pt3dadd( -31.1551, -81.8496, 1.85448, 1.03 ) }
    dend_41 { pt3dadd( -32.772, -82.3839, 1.14017, 0.22 ) }
    dend_41 { pt3dadd( -33.2747, -82.5785, 0.882025, 0.22 ) }
    dend_41 { pt3dadd( -34.289, -83.0139, 0.312242, 1.25 ) }
    dend_41 { pt3dadd( -35.2796, -83.4564, -0.234724, 1.18 ) }
    dend_41 { pt3dadd( -35.3371, -83.4851, -0.267606, 1.18 ) }
    dend_41 { pt3dadd( -37.1038, -84.4999, -1.3594, 0.22 ) }
    dend_41 { pt3dadd( -37.542, -84.8011, -1.6548, 1.18 ) }
    dend_41 { pt3dadd( -37.8621, -85.0558, -1.89735, 1.18 ) }
    dend_41 { pt3dadd( -38.7858, -86.0202, -2.79621, 0.22 ) }
    dend_41 { pt3dadd( -38.9876, -86.2564, -3.01939, 0.22 ) }
    dend_41 { pt3dadd( -39.4597, -86.7923, -3.57235, 0.66 ) }
    dend_41 { pt3dadd( -39.6801, -87.053, -3.83052, 0.81 ) }
    dend_41 { pt3dadd( -39.8704, -87.2761, -4.05884, 0.81 ) }
    dend_41 { pt3dadd( -40.8092, -88.3307, -5.25708, 0.52 ) }
    dend_41 { pt3dadd( -41.7849, -89.4815, -6.55852, 0.22 ) }
    dend_41 { pt3dadd( -42.615, -90.4491, -7.62735, 0.22 ) }
    dend_41 { pt3dadd( -43.1326, -91.0454, -8.27003, 2.21 ) }
    dend_41 { pt3dadd( -43.6488, -91.6269, -8.86276, 2.28 ) }
    dend_41 { pt3dadd( -45.7943, -94.0181, -11.0962, 0.22 ) }
    dend_41 { pt3dadd( -46.2753, -94.5513, -11.524, 0.22 ) }
    dend_41 { pt3dadd( -47.1521, -95.5521, -12.2188, 0.22 ) }
    dend_41 { pt3dadd( -47.1906, -95.5938, -12.2433, 0.22 ) }
    dend_41 { pt3dadd( -47.8784, -96.236, -12.5482, 0.37 ) }
    dend_41 { pt3dadd( -48.4057, -96.6561, -12.6264, 0.88 ) }
    dend_41 { pt3dadd( -49.3915, -97.3262, -12.4861, 1.69 ) }
    dend_41 { pt3dadd( -49.9762, -97.6863, -12.3959, 2.21 ) }
    dend_41 { pt3dadd( -50.8847, -98.2434, -12.2303, 2.21 ) }
    dend_41 { pt3dadd( -51.6694, -98.7463, -12.1083, 1.11 ) }
    dend_41 { pt3dadd( -52.3504, -99.2295, -12.0342, 0.37 ) }
    dend_41 { pt3dadd( -52.3971, -99.2699, -12.0307, 0.37 ) }
    dend_41 { pt3dadd( -53.2118, -100.151, -11.9644, 0.37 ) }
    dend_41 { pt3dadd( -53.5184, -100.548, -11.9181, 0.74 ) }
    dend_41 { pt3dadd( -53.6022, -100.676, -11.8956, 0.74 ) }
    dend_41 { pt3dadd( -53.9554, -101.254, -11.7761, 0.66 ) }
    dend_41 { pt3dadd( -54.4372, -102.039, -11.5814, 0.66 ) }
    dend_41 { pt3dadd( -54.819, -102.626, -11.4228, 0.52 ) }
    dend_41 { pt3dadd( -55.6124, -103.779, -11.0687, 0.22 ) }
    dend_41 { pt3dadd( -56.1925, -104.613, -10.8155, 1.47 ) }
    dend_41 { pt3dadd( -56.6087, -105.226, -10.6812, 1.92 ) }
    dend_41 { pt3dadd( -56.9697, -105.75, -10.5961, 2.14 ) }
    dend_41 { pt3dadd( -57.5362, -106.582, -10.528, 0.74 ) }
    dend_41 { pt3dadd( -57.9359, -107.202, -10.5303, 0.29 ) }
    dend_41 { pt3dadd( -58.3837, -107.914, -10.6064, 0.29 ) }
    dend_41 { pt3dadd( -59.2867, -109.371, -10.8261, 0.29 ) }
    dend_41 { pt3dadd( -59.6068, -109.935, -10.9158, 1.33 ) }
    dend_41 { pt3dadd( -59.9954, -110.653, -11.026, 1.33 ) }
    dend_41 { pt3dadd( -60.1383, -110.931, -11.0564, 1.33 ) }
    dend_41 { pt3dadd( -60.7443, -112.048, -11.1784, 0.29 ) }
    dend_41 { pt3dadd( -61.0814, -112.614, -11.2175, 0.29 ) }
    dend_41 { pt3dadd( -61.7874, -113.704, -11.2422, 0.29 ) }
    dend_41 { pt3dadd( -61.8274, -113.764, -11.245, 0.29 ) }
    dend_41 { pt3dadd( -62.3384, -114.524, -11.2782, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -63.0527, -115.539, -11.3211, 1.18 ) }
    dend_41 { pt3dadd( -63.2554, -115.819, -11.3346, 1.33 ) }
    dend_41 { pt3dadd( -64.0662, -116.949, -11.4077, 0.22 ) }
    dend_41 { pt3dadd( -64.108, -117.009, -11.4117, 0.22 ) }
    dend_41 { pt3dadd( -64.4938, -117.64, -11.4507, 0.88 ) }
    dend_41 { pt3dadd( -64.6902, -118.031, -11.4684, 0.88 ) }
    dend_41 { pt3dadd( -65.1603, -119.311, -11.4751, 0.22 ) }
    dend_41 { pt3dadd( -65.3956, -120.036, -11.4785, 1.33 ) }
    dend_41 { pt3dadd( -65.5033, -120.392, -11.4699, 1.77 ) }
    dend_41 { pt3dadd( -65.7899, -121.297, -11.4359, 0.88 ) }
    dend_41 { pt3dadd( -66.0538, -122.088, -11.3932, 0.22 ) }
    dend_41 { pt3dadd( -66.3582, -122.929, -11.3099, 0.59 ) }
    dend_41 { pt3dadd( -66.8733, -124.223, -11.1034, 0.22 ) }
    dend_41 { pt3dadd( -67.2664, -125.15, -10.9223, 0.22 ) }
    dend_41 { pt3dadd( -67.5516, -125.789, -10.7731, 1.18 ) }
    dend_41 { pt3dadd( -67.7428, -126.182, -10.6621, 1.18 ) }
    dend_41 { pt3dadd( -68.2537, -127.135, -10.3563, 0.15 ) }
    dend_41 { pt3dadd( -68.5766, -127.691, -10.1696, 0.15 ) }
    dend_41 { pt3dadd( -69.0165, -128.459, -9.91191, 0.88 ) }
    dend_41 { pt3dadd( -69.1972, -128.77, -9.81523, 1.11 ) }
    dend_41 { pt3dadd( -69.7394, -129.586, -9.67523, 0.37 ) }
    dend_41 { pt3dadd( -70.3042, -130.366, -9.63923, 0.22 ) }
    dend_41 { pt3dadd( -70.7216, -130.936, -9.68718, 1.18 ) }
    dend_41 { pt3dadd( -71.0424, -131.363, -9.75774, 1.18 ) }
    dend_41 { pt3dadd( -71.0875, -131.418, -9.77057, 1.18 ) }
    dend_41 { pt3dadd( -72.5913, -133.223, -10.254, 0.22 ) }
    dend_41 { pt3dadd( -72.6655, -133.309, -10.2795, 0.37 ) }
    dend_41 { pt3dadd( -73.2527, -133.967, -10.4968, 0.15 ) }
    dend_41 { pt3dadd( -73.5127, -134.257, -10.5859, 0.59 ) }
    dend_41 { pt3dadd( -74.5258, -135.402, -10.8694, 0.22 ) }
    dend_41 { pt3dadd( -74.9866, -135.959, -10.9617, 1.03 ) }
    dend_41 { pt3dadd( -75.1466, -136.171, -10.975, 1.03 ) }
    dend_41 { pt3dadd( -76.1435, -137.64, -11.015, 0.22 ) }
    dend_41 { pt3dadd( -76.3555, -137.98, -11.0106, 0.52 ) }
    dend_41 { pt3dadd( -76.8771, -138.939, -10.9402, 0.22 ) }
    dend_41 { pt3dadd( -77.1392, -139.503, -10.8637, 1.03 ) }
    dend_41 { pt3dadd( -77.2963, -139.866, -10.7957, 1.03 ) }
    dend_41 { pt3dadd( -77.8902, -141.234, -10.4951, 0.15 ) }
    dend_41 { pt3dadd( -78.1036, -141.722, -10.3606, 0.44 ) }
    dend_41 { pt3dadd( -78.506, -142.622, -10.1263, 0.15 ) }
    dend_41 { pt3dadd( -78.7057, -143.068, -10.0188, 0.88 ) }
    dend_41 { pt3dadd( -78.9763, -143.669, -9.92665, 0.88 ) }
    dend_41 { pt3dadd( -79.4938, -144.873, -9.84215, 0.22 ) }
    dend_41 { pt3dadd( -80.0392, -145.961, -9.98891, 0.22 ) }
    dend_41 { pt3dadd( -80.2097, -146.241, -10.0683, 0.66 ) }
    dend_41 { pt3dadd( -80.371, -146.498, -10.1447, 0.66 ) }
    dend_41 { pt3dadd( -81.4194, -148.006, -10.6142, 0.37 ) }
    dend_41 { pt3dadd( -81.8279, -148.565, -10.7945, 1.25 ) }
    dend_41 { pt3dadd( -83.744, -151.245, -11.6534, 0.44 ) }
    dend_41 { pt3dadd( -85.9222, -154.336, -12.6197, 0.15 ) }
    dend_41 { pt3dadd( -86.6785, -155.433, -12.9271, 0.96 ) }
    dend_41 { pt3dadd( -87.5574, -156.772, -13.2506, 0.29 ) }
    dend_41 { pt3dadd( -87.8003, -157.179, -13.3262, 0.52 ) }
    dend_41 { pt3dadd( -88.7719, -159.05, -13.65, 0.22 ) }
    dend_41 { pt3dadd( -88.8998, -159.405, -13.7067, 0.66 ) }
    dend_41 { pt3dadd( -89.095, -160.052, -13.8831, 0.66 ) }
    dend_41 { pt3dadd( -89.6001, -161.478, -14.3463, 0.15 ) }
    dend_41 { pt3dadd( -89.9723, -162.354, -14.6553, 0.15 ) }
    dend_41 { pt3dadd( -90.5038, -163.461, -15.0745, 1.03 ) }
    dend_41 { pt3dadd( -90.6818, -163.777, -15.2076, 1.03 ) }
    dend_41 { pt3dadd( -92.1324, -166.141, -16.2788, 0.22 ) }
    dend_41 { pt3dadd( -93.0295, -167.438, -16.9251, 0.22 ) }
    dend_41 { pt3dadd( -93.9539, -168.569, -17.5337, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -74.2817, 146.547, -98.0866, 0.22 ) }
    dend_7 { pt3dadd( -75.1749, 145.812, -98.8453, 0.22 ) }
    dend_7 { pt3dadd( -75.6589, 145.43, -99.2505, 0.22 ) }
    dend_7 { pt3dadd( -76.5863, 144.696, -99.9967, 0.59 ) }
    dend_7 { pt3dadd( -77.673, 143.838, -100.832, 0.15 ) }
    dend_7 { pt3dadd( -77.9702, 143.602, -101.055, 0.81 ) }
    dend_7 { pt3dadd( -78.4955, 143.185, -101.45, 1.11 ) }
    dend_7 { pt3dadd( -79.3375, 142.54, -102.056, 0.22 ) }
    dend_7 { pt3dadd( -79.848, 142.133, -102.431, 1.03 ) }
    dend_7 { pt3dadd( -80.1869, 141.845, -102.684, 1.33 ) }
    dend_7 { pt3dadd( -80.2634, 141.789, -102.723, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -74.2817, 146.547, -98.0866, 0.22 ) }
    dend_6 { pt3dadd( -75.579, 146.935, -97.6926, 0.22 ) }
    dend_6 { pt3dadd( -76.806, 147.287, -97.1501, 0.22 ) }
    dend_6 { pt3dadd( -77.5365, 147.492, -96.8071, 1.25 ) }
    dend_6 { pt3dadd( -77.5946, 147.512, -96.7742, 1.25 ) }
    dend_6 { pt3dadd( -79.2219, 148.136, -95.7595, 0.15 ) }
    dend_6 { pt3dadd( -79.9167, 148.444, -95.313, 0.15 ) }
    dend_6 { pt3dadd( -81.3422, 149.202, -94.2072, 0.96 ) }
    dend_6 { pt3dadd( -81.7588, 149.456, -93.8781, 1.18 ) }
    dend_6 { pt3dadd( -82.8151, 150.136, -93.0235, 0.15 ) }
    dend_6 { pt3dadd( -82.8635, 150.168, -92.9835, 0.15 ) }
    dend_6 { pt3dadd( -83.6035, 150.698, -92.3394, 0.15 ) }
    dend_6 { pt3dadd( -84.9451, 151.707, -91.1748, 0.15 ) }
    dend_6 { pt3dadd( -85.5644, 152.209, -90.7364, 0.66 ) }
    dend_6 { pt3dadd( -85.8205, 152.396, -90.5674, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 89/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -93.9539, -168.569, -17.5337, 0.22 ) }
    dend_45 { pt3dadd( -96.1895, -168.741, -18.0023, 0.22 ) }
    dend_45 { pt3dadd( -97.2018, -168.809, -18.1589, 0.22 ) }
    dend_45 { pt3dadd( -97.6893, -168.864, -18.2769, 1.03 ) }
    dend_45 { pt3dadd( -97.918, -168.893, -18.3319, 1.33 ) }
    dend_45 { pt3dadd( -100.101, -169.18, -18.8594, 0.22 ) }
    dend_45 { pt3dadd( -101.707, -169.369, -19.2661, 0.22 ) }
    dend_45 { pt3dadd( -102.218, -169.417, -19.3976, 0.88 ) }
    dend_45 { pt3dadd( -104.443, -169.636, -20.0548, 0.22 ) }
    dend_45 { pt3dadd( -105.74, -169.76, -20.4065, 0.22 ) }
    dend_45 { pt3dadd( -105.791, -169.767, -20.4168, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_45 { pt3dadd( -107.343, -170.017, -20.6115, 0.22 ) }
    dend_45 { pt3dadd( -107.433, -170.036, -20.6202, 0.22 ) }
    dend_45 { pt3dadd( -108.78, -170.38, -20.6466, 0.22 ) }
    dend_45 { pt3dadd( -110.168, -170.869, -20.5546, 0.22 ) }
    dend_45 { pt3dadd( -111.7, -171.636, -20.4434, 0.22 ) }
    dend_45 { pt3dadd( -111.751, -171.668, -20.438, 0.22 ) }
    dend_45 { pt3dadd( -112.324, -172.121, -20.3523, 0.74 ) }
    dend_45 { pt3dadd( -112.642, -172.428, -20.3115, 0.74 ) }
    dend_45 { pt3dadd( -113.741, -173.873, -20.289, 0.22 ) }
    dend_45 { pt3dadd( -114.375, -174.863, -20.3707, 0.22 ) }
    dend_45 { pt3dadd( -114.601, -175.229, -20.4059, 0.29 ) }
    dend_45 { pt3dadd( -114.702, -175.4, -20.4123, 0.37 ) }
    dend_45 { pt3dadd( -115.368, -176.554, -20.4504, 0.15 ) }
    dend_45 { pt3dadd( -116.496, -178.557, -20.4705, 0.15 ) }
    dend_45 { pt3dadd( -116.526, -178.61, -20.4691, 0.15 ) }
    dend_45 { pt3dadd( -117.456, -180.202, -20.3874, 0.15 ) }
    dend_45 { pt3dadd( -119.489, -183.475, -20.091, 0.15 ) }
    dend_45 { pt3dadd( -120.212, -184.58, -19.9725, 0.44 ) }
    dend_45 { pt3dadd( -120.805, -185.456, -19.8548, 0.15 ) }
    dend_45 { pt3dadd( -122.303, -187.62, -19.5024, 0.15 ) }
    dend_45 { pt3dadd( -123.199, -188.899, -19.297, 0.37 ) }
    dend_45 { pt3dadd( -124.098, -190.138, -19.1027, 0.15 ) }
    dend_45 { pt3dadd( -125.115, -191.365, -18.8409, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -93.9539, -168.569, -17.5337, 0.22 ) }
    dend_42 { pt3dadd( -94.3256, -170.819, -17.3458, 0.22 ) }
    dend_42 { pt3dadd( -94.6813, -173.235, -17.1935, 0.22 ) }
    dend_42 { pt3dadd( -95.0842, -175.97, -17.021, 0.22 ) }
    dend_42 { pt3dadd( -95.1892, -176.683, -16.976, 1.33 ) }
    dend_42 { pt3dadd( -95.3526, -177.793, -16.9061, 1.33 ) }
    dend_42 { pt3dadd( -95.5825, -179.354, -16.8076, 0.22 ) }
    dend_42 { pt3dadd( -95.637, -179.735, -16.7898, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -80.2634, 141.789, -102.723, 0.22 ) }
    dend_9 { pt3dadd( -81.6902, 140.8, -103.584, 0.22 ) }
    dend_9 { pt3dadd( -82.2599, 140.405, -103.928, 0.59 ) }
    dend_9 { pt3dadd( -83.1747, 139.77, -104.48, 0.22 ) }
    dend_9 { pt3dadd( -83.703, 139.404, -104.799, 0.66 ) }
    dend_9 { pt3dadd( -83.7698, 139.358, -104.84, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -80.2634, 141.789, -102.723, 0.15 ) }
    dend_8 { pt3dadd( -79.1066, 140.455, -103.109, 0.15 ) }
    dend_8 { pt3dadd( -78.3043, 139.53, -103.376, 0.29 ) }
    dend_8 { pt3dadd( -77.9725, 139.147, -103.487, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -95.637, -179.735, -16.7898, 0.29 ) }
    dend_44 { pt3dadd( -95.2123, -180.666, -17.7703, 0.29 ) }
    dend_44 { pt3dadd( -94.912, -181.324, -18.4638, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -95.637, -179.735, -16.7898, 0.22 ) }
    dend_43 { pt3dadd( -97.0591, -181.522, -16.1211, 0.22 ) }
    dend_43 { pt3dadd( -97.8151, -182.509, -15.7796, 0.44 ) }
    dend_43 { pt3dadd( -98.7904, -184.008, -15.4247, 0.15 ) }
    dend_43 { pt3dadd( -99.9334, -185.842, -15.038, 0.15 ) }
    dend_43 { pt3dadd( -100.252, -186.37, -14.9314, 0.81 ) }
    dend_43 { pt3dadd( -100.46, -186.726, -14.862, 0.81 ) }
    dend_43 { pt3dadd( -102.487, -190.338, -14.2051, 0.15 ) }
    dend_43 { pt3dadd( -104.934, -195.159, -13.4936, 0.15 ) }
    dend_43 { pt3dadd( -104.934, -195.159, -13.4936, 0.37 ) }
    dend_43 { pt3dadd( -105.421, -196.281, -13.4144, 0.15 ) }
    dend_43 { pt3dadd( -105.642, -196.832, -13.382, 0.81 ) }
    dend_43 { pt3dadd( -105.877, -197.464, -13.3555, 0.81 ) }
    dend_43 { pt3dadd( -106.427, -199.291, -13.3424, 0.15 ) }
    dend_43 { pt3dadd( -106.597, -199.937, -13.3309, 0.44 ) }
    dend_43 { pt3dadd( -106.695, -200.254, -13.3466, 0.44 ) }
    dend_43 { pt3dadd( -107.029, -201.257, -13.4346, 0.15 ) }
    dend_43 { pt3dadd( -107.164, -201.664, -13.4555, 0.66 ) }
    dend_43 { pt3dadd( -107.205, -201.787, -13.4577, 0.66 ) }
    dend_43 { pt3dadd( -107.407, -202.393, -13.4602, 0.66 ) }
    dend_43 { pt3dadd( -108.649, -206.139, -13.4938, 0.15 ) }
    dend_43 { pt3dadd( -108.917, -206.946, -13.5032, 0.44 ) }
    dend_43 { pt3dadd( -110.568, -211.961, -13.5815, 0.15 ) }
    dend_43 { pt3dadd( -112.108, -216.664, -13.6434, 0.15 ) }
    dend_43 { pt3dadd( -112.158, -216.816, -13.6443, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, axon_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_5 = new SectionList()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_34 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_43 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_13 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_29 nseg = 3
    dend_20 nseg = 3
    dend_12 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_48 nseg = 7
    dend_37 nseg = 3
    dend_34 nseg = 5
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_28 nseg = 7
    dend_25 nseg = 7
    dend_16 nseg = 3
    dend_10 nseg = 3
    dend_3 nseg = 5
    dend_47 nseg = 5
    dend_36 nseg = 3
    dend_18 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_45 nseg = 3
    dend_43 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_SBC_5318cbf0cb_0_0


