// Cell: cACint209_L5_DBC_6a2bbf2a1b_0_0
/*
{
  "id" : "cACint209_L5_DBC_6a2bbf2a1b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 9.23809, 10.9227, 2.76", "-6.24775, 10.477, 9.07409, 2.16", "-9.90671, 13.4498, 4.69591, 2.52", "-12.5621, 15.392, 1.83616, 2.52", "-14.4933, 16.6808, -0.00323031, 2.52", "-15.5089, 17.2965, -0.896658, 2.52", "-16.7347, 17.9513, -1.83408, 2.28", "-20.0008, 19.5857, -3.90752, 1.92", "-21.3986, 20.2019, -4.56285, 1.92", "-24.4244, 21.3592, -5.81396, 1.8", "-26.2404, 22.0277, -6.46364, 1.8", "-30.1669, 23.2976, -7.68106, 1.56", "-33.2184, 24.1737, -8.50042, 1.92", "-35.8501, 24.7972, -9.1034, 1.92", "-37.7301, 25.0445, -9.44278, 1.92", "-40.1325, 25.0819, -9.7735, 1.92", "-44.7283, 24.8193, -10.3823, 1.8", "-45.5072, 24.7073, -10.499, 1.8", "-47.1373, 24.3506, -10.7438, 1.8", "-51.0024, 23.3104, -11.4145, 1.32", "-52.3696, 22.9139, -11.721, 1.32", "-55.0065, 22.1366, -12.5552, 1.92", "-56.0342, 22.0583, -13.1559, 1.92", "-56.7733, 22.6939, -14.311, 1.92", "-57.1086, 23.1439, -15.0414, 1.92", "-57.4638, 23.6877, -15.927, 1.92", "-57.9491, 24.0182, -16.7183, 1.92", "-58.732, 24.1597, -17.6802, 1.92", "-61.0444, 24.1281, -20.265, 1.44", "-62.7858, 24.0132, -22.0857, 1.44", "-63.6694, 23.9143, -22.9524, 1.44", "-65.9452, 23.5214, -25.0848, 1.44", "-67.4452, 23.1674, -26.4484, 1.8", "-68.6182, 22.8033, -27.504, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 13.6481, 1.77275, 1.32", "-2.88658, 15.5248, 1.08999, 1.32", "-2.74842, 17.5093, 0.453924, 1.32", "-2.67796, 18.5872, 0.144803, 1.32", "-2.60623, 19.7488, -0.147048, 1.32", "-2.56347, 20.4737, -0.304588, 1.32", "-2.50281, 21.3027, -0.45835, 1.32", "-2.42165, 22.316, -0.553498, 1.32", "-2.36401, 22.951, -0.530687, 1.32", "-2.24698, 24.1335, -0.443279, 1.08", "-2.10857, 25.3958, -0.323718, 1.56", "-1.96052, 26.7361, -0.166326, 1.56", "-1.82544, 27.9045, -0.00219808, 1.56", "-1.45361, 30.582, 0.44676, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 10.9391, 11.3727, 1.8", "-6.85336, 12.6046, 11.9564, 1.8", "-7.95336, 14.3721, 12.6184, 1.8", "-10.1054, 17.5688, 14.0539, 1.56", "-10.7231, 18.4863, 14.4659, 1.56", "-12.1341, 20.5821, 15.407, 1.44", "-13.6053, 22.7674, 16.3883, 0.96", "-14.2302, 23.6904, 16.8458, 0.96", "-16.8157, 27.2916, 18.7977, 1.92", "-24.0482, 38.1429, 23.9212, 1.92", "-33.4871, 46.4203, 29.7628, 1.92", "-44.4629, 53.938, 33.4552, 1.92", "-54.4499, 63.1385, 36.4288, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -11.8984, 11.5527, 2.64", "1.62774, -14.3248, 11.3843, 2.64", "1.85693, -17.1265, 11.1897, 2.64", "2.02596, -19.1927, 11.0462, 2.64", "2.18357, -21.1195, 10.9124, 2.64", "2.50427, -25.0398, 10.6402, 2.4", "2.82739, -28.9897, 10.3659, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -12.7279, 13.0827, 2.16", "4.998, -13.4127, 12.8636, 2.16", "5.57732, -15.5902, 12.3057, 2.16", "6.01882, -17.1483, 11.9803, 2.16", "6.77884, -19.8304, 11.4201, 2.16", "7.33764, -21.8024, 11.0083, 2.16", "7.74282, -23.2323, 10.7096, 2.16", "8.81398, -26.9565, 9.91984, 2.52", "9.57097, -29.8497, 9.30895, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 13.3226, 11.8327, 2.52", "-0.061903, 17.5914, 11.8327, 2.52", "0.478587, 21.7952, 11.8327, 2.52", "0.96394, 25.5702, 11.8327, 2.52", "1.20935, 27.4789, 11.8327, 2.52", "1.50837, 29.8047, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.29129", "6.433, -28.5011, -0.0046052, 1.29129", "9.697, -43.1416, -0.0046052, 1.29129" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-68.6182, 22.8033, -27.504, 1.2", "-69.9403, 25.955, -26.9037, 1.2", "-71.4933, 28.3585, -26.2953, 1.2", "-72.688, 29.4619, -25.9055, 1.2", "-73.4844, 30.0786, -25.6608, 1.56", "-74.0009, 30.3726, -25.5969, 1.56", "-74.9308, 30.7942, -25.5646, 1.56", "-77.5528, 31.6365, -25.541, 0.96", "-81.685, 32.6629, -25.6997, 1.56", "-82.0971, 32.7538, -25.7233, 1.56", "-87.3003, 33.7582, -26.1521, 1.08", "-88.912, 34.0071, -26.3472, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-68.6182, 22.8033, -27.504, 1.08", "-69.3676, 22.6605, -27.9319, 1.08", "-70.1568, 22.4126, -28.4214, 1.56", "-71.7857, 21.6552, -29.6683, 0.84", "-72.389, 21.2729, -30.2556, 0.84", "-72.5806, 21.1202, -30.4765, 0.84", "-73.0603, 20.6743, -31.101, 0.84", "-73.4832, 20.1303, -31.8267, 0.84", "-73.9368, 19.3376, -32.8042, 0.84", "-74.2707, 18.5465, -33.6416, 0.84", "-74.4678, 18.0377, -34.1401, 0.84", "-74.6806, 17.5343, -34.6236, 0.84", "-74.8701, 17.1488, -34.9751, 0.84", "-75.2292, 16.5518, -35.4374, 0.84", "-75.6009, 16.0546, -35.7071, 0.84", "-75.8389, 15.7964, -35.8069, 0.84", "-76.3588, 15.3263, -35.9471, 0.84", "-76.7369, 15.0335, -36.0086, 0.84", "-77.334, 14.6263, -36.0594, 0.84", "-78.072, 14.1074, -36.0867, 0.84", "-78.8728, 13.4787, -36.0892, 0.84", "-79.3793, 12.9989, -36.069, 0.84", "-79.9693, 12.3354, -36.0384, 0.84", "-80.8999, 11.1047, -36.0227, 0.84", "-81.6348, 9.94879, -36.0299, 1.32", "-82.1575, 8.99172, -36.0357, 0.6", "-82.6807, 7.85312, -36.0377, 1.2", "-83.0508, 6.88707, -36.0522, 0.72", "-83.3309, 5.95773, -36.0879, 0.72", "-83.464, 5.34509, -36.137, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-1.45361, 30.582, 0.44676, 1.32", "-0.492218, 32.669, 1.42427, 1.32", "1.68296, 37.7872, 3.48622, 0.96", "2.55944, 40.1688, 4.30751, 0.96", "3.27612, 42.6594, 5.02032, 1.2", "3.57644, 44.0821, 5.34823, 1.2", "3.77683, 45.3376, 5.59743, 1.2", "3.82238, 46.7456, 5.76073, 1.44", "3.52518, 48.678, 5.76325, 1.08", "2.83425, 51.1334, 5.76523, 1.08", "1.87154, 53.8047, 5.76695, 1.56", "1.56624, 54.5331, 5.7672, 1.56", "0.62499, 56.5052, 5.76675, 1.56", "-0.748635, 59.0417, 5.76327, 1.56", "-0.87192, 59.2374, 5.76246, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-54.4499, 63.1385, 36.4288, 1.2", "-62.6666, 72.7785, 40.7452, 1.2", "-69.7783, 81.6468, 47.8187, 1.2", "-78.1997, 91.2255, 51.8345, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-54.4499, 63.1385, 36.4288, 1.44", "-61.5059, 70.3866, 40.0671, 1.2", "-67.3385, 78.7323, 43.719, 1.2", "-73.9538, 86.6318, 46.9335, 1.2", "-81.4862, 93.7332, 49.824, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.82739, -28.9897, 10.3659, 1.2", "3.1338, -33.5224, 9.4558, 1.2", "3.3709, -36.2296, 8.92124, 1.2", "3.69437, -39.2713, 8.34474, 1.2", "4.01273, -41.9556, 7.85742, 1.2", "4.2767, -43.8647, 7.53514, 1.2", "4.48428, -45.2926, 7.29601, 1.2", "4.70671, -46.3653, 7.11251, 1.2", "5.04093, -47.7495, 6.89796, 1.2", "5.27214, -48.5604, 6.81728, 1.2", "5.76103, -50.0928, 6.72129, 1.2", "6.10101, -51.2164, 6.66504, 1.2", "6.38263, -52.4315, 6.61005, 1.2", "6.50193, -53.4195, 6.55448, 1.2", "6.55963, -55.396, 6.4291, 1.2", "6.5391, -56.2309, 6.37376, 1.2", "6.4398, -58.0193, 6.2475, 1.2", "6.2588, -61.0561, 6.04579, 1.68", "6.01428, -64.7537, 5.79271, 1.08", "5.8101, -67.9903, 5.56997, 0.72", "5.73974, -69.6406, 5.46372, 1.92", "5.68081, -73.9375, 5.21911, 0.96", "5.74218, -77.0893, 5.06936, 0.84", "5.86207, -78.8841, 5.00613, 1.44", "6.14069, -81.2352, 4.95759, 1.08", "6.48226, -83.4384, 4.94011, 1.08", "7.10476, -86.9731, 4.9441, 0.72", "7.38065, -88.4817, 4.95713, 1.44", "7.74104, -90.6222, 4.96943, 1.44", "8.1732, -93.5035, 4.97422, 0.72", "8.32055, -94.6336, 4.97088, 1.2", "8.55996, -96.7108, 4.95703, 1.2", "8.75537, -98.3185, 4.94864, 1.56", "9.00874, -100.536, 4.87153, 1.32", "9.2573, -103.043, 4.72389, 0.84", "9.60767, -105.972, 4.52017, 1.56", "9.84488, -107.7, 4.39503, 1.56", "10.3011, -110.777, 4.16668, 0.96", "10.7407, -113.611, 3.95155, 0.96", "11.0646, -115.799, 3.77978, 1.32", "11.3706, -118.491, 3.55742, 1.32", "11.6453, -122.243, 3.24909, 0.72", "11.6901, -123.515, 3.14457, 1.56", "11.6775, -124.786, 3.02657, 1.56", "11.5719, -127.255, 2.78478, 0.96", "11.3565, -129.395, 2.51266, 1.68", "10.9265, -132.753, 1.95163, 1.08", "10.5789, -135.473, 1.42789, 0.96", "10.2231, -138.938, 0.736903, 1.44", "10.0751, -140.808, 0.359053, 1.08", "9.90356, -143.773, -0.272174, 0.84", "9.81123, -146.43, -0.876326, 1.44", "9.78202, -147.744, -1.18571, 1.44", "9.77658, -150.332, -1.7728, 0.72", "9.82257, -152.218, -2.19453, 0.72", "9.95179, -155.612, -2.95546, 1.32", "10.0713, -158.118, -3.54615, 0.96", "10.0764, -159.197, -3.81026, 0.96", "10.0693, -160.401, -4.14258, 0.96", "10.0003, -161.948, -4.63365, 0.96", "9.93354, -162.851, -4.92559, 0.96", "9.81389, -164.077, -5.36695, 0.96", "9.67431, -165.364, -5.84787, 0.96", "9.23746, -169.189, -7.28157, 1.44", "8.72973, -173.596, -8.88516, 0.48", "8.5054, -175.73, -9.61298, 1.56", "8.10815, -180.096, -11.0122, 0.84", "8.03134, -181.282, -11.3902, 0.84", "7.95814, -183.376, -12.0467, 0.84", "7.95644, -185.099, -12.5371, 0.84", "8.00834, -186.79, -12.9485, 0.84", "8.05679, -188.42, -13.3002, 0.84", "8.20587, -192.838, -14.1275, 0.6", "8.27477, -195.281, -14.6109, 1.08", "8.34727, -198.674, -15.3229, 0.72", "8.37335, -201.837, -16.01, 0.6", "8.34747, -203.347, -16.3379, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.82739, -28.9897, 10.3659, 1.92", "2.91317, -31.5871, 10.1956, 1.92", "3.00708, -34.4307, 10.0091, 1.92", "3.11299, -37.6375, 9.79876, 2.28", "3.16922, -39.3402, 9.6871, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.57097, -29.8497, 9.30895, 1.32", "12.2972, -31.2525, 10.1835, 1.32", "14.1243, -31.9939, 10.8404, 1.32", "15.6061, -32.5035, 11.4097, 1.32", "17.1974, -33.0036, 12.0467, 1.32", "19.3122, -33.6035, 12.9386, 1.32", "20.4235, -33.922, 13.4261, 1.32", "23.2936, -34.7244, 14.8263, 1.08", "24.1993, -34.97, 15.2951, 1.08", "24.5727, -35.0763, 15.4963, 1.08", "26.5639, -35.7056, 16.609, 1.44", "28.0988, -36.3234, 17.4445, 1.08", "28.8762, -36.7241, 17.855, 1.08", "30.7458, -37.812, 18.7695, 1.08", "31.9677, -38.5149, 19.3222, 0.84", "33.1992, -39.2189, 19.8348, 0.84", "34.6866, -39.9793, 20.4049, 0.84", "35.895, -40.5659, 20.8574, 0.84", "38.8674, -41.9482, 21.8247, 1.2", "40.5748, -42.6981, 22.2787, 0.84", "42.054, -43.2484, 22.5897, 0.84", "44.9662, -44.1544, 23.0949, 0.96", "47.8399, -45.0074, 23.5592, 0.72", "51.0593, -45.9362, 24.012, 1.2", "52.8546, -46.4512, 24.1927, 1.2", "54.7629, -46.9215, 24.3027, 0.6", "55.6578, -47.1047, 24.3121, 0.6", "65.7659, -49.0979, 26.2385, 0.6", "75.5601, -52.8622, 27.2373, 0.6", "85.7341, -54.3455, 29.2149, 0.6", "95.9471, -54.1773, 31.4147, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.57097, -29.8497, 9.30895, 1.8", "9.80531, -33.1607, 9.27335, 1.8", "10.1518, -36.5366, 9.23985, 1.8", "10.4246, -38.5068, 9.22298, 1.8", "10.5793, -39.4735, 9.19497, 1.8", "10.8188, -40.8698, 9.13549, 1.8", "11.0521, -42.1543, 9.11583, 1.8", "11.2971, -43.203, 9.1305, 1.8", "11.6394, -44.9027, 9.19933, 1.8", "11.789, -46.0306, 9.25144, 1.8", "11.9416, -47.6206, 9.33232, 1.8", "12.1306, -50.5615, 9.36469, 1.8", "12.2015, -52.0676, 9.3439, 1.8", "12.3213, -55.093, 9.24822, 2.16", "12.4525, -57.4212, 9.1172, 1.92", "12.5381, -58.3871, 9.04036, 1.92", "13.0634, -63.885, 8.45837, 2.16", "13.2976, -66.0612, 8.1368, 2.16", "13.4973, -67.5323, 7.89147, 2.16", "14.0122, -70.3799, 7.37264, 1.92", "14.4205, -72.1722, 7.02846, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.50837, 29.8047, 11.8327, 1.8", "2.91806, 32.682, 12.916, 1.8", "4.20118, 35.301, 13.902, 1.8", "5.54395, 38.0418, 14.9338, 1.8", "7.12317, 41.2651, 16.1473, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.932029", "12.961, -57.7822, -0.0046052, 0.932029", "16.225, -72.4228, -0.0046052, 0.932029" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-88.912, 34.0071, -26.3472, 1.68", "-89.1929, 34.0362, -26.3313, 1.68", "-92.4745, 34.5555, -26.1992, 1.2", "-95.0377, 35.1234, -26.1613, 1.68", "-96.1646, 35.4269, -26.1779, 1.68", "-97.8042, 35.957, -26.2806, 1.2", "-100.677, 36.9676, -26.5763, 1.2", "-102.324, 37.5809, -26.9067, 0.84", "-103.975, 38.26, -27.5079, 1.32", "-104.956, 38.6465, -28.0147, 1.32", "-106.584, 39.2244, -29.0146, 0.84", "-107.3, 39.4432, -29.5193, 0.84", "-109.872, 40.1357, -31.5254, 0.84", "-111.839, 40.614, -33.0935, 0.84", "-113.146, 40.9435, -34.1488, 0.84", "-114.14, 41.232, -34.911, 0.84", "-115.442, 41.6666, -35.8139, 0.84", "-116.709, 42.1945, -36.6095, 0.84", "-118.459, 43.1446, -37.6367, 0.84", "-119.641, 43.8812, -38.2999, 0.84", "-121.253, 44.9652, -39.196, 0.84", "-123.256, 46.3879, -40.3746, 0.84", "-124.3, 47.1825, -41.0167, 0.84", "-126.424, 48.8185, -42.3793, 1.32", "-127.924, 49.9641, -43.3668, 1.32", "-129.928, 51.5849, -44.7754, 0.96", "-131.42, 52.8479, -45.9305, 0.96", "-132.268, 53.5517, -46.5747, 0.96", "-133.444, 54.4316, -47.4226, 0.96", "-134.496, 55.1079, -48.0782, 0.96", "-137.38, 56.801, -49.652, 0.72", "-138.435, 57.3533, -50.1373, 0.72", "-142.569, 59.3002, -51.6764, 1.08", "-143.758, 59.819, -52.0538, 1.08", "-147.527, 61.5851, -53.1177, 1.08", "-149.474, 62.5101, -53.6707, 1.08", "-151.624, 63.6381, -54.3405, 1.08", "-153.493, 64.7385, -55.0164, 1.08", "-154.157, 65.1616, -55.316, 1.08", "-157.005, 67.0933, -56.8018, 1.08", "-159.177, 68.6104, -58.1083, 1.08", "-163.307, 71.4184, -60.6901, 1.44", "-164.414, 72.1317, -61.3797, 1.44", "-167.129, 73.6661, -62.8925, 1.2", "-168.221, 74.2206, -63.3506, 1.2", "-169.736, 74.9011, -63.7766, 1.2", "-174.009, 76.7502, -64.5251, 1.08", "-176.672, 77.8073, -64.8763, 1.08", "-179.948, 79.1467, -65.258, 1.08", "-184.614, 81.0527, -65.7327, 0.72", "-187.66, 82.2728, -66.0335, 0.72", "-190.096, 83.2364, -66.2616, 1.08", "-193.084, 84.3442, -66.4785, 0.84", "-194.823, 84.8526, -66.5476, 0.84", "-196.067, 85.1125, -66.5808, 0.84", "-197.574, 85.3328, -66.6354, 0.84", "-200.174, 85.6116, -66.5965, 0.84", "-203.87, 85.9046, -66.2454, 0.84", "-209.461, 86.1762, -65.2575, 0.6", "-210.268, 86.1842, -65.0949, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-88.912, 34.0071, -26.3472, 1.32", "-89.2489, 34.9868, -27.1777, 1.32", "-89.7349, 36.3156, -28.3872, 0.84", "-90.2887, 37.922, -29.9714, 1.44", "-91.1543, 40.1545, -32.4101, 1.08", "-91.7537, 41.428, -33.8678, 1.08", "-91.9919, 41.8535, -34.3769, 1.08", "-92.9508, 43.2266, -36.2176, 1.56", "-94.0782, 44.4285, -38.0157, 0.96", "-95.0089, 45.1691, -39.2127, 0.96", "-96.1425, 45.8092, -40.1627, 0.96", "-97.0434, 46.1741, -40.6579, 0.96", "-97.9005, 46.4368, -40.9958, 0.96", "-98.744, 46.6179, -41.2049, 0.96", "-99.9385, 46.8755, -41.4145, 0.96", "-102.466, 47.475, -41.8449, 0.72", "-104.688, 47.943, -42.232, 0.72", "-106.342, 48.2755, -42.5093, 0.72", "-107.589, 48.5011, -42.7191, 0.72", "-109.137, 48.7662, -42.9918, 0.72", "-111.514, 49.203, -43.4516, 0.72", "-114.061, 49.7386, -43.9657, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.87192, 59.2374, 5.76246, 1.32", "-1.47052, 60.4346, 6.18503, 1.32", "-2.31433, 61.9742, 6.66325, 1.32", "-3.46315, 64.0771, 7.28162, 1.08", "-4.17277, 65.4324, 7.65527, 1.08", "-4.576, 66.2624, 7.86437, 1.08", "-5.15871, 67.5457, 8.16047, 1.08", "-5.81325, 68.9678, 8.39597, 1.08", "-6.12116, 69.6285, 8.48777, 1.08", "-6.48712, 70.4579, 8.56246, 1.08", "-6.97793, 71.5151, 8.65037, 1.08", "-7.35714, 72.2112, 8.71521, 1.08", "-7.79144, 72.791, 8.7786, 1.08", "-8.33541, 73.2704, 8.83934, 1.08", "-9.16862, 73.8844, 8.91431, 1.08", "-10.2179, 74.6227, 9.02347, 1.08", "-11.144, 75.3001, 9.13397, 1.08", "-12.1346, 76.142, 9.27283, 1.08", "-13.0228, 77.2173, 9.28224, 0.96", "-13.2859, 77.9943, 9.14736, 0.96", "-13.3656, 79.1851, 8.8108, 0.96", "-13.3302, 80.1589, 8.50855, 0.96", "-13.2587, 80.9999, 8.24069, 0.96", "-12.9069, 84.2097, 7.19768, 0.72", "-12.7776, 85.5376, 6.73971, 0.72", "-12.7246, 86.6803, 6.33974, 0.72", "-12.716, 87.9045, 5.94357, 0.72", "-12.7694, 89.9765, 5.39429, 0.72", "-12.8216, 91.0079, 5.19219, 0.72", "-12.9122, 91.9771, 5.10218, 0.72", "-13.0919, 93.3736, 4.92767, 0.72", "-13.3813, 95.5272, 4.62718, 0.72", "-13.6476, 97.0679, 4.40483, 0.72", "-13.948, 98.3544, 4.22227, 0.72", "-14.5348, 100.33, 3.94606, 1.2", "-15.7799, 103.347, 3.54944, 1.08", "-16.5853, 104.676, 3.40513, 1.08", "-17.4844, 105.823, 3.30903, 1.08", "-18.1673, 106.612, 3.27843, 1.08", "-18.8035, 107.308, 3.25253, 0.72", "-20.6227, 109.262, 3.15641, 1.2", "-22.5746, 111.34, 3.09908, 1.08", "-24.2178, 113.134, 3.05726, 1.44", "-25.0246, 114.15, 3.03777, 1.44", "-26.2396, 116.065, 3.00515, 1.2", "-26.9052, 117.424, 2.98915, 1.2", "-27.6037, 119.449, 3.00098, 1.08", "-28.1243, 121.789, 3.07174, 1.08", "-28.5158, 124.112, 3.22448, 0.96", "-28.8368, 126.44, 3.44555, 0.96", "-28.9668, 127.655, 3.6119, 1.2", "-29.0797, 129.115, 3.74236, 0.72", "-29.1461, 132.02, 3.8027, 1.2", "-29.144, 132.789, 3.75675, 1.2", "-29.2082, 134.31, 3.58207, 1.2", "-29.3889, 135.809, 3.32848, 1.2", "-29.9391, 138.68, 2.68085, 1.2", "-30.3216, 139.961, 2.30634, 1.2", "-30.6847, 140.755, 2.03178, 1.2", "-31.7523, 142.337, 1.52684, 0.96", "-32.6428, 143.248, 1.32458, 1.2", "-33.2319, 143.76, 1.27341, 1.2", "-34.2338, 144.573, 1.27775, 1.2", "-34.8611, 145.095, 1.28107, 1.2", "-36.4019, 146.5, 1.29072, 1.2", "-38.1376, 148.394, 1.3033, 1.2", "-39.0592, 149.591, 1.31024, 1.2", "-39.6502, 150.447, 1.3143, 1.2", "-40.2863, 151.51, 1.31846, 1.2", "-40.8247, 152.538, 1.32174, 1.2", "-41.6624, 154.522, 1.32634, 0.84", "-42.3982, 156.531, 1.35221, 1.32", "-43.434, 159.534, 1.41803, 0.84", "-43.9451, 161.041, 1.4635, 0.84", "-44.3462, 162.222, 1.50795, 0.84", "-44.8845, 163.831, 1.57913, 0.84", "-45.5389, 165.667, 1.71036, 0.84", "-45.9618, 166.694, 1.80869, 0.84", "-46.6138, 167.912, 1.88093, 0.84", "-47.0943, 168.593, 1.88987, 0.84", "-48.0163, 169.624, 1.85621, 1.2", "-49.5192, 171.015, 1.70717, 0.84", "-50.9224, 172.142, 1.53971, 0.84", "-52.5705, 173.291, 1.35855, 1.2", "-53.928, 173.974, 1.23397, 0.6", "-55.5833, 174.708, 1.07598, 0.6", "-57.3458, 175.354, 0.901201, 1.08", "-59.3729, 175.942, 0.69226, 0.48", "-60.5319, 176.189, 0.628006, 0.48", "-63.928, 176.711, 0.740455, 0.84", "-69.2696, 186.112, 1.98792, 0.84", "-74.5151, 195.661, 1.78542, 0.84", "-78.4942, 205.856, 1.41592, 0.84", "-82.7641, 215.765, -0.304002, 0.84", "-86.746, 225.823, -1.93421, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.87192, 59.2374, 5.76246, 1.32", "-3.33638, 61.8495, 5.14546, 1.32", "-4.17456, 62.7936, 4.86282, 1.32", "-5.16627, 64.0455, 4.44103, 1.32", "-6.11928, 65.4689, 3.91588, 1.32", "-6.64753, 66.3373, 3.58779, 1.32", "-7.38896, 67.8545, 3.03955, 1.32", "-7.84955, 69.4307, 2.43581, 1.32", "-8.10964, 71.3005, 1.74855, 1.56", "-8.03935, 73.1599, 1.09478, 1.56", "-7.89207, 73.8217, 0.899009, 1.56", "-6.87796, 76.4378, 0.197279, 1.2", "-6.38186, 77.3164, -0.0137248, 1.2", "-5.47509, 78.5219, -0.310821, 1.2", "-3.9466, 80.136, -0.770488, 1.08", "-2.7766, 81.182, -1.11841, 1.08", "-2.03163, 81.7762, -1.38583, 1.08", "-1.31841, 82.3161, -1.71637, 1.08", "-0.600475, 82.9394, -2.15187, 1.08", "0.697323, 84.2952, -3.18253, 1.8", "0.933813, 84.6347, -3.45216, 1.8", "1.77326, 86.4812, -4.88228, 1.32", "2.05346, 87.5598, -5.69372, 1.32", "2.1017, 88.9425, -6.69527, 1.08", "2.00142, 89.3406, -6.96039, 1.08", "1.48862, 90.3333, -7.5179, 1.08", "0.828278, 91.3789, -8.04266, 1.44", "0.273182, 92.1411, -8.39451, 1.44", "-0.409934, 93.0627, -8.82961, 1.44", "-0.98944, 93.8728, -9.25645, 1.44", "-2.10425, 95.6691, -10.2892, 0.84", "-2.65382, 96.7461, -10.9221, 0.84", "-3.49078, 98.9789, -12.2852, 1.44", "-3.83248, 100.257, -12.9278, 1.44", "-4.17855, 102.182, -13.7198, 0.96", "-4.47477, 104.162, -14.512, 0.96", "-4.62212, 105.17, -14.8951, 0.96", "-4.747, 106.669, -15.3505, 0.72", "-4.61643, 110.62, -16.0729, 1.2", "-4.4301, 112.327, -16.197, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-78.1997, 91.2255, 51.8345, 0.6", "-84.8484, 101.064, 56.6982, 0.6", "-89.1455, 112.469, 61.0695, 0.6", "-92.9682, 123.1, 67.452, 0.6", "-98.7634, 133.085, 73.1634, 0.6", "-103.745, 142.728, 80.1621, 0.6", "-109.443, 152.319, 86.6017, 0.6", "-114.721, 163.001, 91.5627, 0.6", "-121.382, 173.537, 94.5314, 0.6", "-128.403, 183.527, 98.3855, 0.6", "-134.336, 193.054, 104.685, 0.6", "-139.38, 204.214, 108.77, 0.6", "-143.327, 215.183, 114.458, 0.6", "-148.403, 225.426, 120.473, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-78.1997, 91.2255, 51.8345, 0.84", "-86.2083, 96.572, 55.9914, 0.6", "-92.7956, 103.666, 60.2767, 0.6", "-97.4225, 111.916, 65.2837, 0.6", "-101.28, 120.636, 70.2299, 0.6", "-105.8, 128.74, 75.5673, 0.6", "-112.495, 136.042, 79.2868, 0.6", "-118.5, 144.243, 82.3709, 0.6", "-124.406, 152.323, 85.9551, 0.6", "-129.763, 160.891, 89.3548, 0.6", "-134.98, 169.281, 93.3894, 0.6", "-139.271, 178.812, 95.6822, 0.6", "-142.987, 188.453, 98.6055, 0.6", "-145.827, 198.379, 101.692, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "8.34747, -203.347, -16.3379, 0.96", "6.9761, -203.089, -17.3295, 0.96", "5.93246, -202.893, -18.0842, 0.96", "5.19077, -202.753, -18.6205, 0.72", "4.64484, -202.651, -19.0152, 0.72", "4.18128, -202.563, -19.3504, 0.72", "3.3921, -202.415, -19.921, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.34747, -203.347, -16.3379, 0.96", "8.06067, -208.493, -18.2066, 0.96", "8.08403, -210.311, -19.3208, 0.96", "8.26473, -212.386, -20.6795, 1.32", "8.60814, -215.082, -22.3096, 0.6", "8.96111, -216.663, -23.3431, 0.6", "9.46714, -218.534, -24.5334, 1.2", "11.247, -224.464, -28.1125, 1.2", "11.8797, -226.456, -29.3528, 1.56", "12.8437, -229.297, -31.0877, 0.96", "14.7001, -234.428, -33.9666, 0.6", "15.5194, -236.767, -35.0799, 1.08", "16.23, -238.928, -36.0409, 0.72", "16.4937, -240.063, -36.4852, 0.72", "16.7453, -241.644, -37.1634, 1.08", "16.9164, -243.38, -37.9103, 0.72", "16.9584, -245.391, -38.6693, 0.72", "16.9261, -250.682, -40.7424, 0.48", "16.8748, -252.599, -41.4926, 1.56", "16.6577, -255.96, -42.7516, 1.08", "16.5031, -257.301, -43.2274, 0.72", "16.1, -259.906, -44.0629, 1.08", "15.6795, -262.341, -44.8145, 0.72", "15.4525, -263.614, -45.1372, 0.72", "14.9959, -266.698, -45.9997, 1.2", "14.7263, -269.132, -46.7279, 0.72", "14.6321, -270.232, -47.0705, 0.72", "14.531, -273.508, -48.0442, 0.72", "14.7382, -275.384, -48.7088, 1.08", "15.0553, -277.001, -49.2795, 0.96", "15.3523, -278.205, -49.6834, 0.96", "15.7302, -279.589, -50.1019, 0.96", "16.4416, -282.146, -50.7612, 0.96", "17.9826, -287.731, -51.9163, 1.2", "19.1212, -291.61, -52.6664, 0.6", "19.9463, -294.189, -53.0878, 0.6", "20.4443, -295.642, -53.2519, 0.6", "21.0316, -297.284, -53.3351, 0.6", "21.3707, -298.423, -53.308, 0.6", "21.5847, -299.365, -53.2129, 0.6", "21.8925, -300.687, -53.0959, 0.6", "22.6337, -303.693, -52.9897, 0.6", "22.8865, -304.722, -52.9919, 0.6", "24.3172, -310.621, -53.1505, 0.96", "24.9829, -313.441, -53.2663, 0.48", "25.3745, -315.223, -53.3647, 0.48", "26.1955, -319.442, -53.6572, 0.72", "26.6413, -321.963, -53.8495, 0.48", "26.9415, -323.969, -53.9313, 1.2", "27.3765, -327.771, -53.9799, 0.84", "27.5349, -330.084, -53.9635, 1.32", "27.6087, -333.414, -53.8943, 0.84", "27.5441, -335.978, -53.802, 1.44", "27.1557, -341.746, -53.5888, 0.48", "26.8732, -344.72, -53.4747, 0.48", "26.3253, -348.58, -53.3764, 0.48", "25.8806, -350.88, -53.367, 0.48", "25.3116, -353.008, -53.4295, 0.96", "23.6151, -357.667, -53.8397, 0.48", "23.2368, -358.544, -53.9653, 0.84", "21.8809, -361.23, -54.3955, 0.6", "20.8095, -362.942, -54.737, 0.84", "19.4964, -364.738, -55.1749, 0.6", "17.9534, -366.475, -55.7662, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.16922, -39.3402, 9.6871, 0.96", "2.36844, -41.0883, 9.97527, 0.96", "1.7254, -42.9491, 10.1969, 0.96", "1.54504, -43.6622, 10.3626, 0.96", "1.23166, -44.9514, 10.798, 0.96", "0.938186, -46.1192, 11.2842, 0.96", "0.599118, -47.4381, 11.963, 0.96", "0.138566, -49.5047, 13.192, 1.32", "-0.437111, -52.0611, 14.8586, 0.84", "-0.785931, -53.7459, 16.0194, 0.84", "-0.99053, -54.8772, 16.8491, 0.84", "-1.42545, -57.2965, 18.773, 1.32", "-1.73874, -58.7101, 20.0212, 1.32", "-2.09708, -59.9738, 21.2401, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.16922, -39.3402, 9.6871, 1.44", "3.57451, -46.0555, 10.0136, 1.44", "3.84315, -50.8621, 10.2162, 1.44", "4.00603, -53.7387, 10.3178, 1.44", "4.30447, -59.7557, 10.4926, 1.8", "4.42885, -62.2635, 10.5654, 1.8", "4.5516, -64.7383, 10.6373, 1.8", "4.63565, -66.8033, 10.6384, 1.8", "4.7681, -71.0415, 10.6426, 1.56", "4.90115, -75.5593, 10.6509, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "14.4205, -72.1722, 7.02846, 1.56", "16.7395, -74.6526, 7.66179, 1.56", "18.1371, -76.1723, 8.04105, 1.56", "19.8683, -78.0501, 8.51133, 1.2", "20.9118, -79.1789, 8.7951, 1.2", "22.4739, -80.8556, 9.22112, 1.56", "24.7141, -83.3063, 9.82764, 1.2", "25.7299, -84.4581, 10.0987, 1.8", "26.8038, -85.6929, 10.3836, 1.8", "28.8913, -88.1619, 10.9536, 1.08", "30.3599, -89.9431, 11.3641, 1.68", "32.0537, -92.0481, 11.8144, 1.32", "33.1597, -93.4615, 12.0944, 1.32", "33.842, -94.345, 12.2603, 1.32", "35.4503, -96.4981, 12.6306, 1.08", "36.5746, -98.0653, 12.8447, 1.56", "38.2525, -100.556, 13.1521, 1.2", "38.8407, -101.466, 13.258, 1.2", "39.3937, -102.342, 13.372, 1.2", "40.4663, -104.058, 13.6187, 1.68", "41.3413, -105.486, 13.8802, 1.2", "42.4273, -107.273, 14.2887, 0.96", "43.1261, -108.359, 14.5994, 0.96", "44.9675, -111.007, 15.4485, 0.84", "45.8973, -112.282, 15.8969, 0.84", "47.3397, -114.162, 16.624, 1.44", "48.1001, -115.117, 17.0194, 1.44", "49.4911, -116.822, 17.6964, 1.44", "50.2988, -117.866, 18.0838, 0.96", "51.1872, -119.088, 18.4822, 1.44", "51.5052, -119.531, 18.6143, 1.44", "52.3272, -120.685, 18.9084, 1.44", "52.9632, -121.616, 19.1282, 1.44", "54.1358, -123.363, 19.5084, 1.08", "55.2179, -124.913, 19.8353, 1.08", "55.8717, -125.767, 20.0203, 1.08", "57.1782, -127.332, 20.3843, 1.44", "57.8221, -128.053, 20.5697, 1.44", "59.4716, -129.901, 21.0671, 0.84", "60.5348, -131.12, 21.3946, 1.56", "62.324, -133.259, 21.9526, 1.08", "63.1896, -134.318, 22.2246, 1.32", "65.7714, -137.225, 23.0536, 1.08", "67.0693, -138.59, 23.4917, 1.08", "68.1884, -139.697, 23.8814, 1.08", "69.8347, -141.211, 24.4628, 1.08", "70.9752, -142.201, 24.8238, 1.08", "74.4603, -145.077, 25.7947, 1.44", "76.8758, -146.992, 26.3732, 1.08", "78.3837, -148.188, 26.6943, 1.08", "80.8088, -150.204, 27.1781, 1.08", "83.5814, -152.545, 27.6832, 0.72", "85.7022, -154.431, 28.0096, 1.32", "87.225, -155.953, 28.1543, 0.84", "88.1811, -156.956, 28.1912, 0.84", "89.8115, -158.855, 28.1927, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "14.4205, -72.1722, 7.02846, 1.68", "14.7057, -74.531, 6.91524, 1.68", "15.0043, -76.6119, 6.84169, 1.68", "15.2043, -77.8041, 6.8141, 1.68", "15.8665, -81.2402, 6.7752, 1.32", "16.3445, -83.522, 6.76417, 1.56", "16.918, -86.4695, 6.71581, 1.56", "17.1365, -87.5792, 6.69035, 1.56", "17.4223, -89.2833, 6.62087, 1.56", "17.7035, -91.3369, 6.49836, 1.56", "18.0414, -94.2521, 6.28421, 1.2", "18.4698, -98.353, 5.94634, 1.56", "18.741, -101.212, 5.71785, 1.2", "19.0798, -104.806, 5.45845, 1.2", "19.2863, -106.888, 5.30404, 1.56", "19.5444, -109.284, 5.10702, 1.56", "19.7935, -111.213, 4.9365, 1.56", "20.2418, -114.186, 4.7344, 1.2", "20.6119, -116.773, 4.56715, 1.56", "20.9987, -119.713, 4.37541, 1.44", "21.2296, -121.776, 4.22696, 1.44", "21.3605, -123.26, 4.1051, 1.44", "21.7629, -128.258, 3.6829, 1.08", "22.0104, -130.94, 3.403, 1.08", "22.2817, -133.34, 3.1226, 1.44", "22.4283, -134.409, 2.99489, 1.44", "22.6866, -135.96, 2.79405, 1.44", "23.1369, -138.159, 2.44946, 1.44", "23.9681, -141.224, 1.81185, 1.32", "24.651, -143.34, 1.37055, 1.32", "25.042, -144.46, 1.13396, 1.32", "25.3491, -145.388, 0.938623, 1.32", "25.8338, -147.029, 0.60551, 1.32", "26.0705, -148.015, 0.421992, 1.32", "26.3193, -149.177, 0.243674, 1.32", "26.84, -151.618, -0.143346, 1.8", "27.3286, -153.965, -0.53909, 1.8", "27.7193, -156.012, -0.836984, 1.8", "28.0693, -158.063, -1.10207, 1.8", "28.5643, -161.409, -1.49814, 1.56", "28.9914, -164.816, -1.87831, 1.56", "29.1589, -166.454, -2.04993, 1.56", "29.4567, -169.955, -2.3694, 1.32", "29.5699, -171.602, -2.49877, 1.32", "29.7113, -174.563, -2.69752, 1.8", "29.7619, -177.167, -2.84065, 1.8", "29.8273, -179.838, -2.94844, 1.56", "29.9797, -182.349, -3.03851, 1.56", "30.1575, -184.031, -3.10223, 1.56", "30.3243, -185.247, -3.12926, 1.56", "30.516, -186.49, -3.16463, 1.56", "30.8036, -188.284, -3.24635, 1.56", "31.1475, -190.488, -3.39641, 1.2", "31.4522, -192.598, -3.61572, 1.2", "31.6453, -194.05, -3.80288, 1.2", "31.9645, -196.756, -4.22892, 1.56", "32.2606, -199.354, -4.69893, 1.56", "32.4497, -200.97, -5.01357, 1.56", "32.7372, -203.095, -5.4162, 1.56", "33.0401, -205.113, -5.80157, 1.56", "33.7104, -209.086, -6.55201, 1.56", "34.5881, -213.645, -7.39866, 1.32", "35.3645, -217.437, -8.12457, 1.32", "35.7866, -219.478, -8.51887, 0.84", "36.2177, -221.574, -8.92286, 1.32", "36.738, -224.063, -9.40133, 1.08", "37.271, -226.393, -9.85112, 1.44", "37.8533, -228.845, -10.3608, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.12317, 41.2651, 16.1473, 1.2", "5.25346, 44.584, 16.9883, 1.2", "4.54854, 46.0989, 17.4558, 1.2", "4.02942, 47.4195, 17.9063, 1.2", "3.22131, 50.1268, 19.0085, 1.2", "2.90643, 51.5849, 19.641, 1.2", "2.70349, 52.9863, 20.2617, 1.08", "2.64475, 55.2189, 21.337, 1.56", "2.69458, 56.7203, 22.0665, 1.56", "2.98534, 60.0306, 23.6061, 1.2", "3.26987, 62.1618, 24.5115, 0.96", "3.56666, 64.4957, 25.3786, 1.32", "3.65752, 65.5604, 25.7426, 1.32", "3.70398, 66.7467, 26.0991, 1.32", "3.72633, 68.5152, 26.5372, 1.32", "3.71684, 69.5071, 26.7426, 1.32", "3.72145, 71.4425, 27.1506, 1.2", "3.78693, 73.455, 27.6317, 1.56", "3.85039, 74.7991, 27.9732, 1.2", "3.99604, 76.8692, 28.5434, 1.68", "4.3214, 79.6785, 29.379, 1.2", "4.52387, 80.8025, 29.7333, 1.44", "5.06367, 82.6662, 30.3346, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.12317, 41.2651, 16.1473, 1.44", "7.07251, 46.029, 15.6846, 1.44", "7.04927, 48.2133, 15.4725, 1.44", "7.02242, 50.7385, 15.2272, 1.44", "6.99151, 53.6446, 14.945, 1.44", "6.95409, 57.163, 14.6033, 1.8", "6.92243, 60.1394, 14.3142, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-2.09708, -59.9738, 21.2401, 0.96", "-3.02841, -64.5966, 21.9717, 0.96", "-3.66017, -67.4462, 22.3093, 0.96", "-4.03728, -69.289, 22.4865, 0.96", "-4.32541, -70.6874, 22.6107, 0.96", "-4.64488, -72.2766, 22.7344, 0.96", "-5.13984, -75.1448, 22.9572, 0.6", "-5.32439, -76.0296, 22.9866, 0.6", "-5.68113, -77.6071, 23.0649, 1.08", "-6.49892, -80.9018, 23.3197, 0.72", "-7.15075, -83.3758, 23.5479, 0.72", "-8.21068, -87.1959, 23.9072, 0.72", "-9.32482, -90.8526, 24.2195, 1.2", "-10.0097, -92.8428, 24.3562, 1.08", "-10.9608, -95.2189, 24.4602, 0.48", "-12.1778, -97.9895, 24.493, 0.48", "-13.6094, -101.049, 24.4441, 1.44", "-14.7128, -103.363, 24.3298, 0.84", "-15.2616, -104.672, 24.2473, 1.08", "-16.0572, -106.784, 24.0888, 1.08", "-17.0174, -109.719, 23.8744, 1.44", "-17.6534, -111.901, 23.757, 0.84", "-18.0618, -113.504, 23.7474, 1.32", "-18.6197, -116.191, 23.8445, 0.72", "-18.8879, -117.525, 23.9219, 0.72", "-19.166, -118.718, 24.0205, 0.72", "-19.8093, -120.463, 24.1656, 0.72", "-20.9933, -122.367, 24.2578, 1.08", "-22.1993, -123.931, 24.3078, 0.6", "-23.8229, -125.563, 24.3009, 1.08", "-25.103, -126.618, 24.2599, 0.96", "-27.3294, -128.077, 24.1036, 0.84", "-29.6943, -129.192, 23.805, 0.84", "-32.9036, -141.413, 23.5982, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-2.09708, -59.9738, 21.2401, 0.84", "-2.47311, -60.8184, 21.7826, 0.84", "-2.74358, -61.4224, 22.1568, 0.84", "-2.86513, -61.7112, 22.3211, 0.84", "-3.27913, -62.8105, 22.904, 0.48", "-3.49161, -63.4209, 23.2063, 0.48", "-3.8383, -64.4808, 23.6851, 0.84", "-4.03932, -65.1538, 23.9412, 0.84", "-4.23025, -65.7958, 24.1486, 0.84", "-4.63536, -67.2362, 24.5444, 0.84", "-4.7756, -67.7834, 24.666, 0.84", "-4.99621, -68.7696, 24.855, 0.6", "-5.13912, -69.3995, 24.9601, 1.08", "-5.3635, -70.2305, 25.0957, 1.08", "-5.55296, -70.8313, 25.1985, 1.56", "-5.81732, -71.5448, 25.3169, 1.56", "-6.03716, -72.1043, 25.4177, 1.08", "-6.45007, -73.1021, 25.6165, 0.72", "-6.72503, -73.7377, 25.7535, 1.32", "-6.97133, -74.2734, 25.8782, 1.32", "-7.34683, -75.0154, 26.0622, 0.72", "-7.7606, -75.7801, 26.2523, 0.72", "-10.0804, -80.2999, 27.8354, 0.72", "-11.803, -85.0723, 29.5046, 0.72", "-13.7257, -89.5697, 31.5959, 0.72", "-15.6556, -94.0729, 33.6693, 0.72", "-16.9837, -98.6471, 36.0503, 0.72", "-17.4474, -103.171, 38.8113, 0.72", "-17.8801, -108.113, 40.8252, 0.72", "-18.0316, -113.405, 41.8013, 0.72", "-17.9866, -118.617, 43.1164, 0.72", "-18.4591, -123.863, 44.2136, 0.72", "-19.9091, -129.022, 44.5917, 0.72", "-21.5079, -134.142, 44.8341, 0.72", "-22.3107, -139.435, 45.4053, 0.72", "-22.6589, -144.7, 46.4652, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.90115, -75.5593, 10.6509, 1.08", "8.34735, -76.2551, 7.17575, 1.08", "10.7961, -76.9821, 4.88897, 1.08", "11.4913, -77.2733, 4.25262, 1.08", "12.081, -77.6092, 3.65307, 1.08", "12.4224, -77.8425, 3.29664, 1.08", "13.7685, -78.9069, 1.82786, 1.44", "14.6227, -79.8271, 0.784164, 1.44", "15.4097, -80.9231, -0.352657, 1.44", "16.5104, -82.7049, -2.12287, 1.44", "16.8733, -83.4037, -2.76559, 1.44", "17.6764, -85.279, -4.30609, 1.2", "18.7028, -88.3285, -6.54078, 1.2", "19.3462, -90.4167, -7.99084, 1.68", "20.0158, -92.674, -9.57032, 0.72", "20.4718, -94.3767, -10.7364, 0.72", "20.938, -96.2471, -12.1599, 1.44", "21.2355, -97.58, -13.2952, 1.44", "21.8373, -99.9875, -15.9184, 0.96", "22.5985, -102.074, -19.139, 1.68", "22.9084, -102.718, -20.4396, 1.68", "23.7258, -104.002, -23.6425, 1.68", "24.4142, -104.908, -26.2188, 1.68", "25.5389, -106.303, -30.3149, 1.68", "26.7402, -107.87, -34.7393, 1.68", "27.604, -109.075, -37.9711, 1.2", "28.47, -110.412, -41.2083, 0.84", "28.829, -111.075, -42.5349, 1.44", "29.1421, -111.781, -43.6941, 0.72", "29.7667, -113.569, -46.1547, 1.32", "30.6502, -116.59, -49.7511, 0.6", "30.8635, -117.348, -50.5904, 0.6", "31.1226, -118.387, -51.6922, 0.96", "31.3504, -119.257, -52.6546, 0.96", "32.3854, -122.662, -56.6627, 0.6", "32.8394, -123.905, -58.0782, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.90115, -75.5593, 10.6509, 1.32", "4.94473, -75.722, 10.6382, 1.32", "6.15671, -79.9851, 10.395, 1.32", "7.60885, -84.9374, 10.2058, 1.68", "8.52118, -88.0925, 10.1276, 2.04", "9.30584, -90.8919, 10.077, 1.68", "9.93451, -93.2055, 10.0501, 1.68", "10.3013, -94.6064, 10.0581, 1.68", "10.769, -96.4815, 10.108, 1.68", "11.4103, -99.3397, 10.2027, 2.04", "11.714, -100.992, 10.2754, 1.68", "12.034, -103.151, 10.3658, 1.68", "12.3265, -105.48, 10.4913, 1.68", "12.6499, -108.123, 10.6741, 1.56", "12.9622, -110.568, 10.8765, 1.56", "13.6341, -115.473, 11.3418, 1.56", "14.214, -119.462, 11.7567, 1.8", "15.1911, -125.833, 12.4632, 1.56", "16.2049, -132.205, 13.1693, 1.44", "16.6423, -134.914, 13.4583, 1.92", "17.1764, -138.197, 13.7773, 1.8", "17.5743, -140.729, 13.9767, 1.68", "18.0187, -143.896, 14.157, 2.04", "19.7133, -156.869, 14.3888, 1.8", "20.186, -160.83, 14.3253, 1.8", "20.4305, -162.98, 14.2448, 1.68", "20.6495, -165.011, 14.1265, 1.68", "21.2316, -170.634, 13.6892, 1.68", "21.5811, -173.692, 13.3248, 1.68", "21.9202, -176.25, 12.9195, 1.68", "22.4006, -179.614, 12.3809, 1.32", "23.0084, -183.644, 11.7657, 1.32", "23.6666, -187.846, 11.1639, 1.32", "24.7663, -194.541, 10.2971, 1.32", "25.508, -199.073, 9.78954, 1.8", "25.9786, -202.099, 9.48568, 1.8", "26.3333, -204.533, 9.27693, 1.8", "26.6198, -206.677, 9.14361, 1.8", "27.0641, -210.671, 9.02326, 1.68", "27.6609, -216.412, 8.95371, 2.04", "28.2189, -220.929, 8.87704, 2.04", "28.71, -224.632, 8.8092, 1.8", "29.3783, -229.332, 8.73365, 1.56", "30.0963, -234.097, 8.67356, 1.92", "30.9896, -240.148, 8.56213, 1.56", "31.6771, -244.857, 8.42809, 1.32", "32.4692, -250.171, 8.20051, 1.32", "32.8251, -252.697, 8.083, 1.32", "33.1269, -254.905, 7.98891, 1.2", "33.7481, -260.026, 7.78809, 1.68", "34.16, -264.775, 7.7495, 1.68", "34.3584, -267.834, 7.71701, 1.68", "34.522, -270.44, 7.67313, 1.68", "34.6735, -273.344, 7.61367, 1.68", "34.7477, -274.577, 7.60726, 1.68", "35.5297, -282.442, 7.96773, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "89.8115, -158.855, 28.1927, 0.84", "91.4451, -158.535, 30.0864, 0.84", "92.692, -158.262, 31.6351, 0.84", "93.6412, -158.057, 32.8839, 1.32", "95.1536, -157.755, 35.0151, 1.32", "96.3096, -157.541, 36.7509, 1.68", "97.7158, -157.229, 38.97, 1.2", "98.406, -157.079, 40.208, 0.96", "99.2298, -156.825, 41.9226, 1.44", "100.136, -156.4, 44.0873, 0.84", "100.502, -156.114, 45.1925, 0.84", "100.77, -155.736, 46.4, 0.84", "100.832, -155.373, 47.3533, 0.84", "100.816, -154.839, 48.5344, 0.84", "100.677, -154.213, 49.6799, 0.84", "100.364, -153.326, 51.0517, 1.08", "99.933, -152.271, 52.6389, 0.72", "99.3141, -151.002, 54.7468, 1.2", "104.454, -148.12, 62.2708, 1.2", "109.741, -143.897, 69.0841, 1.2", "115.197, -138.571, 74.9947, 1.2", "118.621, -132.278, 81.5652, 1.2", "123.054, -127.2, 88.4675, 1.2", "126.849, -121.3, 95.1593, 1.2", "131.979, -115.029, 100.489, 1.2", "136.58, -108.678, 106.214, 1.2", "140.064, -101.665, 112.041, 1.2", "143.598, -93.7161, 116.588, 1.2", "145.816, -85.6224, 121.735, 1.2", "147.153, -76.6578, 125.746, 1.2", "148.446, -67.7286, 129.844, 1.2", "149.985, -58.6871, 133.606, 1.2", "152.273, -50.6883, 138.856, 1.2", "154.604, -42.4454, 143.723, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "89.8115, -158.855, 28.1927, 0.84", "90.6271, -160.698, 28.5813, 0.84", "91.5149, -162.615, 29.0024, 0.6", "92.1038, -163.87, 29.2617, 1.32", "93.03, -165.844, 29.6694, 0.84", "93.6289, -167.12, 29.9331, 0.72", "94.1059, -168.137, 30.1431, 1.08", "94.7194, -169.461, 30.3848, 0.72", "95.2596, -170.739, 30.6443, 1.2", "99.2298, -177.373, 32.3459, 1.2", "102.627, -183.924, 35.1191, 1.2", "104.972, -190.393, 38.8924, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "37.8533, -228.845, -10.3608, 0.96", "39.0833, -231.298, -8.35582, 0.96", "39.7414, -232.923, -7.11884, 0.96", "40.8797, -236.066, -4.78154, 1.44", "41.6932, -238.347, -2.99252, 0.96", "42.3257, -240.142, -1.58701, 0.96", "42.8434, -241.653, -0.437029, 0.96", "43.2764, -243.035, 0.566695, 0.96", "43.7279, -244.804, 1.83759, 1.08", "44.2518, -247.237, 3.45716, 1.08", "44.5197, -248.453, 4.23589, 1.08", "44.7995, -249.494, 4.89687, 1.08", "45.4143, -252.031, 6.55876, 1.08", "45.8622, -254.581, 8.16428, 0.84", "45.9995, -256.712, 9.36434, 1.2", "45.9214, -258.401, 10.1643, 1.2", "45.7712, -259.799, 10.7833, 1.2", "45.2674, -263.227, 12.2691, 0.96", "44.9424, -265.032, 13.0165, 0.96", "44.7028, -266.7, 13.7262, 0.96", "44.4516, -268.827, 14.6083, 0.72", "44.3045, -270.153, 15.1074, 0.72", "44.1873, -272.056, 15.8244, 0.72", "44.3602, -274.426, 16.7352, 1.2", "44.865, -277.92, 18.3505, 0.84", "45.1552, -279.372, 19.1192, 0.84", "45.4572, -280.907, 20.0031, 0.84", "46.8089, -289.888, 25.3587, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "37.8533, -228.845, -10.3608, 1.32", "38.7882, -233.641, -10.2154, 1.32", "39.3334, -236.609, -10.2073, 1.32", "39.8263, -239.497, -10.2599, 1.32", "40.1517, -241.649, -10.3494, 1.32", "40.8685, -246.227, -10.5431, 1.68", "41.5241, -250.046, -10.6695, 1.68", "42.0864, -252.826, -10.8374, 1.68", "42.6467, -255.442, -11.0076, 1.68", "43.6176, -259.842, -11.3174, 1.2", "44.2776, -262.734, -11.5356, 1.2", "45.3439, -267.096, -11.8454, 1.2", "46.6828, -272.043, -12.1936, 1.56", "47.4021, -274.524, -12.3632, 1.56", "48.0468, -276.661, -12.5074, 1.56", "48.7571, -278.907, -12.6456, 1.56", "49.8363, -282.83, -12.7932, 1.44", "50.8838, -286.813, -12.9134, 1.44", "51.3475, -288.627, -12.9052, 1.44", "51.9126, -290.833, -12.8687, 1.44", "52.5616, -293.372, -12.7692, 1.44", "53.6012, -297.507, -12.4317, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.06367, 82.6662, 30.3346, 1.44", "3.28727, 80.4384, 30.4833, 1.44", "2.58989, 79.6744, 30.5812, 1.2", "1.08814, 78.3363, 30.7911, 0.96", "-0.263196, 77.1323, 30.98, 0.96", "-1.19438, 76.3027, 31.1102, 0.96", "-2.18543, 75.4197, 31.2488, 0.96", "-3.18332, 74.428, 31.2662, 0.96", "-5.07907, 72.7356, 31.3652, 1.2", "-14.8939, 63.4402, 30.3369, 1.2", "-23.7181, 53.0516, 30.4098, 1.2", "-32.5569, 42.7739, 29.0587, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.06367, 82.6662, 30.3346, 0.96", "5.9993, 81.0262, 30.5973, 0.96", "7.07582, 79.1392, 30.8996, 0.96", "7.8765, 77.7358, 31.1244, 1.2", "8.31979, 76.9588, 31.2489, 1.2", "9.78279, 74.3944, 31.6597, 0.84", "10.4386, 73.2448, 31.8438, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.92243, 60.1394, 14.3142, 1.44", "8.05351, 63.3215, 14.8525, 1.44", "8.91353, 65.8208, 15.2464, 1.44", "9.34853, 67.13, 15.4505, 1.44", "10.3197, 70.1736, 15.9734, 1.44", "11.4895, 73.7761, 16.6678, 1.32", "12.231, 75.8414, 17.0068, 1.32", "13.1837, 78.1112, 17.3021, 1.32", "14.0515, 79.9435, 17.5075, 1.56", "14.9828, 81.6846, 17.6571, 1.56", "16.3411, 83.9262, 17.7917, 1.32", "18.8764, 87.6349, 17.9779, 1.32", "20.5026, 89.771, 18.071, 1.32", "21.9236, 91.49, 18.0421, 1.32", "23.5171, 93.327, 17.9106, 1.56", "24.4162, 94.3835, 17.7723, 1.56", "26.5981, 97.0156, 17.3294, 1.2", "27.7568, 98.4456, 17.0962, 1.2", "30.0201, 101.297, 16.5771, 1.44", "31.2154, 102.859, 16.2384, 1.92", "33.512, 106.108, 15.6487, 1.56", "34.9353, 108.269, 15.3291, 1.32", "36.9849, 111.66, 14.9252, 1.32", "38.6024, 114.535, 14.7526, 1.32", "40.1815, 117.54, 14.782, 1.56", "42.2311, 121.921, 15.0218, 1.2", "42.8487, 123.474, 15.1937, 1.2", "43.175, 124.583, 15.3567, 1.2", "43.4598, 126.079, 15.6428, 0.96", "43.5781, 127.045, 15.8625, 1.32", "43.777, 129.884, 16.5555, 0.96", "43.8259, 131.28, 16.8089, 0.96", "43.8726, 132.696, 17.0315, 0.96", "44.0521, 135.379, 17.4635, 1.32", "44.1972, 136.688, 17.6806, 1.32", "44.5457, 138.664, 18.0698, 0.84", "45.0722, 140.696, 18.5617, 1.08", "45.7144, 142.671, 19.171, 1.08", "46.7623, 145.467, 20.1657, 0.84", "47.3042, 146.824, 20.6012, 1.2", "47.951, 148.326, 21.1279, 0.84", "48.7076, 149.927, 21.749, 1.2", "49.8978, 152.336, 22.7604, 0.96", "50.2914, 153.17, 23.1118, 0.96", "51.7996, 157.104, 24.431, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.92243, 60.1394, 14.3142, 1.08", "8.62954, 62.6698, 14.3711, 1.08", "10.6652, 65.8175, 14.426, 1.08", "11.2799, 66.7871, 14.44, 1.08", "11.8679, 67.7342, 14.4048, 1.08", "12.9118, 69.4154, 14.3424, 1.32", "14.4626, 71.9131, 14.2496, 0.96", "15.4405, 73.4738, 14.1469, 1.44", "16.1029, 74.5549, 14.0513, 1.44", "17.4199, 76.7917, 13.8178, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "35.5297, -282.442, 7.96773, 1.08", "35.0169, -285.57, 8.50636, 1.08", "34.6617, -287.628, 8.86078, 1.08", "34.1014, -290.57, 9.30967, 1.08", "33.7455, -292.376, 9.57269, 1.08", "33.2978, -294.481, 9.85944, 1.08", "32.9543, -295.927, 10.0608, 1.08", "32.7138, -296.843, 10.1676, 1.08", "32.2855, -298.202, 10.2712, 1.08", "31.477, -300.558, 10.306, 0.84", "31.0293, -301.768, 10.2826, 0.84", "30.3719, -303.484, 10.1657, 1.32", "29.4618, -305.813, 9.9051, 1.32", "28.2002, -309.103, 9.46471, 0.96", "27.3969, -311.347, 9.1246, 0.96", "26.8571, -312.984, 8.89051, 1.2", "25.9308, -316.196, 8.50526, 1.2", "25.385, -318.384, 8.311, 1.44", "24.8139, -320.98, 8.18879, 1.2", "24.333, -323.7, 8.1659, 1.2", "23.763, -327.304, 8.21299, 1.2", "23.5833, -328.605, 8.25175, 1.2", "23.3838, -330.716, 8.45176, 1.2", "23.318, -331.893, 8.63545, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "35.5297, -282.442, 7.96773, 0.96", "36.987, -285.473, 7.74114, 0.96", "37.8909, -287.409, 7.5898, 1.32", "38.1529, -288.2, 7.5369, 1.32", "38.4777, -289.181, 7.47129, 1.32", "39.2078, -291.385, 7.32387, 1.56", "39.7493, -293.02, 7.21452, 1.56", "40.1129, -294.234, 7.13188, 1.56", "40.8021, -297.622, 7.07065, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "53.6012, -297.507, -12.4317, 0.96", "53.4705, -298.945, -12.0427, 0.96", "53.3311, -300.239, -11.7369, 0.96", "53.1519, -301.532, -11.4409, 1.44", "52.7234, -304.399, -10.7602, 1.08", "52.5348, -305.734, -10.4524, 1.08", "52.3031, -307.767, -10.0006, 1.08", "52.2406, -308.719, -9.77851, 1.08", "52.1763, -311.171, -9.21711, 0.84", "52.2073, -313.181, -8.8018, 0.84", "52.2854, -314.446, -8.60469, 0.84", "52.4342, -315.867, -8.38735, 0.84", "52.6174, -317.192, -8.19661, 0.84", "52.7698, -318.277, -8.07602, 0.84", "52.8659, -319.045, -8.04561, 0.84", "52.9498, -319.925, -8.0469, 0.84", "52.9649, -321.104, -8.06574, 0.84", "52.8509, -322.138, -8.11499, 0.84", "52.6561, -323.019, -8.19284, 0.84", "52.1837, -324.563, -8.34123, 0.6", "50.7896, -332.468, -8.68028, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "53.6012, -297.507, -12.4317, 0.84", "53.7966, -298.74, -12.5563, 0.84", "53.9322, -299.624, -12.6661, 0.84", "54.0746, -300.563, -12.8132, 0.84", "54.3392, -302.503, -13.165, 1.2", "54.3921, -302.955, -13.2559, 1.2", "54.601, -304.969, -13.6889, 0.96", "54.7556, -306.66, -14.0982, 1.32", "54.9643, -308.804, -14.6212, 1.08", "55.1113, -310.009, -14.9161, 1.08", "55.237, -310.896, -15.1279, 1.08", "55.3636, -311.557, -15.2693, 1.08", "55.4672, -312.008, -15.3521, 1.08", "55.9162, -313.777, -15.6373, 0.84", "56.5668, -316.065, -15.9459, 1.2", "56.7692, -316.709, -16.0207, 1.2", "57.8822, -320.046, -16.3656, 0.84", "58.5152, -321.926, -16.551, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.4386, 73.2448, 31.8438, 0.72", "9.83989, 71.9392, 31.5555, 0.72", "9.3235, 70.813, 31.3069, 0.48", "8.70101, 69.4555, 31.0071, 0.96", "8.2597, 68.4931, 30.7946, 0.96", "3.73968, 59.5196, 27.776, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.4386, 73.2448, 31.8438, 0.72", "10.8208, 71.8371, 31.9661, 0.72", "11.0167, 70.8462, 32.0658, 1.08", "11.3107, 69.1392, 32.1708, 0.72", "11.4455, 67.9063, 32.1672, 0.72", "11.5407, 66.1509, 32.05, 0.72", "11.6255, 64.7113, 31.9083, 1.2", "11.6191, 64.0289, 31.8341, 1.2", "11.528, 62.5481, 31.6493, 0.84", "11.3467, 60.7136, 31.3629, 0.84", "11.2204, 59.2242, 30.9732, 1.32", "11.1497, 58.2622, 30.5909, 1.08", "10.5365, 48.968, 29.5209, 1.08", "9.39837, 39.6989, 28.7155, 1.08", "8.02856, 30.7278, 26.4795, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "51.7996, 157.104, 24.431, 0.6", "52.3915, 158.058, 24.7814, 0.6", "52.996, 159.033, 25.1393, 0.6", "53.7807, 160.299, 25.6037, 0.6", "55.0481, 162.342, 26.354, 0.6", "55.8702, 163.668, 26.8407, 0.6", "56.7067, 165.017, 27.3358, 0.48", "60.5167, 174.261, 28.6657, 0.48", "64.9519, 183.286, 29.1628, 0.48", "69.6723, 191.858, 31.3675, 0.48", "76.0385, 199.448, 32.3669, 0.48", "82.2029, 207.29, 32.5143, 0.48", "88.8359, 214.606, 33.6301, 0.48", "93.8651, 223.295, 33.5352, 0.48", "97.0521, 232.713, 31.7526, 0.48", "99.0792, 242.631, 31.0743, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "51.7996, 157.104, 24.431, 0.84", "53.1711, 159.824, 24.315, 0.84", "53.9451, 161.36, 24.2495, 0.84", "54.7701, 162.996, 24.1797, 0.36", "55.5541, 164.551, 24.1134, 0.6", "56.1877, 165.808, 24.0597, 0.6", "57.3153, 168.044, 23.9643, 0.6", "62.5942, 177.179, 22.207, 0.6", "67.3739, 186.405, 19.6381, 0.6", "73.3412, 194.755, 16.849, 0.6", "78.7802, 203.414, 13.8399, 0.6", "82.3914, 212.554, 9.61811, 0.6", "85.8855, 222.543, 7.63204, 0.6", "90.2726, 232.302, 6.63178, 0.6", "94.3401, 242.233, 5.83158, 0.6", "96.8177, 252.487, 3.56471, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "17.4199, 76.7917, 13.8178, 1.08", "16.6139, 78.9023, 14.1995, 1.08", "16.0944, 79.9099, 14.4722, 1.08", "15.3391, 81.3749, 14.8686, 1.08", "14.5004, 83.0015, 15.3088, 0.96", "13.2851, 85.3589, 15.9467, 0.96", "12.2804, 87.3075, 16.474, 0.84", "10.8246, 89.6364, 17.3275, 1.08", "4.37351, 99.4282, 18.5492, 1.08", "-0.760108, 109.977, 20.2176, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "17.4199, 76.7917, 13.8178, 0.96", "18.7245, 77.7003, 13.4033, 0.96", "19.316, 78.0995, 13.1865, 0.96", "20.2479, 78.7536, 12.818, 0.96", "21.3495, 79.573, 12.2786, 0.84", "21.9275, 80.0127, 11.9729, 0.84", "22.8492, 80.7129, 11.4611, 0.84", "23.2766, 81.0143, 11.1961, 0.84", "23.9677, 81.4763, 10.7543, 0.84", "25.3916, 82.3126, 9.89428, 1.2", "25.6648, 82.4463, 9.75852, 1.2", "26.4088, 82.7383, 9.46556, 1.2", "27.5629, 83.0708, 9.14493, 1.2", "27.9327, 83.1471, 9.07625, 1.2", "29.3854, 83.3742, 8.87731, 1.2", "30.5361, 83.5383, 8.7641, 0.96", "31.6764, 83.7239, 8.65351, 0.96", "32.9779, 83.914, 8.53631, 0.96", "34.2692, 84.0981, 8.42067, 1.32", "36.2165, 84.3947, 8.24015, 0.84", "37.9026, 84.6674, 8.07421, 1.2", "39.0832, 84.8799, 8.00897, 1.2", "40.2274, 85.1281, 8.0023, 0.96", "41.1875, 85.3779, 8.06514, 1.2", "41.9024, 85.5776, 8.17139, 1.2", "42.3731, 85.7162, 8.27892, 1.2", "44.7707, 86.514, 8.97334, 1.2", "45.7262, 86.8932, 9.27545, 1.2", "46.5289, 87.2792, 9.53827, 1.2", "48.0823, 88.0328, 10.0458, 1.08", "48.7854, 88.3441, 10.2572, 1.44", "50.1251, 88.8338, 10.5039, 1.08", "51.159, 89.1419, 10.5279, 1.08", "51.9474, 89.3736, 10.4732, 1.08", "53.2778, 89.8135, 10.2819, 1.08", "54.7482, 90.3211, 9.97494, 1.44", "57.0298, 91.1158, 9.37243, 1.08", "58.519, 91.69, 8.9023, 0.84", "59.6388, 92.1994, 8.52832, 1.2", "60.7652, 92.7618, 8.13719, 1.2", "62.0188, 93.4822, 7.64336, 0.84", "62.9345, 94.0591, 7.27229, 1.08", "64.9013, 95.2923, 6.53725, 0.72", "66.8465, 96.4224, 5.79275, 0.72", "68.0851, 97.0263, 5.32209, 1.2", "69.9116, 97.8268, 4.63787, 0.72", "70.5555, 98.0917, 4.41214, 0.72", "71.9037, 98.6009, 3.9891, 0.96", "73.3267, 99.0881, 3.58516, 0.96", "75.845, 100.035, 2.97285, 0.72", "77.1396, 100.638, 2.71088, 0.6", "78.182, 101.191, 2.5445, 0.6", "79.5213, 102.031, 2.33559, 1.2", "79.9193, 102.326, 2.2783, 1.2", "81.5447, 103.648, 2.10169, 0.72", "82.3042, 104.343, 2.03118, 0.72", "82.8353, 104.817, 1.984, 0.72", "84.104, 106.0, 1.82166, 0.6", "84.3122, 106.193, 1.79083, 0.6", "85.363, 107.153, 1.56422, 0.96", "86.0688, 107.816, 1.33187, 0.72", "86.5283, 108.272, 1.14575, 0.96", "88.3021, 110.143, 0.326684, 0.72", "89.3241, 111.266, -0.191291, 0.72", "90.6817, 112.742, -0.938706, 1.2", "92.117, 114.24, -1.69467, 0.72", "93.1035, 115.195, -2.15986, 0.72", "94.3304, 116.284, -2.68148, 0.72", "94.8119, 116.661, -2.84564, 0.72", "96.3074, 117.765, -3.21265, 1.08", "98.0352, 118.927, -3.40272, 0.72", "99.2804, 119.715, -3.43022, 1.08", "99.6051, 119.922, -3.42016, 1.08", "100.97, 120.75, -3.3654, 0.72", "101.775, 121.247, -3.35275, 0.72", "103.285, 122.217, -3.38643, 1.08", "103.88, 122.592, -3.44789, 1.08", "105.06, 123.298, -3.60571, 0.84", "107.235, 124.54, -3.92689, 0.84", "109.078, 125.521, -4.18211, 0.6", "110.514, 126.188, -4.32375, 1.08", "111.204, 126.464, -4.35651, 1.08", "113.013, 127.146, -4.32451, 0.72", "113.915, 127.473, -4.24484, 0.72", "115.804, 128.181, -3.88662, 1.08", "117.452, 128.787, -3.45355, 0.84", "118.318, 129.12, -3.1928, 1.08", "119.615, 129.663, -2.7898, 0.84", "120.281, 129.946, -2.59093, 0.84", "121.997, 130.659, -2.15257, 0.6", "122.844, 130.969, -1.98375, 0.6", "124.144, 131.394, -1.78692, 0.96", "124.687, 131.515, -1.726, 0.96", "126.327, 131.681, -1.57814, 0.72", "127.618, 131.722, -1.47046, 0.72", "128.671, 131.707, -1.43717, 0.72", "128.933, 131.712, -1.44168, 0.72", "129.889, 131.798, -1.53938, 0.72", "131.443, 132.043, -1.87475, 0.72", "131.878, 132.141, -2.03642, 0.72", "133.501, 132.556, -2.79747, 0.6", "134.391, 132.792, -3.27053, 0.96", "135.929, 133.132, -4.11064, 0.96", "136.911, 133.351, -4.68898, 0.96", "138.541, 133.667, -5.72392, 0.72", "140.018, 133.89, -6.66276, 0.72", "141.424, 134.003, -7.53975, 1.2", "142.748, 134.025, -8.34242, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "23.318, -331.893, 8.63545, 0.48", "23.6247, -334.391, 8.76692, 0.48", "23.8994, -336.628, 8.88466, 0.48", "24.1345, -338.543, 8.9854, 0.84", "24.3377, -340.198, 9.0725, 0.84", "24.534, -341.797, 9.15666, 0.6", "24.952, -351.18, 7.9934, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "23.318, -331.893, 8.63545, 0.84", "23.9948, -334.668, 9.68729, 0.84", "24.5244, -336.939, 10.4914, 0.84", "25.0147, -339.17, 11.2023, 1.08", "25.6409, -341.949, 12.0262, 0.84", "26.0832, -343.874, 12.5796, 0.84", "26.5045, -345.693, 13.0786, 0.84", "26.7321, -346.725, 13.3278, 0.84", "27.4265, -349.947, 13.9634, 1.32", "27.7891, -351.774, 14.2497, 1.32", "28.3648, -355.133, 14.6592, 1.2", "28.656, -357.101, 14.8472, 0.96", "28.9549, -359.551, 15.0762, 1.32", "29.1681, -361.784, 15.2857, 1.32", "29.3217, -364.534, 15.5486, 1.08", "29.5289, -370.366, 16.068, 1.08", "29.5802, -373.419, 16.3179, 0.84", "29.5878, -376.027, 16.5531, 1.2", "29.5573, -378.914, 16.8527, 1.08", "29.5118, -381.246, 17.145, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "40.8021, -297.622, 7.07065, 0.96", "40.2449, -299.781, 6.4587, 0.96", "39.9772, -300.746, 6.30975, 0.96", "39.7144, -301.604, 6.18139, 0.96", "39.4017, -302.633, 6.02598, 0.96", "39.0465, -303.742, 5.85129, 0.96", "38.2992, -306.182, 5.51347, 1.44", "37.6713, -308.34, 5.36104, 0.96", "36.6351, -311.977, 5.21285, 1.44", "36.3197, -313.136, 5.19046, 0.96", "35.7166, -315.449, 5.1689, 1.56", "35.0754, -318.136, 5.1521, 1.2", "34.3468, -321.827, 5.15146, 0.96", "34.0874, -323.456, 5.1721, 1.44", "33.7608, -326.04, 5.24945, 0.96", "33.4496, -328.857, 5.2916, 1.32", "33.1835, -331.832, 5.24256, 0.96", "33.0144, -334.059, 5.09944, 0.96", "32.9629, -335.347, 4.98291, 0.96", "32.9503, -336.436, 4.88774, 0.96", "32.9813, -339.345, 4.63671, 1.32", "33.0502, -341.909, 4.41652, 0.96", "33.1943, -345.561, 4.15209, 1.44", "33.3271, -348.225, 4.00442, 0.84", "33.4413, -350.135, 3.96648, 1.2", "33.4891, -351.12, 3.99314, 1.2", "33.5158, -351.784, 4.04937, 0.84", "33.5391, -354.351, 4.39933, 1.2", "33.4457, -356.725, 4.80241, 1.2", "33.2922, -358.344, 5.06334, 0.96", "32.9391, -361.03, 5.44168, 0.96", "32.5616, -363.539, 5.67867, 1.32", "32.1848, -365.624, 5.77671, 1.68", "31.7037, -367.799, 5.73319, 1.2", "30.976, -370.55, 5.45875, 0.96", "30.253, -372.954, 4.94364, 0.96", "29.4929, -375.044, 4.13461, 0.84", "28.9194, -376.135, 3.39619, 0.84", "28.2733, -376.736, 2.397, 0.84", "27.621, -376.222, 1.35575, 0.84", "27.2608, -375.661, 0.791482, 0.84", "26.9124, -374.936, 0.280806, 0.84", "26.5409, -373.999, -0.155752, 1.08", "26.1045, -372.679, -0.606151, 0.84", "25.7757, -371.565, -0.832543, 0.6", "25.2527, -379.847, -0.48905, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "40.8021, -297.622, 7.07065, 1.08", "41.5495, -302.609, 7.46711, 1.08", "42.3929, -308.01, 7.87397, 1.44", "42.7456, -310.438, 8.02145, 0.84", "43.2484, -313.968, 8.2033, 1.32", "43.5928, -316.369, 8.3178, 1.32", "44.2222, -320.519, 8.45218, 1.32", "44.6148, -323.19, 8.45473, 1.32", "45.0638, -326.1, 8.44722, 1.32", "45.8221, -331.484, 8.36182, 1.44", "46.1779, -334.128, 8.3053, 1.44", "47.2445, -342.462, 8.09636, 1.44", "47.4888, -344.547, 8.03155, 1.44", "47.9032, -348.156, 7.9245, 1.08", "48.8006, -355.353, 7.79389, 1.08", "49.2516, -359.055, 7.74292, 0.84", "49.7554, -363.327, 7.7353, 1.32", "50.1767, -366.704, 7.80703, 1.32", "50.8835, -371.936, 7.98142, 0.96", "51.2714, -374.654, 8.1189, 1.44", "51.9165, -378.628, 8.27695, 1.44", "52.5756, -382.841, 8.33038, 1.2", "53.1772, -387.059, 8.25091, 1.08", "53.6304, -390.422, 8.10699, 1.08", "53.9983, -393.601, 7.88096, 1.68", "54.5523, -398.639, 7.46239, 1.2", "54.7964, -400.718, 7.29232, 1.2", "55.328, -404.873, 6.99053, 1.44", "55.8414, -408.509, 6.76218, 1.44", "56.5575, -412.978, 6.57711, 1.44", "57.2205, -416.825, 6.51113, 1.44", "58.0347, -421.223, 6.60767, 1.8", "58.9237, -425.777, 6.72504, 1.32", "59.4652, -428.442, 6.80192, 1.08", "60.2062, -432.176, 6.88696, 1.56", "61.0709, -436.497, 6.96347, 1.56", "61.5511, -438.906, 6.99679, 1.56", "61.9852, -441.128, 7.02163, 1.56", "62.6218, -444.522, 7.06047, 1.56", "63.1622, -447.391, 7.13142, 1.56", "63.8426, -450.69, 7.24897, 1.32", "64.1597, -452.176, 7.31092, 1.32", "64.5713, -454.383, 7.34686, 1.32", "64.9994, -456.823, 7.36337, 1.32", "65.6618, -460.441, 7.34032, 1.32", "66.1543, -463.155, 7.32057, 1.32", "66.6937, -466.35, 7.26907, 1.68", "68.0107, -474.699, 7.01923, 1.32", "68.3995, -477.323, 6.90101, 1.32", "68.8236, -480.335, 6.71556, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "58.5152, -321.926, -16.551, 0.96", "59.5431, -322.776, -15.2464, 0.96", "60.0593, -323.191, -14.5929, 1.32", "61.1316, -324.061, -13.2462, 0.96", "61.9288, -324.747, -12.2352, 1.32", "62.9662, -325.664, -10.995, 1.2", "63.5051, -326.109, -10.3796, 1.2", "64.0425, -326.521, -9.80171, 1.2", "64.4159, -326.818, -9.40347, 1.2", "64.8597, -327.166, -8.96654, 1.2", "66.2152, -328.124, -7.76228, 0.96", "67.2283, -328.746, -6.99979, 1.32", "67.8363, -329.075, -6.569, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "58.5152, -321.926, -16.551, 1.08", "59.0931, -325.375, -16.5922, 1.08", "59.5491, -328.5, -16.6542, 0.72", "59.7814, -330.029, -16.7433, 0.72", "60.3314, -333.724, -17.037, 1.2", "60.7749, -336.733, -17.3063, 0.84", "61.0289, -338.553, -17.4778, 0.84", "61.2202, -339.883, -17.6294, 0.84", "61.7175, -343.368, -18.0357, 0.6", "62.0071, -345.306, -18.2503, 0.6", "62.4591, -347.882, -18.5091, 1.2", "63.0411, -350.812, -18.8126, 1.2", "63.5741, -353.273, -19.0612, 0.84", "64.0226, -355.319, -19.2555, 0.84", "64.71, -358.572, -19.5589, 1.08", "65.3067, -361.385, -19.8793, 0.72", "65.8336, -363.875, -20.232, 1.08", "66.2008, -365.588, -20.5131, 1.08", "66.523, -367.194, -20.8074, 1.08", "67.0352, -370.084, -21.3716, 0.72", "67.3419, -371.948, -21.7446, 0.72", "67.5729, -373.756, -22.0308, 1.08", "67.704, -375.136, -22.1678, 1.08", "67.7826, -376.074, -22.2101, 1.08", "67.9531, -378.669, -22.3074, 0.72", "68.0303, -380.12, -22.3672, 0.72", "68.2009, -383.345, -22.562, 1.2", "68.3934, -386.562, -22.8076, 1.2", "68.688, -390.774, -23.2145, 1.2", "69.0299, -394.821, -23.6935, 0.84", "69.1725, -396.415, -23.9241, 1.32", "69.3267, -398.177, -24.2327, 1.32", "69.4117, -398.992, -24.4106, 1.32", "69.607, -400.803, -24.8464, 0.96", "69.77, -402.419, -25.2365, 1.56", "69.9665, -404.1, -25.5934, 1.56", "70.1534, -405.516, -25.8795, 1.08", "70.3232, -406.893, -26.1518, 1.08", "70.7011, -409.703, -26.7354, 0.84", "70.9259, -411.009, -27.0093, 1.44", "71.4499, -413.422, -27.5304, 1.08", "71.8592, -414.911, -27.8692, 1.08", "72.5511, -417.271, -28.4135, 0.72", "73.3591, -420.095, -29.0554, 1.08", "73.8079, -421.566, -29.4374, 1.08", "74.3359, -423.233, -29.9015, 0.96", "75.2221, -426.061, -30.6876, 0.72", "75.6863, -427.467, -31.12, 0.72", "76.0554, -428.457, -31.4638, 0.72", "77.1425, -431.391, -32.6038, 0.72", "77.5268, -432.549, -33.1025, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.73968, 59.5196, 27.776, 0.6", "-0.442978, 50.3927, 25.5001, 0.6", "-4.49156, 40.9385, 24.6236, 0.6", "-7.89173, 31.4364, 22.4388, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.73968, 59.5196, 27.776, 0.84", "-0.719924, 51.5346, 24.5224, 0.6", "-7.01963, 44.5213, 22.5201, 0.6", "-13.1136, 37.1385, 21.2036, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.760108, 109.977, 20.2176, 0.6", "-6.05243, 119.12, 23.682, 0.6", "-12.9614, 126.897, 27.3218, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.760108, 109.977, 20.2176, 0.84", "-3.73645, 115.646, 20.5356, 0.6", "-5.80401, 121.753, 20.4809, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "29.5118, -381.246, 17.145, 0.6", "27.4674, -381.064, 17.1508, 0.6", "24.923, -380.839, 17.1581, 0.6", "23.7276, -380.733, 17.1616, 0.6", "22.2928, -380.605, 17.1657, 0.96", "11.5577, -378.328, 16.1298, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.5118, -381.246, 17.145, 0.96", "29.342, -382.763, 17.0694, 0.96", "29.1756, -384.251, 16.9953, 0.72", "28.9037, -386.683, 16.8743, 0.72", "26.3004, -397.698, 17.7731, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "68.8236, -480.335, 6.71556, 0.84", "71.3593, -483.098, 7.51079, 0.84", "73.8611, -485.567, 8.38687, 0.84", "74.5469, -486.24, 8.58784, 0.84", "76.3193, -487.99, 8.98464, 0.84", "78.6052, -490.35, 9.40052, 0.6", "80.5797, -492.467, 9.73059, 1.08", "82.0247, -494.097, 9.92698, 1.08", "84.2234, -496.594, 10.2366, 0.72", "86.019, -498.758, 10.5108, 0.72", "87.0877, -500.077, 10.6171, 0.72", "88.0393, -501.152, 10.6475, 0.72", "89.0591, -502.306, 10.6338, 1.2", "91.5409, -505.17, 10.6377, 0.84", "94.6768, -508.819, 10.7964, 1.08", "98.0944, -512.891, 11.0334, 1.08", "101.492, -516.999, 11.2506, 0.84", "102.933, -518.828, 11.3374, 0.84", "104.603, -521.033, 11.4594, 1.32", "106.617, -523.893, 11.6729, 0.84", "107.336, -524.941, 11.7925, 0.84", "108.451, -526.7, 12.1073, 1.32", "110.169, -529.409, 12.6083, 0.84", "111.504, -531.196, 12.8723, 1.44", "114.043, -534.249, 13.1072, 1.2", "115.262, -535.595, 13.1341, 1.2", "116.896, -537.363, 13.1295, 1.44", "119.033, -539.648, 13.082, 1.08", "122.877, -543.82, 12.9286, 0.84", "124.87, -546.064, 12.8392, 1.44", "126.855, -548.437, 12.7182, 0.96", "128.181, -550.225, 12.6065, 0.96", "129.093, -551.657, 12.5186, 1.44", "130.856, -554.995, 12.2445, 0.96", "131.26, -555.903, 12.1538, 0.96", "132.695, -559.371, 11.779, 1.44", "134.223, -563.069, 11.32, 0.84", "136.105, -567.232, 10.6328, 1.44", "138.146, -571.53, 9.79226, 0.84", "138.766, -572.77, 9.50243, 0.84", "140.536, -576.033, 8.67166, 1.44", "143.178, -580.555, 7.48555, 1.44", "146.117, -585.511, 6.12232, 1.08", "147.74, -588.146, 5.37426, 0.72", "149.455, -590.813, 4.59781, 1.32", "150.984, -593.174, 3.85073, 0.72", "151.736, -594.372, 3.41761, 0.72", "153.625, -597.606, 2.15203, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "68.8236, -480.335, 6.71556, 1.08", "69.0563, -482.521, 6.45397, 1.08", "69.2328, -483.963, 6.345, 1.08", "69.3287, -485.005, 6.3062, 1.08", "69.5704, -486.962, 6.13405, 1.08", "69.9581, -489.315, 5.84005, 1.44", "70.3908, -491.574, 5.53089, 0.96", "70.8149, -493.435, 5.28608, 0.96", "71.2992, -495.24, 5.03427, 0.96", "72.2235, -498.643, 4.60535, 0.96", "72.8167, -500.867, 4.38271, 0.84", "73.1571, -502.178, 4.29296, 1.44", "73.6405, -504.208, 4.18648, 1.08", "74.0092, -505.837, 4.1525, 1.08", "74.5312, -508.254, 4.171, 1.56", "75.2299, -512.027, 4.36285, 1.32", "75.5611, -513.909, 4.45721, 0.96", "75.8877, -515.785, 4.52727, 1.32", "76.5081, -519.28, 4.63662, 1.08", "76.9248, -521.48, 4.67665, 0.72", "77.303, -523.411, 4.66762, 1.32", "77.8102, -526.113, 4.65437, 1.08", "78.1904, -528.269, 4.65226, 1.56", "78.6025, -530.744, 4.6719, 0.84", "79.0943, -533.761, 4.69969, 0.6", "79.3072, -535.062, 4.71437, 1.08", "79.7551, -537.824, 4.74029, 1.2", "80.1637, -540.299, 4.77469, 0.72", "80.3076, -541.122, 4.78818, 0.72", "81.0274, -545.061, 4.84237, 1.32", "81.1789, -545.779, 4.86177, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "67.8363, -329.075, -6.569, 0.96", "68.4427, -327.828, -4.57578, 0.96", "68.6866, -327.327, -3.77399, 0.96", "68.9837, -326.716, -2.79733, 0.84", "69.6986, -325.246, -0.447516, 0.84", "70.1315, -324.356, 0.975346, 1.08", "70.5088, -323.58, 2.21582, 1.08", "72.8331, -317.464, 10.7096, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "67.8363, -329.075, -6.569, 0.6", "68.3939, -330.994, -5.24039, 0.6", "68.9244, -333.475, -3.46996, 1.08", "69.3883, -336.236, -1.59671, 0.96", "69.6488, -337.788, -0.55607, 0.96", "69.9204, -339.406, 0.528958, 1.32", "70.4169, -342.364, 2.51254, 1.08", "70.5554, -343.647, 3.38011, 1.08", "70.6843, -346.226, 5.17049, 1.08", "70.7874, -348.646, 6.78833, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "77.5268, -432.549, -33.1025, 0.72", "77.5414, -434.331, -33.6121, 0.72", "77.5863, -436.036, -34.0475, 0.72", "77.6323, -438.371, -34.654, 0.72", "77.6257, -439.921, -35.0433, 0.72", "77.6254, -440.633, -35.2222, 0.72", "77.659, -443.085, -35.826, 0.6", "77.6568, -444.374, -36.1165, 0.6", "77.6421, -445.498, -36.3557, 0.6", "77.5947, -447.44, -36.7258, 0.48", "77.5569, -448.534, -36.95, 0.48", "77.4431, -450.848, -37.4497, 0.84", "77.1975, -453.465, -38.0585, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "77.5268, -432.549, -33.1025, 0.72", "78.9629, -435.59, -32.9417, 0.72", "80.9846, -439.871, -32.7152, 1.2", "81.657, -441.295, -32.6399, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "81.1789, -545.779, 4.86177, 0.48", "81.0691, -546.877, 3.35468, 0.48", "81.0519, -547.055, 3.0804, 0.48", "81.0129, -547.686, 2.20769, 0.48", "80.9042, -548.526, 1.24162, 0.48", "80.8275, -548.943, 0.819261, 0.48", "80.591, -550.084, -0.293841, 0.96", "80.2532, -551.458, -1.58998, 0.6", "79.9731, -552.55, -2.55426, 0.6", "79.5106, -554.249, -3.9804, 1.08", "79.1419, -555.509, -4.994, 0.84", "78.8835, -556.356, -5.62687, 0.84", "78.5338, -557.465, -6.34365, 1.2", "78.0927, -558.699, -7.10979, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "81.1789, -545.779, 4.86177, 0.84", "82.1235, -548.874, 5.07774, 0.84", "82.5279, -550.35, 5.08184, 0.84", "82.8611, -551.66, 5.06956, 0.84", "83.7143, -554.993, 5.03304, 0.84", "84.0288, -556.229, 5.0246, 0.84", "84.7491, -559.108, 5.00906, 1.44", "85.2886, -561.233, 4.97857, 1.08", "85.8643, -563.658, 4.92706, 1.08", "86.3581, -565.973, 4.86537, 0.84", "86.6241, -567.433, 4.84489, 0.84", "86.8583, -568.722, 4.88085, 1.08", "87.2005, -570.432, 5.04648, 0.6", "87.4853, -571.807, 5.24487, 0.6", "87.754, -573.247, 5.47167, 0.6", "88.1353, -575.148, 5.78903, 1.2", "88.5679, -577.045, 6.11416, 1.2", "88.8835, -578.358, 6.31601, 1.2", "89.2453, -579.841, 6.50793, 0.96", "89.485, -580.828, 6.62136, 1.44", "89.939, -582.788, 6.78877, 1.44", "90.5517, -585.589, 6.94406, 0.96", "91.1924, -588.682, 7.05902, 1.32", "91.4503, -589.965, 7.10652, 1.32", "92.0065, -592.845, 7.21227, 0.84", "92.4402, -595.216, 7.27424, 1.32", "92.6508, -596.51, 7.30685, 1.32", "92.9193, -598.027, 7.32459, 1.32", "93.4732, -600.959, 7.33801, 1.32", "93.8441, -602.889, 7.31501, 0.96", "94.1428, -604.43, 7.27027, 0.96", "94.8412, -607.893, 7.1897, 1.44", "95.2931, -610.013, 7.13535, 1.08", "95.6648, -611.714, 7.05506, 1.08", "96.0681, -613.415, 6.93909, 1.08", "96.5872, -615.489, 6.81769, 1.08", "97.1557, -617.712, 6.70384, 1.08", "97.9906, -620.854, 6.52095, 1.08", "99.2772, -625.508, 6.27071, 0.96", "101.293, -632.649, 5.86521, 1.32", "101.968, -634.997, 5.72744, 0.84", "102.37, -636.394, 5.64058, 0.84", "102.908, -638.298, 5.51409, 0.84", "103.3, -639.755, 5.41951, 0.84", "104.024, -642.626, 5.25673, 0.84", "104.337, -644.062, 5.15258, 0.84", "104.574, -645.256, 5.03867, 0.84", "104.793, -646.508, 4.90552, 1.2", "105.172, -648.869, 4.6755, 0.72", "105.447, -650.71, 4.45415, 1.32", "105.71, -652.165, 4.24852, 0.84", "106.027, -653.863, 3.98335, 1.56", "106.869, -657.986, 3.23956, 0.84", "107.196, -659.516, 2.92238, 1.32", "107.792, -662.271, 2.25806, 0.84", "108.665, -666.363, 1.1868, 0.6", "108.919, -667.579, 0.863937, 1.08", "109.379, -669.861, 0.254004, 0.84", "109.762, -671.758, -0.271342, 1.44", "110.14, -673.743, -0.836291, 0.96", "110.438, -675.384, -1.27019, 0.72", "110.636, -676.977, -1.67723, 0.72", "111.019, -679.961, -2.39206, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "70.7874, -348.646, 6.78833, 0.84", "71.8984, -348.223, 8.54918, 0.84", "72.3862, -348.037, 9.32229, 0.84", "73.5339, -347.599, 11.1413, 0.72", "74.259, -347.323, 12.2905, 0.72", "79.4505, -346.822, 18.7355, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "70.7874, -348.646, 6.78833, 0.72", "71.5587, -350.989, 7.90795, 0.72", "72.3765, -353.472, 9.09513, 0.84", "72.7218, -354.52, 9.59634, 0.84", "73.4448, -356.716, 10.6457, 0.6", "73.9453, -358.236, 11.3723, 0.6", "74.4686, -359.825, 12.1319, 0.6", "77.9214, -369.858, 18.4718, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "77.1975, -453.465, -38.0585, 0.48", "71.8192, -454.44, -39.6056, 0.48", "70.568, -454.666, -39.9655, 1.08", "69.2796, -454.9, -40.336, 0.48", "67.6632, -455.193, -40.801, 0.96", "66.2959, -455.441, -41.1943, 0.48", "63.6273, -455.925, -41.9619, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "77.1975, -453.465, -38.0585, 0.96", "77.3483, -454.666, -39.1019, 0.96", "77.5563, -456.8, -40.8465, 0.48", "77.6313, -457.644, -41.4791, 0.48", "77.8199, -459.376, -42.7123, 0.84", "77.9686, -460.637, -43.5962, 0.6", "78.0456, -461.247, -44.0188, 0.6", "78.2588, -462.565, -44.9741, 0.96", "78.4191, -463.443, -45.617, 0.96", "78.7793, -465.121, -46.9411, 0.72", "79.1934, -466.725, -48.3088, 0.72", "79.6162, -467.962, -49.5832, 1.2", "80.0577, -469.114, -50.8559, 1.2", "80.3523, -469.799, -51.6839, 1.2", "80.7296, -470.598, -52.7681, 1.08", "81.2618, -471.582, -54.2916, 0.84", "81.9517, -472.575, -56.0944, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "81.657, -441.295, -32.6399, 0.72", "84.727, -441.542, -32.5268, 0.72", "86.5643, -441.69, -32.4591, 0.72", "87.7466, -441.785, -32.4155, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "81.657, -441.295, -32.6399, 0.48", "81.9973, -444.852, -32.8364, 0.48", "82.0945, -446.863, -32.982, 0.96", "82.1056, -447.796, -33.0581, 0.96", "82.0688, -450.066, -33.2553, 0.48", "82.0143, -451.439, -33.3788, 0.48", "81.9155, -453.687, -33.5814, 0.96", "81.7707, -455.935, -33.7942, 0.96", "81.6491, -457.427, -33.9387, 0.96", "81.4059, -459.657, -34.1772, 1.32", "81.101, -461.895, -34.436, 0.96", "80.9868, -462.771, -34.5387, 0.96", "80.8814, -463.822, -34.6578, 0.96", "80.7661, -465.547, -34.8393, 1.32", "80.7362, -467.358, -35.0196, 0.96", "80.8108, -469.331, -35.2031, 0.6", "80.9646, -470.784, -35.401, 0.6", "81.3078, -472.557, -35.8017, 1.32", "81.8331, -474.376, -36.3838, 0.84", "82.3625, -475.871, -36.9471, 0.84", "82.6378, -476.541, -37.2162, 0.84", "83.8095, -479.198, -38.3498, 0.84", "85.0663, -481.96, -39.5722, 1.44", "86.3418, -484.898, -40.8988, 0.96", "86.8022, -486.159, -41.4136, 0.96", "87.2834, -487.901, -42.0224, 0.96", "87.5313, -489.194, -42.3726, 0.96", "87.6597, -490.55, -42.5985, 0.96", "87.6497, -493.8, -42.9069, 0.72", "87.4165, -497.171, -43.0829, 1.08", "87.1754, -499.408, -43.1492, 0.72", "86.8952, -501.513, -43.1777, 1.2", "86.5602, -503.943, -43.1753, 0.96", "86.0367, -507.761, -43.1183, 1.44", "85.6965, -510.371, -43.0548, 0.96", "85.5254, -511.861, -43.0827, 0.72", "85.1502, -515.571, -43.2769, 1.08", "84.9396, -517.79, -43.4786, 0.6", "84.7994, -519.252, -43.6158, 0.6", "84.6251, -521.037, -43.7792, 1.2", "84.1339, -525.161, -44.0603, 0.72", "83.8929, -526.872, -44.1868, 1.08", "83.4317, -529.484, -44.3755, 0.96", "82.8982, -532.053, -44.5576, 0.72", "82.583, -533.52, -44.6411, 0.72", "81.7726, -537.101, -44.7556, 0.72", "81.0792, -539.798, -44.7103, 0.72", "80.7694, -540.974, -44.7109, 1.2", "80.3369, -542.635, -44.8048, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "axon_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "axon_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_DBC_6a2bbf2a1b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, axon_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, axon_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 9.23809, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -6.24775, 10.477, 9.07409, 2.16 ) }
    dend_73 { pt3dadd( -9.90671, 13.4498, 4.69591, 2.52 ) }
    dend_73 { pt3dadd( -12.5621, 15.392, 1.83616, 2.52 ) }
    dend_73 { pt3dadd( -14.4933, 16.6808, -0.00323031, 2.52 ) }
    dend_73 { pt3dadd( -15.5089, 17.2965, -0.896658, 2.52 ) }
    dend_73 { pt3dadd( -16.7347, 17.9513, -1.83408, 2.28 ) }
    dend_73 { pt3dadd( -20.0008, 19.5857, -3.90752, 1.92 ) }
    dend_73 { pt3dadd( -21.3986, 20.2019, -4.56285, 1.92 ) }
    dend_73 { pt3dadd( -24.4244, 21.3592, -5.81396, 1.8 ) }
    dend_73 { pt3dadd( -26.2404, 22.0277, -6.46364, 1.8 ) }
    dend_73 { pt3dadd( -30.1669, 23.2976, -7.68106, 1.56 ) }
    dend_73 { pt3dadd( -33.2184, 24.1737, -8.50042, 1.92 ) }
    dend_73 { pt3dadd( -35.8501, 24.7972, -9.1034, 1.92 ) }
    dend_73 { pt3dadd( -37.7301, 25.0445, -9.44278, 1.92 ) }
    dend_73 { pt3dadd( -40.1325, 25.0819, -9.7735, 1.92 ) }
    dend_73 { pt3dadd( -44.7283, 24.8193, -10.3823, 1.8 ) }
    dend_73 { pt3dadd( -45.5072, 24.7073, -10.499, 1.8 ) }
    dend_73 { pt3dadd( -47.1373, 24.3506, -10.7438, 1.8 ) }
    dend_73 { pt3dadd( -51.0024, 23.3104, -11.4145, 1.32 ) }
    dend_73 { pt3dadd( -52.3696, 22.9139, -11.721, 1.32 ) }
    dend_73 { pt3dadd( -55.0065, 22.1366, -12.5552, 1.92 ) }
    dend_73 { pt3dadd( -56.0342, 22.0583, -13.1559, 1.92 ) }
    dend_73 { pt3dadd( -56.7733, 22.6939, -14.311, 1.92 ) }
    dend_73 { pt3dadd( -57.1086, 23.1439, -15.0414, 1.92 ) }
    dend_73 { pt3dadd( -57.4638, 23.6877, -15.927, 1.92 ) }
    dend_73 { pt3dadd( -57.9491, 24.0182, -16.7183, 1.92 ) }
    dend_73 { pt3dadd( -58.732, 24.1597, -17.6802, 1.92 ) }
    dend_73 { pt3dadd( -61.0444, 24.1281, -20.265, 1.44 ) }
    dend_73 { pt3dadd( -62.7858, 24.0132, -22.0857, 1.44 ) }
    dend_73 { pt3dadd( -63.6694, 23.9143, -22.9524, 1.44 ) }
    dend_73 { pt3dadd( -65.9452, 23.5214, -25.0848, 1.44 ) }
    dend_73 { pt3dadd( -67.4452, 23.1674, -26.4484, 1.8 ) }
    dend_73 { pt3dadd( -68.6182, 22.8033, -27.504, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 13.6481, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.88658, 15.5248, 1.08999, 1.32 ) }
    dend_69 { pt3dadd( -2.74842, 17.5093, 0.453924, 1.32 ) }
    dend_69 { pt3dadd( -2.67796, 18.5872, 0.144803, 1.32 ) }
    dend_69 { pt3dadd( -2.60623, 19.7488, -0.147048, 1.32 ) }
    dend_69 { pt3dadd( -2.56347, 20.4737, -0.304588, 1.32 ) }
    dend_69 { pt3dadd( -2.50281, 21.3027, -0.45835, 1.32 ) }
    dend_69 { pt3dadd( -2.42165, 22.316, -0.553498, 1.32 ) }
    dend_69 { pt3dadd( -2.36401, 22.951, -0.530687, 1.32 ) }
    dend_69 { pt3dadd( -2.24698, 24.1335, -0.443279, 1.08 ) }
    dend_69 { pt3dadd( -2.10857, 25.3958, -0.323718, 1.56 ) }
    dend_69 { pt3dadd( -1.96052, 26.7361, -0.166326, 1.56 ) }
    dend_69 { pt3dadd( -1.82544, 27.9045, -0.00219808, 1.56 ) }
    dend_69 { pt3dadd( -1.45361, 30.582, 0.44676, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 10.9391, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.85336, 12.6046, 11.9564, 1.8 ) }
    dend_64 { pt3dadd( -7.95336, 14.3721, 12.6184, 1.8 ) }
    dend_64 { pt3dadd( -10.1054, 17.5688, 14.0539, 1.56 ) }
    dend_64 { pt3dadd( -10.7231, 18.4863, 14.4659, 1.56 ) }
    dend_64 { pt3dadd( -12.1341, 20.5821, 15.407, 1.44 ) }
    dend_64 { pt3dadd( -13.6053, 22.7674, 16.3883, 0.96 ) }
    dend_64 { pt3dadd( -14.2302, 23.6904, 16.8458, 0.96 ) }
    dend_64 { pt3dadd( -16.8157, 27.2916, 18.7977, 1.92 ) }
    dend_64 { pt3dadd( -24.0482, 38.1429, 23.9212, 1.92 ) }
    dend_64 { pt3dadd( -33.4871, 46.4203, 29.7628, 1.92 ) }
    dend_64 { pt3dadd( -44.4629, 53.938, 33.4552, 1.92 ) }
    dend_64 { pt3dadd( -54.4499, 63.1385, 36.4288, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -11.8984, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.62774, -14.3248, 11.3843, 2.64 ) }
    dend_41 { pt3dadd( 1.85693, -17.1265, 11.1897, 2.64 ) }
    dend_41 { pt3dadd( 2.02596, -19.1927, 11.0462, 2.64 ) }
    dend_41 { pt3dadd( 2.18357, -21.1195, 10.9124, 2.64 ) }
    dend_41 { pt3dadd( 2.50427, -25.0398, 10.6402, 2.4 ) }
    dend_41 { pt3dadd( 2.82739, -28.9897, 10.3659, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -12.7279, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 4.998, -13.4127, 12.8636, 2.16 ) }
    dend_18 { pt3dadd( 5.57732, -15.5902, 12.3057, 2.16 ) }
    dend_18 { pt3dadd( 6.01882, -17.1483, 11.9803, 2.16 ) }
    dend_18 { pt3dadd( 6.77884, -19.8304, 11.4201, 2.16 ) }
    dend_18 { pt3dadd( 7.33764, -21.8024, 11.0083, 2.16 ) }
    dend_18 { pt3dadd( 7.74282, -23.2323, 10.7096, 2.16 ) }
    dend_18 { pt3dadd( 8.81398, -26.9565, 9.91984, 2.52 ) }
    dend_18 { pt3dadd( 9.57097, -29.8497, 9.30895, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 13.3226, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.061903, 17.5914, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.478587, 21.7952, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.96394, 25.5702, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.20935, 27.4789, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.50837, 29.8047, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.29129 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.29129 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.29129 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -68.6182, 22.8033, -27.504, 1.2 ) }
    dend_75 { pt3dadd( -69.9403, 25.955, -26.9037, 1.2 ) }
    dend_75 { pt3dadd( -71.4933, 28.3585, -26.2953, 1.2 ) }
    dend_75 { pt3dadd( -72.688, 29.4619, -25.9055, 1.2 ) }
    dend_75 { pt3dadd( -73.4844, 30.0786, -25.6608, 1.56 ) }
    dend_75 { pt3dadd( -74.0009, 30.3726, -25.5969, 1.56 ) }
    dend_75 { pt3dadd( -74.9308, 30.7942, -25.5646, 1.56 ) }
    dend_75 { pt3dadd( -77.5528, 31.6365, -25.541, 0.96 ) }
    dend_75 { pt3dadd( -81.685, 32.6629, -25.6997, 1.56 ) }
    dend_75 { pt3dadd( -82.0971, 32.7538, -25.7233, 1.56 ) }
    dend_75 { pt3dadd( -87.3003, 33.7582, -26.1521, 1.08 ) }
    dend_75 { pt3dadd( -88.912, 34.0071, -26.3472, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -68.6182, 22.8033, -27.504, 1.08 ) }
    dend_74 { pt3dadd( -69.3676, 22.6605, -27.9319, 1.08 ) }
    dend_74 { pt3dadd( -70.1568, 22.4126, -28.4214, 1.56 ) }
    dend_74 { pt3dadd( -71.7857, 21.6552, -29.6683, 0.84 ) }
    dend_74 { pt3dadd( -72.389, 21.2729, -30.2556, 0.84 ) }
    dend_74 { pt3dadd( -72.5806, 21.1202, -30.4765, 0.84 ) }
    dend_74 { pt3dadd( -73.0603, 20.6743, -31.101, 0.84 ) }
    dend_74 { pt3dadd( -73.4832, 20.1303, -31.8267, 0.84 ) }
    dend_74 { pt3dadd( -73.9368, 19.3376, -32.8042, 0.84 ) }
    dend_74 { pt3dadd( -74.2707, 18.5465, -33.6416, 0.84 ) }
    dend_74 { pt3dadd( -74.4678, 18.0377, -34.1401, 0.84 ) }
    dend_74 { pt3dadd( -74.6806, 17.5343, -34.6236, 0.84 ) }
    dend_74 { pt3dadd( -74.8701, 17.1488, -34.9751, 0.84 ) }
    dend_74 { pt3dadd( -75.2292, 16.5518, -35.4374, 0.84 ) }
    dend_74 { pt3dadd( -75.6009, 16.0546, -35.7071, 0.84 ) }
    dend_74 { pt3dadd( -75.8389, 15.7964, -35.8069, 0.84 ) }
    dend_74 { pt3dadd( -76.3588, 15.3263, -35.9471, 0.84 ) }
    dend_74 { pt3dadd( -76.7369, 15.0335, -36.0086, 0.84 ) }
    dend_74 { pt3dadd( -77.334, 14.6263, -36.0594, 0.84 ) }
    dend_74 { pt3dadd( -78.072, 14.1074, -36.0867, 0.84 ) }
    dend_74 { pt3dadd( -78.8728, 13.4787, -36.0892, 0.84 ) }
    dend_74 { pt3dadd( -79.3793, 12.9989, -36.069, 0.84 ) }
    dend_74 { pt3dadd( -79.9693, 12.3354, -36.0384, 0.84 ) }
    dend_74 { pt3dadd( -80.8999, 11.1047, -36.0227, 0.84 ) }
    dend_74 { pt3dadd( -81.6348, 9.94879, -36.0299, 1.32 ) }
    dend_74 { pt3dadd( -82.1575, 8.99172, -36.0357, 0.6 ) }
    dend_74 { pt3dadd( -82.6807, 7.85312, -36.0377, 1.2 ) }
    dend_74 { pt3dadd( -83.0508, 6.88707, -36.0522, 0.72 ) }
    dend_74 { pt3dadd( -83.3309, 5.95773, -36.0879, 0.72 ) }
    dend_74 { pt3dadd( -83.464, 5.34509, -36.137, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -1.45361, 30.582, 0.44676, 1.32 ) }
    dend_70 { pt3dadd( -0.492218, 32.669, 1.42427, 1.32 ) }
    dend_70 { pt3dadd( 1.68296, 37.7872, 3.48622, 0.96 ) }
    dend_70 { pt3dadd( 2.55944, 40.1688, 4.30751, 0.96 ) }
    dend_70 { pt3dadd( 3.27612, 42.6594, 5.02032, 1.2 ) }
    dend_70 { pt3dadd( 3.57644, 44.0821, 5.34823, 1.2 ) }
    dend_70 { pt3dadd( 3.77683, 45.3376, 5.59743, 1.2 ) }
    dend_70 { pt3dadd( 3.82238, 46.7456, 5.76073, 1.44 ) }
    dend_70 { pt3dadd( 3.52518, 48.678, 5.76325, 1.08 ) }
    dend_70 { pt3dadd( 2.83425, 51.1334, 5.76523, 1.08 ) }
    dend_70 { pt3dadd( 1.87154, 53.8047, 5.76695, 1.56 ) }
    dend_70 { pt3dadd( 1.56624, 54.5331, 5.7672, 1.56 ) }
    dend_70 { pt3dadd( 0.62499, 56.5052, 5.76675, 1.56 ) }
    dend_70 { pt3dadd( -0.748635, 59.0417, 5.76327, 1.56 ) }
    dend_70 { pt3dadd( -0.87192, 59.2374, 5.76246, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -54.4499, 63.1385, 36.4288, 1.2 ) }
    dend_66 { pt3dadd( -62.6666, 72.7785, 40.7452, 1.2 ) }
    dend_66 { pt3dadd( -69.7783, 81.6468, 47.8187, 1.2 ) }
    dend_66 { pt3dadd( -78.1997, 91.2255, 51.8345, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -54.4499, 63.1385, 36.4288, 1.44 ) }
    dend_65 { pt3dadd( -61.5059, 70.3866, 40.0671, 1.2 ) }
    dend_65 { pt3dadd( -67.3385, 78.7323, 43.719, 1.2 ) }
    dend_65 { pt3dadd( -73.9538, 86.6318, 46.9335, 1.2 ) }
    dend_65 { pt3dadd( -81.4862, 93.7332, 49.824, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.82739, -28.9897, 10.3659, 1.2 ) }
    dend_61 { pt3dadd( 3.1338, -33.5224, 9.4558, 1.2 ) }
    dend_61 { pt3dadd( 3.3709, -36.2296, 8.92124, 1.2 ) }
    dend_61 { pt3dadd( 3.69437, -39.2713, 8.34474, 1.2 ) }
    dend_61 { pt3dadd( 4.01273, -41.9556, 7.85742, 1.2 ) }
    dend_61 { pt3dadd( 4.2767, -43.8647, 7.53514, 1.2 ) }
    dend_61 { pt3dadd( 4.48428, -45.2926, 7.29601, 1.2 ) }
    dend_61 { pt3dadd( 4.70671, -46.3653, 7.11251, 1.2 ) }
    dend_61 { pt3dadd( 5.04093, -47.7495, 6.89796, 1.2 ) }
    dend_61 { pt3dadd( 5.27214, -48.5604, 6.81728, 1.2 ) }
    dend_61 { pt3dadd( 5.76103, -50.0928, 6.72129, 1.2 ) }
    dend_61 { pt3dadd( 6.10101, -51.2164, 6.66504, 1.2 ) }
    dend_61 { pt3dadd( 6.38263, -52.4315, 6.61005, 1.2 ) }
    dend_61 { pt3dadd( 6.50193, -53.4195, 6.55448, 1.2 ) }
    dend_61 { pt3dadd( 6.55963, -55.396, 6.4291, 1.2 ) }
    dend_61 { pt3dadd( 6.5391, -56.2309, 6.37376, 1.2 ) }
    dend_61 { pt3dadd( 6.4398, -58.0193, 6.2475, 1.2 ) }
    dend_61 { pt3dadd( 6.2588, -61.0561, 6.04579, 1.68 ) }
    dend_61 { pt3dadd( 6.01428, -64.7537, 5.79271, 1.08 ) }
    dend_61 { pt3dadd( 5.8101, -67.9903, 5.56997, 0.72 ) }
    dend_61 { pt3dadd( 5.73974, -69.6406, 5.46372, 1.92 ) }
    dend_61 { pt3dadd( 5.68081, -73.9375, 5.21911, 0.96 ) }
    dend_61 { pt3dadd( 5.74218, -77.0893, 5.06936, 0.84 ) }
    dend_61 { pt3dadd( 5.86207, -78.8841, 5.00613, 1.44 ) }
    dend_61 { pt3dadd( 6.14069, -81.2352, 4.95759, 1.08 ) }
    dend_61 { pt3dadd( 6.48226, -83.4384, 4.94011, 1.08 ) }
    dend_61 { pt3dadd( 7.10476, -86.9731, 4.9441, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( 7.38065, -88.4817, 4.95713, 1.44 ) }
    dend_61 { pt3dadd( 7.74104, -90.6222, 4.96943, 1.44 ) }
    dend_61 { pt3dadd( 8.1732, -93.5035, 4.97422, 0.72 ) }
    dend_61 { pt3dadd( 8.32055, -94.6336, 4.97088, 1.2 ) }
    dend_61 { pt3dadd( 8.55996, -96.7108, 4.95703, 1.2 ) }
    dend_61 { pt3dadd( 8.75537, -98.3185, 4.94864, 1.56 ) }
    dend_61 { pt3dadd( 9.00874, -100.536, 4.87153, 1.32 ) }
    dend_61 { pt3dadd( 9.2573, -103.043, 4.72389, 0.84 ) }
    dend_61 { pt3dadd( 9.60767, -105.972, 4.52017, 1.56 ) }
    dend_61 { pt3dadd( 9.84488, -107.7, 4.39503, 1.56 ) }
    dend_61 { pt3dadd( 10.3011, -110.777, 4.16668, 0.96 ) }
    dend_61 { pt3dadd( 10.7407, -113.611, 3.95155, 0.96 ) }
    dend_61 { pt3dadd( 11.0646, -115.799, 3.77978, 1.32 ) }
    dend_61 { pt3dadd( 11.3706, -118.491, 3.55742, 1.32 ) }
    dend_61 { pt3dadd( 11.6453, -122.243, 3.24909, 0.72 ) }
    dend_61 { pt3dadd( 11.6901, -123.515, 3.14457, 1.56 ) }
    dend_61 { pt3dadd( 11.6775, -124.786, 3.02657, 1.56 ) }
    dend_61 { pt3dadd( 11.5719, -127.255, 2.78478, 0.96 ) }
    dend_61 { pt3dadd( 11.3565, -129.395, 2.51266, 1.68 ) }
    dend_61 { pt3dadd( 10.9265, -132.753, 1.95163, 1.08 ) }
    dend_61 { pt3dadd( 10.5789, -135.473, 1.42789, 0.96 ) }
    dend_61 { pt3dadd( 10.2231, -138.938, 0.736903, 1.44 ) }
    dend_61 { pt3dadd( 10.0751, -140.808, 0.359053, 1.08 ) }
    dend_61 { pt3dadd( 9.90356, -143.773, -0.272174, 0.84 ) }
    dend_61 { pt3dadd( 9.81123, -146.43, -0.876326, 1.44 ) }
    dend_61 { pt3dadd( 9.78202, -147.744, -1.18571, 1.44 ) }
    dend_61 { pt3dadd( 9.77658, -150.332, -1.7728, 0.72 ) }
    dend_61 { pt3dadd( 9.82257, -152.218, -2.19453, 0.72 ) }
    dend_61 { pt3dadd( 9.95179, -155.612, -2.95546, 1.32 ) }
    dend_61 { pt3dadd( 10.0713, -158.118, -3.54615, 0.96 ) }
    dend_61 { pt3dadd( 10.0764, -159.197, -3.81026, 0.96 ) }
    dend_61 { pt3dadd( 10.0693, -160.401, -4.14258, 0.96 ) }
    dend_61 { pt3dadd( 10.0003, -161.948, -4.63365, 0.96 ) }
    dend_61 { pt3dadd( 9.93354, -162.851, -4.92559, 0.96 ) }
    dend_61 { pt3dadd( 9.81389, -164.077, -5.36695, 0.96 ) }
    dend_61 { pt3dadd( 9.67431, -165.364, -5.84787, 0.96 ) }
    dend_61 { pt3dadd( 9.23746, -169.189, -7.28157, 1.44 ) }
    dend_61 { pt3dadd( 8.72973, -173.596, -8.88516, 0.48 ) }
    dend_61 { pt3dadd( 8.5054, -175.73, -9.61298, 1.56 ) }
    dend_61 { pt3dadd( 8.10815, -180.096, -11.0122, 0.84 ) }
    dend_61 { pt3dadd( 8.03134, -181.282, -11.3902, 0.84 ) }
    dend_61 { pt3dadd( 7.95814, -183.376, -12.0467, 0.84 ) }
    dend_61 { pt3dadd( 7.95644, -185.099, -12.5371, 0.84 ) }
    dend_61 { pt3dadd( 8.00834, -186.79, -12.9485, 0.84 ) }
    dend_61 { pt3dadd( 8.05679, -188.42, -13.3002, 0.84 ) }
    dend_61 { pt3dadd( 8.20587, -192.838, -14.1275, 0.6 ) }
    dend_61 { pt3dadd( 8.27477, -195.281, -14.6109, 1.08 ) }
    dend_61 { pt3dadd( 8.34727, -198.674, -15.3229, 0.72 ) }
    dend_61 { pt3dadd( 8.37335, -201.837, -16.01, 0.6 ) }
    dend_61 { pt3dadd( 8.34747, -203.347, -16.3379, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.82739, -28.9897, 10.3659, 1.92 ) }
    dend_42 { pt3dadd( 2.91317, -31.5871, 10.1956, 1.92 ) }
    dend_42 { pt3dadd( 3.00708, -34.4307, 10.0091, 1.92 ) }
    dend_42 { pt3dadd( 3.11299, -37.6375, 9.79876, 2.28 ) }
    dend_42 { pt3dadd( 3.16922, -39.3402, 9.6871, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.57097, -29.8497, 9.30895, 1.32 ) }
    dend_40 { pt3dadd( 12.2972, -31.2525, 10.1835, 1.32 ) }
    dend_40 { pt3dadd( 14.1243, -31.9939, 10.8404, 1.32 ) }
    dend_40 { pt3dadd( 15.6061, -32.5035, 11.4097, 1.32 ) }
    dend_40 { pt3dadd( 17.1974, -33.0036, 12.0467, 1.32 ) }
    dend_40 { pt3dadd( 19.3122, -33.6035, 12.9386, 1.32 ) }
    dend_40 { pt3dadd( 20.4235, -33.922, 13.4261, 1.32 ) }
    dend_40 { pt3dadd( 23.2936, -34.7244, 14.8263, 1.08 ) }
    dend_40 { pt3dadd( 24.1993, -34.97, 15.2951, 1.08 ) }
    dend_40 { pt3dadd( 24.5727, -35.0763, 15.4963, 1.08 ) }
    dend_40 { pt3dadd( 26.5639, -35.7056, 16.609, 1.44 ) }
    dend_40 { pt3dadd( 28.0988, -36.3234, 17.4445, 1.08 ) }
    dend_40 { pt3dadd( 28.8762, -36.7241, 17.855, 1.08 ) }
    dend_40 { pt3dadd( 30.7458, -37.812, 18.7695, 1.08 ) }
    dend_40 { pt3dadd( 31.9677, -38.5149, 19.3222, 0.84 ) }
    dend_40 { pt3dadd( 33.1992, -39.2189, 19.8348, 0.84 ) }
    dend_40 { pt3dadd( 34.6866, -39.9793, 20.4049, 0.84 ) }
    dend_40 { pt3dadd( 35.895, -40.5659, 20.8574, 0.84 ) }
    dend_40 { pt3dadd( 38.8674, -41.9482, 21.8247, 1.2 ) }
    dend_40 { pt3dadd( 40.5748, -42.6981, 22.2787, 0.84 ) }
    dend_40 { pt3dadd( 42.054, -43.2484, 22.5897, 0.84 ) }
    dend_40 { pt3dadd( 44.9662, -44.1544, 23.0949, 0.96 ) }
    dend_40 { pt3dadd( 47.8399, -45.0074, 23.5592, 0.72 ) }
    dend_40 { pt3dadd( 51.0593, -45.9362, 24.012, 1.2 ) }
    dend_40 { pt3dadd( 52.8546, -46.4512, 24.1927, 1.2 ) }
    dend_40 { pt3dadd( 54.7629, -46.9215, 24.3027, 0.6 ) }
    dend_40 { pt3dadd( 55.6578, -47.1047, 24.3121, 0.6 ) }
    dend_40 { pt3dadd( 65.7659, -49.0979, 26.2385, 0.6 ) }
    dend_40 { pt3dadd( 75.5601, -52.8622, 27.2373, 0.6 ) }
    dend_40 { pt3dadd( 85.7341, -54.3455, 29.2149, 0.6 ) }
    dend_40 { pt3dadd( 95.9471, -54.1773, 31.4147, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.57097, -29.8497, 9.30895, 1.8 ) }
    dend_19 { pt3dadd( 9.80531, -33.1607, 9.27335, 1.8 ) }
    dend_19 { pt3dadd( 10.1518, -36.5366, 9.23985, 1.8 ) }
    dend_19 { pt3dadd( 10.4246, -38.5068, 9.22298, 1.8 ) }
    dend_19 { pt3dadd( 10.5793, -39.4735, 9.19497, 1.8 ) }
    dend_19 { pt3dadd( 10.8188, -40.8698, 9.13549, 1.8 ) }
    dend_19 { pt3dadd( 11.0521, -42.1543, 9.11583, 1.8 ) }
    dend_19 { pt3dadd( 11.2971, -43.203, 9.1305, 1.8 ) }
    dend_19 { pt3dadd( 11.6394, -44.9027, 9.19933, 1.8 ) }
    dend_19 { pt3dadd( 11.789, -46.0306, 9.25144, 1.8 ) }
    dend_19 { pt3dadd( 11.9416, -47.6206, 9.33232, 1.8 ) }
    dend_19 { pt3dadd( 12.1306, -50.5615, 9.36469, 1.8 ) }
    dend_19 { pt3dadd( 12.2015, -52.0676, 9.3439, 1.8 ) }
    dend_19 { pt3dadd( 12.3213, -55.093, 9.24822, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 12.4525, -57.4212, 9.1172, 1.92 ) }
    dend_19 { pt3dadd( 12.5381, -58.3871, 9.04036, 1.92 ) }
    dend_19 { pt3dadd( 13.0634, -63.885, 8.45837, 2.16 ) }
    dend_19 { pt3dadd( 13.2976, -66.0612, 8.1368, 2.16 ) }
    dend_19 { pt3dadd( 13.4973, -67.5323, 7.89147, 2.16 ) }
    dend_19 { pt3dadd( 14.0122, -70.3799, 7.37264, 1.92 ) }
    dend_19 { pt3dadd( 14.4205, -72.1722, 7.02846, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.50837, 29.8047, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 2.91806, 32.682, 12.916, 1.8 ) }
    dend_1 { pt3dadd( 4.20118, 35.301, 13.902, 1.8 ) }
    dend_1 { pt3dadd( 5.54395, 38.0418, 14.9338, 1.8 ) }
    dend_1 { pt3dadd( 7.12317, 41.2651, 16.1473, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.932029 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.932029 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.932029 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -88.912, 34.0071, -26.3472, 1.68 ) }
    dend_77 { pt3dadd( -89.1929, 34.0362, -26.3313, 1.68 ) }
    dend_77 { pt3dadd( -92.4745, 34.5555, -26.1992, 1.2 ) }
    dend_77 { pt3dadd( -95.0377, 35.1234, -26.1613, 1.68 ) }
    dend_77 { pt3dadd( -96.1646, 35.4269, -26.1779, 1.68 ) }
    dend_77 { pt3dadd( -97.8042, 35.957, -26.2806, 1.2 ) }
    dend_77 { pt3dadd( -100.677, 36.9676, -26.5763, 1.2 ) }
    dend_77 { pt3dadd( -102.324, 37.5809, -26.9067, 0.84 ) }
    dend_77 { pt3dadd( -103.975, 38.26, -27.5079, 1.32 ) }
    dend_77 { pt3dadd( -104.956, 38.6465, -28.0147, 1.32 ) }
    dend_77 { pt3dadd( -106.584, 39.2244, -29.0146, 0.84 ) }
    dend_77 { pt3dadd( -107.3, 39.4432, -29.5193, 0.84 ) }
    dend_77 { pt3dadd( -109.872, 40.1357, -31.5254, 0.84 ) }
    dend_77 { pt3dadd( -111.839, 40.614, -33.0935, 0.84 ) }
    dend_77 { pt3dadd( -113.146, 40.9435, -34.1488, 0.84 ) }
    dend_77 { pt3dadd( -114.14, 41.232, -34.911, 0.84 ) }
    dend_77 { pt3dadd( -115.442, 41.6666, -35.8139, 0.84 ) }
    dend_77 { pt3dadd( -116.709, 42.1945, -36.6095, 0.84 ) }
    dend_77 { pt3dadd( -118.459, 43.1446, -37.6367, 0.84 ) }
    dend_77 { pt3dadd( -119.641, 43.8812, -38.2999, 0.84 ) }
    dend_77 { pt3dadd( -121.253, 44.9652, -39.196, 0.84 ) }
    dend_77 { pt3dadd( -123.256, 46.3879, -40.3746, 0.84 ) }
    dend_77 { pt3dadd( -124.3, 47.1825, -41.0167, 0.84 ) }
    dend_77 { pt3dadd( -126.424, 48.8185, -42.3793, 1.32 ) }
    dend_77 { pt3dadd( -127.924, 49.9641, -43.3668, 1.32 ) }
    dend_77 { pt3dadd( -129.928, 51.5849, -44.7754, 0.96 ) }
    dend_77 { pt3dadd( -131.42, 52.8479, -45.9305, 0.96 ) }
    dend_77 { pt3dadd( -132.268, 53.5517, -46.5747, 0.96 ) }
    dend_77 { pt3dadd( -133.444, 54.4316, -47.4226, 0.96 ) }
    dend_77 { pt3dadd( -134.496, 55.1079, -48.0782, 0.96 ) }
    dend_77 { pt3dadd( -137.38, 56.801, -49.652, 0.72 ) }
    dend_77 { pt3dadd( -138.435, 57.3533, -50.1373, 0.72 ) }
    dend_77 { pt3dadd( -142.569, 59.3002, -51.6764, 1.08 ) }
    dend_77 { pt3dadd( -143.758, 59.819, -52.0538, 1.08 ) }
    dend_77 { pt3dadd( -147.527, 61.5851, -53.1177, 1.08 ) }
    dend_77 { pt3dadd( -149.474, 62.5101, -53.6707, 1.08 ) }
    dend_77 { pt3dadd( -151.624, 63.6381, -54.3405, 1.08 ) }
    dend_77 { pt3dadd( -153.493, 64.7385, -55.0164, 1.08 ) }
    dend_77 { pt3dadd( -154.157, 65.1616, -55.316, 1.08 ) }
    dend_77 { pt3dadd( -157.005, 67.0933, -56.8018, 1.08 ) }
    dend_77 { pt3dadd( -159.177, 68.6104, -58.1083, 1.08 ) }
    dend_77 { pt3dadd( -163.307, 71.4184, -60.6901, 1.44 ) }
    dend_77 { pt3dadd( -164.414, 72.1317, -61.3797, 1.44 ) }
    dend_77 { pt3dadd( -167.129, 73.6661, -62.8925, 1.2 ) }
    dend_77 { pt3dadd( -168.221, 74.2206, -63.3506, 1.2 ) }
    dend_77 { pt3dadd( -169.736, 74.9011, -63.7766, 1.2 ) }
    dend_77 { pt3dadd( -174.009, 76.7502, -64.5251, 1.08 ) }
    dend_77 { pt3dadd( -176.672, 77.8073, -64.8763, 1.08 ) }
    dend_77 { pt3dadd( -179.948, 79.1467, -65.258, 1.08 ) }
    dend_77 { pt3dadd( -184.614, 81.0527, -65.7327, 0.72 ) }
    dend_77 { pt3dadd( -187.66, 82.2728, -66.0335, 0.72 ) }
    dend_77 { pt3dadd( -190.096, 83.2364, -66.2616, 1.08 ) }
    dend_77 { pt3dadd( -193.084, 84.3442, -66.4785, 0.84 ) }
    dend_77 { pt3dadd( -194.823, 84.8526, -66.5476, 0.84 ) }
    dend_77 { pt3dadd( -196.067, 85.1125, -66.5808, 0.84 ) }
    dend_77 { pt3dadd( -197.574, 85.3328, -66.6354, 0.84 ) }
    dend_77 { pt3dadd( -200.174, 85.6116, -66.5965, 0.84 ) }
    dend_77 { pt3dadd( -203.87, 85.9046, -66.2454, 0.84 ) }
    dend_77 { pt3dadd( -209.461, 86.1762, -65.2575, 0.6 ) }
    dend_77 { pt3dadd( -210.268, 86.1842, -65.0949, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -88.912, 34.0071, -26.3472, 1.32 ) }
    dend_76 { pt3dadd( -89.2489, 34.9868, -27.1777, 1.32 ) }
    dend_76 { pt3dadd( -89.7349, 36.3156, -28.3872, 0.84 ) }
    dend_76 { pt3dadd( -90.2887, 37.922, -29.9714, 1.44 ) }
    dend_76 { pt3dadd( -91.1543, 40.1545, -32.4101, 1.08 ) }
    dend_76 { pt3dadd( -91.7537, 41.428, -33.8678, 1.08 ) }
    dend_76 { pt3dadd( -91.9919, 41.8535, -34.3769, 1.08 ) }
    dend_76 { pt3dadd( -92.9508, 43.2266, -36.2176, 1.56 ) }
    dend_76 { pt3dadd( -94.0782, 44.4285, -38.0157, 0.96 ) }
    dend_76 { pt3dadd( -95.0089, 45.1691, -39.2127, 0.96 ) }
    dend_76 { pt3dadd( -96.1425, 45.8092, -40.1627, 0.96 ) }
    dend_76 { pt3dadd( -97.0434, 46.1741, -40.6579, 0.96 ) }
    dend_76 { pt3dadd( -97.9005, 46.4368, -40.9958, 0.96 ) }
    dend_76 { pt3dadd( -98.744, 46.6179, -41.2049, 0.96 ) }
    dend_76 { pt3dadd( -99.9385, 46.8755, -41.4145, 0.96 ) }
    dend_76 { pt3dadd( -102.466, 47.475, -41.8449, 0.72 ) }
    dend_76 { pt3dadd( -104.688, 47.943, -42.232, 0.72 ) }
    dend_76 { pt3dadd( -106.342, 48.2755, -42.5093, 0.72 ) }
    dend_76 { pt3dadd( -107.589, 48.5011, -42.7191, 0.72 ) }
    dend_76 { pt3dadd( -109.137, 48.7662, -42.9918, 0.72 ) }
    dend_76 { pt3dadd( -111.514, 49.203, -43.4516, 0.72 ) }
    dend_76 { pt3dadd( -114.061, 49.7386, -43.9657, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.87192, 59.2374, 5.76246, 1.32 ) }
    dend_72 { pt3dadd( -1.47052, 60.4346, 6.18503, 1.32 ) }
    dend_72 { pt3dadd( -2.31433, 61.9742, 6.66325, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -3.46315, 64.0771, 7.28162, 1.08 ) }
    dend_72 { pt3dadd( -4.17277, 65.4324, 7.65527, 1.08 ) }
    dend_72 { pt3dadd( -4.576, 66.2624, 7.86437, 1.08 ) }
    dend_72 { pt3dadd( -5.15871, 67.5457, 8.16047, 1.08 ) }
    dend_72 { pt3dadd( -5.81325, 68.9678, 8.39597, 1.08 ) }
    dend_72 { pt3dadd( -6.12116, 69.6285, 8.48777, 1.08 ) }
    dend_72 { pt3dadd( -6.48712, 70.4579, 8.56246, 1.08 ) }
    dend_72 { pt3dadd( -6.97793, 71.5151, 8.65037, 1.08 ) }
    dend_72 { pt3dadd( -7.35714, 72.2112, 8.71521, 1.08 ) }
    dend_72 { pt3dadd( -7.79144, 72.791, 8.7786, 1.08 ) }
    dend_72 { pt3dadd( -8.33541, 73.2704, 8.83934, 1.08 ) }
    dend_72 { pt3dadd( -9.16862, 73.8844, 8.91431, 1.08 ) }
    dend_72 { pt3dadd( -10.2179, 74.6227, 9.02347, 1.08 ) }
    dend_72 { pt3dadd( -11.144, 75.3001, 9.13397, 1.08 ) }
    dend_72 { pt3dadd( -12.1346, 76.142, 9.27283, 1.08 ) }
    dend_72 { pt3dadd( -13.0228, 77.2173, 9.28224, 0.96 ) }
    dend_72 { pt3dadd( -13.2859, 77.9943, 9.14736, 0.96 ) }
    dend_72 { pt3dadd( -13.3656, 79.1851, 8.8108, 0.96 ) }
    dend_72 { pt3dadd( -13.3302, 80.1589, 8.50855, 0.96 ) }
    dend_72 { pt3dadd( -13.2587, 80.9999, 8.24069, 0.96 ) }
    dend_72 { pt3dadd( -12.9069, 84.2097, 7.19768, 0.72 ) }
    dend_72 { pt3dadd( -12.7776, 85.5376, 6.73971, 0.72 ) }
    dend_72 { pt3dadd( -12.7246, 86.6803, 6.33974, 0.72 ) }
    dend_72 { pt3dadd( -12.716, 87.9045, 5.94357, 0.72 ) }
    dend_72 { pt3dadd( -12.7694, 89.9765, 5.39429, 0.72 ) }
    dend_72 { pt3dadd( -12.8216, 91.0079, 5.19219, 0.72 ) }
    dend_72 { pt3dadd( -12.9122, 91.9771, 5.10218, 0.72 ) }
    dend_72 { pt3dadd( -13.0919, 93.3736, 4.92767, 0.72 ) }
    dend_72 { pt3dadd( -13.3813, 95.5272, 4.62718, 0.72 ) }
    dend_72 { pt3dadd( -13.6476, 97.0679, 4.40483, 0.72 ) }
    dend_72 { pt3dadd( -13.948, 98.3544, 4.22227, 0.72 ) }
    dend_72 { pt3dadd( -14.5348, 100.33, 3.94606, 1.2 ) }
    dend_72 { pt3dadd( -15.7799, 103.347, 3.54944, 1.08 ) }
    dend_72 { pt3dadd( -16.5853, 104.676, 3.40513, 1.08 ) }
    dend_72 { pt3dadd( -17.4844, 105.823, 3.30903, 1.08 ) }
    dend_72 { pt3dadd( -18.1673, 106.612, 3.27843, 1.08 ) }
    dend_72 { pt3dadd( -18.8035, 107.308, 3.25253, 0.72 ) }
    dend_72 { pt3dadd( -20.6227, 109.262, 3.15641, 1.2 ) }
    dend_72 { pt3dadd( -22.5746, 111.34, 3.09908, 1.08 ) }
    dend_72 { pt3dadd( -24.2178, 113.134, 3.05726, 1.44 ) }
    dend_72 { pt3dadd( -25.0246, 114.15, 3.03777, 1.44 ) }
    dend_72 { pt3dadd( -26.2396, 116.065, 3.00515, 1.2 ) }
    dend_72 { pt3dadd( -26.9052, 117.424, 2.98915, 1.2 ) }
    dend_72 { pt3dadd( -27.6037, 119.449, 3.00098, 1.08 ) }
    dend_72 { pt3dadd( -28.1243, 121.789, 3.07174, 1.08 ) }
    dend_72 { pt3dadd( -28.5158, 124.112, 3.22448, 0.96 ) }
    dend_72 { pt3dadd( -28.8368, 126.44, 3.44555, 0.96 ) }
    dend_72 { pt3dadd( -28.9668, 127.655, 3.6119, 1.2 ) }
    dend_72 { pt3dadd( -29.0797, 129.115, 3.74236, 0.72 ) }
    dend_72 { pt3dadd( -29.1461, 132.02, 3.8027, 1.2 ) }
    dend_72 { pt3dadd( -29.144, 132.789, 3.75675, 1.2 ) }
    dend_72 { pt3dadd( -29.2082, 134.31, 3.58207, 1.2 ) }
    dend_72 { pt3dadd( -29.3889, 135.809, 3.32848, 1.2 ) }
    dend_72 { pt3dadd( -29.9391, 138.68, 2.68085, 1.2 ) }
    dend_72 { pt3dadd( -30.3216, 139.961, 2.30634, 1.2 ) }
    dend_72 { pt3dadd( -30.6847, 140.755, 2.03178, 1.2 ) }
    dend_72 { pt3dadd( -31.7523, 142.337, 1.52684, 0.96 ) }
    dend_72 { pt3dadd( -32.6428, 143.248, 1.32458, 1.2 ) }
    dend_72 { pt3dadd( -33.2319, 143.76, 1.27341, 1.2 ) }
    dend_72 { pt3dadd( -34.2338, 144.573, 1.27775, 1.2 ) }
    dend_72 { pt3dadd( -34.8611, 145.095, 1.28107, 1.2 ) }
    dend_72 { pt3dadd( -36.4019, 146.5, 1.29072, 1.2 ) }
    dend_72 { pt3dadd( -38.1376, 148.394, 1.3033, 1.2 ) }
    dend_72 { pt3dadd( -39.0592, 149.591, 1.31024, 1.2 ) }
    dend_72 { pt3dadd( -39.6502, 150.447, 1.3143, 1.2 ) }
    dend_72 { pt3dadd( -40.2863, 151.51, 1.31846, 1.2 ) }
    dend_72 { pt3dadd( -40.8247, 152.538, 1.32174, 1.2 ) }
    dend_72 { pt3dadd( -41.6624, 154.522, 1.32634, 0.84 ) }
    dend_72 { pt3dadd( -42.3982, 156.531, 1.35221, 1.32 ) }
    dend_72 { pt3dadd( -43.434, 159.534, 1.41803, 0.84 ) }
    dend_72 { pt3dadd( -43.9451, 161.041, 1.4635, 0.84 ) }
    dend_72 { pt3dadd( -44.3462, 162.222, 1.50795, 0.84 ) }
    dend_72 { pt3dadd( -44.8845, 163.831, 1.57913, 0.84 ) }
    dend_72 { pt3dadd( -45.5389, 165.667, 1.71036, 0.84 ) }
    dend_72 { pt3dadd( -45.9618, 166.694, 1.80869, 0.84 ) }
    dend_72 { pt3dadd( -46.6138, 167.912, 1.88093, 0.84 ) }
    dend_72 { pt3dadd( -47.0943, 168.593, 1.88987, 0.84 ) }
    dend_72 { pt3dadd( -48.0163, 169.624, 1.85621, 1.2 ) }
    dend_72 { pt3dadd( -49.5192, 171.015, 1.70717, 0.84 ) }
    dend_72 { pt3dadd( -50.9224, 172.142, 1.53971, 0.84 ) }
    dend_72 { pt3dadd( -52.5705, 173.291, 1.35855, 1.2 ) }
    dend_72 { pt3dadd( -53.928, 173.974, 1.23397, 0.6 ) }
    dend_72 { pt3dadd( -55.5833, 174.708, 1.07598, 0.6 ) }
    dend_72 { pt3dadd( -57.3458, 175.354, 0.901201, 1.08 ) }
    dend_72 { pt3dadd( -59.3729, 175.942, 0.69226, 0.48 ) }
    dend_72 { pt3dadd( -60.5319, 176.189, 0.628006, 0.48 ) }
    dend_72 { pt3dadd( -63.928, 176.711, 0.740455, 0.84 ) }
    dend_72 { pt3dadd( -69.2696, 186.112, 1.98792, 0.84 ) }
    dend_72 { pt3dadd( -74.5151, 195.661, 1.78542, 0.84 ) }
    dend_72 { pt3dadd( -78.4942, 205.856, 1.41592, 0.84 ) }
    dend_72 { pt3dadd( -82.7641, 215.765, -0.304002, 0.84 ) }
    dend_72 { pt3dadd( -86.746, 225.823, -1.93421, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.87192, 59.2374, 5.76246, 1.32 ) }
    dend_71 { pt3dadd( -3.33638, 61.8495, 5.14546, 1.32 ) }
    dend_71 { pt3dadd( -4.17456, 62.7936, 4.86282, 1.32 ) }
    dend_71 { pt3dadd( -5.16627, 64.0455, 4.44103, 1.32 ) }
    dend_71 { pt3dadd( -6.11928, 65.4689, 3.91588, 1.32 ) }
    dend_71 { pt3dadd( -6.64753, 66.3373, 3.58779, 1.32 ) }
    dend_71 { pt3dadd( -7.38896, 67.8545, 3.03955, 1.32 ) }
    dend_71 { pt3dadd( -7.84955, 69.4307, 2.43581, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -8.10964, 71.3005, 1.74855, 1.56 ) }
    dend_71 { pt3dadd( -8.03935, 73.1599, 1.09478, 1.56 ) }
    dend_71 { pt3dadd( -7.89207, 73.8217, 0.899009, 1.56 ) }
    dend_71 { pt3dadd( -6.87796, 76.4378, 0.197279, 1.2 ) }
    dend_71 { pt3dadd( -6.38186, 77.3164, -0.0137248, 1.2 ) }
    dend_71 { pt3dadd( -5.47509, 78.5219, -0.310821, 1.2 ) }
    dend_71 { pt3dadd( -3.9466, 80.136, -0.770488, 1.08 ) }
    dend_71 { pt3dadd( -2.7766, 81.182, -1.11841, 1.08 ) }
    dend_71 { pt3dadd( -2.03163, 81.7762, -1.38583, 1.08 ) }
    dend_71 { pt3dadd( -1.31841, 82.3161, -1.71637, 1.08 ) }
    dend_71 { pt3dadd( -0.600475, 82.9394, -2.15187, 1.08 ) }
    dend_71 { pt3dadd( 0.697323, 84.2952, -3.18253, 1.8 ) }
    dend_71 { pt3dadd( 0.933813, 84.6347, -3.45216, 1.8 ) }
    dend_71 { pt3dadd( 1.77326, 86.4812, -4.88228, 1.32 ) }
    dend_71 { pt3dadd( 2.05346, 87.5598, -5.69372, 1.32 ) }
    dend_71 { pt3dadd( 2.1017, 88.9425, -6.69527, 1.08 ) }
    dend_71 { pt3dadd( 2.00142, 89.3406, -6.96039, 1.08 ) }
    dend_71 { pt3dadd( 1.48862, 90.3333, -7.5179, 1.08 ) }
    dend_71 { pt3dadd( 0.828278, 91.3789, -8.04266, 1.44 ) }
    dend_71 { pt3dadd( 0.273182, 92.1411, -8.39451, 1.44 ) }
    dend_71 { pt3dadd( -0.409934, 93.0627, -8.82961, 1.44 ) }
    dend_71 { pt3dadd( -0.98944, 93.8728, -9.25645, 1.44 ) }
    dend_71 { pt3dadd( -2.10425, 95.6691, -10.2892, 0.84 ) }
    dend_71 { pt3dadd( -2.65382, 96.7461, -10.9221, 0.84 ) }
    dend_71 { pt3dadd( -3.49078, 98.9789, -12.2852, 1.44 ) }
    dend_71 { pt3dadd( -3.83248, 100.257, -12.9278, 1.44 ) }
    dend_71 { pt3dadd( -4.17855, 102.182, -13.7198, 0.96 ) }
    dend_71 { pt3dadd( -4.47477, 104.162, -14.512, 0.96 ) }
    dend_71 { pt3dadd( -4.62212, 105.17, -14.8951, 0.96 ) }
    dend_71 { pt3dadd( -4.747, 106.669, -15.3505, 0.72 ) }
    dend_71 { pt3dadd( -4.61643, 110.62, -16.0729, 1.2 ) }
    dend_71 { pt3dadd( -4.4301, 112.327, -16.197, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -78.1997, 91.2255, 51.8345, 0.6 ) }
    dend_68 { pt3dadd( -84.8484, 101.064, 56.6982, 0.6 ) }
    dend_68 { pt3dadd( -89.1455, 112.469, 61.0695, 0.6 ) }
    dend_68 { pt3dadd( -92.9682, 123.1, 67.452, 0.6 ) }
    dend_68 { pt3dadd( -98.7634, 133.085, 73.1634, 0.6 ) }
    dend_68 { pt3dadd( -103.745, 142.728, 80.1621, 0.6 ) }
    dend_68 { pt3dadd( -109.443, 152.319, 86.6017, 0.6 ) }
    dend_68 { pt3dadd( -114.721, 163.001, 91.5627, 0.6 ) }
    dend_68 { pt3dadd( -121.382, 173.537, 94.5314, 0.6 ) }
    dend_68 { pt3dadd( -128.403, 183.527, 98.3855, 0.6 ) }
    dend_68 { pt3dadd( -134.336, 193.054, 104.685, 0.6 ) }
    dend_68 { pt3dadd( -139.38, 204.214, 108.77, 0.6 ) }
    dend_68 { pt3dadd( -143.327, 215.183, 114.458, 0.6 ) }
    dend_68 { pt3dadd( -148.403, 225.426, 120.473, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -78.1997, 91.2255, 51.8345, 0.84 ) }
    dend_67 { pt3dadd( -86.2083, 96.572, 55.9914, 0.6 ) }
    dend_67 { pt3dadd( -92.7956, 103.666, 60.2767, 0.6 ) }
    dend_67 { pt3dadd( -97.4225, 111.916, 65.2837, 0.6 ) }
    dend_67 { pt3dadd( -101.28, 120.636, 70.2299, 0.6 ) }
    dend_67 { pt3dadd( -105.8, 128.74, 75.5673, 0.6 ) }
    dend_67 { pt3dadd( -112.495, 136.042, 79.2868, 0.6 ) }
    dend_67 { pt3dadd( -118.5, 144.243, 82.3709, 0.6 ) }
    dend_67 { pt3dadd( -124.406, 152.323, 85.9551, 0.6 ) }
    dend_67 { pt3dadd( -129.763, 160.891, 89.3548, 0.6 ) }
    dend_67 { pt3dadd( -134.98, 169.281, 93.3894, 0.6 ) }
    dend_67 { pt3dadd( -139.271, 178.812, 95.6822, 0.6 ) }
    dend_67 { pt3dadd( -142.987, 188.453, 98.6055, 0.6 ) }
    dend_67 { pt3dadd( -145.827, 198.379, 101.692, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 8.34747, -203.347, -16.3379, 0.96 ) }
    dend_63 { pt3dadd( 6.9761, -203.089, -17.3295, 0.96 ) }
    dend_63 { pt3dadd( 5.93246, -202.893, -18.0842, 0.96 ) }
    dend_63 { pt3dadd( 5.19077, -202.753, -18.6205, 0.72 ) }
    dend_63 { pt3dadd( 4.64484, -202.651, -19.0152, 0.72 ) }
    dend_63 { pt3dadd( 4.18128, -202.563, -19.3504, 0.72 ) }
    dend_63 { pt3dadd( 3.3921, -202.415, -19.921, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.34747, -203.347, -16.3379, 0.96 ) }
    dend_62 { pt3dadd( 8.06067, -208.493, -18.2066, 0.96 ) }
    dend_62 { pt3dadd( 8.08403, -210.311, -19.3208, 0.96 ) }
    dend_62 { pt3dadd( 8.26473, -212.386, -20.6795, 1.32 ) }
    dend_62 { pt3dadd( 8.60814, -215.082, -22.3096, 0.6 ) }
    dend_62 { pt3dadd( 8.96111, -216.663, -23.3431, 0.6 ) }
    dend_62 { pt3dadd( 9.46714, -218.534, -24.5334, 1.2 ) }
    dend_62 { pt3dadd( 11.247, -224.464, -28.1125, 1.2 ) }
    dend_62 { pt3dadd( 11.8797, -226.456, -29.3528, 1.56 ) }
    dend_62 { pt3dadd( 12.8437, -229.297, -31.0877, 0.96 ) }
    dend_62 { pt3dadd( 14.7001, -234.428, -33.9666, 0.6 ) }
    dend_62 { pt3dadd( 15.5194, -236.767, -35.0799, 1.08 ) }
    dend_62 { pt3dadd( 16.23, -238.928, -36.0409, 0.72 ) }
    dend_62 { pt3dadd( 16.4937, -240.063, -36.4852, 0.72 ) }
    dend_62 { pt3dadd( 16.7453, -241.644, -37.1634, 1.08 ) }
    dend_62 { pt3dadd( 16.9164, -243.38, -37.9103, 0.72 ) }
    dend_62 { pt3dadd( 16.9584, -245.391, -38.6693, 0.72 ) }
    dend_62 { pt3dadd( 16.9261, -250.682, -40.7424, 0.48 ) }
    dend_62 { pt3dadd( 16.8748, -252.599, -41.4926, 1.56 ) }
    dend_62 { pt3dadd( 16.6577, -255.96, -42.7516, 1.08 ) }
    dend_62 { pt3dadd( 16.5031, -257.301, -43.2274, 0.72 ) }
    dend_62 { pt3dadd( 16.1, -259.906, -44.0629, 1.08 ) }
    dend_62 { pt3dadd( 15.6795, -262.341, -44.8145, 0.72 ) }
    dend_62 { pt3dadd( 15.4525, -263.614, -45.1372, 0.72 ) }
    dend_62 { pt3dadd( 14.9959, -266.698, -45.9997, 1.2 ) }
    dend_62 { pt3dadd( 14.7263, -269.132, -46.7279, 0.72 ) }
    dend_62 { pt3dadd( 14.6321, -270.232, -47.0705, 0.72 ) }
    dend_62 { pt3dadd( 14.531, -273.508, -48.0442, 0.72 ) }
    dend_62 { pt3dadd( 14.7382, -275.384, -48.7088, 1.08 ) }
    dend_62 { pt3dadd( 15.0553, -277.001, -49.2795, 0.96 ) }
    dend_62 { pt3dadd( 15.3523, -278.205, -49.6834, 0.96 ) }
    dend_62 { pt3dadd( 15.7302, -279.589, -50.1019, 0.96 ) }
    dend_62 { pt3dadd( 16.4416, -282.146, -50.7612, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( 17.9826, -287.731, -51.9163, 1.2 ) }
    dend_62 { pt3dadd( 19.1212, -291.61, -52.6664, 0.6 ) }
    dend_62 { pt3dadd( 19.9463, -294.189, -53.0878, 0.6 ) }
    dend_62 { pt3dadd( 20.4443, -295.642, -53.2519, 0.6 ) }
    dend_62 { pt3dadd( 21.0316, -297.284, -53.3351, 0.6 ) }
    dend_62 { pt3dadd( 21.3707, -298.423, -53.308, 0.6 ) }
    dend_62 { pt3dadd( 21.5847, -299.365, -53.2129, 0.6 ) }
    dend_62 { pt3dadd( 21.8925, -300.687, -53.0959, 0.6 ) }
    dend_62 { pt3dadd( 22.6337, -303.693, -52.9897, 0.6 ) }
    dend_62 { pt3dadd( 22.8865, -304.722, -52.9919, 0.6 ) }
    dend_62 { pt3dadd( 24.3172, -310.621, -53.1505, 0.96 ) }
    dend_62 { pt3dadd( 24.9829, -313.441, -53.2663, 0.48 ) }
    dend_62 { pt3dadd( 25.3745, -315.223, -53.3647, 0.48 ) }
    dend_62 { pt3dadd( 26.1955, -319.442, -53.6572, 0.72 ) }
    dend_62 { pt3dadd( 26.6413, -321.963, -53.8495, 0.48 ) }
    dend_62 { pt3dadd( 26.9415, -323.969, -53.9313, 1.2 ) }
    dend_62 { pt3dadd( 27.3765, -327.771, -53.9799, 0.84 ) }
    dend_62 { pt3dadd( 27.5349, -330.084, -53.9635, 1.32 ) }
    dend_62 { pt3dadd( 27.6087, -333.414, -53.8943, 0.84 ) }
    dend_62 { pt3dadd( 27.5441, -335.978, -53.802, 1.44 ) }
    dend_62 { pt3dadd( 27.1557, -341.746, -53.5888, 0.48 ) }
    dend_62 { pt3dadd( 26.8732, -344.72, -53.4747, 0.48 ) }
    dend_62 { pt3dadd( 26.3253, -348.58, -53.3764, 0.48 ) }
    dend_62 { pt3dadd( 25.8806, -350.88, -53.367, 0.48 ) }
    dend_62 { pt3dadd( 25.3116, -353.008, -53.4295, 0.96 ) }
    dend_62 { pt3dadd( 23.6151, -357.667, -53.8397, 0.48 ) }
    dend_62 { pt3dadd( 23.2368, -358.544, -53.9653, 0.84 ) }
    dend_62 { pt3dadd( 21.8809, -361.23, -54.3955, 0.6 ) }
    dend_62 { pt3dadd( 20.8095, -362.942, -54.737, 0.84 ) }
    dend_62 { pt3dadd( 19.4964, -364.738, -55.1749, 0.6 ) }
    dend_62 { pt3dadd( 17.9534, -366.475, -55.7662, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.16922, -39.3402, 9.6871, 0.96 ) }
    dend_58 { pt3dadd( 2.36844, -41.0883, 9.97527, 0.96 ) }
    dend_58 { pt3dadd( 1.7254, -42.9491, 10.1969, 0.96 ) }
    dend_58 { pt3dadd( 1.54504, -43.6622, 10.3626, 0.96 ) }
    dend_58 { pt3dadd( 1.23166, -44.9514, 10.798, 0.96 ) }
    dend_58 { pt3dadd( 0.938186, -46.1192, 11.2842, 0.96 ) }
    dend_58 { pt3dadd( 0.599118, -47.4381, 11.963, 0.96 ) }
    dend_58 { pt3dadd( 0.138566, -49.5047, 13.192, 1.32 ) }
    dend_58 { pt3dadd( -0.437111, -52.0611, 14.8586, 0.84 ) }
    dend_58 { pt3dadd( -0.785931, -53.7459, 16.0194, 0.84 ) }
    dend_58 { pt3dadd( -0.99053, -54.8772, 16.8491, 0.84 ) }
    dend_58 { pt3dadd( -1.42545, -57.2965, 18.773, 1.32 ) }
    dend_58 { pt3dadd( -1.73874, -58.7101, 20.0212, 1.32 ) }
    dend_58 { pt3dadd( -2.09708, -59.9738, 21.2401, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.16922, -39.3402, 9.6871, 1.44 ) }
    dend_43 { pt3dadd( 3.57451, -46.0555, 10.0136, 1.44 ) }
    dend_43 { pt3dadd( 3.84315, -50.8621, 10.2162, 1.44 ) }
    dend_43 { pt3dadd( 4.00603, -53.7387, 10.3178, 1.44 ) }
    dend_43 { pt3dadd( 4.30447, -59.7557, 10.4926, 1.8 ) }
    dend_43 { pt3dadd( 4.42885, -62.2635, 10.5654, 1.8 ) }
    dend_43 { pt3dadd( 4.5516, -64.7383, 10.6373, 1.8 ) }
    dend_43 { pt3dadd( 4.63565, -66.8033, 10.6384, 1.8 ) }
    dend_43 { pt3dadd( 4.7681, -71.0415, 10.6426, 1.56 ) }
    dend_43 { pt3dadd( 4.90115, -75.5593, 10.6509, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 14.4205, -72.1722, 7.02846, 1.56 ) }
    dend_37 { pt3dadd( 16.7395, -74.6526, 7.66179, 1.56 ) }
    dend_37 { pt3dadd( 18.1371, -76.1723, 8.04105, 1.56 ) }
    dend_37 { pt3dadd( 19.8683, -78.0501, 8.51133, 1.2 ) }
    dend_37 { pt3dadd( 20.9118, -79.1789, 8.7951, 1.2 ) }
    dend_37 { pt3dadd( 22.4739, -80.8556, 9.22112, 1.56 ) }
    dend_37 { pt3dadd( 24.7141, -83.3063, 9.82764, 1.2 ) }
    dend_37 { pt3dadd( 25.7299, -84.4581, 10.0987, 1.8 ) }
    dend_37 { pt3dadd( 26.8038, -85.6929, 10.3836, 1.8 ) }
    dend_37 { pt3dadd( 28.8913, -88.1619, 10.9536, 1.08 ) }
    dend_37 { pt3dadd( 30.3599, -89.9431, 11.3641, 1.68 ) }
    dend_37 { pt3dadd( 32.0537, -92.0481, 11.8144, 1.32 ) }
    dend_37 { pt3dadd( 33.1597, -93.4615, 12.0944, 1.32 ) }
    dend_37 { pt3dadd( 33.842, -94.345, 12.2603, 1.32 ) }
    dend_37 { pt3dadd( 35.4503, -96.4981, 12.6306, 1.08 ) }
    dend_37 { pt3dadd( 36.5746, -98.0653, 12.8447, 1.56 ) }
    dend_37 { pt3dadd( 38.2525, -100.556, 13.1521, 1.2 ) }
    dend_37 { pt3dadd( 38.8407, -101.466, 13.258, 1.2 ) }
    dend_37 { pt3dadd( 39.3937, -102.342, 13.372, 1.2 ) }
    dend_37 { pt3dadd( 40.4663, -104.058, 13.6187, 1.68 ) }
    dend_37 { pt3dadd( 41.3413, -105.486, 13.8802, 1.2 ) }
    dend_37 { pt3dadd( 42.4273, -107.273, 14.2887, 0.96 ) }
    dend_37 { pt3dadd( 43.1261, -108.359, 14.5994, 0.96 ) }
    dend_37 { pt3dadd( 44.9675, -111.007, 15.4485, 0.84 ) }
    dend_37 { pt3dadd( 45.8973, -112.282, 15.8969, 0.84 ) }
    dend_37 { pt3dadd( 47.3397, -114.162, 16.624, 1.44 ) }
    dend_37 { pt3dadd( 48.1001, -115.117, 17.0194, 1.44 ) }
    dend_37 { pt3dadd( 49.4911, -116.822, 17.6964, 1.44 ) }
    dend_37 { pt3dadd( 50.2988, -117.866, 18.0838, 0.96 ) }
    dend_37 { pt3dadd( 51.1872, -119.088, 18.4822, 1.44 ) }
    dend_37 { pt3dadd( 51.5052, -119.531, 18.6143, 1.44 ) }
    dend_37 { pt3dadd( 52.3272, -120.685, 18.9084, 1.44 ) }
    dend_37 { pt3dadd( 52.9632, -121.616, 19.1282, 1.44 ) }
    dend_37 { pt3dadd( 54.1358, -123.363, 19.5084, 1.08 ) }
    dend_37 { pt3dadd( 55.2179, -124.913, 19.8353, 1.08 ) }
    dend_37 { pt3dadd( 55.8717, -125.767, 20.0203, 1.08 ) }
    dend_37 { pt3dadd( 57.1782, -127.332, 20.3843, 1.44 ) }
    dend_37 { pt3dadd( 57.8221, -128.053, 20.5697, 1.44 ) }
    dend_37 { pt3dadd( 59.4716, -129.901, 21.0671, 0.84 ) }
    dend_37 { pt3dadd( 60.5348, -131.12, 21.3946, 1.56 ) }
    dend_37 { pt3dadd( 62.324, -133.259, 21.9526, 1.08 ) }
    dend_37 { pt3dadd( 63.1896, -134.318, 22.2246, 1.32 ) }
    dend_37 { pt3dadd( 65.7714, -137.225, 23.0536, 1.08 ) }
    dend_37 { pt3dadd( 67.0693, -138.59, 23.4917, 1.08 ) }
    dend_37 { pt3dadd( 68.1884, -139.697, 23.8814, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 69.8347, -141.211, 24.4628, 1.08 ) }
    dend_37 { pt3dadd( 70.9752, -142.201, 24.8238, 1.08 ) }
    dend_37 { pt3dadd( 74.4603, -145.077, 25.7947, 1.44 ) }
    dend_37 { pt3dadd( 76.8758, -146.992, 26.3732, 1.08 ) }
    dend_37 { pt3dadd( 78.3837, -148.188, 26.6943, 1.08 ) }
    dend_37 { pt3dadd( 80.8088, -150.204, 27.1781, 1.08 ) }
    dend_37 { pt3dadd( 83.5814, -152.545, 27.6832, 0.72 ) }
    dend_37 { pt3dadd( 85.7022, -154.431, 28.0096, 1.32 ) }
    dend_37 { pt3dadd( 87.225, -155.953, 28.1543, 0.84 ) }
    dend_37 { pt3dadd( 88.1811, -156.956, 28.1912, 0.84 ) }
    dend_37 { pt3dadd( 89.8115, -158.855, 28.1927, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 14.4205, -72.1722, 7.02846, 1.68 ) }
    dend_20 { pt3dadd( 14.7057, -74.531, 6.91524, 1.68 ) }
    dend_20 { pt3dadd( 15.0043, -76.6119, 6.84169, 1.68 ) }
    dend_20 { pt3dadd( 15.2043, -77.8041, 6.8141, 1.68 ) }
    dend_20 { pt3dadd( 15.8665, -81.2402, 6.7752, 1.32 ) }
    dend_20 { pt3dadd( 16.3445, -83.522, 6.76417, 1.56 ) }
    dend_20 { pt3dadd( 16.918, -86.4695, 6.71581, 1.56 ) }
    dend_20 { pt3dadd( 17.1365, -87.5792, 6.69035, 1.56 ) }
    dend_20 { pt3dadd( 17.4223, -89.2833, 6.62087, 1.56 ) }
    dend_20 { pt3dadd( 17.7035, -91.3369, 6.49836, 1.56 ) }
    dend_20 { pt3dadd( 18.0414, -94.2521, 6.28421, 1.2 ) }
    dend_20 { pt3dadd( 18.4698, -98.353, 5.94634, 1.56 ) }
    dend_20 { pt3dadd( 18.741, -101.212, 5.71785, 1.2 ) }
    dend_20 { pt3dadd( 19.0798, -104.806, 5.45845, 1.2 ) }
    dend_20 { pt3dadd( 19.2863, -106.888, 5.30404, 1.56 ) }
    dend_20 { pt3dadd( 19.5444, -109.284, 5.10702, 1.56 ) }
    dend_20 { pt3dadd( 19.7935, -111.213, 4.9365, 1.56 ) }
    dend_20 { pt3dadd( 20.2418, -114.186, 4.7344, 1.2 ) }
    dend_20 { pt3dadd( 20.6119, -116.773, 4.56715, 1.56 ) }
    dend_20 { pt3dadd( 20.9987, -119.713, 4.37541, 1.44 ) }
    dend_20 { pt3dadd( 21.2296, -121.776, 4.22696, 1.44 ) }
    dend_20 { pt3dadd( 21.3605, -123.26, 4.1051, 1.44 ) }
    dend_20 { pt3dadd( 21.7629, -128.258, 3.6829, 1.08 ) }
    dend_20 { pt3dadd( 22.0104, -130.94, 3.403, 1.08 ) }
    dend_20 { pt3dadd( 22.2817, -133.34, 3.1226, 1.44 ) }
    dend_20 { pt3dadd( 22.4283, -134.409, 2.99489, 1.44 ) }
    dend_20 { pt3dadd( 22.6866, -135.96, 2.79405, 1.44 ) }
    dend_20 { pt3dadd( 23.1369, -138.159, 2.44946, 1.44 ) }
    dend_20 { pt3dadd( 23.9681, -141.224, 1.81185, 1.32 ) }
    dend_20 { pt3dadd( 24.651, -143.34, 1.37055, 1.32 ) }
    dend_20 { pt3dadd( 25.042, -144.46, 1.13396, 1.32 ) }
    dend_20 { pt3dadd( 25.3491, -145.388, 0.938623, 1.32 ) }
    dend_20 { pt3dadd( 25.8338, -147.029, 0.60551, 1.32 ) }
    dend_20 { pt3dadd( 26.0705, -148.015, 0.421992, 1.32 ) }
    dend_20 { pt3dadd( 26.3193, -149.177, 0.243674, 1.32 ) }
    dend_20 { pt3dadd( 26.84, -151.618, -0.143346, 1.8 ) }
    dend_20 { pt3dadd( 27.3286, -153.965, -0.53909, 1.8 ) }
    dend_20 { pt3dadd( 27.7193, -156.012, -0.836984, 1.8 ) }
    dend_20 { pt3dadd( 28.0693, -158.063, -1.10207, 1.8 ) }
    dend_20 { pt3dadd( 28.5643, -161.409, -1.49814, 1.56 ) }
    dend_20 { pt3dadd( 28.9914, -164.816, -1.87831, 1.56 ) }
    dend_20 { pt3dadd( 29.1589, -166.454, -2.04993, 1.56 ) }
    dend_20 { pt3dadd( 29.4567, -169.955, -2.3694, 1.32 ) }
    dend_20 { pt3dadd( 29.5699, -171.602, -2.49877, 1.32 ) }
    dend_20 { pt3dadd( 29.7113, -174.563, -2.69752, 1.8 ) }
    dend_20 { pt3dadd( 29.7619, -177.167, -2.84065, 1.8 ) }
    dend_20 { pt3dadd( 29.8273, -179.838, -2.94844, 1.56 ) }
    dend_20 { pt3dadd( 29.9797, -182.349, -3.03851, 1.56 ) }
    dend_20 { pt3dadd( 30.1575, -184.031, -3.10223, 1.56 ) }
    dend_20 { pt3dadd( 30.3243, -185.247, -3.12926, 1.56 ) }
    dend_20 { pt3dadd( 30.516, -186.49, -3.16463, 1.56 ) }
    dend_20 { pt3dadd( 30.8036, -188.284, -3.24635, 1.56 ) }
    dend_20 { pt3dadd( 31.1475, -190.488, -3.39641, 1.2 ) }
    dend_20 { pt3dadd( 31.4522, -192.598, -3.61572, 1.2 ) }
    dend_20 { pt3dadd( 31.6453, -194.05, -3.80288, 1.2 ) }
    dend_20 { pt3dadd( 31.9645, -196.756, -4.22892, 1.56 ) }
    dend_20 { pt3dadd( 32.2606, -199.354, -4.69893, 1.56 ) }
    dend_20 { pt3dadd( 32.4497, -200.97, -5.01357, 1.56 ) }
    dend_20 { pt3dadd( 32.7372, -203.095, -5.4162, 1.56 ) }
    dend_20 { pt3dadd( 33.0401, -205.113, -5.80157, 1.56 ) }
    dend_20 { pt3dadd( 33.7104, -209.086, -6.55201, 1.56 ) }
    dend_20 { pt3dadd( 34.5881, -213.645, -7.39866, 1.32 ) }
    dend_20 { pt3dadd( 35.3645, -217.437, -8.12457, 1.32 ) }
    dend_20 { pt3dadd( 35.7866, -219.478, -8.51887, 0.84 ) }
    dend_20 { pt3dadd( 36.2177, -221.574, -8.92286, 1.32 ) }
    dend_20 { pt3dadd( 36.738, -224.063, -9.40133, 1.08 ) }
    dend_20 { pt3dadd( 37.271, -226.393, -9.85112, 1.44 ) }
    dend_20 { pt3dadd( 37.8533, -228.845, -10.3608, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.12317, 41.2651, 16.1473, 1.2 ) }
    dend_11 { pt3dadd( 5.25346, 44.584, 16.9883, 1.2 ) }
    dend_11 { pt3dadd( 4.54854, 46.0989, 17.4558, 1.2 ) }
    dend_11 { pt3dadd( 4.02942, 47.4195, 17.9063, 1.2 ) }
    dend_11 { pt3dadd( 3.22131, 50.1268, 19.0085, 1.2 ) }
    dend_11 { pt3dadd( 2.90643, 51.5849, 19.641, 1.2 ) }
    dend_11 { pt3dadd( 2.70349, 52.9863, 20.2617, 1.08 ) }
    dend_11 { pt3dadd( 2.64475, 55.2189, 21.337, 1.56 ) }
    dend_11 { pt3dadd( 2.69458, 56.7203, 22.0665, 1.56 ) }
    dend_11 { pt3dadd( 2.98534, 60.0306, 23.6061, 1.2 ) }
    dend_11 { pt3dadd( 3.26987, 62.1618, 24.5115, 0.96 ) }
    dend_11 { pt3dadd( 3.56666, 64.4957, 25.3786, 1.32 ) }
    dend_11 { pt3dadd( 3.65752, 65.5604, 25.7426, 1.32 ) }
    dend_11 { pt3dadd( 3.70398, 66.7467, 26.0991, 1.32 ) }
    dend_11 { pt3dadd( 3.72633, 68.5152, 26.5372, 1.32 ) }
    dend_11 { pt3dadd( 3.71684, 69.5071, 26.7426, 1.32 ) }
    dend_11 { pt3dadd( 3.72145, 71.4425, 27.1506, 1.2 ) }
    dend_11 { pt3dadd( 3.78693, 73.455, 27.6317, 1.56 ) }
    dend_11 { pt3dadd( 3.85039, 74.7991, 27.9732, 1.2 ) }
    dend_11 { pt3dadd( 3.99604, 76.8692, 28.5434, 1.68 ) }
    dend_11 { pt3dadd( 4.3214, 79.6785, 29.379, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 4.52387, 80.8025, 29.7333, 1.44 ) }
    dend_11 { pt3dadd( 5.06367, 82.6662, 30.3346, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.12317, 41.2651, 16.1473, 1.44 ) }
    dend_2 { pt3dadd( 7.07251, 46.029, 15.6846, 1.44 ) }
    dend_2 { pt3dadd( 7.04927, 48.2133, 15.4725, 1.44 ) }
    dend_2 { pt3dadd( 7.02242, 50.7385, 15.2272, 1.44 ) }
    dend_2 { pt3dadd( 6.99151, 53.6446, 14.945, 1.44 ) }
    dend_2 { pt3dadd( 6.95409, 57.163, 14.6033, 1.8 ) }
    dend_2 { pt3dadd( 6.92243, 60.1394, 14.3142, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -2.09708, -59.9738, 21.2401, 0.96 ) }
    dend_60 { pt3dadd( -3.02841, -64.5966, 21.9717, 0.96 ) }
    dend_60 { pt3dadd( -3.66017, -67.4462, 22.3093, 0.96 ) }
    dend_60 { pt3dadd( -4.03728, -69.289, 22.4865, 0.96 ) }
    dend_60 { pt3dadd( -4.32541, -70.6874, 22.6107, 0.96 ) }
    dend_60 { pt3dadd( -4.64488, -72.2766, 22.7344, 0.96 ) }
    dend_60 { pt3dadd( -5.13984, -75.1448, 22.9572, 0.6 ) }
    dend_60 { pt3dadd( -5.32439, -76.0296, 22.9866, 0.6 ) }
    dend_60 { pt3dadd( -5.68113, -77.6071, 23.0649, 1.08 ) }
    dend_60 { pt3dadd( -6.49892, -80.9018, 23.3197, 0.72 ) }
    dend_60 { pt3dadd( -7.15075, -83.3758, 23.5479, 0.72 ) }
    dend_60 { pt3dadd( -8.21068, -87.1959, 23.9072, 0.72 ) }
    dend_60 { pt3dadd( -9.32482, -90.8526, 24.2195, 1.2 ) }
    dend_60 { pt3dadd( -10.0097, -92.8428, 24.3562, 1.08 ) }
    dend_60 { pt3dadd( -10.9608, -95.2189, 24.4602, 0.48 ) }
    dend_60 { pt3dadd( -12.1778, -97.9895, 24.493, 0.48 ) }
    dend_60 { pt3dadd( -13.6094, -101.049, 24.4441, 1.44 ) }
    dend_60 { pt3dadd( -14.7128, -103.363, 24.3298, 0.84 ) }
    dend_60 { pt3dadd( -15.2616, -104.672, 24.2473, 1.08 ) }
    dend_60 { pt3dadd( -16.0572, -106.784, 24.0888, 1.08 ) }
    dend_60 { pt3dadd( -17.0174, -109.719, 23.8744, 1.44 ) }
    dend_60 { pt3dadd( -17.6534, -111.901, 23.757, 0.84 ) }
    dend_60 { pt3dadd( -18.0618, -113.504, 23.7474, 1.32 ) }
    dend_60 { pt3dadd( -18.6197, -116.191, 23.8445, 0.72 ) }
    dend_60 { pt3dadd( -18.8879, -117.525, 23.9219, 0.72 ) }
    dend_60 { pt3dadd( -19.166, -118.718, 24.0205, 0.72 ) }
    dend_60 { pt3dadd( -19.8093, -120.463, 24.1656, 0.72 ) }
    dend_60 { pt3dadd( -20.9933, -122.367, 24.2578, 1.08 ) }
    dend_60 { pt3dadd( -22.1993, -123.931, 24.3078, 0.6 ) }
    dend_60 { pt3dadd( -23.8229, -125.563, 24.3009, 1.08 ) }
    dend_60 { pt3dadd( -25.103, -126.618, 24.2599, 0.96 ) }
    dend_60 { pt3dadd( -27.3294, -128.077, 24.1036, 0.84 ) }
    dend_60 { pt3dadd( -29.6943, -129.192, 23.805, 0.84 ) }
    dend_60 { pt3dadd( -32.9036, -141.413, 23.5982, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -2.09708, -59.9738, 21.2401, 0.84 ) }
    dend_59 { pt3dadd( -2.47311, -60.8184, 21.7826, 0.84 ) }
    dend_59 { pt3dadd( -2.74358, -61.4224, 22.1568, 0.84 ) }
    dend_59 { pt3dadd( -2.86513, -61.7112, 22.3211, 0.84 ) }
    dend_59 { pt3dadd( -3.27913, -62.8105, 22.904, 0.48 ) }
    dend_59 { pt3dadd( -3.49161, -63.4209, 23.2063, 0.48 ) }
    dend_59 { pt3dadd( -3.8383, -64.4808, 23.6851, 0.84 ) }
    dend_59 { pt3dadd( -4.03932, -65.1538, 23.9412, 0.84 ) }
    dend_59 { pt3dadd( -4.23025, -65.7958, 24.1486, 0.84 ) }
    dend_59 { pt3dadd( -4.63536, -67.2362, 24.5444, 0.84 ) }
    dend_59 { pt3dadd( -4.7756, -67.7834, 24.666, 0.84 ) }
    dend_59 { pt3dadd( -4.99621, -68.7696, 24.855, 0.6 ) }
    dend_59 { pt3dadd( -5.13912, -69.3995, 24.9601, 1.08 ) }
    dend_59 { pt3dadd( -5.3635, -70.2305, 25.0957, 1.08 ) }
    dend_59 { pt3dadd( -5.55296, -70.8313, 25.1985, 1.56 ) }
    dend_59 { pt3dadd( -5.81732, -71.5448, 25.3169, 1.56 ) }
    dend_59 { pt3dadd( -6.03716, -72.1043, 25.4177, 1.08 ) }
    dend_59 { pt3dadd( -6.45007, -73.1021, 25.6165, 0.72 ) }
    dend_59 { pt3dadd( -6.72503, -73.7377, 25.7535, 1.32 ) }
    dend_59 { pt3dadd( -6.97133, -74.2734, 25.8782, 1.32 ) }
    dend_59 { pt3dadd( -7.34683, -75.0154, 26.0622, 0.72 ) }
    dend_59 { pt3dadd( -7.7606, -75.7801, 26.2523, 0.72 ) }
    dend_59 { pt3dadd( -10.0804, -80.2999, 27.8354, 0.72 ) }
    dend_59 { pt3dadd( -11.803, -85.0723, 29.5046, 0.72 ) }
    dend_59 { pt3dadd( -13.7257, -89.5697, 31.5959, 0.72 ) }
    dend_59 { pt3dadd( -15.6556, -94.0729, 33.6693, 0.72 ) }
    dend_59 { pt3dadd( -16.9837, -98.6471, 36.0503, 0.72 ) }
    dend_59 { pt3dadd( -17.4474, -103.171, 38.8113, 0.72 ) }
    dend_59 { pt3dadd( -17.8801, -108.113, 40.8252, 0.72 ) }
    dend_59 { pt3dadd( -18.0316, -113.405, 41.8013, 0.72 ) }
    dend_59 { pt3dadd( -17.9866, -118.617, 43.1164, 0.72 ) }
    dend_59 { pt3dadd( -18.4591, -123.863, 44.2136, 0.72 ) }
    dend_59 { pt3dadd( -19.9091, -129.022, 44.5917, 0.72 ) }
    dend_59 { pt3dadd( -21.5079, -134.142, 44.8341, 0.72 ) }
    dend_59 { pt3dadd( -22.3107, -139.435, 45.4053, 0.72 ) }
    dend_59 { pt3dadd( -22.6589, -144.7, 46.4652, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.90115, -75.5593, 10.6509, 1.08 ) }
    dend_57 { pt3dadd( 8.34735, -76.2551, 7.17575, 1.08 ) }
    dend_57 { pt3dadd( 10.7961, -76.9821, 4.88897, 1.08 ) }
    dend_57 { pt3dadd( 11.4913, -77.2733, 4.25262, 1.08 ) }
    dend_57 { pt3dadd( 12.081, -77.6092, 3.65307, 1.08 ) }
    dend_57 { pt3dadd( 12.4224, -77.8425, 3.29664, 1.08 ) }
    dend_57 { pt3dadd( 13.7685, -78.9069, 1.82786, 1.44 ) }
    dend_57 { pt3dadd( 14.6227, -79.8271, 0.784164, 1.44 ) }
    dend_57 { pt3dadd( 15.4097, -80.9231, -0.352657, 1.44 ) }
    dend_57 { pt3dadd( 16.5104, -82.7049, -2.12287, 1.44 ) }
    dend_57 { pt3dadd( 16.8733, -83.4037, -2.76559, 1.44 ) }
    dend_57 { pt3dadd( 17.6764, -85.279, -4.30609, 1.2 ) }
    dend_57 { pt3dadd( 18.7028, -88.3285, -6.54078, 1.2 ) }
    dend_57 { pt3dadd( 19.3462, -90.4167, -7.99084, 1.68 ) }
    dend_57 { pt3dadd( 20.0158, -92.674, -9.57032, 0.72 ) }
    dend_57 { pt3dadd( 20.4718, -94.3767, -10.7364, 0.72 ) }
    dend_57 { pt3dadd( 20.938, -96.2471, -12.1599, 1.44 ) }
    dend_57 { pt3dadd( 21.2355, -97.58, -13.2952, 1.44 ) }
    dend_57 { pt3dadd( 21.8373, -99.9875, -15.9184, 0.96 ) }
    dend_57 { pt3dadd( 22.5985, -102.074, -19.139, 1.68 ) }
    dend_57 { pt3dadd( 22.9084, -102.718, -20.4396, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( 23.7258, -104.002, -23.6425, 1.68 ) }
    dend_57 { pt3dadd( 24.4142, -104.908, -26.2188, 1.68 ) }
    dend_57 { pt3dadd( 25.5389, -106.303, -30.3149, 1.68 ) }
    dend_57 { pt3dadd( 26.7402, -107.87, -34.7393, 1.68 ) }
    dend_57 { pt3dadd( 27.604, -109.075, -37.9711, 1.2 ) }
    dend_57 { pt3dadd( 28.47, -110.412, -41.2083, 0.84 ) }
    dend_57 { pt3dadd( 28.829, -111.075, -42.5349, 1.44 ) }
    dend_57 { pt3dadd( 29.1421, -111.781, -43.6941, 0.72 ) }
    dend_57 { pt3dadd( 29.7667, -113.569, -46.1547, 1.32 ) }
    dend_57 { pt3dadd( 30.6502, -116.59, -49.7511, 0.6 ) }
    dend_57 { pt3dadd( 30.8635, -117.348, -50.5904, 0.6 ) }
    dend_57 { pt3dadd( 31.1226, -118.387, -51.6922, 0.96 ) }
    dend_57 { pt3dadd( 31.3504, -119.257, -52.6546, 0.96 ) }
    dend_57 { pt3dadd( 32.3854, -122.662, -56.6627, 0.6 ) }
    dend_57 { pt3dadd( 32.8394, -123.905, -58.0782, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.90115, -75.5593, 10.6509, 1.32 ) }
    dend_44 { pt3dadd( 4.94473, -75.722, 10.6382, 1.32 ) }
    dend_44 { pt3dadd( 6.15671, -79.9851, 10.395, 1.32 ) }
    dend_44 { pt3dadd( 7.60885, -84.9374, 10.2058, 1.68 ) }
    dend_44 { pt3dadd( 8.52118, -88.0925, 10.1276, 2.04 ) }
    dend_44 { pt3dadd( 9.30584, -90.8919, 10.077, 1.68 ) }
    dend_44 { pt3dadd( 9.93451, -93.2055, 10.0501, 1.68 ) }
    dend_44 { pt3dadd( 10.3013, -94.6064, 10.0581, 1.68 ) }
    dend_44 { pt3dadd( 10.769, -96.4815, 10.108, 1.68 ) }
    dend_44 { pt3dadd( 11.4103, -99.3397, 10.2027, 2.04 ) }
    dend_44 { pt3dadd( 11.714, -100.992, 10.2754, 1.68 ) }
    dend_44 { pt3dadd( 12.034, -103.151, 10.3658, 1.68 ) }
    dend_44 { pt3dadd( 12.3265, -105.48, 10.4913, 1.68 ) }
    dend_44 { pt3dadd( 12.6499, -108.123, 10.6741, 1.56 ) }
    dend_44 { pt3dadd( 12.9622, -110.568, 10.8765, 1.56 ) }
    dend_44 { pt3dadd( 13.6341, -115.473, 11.3418, 1.56 ) }
    dend_44 { pt3dadd( 14.214, -119.462, 11.7567, 1.8 ) }
    dend_44 { pt3dadd( 15.1911, -125.833, 12.4632, 1.56 ) }
    dend_44 { pt3dadd( 16.2049, -132.205, 13.1693, 1.44 ) }
    dend_44 { pt3dadd( 16.6423, -134.914, 13.4583, 1.92 ) }
    dend_44 { pt3dadd( 17.1764, -138.197, 13.7773, 1.8 ) }
    dend_44 { pt3dadd( 17.5743, -140.729, 13.9767, 1.68 ) }
    dend_44 { pt3dadd( 18.0187, -143.896, 14.157, 2.04 ) }
    dend_44 { pt3dadd( 19.7133, -156.869, 14.3888, 1.8 ) }
    dend_44 { pt3dadd( 20.186, -160.83, 14.3253, 1.8 ) }
    dend_44 { pt3dadd( 20.4305, -162.98, 14.2448, 1.68 ) }
    dend_44 { pt3dadd( 20.6495, -165.011, 14.1265, 1.68 ) }
    dend_44 { pt3dadd( 21.2316, -170.634, 13.6892, 1.68 ) }
    dend_44 { pt3dadd( 21.5811, -173.692, 13.3248, 1.68 ) }
    dend_44 { pt3dadd( 21.9202, -176.25, 12.9195, 1.68 ) }
    dend_44 { pt3dadd( 22.4006, -179.614, 12.3809, 1.32 ) }
    dend_44 { pt3dadd( 23.0084, -183.644, 11.7657, 1.32 ) }
    dend_44 { pt3dadd( 23.6666, -187.846, 11.1639, 1.32 ) }
    dend_44 { pt3dadd( 24.7663, -194.541, 10.2971, 1.32 ) }
    dend_44 { pt3dadd( 25.508, -199.073, 9.78954, 1.8 ) }
    dend_44 { pt3dadd( 25.9786, -202.099, 9.48568, 1.8 ) }
    dend_44 { pt3dadd( 26.3333, -204.533, 9.27693, 1.8 ) }
    dend_44 { pt3dadd( 26.6198, -206.677, 9.14361, 1.8 ) }
    dend_44 { pt3dadd( 27.0641, -210.671, 9.02326, 1.68 ) }
    dend_44 { pt3dadd( 27.6609, -216.412, 8.95371, 2.04 ) }
    dend_44 { pt3dadd( 28.2189, -220.929, 8.87704, 2.04 ) }
    dend_44 { pt3dadd( 28.71, -224.632, 8.8092, 1.8 ) }
    dend_44 { pt3dadd( 29.3783, -229.332, 8.73365, 1.56 ) }
    dend_44 { pt3dadd( 30.0963, -234.097, 8.67356, 1.92 ) }
    dend_44 { pt3dadd( 30.9896, -240.148, 8.56213, 1.56 ) }
    dend_44 { pt3dadd( 31.6771, -244.857, 8.42809, 1.32 ) }
    dend_44 { pt3dadd( 32.4692, -250.171, 8.20051, 1.32 ) }
    dend_44 { pt3dadd( 32.8251, -252.697, 8.083, 1.32 ) }
    dend_44 { pt3dadd( 33.1269, -254.905, 7.98891, 1.2 ) }
    dend_44 { pt3dadd( 33.7481, -260.026, 7.78809, 1.68 ) }
    dend_44 { pt3dadd( 34.16, -264.775, 7.7495, 1.68 ) }
    dend_44 { pt3dadd( 34.3584, -267.834, 7.71701, 1.68 ) }
    dend_44 { pt3dadd( 34.522, -270.44, 7.67313, 1.68 ) }
    dend_44 { pt3dadd( 34.6735, -273.344, 7.61367, 1.68 ) }
    dend_44 { pt3dadd( 34.7477, -274.577, 7.60726, 1.68 ) }
    dend_44 { pt3dadd( 35.5297, -282.442, 7.96773, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 89.8115, -158.855, 28.1927, 0.84 ) }
    dend_39 { pt3dadd( 91.4451, -158.535, 30.0864, 0.84 ) }
    dend_39 { pt3dadd( 92.692, -158.262, 31.6351, 0.84 ) }
    dend_39 { pt3dadd( 93.6412, -158.057, 32.8839, 1.32 ) }
    dend_39 { pt3dadd( 95.1536, -157.755, 35.0151, 1.32 ) }
    dend_39 { pt3dadd( 96.3096, -157.541, 36.7509, 1.68 ) }
    dend_39 { pt3dadd( 97.7158, -157.229, 38.97, 1.2 ) }
    dend_39 { pt3dadd( 98.406, -157.079, 40.208, 0.96 ) }
    dend_39 { pt3dadd( 99.2298, -156.825, 41.9226, 1.44 ) }
    dend_39 { pt3dadd( 100.136, -156.4, 44.0873, 0.84 ) }
    dend_39 { pt3dadd( 100.502, -156.114, 45.1925, 0.84 ) }
    dend_39 { pt3dadd( 100.77, -155.736, 46.4, 0.84 ) }
    dend_39 { pt3dadd( 100.832, -155.373, 47.3533, 0.84 ) }
    dend_39 { pt3dadd( 100.816, -154.839, 48.5344, 0.84 ) }
    dend_39 { pt3dadd( 100.677, -154.213, 49.6799, 0.84 ) }
    dend_39 { pt3dadd( 100.364, -153.326, 51.0517, 1.08 ) }
    dend_39 { pt3dadd( 99.933, -152.271, 52.6389, 0.72 ) }
    dend_39 { pt3dadd( 99.3141, -151.002, 54.7468, 1.2 ) }
    dend_39 { pt3dadd( 104.454, -148.12, 62.2708, 1.2 ) }
    dend_39 { pt3dadd( 109.741, -143.897, 69.0841, 1.2 ) }
    dend_39 { pt3dadd( 115.197, -138.571, 74.9947, 1.2 ) }
    dend_39 { pt3dadd( 118.621, -132.278, 81.5652, 1.2 ) }
    dend_39 { pt3dadd( 123.054, -127.2, 88.4675, 1.2 ) }
    dend_39 { pt3dadd( 126.849, -121.3, 95.1593, 1.2 ) }
    dend_39 { pt3dadd( 131.979, -115.029, 100.489, 1.2 ) }
    dend_39 { pt3dadd( 136.58, -108.678, 106.214, 1.2 ) }
    dend_39 { pt3dadd( 140.064, -101.665, 112.041, 1.2 ) }
    dend_39 { pt3dadd( 143.598, -93.7161, 116.588, 1.2 ) }
    dend_39 { pt3dadd( 145.816, -85.6224, 121.735, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 147.153, -76.6578, 125.746, 1.2 ) }
    dend_39 { pt3dadd( 148.446, -67.7286, 129.844, 1.2 ) }
    dend_39 { pt3dadd( 149.985, -58.6871, 133.606, 1.2 ) }
    dend_39 { pt3dadd( 152.273, -50.6883, 138.856, 1.2 ) }
    dend_39 { pt3dadd( 154.604, -42.4454, 143.723, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 89.8115, -158.855, 28.1927, 0.84 ) }
    dend_38 { pt3dadd( 90.6271, -160.698, 28.5813, 0.84 ) }
    dend_38 { pt3dadd( 91.5149, -162.615, 29.0024, 0.6 ) }
    dend_38 { pt3dadd( 92.1038, -163.87, 29.2617, 1.32 ) }
    dend_38 { pt3dadd( 93.03, -165.844, 29.6694, 0.84 ) }
    dend_38 { pt3dadd( 93.6289, -167.12, 29.9331, 0.72 ) }
    dend_38 { pt3dadd( 94.1059, -168.137, 30.1431, 1.08 ) }
    dend_38 { pt3dadd( 94.7194, -169.461, 30.3848, 0.72 ) }
    dend_38 { pt3dadd( 95.2596, -170.739, 30.6443, 1.2 ) }
    dend_38 { pt3dadd( 99.2298, -177.373, 32.3459, 1.2 ) }
    dend_38 { pt3dadd( 102.627, -183.924, 35.1191, 1.2 ) }
    dend_38 { pt3dadd( 104.972, -190.393, 38.8924, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 37.8533, -228.845, -10.3608, 0.96 ) }
    dend_36 { pt3dadd( 39.0833, -231.298, -8.35582, 0.96 ) }
    dend_36 { pt3dadd( 39.7414, -232.923, -7.11884, 0.96 ) }
    dend_36 { pt3dadd( 40.8797, -236.066, -4.78154, 1.44 ) }
    dend_36 { pt3dadd( 41.6932, -238.347, -2.99252, 0.96 ) }
    dend_36 { pt3dadd( 42.3257, -240.142, -1.58701, 0.96 ) }
    dend_36 { pt3dadd( 42.8434, -241.653, -0.437029, 0.96 ) }
    dend_36 { pt3dadd( 43.2764, -243.035, 0.566695, 0.96 ) }
    dend_36 { pt3dadd( 43.7279, -244.804, 1.83759, 1.08 ) }
    dend_36 { pt3dadd( 44.2518, -247.237, 3.45716, 1.08 ) }
    dend_36 { pt3dadd( 44.5197, -248.453, 4.23589, 1.08 ) }
    dend_36 { pt3dadd( 44.7995, -249.494, 4.89687, 1.08 ) }
    dend_36 { pt3dadd( 45.4143, -252.031, 6.55876, 1.08 ) }
    dend_36 { pt3dadd( 45.8622, -254.581, 8.16428, 0.84 ) }
    dend_36 { pt3dadd( 45.9995, -256.712, 9.36434, 1.2 ) }
    dend_36 { pt3dadd( 45.9214, -258.401, 10.1643, 1.2 ) }
    dend_36 { pt3dadd( 45.7712, -259.799, 10.7833, 1.2 ) }
    dend_36 { pt3dadd( 45.2674, -263.227, 12.2691, 0.96 ) }
    dend_36 { pt3dadd( 44.9424, -265.032, 13.0165, 0.96 ) }
    dend_36 { pt3dadd( 44.7028, -266.7, 13.7262, 0.96 ) }
    dend_36 { pt3dadd( 44.4516, -268.827, 14.6083, 0.72 ) }
    dend_36 { pt3dadd( 44.3045, -270.153, 15.1074, 0.72 ) }
    dend_36 { pt3dadd( 44.1873, -272.056, 15.8244, 0.72 ) }
    dend_36 { pt3dadd( 44.3602, -274.426, 16.7352, 1.2 ) }
    dend_36 { pt3dadd( 44.865, -277.92, 18.3505, 0.84 ) }
    dend_36 { pt3dadd( 45.1552, -279.372, 19.1192, 0.84 ) }
    dend_36 { pt3dadd( 45.4572, -280.907, 20.0031, 0.84 ) }
    dend_36 { pt3dadd( 46.8089, -289.888, 25.3587, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 37.8533, -228.845, -10.3608, 1.32 ) }
    dend_21 { pt3dadd( 38.7882, -233.641, -10.2154, 1.32 ) }
    dend_21 { pt3dadd( 39.3334, -236.609, -10.2073, 1.32 ) }
    dend_21 { pt3dadd( 39.8263, -239.497, -10.2599, 1.32 ) }
    dend_21 { pt3dadd( 40.1517, -241.649, -10.3494, 1.32 ) }
    dend_21 { pt3dadd( 40.8685, -246.227, -10.5431, 1.68 ) }
    dend_21 { pt3dadd( 41.5241, -250.046, -10.6695, 1.68 ) }
    dend_21 { pt3dadd( 42.0864, -252.826, -10.8374, 1.68 ) }
    dend_21 { pt3dadd( 42.6467, -255.442, -11.0076, 1.68 ) }
    dend_21 { pt3dadd( 43.6176, -259.842, -11.3174, 1.2 ) }
    dend_21 { pt3dadd( 44.2776, -262.734, -11.5356, 1.2 ) }
    dend_21 { pt3dadd( 45.3439, -267.096, -11.8454, 1.2 ) }
    dend_21 { pt3dadd( 46.6828, -272.043, -12.1936, 1.56 ) }
    dend_21 { pt3dadd( 47.4021, -274.524, -12.3632, 1.56 ) }
    dend_21 { pt3dadd( 48.0468, -276.661, -12.5074, 1.56 ) }
    dend_21 { pt3dadd( 48.7571, -278.907, -12.6456, 1.56 ) }
    dend_21 { pt3dadd( 49.8363, -282.83, -12.7932, 1.44 ) }
    dend_21 { pt3dadd( 50.8838, -286.813, -12.9134, 1.44 ) }
    dend_21 { pt3dadd( 51.3475, -288.627, -12.9052, 1.44 ) }
    dend_21 { pt3dadd( 51.9126, -290.833, -12.8687, 1.44 ) }
    dend_21 { pt3dadd( 52.5616, -293.372, -12.7692, 1.44 ) }
    dend_21 { pt3dadd( 53.6012, -297.507, -12.4317, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.06367, 82.6662, 30.3346, 1.44 ) }
    dend_17 { pt3dadd( 3.28727, 80.4384, 30.4833, 1.44 ) }
    dend_17 { pt3dadd( 2.58989, 79.6744, 30.5812, 1.2 ) }
    dend_17 { pt3dadd( 1.08814, 78.3363, 30.7911, 0.96 ) }
    dend_17 { pt3dadd( -0.263196, 77.1323, 30.98, 0.96 ) }
    dend_17 { pt3dadd( -1.19438, 76.3027, 31.1102, 0.96 ) }
    dend_17 { pt3dadd( -2.18543, 75.4197, 31.2488, 0.96 ) }
    dend_17 { pt3dadd( -3.18332, 74.428, 31.2662, 0.96 ) }
    dend_17 { pt3dadd( -5.07907, 72.7356, 31.3652, 1.2 ) }
    dend_17 { pt3dadd( -14.8939, 63.4402, 30.3369, 1.2 ) }
    dend_17 { pt3dadd( -23.7181, 53.0516, 30.4098, 1.2 ) }
    dend_17 { pt3dadd( -32.5569, 42.7739, 29.0587, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.06367, 82.6662, 30.3346, 0.96 ) }
    dend_12 { pt3dadd( 5.9993, 81.0262, 30.5973, 0.96 ) }
    dend_12 { pt3dadd( 7.07582, 79.1392, 30.8996, 0.96 ) }
    dend_12 { pt3dadd( 7.8765, 77.7358, 31.1244, 1.2 ) }
    dend_12 { pt3dadd( 8.31979, 76.9588, 31.2489, 1.2 ) }
    dend_12 { pt3dadd( 9.78279, 74.3944, 31.6597, 0.84 ) }
    dend_12 { pt3dadd( 10.4386, 73.2448, 31.8438, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.92243, 60.1394, 14.3142, 1.44 ) }
    dend_8 { pt3dadd( 8.05351, 63.3215, 14.8525, 1.44 ) }
    dend_8 { pt3dadd( 8.91353, 65.8208, 15.2464, 1.44 ) }
    dend_8 { pt3dadd( 9.34853, 67.13, 15.4505, 1.44 ) }
    dend_8 { pt3dadd( 10.3197, 70.1736, 15.9734, 1.44 ) }
    dend_8 { pt3dadd( 11.4895, 73.7761, 16.6678, 1.32 ) }
    dend_8 { pt3dadd( 12.231, 75.8414, 17.0068, 1.32 ) }
    dend_8 { pt3dadd( 13.1837, 78.1112, 17.3021, 1.32 ) }
    dend_8 { pt3dadd( 14.0515, 79.9435, 17.5075, 1.56 ) }
    dend_8 { pt3dadd( 14.9828, 81.6846, 17.6571, 1.56 ) }
    dend_8 { pt3dadd( 16.3411, 83.9262, 17.7917, 1.32 ) }
    dend_8 { pt3dadd( 18.8764, 87.6349, 17.9779, 1.32 ) }
    dend_8 { pt3dadd( 20.5026, 89.771, 18.071, 1.32 ) }
    dend_8 { pt3dadd( 21.9236, 91.49, 18.0421, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 23.5171, 93.327, 17.9106, 1.56 ) }
    dend_8 { pt3dadd( 24.4162, 94.3835, 17.7723, 1.56 ) }
    dend_8 { pt3dadd( 26.5981, 97.0156, 17.3294, 1.2 ) }
    dend_8 { pt3dadd( 27.7568, 98.4456, 17.0962, 1.2 ) }
    dend_8 { pt3dadd( 30.0201, 101.297, 16.5771, 1.44 ) }
    dend_8 { pt3dadd( 31.2154, 102.859, 16.2384, 1.92 ) }
    dend_8 { pt3dadd( 33.512, 106.108, 15.6487, 1.56 ) }
    dend_8 { pt3dadd( 34.9353, 108.269, 15.3291, 1.32 ) }
    dend_8 { pt3dadd( 36.9849, 111.66, 14.9252, 1.32 ) }
    dend_8 { pt3dadd( 38.6024, 114.535, 14.7526, 1.32 ) }
    dend_8 { pt3dadd( 40.1815, 117.54, 14.782, 1.56 ) }
    dend_8 { pt3dadd( 42.2311, 121.921, 15.0218, 1.2 ) }
    dend_8 { pt3dadd( 42.8487, 123.474, 15.1937, 1.2 ) }
    dend_8 { pt3dadd( 43.175, 124.583, 15.3567, 1.2 ) }
    dend_8 { pt3dadd( 43.4598, 126.079, 15.6428, 0.96 ) }
    dend_8 { pt3dadd( 43.5781, 127.045, 15.8625, 1.32 ) }
    dend_8 { pt3dadd( 43.777, 129.884, 16.5555, 0.96 ) }
    dend_8 { pt3dadd( 43.8259, 131.28, 16.8089, 0.96 ) }
    dend_8 { pt3dadd( 43.8726, 132.696, 17.0315, 0.96 ) }
    dend_8 { pt3dadd( 44.0521, 135.379, 17.4635, 1.32 ) }
    dend_8 { pt3dadd( 44.1972, 136.688, 17.6806, 1.32 ) }
    dend_8 { pt3dadd( 44.5457, 138.664, 18.0698, 0.84 ) }
    dend_8 { pt3dadd( 45.0722, 140.696, 18.5617, 1.08 ) }
    dend_8 { pt3dadd( 45.7144, 142.671, 19.171, 1.08 ) }
    dend_8 { pt3dadd( 46.7623, 145.467, 20.1657, 0.84 ) }
    dend_8 { pt3dadd( 47.3042, 146.824, 20.6012, 1.2 ) }
    dend_8 { pt3dadd( 47.951, 148.326, 21.1279, 0.84 ) }
    dend_8 { pt3dadd( 48.7076, 149.927, 21.749, 1.2 ) }
    dend_8 { pt3dadd( 49.8978, 152.336, 22.7604, 0.96 ) }
    dend_8 { pt3dadd( 50.2914, 153.17, 23.1118, 0.96 ) }
    dend_8 { pt3dadd( 51.7996, 157.104, 24.431, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.92243, 60.1394, 14.3142, 1.08 ) }
    dend_3 { pt3dadd( 8.62954, 62.6698, 14.3711, 1.08 ) }
    dend_3 { pt3dadd( 10.6652, 65.8175, 14.426, 1.08 ) }
    dend_3 { pt3dadd( 11.2799, 66.7871, 14.44, 1.08 ) }
    dend_3 { pt3dadd( 11.8679, 67.7342, 14.4048, 1.08 ) }
    dend_3 { pt3dadd( 12.9118, 69.4154, 14.3424, 1.32 ) }
    dend_3 { pt3dadd( 14.4626, 71.9131, 14.2496, 0.96 ) }
    dend_3 { pt3dadd( 15.4405, 73.4738, 14.1469, 1.44 ) }
    dend_3 { pt3dadd( 16.1029, 74.5549, 14.0513, 1.44 ) }
    dend_3 { pt3dadd( 17.4199, 76.7917, 13.8178, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 35.5297, -282.442, 7.96773, 1.08 ) }
    dend_52 { pt3dadd( 35.0169, -285.57, 8.50636, 1.08 ) }
    dend_52 { pt3dadd( 34.6617, -287.628, 8.86078, 1.08 ) }
    dend_52 { pt3dadd( 34.1014, -290.57, 9.30967, 1.08 ) }
    dend_52 { pt3dadd( 33.7455, -292.376, 9.57269, 1.08 ) }
    dend_52 { pt3dadd( 33.2978, -294.481, 9.85944, 1.08 ) }
    dend_52 { pt3dadd( 32.9543, -295.927, 10.0608, 1.08 ) }
    dend_52 { pt3dadd( 32.7138, -296.843, 10.1676, 1.08 ) }
    dend_52 { pt3dadd( 32.2855, -298.202, 10.2712, 1.08 ) }
    dend_52 { pt3dadd( 31.477, -300.558, 10.306, 0.84 ) }
    dend_52 { pt3dadd( 31.0293, -301.768, 10.2826, 0.84 ) }
    dend_52 { pt3dadd( 30.3719, -303.484, 10.1657, 1.32 ) }
    dend_52 { pt3dadd( 29.4618, -305.813, 9.9051, 1.32 ) }
    dend_52 { pt3dadd( 28.2002, -309.103, 9.46471, 0.96 ) }
    dend_52 { pt3dadd( 27.3969, -311.347, 9.1246, 0.96 ) }
    dend_52 { pt3dadd( 26.8571, -312.984, 8.89051, 1.2 ) }
    dend_52 { pt3dadd( 25.9308, -316.196, 8.50526, 1.2 ) }
    dend_52 { pt3dadd( 25.385, -318.384, 8.311, 1.44 ) }
    dend_52 { pt3dadd( 24.8139, -320.98, 8.18879, 1.2 ) }
    dend_52 { pt3dadd( 24.333, -323.7, 8.1659, 1.2 ) }
    dend_52 { pt3dadd( 23.763, -327.304, 8.21299, 1.2 ) }
    dend_52 { pt3dadd( 23.5833, -328.605, 8.25175, 1.2 ) }
    dend_52 { pt3dadd( 23.3838, -330.716, 8.45176, 1.2 ) }
    dend_52 { pt3dadd( 23.318, -331.893, 8.63545, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 35.5297, -282.442, 7.96773, 0.96 ) }
    dend_45 { pt3dadd( 36.987, -285.473, 7.74114, 0.96 ) }
    dend_45 { pt3dadd( 37.8909, -287.409, 7.5898, 1.32 ) }
    dend_45 { pt3dadd( 38.1529, -288.2, 7.5369, 1.32 ) }
    dend_45 { pt3dadd( 38.4777, -289.181, 7.47129, 1.32 ) }
    dend_45 { pt3dadd( 39.2078, -291.385, 7.32387, 1.56 ) }
    dend_45 { pt3dadd( 39.7493, -293.02, 7.21452, 1.56 ) }
    dend_45 { pt3dadd( 40.1129, -294.234, 7.13188, 1.56 ) }
    dend_45 { pt3dadd( 40.8021, -297.622, 7.07065, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 53.6012, -297.507, -12.4317, 0.96 ) }
    dend_35 { pt3dadd( 53.4705, -298.945, -12.0427, 0.96 ) }
    dend_35 { pt3dadd( 53.3311, -300.239, -11.7369, 0.96 ) }
    dend_35 { pt3dadd( 53.1519, -301.532, -11.4409, 1.44 ) }
    dend_35 { pt3dadd( 52.7234, -304.399, -10.7602, 1.08 ) }
    dend_35 { pt3dadd( 52.5348, -305.734, -10.4524, 1.08 ) }
    dend_35 { pt3dadd( 52.3031, -307.767, -10.0006, 1.08 ) }
    dend_35 { pt3dadd( 52.2406, -308.719, -9.77851, 1.08 ) }
    dend_35 { pt3dadd( 52.1763, -311.171, -9.21711, 0.84 ) }
    dend_35 { pt3dadd( 52.2073, -313.181, -8.8018, 0.84 ) }
    dend_35 { pt3dadd( 52.2854, -314.446, -8.60469, 0.84 ) }
    dend_35 { pt3dadd( 52.4342, -315.867, -8.38735, 0.84 ) }
    dend_35 { pt3dadd( 52.6174, -317.192, -8.19661, 0.84 ) }
    dend_35 { pt3dadd( 52.7698, -318.277, -8.07602, 0.84 ) }
    dend_35 { pt3dadd( 52.8659, -319.045, -8.04561, 0.84 ) }
    dend_35 { pt3dadd( 52.9498, -319.925, -8.0469, 0.84 ) }
    dend_35 { pt3dadd( 52.9649, -321.104, -8.06574, 0.84 ) }
    dend_35 { pt3dadd( 52.8509, -322.138, -8.11499, 0.84 ) }
    dend_35 { pt3dadd( 52.6561, -323.019, -8.19284, 0.84 ) }
    dend_35 { pt3dadd( 52.1837, -324.563, -8.34123, 0.6 ) }
    dend_35 { pt3dadd( 50.7896, -332.468, -8.68028, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 53.6012, -297.507, -12.4317, 0.84 ) }
    dend_22 { pt3dadd( 53.7966, -298.74, -12.5563, 0.84 ) }
    dend_22 { pt3dadd( 53.9322, -299.624, -12.6661, 0.84 ) }
    dend_22 { pt3dadd( 54.0746, -300.563, -12.8132, 0.84 ) }
    dend_22 { pt3dadd( 54.3392, -302.503, -13.165, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 54.3921, -302.955, -13.2559, 1.2 ) }
    dend_22 { pt3dadd( 54.601, -304.969, -13.6889, 0.96 ) }
    dend_22 { pt3dadd( 54.7556, -306.66, -14.0982, 1.32 ) }
    dend_22 { pt3dadd( 54.9643, -308.804, -14.6212, 1.08 ) }
    dend_22 { pt3dadd( 55.1113, -310.009, -14.9161, 1.08 ) }
    dend_22 { pt3dadd( 55.237, -310.896, -15.1279, 1.08 ) }
    dend_22 { pt3dadd( 55.3636, -311.557, -15.2693, 1.08 ) }
    dend_22 { pt3dadd( 55.4672, -312.008, -15.3521, 1.08 ) }
    dend_22 { pt3dadd( 55.9162, -313.777, -15.6373, 0.84 ) }
    dend_22 { pt3dadd( 56.5668, -316.065, -15.9459, 1.2 ) }
    dend_22 { pt3dadd( 56.7692, -316.709, -16.0207, 1.2 ) }
    dend_22 { pt3dadd( 57.8822, -320.046, -16.3656, 0.84 ) }
    dend_22 { pt3dadd( 58.5152, -321.926, -16.551, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.4386, 73.2448, 31.8438, 0.72 ) }
    dend_14 { pt3dadd( 9.83989, 71.9392, 31.5555, 0.72 ) }
    dend_14 { pt3dadd( 9.3235, 70.813, 31.3069, 0.48 ) }
    dend_14 { pt3dadd( 8.70101, 69.4555, 31.0071, 0.96 ) }
    dend_14 { pt3dadd( 8.2597, 68.4931, 30.7946, 0.96 ) }
    dend_14 { pt3dadd( 3.73968, 59.5196, 27.776, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.4386, 73.2448, 31.8438, 0.72 ) }
    dend_13 { pt3dadd( 10.8208, 71.8371, 31.9661, 0.72 ) }
    dend_13 { pt3dadd( 11.0167, 70.8462, 32.0658, 1.08 ) }
    dend_13 { pt3dadd( 11.3107, 69.1392, 32.1708, 0.72 ) }
    dend_13 { pt3dadd( 11.4455, 67.9063, 32.1672, 0.72 ) }
    dend_13 { pt3dadd( 11.5407, 66.1509, 32.05, 0.72 ) }
    dend_13 { pt3dadd( 11.6255, 64.7113, 31.9083, 1.2 ) }
    dend_13 { pt3dadd( 11.6191, 64.0289, 31.8341, 1.2 ) }
    dend_13 { pt3dadd( 11.528, 62.5481, 31.6493, 0.84 ) }
    dend_13 { pt3dadd( 11.3467, 60.7136, 31.3629, 0.84 ) }
    dend_13 { pt3dadd( 11.2204, 59.2242, 30.9732, 1.32 ) }
    dend_13 { pt3dadd( 11.1497, 58.2622, 30.5909, 1.08 ) }
    dend_13 { pt3dadd( 10.5365, 48.968, 29.5209, 1.08 ) }
    dend_13 { pt3dadd( 9.39837, 39.6989, 28.7155, 1.08 ) }
    dend_13 { pt3dadd( 8.02856, 30.7278, 26.4795, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 51.7996, 157.104, 24.431, 0.6 ) }
    dend_10 { pt3dadd( 52.3915, 158.058, 24.7814, 0.6 ) }
    dend_10 { pt3dadd( 52.996, 159.033, 25.1393, 0.6 ) }
    dend_10 { pt3dadd( 53.7807, 160.299, 25.6037, 0.6 ) }
    dend_10 { pt3dadd( 55.0481, 162.342, 26.354, 0.6 ) }
    dend_10 { pt3dadd( 55.8702, 163.668, 26.8407, 0.6 ) }
    dend_10 { pt3dadd( 56.7067, 165.017, 27.3358, 0.48 ) }
    dend_10 { pt3dadd( 60.5167, 174.261, 28.6657, 0.48 ) }
    dend_10 { pt3dadd( 64.9519, 183.286, 29.1628, 0.48 ) }
    dend_10 { pt3dadd( 69.6723, 191.858, 31.3675, 0.48 ) }
    dend_10 { pt3dadd( 76.0385, 199.448, 32.3669, 0.48 ) }
    dend_10 { pt3dadd( 82.2029, 207.29, 32.5143, 0.48 ) }
    dend_10 { pt3dadd( 88.8359, 214.606, 33.6301, 0.48 ) }
    dend_10 { pt3dadd( 93.8651, 223.295, 33.5352, 0.48 ) }
    dend_10 { pt3dadd( 97.0521, 232.713, 31.7526, 0.48 ) }
    dend_10 { pt3dadd( 99.0792, 242.631, 31.0743, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 51.7996, 157.104, 24.431, 0.84 ) }
    dend_9 { pt3dadd( 53.1711, 159.824, 24.315, 0.84 ) }
    dend_9 { pt3dadd( 53.9451, 161.36, 24.2495, 0.84 ) }
    dend_9 { pt3dadd( 54.7701, 162.996, 24.1797, 0.36 ) }
    dend_9 { pt3dadd( 55.5541, 164.551, 24.1134, 0.6 ) }
    dend_9 { pt3dadd( 56.1877, 165.808, 24.0597, 0.6 ) }
    dend_9 { pt3dadd( 57.3153, 168.044, 23.9643, 0.6 ) }
    dend_9 { pt3dadd( 62.5942, 177.179, 22.207, 0.6 ) }
    dend_9 { pt3dadd( 67.3739, 186.405, 19.6381, 0.6 ) }
    dend_9 { pt3dadd( 73.3412, 194.755, 16.849, 0.6 ) }
    dend_9 { pt3dadd( 78.7802, 203.414, 13.8399, 0.6 ) }
    dend_9 { pt3dadd( 82.3914, 212.554, 9.61811, 0.6 ) }
    dend_9 { pt3dadd( 85.8855, 222.543, 7.63204, 0.6 ) }
    dend_9 { pt3dadd( 90.2726, 232.302, 6.63178, 0.6 ) }
    dend_9 { pt3dadd( 94.3401, 242.233, 5.83158, 0.6 ) }
    dend_9 { pt3dadd( 96.8177, 252.487, 3.56471, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 17.4199, 76.7917, 13.8178, 1.08 ) }
    dend_5 { pt3dadd( 16.6139, 78.9023, 14.1995, 1.08 ) }
    dend_5 { pt3dadd( 16.0944, 79.9099, 14.4722, 1.08 ) }
    dend_5 { pt3dadd( 15.3391, 81.3749, 14.8686, 1.08 ) }
    dend_5 { pt3dadd( 14.5004, 83.0015, 15.3088, 0.96 ) }
    dend_5 { pt3dadd( 13.2851, 85.3589, 15.9467, 0.96 ) }
    dend_5 { pt3dadd( 12.2804, 87.3075, 16.474, 0.84 ) }
    dend_5 { pt3dadd( 10.8246, 89.6364, 17.3275, 1.08 ) }
    dend_5 { pt3dadd( 4.37351, 99.4282, 18.5492, 1.08 ) }
    dend_5 { pt3dadd( -0.760108, 109.977, 20.2176, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 17.4199, 76.7917, 13.8178, 0.96 ) }
    dend_4 { pt3dadd( 18.7245, 77.7003, 13.4033, 0.96 ) }
    dend_4 { pt3dadd( 19.316, 78.0995, 13.1865, 0.96 ) }
    dend_4 { pt3dadd( 20.2479, 78.7536, 12.818, 0.96 ) }
    dend_4 { pt3dadd( 21.3495, 79.573, 12.2786, 0.84 ) }
    dend_4 { pt3dadd( 21.9275, 80.0127, 11.9729, 0.84 ) }
    dend_4 { pt3dadd( 22.8492, 80.7129, 11.4611, 0.84 ) }
    dend_4 { pt3dadd( 23.2766, 81.0143, 11.1961, 0.84 ) }
    dend_4 { pt3dadd( 23.9677, 81.4763, 10.7543, 0.84 ) }
    dend_4 { pt3dadd( 25.3916, 82.3126, 9.89428, 1.2 ) }
    dend_4 { pt3dadd( 25.6648, 82.4463, 9.75852, 1.2 ) }
    dend_4 { pt3dadd( 26.4088, 82.7383, 9.46556, 1.2 ) }
    dend_4 { pt3dadd( 27.5629, 83.0708, 9.14493, 1.2 ) }
    dend_4 { pt3dadd( 27.9327, 83.1471, 9.07625, 1.2 ) }
    dend_4 { pt3dadd( 29.3854, 83.3742, 8.87731, 1.2 ) }
    dend_4 { pt3dadd( 30.5361, 83.5383, 8.7641, 0.96 ) }
    dend_4 { pt3dadd( 31.6764, 83.7239, 8.65351, 0.96 ) }
    dend_4 { pt3dadd( 32.9779, 83.914, 8.53631, 0.96 ) }
    dend_4 { pt3dadd( 34.2692, 84.0981, 8.42067, 1.32 ) }
    dend_4 { pt3dadd( 36.2165, 84.3947, 8.24015, 0.84 ) }
    dend_4 { pt3dadd( 37.9026, 84.6674, 8.07421, 1.2 ) }
    dend_4 { pt3dadd( 39.0832, 84.8799, 8.00897, 1.2 ) }
    dend_4 { pt3dadd( 40.2274, 85.1281, 8.0023, 0.96 ) }
    dend_4 { pt3dadd( 41.1875, 85.3779, 8.06514, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 41.9024, 85.5776, 8.17139, 1.2 ) }
    dend_4 { pt3dadd( 42.3731, 85.7162, 8.27892, 1.2 ) }
    dend_4 { pt3dadd( 44.7707, 86.514, 8.97334, 1.2 ) }
    dend_4 { pt3dadd( 45.7262, 86.8932, 9.27545, 1.2 ) }
    dend_4 { pt3dadd( 46.5289, 87.2792, 9.53827, 1.2 ) }
    dend_4 { pt3dadd( 48.0823, 88.0328, 10.0458, 1.08 ) }
    dend_4 { pt3dadd( 48.7854, 88.3441, 10.2572, 1.44 ) }
    dend_4 { pt3dadd( 50.1251, 88.8338, 10.5039, 1.08 ) }
    dend_4 { pt3dadd( 51.159, 89.1419, 10.5279, 1.08 ) }
    dend_4 { pt3dadd( 51.9474, 89.3736, 10.4732, 1.08 ) }
    dend_4 { pt3dadd( 53.2778, 89.8135, 10.2819, 1.08 ) }
    dend_4 { pt3dadd( 54.7482, 90.3211, 9.97494, 1.44 ) }
    dend_4 { pt3dadd( 57.0298, 91.1158, 9.37243, 1.08 ) }
    dend_4 { pt3dadd( 58.519, 91.69, 8.9023, 0.84 ) }
    dend_4 { pt3dadd( 59.6388, 92.1994, 8.52832, 1.2 ) }
    dend_4 { pt3dadd( 60.7652, 92.7618, 8.13719, 1.2 ) }
    dend_4 { pt3dadd( 62.0188, 93.4822, 7.64336, 0.84 ) }
    dend_4 { pt3dadd( 62.9345, 94.0591, 7.27229, 1.08 ) }
    dend_4 { pt3dadd( 64.9013, 95.2923, 6.53725, 0.72 ) }
    dend_4 { pt3dadd( 66.8465, 96.4224, 5.79275, 0.72 ) }
    dend_4 { pt3dadd( 68.0851, 97.0263, 5.32209, 1.2 ) }
    dend_4 { pt3dadd( 69.9116, 97.8268, 4.63787, 0.72 ) }
    dend_4 { pt3dadd( 70.5555, 98.0917, 4.41214, 0.72 ) }
    dend_4 { pt3dadd( 71.9037, 98.6009, 3.9891, 0.96 ) }
    dend_4 { pt3dadd( 73.3267, 99.0881, 3.58516, 0.96 ) }
    dend_4 { pt3dadd( 75.845, 100.035, 2.97285, 0.72 ) }
    dend_4 { pt3dadd( 77.1396, 100.638, 2.71088, 0.6 ) }
    dend_4 { pt3dadd( 78.182, 101.191, 2.5445, 0.6 ) }
    dend_4 { pt3dadd( 79.5213, 102.031, 2.33559, 1.2 ) }
    dend_4 { pt3dadd( 79.9193, 102.326, 2.2783, 1.2 ) }
    dend_4 { pt3dadd( 81.5447, 103.648, 2.10169, 0.72 ) }
    dend_4 { pt3dadd( 82.3042, 104.343, 2.03118, 0.72 ) }
    dend_4 { pt3dadd( 82.8353, 104.817, 1.984, 0.72 ) }
    dend_4 { pt3dadd( 84.104, 106.0, 1.82166, 0.6 ) }
    dend_4 { pt3dadd( 84.3122, 106.193, 1.79083, 0.6 ) }
    dend_4 { pt3dadd( 85.363, 107.153, 1.56422, 0.96 ) }
    dend_4 { pt3dadd( 86.0688, 107.816, 1.33187, 0.72 ) }
    dend_4 { pt3dadd( 86.5283, 108.272, 1.14575, 0.96 ) }
    dend_4 { pt3dadd( 88.3021, 110.143, 0.326684, 0.72 ) }
    dend_4 { pt3dadd( 89.3241, 111.266, -0.191291, 0.72 ) }
    dend_4 { pt3dadd( 90.6817, 112.742, -0.938706, 1.2 ) }
    dend_4 { pt3dadd( 92.117, 114.24, -1.69467, 0.72 ) }
    dend_4 { pt3dadd( 93.1035, 115.195, -2.15986, 0.72 ) }
    dend_4 { pt3dadd( 94.3304, 116.284, -2.68148, 0.72 ) }
    dend_4 { pt3dadd( 94.8119, 116.661, -2.84564, 0.72 ) }
    dend_4 { pt3dadd( 96.3074, 117.765, -3.21265, 1.08 ) }
    dend_4 { pt3dadd( 98.0352, 118.927, -3.40272, 0.72 ) }
    dend_4 { pt3dadd( 99.2804, 119.715, -3.43022, 1.08 ) }
    dend_4 { pt3dadd( 99.6051, 119.922, -3.42016, 1.08 ) }
    dend_4 { pt3dadd( 100.97, 120.75, -3.3654, 0.72 ) }
    dend_4 { pt3dadd( 101.775, 121.247, -3.35275, 0.72 ) }
    dend_4 { pt3dadd( 103.285, 122.217, -3.38643, 1.08 ) }
    dend_4 { pt3dadd( 103.88, 122.592, -3.44789, 1.08 ) }
    dend_4 { pt3dadd( 105.06, 123.298, -3.60571, 0.84 ) }
    dend_4 { pt3dadd( 107.235, 124.54, -3.92689, 0.84 ) }
    dend_4 { pt3dadd( 109.078, 125.521, -4.18211, 0.6 ) }
    dend_4 { pt3dadd( 110.514, 126.188, -4.32375, 1.08 ) }
    dend_4 { pt3dadd( 111.204, 126.464, -4.35651, 1.08 ) }
    dend_4 { pt3dadd( 113.013, 127.146, -4.32451, 0.72 ) }
    dend_4 { pt3dadd( 113.915, 127.473, -4.24484, 0.72 ) }
    dend_4 { pt3dadd( 115.804, 128.181, -3.88662, 1.08 ) }
    dend_4 { pt3dadd( 117.452, 128.787, -3.45355, 0.84 ) }
    dend_4 { pt3dadd( 118.318, 129.12, -3.1928, 1.08 ) }
    dend_4 { pt3dadd( 119.615, 129.663, -2.7898, 0.84 ) }
    dend_4 { pt3dadd( 120.281, 129.946, -2.59093, 0.84 ) }
    dend_4 { pt3dadd( 121.997, 130.659, -2.15257, 0.6 ) }
    dend_4 { pt3dadd( 122.844, 130.969, -1.98375, 0.6 ) }
    dend_4 { pt3dadd( 124.144, 131.394, -1.78692, 0.96 ) }
    dend_4 { pt3dadd( 124.687, 131.515, -1.726, 0.96 ) }
    dend_4 { pt3dadd( 126.327, 131.681, -1.57814, 0.72 ) }
    dend_4 { pt3dadd( 127.618, 131.722, -1.47046, 0.72 ) }
    dend_4 { pt3dadd( 128.671, 131.707, -1.43717, 0.72 ) }
    dend_4 { pt3dadd( 128.933, 131.712, -1.44168, 0.72 ) }
    dend_4 { pt3dadd( 129.889, 131.798, -1.53938, 0.72 ) }
    dend_4 { pt3dadd( 131.443, 132.043, -1.87475, 0.72 ) }
    dend_4 { pt3dadd( 131.878, 132.141, -2.03642, 0.72 ) }
    dend_4 { pt3dadd( 133.501, 132.556, -2.79747, 0.6 ) }
    dend_4 { pt3dadd( 134.391, 132.792, -3.27053, 0.96 ) }
    dend_4 { pt3dadd( 135.929, 133.132, -4.11064, 0.96 ) }
    dend_4 { pt3dadd( 136.911, 133.351, -4.68898, 0.96 ) }
    dend_4 { pt3dadd( 138.541, 133.667, -5.72392, 0.72 ) }
    dend_4 { pt3dadd( 140.018, 133.89, -6.66276, 0.72 ) }
    dend_4 { pt3dadd( 141.424, 134.003, -7.53975, 1.2 ) }
    dend_4 { pt3dadd( 142.748, 134.025, -8.34242, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 23.318, -331.893, 8.63545, 0.48 ) }
    dend_56 { pt3dadd( 23.6247, -334.391, 8.76692, 0.48 ) }
    dend_56 { pt3dadd( 23.8994, -336.628, 8.88466, 0.48 ) }
    dend_56 { pt3dadd( 24.1345, -338.543, 8.9854, 0.84 ) }
    dend_56 { pt3dadd( 24.3377, -340.198, 9.0725, 0.84 ) }
    dend_56 { pt3dadd( 24.534, -341.797, 9.15666, 0.6 ) }
    dend_56 { pt3dadd( 24.952, -351.18, 7.9934, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 23.318, -331.893, 8.63545, 0.84 ) }
    dend_53 { pt3dadd( 23.9948, -334.668, 9.68729, 0.84 ) }
    dend_53 { pt3dadd( 24.5244, -336.939, 10.4914, 0.84 ) }
    dend_53 { pt3dadd( 25.0147, -339.17, 11.2023, 1.08 ) }
    dend_53 { pt3dadd( 25.6409, -341.949, 12.0262, 0.84 ) }
    dend_53 { pt3dadd( 26.0832, -343.874, 12.5796, 0.84 ) }
    dend_53 { pt3dadd( 26.5045, -345.693, 13.0786, 0.84 ) }
    dend_53 { pt3dadd( 26.7321, -346.725, 13.3278, 0.84 ) }
    dend_53 { pt3dadd( 27.4265, -349.947, 13.9634, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( 27.7891, -351.774, 14.2497, 1.32 ) }
    dend_53 { pt3dadd( 28.3648, -355.133, 14.6592, 1.2 ) }
    dend_53 { pt3dadd( 28.656, -357.101, 14.8472, 0.96 ) }
    dend_53 { pt3dadd( 28.9549, -359.551, 15.0762, 1.32 ) }
    dend_53 { pt3dadd( 29.1681, -361.784, 15.2857, 1.32 ) }
    dend_53 { pt3dadd( 29.3217, -364.534, 15.5486, 1.08 ) }
    dend_53 { pt3dadd( 29.5289, -370.366, 16.068, 1.08 ) }
    dend_53 { pt3dadd( 29.5802, -373.419, 16.3179, 0.84 ) }
    dend_53 { pt3dadd( 29.5878, -376.027, 16.5531, 1.2 ) }
    dend_53 { pt3dadd( 29.5573, -378.914, 16.8527, 1.08 ) }
    dend_53 { pt3dadd( 29.5118, -381.246, 17.145, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 40.8021, -297.622, 7.07065, 0.96 ) }
    dend_51 { pt3dadd( 40.2449, -299.781, 6.4587, 0.96 ) }
    dend_51 { pt3dadd( 39.9772, -300.746, 6.30975, 0.96 ) }
    dend_51 { pt3dadd( 39.7144, -301.604, 6.18139, 0.96 ) }
    dend_51 { pt3dadd( 39.4017, -302.633, 6.02598, 0.96 ) }
    dend_51 { pt3dadd( 39.0465, -303.742, 5.85129, 0.96 ) }
    dend_51 { pt3dadd( 38.2992, -306.182, 5.51347, 1.44 ) }
    dend_51 { pt3dadd( 37.6713, -308.34, 5.36104, 0.96 ) }
    dend_51 { pt3dadd( 36.6351, -311.977, 5.21285, 1.44 ) }
    dend_51 { pt3dadd( 36.3197, -313.136, 5.19046, 0.96 ) }
    dend_51 { pt3dadd( 35.7166, -315.449, 5.1689, 1.56 ) }
    dend_51 { pt3dadd( 35.0754, -318.136, 5.1521, 1.2 ) }
    dend_51 { pt3dadd( 34.3468, -321.827, 5.15146, 0.96 ) }
    dend_51 { pt3dadd( 34.0874, -323.456, 5.1721, 1.44 ) }
    dend_51 { pt3dadd( 33.7608, -326.04, 5.24945, 0.96 ) }
    dend_51 { pt3dadd( 33.4496, -328.857, 5.2916, 1.32 ) }
    dend_51 { pt3dadd( 33.1835, -331.832, 5.24256, 0.96 ) }
    dend_51 { pt3dadd( 33.0144, -334.059, 5.09944, 0.96 ) }
    dend_51 { pt3dadd( 32.9629, -335.347, 4.98291, 0.96 ) }
    dend_51 { pt3dadd( 32.9503, -336.436, 4.88774, 0.96 ) }
    dend_51 { pt3dadd( 32.9813, -339.345, 4.63671, 1.32 ) }
    dend_51 { pt3dadd( 33.0502, -341.909, 4.41652, 0.96 ) }
    dend_51 { pt3dadd( 33.1943, -345.561, 4.15209, 1.44 ) }
    dend_51 { pt3dadd( 33.3271, -348.225, 4.00442, 0.84 ) }
    dend_51 { pt3dadd( 33.4413, -350.135, 3.96648, 1.2 ) }
    dend_51 { pt3dadd( 33.4891, -351.12, 3.99314, 1.2 ) }
    dend_51 { pt3dadd( 33.5158, -351.784, 4.04937, 0.84 ) }
    dend_51 { pt3dadd( 33.5391, -354.351, 4.39933, 1.2 ) }
    dend_51 { pt3dadd( 33.4457, -356.725, 4.80241, 1.2 ) }
    dend_51 { pt3dadd( 33.2922, -358.344, 5.06334, 0.96 ) }
    dend_51 { pt3dadd( 32.9391, -361.03, 5.44168, 0.96 ) }
    dend_51 { pt3dadd( 32.5616, -363.539, 5.67867, 1.32 ) }
    dend_51 { pt3dadd( 32.1848, -365.624, 5.77671, 1.68 ) }
    dend_51 { pt3dadd( 31.7037, -367.799, 5.73319, 1.2 ) }
    dend_51 { pt3dadd( 30.976, -370.55, 5.45875, 0.96 ) }
    dend_51 { pt3dadd( 30.253, -372.954, 4.94364, 0.96 ) }
    dend_51 { pt3dadd( 29.4929, -375.044, 4.13461, 0.84 ) }
    dend_51 { pt3dadd( 28.9194, -376.135, 3.39619, 0.84 ) }
    dend_51 { pt3dadd( 28.2733, -376.736, 2.397, 0.84 ) }
    dend_51 { pt3dadd( 27.621, -376.222, 1.35575, 0.84 ) }
    dend_51 { pt3dadd( 27.2608, -375.661, 0.791482, 0.84 ) }
    dend_51 { pt3dadd( 26.9124, -374.936, 0.280806, 0.84 ) }
    dend_51 { pt3dadd( 26.5409, -373.999, -0.155752, 1.08 ) }
    dend_51 { pt3dadd( 26.1045, -372.679, -0.606151, 0.84 ) }
    dend_51 { pt3dadd( 25.7757, -371.565, -0.832543, 0.6 ) }
    dend_51 { pt3dadd( 25.2527, -379.847, -0.48905, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 40.8021, -297.622, 7.07065, 1.08 ) }
    dend_46 { pt3dadd( 41.5495, -302.609, 7.46711, 1.08 ) }
    dend_46 { pt3dadd( 42.3929, -308.01, 7.87397, 1.44 ) }
    dend_46 { pt3dadd( 42.7456, -310.438, 8.02145, 0.84 ) }
    dend_46 { pt3dadd( 43.2484, -313.968, 8.2033, 1.32 ) }
    dend_46 { pt3dadd( 43.5928, -316.369, 8.3178, 1.32 ) }
    dend_46 { pt3dadd( 44.2222, -320.519, 8.45218, 1.32 ) }
    dend_46 { pt3dadd( 44.6148, -323.19, 8.45473, 1.32 ) }
    dend_46 { pt3dadd( 45.0638, -326.1, 8.44722, 1.32 ) }
    dend_46 { pt3dadd( 45.8221, -331.484, 8.36182, 1.44 ) }
    dend_46 { pt3dadd( 46.1779, -334.128, 8.3053, 1.44 ) }
    dend_46 { pt3dadd( 47.2445, -342.462, 8.09636, 1.44 ) }
    dend_46 { pt3dadd( 47.4888, -344.547, 8.03155, 1.44 ) }
    dend_46 { pt3dadd( 47.9032, -348.156, 7.9245, 1.08 ) }
    dend_46 { pt3dadd( 48.8006, -355.353, 7.79389, 1.08 ) }
    dend_46 { pt3dadd( 49.2516, -359.055, 7.74292, 0.84 ) }
    dend_46 { pt3dadd( 49.7554, -363.327, 7.7353, 1.32 ) }
    dend_46 { pt3dadd( 50.1767, -366.704, 7.80703, 1.32 ) }
    dend_46 { pt3dadd( 50.8835, -371.936, 7.98142, 0.96 ) }
    dend_46 { pt3dadd( 51.2714, -374.654, 8.1189, 1.44 ) }
    dend_46 { pt3dadd( 51.9165, -378.628, 8.27695, 1.44 ) }
    dend_46 { pt3dadd( 52.5756, -382.841, 8.33038, 1.2 ) }
    dend_46 { pt3dadd( 53.1772, -387.059, 8.25091, 1.08 ) }
    dend_46 { pt3dadd( 53.6304, -390.422, 8.10699, 1.08 ) }
    dend_46 { pt3dadd( 53.9983, -393.601, 7.88096, 1.68 ) }
    dend_46 { pt3dadd( 54.5523, -398.639, 7.46239, 1.2 ) }
    dend_46 { pt3dadd( 54.7964, -400.718, 7.29232, 1.2 ) }
    dend_46 { pt3dadd( 55.328, -404.873, 6.99053, 1.44 ) }
    dend_46 { pt3dadd( 55.8414, -408.509, 6.76218, 1.44 ) }
    dend_46 { pt3dadd( 56.5575, -412.978, 6.57711, 1.44 ) }
    dend_46 { pt3dadd( 57.2205, -416.825, 6.51113, 1.44 ) }
    dend_46 { pt3dadd( 58.0347, -421.223, 6.60767, 1.8 ) }
    dend_46 { pt3dadd( 58.9237, -425.777, 6.72504, 1.32 ) }
    dend_46 { pt3dadd( 59.4652, -428.442, 6.80192, 1.08 ) }
    dend_46 { pt3dadd( 60.2062, -432.176, 6.88696, 1.56 ) }
    dend_46 { pt3dadd( 61.0709, -436.497, 6.96347, 1.56 ) }
    dend_46 { pt3dadd( 61.5511, -438.906, 6.99679, 1.56 ) }
    dend_46 { pt3dadd( 61.9852, -441.128, 7.02163, 1.56 ) }
    dend_46 { pt3dadd( 62.6218, -444.522, 7.06047, 1.56 ) }
    dend_46 { pt3dadd( 63.1622, -447.391, 7.13142, 1.56 ) }
    dend_46 { pt3dadd( 63.8426, -450.69, 7.24897, 1.32 ) }
    dend_46 { pt3dadd( 64.1597, -452.176, 7.31092, 1.32 ) }
    dend_46 { pt3dadd( 64.5713, -454.383, 7.34686, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( 64.9994, -456.823, 7.36337, 1.32 ) }
    dend_46 { pt3dadd( 65.6618, -460.441, 7.34032, 1.32 ) }
    dend_46 { pt3dadd( 66.1543, -463.155, 7.32057, 1.32 ) }
    dend_46 { pt3dadd( 66.6937, -466.35, 7.26907, 1.68 ) }
    dend_46 { pt3dadd( 68.0107, -474.699, 7.01923, 1.32 ) }
    dend_46 { pt3dadd( 68.3995, -477.323, 6.90101, 1.32 ) }
    dend_46 { pt3dadd( 68.8236, -480.335, 6.71556, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 58.5152, -321.926, -16.551, 0.96 ) }
    dend_30 { pt3dadd( 59.5431, -322.776, -15.2464, 0.96 ) }
    dend_30 { pt3dadd( 60.0593, -323.191, -14.5929, 1.32 ) }
    dend_30 { pt3dadd( 61.1316, -324.061, -13.2462, 0.96 ) }
    dend_30 { pt3dadd( 61.9288, -324.747, -12.2352, 1.32 ) }
    dend_30 { pt3dadd( 62.9662, -325.664, -10.995, 1.2 ) }
    dend_30 { pt3dadd( 63.5051, -326.109, -10.3796, 1.2 ) }
    dend_30 { pt3dadd( 64.0425, -326.521, -9.80171, 1.2 ) }
    dend_30 { pt3dadd( 64.4159, -326.818, -9.40347, 1.2 ) }
    dend_30 { pt3dadd( 64.8597, -327.166, -8.96654, 1.2 ) }
    dend_30 { pt3dadd( 66.2152, -328.124, -7.76228, 0.96 ) }
    dend_30 { pt3dadd( 67.2283, -328.746, -6.99979, 1.32 ) }
    dend_30 { pt3dadd( 67.8363, -329.075, -6.569, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 58.5152, -321.926, -16.551, 1.08 ) }
    dend_23 { pt3dadd( 59.0931, -325.375, -16.5922, 1.08 ) }
    dend_23 { pt3dadd( 59.5491, -328.5, -16.6542, 0.72 ) }
    dend_23 { pt3dadd( 59.7814, -330.029, -16.7433, 0.72 ) }
    dend_23 { pt3dadd( 60.3314, -333.724, -17.037, 1.2 ) }
    dend_23 { pt3dadd( 60.7749, -336.733, -17.3063, 0.84 ) }
    dend_23 { pt3dadd( 61.0289, -338.553, -17.4778, 0.84 ) }
    dend_23 { pt3dadd( 61.2202, -339.883, -17.6294, 0.84 ) }
    dend_23 { pt3dadd( 61.7175, -343.368, -18.0357, 0.6 ) }
    dend_23 { pt3dadd( 62.0071, -345.306, -18.2503, 0.6 ) }
    dend_23 { pt3dadd( 62.4591, -347.882, -18.5091, 1.2 ) }
    dend_23 { pt3dadd( 63.0411, -350.812, -18.8126, 1.2 ) }
    dend_23 { pt3dadd( 63.5741, -353.273, -19.0612, 0.84 ) }
    dend_23 { pt3dadd( 64.0226, -355.319, -19.2555, 0.84 ) }
    dend_23 { pt3dadd( 64.71, -358.572, -19.5589, 1.08 ) }
    dend_23 { pt3dadd( 65.3067, -361.385, -19.8793, 0.72 ) }
    dend_23 { pt3dadd( 65.8336, -363.875, -20.232, 1.08 ) }
    dend_23 { pt3dadd( 66.2008, -365.588, -20.5131, 1.08 ) }
    dend_23 { pt3dadd( 66.523, -367.194, -20.8074, 1.08 ) }
    dend_23 { pt3dadd( 67.0352, -370.084, -21.3716, 0.72 ) }
    dend_23 { pt3dadd( 67.3419, -371.948, -21.7446, 0.72 ) }
    dend_23 { pt3dadd( 67.5729, -373.756, -22.0308, 1.08 ) }
    dend_23 { pt3dadd( 67.704, -375.136, -22.1678, 1.08 ) }
    dend_23 { pt3dadd( 67.7826, -376.074, -22.2101, 1.08 ) }
    dend_23 { pt3dadd( 67.9531, -378.669, -22.3074, 0.72 ) }
    dend_23 { pt3dadd( 68.0303, -380.12, -22.3672, 0.72 ) }
    dend_23 { pt3dadd( 68.2009, -383.345, -22.562, 1.2 ) }
    dend_23 { pt3dadd( 68.3934, -386.562, -22.8076, 1.2 ) }
    dend_23 { pt3dadd( 68.688, -390.774, -23.2145, 1.2 ) }
    dend_23 { pt3dadd( 69.0299, -394.821, -23.6935, 0.84 ) }
    dend_23 { pt3dadd( 69.1725, -396.415, -23.9241, 1.32 ) }
    dend_23 { pt3dadd( 69.3267, -398.177, -24.2327, 1.32 ) }
    dend_23 { pt3dadd( 69.4117, -398.992, -24.4106, 1.32 ) }
    dend_23 { pt3dadd( 69.607, -400.803, -24.8464, 0.96 ) }
    dend_23 { pt3dadd( 69.77, -402.419, -25.2365, 1.56 ) }
    dend_23 { pt3dadd( 69.9665, -404.1, -25.5934, 1.56 ) }
    dend_23 { pt3dadd( 70.1534, -405.516, -25.8795, 1.08 ) }
    dend_23 { pt3dadd( 70.3232, -406.893, -26.1518, 1.08 ) }
    dend_23 { pt3dadd( 70.7011, -409.703, -26.7354, 0.84 ) }
    dend_23 { pt3dadd( 70.9259, -411.009, -27.0093, 1.44 ) }
    dend_23 { pt3dadd( 71.4499, -413.422, -27.5304, 1.08 ) }
    dend_23 { pt3dadd( 71.8592, -414.911, -27.8692, 1.08 ) }
    dend_23 { pt3dadd( 72.5511, -417.271, -28.4135, 0.72 ) }
    dend_23 { pt3dadd( 73.3591, -420.095, -29.0554, 1.08 ) }
    dend_23 { pt3dadd( 73.8079, -421.566, -29.4374, 1.08 ) }
    dend_23 { pt3dadd( 74.3359, -423.233, -29.9015, 0.96 ) }
    dend_23 { pt3dadd( 75.2221, -426.061, -30.6876, 0.72 ) }
    dend_23 { pt3dadd( 75.6863, -427.467, -31.12, 0.72 ) }
    dend_23 { pt3dadd( 76.0554, -428.457, -31.4638, 0.72 ) }
    dend_23 { pt3dadd( 77.1425, -431.391, -32.6038, 0.72 ) }
    dend_23 { pt3dadd( 77.5268, -432.549, -33.1025, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.73968, 59.5196, 27.776, 0.6 ) }
    dend_16 { pt3dadd( -0.442978, 50.3927, 25.5001, 0.6 ) }
    dend_16 { pt3dadd( -4.49156, 40.9385, 24.6236, 0.6 ) }
    dend_16 { pt3dadd( -7.89173, 31.4364, 22.4388, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.73968, 59.5196, 27.776, 0.84 ) }
    dend_15 { pt3dadd( -0.719924, 51.5346, 24.5224, 0.6 ) }
    dend_15 { pt3dadd( -7.01963, 44.5213, 22.5201, 0.6 ) }
    dend_15 { pt3dadd( -13.1136, 37.1385, 21.2036, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.760108, 109.977, 20.2176, 0.6 ) }
    dend_7 { pt3dadd( -6.05243, 119.12, 23.682, 0.6 ) }
    dend_7 { pt3dadd( -12.9614, 126.897, 27.3218, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.760108, 109.977, 20.2176, 0.84 ) }
    dend_6 { pt3dadd( -3.73645, 115.646, 20.5356, 0.6 ) }
    dend_6 { pt3dadd( -5.80401, 121.753, 20.4809, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 29.5118, -381.246, 17.145, 0.6 ) }
    dend_55 { pt3dadd( 27.4674, -381.064, 17.1508, 0.6 ) }
    dend_55 { pt3dadd( 24.923, -380.839, 17.1581, 0.6 ) }
    dend_55 { pt3dadd( 23.7276, -380.733, 17.1616, 0.6 ) }
    dend_55 { pt3dadd( 22.2928, -380.605, 17.1657, 0.96 ) }
    dend_55 { pt3dadd( 11.5577, -378.328, 16.1298, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.5118, -381.246, 17.145, 0.96 ) }
    dend_54 { pt3dadd( 29.342, -382.763, 17.0694, 0.96 ) }
    dend_54 { pt3dadd( 29.1756, -384.251, 16.9953, 0.72 ) }
    dend_54 { pt3dadd( 28.9037, -386.683, 16.8743, 0.72 ) }
    dend_54 { pt3dadd( 26.3004, -397.698, 17.7731, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 68.8236, -480.335, 6.71556, 0.84 ) }
    dend_50 { pt3dadd( 71.3593, -483.098, 7.51079, 0.84 ) }
    dend_50 { pt3dadd( 73.8611, -485.567, 8.38687, 0.84 ) }
    dend_50 { pt3dadd( 74.5469, -486.24, 8.58784, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( 76.3193, -487.99, 8.98464, 0.84 ) }
    dend_50 { pt3dadd( 78.6052, -490.35, 9.40052, 0.6 ) }
    dend_50 { pt3dadd( 80.5797, -492.467, 9.73059, 1.08 ) }
    dend_50 { pt3dadd( 82.0247, -494.097, 9.92698, 1.08 ) }
    dend_50 { pt3dadd( 84.2234, -496.594, 10.2366, 0.72 ) }
    dend_50 { pt3dadd( 86.019, -498.758, 10.5108, 0.72 ) }
    dend_50 { pt3dadd( 87.0877, -500.077, 10.6171, 0.72 ) }
    dend_50 { pt3dadd( 88.0393, -501.152, 10.6475, 0.72 ) }
    dend_50 { pt3dadd( 89.0591, -502.306, 10.6338, 1.2 ) }
    dend_50 { pt3dadd( 91.5409, -505.17, 10.6377, 0.84 ) }
    dend_50 { pt3dadd( 94.6768, -508.819, 10.7964, 1.08 ) }
    dend_50 { pt3dadd( 98.0944, -512.891, 11.0334, 1.08 ) }
    dend_50 { pt3dadd( 101.492, -516.999, 11.2506, 0.84 ) }
    dend_50 { pt3dadd( 102.933, -518.828, 11.3374, 0.84 ) }
    dend_50 { pt3dadd( 104.603, -521.033, 11.4594, 1.32 ) }
    dend_50 { pt3dadd( 106.617, -523.893, 11.6729, 0.84 ) }
    dend_50 { pt3dadd( 107.336, -524.941, 11.7925, 0.84 ) }
    dend_50 { pt3dadd( 108.451, -526.7, 12.1073, 1.32 ) }
    dend_50 { pt3dadd( 110.169, -529.409, 12.6083, 0.84 ) }
    dend_50 { pt3dadd( 111.504, -531.196, 12.8723, 1.44 ) }
    dend_50 { pt3dadd( 114.043, -534.249, 13.1072, 1.2 ) }
    dend_50 { pt3dadd( 115.262, -535.595, 13.1341, 1.2 ) }
    dend_50 { pt3dadd( 116.896, -537.363, 13.1295, 1.44 ) }
    dend_50 { pt3dadd( 119.033, -539.648, 13.082, 1.08 ) }
    dend_50 { pt3dadd( 122.877, -543.82, 12.9286, 0.84 ) }
    dend_50 { pt3dadd( 124.87, -546.064, 12.8392, 1.44 ) }
    dend_50 { pt3dadd( 126.855, -548.437, 12.7182, 0.96 ) }
    dend_50 { pt3dadd( 128.181, -550.225, 12.6065, 0.96 ) }
    dend_50 { pt3dadd( 129.093, -551.657, 12.5186, 1.44 ) }
    dend_50 { pt3dadd( 130.856, -554.995, 12.2445, 0.96 ) }
    dend_50 { pt3dadd( 131.26, -555.903, 12.1538, 0.96 ) }
    dend_50 { pt3dadd( 132.695, -559.371, 11.779, 1.44 ) }
    dend_50 { pt3dadd( 134.223, -563.069, 11.32, 0.84 ) }
    dend_50 { pt3dadd( 136.105, -567.232, 10.6328, 1.44 ) }
    dend_50 { pt3dadd( 138.146, -571.53, 9.79226, 0.84 ) }
    dend_50 { pt3dadd( 138.766, -572.77, 9.50243, 0.84 ) }
    dend_50 { pt3dadd( 140.536, -576.033, 8.67166, 1.44 ) }
    dend_50 { pt3dadd( 143.178, -580.555, 7.48555, 1.44 ) }
    dend_50 { pt3dadd( 146.117, -585.511, 6.12232, 1.08 ) }
    dend_50 { pt3dadd( 147.74, -588.146, 5.37426, 0.72 ) }
    dend_50 { pt3dadd( 149.455, -590.813, 4.59781, 1.32 ) }
    dend_50 { pt3dadd( 150.984, -593.174, 3.85073, 0.72 ) }
    dend_50 { pt3dadd( 151.736, -594.372, 3.41761, 0.72 ) }
    dend_50 { pt3dadd( 153.625, -597.606, 2.15203, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 68.8236, -480.335, 6.71556, 1.08 ) }
    dend_47 { pt3dadd( 69.0563, -482.521, 6.45397, 1.08 ) }
    dend_47 { pt3dadd( 69.2328, -483.963, 6.345, 1.08 ) }
    dend_47 { pt3dadd( 69.3287, -485.005, 6.3062, 1.08 ) }
    dend_47 { pt3dadd( 69.5704, -486.962, 6.13405, 1.08 ) }
    dend_47 { pt3dadd( 69.9581, -489.315, 5.84005, 1.44 ) }
    dend_47 { pt3dadd( 70.3908, -491.574, 5.53089, 0.96 ) }
    dend_47 { pt3dadd( 70.8149, -493.435, 5.28608, 0.96 ) }
    dend_47 { pt3dadd( 71.2992, -495.24, 5.03427, 0.96 ) }
    dend_47 { pt3dadd( 72.2235, -498.643, 4.60535, 0.96 ) }
    dend_47 { pt3dadd( 72.8167, -500.867, 4.38271, 0.84 ) }
    dend_47 { pt3dadd( 73.1571, -502.178, 4.29296, 1.44 ) }
    dend_47 { pt3dadd( 73.6405, -504.208, 4.18648, 1.08 ) }
    dend_47 { pt3dadd( 74.0092, -505.837, 4.1525, 1.08 ) }
    dend_47 { pt3dadd( 74.5312, -508.254, 4.171, 1.56 ) }
    dend_47 { pt3dadd( 75.2299, -512.027, 4.36285, 1.32 ) }
    dend_47 { pt3dadd( 75.5611, -513.909, 4.45721, 0.96 ) }
    dend_47 { pt3dadd( 75.8877, -515.785, 4.52727, 1.32 ) }
    dend_47 { pt3dadd( 76.5081, -519.28, 4.63662, 1.08 ) }
    dend_47 { pt3dadd( 76.9248, -521.48, 4.67665, 0.72 ) }
    dend_47 { pt3dadd( 77.303, -523.411, 4.66762, 1.32 ) }
    dend_47 { pt3dadd( 77.8102, -526.113, 4.65437, 1.08 ) }
    dend_47 { pt3dadd( 78.1904, -528.269, 4.65226, 1.56 ) }
    dend_47 { pt3dadd( 78.6025, -530.744, 4.6719, 0.84 ) }
    dend_47 { pt3dadd( 79.0943, -533.761, 4.69969, 0.6 ) }
    dend_47 { pt3dadd( 79.3072, -535.062, 4.71437, 1.08 ) }
    dend_47 { pt3dadd( 79.7551, -537.824, 4.74029, 1.2 ) }
    dend_47 { pt3dadd( 80.1637, -540.299, 4.77469, 0.72 ) }
    dend_47 { pt3dadd( 80.3076, -541.122, 4.78818, 0.72 ) }
    dend_47 { pt3dadd( 81.0274, -545.061, 4.84237, 1.32 ) }
    dend_47 { pt3dadd( 81.1789, -545.779, 4.86177, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 67.8363, -329.075, -6.569, 0.96 ) }
    dend_34 { pt3dadd( 68.4427, -327.828, -4.57578, 0.96 ) }
    dend_34 { pt3dadd( 68.6866, -327.327, -3.77399, 0.96 ) }
    dend_34 { pt3dadd( 68.9837, -326.716, -2.79733, 0.84 ) }
    dend_34 { pt3dadd( 69.6986, -325.246, -0.447516, 0.84 ) }
    dend_34 { pt3dadd( 70.1315, -324.356, 0.975346, 1.08 ) }
    dend_34 { pt3dadd( 70.5088, -323.58, 2.21582, 1.08 ) }
    dend_34 { pt3dadd( 72.8331, -317.464, 10.7096, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 67.8363, -329.075, -6.569, 0.6 ) }
    dend_31 { pt3dadd( 68.3939, -330.994, -5.24039, 0.6 ) }
    dend_31 { pt3dadd( 68.9244, -333.475, -3.46996, 1.08 ) }
    dend_31 { pt3dadd( 69.3883, -336.236, -1.59671, 0.96 ) }
    dend_31 { pt3dadd( 69.6488, -337.788, -0.55607, 0.96 ) }
    dend_31 { pt3dadd( 69.9204, -339.406, 0.528958, 1.32 ) }
    dend_31 { pt3dadd( 70.4169, -342.364, 2.51254, 1.08 ) }
    dend_31 { pt3dadd( 70.5554, -343.647, 3.38011, 1.08 ) }
    dend_31 { pt3dadd( 70.6843, -346.226, 5.17049, 1.08 ) }
    dend_31 { pt3dadd( 70.7874, -348.646, 6.78833, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 77.5268, -432.549, -33.1025, 0.72 ) }
    dend_27 { pt3dadd( 77.5414, -434.331, -33.6121, 0.72 ) }
    dend_27 { pt3dadd( 77.5863, -436.036, -34.0475, 0.72 ) }
    dend_27 { pt3dadd( 77.6323, -438.371, -34.654, 0.72 ) }
    dend_27 { pt3dadd( 77.6257, -439.921, -35.0433, 0.72 ) }
    dend_27 { pt3dadd( 77.6254, -440.633, -35.2222, 0.72 ) }
    dend_27 { pt3dadd( 77.659, -443.085, -35.826, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 77.6568, -444.374, -36.1165, 0.6 ) }
    dend_27 { pt3dadd( 77.6421, -445.498, -36.3557, 0.6 ) }
    dend_27 { pt3dadd( 77.5947, -447.44, -36.7258, 0.48 ) }
    dend_27 { pt3dadd( 77.5569, -448.534, -36.95, 0.48 ) }
    dend_27 { pt3dadd( 77.4431, -450.848, -37.4497, 0.84 ) }
    dend_27 { pt3dadd( 77.1975, -453.465, -38.0585, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 77.5268, -432.549, -33.1025, 0.72 ) }
    dend_24 { pt3dadd( 78.9629, -435.59, -32.9417, 0.72 ) }
    dend_24 { pt3dadd( 80.9846, -439.871, -32.7152, 1.2 ) }
    dend_24 { pt3dadd( 81.657, -441.295, -32.6399, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 81.1789, -545.779, 4.86177, 0.48 ) }
    dend_49 { pt3dadd( 81.0691, -546.877, 3.35468, 0.48 ) }
    dend_49 { pt3dadd( 81.0519, -547.055, 3.0804, 0.48 ) }
    dend_49 { pt3dadd( 81.0129, -547.686, 2.20769, 0.48 ) }
    dend_49 { pt3dadd( 80.9042, -548.526, 1.24162, 0.48 ) }
    dend_49 { pt3dadd( 80.8275, -548.943, 0.819261, 0.48 ) }
    dend_49 { pt3dadd( 80.591, -550.084, -0.293841, 0.96 ) }
    dend_49 { pt3dadd( 80.2532, -551.458, -1.58998, 0.6 ) }
    dend_49 { pt3dadd( 79.9731, -552.55, -2.55426, 0.6 ) }
    dend_49 { pt3dadd( 79.5106, -554.249, -3.9804, 1.08 ) }
    dend_49 { pt3dadd( 79.1419, -555.509, -4.994, 0.84 ) }
    dend_49 { pt3dadd( 78.8835, -556.356, -5.62687, 0.84 ) }
    dend_49 { pt3dadd( 78.5338, -557.465, -6.34365, 1.2 ) }
    dend_49 { pt3dadd( 78.0927, -558.699, -7.10979, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 81.1789, -545.779, 4.86177, 0.84 ) }
    dend_48 { pt3dadd( 82.1235, -548.874, 5.07774, 0.84 ) }
    dend_48 { pt3dadd( 82.5279, -550.35, 5.08184, 0.84 ) }
    dend_48 { pt3dadd( 82.8611, -551.66, 5.06956, 0.84 ) }
    dend_48 { pt3dadd( 83.7143, -554.993, 5.03304, 0.84 ) }
    dend_48 { pt3dadd( 84.0288, -556.229, 5.0246, 0.84 ) }
    dend_48 { pt3dadd( 84.7491, -559.108, 5.00906, 1.44 ) }
    dend_48 { pt3dadd( 85.2886, -561.233, 4.97857, 1.08 ) }
    dend_48 { pt3dadd( 85.8643, -563.658, 4.92706, 1.08 ) }
    dend_48 { pt3dadd( 86.3581, -565.973, 4.86537, 0.84 ) }
    dend_48 { pt3dadd( 86.6241, -567.433, 4.84489, 0.84 ) }
    dend_48 { pt3dadd( 86.8583, -568.722, 4.88085, 1.08 ) }
    dend_48 { pt3dadd( 87.2005, -570.432, 5.04648, 0.6 ) }
    dend_48 { pt3dadd( 87.4853, -571.807, 5.24487, 0.6 ) }
    dend_48 { pt3dadd( 87.754, -573.247, 5.47167, 0.6 ) }
    dend_48 { pt3dadd( 88.1353, -575.148, 5.78903, 1.2 ) }
    dend_48 { pt3dadd( 88.5679, -577.045, 6.11416, 1.2 ) }
    dend_48 { pt3dadd( 88.8835, -578.358, 6.31601, 1.2 ) }
    dend_48 { pt3dadd( 89.2453, -579.841, 6.50793, 0.96 ) }
    dend_48 { pt3dadd( 89.485, -580.828, 6.62136, 1.44 ) }
    dend_48 { pt3dadd( 89.939, -582.788, 6.78877, 1.44 ) }
    dend_48 { pt3dadd( 90.5517, -585.589, 6.94406, 0.96 ) }
    dend_48 { pt3dadd( 91.1924, -588.682, 7.05902, 1.32 ) }
    dend_48 { pt3dadd( 91.4503, -589.965, 7.10652, 1.32 ) }
    dend_48 { pt3dadd( 92.0065, -592.845, 7.21227, 0.84 ) }
    dend_48 { pt3dadd( 92.4402, -595.216, 7.27424, 1.32 ) }
    dend_48 { pt3dadd( 92.6508, -596.51, 7.30685, 1.32 ) }
    dend_48 { pt3dadd( 92.9193, -598.027, 7.32459, 1.32 ) }
    dend_48 { pt3dadd( 93.4732, -600.959, 7.33801, 1.32 ) }
    dend_48 { pt3dadd( 93.8441, -602.889, 7.31501, 0.96 ) }
    dend_48 { pt3dadd( 94.1428, -604.43, 7.27027, 0.96 ) }
    dend_48 { pt3dadd( 94.8412, -607.893, 7.1897, 1.44 ) }
    dend_48 { pt3dadd( 95.2931, -610.013, 7.13535, 1.08 ) }
    dend_48 { pt3dadd( 95.6648, -611.714, 7.05506, 1.08 ) }
    dend_48 { pt3dadd( 96.0681, -613.415, 6.93909, 1.08 ) }
    dend_48 { pt3dadd( 96.5872, -615.489, 6.81769, 1.08 ) }
    dend_48 { pt3dadd( 97.1557, -617.712, 6.70384, 1.08 ) }
    dend_48 { pt3dadd( 97.9906, -620.854, 6.52095, 1.08 ) }
    dend_48 { pt3dadd( 99.2772, -625.508, 6.27071, 0.96 ) }
    dend_48 { pt3dadd( 101.293, -632.649, 5.86521, 1.32 ) }
    dend_48 { pt3dadd( 101.968, -634.997, 5.72744, 0.84 ) }
    dend_48 { pt3dadd( 102.37, -636.394, 5.64058, 0.84 ) }
    dend_48 { pt3dadd( 102.908, -638.298, 5.51409, 0.84 ) }
    dend_48 { pt3dadd( 103.3, -639.755, 5.41951, 0.84 ) }
    dend_48 { pt3dadd( 104.024, -642.626, 5.25673, 0.84 ) }
    dend_48 { pt3dadd( 104.337, -644.062, 5.15258, 0.84 ) }
    dend_48 { pt3dadd( 104.574, -645.256, 5.03867, 0.84 ) }
    dend_48 { pt3dadd( 104.793, -646.508, 4.90552, 1.2 ) }
    dend_48 { pt3dadd( 105.172, -648.869, 4.6755, 0.72 ) }
    dend_48 { pt3dadd( 105.447, -650.71, 4.45415, 1.32 ) }
    dend_48 { pt3dadd( 105.71, -652.165, 4.24852, 0.84 ) }
    dend_48 { pt3dadd( 106.027, -653.863, 3.98335, 1.56 ) }
    dend_48 { pt3dadd( 106.869, -657.986, 3.23956, 0.84 ) }
    dend_48 { pt3dadd( 107.196, -659.516, 2.92238, 1.32 ) }
    dend_48 { pt3dadd( 107.792, -662.271, 2.25806, 0.84 ) }
    dend_48 { pt3dadd( 108.665, -666.363, 1.1868, 0.6 ) }
    dend_48 { pt3dadd( 108.919, -667.579, 0.863937, 1.08 ) }
    dend_48 { pt3dadd( 109.379, -669.861, 0.254004, 0.84 ) }
    dend_48 { pt3dadd( 109.762, -671.758, -0.271342, 1.44 ) }
    dend_48 { pt3dadd( 110.14, -673.743, -0.836291, 0.96 ) }
    dend_48 { pt3dadd( 110.438, -675.384, -1.27019, 0.72 ) }
    dend_48 { pt3dadd( 110.636, -676.977, -1.67723, 0.72 ) }
    dend_48 { pt3dadd( 111.019, -679.961, -2.39206, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 70.7874, -348.646, 6.78833, 0.84 ) }
    dend_33 { pt3dadd( 71.8984, -348.223, 8.54918, 0.84 ) }
    dend_33 { pt3dadd( 72.3862, -348.037, 9.32229, 0.84 ) }
    dend_33 { pt3dadd( 73.5339, -347.599, 11.1413, 0.72 ) }
    dend_33 { pt3dadd( 74.259, -347.323, 12.2905, 0.72 ) }
    dend_33 { pt3dadd( 79.4505, -346.822, 18.7355, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 70.7874, -348.646, 6.78833, 0.72 ) }
    dend_32 { pt3dadd( 71.5587, -350.989, 7.90795, 0.72 ) }
    dend_32 { pt3dadd( 72.3765, -353.472, 9.09513, 0.84 ) }
    dend_32 { pt3dadd( 72.7218, -354.52, 9.59634, 0.84 ) }
    dend_32 { pt3dadd( 73.4448, -356.716, 10.6457, 0.6 ) }
    dend_32 { pt3dadd( 73.9453, -358.236, 11.3723, 0.6 ) }
    dend_32 { pt3dadd( 74.4686, -359.825, 12.1319, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 77.9214, -369.858, 18.4718, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 77.1975, -453.465, -38.0585, 0.48 ) }
    dend_29 { pt3dadd( 71.8192, -454.44, -39.6056, 0.48 ) }
    dend_29 { pt3dadd( 70.568, -454.666, -39.9655, 1.08 ) }
    dend_29 { pt3dadd( 69.2796, -454.9, -40.336, 0.48 ) }
    dend_29 { pt3dadd( 67.6632, -455.193, -40.801, 0.96 ) }
    dend_29 { pt3dadd( 66.2959, -455.441, -41.1943, 0.48 ) }
    dend_29 { pt3dadd( 63.6273, -455.925, -41.9619, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 77.1975, -453.465, -38.0585, 0.96 ) }
    dend_28 { pt3dadd( 77.3483, -454.666, -39.1019, 0.96 ) }
    dend_28 { pt3dadd( 77.5563, -456.8, -40.8465, 0.48 ) }
    dend_28 { pt3dadd( 77.6313, -457.644, -41.4791, 0.48 ) }
    dend_28 { pt3dadd( 77.8199, -459.376, -42.7123, 0.84 ) }
    dend_28 { pt3dadd( 77.9686, -460.637, -43.5962, 0.6 ) }
    dend_28 { pt3dadd( 78.0456, -461.247, -44.0188, 0.6 ) }
    dend_28 { pt3dadd( 78.2588, -462.565, -44.9741, 0.96 ) }
    dend_28 { pt3dadd( 78.4191, -463.443, -45.617, 0.96 ) }
    dend_28 { pt3dadd( 78.7793, -465.121, -46.9411, 0.72 ) }
    dend_28 { pt3dadd( 79.1934, -466.725, -48.3088, 0.72 ) }
    dend_28 { pt3dadd( 79.6162, -467.962, -49.5832, 1.2 ) }
    dend_28 { pt3dadd( 80.0577, -469.114, -50.8559, 1.2 ) }
    dend_28 { pt3dadd( 80.3523, -469.799, -51.6839, 1.2 ) }
    dend_28 { pt3dadd( 80.7296, -470.598, -52.7681, 1.08 ) }
    dend_28 { pt3dadd( 81.2618, -471.582, -54.2916, 0.84 ) }
    dend_28 { pt3dadd( 81.9517, -472.575, -56.0944, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 81.657, -441.295, -32.6399, 0.72 ) }
    dend_26 { pt3dadd( 84.727, -441.542, -32.5268, 0.72 ) }
    dend_26 { pt3dadd( 86.5643, -441.69, -32.4591, 0.72 ) }
    dend_26 { pt3dadd( 87.7466, -441.785, -32.4155, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 81.657, -441.295, -32.6399, 0.48 ) }
    dend_25 { pt3dadd( 81.9973, -444.852, -32.8364, 0.48 ) }
    dend_25 { pt3dadd( 82.0945, -446.863, -32.982, 0.96 ) }
    dend_25 { pt3dadd( 82.1056, -447.796, -33.0581, 0.96 ) }
    dend_25 { pt3dadd( 82.0688, -450.066, -33.2553, 0.48 ) }
    dend_25 { pt3dadd( 82.0143, -451.439, -33.3788, 0.48 ) }
    dend_25 { pt3dadd( 81.9155, -453.687, -33.5814, 0.96 ) }
    dend_25 { pt3dadd( 81.7707, -455.935, -33.7942, 0.96 ) }
    dend_25 { pt3dadd( 81.6491, -457.427, -33.9387, 0.96 ) }
    dend_25 { pt3dadd( 81.4059, -459.657, -34.1772, 1.32 ) }
    dend_25 { pt3dadd( 81.101, -461.895, -34.436, 0.96 ) }
    dend_25 { pt3dadd( 80.9868, -462.771, -34.5387, 0.96 ) }
    dend_25 { pt3dadd( 80.8814, -463.822, -34.6578, 0.96 ) }
    dend_25 { pt3dadd( 80.7661, -465.547, -34.8393, 1.32 ) }
    dend_25 { pt3dadd( 80.7362, -467.358, -35.0196, 0.96 ) }
    dend_25 { pt3dadd( 80.8108, -469.331, -35.2031, 0.6 ) }
    dend_25 { pt3dadd( 80.9646, -470.784, -35.401, 0.6 ) }
    dend_25 { pt3dadd( 81.3078, -472.557, -35.8017, 1.32 ) }
    dend_25 { pt3dadd( 81.8331, -474.376, -36.3838, 0.84 ) }
    dend_25 { pt3dadd( 82.3625, -475.871, -36.9471, 0.84 ) }
    dend_25 { pt3dadd( 82.6378, -476.541, -37.2162, 0.84 ) }
    dend_25 { pt3dadd( 83.8095, -479.198, -38.3498, 0.84 ) }
    dend_25 { pt3dadd( 85.0663, -481.96, -39.5722, 1.44 ) }
    dend_25 { pt3dadd( 86.3418, -484.898, -40.8988, 0.96 ) }
    dend_25 { pt3dadd( 86.8022, -486.159, -41.4136, 0.96 ) }
    dend_25 { pt3dadd( 87.2834, -487.901, -42.0224, 0.96 ) }
    dend_25 { pt3dadd( 87.5313, -489.194, -42.3726, 0.96 ) }
    dend_25 { pt3dadd( 87.6597, -490.55, -42.5985, 0.96 ) }
    dend_25 { pt3dadd( 87.6497, -493.8, -42.9069, 0.72 ) }
    dend_25 { pt3dadd( 87.4165, -497.171, -43.0829, 1.08 ) }
    dend_25 { pt3dadd( 87.1754, -499.408, -43.1492, 0.72 ) }
    dend_25 { pt3dadd( 86.8952, -501.513, -43.1777, 1.2 ) }
    dend_25 { pt3dadd( 86.5602, -503.943, -43.1753, 0.96 ) }
    dend_25 { pt3dadd( 86.0367, -507.761, -43.1183, 1.44 ) }
    dend_25 { pt3dadd( 85.6965, -510.371, -43.0548, 0.96 ) }
    dend_25 { pt3dadd( 85.5254, -511.861, -43.0827, 0.72 ) }
    dend_25 { pt3dadd( 85.1502, -515.571, -43.2769, 1.08 ) }
    dend_25 { pt3dadd( 84.9396, -517.79, -43.4786, 0.6 ) }
    dend_25 { pt3dadd( 84.7994, -519.252, -43.6158, 0.6 ) }
    dend_25 { pt3dadd( 84.6251, -521.037, -43.7792, 1.2 ) }
    dend_25 { pt3dadd( 84.1339, -525.161, -44.0603, 0.72 ) }
    dend_25 { pt3dadd( 83.8929, -526.872, -44.1868, 1.08 ) }
    dend_25 { pt3dadd( 83.4317, -529.484, -44.3755, 0.96 ) }
    dend_25 { pt3dadd( 82.8982, -532.053, -44.5576, 0.72 ) }
    dend_25 { pt3dadd( 82.583, -533.52, -44.6411, 0.72 ) }
    dend_25 { pt3dadd( 81.7726, -537.101, -44.7556, 0.72 ) }
    dend_25 { pt3dadd( 81.0792, -539.798, -44.7103, 0.72 ) }
    dend_25 { pt3dadd( 80.7694, -540.974, -44.7109, 1.2 ) }
    dend_25 { pt3dadd( 80.3369, -542.635, -44.8048, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, axon_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, axon_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_5 = new SectionList()
    dend_73 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_36 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 5
    dend_64 nseg = 3
    dend_66 nseg = 3
    dend_65 nseg = 3
    dend_61 nseg = 9
    dend_40 nseg = 5
    dend_19 nseg = 3
    dend_77 nseg = 7
    dend_72 nseg = 9
    dend_71 nseg = 3
    dend_68 nseg = 9
    dend_67 nseg = 7
    dend_62 nseg = 9
    dend_37 nseg = 5
    dend_20 nseg = 7
    dend_11 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 5
    dend_57 nseg = 5
    dend_44 nseg = 11
    dend_39 nseg = 9
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 5
    dend_52 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 7
    dend_53 nseg = 3
    dend_51 nseg = 5
    dend_46 nseg = 9
    dend_23 nseg = 5
    dend_50 nseg = 7
    dend_47 nseg = 3
    dend_48 nseg = 7
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_DBC_6a2bbf2a1b_0_0


