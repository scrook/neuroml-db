// Cell: cACint209_L4_LBC_45f62e2816_0_0
/*
{
  "id" : "cACint209_L4_LBC_45f62e2816_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.0460118, 9.4193, 0.0420007, 3.85614", "-0.0586314, 8.45043, 0.0375696, 7.03826", "-0.0712511, 7.48157, 0.0331385, 8.2185", "-0.0838708, 6.51271, 0.0287073, 9.16918", "-0.0964904, 5.54385, 0.0242762, 10.0966", "-0.10911, 4.57499, 0.0198451, 11.2325", "-0.12173, 3.60613, 0.0154139, 12.296", "-0.134349, 2.63727, 0.0109828, 12.2546", "-0.146969, 1.66841, 0.00655169, 11.6979", "-0.159589, 0.69955, 0.00212056, 10.9264", "-0.172208, -0.26931, -0.00231057, 9.80041", "-0.184828, -1.23817, -0.0067417, 8.57664", "-0.197448, -2.20703, -0.0111728, 7.89172", "-0.210067, -3.17589, -0.015604, 7.62756", "-0.222687, -4.14475, -0.0200351, 7.36341", "-0.235307, -5.11361, -0.0244662, 7.04275", "-0.247926, -6.08247, -0.0288973, 6.5615", "-0.260546, -7.05133, -0.0333285, 5.89923", "-0.273166, -8.02019, -0.0377596, 4.92342", "-0.285785, -8.98905, -0.0421907, 3.8632", "-0.298405, -9.95792, -0.0466218, 2.78029" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.117947, 7.01466, 10.3203, 0.55", "0.0562306, 9.20237, 10.9329, 0.55", "0.547512, 11.6024, 12.1421, 0.55", "1.06425, 13.4422, 13.2989, 0.55", "1.52858, 15.0953, 14.3384, 0.55", "2.24907, 17.6604, 15.9514, 0.55", "3.16924, 20.9365, 18.0113, 0.55", "4.18606, 23.5907, 20.1037, 0.55", "5.03032, 25.1617, 21.6382, 2.49", "7.37244, 33.9857, 25.7187, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.57205, 2.47466, -8.5197, 0.55", "3.96671, 5.17113, -8.67688, 0.55", "6.23953, 7.46965, -8.86062, 0.55", "9.45759, 10.296, -9.18173, 0.55", "11.3825, 11.8473, -9.40522, 0.28", "12.7968, 12.8811, -9.58058, 0.55", "15.2966, 14.5617, -9.90331, 0.28", "16.5505, 15.1997, -10.0407, 0.55", "18.7316, 16.0709, -10.2403, 0.28", "19.1441, 16.2052, -10.2678, 0.83", "20.7357, 16.7211, -10.2796, 0.28", "22.3868, 17.3299, -10.1818, 0.28", "24.641, 18.4116, -9.86234, 0.55", "26.1612, 19.3609, -9.57538, 0.28", "26.769, 19.9087, -9.39483, 0.55", "28.1566, 21.5176, -8.88194, 0.28", "28.8427, 22.5021, -8.60966, 0.55", "30.0358, 24.5207, -8.13298, 0.28", "30.5612, 25.5218, -7.93106, 0.55", "32.01, 28.614, -7.28632, 0.28", "32.6131, 30.0733, -7.00557, 0.55", "33.2855, 31.9787, -6.67849, 0.28", "33.6923, 33.1315, -6.4709, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.89205, 6.17466, -1.4497, 0.55", "6.55689, 7.83499, -1.68706, 0.55", "8.98061, 9.34037, -2.00546, 0.55", "11.2152, 10.5908, -2.32714, 0.83", "14.3934, 12.2345, -2.72763, 0.83", "16.7069, 13.3115, -2.98998, 1.11", "19.3767, 14.4042, -3.2234, 0.55", "22.0618, 15.2611, -3.3996, 0.55", "24.1582, 15.8335, -3.47799, 0.83", "26.5181, 16.369, -3.49246, 0.55", "29.2756, 16.8558, -3.39112, 0.83", "31.4882, 17.2071, -3.2076, 0.55", "32.2509, 17.315, -3.14509, 0.55", "35.2988, 17.7985, -2.99196, 0.83", "38.2863, 18.5038, -3.03623, 0.83", "40.4131, 19.1413, -3.21731, 0.83", "42.7761, 20.0583, -3.54281, 0.83", "44.4407, 20.8436, -3.85669, 0.83", "46.8506, 22.1913, -4.41918, 0.83", "49.0065, 23.6493, -5.03592, 0.55", "51.246, 25.4855, -5.75595, 0.55", "52.4403, 26.5199, -6.16285, 0.55", "54.482, 28.3806, -6.91894, 0.55", "56.3393, 30.0801, -7.63959, 0.83", "58.1992, 31.7027, -8.38646, 0.55", "59.3638, 32.6403, -8.85395, 0.55", "61.547, 34.3146, -9.77436, 0.55", "63.9074, 35.8885, -10.6939, 0.83", "66.3834, 37.3981, -11.5427, 0.55", "67.4359, 38.007, -11.848, 0.55", "68.4895, 38.6237, -12.1173, 0.55", "69.3114, 39.1423, -12.3105, 0.55", "72.7667, 41.5297, -13.0232, 0.55", "75.9938, 43.8577, -13.5806, 0.28", "77.08, 44.6888, -13.7689, 0.55", "79.2604, 46.4418, -14.1823, 0.28", "80.3331, 47.3186, -14.3951, 0.83", "82.0101, 48.6675, -14.728, 0.28", "82.8937, 49.3811, -14.9019, 0.83", "84.3596, 50.4471, -15.1734, 0.28", "85.6997, 51.3258, -15.4001, 0.55", "87.8393, 52.624, -15.7099, 0.28", "90.4225, 54.0605, -16.0541, 0.55", "91.4279, 54.6093, -16.1777, 0.55", "93.5479, 55.7696, -16.4271, 0.28", "94.7737, 56.474, -16.5712, 0.83", "96.3612, 57.4245, -16.7763, 0.28", "96.8345, 57.723, -16.8385, 0.55", "98.5327, 58.7875, -17.0835, 0.28", "99.3733, 59.3263, -17.2084, 0.83", "101.376, 60.6295, -17.6311, 0.28", "102.523, 61.4144, -17.9165, 0.55", "103.894, 62.4482, -18.2711, 0.55", "106.209, 64.358, -18.8891, 0.28", "107.134, 65.1527, -19.1396, 0.83", "109.999, 67.7364, -19.9163, 0.28", "111.936, 69.604, -20.4511, 0.83", "115.031, 72.7813, -21.3071, 0.28", "116.375, 74.2744, -21.6777, 0.55", "117.492, 75.5991, -21.9632, 0.28", "118.366, 76.6598, -22.1684, 0.55", "119.144, 77.6126, -22.2912, 0.28", "120.349, 78.9165, -22.4952, 0.55", "121.382, 79.8858, -22.6724, 0.28", "122.039, 80.4719, -22.775, 0.55", "123.885, 82.0803, -23.0603, 0.28", "125.195, 83.2388, -23.2593, 0.83", "128.07, 85.9191, -23.7181, 0.28", "128.89, 86.7285, -23.8653, 0.55", "130.269, 88.1648, -24.1228, 0.55", "131.994, 90.1315, -24.4057, 0.28", "133.027, 91.4366, -24.5503, 0.83", "134.461, 93.4459, -24.6903, 0.28", "135.228, 94.6624, -24.6869, 0.83", "135.871, 95.7348, -24.6402, 0.83", "136.928, 97.4883, -24.4586, 0.28", "137.246, 98.0213, -24.3747, 0.55", "138.803, 100.53, -23.9501, 0.28", "139.14, 101.086, -23.8524, 0.28", "139.449, 101.621, -23.8045, 0.83", "140.21, 102.96, -23.83, 0.28", "140.753, 103.899, -23.9305, 0.55", "141.757, 105.534, -24.1562, 0.28", "142.187, 106.206, -24.2457, 0.55", "143.463, 108.058, -24.4282, 0.28", "145.328, 110.573, -24.5905, 0.28", "145.931, 111.361, -24.6151, 0.83", "147.326, 113.104, -24.7412, 0.83", "149.618, 115.865, -25.0034, 0.28", "152.283, 118.985, -25.3697, 0.28", "155.657, 122.789, -25.8885, 0.28", "157.504, 124.846, -26.2162, 0.83", "160.645, 128.31, -26.8572, 0.28", "161.043, 128.746, -26.9589, 0.55", "161.9, 129.637, -27.2602, 0.28", "162.731, 130.464, -27.6718, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.60205, 4.18466, 8.8103, 0.83", "5.81353, 3.7517, 9.79721, 0.83", "7.27241, 3.36152, 10.3989, 0.83", "9.97925, 2.41366, 11.5036, 0.83", "13.8314, 0.742437, 13.0839, 0.83", "16.8196, -0.767543, 14.42, 0.55", "18.7333, -1.8422, 15.3006, 0.55", "20.5334, -3.14403, 16.1697, 0.83", "23.2641, -5.48831, 17.4839, 0.55", "24.5855, -6.8041, 18.0945, 0.83", "26.1814, -8.58368, 18.6743, 0.83", "27.2966, -9.9232, 19.0449, 1.11", "28.4596, -11.5388, 19.4763, 0.55", "29.3204, -12.8091, 19.7914, 0.83", "30.0888, -13.9363, 20.0839, 0.55", "31.7607, -16.2467, 20.7559, 0.55", "33.4958, -18.7047, 21.6085, 0.55", "34.4194, -20.074, 22.1603, 0.55", "35.0331, -21.0609, 22.602, 0.55", "36.4858, -23.4502, 23.7051, 0.83", "38.2687, -26.1806, 25.0544, 0.83", "39.9565, -28.4539, 26.2483, 0.55", "41.5273, -30.264, 27.3312, 0.55", "43.9026, -32.5247, 28.8913, 0.55", "45.3867, -33.8834, 29.8593, 0.55", "47.2998, -35.4429, 31.0263, 0.55", "48.5519, -36.2511, 31.7731, 0.55", "52.3677, -38.0272, 33.8372, 0.55", "54.7535, -38.7273, 35.1827, 0.28", "61.7502, -44.4843, 39.4139, 0.28", "68.5633, -50.7429, 43.2101, 0.28", "74.9203, -57.1926, 47.4516, 0.28", "80.6724, -63.6699, 52.4474, 0.28", "86.2521, -71.104, 56.1353, 0.28", "92.2114, -77.3044, 61.2384, 0.28", "98.5119, -84.4459, 64.2884, 0.28", "103.119, -93.1304, 66.1187, 0.28", "108.654, -101.002, 68.8391, 0.28", "114.186, -108.983, 71.2264, 0.28", "119.628, -117.262, 72.5883, 0.28", "122.949, -126.254, 75.4359, 0.28", "124.848, -135.82, 77.6449, 0.28", "128.741, -144.844, 79.4959, 0.28", "132.764, -153.649, 82.0022, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.497947, -3.48534, -10.1097, 0.83", "0.976004, -1.89113, -10.1594, 0.83", "2.41352, -0.336337, -10.2079, 1.11", "4.37711, 1.78746, -10.2741, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.93795, 5.40466, -5.2197, 0.83", "-6.1732, 7.68945, -4.98141, 0.83", "-7.59179, 10.3134, -4.70774, 1.38", "-9.11524, 13.1313, -4.41385, 0.83", "-10.566, 15.8147, -4.13398, 1.11", "-11.7719, 18.0452, -3.90135, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.00795, -10.1953, -1.2597, 3.88", "-1.62795, -11.9453, -1.2597, 3.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.298405, -9.95792, -0.0466218, 0.55", "-0.493767, -24.9566, -0.0466218, 0.55", "-0.689129, -39.9554, -0.0466218, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.37711, 1.78746, -10.2741, 0.83", "7.0276, 2.82734, -10.7841, 0.83", "8.70934, 3.55709, -11.1668, 0.83", "10.6834, 4.47658, -11.6303, 1.11", "14.1263, 6.21131, -12.4165, 0.83", "15.4026, 6.93887, -12.6922, 0.83", "18.147, 8.65836, -13.2643, 1.11", "20.1098, 10.0353, -13.6206, 0.55", "21.35, 11.015, -13.8444, 0.55", "23.1421, 12.5587, -14.1523, 0.55", "25.4669, 14.675, -14.4952, 0.55", "27.5073, 16.5657, -14.7484, 0.83", "28.9567, 17.9628, -14.8834, 0.55", "30.7233, 19.69, -15.0646, 0.83", "31.8799, 20.7488, -15.2051, 1.11", "34.0545, 22.5707, -15.4941, 0.55", "35.7996, 23.9335, -15.7598, 0.55", "39.8453, 26.9683, -16.4464, 0.83", "41.8508, 28.4143, -16.8094, 0.55", "44.9932, 30.6134, -17.4031, 0.55", "47.3478, 32.2293, -17.862, 0.83", "49.2616, 33.5313, -18.238, 0.55", "51.35, 34.9604, -18.6349, 0.55", "53.2698, 36.3001, -18.9778, 0.83", "55.3227, 37.9007, -19.2854, 0.28", "55.9629, 38.5032, -19.3854, 0.55", "56.9098, 39.4885, -19.5186, 0.28", "58.1031, 40.8122, -19.6522, 0.55", "59.7866, 42.8294, -19.848, 0.28", "61.2844, 44.7383, -20.0346, 0.83", "63.0495, 47.0925, -20.3717, 0.28", "63.9713, 48.3409, -20.5852, 0.28", "65.0987, 49.9119, -20.952, 0.83", "67.7877, 53.6854, -22.0093, 0.28", "68.9037, 55.251, -22.5092, 0.83", "70.8445, 58.0138, -23.4954, 0.28", "71.485, 58.9032, -23.8998, 0.55", "73.6825, 61.8931, -25.6199, 0.28", "73.9755, 62.2749, -25.8958, 0.83", "74.4109, 62.8036, -26.3624, 0.83", "75.5443, 64.1023, -27.5647, 0.83", "77.9152, 66.8244, -30.0, 0.55", "80.4322, 69.7354, -32.4819, 0.28", "82.2616, 71.9596, -34.2141, 0.83", "84.5844, 74.9222, -36.3519, 0.28", "85.7167, 76.435, -37.3949, 0.83", "88.2418, 79.8388, -39.6609, 0.28", "89.506, 81.5602, -40.7231, 0.83", "92.1149, 85.0365, -42.8098, 0.28", "92.7694, 85.8662, -43.3017, 0.55", "96.0638, 89.8353, -45.6753, 0.28", "96.6929, 90.5534, -46.1378, 0.83", "98.4249, 92.4077, -47.3834, 0.28", "99.1093, 93.1279, -47.8902, 0.83", "101.589, 95.5882, -49.6235, 0.28", "102.654, 96.7716, -50.3894, 0.83", "104.403, 98.9708, -51.5767, 0.28", "104.88, 99.6521, -51.8831, 0.83", "106.29, 101.878, -52.7308, 0.28", "106.902, 102.893, -53.0893, 0.55", "110.513, 109.052, -55.066, 0.28", "111.913, 111.35, -55.7501, 1.11", "113.94, 114.448, -56.6154, 0.28", "115.173, 116.173, -57.06, 0.28", "116.134, 117.423, -57.33, 0.83", "118.217, 120.007, -57.9815, 0.28", "119.499, 121.491, -58.3913, 1.11", "121.638, 123.959, -59.2406, 0.28", "124.575, 127.448, -60.6193, 0.28", "125.429, 128.56, -61.0743, 1.38", "128.077, 132.404, -62.6131, 0.28", "128.481, 133.067, -62.8962, 0.55", "129.163, 134.365, -63.4597, 0.28", "129.871, 135.836, -64.1069, 0.55", "131.641, 139.184, -65.56, 0.28", "132.257, 140.195, -65.9501, 0.83", "133.119, 141.359, -66.3617, 0.28", "133.851, 142.224, -66.6078, 0.55", "136.221, 144.627, -67.5331, 0.28", "139.253, 147.261, -68.8919, 0.28", "139.974, 147.798, -69.3134, 0.55", "142.393, 149.451, -71.0078, 0.28", "145.345, 151.336, -73.7532, 0.55", "149.339, 153.717, -78.5083, 0.28", "150.396, 154.307, -80.0234, 0.55", "152.477, 155.35, -83.597, 0.28", "153.073, 155.62, -84.73, 0.55", "155.228, 156.491, -89.5805, 0.28", "155.647, 156.641, -90.7141, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "4.37711, 1.78746, -10.2741, 0.55", "4.49448, 1.13557, -11.3865, 0.55", "4.84065, -0.175248, -14.0495, 0.55", "5.46852, -1.45722, -16.8622, 0.83", "6.24695, -2.75865, -19.9402, 0.55", "7.17893, -4.45962, -23.7767, 0.55", "7.48342, -5.05494, -25.0966, 0.55", "8.47375, -6.86359, -29.1698, 0.83", "9.09856, -8.06313, -31.7732, 0.83", "9.62364, -9.54003, -34.4447, 0.83", "9.97758, -10.8612, -36.4231, 1.11", "10.4335, -12.7791, -38.9372, 0.55", "10.6873, -14.2815, -40.7293, 0.55", "10.8886, -16.8394, -43.4931, 1.11", "10.9057, -20.6813, -47.4061, 0.28", "10.871, -21.5694, -48.2876, 0.55", "10.5943, -24.7297, -51.3251, 0.28", "10.4082, -26.0423, -52.5195, 1.11", "9.4828, -30.6688, -56.6986, 0.28", "9.02592, -32.5774, -58.3884, 0.28", "8.2822, -34.991, -60.4798, 1.11", "7.35891, -37.47, -62.6786, 0.28", "6.83753, -38.5872, -63.7314, 0.55", "4.87528, -42.3174, -67.4281, 0.28", "4.16244, -43.563, -68.7832, 1.38", "3.27247, -45.1361, -70.6641, 0.28", "2.32704, -46.8699, -72.8865, 0.83", "1.04765, -49.2175, -76.1143, 0.28", "0.708363, -49.8906, -77.1146, 0.83", "-0.642851, -52.9167, -81.8178, 0.28", "-0.919328, -53.6397, -83.1323, 0.28", "-1.20197, -54.4059, -84.632, 0.55", "-1.46583, -55.1354, -86.2326, 0.55", "-2.57676, -58.128, -93.1062, 0.28", "-2.68376, -58.3694, -93.692, 0.83", "-4.61273, -62.1334, -102.94, 0.28", "-4.94195, -62.6999, -104.335, 0.83", "-6.55378, -65.2552, -110.315, 0.28", "-6.85323, -65.7277, -111.364, 0.83", "-8.34736, -68.0754, -116.005, 0.28", "-8.6826, -68.6066, -116.997, 0.83", "-10.2649, -71.1903, -121.143, 0.28", "-10.8262, -72.1393, -122.639, 0.83", "-13.08, -75.9364, -127.926, 0.28", "-13.3517, -76.4166, -128.597, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-11.7719, 18.0452, -3.90135, 0.55", "-14.1375, 20.073, -2.59589, 0.55", "-15.6355, 21.4256, -1.83186, 0.83", "-16.8966, 22.5515, -1.26292, 0.28", "-17.717, 23.2458, -0.946167, 0.83", "-19.5348, 24.7971, -0.342856, 0.55", "-21.0384, 26.001, 0.0902536, 1.11", "-22.3172, 26.9665, 0.428879, 0.83", "-23.6035, 27.901, 0.742179, 0.83", "-25.4046, 29.1561, 1.09614, 0.83", "-27.4755, 30.5141, 1.41013, 0.83", "-29.6735, 31.8396, 1.61874, 0.83", "-31.9533, 33.1289, 1.9074, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.62795, -11.9453, -1.2597, 1.11", "0.912053, -16.6553, -1.2597, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.62795, -11.9453, -1.2597, 1.38", "-2.26211, -12.9069, -1.08126, 1.38", "-3.97184, -15.4993, -0.600186, 1.38", "-6.49897, -19.3311, 0.110895, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.689129, -39.9554, -0.0466218, 0.28", "-0.884491, -54.9541, -0.0466218, 0.28", "-1.07985, -69.9528, -0.0466218, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-13.3517, -76.4166, -128.597, 0.28", "-14.9521, -78.4242, -129.964, 0.28", "-15.6185, -79.2602, -130.533, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-13.3517, -76.4166, -128.597, 0.28", "-13.3421, -79.4702, -127.097, 0.28", "-13.3257, -80.2566, -126.728, 0.83", "-13.3479, -82.4438, -125.667, 0.28", "-13.442, -84.3207, -124.747, 0.28", "-13.5101, -85.0851, -124.109, 0.83", "-13.6564, -86.5795, -122.691, 0.28", "-13.6979, -86.9677, -122.297, 0.83", "-13.9286, -89.1892, -119.894, 0.28", "-14.0232, -90.1844, -118.794, 0.83", "-14.7715, -96.1232, -112.076, 0.28", "-14.862, -96.841, -111.222, 0.55", "-15.0132, -97.9106, -109.888, 0.28", "-15.0328, -98.0639, -109.687, 0.55", "-15.1136, -99.188, -108.102, 0.28", "-15.1184, -99.7018, -107.409, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-31.9533, 33.1289, 1.9074, 0.83", "-33.37, 34.7051, 2.00378, 0.83", "-34.367, 35.8144, 2.07161, 0.83", "-35.4494, 37.0185, 2.14525, 0.28", "-36.0776, 37.7174, 2.18798, 0.83", "-42.1626, 45.3891, 4.21729, 0.83", "-46.8161, 54.2383, 4.40976, 0.83", "-52.1303, 62.6501, 3.40931, 0.83", "-56.2719, 71.3142, 0.620181, 0.83", "-61.0956, 79.0398, -3.5087, 0.83", "-64.0549, 87.3569, -8.20642, 0.83", "-67.1338, 95.9552, -12.2793, 0.83", "-69.3628, 104.029, -17.7422, 0.83", "-69.8297, 113.109, -21.9058, 0.83", "-69.3773, 122.06, -26.3417, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-31.9533, 33.1289, 1.9074, 0.55", "-32.3784, 35.0326, 1.3952, 0.55", "-32.8511, 36.862, 0.933879, 0.55", "-33.0756, 37.7006, 0.73373, 1.11", "-33.4254, 39.1092, 0.426917, 0.28", "-33.6817, 40.1148, 0.195649, 0.83", "-34.1635, 41.8567, -0.298959, 0.55", "-34.8897, 44.0044, -1.00646, 0.83", "-36.027, 46.4021, -2.03253, 0.28", "-36.9569, 47.9426, -2.83971, 0.28", "-37.5648, 48.7199, -3.30406, 0.55", "-39.3844, 50.4588, -4.48433, 0.55", "-41.4285, 51.9109, -5.61068, 0.83", "-44.6398, 53.6412, -7.1908, 0.55", "-46.2248, 54.3323, -7.85309, 0.28", "-48.3246, 55.135, -8.59531, 0.83", "-50.9566, 56.1173, -9.39522, 0.55", "-52.481, 56.678, -9.77309, 0.55", "-53.9298, 57.2681, -10.0883, 0.83", "-55.7329, 58.1061, -10.3269, 0.28", "-56.8306, 58.6498, -10.4498, 0.55", "-58.9777, 59.7942, -10.6613, 0.28", "-59.8341, 60.3041, -10.7433, 0.55", "-61.2178, 61.1367, -10.8501, 0.55", "-64.2313, 62.9332, -11.0378, 0.28", "-65.8367, 63.8816, -11.1408, 0.83", "-68.4343, 65.4987, -11.2994, 0.28", "-71.9612, 67.7982, -11.5355, 0.28", "-74.4929, 69.5733, -11.7619, 0.83", "-77.6065, 71.9483, -12.104, 0.28", "-78.7791, 72.9621, -12.2569, 0.83", "-81.0245, 75.0806, -12.5489, 0.28", "-82.2788, 76.3932, -12.7612, 0.55", "-84.3965, 78.8084, -13.1933, 0.28", "-85.3768, 80.0669, -13.4427, 0.55", "-86.0484, 80.9522, -13.6291, 0.28", "-86.7628, 81.8523, -13.831, 0.55", "-88.9053, 84.3294, -14.6222, 0.28", "-89.8969, 85.3894, -15.0451, 0.55", "-90.89, 86.3541, -15.5905, 0.28", "-92.1687, 87.4928, -16.3558, 0.28", "-93.4358, 88.5321, -17.1621, 0.55", "-95.6299, 90.3008, -18.6733, 0.28", "-96.1236, 90.6875, -19.0118, 0.55", "-98.0307, 92.1982, -20.3137, 0.28", "-99.2615, 93.1786, -21.1716, 0.83", "-102.319, 95.6513, -23.3537, 0.28", "-103.718, 96.73, -24.349, 0.83", "-106.184, 98.5958, -26.0577, 0.28", "-107.731, 99.7691, -27.1272, 0.28", "-108.104, 100.053, -27.368, 0.55", "-109.243, 100.914, -28.0781, 0.28", "-111.187, 102.361, -29.2098, 1.11", "-114.907, 105.049, -31.2124, 0.28", "-115.206, 105.264, -31.3611, 0.55", "-117.335, 106.74, -32.2975, 0.28", "-117.773, 107.025, -32.47, 0.55", "-118.946, 107.694, -32.8928, 0.28", "-119.697, 108.009, -33.2434, 0.55", "-120.821, 108.237, -33.9025, 0.28", "-121.55, 108.34, -34.3891, 0.55", "-123.733, 108.52, -35.9686, 0.28", "-125.501, 108.657, -37.2307, 0.83", "-129.211, 108.99, -39.8743, 0.28", "-130.016, 109.173, -40.4359, 0.55", "-131.571, 109.73, -41.4888, 0.28", "-132.232, 110.079, -41.8552, 0.55", "-133.383, 110.93, -42.2992, 0.28", "-134.534, 111.941, -42.6235, 0.83", "-138.109, 115.6, -43.1766, 0.28", "-138.691, 116.259, -43.2617, 0.55", "-140.419, 118.424, -43.471, 0.28", "-141.305, 119.631, -43.5678, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "0.912053, -16.6553, -1.2597, 0.83", "0.772173, -18.1725, -1.32294, 0.83", "0.674419, -19.3347, -1.31134, 0.28", "0.540092, -21.3518, -1.19152, 1.11", "0.453577, -23.8527, -0.918422, 0.55", "0.367278, -26.9126, -0.511589, 0.55", "0.361249, -29.0604, -0.181962, 1.11", "0.460164, -32.8904, 0.643775, 1.11", "0.553713, -35.2381, 1.27021, 0.83", "0.716725, -37.7076, 2.06999, 0.83", "0.782996, -38.4423, 2.34004, 0.83", "1.04815, -41.2177, 3.39219, 0.83", "1.30552, -43.9303, 4.51245, 0.83", "1.43843, -45.7861, 5.28587, 0.83", "1.50401, -47.8815, 6.20677, 0.83", "1.46965, -50.1526, 7.23525, 0.83", "1.36328, -52.6893, 8.47703, 0.83", "1.18024, -56.2091, 10.2915, 0.83", "1.1067, -59.0487, 11.8226, 0.83", "1.15327, -62.2162, 13.7451, 0.83", "1.30875, -65.1168, 15.6218, 0.83", "1.59622, -67.3549, 17.155, 0.83", "1.86755, -68.7272, 18.0871, 0.83", "2.24519, -70.1844, 19.0674, 0.83", "2.64656, -71.2893, 19.8798, 0.55", "3.69829, -73.4516, 21.2963, 0.83", "4.83992, -75.3477, 22.5233, 0.55", "5.84926, -77.213, 23.5265, 0.83", "5.31278, -85.9147, 28.4248, 0.83", "4.29071, -94.1513, 34.0028, 0.83", "3.97451, -101.522, 40.7537, 0.83", "4.95083, -108.168, 48.1617, 0.83", "6.98412, -113.529, 56.3545, 0.83", "7.84745, -116.987, 65.698, 0.83", "10.2811, -119.922, 74.9426, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.912053, -16.6553, -1.2597, 0.83", "2.75529, -17.7811, -0.970083, 0.83", "5.3538, -19.1916, -0.507392, 0.83", "6.38901, -19.7645, -0.271581, 0.83", "8.01773, -20.6653, 0.106149, 0.55", "8.97956, -21.2333, 0.327789, 1.11", "10.5481, -22.1797, 0.683132, 0.83", "12.7848, -23.5593, 1.15041, 0.83", "14.9907, -24.9908, 1.57741, 0.83", "17.4245, -26.7261, 1.89703, 0.83", "19.3627, -28.2695, 2.04387, 0.55", "20.2899, -29.1027, 2.04084, 0.83", "21.6125, -30.4072, 1.89967, 0.28", "22.5777, -31.4052, 1.68802, 0.55", "24.3115, -32.9545, 1.18426, 0.28", "24.6196, -33.1872, 1.1072, 0.83", "26.2578, -34.2573, 0.842184, 0.28", "26.9732, -34.6902, 0.806722, 0.28", "28.7131, -35.6629, 0.883919, 0.83", "31.6232, -37.2082, 1.24095, 0.83", "33.6179, -38.2494, 1.53215, 0.55", "35.8431, -39.4015, 1.82605, 0.83", "37.6613, -40.2491, 2.0812, 0.28", "38.7249, -40.7248, 2.25963, 0.83", "41.0255, -41.6904, 2.69473, 0.28", "42.913, -42.4374, 3.11553, 0.55", "44.9762, -43.1298, 3.58782, 0.55", "48.2464, -44.0287, 4.39644, 0.55", "50.0283, -44.4992, 4.8777, 0.28", "50.541, -44.639, 5.03606, 0.55", "52.8605, -45.2103, 5.81021, 0.28", "54.1355, -45.532, 6.2704, 0.55", "55.3104, -45.8476, 6.66154, 0.28", "56.264, -46.1507, 6.92941, 0.83", "58.1437, -46.8093, 7.34613, 0.55", "60.7404, -47.8424, 7.85014, 0.55", "62.5747, -48.6022, 8.13142, 0.55", "63.3965, -48.9394, 8.2529, 0.28", "63.8896, -49.1556, 8.32033, 0.83", "65.4759, -49.9109, 8.54622, 0.83", "67.007, -50.7501, 8.77666, 0.28", "67.9389, -51.3274, 8.89178, 0.55", "69.4718, -52.2417, 9.04958, 0.28", "70.518, -52.8003, 9.13083, 0.83", "72.3115, -53.6738, 9.23028, 0.28", "73.0177, -54.0134, 9.25677, 0.55", "75.1015, -55.1245, 9.29686, 0.28", "76.3132, -55.8526, 9.29748, 0.83", "77.4407, -56.5589, 9.27379, 0.28", "78.9435, -57.5023, 9.22813, 0.83", "81.4387, -59.0908, 9.1416, 0.28", "83.0975, -60.1944, 9.11172, 0.55", "85.1611, -61.7088, 9.15147, 0.55", "94.2355, -65.8841, 9.62203, 0.55", "102.654, -71.2317, 10.3538, 0.55", "111.399, -76.0332, 9.66541, 0.55", "120.514, -79.9623, 10.8762, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.49897, -19.3311, 0.110895, 1.11", "-8.35275, -23.6935, 0.957923, 1.11", "-9.44904, -26.2733, 1.45884, 1.11", "-11.1327, -30.2354, 2.22815, 1.11", "-12.3843, -33.1806, 2.8, 0.83", "-13.8565, -36.6451, 3.47269, 0.83", "-14.9777, -39.2834, 3.98497, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.49897, -19.3311, 0.110895, 0.83", "-9.43955, -19.1229, -2.02925, 0.83", "-10.7853, -18.9095, -3.13014, 0.83", "-12.8839, -18.4083, -4.87516, 0.55", "-14.8531, -17.742, -6.58882, 0.83", "-17.6852, -16.6698, -8.95737, 0.55", "-21.6073, -15.0541, -12.0835, 0.55", "-23.3098, -14.1975, -13.4049, 0.55", "-24.6252, -13.4545, -14.4773, 0.83", "-26.6321, -12.1282, -16.1311, 0.83", "-28.0443, -11.0904, -17.1425, 0.55", "-29.323, -10.0795, -17.9237, 0.83", "-31.6737, -8.1313, -18.649, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-141.305, 119.631, -43.5678, 0.28", "-138.558, 122.41, -42.8391, 0.28", "-137.814, 122.979, -42.5195, 0.83", "-136.192, 123.901, -41.473, 0.55", "-134.722, 124.597, -40.6018, 0.55", "-131.807, 125.733, -39.0266, 0.28", "-130.508, 126.173, -38.324, 0.55", "-127.475, 126.828, -36.9885, 0.55", "-122.705, 127.609, -35.2457, 0.28", "-119.861, 127.962, -34.1877, 0.55", "-117.154, 128.193, -33.2786, 0.28", "-115.262, 128.292, -32.8785, 0.55", "-109.751, 128.619, -32.4249, 0.28", "-108.391, 128.686, -32.6484, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-141.305, 119.631, -43.5678, 0.28", "-144.193, 123.701, -42.7727, 0.28", "-145.542, 125.631, -42.3891, 0.83", "-146.838, 127.429, -42.045, 0.28", "-147.528, 128.375, -41.8374, 0.55", "-149.36, 130.81, -41.2711, 0.28", "-149.761, 131.292, -41.1972, 0.55", "-151.201, 132.877, -41.078, 0.28", "-152.425, 134.141, -41.0244, 0.55", "-153.816, 135.503, -41.0848, 0.28", "-154.452, 136.099, -41.2006, 0.55", "-158.82, 139.976, -42.5783, 0.28", "-159.859, 140.89, -43.0734, 0.55", "-161.09, 141.957, -43.7675, 0.28", "-161.51, 142.346, -44.0332, 0.55", "-164.698, 145.511, -46.344, 0.28", "-165.915, 146.827, -47.351, 0.83", "-170.195, 151.801, -51.2681, 0.28", "-171.047, 152.811, -52.0944, 0.55", "-172.533, 154.615, -53.6016, 0.28", "-173.942, 156.371, -54.9941, 0.55", "-175.196, 157.998, -56.1689, 0.28", "-175.951, 158.988, -56.7727, 0.55", "-177.695, 161.217, -57.8791, 0.28", "-178.489, 162.106, -58.2381, 1.38", "-182.975, 166.54, -59.6553, 0.28", "-184.154, 167.648, -59.8156, 0.55", "-185.992, 169.311, -59.8272, 0.28", "-187.309, 170.499, -59.7761, 1.94", "-192.024, 174.7, -59.2368, 0.28", "-192.888, 175.441, -59.0958, 0.55", "-196.968, 178.571, -58.0242, 0.28", "-198.42, 179.625, -57.6249, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.9777, -39.2834, 3.98497, 0.83", "-15.9708, -42.4316, 4.07689, 0.83", "-16.8404, -45.1884, 4.15738, 0.83", "-17.517, -47.3332, 4.22, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-14.9777, -39.2834, 3.98497, 0.83", "-16.8433, -41.1937, 1.14599, 0.83", "-18.0899, -42.8428, -1.74343, 0.55", "-18.9079, -44.2737, -4.35176, 0.83", "-19.3487, -45.5679, -6.91067, 0.55", "-19.6264, -46.5967, -8.94317, 0.55", "-19.9015, -48.3083, -12.4375, 0.83", "-19.7939, -49.4351, -14.8174, 0.83", "-19.518, -50.6305, -17.3269, 0.55", "-18.8837, -52.8948, -22.0222, 0.28", "-18.7336, -53.5419, -23.2452, 0.28", "-18.5615, -54.9791, -25.7014, 0.83", "-18.5114, -56.283, -27.5376, 0.55", "-18.4253, -57.5332, -29.1257, 0.83", "-18.338, -58.5471, -30.3698, 0.83", "-18.1317, -60.9989, -33.1258, 0.28", "-18.0009, -62.0263, -34.3365, 0.83", "-17.7335, -63.4088, -36.0002, 0.83", "-16.9866, -65.545, -38.7217, 0.28", "-16.3063, -67.0475, -40.7941, 0.83", "-15.7779, -68.0948, -42.4514, 0.83", "-14.9649, -69.7476, -45.3978, 0.28", "-14.5753, -70.7808, -47.3424, 0.28", "-14.4906, -71.324, -48.447, 0.55", "-14.4906, -72.2652, -50.3692, 0.55", "-14.5599, -73.9914, -53.9849, 0.83", "-14.7331, -75.1599, -56.358, 0.28", "-14.8629, -75.7063, -57.3586, 0.55", "-15.3009, -77.3771, -60.161, 0.28", "-15.4247, -77.925, -60.9986, 0.83", "-15.6333, -79.371, -63.0112, 0.28", "-15.7058, -79.9012, -63.7079, 0.55", "-15.915, -81.2881, -65.5377, 0.28", "-16.0099, -81.8579, -66.2889, 0.83", "-16.5775, -84.5294, -69.7656, 0.28", "-17.0057, -86.2358, -71.9613, 0.83", "-17.7778, -88.7541, -75.2169, 0.28", "-17.8944, -89.0899, -75.7054, 0.55", "-18.5165, -90.7727, -78.2668, 0.28", "-18.6645, -91.1724, -78.876, 0.55", "-19.1968, -92.8192, -81.3572, 0.28", "-19.4873, -93.8176, -82.8091, 1.11", "-20.3191, -97.596, -88.045, 0.28", "-20.4114, -98.2488, -88.9212, 0.28", "-20.496, -99.3244, -90.2551, 0.83", "-20.5963, -102.405, -93.6419, 0.28", "-20.5811, -102.99, -94.1645, 0.55", "-20.3762, -105.727, -96.1188, 0.28", "-20.2553, -107.151, -96.804, 0.83", "-20.1505, -108.87, -97.5232, 0.83", "-20.1038, -111.214, -98.2677, 0.28", "-20.1291, -114.264, -98.8895, 0.28", "-20.1431, -114.798, -98.9888, 0.83", "-20.299, -118.435, -99.6555, 0.28", "-20.3413, -119.276, -99.8198, 0.55", "-20.406, -121.701, -100.309, 0.28", "-20.5122, -125.046, -100.976, 0.28", "-20.5445, -126.697, -101.315, 1.11", "-20.4773, -130.894, -102.137, 0.28", "-20.3997, -133.672, -102.669, 0.28", "-20.3711, -134.876, -102.869, 0.55", "-20.3472, -136.248, -103.066, 0.83", "-20.3799, -137.848, -103.294, 0.83", "-20.6064, -142.257, -103.893, 0.28", "-20.6957, -143.385, -104.078, 0.83", "-20.9177, -146.204, -104.675, 0.28", "-20.9358, -146.477, -104.744, 0.83", "-21.1599, -150.362, -105.874, 0.28", "-21.2202, -151.437, -106.281, 0.83", "-21.3946, -155.472, -108.106, 0.28", "-21.4226, -156.54, -108.595, 1.11", "-21.477, -158.787, -109.624, 0.28", "-21.5132, -159.928, -110.147, 0.83", "-21.6232, -164.115, -112.012, 0.28", "-21.6485, -164.819, -112.358, 0.55", "-21.7806, -166.523, -113.212, 0.28", "-21.8855, -167.813, -113.831, 0.55", "-22.1797, -171.8, -115.673, 0.28", "-22.2451, -173.113, -116.247, 0.55", "-22.2865, -175.785, -117.382, 0.28", "-22.2361, -177.478, -118.127, 0.55", "-22.0955, -179.293, -118.919, 0.55", "-21.513, -184.074, -120.848, 0.28", "-21.3357, -185.091, -121.226, 0.55", "-20.5102, -188.982, -122.639, 0.28", "-20.1634, -190.343, -123.151, 0.55", "-19.3926, -193.141, -124.269, 0.28", "-19.1558, -194.022, -124.64, 0.55", "-18.3089, -197.138, -125.967, 0.28", "-18.0667, -198.155, -126.423, 0.55", "-17.2307, -202.484, -128.411, 0.28", "-16.9919, -204.225, -129.279, 0.83", "-16.8685, -206.006, -130.201, 0.28", "-16.856, -206.901, -130.662, 0.55", "-16.9808, -209.188, -131.826, 0.28", "-17.0478, -209.964, -132.227, 0.55", "-17.386, -212.259, -133.546, 0.28", "-17.5919, -213.64, -134.377, 0.28", "-17.6828, -214.319, -134.767, 0.83", "-17.9684, -217.579, -136.591, 0.28", "-18.0226, -218.912, -137.319, 0.83", "-17.9496, -221.914, -139.001, 0.28", "-17.7258, -224.341, -140.34, 0.28", "-17.4698, -226.013, -141.263, 0.55", "-16.8123, -229.282, -142.999, 0.28", "-16.4732, -230.524, -143.636, 0.83", "-15.6586, -233.055, -144.855, 0.28", "-15.3252, -233.922, -145.223, 0.55", "-15.1155, -234.465, -145.463, 0.28", "-14.9303, -234.967, -145.666, 0.55", "-14.5548, -236.257, -146.064, 0.55", "-14.1139, -238.334, -146.804, 0.83", "-13.7516, -240.479, -147.588, 0.28", "-13.6139, -241.411, -147.93, 0.55", "-13.2967, -243.945, -148.82, 0.28", "-13.0833, -246.182, -149.564, 0.83", "-12.8111, -250.343, -150.908, 0.28", "-12.7555, -251.918, -151.435, 0.28", "-12.7559, -255.083, -152.465, 0.83", "-12.8288, -257.536, -153.201, 0.28", "-12.9635, -258.877, -153.575, 0.28", "-13.0105, -259.188, -153.65, 0.55", "-13.3302, -260.586, -153.835, 0.28", "-13.8891, -262.352, -154.064, 0.83", "-14.9884, -265.234, -154.423, 0.28", "-15.6689, -266.965, -154.631, 0.83", "-16.4193, -268.93, -154.845, 0.28", "-17.4368, -271.738, -155.095, 0.83", "-18.1991, -273.858, -155.229, 0.28", "-18.3346, -274.232, -155.25, 0.55", "-18.8628, -275.669, -155.303, 0.28", "-19.2079, -276.764, -155.319, 0.55", "-19.7374, -278.639, -155.41, 0.28", "-20.0037, -279.996, -155.603, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-31.6737, -8.1313, -18.649, 0.55", "-33.0495, -8.68868, -19.6696, 0.55", "-35.4871, -9.03344, -21.9772, 0.55", "-37.3117, -9.03062, -24.355, 0.55", "-38.2874, -9.02848, -25.7244, 0.83", "-40.3486, -9.10666, -28.8022, 0.55", "-41.1202, -9.15342, -29.9445, 0.55", "-43.926, -9.49184, -34.7359, 0.55", "-46.3742, -9.90408, -39.4471, 0.28", "-46.9544, -10.0059, -40.5475, 0.83", "-48.8694, -10.4045, -44.0187, 0.28", "-49.4459, -10.5935, -45.0121, 0.55", "-51.1567, -11.475, -47.8064, 0.28", "-51.9494, -12.0451, -48.9344, 0.55", "-52.708, -12.521, -49.8279, 0.55", "-53.6634, -12.934, -50.9943, 0.55", "-56.2558, -13.5622, -54.1081, 0.28", "-56.4405, -13.5644, -54.3351, 0.55", "-59.0815, -13.0027, -57.455, 0.28", "-60.0836, -12.5418, -58.6491, 0.55", "-62.238, -11.0735, -61.0945, 0.28", "-63.055, -10.3148, -61.9686, 0.55", "-64.6308, -8.55158, -63.3668, 0.28", "-65.1353, -7.92787, -63.6856, 0.55", "-67.2116, -5.0878, -64.8111, 0.28", "-68.7573, -2.90955, -65.5728, 0.55", "-70.2228, -0.903228, -66.1517, 0.28", "-70.9919, 0.0827812, -66.4515, 0.55", "-73.9974, 3.59975, -67.3476, 0.28", "-77.6803, 7.10779, -68.599, 0.55", "-81.0087, 9.67087, -69.692, 0.28", "-82.0425, 10.2837, -70.01, 0.55", "-83.7649, 11.1033, -70.4874, 0.28", "-86.322, 12.1578, -71.2317, 0.55", "-93.0277, 14.4449, -73.1768, 0.28", "-94.4603, 14.8797, -73.5578, 0.83", "-97.3822, 15.6739, -74.4672, 0.28", "-99.3615, 16.2001, -75.1557, 0.28", "-101.323, 16.7328, -75.8759, 0.83", "-102.346, 17.0508, -76.1176, 0.83", "-107.345, 18.8075, -76.3076, 0.28", "-108.529, 19.1828, -76.4363, 0.55", "-112.742, 20.1909, -76.7127, 0.28", "-114.712, 20.5025, -76.7076, 1.11", "-124.46, 21.501, -76.6014, 0.28", "-126.61, 21.6322, -76.6278, 0.83", "-134.892, 21.7289, -76.7583, 0.28", "-139.263, 21.6795, -77.5344, 0.83", "-142.57, 21.5928, -78.6624, 0.28", "-145.789, 21.4444, -80.2486, 0.55", "-147.58, 21.3737, -81.5065, 0.28", "-148.703, 21.4012, -82.3473, 0.55", "-152.425, 21.8693, -85.6965, 0.28", "-152.804, 21.9291, -86.1862, 0.55", "-153.552, 22.0501, -87.3401, 0.55", "-155.636, 22.3768, -90.7025, 0.55", "-156.424, 22.5336, -92.1335, 0.28", "-158.18, 22.9711, -95.5679, 0.55", "-160.391, 23.452, -100.174, 0.55", "-161.472, 23.6658, -102.55, 0.28", "-161.813, 23.7391, -103.31, 0.83", "-164.3, 24.2719, -108.638, 0.28", "-164.651, 24.3391, -109.406, 0.83", "-166.759, 24.7395, -113.849, 0.28", "-166.949, 24.7463, -114.256, 0.55", "-167.649, 24.6195, -115.818, 0.28", "-167.914, 24.5192, -116.405, 0.55", "-169.583, 23.6247, -119.751, 0.28", "-170.054, 23.411, -120.76, 0.55", "-172.071, 22.7195, -125.15, 0.28", "-172.638, 22.5746, -126.451, 0.83", "-174.661, 22.1865, -131.156, 0.28", "-174.881, 22.1492, -131.723, 0.55", "-176.639, 21.9022, -136.491, 0.28", "-176.899, 21.8256, -137.321, 0.83", "-177.672, 21.4705, -140.065, 0.28", "-177.868, 21.2933, -140.911, 0.83", "-178.952, 18.7279, -148.479, 0.28", "-179.007, 18.3557, -149.292, 0.55", "-179.036, 16.681, -152.016, 0.28", "-179.023, 16.4572, -152.346, 0.83", "-178.835, 14.6276, -154.636, 0.28", "-178.499, 12.1686, -157.332, 0.55", "-178.333, 11.0387, -158.311, 0.28", "-178.214, 10.1233, -159.142, 0.55", "-177.978, 7.50184, -161.495, 0.28", "-177.9, 6.43045, -162.547, 0.55", "-177.894, 5.36657, -163.602, 0.28", "-177.953, 4.72573, -164.209, 0.55", "-178.355, 2.52581, -166.694, 0.28", "-178.531, 1.94313, -167.484, 0.55", "-179.793, -0.652113, -171.419, 0.28", "-180.281, -1.30983, -172.795, 0.55", "-180.753, -1.73633, -174.011, 0.55", "-182.144, -2.50933, -177.204, 0.55", "-183.606, -2.80241, -180.041, 0.28", "-184.186, -2.82423, -181.119, 0.55", "-186.498, -2.36382, -184.87, 0.28", "-187.047, -2.1416, -185.821, 0.55", "-188.131, -1.42571, -187.764, 0.28", "-188.786, -0.668639, -188.735, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-31.6737, -8.1313, -18.649, 0.55", "-34.7459, -8.80445, -18.2267, 0.55", "-37.3843, -9.48978, -17.7922, 0.83", "-40.4565, -10.3293, -17.3664, 0.55", "-42.2185, -10.9023, -16.9199, 0.28", "-44.4165, -11.7317, -16.2069, 0.55", "-47.7517, -13.2288, -14.9576, 0.28", "-48.8055, -13.8045, -14.513, 0.55", "-51.513, -15.5251, -13.3945, 0.55", "-55.5732, -18.3926, -11.6565, 0.55", "-57.9096, -20.0789, -10.6644, 0.28", "-61.1017, -22.379, -9.31031, 0.55", "-62.8569, -23.6472, -8.62793, 0.55", "-65.5931, -25.6415, -7.48493, 0.55", "-66.4716, -26.2857, -7.11616, 0.83", "-68.1652, -27.4373, -6.62319, 0.28", "-68.669, -27.7533, -6.47599, 0.55", "-70.2228, -28.6099, -6.00487, 0.28", "-71.1989, -29.0953, -5.65168, 0.55", "-72.6932, -29.8291, -5.04587, 0.28", "-74.1667, -30.5628, -4.4581, 0.55", "-75.8623, -31.4664, -3.76744, 0.28", "-77.1003, -32.1228, -3.25288, 0.55", "-79.4281, -33.3493, -2.21902, 0.28", "-81.039, -34.1902, -1.45945, 0.28", "-82.1803, -34.7693, -0.877622, 0.28", "-83.6492, -35.4992, -0.10142, 0.55", "-85.3206, -36.2917, 0.694337, 0.55", "-86.9223, -37.0896, 1.4105, 0.28", "-88.2704, -37.7955, 1.95558, 0.55", "-90.417, -38.9668, 2.66716, 0.55", "-91.7416, -39.7265, 2.99623, 0.55", "-93.4181, -40.6564, 3.31629, 0.55", "-94.5095, -41.2363, 3.47901, 0.55", "-97.8767, -43.007, 3.95453, 0.55", "-100.102, -44.1491, 4.29969, 0.55", "-102.948, -45.5863, 4.74934, 0.55", "-105.881, -47.0712, 5.23337, 0.28", "-108.428, -48.3645, 5.65589, 0.55", "-111.264, -49.7633, 6.11541, 0.55", "-114.459, -51.3472, 6.61899, 0.55", "-116.792, -52.5295, 7.01418, 0.28", "-121.138, -54.8301, 7.73456, 0.55", "-122.835, -55.7806, 7.95328, 0.83", "-124.296, -56.6013, 8.11087, 0.28", "-125.157, -57.0784, 8.15756, 0.55", "-127.235, -58.2644, 8.20598, 0.28", "-127.946, -58.6843, 8.21284, 0.28", "-129.613, -59.7151, 8.23339, 0.55", "-137.334, -64.9451, 11.8447, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.517, -47.3332, 4.22, 0.83", "-16.7391, -48.4927, 5.43177, 0.83", "-16.1156, -49.628, 6.66319, 0.83", "-14.798, -52.6289, 9.73166, 0.83", "-12.7648, -58.3166, 15.1592, 0.55", "-12.1626, -60.3078, 16.9145, 0.55", "-11.6304, -62.4569, 18.7381, 0.83", "-11.1984, -65.4376, 21.2646, 0.55", "-11.0359, -67.9039, 23.2731, 0.83", "-11.052, -69.4194, 24.3571, 0.83", "-11.159, -71.4048, 25.3437, 0.83", "-11.3512, -73.5721, 26.3177, 0.83", "-11.5467, -75.7172, 27.1192, 0.55", "-11.7983, -77.4274, 27.7626, 0.55", "-12.3164, -79.9455, 28.8195, 0.55", "-13.2122, -82.8441, 30.2242, 0.55", "-14.0874, -84.8169, 31.2377, 0.55", "-15.4153, -87.289, 32.4887, 0.83", "-17.2561, -90.1807, 33.9936, 0.28", "-17.8611, -91.0101, 34.4323, 0.55", "-20.2294, -93.8714, 35.9137, 0.55", "-21.9322, -95.6672, 36.781, 0.55", "-22.9172, -96.618, 37.1328, 0.55", "-24.1153, -97.6346, 37.4047, 0.28", "-26.3181, -99.3694, 37.677, 0.55", "-28.6063, -101.06, 37.9175, 0.55", "-30.7318, -102.465, 38.0714, 0.55", "-33.6342, -104.215, 38.287, 0.55", "-35.8348, -105.466, 38.4586, 0.55", "-37.5662, -106.376, 38.5954, 0.55", "-39.3839, -107.266, 38.7786, 0.28", "-40.6117, -107.882, 38.9153, 0.55", "-43.1724, -109.333, 39.2285, 0.28", "-44.2645, -109.95, 39.3644, 0.55", "-46.0596, -119.03, 43.1517, 0.55", "-47.6, -127.974, 47.351, 0.55", "-49.2174, -135.737, 53.4428, 0.55", "-49.8788, -143.854, 59.2458, 0.55", "-51.2758, -151.779, 65.183, 0.55", "-52.9913, -160.785, 69.1752, 0.55", "-55.6175, -169.058, 74.1427, 0.55", "-59.1142, -176.888, 79.2857, 0.55", "-60.6056, -184.895, 85.088, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-17.517, -47.3332, 4.22, 0.83", "-18.3743, -51.6766, 3.38542, 0.83", "-18.9171, -54.9134, 2.76492, 0.83", "-19.6471, -59.4696, 2.14021, 0.83", "-20.1428, -62.5866, 1.82075, 0.83", "-20.8421, -66.6762, 1.5723, 0.83", "-21.485, -70.0047, 1.46249, 0.83", "-22.2585, -73.3687, 1.58336, 0.83", "-23.1812, -76.9476, 1.85976, 0.55", "-23.8221, -79.2, 2.2065, 1.11", "-24.6343, -82.1255, 2.84358, 0.55", "-25.3478, -84.6826, 3.47374, 0.55", "-26.0288, -87.3238, 4.17619, 0.55", "-26.3496, -88.6812, 4.52712, 0.55", "-26.9518, -91.8709, 5.21487, 0.83", "-27.6744, -96.999, 6.2065, 0.83", "-27.9474, -99.4517, 6.60786, 0.83", "-28.2464, -102.44, 7.03583, 0.83", "-28.4789, -104.838, 7.31912, 0.83", "-28.7927, -107.629, 7.56817, 0.83", "-29.2211, -110.968, 7.7714, 0.83", "-29.7358, -114.799, 7.992, 0.83", "-30.2631, -118.882, 8.19926, 0.83", "-30.6314, -121.913, 8.32099, 0.83", "-31.0609, -126.005, 8.52402, 0.83", "-31.4364, -130.457, 8.78409, 0.83", "-31.6454, -134.056, 9.02259, 0.83", "-31.6833, -136.6, 9.19343, 0.83", "-31.5833, -141.173, 9.51648, 0.83", "-31.4214, -143.979, 9.67828, 0.55", "-31.2371, -145.636, 9.73749, 0.55", "-31.0945, -146.504, 9.73134, 0.83", "-30.7797, -147.921, 9.64305, 0.28", "-30.4335, -149.259, 9.39928, 0.83", "-29.7987, -151.431, 8.7266, 0.28", "-29.2618, -153.461, 7.95912, 0.83", "-28.9538, -154.92, 7.41046, 0.28", "-28.7096, -156.53, 6.87259, 0.83", "-28.3742, -160.248, 5.68568, 0.28", "-28.3184, -161.812, 5.20973, 0.28", "-28.3665, -163.417, 4.69549, 0.55", "-28.5681, -166.006, 3.83073, 0.55", "-29.0535, -169.414, 2.73166, 0.55", "-29.4469, -171.212, 2.18561, 0.28", "-29.8454, -172.505, 1.82536, 0.55", "-31.1012, -175.848, 0.837283, 0.28", "-31.519, -176.83, 0.539749, 0.55", "-32.6164, -179.276, -0.184434, 0.55", "-33.7773, -181.667, -0.874676, 0.55", "-35.199, -184.73, -1.66831, 0.28", "-35.8235, -186.151, -2.01516, 0.28", "-36.7953, -188.537, -2.50212, 0.55", "-37.5234, -190.621, -2.92428, 0.28", "-37.9247, -192.052, -3.20296, 0.55", "-38.514, -194.901, -3.63858, 0.28", "-38.8632, -197.286, -3.87027, 0.55", "-39.1506, -200.177, -4.05221, 0.28", "-39.298, -203.512, -4.12529, 0.28", "-39.3007, -203.982, -4.11782, 0.55", "-39.2296, -205.828, -4.03334, 0.83", "-39.0317, -208.717, -3.85183, 0.83", "-38.7611, -211.816, -3.61639, 0.28", "-38.5815, -213.896, -3.47843, 0.83", "-38.4061, -216.668, -3.32065, 0.83", "-38.2979, -219.718, -3.19738, 0.28", "-38.2769, -221.943, -3.14873, 0.83", "-38.3355, -225.171, -3.06502, 0.28", "-38.4535, -226.725, -3.00425, 0.55", "-38.6458, -228.081, -2.94927, 0.55", "-38.8681, -229.298, -2.87304, 0.28", "-38.9908, -229.908, -2.82789, 0.55", "-39.2645, -231.543, -2.85132, 0.28", "-39.3635, -232.629, -2.97735, 0.55", "-39.4024, -234.164, -3.32497, 0.28", "-39.3702, -235.93, -3.86537, 0.28", "-39.3045, -237.768, -4.54162, 0.55", "-39.1201, -241.305, -5.9581, 0.28", "-38.9418, -243.705, -6.84332, 0.83", "-38.6442, -247.407, -8.12405, 0.28", "-38.5468, -248.626, -8.50458, 0.55", "-38.4112, -251.056, -9.12638, 0.28", "-38.2808, -254.412, -9.71815, 0.55", "-38.1819, -257.833, -9.85434, 0.28", "-38.1637, -258.979, -9.79055, 0.55", "-38.1606, -260.913, -9.493, 0.28", "-38.2109, -262.251, -9.24335, 0.55", "-38.3339, -263.97, -8.86093, 0.55", "-38.6556, -266.814, -8.20921, 0.28", "-38.8841, -268.45, -7.89065, 0.55", "-39.1965, -270.434, -7.52929, 0.28", "-39.7223, -273.447, -7.03608, 0.28", "-40.1076, -275.335, -6.78558, 0.55", "-40.6846, -277.599, -6.50609, 0.28", "-40.9549, -278.418, -6.44466, 0.55", "-41.5138, -279.815, -6.4096, 0.28", "-41.9899, -280.843, -6.5246, 0.55", "-43.394, -283.585, -7.10386, 0.28", "-44.0528, -284.788, -7.45493, 0.55", "-45.4701, -287.267, -8.27048, 0.28", "-46.4632, -288.982, -8.86521, 0.83", "-48.8059, -293.018, -10.3659, 0.28", "-49.4615, -294.143, -10.8405, 0.55", "-50.5803, -296.163, -11.8518, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-20.0037, -279.996, -155.603, 0.28", "-19.9921, -282.858, -155.935, 0.28", "-19.9796, -283.976, -156.089, 0.83", "-19.9097, -288.42, -156.749, 0.28", "-19.8998, -289.814, -156.988, 0.83", "-19.8152, -293.818, -157.738, 0.28", "-19.7922, -294.904, -157.967, 0.83", "-19.7279, -297.987, -158.731, 0.28", "-19.7145, -298.529, -158.886, 0.55", "-19.6424, -301.517, -159.843, 0.28", "-19.6268, -303.536, -160.564, 0.83", "-19.6781, -306.533, -161.721, 0.28", "-19.709, -307.113, -161.976, 0.55", "-19.8654, -308.838, -162.791, 0.28", "-20.0705, -310.097, -163.401, 0.83", "-20.4142, -311.709, -164.225, 0.28", "-20.6714, -312.731, -164.771, 0.55", "-21.0109, -314.273, -165.622, 0.28", "-21.2691, -315.719, -166.421, 0.28", "-21.5471, -317.798, -167.621, 0.55", "-21.6602, -320.646, -169.245, 0.28", "-21.6365, -321.273, -169.59, 0.55", "-21.2314, -324.424, -171.336, 0.28", "-20.9908, -325.451, -171.883, 0.83", "-20.0609, -328.326, -173.452, 0.28", "-19.1795, -330.421, -174.59, 0.28", "-18.909, -330.986, -174.884, 0.55", "-17.3482, -334.007, -176.362, 0.28", "-16.3395, -335.753, -177.13, 0.28", "-16.0837, -336.195, -177.312, 0.83", "-14.673, -338.693, -178.191, 0.28", "-14.2643, -339.556, -178.461, 0.55", "-13.6691, -341.116, -178.848, 0.28", "-13.2467, -342.881, -179.146, 0.28", "-13.1342, -343.877, -179.262, 0.55", "-13.0388, -346.111, -179.411, 0.28", "-13.0773, -347.88, -179.516, 0.83", "-13.1737, -350.177, -179.667, 0.28", "-13.2401, -352.187, -179.828, 0.28", "-13.2983, -354.739, -180.056, 0.28", "-13.2591, -356.396, -180.201, 0.83", "-13.0016, -361.101, -180.657, 0.28", "-12.8804, -362.238, -180.76, 0.55", "-12.5355, -364.439, -180.932, 0.28", "-12.4264, -364.977, -180.978, 0.55", "-11.809, -367.537, -181.192, 0.28", "-11.579, -368.384, -181.236, 0.55", "-10.9189, -370.342, -181.13, 0.28", "-10.6732, -371.128, -181.069, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-20.0037, -279.996, -155.603, 0.28", "-21.1081, -282.046, -156.047, 0.28", "-22.0819, -283.819, -156.297, 0.55", "-23.5474, -286.396, -156.603, 0.28", "-23.7393, -286.734, -156.645, 0.55", "-24.4919, -288.028, -156.835, 0.28", "-24.8119, -288.552, -156.93, 0.55", "-26.145, -290.68, -157.365, 0.28", "-26.5094, -291.256, -157.507, 0.55", "-27.7666, -293.172, -158.066, 0.28", "-28.3395, -294.136, -158.401, 0.55", "-29.6269, -296.377, -159.256, 0.28", "-29.9755, -297.028, -159.522, 1.11", "-31.0729, -299.519, -160.712, 0.28", "-31.4867, -300.706, -161.28, 0.55", "-32.0718, -303.096, -162.703, 0.28", "-32.2546, -304.334, -163.496, 0.55", "-32.3183, -305.248, -164.12, 0.55", "-32.3837, -308.073, -166.269, 0.28", "-32.3839, -308.929, -166.973, 0.55", "-32.4228, -312.356, -169.933, 0.28", "-32.506, -314.264, -171.645, 0.28", "-32.5574, -314.937, -172.294, 0.55", "-32.9372, -317.215, -174.522, 0.28", "-33.1329, -317.937, -175.208, 0.83", "-33.6247, -319.464, -176.585, 0.28", "-33.7224, -319.759, -176.811, 0.55", "-34.3632, -321.752, -178.322, 0.28", "-34.7981, -323.278, -179.332, 0.83", "-35.3388, -325.497, -180.559, 0.28", "-35.504, -326.374, -180.993, 0.55", "-35.9059, -329.167, -182.198, 0.28", "-35.959, -329.68, -182.389, 0.55", "-36.095, -331.324, -182.799, 0.28", "-36.1152, -331.762, -182.888, 0.55", "-36.1714, -333.997, -183.223, 0.28", "-36.1768, -334.54, -183.299, 0.83", "-36.2631, -336.838, -183.578, 0.28", "-36.413, -338.948, -183.903, 0.55", "-36.6147, -340.447, -184.161, 0.55", "-37.2312, -343.52, -184.738, 0.28", "-37.4502, -344.322, -184.925, 0.83", "-37.8766, -345.344, -185.22, 0.83", "-39.3189, -347.708, -186.075, 0.28", "-40.4093, -349.072, -186.668, 0.28", "-41.108, -349.755, -186.966, 0.55", "-42.5913, -350.944, -187.539, 0.28", "-44.532, -352.363, -188.26, 0.28", "-45.5458, -353.038, -188.624, 0.55", "-46.6186, -353.577, -188.938, 0.28", "-47.2988, -353.892, -189.14, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-50.5803, -296.163, -11.8518, 0.28", "-48.9866, -297.733, -12.0158, 0.28", "-47.1516, -299.539, -12.2046, 0.28", "-45.8104, -300.86, -12.3426, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-50.5803, -296.163, -11.8518, 0.55", "-53.6894, -298.774, -9.9017, 0.55", "-55.4849, -300.622, -8.40891, 0.28", "-56.0595, -301.465, -7.67497, 0.55", "-57.3814, -304.144, -5.29905, 0.28", "-57.666, -305.034, -4.57083, 0.83", "-58.3098, -307.918, -2.31826, 0.28", "-58.2966, -308.338, -2.04038, 0.55", "-57.9633, -310.939, -0.673286, 0.28", "-57.7874, -312.036, -0.168697, 0.55", "-57.4234, -314.436, 0.624468, 0.28", "-57.3265, -315.601, 0.923908, 0.55", "-57.4671, -319.518, 1.62879, 0.28", "-57.7859, -322.324, 2.04764, 0.28", "-57.9772, -323.322, 2.17643, 0.83", "-58.9429, -327.212, 2.70408, 0.28", "-59.4609, -328.894, 2.95591, 0.55", "-61.1008, -333.613, 3.68041, 0.28", "-61.7336, -335.223, 3.97561, 0.55", "-62.4179, -336.937, 4.17437, 0.28", "-62.936, -338.282, 4.24765, 0.55", "-63.5266, -339.818, 4.30512, 0.28", "-64.2094, -341.817, 4.31327, 0.28", "-64.5148, -342.875, 4.22753, 0.55", "-65.6581, -347.222, 3.57006, 0.28", "-65.8101, -347.971, 3.36792, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-45.8104, -300.86, -12.3426, 0.28", "-43.0405, -302.112, -13.3889, 0.28", "-41.011, -303.043, -14.204, 0.28", "-40.0706, -303.409, -14.5741, 0.55", "-37.837, -304.22, -15.4334, 0.28", "-36.7891, -304.532, -15.7509, 0.55", "-34.0379, -305.235, -16.4273, 0.28", "-33.3738, -305.367, -16.5222, 0.55", "-30.5512, -305.741, -16.6627, 0.28", "-30.1512, -305.774, -16.6569, 0.55", "-27.0551, -305.942, -16.4659, 0.28", "-25.9124, -306.021, -16.3777, 0.55", "-21.3855, -306.485, -15.9651, 0.28", "-20.4002, -306.645, -15.8785, 0.55", "-17.3353, -307.358, -15.6358, 0.28", "-15.0779, -308.057, -15.5397, 0.28", "-13.6364, -308.65, -15.5699, 0.55", "-11.3693, -309.816, -15.8395, 0.28", "-10.2228, -310.551, -16.1063, 0.28", "-9.56024, -311.023, -16.3393, 0.55", "-7.40709, -312.734, -17.3618, 0.28", "-6.64151, -313.372, -17.7528, 0.83", "-3.64749, -315.885, -19.4071, 0.28", "-3.36174, -316.124, -19.5833, 0.55", "-1.13227, -317.934, -21.0398, 0.28", "-0.914897, -318.103, -21.1858, 0.55", "1.06486, -319.666, -22.5913, 0.28", "1.92237, -320.331, -23.087, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-45.8104, -300.86, -12.3426, 0.28", "-42.5482, -309.336, -14.5744, 0.28", "-41.9581, -310.904, -14.8277, 0.55", "-40.8309, -314.163, -15.2589, 0.28", "-40.6396, -314.775, -15.2752, 0.55", "-40.0914, -316.808, -15.2387, 0.28", "-39.8522, -317.777, -15.203, 0.55", "-39.2795, -320.802, -14.6295, 0.28", "-39.0995, -321.805, -14.4973, 0.55", "-38.3218, -326.232, -14.0738, 0.28", "-37.8342, -328.725, -13.8194, 0.28", "-37.6837, -329.543, -13.7345, 0.55", "-37.0906, -333.108, -13.2942, 0.28", "-36.9914, -333.879, -13.1667, 0.55", "-36.7779, -336.301, -12.7586, 0.28", "-36.8035, -338.159, -12.3919, 0.55", "-37.1904, -341.904, -11.4912, 0.28", "-37.3254, -342.812, -11.2574, 0.55", "-38.199, -346.656, -10.1737, 0.28", "-38.6281, -348.1, -9.73757, 0.83", "-39.9189, -351.19, -8.7696, 0.28", "-40.3791, -352.045, -8.47894, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "axon_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "axon_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_LBC_45f62e2816_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, axon_0, dend_29, dend_26, dend_20, dend_16, dend_1, axon_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.4999999997358825)
    connect dend_32(0), soma_0(0.4999999997358825)
    connect dend_31(0), soma_0(0.4999999997358825)
    connect dend_30(0), soma_0(0.4999999997358825)
    connect dend_25(0), soma_0(0.4999999997358825)
    connect dend_19(0), soma_0(0.4999999997358825)
    connect dend_0(0), soma_0(0.4999999997358825)
    connect axon_0(0), soma_0(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.0460118, 9.4193, 0.0420007, 3.85614 ) }
    soma_0 { pt3dadd( -0.0586314, 8.45043, 0.0375696, 7.03826 ) }
    soma_0 { pt3dadd( -0.0712511, 7.48157, 0.0331385, 8.2185 ) }
    soma_0 { pt3dadd( -0.0838708, 6.51271, 0.0287073, 9.16918 ) }
    soma_0 { pt3dadd( -0.0964904, 5.54385, 0.0242762, 10.0966 ) }
    soma_0 { pt3dadd( -0.10911, 4.57499, 0.0198451, 11.2325 ) }
    soma_0 { pt3dadd( -0.12173, 3.60613, 0.0154139, 12.296 ) }
    soma_0 { pt3dadd( -0.134349, 2.63727, 0.0109828, 12.2546 ) }
    soma_0 { pt3dadd( -0.146969, 1.66841, 0.00655169, 11.6979 ) }
    soma_0 { pt3dadd( -0.159589, 0.69955, 0.00212056, 10.9264 ) }
    soma_0 { pt3dadd( -0.172208, -0.26931, -0.00231057, 9.80041 ) }
    soma_0 { pt3dadd( -0.184828, -1.23817, -0.0067417, 8.57664 ) }
    soma_0 { pt3dadd( -0.197448, -2.20703, -0.0111728, 7.89172 ) }
    soma_0 { pt3dadd( -0.210067, -3.17589, -0.015604, 7.62756 ) }
    soma_0 { pt3dadd( -0.222687, -4.14475, -0.0200351, 7.36341 ) }
    soma_0 { pt3dadd( -0.235307, -5.11361, -0.0244662, 7.04275 ) }
    soma_0 { pt3dadd( -0.247926, -6.08247, -0.0288973, 6.5615 ) }
    soma_0 { pt3dadd( -0.260546, -7.05133, -0.0333285, 5.89923 ) }
    soma_0 { pt3dadd( -0.273166, -8.02019, -0.0377596, 4.92342 ) }
    soma_0 { pt3dadd( -0.285785, -8.98905, -0.0421907, 3.8632 ) }
    soma_0 { pt3dadd( -0.298405, -9.95792, -0.0466218, 2.78029 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.117947, 7.01466, 10.3203, 0.55 ) }
    dend_33 { pt3dadd( 0.0562306, 9.20237, 10.9329, 0.55 ) }
    dend_33 { pt3dadd( 0.547512, 11.6024, 12.1421, 0.55 ) }
    dend_33 { pt3dadd( 1.06425, 13.4422, 13.2989, 0.55 ) }
    dend_33 { pt3dadd( 1.52858, 15.0953, 14.3384, 0.55 ) }
    dend_33 { pt3dadd( 2.24907, 17.6604, 15.9514, 0.55 ) }
    dend_33 { pt3dadd( 3.16924, 20.9365, 18.0113, 0.55 ) }
    dend_33 { pt3dadd( 4.18606, 23.5907, 20.1037, 0.55 ) }
    dend_33 { pt3dadd( 5.03032, 25.1617, 21.6382, 2.49 ) }
    dend_33 { pt3dadd( 7.37244, 33.9857, 25.7187, 2.49 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.57205, 2.47466, -8.5197, 0.55 ) }
    dend_32 { pt3dadd( 3.96671, 5.17113, -8.67688, 0.55 ) }
    dend_32 { pt3dadd( 6.23953, 7.46965, -8.86062, 0.55 ) }
    dend_32 { pt3dadd( 9.45759, 10.296, -9.18173, 0.55 ) }
    dend_32 { pt3dadd( 11.3825, 11.8473, -9.40522, 0.28 ) }
    dend_32 { pt3dadd( 12.7968, 12.8811, -9.58058, 0.55 ) }
    dend_32 { pt3dadd( 15.2966, 14.5617, -9.90331, 0.28 ) }
    dend_32 { pt3dadd( 16.5505, 15.1997, -10.0407, 0.55 ) }
    dend_32 { pt3dadd( 18.7316, 16.0709, -10.2403, 0.28 ) }
    dend_32 { pt3dadd( 19.1441, 16.2052, -10.2678, 0.83 ) }
    dend_32 { pt3dadd( 20.7357, 16.7211, -10.2796, 0.28 ) }
    dend_32 { pt3dadd( 22.3868, 17.3299, -10.1818, 0.28 ) }
    dend_32 { pt3dadd( 24.641, 18.4116, -9.86234, 0.55 ) }
    dend_32 { pt3dadd( 26.1612, 19.3609, -9.57538, 0.28 ) }
    dend_32 { pt3dadd( 26.769, 19.9087, -9.39483, 0.55 ) }
    dend_32 { pt3dadd( 28.1566, 21.5176, -8.88194, 0.28 ) }
    dend_32 { pt3dadd( 28.8427, 22.5021, -8.60966, 0.55 ) }
    dend_32 { pt3dadd( 30.0358, 24.5207, -8.13298, 0.28 ) }
    dend_32 { pt3dadd( 30.5612, 25.5218, -7.93106, 0.55 ) }
    dend_32 { pt3dadd( 32.01, 28.614, -7.28632, 0.28 ) }
    dend_32 { pt3dadd( 32.6131, 30.0733, -7.00557, 0.55 ) }
    dend_32 { pt3dadd( 33.2855, 31.9787, -6.67849, 0.28 ) }
    dend_32 { pt3dadd( 33.6923, 33.1315, -6.4709, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.89205, 6.17466, -1.4497, 0.55 ) }
    dend_31 { pt3dadd( 6.55689, 7.83499, -1.68706, 0.55 ) }
    dend_31 { pt3dadd( 8.98061, 9.34037, -2.00546, 0.55 ) }
    dend_31 { pt3dadd( 11.2152, 10.5908, -2.32714, 0.83 ) }
    dend_31 { pt3dadd( 14.3934, 12.2345, -2.72763, 0.83 ) }
    dend_31 { pt3dadd( 16.7069, 13.3115, -2.98998, 1.11 ) }
    dend_31 { pt3dadd( 19.3767, 14.4042, -3.2234, 0.55 ) }
    dend_31 { pt3dadd( 22.0618, 15.2611, -3.3996, 0.55 ) }
    dend_31 { pt3dadd( 24.1582, 15.8335, -3.47799, 0.83 ) }
    dend_31 { pt3dadd( 26.5181, 16.369, -3.49246, 0.55 ) }
    dend_31 { pt3dadd( 29.2756, 16.8558, -3.39112, 0.83 ) }
    dend_31 { pt3dadd( 31.4882, 17.2071, -3.2076, 0.55 ) }
    dend_31 { pt3dadd( 32.2509, 17.315, -3.14509, 0.55 ) }
    dend_31 { pt3dadd( 35.2988, 17.7985, -2.99196, 0.83 ) }
    dend_31 { pt3dadd( 38.2863, 18.5038, -3.03623, 0.83 ) }
    dend_31 { pt3dadd( 40.4131, 19.1413, -3.21731, 0.83 ) }
    dend_31 { pt3dadd( 42.7761, 20.0583, -3.54281, 0.83 ) }
    dend_31 { pt3dadd( 44.4407, 20.8436, -3.85669, 0.83 ) }
    dend_31 { pt3dadd( 46.8506, 22.1913, -4.41918, 0.83 ) }
    dend_31 { pt3dadd( 49.0065, 23.6493, -5.03592, 0.55 ) }
    dend_31 { pt3dadd( 51.246, 25.4855, -5.75595, 0.55 ) }
    dend_31 { pt3dadd( 52.4403, 26.5199, -6.16285, 0.55 ) }
    dend_31 { pt3dadd( 54.482, 28.3806, -6.91894, 0.55 ) }
    dend_31 { pt3dadd( 56.3393, 30.0801, -7.63959, 0.83 ) }
    dend_31 { pt3dadd( 58.1992, 31.7027, -8.38646, 0.55 ) }
    dend_31 { pt3dadd( 59.3638, 32.6403, -8.85395, 0.55 ) }
    dend_31 { pt3dadd( 61.547, 34.3146, -9.77436, 0.55 ) }
    dend_31 { pt3dadd( 63.9074, 35.8885, -10.6939, 0.83 ) }
    dend_31 { pt3dadd( 66.3834, 37.3981, -11.5427, 0.55 ) }
    dend_31 { pt3dadd( 67.4359, 38.007, -11.848, 0.55 ) }
    dend_31 { pt3dadd( 68.4895, 38.6237, -12.1173, 0.55 ) }
    dend_31 { pt3dadd( 69.3114, 39.1423, -12.3105, 0.55 ) }
    dend_31 { pt3dadd( 72.7667, 41.5297, -13.0232, 0.55 ) }
    dend_31 { pt3dadd( 75.9938, 43.8577, -13.5806, 0.28 ) }
    dend_31 { pt3dadd( 77.08, 44.6888, -13.7689, 0.55 ) }
    dend_31 { pt3dadd( 79.2604, 46.4418, -14.1823, 0.28 ) }
    dend_31 { pt3dadd( 80.3331, 47.3186, -14.3951, 0.83 ) }
    dend_31 { pt3dadd( 82.0101, 48.6675, -14.728, 0.28 ) }
    dend_31 { pt3dadd( 82.8937, 49.3811, -14.9019, 0.83 ) }
    dend_31 { pt3dadd( 84.3596, 50.4471, -15.1734, 0.28 ) }
    dend_31 { pt3dadd( 85.6997, 51.3258, -15.4001, 0.55 ) }
    dend_31 { pt3dadd( 87.8393, 52.624, -15.7099, 0.28 ) }
    dend_31 { pt3dadd( 90.4225, 54.0605, -16.0541, 0.55 ) }
    dend_31 { pt3dadd( 91.4279, 54.6093, -16.1777, 0.55 ) }
    dend_31 { pt3dadd( 93.5479, 55.7696, -16.4271, 0.28 ) }
    dend_31 { pt3dadd( 94.7737, 56.474, -16.5712, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_31 { pt3dadd( 96.3612, 57.4245, -16.7763, 0.28 ) }
    dend_31 { pt3dadd( 96.8345, 57.723, -16.8385, 0.55 ) }
    dend_31 { pt3dadd( 98.5327, 58.7875, -17.0835, 0.28 ) }
    dend_31 { pt3dadd( 99.3733, 59.3263, -17.2084, 0.83 ) }
    dend_31 { pt3dadd( 101.376, 60.6295, -17.6311, 0.28 ) }
    dend_31 { pt3dadd( 102.523, 61.4144, -17.9165, 0.55 ) }
    dend_31 { pt3dadd( 103.894, 62.4482, -18.2711, 0.55 ) }
    dend_31 { pt3dadd( 106.209, 64.358, -18.8891, 0.28 ) }
    dend_31 { pt3dadd( 107.134, 65.1527, -19.1396, 0.83 ) }
    dend_31 { pt3dadd( 109.999, 67.7364, -19.9163, 0.28 ) }
    dend_31 { pt3dadd( 111.936, 69.604, -20.4511, 0.83 ) }
    dend_31 { pt3dadd( 115.031, 72.7813, -21.3071, 0.28 ) }
    dend_31 { pt3dadd( 116.375, 74.2744, -21.6777, 0.55 ) }
    dend_31 { pt3dadd( 117.492, 75.5991, -21.9632, 0.28 ) }
    dend_31 { pt3dadd( 118.366, 76.6598, -22.1684, 0.55 ) }
    dend_31 { pt3dadd( 119.144, 77.6126, -22.2912, 0.28 ) }
    dend_31 { pt3dadd( 120.349, 78.9165, -22.4952, 0.55 ) }
    dend_31 { pt3dadd( 121.382, 79.8858, -22.6724, 0.28 ) }
    dend_31 { pt3dadd( 122.039, 80.4719, -22.775, 0.55 ) }
    dend_31 { pt3dadd( 123.885, 82.0803, -23.0603, 0.28 ) }
    dend_31 { pt3dadd( 125.195, 83.2388, -23.2593, 0.83 ) }
    dend_31 { pt3dadd( 128.07, 85.9191, -23.7181, 0.28 ) }
    dend_31 { pt3dadd( 128.89, 86.7285, -23.8653, 0.55 ) }
    dend_31 { pt3dadd( 130.269, 88.1648, -24.1228, 0.55 ) }
    dend_31 { pt3dadd( 131.994, 90.1315, -24.4057, 0.28 ) }
    dend_31 { pt3dadd( 133.027, 91.4366, -24.5503, 0.83 ) }
    dend_31 { pt3dadd( 134.461, 93.4459, -24.6903, 0.28 ) }
    dend_31 { pt3dadd( 135.228, 94.6624, -24.6869, 0.83 ) }
    dend_31 { pt3dadd( 135.871, 95.7348, -24.6402, 0.83 ) }
    dend_31 { pt3dadd( 136.928, 97.4883, -24.4586, 0.28 ) }
    dend_31 { pt3dadd( 137.246, 98.0213, -24.3747, 0.55 ) }
    dend_31 { pt3dadd( 138.803, 100.53, -23.9501, 0.28 ) }
    dend_31 { pt3dadd( 139.14, 101.086, -23.8524, 0.28 ) }
    dend_31 { pt3dadd( 139.449, 101.621, -23.8045, 0.83 ) }
    dend_31 { pt3dadd( 140.21, 102.96, -23.83, 0.28 ) }
    dend_31 { pt3dadd( 140.753, 103.899, -23.9305, 0.55 ) }
    dend_31 { pt3dadd( 141.757, 105.534, -24.1562, 0.28 ) }
    dend_31 { pt3dadd( 142.187, 106.206, -24.2457, 0.55 ) }
    dend_31 { pt3dadd( 143.463, 108.058, -24.4282, 0.28 ) }
    dend_31 { pt3dadd( 145.328, 110.573, -24.5905, 0.28 ) }
    dend_31 { pt3dadd( 145.931, 111.361, -24.6151, 0.83 ) }
    dend_31 { pt3dadd( 147.326, 113.104, -24.7412, 0.83 ) }
    dend_31 { pt3dadd( 149.618, 115.865, -25.0034, 0.28 ) }
    dend_31 { pt3dadd( 152.283, 118.985, -25.3697, 0.28 ) }
    dend_31 { pt3dadd( 155.657, 122.789, -25.8885, 0.28 ) }
    dend_31 { pt3dadd( 157.504, 124.846, -26.2162, 0.83 ) }
    dend_31 { pt3dadd( 160.645, 128.31, -26.8572, 0.28 ) }
    dend_31 { pt3dadd( 161.043, 128.746, -26.9589, 0.55 ) }
    dend_31 { pt3dadd( 161.9, 129.637, -27.2602, 0.28 ) }
    dend_31 { pt3dadd( 162.731, 130.464, -27.6718, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 50/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.60205, 4.18466, 8.8103, 0.83 ) }
    dend_30 { pt3dadd( 5.81353, 3.7517, 9.79721, 0.83 ) }
    dend_30 { pt3dadd( 7.27241, 3.36152, 10.3989, 0.83 ) }
    dend_30 { pt3dadd( 9.97925, 2.41366, 11.5036, 0.83 ) }
    dend_30 { pt3dadd( 13.8314, 0.742437, 13.0839, 0.83 ) }
    dend_30 { pt3dadd( 16.8196, -0.767543, 14.42, 0.55 ) }
    dend_30 { pt3dadd( 18.7333, -1.8422, 15.3006, 0.55 ) }
    dend_30 { pt3dadd( 20.5334, -3.14403, 16.1697, 0.83 ) }
    dend_30 { pt3dadd( 23.2641, -5.48831, 17.4839, 0.55 ) }
    dend_30 { pt3dadd( 24.5855, -6.8041, 18.0945, 0.83 ) }
    dend_30 { pt3dadd( 26.1814, -8.58368, 18.6743, 0.83 ) }
    dend_30 { pt3dadd( 27.2966, -9.9232, 19.0449, 1.11 ) }
    dend_30 { pt3dadd( 28.4596, -11.5388, 19.4763, 0.55 ) }
    dend_30 { pt3dadd( 29.3204, -12.8091, 19.7914, 0.83 ) }
    dend_30 { pt3dadd( 30.0888, -13.9363, 20.0839, 0.55 ) }
    dend_30 { pt3dadd( 31.7607, -16.2467, 20.7559, 0.55 ) }
    dend_30 { pt3dadd( 33.4958, -18.7047, 21.6085, 0.55 ) }
    dend_30 { pt3dadd( 34.4194, -20.074, 22.1603, 0.55 ) }
    dend_30 { pt3dadd( 35.0331, -21.0609, 22.602, 0.55 ) }
    dend_30 { pt3dadd( 36.4858, -23.4502, 23.7051, 0.83 ) }
    dend_30 { pt3dadd( 38.2687, -26.1806, 25.0544, 0.83 ) }
    dend_30 { pt3dadd( 39.9565, -28.4539, 26.2483, 0.55 ) }
    dend_30 { pt3dadd( 41.5273, -30.264, 27.3312, 0.55 ) }
    dend_30 { pt3dadd( 43.9026, -32.5247, 28.8913, 0.55 ) }
    dend_30 { pt3dadd( 45.3867, -33.8834, 29.8593, 0.55 ) }
    dend_30 { pt3dadd( 47.2998, -35.4429, 31.0263, 0.55 ) }
    dend_30 { pt3dadd( 48.5519, -36.2511, 31.7731, 0.55 ) }
    dend_30 { pt3dadd( 52.3677, -38.0272, 33.8372, 0.55 ) }
    dend_30 { pt3dadd( 54.7535, -38.7273, 35.1827, 0.28 ) }
    dend_30 { pt3dadd( 61.7502, -44.4843, 39.4139, 0.28 ) }
    dend_30 { pt3dadd( 68.5633, -50.7429, 43.2101, 0.28 ) }
    dend_30 { pt3dadd( 74.9203, -57.1926, 47.4516, 0.28 ) }
    dend_30 { pt3dadd( 80.6724, -63.6699, 52.4474, 0.28 ) }
    dend_30 { pt3dadd( 86.2521, -71.104, 56.1353, 0.28 ) }
    dend_30 { pt3dadd( 92.2114, -77.3044, 61.2384, 0.28 ) }
    dend_30 { pt3dadd( 98.5119, -84.4459, 64.2884, 0.28 ) }
    dend_30 { pt3dadd( 103.119, -93.1304, 66.1187, 0.28 ) }
    dend_30 { pt3dadd( 108.654, -101.002, 68.8391, 0.28 ) }
    dend_30 { pt3dadd( 114.186, -108.983, 71.2264, 0.28 ) }
    dend_30 { pt3dadd( 119.628, -117.262, 72.5883, 0.28 ) }
    dend_30 { pt3dadd( 122.949, -126.254, 75.4359, 0.28 ) }
    dend_30 { pt3dadd( 124.848, -135.82, 77.6449, 0.28 ) }
    dend_30 { pt3dadd( 128.741, -144.844, 79.4959, 0.28 ) }
    dend_30 { pt3dadd( 132.764, -153.649, 82.0022, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 94/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.497947, -3.48534, -10.1097, 0.83 ) }
    dend_25 { pt3dadd( 0.976004, -1.89113, -10.1594, 0.83 ) }
    dend_25 { pt3dadd( 2.41352, -0.336337, -10.2079, 1.11 ) }
    dend_25 { pt3dadd( 4.37711, 1.78746, -10.2741, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.93795, 5.40466, -5.2197, 0.83 ) }
    dend_19 { pt3dadd( -6.1732, 7.68945, -4.98141, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( -7.59179, 10.3134, -4.70774, 1.38 ) }
    dend_19 { pt3dadd( -9.11524, 13.1313, -4.41385, 0.83 ) }
    dend_19 { pt3dadd( -10.566, 15.8147, -4.13398, 1.11 ) }
    dend_19 { pt3dadd( -11.7719, 18.0452, -3.90135, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.00795, -10.1953, -1.2597, 3.88 ) }
    dend_0 { pt3dadd( -1.62795, -11.9453, -1.2597, 3.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 6/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.298405, -9.95792, -0.0466218, 0.55 ) }
    axon_0 { pt3dadd( -0.493767, -24.9566, -0.0466218, 0.55 ) }
    axon_0 { pt3dadd( -0.689129, -39.9554, -0.0466218, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.37711, 1.78746, -10.2741, 0.83 ) }
    dend_29 { pt3dadd( 7.0276, 2.82734, -10.7841, 0.83 ) }
    dend_29 { pt3dadd( 8.70934, 3.55709, -11.1668, 0.83 ) }
    dend_29 { pt3dadd( 10.6834, 4.47658, -11.6303, 1.11 ) }
    dend_29 { pt3dadd( 14.1263, 6.21131, -12.4165, 0.83 ) }
    dend_29 { pt3dadd( 15.4026, 6.93887, -12.6922, 0.83 ) }
    dend_29 { pt3dadd( 18.147, 8.65836, -13.2643, 1.11 ) }
    dend_29 { pt3dadd( 20.1098, 10.0353, -13.6206, 0.55 ) }
    dend_29 { pt3dadd( 21.35, 11.015, -13.8444, 0.55 ) }
    dend_29 { pt3dadd( 23.1421, 12.5587, -14.1523, 0.55 ) }
    dend_29 { pt3dadd( 25.4669, 14.675, -14.4952, 0.55 ) }
    dend_29 { pt3dadd( 27.5073, 16.5657, -14.7484, 0.83 ) }
    dend_29 { pt3dadd( 28.9567, 17.9628, -14.8834, 0.55 ) }
    dend_29 { pt3dadd( 30.7233, 19.69, -15.0646, 0.83 ) }
    dend_29 { pt3dadd( 31.8799, 20.7488, -15.2051, 1.11 ) }
    dend_29 { pt3dadd( 34.0545, 22.5707, -15.4941, 0.55 ) }
    dend_29 { pt3dadd( 35.7996, 23.9335, -15.7598, 0.55 ) }
    dend_29 { pt3dadd( 39.8453, 26.9683, -16.4464, 0.83 ) }
    dend_29 { pt3dadd( 41.8508, 28.4143, -16.8094, 0.55 ) }
    dend_29 { pt3dadd( 44.9932, 30.6134, -17.4031, 0.55 ) }
    dend_29 { pt3dadd( 47.3478, 32.2293, -17.862, 0.83 ) }
    dend_29 { pt3dadd( 49.2616, 33.5313, -18.238, 0.55 ) }
    dend_29 { pt3dadd( 51.35, 34.9604, -18.6349, 0.55 ) }
    dend_29 { pt3dadd( 53.2698, 36.3001, -18.9778, 0.83 ) }
    dend_29 { pt3dadd( 55.3227, 37.9007, -19.2854, 0.28 ) }
    dend_29 { pt3dadd( 55.9629, 38.5032, -19.3854, 0.55 ) }
    dend_29 { pt3dadd( 56.9098, 39.4885, -19.5186, 0.28 ) }
    dend_29 { pt3dadd( 58.1031, 40.8122, -19.6522, 0.55 ) }
    dend_29 { pt3dadd( 59.7866, 42.8294, -19.848, 0.28 ) }
    dend_29 { pt3dadd( 61.2844, 44.7383, -20.0346, 0.83 ) }
    dend_29 { pt3dadd( 63.0495, 47.0925, -20.3717, 0.28 ) }
    dend_29 { pt3dadd( 63.9713, 48.3409, -20.5852, 0.28 ) }
    dend_29 { pt3dadd( 65.0987, 49.9119, -20.952, 0.83 ) }
    dend_29 { pt3dadd( 67.7877, 53.6854, -22.0093, 0.28 ) }
    dend_29 { pt3dadd( 68.9037, 55.251, -22.5092, 0.83 ) }
    dend_29 { pt3dadd( 70.8445, 58.0138, -23.4954, 0.28 ) }
    dend_29 { pt3dadd( 71.485, 58.9032, -23.8998, 0.55 ) }
    dend_29 { pt3dadd( 73.6825, 61.8931, -25.6199, 0.28 ) }
    dend_29 { pt3dadd( 73.9755, 62.2749, -25.8958, 0.83 ) }
    dend_29 { pt3dadd( 74.4109, 62.8036, -26.3624, 0.83 ) }
    dend_29 { pt3dadd( 75.5443, 64.1023, -27.5647, 0.83 ) }
    dend_29 { pt3dadd( 77.9152, 66.8244, -30.0, 0.55 ) }
    dend_29 { pt3dadd( 80.4322, 69.7354, -32.4819, 0.28 ) }
    dend_29 { pt3dadd( 82.2616, 71.9596, -34.2141, 0.83 ) }
    dend_29 { pt3dadd( 84.5844, 74.9222, -36.3519, 0.28 ) }
    dend_29 { pt3dadd( 85.7167, 76.435, -37.3949, 0.83 ) }
    dend_29 { pt3dadd( 88.2418, 79.8388, -39.6609, 0.28 ) }
    dend_29 { pt3dadd( 89.506, 81.5602, -40.7231, 0.83 ) }
    dend_29 { pt3dadd( 92.1149, 85.0365, -42.8098, 0.28 ) }
    dend_29 { pt3dadd( 92.7694, 85.8662, -43.3017, 0.55 ) }
    dend_29 { pt3dadd( 96.0638, 89.8353, -45.6753, 0.28 ) }
    dend_29 { pt3dadd( 96.6929, 90.5534, -46.1378, 0.83 ) }
    dend_29 { pt3dadd( 98.4249, 92.4077, -47.3834, 0.28 ) }
    dend_29 { pt3dadd( 99.1093, 93.1279, -47.8902, 0.83 ) }
    dend_29 { pt3dadd( 101.589, 95.5882, -49.6235, 0.28 ) }
    dend_29 { pt3dadd( 102.654, 96.7716, -50.3894, 0.83 ) }
    dend_29 { pt3dadd( 104.403, 98.9708, -51.5767, 0.28 ) }
    dend_29 { pt3dadd( 104.88, 99.6521, -51.8831, 0.83 ) }
    dend_29 { pt3dadd( 106.29, 101.878, -52.7308, 0.28 ) }
    dend_29 { pt3dadd( 106.902, 102.893, -53.0893, 0.55 ) }
    dend_29 { pt3dadd( 110.513, 109.052, -55.066, 0.28 ) }
    dend_29 { pt3dadd( 111.913, 111.35, -55.7501, 1.11 ) }
    dend_29 { pt3dadd( 113.94, 114.448, -56.6154, 0.28 ) }
    dend_29 { pt3dadd( 115.173, 116.173, -57.06, 0.28 ) }
    dend_29 { pt3dadd( 116.134, 117.423, -57.33, 0.83 ) }
    dend_29 { pt3dadd( 118.217, 120.007, -57.9815, 0.28 ) }
    dend_29 { pt3dadd( 119.499, 121.491, -58.3913, 1.11 ) }
    dend_29 { pt3dadd( 121.638, 123.959, -59.2406, 0.28 ) }
    dend_29 { pt3dadd( 124.575, 127.448, -60.6193, 0.28 ) }
    dend_29 { pt3dadd( 125.429, 128.56, -61.0743, 1.38 ) }
    dend_29 { pt3dadd( 128.077, 132.404, -62.6131, 0.28 ) }
    dend_29 { pt3dadd( 128.481, 133.067, -62.8962, 0.55 ) }
    dend_29 { pt3dadd( 129.163, 134.365, -63.4597, 0.28 ) }
    dend_29 { pt3dadd( 129.871, 135.836, -64.1069, 0.55 ) }
    dend_29 { pt3dadd( 131.641, 139.184, -65.56, 0.28 ) }
    dend_29 { pt3dadd( 132.257, 140.195, -65.9501, 0.83 ) }
    dend_29 { pt3dadd( 133.119, 141.359, -66.3617, 0.28 ) }
    dend_29 { pt3dadd( 133.851, 142.224, -66.6078, 0.55 ) }
    dend_29 { pt3dadd( 136.221, 144.627, -67.5331, 0.28 ) }
    dend_29 { pt3dadd( 139.253, 147.261, -68.8919, 0.28 ) }
    dend_29 { pt3dadd( 139.974, 147.798, -69.3134, 0.55 ) }
    dend_29 { pt3dadd( 142.393, 149.451, -71.0078, 0.28 ) }
    dend_29 { pt3dadd( 145.345, 151.336, -73.7532, 0.55 ) }
    dend_29 { pt3dadd( 149.339, 153.717, -78.5083, 0.28 ) }
    dend_29 { pt3dadd( 150.396, 154.307, -80.0234, 0.55 ) }
    dend_29 { pt3dadd( 152.477, 155.35, -83.597, 0.28 ) }
    dend_29 { pt3dadd( 153.073, 155.62, -84.73, 0.55 ) }
    dend_29 { pt3dadd( 155.228, 156.491, -89.5805, 0.28 ) }
    dend_29 { pt3dadd( 155.647, 156.641, -90.7141, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 4.37711, 1.78746, -10.2741, 0.55 ) }
    dend_26 { pt3dadd( 4.49448, 1.13557, -11.3865, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( 4.84065, -0.175248, -14.0495, 0.55 ) }
    dend_26 { pt3dadd( 5.46852, -1.45722, -16.8622, 0.83 ) }
    dend_26 { pt3dadd( 6.24695, -2.75865, -19.9402, 0.55 ) }
    dend_26 { pt3dadd( 7.17893, -4.45962, -23.7767, 0.55 ) }
    dend_26 { pt3dadd( 7.48342, -5.05494, -25.0966, 0.55 ) }
    dend_26 { pt3dadd( 8.47375, -6.86359, -29.1698, 0.83 ) }
    dend_26 { pt3dadd( 9.09856, -8.06313, -31.7732, 0.83 ) }
    dend_26 { pt3dadd( 9.62364, -9.54003, -34.4447, 0.83 ) }
    dend_26 { pt3dadd( 9.97758, -10.8612, -36.4231, 1.11 ) }
    dend_26 { pt3dadd( 10.4335, -12.7791, -38.9372, 0.55 ) }
    dend_26 { pt3dadd( 10.6873, -14.2815, -40.7293, 0.55 ) }
    dend_26 { pt3dadd( 10.8886, -16.8394, -43.4931, 1.11 ) }
    dend_26 { pt3dadd( 10.9057, -20.6813, -47.4061, 0.28 ) }
    dend_26 { pt3dadd( 10.871, -21.5694, -48.2876, 0.55 ) }
    dend_26 { pt3dadd( 10.5943, -24.7297, -51.3251, 0.28 ) }
    dend_26 { pt3dadd( 10.4082, -26.0423, -52.5195, 1.11 ) }
    dend_26 { pt3dadd( 9.4828, -30.6688, -56.6986, 0.28 ) }
    dend_26 { pt3dadd( 9.02592, -32.5774, -58.3884, 0.28 ) }
    dend_26 { pt3dadd( 8.2822, -34.991, -60.4798, 1.11 ) }
    dend_26 { pt3dadd( 7.35891, -37.47, -62.6786, 0.28 ) }
    dend_26 { pt3dadd( 6.83753, -38.5872, -63.7314, 0.55 ) }
    dend_26 { pt3dadd( 4.87528, -42.3174, -67.4281, 0.28 ) }
    dend_26 { pt3dadd( 4.16244, -43.563, -68.7832, 1.38 ) }
    dend_26 { pt3dadd( 3.27247, -45.1361, -70.6641, 0.28 ) }
    dend_26 { pt3dadd( 2.32704, -46.8699, -72.8865, 0.83 ) }
    dend_26 { pt3dadd( 1.04765, -49.2175, -76.1143, 0.28 ) }
    dend_26 { pt3dadd( 0.708363, -49.8906, -77.1146, 0.83 ) }
    dend_26 { pt3dadd( -0.642851, -52.9167, -81.8178, 0.28 ) }
    dend_26 { pt3dadd( -0.919328, -53.6397, -83.1323, 0.28 ) }
    dend_26 { pt3dadd( -1.20197, -54.4059, -84.632, 0.55 ) }
    dend_26 { pt3dadd( -1.46583, -55.1354, -86.2326, 0.55 ) }
    dend_26 { pt3dadd( -2.57676, -58.128, -93.1062, 0.28 ) }
    dend_26 { pt3dadd( -2.68376, -58.3694, -93.692, 0.83 ) }
    dend_26 { pt3dadd( -4.61273, -62.1334, -102.94, 0.28 ) }
    dend_26 { pt3dadd( -4.94195, -62.6999, -104.335, 0.83 ) }
    dend_26 { pt3dadd( -6.55378, -65.2552, -110.315, 0.28 ) }
    dend_26 { pt3dadd( -6.85323, -65.7277, -111.364, 0.83 ) }
    dend_26 { pt3dadd( -8.34736, -68.0754, -116.005, 0.28 ) }
    dend_26 { pt3dadd( -8.6826, -68.6066, -116.997, 0.83 ) }
    dend_26 { pt3dadd( -10.2649, -71.1903, -121.143, 0.28 ) }
    dend_26 { pt3dadd( -10.8262, -72.1393, -122.639, 0.83 ) }
    dend_26 { pt3dadd( -13.08, -75.9364, -127.926, 0.28 ) }
    dend_26 { pt3dadd( -13.3517, -76.4166, -128.597, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -11.7719, 18.0452, -3.90135, 0.55 ) }
    dend_20 { pt3dadd( -14.1375, 20.073, -2.59589, 0.55 ) }
    dend_20 { pt3dadd( -15.6355, 21.4256, -1.83186, 0.83 ) }
    dend_20 { pt3dadd( -16.8966, 22.5515, -1.26292, 0.28 ) }
    dend_20 { pt3dadd( -17.717, 23.2458, -0.946167, 0.83 ) }
    dend_20 { pt3dadd( -19.5348, 24.7971, -0.342856, 0.55 ) }
    dend_20 { pt3dadd( -21.0384, 26.001, 0.0902536, 1.11 ) }
    dend_20 { pt3dadd( -22.3172, 26.9665, 0.428879, 0.83 ) }
    dend_20 { pt3dadd( -23.6035, 27.901, 0.742179, 0.83 ) }
    dend_20 { pt3dadd( -25.4046, 29.1561, 1.09614, 0.83 ) }
    dend_20 { pt3dadd( -27.4755, 30.5141, 1.41013, 0.83 ) }
    dend_20 { pt3dadd( -29.6735, 31.8396, 1.61874, 0.83 ) }
    dend_20 { pt3dadd( -31.9533, 33.1289, 1.9074, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.62795, -11.9453, -1.2597, 1.11 ) }
    dend_16 { pt3dadd( 0.912053, -16.6553, -1.2597, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.62795, -11.9453, -1.2597, 1.38 ) }
    dend_1 { pt3dadd( -2.26211, -12.9069, -1.08126, 1.38 ) }
    dend_1 { pt3dadd( -3.97184, -15.4993, -0.600186, 1.38 ) }
    dend_1 { pt3dadd( -6.49897, -19.3311, 0.110895, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.689129, -39.9554, -0.0466218, 0.28 ) }
    axon_1 { pt3dadd( -0.884491, -54.9541, -0.0466218, 0.28 ) }
    axon_1 { pt3dadd( -1.07985, -69.9528, -0.0466218, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 65/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -13.3517, -76.4166, -128.597, 0.28 ) }
    dend_28 { pt3dadd( -14.9521, -78.4242, -129.964, 0.28 ) }
    dend_28 { pt3dadd( -15.6185, -79.2602, -130.533, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 68/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -13.3517, -76.4166, -128.597, 0.28 ) }
    dend_27 { pt3dadd( -13.3421, -79.4702, -127.097, 0.28 ) }
    dend_27 { pt3dadd( -13.3257, -80.2566, -126.728, 0.83 ) }
    dend_27 { pt3dadd( -13.3479, -82.4438, -125.667, 0.28 ) }
    dend_27 { pt3dadd( -13.442, -84.3207, -124.747, 0.28 ) }
    dend_27 { pt3dadd( -13.5101, -85.0851, -124.109, 0.83 ) }
    dend_27 { pt3dadd( -13.6564, -86.5795, -122.691, 0.28 ) }
    dend_27 { pt3dadd( -13.6979, -86.9677, -122.297, 0.83 ) }
    dend_27 { pt3dadd( -13.9286, -89.1892, -119.894, 0.28 ) }
    dend_27 { pt3dadd( -14.0232, -90.1844, -118.794, 0.83 ) }
    dend_27 { pt3dadd( -14.7715, -96.1232, -112.076, 0.28 ) }
    dend_27 { pt3dadd( -14.862, -96.841, -111.222, 0.55 ) }
    dend_27 { pt3dadd( -15.0132, -97.9106, -109.888, 0.28 ) }
    dend_27 { pt3dadd( -15.0328, -98.0639, -109.687, 0.55 ) }
    dend_27 { pt3dadd( -15.1136, -99.188, -108.102, 0.28 ) }
    dend_27 { pt3dadd( -15.1184, -99.7018, -107.409, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 84/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -31.9533, 33.1289, 1.9074, 0.83 ) }
    dend_24 { pt3dadd( -33.37, 34.7051, 2.00378, 0.83 ) }
    dend_24 { pt3dadd( -34.367, 35.8144, 2.07161, 0.83 ) }
    dend_24 { pt3dadd( -35.4494, 37.0185, 2.14525, 0.28 ) }
    dend_24 { pt3dadd( -36.0776, 37.7174, 2.18798, 0.83 ) }
    dend_24 { pt3dadd( -42.1626, 45.3891, 4.21729, 0.83 ) }
    dend_24 { pt3dadd( -46.8161, 54.2383, 4.40976, 0.83 ) }
    dend_24 { pt3dadd( -52.1303, 62.6501, 3.40931, 0.83 ) }
    dend_24 { pt3dadd( -56.2719, 71.3142, 0.620181, 0.83 ) }
    dend_24 { pt3dadd( -61.0956, 79.0398, -3.5087, 0.83 ) }
    dend_24 { pt3dadd( -64.0549, 87.3569, -8.20642, 0.83 ) }
    dend_24 { pt3dadd( -67.1338, 95.9552, -12.2793, 0.83 ) }
    dend_24 { pt3dadd( -69.3628, 104.029, -17.7422, 0.83 ) }
    dend_24 { pt3dadd( -69.8297, 113.109, -21.9058, 0.83 ) }
    dend_24 { pt3dadd( -69.3773, 122.06, -26.3417, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 99/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -31.9533, 33.1289, 1.9074, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -32.3784, 35.0326, 1.3952, 0.55 ) }
    dend_21 { pt3dadd( -32.8511, 36.862, 0.933879, 0.55 ) }
    dend_21 { pt3dadd( -33.0756, 37.7006, 0.73373, 1.11 ) }
    dend_21 { pt3dadd( -33.4254, 39.1092, 0.426917, 0.28 ) }
    dend_21 { pt3dadd( -33.6817, 40.1148, 0.195649, 0.83 ) }
    dend_21 { pt3dadd( -34.1635, 41.8567, -0.298959, 0.55 ) }
    dend_21 { pt3dadd( -34.8897, 44.0044, -1.00646, 0.83 ) }
    dend_21 { pt3dadd( -36.027, 46.4021, -2.03253, 0.28 ) }
    dend_21 { pt3dadd( -36.9569, 47.9426, -2.83971, 0.28 ) }
    dend_21 { pt3dadd( -37.5648, 48.7199, -3.30406, 0.55 ) }
    dend_21 { pt3dadd( -39.3844, 50.4588, -4.48433, 0.55 ) }
    dend_21 { pt3dadd( -41.4285, 51.9109, -5.61068, 0.83 ) }
    dend_21 { pt3dadd( -44.6398, 53.6412, -7.1908, 0.55 ) }
    dend_21 { pt3dadd( -46.2248, 54.3323, -7.85309, 0.28 ) }
    dend_21 { pt3dadd( -48.3246, 55.135, -8.59531, 0.83 ) }
    dend_21 { pt3dadd( -50.9566, 56.1173, -9.39522, 0.55 ) }
    dend_21 { pt3dadd( -52.481, 56.678, -9.77309, 0.55 ) }
    dend_21 { pt3dadd( -53.9298, 57.2681, -10.0883, 0.83 ) }
    dend_21 { pt3dadd( -55.7329, 58.1061, -10.3269, 0.28 ) }
    dend_21 { pt3dadd( -56.8306, 58.6498, -10.4498, 0.55 ) }
    dend_21 { pt3dadd( -58.9777, 59.7942, -10.6613, 0.28 ) }
    dend_21 { pt3dadd( -59.8341, 60.3041, -10.7433, 0.55 ) }
    dend_21 { pt3dadd( -61.2178, 61.1367, -10.8501, 0.55 ) }
    dend_21 { pt3dadd( -64.2313, 62.9332, -11.0378, 0.28 ) }
    dend_21 { pt3dadd( -65.8367, 63.8816, -11.1408, 0.83 ) }
    dend_21 { pt3dadd( -68.4343, 65.4987, -11.2994, 0.28 ) }
    dend_21 { pt3dadd( -71.9612, 67.7982, -11.5355, 0.28 ) }
    dend_21 { pt3dadd( -74.4929, 69.5733, -11.7619, 0.83 ) }
    dend_21 { pt3dadd( -77.6065, 71.9483, -12.104, 0.28 ) }
    dend_21 { pt3dadd( -78.7791, 72.9621, -12.2569, 0.83 ) }
    dend_21 { pt3dadd( -81.0245, 75.0806, -12.5489, 0.28 ) }
    dend_21 { pt3dadd( -82.2788, 76.3932, -12.7612, 0.55 ) }
    dend_21 { pt3dadd( -84.3965, 78.8084, -13.1933, 0.28 ) }
    dend_21 { pt3dadd( -85.3768, 80.0669, -13.4427, 0.55 ) }
    dend_21 { pt3dadd( -86.0484, 80.9522, -13.6291, 0.28 ) }
    dend_21 { pt3dadd( -86.7628, 81.8523, -13.831, 0.55 ) }
    dend_21 { pt3dadd( -88.9053, 84.3294, -14.6222, 0.28 ) }
    dend_21 { pt3dadd( -89.8969, 85.3894, -15.0451, 0.55 ) }
    dend_21 { pt3dadd( -90.89, 86.3541, -15.5905, 0.28 ) }
    dend_21 { pt3dadd( -92.1687, 87.4928, -16.3558, 0.28 ) }
    dend_21 { pt3dadd( -93.4358, 88.5321, -17.1621, 0.55 ) }
    dend_21 { pt3dadd( -95.6299, 90.3008, -18.6733, 0.28 ) }
    dend_21 { pt3dadd( -96.1236, 90.6875, -19.0118, 0.55 ) }
    dend_21 { pt3dadd( -98.0307, 92.1982, -20.3137, 0.28 ) }
    dend_21 { pt3dadd( -99.2615, 93.1786, -21.1716, 0.83 ) }
    dend_21 { pt3dadd( -102.319, 95.6513, -23.3537, 0.28 ) }
    dend_21 { pt3dadd( -103.718, 96.73, -24.349, 0.83 ) }
    dend_21 { pt3dadd( -106.184, 98.5958, -26.0577, 0.28 ) }
    dend_21 { pt3dadd( -107.731, 99.7691, -27.1272, 0.28 ) }
    dend_21 { pt3dadd( -108.104, 100.053, -27.368, 0.55 ) }
    dend_21 { pt3dadd( -109.243, 100.914, -28.0781, 0.28 ) }
    dend_21 { pt3dadd( -111.187, 102.361, -29.2098, 1.11 ) }
    dend_21 { pt3dadd( -114.907, 105.049, -31.2124, 0.28 ) }
    dend_21 { pt3dadd( -115.206, 105.264, -31.3611, 0.55 ) }
    dend_21 { pt3dadd( -117.335, 106.74, -32.2975, 0.28 ) }
    dend_21 { pt3dadd( -117.773, 107.025, -32.47, 0.55 ) }
    dend_21 { pt3dadd( -118.946, 107.694, -32.8928, 0.28 ) }
    dend_21 { pt3dadd( -119.697, 108.009, -33.2434, 0.55 ) }
    dend_21 { pt3dadd( -120.821, 108.237, -33.9025, 0.28 ) }
    dend_21 { pt3dadd( -121.55, 108.34, -34.3891, 0.55 ) }
    dend_21 { pt3dadd( -123.733, 108.52, -35.9686, 0.28 ) }
    dend_21 { pt3dadd( -125.501, 108.657, -37.2307, 0.83 ) }
    dend_21 { pt3dadd( -129.211, 108.99, -39.8743, 0.28 ) }
    dend_21 { pt3dadd( -130.016, 109.173, -40.4359, 0.55 ) }
    dend_21 { pt3dadd( -131.571, 109.73, -41.4888, 0.28 ) }
    dend_21 { pt3dadd( -132.232, 110.079, -41.8552, 0.55 ) }
    dend_21 { pt3dadd( -133.383, 110.93, -42.2992, 0.28 ) }
    dend_21 { pt3dadd( -134.534, 111.941, -42.6235, 0.83 ) }
    dend_21 { pt3dadd( -138.109, 115.6, -43.1766, 0.28 ) }
    dend_21 { pt3dadd( -138.691, 116.259, -43.2617, 0.55 ) }
    dend_21 { pt3dadd( -140.419, 118.424, -43.471, 0.28 ) }
    dend_21 { pt3dadd( -141.305, 119.631, -43.5678, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 0.912053, -16.6553, -1.2597, 0.83 ) }
    dend_18 { pt3dadd( 0.772173, -18.1725, -1.32294, 0.83 ) }
    dend_18 { pt3dadd( 0.674419, -19.3347, -1.31134, 0.28 ) }
    dend_18 { pt3dadd( 0.540092, -21.3518, -1.19152, 1.11 ) }
    dend_18 { pt3dadd( 0.453577, -23.8527, -0.918422, 0.55 ) }
    dend_18 { pt3dadd( 0.367278, -26.9126, -0.511589, 0.55 ) }
    dend_18 { pt3dadd( 0.361249, -29.0604, -0.181962, 1.11 ) }
    dend_18 { pt3dadd( 0.460164, -32.8904, 0.643775, 1.11 ) }
    dend_18 { pt3dadd( 0.553713, -35.2381, 1.27021, 0.83 ) }
    dend_18 { pt3dadd( 0.716725, -37.7076, 2.06999, 0.83 ) }
    dend_18 { pt3dadd( 0.782996, -38.4423, 2.34004, 0.83 ) }
    dend_18 { pt3dadd( 1.04815, -41.2177, 3.39219, 0.83 ) }
    dend_18 { pt3dadd( 1.30552, -43.9303, 4.51245, 0.83 ) }
    dend_18 { pt3dadd( 1.43843, -45.7861, 5.28587, 0.83 ) }
    dend_18 { pt3dadd( 1.50401, -47.8815, 6.20677, 0.83 ) }
    dend_18 { pt3dadd( 1.46965, -50.1526, 7.23525, 0.83 ) }
    dend_18 { pt3dadd( 1.36328, -52.6893, 8.47703, 0.83 ) }
    dend_18 { pt3dadd( 1.18024, -56.2091, 10.2915, 0.83 ) }
    dend_18 { pt3dadd( 1.1067, -59.0487, 11.8226, 0.83 ) }
    dend_18 { pt3dadd( 1.15327, -62.2162, 13.7451, 0.83 ) }
    dend_18 { pt3dadd( 1.30875, -65.1168, 15.6218, 0.83 ) }
    dend_18 { pt3dadd( 1.59622, -67.3549, 17.155, 0.83 ) }
    dend_18 { pt3dadd( 1.86755, -68.7272, 18.0871, 0.83 ) }
    dend_18 { pt3dadd( 2.24519, -70.1844, 19.0674, 0.83 ) }
    dend_18 { pt3dadd( 2.64656, -71.2893, 19.8798, 0.55 ) }
    dend_18 { pt3dadd( 3.69829, -73.4516, 21.2963, 0.83 ) }
    dend_18 { pt3dadd( 4.83992, -75.3477, 22.5233, 0.55 ) }
    dend_18 { pt3dadd( 5.84926, -77.213, 23.5265, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_18 { pt3dadd( 5.31278, -85.9147, 28.4248, 0.83 ) }
    dend_18 { pt3dadd( 4.29071, -94.1513, 34.0028, 0.83 ) }
    dend_18 { pt3dadd( 3.97451, -101.522, 40.7537, 0.83 ) }
    dend_18 { pt3dadd( 4.95083, -108.168, 48.1617, 0.83 ) }
    dend_18 { pt3dadd( 6.98412, -113.529, 56.3545, 0.83 ) }
    dend_18 { pt3dadd( 7.84745, -116.987, 65.698, 0.83 ) }
    dend_18 { pt3dadd( 10.2811, -119.922, 74.9426, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 7/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.912053, -16.6553, -1.2597, 0.83 ) }
    dend_17 { pt3dadd( 2.75529, -17.7811, -0.970083, 0.83 ) }
    dend_17 { pt3dadd( 5.3538, -19.1916, -0.507392, 0.83 ) }
    dend_17 { pt3dadd( 6.38901, -19.7645, -0.271581, 0.83 ) }
    dend_17 { pt3dadd( 8.01773, -20.6653, 0.106149, 0.55 ) }
    dend_17 { pt3dadd( 8.97956, -21.2333, 0.327789, 1.11 ) }
    dend_17 { pt3dadd( 10.5481, -22.1797, 0.683132, 0.83 ) }
    dend_17 { pt3dadd( 12.7848, -23.5593, 1.15041, 0.83 ) }
    dend_17 { pt3dadd( 14.9907, -24.9908, 1.57741, 0.83 ) }
    dend_17 { pt3dadd( 17.4245, -26.7261, 1.89703, 0.83 ) }
    dend_17 { pt3dadd( 19.3627, -28.2695, 2.04387, 0.55 ) }
    dend_17 { pt3dadd( 20.2899, -29.1027, 2.04084, 0.83 ) }
    dend_17 { pt3dadd( 21.6125, -30.4072, 1.89967, 0.28 ) }
    dend_17 { pt3dadd( 22.5777, -31.4052, 1.68802, 0.55 ) }
    dend_17 { pt3dadd( 24.3115, -32.9545, 1.18426, 0.28 ) }
    dend_17 { pt3dadd( 24.6196, -33.1872, 1.1072, 0.83 ) }
    dend_17 { pt3dadd( 26.2578, -34.2573, 0.842184, 0.28 ) }
    dend_17 { pt3dadd( 26.9732, -34.6902, 0.806722, 0.28 ) }
    dend_17 { pt3dadd( 28.7131, -35.6629, 0.883919, 0.83 ) }
    dend_17 { pt3dadd( 31.6232, -37.2082, 1.24095, 0.83 ) }
    dend_17 { pt3dadd( 33.6179, -38.2494, 1.53215, 0.55 ) }
    dend_17 { pt3dadd( 35.8431, -39.4015, 1.82605, 0.83 ) }
    dend_17 { pt3dadd( 37.6613, -40.2491, 2.0812, 0.28 ) }
    dend_17 { pt3dadd( 38.7249, -40.7248, 2.25963, 0.83 ) }
    dend_17 { pt3dadd( 41.0255, -41.6904, 2.69473, 0.28 ) }
    dend_17 { pt3dadd( 42.913, -42.4374, 3.11553, 0.55 ) }
    dend_17 { pt3dadd( 44.9762, -43.1298, 3.58782, 0.55 ) }
    dend_17 { pt3dadd( 48.2464, -44.0287, 4.39644, 0.55 ) }
    dend_17 { pt3dadd( 50.0283, -44.4992, 4.8777, 0.28 ) }
    dend_17 { pt3dadd( 50.541, -44.639, 5.03606, 0.55 ) }
    dend_17 { pt3dadd( 52.8605, -45.2103, 5.81021, 0.28 ) }
    dend_17 { pt3dadd( 54.1355, -45.532, 6.2704, 0.55 ) }
    dend_17 { pt3dadd( 55.3104, -45.8476, 6.66154, 0.28 ) }
    dend_17 { pt3dadd( 56.264, -46.1507, 6.92941, 0.83 ) }
    dend_17 { pt3dadd( 58.1437, -46.8093, 7.34613, 0.55 ) }
    dend_17 { pt3dadd( 60.7404, -47.8424, 7.85014, 0.55 ) }
    dend_17 { pt3dadd( 62.5747, -48.6022, 8.13142, 0.55 ) }
    dend_17 { pt3dadd( 63.3965, -48.9394, 8.2529, 0.28 ) }
    dend_17 { pt3dadd( 63.8896, -49.1556, 8.32033, 0.83 ) }
    dend_17 { pt3dadd( 65.4759, -49.9109, 8.54622, 0.83 ) }
    dend_17 { pt3dadd( 67.007, -50.7501, 8.77666, 0.28 ) }
    dend_17 { pt3dadd( 67.9389, -51.3274, 8.89178, 0.55 ) }
    dend_17 { pt3dadd( 69.4718, -52.2417, 9.04958, 0.28 ) }
    dend_17 { pt3dadd( 70.518, -52.8003, 9.13083, 0.83 ) }
    dend_17 { pt3dadd( 72.3115, -53.6738, 9.23028, 0.28 ) }
    dend_17 { pt3dadd( 73.0177, -54.0134, 9.25677, 0.55 ) }
    dend_17 { pt3dadd( 75.1015, -55.1245, 9.29686, 0.28 ) }
    dend_17 { pt3dadd( 76.3132, -55.8526, 9.29748, 0.83 ) }
    dend_17 { pt3dadd( 77.4407, -56.5589, 9.27379, 0.28 ) }
    dend_17 { pt3dadd( 78.9435, -57.5023, 9.22813, 0.83 ) }
    dend_17 { pt3dadd( 81.4387, -59.0908, 9.1416, 0.28 ) }
    dend_17 { pt3dadd( 83.0975, -60.1944, 9.11172, 0.55 ) }
    dend_17 { pt3dadd( 85.1611, -61.7088, 9.15147, 0.55 ) }
    dend_17 { pt3dadd( 94.2355, -65.8841, 9.62203, 0.55 ) }
    dend_17 { pt3dadd( 102.654, -71.2317, 10.3538, 0.55 ) }
    dend_17 { pt3dadd( 111.399, -76.0332, 9.66541, 0.55 ) }
    dend_17 { pt3dadd( 120.514, -79.9623, 10.8762, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.49897, -19.3311, 0.110895, 1.11 ) }
    dend_5 { pt3dadd( -8.35275, -23.6935, 0.957923, 1.11 ) }
    dend_5 { pt3dadd( -9.44904, -26.2733, 1.45884, 1.11 ) }
    dend_5 { pt3dadd( -11.1327, -30.2354, 2.22815, 1.11 ) }
    dend_5 { pt3dadd( -12.3843, -33.1806, 2.8, 0.83 ) }
    dend_5 { pt3dadd( -13.8565, -36.6451, 3.47269, 0.83 ) }
    dend_5 { pt3dadd( -14.9777, -39.2834, 3.98497, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.49897, -19.3311, 0.110895, 0.83 ) }
    dend_2 { pt3dadd( -9.43955, -19.1229, -2.02925, 0.83 ) }
    dend_2 { pt3dadd( -10.7853, -18.9095, -3.13014, 0.83 ) }
    dend_2 { pt3dadd( -12.8839, -18.4083, -4.87516, 0.55 ) }
    dend_2 { pt3dadd( -14.8531, -17.742, -6.58882, 0.83 ) }
    dend_2 { pt3dadd( -17.6852, -16.6698, -8.95737, 0.55 ) }
    dend_2 { pt3dadd( -21.6073, -15.0541, -12.0835, 0.55 ) }
    dend_2 { pt3dadd( -23.3098, -14.1975, -13.4049, 0.55 ) }
    dend_2 { pt3dadd( -24.6252, -13.4545, -14.4773, 0.83 ) }
    dend_2 { pt3dadd( -26.6321, -12.1282, -16.1311, 0.83 ) }
    dend_2 { pt3dadd( -28.0443, -11.0904, -17.1425, 0.55 ) }
    dend_2 { pt3dadd( -29.323, -10.0795, -17.9237, 0.83 ) }
    dend_2 { pt3dadd( -31.6737, -8.1313, -18.649, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -141.305, 119.631, -43.5678, 0.28 ) }
    dend_23 { pt3dadd( -138.558, 122.41, -42.8391, 0.28 ) }
    dend_23 { pt3dadd( -137.814, 122.979, -42.5195, 0.83 ) }
    dend_23 { pt3dadd( -136.192, 123.901, -41.473, 0.55 ) }
    dend_23 { pt3dadd( -134.722, 124.597, -40.6018, 0.55 ) }
    dend_23 { pt3dadd( -131.807, 125.733, -39.0266, 0.28 ) }
    dend_23 { pt3dadd( -130.508, 126.173, -38.324, 0.55 ) }
    dend_23 { pt3dadd( -127.475, 126.828, -36.9885, 0.55 ) }
    dend_23 { pt3dadd( -122.705, 127.609, -35.2457, 0.28 ) }
    dend_23 { pt3dadd( -119.861, 127.962, -34.1877, 0.55 ) }
    dend_23 { pt3dadd( -117.154, 128.193, -33.2786, 0.28 ) }
    dend_23 { pt3dadd( -115.262, 128.292, -32.8785, 0.55 ) }
    dend_23 { pt3dadd( -109.751, 128.619, -32.4249, 0.28 ) }
    dend_23 { pt3dadd( -108.391, 128.686, -32.6484, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 98/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -141.305, 119.631, -43.5678, 0.28 ) }
    dend_22 { pt3dadd( -144.193, 123.701, -42.7727, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -145.542, 125.631, -42.3891, 0.83 ) }
    dend_22 { pt3dadd( -146.838, 127.429, -42.045, 0.28 ) }
    dend_22 { pt3dadd( -147.528, 128.375, -41.8374, 0.55 ) }
    dend_22 { pt3dadd( -149.36, 130.81, -41.2711, 0.28 ) }
    dend_22 { pt3dadd( -149.761, 131.292, -41.1972, 0.55 ) }
    dend_22 { pt3dadd( -151.201, 132.877, -41.078, 0.28 ) }
    dend_22 { pt3dadd( -152.425, 134.141, -41.0244, 0.55 ) }
    dend_22 { pt3dadd( -153.816, 135.503, -41.0848, 0.28 ) }
    dend_22 { pt3dadd( -154.452, 136.099, -41.2006, 0.55 ) }
    dend_22 { pt3dadd( -158.82, 139.976, -42.5783, 0.28 ) }
    dend_22 { pt3dadd( -159.859, 140.89, -43.0734, 0.55 ) }
    dend_22 { pt3dadd( -161.09, 141.957, -43.7675, 0.28 ) }
    dend_22 { pt3dadd( -161.51, 142.346, -44.0332, 0.55 ) }
    dend_22 { pt3dadd( -164.698, 145.511, -46.344, 0.28 ) }
    dend_22 { pt3dadd( -165.915, 146.827, -47.351, 0.83 ) }
    dend_22 { pt3dadd( -170.195, 151.801, -51.2681, 0.28 ) }
    dend_22 { pt3dadd( -171.047, 152.811, -52.0944, 0.55 ) }
    dend_22 { pt3dadd( -172.533, 154.615, -53.6016, 0.28 ) }
    dend_22 { pt3dadd( -173.942, 156.371, -54.9941, 0.55 ) }
    dend_22 { pt3dadd( -175.196, 157.998, -56.1689, 0.28 ) }
    dend_22 { pt3dadd( -175.951, 158.988, -56.7727, 0.55 ) }
    dend_22 { pt3dadd( -177.695, 161.217, -57.8791, 0.28 ) }
    dend_22 { pt3dadd( -178.489, 162.106, -58.2381, 1.38 ) }
    dend_22 { pt3dadd( -182.975, 166.54, -59.6553, 0.28 ) }
    dend_22 { pt3dadd( -184.154, 167.648, -59.8156, 0.55 ) }
    dend_22 { pt3dadd( -185.992, 169.311, -59.8272, 0.28 ) }
    dend_22 { pt3dadd( -187.309, 170.499, -59.7761, 1.94 ) }
    dend_22 { pt3dadd( -192.024, 174.7, -59.2368, 0.28 ) }
    dend_22 { pt3dadd( -192.888, 175.441, -59.0958, 0.55 ) }
    dend_22 { pt3dadd( -196.968, 178.571, -58.0242, 0.28 ) }
    dend_22 { pt3dadd( -198.42, 179.625, -57.6249, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.9777, -39.2834, 3.98497, 0.83 ) }
    dend_9 { pt3dadd( -15.9708, -42.4316, 4.07689, 0.83 ) }
    dend_9 { pt3dadd( -16.8404, -45.1884, 4.15738, 0.83 ) }
    dend_9 { pt3dadd( -17.517, -47.3332, 4.22, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 35/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -14.9777, -39.2834, 3.98497, 0.83 ) }
    dend_6 { pt3dadd( -16.8433, -41.1937, 1.14599, 0.83 ) }
    dend_6 { pt3dadd( -18.0899, -42.8428, -1.74343, 0.55 ) }
    dend_6 { pt3dadd( -18.9079, -44.2737, -4.35176, 0.83 ) }
    dend_6 { pt3dadd( -19.3487, -45.5679, -6.91067, 0.55 ) }
    dend_6 { pt3dadd( -19.6264, -46.5967, -8.94317, 0.55 ) }
    dend_6 { pt3dadd( -19.9015, -48.3083, -12.4375, 0.83 ) }
    dend_6 { pt3dadd( -19.7939, -49.4351, -14.8174, 0.83 ) }
    dend_6 { pt3dadd( -19.518, -50.6305, -17.3269, 0.55 ) }
    dend_6 { pt3dadd( -18.8837, -52.8948, -22.0222, 0.28 ) }
    dend_6 { pt3dadd( -18.7336, -53.5419, -23.2452, 0.28 ) }
    dend_6 { pt3dadd( -18.5615, -54.9791, -25.7014, 0.83 ) }
    dend_6 { pt3dadd( -18.5114, -56.283, -27.5376, 0.55 ) }
    dend_6 { pt3dadd( -18.4253, -57.5332, -29.1257, 0.83 ) }
    dend_6 { pt3dadd( -18.338, -58.5471, -30.3698, 0.83 ) }
    dend_6 { pt3dadd( -18.1317, -60.9989, -33.1258, 0.28 ) }
    dend_6 { pt3dadd( -18.0009, -62.0263, -34.3365, 0.83 ) }
    dend_6 { pt3dadd( -17.7335, -63.4088, -36.0002, 0.83 ) }
    dend_6 { pt3dadd( -16.9866, -65.545, -38.7217, 0.28 ) }
    dend_6 { pt3dadd( -16.3063, -67.0475, -40.7941, 0.83 ) }
    dend_6 { pt3dadd( -15.7779, -68.0948, -42.4514, 0.83 ) }
    dend_6 { pt3dadd( -14.9649, -69.7476, -45.3978, 0.28 ) }
    dend_6 { pt3dadd( -14.5753, -70.7808, -47.3424, 0.28 ) }
    dend_6 { pt3dadd( -14.4906, -71.324, -48.447, 0.55 ) }
    dend_6 { pt3dadd( -14.4906, -72.2652, -50.3692, 0.55 ) }
    dend_6 { pt3dadd( -14.5599, -73.9914, -53.9849, 0.83 ) }
    dend_6 { pt3dadd( -14.7331, -75.1599, -56.358, 0.28 ) }
    dend_6 { pt3dadd( -14.8629, -75.7063, -57.3586, 0.55 ) }
    dend_6 { pt3dadd( -15.3009, -77.3771, -60.161, 0.28 ) }
    dend_6 { pt3dadd( -15.4247, -77.925, -60.9986, 0.83 ) }
    dend_6 { pt3dadd( -15.6333, -79.371, -63.0112, 0.28 ) }
    dend_6 { pt3dadd( -15.7058, -79.9012, -63.7079, 0.55 ) }
    dend_6 { pt3dadd( -15.915, -81.2881, -65.5377, 0.28 ) }
    dend_6 { pt3dadd( -16.0099, -81.8579, -66.2889, 0.83 ) }
    dend_6 { pt3dadd( -16.5775, -84.5294, -69.7656, 0.28 ) }
    dend_6 { pt3dadd( -17.0057, -86.2358, -71.9613, 0.83 ) }
    dend_6 { pt3dadd( -17.7778, -88.7541, -75.2169, 0.28 ) }
    dend_6 { pt3dadd( -17.8944, -89.0899, -75.7054, 0.55 ) }
    dend_6 { pt3dadd( -18.5165, -90.7727, -78.2668, 0.28 ) }
    dend_6 { pt3dadd( -18.6645, -91.1724, -78.876, 0.55 ) }
    dend_6 { pt3dadd( -19.1968, -92.8192, -81.3572, 0.28 ) }
    dend_6 { pt3dadd( -19.4873, -93.8176, -82.8091, 1.11 ) }
    dend_6 { pt3dadd( -20.3191, -97.596, -88.045, 0.28 ) }
    dend_6 { pt3dadd( -20.4114, -98.2488, -88.9212, 0.28 ) }
    dend_6 { pt3dadd( -20.496, -99.3244, -90.2551, 0.83 ) }
    dend_6 { pt3dadd( -20.5963, -102.405, -93.6419, 0.28 ) }
    dend_6 { pt3dadd( -20.5811, -102.99, -94.1645, 0.55 ) }
    dend_6 { pt3dadd( -20.3762, -105.727, -96.1188, 0.28 ) }
    dend_6 { pt3dadd( -20.2553, -107.151, -96.804, 0.83 ) }
    dend_6 { pt3dadd( -20.1505, -108.87, -97.5232, 0.83 ) }
    dend_6 { pt3dadd( -20.1038, -111.214, -98.2677, 0.28 ) }
    dend_6 { pt3dadd( -20.1291, -114.264, -98.8895, 0.28 ) }
    dend_6 { pt3dadd( -20.1431, -114.798, -98.9888, 0.83 ) }
    dend_6 { pt3dadd( -20.299, -118.435, -99.6555, 0.28 ) }
    dend_6 { pt3dadd( -20.3413, -119.276, -99.8198, 0.55 ) }
    dend_6 { pt3dadd( -20.406, -121.701, -100.309, 0.28 ) }
    dend_6 { pt3dadd( -20.5122, -125.046, -100.976, 0.28 ) }
    dend_6 { pt3dadd( -20.5445, -126.697, -101.315, 1.11 ) }
    dend_6 { pt3dadd( -20.4773, -130.894, -102.137, 0.28 ) }
    dend_6 { pt3dadd( -20.3997, -133.672, -102.669, 0.28 ) }
    dend_6 { pt3dadd( -20.3711, -134.876, -102.869, 0.55 ) }
    dend_6 { pt3dadd( -20.3472, -136.248, -103.066, 0.83 ) }
    dend_6 { pt3dadd( -20.3799, -137.848, -103.294, 0.83 ) }
    dend_6 { pt3dadd( -20.6064, -142.257, -103.893, 0.28 ) }
    dend_6 { pt3dadd( -20.6957, -143.385, -104.078, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -20.9177, -146.204, -104.675, 0.28 ) }
    dend_6 { pt3dadd( -20.9358, -146.477, -104.744, 0.83 ) }
    dend_6 { pt3dadd( -21.1599, -150.362, -105.874, 0.28 ) }
    dend_6 { pt3dadd( -21.2202, -151.437, -106.281, 0.83 ) }
    dend_6 { pt3dadd( -21.3946, -155.472, -108.106, 0.28 ) }
    dend_6 { pt3dadd( -21.4226, -156.54, -108.595, 1.11 ) }
    dend_6 { pt3dadd( -21.477, -158.787, -109.624, 0.28 ) }
    dend_6 { pt3dadd( -21.5132, -159.928, -110.147, 0.83 ) }
    dend_6 { pt3dadd( -21.6232, -164.115, -112.012, 0.28 ) }
    dend_6 { pt3dadd( -21.6485, -164.819, -112.358, 0.55 ) }
    dend_6 { pt3dadd( -21.7806, -166.523, -113.212, 0.28 ) }
    dend_6 { pt3dadd( -21.8855, -167.813, -113.831, 0.55 ) }
    dend_6 { pt3dadd( -22.1797, -171.8, -115.673, 0.28 ) }
    dend_6 { pt3dadd( -22.2451, -173.113, -116.247, 0.55 ) }
    dend_6 { pt3dadd( -22.2865, -175.785, -117.382, 0.28 ) }
    dend_6 { pt3dadd( -22.2361, -177.478, -118.127, 0.55 ) }
    dend_6 { pt3dadd( -22.0955, -179.293, -118.919, 0.55 ) }
    dend_6 { pt3dadd( -21.513, -184.074, -120.848, 0.28 ) }
    dend_6 { pt3dadd( -21.3357, -185.091, -121.226, 0.55 ) }
    dend_6 { pt3dadd( -20.5102, -188.982, -122.639, 0.28 ) }
    dend_6 { pt3dadd( -20.1634, -190.343, -123.151, 0.55 ) }
    dend_6 { pt3dadd( -19.3926, -193.141, -124.269, 0.28 ) }
    dend_6 { pt3dadd( -19.1558, -194.022, -124.64, 0.55 ) }
    dend_6 { pt3dadd( -18.3089, -197.138, -125.967, 0.28 ) }
    dend_6 { pt3dadd( -18.0667, -198.155, -126.423, 0.55 ) }
    dend_6 { pt3dadd( -17.2307, -202.484, -128.411, 0.28 ) }
    dend_6 { pt3dadd( -16.9919, -204.225, -129.279, 0.83 ) }
    dend_6 { pt3dadd( -16.8685, -206.006, -130.201, 0.28 ) }
    dend_6 { pt3dadd( -16.856, -206.901, -130.662, 0.55 ) }
    dend_6 { pt3dadd( -16.9808, -209.188, -131.826, 0.28 ) }
    dend_6 { pt3dadd( -17.0478, -209.964, -132.227, 0.55 ) }
    dend_6 { pt3dadd( -17.386, -212.259, -133.546, 0.28 ) }
    dend_6 { pt3dadd( -17.5919, -213.64, -134.377, 0.28 ) }
    dend_6 { pt3dadd( -17.6828, -214.319, -134.767, 0.83 ) }
    dend_6 { pt3dadd( -17.9684, -217.579, -136.591, 0.28 ) }
    dend_6 { pt3dadd( -18.0226, -218.912, -137.319, 0.83 ) }
    dend_6 { pt3dadd( -17.9496, -221.914, -139.001, 0.28 ) }
    dend_6 { pt3dadd( -17.7258, -224.341, -140.34, 0.28 ) }
    dend_6 { pt3dadd( -17.4698, -226.013, -141.263, 0.55 ) }
    dend_6 { pt3dadd( -16.8123, -229.282, -142.999, 0.28 ) }
    dend_6 { pt3dadd( -16.4732, -230.524, -143.636, 0.83 ) }
    dend_6 { pt3dadd( -15.6586, -233.055, -144.855, 0.28 ) }
    dend_6 { pt3dadd( -15.3252, -233.922, -145.223, 0.55 ) }
    dend_6 { pt3dadd( -15.1155, -234.465, -145.463, 0.28 ) }
    dend_6 { pt3dadd( -14.9303, -234.967, -145.666, 0.55 ) }
    dend_6 { pt3dadd( -14.5548, -236.257, -146.064, 0.55 ) }
    dend_6 { pt3dadd( -14.1139, -238.334, -146.804, 0.83 ) }
    dend_6 { pt3dadd( -13.7516, -240.479, -147.588, 0.28 ) }
    dend_6 { pt3dadd( -13.6139, -241.411, -147.93, 0.55 ) }
    dend_6 { pt3dadd( -13.2967, -243.945, -148.82, 0.28 ) }
    dend_6 { pt3dadd( -13.0833, -246.182, -149.564, 0.83 ) }
    dend_6 { pt3dadd( -12.8111, -250.343, -150.908, 0.28 ) }
    dend_6 { pt3dadd( -12.7555, -251.918, -151.435, 0.28 ) }
    dend_6 { pt3dadd( -12.7559, -255.083, -152.465, 0.83 ) }
    dend_6 { pt3dadd( -12.8288, -257.536, -153.201, 0.28 ) }
    dend_6 { pt3dadd( -12.9635, -258.877, -153.575, 0.28 ) }
    dend_6 { pt3dadd( -13.0105, -259.188, -153.65, 0.55 ) }
    dend_6 { pt3dadd( -13.3302, -260.586, -153.835, 0.28 ) }
    dend_6 { pt3dadd( -13.8891, -262.352, -154.064, 0.83 ) }
    dend_6 { pt3dadd( -14.9884, -265.234, -154.423, 0.28 ) }
    dend_6 { pt3dadd( -15.6689, -266.965, -154.631, 0.83 ) }
    dend_6 { pt3dadd( -16.4193, -268.93, -154.845, 0.28 ) }
    dend_6 { pt3dadd( -17.4368, -271.738, -155.095, 0.83 ) }
    dend_6 { pt3dadd( -18.1991, -273.858, -155.229, 0.28 ) }
    dend_6 { pt3dadd( -18.3346, -274.232, -155.25, 0.55 ) }
    dend_6 { pt3dadd( -18.8628, -275.669, -155.303, 0.28 ) }
    dend_6 { pt3dadd( -19.2079, -276.764, -155.319, 0.55 ) }
    dend_6 { pt3dadd( -19.7374, -278.639, -155.41, 0.28 ) }
    dend_6 { pt3dadd( -20.0037, -279.996, -155.603, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -31.6737, -8.1313, -18.649, 0.55 ) }
    dend_4 { pt3dadd( -33.0495, -8.68868, -19.6696, 0.55 ) }
    dend_4 { pt3dadd( -35.4871, -9.03344, -21.9772, 0.55 ) }
    dend_4 { pt3dadd( -37.3117, -9.03062, -24.355, 0.55 ) }
    dend_4 { pt3dadd( -38.2874, -9.02848, -25.7244, 0.83 ) }
    dend_4 { pt3dadd( -40.3486, -9.10666, -28.8022, 0.55 ) }
    dend_4 { pt3dadd( -41.1202, -9.15342, -29.9445, 0.55 ) }
    dend_4 { pt3dadd( -43.926, -9.49184, -34.7359, 0.55 ) }
    dend_4 { pt3dadd( -46.3742, -9.90408, -39.4471, 0.28 ) }
    dend_4 { pt3dadd( -46.9544, -10.0059, -40.5475, 0.83 ) }
    dend_4 { pt3dadd( -48.8694, -10.4045, -44.0187, 0.28 ) }
    dend_4 { pt3dadd( -49.4459, -10.5935, -45.0121, 0.55 ) }
    dend_4 { pt3dadd( -51.1567, -11.475, -47.8064, 0.28 ) }
    dend_4 { pt3dadd( -51.9494, -12.0451, -48.9344, 0.55 ) }
    dend_4 { pt3dadd( -52.708, -12.521, -49.8279, 0.55 ) }
    dend_4 { pt3dadd( -53.6634, -12.934, -50.9943, 0.55 ) }
    dend_4 { pt3dadd( -56.2558, -13.5622, -54.1081, 0.28 ) }
    dend_4 { pt3dadd( -56.4405, -13.5644, -54.3351, 0.55 ) }
    dend_4 { pt3dadd( -59.0815, -13.0027, -57.455, 0.28 ) }
    dend_4 { pt3dadd( -60.0836, -12.5418, -58.6491, 0.55 ) }
    dend_4 { pt3dadd( -62.238, -11.0735, -61.0945, 0.28 ) }
    dend_4 { pt3dadd( -63.055, -10.3148, -61.9686, 0.55 ) }
    dend_4 { pt3dadd( -64.6308, -8.55158, -63.3668, 0.28 ) }
    dend_4 { pt3dadd( -65.1353, -7.92787, -63.6856, 0.55 ) }
    dend_4 { pt3dadd( -67.2116, -5.0878, -64.8111, 0.28 ) }
    dend_4 { pt3dadd( -68.7573, -2.90955, -65.5728, 0.55 ) }
    dend_4 { pt3dadd( -70.2228, -0.903228, -66.1517, 0.28 ) }
    dend_4 { pt3dadd( -70.9919, 0.0827812, -66.4515, 0.55 ) }
    dend_4 { pt3dadd( -73.9974, 3.59975, -67.3476, 0.28 ) }
    dend_4 { pt3dadd( -77.6803, 7.10779, -68.599, 0.55 ) }
    dend_4 { pt3dadd( -81.0087, 9.67087, -69.692, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -82.0425, 10.2837, -70.01, 0.55 ) }
    dend_4 { pt3dadd( -83.7649, 11.1033, -70.4874, 0.28 ) }
    dend_4 { pt3dadd( -86.322, 12.1578, -71.2317, 0.55 ) }
    dend_4 { pt3dadd( -93.0277, 14.4449, -73.1768, 0.28 ) }
    dend_4 { pt3dadd( -94.4603, 14.8797, -73.5578, 0.83 ) }
    dend_4 { pt3dadd( -97.3822, 15.6739, -74.4672, 0.28 ) }
    dend_4 { pt3dadd( -99.3615, 16.2001, -75.1557, 0.28 ) }
    dend_4 { pt3dadd( -101.323, 16.7328, -75.8759, 0.83 ) }
    dend_4 { pt3dadd( -102.346, 17.0508, -76.1176, 0.83 ) }
    dend_4 { pt3dadd( -107.345, 18.8075, -76.3076, 0.28 ) }
    dend_4 { pt3dadd( -108.529, 19.1828, -76.4363, 0.55 ) }
    dend_4 { pt3dadd( -112.742, 20.1909, -76.7127, 0.28 ) }
    dend_4 { pt3dadd( -114.712, 20.5025, -76.7076, 1.11 ) }
    dend_4 { pt3dadd( -124.46, 21.501, -76.6014, 0.28 ) }
    dend_4 { pt3dadd( -126.61, 21.6322, -76.6278, 0.83 ) }
    dend_4 { pt3dadd( -134.892, 21.7289, -76.7583, 0.28 ) }
    dend_4 { pt3dadd( -139.263, 21.6795, -77.5344, 0.83 ) }
    dend_4 { pt3dadd( -142.57, 21.5928, -78.6624, 0.28 ) }
    dend_4 { pt3dadd( -145.789, 21.4444, -80.2486, 0.55 ) }
    dend_4 { pt3dadd( -147.58, 21.3737, -81.5065, 0.28 ) }
    dend_4 { pt3dadd( -148.703, 21.4012, -82.3473, 0.55 ) }
    dend_4 { pt3dadd( -152.425, 21.8693, -85.6965, 0.28 ) }
    dend_4 { pt3dadd( -152.804, 21.9291, -86.1862, 0.55 ) }
    dend_4 { pt3dadd( -153.552, 22.0501, -87.3401, 0.55 ) }
    dend_4 { pt3dadd( -155.636, 22.3768, -90.7025, 0.55 ) }
    dend_4 { pt3dadd( -156.424, 22.5336, -92.1335, 0.28 ) }
    dend_4 { pt3dadd( -158.18, 22.9711, -95.5679, 0.55 ) }
    dend_4 { pt3dadd( -160.391, 23.452, -100.174, 0.55 ) }
    dend_4 { pt3dadd( -161.472, 23.6658, -102.55, 0.28 ) }
    dend_4 { pt3dadd( -161.813, 23.7391, -103.31, 0.83 ) }
    dend_4 { pt3dadd( -164.3, 24.2719, -108.638, 0.28 ) }
    dend_4 { pt3dadd( -164.651, 24.3391, -109.406, 0.83 ) }
    dend_4 { pt3dadd( -166.759, 24.7395, -113.849, 0.28 ) }
    dend_4 { pt3dadd( -166.949, 24.7463, -114.256, 0.55 ) }
    dend_4 { pt3dadd( -167.649, 24.6195, -115.818, 0.28 ) }
    dend_4 { pt3dadd( -167.914, 24.5192, -116.405, 0.55 ) }
    dend_4 { pt3dadd( -169.583, 23.6247, -119.751, 0.28 ) }
    dend_4 { pt3dadd( -170.054, 23.411, -120.76, 0.55 ) }
    dend_4 { pt3dadd( -172.071, 22.7195, -125.15, 0.28 ) }
    dend_4 { pt3dadd( -172.638, 22.5746, -126.451, 0.83 ) }
    dend_4 { pt3dadd( -174.661, 22.1865, -131.156, 0.28 ) }
    dend_4 { pt3dadd( -174.881, 22.1492, -131.723, 0.55 ) }
    dend_4 { pt3dadd( -176.639, 21.9022, -136.491, 0.28 ) }
    dend_4 { pt3dadd( -176.899, 21.8256, -137.321, 0.83 ) }
    dend_4 { pt3dadd( -177.672, 21.4705, -140.065, 0.28 ) }
    dend_4 { pt3dadd( -177.868, 21.2933, -140.911, 0.83 ) }
    dend_4 { pt3dadd( -178.952, 18.7279, -148.479, 0.28 ) }
    dend_4 { pt3dadd( -179.007, 18.3557, -149.292, 0.55 ) }
    dend_4 { pt3dadd( -179.036, 16.681, -152.016, 0.28 ) }
    dend_4 { pt3dadd( -179.023, 16.4572, -152.346, 0.83 ) }
    dend_4 { pt3dadd( -178.835, 14.6276, -154.636, 0.28 ) }
    dend_4 { pt3dadd( -178.499, 12.1686, -157.332, 0.55 ) }
    dend_4 { pt3dadd( -178.333, 11.0387, -158.311, 0.28 ) }
    dend_4 { pt3dadd( -178.214, 10.1233, -159.142, 0.55 ) }
    dend_4 { pt3dadd( -177.978, 7.50184, -161.495, 0.28 ) }
    dend_4 { pt3dadd( -177.9, 6.43045, -162.547, 0.55 ) }
    dend_4 { pt3dadd( -177.894, 5.36657, -163.602, 0.28 ) }
    dend_4 { pt3dadd( -177.953, 4.72573, -164.209, 0.55 ) }
    dend_4 { pt3dadd( -178.355, 2.52581, -166.694, 0.28 ) }
    dend_4 { pt3dadd( -178.531, 1.94313, -167.484, 0.55 ) }
    dend_4 { pt3dadd( -179.793, -0.652113, -171.419, 0.28 ) }
    dend_4 { pt3dadd( -180.281, -1.30983, -172.795, 0.55 ) }
    dend_4 { pt3dadd( -180.753, -1.73633, -174.011, 0.55 ) }
    dend_4 { pt3dadd( -182.144, -2.50933, -177.204, 0.55 ) }
    dend_4 { pt3dadd( -183.606, -2.80241, -180.041, 0.28 ) }
    dend_4 { pt3dadd( -184.186, -2.82423, -181.119, 0.55 ) }
    dend_4 { pt3dadd( -186.498, -2.36382, -184.87, 0.28 ) }
    dend_4 { pt3dadd( -187.047, -2.1416, -185.821, 0.55 ) }
    dend_4 { pt3dadd( -188.131, -1.42571, -187.764, 0.28 ) }
    dend_4 { pt3dadd( -188.786, -0.668639, -188.735, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -31.6737, -8.1313, -18.649, 0.55 ) }
    dend_3 { pt3dadd( -34.7459, -8.80445, -18.2267, 0.55 ) }
    dend_3 { pt3dadd( -37.3843, -9.48978, -17.7922, 0.83 ) }
    dend_3 { pt3dadd( -40.4565, -10.3293, -17.3664, 0.55 ) }
    dend_3 { pt3dadd( -42.2185, -10.9023, -16.9199, 0.28 ) }
    dend_3 { pt3dadd( -44.4165, -11.7317, -16.2069, 0.55 ) }
    dend_3 { pt3dadd( -47.7517, -13.2288, -14.9576, 0.28 ) }
    dend_3 { pt3dadd( -48.8055, -13.8045, -14.513, 0.55 ) }
    dend_3 { pt3dadd( -51.513, -15.5251, -13.3945, 0.55 ) }
    dend_3 { pt3dadd( -55.5732, -18.3926, -11.6565, 0.55 ) }
    dend_3 { pt3dadd( -57.9096, -20.0789, -10.6644, 0.28 ) }
    dend_3 { pt3dadd( -61.1017, -22.379, -9.31031, 0.55 ) }
    dend_3 { pt3dadd( -62.8569, -23.6472, -8.62793, 0.55 ) }
    dend_3 { pt3dadd( -65.5931, -25.6415, -7.48493, 0.55 ) }
    dend_3 { pt3dadd( -66.4716, -26.2857, -7.11616, 0.83 ) }
    dend_3 { pt3dadd( -68.1652, -27.4373, -6.62319, 0.28 ) }
    dend_3 { pt3dadd( -68.669, -27.7533, -6.47599, 0.55 ) }
    dend_3 { pt3dadd( -70.2228, -28.6099, -6.00487, 0.28 ) }
    dend_3 { pt3dadd( -71.1989, -29.0953, -5.65168, 0.55 ) }
    dend_3 { pt3dadd( -72.6932, -29.8291, -5.04587, 0.28 ) }
    dend_3 { pt3dadd( -74.1667, -30.5628, -4.4581, 0.55 ) }
    dend_3 { pt3dadd( -75.8623, -31.4664, -3.76744, 0.28 ) }
    dend_3 { pt3dadd( -77.1003, -32.1228, -3.25288, 0.55 ) }
    dend_3 { pt3dadd( -79.4281, -33.3493, -2.21902, 0.28 ) }
    dend_3 { pt3dadd( -81.039, -34.1902, -1.45945, 0.28 ) }
    dend_3 { pt3dadd( -82.1803, -34.7693, -0.877622, 0.28 ) }
    dend_3 { pt3dadd( -83.6492, -35.4992, -0.10142, 0.55 ) }
    dend_3 { pt3dadd( -85.3206, -36.2917, 0.694337, 0.55 ) }
    dend_3 { pt3dadd( -86.9223, -37.0896, 1.4105, 0.28 ) }
    dend_3 { pt3dadd( -88.2704, -37.7955, 1.95558, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -90.417, -38.9668, 2.66716, 0.55 ) }
    dend_3 { pt3dadd( -91.7416, -39.7265, 2.99623, 0.55 ) }
    dend_3 { pt3dadd( -93.4181, -40.6564, 3.31629, 0.55 ) }
    dend_3 { pt3dadd( -94.5095, -41.2363, 3.47901, 0.55 ) }
    dend_3 { pt3dadd( -97.8767, -43.007, 3.95453, 0.55 ) }
    dend_3 { pt3dadd( -100.102, -44.1491, 4.29969, 0.55 ) }
    dend_3 { pt3dadd( -102.948, -45.5863, 4.74934, 0.55 ) }
    dend_3 { pt3dadd( -105.881, -47.0712, 5.23337, 0.28 ) }
    dend_3 { pt3dadd( -108.428, -48.3645, 5.65589, 0.55 ) }
    dend_3 { pt3dadd( -111.264, -49.7633, 6.11541, 0.55 ) }
    dend_3 { pt3dadd( -114.459, -51.3472, 6.61899, 0.55 ) }
    dend_3 { pt3dadd( -116.792, -52.5295, 7.01418, 0.28 ) }
    dend_3 { pt3dadd( -121.138, -54.8301, 7.73456, 0.55 ) }
    dend_3 { pt3dadd( -122.835, -55.7806, 7.95328, 0.83 ) }
    dend_3 { pt3dadd( -124.296, -56.6013, 8.11087, 0.28 ) }
    dend_3 { pt3dadd( -125.157, -57.0784, 8.15756, 0.55 ) }
    dend_3 { pt3dadd( -127.235, -58.2644, 8.20598, 0.28 ) }
    dend_3 { pt3dadd( -127.946, -58.6843, 8.21284, 0.28 ) }
    dend_3 { pt3dadd( -129.613, -59.7151, 8.23339, 0.55 ) }
    dend_3 { pt3dadd( -137.334, -64.9451, 11.8447, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.517, -47.3332, 4.22, 0.83 ) }
    dend_15 { pt3dadd( -16.7391, -48.4927, 5.43177, 0.83 ) }
    dend_15 { pt3dadd( -16.1156, -49.628, 6.66319, 0.83 ) }
    dend_15 { pt3dadd( -14.798, -52.6289, 9.73166, 0.83 ) }
    dend_15 { pt3dadd( -12.7648, -58.3166, 15.1592, 0.55 ) }
    dend_15 { pt3dadd( -12.1626, -60.3078, 16.9145, 0.55 ) }
    dend_15 { pt3dadd( -11.6304, -62.4569, 18.7381, 0.83 ) }
    dend_15 { pt3dadd( -11.1984, -65.4376, 21.2646, 0.55 ) }
    dend_15 { pt3dadd( -11.0359, -67.9039, 23.2731, 0.83 ) }
    dend_15 { pt3dadd( -11.052, -69.4194, 24.3571, 0.83 ) }
    dend_15 { pt3dadd( -11.159, -71.4048, 25.3437, 0.83 ) }
    dend_15 { pt3dadd( -11.3512, -73.5721, 26.3177, 0.83 ) }
    dend_15 { pt3dadd( -11.5467, -75.7172, 27.1192, 0.55 ) }
    dend_15 { pt3dadd( -11.7983, -77.4274, 27.7626, 0.55 ) }
    dend_15 { pt3dadd( -12.3164, -79.9455, 28.8195, 0.55 ) }
    dend_15 { pt3dadd( -13.2122, -82.8441, 30.2242, 0.55 ) }
    dend_15 { pt3dadd( -14.0874, -84.8169, 31.2377, 0.55 ) }
    dend_15 { pt3dadd( -15.4153, -87.289, 32.4887, 0.83 ) }
    dend_15 { pt3dadd( -17.2561, -90.1807, 33.9936, 0.28 ) }
    dend_15 { pt3dadd( -17.8611, -91.0101, 34.4323, 0.55 ) }
    dend_15 { pt3dadd( -20.2294, -93.8714, 35.9137, 0.55 ) }
    dend_15 { pt3dadd( -21.9322, -95.6672, 36.781, 0.55 ) }
    dend_15 { pt3dadd( -22.9172, -96.618, 37.1328, 0.55 ) }
    dend_15 { pt3dadd( -24.1153, -97.6346, 37.4047, 0.28 ) }
    dend_15 { pt3dadd( -26.3181, -99.3694, 37.677, 0.55 ) }
    dend_15 { pt3dadd( -28.6063, -101.06, 37.9175, 0.55 ) }
    dend_15 { pt3dadd( -30.7318, -102.465, 38.0714, 0.55 ) }
    dend_15 { pt3dadd( -33.6342, -104.215, 38.287, 0.55 ) }
    dend_15 { pt3dadd( -35.8348, -105.466, 38.4586, 0.55 ) }
    dend_15 { pt3dadd( -37.5662, -106.376, 38.5954, 0.55 ) }
    dend_15 { pt3dadd( -39.3839, -107.266, 38.7786, 0.28 ) }
    dend_15 { pt3dadd( -40.6117, -107.882, 38.9153, 0.55 ) }
    dend_15 { pt3dadd( -43.1724, -109.333, 39.2285, 0.28 ) }
    dend_15 { pt3dadd( -44.2645, -109.95, 39.3644, 0.55 ) }
    dend_15 { pt3dadd( -46.0596, -119.03, 43.1517, 0.55 ) }
    dend_15 { pt3dadd( -47.6, -127.974, 47.351, 0.55 ) }
    dend_15 { pt3dadd( -49.2174, -135.737, 53.4428, 0.55 ) }
    dend_15 { pt3dadd( -49.8788, -143.854, 59.2458, 0.55 ) }
    dend_15 { pt3dadd( -51.2758, -151.779, 65.183, 0.55 ) }
    dend_15 { pt3dadd( -52.9913, -160.785, 69.1752, 0.55 ) }
    dend_15 { pt3dadd( -55.6175, -169.058, 74.1427, 0.55 ) }
    dend_15 { pt3dadd( -59.1142, -176.888, 79.2857, 0.55 ) }
    dend_15 { pt3dadd( -60.6056, -184.895, 85.088, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 63/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -17.517, -47.3332, 4.22, 0.83 ) }
    dend_10 { pt3dadd( -18.3743, -51.6766, 3.38542, 0.83 ) }
    dend_10 { pt3dadd( -18.9171, -54.9134, 2.76492, 0.83 ) }
    dend_10 { pt3dadd( -19.6471, -59.4696, 2.14021, 0.83 ) }
    dend_10 { pt3dadd( -20.1428, -62.5866, 1.82075, 0.83 ) }
    dend_10 { pt3dadd( -20.8421, -66.6762, 1.5723, 0.83 ) }
    dend_10 { pt3dadd( -21.485, -70.0047, 1.46249, 0.83 ) }
    dend_10 { pt3dadd( -22.2585, -73.3687, 1.58336, 0.83 ) }
    dend_10 { pt3dadd( -23.1812, -76.9476, 1.85976, 0.55 ) }
    dend_10 { pt3dadd( -23.8221, -79.2, 2.2065, 1.11 ) }
    dend_10 { pt3dadd( -24.6343, -82.1255, 2.84358, 0.55 ) }
    dend_10 { pt3dadd( -25.3478, -84.6826, 3.47374, 0.55 ) }
    dend_10 { pt3dadd( -26.0288, -87.3238, 4.17619, 0.55 ) }
    dend_10 { pt3dadd( -26.3496, -88.6812, 4.52712, 0.55 ) }
    dend_10 { pt3dadd( -26.9518, -91.8709, 5.21487, 0.83 ) }
    dend_10 { pt3dadd( -27.6744, -96.999, 6.2065, 0.83 ) }
    dend_10 { pt3dadd( -27.9474, -99.4517, 6.60786, 0.83 ) }
    dend_10 { pt3dadd( -28.2464, -102.44, 7.03583, 0.83 ) }
    dend_10 { pt3dadd( -28.4789, -104.838, 7.31912, 0.83 ) }
    dend_10 { pt3dadd( -28.7927, -107.629, 7.56817, 0.83 ) }
    dend_10 { pt3dadd( -29.2211, -110.968, 7.7714, 0.83 ) }
    dend_10 { pt3dadd( -29.7358, -114.799, 7.992, 0.83 ) }
    dend_10 { pt3dadd( -30.2631, -118.882, 8.19926, 0.83 ) }
    dend_10 { pt3dadd( -30.6314, -121.913, 8.32099, 0.83 ) }
    dend_10 { pt3dadd( -31.0609, -126.005, 8.52402, 0.83 ) }
    dend_10 { pt3dadd( -31.4364, -130.457, 8.78409, 0.83 ) }
    dend_10 { pt3dadd( -31.6454, -134.056, 9.02259, 0.83 ) }
    dend_10 { pt3dadd( -31.6833, -136.6, 9.19343, 0.83 ) }
    dend_10 { pt3dadd( -31.5833, -141.173, 9.51648, 0.83 ) }
    dend_10 { pt3dadd( -31.4214, -143.979, 9.67828, 0.55 ) }
    dend_10 { pt3dadd( -31.2371, -145.636, 9.73749, 0.55 ) }
    dend_10 { pt3dadd( -31.0945, -146.504, 9.73134, 0.83 ) }
    dend_10 { pt3dadd( -30.7797, -147.921, 9.64305, 0.28 ) }
    dend_10 { pt3dadd( -30.4335, -149.259, 9.39928, 0.83 ) }
    dend_10 { pt3dadd( -29.7987, -151.431, 8.7266, 0.28 ) }
    dend_10 { pt3dadd( -29.2618, -153.461, 7.95912, 0.83 ) }
    dend_10 { pt3dadd( -28.9538, -154.92, 7.41046, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -28.7096, -156.53, 6.87259, 0.83 ) }
    dend_10 { pt3dadd( -28.3742, -160.248, 5.68568, 0.28 ) }
    dend_10 { pt3dadd( -28.3184, -161.812, 5.20973, 0.28 ) }
    dend_10 { pt3dadd( -28.3665, -163.417, 4.69549, 0.55 ) }
    dend_10 { pt3dadd( -28.5681, -166.006, 3.83073, 0.55 ) }
    dend_10 { pt3dadd( -29.0535, -169.414, 2.73166, 0.55 ) }
    dend_10 { pt3dadd( -29.4469, -171.212, 2.18561, 0.28 ) }
    dend_10 { pt3dadd( -29.8454, -172.505, 1.82536, 0.55 ) }
    dend_10 { pt3dadd( -31.1012, -175.848, 0.837283, 0.28 ) }
    dend_10 { pt3dadd( -31.519, -176.83, 0.539749, 0.55 ) }
    dend_10 { pt3dadd( -32.6164, -179.276, -0.184434, 0.55 ) }
    dend_10 { pt3dadd( -33.7773, -181.667, -0.874676, 0.55 ) }
    dend_10 { pt3dadd( -35.199, -184.73, -1.66831, 0.28 ) }
    dend_10 { pt3dadd( -35.8235, -186.151, -2.01516, 0.28 ) }
    dend_10 { pt3dadd( -36.7953, -188.537, -2.50212, 0.55 ) }
    dend_10 { pt3dadd( -37.5234, -190.621, -2.92428, 0.28 ) }
    dend_10 { pt3dadd( -37.9247, -192.052, -3.20296, 0.55 ) }
    dend_10 { pt3dadd( -38.514, -194.901, -3.63858, 0.28 ) }
    dend_10 { pt3dadd( -38.8632, -197.286, -3.87027, 0.55 ) }
    dend_10 { pt3dadd( -39.1506, -200.177, -4.05221, 0.28 ) }
    dend_10 { pt3dadd( -39.298, -203.512, -4.12529, 0.28 ) }
    dend_10 { pt3dadd( -39.3007, -203.982, -4.11782, 0.55 ) }
    dend_10 { pt3dadd( -39.2296, -205.828, -4.03334, 0.83 ) }
    dend_10 { pt3dadd( -39.0317, -208.717, -3.85183, 0.83 ) }
    dend_10 { pt3dadd( -38.7611, -211.816, -3.61639, 0.28 ) }
    dend_10 { pt3dadd( -38.5815, -213.896, -3.47843, 0.83 ) }
    dend_10 { pt3dadd( -38.4061, -216.668, -3.32065, 0.83 ) }
    dend_10 { pt3dadd( -38.2979, -219.718, -3.19738, 0.28 ) }
    dend_10 { pt3dadd( -38.2769, -221.943, -3.14873, 0.83 ) }
    dend_10 { pt3dadd( -38.3355, -225.171, -3.06502, 0.28 ) }
    dend_10 { pt3dadd( -38.4535, -226.725, -3.00425, 0.55 ) }
    dend_10 { pt3dadd( -38.6458, -228.081, -2.94927, 0.55 ) }
    dend_10 { pt3dadd( -38.8681, -229.298, -2.87304, 0.28 ) }
    dend_10 { pt3dadd( -38.9908, -229.908, -2.82789, 0.55 ) }
    dend_10 { pt3dadd( -39.2645, -231.543, -2.85132, 0.28 ) }
    dend_10 { pt3dadd( -39.3635, -232.629, -2.97735, 0.55 ) }
    dend_10 { pt3dadd( -39.4024, -234.164, -3.32497, 0.28 ) }
    dend_10 { pt3dadd( -39.3702, -235.93, -3.86537, 0.28 ) }
    dend_10 { pt3dadd( -39.3045, -237.768, -4.54162, 0.55 ) }
    dend_10 { pt3dadd( -39.1201, -241.305, -5.9581, 0.28 ) }
    dend_10 { pt3dadd( -38.9418, -243.705, -6.84332, 0.83 ) }
    dend_10 { pt3dadd( -38.6442, -247.407, -8.12405, 0.28 ) }
    dend_10 { pt3dadd( -38.5468, -248.626, -8.50458, 0.55 ) }
    dend_10 { pt3dadd( -38.4112, -251.056, -9.12638, 0.28 ) }
    dend_10 { pt3dadd( -38.2808, -254.412, -9.71815, 0.55 ) }
    dend_10 { pt3dadd( -38.1819, -257.833, -9.85434, 0.28 ) }
    dend_10 { pt3dadd( -38.1637, -258.979, -9.79055, 0.55 ) }
    dend_10 { pt3dadd( -38.1606, -260.913, -9.493, 0.28 ) }
    dend_10 { pt3dadd( -38.2109, -262.251, -9.24335, 0.55 ) }
    dend_10 { pt3dadd( -38.3339, -263.97, -8.86093, 0.55 ) }
    dend_10 { pt3dadd( -38.6556, -266.814, -8.20921, 0.28 ) }
    dend_10 { pt3dadd( -38.8841, -268.45, -7.89065, 0.55 ) }
    dend_10 { pt3dadd( -39.1965, -270.434, -7.52929, 0.28 ) }
    dend_10 { pt3dadd( -39.7223, -273.447, -7.03608, 0.28 ) }
    dend_10 { pt3dadd( -40.1076, -275.335, -6.78558, 0.55 ) }
    dend_10 { pt3dadd( -40.6846, -277.599, -6.50609, 0.28 ) }
    dend_10 { pt3dadd( -40.9549, -278.418, -6.44466, 0.55 ) }
    dend_10 { pt3dadd( -41.5138, -279.815, -6.4096, 0.28 ) }
    dend_10 { pt3dadd( -41.9899, -280.843, -6.5246, 0.55 ) }
    dend_10 { pt3dadd( -43.394, -283.585, -7.10386, 0.28 ) }
    dend_10 { pt3dadd( -44.0528, -284.788, -7.45493, 0.55 ) }
    dend_10 { pt3dadd( -45.4701, -287.267, -8.27048, 0.28 ) }
    dend_10 { pt3dadd( -46.4632, -288.982, -8.86521, 0.83 ) }
    dend_10 { pt3dadd( -48.8059, -293.018, -10.3659, 0.28 ) }
    dend_10 { pt3dadd( -49.4615, -294.143, -10.8405, 0.55 ) }
    dend_10 { pt3dadd( -50.5803, -296.163, -11.8518, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 66/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -20.0037, -279.996, -155.603, 0.28 ) }
    dend_8 { pt3dadd( -19.9921, -282.858, -155.935, 0.28 ) }
    dend_8 { pt3dadd( -19.9796, -283.976, -156.089, 0.83 ) }
    dend_8 { pt3dadd( -19.9097, -288.42, -156.749, 0.28 ) }
    dend_8 { pt3dadd( -19.8998, -289.814, -156.988, 0.83 ) }
    dend_8 { pt3dadd( -19.8152, -293.818, -157.738, 0.28 ) }
    dend_8 { pt3dadd( -19.7922, -294.904, -157.967, 0.83 ) }
    dend_8 { pt3dadd( -19.7279, -297.987, -158.731, 0.28 ) }
    dend_8 { pt3dadd( -19.7145, -298.529, -158.886, 0.55 ) }
    dend_8 { pt3dadd( -19.6424, -301.517, -159.843, 0.28 ) }
    dend_8 { pt3dadd( -19.6268, -303.536, -160.564, 0.83 ) }
    dend_8 { pt3dadd( -19.6781, -306.533, -161.721, 0.28 ) }
    dend_8 { pt3dadd( -19.709, -307.113, -161.976, 0.55 ) }
    dend_8 { pt3dadd( -19.8654, -308.838, -162.791, 0.28 ) }
    dend_8 { pt3dadd( -20.0705, -310.097, -163.401, 0.83 ) }
    dend_8 { pt3dadd( -20.4142, -311.709, -164.225, 0.28 ) }
    dend_8 { pt3dadd( -20.6714, -312.731, -164.771, 0.55 ) }
    dend_8 { pt3dadd( -21.0109, -314.273, -165.622, 0.28 ) }
    dend_8 { pt3dadd( -21.2691, -315.719, -166.421, 0.28 ) }
    dend_8 { pt3dadd( -21.5471, -317.798, -167.621, 0.55 ) }
    dend_8 { pt3dadd( -21.6602, -320.646, -169.245, 0.28 ) }
    dend_8 { pt3dadd( -21.6365, -321.273, -169.59, 0.55 ) }
    dend_8 { pt3dadd( -21.2314, -324.424, -171.336, 0.28 ) }
    dend_8 { pt3dadd( -20.9908, -325.451, -171.883, 0.83 ) }
    dend_8 { pt3dadd( -20.0609, -328.326, -173.452, 0.28 ) }
    dend_8 { pt3dadd( -19.1795, -330.421, -174.59, 0.28 ) }
    dend_8 { pt3dadd( -18.909, -330.986, -174.884, 0.55 ) }
    dend_8 { pt3dadd( -17.3482, -334.007, -176.362, 0.28 ) }
    dend_8 { pt3dadd( -16.3395, -335.753, -177.13, 0.28 ) }
    dend_8 { pt3dadd( -16.0837, -336.195, -177.312, 0.83 ) }
    dend_8 { pt3dadd( -14.673, -338.693, -178.191, 0.28 ) }
    dend_8 { pt3dadd( -14.2643, -339.556, -178.461, 0.55 ) }
    dend_8 { pt3dadd( -13.6691, -341.116, -178.848, 0.28 ) }
    dend_8 { pt3dadd( -13.2467, -342.881, -179.146, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( -13.1342, -343.877, -179.262, 0.55 ) }
    dend_8 { pt3dadd( -13.0388, -346.111, -179.411, 0.28 ) }
    dend_8 { pt3dadd( -13.0773, -347.88, -179.516, 0.83 ) }
    dend_8 { pt3dadd( -13.1737, -350.177, -179.667, 0.28 ) }
    dend_8 { pt3dadd( -13.2401, -352.187, -179.828, 0.28 ) }
    dend_8 { pt3dadd( -13.2983, -354.739, -180.056, 0.28 ) }
    dend_8 { pt3dadd( -13.2591, -356.396, -180.201, 0.83 ) }
    dend_8 { pt3dadd( -13.0016, -361.101, -180.657, 0.28 ) }
    dend_8 { pt3dadd( -12.8804, -362.238, -180.76, 0.55 ) }
    dend_8 { pt3dadd( -12.5355, -364.439, -180.932, 0.28 ) }
    dend_8 { pt3dadd( -12.4264, -364.977, -180.978, 0.55 ) }
    dend_8 { pt3dadd( -11.809, -367.537, -181.192, 0.28 ) }
    dend_8 { pt3dadd( -11.579, -368.384, -181.236, 0.55 ) }
    dend_8 { pt3dadd( -10.9189, -370.342, -181.13, 0.28 ) }
    dend_8 { pt3dadd( -10.6732, -371.128, -181.069, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -20.0037, -279.996, -155.603, 0.28 ) }
    dend_7 { pt3dadd( -21.1081, -282.046, -156.047, 0.28 ) }
    dend_7 { pt3dadd( -22.0819, -283.819, -156.297, 0.55 ) }
    dend_7 { pt3dadd( -23.5474, -286.396, -156.603, 0.28 ) }
    dend_7 { pt3dadd( -23.7393, -286.734, -156.645, 0.55 ) }
    dend_7 { pt3dadd( -24.4919, -288.028, -156.835, 0.28 ) }
    dend_7 { pt3dadd( -24.8119, -288.552, -156.93, 0.55 ) }
    dend_7 { pt3dadd( -26.145, -290.68, -157.365, 0.28 ) }
    dend_7 { pt3dadd( -26.5094, -291.256, -157.507, 0.55 ) }
    dend_7 { pt3dadd( -27.7666, -293.172, -158.066, 0.28 ) }
    dend_7 { pt3dadd( -28.3395, -294.136, -158.401, 0.55 ) }
    dend_7 { pt3dadd( -29.6269, -296.377, -159.256, 0.28 ) }
    dend_7 { pt3dadd( -29.9755, -297.028, -159.522, 1.11 ) }
    dend_7 { pt3dadd( -31.0729, -299.519, -160.712, 0.28 ) }
    dend_7 { pt3dadd( -31.4867, -300.706, -161.28, 0.55 ) }
    dend_7 { pt3dadd( -32.0718, -303.096, -162.703, 0.28 ) }
    dend_7 { pt3dadd( -32.2546, -304.334, -163.496, 0.55 ) }
    dend_7 { pt3dadd( -32.3183, -305.248, -164.12, 0.55 ) }
    dend_7 { pt3dadd( -32.3837, -308.073, -166.269, 0.28 ) }
    dend_7 { pt3dadd( -32.3839, -308.929, -166.973, 0.55 ) }
    dend_7 { pt3dadd( -32.4228, -312.356, -169.933, 0.28 ) }
    dend_7 { pt3dadd( -32.506, -314.264, -171.645, 0.28 ) }
    dend_7 { pt3dadd( -32.5574, -314.937, -172.294, 0.55 ) }
    dend_7 { pt3dadd( -32.9372, -317.215, -174.522, 0.28 ) }
    dend_7 { pt3dadd( -33.1329, -317.937, -175.208, 0.83 ) }
    dend_7 { pt3dadd( -33.6247, -319.464, -176.585, 0.28 ) }
    dend_7 { pt3dadd( -33.7224, -319.759, -176.811, 0.55 ) }
    dend_7 { pt3dadd( -34.3632, -321.752, -178.322, 0.28 ) }
    dend_7 { pt3dadd( -34.7981, -323.278, -179.332, 0.83 ) }
    dend_7 { pt3dadd( -35.3388, -325.497, -180.559, 0.28 ) }
    dend_7 { pt3dadd( -35.504, -326.374, -180.993, 0.55 ) }
    dend_7 { pt3dadd( -35.9059, -329.167, -182.198, 0.28 ) }
    dend_7 { pt3dadd( -35.959, -329.68, -182.389, 0.55 ) }
    dend_7 { pt3dadd( -36.095, -331.324, -182.799, 0.28 ) }
    dend_7 { pt3dadd( -36.1152, -331.762, -182.888, 0.55 ) }
    dend_7 { pt3dadd( -36.1714, -333.997, -183.223, 0.28 ) }
    dend_7 { pt3dadd( -36.1768, -334.54, -183.299, 0.83 ) }
    dend_7 { pt3dadd( -36.2631, -336.838, -183.578, 0.28 ) }
    dend_7 { pt3dadd( -36.413, -338.948, -183.903, 0.55 ) }
    dend_7 { pt3dadd( -36.6147, -340.447, -184.161, 0.55 ) }
    dend_7 { pt3dadd( -37.2312, -343.52, -184.738, 0.28 ) }
    dend_7 { pt3dadd( -37.4502, -344.322, -184.925, 0.83 ) }
    dend_7 { pt3dadd( -37.8766, -345.344, -185.22, 0.83 ) }
    dend_7 { pt3dadd( -39.3189, -347.708, -186.075, 0.28 ) }
    dend_7 { pt3dadd( -40.4093, -349.072, -186.668, 0.28 ) }
    dend_7 { pt3dadd( -41.108, -349.755, -186.966, 0.55 ) }
    dend_7 { pt3dadd( -42.5913, -350.944, -187.539, 0.28 ) }
    dend_7 { pt3dadd( -44.532, -352.363, -188.26, 0.28 ) }
    dend_7 { pt3dadd( -45.5458, -353.038, -188.624, 0.55 ) }
    dend_7 { pt3dadd( -46.6186, -353.577, -188.938, 0.28 ) }
    dend_7 { pt3dadd( -47.2988, -353.892, -189.14, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 66/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -50.5803, -296.163, -11.8518, 0.28 ) }
    dend_12 { pt3dadd( -48.9866, -297.733, -12.0158, 0.28 ) }
    dend_12 { pt3dadd( -47.1516, -299.539, -12.2046, 0.28 ) }
    dend_12 { pt3dadd( -45.8104, -300.86, -12.3426, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -50.5803, -296.163, -11.8518, 0.55 ) }
    dend_11 { pt3dadd( -53.6894, -298.774, -9.9017, 0.55 ) }
    dend_11 { pt3dadd( -55.4849, -300.622, -8.40891, 0.28 ) }
    dend_11 { pt3dadd( -56.0595, -301.465, -7.67497, 0.55 ) }
    dend_11 { pt3dadd( -57.3814, -304.144, -5.29905, 0.28 ) }
    dend_11 { pt3dadd( -57.666, -305.034, -4.57083, 0.83 ) }
    dend_11 { pt3dadd( -58.3098, -307.918, -2.31826, 0.28 ) }
    dend_11 { pt3dadd( -58.2966, -308.338, -2.04038, 0.55 ) }
    dend_11 { pt3dadd( -57.9633, -310.939, -0.673286, 0.28 ) }
    dend_11 { pt3dadd( -57.7874, -312.036, -0.168697, 0.55 ) }
    dend_11 { pt3dadd( -57.4234, -314.436, 0.624468, 0.28 ) }
    dend_11 { pt3dadd( -57.3265, -315.601, 0.923908, 0.55 ) }
    dend_11 { pt3dadd( -57.4671, -319.518, 1.62879, 0.28 ) }
    dend_11 { pt3dadd( -57.7859, -322.324, 2.04764, 0.28 ) }
    dend_11 { pt3dadd( -57.9772, -323.322, 2.17643, 0.83 ) }
    dend_11 { pt3dadd( -58.9429, -327.212, 2.70408, 0.28 ) }
    dend_11 { pt3dadd( -59.4609, -328.894, 2.95591, 0.55 ) }
    dend_11 { pt3dadd( -61.1008, -333.613, 3.68041, 0.28 ) }
    dend_11 { pt3dadd( -61.7336, -335.223, 3.97561, 0.55 ) }
    dend_11 { pt3dadd( -62.4179, -336.937, 4.17437, 0.28 ) }
    dend_11 { pt3dadd( -62.936, -338.282, 4.24765, 0.55 ) }
    dend_11 { pt3dadd( -63.5266, -339.818, 4.30512, 0.28 ) }
    dend_11 { pt3dadd( -64.2094, -341.817, 4.31327, 0.28 ) }
    dend_11 { pt3dadd( -64.5148, -342.875, 4.22753, 0.55 ) }
    dend_11 { pt3dadd( -65.6581, -347.222, 3.57006, 0.28 ) }
    dend_11 { pt3dadd( -65.8101, -347.971, 3.36792, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -45.8104, -300.86, -12.3426, 0.28 ) }
    dend_14 { pt3dadd( -43.0405, -302.112, -13.3889, 0.28 ) }
    dend_14 { pt3dadd( -41.011, -303.043, -14.204, 0.28 ) }
    dend_14 { pt3dadd( -40.0706, -303.409, -14.5741, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( -37.837, -304.22, -15.4334, 0.28 ) }
    dend_14 { pt3dadd( -36.7891, -304.532, -15.7509, 0.55 ) }
    dend_14 { pt3dadd( -34.0379, -305.235, -16.4273, 0.28 ) }
    dend_14 { pt3dadd( -33.3738, -305.367, -16.5222, 0.55 ) }
    dend_14 { pt3dadd( -30.5512, -305.741, -16.6627, 0.28 ) }
    dend_14 { pt3dadd( -30.1512, -305.774, -16.6569, 0.55 ) }
    dend_14 { pt3dadd( -27.0551, -305.942, -16.4659, 0.28 ) }
    dend_14 { pt3dadd( -25.9124, -306.021, -16.3777, 0.55 ) }
    dend_14 { pt3dadd( -21.3855, -306.485, -15.9651, 0.28 ) }
    dend_14 { pt3dadd( -20.4002, -306.645, -15.8785, 0.55 ) }
    dend_14 { pt3dadd( -17.3353, -307.358, -15.6358, 0.28 ) }
    dend_14 { pt3dadd( -15.0779, -308.057, -15.5397, 0.28 ) }
    dend_14 { pt3dadd( -13.6364, -308.65, -15.5699, 0.55 ) }
    dend_14 { pt3dadd( -11.3693, -309.816, -15.8395, 0.28 ) }
    dend_14 { pt3dadd( -10.2228, -310.551, -16.1063, 0.28 ) }
    dend_14 { pt3dadd( -9.56024, -311.023, -16.3393, 0.55 ) }
    dend_14 { pt3dadd( -7.40709, -312.734, -17.3618, 0.28 ) }
    dend_14 { pt3dadd( -6.64151, -313.372, -17.7528, 0.83 ) }
    dend_14 { pt3dadd( -3.64749, -315.885, -19.4071, 0.28 ) }
    dend_14 { pt3dadd( -3.36174, -316.124, -19.5833, 0.55 ) }
    dend_14 { pt3dadd( -1.13227, -317.934, -21.0398, 0.28 ) }
    dend_14 { pt3dadd( -0.914897, -318.103, -21.1858, 0.55 ) }
    dend_14 { pt3dadd( 1.06486, -319.666, -22.5913, 0.28 ) }
    dend_14 { pt3dadd( 1.92237, -320.331, -23.087, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 24/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -45.8104, -300.86, -12.3426, 0.28 ) }
    dend_13 { pt3dadd( -42.5482, -309.336, -14.5744, 0.28 ) }
    dend_13 { pt3dadd( -41.9581, -310.904, -14.8277, 0.55 ) }
    dend_13 { pt3dadd( -40.8309, -314.163, -15.2589, 0.28 ) }
    dend_13 { pt3dadd( -40.6396, -314.775, -15.2752, 0.55 ) }
    dend_13 { pt3dadd( -40.0914, -316.808, -15.2387, 0.28 ) }
    dend_13 { pt3dadd( -39.8522, -317.777, -15.203, 0.55 ) }
    dend_13 { pt3dadd( -39.2795, -320.802, -14.6295, 0.28 ) }
    dend_13 { pt3dadd( -39.0995, -321.805, -14.4973, 0.55 ) }
    dend_13 { pt3dadd( -38.3218, -326.232, -14.0738, 0.28 ) }
    dend_13 { pt3dadd( -37.8342, -328.725, -13.8194, 0.28 ) }
    dend_13 { pt3dadd( -37.6837, -329.543, -13.7345, 0.55 ) }
    dend_13 { pt3dadd( -37.0906, -333.108, -13.2942, 0.28 ) }
    dend_13 { pt3dadd( -36.9914, -333.879, -13.1667, 0.55 ) }
    dend_13 { pt3dadd( -36.7779, -336.301, -12.7586, 0.28 ) }
    dend_13 { pt3dadd( -36.8035, -338.159, -12.3919, 0.55 ) }
    dend_13 { pt3dadd( -37.1904, -341.904, -11.4912, 0.28 ) }
    dend_13 { pt3dadd( -37.3254, -342.812, -11.2574, 0.55 ) }
    dend_13 { pt3dadd( -38.199, -346.656, -10.1737, 0.28 ) }
    dend_13 { pt3dadd( -38.6281, -348.1, -9.73757, 0.83 ) }
    dend_13 { pt3dadd( -39.9189, -351.19, -8.7696, 0.28 ) }
    dend_13 { pt3dadd( -40.3791, -352.045, -8.47894, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, axon_0, dend_29, dend_26, dend_20, dend_16, dend_1, axon_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_5 = new SectionList()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_32 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_31 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_30 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_21 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_22 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_11 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_25 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_27 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_31 nseg = 11
    dend_30 nseg = 11
    dend_29 nseg = 13
    dend_26 nseg = 7
    dend_24 nseg = 5
    dend_21 nseg = 7
    dend_18 nseg = 7
    dend_17 nseg = 7
    dend_22 nseg = 5
    dend_6 nseg = 15
    dend_4 nseg = 15
    dend_3 nseg = 7
    dend_15 nseg = 9
    dend_10 nseg = 13
    dend_8 nseg = 5
    dend_7 nseg = 5
    dend_11 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_LBC_45f62e2816_0_0


