// Cell: cNAC187_L6_DBC_2bb1f65738_0_0
/*
{
  "id" : "cNAC187_L6_DBC_2bb1f65738_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.51491, 10.9227, 2.76", "-6.26682, 9.68269, 9.04626, 2.16", "-9.98091, 12.4847, 4.60218, 2.52", "-12.6762, 14.3153, 1.69939, 2.52", "-14.6365, 15.5301, -0.167697, 2.52", "-15.6674, 16.1104, -1.07457, 2.52", "-16.9116, 16.7276, -2.0261, 2.28", "-20.2269, 18.268, -4.13076, 1.92", "-21.6457, 18.8488, -4.79595, 1.92", "-24.7171, 19.9397, -6.06589, 1.8", "-26.5604, 20.5698, -6.72536, 1.8", "-30.546, 21.7667, -7.9611, 1.56", "-33.6434, 22.5925, -8.79279, 1.92", "-36.3148, 23.1802, -9.40485, 1.92", "-38.2231, 23.4133, -9.74934, 1.92", "-40.6616, 23.4486, -10.085, 1.92", "-45.3267, 23.201, -10.703, 1.8", "-46.1172, 23.0955, -10.8214, 1.8", "-47.7719, 22.7592, -11.0699, 1.8", "-51.6951, 21.7788, -11.7508, 1.32", "-53.0829, 21.4051, -12.0619, 1.32", "-55.7595, 20.6724, -12.9086, 1.92", "-56.8027, 20.5987, -13.5184, 1.92", "-57.5529, 21.1977, -14.6909, 1.92", "-57.8933, 21.6218, -15.4323, 1.92", "-58.2539, 22.1344, -16.3311, 1.92", "-58.7464, 22.4459, -17.1344, 1.92", "-59.5411, 22.5793, -18.1107, 1.92", "-61.8883, 22.5495, -20.7345, 1.44", "-63.6559, 22.4413, -22.5826, 1.44", "-64.5528, 22.348, -23.4623, 1.44", "-66.8629, 21.9776, -25.6268, 1.44", "-68.3855, 21.644, -27.0109, 1.8", "-69.5762, 21.3008, -28.0824, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 12.6099, 1.77275, 1.32", "-2.7827, 15.6082, 0.598057, 1.32", "-2.545, 18.7787, -0.496309, 1.32", "-2.42378, 20.5007, -1.02816, 1.32", "-2.30036, 22.3566, -1.53029, 1.32", "-2.2268, 23.5147, -1.80134, 1.32", "-2.12242, 24.8391, -2.06589, 1.32", "-1.98279, 26.4579, -2.22959, 1.32", "-1.88361, 27.4725, -2.19035, 1.32", "-1.68227, 29.3617, -2.03996, 1.08", "-1.44414, 31.3783, -1.83425, 1.56", "-1.18942, 33.5197, -1.56346, 1.56", "-0.95701, 35.3862, -1.28107, 1.56", "-0.317257, 39.6639, -0.508635, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 10.0944, 11.3727, 1.8", "-6.51889, 11.1251, 11.7617, 1.8", "-7.25193, 12.2188, 12.2028, 1.8", "-8.68608, 14.1969, 13.1594, 1.56", "-9.0977, 14.7647, 13.434, 1.56", "-10.038, 16.0616, 14.0612, 1.44", "-11.0184, 17.4139, 14.7151, 0.96", "-11.4348, 17.985, 15.02, 0.96", "-13.1578, 20.2134, 16.3207, 1.92", "-17.9775, 26.9282, 19.7351, 1.92", "-24.2677, 32.0503, 23.6279, 1.92", "-31.582, 36.7023, 26.0886, 1.92", "-38.2373, 42.3956, 28.0702, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -11.1118, 11.5527, 2.64", "1.56422, -12.6439, 11.4382, 2.64", "1.72007, -14.413, 11.3059, 2.64", "1.83501, -15.7177, 11.2083, 2.64", "1.94219, -16.9343, 11.1173, 2.64", "2.16027, -19.4098, 10.9322, 2.4", "2.37999, -21.9038, 10.7457, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -11.8821, 13.0827, 2.16", "5.07093, -12.7299, 12.7905, 2.16", "5.84341, -15.426, 12.0467, 2.16", "6.4321, -17.3552, 11.6128, 2.16", "7.44552, -20.6761, 10.8658, 2.16", "8.19063, -23.1178, 10.3166, 2.16", "8.7309, -24.8883, 9.91843, 2.16", "10.1592, -29.4994, 8.8653, 2.52", "11.1686, -33.0817, 8.05072, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 12.3077, 11.8327, 2.52", "-0.066006, 16.2419, 11.8327, 2.52", "0.470443, 20.1163, 11.8327, 2.52", "0.952167, 23.5955, 11.8327, 2.52", "1.19574, 25.3546, 11.8327, 2.52", "1.49253, 27.4981, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.20963", "6.433, -28.5011, -0.0046052, 1.20963", "9.697, -43.1416, -0.0046052, 1.20963" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-69.5762, 21.3008, -28.0824, 1.2", "-71.136, 23.7961, -26.9902, 1.2", "-72.8514, 25.6326, -26.0644, 1.2", "-74.1022, 26.4215, -25.5782, 1.2", "-74.925, 26.8486, -25.2927, 1.56", "-75.4431, 27.054, -25.217, 1.56", "-76.361, 27.3486, -25.1798, 1.56", "-78.9153, 27.8954, -25.2085, 0.96", "-82.9018, 28.539, -25.4971, 1.56", "-83.2978, 28.595, -25.5354, 1.56", "-88.2774, 29.2052, -26.1702, 1.08", "-89.8102, 29.3536, -26.4373, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-69.5762, 21.3008, -28.0824, 1.08", "-71.1487, 20.9985, -28.8811, 1.08", "-72.8139, 20.4866, -29.783, 1.56", "-76.284, 18.9106, -32.08, 0.84", "-77.5846, 18.1053, -33.1669, 0.84", "-78.0023, 17.7825, -33.5762, 0.84", "-79.0569, 16.8376, -34.7345, 0.84", "-80.009, 15.6786, -36.0836, 0.84", "-81.0579, 13.9939, -37.8966, 0.84", "-81.8521, 12.3335, -39.4322, 0.84", "-82.3239, 11.2735, -40.3394, 0.84", "-82.8265, 10.2282, -41.2162, 0.84", "-83.2643, 9.43449, -41.8479, 0.84", "-84.0709, 8.22977, -42.6553, 0.84", "-84.8831, 7.25912, -43.0891, 0.84", "-85.3941, 6.76824, -43.2297, 0.84", "-86.4985, 5.89156, -43.3964, 0.84", "-87.2956, 5.35631, -43.4443, 0.84", "-88.5476, 4.62592, -43.4363, 0.84", "-90.0936, 3.70189, -43.3512, 0.84", "-91.7735, 2.58118, -43.1916, 0.84", "-92.8399, 1.72144, -43.0311, 0.84", "-94.0885, 0.523749, -42.8102, 0.84", "-96.0724, -1.72169, -42.494, 0.84", "-97.6527, -3.84791, -42.2498, 1.32", "-98.7855, -5.61582, -42.0526, 0.6", "-99.9315, -7.72669, -41.8137, 1.2", "-100.753, -9.52709, -41.6416, 0.72", "-101.39, -11.2707, -41.5247, 0.72", "-101.707, -12.4305, -41.5027, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-0.317257, 39.6639, -0.508635, 1.32", "0.468448, 41.2477, 0.290244, 1.32", "2.24614, 45.1318, 1.97539, 0.96", "2.96245, 46.9392, 2.6466, 0.96", "3.54816, 48.8293, 3.22915, 1.2", "3.7936, 49.9089, 3.49714, 1.2", "3.95737, 50.8617, 3.70081, 1.2", "3.9946, 51.9302, 3.83426, 1.44", "3.75171, 53.3967, 3.83632, 1.08", "3.18704, 55.26, 3.83794, 1.08", "2.40025, 57.2872, 3.83934, 1.56", "2.15074, 57.84, 3.83955, 1.56", "1.3815, 59.3366, 3.83918, 1.56", "0.258888, 61.2615, 3.83633, 1.56", "0.158129, 61.4101, 3.83568, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-38.2373, 42.3956, 28.0702, 1.2", "-44.3967, 48.4635, 31.3, 1.2", "-49.097, 54.7523, 36.1479, 1.2", "-55.4451, 60.6976, 39.2482, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-38.2373, 42.3956, 28.0702, 1.44", "-45.0888, 49.4281, 31.5133, 1.2", "-50.6398, 57.2341, 35.4893, 1.2", "-56.8816, 64.8533, 38.7739, 1.2", "-64.014, 71.9721, 41.3669, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.37999, -21.9038, 10.7457, 1.2", "2.38671, -25.0904, 10.0857, 1.2", "2.43194, -26.9949, 9.6943, 1.2", "2.52732, -29.1361, 9.26844, 1.2", "2.63775, -31.0265, 8.90627, 1.2", "2.74624, -32.3718, 8.66419, 1.2", "2.83513, -33.3783, 8.4838, 1.2", "2.95145, -34.1361, 8.34051, 1.2", "3.13859, -35.1152, 8.16881, 1.2", "3.2781, -35.6894, 8.0994, 1.2", "3.58488, -36.7755, 8.0068, 1.2", "3.797, -37.5714, 7.95086, 1.2", "3.96234, -38.4297, 7.9011, 1.2", "4.01374, -39.1249, 7.86056, 1.2", "3.97987, -40.5108, 7.78213, 1.2", "3.93173, -41.095, 7.75051, 1.2", "3.78656, -42.3451, 7.68107, 1.2", "3.53171, -44.4675, 7.5736, 1.68", "3.20277, -47.0511, 7.43892, 1.08", "2.92213, -49.3129, 7.31938, 0.72", "2.80488, -50.467, 7.26144, 1.92", "2.59512, -53.4749, 7.12548, 0.96", "2.52186, -55.6839, 7.04033, 0.84", "2.54544, -56.9439, 7.00213, 1.44", "2.67002, -58.5973, 6.96886, 1.08", "2.84915, -60.1488, 6.95279, 1.08", "3.19476, -62.6397, 6.94557, 0.72", "3.35077, -63.7029, 6.95024, 1.44", "3.54836, -65.2108, 6.95449, 1.44", "3.77378, -67.2391, 6.9553, 0.72", "3.84521, -68.0342, 6.95334, 1.2", "3.95235, -69.4947, 6.94624, 1.2", "4.04304, -70.6254, 6.94175, 1.56", "4.15114, -72.1851, 6.88757, 1.32", "4.2405, -73.9472, 6.78371, 0.84", "4.38753, -76.008, 6.63451, 1.56", "4.49678, -77.2244, 6.54053, 1.56", "4.71621, -79.3919, 6.36656, 0.96", "4.93256, -81.3889, 6.20128, 0.96", "5.08756, -82.9298, 6.07054, 1.32", "5.20805, -84.8243, 5.90825, 1.32", "5.26237, -87.4597, 5.6944, 0.72", "5.24455, -88.3518, 5.62547, 1.56", "5.18279, -89.2417, 5.55063, 1.56", "5.00097, -90.9689, 5.40181, 0.96", "4.74586, -92.4632, 5.235, 1.68", "4.26674, -94.8063, 4.87941, 1.08", "3.87406, -96.7038, 4.5393, 0.96", "3.4372, -99.1245, 4.08179, 1.44", "3.23414, -100.432, 3.82792, 1.08", "2.95702, -102.507, 3.39666, 0.84", "2.75187, -104.368, 2.97678, 1.44", "2.66197, -105.289, 2.75996, 1.44", "2.52558, -107.104, 2.34578, 0.72", "2.46409, -108.428, 2.04487, 0.72", "2.38813, -110.812, 1.49842, 1.32", "2.34797, -112.573, 1.07152, 0.96", "2.2952, -113.33, 0.883787, 0.96", "2.22391, -114.175, 0.647016, 0.96", "2.08274, -115.258, 0.2991, 0.96", "1.98007, -115.891, 0.0940056, 0.96", "1.81562, -116.748, -0.216101, 0.96", "1.63122, -117.648, -0.55382, 0.96", "1.06627, -120.323, -1.55919, 1.44", "0.415648, -123.404, -2.681, 0.48", "0.120359, -124.896, -3.18925, 1.56", "-0.430912, -127.951, -4.16622, 0.84", "-0.557171, -128.781, -4.43231, 0.84", "-0.732542, -130.249, -4.89854, 0.84", "-0.82926, -131.458, -5.24912, 0.84", "-0.87887, -132.645, -5.54471, 0.84", "-0.92454, -133.79, -5.79587, 0.84", "-1.02571, -136.892, -6.38324, 0.6", "-1.09368, -138.606, -6.72652, 1.08", "-1.20855, -140.988, -7.2321, 0.72", "-1.34843, -143.207, -7.71784, 0.6", "-1.44395, -144.265, -7.94685, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.37999, -21.9038, 10.7457, 1.92", "2.42725, -25.862, 10.4816, 1.92", "2.47899, -30.1952, 10.1924, 1.92", "2.53734, -35.082, 9.86629, 2.28", "2.56832, -37.6766, 9.69314, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.1686, -33.0817, 8.05072, 1.32", "14.3794, -34.61, 8.96548, 1.32", "16.5385, -35.4172, 9.65688, 1.32", "18.293, -35.9716, 10.2583, 1.32", "20.1793, -36.5154, 10.9331, 1.32", "22.6898, -37.1671, 11.8815, 1.32", "24.0099, -37.5129, 12.402, 1.32", "27.4271, -38.3829, 13.911, 1.08", "28.507, -38.6489, 14.4184, 1.08", "28.9526, -38.7639, 14.6371, 1.08", "31.3296, -39.4451, 15.8508, 1.44", "33.1583, -40.1149, 16.7634, 1.08", "34.0824, -40.55, 17.2128, 1.08", "36.2986, -41.7321, 18.2112, 1.08", "37.7448, -42.4963, 18.8109, 0.84", "39.2002, -43.2622, 19.3632, 0.84", "40.957, -44.0896, 19.9709, 0.84", "42.3842, -44.7282, 20.4514, 0.84", "45.8882, -46.2341, 21.4616, 1.2", "47.8965, -47.0521, 21.9219, 0.84", "49.6337, -47.6533, 22.2223, 0.84", "53.0512, -48.6448, 22.6841, 0.96", "56.4226, -49.5787, 23.099, 0.72", "60.1964, -50.5966, 23.4843, 1.2", "62.2972, -51.1617, 23.6152, 1.2", "64.5272, -51.6792, 23.6565, 0.6", "65.5713, -51.8815, 23.6256, 0.6", "77.4629, -54.0674, 25.4054, 0.6", "88.9076, -58.1896, 26.1556, 0.6", "100.887, -59.8199, 27.9804, 0.6", "112.953, -59.6496, 30.0261, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "11.1686, -33.0817, 8.05072, 1.8", "11.3558, -36.3796, 8.06703, 1.8", "11.662, -39.7437, 8.07957, 1.8", "11.9162, -41.708, 8.0851, 1.8", "12.0619, -42.6724, 8.06534, 1.8", "12.2884, -44.066, 8.01541, 1.8", "12.5129, -45.3476, 8.00611, 1.8", "12.7565, -46.3942, 8.02776, 1.8", "13.0958, -48.0892, 8.11464, 1.8", "13.2384, -49.2126, 8.18429, 1.8", "13.3777, -50.7954, 8.29424, 1.8", "13.5278, -53.7234, 8.37842, 1.8", "13.5745, -55.2231, 8.38327, 1.8", "13.6404, -58.2361, 8.33687, 2.16", "13.7292, -60.5563, 8.23723, 1.92", "13.7978, -61.5197, 8.16981, 1.92", "14.2197, -67.006, 7.62882, 2.16", "14.4086, -69.1795, 7.31544, 2.16", "14.5788, -70.6497, 7.07098, 2.16", "15.0426, -73.4983, 6.54233, 1.92", "15.4233, -75.2928, 6.1852, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.49253, 27.4981, 11.8327, 1.8", "2.76225, 29.9046, 12.8084, 1.8", "3.91797, 32.0951, 13.6965, 1.8", "5.12741, 34.3873, 14.6259, 1.8", "6.54983, 37.0833, 15.7189, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.933147", "12.961, -57.7822, -0.0046052, 0.933147", "16.225, -72.4228, -0.0046052, 0.933147" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-89.8102, 29.3536, -26.4373, 1.68", "-90.0885, 29.3381, -26.4965, 1.68", "-93.3791, 29.3149, -27.1177, 1.2", "-95.9832, 29.4496, -27.552, 1.68", "-97.1374, 29.5667, -27.7346, 1.68", "-98.8275, 29.8474, -28.0041, 1.2", "-101.792, 30.468, -28.5113, 1.2", "-103.472, 30.9476, -28.8997, 0.84", "-105.127, 31.6414, -29.4487, 1.32", "-106.079, 32.1354, -29.8954, 1.32", "-107.614, 33.0102, -30.7925, 0.84", "-108.268, 33.4112, -31.2564, 0.84", "-110.556, 34.9076, -33.1217, 0.84", "-112.286, 36.0375, -34.6047, 0.84", "-113.436, 36.8049, -35.5927, 0.84", "-114.328, 37.3895, -36.2912, 0.84", "-115.53, 38.1346, -37.1015, 0.84", "-116.744, 38.8804, -37.7647, 0.84", "-118.494, 40.0184, -38.493, 0.84", "-119.707, 40.8335, -38.9044, 0.84", "-121.387, 41.9946, -39.4113, 0.84", "-123.484, 43.5304, -40.0426, 0.84", "-124.586, 44.385, -40.3594, 0.84", "-126.825, 46.172, -41.0344, 1.32", "-128.398, 47.443, -41.5354, 1.32", "-130.512, 49.2592, -42.2153, 0.96", "-132.081, 50.7168, -42.7653, 0.96", "-132.971, 51.5278, -43.0774, 0.96", "-134.187, 52.5577, -43.5357, 0.96", "-135.263, 53.3381, -43.9376, 0.96", "-138.203, 55.2272, -44.9724, 0.72", "-139.276, 55.8155, -45.3255, 0.72", "-143.483, 57.744, -46.5745, 1.08", "-144.694, 58.2295, -46.9111, 1.08", "-148.586, 59.7697, -47.8054, 1.08", "-150.6, 60.5763, -48.2624, 1.08", "-152.844, 61.5775, -48.7453, 1.08", "-154.811, 62.589, -49.1612, 1.08", "-155.508, 63.0078, -49.3326, 1.08", "-158.497, 65.0099, -50.1462, 1.08", "-160.758, 66.6754, -50.8673, 1.08", "-165.019, 69.8502, -52.357, 1.44", "-166.15, 70.6725, -52.7785, 1.44", "-168.897, 72.4293, -53.8122, 1.2", "-170.01, 72.9986, -54.1557, 1.2", "-171.567, 73.5964, -54.5317, 1.2", "-176.018, 74.9511, -55.3026, 1.08", "-178.785, 75.6576, -55.756, 1.08", "-182.21, 76.5221, -56.2534, 1.08", "-187.099, 77.7092, -56.9118, 0.72", "-190.286, 78.4617, -57.3498, 0.72", "-192.832, 79.0475, -57.6981, 1.08", "-195.947, 79.6754, -58.1244, 0.84", "-197.73, 79.9111, -58.4136, 0.84", "-198.982, 79.9977, -58.6723, 0.84", "-200.467, 80.0465, -59.0535, 0.84", "-203.026, 79.9775, -59.675, 0.84", "-206.686, 79.6234, -60.4037, 0.84", "-212.255, 78.6839, -61.275, 0.6", "-213.054, 78.5142, -61.405, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-89.8102, 29.3536, -26.4373, 1.32", "-90.3371, 30.8724, -26.9214, 1.32", "-91.074, 32.979, -27.6831, 0.84", "-91.8984, 35.6041, -28.7368, 1.44", "-93.125, 39.384, -30.5043, 1.08", "-93.9499, 41.567, -31.6197, 1.08", "-94.2709, 42.305, -32.0287, 1.08", "-95.5174, 44.7821, -33.6325, 1.56", "-96.9491, 47.0271, -35.3346, 0.96", "-98.1221, 48.4344, -36.5533, 0.96", "-99.5802, 49.5574, -37.6, 0.96", "-100.752, 50.1371, -38.2136, 0.96", "-101.87, 50.5165, -38.6921, 0.96", "-102.975, 50.7314, -39.0647, 0.96", "-104.555, 50.9845, -39.4907, 0.96", "-107.914, 51.5709, -40.3448, 0.72", "-110.851, 52.028, -41.1406, 0.72", "-113.036, 52.3446, -41.7298, 0.72", "-114.676, 52.5566, -42.1897, 0.72", "-116.708, 52.8109, -42.7838, 0.72", "-119.825, 53.2587, -43.7261, 0.72", "-123.179, 53.8244, -44.7212, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "0.158129, 61.4101, 3.83568, 1.32", "-0.268969, 62.2032, 4.13718, 1.32", "-0.87103, 63.2233, 4.47839, 1.32", "-1.69072, 64.6165, 4.9196, 1.08", "-2.19703, 65.5145, 5.1862, 1.08", "-2.48474, 66.0643, 5.33539, 1.08", "-2.9005, 66.9146, 5.54666, 1.08", "-3.36752, 67.8568, 5.71469, 1.08", "-3.58722, 68.2945, 5.78019, 1.08", "-3.84833, 68.8441, 5.83348, 1.08", "-4.19852, 69.5445, 5.8962, 1.08", "-4.46908, 70.0056, 5.94247, 1.08", "-4.77896, 70.3898, 5.9877, 1.08", "-5.16708, 70.7074, 6.03103, 1.08", "-5.76158, 71.1142, 6.08453, 1.08", "-6.51029, 71.6034, 6.16242, 1.08", "-7.17105, 72.0522, 6.24126, 1.08", "-7.87785, 72.61, 6.34033, 1.08", "-8.51159, 73.3224, 6.34704, 0.96", "-8.6993, 73.8372, 6.25081, 0.96", "-8.75613, 74.6261, 6.01068, 0.96", "-8.73086, 75.2713, 5.79502, 0.96", "-8.67989, 75.8285, 5.6039, 0.96", "-8.42885, 77.9551, 4.85971, 0.72", "-8.33659, 78.8349, 4.53294, 0.72", "-8.29882, 79.592, 4.24757, 0.72", "-8.29262, 80.4031, 3.9649, 0.72", "-8.33077, 81.7759, 3.57298, 0.72", "-8.36801, 82.4592, 3.42879, 0.72", "-8.43266, 83.1013, 3.36456, 0.72", "-8.56084, 84.0266, 3.24005, 0.72", "-8.76737, 85.4534, 3.02565, 0.72", "-8.95735, 86.4742, 2.86701, 0.72", "-9.1717, 87.3265, 2.73675, 0.72", "-9.5904, 88.6359, 2.53967, 1.2", "-10.4787, 90.6346, 2.25668, 1.08", "-11.0534, 91.5148, 2.15372, 1.08", "-11.6949, 92.2748, 2.08515, 1.08", "-12.1822, 92.7976, 2.06332, 1.08", "-12.6361, 93.259, 2.04484, 0.72", "-13.9341, 94.5532, 1.97625, 1.2", "-15.3268, 95.9301, 1.93535, 1.08", "-16.4992, 97.1186, 1.90551, 1.44", "-17.0749, 97.7921, 1.8916, 1.44", "-17.9418, 99.0603, 1.86833, 1.2", "-18.4167, 99.9612, 1.85692, 1.2", "-18.915, 101.302, 1.86535, 1.08", "-19.2865, 102.853, 1.91584, 1.08", "-19.5658, 104.392, 2.02482, 0.96", "-19.7949, 105.934, 2.18256, 0.96", "-19.8876, 106.74, 2.30124, 1.2", "-19.9682, 107.706, 2.39433, 0.72", "-20.0156, 109.631, 2.43738, 1.2", "-20.0141, 110.141, 2.4046, 1.2", "-20.0599, 111.149, 2.27997, 1.2", "-20.1888, 112.141, 2.09902, 1.2", "-20.5814, 114.044, 1.63694, 1.2", "-20.8543, 114.893, 1.36973, 1.2", "-21.1134, 115.418, 1.17383, 1.2", "-21.8751, 116.466, 0.813551, 0.96", "-22.5105, 117.07, 0.669242, 1.2", "-22.9308, 117.41, 0.632725, 1.2", "-23.6457, 117.948, 0.635826, 1.2", "-24.0933, 118.294, 0.63819, 1.2", "-25.1926, 119.225, 0.645078, 1.2", "-26.431, 120.48, 0.654058, 1.2", "-27.0886, 121.273, 0.659007, 1.2", "-27.5102, 121.84, 0.661903, 1.2", "-27.9641, 122.544, 0.664873, 1.2", "-28.3483, 123.225, 0.667209, 1.2", "-28.9459, 124.54, 0.670495, 0.84", "-29.4709, 125.871, 0.688955, 1.32", "-30.21, 127.86, 0.735913, 0.84", "-30.5747, 128.859, 0.768357, 0.84", "-30.8608, 129.641, 0.800072, 0.84", "-31.2449, 130.707, 0.850859, 0.84", "-31.7119, 131.924, 0.944495, 0.84", "-32.0136, 132.604, 1.01465, 0.84", "-32.4788, 133.411, 1.0662, 0.84", "-32.8216, 133.862, 1.07257, 0.84", "-33.4795, 134.545, 1.04856, 1.2", "-34.5518, 135.467, 0.942217, 0.84", "-35.553, 136.213, 0.822734, 0.84", "-36.7289, 136.975, 0.693475, 1.2", "-37.6975, 137.427, 0.604588, 0.6", "-38.8785, 137.914, 0.49186, 0.6", "-40.1361, 138.342, 0.367157, 1.08", "-41.5824, 138.731, 0.218077, 0.48", "-42.4094, 138.895, 0.172231, 0.48", "-44.8325, 139.241, 0.252464, 0.84", "-48.6437, 145.469, 1.14253, 0.84", "-52.3865, 151.796, 0.998047, 0.84", "-55.2255, 158.55, 0.734408, 0.84", "-58.2721, 165.116, -0.492759, 0.84", "-61.1132, 171.779, -1.65592, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.158129, 61.4101, 3.83568, 1.32", "-1.43962, 62.9825, 3.43567, 1.32", "-1.98303, 63.5509, 3.25242, 1.32", "-2.62597, 64.3045, 2.97897, 1.32", "-3.24383, 65.1615, 2.6385, 1.32", "-3.5863, 65.6842, 2.4258, 1.32", "-4.06698, 66.5976, 2.07037, 1.32", "-4.36559, 67.5465, 1.67895, 1.32", "-4.53421, 68.6722, 1.23338, 1.56", "-4.48864, 69.7915, 0.809535, 1.56", "-4.39315, 70.1899, 0.682615, 1.56", "-3.73569, 71.7648, 0.227671, 1.2", "-3.41406, 72.2938, 0.0908728, 1.2", "-2.82619, 73.0195, -0.10174, 1.2", "-1.83524, 73.9912, -0.39975, 1.08", "-1.07671, 74.6209, -0.625314, 1.08", "-0.593731, 74.9786, -0.798689, 1.08", "-0.131335, 75.3036, -1.01298, 1.08", "0.334114, 75.6789, -1.29533, 1.08", "1.1755, 76.4951, -1.96352, 1.8", "1.32882, 76.6994, -2.13833, 1.8", "1.87305, 77.8111, -3.0655, 1.32", "2.05471, 78.4604, -3.59157, 1.32", "2.08598, 79.2928, -4.24089, 1.08", "2.02097, 79.5325, -4.41277, 1.08", "1.68851, 80.1301, -4.77422, 1.08", "1.2604, 80.7595, -5.11442, 1.44", "0.900521, 81.2184, -5.34254, 1.44", "0.457645, 81.7732, -5.62462, 1.44", "0.081939, 82.2609, -5.90135, 1.44", "-0.640812, 83.3422, -6.57091, 0.84", "-0.99711, 83.9906, -6.98119, 0.84", "-1.53972, 85.3348, -7.86494, 1.44", "-1.76125, 86.1045, -8.28153, 1.44", "-1.98562, 87.2632, -8.79502, 0.96", "-2.17766, 88.455, -9.30863, 0.96", "-2.27319, 89.0623, -9.55699, 0.96", "-2.35415, 89.9646, -9.85225, 0.72", "-2.2695, 92.3427, -10.3206, 1.2", "-2.1487, 93.3705, -10.401, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-55.4451, 60.6976, 39.2482, 0.6", "-62.0497, 68.8369, 43.0912, 0.6", "-67.5896, 78.2739, 45.0186, 0.6", "-71.7727, 87.9873, 48.384, 0.6", "-77.4722, 96.6837, 52.3884, 0.6", "-81.9693, 105.742, 57.0275, 0.6", "-87.1954, 114.445, 61.6205, 0.6", "-93.0155, 123.438, 64.6426, 0.6", "-100.559, 131.355, 66.9335, 0.6", "-107.865, 139.163, 70.1858, 0.6", "-113.298, 147.729, 74.8078, 0.6", "-119.424, 156.769, 76.9542, 0.6", "-124.07, 166.444, 79.7847, 0.6", "-129.202, 175.551, 83.592, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-55.4451, 60.6976, 39.2482, 0.84", "-63.0328, 65.8459, 45.3902, 0.6", "-69.9394, 72.8252, 50.3134, 0.6", "-75.2015, 81.4623, 54.4384, 0.6", "-79.9681, 90.6169, 57.9454, 0.6", "-84.9394, 99.2882, 62.3472, 0.6", "-92.2591, 106.185, 66.7694, 0.6", "-99.5579, 113.714, 69.9773, 0.6", "-106.512, 121.37, 73.6051, 0.6", "-113.229, 129.468, 76.6206, 0.6", "-119.488, 137.706, 80.1716, 0.6", "-126.064, 146.349, 81.3424, 0.6", "-131.894, 155.46, 82.7159, 0.6", "-136.97, 165.038, 83.6719, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-1.44395, -144.265, -7.94685, 0.96", "-3.27664, -144.034, -7.7296, 0.96", "-4.67135, -143.859, -7.56427, 0.96", "-5.66254, -143.734, -7.44677, 0.72", "-6.3921, -143.642, -7.36029, 0.72", "-7.01161, -143.564, -7.28685, 0.72", "-8.06625, -143.431, -7.16182, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-1.44395, -144.265, -7.94685, 0.96", "-2.54861, -148.661, -9.23081, 0.96", "-3.03595, -150.221, -10.1044, 0.96", "-3.50592, -152.003, -11.2385, 1.32", "-3.97029, -154.319, -12.6503, 0.6", "-4.15429, -155.68, -13.6066, 0.6", "-4.28666, -157.29, -14.7503, 1.2", "-4.48024, -162.392, -18.2958, 1.2", "-4.5338, -164.107, -19.5325, 1.56", "-4.54565, -166.554, -21.2957, 0.96", "-4.36361, -170.969, -24.3254, 0.6", "-4.21569, -172.979, -25.5343, 1.08", "-4.08706, -174.835, -26.5767, 0.72", "-4.08142, -175.808, -27.0279, 0.72", "-4.19252, -177.163, -27.6539, 1.08", "-4.40011, -178.65, -28.2973, 0.72", "-4.72024, -180.37, -28.8892, 0.72", "-5.7106, -184.894, -30.4457, 0.48", "-6.10093, -186.533, -30.9917, 1.56", "-6.86311, -189.404, -31.8485, 1.08", "-7.2105, -190.549, -32.1394, 0.72", "-7.92933, -192.77, -32.5883, 1.08", "-8.62374, -194.847, -32.9652, 0.72", "-8.96199, -195.931, -33.1026, 0.72", "-9.74133, -198.56, -33.541, 1.2", "-10.304, -200.636, -33.9647, 0.72", "-10.5419, -201.575, -34.1791, 0.72", "-11.0856, -204.371, -34.8579, 0.72", "-11.2301, -205.977, -35.448, 1.08", "-11.242, -207.362, -36.0152, 0.96", "-11.1928, -208.393, -36.447, 0.96", "-11.0869, -209.579, -36.9224, 0.96", "-10.8311, -211.768, -37.7147, 0.96", "-10.1587, -216.546, -39.21, 1.2", "-9.61407, -219.864, -40.2361, 0.6", "-9.16337, -222.07, -40.8857, 0.6", "-8.85097, -223.313, -41.207, 0.6", "-8.43368, -224.716, -41.4984, 0.6", "-8.16233, -225.687, -41.6025, 0.6", "-7.95979, -226.489, -41.6012, 0.6", "-7.67672, -227.614, -41.6159, 0.6", "-7.0693, -230.177, -41.7959, 0.6", "-6.87881, -231.054, -41.8882, 0.6", "-5.86558, -236.085, -42.5268, 0.96", "-5.4133, -238.491, -42.8564, 0.48", "-5.16182, -240.011, -43.0723, 0.48", "-4.67794, -243.611, -43.5854, 0.72", "-4.43245, -245.761, -43.8866, 0.48", "-4.25012, -247.47, -44.0453, 1.2", "-3.96598, -250.709, -44.202, 0.84", "-3.85871, -252.677, -44.214, 1.32", "-3.80869, -255.508, -44.1277, 0.84", "-3.85091, -257.688, -43.9771, 1.44", "-4.13936, -262.587, -43.528, 0.48", "-4.35248, -265.112, -43.2573, 0.48", "-4.79672, -268.388, -42.8674, 0.48", "-5.17804, -270.34, -42.6232, 0.48", "-5.6887, -272.145, -42.3862, 0.96", "-7.28849, -276.096, -41.8917, 0.48", "-7.65816, -276.84, -41.812, 0.84", "-8.96901, -279.116, -41.5187, 0.6", "-10.0006, -280.566, -41.2959, 0.84", "-11.2698, -282.087, -41.0443, 0.6", "-12.7901, -283.557, -40.8173, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "2.56832, -37.6766, 9.69314, 0.96", "2.17904, -38.4392, 9.86422, 0.96", "1.86153, -39.2542, 9.99894, 0.96", "1.77396, -39.567, 10.0868, 0.96", "1.62619, -40.1321, 10.3101, 0.96", "1.49077, -40.6434, 10.5563, 0.96", "1.33849, -41.2201, 10.8965, 0.96", "1.13901, -42.1239, 11.5059, 1.32", "0.894228, -43.2411, 12.3296, 0.84", "0.749521, -43.9775, 12.9012, 0.84", "0.668115, -44.4722, 13.308, 0.84", "0.500204, -45.5293, 14.2491, 1.32", "0.378017, -46.1456, 14.8599, 1.32", "0.234922, -46.695, 15.4577, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.56832, -37.6766, 9.69314, 1.44", "2.81795, -41.4513, 9.89476, 1.44", "2.98468, -44.1531, 10.0196, 1.44", "3.08639, -45.7701, 10.0824, 1.44", "3.27482, -49.1522, 10.1897, 1.8", "3.35336, -50.5618, 10.2345, 1.8", "3.43086, -51.9529, 10.2786, 1.8", "3.48637, -53.1136, 10.2792, 1.8", "3.57602, -55.4959, 10.2804, 1.56", "3.66654, -58.0353, 10.2836, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "15.4233, -75.2928, 6.1852, 1.56", "17.5165, -77.3926, 6.47272, 1.56", "18.777, -78.6789, 6.64476, 1.56", "20.3386, -80.2684, 6.85811, 1.2", "21.2801, -81.2238, 6.98687, 1.2", "22.6898, -82.6432, 7.18024, 1.56", "24.7098, -84.7173, 7.45528, 1.2", "25.6241, -85.6918, 7.57797, 1.8", "26.5903, -86.7362, 7.70685, 1.8", "28.4691, -88.8234, 7.97409, 1.08", "29.7914, -90.3283, 8.17207, 1.68", "31.3117, -92.1069, 8.38183, 1.32", "32.3013, -93.301, 8.50782, 1.32", "32.9105, -94.0475, 8.57991, 1.32", "34.3414, -95.8664, 8.73409, 1.08", "35.3334, -97.1907, 8.80444, 1.56", "36.8085, -99.2941, 8.90437, 1.2", "37.3244, -100.062, 8.93912, 1.2", "37.8113, -100.801, 8.98526, 1.2", "38.7593, -102.248, 9.09792, 1.68", "39.5414, -103.45, 9.24414, 1.2", "40.5251, -104.951, 9.50023, 0.96", "41.1671, -105.864, 9.70503, 0.96", "42.8683, -108.087, 10.2638, 0.84", "43.7317, -109.159, 10.561, 0.84", "45.0784, -110.737, 11.0465, 1.44", "45.791, -111.54, 11.3117, 1.44", "47.0884, -112.973, 11.7546, 1.44", "47.8395, -113.85, 12.0087, 0.96", "48.6597, -114.877, 12.2663, 1.44", "48.9516, -115.25, 12.3494, 1.44", "49.6983, -116.221, 12.5228, 1.44", "50.2739, -117.005, 12.6515, 1.44", "51.3306, -118.476, 12.8676, 1.08", "52.3033, -119.782, 13.0437, 1.08", "52.891, -120.503, 13.1361, 1.08", "54.0676, -121.826, 13.3105, 1.44", "54.6495, -122.435, 13.3999, 1.44", "56.1439, -123.997, 13.6489, 0.84", "57.1075, -125.027, 13.8165, 1.56", "58.7283, -126.834, 14.1078, 1.08", "59.5122, -127.728, 14.2513, 1.32", "61.8587, -130.184, 14.6862, 1.08", "63.0439, -131.338, 14.9201, 1.08", "64.0693, -132.274, 15.13, 1.08", "65.5816, -133.555, 15.4416, 1.08", "66.624, -134.395, 15.6184, 1.08", "69.7921, -136.841, 16.0366, 1.44", "71.9747, -138.472, 16.2402, 1.08", "73.3309, -139.492, 16.332, 1.08", "75.5049, -141.211, 16.454, 1.08", "77.9821, -143.207, 16.5524, 0.72", "79.8652, -144.815, 16.5781, 1.32", "81.1995, -146.112, 16.5234, 0.84", "82.0277, -146.967, 16.4431, 0.84", "83.4261, -148.584, 16.2587, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "15.4233, -75.2928, 6.1852, 1.68", "15.6021, -77.6146, 6.15094, 1.68", "15.815, -79.6635, 6.1341, 1.68", "15.9705, -80.8378, 6.13103, 1.68", "16.5172, -84.2235, 6.13913, 1.32", "16.9233, -86.4726, 6.14869, 1.56", "17.3935, -89.3778, 6.13888, 1.56", "17.5711, -90.472, 6.12711, 1.56", "17.7847, -92.1518, 6.0923, 1.56", "17.9669, -94.1757, 6.02892, 1.56", "18.152, -97.0483, 5.91546, 1.2", "18.3542, -101.089, 5.732, 1.56", "18.4694, -103.904, 5.61896, 1.2", "18.62, -107.443, 5.50572, 1.2", "18.7164, -109.493, 5.43305, 1.56", "18.8425, -111.855, 5.3241, 1.56", "18.9827, -113.758, 5.21259, 1.56", "19.2812, -116.691, 5.08415, 1.2", "19.5232, -119.241, 4.98665, 1.56", "19.7633, -122.139, 4.8838, 1.44", "19.8869, -124.171, 4.80895, 1.44", "19.9358, -125.632, 4.74978, 1.44", "20.0578, -130.553, 4.54944, 1.08", "20.1401, -133.198, 4.37903, 1.08", "20.2559, -135.568, 4.18207, 1.44", "20.3327, -136.624, 4.08422, 1.44", "20.486, -138.159, 3.91359, 1.44", "20.7715, -140.342, 3.58733, 1.44", "21.3312, -143.401, 2.91573, 1.32", "21.8278, -145.516, 2.42014, 1.32", "22.1198, -146.636, 2.14639, 1.32", "22.3447, -147.565, 1.92511, 1.32", "22.687, -149.204, 1.56268, 1.32", "22.8421, -150.184, 1.37713, 1.32", "23.005, -151.338, 1.20551, 1.32", "23.3419, -153.763, 0.832862, 1.8", "23.6469, -156.094, 0.454053, 1.8", "23.8903, -158.124, 0.181606, 1.8", "24.1018, -160.155, -0.0458929, 1.8", "24.3799, -163.464, -0.358593, 1.56", "24.5918, -166.828, -0.631917, 1.56", "24.6585, -168.444, -0.741315, 1.56", "24.7533, -171.893, -0.910195, 1.32", "24.7767, -173.513, -0.960869, 1.32", "24.7654, -176.422, -1.00013, 1.8", "24.6896, -178.976, -0.981722, 1.8", "24.6366, -181.594, -0.927108, 1.56", "24.6823, -184.058, -0.890047, 1.56", "24.7888, -185.713, -0.889996, 1.56", "24.91, -186.908, -0.881542, 1.56", "25.0531, -188.133, -0.886659, 1.56", "25.2621, -189.901, -0.928282, 1.56", "25.495, -192.076, -1.02699, 1.2", "25.6717, -194.16, -1.19127, 1.2", "25.766, -195.596, -1.33633, 1.2", "25.8785, -198.273, -1.67353, 1.56", "25.9587, -200.846, -2.0561, 1.56", "26.0072, -202.448, -2.31803, 1.56", "26.1135, -204.555, -2.66215, 1.56", "26.244, -206.558, -3.00045, 1.56", "26.5782, -210.503, -3.679, 1.56", "27.0758, -215.033, -4.47359, 1.32", "27.5306, -218.803, -5.16967, 1.32", "27.7786, -220.833, -5.54912, 0.84", "28.0312, -222.918, -5.93711, 1.32", "28.34, -225.394, -6.39902, 1.08", "28.675, -227.713, -6.8463, 1.44", "29.039, -230.157, -7.35982, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.54983, 37.0833, 15.7189, 1.2", "4.81633, 39.9406, 16.4987, 1.2", "4.16276, 41.2448, 16.9321, 1.2", "3.68146, 42.3817, 17.3497, 1.2", "2.93223, 44.7125, 18.3717, 1.2", "2.64029, 45.9678, 18.9581, 1.2", "2.45212, 47.1743, 19.5336, 1.08", "2.39767, 49.0964, 20.5306, 1.56", "2.44386, 50.389, 21.2068, 1.56", "2.71344, 53.2389, 22.6343, 1.2", "2.97725, 55.0737, 23.4737, 0.96", "3.25241, 57.083, 24.2777, 1.32", "3.33666, 57.9996, 24.6152, 1.32", "3.37973, 59.021, 24.9457, 1.32", "3.40045, 60.5435, 25.3519, 1.32", "3.39165, 61.3975, 25.5423, 1.32", "3.39593, 63.0637, 25.9206, 1.2", "3.45663, 64.7963, 26.3667, 1.56", "3.51547, 65.9535, 26.6833, 1.2", "3.65051, 67.7357, 27.2119, 1.68", "3.95217, 70.1543, 27.9866, 1.2", "4.13989, 71.122, 28.3152, 1.44", "4.64036, 72.7265, 28.8726, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.54983, 37.0833, 15.7189, 1.44", "6.51601, 40.0355, 15.4101, 1.44", "6.50051, 41.3891, 15.2685, 1.44", "6.48259, 42.9539, 15.1049, 1.44", "6.46196, 44.7548, 14.9165, 1.44", "6.43699, 46.9352, 14.6885, 1.8", "6.41586, 48.7797, 14.4955, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "0.234922, -46.695, 15.4577, 0.96", "-0.9457, -50.8572, 17.2692, 0.96", "-1.80103, -53.3904, 18.3632, 0.96", "-2.37014, -55.0307, 19.0187, 0.96", "-2.81162, -56.2734, 19.5114, 0.96", "-3.32323, -57.685, 20.0537, 0.96", "-4.19967, -60.2544, 20.9641, 0.6", "-4.52125, -61.0327, 21.2469, 0.6", "-5.08898, -62.4167, 21.7905, 1.08", "-6.24099, -65.302, 23.0436, 0.72", "-7.09728, -67.4642, 24.0391, 0.72", "-8.44467, -70.7896, 25.6251, 0.72", "-9.81841, -73.9417, 27.2066, 1.2", "-10.6391, -75.6314, 28.1122, 1.08", "-11.7454, -77.6045, 29.2676, 0.48", "-13.1714, -79.8632, 30.6498, 0.48", "-14.8674, -82.3209, 32.196, 1.44", "-16.2264, -84.1632, 33.3345, 0.84", "-16.9665, -85.2227, 33.9044, 1.08", "-18.1292, -86.9511, 34.7331, 1.08", "-19.6564, -89.3935, 35.767, 1.44", "-20.7115, -91.2356, 36.4968, 0.84", "-21.389, -92.6163, 37.0317, 1.32", "-22.3573, -94.9813, 37.8934, 0.72", "-22.809, -96.1629, 38.3323, 0.72", "-23.2104, -97.2135, 38.775, 0.72", "-23.9338, -98.6872, 39.6203, 0.72", "-25.0571, -100.158, 40.9038, 1.08", "-26.1366, -101.301, 42.137, 0.6", "-27.5233, -102.387, 43.6916, 1.08", "-28.5833, -103.023, 44.866, 0.96", "-30.3964, -103.766, 46.8088, 0.84", "-32.315, -104.132, 48.7355, 0.84", "-37.6466, -114.612, 52.8104, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "0.234922, -46.695, 15.4577, 0.84", "-0.150601, -48.0348, 16.6927, 0.84", "-0.440007, -48.9918, 17.5547, 0.84", "-0.577713, -49.4506, 17.9367, 0.84", "-1.05793, -51.2075, 19.2826, 0.48", "-1.31401, -52.1867, 19.9809, 0.48", "-1.76015, -53.8901, 21.1005, 0.84", "-2.05149, -54.9737, 21.7177, 0.84", "-2.35792, -56.0052, 22.2458, 0.84", "-3.06434, -58.3214, 23.2985, 0.84", "-3.33401, -59.2032, 23.6406, 0.84", "-3.7928, -60.7996, 24.1819, 0.6", "-4.10178, -61.8174, 24.5036, 1.08", "-4.56928, -63.15, 24.9524, 1.08", "-4.9472, -64.1061, 25.3066, 1.56", "-5.46216, -65.23, 25.7531, 1.56", "-5.87972, -66.1084, 26.1262, 1.08", "-6.64235, -67.6702, 26.8397, 0.72", "-7.13898, -68.6623, 27.3207, 1.32", "-7.57348, -69.4951, 27.7529, 1.32", "-8.22134, -70.6396, 28.3976, 0.72", "-8.93153, -71.8114, 29.0847, 0.72", "-12.5561, -78.8052, 33.7919, 0.72", "-15.2179, -86.3956, 38.1704, 0.72", "-17.7879, -93.4991, 43.3832, 0.72", "-20.3854, -100.609, 48.5729, 0.72", "-21.7865, -108.029, 53.7809, 0.72", "-21.4789, -115.636, 58.9062, 0.72", "-21.8352, -123.899, 62.8124, 0.72", "-22.6703, -132.755, 64.8201, 0.72", "-22.8953, -141.557, 67.2166, 0.72", "-24.1359, -150.252, 69.6785, 0.72", "-27.5052, -158.479, 71.7546, 0.72", "-31.2129, -166.587, 73.7279, 0.72", "-33.4215, -175.233, 75.6027, 0.72", "-34.4977, -183.992, 77.9042, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "3.66654, -58.0353, 10.2836, 1.08", "5.38976, -58.675, 7.04134, 1.08", "6.64488, -59.2912, 4.87462, 1.08", "7.00083, -59.5254, 4.27057, 1.08", "7.28665, -59.787, 3.7167, 1.08", "7.44868, -59.9658, 3.39009, 1.08", "8.06858, -60.7724, 2.05929, 1.44", "8.42901, -61.4569, 1.13891, 1.44", "8.71421, -62.2631, 0.169049, 1.44", "9.06528, -63.5667, -1.31296, 1.44", "9.16425, -64.0751, -1.8421, 1.44", "9.34569, -65.4318, -3.09196, 1.2", "9.49641, -67.6258, -4.86858, 1.2", "9.57385, -69.1254, -6.01432, 1.68", "9.63617, -70.7455, -7.25597, 0.72", "9.65308, -71.9657, -8.16367, 0.72", "9.6159, -73.306, -9.25676, 1.44", "9.53834, -74.261, -10.1159, 1.44", "9.3219, -75.9931, -12.0966, 0.96", "9.10442, -77.5106, -14.5512, 1.68", "9.02572, -77.9847, -15.547, 1.68", "8.88233, -78.9409, -18.0173, 1.68", "8.79409, -79.6229, -20.0136, 1.68", "8.67729, -80.6763, -23.195, 1.68", "8.53914, -81.8554, -26.6271, 1.68", "8.426, -82.7588, -29.1299, 1.2", "8.30851, -83.755, -31.6344, 0.84", "8.2591, -84.244, -32.6593, 1.44", "8.21078, -84.76, -33.552, 0.72", "8.06861, -86.0574, -35.4326, 1.32", "7.82449, -88.2375, -38.1664, 0.6", "7.77072, -88.7839, -38.8048, 0.6", "7.68342, -89.5313, -39.6375, 0.96", "7.60951, -90.1577, -40.366, 0.96", "7.37252, -92.6166, -43.4228, 0.6", "7.35143, -93.5162, -44.5204, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "3.66654, -58.0353, 10.2836, 1.32", "3.68373, -58.1572, 10.2647, 1.32", "4.217, -61.3553, 9.80526, 1.32", "4.90205, -65.072, 9.32043, 1.68", "5.34531, -67.4388, 9.04595, 2.04", "5.72827, -69.5373, 8.82475, 1.68", "6.03649, -71.2704, 8.65969, 1.68", "6.22246, -72.3188, 8.58188, 1.68", "6.46976, -73.7204, 8.51375, 1.68", "6.80371, -75.8528, 8.44948, 2.04", "6.95666, -77.0814, 8.4497, 1.68", "7.10117, -78.6828, 8.47524, 1.68", "7.23076, -80.4072, 8.54187, 1.68", "7.38688, -82.3629, 8.64896, 1.56", "7.55286, -84.1727, 8.76639, 1.56", "7.93945, -87.8059, 9.02668, 1.56", "8.29082, -90.7622, 9.25157, 1.8", "8.90386, -95.4858, 9.62246, 1.56", "9.54237, -100.212, 9.9795, 1.44", "9.81408, -102.222, 10.1211, 1.92", "10.1346, -104.658, 10.2693, 1.8", "10.3546, -106.537, 10.3563, 1.68", "10.567, -108.884, 10.4363, 2.04", "11.1604, -118.496, 10.4565, 1.8", "11.2603, -121.43, 10.3853, 1.8", "11.2891, -123.022, 10.3188, 1.68", "11.2921, -124.525, 10.231, 1.68", "11.2429, -128.688, 9.91986, 1.68", "11.192, -130.954, 9.64989, 1.68", "11.1447, -132.853, 9.33647, 1.68", "11.1044, -135.353, 8.90757, 1.32", "11.0897, -138.35, 8.40294, 1.32", "11.1063, -141.475, 7.89539, 1.32", "11.2026, -146.456, 7.13217, 1.32", "11.2953, -149.828, 6.67197, 1.8", "11.3532, -152.077, 6.39831, 1.8", "11.3962, -153.885, 6.21202, 1.8", "11.4349, -155.476, 6.09286, 1.8", "11.4923, -158.432, 5.99355, 1.68", "11.5839, -162.679, 5.93879, 2.04", "11.7097, -166.025, 5.8475, 2.04", "11.8343, -168.77, 5.75678, 1.8", "12.0279, -172.257, 5.63228, 1.56", "12.2585, -175.794, 5.50267, 1.92", "12.5254, -180.285, 5.32033, 1.56", "12.71, -183.78, 5.14821, 1.32", "12.9015, -187.726, 4.89449, 1.32", "12.9746, -189.6, 4.775, 1.32", "13.0353, -191.238, 4.68002, 1.2", "13.1274, -195.032, 4.50112, 1.68", "13.1533, -198.54, 4.49927, 1.68", "13.1203, -200.797, 4.51759, 1.68", "13.0826, -202.718, 4.52379, 1.68", "13.015, -204.858, 4.53477, 1.68", "13.0002, -205.767, 4.54896, 1.68", "13.2706, -211.579, 4.80591, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "83.4261, -148.584, 16.2587, 0.84", "85.7947, -148.143, 17.4118, 0.84", "87.6446, -147.765, 18.3875, 0.84", "89.0806, -147.469, 19.1985, 1.32", "91.4241, -147.004, 20.6326, 1.32", "93.2574, -146.65, 21.8355, 1.68", "95.5317, -146.154, 23.3948, 1.2", "96.7072, -145.894, 24.3054, 0.96", "98.2066, -145.477, 25.61, 1.44", "99.9708, -144.84, 27.2917, 0.84", "100.779, -144.439, 28.1758, 0.84", "101.534, -143.928, 29.1824, 0.84", "101.985, -143.449, 30.024, 0.84", "102.454, -142.767, 31.089, 0.84", "102.791, -141.99, 32.1514, 0.84", "103.055, -140.915, 33.4574, 1.08", "103.293, -139.637, 34.9903, 0.72", "103.561, -138.066, 37.0668, 1.2", "111.691, -134.641, 41.9002, 1.2", "119.722, -130.021, 45.7588, 1.2", "127.593, -124.466, 48.4869, 1.2", "133.757, -117.718, 52.4836, 1.2", "141.008, -112.187, 56.616, 1.2", "147.573, -105.834, 60.6525, 1.2", "154.919, -99.4128, 62.7827, 1.2", "161.905, -92.8184, 65.4891, 1.2", "167.852, -85.4768, 68.618, 1.2", "173.367, -77.4046, 70.3234, 1.2", "177.83, -69.005, 73.0989, 1.2", "181.001, -59.844, 74.9651, 1.2", "184.162, -50.7018, 76.94, 1.2", "187.436, -41.5161, 78.4723, 1.2", "192.007, -33.2003, 81.3373, 1.2", "196.474, -24.7028, 83.7719, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "83.4261, -148.584, 16.2587, 0.84", "84.7986, -151.125, 16.8629, 0.84", "86.2889, -153.773, 17.4735, 0.6", "87.2578, -155.516, 17.8483, 1.32", "88.7814, -158.256, 18.4377, 0.84", "89.7668, -160.028, 18.8189, 0.72", "90.5514, -161.44, 19.1225, 1.08", "91.5334, -163.288, 19.4898, 0.72", "92.4457, -165.047, 19.9211, 1.2", "98.8946, -174.376, 21.4762, 1.2", "105.711, -183.022, 24.7002, 1.2", "112.262, -190.877, 29.9566, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "29.039, -230.157, -7.35982, 0.96", "30.567, -232.434, -5.47993, 0.96", "31.4054, -233.941, -4.29412, 0.96", "32.8824, -236.852, -2.02884, 1.44", "33.9604, -238.961, -0.290305, 0.96", "34.8005, -240.621, 1.07704, 0.96", "35.4866, -242.018, 2.19798, 0.96", "36.0642, -243.296, 3.18358, 0.96", "36.6989, -244.929, 4.45166, 1.08", "37.4496, -247.177, 6.08758, 1.08", "37.8248, -248.301, 6.87345, 1.08", "38.1948, -249.266, 7.5307, 1.08", "39.0404, -251.613, 9.19624, 1.08", "39.7084, -253.968, 10.8396, 0.84", "40.0032, -255.933, 12.1191, 1.2", "40.021, -257.489, 13.0201, 1.2", "39.9423, -258.775, 13.7401, 1.2", "39.6082, -261.925, 15.5004, 0.96", "39.366, -263.583, 16.4044, 0.96", "39.2063, -265.116, 17.2465, 0.96", "39.052, -267.074, 18.2872, 0.72", "38.9551, -268.297, 18.8836, 0.72", "38.9093, -270.056, 19.7217, 0.72", "39.1724, -272.257, 20.7202, 1.2", "39.8628, -275.501, 22.4134, 0.84", "40.249, -276.848, 23.1978, 0.84", "40.6667, -278.271, 24.0987, 0.84", "42.7358, -286.567, 29.6343, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "29.039, -230.157, -7.35982, 1.32", "29.7691, -234.129, -7.20738, 1.32", "30.1666, -236.59, -7.16961, 1.32", "30.5024, -238.987, -7.17045, 1.32", "30.7015, -240.774, -7.19899, 1.32", "31.1443, -244.577, -7.27015, 1.68", "31.5728, -247.75, -7.31937, 1.68", "31.9302, -250.066, -7.44544, 1.68", "32.2881, -252.247, -7.58426, 1.68", "32.9059, -255.917, -7.84645, 1.2", "33.3252, -258.331, -8.03782, 1.2", "34.0225, -261.973, -8.33372, 1.2", "34.9213, -266.108, -8.7089, 1.56", "35.4132, -268.183, -8.90848, 1.56", "35.8583, -269.971, -9.08704, 1.56", "36.3575, -271.851, -9.27432, 1.56", "37.1269, -275.124, -9.47163, 1.44", "37.8779, -278.444, -9.6319, 1.44", "38.2296, -279.952, -9.64861, 1.44", "38.667, -281.785, -9.64748, 1.44", "39.1882, -283.892, -9.59848, 1.44", "40.0802, -287.314, -9.36832, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.64036, 72.7265, 28.8726, 1.44", "3.5304, 71.4339, 28.9656, 1.44", "3.09464, 70.9906, 29.0267, 1.2", "2.15629, 70.2142, 29.1579, 0.96", "1.31193, 69.5157, 29.2759, 0.96", "0.730085, 69.0343, 29.3573, 0.96", "0.11084, 68.5219, 29.4439, 0.96", "-0.512684, 67.9466, 29.4547, 0.96", "-1.69722, 66.9647, 29.5166, 1.2", "-7.82996, 61.5714, 28.8741, 1.2", "-13.3436, 55.5438, 28.9196, 1.2", "-18.8664, 49.5806, 28.0754, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.64036, 72.7265, 28.8726, 0.96", "5.40779, 71.4774, 29.0881, 0.96", "6.29077, 70.0402, 29.3361, 0.96", "6.94751, 68.9713, 29.5205, 1.2", "7.3111, 68.3795, 29.6226, 1.2", "8.51109, 66.4263, 29.9595, 0.84", "9.049, 65.5508, 30.1106, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.41586, 48.7797, 14.4955, 1.44", "7.333, 51.1756, 14.9321, 1.44", "8.03035, 53.0574, 15.2514, 1.44", "8.38308, 54.0432, 15.4169, 1.44", "9.17054, 56.3348, 15.8409, 1.44", "10.1191, 59.0472, 16.404, 1.32", "10.7203, 60.6023, 16.6788, 1.32", "11.4928, 62.3113, 16.9183, 1.32", "12.1965, 63.6909, 17.0849, 1.56", "12.9517, 65.0019, 17.2062, 1.56", "14.0531, 66.6897, 17.3153, 1.32", "16.1089, 69.4821, 17.4663, 1.32", "17.4274, 71.0904, 17.5417, 1.32", "18.5797, 72.3847, 17.5183, 1.32", "19.8718, 73.7678, 17.4117, 1.56", "20.6008, 74.5633, 17.2996, 1.56", "22.37, 76.5451, 16.9404, 1.2", "23.3095, 77.6219, 16.7514, 1.2", "25.1448, 79.769, 16.3305, 1.44", "26.114, 80.9448, 16.0558, 1.92", "27.9762, 83.3915, 15.5777, 1.56", "29.1303, 85.018, 15.3185, 1.32", "30.7922, 87.5718, 14.991, 1.32", "32.1037, 89.7361, 14.851, 1.32", "33.3842, 91.9992, 14.8748, 1.56", "35.0461, 95.2972, 15.0693, 1.2", "35.5469, 96.4672, 15.2087, 1.2", "35.8115, 97.302, 15.3409, 1.2", "36.0424, 98.428, 15.5728, 0.96", "36.1384, 99.1552, 15.751, 1.32", "36.2996, 101.293, 16.313, 0.96", "36.3393, 102.344, 16.5184, 0.96", "36.3771, 103.41, 16.6989, 0.96", "36.5227, 105.431, 17.0492, 1.32", "36.6403, 106.416, 17.2252, 1.32", "36.9229, 107.904, 17.5408, 0.84", "37.3499, 109.433, 17.9397, 1.08", "37.8705, 110.92, 18.4337, 1.08", "38.7202, 113.026, 19.2403, 0.84", "39.1597, 114.048, 19.5934, 1.2", "39.6841, 115.178, 20.0205, 0.84", "40.2976, 116.384, 20.5241, 1.2", "41.2627, 118.198, 21.3442, 0.96", "41.5819, 118.826, 21.6292, 0.96", "42.8048, 121.788, 22.6988, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.41586, 48.7797, 14.4955, 1.08", "8.35158, 51.444, 14.56, 1.08", "10.6599, 54.7582, 14.6223, 1.08", "11.3569, 55.7791, 14.6382, 1.08", "12.0237, 56.7764, 14.5983, 1.08", "13.2073, 58.5466, 14.5275, 1.32", "14.9658, 61.1764, 14.4223, 0.96", "16.0747, 62.8197, 14.3058, 1.44", "16.8258, 63.9581, 14.1974, 1.44", "18.3192, 66.3133, 13.9326, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "13.2706, -211.579, 4.80591, 1.08", "12.9599, -213.157, 5.20135, 1.08", "12.7461, -214.195, 5.46417, 1.08", "12.4042, -215.677, 5.81694, 1.08", "12.1861, -216.586, 6.02859, 1.08", "11.9116, -217.644, 6.26961, 1.08", "11.7047, -218.37, 6.44277, 1.08", "11.5584, -218.829, 6.54482, 1.08", "11.2955, -219.507, 6.67763, 1.08", "10.7834, -220.682, 6.84078, 0.84", "10.4972, -221.283, 6.90741, 0.84", "10.0671, -222.136, 6.96085, 1.32", "9.4587, -223.294, 6.98189, 1.32", "8.60146, -224.929, 6.96975, 0.96", "8.0412, -226.046, 6.93198, 0.96", "7.65892, -226.863, 6.90509, 1.2", "6.99017, -228.47, 6.87208, 1.2", "6.58977, -229.567, 6.87323, 1.44", "6.17113, -230.871, 6.92081, 1.2", "5.81008, -232.243, 7.0092, 1.2", "5.37867, -234.062, 7.15751, 1.2", "5.23996, -234.72, 7.21876, 1.2", "5.08381, -235.789, 7.37735, 1.2", "5.03141, -236.388, 7.4974, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.2706, -211.579, 4.80591, 0.96", "14.3682, -215.23, 3.77236, 0.96", "15.037, -217.559, 3.12452, 1.32", "15.2067, -218.5, 2.94523, 1.32", "15.4172, -219.668, 2.72285, 1.32", "15.8901, -222.291, 2.22316, 1.56", "16.2409, -224.237, 1.8525, 1.56", "16.461, -225.677, 1.60307, 1.56", "16.8628, -229.666, 1.31208, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "40.0802, -287.314, -9.36832, 0.96", "39.5782, -289.284, -9.00011, 0.96", "39.1196, -291.052, -8.74081, 0.96", "38.6118, -292.815, -8.51586, 1.44", "37.4301, -296.724, -7.99962, 1.08", "36.8998, -298.544, -7.76603, 1.08", "36.1771, -301.319, -7.40485, 1.08", "35.8963, -302.624, -7.19723, 1.08", "35.3115, -305.993, -6.62671, 0.84", "34.9706, -308.758, -6.17707, 0.84", "34.8702, -310.502, -5.95185, 0.84", "34.8434, -312.464, -5.67263, 0.84", "34.8857, -314.298, -5.40552, 0.84", "34.9423, -315.798, -5.23445, 0.84", "34.995, -316.855, -5.195, 0.84", "35.0383, -318.064, -5.21323, 0.84", "34.9715, -319.672, -5.31187, 0.84", "34.7556, -321.071, -5.50973, 0.84", "34.4562, -322.251, -5.77856, 0.84", "33.7579, -324.308, -6.3345, 0.6", "31.3691, -334.954, -8.06818, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "40.0802, -287.314, -9.36832, 0.84", "40.2857, -288.967, -9.51762, 0.84", "40.4315, -290.151, -9.6546, 0.84", "40.5907, -291.409, -9.84378, 0.84", "40.8888, -294.004, -10.3089, 1.2", "40.9479, -294.608, -10.4319, 1.2", "41.1795, -297.297, -11.0256, 0.96", "41.3549, -299.551, -11.5937, 1.32", "41.5961, -302.412, -12.3167, 1.08", "41.7738, -304.022, -12.7177, 1.08", "41.9282, -305.208, -13.0015, 1.08", "42.0862, -306.093, -13.1824, 1.08", "42.2154, -306.7, -13.2825, 1.08", "42.7729, -309.081, -13.6094, 0.84", "43.5794, -312.166, -13.9312, 1.2", "43.8309, -313.036, -14.0003, 1.2", "45.2157, -317.548, -14.2835, 0.84", "46.0022, -320.091, -14.4292, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "9.049, 65.5508, 30.1106, 0.72", "8.55396, 64.5484, 29.8722, 0.72", "8.127, 63.6837, 29.6666, 0.48", "7.61231, 62.6415, 29.4187, 0.96", "7.24742, 61.9025, 29.243, 0.96", "3.51013, 55.013, 26.7472, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.049, 65.5508, 30.1106, 0.72", "9.45213, 64.172, 30.2395, 0.72", "9.65878, 63.2014, 30.3446, 1.08", "9.96892, 61.5294, 30.4554, 0.72", "10.1111, 60.3218, 30.4516, 0.72", "10.2115, 58.6025, 30.328, 0.72", "10.301, 57.1925, 30.1786, 1.2", "10.2943, 56.524, 30.1003, 1.2", "10.1981, 55.0737, 29.9053, 0.84", "10.0069, 53.2768, 29.6033, 0.84", "9.87367, 51.818, 29.1921, 1.32", "9.79903, 50.8757, 28.7889, 1.08", "9.15225, 41.7723, 27.6603, 1.08", "7.95174, 32.6934, 26.8107, 1.08", "6.50684, 23.9065, 24.4522, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "42.8048, 121.788, 22.6988, 0.6", "43.4401, 122.739, 23.0749, 0.6", "44.0889, 123.711, 23.459, 0.6", "44.931, 124.972, 23.9575, 0.6", "46.2913, 127.009, 24.7627, 0.6", "47.1736, 128.33, 25.285, 0.6", "48.0713, 129.674, 25.8164, 0.48", "52.1604, 138.886, 27.2437, 0.48", "56.9205, 147.88, 27.7772, 0.48", "61.9867, 156.423, 30.1434, 0.48", "68.8192, 163.988, 31.216, 0.48", "75.4351, 171.802, 31.3742, 0.48", "82.554, 179.093, 32.5717, 0.48", "87.9516, 187.753, 32.4699, 0.48", "91.372, 197.139, 30.5567, 0.48", "93.5476, 207.024, 29.8288, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "42.8048, 121.788, 22.6988, 0.84", "44.3124, 124.565, 22.5713, 0.84", "45.1632, 126.132, 22.4993, 0.84", "46.07, 127.802, 22.4226, 0.36", "46.9317, 129.389, 22.3497, 0.6", "47.6281, 130.672, 22.2907, 0.6", "48.8677, 132.955, 22.1859, 0.6", "54.6702, 142.278, 20.2542, 0.6", "59.924, 151.695, 17.4305, 0.6", "66.4832, 160.218, 14.3647, 0.6", "72.4618, 169.056, 11.0571, 0.6", "76.4312, 178.385, 6.41653, 0.6", "80.2719, 188.58, 4.23344, 0.6", "85.0943, 198.541, 3.13396, 0.6", "89.5652, 208.678, 2.25438, 0.6", "92.2885, 219.144, -0.237356, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "18.3192, 66.3133, 13.9326, 1.08", "17.5261, 68.2415, 14.3082, 1.08", "17.015, 69.162, 14.5765, 1.08", "16.2719, 70.5004, 14.9665, 1.08", "15.4468, 71.9864, 15.3996, 0.96", "14.2511, 74.14, 16.0272, 0.96", "13.2627, 75.9202, 16.546, 0.84", "11.8303, 78.0479, 17.3857, 1.08", "5.48342, 86.9936, 18.5877, 1.08", "0.432687, 96.6311, 20.2291, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "18.3192, 66.3133, 13.9326, 0.96", "20.2462, 67.5596, 13.3205, 0.96", "21.1199, 68.1071, 13.0002, 0.96", "22.4964, 69.0042, 12.4558, 0.96", "24.1237, 70.1281, 11.6591, 0.84", "24.9774, 70.7312, 11.2075, 0.84", "26.3389, 71.6917, 10.4516, 0.84", "26.9702, 72.1051, 10.0601, 0.84", "27.9911, 72.7387, 9.40751, 0.84", "30.0943, 73.8858, 8.13716, 1.2", "30.4979, 74.0692, 7.93663, 1.2", "31.5968, 74.4697, 7.50388, 1.2", "33.3017, 74.9258, 7.03028, 1.2", "33.8478, 75.0304, 6.92883, 1.2", "35.9937, 75.3419, 6.63497, 1.2", "37.6934, 75.567, 6.46775, 0.96", "39.3778, 75.8216, 6.30438, 0.96", "41.3002, 76.0823, 6.13126, 0.96", "43.2077, 76.3348, 5.96046, 1.32", "46.0841, 76.7417, 5.6938, 0.84", "48.5746, 77.1157, 5.4487, 1.2", "50.3185, 77.4071, 5.35232, 1.2", "52.0086, 77.7476, 5.34247, 0.96", "53.4268, 78.0902, 5.4353, 1.2", "54.4828, 78.3642, 5.59224, 1.2", "55.1781, 78.5542, 5.75107, 1.2", "58.7197, 79.6485, 6.77681, 1.2", "60.131, 80.1687, 7.22307, 1.2", "61.3168, 80.6981, 7.61128, 1.2", "63.6114, 81.7317, 8.36094, 1.08", "64.6499, 82.1587, 8.67323, 1.44", "66.6288, 82.8304, 9.03761, 1.08", "68.1559, 83.253, 9.07317, 1.08", "69.3206, 83.5708, 8.99237, 1.08", "71.2857, 84.1741, 8.70972, 1.08", "73.4577, 84.8704, 8.2563, 1.44", "76.8279, 85.9604, 7.36632, 1.08", "79.0276, 86.748, 6.67188, 0.84", "80.6817, 87.4468, 6.11946, 1.2", "82.3456, 88.2181, 5.54172, 1.2", "84.1973, 89.2061, 4.81226, 0.84", "85.5499, 89.9975, 4.26416, 1.08", "88.455, 91.689, 3.1784, 0.72", "91.3284, 93.239, 2.0787, 0.72", "93.1578, 94.0673, 1.38347, 1.2", "95.8558, 95.1653, 0.372792, 0.72", "96.807, 95.5286, 0.0393655, 0.72", "98.7984, 96.2271, -0.585524, 0.96", "100.9, 96.8954, -1.18219, 0.96", "104.62, 98.1951, -2.08665, 0.72", "106.532, 99.021, -2.47361, 0.6", "108.072, 99.7802, -2.71938, 0.6", "110.05, 100.931, -3.02796, 1.2", "110.638, 101.337, -3.11259, 1.2", "113.039, 103.149, -3.37346, 0.72", "114.161, 104.103, -3.47762, 0.72", "114.945, 104.753, -3.5473, 0.72", "116.819, 106.376, -3.7871, 0.6", "117.127, 106.641, -3.83264, 0.6", "118.679, 107.957, -4.16737, 0.96", "119.721, 108.866, -4.51058, 0.72", "120.4, 109.493, -4.7855, 0.96", "123.02, 112.059, -5.99536, 0.72", "124.53, 113.599, -6.76047, 0.72", "126.535, 115.623, -7.8645, 1.2", "128.656, 117.679, -8.98116, 0.72", "130.113, 118.987, -9.6683, 0.72", "131.925, 120.481, -10.4388, 0.72", "132.636, 120.999, -10.6813, 0.72", "134.845, 122.513, -11.2234, 1.08", "137.397, 124.107, -11.5042, 0.72", "139.237, 125.188, -11.5448, 1.08", "139.716, 125.471, -11.5299, 1.08", "141.733, 126.608, -11.449, 0.72", "142.923, 127.289, -11.4303, 0.72", "145.152, 128.62, -11.4801, 1.08", "146.033, 129.133, -11.5709, 1.08", "147.774, 130.102, -11.804, 0.84", "150.987, 131.805, -12.2784, 0.84", "153.71, 133.151, -12.6554, 0.6", "155.831, 134.066, -12.8646, 1.08", "156.85, 134.445, -12.913, 1.08", "159.523, 135.379, -12.8658, 0.72", "160.855, 135.829, -12.7481, 0.72", "163.645, 136.8, -12.2189, 1.08", "166.079, 137.631, -11.5792, 0.84", "167.358, 138.088, -11.1941, 1.08", "169.274, 138.833, -10.5988, 0.84", "170.258, 139.221, -10.3051, 0.84", "172.793, 140.198, -9.65753, 0.6", "174.044, 140.624, -9.40817, 0.6", "175.964, 141.207, -9.11742, 0.96", "176.766, 141.373, -9.02744, 0.96", "179.189, 141.6, -8.80902, 0.72", "181.096, 141.656, -8.64997, 0.72", "182.649, 141.636, -8.60079, 0.72", "183.038, 141.643, -8.60745, 0.72", "184.451, 141.761, -8.75178, 0.72", "186.746, 142.097, -9.24715, 0.72", "187.387, 142.231, -9.48596, 0.72", "189.785, 142.801, -10.6101, 0.6", "191.102, 143.124, -11.3089, 0.96", "193.371, 143.591, -12.5498, 0.96", "194.822, 143.891, -13.4041, 0.96", "197.229, 144.324, -14.9329, 0.72", "199.411, 144.631, -16.3197, 0.72", "201.49, 144.785, -17.6151, 1.2", "203.445, 144.815, -18.8007, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "5.03141, -236.388, 7.4974, 0.48", "5.14742, -238.601, 7.67065, 0.48", "5.25134, -240.583, 7.82582, 0.48", "5.34024, -242.278, 7.95859, 0.84", "5.41712, -243.745, 8.07338, 0.84", "5.49139, -245.161, 8.18429, 0.6", "5.76319, -253.441, 7.12269, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "5.03141, -236.388, 7.4974, 0.84", "5.26094, -237.827, 8.10394, 0.84", "5.43815, -239.005, 8.56799, 0.84", "5.59952, -240.161, 8.97889, 1.08", "5.81191, -241.602, 9.45758, 0.84", "5.96454, -242.6, 9.78, 0.84", "6.11179, -243.544, 10.0717, 0.84", "6.19063, -244.079, 10.218, 0.84", "6.43464, -245.749, 10.5955, 1.32", "6.55941, -246.695, 10.7673, 1.32", "6.74436, -248.431, 11.0145, 1.2", "6.82985, -249.448, 11.1285, 0.96", "6.90154, -250.711, 11.2648, 1.32", "6.93433, -251.861, 11.3865, 1.32", "6.91467, -253.274, 11.534, 1.08", "6.80949, -256.268, 11.8203, 1.08", "6.7241, -257.833, 11.9553, 0.84", "6.63022, -259.169, 12.0809, 1.2", "6.50301, -260.648, 12.2397, 1.08", "6.38647, -261.841, 12.3946, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "16.8628, -229.666, 1.31208, 0.96", "15.6104, -232.449, 1.81638, 0.96", "15.1839, -233.684, 2.16071, 0.96", "14.7904, -234.778, 2.49905, 0.96", "14.3185, -236.092, 2.90094, 0.96", "13.7872, -237.505, 3.34998, 0.96", "12.7002, -240.616, 4.33352, 1.44", "11.9382, -243.367, 5.27843, 0.96", "10.8001, -247.999, 6.92968, 1.44", "10.4785, -249.475, 7.45759, 0.96", "9.88442, -252.426, 8.49843, 1.56", "9.25038, -255.86, 9.64385, 1.2", "8.5245, -260.599, 11.0555, 0.96", "8.27728, -262.697, 11.6216, 1.44", "8.00422, -266.036, 12.4541, 0.96", "7.69144, -269.683, 13.276, 1.32", "7.29869, -273.548, 13.9977, 0.96", "6.90178, -276.45, 14.4197, 0.96", "6.6683, -278.136, 14.5827, 0.96", "6.49885, -279.567, 14.6869, 0.96", "6.10044, -283.395, 14.8914, 1.32", "5.78289, -286.776, 15.0235, 0.96", "5.42471, -291.595, 15.1959, 1.44", "5.23871, -295.11, 15.324, 0.84", "5.20074, -297.631, 15.4464, 1.2", "5.22735, -298.928, 15.5587, 1.2", "5.28647, -299.799, 15.6704, 0.84", "5.60992, -303.149, 16.3003, 1.2", "5.91389, -306.228, 17.08, 1.2", "6.03475, -308.317, 17.7068, 0.96", "6.09392, -311.771, 18.82, 0.96", "5.97388, -314.996, 19.8255, 1.32", "5.70768, -317.673, 20.6585, 1.68", "5.18847, -320.459, 21.5176, 1.2", "4.17858, -323.979, 22.5742, 0.96", "2.90161, -327.055, 23.386, 0.96", "1.2604, -329.73, 23.9656, 0.84", "-0.10895, -331.117, 24.2305, 0.84", "-1.82337, -331.864, 24.3045, 0.84", "-3.54467, -331.151, 24.1859, 0.84", "-4.47064, -330.393, 24.0871, 0.84", "-5.31673, -329.419, 23.9915, 0.84", "-6.08378, -328.162, 23.949, 1.08", "-6.90137, -326.395, 23.9149, 0.84", "-7.37822, -324.9, 23.959, 0.6", "-7.73244, -335.667, 26.0849, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.8628, -229.666, 1.31208, 1.08", "17.2234, -232.786, 1.44661, 1.08", "17.6229, -236.168, 1.56673, 1.44", "17.7742, -237.687, 1.61238, 0.84", "17.9756, -239.896, 1.66539, 1.32", "18.1103, -241.399, 1.69553, 1.32", "18.3356, -243.999, 1.70013, 1.32", "18.4401, -245.672, 1.66323, 1.32", "18.5612, -247.497, 1.609, 1.32", "18.7179, -250.87, 1.49954, 1.44", "18.78, -252.526, 1.44468, 1.44", "18.9346, -257.742, 1.27713, 1.44", "18.9561, -259.046, 1.23758, 1.44", "18.991, -261.302, 1.1752, 1.08", "19.1319, -265.805, 1.06662, 1.08", "19.2052, -268.121, 1.02369, 0.84", "19.3016, -270.791, 1.00816, 1.32", "19.4214, -272.902, 1.02815, 1.32", "19.6613, -276.175, 1.07127, 0.96", "19.8157, -277.876, 1.11042, 1.44", "20.0659, -280.367, 1.11351, 1.44", "20.2719, -283.008, 1.06573, 1.2", "20.3936, -285.652, 0.970248, 1.08", "20.4441, -287.758, 0.861704, 1.08", "20.4233, -289.748, 0.735271, 1.68", "20.3506, -292.901, 0.51431, 1.2", "20.3299, -294.202, 0.418321, 1.2", "20.3273, -296.805, 0.229309, 1.44", "20.365, -299.085, 0.0637169, 1.44", "20.4952, -301.891, -0.122816, 1.44", "20.6697, -304.307, -0.252192, 1.44", "20.9684, -307.071, -0.330784, 1.8", "21.3091, -309.934, -0.421283, 1.32", "21.5232, -311.611, -0.478398, 1.08", "21.8045, -313.96, -0.563379, 1.56", "22.125, -316.678, -0.676326, 1.56", "22.299, -318.194, -0.743582, 1.56", "22.4524, -319.592, -0.805156, 1.56", "22.6729, -321.725, -0.888146, 1.56", "22.8759, -323.528, -0.93889, 1.56", "23.1552, -325.604, -1.00165, 1.32", "23.2903, -326.54, -1.02936, 1.32", "23.4368, -327.927, -1.07671, 1.32", "23.575, -329.459, -1.13068, 1.32", "23.7755, -331.733, -1.24707, 1.32", "23.9225, -333.439, -1.33394, 1.32", "24.0628, -335.445, -1.43517, 1.68", "24.3336, -340.684, -1.72411, 1.32", "24.3894, -342.33, -1.8261, 1.32", "24.4215, -344.218, -1.9608, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "46.0022, -320.091, -14.4292, 0.96", "46.9596, -321.259, -12.448, 0.96", "47.4418, -321.829, -11.455, 1.32", "48.4455, -323.025, -9.40678, 0.96", "49.1862, -323.964, -7.87197, 1.32", "50.1679, -325.214, -5.97523, 1.2", "50.6879, -325.823, -5.02761, 1.2", "51.218, -326.39, -4.12932, 1.2", "51.5865, -326.797, -3.50982, 1.2", "52.0343, -327.274, -2.8217, 1.2", "53.444, -328.595, -0.890568, 0.96", "54.5408, -329.461, 0.372298, 1.32", "55.2093, -329.925, 1.09559, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "46.0022, -320.091, -14.4292, 1.08", "46.5089, -324.967, -14.4445, 1.08", "46.8941, -329.376, -14.5376, 0.72", "47.1351, -331.531, -14.6557, 0.72", "47.7563, -336.731, -15.0541, 1.2", "48.2769, -340.963, -15.4219, 0.84", "48.5788, -343.519, -15.6656, 0.84", "48.8249, -345.387, -15.8752, 0.84", "49.4707, -350.28, -16.439, 0.6", "49.8396, -353.002, -16.7283, 0.6", "50.4016, -356.632, -17.0319, 1.2", "51.1384, -360.765, -17.3431, 1.2", "51.8119, -364.244, -17.5662, 0.84", "52.3705, -367.137, -17.7311, 0.84", "53.2207, -371.733, -18.0036, 1.08", "53.9986, -375.706, -18.3156, 0.72", "54.7328, -379.216, -18.6853, 1.08", "55.2709, -381.629, -18.9881, 1.08", "55.7667, -383.886, -19.3281, 1.08", "56.592, -387.939, -20.0327, 0.72", "57.0987, -390.551, -20.5155, 0.72", "57.4495, -393.08, -20.9275, 1.08", "57.6006, -395.013, -21.1636, 1.08", "57.6544, -396.327, -21.2629, 1.08", "57.7266, -399.963, -21.5435, 0.72", "57.7463, -401.993, -21.7198, 0.72", "57.8314, -406.501, -22.1957, 1.2", "57.9813, -410.997, -22.7241, 1.2", "58.2934, -416.882, -23.5013, 1.2", "58.7325, -422.536, -24.3261, 0.84", "58.9448, -424.762, -24.7018, 1.32", "59.2117, -427.218, -25.1916, 1.32", "59.3777, -428.354, -25.456, 1.32", "59.7828, -430.873, -26.0933, 0.96", "60.13, -433.121, -26.6716, 1.56", "60.4939, -435.465, -27.1889, 1.56", "60.8189, -437.444, -27.5907, 1.08", "61.115, -439.365, -27.9816, 1.08", "61.7804, -443.291, -28.7956, 0.84", "62.1575, -445.12, -29.1438, 1.44", "63.01, -448.511, -29.7335, 1.08", "63.6633, -450.612, -30.0621, 1.08", "64.7614, -453.947, -30.5632, 0.72", "66.0423, -457.936, -31.1638, 1.08", "66.7796, -460.013, -31.5215, 1.08", "67.6625, -462.367, -31.9555, 0.96", "69.147, -466.359, -32.6967, 0.72", "69.9451, -468.344, -33.1049, 0.72", "70.5906, -469.745, -33.4164, 0.72", "72.5781, -473.883, -34.5064, 0.72", "73.336, -475.508, -35.0326, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.51013, 55.013, 26.7472, 0.6", "-1.11689, 45.6376, 24.2295, 0.6", "-5.59558, 35.9261, 23.2598, 0.6", "-9.35698, 26.1653, 20.8429, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.51013, 55.013, 26.7472, 0.84", "-1.62639, 46.4728, 22.9996, 0.6", "-8.88231, 38.972, 20.6935, 0.6", "-15.9013, 31.076, 19.1771, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "0.432687, 96.6311, 20.2291, 0.6", "-3.50444, 102.947, 22.8064, 0.6", "-8.64423, 108.319, 25.5142, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.432687, 96.6311, 20.2291, 0.84", "-4.7543, 105.804, 20.7834, 0.6", "-8.35753, 115.687, 20.688, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "6.38647, -261.841, 12.3946, 0.6", "4.16527, -261.533, 12.4339, 0.6", "1.40087, -261.151, 12.4827, 0.6", "0.102104, -260.971, 12.5057, 0.6", "-1.45685, -260.755, 12.5333, 0.96", "-13.0434, -257.798, 11.565, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "6.38647, -261.841, 12.3946, 0.96", "6.14111, -263.275, 12.2772, 0.96", "5.90055, -264.68, 12.1622, 0.72", "5.50749, -266.977, 11.9742, 0.72", "2.0992, -277.317, 12.3524, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "24.4215, -344.218, -1.9608, 0.84", "26.3903, -347.01, -3.40077, 0.84", "28.4175, -349.521, -4.80033, 0.84", "28.9397, -350.207, -5.20533, 0.84", "30.1838, -351.994, -6.31609, 0.84", "31.7035, -354.399, -7.78875, 0.6", "32.9892, -356.551, -9.06799, 1.08", "33.8894, -358.203, -10.0195, 1.08", "35.2681, -360.731, -11.4597, 0.72", "36.4092, -362.912, -12.6112, 0.72", "37.0387, -364.241, -13.3235, 0.72", "37.5466, -365.334, -14.0027, 0.72", "38.0511, -366.509, -14.755, 1.2", "39.3095, -369.418, -16.5602, 0.84", "41.0309, -373.117, -18.7558, 1.08", "42.9594, -377.235, -21.1041, 1.08", "44.8599, -381.384, -23.4432, 0.84", "45.6591, -383.226, -24.4281, 0.84", "46.6013, -385.439, -25.5489, 1.32", "47.7901, -388.291, -26.8442, 0.84", "48.251, -389.334, -27.2804, 0.84", "49.0736, -391.07, -27.8739, 1.32", "50.3547, -393.744, -28.7797, 0.84", "51.2503, -395.529, -29.5844, 1.44", "52.733, -398.612, -31.2948, 1.2", "53.3735, -399.984, -32.174, 1.2", "54.1991, -401.789, -33.3793, 1.44", "55.2431, -404.127, -34.9798, 1.08", "57.0623, -408.394, -37.8897, 0.84", "57.9947, -410.681, -39.3945, 1.44", "58.8927, -413.089, -40.8957, 0.96", "59.4607, -414.889, -41.8924, 0.96", "59.8373, -416.315, -42.5626, 1.44", "60.4618, -419.609, -43.8523, 0.96", "60.5774, -420.498, -44.1474, 0.96", "60.9374, -423.886, -45.1974, 1.44", "61.269, -427.499, -46.3467, 0.84", "61.5827, -431.589, -47.8698, 1.44", "61.8458, -435.827, -49.5948, 0.84", "61.8977, -437.053, -50.1443, 0.84", "62.0499, -440.298, -51.7446, 1.44", "62.3322, -444.814, -54.1426, 1.44", "62.6103, -449.77, -56.8412, 1.08", "62.7698, -452.411, -58.339, 0.72", "62.9544, -455.093, -59.9285, 1.32", "63.0721, -457.469, -61.3764, 0.72", "63.0725, -458.675, -62.1192, 0.72", "62.9159, -461.92, -64.0561, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "24.4215, -344.218, -1.9608, 1.08", "24.253, -346.784, -2.14586, 1.08", "24.2207, -348.477, -2.23721, 1.08", "24.2092, -349.695, -2.24073, 1.08", "24.1444, -351.992, -2.3868, 1.08", "24.0639, -354.769, -2.72486, 1.44", "24.0109, -357.442, -3.12843, 0.96", "24.0322, -359.651, -3.51622, 0.96", "24.0991, -361.802, -3.97256, 0.96", "24.2778, -365.857, -4.80579, 0.96", "24.4402, -368.504, -5.2928, 0.84", "24.5674, -370.062, -5.53701, 1.44", "24.7593, -372.467, -5.84758, 1.08", "24.9462, -374.394, -6.03644, 1.08", "25.2678, -377.248, -6.23645, 1.56", "25.8285, -381.684, -6.30575, 1.32", "26.0926, -383.895, -6.32508, 0.96", "26.3303, -386.099, -6.36088, 1.32", "26.7631, -390.207, -6.45615, 1.08", "27.0298, -392.797, -6.56436, 0.72", "27.2324, -395.073, -6.70727, 1.32", "27.4973, -398.257, -6.88717, 1.08", "27.6965, -400.793, -7.0008, 1.56", "27.926, -403.702, -7.09009, 0.84", "28.2007, -407.247, -7.18596, 0.6", "28.3224, -408.775, -7.22593, 1.08", "28.5725, -412.02, -7.31112, 1.2", "28.813, -414.928, -7.3851, 0.72", "28.9015, -415.896, -7.4155, 0.72", "29.3411, -420.53, -7.59905, 1.32", "29.4468, -421.377, -7.64367, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "55.2093, -329.925, 1.09559, 0.96", "55.3435, -329.236, 2.44777, 0.96", "55.3975, -328.959, 2.99169, 0.96", "55.4632, -328.622, 3.65426, 0.84", "55.6214, -327.81, 5.24835, 0.84", "55.7171, -327.319, 6.2136, 1.08", "55.8006, -326.89, 7.05513, 1.08", "56.2385, -323.47, 12.7919, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "55.2093, -329.925, 1.09559, 0.6", "55.1115, -331.5, 2.19371, 0.6", "54.8224, -333.53, 3.58919, 1.08", "54.4372, -335.779, 5.02562, 0.96", "54.2247, -337.042, 5.82359, 0.96", "54.0031, -338.359, 6.65558, 1.32", "53.5979, -340.768, 8.17658, 1.08", "53.3613, -341.809, 8.81581, 1.08", "52.7561, -343.897, 10.0855, 1.08", "52.1956, -345.854, 11.2236, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "73.336, -475.508, -35.0326, 0.72", "73.415, -476.678, -35.4334, 0.72", "73.4966, -477.8, -35.7738, 0.72", "73.6009, -479.336, -36.2512, 0.72", "73.642, -480.354, -36.5695, 0.72", "73.6627, -480.822, -36.7151, 0.72", "73.7533, -482.435, -37.1985, 0.6", "73.7804, -483.283, -37.4404, 0.6", "73.7917, -484.021, -37.6456, 0.6", "73.7847, -485.298, -37.9777, 0.48", "73.7777, -486.017, -38.1782, 0.48", "73.7479, -487.534, -38.6285, 0.84", "73.6492, -489.243, -39.1988, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "73.336, -475.508, -35.0326, 0.72", "74.2885, -478.028, -34.5783, 0.72", "75.6295, -481.576, -33.9388, 1.2", "76.0755, -482.756, -33.7261, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "29.4468, -421.377, -7.64367, 0.48", "27.2241, -423.113, -6.85087, 0.48", "26.8162, -423.397, -6.71564, 0.48", "25.5225, -424.4, -6.29631, 0.48", "24.1245, -425.706, -5.69873, 0.48", "23.5266, -426.344, -5.38096, 0.48", "21.9645, -428.079, -4.48065, 0.96", "20.1664, -430.152, -3.32445, 0.6", "18.8446, -431.792, -2.4039, 0.6", "16.912, -434.33, -0.948654, 1.08", "15.5547, -436.202, 0.159539, 0.84", "14.7218, -437.455, 0.908814, 0.84", "13.8112, -439.081, 1.87904, 1.2", "12.8604, -440.876, 3.0323, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "29.4468, -421.377, -7.64367, 0.84", "30.0836, -424.668, -8.09831, 0.84", "30.2652, -426.237, -8.31356, 0.84", "30.3982, -427.627, -8.48584, 0.84", "30.7339, -431.166, -8.93218, 0.84", "30.8627, -432.478, -9.09342, 0.84", "31.1614, -435.531, -9.45473, 1.44", "31.3659, -437.787, -9.73795, 1.08", "31.564, -440.358, -10.0285, 1.08", "31.7147, -442.807, -10.2549, 0.84", "31.8076, -444.344, -10.3432, 0.84", "31.9445, -445.7, -10.3958, 1.08", "32.261, -447.496, -10.4437, 0.6", "32.5866, -448.938, -10.4621, 0.6", "32.9333, -450.444, -10.4427, 0.6", "33.4216, -452.435, -10.4359, 1.2", "33.9415, -454.426, -10.4781, 1.2", "34.285, -455.808, -10.5342, 1.2", "34.6387, -457.37, -10.6195, 0.96", "34.859, -458.411, -10.6817, 1.44", "35.2273, -460.477, -10.8095, 1.44", "35.6513, -463.43, -10.9938, 0.96", "36.0454, -466.69, -11.1868, 1.32", "36.205, -468.041, -11.2589, 1.32", "36.5521, -471.072, -11.3984, 0.84", "36.801, -473.566, -11.5, 1.32", "36.9236, -474.924, -11.5295, 1.32", "37.0564, -476.52, -11.5955, 1.32", "37.3078, -479.609, -11.7679, 1.32", "37.4437, -481.643, -11.9025, 0.96", "37.5264, -483.271, -12.0243, 0.96", "37.7452, -486.928, -12.3168, 1.44", "37.8852, -489.17, -12.5229, 1.08", "37.9642, -490.972, -12.7142, 1.08", "38.0214, -492.779, -12.954, 1.08", "38.1241, -494.984, -13.2649, 1.08", "38.2564, -497.349, -13.6028, 1.08", "38.4353, -500.694, -14.1226, 1.08", "38.7444, -505.655, -14.9334, 0.96", "39.216, -513.272, -16.23, 1.32", "39.3719, -515.778, -16.6705, 0.84", "39.4603, -517.271, -16.9359, 0.84", "39.5674, -519.302, -17.2902, 0.84", "39.6424, -520.854, -17.5401, 0.84", "39.7926, -523.907, -17.974, 0.84", "39.8217, -525.43, -18.151, 0.84", "39.8076, -526.695, -18.2876, 0.84", "39.765, -528.019, -18.4068, 1.2", "39.6909, -530.511, -18.5881, 0.72", "39.5807, -532.452, -18.7277, 1.32", "39.4834, -533.994, -18.8984, 0.84", "39.3483, -535.795, -19.1187, 1.56", "38.9523, -540.182, -19.7741, 0.84", "38.77, -541.814, -20.0508, 1.32", "38.3495, -544.757, -20.5983, 0.84", "37.6337, -549.13, -21.439, 0.6", "37.4137, -550.429, -21.6853, 1.08", "36.9892, -552.866, -22.1322, 0.84", "36.6182, -554.893, -22.5135, 1.44", "36.2038, -557.012, -22.8959, 0.96", "35.8883, -558.761, -23.1819, 0.72", "35.5542, -560.447, -23.3599, 0.72", "34.9836, -563.605, -23.686, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "52.1956, -345.854, 11.2236, 0.84", "53.3211, -345.465, 13.6134, 0.84", "53.8153, -345.294, 14.6626, 0.84", "54.9781, -344.893, 17.1313, 0.72", "55.7127, -344.639, 18.6909, 0.72", "61.1485, -344.518, 27.6172, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "52.1956, -345.854, 11.2236, 0.72", "52.2986, -347.687, 12.1741, 0.72", "52.4079, -349.632, 13.1819, 0.84", "52.4541, -350.453, 13.6074, 0.84", "52.5507, -352.171, 14.4982, 0.6", "52.6176, -353.361, 15.115, 0.6", "52.6876, -354.605, 15.7599, 0.6", "52.7168, -362.542, 21.0048, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "73.6492, -489.243, -39.1988, 0.48", "71.9536, -489.306, -42.9655, 0.48", "71.5591, -489.32, -43.8418, 1.08", "71.1529, -489.335, -44.7441, 0.48", "70.6433, -489.354, -45.8762, 0.96", "70.2122, -489.37, -46.8337, 0.48", "69.3709, -489.401, -48.7027, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "73.6492, -489.243, -39.1988, 0.96", "74.2092, -490.734, -40.5493, 0.96", "75.0789, -493.384, -42.8334, 0.48", "75.3884, -494.434, -43.6656, 0.48", "76.0402, -496.593, -45.2741, 0.84", "76.5234, -498.166, -46.4223, 0.6", "76.7614, -498.928, -46.969, 0.6", "77.355, -500.576, -48.1848, 0.96", "77.7767, -501.675, -48.9952, 0.96", "78.6941, -503.774, -50.644, 0.72", "79.7056, -505.783, -52.3219, 0.72", "80.7152, -507.331, -53.8553, 1.2", "81.7545, -508.773, -55.3738, 1.2", "82.445, -509.63, -56.3551, 1.2", "83.3457, -510.628, -57.6383, 1.08", "84.6243, -511.853, -59.4329, 0.84", "86.2278, -513.091, -61.5213, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "76.0755, -482.756, -33.7261, 0.72", "79.4387, -483.338, -31.8471, 0.72", "81.4514, -483.687, -30.7226, 0.72", "82.7467, -483.911, -29.999, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "76.0755, -482.756, -33.7261, 0.48", "76.2281, -485.431, -33.9308, 0.48", "76.2567, -486.937, -34.1042, 0.96", "76.2481, -487.634, -34.2026, 0.96", "76.1846, -489.325, -34.4726, 0.48", "76.124, -490.346, -34.6499, 0.48", "76.0181, -492.016, -34.9437, 0.96", "75.8821, -493.685, -35.2608, 0.96", "75.7742, -494.79, -35.4822, 0.96", "75.576, -496.438, -35.8508, 1.32", "75.3393, -498.087, -36.2556, 0.96", "75.2509, -498.733, -36.4133, 0.96", "75.1664, -499.51, -36.5888, 0.96", "75.0652, -500.789, -36.8468, 1.32", "75.0221, -502.138, -37.0791, 0.96", "75.0489, -503.613, -37.2861, 0.6", "75.1624, -504.703, -37.4508, 0.6", "75.4694, -506.036, -37.715, 1.32", "75.9695, -507.407, -38.052, 0.84", "76.4811, -508.537, -38.3577, 0.84", "76.7439, -509.045, -38.4939, 0.84", "77.8673, -511.062, -39.0554, 0.84", "79.0785, -513.158, -39.6579, 1.44", "80.3312, -515.385, -40.3391, 0.96", "80.7864, -516.338, -40.6212, 0.96", "81.2671, -517.648, -40.989, 0.96", "81.5092, -518.618, -41.2249, 0.96", "81.6182, -519.633, -41.4138, 0.96", "81.5674, -522.055, -41.8047, 0.72", "81.3025, -524.56, -42.181, 1.08", "81.0463, -526.219, -42.4232, 0.72", "80.7545, -527.779, -42.6446, 1.2", "80.3973, -529.579, -42.8782, 0.96", "79.8196, -532.411, -43.2055, 1.44", "79.4293, -534.348, -43.4051, 0.96", "79.2454, -535.453, -43.5582, 0.72", "78.8673, -538.204, -44.0131, 1.08", "78.6807, -539.846, -44.343, 0.6", "78.5582, -540.928, -44.5641, 0.6", "78.4049, -542.25, -44.832, 1.2", "77.953, -545.3, -45.4106, 0.72", "77.7417, -546.564, -45.6708, 1.08", "77.3495, -548.487, -46.0963, 0.96", "76.9042, -550.374, -46.5395, 0.72", "76.6351, -551.452, -46.7813, 0.72", "75.9177, -554.084, -47.32, 0.72", "75.2715, -556.066, -47.6579, 0.72", "74.9913, -556.929, -47.8227, 1.2", "74.6312, -558.145, -48.1218, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_DBC_2bb1f65738_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.51491, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -6.26682, 9.68269, 9.04626, 2.16 ) }
    dend_73 { pt3dadd( -9.98091, 12.4847, 4.60218, 2.52 ) }
    dend_73 { pt3dadd( -12.6762, 14.3153, 1.69939, 2.52 ) }
    dend_73 { pt3dadd( -14.6365, 15.5301, -0.167697, 2.52 ) }
    dend_73 { pt3dadd( -15.6674, 16.1104, -1.07457, 2.52 ) }
    dend_73 { pt3dadd( -16.9116, 16.7276, -2.0261, 2.28 ) }
    dend_73 { pt3dadd( -20.2269, 18.268, -4.13076, 1.92 ) }
    dend_73 { pt3dadd( -21.6457, 18.8488, -4.79595, 1.92 ) }
    dend_73 { pt3dadd( -24.7171, 19.9397, -6.06589, 1.8 ) }
    dend_73 { pt3dadd( -26.5604, 20.5698, -6.72536, 1.8 ) }
    dend_73 { pt3dadd( -30.546, 21.7667, -7.9611, 1.56 ) }
    dend_73 { pt3dadd( -33.6434, 22.5925, -8.79279, 1.92 ) }
    dend_73 { pt3dadd( -36.3148, 23.1802, -9.40485, 1.92 ) }
    dend_73 { pt3dadd( -38.2231, 23.4133, -9.74934, 1.92 ) }
    dend_73 { pt3dadd( -40.6616, 23.4486, -10.085, 1.92 ) }
    dend_73 { pt3dadd( -45.3267, 23.201, -10.703, 1.8 ) }
    dend_73 { pt3dadd( -46.1172, 23.0955, -10.8214, 1.8 ) }
    dend_73 { pt3dadd( -47.7719, 22.7592, -11.0699, 1.8 ) }
    dend_73 { pt3dadd( -51.6951, 21.7788, -11.7508, 1.32 ) }
    dend_73 { pt3dadd( -53.0829, 21.4051, -12.0619, 1.32 ) }
    dend_73 { pt3dadd( -55.7595, 20.6724, -12.9086, 1.92 ) }
    dend_73 { pt3dadd( -56.8027, 20.5987, -13.5184, 1.92 ) }
    dend_73 { pt3dadd( -57.5529, 21.1977, -14.6909, 1.92 ) }
    dend_73 { pt3dadd( -57.8933, 21.6218, -15.4323, 1.92 ) }
    dend_73 { pt3dadd( -58.2539, 22.1344, -16.3311, 1.92 ) }
    dend_73 { pt3dadd( -58.7464, 22.4459, -17.1344, 1.92 ) }
    dend_73 { pt3dadd( -59.5411, 22.5793, -18.1107, 1.92 ) }
    dend_73 { pt3dadd( -61.8883, 22.5495, -20.7345, 1.44 ) }
    dend_73 { pt3dadd( -63.6559, 22.4413, -22.5826, 1.44 ) }
    dend_73 { pt3dadd( -64.5528, 22.348, -23.4623, 1.44 ) }
    dend_73 { pt3dadd( -66.8629, 21.9776, -25.6268, 1.44 ) }
    dend_73 { pt3dadd( -68.3855, 21.644, -27.0109, 1.8 ) }
    dend_73 { pt3dadd( -69.5762, 21.3008, -28.0824, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 12.6099, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.7827, 15.6082, 0.598057, 1.32 ) }
    dend_69 { pt3dadd( -2.545, 18.7787, -0.496309, 1.32 ) }
    dend_69 { pt3dadd( -2.42378, 20.5007, -1.02816, 1.32 ) }
    dend_69 { pt3dadd( -2.30036, 22.3566, -1.53029, 1.32 ) }
    dend_69 { pt3dadd( -2.2268, 23.5147, -1.80134, 1.32 ) }
    dend_69 { pt3dadd( -2.12242, 24.8391, -2.06589, 1.32 ) }
    dend_69 { pt3dadd( -1.98279, 26.4579, -2.22959, 1.32 ) }
    dend_69 { pt3dadd( -1.88361, 27.4725, -2.19035, 1.32 ) }
    dend_69 { pt3dadd( -1.68227, 29.3617, -2.03996, 1.08 ) }
    dend_69 { pt3dadd( -1.44414, 31.3783, -1.83425, 1.56 ) }
    dend_69 { pt3dadd( -1.18942, 33.5197, -1.56346, 1.56 ) }
    dend_69 { pt3dadd( -0.95701, 35.3862, -1.28107, 1.56 ) }
    dend_69 { pt3dadd( -0.317257, 39.6639, -0.508635, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 10.0944, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.51889, 11.1251, 11.7617, 1.8 ) }
    dend_64 { pt3dadd( -7.25193, 12.2188, 12.2028, 1.8 ) }
    dend_64 { pt3dadd( -8.68608, 14.1969, 13.1594, 1.56 ) }
    dend_64 { pt3dadd( -9.0977, 14.7647, 13.434, 1.56 ) }
    dend_64 { pt3dadd( -10.038, 16.0616, 14.0612, 1.44 ) }
    dend_64 { pt3dadd( -11.0184, 17.4139, 14.7151, 0.96 ) }
    dend_64 { pt3dadd( -11.4348, 17.985, 15.02, 0.96 ) }
    dend_64 { pt3dadd( -13.1578, 20.2134, 16.3207, 1.92 ) }
    dend_64 { pt3dadd( -17.9775, 26.9282, 19.7351, 1.92 ) }
    dend_64 { pt3dadd( -24.2677, 32.0503, 23.6279, 1.92 ) }
    dend_64 { pt3dadd( -31.582, 36.7023, 26.0886, 1.92 ) }
    dend_64 { pt3dadd( -38.2373, 42.3956, 28.0702, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -11.1118, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.56422, -12.6439, 11.4382, 2.64 ) }
    dend_41 { pt3dadd( 1.72007, -14.413, 11.3059, 2.64 ) }
    dend_41 { pt3dadd( 1.83501, -15.7177, 11.2083, 2.64 ) }
    dend_41 { pt3dadd( 1.94219, -16.9343, 11.1173, 2.64 ) }
    dend_41 { pt3dadd( 2.16027, -19.4098, 10.9322, 2.4 ) }
    dend_41 { pt3dadd( 2.37999, -21.9038, 10.7457, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -11.8821, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 5.07093, -12.7299, 12.7905, 2.16 ) }
    dend_18 { pt3dadd( 5.84341, -15.426, 12.0467, 2.16 ) }
    dend_18 { pt3dadd( 6.4321, -17.3552, 11.6128, 2.16 ) }
    dend_18 { pt3dadd( 7.44552, -20.6761, 10.8658, 2.16 ) }
    dend_18 { pt3dadd( 8.19063, -23.1178, 10.3166, 2.16 ) }
    dend_18 { pt3dadd( 8.7309, -24.8883, 9.91843, 2.16 ) }
    dend_18 { pt3dadd( 10.1592, -29.4994, 8.8653, 2.52 ) }
    dend_18 { pt3dadd( 11.1686, -33.0817, 8.05072, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 12.3077, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.066006, 16.2419, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.470443, 20.1163, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.952167, 23.5955, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.19574, 25.3546, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.49253, 27.4981, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.20963 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.20963 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.20963 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -69.5762, 21.3008, -28.0824, 1.2 ) }
    dend_75 { pt3dadd( -71.136, 23.7961, -26.9902, 1.2 ) }
    dend_75 { pt3dadd( -72.8514, 25.6326, -26.0644, 1.2 ) }
    dend_75 { pt3dadd( -74.1022, 26.4215, -25.5782, 1.2 ) }
    dend_75 { pt3dadd( -74.925, 26.8486, -25.2927, 1.56 ) }
    dend_75 { pt3dadd( -75.4431, 27.054, -25.217, 1.56 ) }
    dend_75 { pt3dadd( -76.361, 27.3486, -25.1798, 1.56 ) }
    dend_75 { pt3dadd( -78.9153, 27.8954, -25.2085, 0.96 ) }
    dend_75 { pt3dadd( -82.9018, 28.539, -25.4971, 1.56 ) }
    dend_75 { pt3dadd( -83.2978, 28.595, -25.5354, 1.56 ) }
    dend_75 { pt3dadd( -88.2774, 29.2052, -26.1702, 1.08 ) }
    dend_75 { pt3dadd( -89.8102, 29.3536, -26.4373, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -69.5762, 21.3008, -28.0824, 1.08 ) }
    dend_74 { pt3dadd( -71.1487, 20.9985, -28.8811, 1.08 ) }
    dend_74 { pt3dadd( -72.8139, 20.4866, -29.783, 1.56 ) }
    dend_74 { pt3dadd( -76.284, 18.9106, -32.08, 0.84 ) }
    dend_74 { pt3dadd( -77.5846, 18.1053, -33.1669, 0.84 ) }
    dend_74 { pt3dadd( -78.0023, 17.7825, -33.5762, 0.84 ) }
    dend_74 { pt3dadd( -79.0569, 16.8376, -34.7345, 0.84 ) }
    dend_74 { pt3dadd( -80.009, 15.6786, -36.0836, 0.84 ) }
    dend_74 { pt3dadd( -81.0579, 13.9939, -37.8966, 0.84 ) }
    dend_74 { pt3dadd( -81.8521, 12.3335, -39.4322, 0.84 ) }
    dend_74 { pt3dadd( -82.3239, 11.2735, -40.3394, 0.84 ) }
    dend_74 { pt3dadd( -82.8265, 10.2282, -41.2162, 0.84 ) }
    dend_74 { pt3dadd( -83.2643, 9.43449, -41.8479, 0.84 ) }
    dend_74 { pt3dadd( -84.0709, 8.22977, -42.6553, 0.84 ) }
    dend_74 { pt3dadd( -84.8831, 7.25912, -43.0891, 0.84 ) }
    dend_74 { pt3dadd( -85.3941, 6.76824, -43.2297, 0.84 ) }
    dend_74 { pt3dadd( -86.4985, 5.89156, -43.3964, 0.84 ) }
    dend_74 { pt3dadd( -87.2956, 5.35631, -43.4443, 0.84 ) }
    dend_74 { pt3dadd( -88.5476, 4.62592, -43.4363, 0.84 ) }
    dend_74 { pt3dadd( -90.0936, 3.70189, -43.3512, 0.84 ) }
    dend_74 { pt3dadd( -91.7735, 2.58118, -43.1916, 0.84 ) }
    dend_74 { pt3dadd( -92.8399, 1.72144, -43.0311, 0.84 ) }
    dend_74 { pt3dadd( -94.0885, 0.523749, -42.8102, 0.84 ) }
    dend_74 { pt3dadd( -96.0724, -1.72169, -42.494, 0.84 ) }
    dend_74 { pt3dadd( -97.6527, -3.84791, -42.2498, 1.32 ) }
    dend_74 { pt3dadd( -98.7855, -5.61582, -42.0526, 0.6 ) }
    dend_74 { pt3dadd( -99.9315, -7.72669, -41.8137, 1.2 ) }
    dend_74 { pt3dadd( -100.753, -9.52709, -41.6416, 0.72 ) }
    dend_74 { pt3dadd( -101.39, -11.2707, -41.5247, 0.72 ) }
    dend_74 { pt3dadd( -101.707, -12.4305, -41.5027, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -0.317257, 39.6639, -0.508635, 1.32 ) }
    dend_70 { pt3dadd( 0.468448, 41.2477, 0.290244, 1.32 ) }
    dend_70 { pt3dadd( 2.24614, 45.1318, 1.97539, 0.96 ) }
    dend_70 { pt3dadd( 2.96245, 46.9392, 2.6466, 0.96 ) }
    dend_70 { pt3dadd( 3.54816, 48.8293, 3.22915, 1.2 ) }
    dend_70 { pt3dadd( 3.7936, 49.9089, 3.49714, 1.2 ) }
    dend_70 { pt3dadd( 3.95737, 50.8617, 3.70081, 1.2 ) }
    dend_70 { pt3dadd( 3.9946, 51.9302, 3.83426, 1.44 ) }
    dend_70 { pt3dadd( 3.75171, 53.3967, 3.83632, 1.08 ) }
    dend_70 { pt3dadd( 3.18704, 55.26, 3.83794, 1.08 ) }
    dend_70 { pt3dadd( 2.40025, 57.2872, 3.83934, 1.56 ) }
    dend_70 { pt3dadd( 2.15074, 57.84, 3.83955, 1.56 ) }
    dend_70 { pt3dadd( 1.3815, 59.3366, 3.83918, 1.56 ) }
    dend_70 { pt3dadd( 0.258888, 61.2615, 3.83633, 1.56 ) }
    dend_70 { pt3dadd( 0.158129, 61.4101, 3.83568, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -38.2373, 42.3956, 28.0702, 1.2 ) }
    dend_66 { pt3dadd( -44.3967, 48.4635, 31.3, 1.2 ) }
    dend_66 { pt3dadd( -49.097, 54.7523, 36.1479, 1.2 ) }
    dend_66 { pt3dadd( -55.4451, 60.6976, 39.2482, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -38.2373, 42.3956, 28.0702, 1.44 ) }
    dend_65 { pt3dadd( -45.0888, 49.4281, 31.5133, 1.2 ) }
    dend_65 { pt3dadd( -50.6398, 57.2341, 35.4893, 1.2 ) }
    dend_65 { pt3dadd( -56.8816, 64.8533, 38.7739, 1.2 ) }
    dend_65 { pt3dadd( -64.014, 71.9721, 41.3669, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.37999, -21.9038, 10.7457, 1.2 ) }
    dend_61 { pt3dadd( 2.38671, -25.0904, 10.0857, 1.2 ) }
    dend_61 { pt3dadd( 2.43194, -26.9949, 9.6943, 1.2 ) }
    dend_61 { pt3dadd( 2.52732, -29.1361, 9.26844, 1.2 ) }
    dend_61 { pt3dadd( 2.63775, -31.0265, 8.90627, 1.2 ) }
    dend_61 { pt3dadd( 2.74624, -32.3718, 8.66419, 1.2 ) }
    dend_61 { pt3dadd( 2.83513, -33.3783, 8.4838, 1.2 ) }
    dend_61 { pt3dadd( 2.95145, -34.1361, 8.34051, 1.2 ) }
    dend_61 { pt3dadd( 3.13859, -35.1152, 8.16881, 1.2 ) }
    dend_61 { pt3dadd( 3.2781, -35.6894, 8.0994, 1.2 ) }
    dend_61 { pt3dadd( 3.58488, -36.7755, 8.0068, 1.2 ) }
    dend_61 { pt3dadd( 3.797, -37.5714, 7.95086, 1.2 ) }
    dend_61 { pt3dadd( 3.96234, -38.4297, 7.9011, 1.2 ) }
    dend_61 { pt3dadd( 4.01374, -39.1249, 7.86056, 1.2 ) }
    dend_61 { pt3dadd( 3.97987, -40.5108, 7.78213, 1.2 ) }
    dend_61 { pt3dadd( 3.93173, -41.095, 7.75051, 1.2 ) }
    dend_61 { pt3dadd( 3.78656, -42.3451, 7.68107, 1.2 ) }
    dend_61 { pt3dadd( 3.53171, -44.4675, 7.5736, 1.68 ) }
    dend_61 { pt3dadd( 3.20277, -47.0511, 7.43892, 1.08 ) }
    dend_61 { pt3dadd( 2.92213, -49.3129, 7.31938, 0.72 ) }
    dend_61 { pt3dadd( 2.80488, -50.467, 7.26144, 1.92 ) }
    dend_61 { pt3dadd( 2.59512, -53.4749, 7.12548, 0.96 ) }
    dend_61 { pt3dadd( 2.52186, -55.6839, 7.04033, 0.84 ) }
    dend_61 { pt3dadd( 2.54544, -56.9439, 7.00213, 1.44 ) }
    dend_61 { pt3dadd( 2.67002, -58.5973, 6.96886, 1.08 ) }
    dend_61 { pt3dadd( 2.84915, -60.1488, 6.95279, 1.08 ) }
    dend_61 { pt3dadd( 3.19476, -62.6397, 6.94557, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( 3.35077, -63.7029, 6.95024, 1.44 ) }
    dend_61 { pt3dadd( 3.54836, -65.2108, 6.95449, 1.44 ) }
    dend_61 { pt3dadd( 3.77378, -67.2391, 6.9553, 0.72 ) }
    dend_61 { pt3dadd( 3.84521, -68.0342, 6.95334, 1.2 ) }
    dend_61 { pt3dadd( 3.95235, -69.4947, 6.94624, 1.2 ) }
    dend_61 { pt3dadd( 4.04304, -70.6254, 6.94175, 1.56 ) }
    dend_61 { pt3dadd( 4.15114, -72.1851, 6.88757, 1.32 ) }
    dend_61 { pt3dadd( 4.2405, -73.9472, 6.78371, 0.84 ) }
    dend_61 { pt3dadd( 4.38753, -76.008, 6.63451, 1.56 ) }
    dend_61 { pt3dadd( 4.49678, -77.2244, 6.54053, 1.56 ) }
    dend_61 { pt3dadd( 4.71621, -79.3919, 6.36656, 0.96 ) }
    dend_61 { pt3dadd( 4.93256, -81.3889, 6.20128, 0.96 ) }
    dend_61 { pt3dadd( 5.08756, -82.9298, 6.07054, 1.32 ) }
    dend_61 { pt3dadd( 5.20805, -84.8243, 5.90825, 1.32 ) }
    dend_61 { pt3dadd( 5.26237, -87.4597, 5.6944, 0.72 ) }
    dend_61 { pt3dadd( 5.24455, -88.3518, 5.62547, 1.56 ) }
    dend_61 { pt3dadd( 5.18279, -89.2417, 5.55063, 1.56 ) }
    dend_61 { pt3dadd( 5.00097, -90.9689, 5.40181, 0.96 ) }
    dend_61 { pt3dadd( 4.74586, -92.4632, 5.235, 1.68 ) }
    dend_61 { pt3dadd( 4.26674, -94.8063, 4.87941, 1.08 ) }
    dend_61 { pt3dadd( 3.87406, -96.7038, 4.5393, 0.96 ) }
    dend_61 { pt3dadd( 3.4372, -99.1245, 4.08179, 1.44 ) }
    dend_61 { pt3dadd( 3.23414, -100.432, 3.82792, 1.08 ) }
    dend_61 { pt3dadd( 2.95702, -102.507, 3.39666, 0.84 ) }
    dend_61 { pt3dadd( 2.75187, -104.368, 2.97678, 1.44 ) }
    dend_61 { pt3dadd( 2.66197, -105.289, 2.75996, 1.44 ) }
    dend_61 { pt3dadd( 2.52558, -107.104, 2.34578, 0.72 ) }
    dend_61 { pt3dadd( 2.46409, -108.428, 2.04487, 0.72 ) }
    dend_61 { pt3dadd( 2.38813, -110.812, 1.49842, 1.32 ) }
    dend_61 { pt3dadd( 2.34797, -112.573, 1.07152, 0.96 ) }
    dend_61 { pt3dadd( 2.2952, -113.33, 0.883787, 0.96 ) }
    dend_61 { pt3dadd( 2.22391, -114.175, 0.647016, 0.96 ) }
    dend_61 { pt3dadd( 2.08274, -115.258, 0.2991, 0.96 ) }
    dend_61 { pt3dadd( 1.98007, -115.891, 0.0940056, 0.96 ) }
    dend_61 { pt3dadd( 1.81562, -116.748, -0.216101, 0.96 ) }
    dend_61 { pt3dadd( 1.63122, -117.648, -0.55382, 0.96 ) }
    dend_61 { pt3dadd( 1.06627, -120.323, -1.55919, 1.44 ) }
    dend_61 { pt3dadd( 0.415648, -123.404, -2.681, 0.48 ) }
    dend_61 { pt3dadd( 0.120359, -124.896, -3.18925, 1.56 ) }
    dend_61 { pt3dadd( -0.430912, -127.951, -4.16622, 0.84 ) }
    dend_61 { pt3dadd( -0.557171, -128.781, -4.43231, 0.84 ) }
    dend_61 { pt3dadd( -0.732542, -130.249, -4.89854, 0.84 ) }
    dend_61 { pt3dadd( -0.82926, -131.458, -5.24912, 0.84 ) }
    dend_61 { pt3dadd( -0.87887, -132.645, -5.54471, 0.84 ) }
    dend_61 { pt3dadd( -0.92454, -133.79, -5.79587, 0.84 ) }
    dend_61 { pt3dadd( -1.02571, -136.892, -6.38324, 0.6 ) }
    dend_61 { pt3dadd( -1.09368, -138.606, -6.72652, 1.08 ) }
    dend_61 { pt3dadd( -1.20855, -140.988, -7.2321, 0.72 ) }
    dend_61 { pt3dadd( -1.34843, -143.207, -7.71784, 0.6 ) }
    dend_61 { pt3dadd( -1.44395, -144.265, -7.94685, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.37999, -21.9038, 10.7457, 1.92 ) }
    dend_42 { pt3dadd( 2.42725, -25.862, 10.4816, 1.92 ) }
    dend_42 { pt3dadd( 2.47899, -30.1952, 10.1924, 1.92 ) }
    dend_42 { pt3dadd( 2.53734, -35.082, 9.86629, 2.28 ) }
    dend_42 { pt3dadd( 2.56832, -37.6766, 9.69314, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.1686, -33.0817, 8.05072, 1.32 ) }
    dend_40 { pt3dadd( 14.3794, -34.61, 8.96548, 1.32 ) }
    dend_40 { pt3dadd( 16.5385, -35.4172, 9.65688, 1.32 ) }
    dend_40 { pt3dadd( 18.293, -35.9716, 10.2583, 1.32 ) }
    dend_40 { pt3dadd( 20.1793, -36.5154, 10.9331, 1.32 ) }
    dend_40 { pt3dadd( 22.6898, -37.1671, 11.8815, 1.32 ) }
    dend_40 { pt3dadd( 24.0099, -37.5129, 12.402, 1.32 ) }
    dend_40 { pt3dadd( 27.4271, -38.3829, 13.911, 1.08 ) }
    dend_40 { pt3dadd( 28.507, -38.6489, 14.4184, 1.08 ) }
    dend_40 { pt3dadd( 28.9526, -38.7639, 14.6371, 1.08 ) }
    dend_40 { pt3dadd( 31.3296, -39.4451, 15.8508, 1.44 ) }
    dend_40 { pt3dadd( 33.1583, -40.1149, 16.7634, 1.08 ) }
    dend_40 { pt3dadd( 34.0824, -40.55, 17.2128, 1.08 ) }
    dend_40 { pt3dadd( 36.2986, -41.7321, 18.2112, 1.08 ) }
    dend_40 { pt3dadd( 37.7448, -42.4963, 18.8109, 0.84 ) }
    dend_40 { pt3dadd( 39.2002, -43.2622, 19.3632, 0.84 ) }
    dend_40 { pt3dadd( 40.957, -44.0896, 19.9709, 0.84 ) }
    dend_40 { pt3dadd( 42.3842, -44.7282, 20.4514, 0.84 ) }
    dend_40 { pt3dadd( 45.8882, -46.2341, 21.4616, 1.2 ) }
    dend_40 { pt3dadd( 47.8965, -47.0521, 21.9219, 0.84 ) }
    dend_40 { pt3dadd( 49.6337, -47.6533, 22.2223, 0.84 ) }
    dend_40 { pt3dadd( 53.0512, -48.6448, 22.6841, 0.96 ) }
    dend_40 { pt3dadd( 56.4226, -49.5787, 23.099, 0.72 ) }
    dend_40 { pt3dadd( 60.1964, -50.5966, 23.4843, 1.2 ) }
    dend_40 { pt3dadd( 62.2972, -51.1617, 23.6152, 1.2 ) }
    dend_40 { pt3dadd( 64.5272, -51.6792, 23.6565, 0.6 ) }
    dend_40 { pt3dadd( 65.5713, -51.8815, 23.6256, 0.6 ) }
    dend_40 { pt3dadd( 77.4629, -54.0674, 25.4054, 0.6 ) }
    dend_40 { pt3dadd( 88.9076, -58.1896, 26.1556, 0.6 ) }
    dend_40 { pt3dadd( 100.887, -59.8199, 27.9804, 0.6 ) }
    dend_40 { pt3dadd( 112.953, -59.6496, 30.0261, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 11.1686, -33.0817, 8.05072, 1.8 ) }
    dend_19 { pt3dadd( 11.3558, -36.3796, 8.06703, 1.8 ) }
    dend_19 { pt3dadd( 11.662, -39.7437, 8.07957, 1.8 ) }
    dend_19 { pt3dadd( 11.9162, -41.708, 8.0851, 1.8 ) }
    dend_19 { pt3dadd( 12.0619, -42.6724, 8.06534, 1.8 ) }
    dend_19 { pt3dadd( 12.2884, -44.066, 8.01541, 1.8 ) }
    dend_19 { pt3dadd( 12.5129, -45.3476, 8.00611, 1.8 ) }
    dend_19 { pt3dadd( 12.7565, -46.3942, 8.02776, 1.8 ) }
    dend_19 { pt3dadd( 13.0958, -48.0892, 8.11464, 1.8 ) }
    dend_19 { pt3dadd( 13.2384, -49.2126, 8.18429, 1.8 ) }
    dend_19 { pt3dadd( 13.3777, -50.7954, 8.29424, 1.8 ) }
    dend_19 { pt3dadd( 13.5278, -53.7234, 8.37842, 1.8 ) }
    dend_19 { pt3dadd( 13.5745, -55.2231, 8.38327, 1.8 ) }
    dend_19 { pt3dadd( 13.6404, -58.2361, 8.33687, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 13.7292, -60.5563, 8.23723, 1.92 ) }
    dend_19 { pt3dadd( 13.7978, -61.5197, 8.16981, 1.92 ) }
    dend_19 { pt3dadd( 14.2197, -67.006, 7.62882, 2.16 ) }
    dend_19 { pt3dadd( 14.4086, -69.1795, 7.31544, 2.16 ) }
    dend_19 { pt3dadd( 14.5788, -70.6497, 7.07098, 2.16 ) }
    dend_19 { pt3dadd( 15.0426, -73.4983, 6.54233, 1.92 ) }
    dend_19 { pt3dadd( 15.4233, -75.2928, 6.1852, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.49253, 27.4981, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 2.76225, 29.9046, 12.8084, 1.8 ) }
    dend_1 { pt3dadd( 3.91797, 32.0951, 13.6965, 1.8 ) }
    dend_1 { pt3dadd( 5.12741, 34.3873, 14.6259, 1.8 ) }
    dend_1 { pt3dadd( 6.54983, 37.0833, 15.7189, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.933147 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.933147 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.933147 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -89.8102, 29.3536, -26.4373, 1.68 ) }
    dend_77 { pt3dadd( -90.0885, 29.3381, -26.4965, 1.68 ) }
    dend_77 { pt3dadd( -93.3791, 29.3149, -27.1177, 1.2 ) }
    dend_77 { pt3dadd( -95.9832, 29.4496, -27.552, 1.68 ) }
    dend_77 { pt3dadd( -97.1374, 29.5667, -27.7346, 1.68 ) }
    dend_77 { pt3dadd( -98.8275, 29.8474, -28.0041, 1.2 ) }
    dend_77 { pt3dadd( -101.792, 30.468, -28.5113, 1.2 ) }
    dend_77 { pt3dadd( -103.472, 30.9476, -28.8997, 0.84 ) }
    dend_77 { pt3dadd( -105.127, 31.6414, -29.4487, 1.32 ) }
    dend_77 { pt3dadd( -106.079, 32.1354, -29.8954, 1.32 ) }
    dend_77 { pt3dadd( -107.614, 33.0102, -30.7925, 0.84 ) }
    dend_77 { pt3dadd( -108.268, 33.4112, -31.2564, 0.84 ) }
    dend_77 { pt3dadd( -110.556, 34.9076, -33.1217, 0.84 ) }
    dend_77 { pt3dadd( -112.286, 36.0375, -34.6047, 0.84 ) }
    dend_77 { pt3dadd( -113.436, 36.8049, -35.5927, 0.84 ) }
    dend_77 { pt3dadd( -114.328, 37.3895, -36.2912, 0.84 ) }
    dend_77 { pt3dadd( -115.53, 38.1346, -37.1015, 0.84 ) }
    dend_77 { pt3dadd( -116.744, 38.8804, -37.7647, 0.84 ) }
    dend_77 { pt3dadd( -118.494, 40.0184, -38.493, 0.84 ) }
    dend_77 { pt3dadd( -119.707, 40.8335, -38.9044, 0.84 ) }
    dend_77 { pt3dadd( -121.387, 41.9946, -39.4113, 0.84 ) }
    dend_77 { pt3dadd( -123.484, 43.5304, -40.0426, 0.84 ) }
    dend_77 { pt3dadd( -124.586, 44.385, -40.3594, 0.84 ) }
    dend_77 { pt3dadd( -126.825, 46.172, -41.0344, 1.32 ) }
    dend_77 { pt3dadd( -128.398, 47.443, -41.5354, 1.32 ) }
    dend_77 { pt3dadd( -130.512, 49.2592, -42.2153, 0.96 ) }
    dend_77 { pt3dadd( -132.081, 50.7168, -42.7653, 0.96 ) }
    dend_77 { pt3dadd( -132.971, 51.5278, -43.0774, 0.96 ) }
    dend_77 { pt3dadd( -134.187, 52.5577, -43.5357, 0.96 ) }
    dend_77 { pt3dadd( -135.263, 53.3381, -43.9376, 0.96 ) }
    dend_77 { pt3dadd( -138.203, 55.2272, -44.9724, 0.72 ) }
    dend_77 { pt3dadd( -139.276, 55.8155, -45.3255, 0.72 ) }
    dend_77 { pt3dadd( -143.483, 57.744, -46.5745, 1.08 ) }
    dend_77 { pt3dadd( -144.694, 58.2295, -46.9111, 1.08 ) }
    dend_77 { pt3dadd( -148.586, 59.7697, -47.8054, 1.08 ) }
    dend_77 { pt3dadd( -150.6, 60.5763, -48.2624, 1.08 ) }
    dend_77 { pt3dadd( -152.844, 61.5775, -48.7453, 1.08 ) }
    dend_77 { pt3dadd( -154.811, 62.589, -49.1612, 1.08 ) }
    dend_77 { pt3dadd( -155.508, 63.0078, -49.3326, 1.08 ) }
    dend_77 { pt3dadd( -158.497, 65.0099, -50.1462, 1.08 ) }
    dend_77 { pt3dadd( -160.758, 66.6754, -50.8673, 1.08 ) }
    dend_77 { pt3dadd( -165.019, 69.8502, -52.357, 1.44 ) }
    dend_77 { pt3dadd( -166.15, 70.6725, -52.7785, 1.44 ) }
    dend_77 { pt3dadd( -168.897, 72.4293, -53.8122, 1.2 ) }
    dend_77 { pt3dadd( -170.01, 72.9986, -54.1557, 1.2 ) }
    dend_77 { pt3dadd( -171.567, 73.5964, -54.5317, 1.2 ) }
    dend_77 { pt3dadd( -176.018, 74.9511, -55.3026, 1.08 ) }
    dend_77 { pt3dadd( -178.785, 75.6576, -55.756, 1.08 ) }
    dend_77 { pt3dadd( -182.21, 76.5221, -56.2534, 1.08 ) }
    dend_77 { pt3dadd( -187.099, 77.7092, -56.9118, 0.72 ) }
    dend_77 { pt3dadd( -190.286, 78.4617, -57.3498, 0.72 ) }
    dend_77 { pt3dadd( -192.832, 79.0475, -57.6981, 1.08 ) }
    dend_77 { pt3dadd( -195.947, 79.6754, -58.1244, 0.84 ) }
    dend_77 { pt3dadd( -197.73, 79.9111, -58.4136, 0.84 ) }
    dend_77 { pt3dadd( -198.982, 79.9977, -58.6723, 0.84 ) }
    dend_77 { pt3dadd( -200.467, 80.0465, -59.0535, 0.84 ) }
    dend_77 { pt3dadd( -203.026, 79.9775, -59.675, 0.84 ) }
    dend_77 { pt3dadd( -206.686, 79.6234, -60.4037, 0.84 ) }
    dend_77 { pt3dadd( -212.255, 78.6839, -61.275, 0.6 ) }
    dend_77 { pt3dadd( -213.054, 78.5142, -61.405, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -89.8102, 29.3536, -26.4373, 1.32 ) }
    dend_76 { pt3dadd( -90.3371, 30.8724, -26.9214, 1.32 ) }
    dend_76 { pt3dadd( -91.074, 32.979, -27.6831, 0.84 ) }
    dend_76 { pt3dadd( -91.8984, 35.6041, -28.7368, 1.44 ) }
    dend_76 { pt3dadd( -93.125, 39.384, -30.5043, 1.08 ) }
    dend_76 { pt3dadd( -93.9499, 41.567, -31.6197, 1.08 ) }
    dend_76 { pt3dadd( -94.2709, 42.305, -32.0287, 1.08 ) }
    dend_76 { pt3dadd( -95.5174, 44.7821, -33.6325, 1.56 ) }
    dend_76 { pt3dadd( -96.9491, 47.0271, -35.3346, 0.96 ) }
    dend_76 { pt3dadd( -98.1221, 48.4344, -36.5533, 0.96 ) }
    dend_76 { pt3dadd( -99.5802, 49.5574, -37.6, 0.96 ) }
    dend_76 { pt3dadd( -100.752, 50.1371, -38.2136, 0.96 ) }
    dend_76 { pt3dadd( -101.87, 50.5165, -38.6921, 0.96 ) }
    dend_76 { pt3dadd( -102.975, 50.7314, -39.0647, 0.96 ) }
    dend_76 { pt3dadd( -104.555, 50.9845, -39.4907, 0.96 ) }
    dend_76 { pt3dadd( -107.914, 51.5709, -40.3448, 0.72 ) }
    dend_76 { pt3dadd( -110.851, 52.028, -41.1406, 0.72 ) }
    dend_76 { pt3dadd( -113.036, 52.3446, -41.7298, 0.72 ) }
    dend_76 { pt3dadd( -114.676, 52.5566, -42.1897, 0.72 ) }
    dend_76 { pt3dadd( -116.708, 52.8109, -42.7838, 0.72 ) }
    dend_76 { pt3dadd( -119.825, 53.2587, -43.7261, 0.72 ) }
    dend_76 { pt3dadd( -123.179, 53.8244, -44.7212, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 0.158129, 61.4101, 3.83568, 1.32 ) }
    dend_72 { pt3dadd( -0.268969, 62.2032, 4.13718, 1.32 ) }
    dend_72 { pt3dadd( -0.87103, 63.2233, 4.47839, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -1.69072, 64.6165, 4.9196, 1.08 ) }
    dend_72 { pt3dadd( -2.19703, 65.5145, 5.1862, 1.08 ) }
    dend_72 { pt3dadd( -2.48474, 66.0643, 5.33539, 1.08 ) }
    dend_72 { pt3dadd( -2.9005, 66.9146, 5.54666, 1.08 ) }
    dend_72 { pt3dadd( -3.36752, 67.8568, 5.71469, 1.08 ) }
    dend_72 { pt3dadd( -3.58722, 68.2945, 5.78019, 1.08 ) }
    dend_72 { pt3dadd( -3.84833, 68.8441, 5.83348, 1.08 ) }
    dend_72 { pt3dadd( -4.19852, 69.5445, 5.8962, 1.08 ) }
    dend_72 { pt3dadd( -4.46908, 70.0056, 5.94247, 1.08 ) }
    dend_72 { pt3dadd( -4.77896, 70.3898, 5.9877, 1.08 ) }
    dend_72 { pt3dadd( -5.16708, 70.7074, 6.03103, 1.08 ) }
    dend_72 { pt3dadd( -5.76158, 71.1142, 6.08453, 1.08 ) }
    dend_72 { pt3dadd( -6.51029, 71.6034, 6.16242, 1.08 ) }
    dend_72 { pt3dadd( -7.17105, 72.0522, 6.24126, 1.08 ) }
    dend_72 { pt3dadd( -7.87785, 72.61, 6.34033, 1.08 ) }
    dend_72 { pt3dadd( -8.51159, 73.3224, 6.34704, 0.96 ) }
    dend_72 { pt3dadd( -8.6993, 73.8372, 6.25081, 0.96 ) }
    dend_72 { pt3dadd( -8.75613, 74.6261, 6.01068, 0.96 ) }
    dend_72 { pt3dadd( -8.73086, 75.2713, 5.79502, 0.96 ) }
    dend_72 { pt3dadd( -8.67989, 75.8285, 5.6039, 0.96 ) }
    dend_72 { pt3dadd( -8.42885, 77.9551, 4.85971, 0.72 ) }
    dend_72 { pt3dadd( -8.33659, 78.8349, 4.53294, 0.72 ) }
    dend_72 { pt3dadd( -8.29882, 79.592, 4.24757, 0.72 ) }
    dend_72 { pt3dadd( -8.29262, 80.4031, 3.9649, 0.72 ) }
    dend_72 { pt3dadd( -8.33077, 81.7759, 3.57298, 0.72 ) }
    dend_72 { pt3dadd( -8.36801, 82.4592, 3.42879, 0.72 ) }
    dend_72 { pt3dadd( -8.43266, 83.1013, 3.36456, 0.72 ) }
    dend_72 { pt3dadd( -8.56084, 84.0266, 3.24005, 0.72 ) }
    dend_72 { pt3dadd( -8.76737, 85.4534, 3.02565, 0.72 ) }
    dend_72 { pt3dadd( -8.95735, 86.4742, 2.86701, 0.72 ) }
    dend_72 { pt3dadd( -9.1717, 87.3265, 2.73675, 0.72 ) }
    dend_72 { pt3dadd( -9.5904, 88.6359, 2.53967, 1.2 ) }
    dend_72 { pt3dadd( -10.4787, 90.6346, 2.25668, 1.08 ) }
    dend_72 { pt3dadd( -11.0534, 91.5148, 2.15372, 1.08 ) }
    dend_72 { pt3dadd( -11.6949, 92.2748, 2.08515, 1.08 ) }
    dend_72 { pt3dadd( -12.1822, 92.7976, 2.06332, 1.08 ) }
    dend_72 { pt3dadd( -12.6361, 93.259, 2.04484, 0.72 ) }
    dend_72 { pt3dadd( -13.9341, 94.5532, 1.97625, 1.2 ) }
    dend_72 { pt3dadd( -15.3268, 95.9301, 1.93535, 1.08 ) }
    dend_72 { pt3dadd( -16.4992, 97.1186, 1.90551, 1.44 ) }
    dend_72 { pt3dadd( -17.0749, 97.7921, 1.8916, 1.44 ) }
    dend_72 { pt3dadd( -17.9418, 99.0603, 1.86833, 1.2 ) }
    dend_72 { pt3dadd( -18.4167, 99.9612, 1.85692, 1.2 ) }
    dend_72 { pt3dadd( -18.915, 101.302, 1.86535, 1.08 ) }
    dend_72 { pt3dadd( -19.2865, 102.853, 1.91584, 1.08 ) }
    dend_72 { pt3dadd( -19.5658, 104.392, 2.02482, 0.96 ) }
    dend_72 { pt3dadd( -19.7949, 105.934, 2.18256, 0.96 ) }
    dend_72 { pt3dadd( -19.8876, 106.74, 2.30124, 1.2 ) }
    dend_72 { pt3dadd( -19.9682, 107.706, 2.39433, 0.72 ) }
    dend_72 { pt3dadd( -20.0156, 109.631, 2.43738, 1.2 ) }
    dend_72 { pt3dadd( -20.0141, 110.141, 2.4046, 1.2 ) }
    dend_72 { pt3dadd( -20.0599, 111.149, 2.27997, 1.2 ) }
    dend_72 { pt3dadd( -20.1888, 112.141, 2.09902, 1.2 ) }
    dend_72 { pt3dadd( -20.5814, 114.044, 1.63694, 1.2 ) }
    dend_72 { pt3dadd( -20.8543, 114.893, 1.36973, 1.2 ) }
    dend_72 { pt3dadd( -21.1134, 115.418, 1.17383, 1.2 ) }
    dend_72 { pt3dadd( -21.8751, 116.466, 0.813551, 0.96 ) }
    dend_72 { pt3dadd( -22.5105, 117.07, 0.669242, 1.2 ) }
    dend_72 { pt3dadd( -22.9308, 117.41, 0.632725, 1.2 ) }
    dend_72 { pt3dadd( -23.6457, 117.948, 0.635826, 1.2 ) }
    dend_72 { pt3dadd( -24.0933, 118.294, 0.63819, 1.2 ) }
    dend_72 { pt3dadd( -25.1926, 119.225, 0.645078, 1.2 ) }
    dend_72 { pt3dadd( -26.431, 120.48, 0.654058, 1.2 ) }
    dend_72 { pt3dadd( -27.0886, 121.273, 0.659007, 1.2 ) }
    dend_72 { pt3dadd( -27.5102, 121.84, 0.661903, 1.2 ) }
    dend_72 { pt3dadd( -27.9641, 122.544, 0.664873, 1.2 ) }
    dend_72 { pt3dadd( -28.3483, 123.225, 0.667209, 1.2 ) }
    dend_72 { pt3dadd( -28.9459, 124.54, 0.670495, 0.84 ) }
    dend_72 { pt3dadd( -29.4709, 125.871, 0.688955, 1.32 ) }
    dend_72 { pt3dadd( -30.21, 127.86, 0.735913, 0.84 ) }
    dend_72 { pt3dadd( -30.5747, 128.859, 0.768357, 0.84 ) }
    dend_72 { pt3dadd( -30.8608, 129.641, 0.800072, 0.84 ) }
    dend_72 { pt3dadd( -31.2449, 130.707, 0.850859, 0.84 ) }
    dend_72 { pt3dadd( -31.7119, 131.924, 0.944495, 0.84 ) }
    dend_72 { pt3dadd( -32.0136, 132.604, 1.01465, 0.84 ) }
    dend_72 { pt3dadd( -32.4788, 133.411, 1.0662, 0.84 ) }
    dend_72 { pt3dadd( -32.8216, 133.862, 1.07257, 0.84 ) }
    dend_72 { pt3dadd( -33.4795, 134.545, 1.04856, 1.2 ) }
    dend_72 { pt3dadd( -34.5518, 135.467, 0.942217, 0.84 ) }
    dend_72 { pt3dadd( -35.553, 136.213, 0.822734, 0.84 ) }
    dend_72 { pt3dadd( -36.7289, 136.975, 0.693475, 1.2 ) }
    dend_72 { pt3dadd( -37.6975, 137.427, 0.604588, 0.6 ) }
    dend_72 { pt3dadd( -38.8785, 137.914, 0.49186, 0.6 ) }
    dend_72 { pt3dadd( -40.1361, 138.342, 0.367157, 1.08 ) }
    dend_72 { pt3dadd( -41.5824, 138.731, 0.218077, 0.48 ) }
    dend_72 { pt3dadd( -42.4094, 138.895, 0.172231, 0.48 ) }
    dend_72 { pt3dadd( -44.8325, 139.241, 0.252464, 0.84 ) }
    dend_72 { pt3dadd( -48.6437, 145.469, 1.14253, 0.84 ) }
    dend_72 { pt3dadd( -52.3865, 151.796, 0.998047, 0.84 ) }
    dend_72 { pt3dadd( -55.2255, 158.55, 0.734408, 0.84 ) }
    dend_72 { pt3dadd( -58.2721, 165.116, -0.492759, 0.84 ) }
    dend_72 { pt3dadd( -61.1132, 171.779, -1.65592, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.158129, 61.4101, 3.83568, 1.32 ) }
    dend_71 { pt3dadd( -1.43962, 62.9825, 3.43567, 1.32 ) }
    dend_71 { pt3dadd( -1.98303, 63.5509, 3.25242, 1.32 ) }
    dend_71 { pt3dadd( -2.62597, 64.3045, 2.97897, 1.32 ) }
    dend_71 { pt3dadd( -3.24383, 65.1615, 2.6385, 1.32 ) }
    dend_71 { pt3dadd( -3.5863, 65.6842, 2.4258, 1.32 ) }
    dend_71 { pt3dadd( -4.06698, 66.5976, 2.07037, 1.32 ) }
    dend_71 { pt3dadd( -4.36559, 67.5465, 1.67895, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -4.53421, 68.6722, 1.23338, 1.56 ) }
    dend_71 { pt3dadd( -4.48864, 69.7915, 0.809535, 1.56 ) }
    dend_71 { pt3dadd( -4.39315, 70.1899, 0.682615, 1.56 ) }
    dend_71 { pt3dadd( -3.73569, 71.7648, 0.227671, 1.2 ) }
    dend_71 { pt3dadd( -3.41406, 72.2938, 0.0908728, 1.2 ) }
    dend_71 { pt3dadd( -2.82619, 73.0195, -0.10174, 1.2 ) }
    dend_71 { pt3dadd( -1.83524, 73.9912, -0.39975, 1.08 ) }
    dend_71 { pt3dadd( -1.07671, 74.6209, -0.625314, 1.08 ) }
    dend_71 { pt3dadd( -0.593731, 74.9786, -0.798689, 1.08 ) }
    dend_71 { pt3dadd( -0.131335, 75.3036, -1.01298, 1.08 ) }
    dend_71 { pt3dadd( 0.334114, 75.6789, -1.29533, 1.08 ) }
    dend_71 { pt3dadd( 1.1755, 76.4951, -1.96352, 1.8 ) }
    dend_71 { pt3dadd( 1.32882, 76.6994, -2.13833, 1.8 ) }
    dend_71 { pt3dadd( 1.87305, 77.8111, -3.0655, 1.32 ) }
    dend_71 { pt3dadd( 2.05471, 78.4604, -3.59157, 1.32 ) }
    dend_71 { pt3dadd( 2.08598, 79.2928, -4.24089, 1.08 ) }
    dend_71 { pt3dadd( 2.02097, 79.5325, -4.41277, 1.08 ) }
    dend_71 { pt3dadd( 1.68851, 80.1301, -4.77422, 1.08 ) }
    dend_71 { pt3dadd( 1.2604, 80.7595, -5.11442, 1.44 ) }
    dend_71 { pt3dadd( 0.900521, 81.2184, -5.34254, 1.44 ) }
    dend_71 { pt3dadd( 0.457645, 81.7732, -5.62462, 1.44 ) }
    dend_71 { pt3dadd( 0.081939, 82.2609, -5.90135, 1.44 ) }
    dend_71 { pt3dadd( -0.640812, 83.3422, -6.57091, 0.84 ) }
    dend_71 { pt3dadd( -0.99711, 83.9906, -6.98119, 0.84 ) }
    dend_71 { pt3dadd( -1.53972, 85.3348, -7.86494, 1.44 ) }
    dend_71 { pt3dadd( -1.76125, 86.1045, -8.28153, 1.44 ) }
    dend_71 { pt3dadd( -1.98562, 87.2632, -8.79502, 0.96 ) }
    dend_71 { pt3dadd( -2.17766, 88.455, -9.30863, 0.96 ) }
    dend_71 { pt3dadd( -2.27319, 89.0623, -9.55699, 0.96 ) }
    dend_71 { pt3dadd( -2.35415, 89.9646, -9.85225, 0.72 ) }
    dend_71 { pt3dadd( -2.2695, 92.3427, -10.3206, 1.2 ) }
    dend_71 { pt3dadd( -2.1487, 93.3705, -10.401, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -55.4451, 60.6976, 39.2482, 0.6 ) }
    dend_68 { pt3dadd( -62.0497, 68.8369, 43.0912, 0.6 ) }
    dend_68 { pt3dadd( -67.5896, 78.2739, 45.0186, 0.6 ) }
    dend_68 { pt3dadd( -71.7727, 87.9873, 48.384, 0.6 ) }
    dend_68 { pt3dadd( -77.4722, 96.6837, 52.3884, 0.6 ) }
    dend_68 { pt3dadd( -81.9693, 105.742, 57.0275, 0.6 ) }
    dend_68 { pt3dadd( -87.1954, 114.445, 61.6205, 0.6 ) }
    dend_68 { pt3dadd( -93.0155, 123.438, 64.6426, 0.6 ) }
    dend_68 { pt3dadd( -100.559, 131.355, 66.9335, 0.6 ) }
    dend_68 { pt3dadd( -107.865, 139.163, 70.1858, 0.6 ) }
    dend_68 { pt3dadd( -113.298, 147.729, 74.8078, 0.6 ) }
    dend_68 { pt3dadd( -119.424, 156.769, 76.9542, 0.6 ) }
    dend_68 { pt3dadd( -124.07, 166.444, 79.7847, 0.6 ) }
    dend_68 { pt3dadd( -129.202, 175.551, 83.592, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -55.4451, 60.6976, 39.2482, 0.84 ) }
    dend_67 { pt3dadd( -63.0328, 65.8459, 45.3902, 0.6 ) }
    dend_67 { pt3dadd( -69.9394, 72.8252, 50.3134, 0.6 ) }
    dend_67 { pt3dadd( -75.2015, 81.4623, 54.4384, 0.6 ) }
    dend_67 { pt3dadd( -79.9681, 90.6169, 57.9454, 0.6 ) }
    dend_67 { pt3dadd( -84.9394, 99.2882, 62.3472, 0.6 ) }
    dend_67 { pt3dadd( -92.2591, 106.185, 66.7694, 0.6 ) }
    dend_67 { pt3dadd( -99.5579, 113.714, 69.9773, 0.6 ) }
    dend_67 { pt3dadd( -106.512, 121.37, 73.6051, 0.6 ) }
    dend_67 { pt3dadd( -113.229, 129.468, 76.6206, 0.6 ) }
    dend_67 { pt3dadd( -119.488, 137.706, 80.1716, 0.6 ) }
    dend_67 { pt3dadd( -126.064, 146.349, 81.3424, 0.6 ) }
    dend_67 { pt3dadd( -131.894, 155.46, 82.7159, 0.6 ) }
    dend_67 { pt3dadd( -136.97, 165.038, 83.6719, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -1.44395, -144.265, -7.94685, 0.96 ) }
    dend_63 { pt3dadd( -3.27664, -144.034, -7.7296, 0.96 ) }
    dend_63 { pt3dadd( -4.67135, -143.859, -7.56427, 0.96 ) }
    dend_63 { pt3dadd( -5.66254, -143.734, -7.44677, 0.72 ) }
    dend_63 { pt3dadd( -6.3921, -143.642, -7.36029, 0.72 ) }
    dend_63 { pt3dadd( -7.01161, -143.564, -7.28685, 0.72 ) }
    dend_63 { pt3dadd( -8.06625, -143.431, -7.16182, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -1.44395, -144.265, -7.94685, 0.96 ) }
    dend_62 { pt3dadd( -2.54861, -148.661, -9.23081, 0.96 ) }
    dend_62 { pt3dadd( -3.03595, -150.221, -10.1044, 0.96 ) }
    dend_62 { pt3dadd( -3.50592, -152.003, -11.2385, 1.32 ) }
    dend_62 { pt3dadd( -3.97029, -154.319, -12.6503, 0.6 ) }
    dend_62 { pt3dadd( -4.15429, -155.68, -13.6066, 0.6 ) }
    dend_62 { pt3dadd( -4.28666, -157.29, -14.7503, 1.2 ) }
    dend_62 { pt3dadd( -4.48024, -162.392, -18.2958, 1.2 ) }
    dend_62 { pt3dadd( -4.5338, -164.107, -19.5325, 1.56 ) }
    dend_62 { pt3dadd( -4.54565, -166.554, -21.2957, 0.96 ) }
    dend_62 { pt3dadd( -4.36361, -170.969, -24.3254, 0.6 ) }
    dend_62 { pt3dadd( -4.21569, -172.979, -25.5343, 1.08 ) }
    dend_62 { pt3dadd( -4.08706, -174.835, -26.5767, 0.72 ) }
    dend_62 { pt3dadd( -4.08142, -175.808, -27.0279, 0.72 ) }
    dend_62 { pt3dadd( -4.19252, -177.163, -27.6539, 1.08 ) }
    dend_62 { pt3dadd( -4.40011, -178.65, -28.2973, 0.72 ) }
    dend_62 { pt3dadd( -4.72024, -180.37, -28.8892, 0.72 ) }
    dend_62 { pt3dadd( -5.7106, -184.894, -30.4457, 0.48 ) }
    dend_62 { pt3dadd( -6.10093, -186.533, -30.9917, 1.56 ) }
    dend_62 { pt3dadd( -6.86311, -189.404, -31.8485, 1.08 ) }
    dend_62 { pt3dadd( -7.2105, -190.549, -32.1394, 0.72 ) }
    dend_62 { pt3dadd( -7.92933, -192.77, -32.5883, 1.08 ) }
    dend_62 { pt3dadd( -8.62374, -194.847, -32.9652, 0.72 ) }
    dend_62 { pt3dadd( -8.96199, -195.931, -33.1026, 0.72 ) }
    dend_62 { pt3dadd( -9.74133, -198.56, -33.541, 1.2 ) }
    dend_62 { pt3dadd( -10.304, -200.636, -33.9647, 0.72 ) }
    dend_62 { pt3dadd( -10.5419, -201.575, -34.1791, 0.72 ) }
    dend_62 { pt3dadd( -11.0856, -204.371, -34.8579, 0.72 ) }
    dend_62 { pt3dadd( -11.2301, -205.977, -35.448, 1.08 ) }
    dend_62 { pt3dadd( -11.242, -207.362, -36.0152, 0.96 ) }
    dend_62 { pt3dadd( -11.1928, -208.393, -36.447, 0.96 ) }
    dend_62 { pt3dadd( -11.0869, -209.579, -36.9224, 0.96 ) }
    dend_62 { pt3dadd( -10.8311, -211.768, -37.7147, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -10.1587, -216.546, -39.21, 1.2 ) }
    dend_62 { pt3dadd( -9.61407, -219.864, -40.2361, 0.6 ) }
    dend_62 { pt3dadd( -9.16337, -222.07, -40.8857, 0.6 ) }
    dend_62 { pt3dadd( -8.85097, -223.313, -41.207, 0.6 ) }
    dend_62 { pt3dadd( -8.43368, -224.716, -41.4984, 0.6 ) }
    dend_62 { pt3dadd( -8.16233, -225.687, -41.6025, 0.6 ) }
    dend_62 { pt3dadd( -7.95979, -226.489, -41.6012, 0.6 ) }
    dend_62 { pt3dadd( -7.67672, -227.614, -41.6159, 0.6 ) }
    dend_62 { pt3dadd( -7.0693, -230.177, -41.7959, 0.6 ) }
    dend_62 { pt3dadd( -6.87881, -231.054, -41.8882, 0.6 ) }
    dend_62 { pt3dadd( -5.86558, -236.085, -42.5268, 0.96 ) }
    dend_62 { pt3dadd( -5.4133, -238.491, -42.8564, 0.48 ) }
    dend_62 { pt3dadd( -5.16182, -240.011, -43.0723, 0.48 ) }
    dend_62 { pt3dadd( -4.67794, -243.611, -43.5854, 0.72 ) }
    dend_62 { pt3dadd( -4.43245, -245.761, -43.8866, 0.48 ) }
    dend_62 { pt3dadd( -4.25012, -247.47, -44.0453, 1.2 ) }
    dend_62 { pt3dadd( -3.96598, -250.709, -44.202, 0.84 ) }
    dend_62 { pt3dadd( -3.85871, -252.677, -44.214, 1.32 ) }
    dend_62 { pt3dadd( -3.80869, -255.508, -44.1277, 0.84 ) }
    dend_62 { pt3dadd( -3.85091, -257.688, -43.9771, 1.44 ) }
    dend_62 { pt3dadd( -4.13936, -262.587, -43.528, 0.48 ) }
    dend_62 { pt3dadd( -4.35248, -265.112, -43.2573, 0.48 ) }
    dend_62 { pt3dadd( -4.79672, -268.388, -42.8674, 0.48 ) }
    dend_62 { pt3dadd( -5.17804, -270.34, -42.6232, 0.48 ) }
    dend_62 { pt3dadd( -5.6887, -272.145, -42.3862, 0.96 ) }
    dend_62 { pt3dadd( -7.28849, -276.096, -41.8917, 0.48 ) }
    dend_62 { pt3dadd( -7.65816, -276.84, -41.812, 0.84 ) }
    dend_62 { pt3dadd( -8.96901, -279.116, -41.5187, 0.6 ) }
    dend_62 { pt3dadd( -10.0006, -280.566, -41.2959, 0.84 ) }
    dend_62 { pt3dadd( -11.2698, -282.087, -41.0443, 0.6 ) }
    dend_62 { pt3dadd( -12.7901, -283.557, -40.8173, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 2.56832, -37.6766, 9.69314, 0.96 ) }
    dend_58 { pt3dadd( 2.17904, -38.4392, 9.86422, 0.96 ) }
    dend_58 { pt3dadd( 1.86153, -39.2542, 9.99894, 0.96 ) }
    dend_58 { pt3dadd( 1.77396, -39.567, 10.0868, 0.96 ) }
    dend_58 { pt3dadd( 1.62619, -40.1321, 10.3101, 0.96 ) }
    dend_58 { pt3dadd( 1.49077, -40.6434, 10.5563, 0.96 ) }
    dend_58 { pt3dadd( 1.33849, -41.2201, 10.8965, 0.96 ) }
    dend_58 { pt3dadd( 1.13901, -42.1239, 11.5059, 1.32 ) }
    dend_58 { pt3dadd( 0.894228, -43.2411, 12.3296, 0.84 ) }
    dend_58 { pt3dadd( 0.749521, -43.9775, 12.9012, 0.84 ) }
    dend_58 { pt3dadd( 0.668115, -44.4722, 13.308, 0.84 ) }
    dend_58 { pt3dadd( 0.500204, -45.5293, 14.2491, 1.32 ) }
    dend_58 { pt3dadd( 0.378017, -46.1456, 14.8599, 1.32 ) }
    dend_58 { pt3dadd( 0.234922, -46.695, 15.4577, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.56832, -37.6766, 9.69314, 1.44 ) }
    dend_43 { pt3dadd( 2.81795, -41.4513, 9.89476, 1.44 ) }
    dend_43 { pt3dadd( 2.98468, -44.1531, 10.0196, 1.44 ) }
    dend_43 { pt3dadd( 3.08639, -45.7701, 10.0824, 1.44 ) }
    dend_43 { pt3dadd( 3.27482, -49.1522, 10.1897, 1.8 ) }
    dend_43 { pt3dadd( 3.35336, -50.5618, 10.2345, 1.8 ) }
    dend_43 { pt3dadd( 3.43086, -51.9529, 10.2786, 1.8 ) }
    dend_43 { pt3dadd( 3.48637, -53.1136, 10.2792, 1.8 ) }
    dend_43 { pt3dadd( 3.57602, -55.4959, 10.2804, 1.56 ) }
    dend_43 { pt3dadd( 3.66654, -58.0353, 10.2836, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 15.4233, -75.2928, 6.1852, 1.56 ) }
    dend_37 { pt3dadd( 17.5165, -77.3926, 6.47272, 1.56 ) }
    dend_37 { pt3dadd( 18.777, -78.6789, 6.64476, 1.56 ) }
    dend_37 { pt3dadd( 20.3386, -80.2684, 6.85811, 1.2 ) }
    dend_37 { pt3dadd( 21.2801, -81.2238, 6.98687, 1.2 ) }
    dend_37 { pt3dadd( 22.6898, -82.6432, 7.18024, 1.56 ) }
    dend_37 { pt3dadd( 24.7098, -84.7173, 7.45528, 1.2 ) }
    dend_37 { pt3dadd( 25.6241, -85.6918, 7.57797, 1.8 ) }
    dend_37 { pt3dadd( 26.5903, -86.7362, 7.70685, 1.8 ) }
    dend_37 { pt3dadd( 28.4691, -88.8234, 7.97409, 1.08 ) }
    dend_37 { pt3dadd( 29.7914, -90.3283, 8.17207, 1.68 ) }
    dend_37 { pt3dadd( 31.3117, -92.1069, 8.38183, 1.32 ) }
    dend_37 { pt3dadd( 32.3013, -93.301, 8.50782, 1.32 ) }
    dend_37 { pt3dadd( 32.9105, -94.0475, 8.57991, 1.32 ) }
    dend_37 { pt3dadd( 34.3414, -95.8664, 8.73409, 1.08 ) }
    dend_37 { pt3dadd( 35.3334, -97.1907, 8.80444, 1.56 ) }
    dend_37 { pt3dadd( 36.8085, -99.2941, 8.90437, 1.2 ) }
    dend_37 { pt3dadd( 37.3244, -100.062, 8.93912, 1.2 ) }
    dend_37 { pt3dadd( 37.8113, -100.801, 8.98526, 1.2 ) }
    dend_37 { pt3dadd( 38.7593, -102.248, 9.09792, 1.68 ) }
    dend_37 { pt3dadd( 39.5414, -103.45, 9.24414, 1.2 ) }
    dend_37 { pt3dadd( 40.5251, -104.951, 9.50023, 0.96 ) }
    dend_37 { pt3dadd( 41.1671, -105.864, 9.70503, 0.96 ) }
    dend_37 { pt3dadd( 42.8683, -108.087, 10.2638, 0.84 ) }
    dend_37 { pt3dadd( 43.7317, -109.159, 10.561, 0.84 ) }
    dend_37 { pt3dadd( 45.0784, -110.737, 11.0465, 1.44 ) }
    dend_37 { pt3dadd( 45.791, -111.54, 11.3117, 1.44 ) }
    dend_37 { pt3dadd( 47.0884, -112.973, 11.7546, 1.44 ) }
    dend_37 { pt3dadd( 47.8395, -113.85, 12.0087, 0.96 ) }
    dend_37 { pt3dadd( 48.6597, -114.877, 12.2663, 1.44 ) }
    dend_37 { pt3dadd( 48.9516, -115.25, 12.3494, 1.44 ) }
    dend_37 { pt3dadd( 49.6983, -116.221, 12.5228, 1.44 ) }
    dend_37 { pt3dadd( 50.2739, -117.005, 12.6515, 1.44 ) }
    dend_37 { pt3dadd( 51.3306, -118.476, 12.8676, 1.08 ) }
    dend_37 { pt3dadd( 52.3033, -119.782, 13.0437, 1.08 ) }
    dend_37 { pt3dadd( 52.891, -120.503, 13.1361, 1.08 ) }
    dend_37 { pt3dadd( 54.0676, -121.826, 13.3105, 1.44 ) }
    dend_37 { pt3dadd( 54.6495, -122.435, 13.3999, 1.44 ) }
    dend_37 { pt3dadd( 56.1439, -123.997, 13.6489, 0.84 ) }
    dend_37 { pt3dadd( 57.1075, -125.027, 13.8165, 1.56 ) }
    dend_37 { pt3dadd( 58.7283, -126.834, 14.1078, 1.08 ) }
    dend_37 { pt3dadd( 59.5122, -127.728, 14.2513, 1.32 ) }
    dend_37 { pt3dadd( 61.8587, -130.184, 14.6862, 1.08 ) }
    dend_37 { pt3dadd( 63.0439, -131.338, 14.9201, 1.08 ) }
    dend_37 { pt3dadd( 64.0693, -132.274, 15.13, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 65.5816, -133.555, 15.4416, 1.08 ) }
    dend_37 { pt3dadd( 66.624, -134.395, 15.6184, 1.08 ) }
    dend_37 { pt3dadd( 69.7921, -136.841, 16.0366, 1.44 ) }
    dend_37 { pt3dadd( 71.9747, -138.472, 16.2402, 1.08 ) }
    dend_37 { pt3dadd( 73.3309, -139.492, 16.332, 1.08 ) }
    dend_37 { pt3dadd( 75.5049, -141.211, 16.454, 1.08 ) }
    dend_37 { pt3dadd( 77.9821, -143.207, 16.5524, 0.72 ) }
    dend_37 { pt3dadd( 79.8652, -144.815, 16.5781, 1.32 ) }
    dend_37 { pt3dadd( 81.1995, -146.112, 16.5234, 0.84 ) }
    dend_37 { pt3dadd( 82.0277, -146.967, 16.4431, 0.84 ) }
    dend_37 { pt3dadd( 83.4261, -148.584, 16.2587, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 15.4233, -75.2928, 6.1852, 1.68 ) }
    dend_20 { pt3dadd( 15.6021, -77.6146, 6.15094, 1.68 ) }
    dend_20 { pt3dadd( 15.815, -79.6635, 6.1341, 1.68 ) }
    dend_20 { pt3dadd( 15.9705, -80.8378, 6.13103, 1.68 ) }
    dend_20 { pt3dadd( 16.5172, -84.2235, 6.13913, 1.32 ) }
    dend_20 { pt3dadd( 16.9233, -86.4726, 6.14869, 1.56 ) }
    dend_20 { pt3dadd( 17.3935, -89.3778, 6.13888, 1.56 ) }
    dend_20 { pt3dadd( 17.5711, -90.472, 6.12711, 1.56 ) }
    dend_20 { pt3dadd( 17.7847, -92.1518, 6.0923, 1.56 ) }
    dend_20 { pt3dadd( 17.9669, -94.1757, 6.02892, 1.56 ) }
    dend_20 { pt3dadd( 18.152, -97.0483, 5.91546, 1.2 ) }
    dend_20 { pt3dadd( 18.3542, -101.089, 5.732, 1.56 ) }
    dend_20 { pt3dadd( 18.4694, -103.904, 5.61896, 1.2 ) }
    dend_20 { pt3dadd( 18.62, -107.443, 5.50572, 1.2 ) }
    dend_20 { pt3dadd( 18.7164, -109.493, 5.43305, 1.56 ) }
    dend_20 { pt3dadd( 18.8425, -111.855, 5.3241, 1.56 ) }
    dend_20 { pt3dadd( 18.9827, -113.758, 5.21259, 1.56 ) }
    dend_20 { pt3dadd( 19.2812, -116.691, 5.08415, 1.2 ) }
    dend_20 { pt3dadd( 19.5232, -119.241, 4.98665, 1.56 ) }
    dend_20 { pt3dadd( 19.7633, -122.139, 4.8838, 1.44 ) }
    dend_20 { pt3dadd( 19.8869, -124.171, 4.80895, 1.44 ) }
    dend_20 { pt3dadd( 19.9358, -125.632, 4.74978, 1.44 ) }
    dend_20 { pt3dadd( 20.0578, -130.553, 4.54944, 1.08 ) }
    dend_20 { pt3dadd( 20.1401, -133.198, 4.37903, 1.08 ) }
    dend_20 { pt3dadd( 20.2559, -135.568, 4.18207, 1.44 ) }
    dend_20 { pt3dadd( 20.3327, -136.624, 4.08422, 1.44 ) }
    dend_20 { pt3dadd( 20.486, -138.159, 3.91359, 1.44 ) }
    dend_20 { pt3dadd( 20.7715, -140.342, 3.58733, 1.44 ) }
    dend_20 { pt3dadd( 21.3312, -143.401, 2.91573, 1.32 ) }
    dend_20 { pt3dadd( 21.8278, -145.516, 2.42014, 1.32 ) }
    dend_20 { pt3dadd( 22.1198, -146.636, 2.14639, 1.32 ) }
    dend_20 { pt3dadd( 22.3447, -147.565, 1.92511, 1.32 ) }
    dend_20 { pt3dadd( 22.687, -149.204, 1.56268, 1.32 ) }
    dend_20 { pt3dadd( 22.8421, -150.184, 1.37713, 1.32 ) }
    dend_20 { pt3dadd( 23.005, -151.338, 1.20551, 1.32 ) }
    dend_20 { pt3dadd( 23.3419, -153.763, 0.832862, 1.8 ) }
    dend_20 { pt3dadd( 23.6469, -156.094, 0.454053, 1.8 ) }
    dend_20 { pt3dadd( 23.8903, -158.124, 0.181606, 1.8 ) }
    dend_20 { pt3dadd( 24.1018, -160.155, -0.0458929, 1.8 ) }
    dend_20 { pt3dadd( 24.3799, -163.464, -0.358593, 1.56 ) }
    dend_20 { pt3dadd( 24.5918, -166.828, -0.631917, 1.56 ) }
    dend_20 { pt3dadd( 24.6585, -168.444, -0.741315, 1.56 ) }
    dend_20 { pt3dadd( 24.7533, -171.893, -0.910195, 1.32 ) }
    dend_20 { pt3dadd( 24.7767, -173.513, -0.960869, 1.32 ) }
    dend_20 { pt3dadd( 24.7654, -176.422, -1.00013, 1.8 ) }
    dend_20 { pt3dadd( 24.6896, -178.976, -0.981722, 1.8 ) }
    dend_20 { pt3dadd( 24.6366, -181.594, -0.927108, 1.56 ) }
    dend_20 { pt3dadd( 24.6823, -184.058, -0.890047, 1.56 ) }
    dend_20 { pt3dadd( 24.7888, -185.713, -0.889996, 1.56 ) }
    dend_20 { pt3dadd( 24.91, -186.908, -0.881542, 1.56 ) }
    dend_20 { pt3dadd( 25.0531, -188.133, -0.886659, 1.56 ) }
    dend_20 { pt3dadd( 25.2621, -189.901, -0.928282, 1.56 ) }
    dend_20 { pt3dadd( 25.495, -192.076, -1.02699, 1.2 ) }
    dend_20 { pt3dadd( 25.6717, -194.16, -1.19127, 1.2 ) }
    dend_20 { pt3dadd( 25.766, -195.596, -1.33633, 1.2 ) }
    dend_20 { pt3dadd( 25.8785, -198.273, -1.67353, 1.56 ) }
    dend_20 { pt3dadd( 25.9587, -200.846, -2.0561, 1.56 ) }
    dend_20 { pt3dadd( 26.0072, -202.448, -2.31803, 1.56 ) }
    dend_20 { pt3dadd( 26.1135, -204.555, -2.66215, 1.56 ) }
    dend_20 { pt3dadd( 26.244, -206.558, -3.00045, 1.56 ) }
    dend_20 { pt3dadd( 26.5782, -210.503, -3.679, 1.56 ) }
    dend_20 { pt3dadd( 27.0758, -215.033, -4.47359, 1.32 ) }
    dend_20 { pt3dadd( 27.5306, -218.803, -5.16967, 1.32 ) }
    dend_20 { pt3dadd( 27.7786, -220.833, -5.54912, 0.84 ) }
    dend_20 { pt3dadd( 28.0312, -222.918, -5.93711, 1.32 ) }
    dend_20 { pt3dadd( 28.34, -225.394, -6.39902, 1.08 ) }
    dend_20 { pt3dadd( 28.675, -227.713, -6.8463, 1.44 ) }
    dend_20 { pt3dadd( 29.039, -230.157, -7.35982, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.54983, 37.0833, 15.7189, 1.2 ) }
    dend_11 { pt3dadd( 4.81633, 39.9406, 16.4987, 1.2 ) }
    dend_11 { pt3dadd( 4.16276, 41.2448, 16.9321, 1.2 ) }
    dend_11 { pt3dadd( 3.68146, 42.3817, 17.3497, 1.2 ) }
    dend_11 { pt3dadd( 2.93223, 44.7125, 18.3717, 1.2 ) }
    dend_11 { pt3dadd( 2.64029, 45.9678, 18.9581, 1.2 ) }
    dend_11 { pt3dadd( 2.45212, 47.1743, 19.5336, 1.08 ) }
    dend_11 { pt3dadd( 2.39767, 49.0964, 20.5306, 1.56 ) }
    dend_11 { pt3dadd( 2.44386, 50.389, 21.2068, 1.56 ) }
    dend_11 { pt3dadd( 2.71344, 53.2389, 22.6343, 1.2 ) }
    dend_11 { pt3dadd( 2.97725, 55.0737, 23.4737, 0.96 ) }
    dend_11 { pt3dadd( 3.25241, 57.083, 24.2777, 1.32 ) }
    dend_11 { pt3dadd( 3.33666, 57.9996, 24.6152, 1.32 ) }
    dend_11 { pt3dadd( 3.37973, 59.021, 24.9457, 1.32 ) }
    dend_11 { pt3dadd( 3.40045, 60.5435, 25.3519, 1.32 ) }
    dend_11 { pt3dadd( 3.39165, 61.3975, 25.5423, 1.32 ) }
    dend_11 { pt3dadd( 3.39593, 63.0637, 25.9206, 1.2 ) }
    dend_11 { pt3dadd( 3.45663, 64.7963, 26.3667, 1.56 ) }
    dend_11 { pt3dadd( 3.51547, 65.9535, 26.6833, 1.2 ) }
    dend_11 { pt3dadd( 3.65051, 67.7357, 27.2119, 1.68 ) }
    dend_11 { pt3dadd( 3.95217, 70.1543, 27.9866, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 4.13989, 71.122, 28.3152, 1.44 ) }
    dend_11 { pt3dadd( 4.64036, 72.7265, 28.8726, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.54983, 37.0833, 15.7189, 1.44 ) }
    dend_2 { pt3dadd( 6.51601, 40.0355, 15.4101, 1.44 ) }
    dend_2 { pt3dadd( 6.50051, 41.3891, 15.2685, 1.44 ) }
    dend_2 { pt3dadd( 6.48259, 42.9539, 15.1049, 1.44 ) }
    dend_2 { pt3dadd( 6.46196, 44.7548, 14.9165, 1.44 ) }
    dend_2 { pt3dadd( 6.43699, 46.9352, 14.6885, 1.8 ) }
    dend_2 { pt3dadd( 6.41586, 48.7797, 14.4955, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 0.234922, -46.695, 15.4577, 0.96 ) }
    dend_60 { pt3dadd( -0.9457, -50.8572, 17.2692, 0.96 ) }
    dend_60 { pt3dadd( -1.80103, -53.3904, 18.3632, 0.96 ) }
    dend_60 { pt3dadd( -2.37014, -55.0307, 19.0187, 0.96 ) }
    dend_60 { pt3dadd( -2.81162, -56.2734, 19.5114, 0.96 ) }
    dend_60 { pt3dadd( -3.32323, -57.685, 20.0537, 0.96 ) }
    dend_60 { pt3dadd( -4.19967, -60.2544, 20.9641, 0.6 ) }
    dend_60 { pt3dadd( -4.52125, -61.0327, 21.2469, 0.6 ) }
    dend_60 { pt3dadd( -5.08898, -62.4167, 21.7905, 1.08 ) }
    dend_60 { pt3dadd( -6.24099, -65.302, 23.0436, 0.72 ) }
    dend_60 { pt3dadd( -7.09728, -67.4642, 24.0391, 0.72 ) }
    dend_60 { pt3dadd( -8.44467, -70.7896, 25.6251, 0.72 ) }
    dend_60 { pt3dadd( -9.81841, -73.9417, 27.2066, 1.2 ) }
    dend_60 { pt3dadd( -10.6391, -75.6314, 28.1122, 1.08 ) }
    dend_60 { pt3dadd( -11.7454, -77.6045, 29.2676, 0.48 ) }
    dend_60 { pt3dadd( -13.1714, -79.8632, 30.6498, 0.48 ) }
    dend_60 { pt3dadd( -14.8674, -82.3209, 32.196, 1.44 ) }
    dend_60 { pt3dadd( -16.2264, -84.1632, 33.3345, 0.84 ) }
    dend_60 { pt3dadd( -16.9665, -85.2227, 33.9044, 1.08 ) }
    dend_60 { pt3dadd( -18.1292, -86.9511, 34.7331, 1.08 ) }
    dend_60 { pt3dadd( -19.6564, -89.3935, 35.767, 1.44 ) }
    dend_60 { pt3dadd( -20.7115, -91.2356, 36.4968, 0.84 ) }
    dend_60 { pt3dadd( -21.389, -92.6163, 37.0317, 1.32 ) }
    dend_60 { pt3dadd( -22.3573, -94.9813, 37.8934, 0.72 ) }
    dend_60 { pt3dadd( -22.809, -96.1629, 38.3323, 0.72 ) }
    dend_60 { pt3dadd( -23.2104, -97.2135, 38.775, 0.72 ) }
    dend_60 { pt3dadd( -23.9338, -98.6872, 39.6203, 0.72 ) }
    dend_60 { pt3dadd( -25.0571, -100.158, 40.9038, 1.08 ) }
    dend_60 { pt3dadd( -26.1366, -101.301, 42.137, 0.6 ) }
    dend_60 { pt3dadd( -27.5233, -102.387, 43.6916, 1.08 ) }
    dend_60 { pt3dadd( -28.5833, -103.023, 44.866, 0.96 ) }
    dend_60 { pt3dadd( -30.3964, -103.766, 46.8088, 0.84 ) }
    dend_60 { pt3dadd( -32.315, -104.132, 48.7355, 0.84 ) }
    dend_60 { pt3dadd( -37.6466, -114.612, 52.8104, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 0.234922, -46.695, 15.4577, 0.84 ) }
    dend_59 { pt3dadd( -0.150601, -48.0348, 16.6927, 0.84 ) }
    dend_59 { pt3dadd( -0.440007, -48.9918, 17.5547, 0.84 ) }
    dend_59 { pt3dadd( -0.577713, -49.4506, 17.9367, 0.84 ) }
    dend_59 { pt3dadd( -1.05793, -51.2075, 19.2826, 0.48 ) }
    dend_59 { pt3dadd( -1.31401, -52.1867, 19.9809, 0.48 ) }
    dend_59 { pt3dadd( -1.76015, -53.8901, 21.1005, 0.84 ) }
    dend_59 { pt3dadd( -2.05149, -54.9737, 21.7177, 0.84 ) }
    dend_59 { pt3dadd( -2.35792, -56.0052, 22.2458, 0.84 ) }
    dend_59 { pt3dadd( -3.06434, -58.3214, 23.2985, 0.84 ) }
    dend_59 { pt3dadd( -3.33401, -59.2032, 23.6406, 0.84 ) }
    dend_59 { pt3dadd( -3.7928, -60.7996, 24.1819, 0.6 ) }
    dend_59 { pt3dadd( -4.10178, -61.8174, 24.5036, 1.08 ) }
    dend_59 { pt3dadd( -4.56928, -63.15, 24.9524, 1.08 ) }
    dend_59 { pt3dadd( -4.9472, -64.1061, 25.3066, 1.56 ) }
    dend_59 { pt3dadd( -5.46216, -65.23, 25.7531, 1.56 ) }
    dend_59 { pt3dadd( -5.87972, -66.1084, 26.1262, 1.08 ) }
    dend_59 { pt3dadd( -6.64235, -67.6702, 26.8397, 0.72 ) }
    dend_59 { pt3dadd( -7.13898, -68.6623, 27.3207, 1.32 ) }
    dend_59 { pt3dadd( -7.57348, -69.4951, 27.7529, 1.32 ) }
    dend_59 { pt3dadd( -8.22134, -70.6396, 28.3976, 0.72 ) }
    dend_59 { pt3dadd( -8.93153, -71.8114, 29.0847, 0.72 ) }
    dend_59 { pt3dadd( -12.5561, -78.8052, 33.7919, 0.72 ) }
    dend_59 { pt3dadd( -15.2179, -86.3956, 38.1704, 0.72 ) }
    dend_59 { pt3dadd( -17.7879, -93.4991, 43.3832, 0.72 ) }
    dend_59 { pt3dadd( -20.3854, -100.609, 48.5729, 0.72 ) }
    dend_59 { pt3dadd( -21.7865, -108.029, 53.7809, 0.72 ) }
    dend_59 { pt3dadd( -21.4789, -115.636, 58.9062, 0.72 ) }
    dend_59 { pt3dadd( -21.8352, -123.899, 62.8124, 0.72 ) }
    dend_59 { pt3dadd( -22.6703, -132.755, 64.8201, 0.72 ) }
    dend_59 { pt3dadd( -22.8953, -141.557, 67.2166, 0.72 ) }
    dend_59 { pt3dadd( -24.1359, -150.252, 69.6785, 0.72 ) }
    dend_59 { pt3dadd( -27.5052, -158.479, 71.7546, 0.72 ) }
    dend_59 { pt3dadd( -31.2129, -166.587, 73.7279, 0.72 ) }
    dend_59 { pt3dadd( -33.4215, -175.233, 75.6027, 0.72 ) }
    dend_59 { pt3dadd( -34.4977, -183.992, 77.9042, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 3.66654, -58.0353, 10.2836, 1.08 ) }
    dend_57 { pt3dadd( 5.38976, -58.675, 7.04134, 1.08 ) }
    dend_57 { pt3dadd( 6.64488, -59.2912, 4.87462, 1.08 ) }
    dend_57 { pt3dadd( 7.00083, -59.5254, 4.27057, 1.08 ) }
    dend_57 { pt3dadd( 7.28665, -59.787, 3.7167, 1.08 ) }
    dend_57 { pt3dadd( 7.44868, -59.9658, 3.39009, 1.08 ) }
    dend_57 { pt3dadd( 8.06858, -60.7724, 2.05929, 1.44 ) }
    dend_57 { pt3dadd( 8.42901, -61.4569, 1.13891, 1.44 ) }
    dend_57 { pt3dadd( 8.71421, -62.2631, 0.169049, 1.44 ) }
    dend_57 { pt3dadd( 9.06528, -63.5667, -1.31296, 1.44 ) }
    dend_57 { pt3dadd( 9.16425, -64.0751, -1.8421, 1.44 ) }
    dend_57 { pt3dadd( 9.34569, -65.4318, -3.09196, 1.2 ) }
    dend_57 { pt3dadd( 9.49641, -67.6258, -4.86858, 1.2 ) }
    dend_57 { pt3dadd( 9.57385, -69.1254, -6.01432, 1.68 ) }
    dend_57 { pt3dadd( 9.63617, -70.7455, -7.25597, 0.72 ) }
    dend_57 { pt3dadd( 9.65308, -71.9657, -8.16367, 0.72 ) }
    dend_57 { pt3dadd( 9.6159, -73.306, -9.25676, 1.44 ) }
    dend_57 { pt3dadd( 9.53834, -74.261, -10.1159, 1.44 ) }
    dend_57 { pt3dadd( 9.3219, -75.9931, -12.0966, 0.96 ) }
    dend_57 { pt3dadd( 9.10442, -77.5106, -14.5512, 1.68 ) }
    dend_57 { pt3dadd( 9.02572, -77.9847, -15.547, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( 8.88233, -78.9409, -18.0173, 1.68 ) }
    dend_57 { pt3dadd( 8.79409, -79.6229, -20.0136, 1.68 ) }
    dend_57 { pt3dadd( 8.67729, -80.6763, -23.195, 1.68 ) }
    dend_57 { pt3dadd( 8.53914, -81.8554, -26.6271, 1.68 ) }
    dend_57 { pt3dadd( 8.426, -82.7588, -29.1299, 1.2 ) }
    dend_57 { pt3dadd( 8.30851, -83.755, -31.6344, 0.84 ) }
    dend_57 { pt3dadd( 8.2591, -84.244, -32.6593, 1.44 ) }
    dend_57 { pt3dadd( 8.21078, -84.76, -33.552, 0.72 ) }
    dend_57 { pt3dadd( 8.06861, -86.0574, -35.4326, 1.32 ) }
    dend_57 { pt3dadd( 7.82449, -88.2375, -38.1664, 0.6 ) }
    dend_57 { pt3dadd( 7.77072, -88.7839, -38.8048, 0.6 ) }
    dend_57 { pt3dadd( 7.68342, -89.5313, -39.6375, 0.96 ) }
    dend_57 { pt3dadd( 7.60951, -90.1577, -40.366, 0.96 ) }
    dend_57 { pt3dadd( 7.37252, -92.6166, -43.4228, 0.6 ) }
    dend_57 { pt3dadd( 7.35143, -93.5162, -44.5204, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 3.66654, -58.0353, 10.2836, 1.32 ) }
    dend_44 { pt3dadd( 3.68373, -58.1572, 10.2647, 1.32 ) }
    dend_44 { pt3dadd( 4.217, -61.3553, 9.80526, 1.32 ) }
    dend_44 { pt3dadd( 4.90205, -65.072, 9.32043, 1.68 ) }
    dend_44 { pt3dadd( 5.34531, -67.4388, 9.04595, 2.04 ) }
    dend_44 { pt3dadd( 5.72827, -69.5373, 8.82475, 1.68 ) }
    dend_44 { pt3dadd( 6.03649, -71.2704, 8.65969, 1.68 ) }
    dend_44 { pt3dadd( 6.22246, -72.3188, 8.58188, 1.68 ) }
    dend_44 { pt3dadd( 6.46976, -73.7204, 8.51375, 1.68 ) }
    dend_44 { pt3dadd( 6.80371, -75.8528, 8.44948, 2.04 ) }
    dend_44 { pt3dadd( 6.95666, -77.0814, 8.4497, 1.68 ) }
    dend_44 { pt3dadd( 7.10117, -78.6828, 8.47524, 1.68 ) }
    dend_44 { pt3dadd( 7.23076, -80.4072, 8.54187, 1.68 ) }
    dend_44 { pt3dadd( 7.38688, -82.3629, 8.64896, 1.56 ) }
    dend_44 { pt3dadd( 7.55286, -84.1727, 8.76639, 1.56 ) }
    dend_44 { pt3dadd( 7.93945, -87.8059, 9.02668, 1.56 ) }
    dend_44 { pt3dadd( 8.29082, -90.7622, 9.25157, 1.8 ) }
    dend_44 { pt3dadd( 8.90386, -95.4858, 9.62246, 1.56 ) }
    dend_44 { pt3dadd( 9.54237, -100.212, 9.9795, 1.44 ) }
    dend_44 { pt3dadd( 9.81408, -102.222, 10.1211, 1.92 ) }
    dend_44 { pt3dadd( 10.1346, -104.658, 10.2693, 1.8 ) }
    dend_44 { pt3dadd( 10.3546, -106.537, 10.3563, 1.68 ) }
    dend_44 { pt3dadd( 10.567, -108.884, 10.4363, 2.04 ) }
    dend_44 { pt3dadd( 11.1604, -118.496, 10.4565, 1.8 ) }
    dend_44 { pt3dadd( 11.2603, -121.43, 10.3853, 1.8 ) }
    dend_44 { pt3dadd( 11.2891, -123.022, 10.3188, 1.68 ) }
    dend_44 { pt3dadd( 11.2921, -124.525, 10.231, 1.68 ) }
    dend_44 { pt3dadd( 11.2429, -128.688, 9.91986, 1.68 ) }
    dend_44 { pt3dadd( 11.192, -130.954, 9.64989, 1.68 ) }
    dend_44 { pt3dadd( 11.1447, -132.853, 9.33647, 1.68 ) }
    dend_44 { pt3dadd( 11.1044, -135.353, 8.90757, 1.32 ) }
    dend_44 { pt3dadd( 11.0897, -138.35, 8.40294, 1.32 ) }
    dend_44 { pt3dadd( 11.1063, -141.475, 7.89539, 1.32 ) }
    dend_44 { pt3dadd( 11.2026, -146.456, 7.13217, 1.32 ) }
    dend_44 { pt3dadd( 11.2953, -149.828, 6.67197, 1.8 ) }
    dend_44 { pt3dadd( 11.3532, -152.077, 6.39831, 1.8 ) }
    dend_44 { pt3dadd( 11.3962, -153.885, 6.21202, 1.8 ) }
    dend_44 { pt3dadd( 11.4349, -155.476, 6.09286, 1.8 ) }
    dend_44 { pt3dadd( 11.4923, -158.432, 5.99355, 1.68 ) }
    dend_44 { pt3dadd( 11.5839, -162.679, 5.93879, 2.04 ) }
    dend_44 { pt3dadd( 11.7097, -166.025, 5.8475, 2.04 ) }
    dend_44 { pt3dadd( 11.8343, -168.77, 5.75678, 1.8 ) }
    dend_44 { pt3dadd( 12.0279, -172.257, 5.63228, 1.56 ) }
    dend_44 { pt3dadd( 12.2585, -175.794, 5.50267, 1.92 ) }
    dend_44 { pt3dadd( 12.5254, -180.285, 5.32033, 1.56 ) }
    dend_44 { pt3dadd( 12.71, -183.78, 5.14821, 1.32 ) }
    dend_44 { pt3dadd( 12.9015, -187.726, 4.89449, 1.32 ) }
    dend_44 { pt3dadd( 12.9746, -189.6, 4.775, 1.32 ) }
    dend_44 { pt3dadd( 13.0353, -191.238, 4.68002, 1.2 ) }
    dend_44 { pt3dadd( 13.1274, -195.032, 4.50112, 1.68 ) }
    dend_44 { pt3dadd( 13.1533, -198.54, 4.49927, 1.68 ) }
    dend_44 { pt3dadd( 13.1203, -200.797, 4.51759, 1.68 ) }
    dend_44 { pt3dadd( 13.0826, -202.718, 4.52379, 1.68 ) }
    dend_44 { pt3dadd( 13.015, -204.858, 4.53477, 1.68 ) }
    dend_44 { pt3dadd( 13.0002, -205.767, 4.54896, 1.68 ) }
    dend_44 { pt3dadd( 13.2706, -211.579, 4.80591, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 83.4261, -148.584, 16.2587, 0.84 ) }
    dend_39 { pt3dadd( 85.7947, -148.143, 17.4118, 0.84 ) }
    dend_39 { pt3dadd( 87.6446, -147.765, 18.3875, 0.84 ) }
    dend_39 { pt3dadd( 89.0806, -147.469, 19.1985, 1.32 ) }
    dend_39 { pt3dadd( 91.4241, -147.004, 20.6326, 1.32 ) }
    dend_39 { pt3dadd( 93.2574, -146.65, 21.8355, 1.68 ) }
    dend_39 { pt3dadd( 95.5317, -146.154, 23.3948, 1.2 ) }
    dend_39 { pt3dadd( 96.7072, -145.894, 24.3054, 0.96 ) }
    dend_39 { pt3dadd( 98.2066, -145.477, 25.61, 1.44 ) }
    dend_39 { pt3dadd( 99.9708, -144.84, 27.2917, 0.84 ) }
    dend_39 { pt3dadd( 100.779, -144.439, 28.1758, 0.84 ) }
    dend_39 { pt3dadd( 101.534, -143.928, 29.1824, 0.84 ) }
    dend_39 { pt3dadd( 101.985, -143.449, 30.024, 0.84 ) }
    dend_39 { pt3dadd( 102.454, -142.767, 31.089, 0.84 ) }
    dend_39 { pt3dadd( 102.791, -141.99, 32.1514, 0.84 ) }
    dend_39 { pt3dadd( 103.055, -140.915, 33.4574, 1.08 ) }
    dend_39 { pt3dadd( 103.293, -139.637, 34.9903, 0.72 ) }
    dend_39 { pt3dadd( 103.561, -138.066, 37.0668, 1.2 ) }
    dend_39 { pt3dadd( 111.691, -134.641, 41.9002, 1.2 ) }
    dend_39 { pt3dadd( 119.722, -130.021, 45.7588, 1.2 ) }
    dend_39 { pt3dadd( 127.593, -124.466, 48.4869, 1.2 ) }
    dend_39 { pt3dadd( 133.757, -117.718, 52.4836, 1.2 ) }
    dend_39 { pt3dadd( 141.008, -112.187, 56.616, 1.2 ) }
    dend_39 { pt3dadd( 147.573, -105.834, 60.6525, 1.2 ) }
    dend_39 { pt3dadd( 154.919, -99.4128, 62.7827, 1.2 ) }
    dend_39 { pt3dadd( 161.905, -92.8184, 65.4891, 1.2 ) }
    dend_39 { pt3dadd( 167.852, -85.4768, 68.618, 1.2 ) }
    dend_39 { pt3dadd( 173.367, -77.4046, 70.3234, 1.2 ) }
    dend_39 { pt3dadd( 177.83, -69.005, 73.0989, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 181.001, -59.844, 74.9651, 1.2 ) }
    dend_39 { pt3dadd( 184.162, -50.7018, 76.94, 1.2 ) }
    dend_39 { pt3dadd( 187.436, -41.5161, 78.4723, 1.2 ) }
    dend_39 { pt3dadd( 192.007, -33.2003, 81.3373, 1.2 ) }
    dend_39 { pt3dadd( 196.474, -24.7028, 83.7719, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 83.4261, -148.584, 16.2587, 0.84 ) }
    dend_38 { pt3dadd( 84.7986, -151.125, 16.8629, 0.84 ) }
    dend_38 { pt3dadd( 86.2889, -153.773, 17.4735, 0.6 ) }
    dend_38 { pt3dadd( 87.2578, -155.516, 17.8483, 1.32 ) }
    dend_38 { pt3dadd( 88.7814, -158.256, 18.4377, 0.84 ) }
    dend_38 { pt3dadd( 89.7668, -160.028, 18.8189, 0.72 ) }
    dend_38 { pt3dadd( 90.5514, -161.44, 19.1225, 1.08 ) }
    dend_38 { pt3dadd( 91.5334, -163.288, 19.4898, 0.72 ) }
    dend_38 { pt3dadd( 92.4457, -165.047, 19.9211, 1.2 ) }
    dend_38 { pt3dadd( 98.8946, -174.376, 21.4762, 1.2 ) }
    dend_38 { pt3dadd( 105.711, -183.022, 24.7002, 1.2 ) }
    dend_38 { pt3dadd( 112.262, -190.877, 29.9566, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 29.039, -230.157, -7.35982, 0.96 ) }
    dend_36 { pt3dadd( 30.567, -232.434, -5.47993, 0.96 ) }
    dend_36 { pt3dadd( 31.4054, -233.941, -4.29412, 0.96 ) }
    dend_36 { pt3dadd( 32.8824, -236.852, -2.02884, 1.44 ) }
    dend_36 { pt3dadd( 33.9604, -238.961, -0.290305, 0.96 ) }
    dend_36 { pt3dadd( 34.8005, -240.621, 1.07704, 0.96 ) }
    dend_36 { pt3dadd( 35.4866, -242.018, 2.19798, 0.96 ) }
    dend_36 { pt3dadd( 36.0642, -243.296, 3.18358, 0.96 ) }
    dend_36 { pt3dadd( 36.6989, -244.929, 4.45166, 1.08 ) }
    dend_36 { pt3dadd( 37.4496, -247.177, 6.08758, 1.08 ) }
    dend_36 { pt3dadd( 37.8248, -248.301, 6.87345, 1.08 ) }
    dend_36 { pt3dadd( 38.1948, -249.266, 7.5307, 1.08 ) }
    dend_36 { pt3dadd( 39.0404, -251.613, 9.19624, 1.08 ) }
    dend_36 { pt3dadd( 39.7084, -253.968, 10.8396, 0.84 ) }
    dend_36 { pt3dadd( 40.0032, -255.933, 12.1191, 1.2 ) }
    dend_36 { pt3dadd( 40.021, -257.489, 13.0201, 1.2 ) }
    dend_36 { pt3dadd( 39.9423, -258.775, 13.7401, 1.2 ) }
    dend_36 { pt3dadd( 39.6082, -261.925, 15.5004, 0.96 ) }
    dend_36 { pt3dadd( 39.366, -263.583, 16.4044, 0.96 ) }
    dend_36 { pt3dadd( 39.2063, -265.116, 17.2465, 0.96 ) }
    dend_36 { pt3dadd( 39.052, -267.074, 18.2872, 0.72 ) }
    dend_36 { pt3dadd( 38.9551, -268.297, 18.8836, 0.72 ) }
    dend_36 { pt3dadd( 38.9093, -270.056, 19.7217, 0.72 ) }
    dend_36 { pt3dadd( 39.1724, -272.257, 20.7202, 1.2 ) }
    dend_36 { pt3dadd( 39.8628, -275.501, 22.4134, 0.84 ) }
    dend_36 { pt3dadd( 40.249, -276.848, 23.1978, 0.84 ) }
    dend_36 { pt3dadd( 40.6667, -278.271, 24.0987, 0.84 ) }
    dend_36 { pt3dadd( 42.7358, -286.567, 29.6343, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 29.039, -230.157, -7.35982, 1.32 ) }
    dend_21 { pt3dadd( 29.7691, -234.129, -7.20738, 1.32 ) }
    dend_21 { pt3dadd( 30.1666, -236.59, -7.16961, 1.32 ) }
    dend_21 { pt3dadd( 30.5024, -238.987, -7.17045, 1.32 ) }
    dend_21 { pt3dadd( 30.7015, -240.774, -7.19899, 1.32 ) }
    dend_21 { pt3dadd( 31.1443, -244.577, -7.27015, 1.68 ) }
    dend_21 { pt3dadd( 31.5728, -247.75, -7.31937, 1.68 ) }
    dend_21 { pt3dadd( 31.9302, -250.066, -7.44544, 1.68 ) }
    dend_21 { pt3dadd( 32.2881, -252.247, -7.58426, 1.68 ) }
    dend_21 { pt3dadd( 32.9059, -255.917, -7.84645, 1.2 ) }
    dend_21 { pt3dadd( 33.3252, -258.331, -8.03782, 1.2 ) }
    dend_21 { pt3dadd( 34.0225, -261.973, -8.33372, 1.2 ) }
    dend_21 { pt3dadd( 34.9213, -266.108, -8.7089, 1.56 ) }
    dend_21 { pt3dadd( 35.4132, -268.183, -8.90848, 1.56 ) }
    dend_21 { pt3dadd( 35.8583, -269.971, -9.08704, 1.56 ) }
    dend_21 { pt3dadd( 36.3575, -271.851, -9.27432, 1.56 ) }
    dend_21 { pt3dadd( 37.1269, -275.124, -9.47163, 1.44 ) }
    dend_21 { pt3dadd( 37.8779, -278.444, -9.6319, 1.44 ) }
    dend_21 { pt3dadd( 38.2296, -279.952, -9.64861, 1.44 ) }
    dend_21 { pt3dadd( 38.667, -281.785, -9.64748, 1.44 ) }
    dend_21 { pt3dadd( 39.1882, -283.892, -9.59848, 1.44 ) }
    dend_21 { pt3dadd( 40.0802, -287.314, -9.36832, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.64036, 72.7265, 28.8726, 1.44 ) }
    dend_17 { pt3dadd( 3.5304, 71.4339, 28.9656, 1.44 ) }
    dend_17 { pt3dadd( 3.09464, 70.9906, 29.0267, 1.2 ) }
    dend_17 { pt3dadd( 2.15629, 70.2142, 29.1579, 0.96 ) }
    dend_17 { pt3dadd( 1.31193, 69.5157, 29.2759, 0.96 ) }
    dend_17 { pt3dadd( 0.730085, 69.0343, 29.3573, 0.96 ) }
    dend_17 { pt3dadd( 0.11084, 68.5219, 29.4439, 0.96 ) }
    dend_17 { pt3dadd( -0.512684, 67.9466, 29.4547, 0.96 ) }
    dend_17 { pt3dadd( -1.69722, 66.9647, 29.5166, 1.2 ) }
    dend_17 { pt3dadd( -7.82996, 61.5714, 28.8741, 1.2 ) }
    dend_17 { pt3dadd( -13.3436, 55.5438, 28.9196, 1.2 ) }
    dend_17 { pt3dadd( -18.8664, 49.5806, 28.0754, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.64036, 72.7265, 28.8726, 0.96 ) }
    dend_12 { pt3dadd( 5.40779, 71.4774, 29.0881, 0.96 ) }
    dend_12 { pt3dadd( 6.29077, 70.0402, 29.3361, 0.96 ) }
    dend_12 { pt3dadd( 6.94751, 68.9713, 29.5205, 1.2 ) }
    dend_12 { pt3dadd( 7.3111, 68.3795, 29.6226, 1.2 ) }
    dend_12 { pt3dadd( 8.51109, 66.4263, 29.9595, 0.84 ) }
    dend_12 { pt3dadd( 9.049, 65.5508, 30.1106, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.41586, 48.7797, 14.4955, 1.44 ) }
    dend_8 { pt3dadd( 7.333, 51.1756, 14.9321, 1.44 ) }
    dend_8 { pt3dadd( 8.03035, 53.0574, 15.2514, 1.44 ) }
    dend_8 { pt3dadd( 8.38308, 54.0432, 15.4169, 1.44 ) }
    dend_8 { pt3dadd( 9.17054, 56.3348, 15.8409, 1.44 ) }
    dend_8 { pt3dadd( 10.1191, 59.0472, 16.404, 1.32 ) }
    dend_8 { pt3dadd( 10.7203, 60.6023, 16.6788, 1.32 ) }
    dend_8 { pt3dadd( 11.4928, 62.3113, 16.9183, 1.32 ) }
    dend_8 { pt3dadd( 12.1965, 63.6909, 17.0849, 1.56 ) }
    dend_8 { pt3dadd( 12.9517, 65.0019, 17.2062, 1.56 ) }
    dend_8 { pt3dadd( 14.0531, 66.6897, 17.3153, 1.32 ) }
    dend_8 { pt3dadd( 16.1089, 69.4821, 17.4663, 1.32 ) }
    dend_8 { pt3dadd( 17.4274, 71.0904, 17.5417, 1.32 ) }
    dend_8 { pt3dadd( 18.5797, 72.3847, 17.5183, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 19.8718, 73.7678, 17.4117, 1.56 ) }
    dend_8 { pt3dadd( 20.6008, 74.5633, 17.2996, 1.56 ) }
    dend_8 { pt3dadd( 22.37, 76.5451, 16.9404, 1.2 ) }
    dend_8 { pt3dadd( 23.3095, 77.6219, 16.7514, 1.2 ) }
    dend_8 { pt3dadd( 25.1448, 79.769, 16.3305, 1.44 ) }
    dend_8 { pt3dadd( 26.114, 80.9448, 16.0558, 1.92 ) }
    dend_8 { pt3dadd( 27.9762, 83.3915, 15.5777, 1.56 ) }
    dend_8 { pt3dadd( 29.1303, 85.018, 15.3185, 1.32 ) }
    dend_8 { pt3dadd( 30.7922, 87.5718, 14.991, 1.32 ) }
    dend_8 { pt3dadd( 32.1037, 89.7361, 14.851, 1.32 ) }
    dend_8 { pt3dadd( 33.3842, 91.9992, 14.8748, 1.56 ) }
    dend_8 { pt3dadd( 35.0461, 95.2972, 15.0693, 1.2 ) }
    dend_8 { pt3dadd( 35.5469, 96.4672, 15.2087, 1.2 ) }
    dend_8 { pt3dadd( 35.8115, 97.302, 15.3409, 1.2 ) }
    dend_8 { pt3dadd( 36.0424, 98.428, 15.5728, 0.96 ) }
    dend_8 { pt3dadd( 36.1384, 99.1552, 15.751, 1.32 ) }
    dend_8 { pt3dadd( 36.2996, 101.293, 16.313, 0.96 ) }
    dend_8 { pt3dadd( 36.3393, 102.344, 16.5184, 0.96 ) }
    dend_8 { pt3dadd( 36.3771, 103.41, 16.6989, 0.96 ) }
    dend_8 { pt3dadd( 36.5227, 105.431, 17.0492, 1.32 ) }
    dend_8 { pt3dadd( 36.6403, 106.416, 17.2252, 1.32 ) }
    dend_8 { pt3dadd( 36.9229, 107.904, 17.5408, 0.84 ) }
    dend_8 { pt3dadd( 37.3499, 109.433, 17.9397, 1.08 ) }
    dend_8 { pt3dadd( 37.8705, 110.92, 18.4337, 1.08 ) }
    dend_8 { pt3dadd( 38.7202, 113.026, 19.2403, 0.84 ) }
    dend_8 { pt3dadd( 39.1597, 114.048, 19.5934, 1.2 ) }
    dend_8 { pt3dadd( 39.6841, 115.178, 20.0205, 0.84 ) }
    dend_8 { pt3dadd( 40.2976, 116.384, 20.5241, 1.2 ) }
    dend_8 { pt3dadd( 41.2627, 118.198, 21.3442, 0.96 ) }
    dend_8 { pt3dadd( 41.5819, 118.826, 21.6292, 0.96 ) }
    dend_8 { pt3dadd( 42.8048, 121.788, 22.6988, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.41586, 48.7797, 14.4955, 1.08 ) }
    dend_3 { pt3dadd( 8.35158, 51.444, 14.56, 1.08 ) }
    dend_3 { pt3dadd( 10.6599, 54.7582, 14.6223, 1.08 ) }
    dend_3 { pt3dadd( 11.3569, 55.7791, 14.6382, 1.08 ) }
    dend_3 { pt3dadd( 12.0237, 56.7764, 14.5983, 1.08 ) }
    dend_3 { pt3dadd( 13.2073, 58.5466, 14.5275, 1.32 ) }
    dend_3 { pt3dadd( 14.9658, 61.1764, 14.4223, 0.96 ) }
    dend_3 { pt3dadd( 16.0747, 62.8197, 14.3058, 1.44 ) }
    dend_3 { pt3dadd( 16.8258, 63.9581, 14.1974, 1.44 ) }
    dend_3 { pt3dadd( 18.3192, 66.3133, 13.9326, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 13.2706, -211.579, 4.80591, 1.08 ) }
    dend_52 { pt3dadd( 12.9599, -213.157, 5.20135, 1.08 ) }
    dend_52 { pt3dadd( 12.7461, -214.195, 5.46417, 1.08 ) }
    dend_52 { pt3dadd( 12.4042, -215.677, 5.81694, 1.08 ) }
    dend_52 { pt3dadd( 12.1861, -216.586, 6.02859, 1.08 ) }
    dend_52 { pt3dadd( 11.9116, -217.644, 6.26961, 1.08 ) }
    dend_52 { pt3dadd( 11.7047, -218.37, 6.44277, 1.08 ) }
    dend_52 { pt3dadd( 11.5584, -218.829, 6.54482, 1.08 ) }
    dend_52 { pt3dadd( 11.2955, -219.507, 6.67763, 1.08 ) }
    dend_52 { pt3dadd( 10.7834, -220.682, 6.84078, 0.84 ) }
    dend_52 { pt3dadd( 10.4972, -221.283, 6.90741, 0.84 ) }
    dend_52 { pt3dadd( 10.0671, -222.136, 6.96085, 1.32 ) }
    dend_52 { pt3dadd( 9.4587, -223.294, 6.98189, 1.32 ) }
    dend_52 { pt3dadd( 8.60146, -224.929, 6.96975, 0.96 ) }
    dend_52 { pt3dadd( 8.0412, -226.046, 6.93198, 0.96 ) }
    dend_52 { pt3dadd( 7.65892, -226.863, 6.90509, 1.2 ) }
    dend_52 { pt3dadd( 6.99017, -228.47, 6.87208, 1.2 ) }
    dend_52 { pt3dadd( 6.58977, -229.567, 6.87323, 1.44 ) }
    dend_52 { pt3dadd( 6.17113, -230.871, 6.92081, 1.2 ) }
    dend_52 { pt3dadd( 5.81008, -232.243, 7.0092, 1.2 ) }
    dend_52 { pt3dadd( 5.37867, -234.062, 7.15751, 1.2 ) }
    dend_52 { pt3dadd( 5.23996, -234.72, 7.21876, 1.2 ) }
    dend_52 { pt3dadd( 5.08381, -235.789, 7.37735, 1.2 ) }
    dend_52 { pt3dadd( 5.03141, -236.388, 7.4974, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.2706, -211.579, 4.80591, 0.96 ) }
    dend_45 { pt3dadd( 14.3682, -215.23, 3.77236, 0.96 ) }
    dend_45 { pt3dadd( 15.037, -217.559, 3.12452, 1.32 ) }
    dend_45 { pt3dadd( 15.2067, -218.5, 2.94523, 1.32 ) }
    dend_45 { pt3dadd( 15.4172, -219.668, 2.72285, 1.32 ) }
    dend_45 { pt3dadd( 15.8901, -222.291, 2.22316, 1.56 ) }
    dend_45 { pt3dadd( 16.2409, -224.237, 1.8525, 1.56 ) }
    dend_45 { pt3dadd( 16.461, -225.677, 1.60307, 1.56 ) }
    dend_45 { pt3dadd( 16.8628, -229.666, 1.31208, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 40.0802, -287.314, -9.36832, 0.96 ) }
    dend_35 { pt3dadd( 39.5782, -289.284, -9.00011, 0.96 ) }
    dend_35 { pt3dadd( 39.1196, -291.052, -8.74081, 0.96 ) }
    dend_35 { pt3dadd( 38.6118, -292.815, -8.51586, 1.44 ) }
    dend_35 { pt3dadd( 37.4301, -296.724, -7.99962, 1.08 ) }
    dend_35 { pt3dadd( 36.8998, -298.544, -7.76603, 1.08 ) }
    dend_35 { pt3dadd( 36.1771, -301.319, -7.40485, 1.08 ) }
    dend_35 { pt3dadd( 35.8963, -302.624, -7.19723, 1.08 ) }
    dend_35 { pt3dadd( 35.3115, -305.993, -6.62671, 0.84 ) }
    dend_35 { pt3dadd( 34.9706, -308.758, -6.17707, 0.84 ) }
    dend_35 { pt3dadd( 34.8702, -310.502, -5.95185, 0.84 ) }
    dend_35 { pt3dadd( 34.8434, -312.464, -5.67263, 0.84 ) }
    dend_35 { pt3dadd( 34.8857, -314.298, -5.40552, 0.84 ) }
    dend_35 { pt3dadd( 34.9423, -315.798, -5.23445, 0.84 ) }
    dend_35 { pt3dadd( 34.995, -316.855, -5.195, 0.84 ) }
    dend_35 { pt3dadd( 35.0383, -318.064, -5.21323, 0.84 ) }
    dend_35 { pt3dadd( 34.9715, -319.672, -5.31187, 0.84 ) }
    dend_35 { pt3dadd( 34.7556, -321.071, -5.50973, 0.84 ) }
    dend_35 { pt3dadd( 34.4562, -322.251, -5.77856, 0.84 ) }
    dend_35 { pt3dadd( 33.7579, -324.308, -6.3345, 0.6 ) }
    dend_35 { pt3dadd( 31.3691, -334.954, -8.06818, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 40.0802, -287.314, -9.36832, 0.84 ) }
    dend_22 { pt3dadd( 40.2857, -288.967, -9.51762, 0.84 ) }
    dend_22 { pt3dadd( 40.4315, -290.151, -9.6546, 0.84 ) }
    dend_22 { pt3dadd( 40.5907, -291.409, -9.84378, 0.84 ) }
    dend_22 { pt3dadd( 40.8888, -294.004, -10.3089, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 40.9479, -294.608, -10.4319, 1.2 ) }
    dend_22 { pt3dadd( 41.1795, -297.297, -11.0256, 0.96 ) }
    dend_22 { pt3dadd( 41.3549, -299.551, -11.5937, 1.32 ) }
    dend_22 { pt3dadd( 41.5961, -302.412, -12.3167, 1.08 ) }
    dend_22 { pt3dadd( 41.7738, -304.022, -12.7177, 1.08 ) }
    dend_22 { pt3dadd( 41.9282, -305.208, -13.0015, 1.08 ) }
    dend_22 { pt3dadd( 42.0862, -306.093, -13.1824, 1.08 ) }
    dend_22 { pt3dadd( 42.2154, -306.7, -13.2825, 1.08 ) }
    dend_22 { pt3dadd( 42.7729, -309.081, -13.6094, 0.84 ) }
    dend_22 { pt3dadd( 43.5794, -312.166, -13.9312, 1.2 ) }
    dend_22 { pt3dadd( 43.8309, -313.036, -14.0003, 1.2 ) }
    dend_22 { pt3dadd( 45.2157, -317.548, -14.2835, 0.84 ) }
    dend_22 { pt3dadd( 46.0022, -320.091, -14.4292, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 9.049, 65.5508, 30.1106, 0.72 ) }
    dend_14 { pt3dadd( 8.55396, 64.5484, 29.8722, 0.72 ) }
    dend_14 { pt3dadd( 8.127, 63.6837, 29.6666, 0.48 ) }
    dend_14 { pt3dadd( 7.61231, 62.6415, 29.4187, 0.96 ) }
    dend_14 { pt3dadd( 7.24742, 61.9025, 29.243, 0.96 ) }
    dend_14 { pt3dadd( 3.51013, 55.013, 26.7472, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.049, 65.5508, 30.1106, 0.72 ) }
    dend_13 { pt3dadd( 9.45213, 64.172, 30.2395, 0.72 ) }
    dend_13 { pt3dadd( 9.65878, 63.2014, 30.3446, 1.08 ) }
    dend_13 { pt3dadd( 9.96892, 61.5294, 30.4554, 0.72 ) }
    dend_13 { pt3dadd( 10.1111, 60.3218, 30.4516, 0.72 ) }
    dend_13 { pt3dadd( 10.2115, 58.6025, 30.328, 0.72 ) }
    dend_13 { pt3dadd( 10.301, 57.1925, 30.1786, 1.2 ) }
    dend_13 { pt3dadd( 10.2943, 56.524, 30.1003, 1.2 ) }
    dend_13 { pt3dadd( 10.1981, 55.0737, 29.9053, 0.84 ) }
    dend_13 { pt3dadd( 10.0069, 53.2768, 29.6033, 0.84 ) }
    dend_13 { pt3dadd( 9.87367, 51.818, 29.1921, 1.32 ) }
    dend_13 { pt3dadd( 9.79903, 50.8757, 28.7889, 1.08 ) }
    dend_13 { pt3dadd( 9.15225, 41.7723, 27.6603, 1.08 ) }
    dend_13 { pt3dadd( 7.95174, 32.6934, 26.8107, 1.08 ) }
    dend_13 { pt3dadd( 6.50684, 23.9065, 24.4522, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 42.8048, 121.788, 22.6988, 0.6 ) }
    dend_10 { pt3dadd( 43.4401, 122.739, 23.0749, 0.6 ) }
    dend_10 { pt3dadd( 44.0889, 123.711, 23.459, 0.6 ) }
    dend_10 { pt3dadd( 44.931, 124.972, 23.9575, 0.6 ) }
    dend_10 { pt3dadd( 46.2913, 127.009, 24.7627, 0.6 ) }
    dend_10 { pt3dadd( 47.1736, 128.33, 25.285, 0.6 ) }
    dend_10 { pt3dadd( 48.0713, 129.674, 25.8164, 0.48 ) }
    dend_10 { pt3dadd( 52.1604, 138.886, 27.2437, 0.48 ) }
    dend_10 { pt3dadd( 56.9205, 147.88, 27.7772, 0.48 ) }
    dend_10 { pt3dadd( 61.9867, 156.423, 30.1434, 0.48 ) }
    dend_10 { pt3dadd( 68.8192, 163.988, 31.216, 0.48 ) }
    dend_10 { pt3dadd( 75.4351, 171.802, 31.3742, 0.48 ) }
    dend_10 { pt3dadd( 82.554, 179.093, 32.5717, 0.48 ) }
    dend_10 { pt3dadd( 87.9516, 187.753, 32.4699, 0.48 ) }
    dend_10 { pt3dadd( 91.372, 197.139, 30.5567, 0.48 ) }
    dend_10 { pt3dadd( 93.5476, 207.024, 29.8288, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 42.8048, 121.788, 22.6988, 0.84 ) }
    dend_9 { pt3dadd( 44.3124, 124.565, 22.5713, 0.84 ) }
    dend_9 { pt3dadd( 45.1632, 126.132, 22.4993, 0.84 ) }
    dend_9 { pt3dadd( 46.07, 127.802, 22.4226, 0.36 ) }
    dend_9 { pt3dadd( 46.9317, 129.389, 22.3497, 0.6 ) }
    dend_9 { pt3dadd( 47.6281, 130.672, 22.2907, 0.6 ) }
    dend_9 { pt3dadd( 48.8677, 132.955, 22.1859, 0.6 ) }
    dend_9 { pt3dadd( 54.6702, 142.278, 20.2542, 0.6 ) }
    dend_9 { pt3dadd( 59.924, 151.695, 17.4305, 0.6 ) }
    dend_9 { pt3dadd( 66.4832, 160.218, 14.3647, 0.6 ) }
    dend_9 { pt3dadd( 72.4618, 169.056, 11.0571, 0.6 ) }
    dend_9 { pt3dadd( 76.4312, 178.385, 6.41653, 0.6 ) }
    dend_9 { pt3dadd( 80.2719, 188.58, 4.23344, 0.6 ) }
    dend_9 { pt3dadd( 85.0943, 198.541, 3.13396, 0.6 ) }
    dend_9 { pt3dadd( 89.5652, 208.678, 2.25438, 0.6 ) }
    dend_9 { pt3dadd( 92.2885, 219.144, -0.237356, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 18.3192, 66.3133, 13.9326, 1.08 ) }
    dend_5 { pt3dadd( 17.5261, 68.2415, 14.3082, 1.08 ) }
    dend_5 { pt3dadd( 17.015, 69.162, 14.5765, 1.08 ) }
    dend_5 { pt3dadd( 16.2719, 70.5004, 14.9665, 1.08 ) }
    dend_5 { pt3dadd( 15.4468, 71.9864, 15.3996, 0.96 ) }
    dend_5 { pt3dadd( 14.2511, 74.14, 16.0272, 0.96 ) }
    dend_5 { pt3dadd( 13.2627, 75.9202, 16.546, 0.84 ) }
    dend_5 { pt3dadd( 11.8303, 78.0479, 17.3857, 1.08 ) }
    dend_5 { pt3dadd( 5.48342, 86.9936, 18.5877, 1.08 ) }
    dend_5 { pt3dadd( 0.432687, 96.6311, 20.2291, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 18.3192, 66.3133, 13.9326, 0.96 ) }
    dend_4 { pt3dadd( 20.2462, 67.5596, 13.3205, 0.96 ) }
    dend_4 { pt3dadd( 21.1199, 68.1071, 13.0002, 0.96 ) }
    dend_4 { pt3dadd( 22.4964, 69.0042, 12.4558, 0.96 ) }
    dend_4 { pt3dadd( 24.1237, 70.1281, 11.6591, 0.84 ) }
    dend_4 { pt3dadd( 24.9774, 70.7312, 11.2075, 0.84 ) }
    dend_4 { pt3dadd( 26.3389, 71.6917, 10.4516, 0.84 ) }
    dend_4 { pt3dadd( 26.9702, 72.1051, 10.0601, 0.84 ) }
    dend_4 { pt3dadd( 27.9911, 72.7387, 9.40751, 0.84 ) }
    dend_4 { pt3dadd( 30.0943, 73.8858, 8.13716, 1.2 ) }
    dend_4 { pt3dadd( 30.4979, 74.0692, 7.93663, 1.2 ) }
    dend_4 { pt3dadd( 31.5968, 74.4697, 7.50388, 1.2 ) }
    dend_4 { pt3dadd( 33.3017, 74.9258, 7.03028, 1.2 ) }
    dend_4 { pt3dadd( 33.8478, 75.0304, 6.92883, 1.2 ) }
    dend_4 { pt3dadd( 35.9937, 75.3419, 6.63497, 1.2 ) }
    dend_4 { pt3dadd( 37.6934, 75.567, 6.46775, 0.96 ) }
    dend_4 { pt3dadd( 39.3778, 75.8216, 6.30438, 0.96 ) }
    dend_4 { pt3dadd( 41.3002, 76.0823, 6.13126, 0.96 ) }
    dend_4 { pt3dadd( 43.2077, 76.3348, 5.96046, 1.32 ) }
    dend_4 { pt3dadd( 46.0841, 76.7417, 5.6938, 0.84 ) }
    dend_4 { pt3dadd( 48.5746, 77.1157, 5.4487, 1.2 ) }
    dend_4 { pt3dadd( 50.3185, 77.4071, 5.35232, 1.2 ) }
    dend_4 { pt3dadd( 52.0086, 77.7476, 5.34247, 0.96 ) }
    dend_4 { pt3dadd( 53.4268, 78.0902, 5.4353, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 54.4828, 78.3642, 5.59224, 1.2 ) }
    dend_4 { pt3dadd( 55.1781, 78.5542, 5.75107, 1.2 ) }
    dend_4 { pt3dadd( 58.7197, 79.6485, 6.77681, 1.2 ) }
    dend_4 { pt3dadd( 60.131, 80.1687, 7.22307, 1.2 ) }
    dend_4 { pt3dadd( 61.3168, 80.6981, 7.61128, 1.2 ) }
    dend_4 { pt3dadd( 63.6114, 81.7317, 8.36094, 1.08 ) }
    dend_4 { pt3dadd( 64.6499, 82.1587, 8.67323, 1.44 ) }
    dend_4 { pt3dadd( 66.6288, 82.8304, 9.03761, 1.08 ) }
    dend_4 { pt3dadd( 68.1559, 83.253, 9.07317, 1.08 ) }
    dend_4 { pt3dadd( 69.3206, 83.5708, 8.99237, 1.08 ) }
    dend_4 { pt3dadd( 71.2857, 84.1741, 8.70972, 1.08 ) }
    dend_4 { pt3dadd( 73.4577, 84.8704, 8.2563, 1.44 ) }
    dend_4 { pt3dadd( 76.8279, 85.9604, 7.36632, 1.08 ) }
    dend_4 { pt3dadd( 79.0276, 86.748, 6.67188, 0.84 ) }
    dend_4 { pt3dadd( 80.6817, 87.4468, 6.11946, 1.2 ) }
    dend_4 { pt3dadd( 82.3456, 88.2181, 5.54172, 1.2 ) }
    dend_4 { pt3dadd( 84.1973, 89.2061, 4.81226, 0.84 ) }
    dend_4 { pt3dadd( 85.5499, 89.9975, 4.26416, 1.08 ) }
    dend_4 { pt3dadd( 88.455, 91.689, 3.1784, 0.72 ) }
    dend_4 { pt3dadd( 91.3284, 93.239, 2.0787, 0.72 ) }
    dend_4 { pt3dadd( 93.1578, 94.0673, 1.38347, 1.2 ) }
    dend_4 { pt3dadd( 95.8558, 95.1653, 0.372792, 0.72 ) }
    dend_4 { pt3dadd( 96.807, 95.5286, 0.0393655, 0.72 ) }
    dend_4 { pt3dadd( 98.7984, 96.2271, -0.585524, 0.96 ) }
    dend_4 { pt3dadd( 100.9, 96.8954, -1.18219, 0.96 ) }
    dend_4 { pt3dadd( 104.62, 98.1951, -2.08665, 0.72 ) }
    dend_4 { pt3dadd( 106.532, 99.021, -2.47361, 0.6 ) }
    dend_4 { pt3dadd( 108.072, 99.7802, -2.71938, 0.6 ) }
    dend_4 { pt3dadd( 110.05, 100.931, -3.02796, 1.2 ) }
    dend_4 { pt3dadd( 110.638, 101.337, -3.11259, 1.2 ) }
    dend_4 { pt3dadd( 113.039, 103.149, -3.37346, 0.72 ) }
    dend_4 { pt3dadd( 114.161, 104.103, -3.47762, 0.72 ) }
    dend_4 { pt3dadd( 114.945, 104.753, -3.5473, 0.72 ) }
    dend_4 { pt3dadd( 116.819, 106.376, -3.7871, 0.6 ) }
    dend_4 { pt3dadd( 117.127, 106.641, -3.83264, 0.6 ) }
    dend_4 { pt3dadd( 118.679, 107.957, -4.16737, 0.96 ) }
    dend_4 { pt3dadd( 119.721, 108.866, -4.51058, 0.72 ) }
    dend_4 { pt3dadd( 120.4, 109.493, -4.7855, 0.96 ) }
    dend_4 { pt3dadd( 123.02, 112.059, -5.99536, 0.72 ) }
    dend_4 { pt3dadd( 124.53, 113.599, -6.76047, 0.72 ) }
    dend_4 { pt3dadd( 126.535, 115.623, -7.8645, 1.2 ) }
    dend_4 { pt3dadd( 128.656, 117.679, -8.98116, 0.72 ) }
    dend_4 { pt3dadd( 130.113, 118.987, -9.6683, 0.72 ) }
    dend_4 { pt3dadd( 131.925, 120.481, -10.4388, 0.72 ) }
    dend_4 { pt3dadd( 132.636, 120.999, -10.6813, 0.72 ) }
    dend_4 { pt3dadd( 134.845, 122.513, -11.2234, 1.08 ) }
    dend_4 { pt3dadd( 137.397, 124.107, -11.5042, 0.72 ) }
    dend_4 { pt3dadd( 139.237, 125.188, -11.5448, 1.08 ) }
    dend_4 { pt3dadd( 139.716, 125.471, -11.5299, 1.08 ) }
    dend_4 { pt3dadd( 141.733, 126.608, -11.449, 0.72 ) }
    dend_4 { pt3dadd( 142.923, 127.289, -11.4303, 0.72 ) }
    dend_4 { pt3dadd( 145.152, 128.62, -11.4801, 1.08 ) }
    dend_4 { pt3dadd( 146.033, 129.133, -11.5709, 1.08 ) }
    dend_4 { pt3dadd( 147.774, 130.102, -11.804, 0.84 ) }
    dend_4 { pt3dadd( 150.987, 131.805, -12.2784, 0.84 ) }
    dend_4 { pt3dadd( 153.71, 133.151, -12.6554, 0.6 ) }
    dend_4 { pt3dadd( 155.831, 134.066, -12.8646, 1.08 ) }
    dend_4 { pt3dadd( 156.85, 134.445, -12.913, 1.08 ) }
    dend_4 { pt3dadd( 159.523, 135.379, -12.8658, 0.72 ) }
    dend_4 { pt3dadd( 160.855, 135.829, -12.7481, 0.72 ) }
    dend_4 { pt3dadd( 163.645, 136.8, -12.2189, 1.08 ) }
    dend_4 { pt3dadd( 166.079, 137.631, -11.5792, 0.84 ) }
    dend_4 { pt3dadd( 167.358, 138.088, -11.1941, 1.08 ) }
    dend_4 { pt3dadd( 169.274, 138.833, -10.5988, 0.84 ) }
    dend_4 { pt3dadd( 170.258, 139.221, -10.3051, 0.84 ) }
    dend_4 { pt3dadd( 172.793, 140.198, -9.65753, 0.6 ) }
    dend_4 { pt3dadd( 174.044, 140.624, -9.40817, 0.6 ) }
    dend_4 { pt3dadd( 175.964, 141.207, -9.11742, 0.96 ) }
    dend_4 { pt3dadd( 176.766, 141.373, -9.02744, 0.96 ) }
    dend_4 { pt3dadd( 179.189, 141.6, -8.80902, 0.72 ) }
    dend_4 { pt3dadd( 181.096, 141.656, -8.64997, 0.72 ) }
    dend_4 { pt3dadd( 182.649, 141.636, -8.60079, 0.72 ) }
    dend_4 { pt3dadd( 183.038, 141.643, -8.60745, 0.72 ) }
    dend_4 { pt3dadd( 184.451, 141.761, -8.75178, 0.72 ) }
    dend_4 { pt3dadd( 186.746, 142.097, -9.24715, 0.72 ) }
    dend_4 { pt3dadd( 187.387, 142.231, -9.48596, 0.72 ) }
    dend_4 { pt3dadd( 189.785, 142.801, -10.6101, 0.6 ) }
    dend_4 { pt3dadd( 191.102, 143.124, -11.3089, 0.96 ) }
    dend_4 { pt3dadd( 193.371, 143.591, -12.5498, 0.96 ) }
    dend_4 { pt3dadd( 194.822, 143.891, -13.4041, 0.96 ) }
    dend_4 { pt3dadd( 197.229, 144.324, -14.9329, 0.72 ) }
    dend_4 { pt3dadd( 199.411, 144.631, -16.3197, 0.72 ) }
    dend_4 { pt3dadd( 201.49, 144.785, -17.6151, 1.2 ) }
    dend_4 { pt3dadd( 203.445, 144.815, -18.8007, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 5.03141, -236.388, 7.4974, 0.48 ) }
    dend_56 { pt3dadd( 5.14742, -238.601, 7.67065, 0.48 ) }
    dend_56 { pt3dadd( 5.25134, -240.583, 7.82582, 0.48 ) }
    dend_56 { pt3dadd( 5.34024, -242.278, 7.95859, 0.84 ) }
    dend_56 { pt3dadd( 5.41712, -243.745, 8.07338, 0.84 ) }
    dend_56 { pt3dadd( 5.49139, -245.161, 8.18429, 0.6 ) }
    dend_56 { pt3dadd( 5.76319, -253.441, 7.12269, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 5.03141, -236.388, 7.4974, 0.84 ) }
    dend_53 { pt3dadd( 5.26094, -237.827, 8.10394, 0.84 ) }
    dend_53 { pt3dadd( 5.43815, -239.005, 8.56799, 0.84 ) }
    dend_53 { pt3dadd( 5.59952, -240.161, 8.97889, 1.08 ) }
    dend_53 { pt3dadd( 5.81191, -241.602, 9.45758, 0.84 ) }
    dend_53 { pt3dadd( 5.96454, -242.6, 9.78, 0.84 ) }
    dend_53 { pt3dadd( 6.11179, -243.544, 10.0717, 0.84 ) }
    dend_53 { pt3dadd( 6.19063, -244.079, 10.218, 0.84 ) }
    dend_53 { pt3dadd( 6.43464, -245.749, 10.5955, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( 6.55941, -246.695, 10.7673, 1.32 ) }
    dend_53 { pt3dadd( 6.74436, -248.431, 11.0145, 1.2 ) }
    dend_53 { pt3dadd( 6.82985, -249.448, 11.1285, 0.96 ) }
    dend_53 { pt3dadd( 6.90154, -250.711, 11.2648, 1.32 ) }
    dend_53 { pt3dadd( 6.93433, -251.861, 11.3865, 1.32 ) }
    dend_53 { pt3dadd( 6.91467, -253.274, 11.534, 1.08 ) }
    dend_53 { pt3dadd( 6.80949, -256.268, 11.8203, 1.08 ) }
    dend_53 { pt3dadd( 6.7241, -257.833, 11.9553, 0.84 ) }
    dend_53 { pt3dadd( 6.63022, -259.169, 12.0809, 1.2 ) }
    dend_53 { pt3dadd( 6.50301, -260.648, 12.2397, 1.08 ) }
    dend_53 { pt3dadd( 6.38647, -261.841, 12.3946, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 16.8628, -229.666, 1.31208, 0.96 ) }
    dend_51 { pt3dadd( 15.6104, -232.449, 1.81638, 0.96 ) }
    dend_51 { pt3dadd( 15.1839, -233.684, 2.16071, 0.96 ) }
    dend_51 { pt3dadd( 14.7904, -234.778, 2.49905, 0.96 ) }
    dend_51 { pt3dadd( 14.3185, -236.092, 2.90094, 0.96 ) }
    dend_51 { pt3dadd( 13.7872, -237.505, 3.34998, 0.96 ) }
    dend_51 { pt3dadd( 12.7002, -240.616, 4.33352, 1.44 ) }
    dend_51 { pt3dadd( 11.9382, -243.367, 5.27843, 0.96 ) }
    dend_51 { pt3dadd( 10.8001, -247.999, 6.92968, 1.44 ) }
    dend_51 { pt3dadd( 10.4785, -249.475, 7.45759, 0.96 ) }
    dend_51 { pt3dadd( 9.88442, -252.426, 8.49843, 1.56 ) }
    dend_51 { pt3dadd( 9.25038, -255.86, 9.64385, 1.2 ) }
    dend_51 { pt3dadd( 8.5245, -260.599, 11.0555, 0.96 ) }
    dend_51 { pt3dadd( 8.27728, -262.697, 11.6216, 1.44 ) }
    dend_51 { pt3dadd( 8.00422, -266.036, 12.4541, 0.96 ) }
    dend_51 { pt3dadd( 7.69144, -269.683, 13.276, 1.32 ) }
    dend_51 { pt3dadd( 7.29869, -273.548, 13.9977, 0.96 ) }
    dend_51 { pt3dadd( 6.90178, -276.45, 14.4197, 0.96 ) }
    dend_51 { pt3dadd( 6.6683, -278.136, 14.5827, 0.96 ) }
    dend_51 { pt3dadd( 6.49885, -279.567, 14.6869, 0.96 ) }
    dend_51 { pt3dadd( 6.10044, -283.395, 14.8914, 1.32 ) }
    dend_51 { pt3dadd( 5.78289, -286.776, 15.0235, 0.96 ) }
    dend_51 { pt3dadd( 5.42471, -291.595, 15.1959, 1.44 ) }
    dend_51 { pt3dadd( 5.23871, -295.11, 15.324, 0.84 ) }
    dend_51 { pt3dadd( 5.20074, -297.631, 15.4464, 1.2 ) }
    dend_51 { pt3dadd( 5.22735, -298.928, 15.5587, 1.2 ) }
    dend_51 { pt3dadd( 5.28647, -299.799, 15.6704, 0.84 ) }
    dend_51 { pt3dadd( 5.60992, -303.149, 16.3003, 1.2 ) }
    dend_51 { pt3dadd( 5.91389, -306.228, 17.08, 1.2 ) }
    dend_51 { pt3dadd( 6.03475, -308.317, 17.7068, 0.96 ) }
    dend_51 { pt3dadd( 6.09392, -311.771, 18.82, 0.96 ) }
    dend_51 { pt3dadd( 5.97388, -314.996, 19.8255, 1.32 ) }
    dend_51 { pt3dadd( 5.70768, -317.673, 20.6585, 1.68 ) }
    dend_51 { pt3dadd( 5.18847, -320.459, 21.5176, 1.2 ) }
    dend_51 { pt3dadd( 4.17858, -323.979, 22.5742, 0.96 ) }
    dend_51 { pt3dadd( 2.90161, -327.055, 23.386, 0.96 ) }
    dend_51 { pt3dadd( 1.2604, -329.73, 23.9656, 0.84 ) }
    dend_51 { pt3dadd( -0.10895, -331.117, 24.2305, 0.84 ) }
    dend_51 { pt3dadd( -1.82337, -331.864, 24.3045, 0.84 ) }
    dend_51 { pt3dadd( -3.54467, -331.151, 24.1859, 0.84 ) }
    dend_51 { pt3dadd( -4.47064, -330.393, 24.0871, 0.84 ) }
    dend_51 { pt3dadd( -5.31673, -329.419, 23.9915, 0.84 ) }
    dend_51 { pt3dadd( -6.08378, -328.162, 23.949, 1.08 ) }
    dend_51 { pt3dadd( -6.90137, -326.395, 23.9149, 0.84 ) }
    dend_51 { pt3dadd( -7.37822, -324.9, 23.959, 0.6 ) }
    dend_51 { pt3dadd( -7.73244, -335.667, 26.0849, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.8628, -229.666, 1.31208, 1.08 ) }
    dend_46 { pt3dadd( 17.2234, -232.786, 1.44661, 1.08 ) }
    dend_46 { pt3dadd( 17.6229, -236.168, 1.56673, 1.44 ) }
    dend_46 { pt3dadd( 17.7742, -237.687, 1.61238, 0.84 ) }
    dend_46 { pt3dadd( 17.9756, -239.896, 1.66539, 1.32 ) }
    dend_46 { pt3dadd( 18.1103, -241.399, 1.69553, 1.32 ) }
    dend_46 { pt3dadd( 18.3356, -243.999, 1.70013, 1.32 ) }
    dend_46 { pt3dadd( 18.4401, -245.672, 1.66323, 1.32 ) }
    dend_46 { pt3dadd( 18.5612, -247.497, 1.609, 1.32 ) }
    dend_46 { pt3dadd( 18.7179, -250.87, 1.49954, 1.44 ) }
    dend_46 { pt3dadd( 18.78, -252.526, 1.44468, 1.44 ) }
    dend_46 { pt3dadd( 18.9346, -257.742, 1.27713, 1.44 ) }
    dend_46 { pt3dadd( 18.9561, -259.046, 1.23758, 1.44 ) }
    dend_46 { pt3dadd( 18.991, -261.302, 1.1752, 1.08 ) }
    dend_46 { pt3dadd( 19.1319, -265.805, 1.06662, 1.08 ) }
    dend_46 { pt3dadd( 19.2052, -268.121, 1.02369, 0.84 ) }
    dend_46 { pt3dadd( 19.3016, -270.791, 1.00816, 1.32 ) }
    dend_46 { pt3dadd( 19.4214, -272.902, 1.02815, 1.32 ) }
    dend_46 { pt3dadd( 19.6613, -276.175, 1.07127, 0.96 ) }
    dend_46 { pt3dadd( 19.8157, -277.876, 1.11042, 1.44 ) }
    dend_46 { pt3dadd( 20.0659, -280.367, 1.11351, 1.44 ) }
    dend_46 { pt3dadd( 20.2719, -283.008, 1.06573, 1.2 ) }
    dend_46 { pt3dadd( 20.3936, -285.652, 0.970248, 1.08 ) }
    dend_46 { pt3dadd( 20.4441, -287.758, 0.861704, 1.08 ) }
    dend_46 { pt3dadd( 20.4233, -289.748, 0.735271, 1.68 ) }
    dend_46 { pt3dadd( 20.3506, -292.901, 0.51431, 1.2 ) }
    dend_46 { pt3dadd( 20.3299, -294.202, 0.418321, 1.2 ) }
    dend_46 { pt3dadd( 20.3273, -296.805, 0.229309, 1.44 ) }
    dend_46 { pt3dadd( 20.365, -299.085, 0.0637169, 1.44 ) }
    dend_46 { pt3dadd( 20.4952, -301.891, -0.122816, 1.44 ) }
    dend_46 { pt3dadd( 20.6697, -304.307, -0.252192, 1.44 ) }
    dend_46 { pt3dadd( 20.9684, -307.071, -0.330784, 1.8 ) }
    dend_46 { pt3dadd( 21.3091, -309.934, -0.421283, 1.32 ) }
    dend_46 { pt3dadd( 21.5232, -311.611, -0.478398, 1.08 ) }
    dend_46 { pt3dadd( 21.8045, -313.96, -0.563379, 1.56 ) }
    dend_46 { pt3dadd( 22.125, -316.678, -0.676326, 1.56 ) }
    dend_46 { pt3dadd( 22.299, -318.194, -0.743582, 1.56 ) }
    dend_46 { pt3dadd( 22.4524, -319.592, -0.805156, 1.56 ) }
    dend_46 { pt3dadd( 22.6729, -321.725, -0.888146, 1.56 ) }
    dend_46 { pt3dadd( 22.8759, -323.528, -0.93889, 1.56 ) }
    dend_46 { pt3dadd( 23.1552, -325.604, -1.00165, 1.32 ) }
    dend_46 { pt3dadd( 23.2903, -326.54, -1.02936, 1.32 ) }
    dend_46 { pt3dadd( 23.4368, -327.927, -1.07671, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( 23.575, -329.459, -1.13068, 1.32 ) }
    dend_46 { pt3dadd( 23.7755, -331.733, -1.24707, 1.32 ) }
    dend_46 { pt3dadd( 23.9225, -333.439, -1.33394, 1.32 ) }
    dend_46 { pt3dadd( 24.0628, -335.445, -1.43517, 1.68 ) }
    dend_46 { pt3dadd( 24.3336, -340.684, -1.72411, 1.32 ) }
    dend_46 { pt3dadd( 24.3894, -342.33, -1.8261, 1.32 ) }
    dend_46 { pt3dadd( 24.4215, -344.218, -1.9608, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 46.0022, -320.091, -14.4292, 0.96 ) }
    dend_30 { pt3dadd( 46.9596, -321.259, -12.448, 0.96 ) }
    dend_30 { pt3dadd( 47.4418, -321.829, -11.455, 1.32 ) }
    dend_30 { pt3dadd( 48.4455, -323.025, -9.40678, 0.96 ) }
    dend_30 { pt3dadd( 49.1862, -323.964, -7.87197, 1.32 ) }
    dend_30 { pt3dadd( 50.1679, -325.214, -5.97523, 1.2 ) }
    dend_30 { pt3dadd( 50.6879, -325.823, -5.02761, 1.2 ) }
    dend_30 { pt3dadd( 51.218, -326.39, -4.12932, 1.2 ) }
    dend_30 { pt3dadd( 51.5865, -326.797, -3.50982, 1.2 ) }
    dend_30 { pt3dadd( 52.0343, -327.274, -2.8217, 1.2 ) }
    dend_30 { pt3dadd( 53.444, -328.595, -0.890568, 0.96 ) }
    dend_30 { pt3dadd( 54.5408, -329.461, 0.372298, 1.32 ) }
    dend_30 { pt3dadd( 55.2093, -329.925, 1.09559, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 46.0022, -320.091, -14.4292, 1.08 ) }
    dend_23 { pt3dadd( 46.5089, -324.967, -14.4445, 1.08 ) }
    dend_23 { pt3dadd( 46.8941, -329.376, -14.5376, 0.72 ) }
    dend_23 { pt3dadd( 47.1351, -331.531, -14.6557, 0.72 ) }
    dend_23 { pt3dadd( 47.7563, -336.731, -15.0541, 1.2 ) }
    dend_23 { pt3dadd( 48.2769, -340.963, -15.4219, 0.84 ) }
    dend_23 { pt3dadd( 48.5788, -343.519, -15.6656, 0.84 ) }
    dend_23 { pt3dadd( 48.8249, -345.387, -15.8752, 0.84 ) }
    dend_23 { pt3dadd( 49.4707, -350.28, -16.439, 0.6 ) }
    dend_23 { pt3dadd( 49.8396, -353.002, -16.7283, 0.6 ) }
    dend_23 { pt3dadd( 50.4016, -356.632, -17.0319, 1.2 ) }
    dend_23 { pt3dadd( 51.1384, -360.765, -17.3431, 1.2 ) }
    dend_23 { pt3dadd( 51.8119, -364.244, -17.5662, 0.84 ) }
    dend_23 { pt3dadd( 52.3705, -367.137, -17.7311, 0.84 ) }
    dend_23 { pt3dadd( 53.2207, -371.733, -18.0036, 1.08 ) }
    dend_23 { pt3dadd( 53.9986, -375.706, -18.3156, 0.72 ) }
    dend_23 { pt3dadd( 54.7328, -379.216, -18.6853, 1.08 ) }
    dend_23 { pt3dadd( 55.2709, -381.629, -18.9881, 1.08 ) }
    dend_23 { pt3dadd( 55.7667, -383.886, -19.3281, 1.08 ) }
    dend_23 { pt3dadd( 56.592, -387.939, -20.0327, 0.72 ) }
    dend_23 { pt3dadd( 57.0987, -390.551, -20.5155, 0.72 ) }
    dend_23 { pt3dadd( 57.4495, -393.08, -20.9275, 1.08 ) }
    dend_23 { pt3dadd( 57.6006, -395.013, -21.1636, 1.08 ) }
    dend_23 { pt3dadd( 57.6544, -396.327, -21.2629, 1.08 ) }
    dend_23 { pt3dadd( 57.7266, -399.963, -21.5435, 0.72 ) }
    dend_23 { pt3dadd( 57.7463, -401.993, -21.7198, 0.72 ) }
    dend_23 { pt3dadd( 57.8314, -406.501, -22.1957, 1.2 ) }
    dend_23 { pt3dadd( 57.9813, -410.997, -22.7241, 1.2 ) }
    dend_23 { pt3dadd( 58.2934, -416.882, -23.5013, 1.2 ) }
    dend_23 { pt3dadd( 58.7325, -422.536, -24.3261, 0.84 ) }
    dend_23 { pt3dadd( 58.9448, -424.762, -24.7018, 1.32 ) }
    dend_23 { pt3dadd( 59.2117, -427.218, -25.1916, 1.32 ) }
    dend_23 { pt3dadd( 59.3777, -428.354, -25.456, 1.32 ) }
    dend_23 { pt3dadd( 59.7828, -430.873, -26.0933, 0.96 ) }
    dend_23 { pt3dadd( 60.13, -433.121, -26.6716, 1.56 ) }
    dend_23 { pt3dadd( 60.4939, -435.465, -27.1889, 1.56 ) }
    dend_23 { pt3dadd( 60.8189, -437.444, -27.5907, 1.08 ) }
    dend_23 { pt3dadd( 61.115, -439.365, -27.9816, 1.08 ) }
    dend_23 { pt3dadd( 61.7804, -443.291, -28.7956, 0.84 ) }
    dend_23 { pt3dadd( 62.1575, -445.12, -29.1438, 1.44 ) }
    dend_23 { pt3dadd( 63.01, -448.511, -29.7335, 1.08 ) }
    dend_23 { pt3dadd( 63.6633, -450.612, -30.0621, 1.08 ) }
    dend_23 { pt3dadd( 64.7614, -453.947, -30.5632, 0.72 ) }
    dend_23 { pt3dadd( 66.0423, -457.936, -31.1638, 1.08 ) }
    dend_23 { pt3dadd( 66.7796, -460.013, -31.5215, 1.08 ) }
    dend_23 { pt3dadd( 67.6625, -462.367, -31.9555, 0.96 ) }
    dend_23 { pt3dadd( 69.147, -466.359, -32.6967, 0.72 ) }
    dend_23 { pt3dadd( 69.9451, -468.344, -33.1049, 0.72 ) }
    dend_23 { pt3dadd( 70.5906, -469.745, -33.4164, 0.72 ) }
    dend_23 { pt3dadd( 72.5781, -473.883, -34.5064, 0.72 ) }
    dend_23 { pt3dadd( 73.336, -475.508, -35.0326, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.51013, 55.013, 26.7472, 0.6 ) }
    dend_16 { pt3dadd( -1.11689, 45.6376, 24.2295, 0.6 ) }
    dend_16 { pt3dadd( -5.59558, 35.9261, 23.2598, 0.6 ) }
    dend_16 { pt3dadd( -9.35698, 26.1653, 20.8429, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.51013, 55.013, 26.7472, 0.84 ) }
    dend_15 { pt3dadd( -1.62639, 46.4728, 22.9996, 0.6 ) }
    dend_15 { pt3dadd( -8.88231, 38.972, 20.6935, 0.6 ) }
    dend_15 { pt3dadd( -15.9013, 31.076, 19.1771, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 0.432687, 96.6311, 20.2291, 0.6 ) }
    dend_7 { pt3dadd( -3.50444, 102.947, 22.8064, 0.6 ) }
    dend_7 { pt3dadd( -8.64423, 108.319, 25.5142, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.432687, 96.6311, 20.2291, 0.84 ) }
    dend_6 { pt3dadd( -4.7543, 105.804, 20.7834, 0.6 ) }
    dend_6 { pt3dadd( -8.35753, 115.687, 20.688, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 6.38647, -261.841, 12.3946, 0.6 ) }
    dend_55 { pt3dadd( 4.16527, -261.533, 12.4339, 0.6 ) }
    dend_55 { pt3dadd( 1.40087, -261.151, 12.4827, 0.6 ) }
    dend_55 { pt3dadd( 0.102104, -260.971, 12.5057, 0.6 ) }
    dend_55 { pt3dadd( -1.45685, -260.755, 12.5333, 0.96 ) }
    dend_55 { pt3dadd( -13.0434, -257.798, 11.565, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 6.38647, -261.841, 12.3946, 0.96 ) }
    dend_54 { pt3dadd( 6.14111, -263.275, 12.2772, 0.96 ) }
    dend_54 { pt3dadd( 5.90055, -264.68, 12.1622, 0.72 ) }
    dend_54 { pt3dadd( 5.50749, -266.977, 11.9742, 0.72 ) }
    dend_54 { pt3dadd( 2.0992, -277.317, 12.3524, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 24.4215, -344.218, -1.9608, 0.84 ) }
    dend_50 { pt3dadd( 26.3903, -347.01, -3.40077, 0.84 ) }
    dend_50 { pt3dadd( 28.4175, -349.521, -4.80033, 0.84 ) }
    dend_50 { pt3dadd( 28.9397, -350.207, -5.20533, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( 30.1838, -351.994, -6.31609, 0.84 ) }
    dend_50 { pt3dadd( 31.7035, -354.399, -7.78875, 0.6 ) }
    dend_50 { pt3dadd( 32.9892, -356.551, -9.06799, 1.08 ) }
    dend_50 { pt3dadd( 33.8894, -358.203, -10.0195, 1.08 ) }
    dend_50 { pt3dadd( 35.2681, -360.731, -11.4597, 0.72 ) }
    dend_50 { pt3dadd( 36.4092, -362.912, -12.6112, 0.72 ) }
    dend_50 { pt3dadd( 37.0387, -364.241, -13.3235, 0.72 ) }
    dend_50 { pt3dadd( 37.5466, -365.334, -14.0027, 0.72 ) }
    dend_50 { pt3dadd( 38.0511, -366.509, -14.755, 1.2 ) }
    dend_50 { pt3dadd( 39.3095, -369.418, -16.5602, 0.84 ) }
    dend_50 { pt3dadd( 41.0309, -373.117, -18.7558, 1.08 ) }
    dend_50 { pt3dadd( 42.9594, -377.235, -21.1041, 1.08 ) }
    dend_50 { pt3dadd( 44.8599, -381.384, -23.4432, 0.84 ) }
    dend_50 { pt3dadd( 45.6591, -383.226, -24.4281, 0.84 ) }
    dend_50 { pt3dadd( 46.6013, -385.439, -25.5489, 1.32 ) }
    dend_50 { pt3dadd( 47.7901, -388.291, -26.8442, 0.84 ) }
    dend_50 { pt3dadd( 48.251, -389.334, -27.2804, 0.84 ) }
    dend_50 { pt3dadd( 49.0736, -391.07, -27.8739, 1.32 ) }
    dend_50 { pt3dadd( 50.3547, -393.744, -28.7797, 0.84 ) }
    dend_50 { pt3dadd( 51.2503, -395.529, -29.5844, 1.44 ) }
    dend_50 { pt3dadd( 52.733, -398.612, -31.2948, 1.2 ) }
    dend_50 { pt3dadd( 53.3735, -399.984, -32.174, 1.2 ) }
    dend_50 { pt3dadd( 54.1991, -401.789, -33.3793, 1.44 ) }
    dend_50 { pt3dadd( 55.2431, -404.127, -34.9798, 1.08 ) }
    dend_50 { pt3dadd( 57.0623, -408.394, -37.8897, 0.84 ) }
    dend_50 { pt3dadd( 57.9947, -410.681, -39.3945, 1.44 ) }
    dend_50 { pt3dadd( 58.8927, -413.089, -40.8957, 0.96 ) }
    dend_50 { pt3dadd( 59.4607, -414.889, -41.8924, 0.96 ) }
    dend_50 { pt3dadd( 59.8373, -416.315, -42.5626, 1.44 ) }
    dend_50 { pt3dadd( 60.4618, -419.609, -43.8523, 0.96 ) }
    dend_50 { pt3dadd( 60.5774, -420.498, -44.1474, 0.96 ) }
    dend_50 { pt3dadd( 60.9374, -423.886, -45.1974, 1.44 ) }
    dend_50 { pt3dadd( 61.269, -427.499, -46.3467, 0.84 ) }
    dend_50 { pt3dadd( 61.5827, -431.589, -47.8698, 1.44 ) }
    dend_50 { pt3dadd( 61.8458, -435.827, -49.5948, 0.84 ) }
    dend_50 { pt3dadd( 61.8977, -437.053, -50.1443, 0.84 ) }
    dend_50 { pt3dadd( 62.0499, -440.298, -51.7446, 1.44 ) }
    dend_50 { pt3dadd( 62.3322, -444.814, -54.1426, 1.44 ) }
    dend_50 { pt3dadd( 62.6103, -449.77, -56.8412, 1.08 ) }
    dend_50 { pt3dadd( 62.7698, -452.411, -58.339, 0.72 ) }
    dend_50 { pt3dadd( 62.9544, -455.093, -59.9285, 1.32 ) }
    dend_50 { pt3dadd( 63.0721, -457.469, -61.3764, 0.72 ) }
    dend_50 { pt3dadd( 63.0725, -458.675, -62.1192, 0.72 ) }
    dend_50 { pt3dadd( 62.9159, -461.92, -64.0561, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 24.4215, -344.218, -1.9608, 1.08 ) }
    dend_47 { pt3dadd( 24.253, -346.784, -2.14586, 1.08 ) }
    dend_47 { pt3dadd( 24.2207, -348.477, -2.23721, 1.08 ) }
    dend_47 { pt3dadd( 24.2092, -349.695, -2.24073, 1.08 ) }
    dend_47 { pt3dadd( 24.1444, -351.992, -2.3868, 1.08 ) }
    dend_47 { pt3dadd( 24.0639, -354.769, -2.72486, 1.44 ) }
    dend_47 { pt3dadd( 24.0109, -357.442, -3.12843, 0.96 ) }
    dend_47 { pt3dadd( 24.0322, -359.651, -3.51622, 0.96 ) }
    dend_47 { pt3dadd( 24.0991, -361.802, -3.97256, 0.96 ) }
    dend_47 { pt3dadd( 24.2778, -365.857, -4.80579, 0.96 ) }
    dend_47 { pt3dadd( 24.4402, -368.504, -5.2928, 0.84 ) }
    dend_47 { pt3dadd( 24.5674, -370.062, -5.53701, 1.44 ) }
    dend_47 { pt3dadd( 24.7593, -372.467, -5.84758, 1.08 ) }
    dend_47 { pt3dadd( 24.9462, -374.394, -6.03644, 1.08 ) }
    dend_47 { pt3dadd( 25.2678, -377.248, -6.23645, 1.56 ) }
    dend_47 { pt3dadd( 25.8285, -381.684, -6.30575, 1.32 ) }
    dend_47 { pt3dadd( 26.0926, -383.895, -6.32508, 0.96 ) }
    dend_47 { pt3dadd( 26.3303, -386.099, -6.36088, 1.32 ) }
    dend_47 { pt3dadd( 26.7631, -390.207, -6.45615, 1.08 ) }
    dend_47 { pt3dadd( 27.0298, -392.797, -6.56436, 0.72 ) }
    dend_47 { pt3dadd( 27.2324, -395.073, -6.70727, 1.32 ) }
    dend_47 { pt3dadd( 27.4973, -398.257, -6.88717, 1.08 ) }
    dend_47 { pt3dadd( 27.6965, -400.793, -7.0008, 1.56 ) }
    dend_47 { pt3dadd( 27.926, -403.702, -7.09009, 0.84 ) }
    dend_47 { pt3dadd( 28.2007, -407.247, -7.18596, 0.6 ) }
    dend_47 { pt3dadd( 28.3224, -408.775, -7.22593, 1.08 ) }
    dend_47 { pt3dadd( 28.5725, -412.02, -7.31112, 1.2 ) }
    dend_47 { pt3dadd( 28.813, -414.928, -7.3851, 0.72 ) }
    dend_47 { pt3dadd( 28.9015, -415.896, -7.4155, 0.72 ) }
    dend_47 { pt3dadd( 29.3411, -420.53, -7.59905, 1.32 ) }
    dend_47 { pt3dadd( 29.4468, -421.377, -7.64367, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 55.2093, -329.925, 1.09559, 0.96 ) }
    dend_34 { pt3dadd( 55.3435, -329.236, 2.44777, 0.96 ) }
    dend_34 { pt3dadd( 55.3975, -328.959, 2.99169, 0.96 ) }
    dend_34 { pt3dadd( 55.4632, -328.622, 3.65426, 0.84 ) }
    dend_34 { pt3dadd( 55.6214, -327.81, 5.24835, 0.84 ) }
    dend_34 { pt3dadd( 55.7171, -327.319, 6.2136, 1.08 ) }
    dend_34 { pt3dadd( 55.8006, -326.89, 7.05513, 1.08 ) }
    dend_34 { pt3dadd( 56.2385, -323.47, 12.7919, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 55.2093, -329.925, 1.09559, 0.6 ) }
    dend_31 { pt3dadd( 55.1115, -331.5, 2.19371, 0.6 ) }
    dend_31 { pt3dadd( 54.8224, -333.53, 3.58919, 1.08 ) }
    dend_31 { pt3dadd( 54.4372, -335.779, 5.02562, 0.96 ) }
    dend_31 { pt3dadd( 54.2247, -337.042, 5.82359, 0.96 ) }
    dend_31 { pt3dadd( 54.0031, -338.359, 6.65558, 1.32 ) }
    dend_31 { pt3dadd( 53.5979, -340.768, 8.17658, 1.08 ) }
    dend_31 { pt3dadd( 53.3613, -341.809, 8.81581, 1.08 ) }
    dend_31 { pt3dadd( 52.7561, -343.897, 10.0855, 1.08 ) }
    dend_31 { pt3dadd( 52.1956, -345.854, 11.2236, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 73.336, -475.508, -35.0326, 0.72 ) }
    dend_27 { pt3dadd( 73.415, -476.678, -35.4334, 0.72 ) }
    dend_27 { pt3dadd( 73.4966, -477.8, -35.7738, 0.72 ) }
    dend_27 { pt3dadd( 73.6009, -479.336, -36.2512, 0.72 ) }
    dend_27 { pt3dadd( 73.642, -480.354, -36.5695, 0.72 ) }
    dend_27 { pt3dadd( 73.6627, -480.822, -36.7151, 0.72 ) }
    dend_27 { pt3dadd( 73.7533, -482.435, -37.1985, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 73.7804, -483.283, -37.4404, 0.6 ) }
    dend_27 { pt3dadd( 73.7917, -484.021, -37.6456, 0.6 ) }
    dend_27 { pt3dadd( 73.7847, -485.298, -37.9777, 0.48 ) }
    dend_27 { pt3dadd( 73.7777, -486.017, -38.1782, 0.48 ) }
    dend_27 { pt3dadd( 73.7479, -487.534, -38.6285, 0.84 ) }
    dend_27 { pt3dadd( 73.6492, -489.243, -39.1988, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 73.336, -475.508, -35.0326, 0.72 ) }
    dend_24 { pt3dadd( 74.2885, -478.028, -34.5783, 0.72 ) }
    dend_24 { pt3dadd( 75.6295, -481.576, -33.9388, 1.2 ) }
    dend_24 { pt3dadd( 76.0755, -482.756, -33.7261, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 29.4468, -421.377, -7.64367, 0.48 ) }
    dend_49 { pt3dadd( 27.2241, -423.113, -6.85087, 0.48 ) }
    dend_49 { pt3dadd( 26.8162, -423.397, -6.71564, 0.48 ) }
    dend_49 { pt3dadd( 25.5225, -424.4, -6.29631, 0.48 ) }
    dend_49 { pt3dadd( 24.1245, -425.706, -5.69873, 0.48 ) }
    dend_49 { pt3dadd( 23.5266, -426.344, -5.38096, 0.48 ) }
    dend_49 { pt3dadd( 21.9645, -428.079, -4.48065, 0.96 ) }
    dend_49 { pt3dadd( 20.1664, -430.152, -3.32445, 0.6 ) }
    dend_49 { pt3dadd( 18.8446, -431.792, -2.4039, 0.6 ) }
    dend_49 { pt3dadd( 16.912, -434.33, -0.948654, 1.08 ) }
    dend_49 { pt3dadd( 15.5547, -436.202, 0.159539, 0.84 ) }
    dend_49 { pt3dadd( 14.7218, -437.455, 0.908814, 0.84 ) }
    dend_49 { pt3dadd( 13.8112, -439.081, 1.87904, 1.2 ) }
    dend_49 { pt3dadd( 12.8604, -440.876, 3.0323, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 29.4468, -421.377, -7.64367, 0.84 ) }
    dend_48 { pt3dadd( 30.0836, -424.668, -8.09831, 0.84 ) }
    dend_48 { pt3dadd( 30.2652, -426.237, -8.31356, 0.84 ) }
    dend_48 { pt3dadd( 30.3982, -427.627, -8.48584, 0.84 ) }
    dend_48 { pt3dadd( 30.7339, -431.166, -8.93218, 0.84 ) }
    dend_48 { pt3dadd( 30.8627, -432.478, -9.09342, 0.84 ) }
    dend_48 { pt3dadd( 31.1614, -435.531, -9.45473, 1.44 ) }
    dend_48 { pt3dadd( 31.3659, -437.787, -9.73795, 1.08 ) }
    dend_48 { pt3dadd( 31.564, -440.358, -10.0285, 1.08 ) }
    dend_48 { pt3dadd( 31.7147, -442.807, -10.2549, 0.84 ) }
    dend_48 { pt3dadd( 31.8076, -444.344, -10.3432, 0.84 ) }
    dend_48 { pt3dadd( 31.9445, -445.7, -10.3958, 1.08 ) }
    dend_48 { pt3dadd( 32.261, -447.496, -10.4437, 0.6 ) }
    dend_48 { pt3dadd( 32.5866, -448.938, -10.4621, 0.6 ) }
    dend_48 { pt3dadd( 32.9333, -450.444, -10.4427, 0.6 ) }
    dend_48 { pt3dadd( 33.4216, -452.435, -10.4359, 1.2 ) }
    dend_48 { pt3dadd( 33.9415, -454.426, -10.4781, 1.2 ) }
    dend_48 { pt3dadd( 34.285, -455.808, -10.5342, 1.2 ) }
    dend_48 { pt3dadd( 34.6387, -457.37, -10.6195, 0.96 ) }
    dend_48 { pt3dadd( 34.859, -458.411, -10.6817, 1.44 ) }
    dend_48 { pt3dadd( 35.2273, -460.477, -10.8095, 1.44 ) }
    dend_48 { pt3dadd( 35.6513, -463.43, -10.9938, 0.96 ) }
    dend_48 { pt3dadd( 36.0454, -466.69, -11.1868, 1.32 ) }
    dend_48 { pt3dadd( 36.205, -468.041, -11.2589, 1.32 ) }
    dend_48 { pt3dadd( 36.5521, -471.072, -11.3984, 0.84 ) }
    dend_48 { pt3dadd( 36.801, -473.566, -11.5, 1.32 ) }
    dend_48 { pt3dadd( 36.9236, -474.924, -11.5295, 1.32 ) }
    dend_48 { pt3dadd( 37.0564, -476.52, -11.5955, 1.32 ) }
    dend_48 { pt3dadd( 37.3078, -479.609, -11.7679, 1.32 ) }
    dend_48 { pt3dadd( 37.4437, -481.643, -11.9025, 0.96 ) }
    dend_48 { pt3dadd( 37.5264, -483.271, -12.0243, 0.96 ) }
    dend_48 { pt3dadd( 37.7452, -486.928, -12.3168, 1.44 ) }
    dend_48 { pt3dadd( 37.8852, -489.17, -12.5229, 1.08 ) }
    dend_48 { pt3dadd( 37.9642, -490.972, -12.7142, 1.08 ) }
    dend_48 { pt3dadd( 38.0214, -492.779, -12.954, 1.08 ) }
    dend_48 { pt3dadd( 38.1241, -494.984, -13.2649, 1.08 ) }
    dend_48 { pt3dadd( 38.2564, -497.349, -13.6028, 1.08 ) }
    dend_48 { pt3dadd( 38.4353, -500.694, -14.1226, 1.08 ) }
    dend_48 { pt3dadd( 38.7444, -505.655, -14.9334, 0.96 ) }
    dend_48 { pt3dadd( 39.216, -513.272, -16.23, 1.32 ) }
    dend_48 { pt3dadd( 39.3719, -515.778, -16.6705, 0.84 ) }
    dend_48 { pt3dadd( 39.4603, -517.271, -16.9359, 0.84 ) }
    dend_48 { pt3dadd( 39.5674, -519.302, -17.2902, 0.84 ) }
    dend_48 { pt3dadd( 39.6424, -520.854, -17.5401, 0.84 ) }
    dend_48 { pt3dadd( 39.7926, -523.907, -17.974, 0.84 ) }
    dend_48 { pt3dadd( 39.8217, -525.43, -18.151, 0.84 ) }
    dend_48 { pt3dadd( 39.8076, -526.695, -18.2876, 0.84 ) }
    dend_48 { pt3dadd( 39.765, -528.019, -18.4068, 1.2 ) }
    dend_48 { pt3dadd( 39.6909, -530.511, -18.5881, 0.72 ) }
    dend_48 { pt3dadd( 39.5807, -532.452, -18.7277, 1.32 ) }
    dend_48 { pt3dadd( 39.4834, -533.994, -18.8984, 0.84 ) }
    dend_48 { pt3dadd( 39.3483, -535.795, -19.1187, 1.56 ) }
    dend_48 { pt3dadd( 38.9523, -540.182, -19.7741, 0.84 ) }
    dend_48 { pt3dadd( 38.77, -541.814, -20.0508, 1.32 ) }
    dend_48 { pt3dadd( 38.3495, -544.757, -20.5983, 0.84 ) }
    dend_48 { pt3dadd( 37.6337, -549.13, -21.439, 0.6 ) }
    dend_48 { pt3dadd( 37.4137, -550.429, -21.6853, 1.08 ) }
    dend_48 { pt3dadd( 36.9892, -552.866, -22.1322, 0.84 ) }
    dend_48 { pt3dadd( 36.6182, -554.893, -22.5135, 1.44 ) }
    dend_48 { pt3dadd( 36.2038, -557.012, -22.8959, 0.96 ) }
    dend_48 { pt3dadd( 35.8883, -558.761, -23.1819, 0.72 ) }
    dend_48 { pt3dadd( 35.5542, -560.447, -23.3599, 0.72 ) }
    dend_48 { pt3dadd( 34.9836, -563.605, -23.686, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 52.1956, -345.854, 11.2236, 0.84 ) }
    dend_33 { pt3dadd( 53.3211, -345.465, 13.6134, 0.84 ) }
    dend_33 { pt3dadd( 53.8153, -345.294, 14.6626, 0.84 ) }
    dend_33 { pt3dadd( 54.9781, -344.893, 17.1313, 0.72 ) }
    dend_33 { pt3dadd( 55.7127, -344.639, 18.6909, 0.72 ) }
    dend_33 { pt3dadd( 61.1485, -344.518, 27.6172, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 52.1956, -345.854, 11.2236, 0.72 ) }
    dend_32 { pt3dadd( 52.2986, -347.687, 12.1741, 0.72 ) }
    dend_32 { pt3dadd( 52.4079, -349.632, 13.1819, 0.84 ) }
    dend_32 { pt3dadd( 52.4541, -350.453, 13.6074, 0.84 ) }
    dend_32 { pt3dadd( 52.5507, -352.171, 14.4982, 0.6 ) }
    dend_32 { pt3dadd( 52.6176, -353.361, 15.115, 0.6 ) }
    dend_32 { pt3dadd( 52.6876, -354.605, 15.7599, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 52.7168, -362.542, 21.0048, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 73.6492, -489.243, -39.1988, 0.48 ) }
    dend_29 { pt3dadd( 71.9536, -489.306, -42.9655, 0.48 ) }
    dend_29 { pt3dadd( 71.5591, -489.32, -43.8418, 1.08 ) }
    dend_29 { pt3dadd( 71.1529, -489.335, -44.7441, 0.48 ) }
    dend_29 { pt3dadd( 70.6433, -489.354, -45.8762, 0.96 ) }
    dend_29 { pt3dadd( 70.2122, -489.37, -46.8337, 0.48 ) }
    dend_29 { pt3dadd( 69.3709, -489.401, -48.7027, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 73.6492, -489.243, -39.1988, 0.96 ) }
    dend_28 { pt3dadd( 74.2092, -490.734, -40.5493, 0.96 ) }
    dend_28 { pt3dadd( 75.0789, -493.384, -42.8334, 0.48 ) }
    dend_28 { pt3dadd( 75.3884, -494.434, -43.6656, 0.48 ) }
    dend_28 { pt3dadd( 76.0402, -496.593, -45.2741, 0.84 ) }
    dend_28 { pt3dadd( 76.5234, -498.166, -46.4223, 0.6 ) }
    dend_28 { pt3dadd( 76.7614, -498.928, -46.969, 0.6 ) }
    dend_28 { pt3dadd( 77.355, -500.576, -48.1848, 0.96 ) }
    dend_28 { pt3dadd( 77.7767, -501.675, -48.9952, 0.96 ) }
    dend_28 { pt3dadd( 78.6941, -503.774, -50.644, 0.72 ) }
    dend_28 { pt3dadd( 79.7056, -505.783, -52.3219, 0.72 ) }
    dend_28 { pt3dadd( 80.7152, -507.331, -53.8553, 1.2 ) }
    dend_28 { pt3dadd( 81.7545, -508.773, -55.3738, 1.2 ) }
    dend_28 { pt3dadd( 82.445, -509.63, -56.3551, 1.2 ) }
    dend_28 { pt3dadd( 83.3457, -510.628, -57.6383, 1.08 ) }
    dend_28 { pt3dadd( 84.6243, -511.853, -59.4329, 0.84 ) }
    dend_28 { pt3dadd( 86.2278, -513.091, -61.5213, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 76.0755, -482.756, -33.7261, 0.72 ) }
    dend_26 { pt3dadd( 79.4387, -483.338, -31.8471, 0.72 ) }
    dend_26 { pt3dadd( 81.4514, -483.687, -30.7226, 0.72 ) }
    dend_26 { pt3dadd( 82.7467, -483.911, -29.999, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 76.0755, -482.756, -33.7261, 0.48 ) }
    dend_25 { pt3dadd( 76.2281, -485.431, -33.9308, 0.48 ) }
    dend_25 { pt3dadd( 76.2567, -486.937, -34.1042, 0.96 ) }
    dend_25 { pt3dadd( 76.2481, -487.634, -34.2026, 0.96 ) }
    dend_25 { pt3dadd( 76.1846, -489.325, -34.4726, 0.48 ) }
    dend_25 { pt3dadd( 76.124, -490.346, -34.6499, 0.48 ) }
    dend_25 { pt3dadd( 76.0181, -492.016, -34.9437, 0.96 ) }
    dend_25 { pt3dadd( 75.8821, -493.685, -35.2608, 0.96 ) }
    dend_25 { pt3dadd( 75.7742, -494.79, -35.4822, 0.96 ) }
    dend_25 { pt3dadd( 75.576, -496.438, -35.8508, 1.32 ) }
    dend_25 { pt3dadd( 75.3393, -498.087, -36.2556, 0.96 ) }
    dend_25 { pt3dadd( 75.2509, -498.733, -36.4133, 0.96 ) }
    dend_25 { pt3dadd( 75.1664, -499.51, -36.5888, 0.96 ) }
    dend_25 { pt3dadd( 75.0652, -500.789, -36.8468, 1.32 ) }
    dend_25 { pt3dadd( 75.0221, -502.138, -37.0791, 0.96 ) }
    dend_25 { pt3dadd( 75.0489, -503.613, -37.2861, 0.6 ) }
    dend_25 { pt3dadd( 75.1624, -504.703, -37.4508, 0.6 ) }
    dend_25 { pt3dadd( 75.4694, -506.036, -37.715, 1.32 ) }
    dend_25 { pt3dadd( 75.9695, -507.407, -38.052, 0.84 ) }
    dend_25 { pt3dadd( 76.4811, -508.537, -38.3577, 0.84 ) }
    dend_25 { pt3dadd( 76.7439, -509.045, -38.4939, 0.84 ) }
    dend_25 { pt3dadd( 77.8673, -511.062, -39.0554, 0.84 ) }
    dend_25 { pt3dadd( 79.0785, -513.158, -39.6579, 1.44 ) }
    dend_25 { pt3dadd( 80.3312, -515.385, -40.3391, 0.96 ) }
    dend_25 { pt3dadd( 80.7864, -516.338, -40.6212, 0.96 ) }
    dend_25 { pt3dadd( 81.2671, -517.648, -40.989, 0.96 ) }
    dend_25 { pt3dadd( 81.5092, -518.618, -41.2249, 0.96 ) }
    dend_25 { pt3dadd( 81.6182, -519.633, -41.4138, 0.96 ) }
    dend_25 { pt3dadd( 81.5674, -522.055, -41.8047, 0.72 ) }
    dend_25 { pt3dadd( 81.3025, -524.56, -42.181, 1.08 ) }
    dend_25 { pt3dadd( 81.0463, -526.219, -42.4232, 0.72 ) }
    dend_25 { pt3dadd( 80.7545, -527.779, -42.6446, 1.2 ) }
    dend_25 { pt3dadd( 80.3973, -529.579, -42.8782, 0.96 ) }
    dend_25 { pt3dadd( 79.8196, -532.411, -43.2055, 1.44 ) }
    dend_25 { pt3dadd( 79.4293, -534.348, -43.4051, 0.96 ) }
    dend_25 { pt3dadd( 79.2454, -535.453, -43.5582, 0.72 ) }
    dend_25 { pt3dadd( 78.8673, -538.204, -44.0131, 1.08 ) }
    dend_25 { pt3dadd( 78.6807, -539.846, -44.343, 0.6 ) }
    dend_25 { pt3dadd( 78.5582, -540.928, -44.5641, 0.6 ) }
    dend_25 { pt3dadd( 78.4049, -542.25, -44.832, 1.2 ) }
    dend_25 { pt3dadd( 77.953, -545.3, -45.4106, 0.72 ) }
    dend_25 { pt3dadd( 77.7417, -546.564, -45.6708, 1.08 ) }
    dend_25 { pt3dadd( 77.3495, -548.487, -46.0963, 0.96 ) }
    dend_25 { pt3dadd( 76.9042, -550.374, -46.5395, 0.72 ) }
    dend_25 { pt3dadd( 76.6351, -551.452, -46.7813, 0.72 ) }
    dend_25 { pt3dadd( 75.9177, -554.084, -47.32, 0.72 ) }
    dend_25 { pt3dadd( 75.2715, -556.066, -47.6579, 0.72 ) }
    dend_25 { pt3dadd( 74.9913, -556.929, -47.8227, 1.2 ) }
    dend_25 { pt3dadd( 74.6312, -558.145, -48.1218, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 5
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_65 nseg = 3
    dend_61 nseg = 7
    dend_40 nseg = 5
    dend_19 nseg = 3
    dend_77 nseg = 7
    dend_76 nseg = 3
    dend_72 nseg = 7
    dend_71 nseg = 3
    dend_68 nseg = 7
    dend_67 nseg = 7
    dend_62 nseg = 7
    dend_37 nseg = 5
    dend_20 nseg = 7
    dend_60 nseg = 5
    dend_59 nseg = 7
    dend_57 nseg = 3
    dend_44 nseg = 7
    dend_39 nseg = 9
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_8 nseg = 5
    dend_35 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 11
    dend_51 nseg = 7
    dend_46 nseg = 5
    dend_23 nseg = 9
    dend_50 nseg = 7
    dend_47 nseg = 3
    dend_48 nseg = 7
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_DBC_2bb1f65738_0_0


