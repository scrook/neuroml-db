// Cell: bNAC219_L5_BP_46b0f41def_0_0
/*
{
  "id" : "bNAC219_L5_BP_46b0f41def_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.32789, 8.5296, 2.89346, 0.83", "-6.51059, 10.9965, 3.37346, 1.11", "-8.38713, 12.45, 3.62314, 0.83", "-10.2103, 13.8499, 3.84686, 0.83", "-11.2897, 14.6481, 3.96945, 1.11", "-14.67, 17.1425, 4.36235, 1.11", "-20.716, 21.413, 5.05688, 0.83", "-22.8941, 22.8929, 5.28623, 0.83", "-24.619, 24.0299, 5.42869, 0.83", "-26.301, 25.1568, 5.552, 0.83", "-27.6702, 26.0856, 5.61853, 0.55", "-28.6993, 26.7145, 5.68606, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.85932, 6.35145, -6.30002, 0.55", "7.90438, 7.01017, -6.98004, 0.55", "9.67133, 7.17645, -7.87985, 0.83", "12.4678, 7.3534, -9.55131, 0.55", "13.8178, 7.43883, -10.3581, 1.38", "17.1369, 7.64886, -12.342, 0.55", "18.5506, 7.57773, -13.2886, 0.83", "25.8633, 6.27339, -18.607, 0.55", "26.5708, 6.09798, -19.1921, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.68245, -10.3395, 3.17963, 1.11", "-0.727605, -14.3235, 4.60788, 1.11", "-0.745993, -15.946, 5.18955, 0.83", "-0.770425, -18.1016, 5.96233, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.835145, 9.21282, -1.34088, 1.11", "0.893076, 10.6358, -1.32897, 1.11", "0.979109, 12.9574, -1.22497, 1.38", "0.986075, 13.0867, -1.2168, 1.38", "1.16816, 14.6867, -1.09684, 0.83", "1.42683, 16.3785, -0.877728, 0.83", "1.87562, 18.2888, -0.394825, 0.83", "2.13304, 19.0134, -0.120062, 0.83", "2.3884, 19.5381, 0.133724, 1.11", "3.13838, 20.8163, 0.790931, 0.55", "4.01089, 22.1504, 1.57575, 0.83", "5.15857, 23.5227, 2.47001, 0.55", "5.7456, 24.0928, 2.8767, 0.83", "6.56491, 24.8648, 3.50957, 0.55", "7.57823, 25.8468, 4.36493, 0.55", "8.99082, 27.3245, 5.66956, 0.55", "10.5472, 29.0137, 7.11, 0.55", "11.5252, 30.1099, 8.18332, 0.55", "12.7192, 31.4959, 9.69579, 0.55", "12.9667, 31.7739, 10.0386, 0.83", "13.6189, 32.5084, 11.005, 0.55", "14.1693, 33.0811, 11.7642, 0.83", "15.4344, 34.6456, 13.5638, 0.55", "15.9144, 35.217, 14.0913, 0.83", "16.367, 35.6381, 14.4511, 0.55", "16.818, 36.0007, 14.7287, 0.83", "17.8209, 36.6748, 15.2349, 0.83", "19.1498, 37.5926, 15.7826, 0.83", "19.9669, 38.1993, 16.0282, 0.55", "20.5897, 38.7243, 16.2189, 0.55", "22.2228, 40.0807, 16.6939, 0.83", "23.2785, 40.9506, 16.9571, 0.55", "24.8825, 42.2248, 17.29, 0.55", "26.3535, 43.2932, 17.535, 0.55", "27.67, 44.1983, 17.7181, 0.55", "29.3352, 45.2587, 17.8727, 0.55", "30.3538, 45.7783, 17.9336, 0.55", "31.0502, 46.0704, 17.891, 0.55", "31.9769, 46.2889, 17.7559, 0.55", "33.3622, 46.3897, 17.4406, 0.55", "34.2266, 46.3432, 17.2106, 0.55", "35.4887, 46.241, 16.9631, 0.55", "37.8896, 46.1227, 16.7063, 0.55", "39.7714, 46.1169, 16.639, 0.55", "41.764, 46.2058, 16.6871, 0.55", "43.0401, 46.3066, 16.819, 0.55", "46.3515, 46.8694, 17.3811, 0.55", "48.3084, 47.3539, 17.8621, 0.55", "49.7734, 47.814, 18.3611, 0.55", "50.6628, 48.2425, 18.6994, 0.55", "51.6934, 48.8797, 19.0864, 0.55", "53.4394, 50.1357, 19.5841, 0.55", "53.8407, 50.4382, 19.6423, 0.55", "54.9931, 51.2469, 19.7326, 0.55", "56.0518, 52.1083, 19.8116, 0.83", "56.6296, 52.5861, 19.8454, 0.55", "57.4952, 53.4061, 19.8616, 0.83", "62.0359, 57.7853, 21.157, 0.83", "65.9854, 62.807, 21.9678, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-28.6993, 26.7145, 5.68606, 0.55", "-30.6052, 27.5868, 4.80353, 0.55", "-32.6776, 28.5353, 3.84388, 0.55", "-35.1786, 29.6799, 2.68578, 0.55", "-37.2438, 30.6251, 1.72951, 0.83", "-38.9743, 31.4171, 0.928155, 0.55", "-42.1866, 32.8873, -0.559277, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-28.6993, 26.7145, 5.68606, 0.55", "-31.1687, 27.1787, 5.37899, 0.55", "-33.7983, 27.5863, 5.31362, 0.55", "-36.7805, 28.0427, 5.31238, 0.55", "-41.1024, 28.6509, 5.70756, 0.55", "-44.7207, 29.0508, 6.29477, 0.55", "-48.5167, 29.4091, 7.07255, 0.55", "-52.1887, 29.5007, 8.21834, 0.55", "-55.3518, 29.2665, 9.50821, 0.55", "-59.296, 28.6918, 11.5367, 0.55", "-61.0126, 28.3122, 12.6574, 0.55", "-62.8672, 27.8812, 13.9482, 0.55", "-66.1377, 26.8749, 16.0724, 0.55", "-67.8765, 26.3487, 16.9275, 0.55", "-69.6977, 25.7418, 17.8117, 0.55", "-71.8622, 25.0507, 18.6427, 0.55", "-74.2139, 24.3498, 19.4816, 0.55", "-77.5699, 23.3423, 20.6052, 0.55", "-82.0497, 22.3034, 21.7048, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "26.5708, 6.09798, -19.1921, 0.55", "32.9558, 8.0643, -20.5885, 0.55", "36.659, 8.94847, -21.9063, 0.55", "40.3245, 9.65261, -23.2511, 0.55", "42.8347, 10.0332, -24.1635, 0.55", "46.5078, 10.5058, -25.4639, 0.55", "54.1408, 11.3249, -28.3917, 0.55", "62.8146, 12.1663, -32.2881, 0.55", "67.0414, 12.2953, -34.4539, 0.55", "69.3112, 12.3005, -35.7586, 0.55", "71.8014, 12.3126, -37.2901, 0.55", "76.2517, 12.2121, -39.9989, 0.55", "77.8743, 12.0785, -41.0306, 0.55", "84.7442, 11.6527, -45.9317, 0.55", "89.6095, 11.4077, -49.7606, 0.55", "92.409, 11.3161, -52.0441, 0.55", "95.2025, 11.2005, -54.3181, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.5708, 6.09798, -19.1921, 0.83", "28.5842, 7.40745, -19.2391, 0.83", "29.7355, 8.15366, -19.3198, 0.55", "31.4307, 9.2869, -19.5866, 0.83", "32.5701, 10.0779, -19.802, 0.55", "34.14, 11.2122, -20.0763, 0.83", "36.0264, 12.6156, -20.3357, 0.55", "36.9769, 13.2509, -20.4244, 0.55", "39.1707, 14.4125, -20.4636, 0.83", "41.166, 15.2286, -20.2294, 0.55", "42.2806, 15.6755, -19.9893, 0.83", "43.9502, 16.3875, -19.4506, 0.55", "46.3439, 17.4613, -18.3644, 0.55", "49.6708, 18.7812, -16.677, 0.55", "52.8437, 19.9286, -14.8409, 0.55", "55.3576, 20.8113, -13.3394, 0.55", "59.5014, 22.2869, -10.8421, 0.55", "62.5299, 23.457, -8.94881, 0.55", "64.3533, 24.3218, -7.74031, 0.55", "67.7011, 26.2682, -5.49062, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.770425, -18.1016, 5.96233, 0.83", "-0.711428, -21.4108, 5.82747, 0.83", "-0.653946, -24.6348, 5.69607, 0.83", "-0.589769, -28.2345, 5.54937, 0.83", "-0.556256, -30.1142, 5.47276, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.770425, -18.1016, 5.96233, 0.55", "-0.584852, -18.6182, 6.32427, 0.55", "-0.421362, -19.2511, 6.79457, 0.55", "-0.33473, -20.0812, 7.44309, 0.55", "-0.323855, -20.4039, 7.70376, 0.83", "-0.372888, -21.2278, 8.46284, 0.55", "-0.433354, -21.6535, 8.8627, 0.55", "-0.568873, -22.4813, 9.67541, 0.83", "-0.705503, -23.0962, 10.3179, 0.55", "-0.863454, -23.6035, 10.8395, 0.55", "-1.18419, -24.5646, 11.8098, 0.55", "-1.43895, -25.3305, 12.5742, 0.55", "-1.63075, -25.9445, 13.1957, 0.55", "-1.7981, -26.5963, 13.8352, 0.28", "-1.84477, -26.8677, 14.0913, 0.55", "-1.91762, -27.3689, 14.5358, 0.28", "-1.92324, -28.1508, 15.1084, 0.55", "-2.57314, -30.755, 17.1499, 0.55", "-3.29327, -33.1617, 19.3995, 0.55", "-3.8678, -35.1394, 22.0697, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-42.1866, 32.8873, -0.559277, 0.55", "-44.5661, 33.2493, 1.10017, 0.55", "-45.5461, 33.3601, 1.93762, 0.83", "-46.6662, 33.4483, 3.09151, 0.55", "-47.5109, 33.5266, 4.06165, 0.83", "-49.7315, 33.8188, 6.57046, 0.55", "-50.5719, 33.9464, 7.52594, 0.28", "-51.9549, 34.1941, 9.25123, 0.55", "-53.8125, 34.5379, 11.5546, 0.55", "-55.2336, 34.7899, 13.229, 0.55", "-57.1419, 35.1171, 15.3966, 0.28", "-57.6476, 35.1976, 15.8914, 0.55", "-58.7011, 35.3725, 16.8696, 0.28", "-59.428, 35.5024, 17.4569, 0.55", "-60.9314, 35.7383, 18.5173, 0.28", "-61.8188, 35.8178, 19.0969, 0.55", "-63.3773, 35.8369, 20.1485, 0.28", "-64.4295, 35.8373, 20.8162, 0.55", "-70.3823, 35.681, 27.997, 0.55", "-75.6471, 34.7229, 35.6382, 0.55", "-80.6402, 32.8975, 43.3037, 0.55", "-85.616, 29.9601, 50.6274, 0.55", "-89.4596, 27.5438, 58.7768, 0.55", "-94.0432, 25.4031, 66.6146, 0.55", "-98.7492, 24.7998, 74.6467, 0.55", "-103.416, 23.4511, 82.6107, 0.55", "-107.901, 22.7507, 90.7604, 0.55", "-111.922, 21.959, 99.1402, 0.55", "-114.971, 20.1799, 107.775, 0.55", "-118.114, 19.2727, 116.511, 0.55", "-121.38, 17.4099, 125.048, 0.55", "-123.518, 15.2262, 133.862, 0.55", "-124.067, 13.7761, 143.061, 0.55", "-124.573, 10.5722, 151.808, 0.55", "-123.747, 7.2349, 160.48, 0.55", "-123.407, 4.28643, 169.324, 0.55", "-124.059, 1.99267, 178.342, 0.55", "-126.696, 1.07012, 187.243, 0.55", "-128.495, -0.851409, 196.192, 0.55", "-128.542, -1.12394, 205.517, 0.55", "-130.111, -0.776126, 214.706, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-42.1866, 32.8873, -0.559277, 0.55", "-43.6712, 33.3429, -2.17363, 0.55", "-44.8469, 33.8582, -3.99719, 0.55", "-45.962, 34.5306, -5.94337, 0.55", "-46.6603, 34.9516, -7.16205, 0.55", "-47.9341, 35.7196, -9.38505, 0.83", "-48.866, 36.2814, -11.0114, 0.55", "-49.9621, 37.0402, -13.4098, 0.83", "-50.3946, 37.5843, -14.7754, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-82.0497, 22.3034, 21.7048, 0.28", "-83.2686, 20.1222, 21.1937, 0.28", "-83.8514, 19.1874, 20.8935, 0.28", "-84.6101, 17.8671, 20.4206, 0.55", "-85.2359, 16.706, 20.0155, 0.28", "-86.1592, 14.9361, 19.4212, 0.55", "-88.7288, 9.73105, 17.7625, 0.28", "-89.5682, 7.91058, 17.0345, 0.55", "-90.8405, 5.11024, 15.8176, 0.28", "-91.5721, 3.43778, 15.0137, 0.55", "-92.0775, 2.28616, 14.4314, 0.28", "-92.6536, 0.964027, 13.7742, 0.55", "-94.3951, -3.45252, 11.6929, 0.28", "-94.943, -4.78684, 11.0152, 0.55", "-95.9016, -6.8196, 9.76321, 0.28", "-96.6902, -8.11674, 8.84328, 0.28", "-97.3973, -8.98115, 8.19249, 0.55", "-99.8591, -11.4066, 6.42624, 0.28", "-101.003, -12.3883, 5.72957, 0.55", "-103.801, -14.618, 3.9954, 0.28", "-106.6, -16.5877, 2.40364, 0.28", "-109.645, -18.4609, 0.77609, 0.28", "-111.039, -19.1648, 0.150022, 0.55", "-117.759, -27.1214, -4.24175, 0.55", "-125.229, -35.2762, -6.57627, 0.55", "-132.55, -42.9219, -10.541, 0.55", "-140.056, -49.8256, -15.4138, 0.55", "-147.657, -55.8767, -21.1907, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-82.0497, 22.3034, 21.7048, 0.55", "-82.8627, 22.2457, 21.791, 0.55", "-85.1623, 22.0665, 22.3303, 0.55", "-86.028, 21.9742, 22.5773, 0.55", "-88.0658, 21.6941, 23.1853, 0.55", "-91.1957, 21.3044, 23.9722, 0.55", "-92.8205, 21.1534, 24.3557, 0.28", "-95.349, 20.8669, 24.8997, 0.55", "-97.2262, 20.6202, 25.2342, 0.55", "-98.019, 20.5106, 25.3768, 0.28", "-102.774, 19.8516, 26.2259, 0.55", "-104.996, 19.4505, 26.4812, 0.28", "-107.989, 18.9093, 26.6504, 0.28", "-110.565, 18.4899, 26.6483, 0.55", "-120.636, 18.1804, 28.9098, 0.55", "-130.392, 17.5372, 32.2305, 0.55", "-139.633, 15.773, 36.4872, 0.55", "-148.584, 15.6819, 41.635, 0.55", "-156.289, 15.1123, 48.4854, 0.55", "-162.518, 14.9931, 56.7199, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "95.2025, 11.2005, -54.3181, 0.55", "100.221, 12.9098, -58.2619, 0.55", "101.802, 13.3914, -59.615, 0.55", "103.778, 13.9266, -61.292, 0.55", "107.36, 14.8886, -64.5491, 0.55", "111.089, 15.7477, -68.0575, 0.55", "112.905, 16.0155, -69.7423, 0.83", "114.393, 16.1437, -71.2543, 0.55", "115.5, 16.1576, -72.5094, 0.83", "118.145, 15.8277, -75.7645, 0.55", "120.311, 15.3462, -78.4831, 0.55", "122.803, 14.7611, -81.4837, 0.55", "125.582, 14.1992, -84.8747, 0.55", "127.443, 13.7814, -87.2022, 0.55", "129.541, 13.3106, -89.8984, 0.55", "131.356, 12.9851, -92.3534, 0.55", "132.502, 12.9065, -94.0446, 0.55", "133.936, 12.8601, -97.4287, 0.55", "134.71, 12.7729, -99.55, 0.55", "135.351, 12.558, -102.375, 0.55", "136.204, 12.0661, -107.161, 0.55", "136.374, 11.9166, -108.244, 0.28", "138.581, 9.94843, -121.424, 0.28", "139.343, 9.3904, -125.292, 0.83", "142.366, 7.15442, -139.038, 0.83", "143.923, 5.85853, -145.449, 0.83", "144.679, 5.22409, -148.056, 0.55", "145.56, 4.58654, -150.601, 0.55", "148.059, 3.24727, -155.337, 0.55", "150.76, 1.99966, -159.507, 0.28", "151.597, 1.69482, -159.778, 0.55", "153.455, 1.08683, -159.685, 0.28", "154.611, 0.776335, -159.45, 0.55", "155.815, 0.425745, -159.103, 0.28", "157.266, 0.0711357, -158.612, 0.55", "159.442, -0.319777, -158.099, 0.28", "161.184, -0.68172, -157.75, 0.55", "163.119, -0.93732, -157.505, 0.28", "165.748, -1.25183, -157.405, 0.55", "168.698, -1.51765, -157.465, 0.55", "171.293, -1.70272, -157.686, 0.28", "174.884, -1.90542, -158.189, 0.55", "181.096, -2.01554, -159.703, 0.55", "183.846, -1.88734, -160.69, 0.55", "185.029, -1.76995, -161.235, 0.83", "187.282, -1.50899, -162.481, 0.55", "188.848, -1.25425, -163.437, 0.83", "193.069, -0.452855, -166.045, 0.55", "195.635, -0.13419, -167.723, 0.28", "196.713, -0.0800084, -168.314, 0.55", "199.653, -0.240271, -169.633, 0.28", "200.678, -0.399045, -170.036, 0.55", "202.786, -0.89425, -170.55, 0.28", "204.923, -1.64831, -170.718, 0.55", "209.234, -3.48645, -170.309, 0.28", "211.219, -4.44544, -169.913, 0.55", "214.162, -6.06111, -169.182, 0.28", "217.882, -8.10137, -168.119, 0.55", "220.575, -9.54358, -167.303, 0.55", "225.249, -11.9002, -165.795, 0.28", "227.17, -12.7603, -165.329, 0.55", "230.491, -14.0127, -164.876, 0.28", "233.813, -14.9793, -164.633, 0.55", "235.644, -15.2745, -164.736, 0.28", "237.31, -15.3036, -164.938, 0.55", "242.025, -15.0601, -165.921, 0.28", "245.405, -14.6481, -166.655, 0.28", "248.355, -14.0724, -167.314, 0.55", "251.615, -13.3299, -168.197, 0.28", "252.439, -13.0946, -168.387, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "95.2025, 11.2005, -54.3181, 0.55", "96.0248, 9.00473, -55.557, 0.55", "96.5565, 7.13524, -56.4783, 0.28", "97.0389, 5.43133, -57.1795, 0.55", "98.2425, 1.83884, -58.6982, 0.28", "98.3129, 1.61005, -58.8253, 0.55", "98.7157, 0.409242, -59.587, 0.28", "98.9642, -0.604033, -60.3711, 0.55", "99.1689, -1.6757, -61.3055, 0.28", "99.4095, -3.14616, -62.6441, 0.55", "100.01, -6.83469, -65.9398, 0.55", "100.523, -10.2043, -69.0001, 0.55", "100.908, -12.9007, -71.4498, 0.55", "101.24, -15.5537, -73.8138, 0.55", "101.323, -16.2377, -74.3973, 0.28", "101.43, -16.9625, -74.9633, 0.55", "101.664, -17.9508, -75.6589, 0.28", "102.252, -19.6931, -76.7492, 0.55", "103.641, -22.9657, -78.3212, 0.55", "104.399, -24.7141, -79.0103, 0.28", "105.07, -26.5079, -79.7889, 0.55", "105.833, -29.0465, -80.9736, 0.28", "106.322, -31.1129, -81.9775, 0.55", "106.928, -34.2172, -83.4851, 0.28", "107.575, -37.4205, -84.9493, 0.55", "108.456, -42.0808, -87.1149, 0.28", "108.875, -44.5713, -88.2774, 0.55", "109.264, -47.1271, -89.5246, 0.28", "109.588, -49.3886, -90.7566, 0.28", "110.09, -52.2226, -92.5292, 0.55", "110.724, -54.8263, -94.1089, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "67.7011, 26.2682, -5.49062, 0.55", "70.5451, 26.1629, -4.56527, 0.55", "72.6357, 25.9608, -4.06899, 0.55", "77.2327, 25.411, -3.20707, 0.55", "79.3153, 25.0793, -2.99111, 0.55", "81.5967, 24.7387, -2.87928, 0.55", "84.6764, 24.2849, -2.9526, 0.55", "87.9502, 23.6531, -3.30932, 0.55", "89.6838, 23.256, -3.68034, 0.55", "93.2434, 22.3415, -4.89287, 0.55", "94.8865, 21.9219, -5.50352, 0.55", "98.7446, 20.8466, -7.01244, 0.55", "101.358, 20.0232, -7.99132, 0.55", "103.274, 19.4249, -8.6265, 0.83", "106.334, 18.3678, -9.58368, 0.55", "109.324, 17.2184, -10.3788, 0.83", "111.855, 16.1511, -10.9418, 0.55", "114.099, 15.259, -11.3375, 0.55", "115.369, 14.8212, -11.5073, 0.83", "118.324, 13.8431, -11.7551, 0.28", "119.786, 13.4367, -11.8017, 0.28", "121.206, 12.9392, -11.8979, 0.28", "122.742, 12.4398, -12.0175, 0.28", "125.203, 11.6745, -12.2684, 0.28", "126.191, 11.385, -12.3435, 0.55", "128.537, 10.7681, -12.3049, 0.55", "132.744, 9.66567, -12.019, 0.55", "133.905, 9.34182, -11.883, 0.55", "134.939, 9.02924, -11.7104, 0.83", "137.17, 8.46025, -11.1726, 0.55", "139.107, 7.97655, -10.6752, 0.55", "140.937, 7.52925, -10.1985, 0.55", "142.357, 7.14889, -9.86363, 0.55", "144.618, 6.36363, -9.40658, 0.55", "147.295, 5.17076, -8.96144, 0.55", "151.476, 2.78595, -8.45349, 0.55", "153.782, 1.10935, -8.24371, 0.55", "155.788, -0.703643, -8.08578, 0.28", "156.389, -1.38154, -8.04412, 0.55", "157.721, -3.28986, -7.93272, 0.28", "158.869, -5.43389, -7.78812, 0.55", "159.942, -8.07516, -7.42497, 0.55", "160.66, -9.79155, -7.10421, 0.28", "160.921, -10.3907, -6.96101, 0.55", "161.595, -11.873, -6.58287, 0.28", "162.514, -13.7887, -6.04126, 0.55", "164.901, -18.3697, -4.60795, 0.55", "166.142, -20.6649, -3.83348, 0.55", "167.293, -22.7632, -3.10339, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "67.7011, 26.2682, -5.49062, 0.55", "69.7487, 26.6272, -3.86196, 0.55", "70.4065, 26.7398, -3.3766, 0.55", "72.8668, 27.0389, -1.67744, 0.55", "75.6097, 27.428, 0.261507, 0.55", "79.1226, 27.9186, 2.84192, 0.55", "80.0931, 28.0553, 3.54805, 0.55", "81.838, 28.2321, 4.79668, 0.55", "83.7511, 28.471, 6.09225, 0.55", "85.9753, 28.812, 7.49729, 0.55", "88.0696, 29.1635, 8.82931, 0.55", "89.2175, 29.4096, 9.50631, 0.55", "90.5634, 29.7382, 10.2993, 0.55", "92.2268, 30.1939, 11.2502, 0.83", "94.9603, 30.9345, 12.5162, 0.55", "96.7765, 31.3522, 13.2649, 0.83", "99.3064, 31.815, 14.215, 0.55", "100.086, 31.9143, 14.4949, 0.55", "102.512, 32.1016, 15.3109, 0.55", "106.869, 32.1738, 16.593, 0.55", "110.071, 32.0494, 17.4562, 0.55", "112.61, 31.8335, 18.1974, 0.55", "115.202, 31.4776, 19.0397, 0.55", "115.748, 31.3882, 19.2194, 0.28", "116.857, 31.1628, 19.5806, 0.83", "121.414, 30.1713, 21.0891, 0.55", "124.603, 29.4816, 22.083, 0.55", "127.216, 28.981, 22.9652, 0.55", "128.777, 28.6772, 23.5071, 0.83", "130.005, 28.4558, 23.9363, 0.28", "131.119, 28.2568, 24.315, 0.55", "139.664, 28.8058, 28.5465, 0.55", "148.827, 27.9356, 31.1006, 0.55", "157.885, 28.2149, 34.1174, 0.55", "165.985, 27.1087, 39.0567, 0.55", "173.561, 24.7057, 44.3542, 0.55", "181.956, 20.9941, 46.9957, 0.55", "190.278, 16.4179, 48.0136, 0.55", "199.372, 13.5426, 48.5212, 0.55", "208.36, 10.5146, 49.6579, 0.55", "217.686, 8.52959, 50.2225, 0.55", "226.932, 6.9479, 52.0203, 0.55", "235.646, 3.73916, 54.2584, 0.55", "244.505, 2.19163, 57.4765, 0.55", "252.896, 2.01218, 62.0361, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.556256, -30.1142, 5.47276, 1.38", "2.82877, -33.0619, 5.52309, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.556256, -30.1142, 5.47276, 0.55", "-1.69344, -31.7224, 5.25294, 0.55", "-2.93299, -33.7707, 5.01324, 0.55", "-3.91586, -35.1367, 4.83659, 0.55", "-4.71387, -36.2784, 4.54415, 0.55", "-6.42226, -38.6487, 3.71566, 0.55", "-7.61709, -40.2354, 3.09491, 0.55", "-8.66853, -41.6572, 2.49582, 0.55", "-11.3827, -45.1279, 0.958007, 0.55", "-14.6603, -49.1549, -0.860442, 0.55", "-17.1917, -52.2085, -2.32108, 0.55", "-18.7979, -54.2103, -3.2804, 0.55", "-20.6355, -56.6063, -4.37357, 0.55", "-22.9492, -60.0215, -5.72058, 0.55", "-24.2832, -62.4243, -6.47084, 0.55", "-25.935, -65.8618, -7.21676, 0.55", "-27.2349, -69.0669, -7.74445, 0.55", "-28.5058, -73.0444, -8.24385, 0.55", "-29.659, -77.6928, -8.64188, 0.55", "-30.2247, -81.2258, -8.79127, 0.55", "-30.4152, -82.9772, -8.72952, 0.55", "-30.6713, -87.0788, -8.31489, 0.55", "-30.8658, -90.9128, -7.81488, 0.55", "-30.9292, -94.7641, -6.99095, 0.55", "-31.0136, -96.9753, -6.40557, 0.55", "-31.2871, -103.81, -4.34196, 0.55", "-31.3124, -104.314, -4.18211, 0.55", "-31.4266, -107.394, -3.11719, 0.55", "-31.9084, -112.918, -1.14129, 0.55", "-32.0568, -114.765, -0.58958, 0.55", "-32.2536, -117.656, -0.223786, 0.55", "-32.248, -118.728, -0.320778, 0.55", "-31.9293, -122.344, -1.27818, 0.55", "-31.4909, -124.677, -2.35274, 0.55", "-30.5324, -128.386, -4.78309, 0.55", "-29.1048, -132.911, -8.06183, 0.28", "-28.7023, -134.028, -9.01761, 0.55", "-28.0547, -135.72, -10.6128, 0.28", "-27.9565, -135.976, -10.867, 0.55", "-27.4532, -137.374, -12.1431, 0.28", "-27.3377, -137.851, -12.4755, 0.55", "-26.8941, -140.336, -13.7451, 0.28", "-26.7775, -141.184, -14.1736, 0.55", "-26.4997, -143.637, -15.283, 0.28", "-26.4095, -144.409, -15.6287, 0.55", "-26.1287, -147.075, -16.784, 0.28", "-25.992, -148.301, -17.3202, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.8678, -35.1394, 22.0697, 0.55", "-7.56268, -42.2306, 29.1695, 0.55", "-12.2293, -48.341, 36.6012, 0.55", "-16.6745, -55.1585, 43.5371, 0.55", "-21.3131, -62.0018, 50.3191, 0.55", "-24.9498, -70.0901, 56.2938, 0.55", "-28.4361, -77.8468, 62.7764, 0.55", "-30.9348, -87.3017, 67.1014, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.8678, -35.1394, 22.0697, 0.55", "-2.86234, -45.2516, 31.5871, 0.55", "-1.44266, -56.897, 39.0847, 0.55", "-2.26299, -68.5623, 46.6406, 0.55", "-3.96462, -80.8548, 52.9529, 0.55", "-5.0948, -93.1163, 59.4509, 0.55", "-6.06144, -104.893, 66.8144, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-50.3946, 37.5843, -14.7754, 0.83", "-50.4924, 38.4326, -16.7377, 0.83", "-50.7479, 40.5763, -21.1989, 0.55", "-50.8246, 41.5423, -23.0076, 0.83", "-50.873, 42.6118, -24.8422, 0.55", "-50.8641, 43.7899, -26.512, 0.55", "-50.8262, 44.4168, -27.2534, 0.28", "-50.7996, 44.8801, -27.6079, 0.55", "-50.5573, 46.5528, -28.4434, 0.28", "-50.4246, 47.28, -28.7693, 0.55", "-49.9673, 49.8469, -29.7916, 0.28", "-49.6403, 51.9083, -30.5198, 0.55", "-49.2591, 55.1719, -31.5187, 0.28", "-49.01, 58.0654, -32.3173, 0.28", "-48.9552, 59.7012, -32.7096, 0.55", "-49.007, 61.648, -33.1421, 0.28", "-49.088, 62.5847, -33.3203, 0.55", "-49.421, 64.762, -33.7995, 0.28", "-49.7575, 66.1935, -34.164, 0.28", "-50.1292, 67.5866, -34.5545, 0.28", "-50.2982, 68.3202, -34.7712, 0.55", "-50.841, 71.2566, -35.7581, 0.28", "-51.3843, 74.7074, -37.0208, 0.55", "-51.5554, 75.8967, -37.4663, 0.55", "-51.7393, 77.0988, -37.8826, 0.55", "-52.2788, 79.645, -38.7698, 0.55", "-52.7523, 81.309, -39.3573, 0.28", "-53.0085, 81.9392, -39.5676, 0.55", "-53.8149, 83.6632, -40.0682, 0.28", "-54.7692, 85.4769, -40.6504, 0.55", "-56.4177, 88.0593, -41.5187, 0.28", "-57.2362, 89.1298, -41.8824, 0.28", "-58.6153, 90.5737, -42.4817, 0.55", "-60.1829, 92.0533, -43.1579, 0.28", "-60.4704, 92.2827, -43.2657, 0.55", "-61.5103, 93.007, -43.6098, 0.28", "-65.0886, 95.3299, -44.6649, 0.55", "-70.1308, 98.1022, -46.1484, 0.28", "-71.0789, 98.5442, -46.4511, 0.55", "-73.6968, 99.6561, -47.2867, 0.28", "-74.8041, 100.101, -47.6579, 0.28", "-75.779, 100.452, -48.0111, 0.55", "-78.699, 101.122, -49.119, 0.28", "-80.7484, 101.442, -49.7697, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-50.3946, 37.5843, -14.7754, 0.55", "-50.5587, 38.4491, -15.0105, 0.55", "-50.6624, 38.9672, -15.099, 0.28", "-50.7993, 39.3508, -15.0617, 0.55", "-51.1136, 40.2319, -14.9758, 0.28", "-51.3344, 40.8507, -14.9156, 0.55", "-51.7414, 41.9916, -14.8045, 0.28", "-52.0063, 42.6184, -14.6339, 0.55", "-52.9947, 44.1822, -13.6709, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-147.657, -55.8767, -21.1907, 0.55", "-153.379, -62.5743, -25.3325, 0.55", "-157.593, -69.8114, -30.2938, 0.55", "-161.1, -75.9335, -36.9996, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-147.657, -55.8767, -21.1907, 0.55", "-151.923, -60.6741, -24.3087, 0.55", "-155.44, -65.5445, -28.161, 0.55", "-158.666, -70.5191, -32.1333, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-162.518, 14.9931, 56.7199, 0.55", "-172.382, 15.1137, 63.3185, 0.55", "-182.844, 16.6442, 68.7097, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-162.518, 14.9931, 56.7199, 0.55", "-173.609, 13.524, 60.1986, 0.55", "-184.683, 13.9661, 64.0003, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "110.724, -54.8263, -94.1089, 0.28", "118.928, -58.923, -104.861, 0.28", "119.713, -59.3933, -105.813, 0.55", "121.039, -60.1874, -107.421, 0.28", "122.155, -60.856, -108.774, 0.28", "123.633, -61.7411, -110.566, 0.55", "125.581, -62.908, -112.929, 0.55", "127.762, -65.0171, -114.023, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "110.724, -54.8263, -94.1089, 0.55", "111.37, -55.8223, -95.1496, 0.55", "111.573, -56.2645, -95.6233, 0.28", "111.88, -57.019, -96.4575, 0.55", "112.556, -58.6812, -98.2953, 0.28", "113.024, -59.8331, -99.5688, 0.55", "113.818, -61.7847, -101.727, 0.28", "114.741, -64.152, -104.576, 0.28", "115.117, -65.2362, -105.916, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "167.293, -22.7632, -3.10339, 0.28", "169.189, -24.7836, -1.30402, 0.28", "171.552, -27.3442, 1.3376, 0.28", "173.036, -28.9717, 3.13545, 0.55", "173.929, -29.8369, 4.19434, 0.28", "174.402, -30.3006, 4.77008, 0.28", "176.757, -32.6109, 7.56422, 0.55", "177.291, -33.0819, 8.27981, 0.28", "178.526, -34.2826, 10.2773, 0.55", "179.586, -35.3585, 11.9444, 0.28", "180.521, -36.2381, 13.2808, 0.55", "181.625, -37.3364, 14.7784, 0.55", "183.418, -39.221, 16.8425, 0.55", "183.852, -39.6941, 17.326, 0.55", "185.406, -41.4789, 19.0991, 0.28", "186.008, -42.2226, 19.7955, 0.55", "186.854, -43.1672, 20.688, 0.28", "188.055, -44.5435, 21.8769, 0.55", "190.095, -46.8765, 23.3734, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "167.293, -22.7632, -3.10339, 0.55", "164.963, -22.7527, -3.46789, 0.55", "163.07, -22.7442, -3.7639, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.82877, -33.0619, 5.52309, 0.83", "2.98882, -33.3431, 5.52043, 0.83", "4.76871, -35.8025, 5.69998, 0.83", "6.34559, -37.9582, 5.70661, 0.55", "7.60361, -39.6781, 5.7119, 0.55", "10.2775, -43.3336, 5.72314, 0.83", "13.5209, -47.7676, 5.73677, 0.55", "15.2771, -50.0832, 5.79954, 0.83", "18.3371, -53.7444, 6.10514, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.82877, -33.0619, 5.52309, 0.55", "3.40758, -34.1144, 2.53003, 0.55", "4.02886, -35.2442, -0.682645, 0.55", "4.76228, -36.5778, -4.47524, 0.55", "5.6529, -38.1973, -9.08068, 0.55", "6.1583, -39.1163, -11.6941, 0.55", "6.25983, -39.3009, -12.2191, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.06144, -104.893, 66.8144, 0.55", "-5.9377, -111.768, 71.814, 0.55", "-4.56424, -119.004, 76.0587, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.06144, -104.893, 66.8144, 0.55", "-6.65469, -113.913, 71.9683, 0.55", "-7.72378, -122.719, 77.4084, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.9947, 44.1822, -13.6709, 0.28", "-54.0305, 46.8612, -12.0396, 0.28", "-54.3887, 47.9068, -11.3362, 0.55", "-55.3856, 50.9507, -9.26116, 0.28", "-55.9225, 52.4202, -8.34156, 0.55", "-57.4369, 56.363, -5.94744, 0.28", "-58.9761, 60.3703, -3.51414, 0.55", "-61.5046, 66.7596, 0.649054, 0.28", "-62.0425, 68.1289, 1.53341, 0.55", "-63.2557, 71.2543, 3.34886, 0.28", "-63.7266, 72.5318, 4.04169, 0.55", "-69.8095, 81.8023, 11.3049, 0.55", "-77.7126, 91.4989, 15.6887, 0.55", "-83.7957, 101.981, 21.058, 0.55", "-88.358, 113.747, 25.1118, 0.55", "-94.4829, 124.851, 28.9715, 0.55", "-101.206, 134.563, 34.9852, 0.55", "-106.505, 143.888, 42.7736, 0.55", "-110.067, 152.469, 52.2281, 0.55", "-113.798, 161.621, 61.0609, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.9947, 44.1822, -13.6709, 0.55", "-55.5535, 43.8309, -11.2496, 0.55", "-56.8826, 43.5955, -9.97595, 0.28", "-57.8717, 43.4204, -9.02812, 0.55", "-58.696, 43.2744, -8.23814, 0.28", "-59.2734, 43.1721, -7.68481, 0.55", "-60.8655, 42.8902, -6.15904, 0.28", "-61.9713, 42.5436, -5.25635, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-161.1, -75.9335, -36.9996, 0.55", "-164.4, -82.9411, -38.417, 0.55", "-167.566, -90.1296, -38.9697, 0.55", "-170.116, -97.3251, -40.8994, 0.55", "-173.472, -104.39, -41.8099, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-161.1, -75.9335, -36.9996, 0.55", "-166.431, -80.2086, -45.7986, 0.55", "-171.27, -82.9001, -55.4657, 0.55", "-176.988, -86.9919, -64.1076, 0.55", "-184.845, -89.4855, -71.6015, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-158.666, -70.5191, -32.1333, 0.55", "-161.841, -72.2409, -36.9366, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-158.666, -70.5191, -32.1333, 0.55", "-162.344, -77.4963, -31.0005, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "127.762, -65.0171, -114.023, 0.28", "131.658, -66.6909, -115.687, 0.28", "133.468, -67.4684, -116.46, 0.55", "136.919, -68.9511, -117.935, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "127.762, -65.0171, -114.023, 0.55", "127.404, -65.7728, -116.035, 0.55", "126.69, -67.2846, -120.06, 0.28", "126.457, -67.777, -121.371, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "115.117, -65.2362, -105.916, 0.28", "117.32, -70.4805, -110.702, 0.28", "118.41, -73.0773, -113.073, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "115.117, -65.2362, -105.916, 0.55", "113.91, -65.8405, -105.245, 0.55", "110.543, -67.5255, -103.375, 0.28", "109.743, -67.9258, -102.931, 0.55", "107.555, -69.0208, -101.716, 0.28", "106.144, -69.7267, -100.933, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "18.3371, -53.7444, 6.10514, 0.83", "18.4066, -54.0404, 6.07578, 0.83", "19.3459, -57.9097, 5.8125, 0.83", "19.7558, -60.8359, 5.73425, 0.83", "19.8854, -63.685, 5.89465, 0.83", "19.8571, -67.4942, 6.35256, 0.83", "19.6677, -71.8968, 7.00672, 0.83", "19.4129, -76.8155, 7.99079, 0.83", "19.1122, -81.5974, 9.15957, 0.83", "18.4097, -87.4991, 10.3688, 0.83", "17.9825, -90.2206, 10.74, 0.83", "17.6852, -92.2657, 10.8938, 0.83", "17.0556, -96.1949, 11.0888, 0.83", "16.618, -99.7036, 11.0979, 0.83", "16.2777, -107.136, 10.4163, 0.83", "16.2679, -111.187, 9.54319, 0.83", "16.324, -114.916, 8.47392, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "18.3371, -53.7444, 6.10514, 0.55", "17.6704, -55.7091, 5.91808, 0.55", "17.1348, -57.1396, 5.87473, 0.55", "16.7867, -58.0545, 5.939, 0.55", "16.2617, -59.4842, 6.18842, 0.55", "15.2341, -62.3134, 6.87267, 0.55", "14.3682, -64.4619, 7.60239, 0.55", "13.6198, -66.1883, 8.35675, 0.55", "12.7877, -67.9383, 9.2191, 0.55", "12.0637, -69.3925, 9.99989, 0.28", "11.4042, -70.586, 10.7914, 0.55", "10.0672, -72.7689, 12.494, 0.55", "9.13861, -74.1161, 13.6465, 0.55", "8.61311, -74.8712, 14.2829, 0.55", "7.9668, -75.7645, 14.9781, 0.83", "6.08162, -78.4111, 16.8732, 0.28", "5.46559, -79.2864, 17.4791, 0.55", "4.41293, -80.8617, 18.5413, 0.28", "4.07828, -81.3479, 18.9008, 0.55", "3.35645, -82.4844, 19.7438, 0.28", "2.96411, -83.1293, 20.1813, 0.55", "1.73874, -85.2257, 21.0521, 0.55", "-0.941775, -90.8128, 25.8375, 0.55", "-3.39185, -96.1254, 31.0409, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.25983, -39.3009, -12.2191, 0.55", "7.94161, -40.4102, -15.7879, 0.55", "8.39937, -40.6711, -16.829, 0.55", "9.47465, -41.3291, -19.4176, 0.55", "11.6453, -42.6387, -25.0221, 0.28", "11.9284, -42.8193, -25.8425, 0.55", "13.0098, -43.6534, -29.2274, 0.55", "14.1488, -44.8086, -33.7391, 0.55", "14.5506, -45.2066, -35.4543, 0.28", "14.8331, -45.4723, -36.9338, 0.28", "15.0467, -45.8925, -39.361, 0.55", "15.3933, -46.2816, -42.3592, 0.28", "15.7572, -46.4366, -45.1524, 0.55", "16.001, -46.4059, -47.3025, 0.55", "16.2029, -46.2781, -48.7999, 0.55", "16.895, -45.7325, -53.2438, 0.55", "17.5462, -44.8955, -57.9004, 0.55", "17.775, -44.462, -59.8116, 0.28", "18.0195, -44.0737, -61.6375, 0.55", "18.4915, -43.4875, -65.3269, 0.28", "18.6412, -43.3206, -66.5642, 0.83", "18.7959, -42.99, -68.8276, 0.28", "18.7391, -42.8633, -70.3898, 0.55", "18.6202, -42.7519, -72.642, 0.28", "18.5475, -42.6979, -73.5293, 0.55", "18.3382, -42.6288, -75.1431, 0.55", "17.9344, -42.2995, -77.5524, 0.55", "17.5905, -41.9953, -79.0958, 0.28", "17.2208, -41.6051, -80.3053, 0.55", "16.7863, -40.9725, -81.7358, 0.28", "16.7215, -40.8498, -81.9746, 0.55", "16.4645, -39.6578, -84.3276, 0.28", "16.4297, -38.7567, -86.1019, 0.55", "16.6411, -37.4243, -88.557, 0.83", "16.9898, -36.2824, -90.655, 0.28", "17.1199, -35.9892, -91.214, 0.55", "18.2929, -33.7844, -95.5736, 0.28", "18.5524, -33.4065, -96.3591, 0.55", "19.4167, -32.1705, -98.7206, 0.28", "19.643, -31.8525, -99.3315, 0.55", "20.1492, -31.0272, -100.869, 0.28", "20.4591, -30.4347, -101.939, 0.55", "20.8926, -29.1206, -104.221, 0.28", "21.1122, -28.4191, -105.561, 0.55", "21.4671, -27.0728, -108.372, 0.28", "21.5633, -26.7104, -109.205, 0.55", "21.6784, -26.2282, -110.496, 0.28", "21.7338, -25.8237, -111.573, 0.55", "21.7415, -25.0135, -113.764, 0.28", "21.7263, -24.7832, -114.417, 0.55", "21.4252, -22.9938, -119.186, 0.28", "21.195, -22.2633, -120.805, 0.55", "20.6217, -20.8356, -123.623, 0.28", "20.3277, -20.145, -124.877, 0.55", "19.5068, -18.5867, -127.687, 0.28", "19.1653, -18.0619, -128.699, 0.55", "17.7527, -16.5033, -132.278, 0.28", "17.154, -16.0488, -133.765, 0.55", "16.2825, -15.7653, -135.877, 0.55", "15.7181, -15.6787, -137.162, 0.55", "14.3744, -15.5811, -139.686, 0.28", "12.8971, -15.5177, -142.089, 0.28", "11.6065, -15.4585, -144.06, 0.55", "9.75166, -15.1519, -146.32, 0.28", "8.66684, -14.8317, -147.343, 0.55", "5.78943, -13.5432, -149.599, 0.28", "3.95568, -12.5514, -150.531, 0.55", "2.56503, -11.7416, -150.99, 0.28", "0.754217, -10.8347, -151.319, 0.55", "-1.66794, -9.64604, -151.607, 0.28", "-2.5812, -9.2302, -151.723, 0.55", "-7.01177, -7.38682, -152.59, 0.28", "-8.49748, -6.8102, -152.893, 0.55", "-12.0815, -5.54566, -153.572, 0.28", "-14.0281, -4.87661, -153.942, 0.55", "-15.6271, -4.32878, -154.249, 0.55", "-17.5092, -3.68475, -154.642, 0.28", "-18.3965, -3.35605, -154.933, 0.55", "-21.2557, -2.1676, -156.01, 0.28", "-22.7739, -1.39126, -156.55, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.25983, -39.3009, -12.2191, 0.55", "7.27587, -39.3023, -12.7585, 0.55", "8.29636, -39.177, -13.2745, 0.55", "9.58487, -38.9179, -13.8538, 0.55", "10.6399, -38.6133, -14.2813, 0.55", "17.6123, -35.8248, -16.5662, 0.55", "19.1594, -35.018, -17.1024, 0.55", "21.4171, -33.6599, -17.9428, 0.55", "23.0065, -32.6438, -18.5484, 0.55", "24.5423, -31.5589, -19.1038, 0.28", "26.8888, -29.7456, -19.8395, 0.55", "30.3696, -26.9265, -20.7331, 0.28", "30.6857, -26.7464, -20.8894, 0.55", "32.6074, -26.0744, -22.465, 0.28", "33.747, -25.7644, -23.7501, 0.55", "34.877, -25.5851, -25.2578, 0.55", "36.8994, -25.4388, -27.9914, 0.55", "40.8903, -25.1948, -33.3435, 0.55", "43.6399, -25.064, -36.8881, 0.55", "44.6228, -25.0258, -38.0854, 0.55", "51.2497, -24.6572, -45.802, 0.55", "53.1228, -24.4999, -47.816, 0.55", "54.2567, -24.3936, -48.8666, 0.55", "57.1234, -24.1846, -51.0808, 0.55", "64.379, -24.0344, -55.9751, 0.55", "66.4047, -24.0714, -57.2067, 0.28", "67.6201, -24.1354, -57.8193, 0.55", "69.452, -24.3025, -58.6907, 0.28", "70.2444, -24.441, -58.9901, 0.55", "72.8212, -25.1353, -59.2756, 0.28", "74.5713, -26.265, -58.4963, 0.55", "75.6088, -27.1002, -57.9601, 0.28", "76.525, -28.0535, -57.3544, 0.55", "77.3202, -29.1231, -56.7456, 0.28", "77.6845, -29.6833, -56.4897, 0.55", "78.5154, -31.1688, -55.8241, 0.28", "78.7749, -31.6139, -55.7111, 0.55", "80.3361, -34.16, -55.2045, 0.28", "81.1785, -35.3235, -55.0939, 0.55", "83.2292, -37.7768, -55.0718, 0.28", "84.0814, -38.6675, -55.1388, 0.55", "87.1019, -41.5597, -55.4651, 0.28", "87.8594, -42.2601, -55.5718, 0.55", "90.2464, -44.4855, -56.0283, 0.28", "90.7509, -45.0152, -56.1139, 0.55", "92.0313, -46.4246, -56.3561, 0.28", "92.8295, -47.2363, -56.5699, 0.55", "93.6791, -48.0243, -56.8258, 0.55", "95.3676, -49.5971, -57.3238, 0.28", "96.5714, -50.5458, -57.6894, 0.55", "100.395, -52.7883, -58.8675, 0.28", "101.896, -53.4766, -59.3648, 0.55", "102.93, -53.9001, -59.6895, 0.28", "103.976, -54.2697, -60.0015, 0.55", "107.196, -55.2561, -60.9033, 0.28", "109.626, -56.0299, -61.5335, 0.55", "113.73, -57.5738, -62.3617, 0.28", "115.021, -58.0517, -62.617, 0.55", "117.447, -58.9154, -62.9403, 0.28", "118.239, -59.1973, -62.9968, 0.55", "119.462, -59.6483, -62.9068, 0.28", "120.51, -60.0228, -62.7517, 0.55", "123.242, -60.9178, -62.0881, 0.28", "126.345, -61.8297, -61.2824, 0.28", "127.868, -62.2293, -60.7788, 0.28", "129.436, -62.5833, -60.3532, 0.55", "131.721, -63.0017, -59.7398, 0.28", "132.727, -63.174, -59.448, 0.83", "135.259, -63.6491, -58.6171, 0.28", "136.384, -63.877, -58.3113, 0.55", "141.436, -65.047, -57.1673, 0.28", "144.04, -65.6533, -56.7695, 0.28", "145.976, -66.0907, -56.5841, 0.55", "147.147, -66.3631, -56.5808, 0.55", "150.333, -67.1167, -56.7687, 0.28", "153.356, -67.9301, -57.0395, 0.55", "156.115, -68.7405, -57.2866, 0.28", "158.648, -69.5004, -57.6121, 0.55", "160.737, -70.1087, -57.8716, 0.28", "162.415, -70.5092, -58.0129, 0.55", "166.397, -71.2906, -58.2068, 0.28", "168.392, -71.6855, -58.2386, 0.55", "171.359, -72.2875, -58.1974, 0.28", "173.765, -72.7211, -58.1177, 0.55", "179.381, -73.5227, -57.9378, 0.28", "181.703, -73.7341, -57.991, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.56424, -119.004, 76.0587, 0.55", "-3.90823, -127.691, 80.4352, 0.55", "-1.83754, -136.905, 82.852, 0.55", "-0.612227, -145.882, 86.4499, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.56424, -119.004, 76.0587, 0.55", "-3.6171, -125.965, 80.855, 0.55", "-3.56016, -131.877, 86.9707, 0.55", "-3.22107, -136.42, 94.1538, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.72378, -122.719, 77.4084, 0.55", "-7.25407, -130.033, 81.9981, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.72378, -122.719, 77.4084, 0.55", "-8.78401, -129.921, 81.5567, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "16.324, -114.916, 8.47392, 0.83", "17.1042, -117.541, 8.97757, 0.83", "17.8375, -119.744, 9.58264, 0.83", "18.5664, -121.934, 10.1841, 0.83", "19.2586, -124.014, 10.7553, 0.83", "20.3253, -127.219, 11.6355, 0.83", "21.3843, -130.401, 12.5094, 0.83", "22.212, -132.491, 13.3894, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "16.324, -114.916, 8.47392, 0.55", "17.7382, -116.593, 8.56992, 0.55", "18.8374, -117.906, 8.40342, 0.55", "19.608, -118.883, 8.17646, 0.55", "20.3359, -120.046, 7.74986, 0.83", "21.0799, -121.376, 7.09439, 0.55", "21.8077, -122.677, 6.45325, 0.83", "22.5211, -124.097, 5.61909, 0.55", "22.9368, -124.922, 5.05623, 0.83", "24.177, -127.603, 3.01586, 0.55", "24.9796, -129.724, 1.27115, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.39185, -96.1254, 31.0409, 0.55", "-7.36921, -103.887, 35.6439, 0.55", "-12.6779, -110.706, 40.3961, 0.55", "-18.6743, -116.617, 45.5303, 0.55", "-25.4981, -121.388, 50.8148, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.39185, -96.1254, 31.0409, 0.55", "-8.68542, -105.871, 36.5747, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "22.212, -132.491, 13.3894, 0.55", "22.3975, -133.87, 13.797, 0.55", "22.6825, -135.626, 14.3629, 0.55", "22.9524, -137.283, 14.8878, 0.55", "23.1306, -138.463, 15.2425, 0.55", "23.425, -140.572, 15.842, 0.55", "24.3458, -146.499, 17.3739, 0.55", "24.7088, -148.51, 17.8061, 0.55", "24.971, -149.93, 18.0383, 0.55", "25.2853, -151.555, 18.1711, 0.55", "25.5078, -152.817, 18.1604, 0.55", "26.1173, -155.763, 18.0126, 0.55", "26.5012, -158.006, 17.8972, 0.55", "26.7929, -159.474, 17.8653, 0.55", "27.5345, -163.276, 17.9804, 0.55", "28.0159, -165.829, 18.1727, 0.55", "28.6516, -169.115, 18.6088, 0.55", "29.4209, -172.829, 19.3958, 0.55", "30.0478, -175.295, 20.078, 0.55", "30.4542, -176.748, 20.5211, 0.55", "30.8034, -178.09, 20.9257, 0.55", "31.2753, -179.789, 21.3555, 0.55", "32.3637, -183.899, 22.1063, 0.55", "32.8401, -185.487, 22.3361, 0.55", "33.3273, -187.259, 22.5797, 0.55", "34.0366, -189.922, 22.9316, 0.55", "34.4844, -191.977, 23.2224, 0.55", "34.7948, -193.939, 23.4734, 0.55", "35.0064, -195.817, 23.7133, 0.55", "35.1812, -197.651, 23.9745, 0.55", "35.3136, -198.957, 24.1472, 0.55", "35.544, -201.093, 24.355, 0.55", "35.7853, -203.668, 24.4066, 0.55", "35.9357, -204.919, 24.3365, 0.55", "36.0803, -206.019, 24.1907, 0.55", "36.4498, -208.089, 23.7909, 0.55", "36.6708, -209.404, 23.5003, 0.55", "36.9612, -211.022, 23.2043, 0.55", "37.1215, -212.16, 23.0662, 0.55", "37.4837, -215.121, 22.8248, 0.55", "37.6988, -217.338, 22.8049, 0.55", "37.9718, -220.765, 23.0588, 0.55", "38.1945, -222.967, 23.4339, 0.55", "38.4097, -225.277, 23.9042, 0.28", "38.4725, -226.206, 24.1321, 0.28", "38.6124, -228.457, 24.8937, 0.28", "38.7205, -230.532, 25.7654, 0.28", "39.1178, -233.246, 27.2071, 0.28", "40.8462, -239.33, 28.8413, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "22.212, -132.491, 13.3894, 0.55", "23.5395, -132.941, 14.5314, 0.55", "26.1661, -134.156, 17.0891, 0.55", "28.3848, -135.383, 19.4026, 0.28", "30.7239, -136.795, 21.9645, 0.55", "32.0058, -137.708, 23.725, 0.28", "34.0719, -139.368, 27.0319, 0.55", "34.7362, -140.279, 28.7414, 0.28", "34.9243, -140.612, 29.4355, 0.28", "35.2351, -141.078, 30.6431, 0.55", "36.6005, -142.571, 35.1261, 0.28", "37.2175, -143.144, 36.9852, 0.55", "39.4229, -144.779, 42.1857, 0.28", "40.7316, -145.564, 44.8655, 0.28", "42.4841, -146.573, 48.0588, 0.55", "45.3544, -148.14, 52.4869, 0.28", "45.7842, -148.345, 53.0316, 0.55", "48.0249, -149.336, 55.5431, 0.28", "48.2464, -149.427, 55.7458, 0.55", "50.1831, -150.574, 57.6022, 0.28", "51.0705, -151.214, 58.5465, 0.55", "58.2752, -155.883, 66.3755, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.4981, -121.388, 50.8148, 0.55", "-30.8947, -126.213, 58.7241, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-25.4981, -121.388, 50.8148, 0.55", "-31.9524, -129.299, 56.1952, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_BP_46b0f41def_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.32789, 8.5296, 2.89346, 0.83 ) }
    dend_43 { pt3dadd( -6.51059, 10.9965, 3.37346, 1.11 ) }
    dend_43 { pt3dadd( -8.38713, 12.45, 3.62314, 0.83 ) }
    dend_43 { pt3dadd( -10.2103, 13.8499, 3.84686, 0.83 ) }
    dend_43 { pt3dadd( -11.2897, 14.6481, 3.96945, 1.11 ) }
    dend_43 { pt3dadd( -14.67, 17.1425, 4.36235, 1.11 ) }
    dend_43 { pt3dadd( -20.716, 21.413, 5.05688, 0.83 ) }
    dend_43 { pt3dadd( -22.8941, 22.8929, 5.28623, 0.83 ) }
    dend_43 { pt3dadd( -24.619, 24.0299, 5.42869, 0.83 ) }
    dend_43 { pt3dadd( -26.301, 25.1568, 5.552, 0.83 ) }
    dend_43 { pt3dadd( -27.6702, 26.0856, 5.61853, 0.55 ) }
    dend_43 { pt3dadd( -28.6993, 26.7145, 5.68606, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.85932, 6.35145, -6.30002, 0.55 ) }
    dend_28 { pt3dadd( 7.90438, 7.01017, -6.98004, 0.55 ) }
    dend_28 { pt3dadd( 9.67133, 7.17645, -7.87985, 0.83 ) }
    dend_28 { pt3dadd( 12.4678, 7.3534, -9.55131, 0.55 ) }
    dend_28 { pt3dadd( 13.8178, 7.43883, -10.3581, 1.38 ) }
    dend_28 { pt3dadd( 17.1369, 7.64886, -12.342, 0.55 ) }
    dend_28 { pt3dadd( 18.5506, 7.57773, -13.2886, 0.83 ) }
    dend_28 { pt3dadd( 25.8633, 6.27339, -18.607, 0.55 ) }
    dend_28 { pt3dadd( 26.5708, 6.09798, -19.1921, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.68245, -10.3395, 3.17963, 1.11 ) }
    dend_1 { pt3dadd( -0.727605, -14.3235, 4.60788, 1.11 ) }
    dend_1 { pt3dadd( -0.745993, -15.946, 5.18955, 0.83 ) }
    dend_1 { pt3dadd( -0.770425, -18.1016, 5.96233, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.835145, 9.21282, -1.34088, 1.11 ) }
    dend_0 { pt3dadd( 0.893076, 10.6358, -1.32897, 1.11 ) }
    dend_0 { pt3dadd( 0.979109, 12.9574, -1.22497, 1.38 ) }
    dend_0 { pt3dadd( 0.986075, 13.0867, -1.2168, 1.38 ) }
    dend_0 { pt3dadd( 1.16816, 14.6867, -1.09684, 0.83 ) }
    dend_0 { pt3dadd( 1.42683, 16.3785, -0.877728, 0.83 ) }
    dend_0 { pt3dadd( 1.87562, 18.2888, -0.394825, 0.83 ) }
    dend_0 { pt3dadd( 2.13304, 19.0134, -0.120062, 0.83 ) }
    dend_0 { pt3dadd( 2.3884, 19.5381, 0.133724, 1.11 ) }
    dend_0 { pt3dadd( 3.13838, 20.8163, 0.790931, 0.55 ) }
    dend_0 { pt3dadd( 4.01089, 22.1504, 1.57575, 0.83 ) }
    dend_0 { pt3dadd( 5.15857, 23.5227, 2.47001, 0.55 ) }
    dend_0 { pt3dadd( 5.7456, 24.0928, 2.8767, 0.83 ) }
    dend_0 { pt3dadd( 6.56491, 24.8648, 3.50957, 0.55 ) }
    dend_0 { pt3dadd( 7.57823, 25.8468, 4.36493, 0.55 ) }
    dend_0 { pt3dadd( 8.99082, 27.3245, 5.66956, 0.55 ) }
    dend_0 { pt3dadd( 10.5472, 29.0137, 7.11, 0.55 ) }
    dend_0 { pt3dadd( 11.5252, 30.1099, 8.18332, 0.55 ) }
    dend_0 { pt3dadd( 12.7192, 31.4959, 9.69579, 0.55 ) }
    dend_0 { pt3dadd( 12.9667, 31.7739, 10.0386, 0.83 ) }
    dend_0 { pt3dadd( 13.6189, 32.5084, 11.005, 0.55 ) }
    dend_0 { pt3dadd( 14.1693, 33.0811, 11.7642, 0.83 ) }
    dend_0 { pt3dadd( 15.4344, 34.6456, 13.5638, 0.55 ) }
    dend_0 { pt3dadd( 15.9144, 35.217, 14.0913, 0.83 ) }
    dend_0 { pt3dadd( 16.367, 35.6381, 14.4511, 0.55 ) }
    dend_0 { pt3dadd( 16.818, 36.0007, 14.7287, 0.83 ) }
    dend_0 { pt3dadd( 17.8209, 36.6748, 15.2349, 0.83 ) }
    dend_0 { pt3dadd( 19.1498, 37.5926, 15.7826, 0.83 ) }
    dend_0 { pt3dadd( 19.9669, 38.1993, 16.0282, 0.55 ) }
    dend_0 { pt3dadd( 20.5897, 38.7243, 16.2189, 0.55 ) }
    dend_0 { pt3dadd( 22.2228, 40.0807, 16.6939, 0.83 ) }
    dend_0 { pt3dadd( 23.2785, 40.9506, 16.9571, 0.55 ) }
    dend_0 { pt3dadd( 24.8825, 42.2248, 17.29, 0.55 ) }
    dend_0 { pt3dadd( 26.3535, 43.2932, 17.535, 0.55 ) }
    dend_0 { pt3dadd( 27.67, 44.1983, 17.7181, 0.55 ) }
    dend_0 { pt3dadd( 29.3352, 45.2587, 17.8727, 0.55 ) }
    dend_0 { pt3dadd( 30.3538, 45.7783, 17.9336, 0.55 ) }
    dend_0 { pt3dadd( 31.0502, 46.0704, 17.891, 0.55 ) }
    dend_0 { pt3dadd( 31.9769, 46.2889, 17.7559, 0.55 ) }
    dend_0 { pt3dadd( 33.3622, 46.3897, 17.4406, 0.55 ) }
    dend_0 { pt3dadd( 34.2266, 46.3432, 17.2106, 0.55 ) }
    dend_0 { pt3dadd( 35.4887, 46.241, 16.9631, 0.55 ) }
    dend_0 { pt3dadd( 37.8896, 46.1227, 16.7063, 0.55 ) }
    dend_0 { pt3dadd( 39.7714, 46.1169, 16.639, 0.55 ) }
    dend_0 { pt3dadd( 41.764, 46.2058, 16.6871, 0.55 ) }
    dend_0 { pt3dadd( 43.0401, 46.3066, 16.819, 0.55 ) }
    dend_0 { pt3dadd( 46.3515, 46.8694, 17.3811, 0.55 ) }
    dend_0 { pt3dadd( 48.3084, 47.3539, 17.8621, 0.55 ) }
    dend_0 { pt3dadd( 49.7734, 47.814, 18.3611, 0.55 ) }
    dend_0 { pt3dadd( 50.6628, 48.2425, 18.6994, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 51.6934, 48.8797, 19.0864, 0.55 ) }
    dend_0 { pt3dadd( 53.4394, 50.1357, 19.5841, 0.55 ) }
    dend_0 { pt3dadd( 53.8407, 50.4382, 19.6423, 0.55 ) }
    dend_0 { pt3dadd( 54.9931, 51.2469, 19.7326, 0.55 ) }
    dend_0 { pt3dadd( 56.0518, 52.1083, 19.8116, 0.83 ) }
    dend_0 { pt3dadd( 56.6296, 52.5861, 19.8454, 0.55 ) }
    dend_0 { pt3dadd( 57.4952, 53.4061, 19.8616, 0.83 ) }
    dend_0 { pt3dadd( 62.0359, 57.7853, 21.157, 0.83 ) }
    dend_0 { pt3dadd( 65.9854, 62.807, 21.9678, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -28.6993, 26.7145, 5.68606, 0.55 ) }
    dend_55 { pt3dadd( -30.6052, 27.5868, 4.80353, 0.55 ) }
    dend_55 { pt3dadd( -32.6776, 28.5353, 3.84388, 0.55 ) }
    dend_55 { pt3dadd( -35.1786, 29.6799, 2.68578, 0.55 ) }
    dend_55 { pt3dadd( -37.2438, 30.6251, 1.72951, 0.83 ) }
    dend_55 { pt3dadd( -38.9743, 31.4171, 0.928155, 0.55 ) }
    dend_55 { pt3dadd( -42.1866, 32.8873, -0.559277, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -28.6993, 26.7145, 5.68606, 0.55 ) }
    dend_44 { pt3dadd( -31.1687, 27.1787, 5.37899, 0.55 ) }
    dend_44 { pt3dadd( -33.7983, 27.5863, 5.31362, 0.55 ) }
    dend_44 { pt3dadd( -36.7805, 28.0427, 5.31238, 0.55 ) }
    dend_44 { pt3dadd( -41.1024, 28.6509, 5.70756, 0.55 ) }
    dend_44 { pt3dadd( -44.7207, 29.0508, 6.29477, 0.55 ) }
    dend_44 { pt3dadd( -48.5167, 29.4091, 7.07255, 0.55 ) }
    dend_44 { pt3dadd( -52.1887, 29.5007, 8.21834, 0.55 ) }
    dend_44 { pt3dadd( -55.3518, 29.2665, 9.50821, 0.55 ) }
    dend_44 { pt3dadd( -59.296, 28.6918, 11.5367, 0.55 ) }
    dend_44 { pt3dadd( -61.0126, 28.3122, 12.6574, 0.55 ) }
    dend_44 { pt3dadd( -62.8672, 27.8812, 13.9482, 0.55 ) }
    dend_44 { pt3dadd( -66.1377, 26.8749, 16.0724, 0.55 ) }
    dend_44 { pt3dadd( -67.8765, 26.3487, 16.9275, 0.55 ) }
    dend_44 { pt3dadd( -69.6977, 25.7418, 17.8117, 0.55 ) }
    dend_44 { pt3dadd( -71.8622, 25.0507, 18.6427, 0.55 ) }
    dend_44 { pt3dadd( -74.2139, 24.3498, 19.4816, 0.55 ) }
    dend_44 { pt3dadd( -77.5699, 23.3423, 20.6052, 0.55 ) }
    dend_44 { pt3dadd( -82.0497, 22.3034, 21.7048, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 26.5708, 6.09798, -19.1921, 0.55 ) }
    dend_34 { pt3dadd( 32.9558, 8.0643, -20.5885, 0.55 ) }
    dend_34 { pt3dadd( 36.659, 8.94847, -21.9063, 0.55 ) }
    dend_34 { pt3dadd( 40.3245, 9.65261, -23.2511, 0.55 ) }
    dend_34 { pt3dadd( 42.8347, 10.0332, -24.1635, 0.55 ) }
    dend_34 { pt3dadd( 46.5078, 10.5058, -25.4639, 0.55 ) }
    dend_34 { pt3dadd( 54.1408, 11.3249, -28.3917, 0.55 ) }
    dend_34 { pt3dadd( 62.8146, 12.1663, -32.2881, 0.55 ) }
    dend_34 { pt3dadd( 67.0414, 12.2953, -34.4539, 0.55 ) }
    dend_34 { pt3dadd( 69.3112, 12.3005, -35.7586, 0.55 ) }
    dend_34 { pt3dadd( 71.8014, 12.3126, -37.2901, 0.55 ) }
    dend_34 { pt3dadd( 76.2517, 12.2121, -39.9989, 0.55 ) }
    dend_34 { pt3dadd( 77.8743, 12.0785, -41.0306, 0.55 ) }
    dend_34 { pt3dadd( 84.7442, 11.6527, -45.9317, 0.55 ) }
    dend_34 { pt3dadd( 89.6095, 11.4077, -49.7606, 0.55 ) }
    dend_34 { pt3dadd( 92.409, 11.3161, -52.0441, 0.55 ) }
    dend_34 { pt3dadd( 95.2025, 11.2005, -54.3181, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.5708, 6.09798, -19.1921, 0.83 ) }
    dend_29 { pt3dadd( 28.5842, 7.40745, -19.2391, 0.83 ) }
    dend_29 { pt3dadd( 29.7355, 8.15366, -19.3198, 0.55 ) }
    dend_29 { pt3dadd( 31.4307, 9.2869, -19.5866, 0.83 ) }
    dend_29 { pt3dadd( 32.5701, 10.0779, -19.802, 0.55 ) }
    dend_29 { pt3dadd( 34.14, 11.2122, -20.0763, 0.83 ) }
    dend_29 { pt3dadd( 36.0264, 12.6156, -20.3357, 0.55 ) }
    dend_29 { pt3dadd( 36.9769, 13.2509, -20.4244, 0.55 ) }
    dend_29 { pt3dadd( 39.1707, 14.4125, -20.4636, 0.83 ) }
    dend_29 { pt3dadd( 41.166, 15.2286, -20.2294, 0.55 ) }
    dend_29 { pt3dadd( 42.2806, 15.6755, -19.9893, 0.83 ) }
    dend_29 { pt3dadd( 43.9502, 16.3875, -19.4506, 0.55 ) }
    dend_29 { pt3dadd( 46.3439, 17.4613, -18.3644, 0.55 ) }
    dend_29 { pt3dadd( 49.6708, 18.7812, -16.677, 0.55 ) }
    dend_29 { pt3dadd( 52.8437, 19.9286, -14.8409, 0.55 ) }
    dend_29 { pt3dadd( 55.3576, 20.8113, -13.3394, 0.55 ) }
    dend_29 { pt3dadd( 59.5014, 22.2869, -10.8421, 0.55 ) }
    dend_29 { pt3dadd( 62.5299, 23.457, -8.94881, 0.55 ) }
    dend_29 { pt3dadd( 64.3533, 24.3218, -7.74031, 0.55 ) }
    dend_29 { pt3dadd( 67.7011, 26.2682, -5.49062, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.770425, -18.1016, 5.96233, 0.83 ) }
    dend_11 { pt3dadd( -0.711428, -21.4108, 5.82747, 0.83 ) }
    dend_11 { pt3dadd( -0.653946, -24.6348, 5.69607, 0.83 ) }
    dend_11 { pt3dadd( -0.589769, -28.2345, 5.54937, 0.83 ) }
    dend_11 { pt3dadd( -0.556256, -30.1142, 5.47276, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.770425, -18.1016, 5.96233, 0.55 ) }
    dend_2 { pt3dadd( -0.584852, -18.6182, 6.32427, 0.55 ) }
    dend_2 { pt3dadd( -0.421362, -19.2511, 6.79457, 0.55 ) }
    dend_2 { pt3dadd( -0.33473, -20.0812, 7.44309, 0.55 ) }
    dend_2 { pt3dadd( -0.323855, -20.4039, 7.70376, 0.83 ) }
    dend_2 { pt3dadd( -0.372888, -21.2278, 8.46284, 0.55 ) }
    dend_2 { pt3dadd( -0.433354, -21.6535, 8.8627, 0.55 ) }
    dend_2 { pt3dadd( -0.568873, -22.4813, 9.67541, 0.83 ) }
    dend_2 { pt3dadd( -0.705503, -23.0962, 10.3179, 0.55 ) }
    dend_2 { pt3dadd( -0.863454, -23.6035, 10.8395, 0.55 ) }
    dend_2 { pt3dadd( -1.18419, -24.5646, 11.8098, 0.55 ) }
    dend_2 { pt3dadd( -1.43895, -25.3305, 12.5742, 0.55 ) }
    dend_2 { pt3dadd( -1.63075, -25.9445, 13.1957, 0.55 ) }
    dend_2 { pt3dadd( -1.7981, -26.5963, 13.8352, 0.28 ) }
    dend_2 { pt3dadd( -1.84477, -26.8677, 14.0913, 0.55 ) }
    dend_2 { pt3dadd( -1.91762, -27.3689, 14.5358, 0.28 ) }
    dend_2 { pt3dadd( -1.92324, -28.1508, 15.1084, 0.55 ) }
    dend_2 { pt3dadd( -2.57314, -30.755, 17.1499, 0.55 ) }
    dend_2 { pt3dadd( -3.29327, -33.1617, 19.3995, 0.55 ) }
    dend_2 { pt3dadd( -3.8678, -35.1394, 22.0697, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -42.1866, 32.8873, -0.559277, 0.55 ) }
    dend_61 { pt3dadd( -44.5661, 33.2493, 1.10017, 0.55 ) }
    dend_61 { pt3dadd( -45.5461, 33.3601, 1.93762, 0.83 ) }
    dend_61 { pt3dadd( -46.6662, 33.4483, 3.09151, 0.55 ) }
    dend_61 { pt3dadd( -47.5109, 33.5266, 4.06165, 0.83 ) }
    dend_61 { pt3dadd( -49.7315, 33.8188, 6.57046, 0.55 ) }
    dend_61 { pt3dadd( -50.5719, 33.9464, 7.52594, 0.28 ) }
    dend_61 { pt3dadd( -51.9549, 34.1941, 9.25123, 0.55 ) }
    dend_61 { pt3dadd( -53.8125, 34.5379, 11.5546, 0.55 ) }
    dend_61 { pt3dadd( -55.2336, 34.7899, 13.229, 0.55 ) }
    dend_61 { pt3dadd( -57.1419, 35.1171, 15.3966, 0.28 ) }
    dend_61 { pt3dadd( -57.6476, 35.1976, 15.8914, 0.55 ) }
    dend_61 { pt3dadd( -58.7011, 35.3725, 16.8696, 0.28 ) }
    dend_61 { pt3dadd( -59.428, 35.5024, 17.4569, 0.55 ) }
    dend_61 { pt3dadd( -60.9314, 35.7383, 18.5173, 0.28 ) }
    dend_61 { pt3dadd( -61.8188, 35.8178, 19.0969, 0.55 ) }
    dend_61 { pt3dadd( -63.3773, 35.8369, 20.1485, 0.28 ) }
    dend_61 { pt3dadd( -64.4295, 35.8373, 20.8162, 0.55 ) }
    dend_61 { pt3dadd( -70.3823, 35.681, 27.997, 0.55 ) }
    dend_61 { pt3dadd( -75.6471, 34.7229, 35.6382, 0.55 ) }
    dend_61 { pt3dadd( -80.6402, 32.8975, 43.3037, 0.55 ) }
    dend_61 { pt3dadd( -85.616, 29.9601, 50.6274, 0.55 ) }
    dend_61 { pt3dadd( -89.4596, 27.5438, 58.7768, 0.55 ) }
    dend_61 { pt3dadd( -94.0432, 25.4031, 66.6146, 0.55 ) }
    dend_61 { pt3dadd( -98.7492, 24.7998, 74.6467, 0.55 ) }
    dend_61 { pt3dadd( -103.416, 23.4511, 82.6107, 0.55 ) }
    dend_61 { pt3dadd( -107.901, 22.7507, 90.7604, 0.55 ) }
    dend_61 { pt3dadd( -111.922, 21.959, 99.1402, 0.55 ) }
    dend_61 { pt3dadd( -114.971, 20.1799, 107.775, 0.55 ) }
    dend_61 { pt3dadd( -118.114, 19.2727, 116.511, 0.55 ) }
    dend_61 { pt3dadd( -121.38, 17.4099, 125.048, 0.55 ) }
    dend_61 { pt3dadd( -123.518, 15.2262, 133.862, 0.55 ) }
    dend_61 { pt3dadd( -124.067, 13.7761, 143.061, 0.55 ) }
    dend_61 { pt3dadd( -124.573, 10.5722, 151.808, 0.55 ) }
    dend_61 { pt3dadd( -123.747, 7.2349, 160.48, 0.55 ) }
    dend_61 { pt3dadd( -123.407, 4.28643, 169.324, 0.55 ) }
    dend_61 { pt3dadd( -124.059, 1.99267, 178.342, 0.55 ) }
    dend_61 { pt3dadd( -126.696, 1.07012, 187.243, 0.55 ) }
    dend_61 { pt3dadd( -128.495, -0.851409, 196.192, 0.55 ) }
    dend_61 { pt3dadd( -128.542, -1.12394, 205.517, 0.55 ) }
    dend_61 { pt3dadd( -130.111, -0.776126, 214.706, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -42.1866, 32.8873, -0.559277, 0.55 ) }
    dend_56 { pt3dadd( -43.6712, 33.3429, -2.17363, 0.55 ) }
    dend_56 { pt3dadd( -44.8469, 33.8582, -3.99719, 0.55 ) }
    dend_56 { pt3dadd( -45.962, 34.5306, -5.94337, 0.55 ) }
    dend_56 { pt3dadd( -46.6603, 34.9516, -7.16205, 0.55 ) }
    dend_56 { pt3dadd( -47.9341, 35.7196, -9.38505, 0.83 ) }
    dend_56 { pt3dadd( -48.866, 36.2814, -11.0114, 0.55 ) }
    dend_56 { pt3dadd( -49.9621, 37.0402, -13.4098, 0.83 ) }
    dend_56 { pt3dadd( -50.3946, 37.5843, -14.7754, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -82.0497, 22.3034, 21.7048, 0.28 ) }
    dend_48 { pt3dadd( -83.2686, 20.1222, 21.1937, 0.28 ) }
    dend_48 { pt3dadd( -83.8514, 19.1874, 20.8935, 0.28 ) }
    dend_48 { pt3dadd( -84.6101, 17.8671, 20.4206, 0.55 ) }
    dend_48 { pt3dadd( -85.2359, 16.706, 20.0155, 0.28 ) }
    dend_48 { pt3dadd( -86.1592, 14.9361, 19.4212, 0.55 ) }
    dend_48 { pt3dadd( -88.7288, 9.73105, 17.7625, 0.28 ) }
    dend_48 { pt3dadd( -89.5682, 7.91058, 17.0345, 0.55 ) }
    dend_48 { pt3dadd( -90.8405, 5.11024, 15.8176, 0.28 ) }
    dend_48 { pt3dadd( -91.5721, 3.43778, 15.0137, 0.55 ) }
    dend_48 { pt3dadd( -92.0775, 2.28616, 14.4314, 0.28 ) }
    dend_48 { pt3dadd( -92.6536, 0.964027, 13.7742, 0.55 ) }
    dend_48 { pt3dadd( -94.3951, -3.45252, 11.6929, 0.28 ) }
    dend_48 { pt3dadd( -94.943, -4.78684, 11.0152, 0.55 ) }
    dend_48 { pt3dadd( -95.9016, -6.8196, 9.76321, 0.28 ) }
    dend_48 { pt3dadd( -96.6902, -8.11674, 8.84328, 0.28 ) }
    dend_48 { pt3dadd( -97.3973, -8.98115, 8.19249, 0.55 ) }
    dend_48 { pt3dadd( -99.8591, -11.4066, 6.42624, 0.28 ) }
    dend_48 { pt3dadd( -101.003, -12.3883, 5.72957, 0.55 ) }
    dend_48 { pt3dadd( -103.801, -14.618, 3.9954, 0.28 ) }
    dend_48 { pt3dadd( -106.6, -16.5877, 2.40364, 0.28 ) }
    dend_48 { pt3dadd( -109.645, -18.4609, 0.77609, 0.28 ) }
    dend_48 { pt3dadd( -111.039, -19.1648, 0.150022, 0.55 ) }
    dend_48 { pt3dadd( -117.759, -27.1214, -4.24175, 0.55 ) }
    dend_48 { pt3dadd( -125.229, -35.2762, -6.57627, 0.55 ) }
    dend_48 { pt3dadd( -132.55, -42.9219, -10.541, 0.55 ) }
    dend_48 { pt3dadd( -140.056, -49.8256, -15.4138, 0.55 ) }
    dend_48 { pt3dadd( -147.657, -55.8767, -21.1907, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -82.0497, 22.3034, 21.7048, 0.55 ) }
    dend_45 { pt3dadd( -82.8627, 22.2457, 21.791, 0.55 ) }
    dend_45 { pt3dadd( -85.1623, 22.0665, 22.3303, 0.55 ) }
    dend_45 { pt3dadd( -86.028, 21.9742, 22.5773, 0.55 ) }
    dend_45 { pt3dadd( -88.0658, 21.6941, 23.1853, 0.55 ) }
    dend_45 { pt3dadd( -91.1957, 21.3044, 23.9722, 0.55 ) }
    dend_45 { pt3dadd( -92.8205, 21.1534, 24.3557, 0.28 ) }
    dend_45 { pt3dadd( -95.349, 20.8669, 24.8997, 0.55 ) }
    dend_45 { pt3dadd( -97.2262, 20.6202, 25.2342, 0.55 ) }
    dend_45 { pt3dadd( -98.019, 20.5106, 25.3768, 0.28 ) }
    dend_45 { pt3dadd( -102.774, 19.8516, 26.2259, 0.55 ) }
    dend_45 { pt3dadd( -104.996, 19.4505, 26.4812, 0.28 ) }
    dend_45 { pt3dadd( -107.989, 18.9093, 26.6504, 0.28 ) }
    dend_45 { pt3dadd( -110.565, 18.4899, 26.6483, 0.55 ) }
    dend_45 { pt3dadd( -120.636, 18.1804, 28.9098, 0.55 ) }
    dend_45 { pt3dadd( -130.392, 17.5372, 32.2305, 0.55 ) }
    dend_45 { pt3dadd( -139.633, 15.773, 36.4872, 0.55 ) }
    dend_45 { pt3dadd( -148.584, 15.6819, 41.635, 0.55 ) }
    dend_45 { pt3dadd( -156.289, 15.1123, 48.4854, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -162.518, 14.9931, 56.7199, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 95.2025, 11.2005, -54.3181, 0.55 ) }
    dend_42 { pt3dadd( 100.221, 12.9098, -58.2619, 0.55 ) }
    dend_42 { pt3dadd( 101.802, 13.3914, -59.615, 0.55 ) }
    dend_42 { pt3dadd( 103.778, 13.9266, -61.292, 0.55 ) }
    dend_42 { pt3dadd( 107.36, 14.8886, -64.5491, 0.55 ) }
    dend_42 { pt3dadd( 111.089, 15.7477, -68.0575, 0.55 ) }
    dend_42 { pt3dadd( 112.905, 16.0155, -69.7423, 0.83 ) }
    dend_42 { pt3dadd( 114.393, 16.1437, -71.2543, 0.55 ) }
    dend_42 { pt3dadd( 115.5, 16.1576, -72.5094, 0.83 ) }
    dend_42 { pt3dadd( 118.145, 15.8277, -75.7645, 0.55 ) }
    dend_42 { pt3dadd( 120.311, 15.3462, -78.4831, 0.55 ) }
    dend_42 { pt3dadd( 122.803, 14.7611, -81.4837, 0.55 ) }
    dend_42 { pt3dadd( 125.582, 14.1992, -84.8747, 0.55 ) }
    dend_42 { pt3dadd( 127.443, 13.7814, -87.2022, 0.55 ) }
    dend_42 { pt3dadd( 129.541, 13.3106, -89.8984, 0.55 ) }
    dend_42 { pt3dadd( 131.356, 12.9851, -92.3534, 0.55 ) }
    dend_42 { pt3dadd( 132.502, 12.9065, -94.0446, 0.55 ) }
    dend_42 { pt3dadd( 133.936, 12.8601, -97.4287, 0.55 ) }
    dend_42 { pt3dadd( 134.71, 12.7729, -99.55, 0.55 ) }
    dend_42 { pt3dadd( 135.351, 12.558, -102.375, 0.55 ) }
    dend_42 { pt3dadd( 136.204, 12.0661, -107.161, 0.55 ) }
    dend_42 { pt3dadd( 136.374, 11.9166, -108.244, 0.28 ) }
    dend_42 { pt3dadd( 138.581, 9.94843, -121.424, 0.28 ) }
    dend_42 { pt3dadd( 139.343, 9.3904, -125.292, 0.83 ) }
    dend_42 { pt3dadd( 142.366, 7.15442, -139.038, 0.83 ) }
    dend_42 { pt3dadd( 143.923, 5.85853, -145.449, 0.83 ) }
    dend_42 { pt3dadd( 144.679, 5.22409, -148.056, 0.55 ) }
    dend_42 { pt3dadd( 145.56, 4.58654, -150.601, 0.55 ) }
    dend_42 { pt3dadd( 148.059, 3.24727, -155.337, 0.55 ) }
    dend_42 { pt3dadd( 150.76, 1.99966, -159.507, 0.28 ) }
    dend_42 { pt3dadd( 151.597, 1.69482, -159.778, 0.55 ) }
    dend_42 { pt3dadd( 153.455, 1.08683, -159.685, 0.28 ) }
    dend_42 { pt3dadd( 154.611, 0.776335, -159.45, 0.55 ) }
    dend_42 { pt3dadd( 155.815, 0.425745, -159.103, 0.28 ) }
    dend_42 { pt3dadd( 157.266, 0.0711357, -158.612, 0.55 ) }
    dend_42 { pt3dadd( 159.442, -0.319777, -158.099, 0.28 ) }
    dend_42 { pt3dadd( 161.184, -0.68172, -157.75, 0.55 ) }
    dend_42 { pt3dadd( 163.119, -0.93732, -157.505, 0.28 ) }
    dend_42 { pt3dadd( 165.748, -1.25183, -157.405, 0.55 ) }
    dend_42 { pt3dadd( 168.698, -1.51765, -157.465, 0.55 ) }
    dend_42 { pt3dadd( 171.293, -1.70272, -157.686, 0.28 ) }
    dend_42 { pt3dadd( 174.884, -1.90542, -158.189, 0.55 ) }
    dend_42 { pt3dadd( 181.096, -2.01554, -159.703, 0.55 ) }
    dend_42 { pt3dadd( 183.846, -1.88734, -160.69, 0.55 ) }
    dend_42 { pt3dadd( 185.029, -1.76995, -161.235, 0.83 ) }
    dend_42 { pt3dadd( 187.282, -1.50899, -162.481, 0.55 ) }
    dend_42 { pt3dadd( 188.848, -1.25425, -163.437, 0.83 ) }
    dend_42 { pt3dadd( 193.069, -0.452855, -166.045, 0.55 ) }
    dend_42 { pt3dadd( 195.635, -0.13419, -167.723, 0.28 ) }
    dend_42 { pt3dadd( 196.713, -0.0800084, -168.314, 0.55 ) }
    dend_42 { pt3dadd( 199.653, -0.240271, -169.633, 0.28 ) }
    dend_42 { pt3dadd( 200.678, -0.399045, -170.036, 0.55 ) }
    dend_42 { pt3dadd( 202.786, -0.89425, -170.55, 0.28 ) }
    dend_42 { pt3dadd( 204.923, -1.64831, -170.718, 0.55 ) }
    dend_42 { pt3dadd( 209.234, -3.48645, -170.309, 0.28 ) }
    dend_42 { pt3dadd( 211.219, -4.44544, -169.913, 0.55 ) }
    dend_42 { pt3dadd( 214.162, -6.06111, -169.182, 0.28 ) }
    dend_42 { pt3dadd( 217.882, -8.10137, -168.119, 0.55 ) }
    dend_42 { pt3dadd( 220.575, -9.54358, -167.303, 0.55 ) }
    dend_42 { pt3dadd( 225.249, -11.9002, -165.795, 0.28 ) }
    dend_42 { pt3dadd( 227.17, -12.7603, -165.329, 0.55 ) }
    dend_42 { pt3dadd( 230.491, -14.0127, -164.876, 0.28 ) }
    dend_42 { pt3dadd( 233.813, -14.9793, -164.633, 0.55 ) }
    dend_42 { pt3dadd( 235.644, -15.2745, -164.736, 0.28 ) }
    dend_42 { pt3dadd( 237.31, -15.3036, -164.938, 0.55 ) }
    dend_42 { pt3dadd( 242.025, -15.0601, -165.921, 0.28 ) }
    dend_42 { pt3dadd( 245.405, -14.6481, -166.655, 0.28 ) }
    dend_42 { pt3dadd( 248.355, -14.0724, -167.314, 0.55 ) }
    dend_42 { pt3dadd( 251.615, -13.3299, -168.197, 0.28 ) }
    dend_42 { pt3dadd( 252.439, -13.0946, -168.387, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 95.2025, 11.2005, -54.3181, 0.55 ) }
    dend_35 { pt3dadd( 96.0248, 9.00473, -55.557, 0.55 ) }
    dend_35 { pt3dadd( 96.5565, 7.13524, -56.4783, 0.28 ) }
    dend_35 { pt3dadd( 97.0389, 5.43133, -57.1795, 0.55 ) }
    dend_35 { pt3dadd( 98.2425, 1.83884, -58.6982, 0.28 ) }
    dend_35 { pt3dadd( 98.3129, 1.61005, -58.8253, 0.55 ) }
    dend_35 { pt3dadd( 98.7157, 0.409242, -59.587, 0.28 ) }
    dend_35 { pt3dadd( 98.9642, -0.604033, -60.3711, 0.55 ) }
    dend_35 { pt3dadd( 99.1689, -1.6757, -61.3055, 0.28 ) }
    dend_35 { pt3dadd( 99.4095, -3.14616, -62.6441, 0.55 ) }
    dend_35 { pt3dadd( 100.01, -6.83469, -65.9398, 0.55 ) }
    dend_35 { pt3dadd( 100.523, -10.2043, -69.0001, 0.55 ) }
    dend_35 { pt3dadd( 100.908, -12.9007, -71.4498, 0.55 ) }
    dend_35 { pt3dadd( 101.24, -15.5537, -73.8138, 0.55 ) }
    dend_35 { pt3dadd( 101.323, -16.2377, -74.3973, 0.28 ) }
    dend_35 { pt3dadd( 101.43, -16.9625, -74.9633, 0.55 ) }
    dend_35 { pt3dadd( 101.664, -17.9508, -75.6589, 0.28 ) }
    dend_35 { pt3dadd( 102.252, -19.6931, -76.7492, 0.55 ) }
    dend_35 { pt3dadd( 103.641, -22.9657, -78.3212, 0.55 ) }
    dend_35 { pt3dadd( 104.399, -24.7141, -79.0103, 0.28 ) }
    dend_35 { pt3dadd( 105.07, -26.5079, -79.7889, 0.55 ) }
    dend_35 { pt3dadd( 105.833, -29.0465, -80.9736, 0.28 ) }
    dend_35 { pt3dadd( 106.322, -31.1129, -81.9775, 0.55 ) }
    dend_35 { pt3dadd( 106.928, -34.2172, -83.4851, 0.28 ) }
    dend_35 { pt3dadd( 107.575, -37.4205, -84.9493, 0.55 ) }
    dend_35 { pt3dadd( 108.456, -42.0808, -87.1149, 0.28 ) }
    dend_35 { pt3dadd( 108.875, -44.5713, -88.2774, 0.55 ) }
    dend_35 { pt3dadd( 109.264, -47.1271, -89.5246, 0.28 ) }
    dend_35 { pt3dadd( 109.588, -49.3886, -90.7566, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 110.09, -52.2226, -92.5292, 0.55 ) }
    dend_35 { pt3dadd( 110.724, -54.8263, -94.1089, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 67.7011, 26.2682, -5.49062, 0.55 ) }
    dend_31 { pt3dadd( 70.5451, 26.1629, -4.56527, 0.55 ) }
    dend_31 { pt3dadd( 72.6357, 25.9608, -4.06899, 0.55 ) }
    dend_31 { pt3dadd( 77.2327, 25.411, -3.20707, 0.55 ) }
    dend_31 { pt3dadd( 79.3153, 25.0793, -2.99111, 0.55 ) }
    dend_31 { pt3dadd( 81.5967, 24.7387, -2.87928, 0.55 ) }
    dend_31 { pt3dadd( 84.6764, 24.2849, -2.9526, 0.55 ) }
    dend_31 { pt3dadd( 87.9502, 23.6531, -3.30932, 0.55 ) }
    dend_31 { pt3dadd( 89.6838, 23.256, -3.68034, 0.55 ) }
    dend_31 { pt3dadd( 93.2434, 22.3415, -4.89287, 0.55 ) }
    dend_31 { pt3dadd( 94.8865, 21.9219, -5.50352, 0.55 ) }
    dend_31 { pt3dadd( 98.7446, 20.8466, -7.01244, 0.55 ) }
    dend_31 { pt3dadd( 101.358, 20.0232, -7.99132, 0.55 ) }
    dend_31 { pt3dadd( 103.274, 19.4249, -8.6265, 0.83 ) }
    dend_31 { pt3dadd( 106.334, 18.3678, -9.58368, 0.55 ) }
    dend_31 { pt3dadd( 109.324, 17.2184, -10.3788, 0.83 ) }
    dend_31 { pt3dadd( 111.855, 16.1511, -10.9418, 0.55 ) }
    dend_31 { pt3dadd( 114.099, 15.259, -11.3375, 0.55 ) }
    dend_31 { pt3dadd( 115.369, 14.8212, -11.5073, 0.83 ) }
    dend_31 { pt3dadd( 118.324, 13.8431, -11.7551, 0.28 ) }
    dend_31 { pt3dadd( 119.786, 13.4367, -11.8017, 0.28 ) }
    dend_31 { pt3dadd( 121.206, 12.9392, -11.8979, 0.28 ) }
    dend_31 { pt3dadd( 122.742, 12.4398, -12.0175, 0.28 ) }
    dend_31 { pt3dadd( 125.203, 11.6745, -12.2684, 0.28 ) }
    dend_31 { pt3dadd( 126.191, 11.385, -12.3435, 0.55 ) }
    dend_31 { pt3dadd( 128.537, 10.7681, -12.3049, 0.55 ) }
    dend_31 { pt3dadd( 132.744, 9.66567, -12.019, 0.55 ) }
    dend_31 { pt3dadd( 133.905, 9.34182, -11.883, 0.55 ) }
    dend_31 { pt3dadd( 134.939, 9.02924, -11.7104, 0.83 ) }
    dend_31 { pt3dadd( 137.17, 8.46025, -11.1726, 0.55 ) }
    dend_31 { pt3dadd( 139.107, 7.97655, -10.6752, 0.55 ) }
    dend_31 { pt3dadd( 140.937, 7.52925, -10.1985, 0.55 ) }
    dend_31 { pt3dadd( 142.357, 7.14889, -9.86363, 0.55 ) }
    dend_31 { pt3dadd( 144.618, 6.36363, -9.40658, 0.55 ) }
    dend_31 { pt3dadd( 147.295, 5.17076, -8.96144, 0.55 ) }
    dend_31 { pt3dadd( 151.476, 2.78595, -8.45349, 0.55 ) }
    dend_31 { pt3dadd( 153.782, 1.10935, -8.24371, 0.55 ) }
    dend_31 { pt3dadd( 155.788, -0.703643, -8.08578, 0.28 ) }
    dend_31 { pt3dadd( 156.389, -1.38154, -8.04412, 0.55 ) }
    dend_31 { pt3dadd( 157.721, -3.28986, -7.93272, 0.28 ) }
    dend_31 { pt3dadd( 158.869, -5.43389, -7.78812, 0.55 ) }
    dend_31 { pt3dadd( 159.942, -8.07516, -7.42497, 0.55 ) }
    dend_31 { pt3dadd( 160.66, -9.79155, -7.10421, 0.28 ) }
    dend_31 { pt3dadd( 160.921, -10.3907, -6.96101, 0.55 ) }
    dend_31 { pt3dadd( 161.595, -11.873, -6.58287, 0.28 ) }
    dend_31 { pt3dadd( 162.514, -13.7887, -6.04126, 0.55 ) }
    dend_31 { pt3dadd( 164.901, -18.3697, -4.60795, 0.55 ) }
    dend_31 { pt3dadd( 166.142, -20.6649, -3.83348, 0.55 ) }
    dend_31 { pt3dadd( 167.293, -22.7632, -3.10339, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 67.7011, 26.2682, -5.49062, 0.55 ) }
    dend_30 { pt3dadd( 69.7487, 26.6272, -3.86196, 0.55 ) }
    dend_30 { pt3dadd( 70.4065, 26.7398, -3.3766, 0.55 ) }
    dend_30 { pt3dadd( 72.8668, 27.0389, -1.67744, 0.55 ) }
    dend_30 { pt3dadd( 75.6097, 27.428, 0.261507, 0.55 ) }
    dend_30 { pt3dadd( 79.1226, 27.9186, 2.84192, 0.55 ) }
    dend_30 { pt3dadd( 80.0931, 28.0553, 3.54805, 0.55 ) }
    dend_30 { pt3dadd( 81.838, 28.2321, 4.79668, 0.55 ) }
    dend_30 { pt3dadd( 83.7511, 28.471, 6.09225, 0.55 ) }
    dend_30 { pt3dadd( 85.9753, 28.812, 7.49729, 0.55 ) }
    dend_30 { pt3dadd( 88.0696, 29.1635, 8.82931, 0.55 ) }
    dend_30 { pt3dadd( 89.2175, 29.4096, 9.50631, 0.55 ) }
    dend_30 { pt3dadd( 90.5634, 29.7382, 10.2993, 0.55 ) }
    dend_30 { pt3dadd( 92.2268, 30.1939, 11.2502, 0.83 ) }
    dend_30 { pt3dadd( 94.9603, 30.9345, 12.5162, 0.55 ) }
    dend_30 { pt3dadd( 96.7765, 31.3522, 13.2649, 0.83 ) }
    dend_30 { pt3dadd( 99.3064, 31.815, 14.215, 0.55 ) }
    dend_30 { pt3dadd( 100.086, 31.9143, 14.4949, 0.55 ) }
    dend_30 { pt3dadd( 102.512, 32.1016, 15.3109, 0.55 ) }
    dend_30 { pt3dadd( 106.869, 32.1738, 16.593, 0.55 ) }
    dend_30 { pt3dadd( 110.071, 32.0494, 17.4562, 0.55 ) }
    dend_30 { pt3dadd( 112.61, 31.8335, 18.1974, 0.55 ) }
    dend_30 { pt3dadd( 115.202, 31.4776, 19.0397, 0.55 ) }
    dend_30 { pt3dadd( 115.748, 31.3882, 19.2194, 0.28 ) }
    dend_30 { pt3dadd( 116.857, 31.1628, 19.5806, 0.83 ) }
    dend_30 { pt3dadd( 121.414, 30.1713, 21.0891, 0.55 ) }
    dend_30 { pt3dadd( 124.603, 29.4816, 22.083, 0.55 ) }
    dend_30 { pt3dadd( 127.216, 28.981, 22.9652, 0.55 ) }
    dend_30 { pt3dadd( 128.777, 28.6772, 23.5071, 0.83 ) }
    dend_30 { pt3dadd( 130.005, 28.4558, 23.9363, 0.28 ) }
    dend_30 { pt3dadd( 131.119, 28.2568, 24.315, 0.55 ) }
    dend_30 { pt3dadd( 139.664, 28.8058, 28.5465, 0.55 ) }
    dend_30 { pt3dadd( 148.827, 27.9356, 31.1006, 0.55 ) }
    dend_30 { pt3dadd( 157.885, 28.2149, 34.1174, 0.55 ) }
    dend_30 { pt3dadd( 165.985, 27.1087, 39.0567, 0.55 ) }
    dend_30 { pt3dadd( 173.561, 24.7057, 44.3542, 0.55 ) }
    dend_30 { pt3dadd( 181.956, 20.9941, 46.9957, 0.55 ) }
    dend_30 { pt3dadd( 190.278, 16.4179, 48.0136, 0.55 ) }
    dend_30 { pt3dadd( 199.372, 13.5426, 48.5212, 0.55 ) }
    dend_30 { pt3dadd( 208.36, 10.5146, 49.6579, 0.55 ) }
    dend_30 { pt3dadd( 217.686, 8.52959, 50.2225, 0.55 ) }
    dend_30 { pt3dadd( 226.932, 6.9479, 52.0203, 0.55 ) }
    dend_30 { pt3dadd( 235.646, 3.73916, 54.2584, 0.55 ) }
    dend_30 { pt3dadd( 244.505, 2.19163, 57.4765, 0.55 ) }
    dend_30 { pt3dadd( 252.896, 2.01218, 62.0361, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.556256, -30.1142, 5.47276, 1.38 ) }
    dend_13 { pt3dadd( 2.82877, -33.0619, 5.52309, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.556256, -30.1142, 5.47276, 0.55 ) }
    dend_12 { pt3dadd( -1.69344, -31.7224, 5.25294, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.93299, -33.7707, 5.01324, 0.55 ) }
    dend_12 { pt3dadd( -3.91586, -35.1367, 4.83659, 0.55 ) }
    dend_12 { pt3dadd( -4.71387, -36.2784, 4.54415, 0.55 ) }
    dend_12 { pt3dadd( -6.42226, -38.6487, 3.71566, 0.55 ) }
    dend_12 { pt3dadd( -7.61709, -40.2354, 3.09491, 0.55 ) }
    dend_12 { pt3dadd( -8.66853, -41.6572, 2.49582, 0.55 ) }
    dend_12 { pt3dadd( -11.3827, -45.1279, 0.958007, 0.55 ) }
    dend_12 { pt3dadd( -14.6603, -49.1549, -0.860442, 0.55 ) }
    dend_12 { pt3dadd( -17.1917, -52.2085, -2.32108, 0.55 ) }
    dend_12 { pt3dadd( -18.7979, -54.2103, -3.2804, 0.55 ) }
    dend_12 { pt3dadd( -20.6355, -56.6063, -4.37357, 0.55 ) }
    dend_12 { pt3dadd( -22.9492, -60.0215, -5.72058, 0.55 ) }
    dend_12 { pt3dadd( -24.2832, -62.4243, -6.47084, 0.55 ) }
    dend_12 { pt3dadd( -25.935, -65.8618, -7.21676, 0.55 ) }
    dend_12 { pt3dadd( -27.2349, -69.0669, -7.74445, 0.55 ) }
    dend_12 { pt3dadd( -28.5058, -73.0444, -8.24385, 0.55 ) }
    dend_12 { pt3dadd( -29.659, -77.6928, -8.64188, 0.55 ) }
    dend_12 { pt3dadd( -30.2247, -81.2258, -8.79127, 0.55 ) }
    dend_12 { pt3dadd( -30.4152, -82.9772, -8.72952, 0.55 ) }
    dend_12 { pt3dadd( -30.6713, -87.0788, -8.31489, 0.55 ) }
    dend_12 { pt3dadd( -30.8658, -90.9128, -7.81488, 0.55 ) }
    dend_12 { pt3dadd( -30.9292, -94.7641, -6.99095, 0.55 ) }
    dend_12 { pt3dadd( -31.0136, -96.9753, -6.40557, 0.55 ) }
    dend_12 { pt3dadd( -31.2871, -103.81, -4.34196, 0.55 ) }
    dend_12 { pt3dadd( -31.3124, -104.314, -4.18211, 0.55 ) }
    dend_12 { pt3dadd( -31.4266, -107.394, -3.11719, 0.55 ) }
    dend_12 { pt3dadd( -31.9084, -112.918, -1.14129, 0.55 ) }
    dend_12 { pt3dadd( -32.0568, -114.765, -0.58958, 0.55 ) }
    dend_12 { pt3dadd( -32.2536, -117.656, -0.223786, 0.55 ) }
    dend_12 { pt3dadd( -32.248, -118.728, -0.320778, 0.55 ) }
    dend_12 { pt3dadd( -31.9293, -122.344, -1.27818, 0.55 ) }
    dend_12 { pt3dadd( -31.4909, -124.677, -2.35274, 0.55 ) }
    dend_12 { pt3dadd( -30.5324, -128.386, -4.78309, 0.55 ) }
    dend_12 { pt3dadd( -29.1048, -132.911, -8.06183, 0.28 ) }
    dend_12 { pt3dadd( -28.7023, -134.028, -9.01761, 0.55 ) }
    dend_12 { pt3dadd( -28.0547, -135.72, -10.6128, 0.28 ) }
    dend_12 { pt3dadd( -27.9565, -135.976, -10.867, 0.55 ) }
    dend_12 { pt3dadd( -27.4532, -137.374, -12.1431, 0.28 ) }
    dend_12 { pt3dadd( -27.3377, -137.851, -12.4755, 0.55 ) }
    dend_12 { pt3dadd( -26.8941, -140.336, -13.7451, 0.28 ) }
    dend_12 { pt3dadd( -26.7775, -141.184, -14.1736, 0.55 ) }
    dend_12 { pt3dadd( -26.4997, -143.637, -15.283, 0.28 ) }
    dend_12 { pt3dadd( -26.4095, -144.409, -15.6287, 0.55 ) }
    dend_12 { pt3dadd( -26.1287, -147.075, -16.784, 0.28 ) }
    dend_12 { pt3dadd( -25.992, -148.301, -17.3202, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.8678, -35.1394, 22.0697, 0.55 ) }
    dend_10 { pt3dadd( -7.56268, -42.2306, 29.1695, 0.55 ) }
    dend_10 { pt3dadd( -12.2293, -48.341, 36.6012, 0.55 ) }
    dend_10 { pt3dadd( -16.6745, -55.1585, 43.5371, 0.55 ) }
    dend_10 { pt3dadd( -21.3131, -62.0018, 50.3191, 0.55 ) }
    dend_10 { pt3dadd( -24.9498, -70.0901, 56.2938, 0.55 ) }
    dend_10 { pt3dadd( -28.4361, -77.8468, 62.7764, 0.55 ) }
    dend_10 { pt3dadd( -30.9348, -87.3017, 67.1014, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.8678, -35.1394, 22.0697, 0.55 ) }
    dend_3 { pt3dadd( -2.86234, -45.2516, 31.5871, 0.55 ) }
    dend_3 { pt3dadd( -1.44266, -56.897, 39.0847, 0.55 ) }
    dend_3 { pt3dadd( -2.26299, -68.5623, 46.6406, 0.55 ) }
    dend_3 { pt3dadd( -3.96462, -80.8548, 52.9529, 0.55 ) }
    dend_3 { pt3dadd( -5.0948, -93.1163, 59.4509, 0.55 ) }
    dend_3 { pt3dadd( -6.06144, -104.893, 66.8144, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -50.3946, 37.5843, -14.7754, 0.83 ) }
    dend_60 { pt3dadd( -50.4924, 38.4326, -16.7377, 0.83 ) }
    dend_60 { pt3dadd( -50.7479, 40.5763, -21.1989, 0.55 ) }
    dend_60 { pt3dadd( -50.8246, 41.5423, -23.0076, 0.83 ) }
    dend_60 { pt3dadd( -50.873, 42.6118, -24.8422, 0.55 ) }
    dend_60 { pt3dadd( -50.8641, 43.7899, -26.512, 0.55 ) }
    dend_60 { pt3dadd( -50.8262, 44.4168, -27.2534, 0.28 ) }
    dend_60 { pt3dadd( -50.7996, 44.8801, -27.6079, 0.55 ) }
    dend_60 { pt3dadd( -50.5573, 46.5528, -28.4434, 0.28 ) }
    dend_60 { pt3dadd( -50.4246, 47.28, -28.7693, 0.55 ) }
    dend_60 { pt3dadd( -49.9673, 49.8469, -29.7916, 0.28 ) }
    dend_60 { pt3dadd( -49.6403, 51.9083, -30.5198, 0.55 ) }
    dend_60 { pt3dadd( -49.2591, 55.1719, -31.5187, 0.28 ) }
    dend_60 { pt3dadd( -49.01, 58.0654, -32.3173, 0.28 ) }
    dend_60 { pt3dadd( -48.9552, 59.7012, -32.7096, 0.55 ) }
    dend_60 { pt3dadd( -49.007, 61.648, -33.1421, 0.28 ) }
    dend_60 { pt3dadd( -49.088, 62.5847, -33.3203, 0.55 ) }
    dend_60 { pt3dadd( -49.421, 64.762, -33.7995, 0.28 ) }
    dend_60 { pt3dadd( -49.7575, 66.1935, -34.164, 0.28 ) }
    dend_60 { pt3dadd( -50.1292, 67.5866, -34.5545, 0.28 ) }
    dend_60 { pt3dadd( -50.2982, 68.3202, -34.7712, 0.55 ) }
    dend_60 { pt3dadd( -50.841, 71.2566, -35.7581, 0.28 ) }
    dend_60 { pt3dadd( -51.3843, 74.7074, -37.0208, 0.55 ) }
    dend_60 { pt3dadd( -51.5554, 75.8967, -37.4663, 0.55 ) }
    dend_60 { pt3dadd( -51.7393, 77.0988, -37.8826, 0.55 ) }
    dend_60 { pt3dadd( -52.2788, 79.645, -38.7698, 0.55 ) }
    dend_60 { pt3dadd( -52.7523, 81.309, -39.3573, 0.28 ) }
    dend_60 { pt3dadd( -53.0085, 81.9392, -39.5676, 0.55 ) }
    dend_60 { pt3dadd( -53.8149, 83.6632, -40.0682, 0.28 ) }
    dend_60 { pt3dadd( -54.7692, 85.4769, -40.6504, 0.55 ) }
    dend_60 { pt3dadd( -56.4177, 88.0593, -41.5187, 0.28 ) }
    dend_60 { pt3dadd( -57.2362, 89.1298, -41.8824, 0.28 ) }
    dend_60 { pt3dadd( -58.6153, 90.5737, -42.4817, 0.55 ) }
    dend_60 { pt3dadd( -60.1829, 92.0533, -43.1579, 0.28 ) }
    dend_60 { pt3dadd( -60.4704, 92.2827, -43.2657, 0.55 ) }
    dend_60 { pt3dadd( -61.5103, 93.007, -43.6098, 0.28 ) }
    dend_60 { pt3dadd( -65.0886, 95.3299, -44.6649, 0.55 ) }
    dend_60 { pt3dadd( -70.1308, 98.1022, -46.1484, 0.28 ) }
    dend_60 { pt3dadd( -71.0789, 98.5442, -46.4511, 0.55 ) }
    dend_60 { pt3dadd( -73.6968, 99.6561, -47.2867, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -74.8041, 100.101, -47.6579, 0.28 ) }
    dend_60 { pt3dadd( -75.779, 100.452, -48.0111, 0.55 ) }
    dend_60 { pt3dadd( -78.699, 101.122, -49.119, 0.28 ) }
    dend_60 { pt3dadd( -80.7484, 101.442, -49.7697, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -50.3946, 37.5843, -14.7754, 0.55 ) }
    dend_57 { pt3dadd( -50.5587, 38.4491, -15.0105, 0.55 ) }
    dend_57 { pt3dadd( -50.6624, 38.9672, -15.099, 0.28 ) }
    dend_57 { pt3dadd( -50.7993, 39.3508, -15.0617, 0.55 ) }
    dend_57 { pt3dadd( -51.1136, 40.2319, -14.9758, 0.28 ) }
    dend_57 { pt3dadd( -51.3344, 40.8507, -14.9156, 0.55 ) }
    dend_57 { pt3dadd( -51.7414, 41.9916, -14.8045, 0.28 ) }
    dend_57 { pt3dadd( -52.0063, 42.6184, -14.6339, 0.55 ) }
    dend_57 { pt3dadd( -52.9947, 44.1822, -13.6709, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -147.657, -55.8767, -21.1907, 0.55 ) }
    dend_52 { pt3dadd( -153.379, -62.5743, -25.3325, 0.55 ) }
    dend_52 { pt3dadd( -157.593, -69.8114, -30.2938, 0.55 ) }
    dend_52 { pt3dadd( -161.1, -75.9335, -36.9996, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -147.657, -55.8767, -21.1907, 0.55 ) }
    dend_49 { pt3dadd( -151.923, -60.6741, -24.3087, 0.55 ) }
    dend_49 { pt3dadd( -155.44, -65.5445, -28.161, 0.55 ) }
    dend_49 { pt3dadd( -158.666, -70.5191, -32.1333, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -162.518, 14.9931, 56.7199, 0.55 ) }
    dend_47 { pt3dadd( -172.382, 15.1137, 63.3185, 0.55 ) }
    dend_47 { pt3dadd( -182.844, 16.6442, 68.7097, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -162.518, 14.9931, 56.7199, 0.55 ) }
    dend_46 { pt3dadd( -173.609, 13.524, 60.1986, 0.55 ) }
    dend_46 { pt3dadd( -184.683, 13.9661, 64.0003, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 110.724, -54.8263, -94.1089, 0.28 ) }
    dend_39 { pt3dadd( 118.928, -58.923, -104.861, 0.28 ) }
    dend_39 { pt3dadd( 119.713, -59.3933, -105.813, 0.55 ) }
    dend_39 { pt3dadd( 121.039, -60.1874, -107.421, 0.28 ) }
    dend_39 { pt3dadd( 122.155, -60.856, -108.774, 0.28 ) }
    dend_39 { pt3dadd( 123.633, -61.7411, -110.566, 0.55 ) }
    dend_39 { pt3dadd( 125.581, -62.908, -112.929, 0.55 ) }
    dend_39 { pt3dadd( 127.762, -65.0171, -114.023, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 110.724, -54.8263, -94.1089, 0.55 ) }
    dend_36 { pt3dadd( 111.37, -55.8223, -95.1496, 0.55 ) }
    dend_36 { pt3dadd( 111.573, -56.2645, -95.6233, 0.28 ) }
    dend_36 { pt3dadd( 111.88, -57.019, -96.4575, 0.55 ) }
    dend_36 { pt3dadd( 112.556, -58.6812, -98.2953, 0.28 ) }
    dend_36 { pt3dadd( 113.024, -59.8331, -99.5688, 0.55 ) }
    dend_36 { pt3dadd( 113.818, -61.7847, -101.727, 0.28 ) }
    dend_36 { pt3dadd( 114.741, -64.152, -104.576, 0.28 ) }
    dend_36 { pt3dadd( 115.117, -65.2362, -105.916, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 167.293, -22.7632, -3.10339, 0.28 ) }
    dend_33 { pt3dadd( 169.189, -24.7836, -1.30402, 0.28 ) }
    dend_33 { pt3dadd( 171.552, -27.3442, 1.3376, 0.28 ) }
    dend_33 { pt3dadd( 173.036, -28.9717, 3.13545, 0.55 ) }
    dend_33 { pt3dadd( 173.929, -29.8369, 4.19434, 0.28 ) }
    dend_33 { pt3dadd( 174.402, -30.3006, 4.77008, 0.28 ) }
    dend_33 { pt3dadd( 176.757, -32.6109, 7.56422, 0.55 ) }
    dend_33 { pt3dadd( 177.291, -33.0819, 8.27981, 0.28 ) }
    dend_33 { pt3dadd( 178.526, -34.2826, 10.2773, 0.55 ) }
    dend_33 { pt3dadd( 179.586, -35.3585, 11.9444, 0.28 ) }
    dend_33 { pt3dadd( 180.521, -36.2381, 13.2808, 0.55 ) }
    dend_33 { pt3dadd( 181.625, -37.3364, 14.7784, 0.55 ) }
    dend_33 { pt3dadd( 183.418, -39.221, 16.8425, 0.55 ) }
    dend_33 { pt3dadd( 183.852, -39.6941, 17.326, 0.55 ) }
    dend_33 { pt3dadd( 185.406, -41.4789, 19.0991, 0.28 ) }
    dend_33 { pt3dadd( 186.008, -42.2226, 19.7955, 0.55 ) }
    dend_33 { pt3dadd( 186.854, -43.1672, 20.688, 0.28 ) }
    dend_33 { pt3dadd( 188.055, -44.5435, 21.8769, 0.55 ) }
    dend_33 { pt3dadd( 190.095, -46.8765, 23.3734, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 167.293, -22.7632, -3.10339, 0.55 ) }
    dend_32 { pt3dadd( 164.963, -22.7527, -3.46789, 0.55 ) }
    dend_32 { pt3dadd( 163.07, -22.7442, -3.7639, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.82877, -33.0619, 5.52309, 0.83 ) }
    dend_17 { pt3dadd( 2.98882, -33.3431, 5.52043, 0.83 ) }
    dend_17 { pt3dadd( 4.76871, -35.8025, 5.69998, 0.83 ) }
    dend_17 { pt3dadd( 6.34559, -37.9582, 5.70661, 0.55 ) }
    dend_17 { pt3dadd( 7.60361, -39.6781, 5.7119, 0.55 ) }
    dend_17 { pt3dadd( 10.2775, -43.3336, 5.72314, 0.83 ) }
    dend_17 { pt3dadd( 13.5209, -47.7676, 5.73677, 0.55 ) }
    dend_17 { pt3dadd( 15.2771, -50.0832, 5.79954, 0.83 ) }
    dend_17 { pt3dadd( 18.3371, -53.7444, 6.10514, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.82877, -33.0619, 5.52309, 0.55 ) }
    dend_14 { pt3dadd( 3.40758, -34.1144, 2.53003, 0.55 ) }
    dend_14 { pt3dadd( 4.02886, -35.2442, -0.682645, 0.55 ) }
    dend_14 { pt3dadd( 4.76228, -36.5778, -4.47524, 0.55 ) }
    dend_14 { pt3dadd( 5.6529, -38.1973, -9.08068, 0.55 ) }
    dend_14 { pt3dadd( 6.1583, -39.1163, -11.6941, 0.55 ) }
    dend_14 { pt3dadd( 6.25983, -39.3009, -12.2191, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.06144, -104.893, 66.8144, 0.55 ) }
    dend_7 { pt3dadd( -5.9377, -111.768, 71.814, 0.55 ) }
    dend_7 { pt3dadd( -4.56424, -119.004, 76.0587, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.06144, -104.893, 66.8144, 0.55 ) }
    dend_4 { pt3dadd( -6.65469, -113.913, 71.9683, 0.55 ) }
    dend_4 { pt3dadd( -7.72378, -122.719, 77.4084, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.9947, 44.1822, -13.6709, 0.28 ) }
    dend_59 { pt3dadd( -54.0305, 46.8612, -12.0396, 0.28 ) }
    dend_59 { pt3dadd( -54.3887, 47.9068, -11.3362, 0.55 ) }
    dend_59 { pt3dadd( -55.3856, 50.9507, -9.26116, 0.28 ) }
    dend_59 { pt3dadd( -55.9225, 52.4202, -8.34156, 0.55 ) }
    dend_59 { pt3dadd( -57.4369, 56.363, -5.94744, 0.28 ) }
    dend_59 { pt3dadd( -58.9761, 60.3703, -3.51414, 0.55 ) }
    dend_59 { pt3dadd( -61.5046, 66.7596, 0.649054, 0.28 ) }
    dend_59 { pt3dadd( -62.0425, 68.1289, 1.53341, 0.55 ) }
    dend_59 { pt3dadd( -63.2557, 71.2543, 3.34886, 0.28 ) }
    dend_59 { pt3dadd( -63.7266, 72.5318, 4.04169, 0.55 ) }
    dend_59 { pt3dadd( -69.8095, 81.8023, 11.3049, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -77.7126, 91.4989, 15.6887, 0.55 ) }
    dend_59 { pt3dadd( -83.7957, 101.981, 21.058, 0.55 ) }
    dend_59 { pt3dadd( -88.358, 113.747, 25.1118, 0.55 ) }
    dend_59 { pt3dadd( -94.4829, 124.851, 28.9715, 0.55 ) }
    dend_59 { pt3dadd( -101.206, 134.563, 34.9852, 0.55 ) }
    dend_59 { pt3dadd( -106.505, 143.888, 42.7736, 0.55 ) }
    dend_59 { pt3dadd( -110.067, 152.469, 52.2281, 0.55 ) }
    dend_59 { pt3dadd( -113.798, 161.621, 61.0609, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.9947, 44.1822, -13.6709, 0.55 ) }
    dend_58 { pt3dadd( -55.5535, 43.8309, -11.2496, 0.55 ) }
    dend_58 { pt3dadd( -56.8826, 43.5955, -9.97595, 0.28 ) }
    dend_58 { pt3dadd( -57.8717, 43.4204, -9.02812, 0.55 ) }
    dend_58 { pt3dadd( -58.696, 43.2744, -8.23814, 0.28 ) }
    dend_58 { pt3dadd( -59.2734, 43.1721, -7.68481, 0.55 ) }
    dend_58 { pt3dadd( -60.8655, 42.8902, -6.15904, 0.28 ) }
    dend_58 { pt3dadd( -61.9713, 42.5436, -5.25635, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -161.1, -75.9335, -36.9996, 0.55 ) }
    dend_54 { pt3dadd( -164.4, -82.9411, -38.417, 0.55 ) }
    dend_54 { pt3dadd( -167.566, -90.1296, -38.9697, 0.55 ) }
    dend_54 { pt3dadd( -170.116, -97.3251, -40.8994, 0.55 ) }
    dend_54 { pt3dadd( -173.472, -104.39, -41.8099, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -161.1, -75.9335, -36.9996, 0.55 ) }
    dend_53 { pt3dadd( -166.431, -80.2086, -45.7986, 0.55 ) }
    dend_53 { pt3dadd( -171.27, -82.9001, -55.4657, 0.55 ) }
    dend_53 { pt3dadd( -176.988, -86.9919, -64.1076, 0.55 ) }
    dend_53 { pt3dadd( -184.845, -89.4855, -71.6015, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -158.666, -70.5191, -32.1333, 0.55 ) }
    dend_51 { pt3dadd( -161.841, -72.2409, -36.9366, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -158.666, -70.5191, -32.1333, 0.55 ) }
    dend_50 { pt3dadd( -162.344, -77.4963, -31.0005, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 127.762, -65.0171, -114.023, 0.28 ) }
    dend_41 { pt3dadd( 131.658, -66.6909, -115.687, 0.28 ) }
    dend_41 { pt3dadd( 133.468, -67.4684, -116.46, 0.55 ) }
    dend_41 { pt3dadd( 136.919, -68.9511, -117.935, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 127.762, -65.0171, -114.023, 0.55 ) }
    dend_40 { pt3dadd( 127.404, -65.7728, -116.035, 0.55 ) }
    dend_40 { pt3dadd( 126.69, -67.2846, -120.06, 0.28 ) }
    dend_40 { pt3dadd( 126.457, -67.777, -121.371, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 115.117, -65.2362, -105.916, 0.28 ) }
    dend_38 { pt3dadd( 117.32, -70.4805, -110.702, 0.28 ) }
    dend_38 { pt3dadd( 118.41, -73.0773, -113.073, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 115.117, -65.2362, -105.916, 0.55 ) }
    dend_37 { pt3dadd( 113.91, -65.8405, -105.245, 0.55 ) }
    dend_37 { pt3dadd( 110.543, -67.5255, -103.375, 0.28 ) }
    dend_37 { pt3dadd( 109.743, -67.9258, -102.931, 0.55 ) }
    dend_37 { pt3dadd( 107.555, -69.0208, -101.716, 0.28 ) }
    dend_37 { pt3dadd( 106.144, -69.7267, -100.933, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 18.3371, -53.7444, 6.10514, 0.83 ) }
    dend_23 { pt3dadd( 18.4066, -54.0404, 6.07578, 0.83 ) }
    dend_23 { pt3dadd( 19.3459, -57.9097, 5.8125, 0.83 ) }
    dend_23 { pt3dadd( 19.7558, -60.8359, 5.73425, 0.83 ) }
    dend_23 { pt3dadd( 19.8854, -63.685, 5.89465, 0.83 ) }
    dend_23 { pt3dadd( 19.8571, -67.4942, 6.35256, 0.83 ) }
    dend_23 { pt3dadd( 19.6677, -71.8968, 7.00672, 0.83 ) }
    dend_23 { pt3dadd( 19.4129, -76.8155, 7.99079, 0.83 ) }
    dend_23 { pt3dadd( 19.1122, -81.5974, 9.15957, 0.83 ) }
    dend_23 { pt3dadd( 18.4097, -87.4991, 10.3688, 0.83 ) }
    dend_23 { pt3dadd( 17.9825, -90.2206, 10.74, 0.83 ) }
    dend_23 { pt3dadd( 17.6852, -92.2657, 10.8938, 0.83 ) }
    dend_23 { pt3dadd( 17.0556, -96.1949, 11.0888, 0.83 ) }
    dend_23 { pt3dadd( 16.618, -99.7036, 11.0979, 0.83 ) }
    dend_23 { pt3dadd( 16.2777, -107.136, 10.4163, 0.83 ) }
    dend_23 { pt3dadd( 16.2679, -111.187, 9.54319, 0.83 ) }
    dend_23 { pt3dadd( 16.324, -114.916, 8.47392, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 18.3371, -53.7444, 6.10514, 0.55 ) }
    dend_18 { pt3dadd( 17.6704, -55.7091, 5.91808, 0.55 ) }
    dend_18 { pt3dadd( 17.1348, -57.1396, 5.87473, 0.55 ) }
    dend_18 { pt3dadd( 16.7867, -58.0545, 5.939, 0.55 ) }
    dend_18 { pt3dadd( 16.2617, -59.4842, 6.18842, 0.55 ) }
    dend_18 { pt3dadd( 15.2341, -62.3134, 6.87267, 0.55 ) }
    dend_18 { pt3dadd( 14.3682, -64.4619, 7.60239, 0.55 ) }
    dend_18 { pt3dadd( 13.6198, -66.1883, 8.35675, 0.55 ) }
    dend_18 { pt3dadd( 12.7877, -67.9383, 9.2191, 0.55 ) }
    dend_18 { pt3dadd( 12.0637, -69.3925, 9.99989, 0.28 ) }
    dend_18 { pt3dadd( 11.4042, -70.586, 10.7914, 0.55 ) }
    dend_18 { pt3dadd( 10.0672, -72.7689, 12.494, 0.55 ) }
    dend_18 { pt3dadd( 9.13861, -74.1161, 13.6465, 0.55 ) }
    dend_18 { pt3dadd( 8.61311, -74.8712, 14.2829, 0.55 ) }
    dend_18 { pt3dadd( 7.9668, -75.7645, 14.9781, 0.83 ) }
    dend_18 { pt3dadd( 6.08162, -78.4111, 16.8732, 0.28 ) }
    dend_18 { pt3dadd( 5.46559, -79.2864, 17.4791, 0.55 ) }
    dend_18 { pt3dadd( 4.41293, -80.8617, 18.5413, 0.28 ) }
    dend_18 { pt3dadd( 4.07828, -81.3479, 18.9008, 0.55 ) }
    dend_18 { pt3dadd( 3.35645, -82.4844, 19.7438, 0.28 ) }
    dend_18 { pt3dadd( 2.96411, -83.1293, 20.1813, 0.55 ) }
    dend_18 { pt3dadd( 1.73874, -85.2257, 21.0521, 0.55 ) }
    dend_18 { pt3dadd( -0.941775, -90.8128, 25.8375, 0.55 ) }
    dend_18 { pt3dadd( -3.39185, -96.1254, 31.0409, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.25983, -39.3009, -12.2191, 0.55 ) }
    dend_16 { pt3dadd( 7.94161, -40.4102, -15.7879, 0.55 ) }
    dend_16 { pt3dadd( 8.39937, -40.6711, -16.829, 0.55 ) }
    dend_16 { pt3dadd( 9.47465, -41.3291, -19.4176, 0.55 ) }
    dend_16 { pt3dadd( 11.6453, -42.6387, -25.0221, 0.28 ) }
    dend_16 { pt3dadd( 11.9284, -42.8193, -25.8425, 0.55 ) }
    dend_16 { pt3dadd( 13.0098, -43.6534, -29.2274, 0.55 ) }
    dend_16 { pt3dadd( 14.1488, -44.8086, -33.7391, 0.55 ) }
    dend_16 { pt3dadd( 14.5506, -45.2066, -35.4543, 0.28 ) }
    dend_16 { pt3dadd( 14.8331, -45.4723, -36.9338, 0.28 ) }
    dend_16 { pt3dadd( 15.0467, -45.8925, -39.361, 0.55 ) }
    dend_16 { pt3dadd( 15.3933, -46.2816, -42.3592, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 15.7572, -46.4366, -45.1524, 0.55 ) }
    dend_16 { pt3dadd( 16.001, -46.4059, -47.3025, 0.55 ) }
    dend_16 { pt3dadd( 16.2029, -46.2781, -48.7999, 0.55 ) }
    dend_16 { pt3dadd( 16.895, -45.7325, -53.2438, 0.55 ) }
    dend_16 { pt3dadd( 17.5462, -44.8955, -57.9004, 0.55 ) }
    dend_16 { pt3dadd( 17.775, -44.462, -59.8116, 0.28 ) }
    dend_16 { pt3dadd( 18.0195, -44.0737, -61.6375, 0.55 ) }
    dend_16 { pt3dadd( 18.4915, -43.4875, -65.3269, 0.28 ) }
    dend_16 { pt3dadd( 18.6412, -43.3206, -66.5642, 0.83 ) }
    dend_16 { pt3dadd( 18.7959, -42.99, -68.8276, 0.28 ) }
    dend_16 { pt3dadd( 18.7391, -42.8633, -70.3898, 0.55 ) }
    dend_16 { pt3dadd( 18.6202, -42.7519, -72.642, 0.28 ) }
    dend_16 { pt3dadd( 18.5475, -42.6979, -73.5293, 0.55 ) }
    dend_16 { pt3dadd( 18.3382, -42.6288, -75.1431, 0.55 ) }
    dend_16 { pt3dadd( 17.9344, -42.2995, -77.5524, 0.55 ) }
    dend_16 { pt3dadd( 17.5905, -41.9953, -79.0958, 0.28 ) }
    dend_16 { pt3dadd( 17.2208, -41.6051, -80.3053, 0.55 ) }
    dend_16 { pt3dadd( 16.7863, -40.9725, -81.7358, 0.28 ) }
    dend_16 { pt3dadd( 16.7215, -40.8498, -81.9746, 0.55 ) }
    dend_16 { pt3dadd( 16.4645, -39.6578, -84.3276, 0.28 ) }
    dend_16 { pt3dadd( 16.4297, -38.7567, -86.1019, 0.55 ) }
    dend_16 { pt3dadd( 16.6411, -37.4243, -88.557, 0.83 ) }
    dend_16 { pt3dadd( 16.9898, -36.2824, -90.655, 0.28 ) }
    dend_16 { pt3dadd( 17.1199, -35.9892, -91.214, 0.55 ) }
    dend_16 { pt3dadd( 18.2929, -33.7844, -95.5736, 0.28 ) }
    dend_16 { pt3dadd( 18.5524, -33.4065, -96.3591, 0.55 ) }
    dend_16 { pt3dadd( 19.4167, -32.1705, -98.7206, 0.28 ) }
    dend_16 { pt3dadd( 19.643, -31.8525, -99.3315, 0.55 ) }
    dend_16 { pt3dadd( 20.1492, -31.0272, -100.869, 0.28 ) }
    dend_16 { pt3dadd( 20.4591, -30.4347, -101.939, 0.55 ) }
    dend_16 { pt3dadd( 20.8926, -29.1206, -104.221, 0.28 ) }
    dend_16 { pt3dadd( 21.1122, -28.4191, -105.561, 0.55 ) }
    dend_16 { pt3dadd( 21.4671, -27.0728, -108.372, 0.28 ) }
    dend_16 { pt3dadd( 21.5633, -26.7104, -109.205, 0.55 ) }
    dend_16 { pt3dadd( 21.6784, -26.2282, -110.496, 0.28 ) }
    dend_16 { pt3dadd( 21.7338, -25.8237, -111.573, 0.55 ) }
    dend_16 { pt3dadd( 21.7415, -25.0135, -113.764, 0.28 ) }
    dend_16 { pt3dadd( 21.7263, -24.7832, -114.417, 0.55 ) }
    dend_16 { pt3dadd( 21.4252, -22.9938, -119.186, 0.28 ) }
    dend_16 { pt3dadd( 21.195, -22.2633, -120.805, 0.55 ) }
    dend_16 { pt3dadd( 20.6217, -20.8356, -123.623, 0.28 ) }
    dend_16 { pt3dadd( 20.3277, -20.145, -124.877, 0.55 ) }
    dend_16 { pt3dadd( 19.5068, -18.5867, -127.687, 0.28 ) }
    dend_16 { pt3dadd( 19.1653, -18.0619, -128.699, 0.55 ) }
    dend_16 { pt3dadd( 17.7527, -16.5033, -132.278, 0.28 ) }
    dend_16 { pt3dadd( 17.154, -16.0488, -133.765, 0.55 ) }
    dend_16 { pt3dadd( 16.2825, -15.7653, -135.877, 0.55 ) }
    dend_16 { pt3dadd( 15.7181, -15.6787, -137.162, 0.55 ) }
    dend_16 { pt3dadd( 14.3744, -15.5811, -139.686, 0.28 ) }
    dend_16 { pt3dadd( 12.8971, -15.5177, -142.089, 0.28 ) }
    dend_16 { pt3dadd( 11.6065, -15.4585, -144.06, 0.55 ) }
    dend_16 { pt3dadd( 9.75166, -15.1519, -146.32, 0.28 ) }
    dend_16 { pt3dadd( 8.66684, -14.8317, -147.343, 0.55 ) }
    dend_16 { pt3dadd( 5.78943, -13.5432, -149.599, 0.28 ) }
    dend_16 { pt3dadd( 3.95568, -12.5514, -150.531, 0.55 ) }
    dend_16 { pt3dadd( 2.56503, -11.7416, -150.99, 0.28 ) }
    dend_16 { pt3dadd( 0.754217, -10.8347, -151.319, 0.55 ) }
    dend_16 { pt3dadd( -1.66794, -9.64604, -151.607, 0.28 ) }
    dend_16 { pt3dadd( -2.5812, -9.2302, -151.723, 0.55 ) }
    dend_16 { pt3dadd( -7.01177, -7.38682, -152.59, 0.28 ) }
    dend_16 { pt3dadd( -8.49748, -6.8102, -152.893, 0.55 ) }
    dend_16 { pt3dadd( -12.0815, -5.54566, -153.572, 0.28 ) }
    dend_16 { pt3dadd( -14.0281, -4.87661, -153.942, 0.55 ) }
    dend_16 { pt3dadd( -15.6271, -4.32878, -154.249, 0.55 ) }
    dend_16 { pt3dadd( -17.5092, -3.68475, -154.642, 0.28 ) }
    dend_16 { pt3dadd( -18.3965, -3.35605, -154.933, 0.55 ) }
    dend_16 { pt3dadd( -21.2557, -2.1676, -156.01, 0.28 ) }
    dend_16 { pt3dadd( -22.7739, -1.39126, -156.55, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.25983, -39.3009, -12.2191, 0.55 ) }
    dend_15 { pt3dadd( 7.27587, -39.3023, -12.7585, 0.55 ) }
    dend_15 { pt3dadd( 8.29636, -39.177, -13.2745, 0.55 ) }
    dend_15 { pt3dadd( 9.58487, -38.9179, -13.8538, 0.55 ) }
    dend_15 { pt3dadd( 10.6399, -38.6133, -14.2813, 0.55 ) }
    dend_15 { pt3dadd( 17.6123, -35.8248, -16.5662, 0.55 ) }
    dend_15 { pt3dadd( 19.1594, -35.018, -17.1024, 0.55 ) }
    dend_15 { pt3dadd( 21.4171, -33.6599, -17.9428, 0.55 ) }
    dend_15 { pt3dadd( 23.0065, -32.6438, -18.5484, 0.55 ) }
    dend_15 { pt3dadd( 24.5423, -31.5589, -19.1038, 0.28 ) }
    dend_15 { pt3dadd( 26.8888, -29.7456, -19.8395, 0.55 ) }
    dend_15 { pt3dadd( 30.3696, -26.9265, -20.7331, 0.28 ) }
    dend_15 { pt3dadd( 30.6857, -26.7464, -20.8894, 0.55 ) }
    dend_15 { pt3dadd( 32.6074, -26.0744, -22.465, 0.28 ) }
    dend_15 { pt3dadd( 33.747, -25.7644, -23.7501, 0.55 ) }
    dend_15 { pt3dadd( 34.877, -25.5851, -25.2578, 0.55 ) }
    dend_15 { pt3dadd( 36.8994, -25.4388, -27.9914, 0.55 ) }
    dend_15 { pt3dadd( 40.8903, -25.1948, -33.3435, 0.55 ) }
    dend_15 { pt3dadd( 43.6399, -25.064, -36.8881, 0.55 ) }
    dend_15 { pt3dadd( 44.6228, -25.0258, -38.0854, 0.55 ) }
    dend_15 { pt3dadd( 51.2497, -24.6572, -45.802, 0.55 ) }
    dend_15 { pt3dadd( 53.1228, -24.4999, -47.816, 0.55 ) }
    dend_15 { pt3dadd( 54.2567, -24.3936, -48.8666, 0.55 ) }
    dend_15 { pt3dadd( 57.1234, -24.1846, -51.0808, 0.55 ) }
    dend_15 { pt3dadd( 64.379, -24.0344, -55.9751, 0.55 ) }
    dend_15 { pt3dadd( 66.4047, -24.0714, -57.2067, 0.28 ) }
    dend_15 { pt3dadd( 67.6201, -24.1354, -57.8193, 0.55 ) }
    dend_15 { pt3dadd( 69.452, -24.3025, -58.6907, 0.28 ) }
    dend_15 { pt3dadd( 70.2444, -24.441, -58.9901, 0.55 ) }
    dend_15 { pt3dadd( 72.8212, -25.1353, -59.2756, 0.28 ) }
    dend_15 { pt3dadd( 74.5713, -26.265, -58.4963, 0.55 ) }
    dend_15 { pt3dadd( 75.6088, -27.1002, -57.9601, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 76.525, -28.0535, -57.3544, 0.55 ) }
    dend_15 { pt3dadd( 77.3202, -29.1231, -56.7456, 0.28 ) }
    dend_15 { pt3dadd( 77.6845, -29.6833, -56.4897, 0.55 ) }
    dend_15 { pt3dadd( 78.5154, -31.1688, -55.8241, 0.28 ) }
    dend_15 { pt3dadd( 78.7749, -31.6139, -55.7111, 0.55 ) }
    dend_15 { pt3dadd( 80.3361, -34.16, -55.2045, 0.28 ) }
    dend_15 { pt3dadd( 81.1785, -35.3235, -55.0939, 0.55 ) }
    dend_15 { pt3dadd( 83.2292, -37.7768, -55.0718, 0.28 ) }
    dend_15 { pt3dadd( 84.0814, -38.6675, -55.1388, 0.55 ) }
    dend_15 { pt3dadd( 87.1019, -41.5597, -55.4651, 0.28 ) }
    dend_15 { pt3dadd( 87.8594, -42.2601, -55.5718, 0.55 ) }
    dend_15 { pt3dadd( 90.2464, -44.4855, -56.0283, 0.28 ) }
    dend_15 { pt3dadd( 90.7509, -45.0152, -56.1139, 0.55 ) }
    dend_15 { pt3dadd( 92.0313, -46.4246, -56.3561, 0.28 ) }
    dend_15 { pt3dadd( 92.8295, -47.2363, -56.5699, 0.55 ) }
    dend_15 { pt3dadd( 93.6791, -48.0243, -56.8258, 0.55 ) }
    dend_15 { pt3dadd( 95.3676, -49.5971, -57.3238, 0.28 ) }
    dend_15 { pt3dadd( 96.5714, -50.5458, -57.6894, 0.55 ) }
    dend_15 { pt3dadd( 100.395, -52.7883, -58.8675, 0.28 ) }
    dend_15 { pt3dadd( 101.896, -53.4766, -59.3648, 0.55 ) }
    dend_15 { pt3dadd( 102.93, -53.9001, -59.6895, 0.28 ) }
    dend_15 { pt3dadd( 103.976, -54.2697, -60.0015, 0.55 ) }
    dend_15 { pt3dadd( 107.196, -55.2561, -60.9033, 0.28 ) }
    dend_15 { pt3dadd( 109.626, -56.0299, -61.5335, 0.55 ) }
    dend_15 { pt3dadd( 113.73, -57.5738, -62.3617, 0.28 ) }
    dend_15 { pt3dadd( 115.021, -58.0517, -62.617, 0.55 ) }
    dend_15 { pt3dadd( 117.447, -58.9154, -62.9403, 0.28 ) }
    dend_15 { pt3dadd( 118.239, -59.1973, -62.9968, 0.55 ) }
    dend_15 { pt3dadd( 119.462, -59.6483, -62.9068, 0.28 ) }
    dend_15 { pt3dadd( 120.51, -60.0228, -62.7517, 0.55 ) }
    dend_15 { pt3dadd( 123.242, -60.9178, -62.0881, 0.28 ) }
    dend_15 { pt3dadd( 126.345, -61.8297, -61.2824, 0.28 ) }
    dend_15 { pt3dadd( 127.868, -62.2293, -60.7788, 0.28 ) }
    dend_15 { pt3dadd( 129.436, -62.5833, -60.3532, 0.55 ) }
    dend_15 { pt3dadd( 131.721, -63.0017, -59.7398, 0.28 ) }
    dend_15 { pt3dadd( 132.727, -63.174, -59.448, 0.83 ) }
    dend_15 { pt3dadd( 135.259, -63.6491, -58.6171, 0.28 ) }
    dend_15 { pt3dadd( 136.384, -63.877, -58.3113, 0.55 ) }
    dend_15 { pt3dadd( 141.436, -65.047, -57.1673, 0.28 ) }
    dend_15 { pt3dadd( 144.04, -65.6533, -56.7695, 0.28 ) }
    dend_15 { pt3dadd( 145.976, -66.0907, -56.5841, 0.55 ) }
    dend_15 { pt3dadd( 147.147, -66.3631, -56.5808, 0.55 ) }
    dend_15 { pt3dadd( 150.333, -67.1167, -56.7687, 0.28 ) }
    dend_15 { pt3dadd( 153.356, -67.9301, -57.0395, 0.55 ) }
    dend_15 { pt3dadd( 156.115, -68.7405, -57.2866, 0.28 ) }
    dend_15 { pt3dadd( 158.648, -69.5004, -57.6121, 0.55 ) }
    dend_15 { pt3dadd( 160.737, -70.1087, -57.8716, 0.28 ) }
    dend_15 { pt3dadd( 162.415, -70.5092, -58.0129, 0.55 ) }
    dend_15 { pt3dadd( 166.397, -71.2906, -58.2068, 0.28 ) }
    dend_15 { pt3dadd( 168.392, -71.6855, -58.2386, 0.55 ) }
    dend_15 { pt3dadd( 171.359, -72.2875, -58.1974, 0.28 ) }
    dend_15 { pt3dadd( 173.765, -72.7211, -58.1177, 0.55 ) }
    dend_15 { pt3dadd( 179.381, -73.5227, -57.9378, 0.28 ) }
    dend_15 { pt3dadd( 181.703, -73.7341, -57.991, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.56424, -119.004, 76.0587, 0.55 ) }
    dend_9 { pt3dadd( -3.90823, -127.691, 80.4352, 0.55 ) }
    dend_9 { pt3dadd( -1.83754, -136.905, 82.852, 0.55 ) }
    dend_9 { pt3dadd( -0.612227, -145.882, 86.4499, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.56424, -119.004, 76.0587, 0.55 ) }
    dend_8 { pt3dadd( -3.6171, -125.965, 80.855, 0.55 ) }
    dend_8 { pt3dadd( -3.56016, -131.877, 86.9707, 0.55 ) }
    dend_8 { pt3dadd( -3.22107, -136.42, 94.1538, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.72378, -122.719, 77.4084, 0.55 ) }
    dend_6 { pt3dadd( -7.25407, -130.033, 81.9981, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.72378, -122.719, 77.4084, 0.55 ) }
    dend_5 { pt3dadd( -8.78401, -129.921, 81.5567, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 16.324, -114.916, 8.47392, 0.83 ) }
    dend_25 { pt3dadd( 17.1042, -117.541, 8.97757, 0.83 ) }
    dend_25 { pt3dadd( 17.8375, -119.744, 9.58264, 0.83 ) }
    dend_25 { pt3dadd( 18.5664, -121.934, 10.1841, 0.83 ) }
    dend_25 { pt3dadd( 19.2586, -124.014, 10.7553, 0.83 ) }
    dend_25 { pt3dadd( 20.3253, -127.219, 11.6355, 0.83 ) }
    dend_25 { pt3dadd( 21.3843, -130.401, 12.5094, 0.83 ) }
    dend_25 { pt3dadd( 22.212, -132.491, 13.3894, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 16.324, -114.916, 8.47392, 0.55 ) }
    dend_24 { pt3dadd( 17.7382, -116.593, 8.56992, 0.55 ) }
    dend_24 { pt3dadd( 18.8374, -117.906, 8.40342, 0.55 ) }
    dend_24 { pt3dadd( 19.608, -118.883, 8.17646, 0.55 ) }
    dend_24 { pt3dadd( 20.3359, -120.046, 7.74986, 0.83 ) }
    dend_24 { pt3dadd( 21.0799, -121.376, 7.09439, 0.55 ) }
    dend_24 { pt3dadd( 21.8077, -122.677, 6.45325, 0.83 ) }
    dend_24 { pt3dadd( 22.5211, -124.097, 5.61909, 0.55 ) }
    dend_24 { pt3dadd( 22.9368, -124.922, 5.05623, 0.83 ) }
    dend_24 { pt3dadd( 24.177, -127.603, 3.01586, 0.55 ) }
    dend_24 { pt3dadd( 24.9796, -129.724, 1.27115, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.39185, -96.1254, 31.0409, 0.55 ) }
    dend_20 { pt3dadd( -7.36921, -103.887, 35.6439, 0.55 ) }
    dend_20 { pt3dadd( -12.6779, -110.706, 40.3961, 0.55 ) }
    dend_20 { pt3dadd( -18.6743, -116.617, 45.5303, 0.55 ) }
    dend_20 { pt3dadd( -25.4981, -121.388, 50.8148, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.39185, -96.1254, 31.0409, 0.55 ) }
    dend_19 { pt3dadd( -8.68542, -105.871, 36.5747, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 22.212, -132.491, 13.3894, 0.55 ) }
    dend_27 { pt3dadd( 22.3975, -133.87, 13.797, 0.55 ) }
    dend_27 { pt3dadd( 22.6825, -135.626, 14.3629, 0.55 ) }
    dend_27 { pt3dadd( 22.9524, -137.283, 14.8878, 0.55 ) }
    dend_27 { pt3dadd( 23.1306, -138.463, 15.2425, 0.55 ) }
    dend_27 { pt3dadd( 23.425, -140.572, 15.842, 0.55 ) }
    dend_27 { pt3dadd( 24.3458, -146.499, 17.3739, 0.55 ) }
    dend_27 { pt3dadd( 24.7088, -148.51, 17.8061, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 24.971, -149.93, 18.0383, 0.55 ) }
    dend_27 { pt3dadd( 25.2853, -151.555, 18.1711, 0.55 ) }
    dend_27 { pt3dadd( 25.5078, -152.817, 18.1604, 0.55 ) }
    dend_27 { pt3dadd( 26.1173, -155.763, 18.0126, 0.55 ) }
    dend_27 { pt3dadd( 26.5012, -158.006, 17.8972, 0.55 ) }
    dend_27 { pt3dadd( 26.7929, -159.474, 17.8653, 0.55 ) }
    dend_27 { pt3dadd( 27.5345, -163.276, 17.9804, 0.55 ) }
    dend_27 { pt3dadd( 28.0159, -165.829, 18.1727, 0.55 ) }
    dend_27 { pt3dadd( 28.6516, -169.115, 18.6088, 0.55 ) }
    dend_27 { pt3dadd( 29.4209, -172.829, 19.3958, 0.55 ) }
    dend_27 { pt3dadd( 30.0478, -175.295, 20.078, 0.55 ) }
    dend_27 { pt3dadd( 30.4542, -176.748, 20.5211, 0.55 ) }
    dend_27 { pt3dadd( 30.8034, -178.09, 20.9257, 0.55 ) }
    dend_27 { pt3dadd( 31.2753, -179.789, 21.3555, 0.55 ) }
    dend_27 { pt3dadd( 32.3637, -183.899, 22.1063, 0.55 ) }
    dend_27 { pt3dadd( 32.8401, -185.487, 22.3361, 0.55 ) }
    dend_27 { pt3dadd( 33.3273, -187.259, 22.5797, 0.55 ) }
    dend_27 { pt3dadd( 34.0366, -189.922, 22.9316, 0.55 ) }
    dend_27 { pt3dadd( 34.4844, -191.977, 23.2224, 0.55 ) }
    dend_27 { pt3dadd( 34.7948, -193.939, 23.4734, 0.55 ) }
    dend_27 { pt3dadd( 35.0064, -195.817, 23.7133, 0.55 ) }
    dend_27 { pt3dadd( 35.1812, -197.651, 23.9745, 0.55 ) }
    dend_27 { pt3dadd( 35.3136, -198.957, 24.1472, 0.55 ) }
    dend_27 { pt3dadd( 35.544, -201.093, 24.355, 0.55 ) }
    dend_27 { pt3dadd( 35.7853, -203.668, 24.4066, 0.55 ) }
    dend_27 { pt3dadd( 35.9357, -204.919, 24.3365, 0.55 ) }
    dend_27 { pt3dadd( 36.0803, -206.019, 24.1907, 0.55 ) }
    dend_27 { pt3dadd( 36.4498, -208.089, 23.7909, 0.55 ) }
    dend_27 { pt3dadd( 36.6708, -209.404, 23.5003, 0.55 ) }
    dend_27 { pt3dadd( 36.9612, -211.022, 23.2043, 0.55 ) }
    dend_27 { pt3dadd( 37.1215, -212.16, 23.0662, 0.55 ) }
    dend_27 { pt3dadd( 37.4837, -215.121, 22.8248, 0.55 ) }
    dend_27 { pt3dadd( 37.6988, -217.338, 22.8049, 0.55 ) }
    dend_27 { pt3dadd( 37.9718, -220.765, 23.0588, 0.55 ) }
    dend_27 { pt3dadd( 38.1945, -222.967, 23.4339, 0.55 ) }
    dend_27 { pt3dadd( 38.4097, -225.277, 23.9042, 0.28 ) }
    dend_27 { pt3dadd( 38.4725, -226.206, 24.1321, 0.28 ) }
    dend_27 { pt3dadd( 38.6124, -228.457, 24.8937, 0.28 ) }
    dend_27 { pt3dadd( 38.7205, -230.532, 25.7654, 0.28 ) }
    dend_27 { pt3dadd( 39.1178, -233.246, 27.2071, 0.28 ) }
    dend_27 { pt3dadd( 40.8462, -239.33, 28.8413, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 22.212, -132.491, 13.3894, 0.55 ) }
    dend_26 { pt3dadd( 23.5395, -132.941, 14.5314, 0.55 ) }
    dend_26 { pt3dadd( 26.1661, -134.156, 17.0891, 0.55 ) }
    dend_26 { pt3dadd( 28.3848, -135.383, 19.4026, 0.28 ) }
    dend_26 { pt3dadd( 30.7239, -136.795, 21.9645, 0.55 ) }
    dend_26 { pt3dadd( 32.0058, -137.708, 23.725, 0.28 ) }
    dend_26 { pt3dadd( 34.0719, -139.368, 27.0319, 0.55 ) }
    dend_26 { pt3dadd( 34.7362, -140.279, 28.7414, 0.28 ) }
    dend_26 { pt3dadd( 34.9243, -140.612, 29.4355, 0.28 ) }
    dend_26 { pt3dadd( 35.2351, -141.078, 30.6431, 0.55 ) }
    dend_26 { pt3dadd( 36.6005, -142.571, 35.1261, 0.28 ) }
    dend_26 { pt3dadd( 37.2175, -143.144, 36.9852, 0.55 ) }
    dend_26 { pt3dadd( 39.4229, -144.779, 42.1857, 0.28 ) }
    dend_26 { pt3dadd( 40.7316, -145.564, 44.8655, 0.28 ) }
    dend_26 { pt3dadd( 42.4841, -146.573, 48.0588, 0.55 ) }
    dend_26 { pt3dadd( 45.3544, -148.14, 52.4869, 0.28 ) }
    dend_26 { pt3dadd( 45.7842, -148.345, 53.0316, 0.55 ) }
    dend_26 { pt3dadd( 48.0249, -149.336, 55.5431, 0.28 ) }
    dend_26 { pt3dadd( 48.2464, -149.427, 55.7458, 0.55 ) }
    dend_26 { pt3dadd( 50.1831, -150.574, 57.6022, 0.28 ) }
    dend_26 { pt3dadd( 51.0705, -151.214, 58.5465, 0.55 ) }
    dend_26 { pt3dadd( 58.2752, -155.883, 66.3755, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.4981, -121.388, 50.8148, 0.55 ) }
    dend_22 { pt3dadd( -30.8947, -126.213, 58.7241, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -25.4981, -121.388, 50.8148, 0.55 ) }
    dend_21 { pt3dadd( -31.9524, -129.299, 56.1952, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_61 nseg = 13
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 5
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_27 nseg = 5
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_BP_46b0f41def_0_0


