// Cell: cADpyr230_L4_SP_c3f779f565_0_0
/*
{
  "id" : "cADpyr230_L4_SP_c3f779f565_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.7762, -6.65843, 1.68973, 1.62225", "-3.37091, -6.05756, 1.49202, 2.68302", "-2.96562, -5.45669, 1.29431, 4.18183", "-2.56033, -4.85582, 1.09659, 5.23637", "-2.15504, -4.25495, 0.898882, 5.96111", "-1.74975, -3.65409, 0.701169, 6.6575", "-1.34446, -3.05322, 0.503456, 7.22539", "-0.939173, -2.45235, 0.305744, 7.74314", "-0.533883, -1.85148, 0.108031, 8.02668", "-0.128593, -1.25061, -0.0896814, 7.99979", "0.276697, -0.649743, -0.287394, 7.71194", "0.681986, -0.0488738, -0.485107, 7.51065", "1.08728, 0.551995, -0.682819, 7.35885", "1.49257, 1.15286, -0.880532, 7.1093", "1.89786, 1.75373, -1.07824, 6.85975", "2.30315, 2.3546, -1.27596, 6.61021", "2.70844, 2.95547, -1.47367, 6.35799", "3.11373, 3.55634, -1.67138, 5.44931", "3.51902, 4.15721, -1.86909, 4.29173", "3.92431, 4.75808, -2.06681, 2.41932", "4.3296, 5.35894, -2.26452, 1.40798" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-0.790603, 5.91784, -1.87579, 2.22", "-0.895269, 6.58334, -2.0865, 2.22", "-0.913649, 8.61523, -1.96984, 1.66", "-0.950849, 12.7247, -1.73391, 1.66", "-0.969619, 14.7986, -1.61484, 1.39", "-0.986479, 16.6614, -1.50789, 1.39", "-1.00074, 18.2369, -1.41744, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.42677, -4.17199, -2.46667, 1.94", "-4.21274, -5.13558, -3.00198, 1.94", "-5.12404, -7.82128, -3.49217, 1.11", "-5.93238, -10.2036, -3.92699, 1.11", "-6.4555, -11.7452, -4.20837, 1.11", "-7.30151, -14.2385, -4.66345, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.13212, -1.65457, -2.57467, 0.83", "-9.56635, -3.19554, -4.70421, 0.83", "-10.6604, -4.08394, -4.43751, 0.83", "-13.8593, -6.62535, -3.85276, 1.11", "-16.8431, -8.85341, -3.21011, 0.55", "-18.1446, -9.79917, -2.93062, 0.55", "-20.2201, -11.2138, -2.54849, 0.55", "-22.2933, -12.3356, -2.40551, 0.55", "-23.2744, -12.8552, -2.39035, 0.55", "-26.0954, -14.2411, -2.41763, 0.55", "-28.3275, -15.3654, -2.2991, 0.55", "-30.5999, -16.4062, -2.10211, 0.83", "-33.0186, -17.4505, -1.79519, 0.55", "-34.0368, -17.906, -1.66993, 0.83", "-36.5435, -19.0938, -1.5219, 0.55", "-39.8351, -20.7626, -1.60691, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.00657, -1.7762, 3.02105, 1.39", "11.2557, -4.25977, 6.95016, 1.39", "13.851, -5.43797, 2.30203, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.10871, 3.75617, -3.97262, 1.39", "4.04589, 4.87878, -5.19832, 1.39", "6.88653, 5.16566, -8.79633, 1.39", "9.59622, 5.4393, -12.2285, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.3296, 5.35894, -2.26452, 0.670401", "12.7175, 17.7945, -2.26452, 0.670401", "21.1054, 30.2301, -2.26452, 0.670401" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.00074, 18.2369, -1.41744, 1.94", "-2.78418, 22.1666, -2.16391, 1.11", "-3.91451, 24.6571, -2.63702, 1.11" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-1.00074, 18.2369, -1.41744, 1.94", "-7.34064, 20.4121, 0.650147, 1.11", "-12.722, 22.0096, 2.49714, 0.83", "-15.5754, 22.7575, 3.54617, 0.83", "-20.2573, 24.0005, 5.41184, 0.83", "-24.1363, 24.929, 6.9047, 0.83", "-26.4148, 25.3788, 7.77039, 0.83", "-30.6237, 25.9642, 9.77273, 0.83", "-33.6864, 26.1364, 11.2771, 0.83", "-37.3338, 26.1054, 13.1282, 0.83", "-41.3449, 25.87, 15.2786, 0.83", "-44.4648, 25.7584, 17.0789, 0.83", "-48.4608, 25.7423, 19.5039, 0.83", "-51.3091, 25.9629, 21.2807, 0.55", "-55.3394, 26.4684, 23.7985, 0.55", "-60.1589, 27.4959, 26.8745, 0.55", "-62.6739, 28.2661, 28.5969, 0.55", "-65.3683, 29.3038, 30.427, 0.55", "-70.1305, 31.096, 33.5374, 0.55", "-70.9928, 31.4262, 34.1138, 0.83", "-76.0576, 33.25, 37.5486, 0.55", "-80.1429, 34.5179, 40.3446, 0.55", "-81.7251, 34.9962, 41.49, 0.55", "-87.7869, 36.9046, 45.9059, 0.55", "-90.229, 37.6187, 47.8626, 0.55", "-92.2714, 38.2956, 49.6548, 0.55", "-94.0273, 38.941, 51.2473, 0.55", "-97.3215, 40.4414, 54.2812, 0.55", "-99.8487, 41.7318, 56.6857, 0.55", "-103.079, 43.8537, 60.4539, 0.55", "-105.433, 45.4337, 63.6372, 0.55", "-106.897, 46.4633, 66.1389, 1.11", "-108.126, 47.3594, 68.3997, 0.55", "-109.314, 48.1255, 70.7272, 0.83", "-111.588, 49.7979, 76.1307, 0.28", "-112.601, 50.5808, 78.568, 0.28", "-113.958, 51.4446, 82.8214, 0.55" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-7.30151, -14.2385, -4.66345, 1.94", "-7.23998, -15.881, -6.62801, 1.39", "-7.20612, -16.7849, -7.70917, 1.39" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-7.30151, -14.2385, -4.66345, 1.94", "-10.3673, -17.7497, -4.82476, 0.55", "-11.9274, -19.6915, -5.01196, 0.83", "-15.8967, -24.8273, -5.82454, 0.55", "-18.8002, -28.8767, -6.19954, 0.55", "-20.9036, -31.678, -6.36687, 0.55", "-23.0352, -34.482, -6.47389, 0.55", "-25.1822, -37.0141, -6.56743, 0.55", "-28.0825, -40.4309, -6.65422, 0.55", "-29.7928, -42.4235, -6.71261, 0.55", "-32.2155, -45.107, -6.67952, 0.55", "-34.1269, -46.8953, -6.49642, 0.55", "-38.0402, -50.0707, -6.06589, 0.55", "-40.7157, -52.0628, -5.82278, 0.55", "-41.7173, -52.7413, -5.77636, 0.55", "-45.1815, -54.9287, -5.5202, 0.83", "-48.0224, -56.6044, -5.12091, 0.55", "-50.6462, -58.0986, -4.53829, 1.11", "-55.1911, -60.5814, -3.1608, 0.55", "-57.8026, -62.0165, -2.30064, 0.55", "-60.6435, -63.7106, -1.24443, 0.83", "-64.5153, -66.3458, 0.374219, 0.55", "-67.4244, -68.5095, 1.76152, 0.55", "-69.451, -70.2366, 2.87002, 0.55", "-70.7885, -71.5914, 3.64182, 0.55", "-72.4526, -73.5153, 4.54254, 0.55", "-74.4675, -76.0535, 5.53553, 0.55", "-75.3525, -77.2243, 5.91721, 0.55", "-77.939, -80.4977, 6.84601, 0.55", "-80.3824, -83.5603, 7.659, 0.55", "-82.3318, -85.8983, 8.26066, 0.55", "-84.0136, -87.8593, 8.72869, 0.28", "-84.8808, -88.8532, 8.97731, 0.55", "-86.8703, -91.1852, 9.55937, 0.28", "-88.4396, -92.9763, 10.0484, 0.83", "-89.8839, -94.8621, 10.4848, 0.55", "-91.5081, -97.2026, 10.9167, 0.28", "-92.072, -98.0929, 11.0329, 0.55", "-93.1128, -99.8566, 11.1953, 0.28", "-93.5913, -100.817, 11.2251, 0.55", "-94.7516, -103.639, 11.1674, 0.28", "-95.252, -105.06, 11.0919, 0.55", "-95.8196, -106.91, 10.9408, 0.28", "-96.1162, -107.909, 10.8554, 0.55", "-96.501, -109.354, 10.7155, 0.28", "-97.1505, -111.726, 10.5106, 0.28", "-97.59, -113.338, 10.3927, 0.55", "-98.4711, -116.103, 10.4062, 0.28", "-98.9306, -117.362, 10.4848, 0.28", "-99.4649, -118.597, 10.6654, 0.83", "-101.097, -121.918, 11.3757, 0.28", "-102.215, -124.013, 11.9895, 0.83", "-105.08, -128.886, 13.804, 0.28", "-105.466, -129.495, 14.0711, 0.55", "-107.386, -132.392, 15.4878, 0.28", "-107.638, -132.75, 15.6905, 0.55", "-108.839, -134.277, 16.7997, 0.28", "-109.261, -134.718, 17.2124, 0.55", "-116.159, -144.131, 20.5379, 0.55", "-124.016, -151.936, 25.4997, 0.55", "-130.134, -160.231, 31.9033, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-39.8351, -20.7626, -1.60691, 0.83", "-41.2437, -21.6803, -3.22045, 0.55", "-44.6676, -23.3784, -7.1128, 0.55", "-46.9311, -24.763, -9.61873, 0.55", "-48.5612, -25.9471, -11.5776, 0.55", "-51.281, -28.1795, -15.4898, 0.55", "-52.6514, -29.2344, -17.6841, 0.55", "-54.5255, -30.7733, -21.1899, 0.55", "-55.2328, -31.38, -22.9091, 0.55", "-55.9774, -32.0896, -25.6411, 0.55", "-56.6072, -33.042, -29.5075, 0.83", "-57.3984, -34.4032, -34.7092, 0.55", "-57.5381, -34.6042, -35.738, 0.55", "-58.1796, -35.022, -39.8205, 0.28", "-58.7749, -35.2412, -42.6736, 0.83", "-59.2633, -35.3581, -44.7802, 0.83", "-60.5375, -35.5358, -49.751, 0.28", "-60.9556, -35.591, -51.5058, 0.28", "-62.6579, -35.7215, -58.4849, 1.66", "-63.7364, -35.8605, -62.8416, 0.28", "-64.137, -35.9313, -64.4688, 0.28", "-64.8441, -35.941, -67.0028, 1.11", "-65.7066, -36.0292, -69.9664, 0.55", "-66.6271, -36.353, -72.4966, 0.28", "-67.1587, -36.5708, -73.6605, 0.55", "-68.9541, -37.131, -77.2073, 0.55", "-72.4655, -38.1061, -83.8952, 0.55", "-75.1744, -38.6751, -88.6414, 0.28", "-76.3975, -38.878, -90.6805, 0.83", "-80.4831, -39.5465, -97.2329, 0.83", "-82.7144, -39.7808, -100.762, 0.28", "-83.0787, -39.7888, -101.334, 0.83", "-87.209, -39.7019, -107.664, 0.28", "-88.0073, -39.5508, -108.837, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-39.8351, -20.7626, -1.60691, 0.83", "-42.6557, -21.1627, -1.61716, 0.55", "-44.5796, -21.5034, -1.58106, 0.55", "-48.6685, -22.092, -1.48507, 0.55", "-53.2208, -23.0362, -1.18754, 0.55", "-56.4048, -23.8528, -0.945245, 0.55", "-59.9183, -24.89, -0.613897, 0.55", "-61.3547, -25.4205, -0.506336, 0.55", "-64.0855, -26.6649, -0.286338, 0.55", "-68.6531, -29.2466, -0.0122561, 0.55", "-71.7048, -31.3607, 0.234891, 0.83", "-73.5066, -32.6593, 0.325363, 0.55", "-76.584, -34.8044, 0.272913, 0.55", "-77.5253, -35.4368, 0.224834, 0.55", "-79.5732, -36.8066, 0.122593, 0.55", "-82.2278, -38.4414, -0.171269, 1.11", "-86.194, -40.795, -0.609772, 0.55", "-87.9012, -41.7043, -0.860466, 0.55", "-89.4802, -42.3933, -1.09076, 0.83", "-91.1069, -43.0698, -1.38846, 0.55", "-94.3951, -44.6039, -2.14519, 0.55", "-95.1116, -44.9493, -2.33118, 0.55", "-98.1532, -46.1657, -3.01961, 1.39", "-100.783, -47.2303, -3.54348, 0.83", "-103.359, -48.1926, -3.95398, 0.55", "-104.816, -48.5838, -4.12229, 0.55", "-106.92, -49.009, -4.21312, 0.55", "-111.286, -49.766, -4.36163, 0.55", "-113.488, -50.0867, -4.41798, 0.55", "-114.917, -50.3125, -4.52629, 0.55", "-118.251, -50.8899, -5.01958, 0.83", "-120.303, -51.2922, -5.46021, 0.83", "-123.79, -52.2382, -6.49585, 0.55", "-125.785, -52.9563, -7.24166, 0.83", "-128.013, -53.8933, -8.15976, 0.28", "-129.993, -54.9565, -9.03076, 0.55", "-130.679, -55.478, -9.30545, 0.28", "-131.723, -56.3927, -9.74167, 0.83", "-132.824, -57.5722, -10.1583, 0.55", "-134.495, -59.478, -10.6326, 0.28", "-135.916, -61.1757, -10.8965, 0.55", "-137.931, -63.5527, -11.2024, 0.28", "-140.513, -66.3768, -11.6049, 0.83", "-142.241, -68.0713, -11.961, 0.83", "-145.369, -71.1669, -12.6566, 0.28", "-147.862, -73.5271, -13.2331, 0.55", "-149.861, -75.4182, -13.7021, 0.28", "-151.343, -76.6968, -14.0675, 0.83", "-154.007, -79.0448, -14.513, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.851, -5.43797, 2.30203, 1.39", "16.6847, -3.73463, -1.39769, 0.83", "18.428, -2.68673, -3.67377, 0.83", "19.496, -2.04477, -5.06813, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.851, -5.43797, 2.30203, 1.39", "16.5159, -2.473, 4.94033, 1.11", "17.3435, -1.55221, 5.75968, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.59622, 5.4393, -12.2285, 1.39", "10.4505, 7.46007, -15.736, 1.11", "10.9935, 8.74438, -17.9652, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.59622, 5.4393, -12.2285, 1.39", "11.0694, 4.43947, -14.5997, 0.55", "12.28, 3.51795, -16.5692, 0.55", "13.3377, 2.63103, -18.0139, 0.55", "14.4215, 1.91591, -19.1198, 0.83", "15.9476, 1.09094, -20.2918, 0.83", "18.2133, 0.0107659, -21.7185, 0.28", "19.7118, -0.642742, -22.4662, 0.83", "22.649, -1.92931, -23.7278, 0.83", "28.1857, -4.39837, -25.6506, 0.83", "31.8002, -6.13092, -26.8534, 0.83", "34.224, -7.27816, -27.5527, 0.55", "35.1741, -7.70102, -27.7828, 0.55", "36.5382, -8.28875, -28.0781, 1.11", "39.5589, -9.65205, -28.8049, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.1054, 30.2301, -2.26452, 0.67", "29.4932, 42.6657, -2.26452, 0.67", "37.8811, 55.1012, -2.26452, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-3.91451, 24.6571, -2.63702, 1.11", "-4.37292, 25.6563, -3.60032, 1.11", "-5.29441, 27.6648, -5.53677, 1.11", "-7.33303, 32.1082, -9.82078, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-3.91451, 24.6571, -2.63702, 1.11", "-8.8377, 25.3154, 1.7109, 0.83", "-11.1069, 25.7848, 3.75787, 0.83", "-12.0939, 26.0087, 4.57575, 0.83", "-14.2961, 26.4658, 6.17665, 0.83", "-16.117, 26.7688, 7.31923, 0.83", "-17.8568, 26.9533, 8.24859, 0.83", "-19.5096, 26.8624, 9.17218, 0.83", "-21.6973, 26.7646, 8.96469, 0.83", "-23.4571, 26.7434, 8.39942, 0.83", "-24.6222, 26.6632, 7.87104, 0.83", "-25.8408, 26.5176, 7.30901, 0.83", "-27.2119, 26.2826, 6.77619, 0.83", "-31.1249, 25.5534, 5.79658, 0.83", "-32.6221, 25.3859, 5.56058, 0.83", "-34.529, 25.329, 5.37871, 0.83", "-35.9513, 25.3338, 5.30467, 0.83", "-37.6159, 25.3385, 5.24375, 0.83", "-39.8012, 25.329, 5.2671, 0.83", "-42.3564, 25.2758, 5.50613, 1.11", "-44.2573, 25.2425, 5.76586, 0.55", "-46.1793, 25.1883, 6.01393, 0.55", "-47.4821, 25.0785, 6.16098, 0.55", "-49.7883, 24.7524, 6.46184, 0.83", "-51.4802, 24.3207, 6.7492, 0.55", "-52.8273, 23.8009, 7.0235, 0.55", "-54.3504, 23.0386, 7.3725, 1.11", "-55.4595, 22.4038, 7.68903, 0.55", "-56.6722, 21.6349, 8.13192, 0.55", "-57.6635, 20.957, 8.48285, 0.55", "-58.3706, 20.5081, 8.72006, 0.55", "-59.9236, 19.576, 9.2416, 0.83", "-61.6203, 18.5753, 9.86393, 0.28", "-62.8346, 17.8713, 10.2677, 1.39", "-64.4299, 16.9395, 10.7794, 1.11", "-65.7247, 16.2032, 11.2422, 0.28", "-66.537, 15.7485, 11.5434, 0.55", "-67.7724, 15.0989, 11.9424, 0.28", "-68.8983, 14.469, 12.259, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.20612, -16.7849, -7.70917, 1.39", "-12.7796, -16.9525, -7.54189, 0.83", "-14.842, -17.0145, -7.47999, 0.83", "-16.2757, -17.0576, -7.43695, 0.83", "-17.8978, -17.1063, -7.38827, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.20612, -16.7849, -7.70917, 1.39", "-5.511, -19.8463, -8.88284, 0.83", "-3.80325, -22.6881, -10.1626, 0.83", "-2.58045, -25.0035, -11.1199, 0.83", "-0.970819, -28.1934, -12.4845, 0.83", "0.0199549, -30.3792, -13.3855, 0.83", "1.92906, -34.7799, -15.2564, 0.83", "3.57198, -38.932, -16.8093, 0.83", "5.10157, -43.2368, -18.3362, 0.83", "6.44478, -47.1319, -19.6483, 0.83", "7.3601, -49.8886, -20.5165, 0.83", "8.67629, -54.2477, -21.6687, 0.83", "9.40254, -56.962, -22.2699, 0.83", "9.88422, -59.0648, -22.6045, 0.83", "10.6018, -61.9497, -22.9843, 0.55", "11.0935, -64.124, -23.0951, 1.39", "12.1305, -68.3664, -23.1667, 1.39" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.496, -2.04477, -5.06813, 0.83", "21.4777, -2.94194, -7.48578, 0.83", "23.3127, -3.97941, -9.80649, 0.83", "26.1982, -5.7547, -13.3273, 0.55", "28.8351, -7.51844, -16.5104, 0.55", "31.4296, -9.34938, -19.415, 0.55", "33.6383, -10.9099, -21.8003, 0.55", "36.4356, -12.9646, -24.7522, 0.55", "38.8507, -14.6036, -27.3256, 0.55", "41.8126, -16.5164, -30.6594, 0.55", "46.9194, -19.5547, -36.7754, 0.55", "48.5929, -20.4262, -38.8603, 0.55", "51.7075, -21.8828, -42.9543, 0.55", "54.5546, -23.0732, -46.8833, 0.55", "57.9736, -24.4219, -51.7864, 0.55", "60.1659, -25.294, -54.9254, 0.55", "62.4591, -26.2213, -58.3383, 0.55", "65.9085, -27.6021, -63.2194, 0.55", "67.2401, -28.1471, -64.978, 0.55", "69.5737, -29.0472, -67.7805, 0.55", "73.5993, -30.3431, -72.2901, 0.55", "78.0443, -31.4414, -77.0722, 0.55", "81.1004, -31.9869, -80.3064, 0.55", "85.079, -32.4217, -84.4439, 0.55", "88.8542, -32.5883, -88.2849, 0.55", "92.5317, -32.5243, -91.959, 0.55", "95.0357, -32.3823, -94.359, 0.55", "97.4789, -32.2799, -96.5789, 0.55", "99.1898, -32.2784, -98.1604, 0.83", "102.941, -32.2263, -101.613, 0.55", "104.402, -32.2706, -102.982, 0.83", "109.292, -32.5454, -107.793, 0.55", "110.688, -32.6624, -109.221, 0.83", "115.93, -33.2071, -114.748, 0.55", "118.037, -33.5611, -117.058, 0.55", "120.269, -34.0411, -119.627, 0.55", "122.877, -34.649, -122.701, 0.55", "124.485, -35.0136, -124.656, 0.55", "126.047, -35.4006, -126.615, 0.55", "129.192, -36.3663, -130.832, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.496, -2.04477, -5.06813, 0.83", "22.7862, -4.68423, -1.35608, 0.83", "25.0293, -5.92386, 0.672194, 0.83", "29.3067, -7.33316, 3.74114, 0.83", "31.5301, -8.0657, 5.33633, 0.83", "33.1414, -8.59659, 6.49243, 0.83", "36.8581, -9.82116, 9.15909, 0.55", "39.5303, -10.0922, 10.7488, 0.55", "42.6549, -9.9306, 12.1586, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "17.3435, -1.55221, 5.75968, 1.11", "20.2538, 1.89438, 8.39823, 0.55", "22.2015, 4.84338, 10.5142, 0.83", "23.5064, 7.01128, 12.2903, 0.55", "25.3889, 10.139, 14.8529, 0.55", "25.9331, 11.0431, 15.5936, 0.55", "26.812, 12.5034, 16.79, 0.83", "27.5447, 13.5517, 17.9824, 0.55", "28.4443, 15.0842, 19.0445, 0.83", "35.8651, 23.9528, 23.9289, 0.83", "43.7901, 33.0272, 27.4543, 0.83", "51.9086, 41.5644, 31.7882, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "17.3435, -1.55221, 5.75968, 1.11", "16.2316, -2.58532, 9.19899, 0.55", "15.8151, -3.11475, 10.6525, 0.55", "15.3978, -3.71988, 12.5179, 0.55", "14.2895, -6.22755, 19.9797, 0.55", "14.0195, -6.937, 22.271, 0.55", "13.9077, -7.32526, 23.617, 0.55", "13.8478, -8.40503, 27.6112, 0.55", "13.9501, -9.35529, 31.29, 0.55", "14.2533, -10.3183, 35.4522, 0.55", "14.4968, -10.776, 37.3856, 0.55", "14.9819, -11.4886, 40.0086, 1.11", "14.1112, -12.496, 51.1752, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "10.9935, 8.74438, -17.9652, 1.39", "16.4172, 10.2853, -21.2056, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.9935, 8.74438, -17.9652, 1.39", "11.3345, 9.06887, -19.1684, 0.83", "11.7257, 9.73026, -21.2314, 0.83", "12.0365, 10.8299, -24.1667, 0.83", "12.1098, 11.1749, -25.0935, 0.83", "12.1079, 11.795, -26.9165, 0.83", "12.1039, 13.0633, -30.6449, 0.83", "12.038, 13.7472, -32.6684, 0.83", "11.9158, 14.1753, -33.8263, 0.83", "11.6976, 14.9802, -35.7349, 0.83", "11.1445, 16.1059, -39.105, 1.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "39.5589, -9.65205, -28.8049, 0.83", "43.1783, -12.4041, -29.8829, 0.83", "44.6955, -13.5126, -30.598, 0.83", "45.569, -14.1519, -30.9804, 0.83", "46.9634, -15.2009, -31.5222, 0.83", "48.9114, -16.6739, -32.2754, 0.83", "51.7949, -18.874, -33.3642, 0.83", "53.6712, -20.3394, -34.0679, 0.83", "55.8039, -22.0929, -34.8122, 0.83", "57.9225, -23.8648, -35.5357, 0.83", "61.9663, -27.457, -36.7964, 0.83", "63.3153, -28.6219, -37.2016, 0.83", "64.7229, -29.8226, -37.5993, 0.83", "66.5016, -31.4528, -38.1655, 0.83", "67.647, -32.5166, -38.5444, 0.83", "69.0157, -33.8349, -38.9485, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "39.5589, -9.65205, -28.8049, 0.83", "43.6757, -14.8408, -32.0853, 0.28", "43.8889, -15.1778, -32.416, 0.55", "44.9061, -16.7211, -33.8579, 0.28", "46.0638, -18.4679, -35.3768, 1.11", "49.4634, -23.4707, -39.625, 0.28", "49.9021, -24.1113, -40.1502, 0.83", "52.4328, -27.5118, -42.7491, 0.28", "52.9846, -28.2217, -43.2493, 0.55", "54.0175, -29.5286, -44.0883, 0.28", "55.8103, -31.6759, -45.3781, 0.83", "58.1846, -34.3902, -46.8265, 0.28", "59.4928, -35.8774, -47.6377, 0.55", "61.3459, -37.9588, -48.8217, 0.28", "62.0507, -38.719, -49.2522, 0.55", "64.6426, -41.3821, -50.7962, 0.28", "66.8152, -43.5472, -51.9204, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-7.33303, 32.1082, -9.82078, 1.11", "-6.83897, 38.2538, -10.9074, 1.11", "-6.09115, 42.9896, -11.633, 1.11", "-5.20767, 48.5844, -12.4901, 1.11", "-4.67705, 51.9447, -13.0049, 1.11", "-4.02409, 56.0798, -13.6384, 1.11", "-3.01048, 62.4987, -14.6218, 1.11", "-3.1731, 69.3539, -16.4485, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-7.33303, 32.1082, -9.82078, 1.11", "-8.5504, 31.8334, -7.52803, 1.11", "-10.4312, 31.4089, -3.98576, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-17.8978, -17.1063, -7.38827, 1.11", "-18.6652, -17.388, -9.95035, 0.55", "-18.7805, -17.4904, -10.3119, 0.55", "-19.1128, -17.8828, -11.2483, 0.55", "-21.1277, -20.3953, -16.0449, 0.55", "-21.6713, -20.981, -17.0862, 0.55", "-21.9747, -21.3079, -17.6673, 0.55", "-23.5094, -23.0629, -20.1738, 0.55", "-24.0366, -23.7221, -20.992, 0.55", "-24.5833, -24.5249, -21.7565, 0.55", "-25.793, -26.4227, -22.3972, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-17.8978, -17.1063, -7.38827, 1.11", "-19.2404, -20.7662, -8.75905, 0.83", "-21.1335, -24.8394, -10.2562, 0.83", "-21.7627, -26.1792, -10.6896, 0.28", "-22.185, -27.1349, -10.9928, 0.83", "-23.1357, -29.3442, -11.5446, 0.55", "-24.7488, -32.8278, -12.3214, 0.55", "-27.3198, -37.8618, -13.3629, 0.55", "-28.4719, -39.9907, -13.8645, 0.55", "-30.7708, -44.0633, -14.9028, 0.83", "-33.5038, -48.6974, -16.1466, 0.83", "-35.7872, -52.5562, -17.1592, 0.83", "-37.2225, -55.0419, -17.7856, 0.83", "-38.4371, -57.091, -18.3858, 0.83", "-39.5257, -58.7505, -18.9653, 0.83", "-40.0394, -59.4371, -19.2544, 0.83", "-41.4236, -61.2598, -20.5575, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "12.1305, -68.3664, -23.1667, 1.39", "14.6569, -71.3571, -21.0112, 0.55", "15.9825, -72.9263, -19.8802, 0.83", "17.5618, -74.7959, -18.5327, 0.55", "18.3768, -75.7607, -17.8373, 0.55", "18.9914, -76.4882, -17.313, 0.55", "20.1261, -77.8315, -16.3449, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.1305, -68.3664, -23.1667, 1.39", "12.7494, -69.4783, -23.8763, 0.55", "13.9703, -71.5887, -25.0897, 0.55", "15.8372, -75.0456, -27.2288, 0.55", "16.777, -76.6798, -28.274, 0.55", "18.4695, -79.6229, -30.1264, 0.55", "18.8772, -80.3688, -30.5759, 0.55", "20.1353, -82.7296, -31.9332, 1.11", "21.3955, -85.4043, -33.3186, 0.28", "22.3607, -87.7747, -34.2446, 0.28", "22.768, -89.0108, -34.6331, 0.28", "23.058, -90.4817, -34.9112, 0.83", "23.3387, -91.8984, -35.0861, 0.28", "23.587, -93.5878, -35.0996, 0.28", "23.7941, -95.0233, -34.9128, 0.55", "23.9252, -96.1022, -34.8038, 0.28", "24.0767, -97.247, -34.8221, 0.28", "24.295, -98.7678, -34.9836, 0.83", "24.7163, -102.028, -35.6186, 0.83", "25.0909, -105.086, -36.2672, 0.28", "25.3095, -107.283, -36.8143, 0.83", "25.6611, -110.446, -37.6506, 0.28", "25.9187, -112.54, -38.2567, 0.55", "26.2361, -115.405, -39.3505, 0.28", "26.4854, -117.343, -40.2443, 1.11", "27.021, -120.983, -42.1137, 0.28", "27.5164, -123.737, -43.4855, 0.28", "27.8013, -125.11, -44.1915, 0.83", "28.8056, -129.964, -46.8971, 0.28", "29.077, -131.238, -47.668, 0.55", "29.3954, -132.813, -48.7262, 0.55", "29.8686, -134.909, -50.2056, 0.55", "30.2424, -137.06, -51.7509, 0.28", "30.3885, -137.831, -52.2183, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "42.6549, -9.9306, 12.1586, 0.55", "43.7622, -6.61541, 11.7624, 0.28", "43.9503, -6.05232, 11.6951, 0.83", "44.3723, -4.78893, 11.5441, 0.28", "45.7125, -0.776843, 11.0645, 0.83", "49.7491, 9.08274, 9.88655, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "42.6549, -9.9306, 12.1586, 0.55", "47.4043, -11.7827, 14.742, 0.28", "47.8399, -11.9525, 14.9789, 0.83", "49.1967, -12.4816, 15.7169, 0.55", "52.7909, -13.8832, 17.6719, 1.11", "61.1363, -14.9533, 21.4635, 1.11", "69.5002, -17.0218, 24.7698, 1.11", "77.0028, -19.9898, 29.2495, 1.11", "84.0869, -23.501, 34.0091, 1.11", "90.9867, -27.9882, 38.1832, 1.11", "96.6361, -32.8972, 43.5824, 1.11", "103.248, -36.1079, 49.1634, 1.11", "108.459, -40.4552, 55.4175, 1.11", "112.085, -45.7535, 62.0464, 1.11", "116.651, -51.331, 67.8089, 1.11", "121.594, -56.4638, 73.6731, 1.11", "126.603, -61.5636, 79.5102, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "51.9086, 41.5644, 31.7882, 0.83", "58.1927, 49.5555, 36.7305, 0.83", "64.5085, 56.7582, 42.731, 0.83", "70.7553, 64.2441, 48.4506, 0.83", "75.1446, 71.7503, 55.6731, 0.83", "80.4925, 78.2146, 63.2484, 0.83", "87.0208, 84.4018, 70.095, 0.83", "92.0038, 91.9712, 76.8513, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "51.9086, 41.5644, 31.7882, 0.83", "56.7431, 47.3041, 36.4984, 0.83", "62.4062, 52.1626, 41.2761, 0.83", "69.1775, 55.4123, 45.9762, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.1112, -12.496, 51.1752, 1.11", "13.4831, -15.0988, 58.0304, 0.83", "12.0841, -17.0017, 65.0007, 0.83", "9.25707, -17.3523, 71.7866, 0.83", "5.96756, -18.6228, 78.2464, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "14.1112, -12.496, 51.1752, 1.11", "14.0113, -12.934, 63.6311, 0.83", "16.054, -14.2366, 75.8573, 0.83", "17.1221, -17.943, 87.7095, 0.83", "19.2304, -22.8398, 98.9757, 0.83", "20.8854, -28.1378, 110.136, 0.83", "22.3982, -35.3896, 120.16, 0.83", "25.0447, -42.5978, 129.977, 0.83", "28.2365, -48.9466, 140.217, 0.83", "31.5258, -55.5997, 150.231, 0.83", "34.9626, -63.0673, 159.599, 0.83", "37.8898, -68.7057, 170.323, 0.83", "38.7838, -74.4067, 181.37, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.4172, 10.2853, -21.2056, 0.83", "19.2313, 12.431, -24.5211, 0.83", "22.3373, 14.914, -28.1048, 0.83", "25.683, 17.2605, -31.4654, 0.83", "29.1025, 19.4823, -34.6298, 0.83", "31.7667, 21.0897, -36.9673, 0.83", "35.6526, 23.3203, -40.2538, 0.83", "38.0285, 24.5244, -42.0895, 0.83", "42.1082, 26.4067, -44.8199, 0.83", "44.026, 27.2657, -46.0715, 0.83", "45.9674, 28.033, -47.3218, 0.83", "47.8866, 28.8862, -48.5751, 0.83", "49.558, 29.6273, -49.7073, 0.83", "53.4426, 31.5215, -52.4821, 0.83", "55.8169, 32.8384, -54.3099, 0.83", "58.0991, 34.1473, -56.0746, 0.83", "63.8168, 37.46, -60.5117, 0.83", "66.9367, 39.21, -62.8026, 0.83", "69.3925, 40.6088, -64.5273, 0.55", "71.3358, 41.7284, -65.8361, 0.55", "73.1582, 42.8392, -67.0159, 0.55", "74.7502, 43.8403, -68.0033, 0.55", "80.3926, 47.3848, -71.3505, 0.55", "82.8684, 48.9971, -72.7997, 0.55", "84.5237, 49.9658, -73.7569, 1.11", "85.6778, 50.6591, -74.4438, 0.55", "86.9162, 51.3825, -75.2135, 0.55", "89.8087, 53.0352, -77.0556, 0.55", "91.3729, 53.9, -78.002, 0.83", "93.8291, 55.1228, -79.3593, 0.55", "97.7436, 56.9896, -81.2717, 0.55", "99.5128, 57.798, -82.0746, 0.55", "103.827, 59.8147, -83.9668, 0.55", "106.876, 61.226, -85.2597, 0.55", "109.175, 62.2751, -86.2533, 0.55", "112.501, 63.8126, -87.7558, 0.55", "116.347, 65.4906, -89.6014, 0.55", "120.077, 67.233, -91.5371, 0.28", "120.62, 67.4782, -91.8523, 0.55", "122.113, 68.1471, -92.8374, 0.28", "124.578, 69.3919, -94.5482, 0.28", "125.278, 69.7806, -95.1092, 0.83", "127.179, 71.1386, -96.6698, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.4172, 10.2853, -21.2056, 0.83", "17.6735, 8.00384, -25.2939, 0.55", "18.2909, 7.14904, -26.9907, 0.55", "19.1976, 6.02202, -29.3855, 0.55", "19.89, 5.331, -30.9057, 0.55", "20.2228, 5.02504, -31.5593, 0.83", "21.5588, 4.00234, -33.8879, 0.55", "23.3836, 2.81367, -36.5219, 0.55", "24.8915, 1.83948, -38.9719, 0.55", "26.058, 1.07435, -41.1122, 0.55", "27.0879, 0.341576, -43.2001, 0.55", "28.3595, -0.634855, -45.939, 0.55", "29.3712, -1.57288, -48.4273, 0.55", "30.8072, -3.23265, -53.037, 0.83", "31.2324, -3.75146, -54.6262, 0.55", "31.432, -4.01077, -55.4674, 0.55", "31.9877, -4.6434, -57.6498, 0.83", "32.7357, -5.35935, -59.9133, 0.55", "33.8505, -6.11484, -62.2174, 0.55", "34.3542, -6.44174, -62.9285, 0.83", "35.5949, -7.30708, -64.7181, 0.28", "35.9449, -7.54601, -65.2125, 0.83", "37.0963, -8.42656, -66.8259, 0.28", "37.8406, -9.06038, -67.8951, 0.55", "39.2556, -10.5337, -70.3304, 0.55", "40.5757, -12.0809, -73.0671, 0.28", "41.1034, -12.7016, -74.261, 0.28", "41.487, -13.1397, -75.2304, 0.28", "42.0209, -13.737, -76.721, 0.83", "42.7498, -14.5114, -78.7819, 0.28", "43.185, -15.0106, -80.1615, 0.83", "44.0265, -16.1971, -83.0002, 0.55", "44.8729, -17.4174, -85.7797, 0.28", "45.1347, -17.7903, -86.5737, 0.83", "45.4738, -18.3294, -87.7508, 0.83", "46.0441, -19.3365, -89.9985, 0.55", "46.4645, -20.1613, -91.9609, 0.55", "46.8531, -21.186, -94.5853, 0.55", "47.2233, -21.9627, -96.4083, 0.55", "48.2292, -23.721, -100.238, 0.55", "48.6688, -24.3723, -101.553, 0.28", "48.8715, -24.6475, -102.094, 0.83", "50.0165, -26.0645, -105.108, 0.28", "51.448, -28.1348, -108.899, 0.55", "52.1703, -28.996, -110.059, 0.28", "52.5798, -29.4362, -110.255, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.1445, 16.1059, -39.105, 1.66", "10.6338, 17.359, -41.5257, 0.55", "9.41716, 20.2501, -46.0998, 0.55", "9.0694, 20.8997, -47.0306, 0.55", "8.42942, 22.1839, -48.8424, 0.28", "7.78229, 23.0177, -50.4787, 0.55", "6.58251, 24.3036, -53.705, 0.55", "6.05844, 24.5968, -55.0397, 0.55", "4.8021, 24.8979, -57.7817, 0.55", "4.02602, 25.0074, -59.4572, 0.55", "0.913524, 25.2288, -66.3531, 1.39", "-0.233286, 25.2778, -69.1016, 0.55", "-1.68531, 25.3118, -72.8363, 0.55", "-4.02509, 25.2983, -79.5118, 0.55", "-4.42277, 25.2942, -80.769, 0.55", "-6.00943, 25.3439, -86.3157, 0.55", "-7.11808, 25.4953, -91.5307, 0.55", "-7.5286, 25.6088, -94.0472, 0.55", "-7.65903, 25.7649, -95.9384, 0.55", "-7.61307, 25.9255, -98.1201, 0.28", "-7.47882, 26.0493, -99.6056, 1.11", "-6.80679, 26.4892, -103.342, 0.28", "-6.6261, 26.6108, -104.154, 0.83", "-5.55884, 27.4395, -108.662, 0.28", "-5.46262, 27.5369, -109.067, 0.83", "-4.72766, 28.373, -112.063, 0.28", "-4.18022, 29.1255, -114.365, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.1445, 16.1059, -39.105, 1.66", "11.5105, 14.3943, -40.9323, 0.83", "12.0694, 11.6246, -44.3512, 0.83", "12.2043, 10.4618, -46.0475, 0.83", "12.2111, 9.7913, -47.011, 0.55", "12.031, 7.31668, -51.2426, 0.55", "11.6368, 6.38361, -53.1566, 0.55", "11.1088, 5.83429, -54.7008, 0.55", "10.2903, 5.23028, -56.799, 0.83", "9.38143, 4.64134, -58.8507, 0.28", "7.50445, 3.31424, -62.6464, 1.66", "4.55324, 0.668397, -67.2041, 0.83", "3.10612, -0.893652, -68.9012, 0.83", "0.651605, -4.02309, -71.2032, 0.28", "0.335228, -4.50926, -71.4315, 0.55", "-1.13883, -6.95823, -72.0906, 0.28", "-2.96962, -10.3949, -72.3341, 0.28", "-4.29808, -13.1854, -72.3334, 0.83", "-5.43514, -15.2667, -72.341, 0.28", "-5.78038, -15.8141, -72.3955, 0.55", "-7.85088, -19.0639, -72.6906, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-3.1731, 69.3539, -16.4485, 1.11", "-7.12587, 77.6045, -18.8658, 1.11" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-3.1731, 69.3539, -16.4485, 1.11", "-1.55469, 70.5993, -16.974, 0.55", "1.14985, 72.3865, -17.6906, 0.55", "3.28729, 73.7324, -18.181, 0.55", "6.67129, 75.7423, -19.1024, 0.55", "12.9528, 79.2044, -20.6706, 0.55", "19.1811, 82.5137, -22.31, 0.55", "21.9924, 83.8882, -23.1521, 0.55", "24.1687, 84.8444, -23.9406, 0.55", "28.8453, 86.8875, -26.001, 0.55", "32.0807, 88.2651, -27.7746, 0.55", "34.975, 89.6223, -29.7469, 0.55", "39.8236, 92.0686, -33.5021, 0.55", "42.7482, 93.5127, -35.8208, 0.55", "45.8223, 95.0551, -38.3745, 0.28", "47.0011, 95.687, -39.3739, 0.55", "49.9147, 97.3336, -42.0894, 0.28", "51.1986, 98.0157, -43.1305, 0.28", "54.299, 99.4925, -44.9029, 0.28" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-10.4312, 31.4089, -3.98576, 1.11", "-15.2224, 29.7603, -1.25763, 0.55", "-19.4499, 28.6259, 0.488124, 0.55", "-22.9584, 27.711, 1.74193, 0.55", "-24.2517, 27.3866, 2.19696, 0.55", "-28.406, 26.3371, 3.65244, 0.55", "-31.6568, 25.555, 4.82407, 0.55", "-37.4555, 24.4595, 6.76901, 0.55", "-43.8488, 23.6832, 8.97268, 0.55", "-48.8005, 23.2997, 10.6004, 0.55", "-50.3197, 23.2588, 11.0719, 0.55", "-54.3, 23.3144, 12.112, 0.55", "-58.8369, 23.3971, 13.0623, 0.55", "-63.8088, 23.6602, 13.9543, 0.55", "-67.6414, 23.949, 14.3756, 0.55", "-70.1309, 24.134, 14.5393, 0.55", "-74.7847, 24.4714, 14.7745, 0.55", "-77.7671, 24.6407, 14.891, 0.55", "-82.2829, 24.8777, 15.1339, 0.55", "-85.2824, 24.9875, 15.4495, 0.55", "-87.583, 25.188, 15.9438, 0.83", "-89.4906, 25.4526, 16.5343, 0.55", "-91.3393, 25.7767, 17.2468, 0.55", "-93.4144, 26.2155, 18.0622, 0.55", "-95.5864, 26.6723, 18.9634, 0.83", "-97.7983, 27.0781, 19.8804, 0.55", "-99.656, 27.2846, 20.5995, 1.11", "-102.216, 27.4444, 21.4146, 0.83", "-104.177, 27.4963, 21.9306, 0.83", "-106.381, 27.4942, 22.3493, 0.55", "-108.173, 27.5469, 22.5369, 0.55", "-110.952, 27.6033, 22.6543, 0.83", "-114.355, 27.4953, 22.5794, 0.55", "-115.059, 27.4395, 22.5447, 0.83", "-117.306, 27.0853, 22.4378, 0.55", "-118.893, 26.8144, 22.3716, 0.55", "-122.17, 26.2436, 22.3351, 0.55", "-124.371, 25.8524, 22.3329, 0.55", "-128.01, 25.2241, 22.4078, 0.55", "-133.361, 24.2914, 22.5588, 0.83", "-136.96, 23.5732, 22.6306, 0.28", "-137.932, 23.3422, 22.6222, 0.55", "-140.055, 22.7992, 22.5394, 0.28", "-142.173, 22.1739, 22.4316, 0.28", "-144.423, 21.268, 22.2098, 0.28", "-146.892, 20.0099, 21.7031, 0.28", "-147.976, 19.3784, 21.3574, 0.28", "-148.237, 19.218, 21.2472, 0.83", "-149.629, 18.2996, 20.5911, 0.28", "-150.314, 17.8392, 20.1996, 0.83", "-154.05, 15.6406, 17.9163, 0.28", "-155.794, 14.8066, 16.8476, 0.55", "-156.712, 14.444, 16.2674, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-10.4312, 31.4089, -3.98576, 1.11", "-14.1024, 30.3466, -1.63956, 0.83", "-17.5086, 29.5029, 0.446605, 0.83", "-21.4815, 28.4326, 2.7881, 0.83", "-26.2664, 27.1592, 5.60901, 0.83", "-28.1, 26.6801, 6.63847, 0.83", "-30.0487, 26.2243, 7.61872, 0.55", "-32.4855, 25.8226, 8.61822, 0.55", "-37.1737, 25.1611, 10.2413, 0.55", "-40.1731, 24.6739, 11.0972, 0.55", "-43.0051, 24.2034, 11.8317, 0.55", "-49.3018, 23.1096, 13.3747, 0.83", "-52.1064, 22.6373, 14.0152, 0.83", "-53.6102, 22.3668, 14.3418, 0.83", "-57.1507, 21.7445, 15.0371, 0.83", "-60.4191, 21.0739, 15.7061, 0.55", "-61.656, 20.8006, 16.0302, 0.83", "-64.7967, 20.0341, 17.08, 0.55", "-65.3223, 19.9092, 17.2845, 0.83", "-67.5308, 19.4418, 18.1159, 0.55", "-69.2147, 19.1303, 18.7538, 0.55", "-70.4358, 18.9474, 19.2205, 0.55", "-72.9993, 18.5395, 20.3423, 0.55", "-74.8715, 18.182, 21.2547, 0.55", "-76.7106, 17.7973, 22.1164, 0.55", "-79.0417, 17.2301, 23.1663, 0.55", "-81.3647, 16.6118, 24.1039, 0.55", "-84.6314, 15.7638, 25.3727, 0.55", "-85.5808, 15.5117, 25.7426, 0.83", "-87.5922, 14.9916, 26.5238, 0.55", "-88.6243, 14.7221, 26.9038, 0.83", "-91.5664, 13.9266, 27.9036, 0.55", "-93.5366, 13.3145, 28.5289, 0.55", "-96.5878, 12.3151, 29.4152, 0.55", "-97.8988, 11.8349, 29.7961, 0.83", "-100.558, 10.683, 30.5993, 0.28", "-101.471, 10.2553, 30.8484, 0.55", "-102.781, 9.52543, 31.1513, 0.28", "-103.881, 8.85711, 31.4168, 0.83", "-105.859, 7.60944, 31.9672, 0.28", "-106.82, 7.01787, 32.2883, 0.55", "-107.969, 6.33435, 32.7303, 0.28", "-108.832, 5.84351, 33.0717, 0.83", "-111.853, 4.17234, 34.3071, 0.28", "-113.005, 3.53205, 34.8046, 0.83", "-115.892, 1.84929, 36.1694, 0.28", "-117.677, 0.789232, 37.0121, 0.28", "-118.086, 0.542575, 37.2103, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-25.793, -26.4227, -22.3972, 0.83", "-29.9918, -27.4159, -25.4206, 0.83", "-35.0757, -28.6414, -28.6892, 0.55", "-41.2883, -30.0963, -32.2893, 0.55", "-44.0186, -30.8068, -33.8436, 0.55", "-48.3925, -32.0938, -36.2951, 0.83", "-53.3452, -33.7597, -39.0942, 0.55", "-57.3797, -35.7236, -41.5671, 0.55", "-58.5328, -36.3919, -42.2321, 0.55", "-60.4358, -37.48, -43.3359, 0.55", "-61.7686, -38.3356, -44.2377, 0.55", "-64.2485, -40.1103, -46.1033, 0.83", "-67.2779, -42.1398, -48.3361, 0.28", "-69.4108, -43.8113, -50.2267, 1.94", "-73.0038, -46.5047, -53.4905, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-25.793, -26.4227, -22.3972, 0.83", "-23.6929, -26.6507, -27.6472, 0.55", "-22.4464, -26.9591, -30.5393, 0.55", "-21.184, -27.3768, -33.4059, 0.55", "-20.0426, -27.8034, -36.1112, 0.55", "-19.282, -28.0908, -38.3481, 1.11", "-17.6595, -28.7236, -43.1366, 0.28", "-17.3172, -28.9094, -44.1387, 0.55", "-16.6392, -29.2978, -46.3059, 0.28", "-15.7712, -29.8194, -49.0393, 0.83", "-14.0073, -30.9509, -55.4547, 0.83", "-13.4935, -31.2593, -57.3461, 0.55", "-12.6768, -31.8192, -60.2928, 1.11", "-12.272, -32.1745, -61.8248, 0.28", "-11.8963, -32.5539, -63.0468, 0.28", "-11.032, -33.5805, -65.8465, 1.11", "-9.87755, -35.057, -69.4733, 0.55", "-8.77665, -36.572, -73.2511, 0.55", "-8.12705, -37.507, -75.5167, 0.55", "-6.94914, -39.4371, -80.0075, 0.55", "-5.32865, -42.2003, -86.4464, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-41.4236, -61.2598, -20.5575, 0.83", "-41.5076, -62.6844, -19.6277, 0.55", "-41.7057, -67.0476, -16.9528, 0.55", "-41.9037, -70.1281, -15.0403, 0.55", "-42.0121, -72.2159, -13.8185, 0.55", "-42.1383, -74.7718, -12.2913, 0.55", "-42.2831, -76.9952, -10.9556, 0.55", "-42.3663, -78.1994, -10.2378, 0.83", "-42.5196, -79.9114, -9.20344, 0.55", "-42.7858, -82.6292, -7.29534, 0.55", "-42.9833, -84.2133, -6.0722, 0.55", "-43.2532, -86.1456, -4.48165, 0.55", "-43.6409, -88.8408, -2.1561, 0.55", "-43.9383, -90.8315, -0.315896, 0.55", "-44.1948, -92.7794, 1.54764, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-41.4236, -61.2598, -20.5575, 0.83", "-41.6761, -61.5197, -20.5964, 0.83", "-43.3371, -62.7765, -20.9847, 0.83", "-45.0483, -64.0972, -21.5073, 0.83", "-47.6773, -66.224, -22.2937, 0.83", "-49.2948, -67.5128, -22.7939, 0.83", "-51.4121, -69.324, -23.4484, 1.11", "-54.3128, -72.1172, -24.4137, 0.55", "-57.67, -75.8651, -25.6171, 0.55", "-59.1912, -77.7744, -26.1707, 0.55", "-60.1185, -79.1825, -26.5422, 0.55", "-61.6669, -82.2184, -27.1448, 0.55", "-62.7956, -85.4365, -27.6147, 0.55", "-63.1806, -87.443, -27.7816, 0.28", "-63.3584, -88.9603, -27.8628, 0.83", "-63.5921, -91.4487, -28.0329, 0.28", "-63.8279, -93.6449, -28.1811, 0.28", "-64.076, -95.1188, -28.316, 0.83", "-64.8092, -98.1731, -28.6268, 0.28", "-65.4589, -100.021, -28.895, 0.55", "-66.2853, -101.932, -29.214, 0.28", "-67.1821, -103.744, -29.5273, 1.11", "-68.5145, -106.196, -30.0047, 0.83", "-69.432, -107.775, -30.2909, 0.55", "-71.1168, -110.443, -30.7766, 0.55", "-72.3469, -112.533, -31.1064, 0.55", "-73.1862, -113.931, -31.3261, 0.55", "-74.3691, -115.85, -31.6817, 0.55", "-75.8008, -118.21, -32.1468, 0.55", "-77.0999, -120.426, -32.5615, 0.28", "-77.7623, -121.59, -32.7481, 0.28", "-80.0406, -125.411, -33.413, 0.28", "-80.6996, -126.532, -33.6036, 1.11", "-83.3608, -131.419, -34.4319, 0.28", "-84.2867, -133.323, -34.7757, 0.28", "-85.0567, -135.056, -35.0982, 0.55", "-85.9072, -137.043, -35.4786, 0.28", "-86.4931, -138.693, -35.7924, 1.11", "-87.7815, -142.789, -36.6253, 0.28", "-88.0091, -143.59, -36.8276, 0.83", "-88.6892, -146.167, -37.5463, 0.28", "-88.7572, -146.458, -37.6264, 0.83", "-89.5054, -149.865, -38.4502, 0.28", "-89.7371, -150.77, -38.6638, 0.55", "-90.2681, -152.88, -39.118, 0.28", "-90.3734, -153.295, -39.2019, 0.55", "-90.815, -155.258, -39.5373, 0.28", "-90.9659, -155.841, -39.639, 0.55", "-92.2225, -159.31, -40.2107, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "20.1261, -77.8315, -16.3449, 0.55", "20.4242, -80.8663, -15.8882, 0.55", "21.0389, -87.2114, -15.0862, 0.55", "21.8148, -91.8478, -14.3992, 0.55", "22.9004, -95.6186, -13.8232, 0.55", "24.131, -99.126, -13.3158, 0.55", "25.0291, -101.686, -12.9455, 0.55", "26.7219, -106.01, -12.2796, 0.55", "28.905, -110.872, -11.5009, 0.55", "32.4534, -117.133, -10.5745, 0.55", "34.7662, -120.761, -10.1625, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "20.1261, -77.8315, -16.3449, 0.55", "20.7971, -78.5071, -15.8658, 0.83", "22.7499, -80.9532, -14.3678, 0.55", "23.9336, -82.6552, -13.4226, 0.55", "26.3538, -86.4299, -11.588, 0.28", "27.4007, -88.0789, -10.8396, 0.28", "28.422, -89.7064, -10.0608, 0.28", "29.1201, -90.9351, -9.47442, 0.83", "29.2957, -91.2795, -9.29821, 0.83", "30.0533, -93.1186, -8.46732, 0.28", "30.6495, -94.5749, -8.08874, 0.83", "32.1469, -97.7334, -6.94561, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "49.7491, 9.08274, 9.88655, 0.83", "52.4879, 16.806, 9.04547, 0.83", "55.7699, 24.2546, 7.77937, 0.83", "59.7278, 31.4707, 7.43236, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "49.7491, 9.08274, 9.88655, 0.83", "54.2481, 20.4615, 8.45475, 0.83", "60.0202, 31.1283, 6.294, 0.83", "63.9047, 42.0932, 2.2384, 0.83", "66.1359, 54.0488, 0.27515, 0.83", "68.3279, 66.0671, -1.31282, 0.83", "69.5395, 78.2228, -2.90608, 0.83", "73.1128, 90.0125, -2.95504, 0.83", "77.7774, 101.257, -1.07038, 0.83", "81.3009, 112.65, 2.02049, 0.83", "87.106, 123.465, 3.07972, 0.83", "93.0682, 134.242, 2.82624, 0.83", "97.0263, 145.654, 0.403784, 0.83", "102.313, 156.757, -0.333522, 0.83", "107.814, 167.762, 0.296278, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-7.12587, 77.6045, -18.8658, 1.11", "-6.59776, 79.5599, -19.3459, 1.11", "-5.22851, 84.6295, -20.5905, 1.11" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-7.12587, 77.6045, -18.8658, 1.11", "-4.27487, 81.2269, -16.7558, 0.55", "-2.75875, 83.318, -15.3998, 0.55", "-0.518408, 86.5404, -13.033, 0.55", "2.73299, 91.2742, -9.5933, 0.55", "4.47643, 93.8441, -7.69386, 0.55", "6.70382, 97.0345, -5.14335, 0.55", "7.42099, 98.1383, -4.21367, 0.55", "10.1433, 102.495, -0.340214, 0.55", "11.5168, 104.828, 1.78981, 0.55", "12.2726, 105.946, 2.98025, 0.55", "13.8162, 107.858, 4.99332, 0.55", "15.849, 110.103, 7.29256, 0.55", "17.0534, 111.388, 8.50933, 0.55", "18.1578, 112.55, 9.65515, 0.55", "19.4073, 113.954, 10.9726, 0.55", "22.013, 117.192, 13.7482, 0.55", "23.7628, 119.427, 15.6204, 0.55", "24.9112, 121.004, 16.973, 0.55", "27.1005, 124.388, 19.8459, 0.55", "29.1711, 128.018, 22.6861, 0.55", "30.1233, 129.897, 24.1, 0.55", "31.3379, 132.843, 26.3698, 0.55", "32.2104, 135.136, 28.2397, 0.28", "32.4082, 135.589, 28.6187, 0.55", "32.9124, 136.895, 29.4818, 0.55" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-73.0038, -46.5047, -53.4905, 0.55", "-69.8317, -48.4361, -50.3336, 0.55", "-66.7861, -50.2822, -46.6549, 0.55", "-66.6023, -50.7115, -48.6787, 0.55", "-66.1209, -51.1988, -50.1724, 0.55", "-65.5437, -52.1159, -52.6048, 0.55", "-64.68, -54.4852, -58.1102, 0.55", "-64.4201, -55.5374, -60.4234, 0.83", "-64.2854, -56.8606, -63.1358, 0.83", "-64.3718, -58.1098, -65.6262, 0.55", "-64.8181, -60.0264, -69.1067, 0.55", "-65.4344, -61.9396, -72.5199, 0.55", "-65.7892, -62.8957, -74.2011, 0.55", "-66.6876, -64.6059, -77.4929, 0.28", "-68.0011, -66.5274, -81.6508, 0.28", "-68.5141, -67.2948, -83.6264, 0.83", "-69.6989, -68.9058, -88.4573, 0.28", "-70.1554, -69.4268, -90.2969, 0.83", "-71.7796, -70.9784, -96.8276, 0.55", "-72.5424, -71.6223, -100.209, 0.55", "-73.5866, -72.6321, -106.93, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.0038, -46.5047, -53.4905, 0.55", "-74.2721, -47.1586, -55.0776, 0.55", "-77.5702, -48.9841, -59.0974, 0.55", "-82.128, -51.699, -64.5158, 1.11", "-83.2928, -52.4235, -65.8324, 0.55", "-85.7757, -54.0448, -68.4831, 0.55", "-88.2061, -55.6072, -70.9455, 0.55", "-89.4962, -56.3816, -72.1507, 0.55", "-90.2121, -56.8218, -72.7594, 0.55", "-92.0573, -57.9179, -74.1652, 0.55", "-95.3847, -59.7528, -76.7624, 0.28", "-96.4222, -60.3235, -77.5924, 0.55", "-100.351, -62.0706, -80.6782, 0.28", "-101.381, -62.4739, -81.4847, 0.55", "-103.821, -63.3489, -83.4339, 0.55", "-105.3, -63.8344, -84.636, 0.83", "-108.031, -64.6102, -86.811, 0.28", "-110.634, -65.3941, -88.8493, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "32.1469, -97.7334, -6.94561, 0.55", "33.5139, -102.893, -9.75337, 0.55", "33.7307, -103.711, -10.1987, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "32.1469, -97.7334, -6.94561, 0.55", "28.6044, -101.073, -2.55851, 0.28", "27.5082, -102.106, -1.20096, 0.28", "26.5104, -103.047, 0.0346205, 0.83", "22.3939, -106.927, 5.13258, 0.55", "21.3869, -107.876, 6.37961, 0.55", "19.9723, -109.21, 8.13146, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "59.7278, 31.4707, 7.43236, 0.83", "62.9944, 39.1418, 8.75608, 0.83", "66.4358, 46.4305, 11.2656, 0.83", "69.9981, 53.6082, 13.9224, 0.83", "74.8476, 59.6961, 17.1917, 0.83", "80.2703, 64.9068, 21.0271, 0.83", "84.6501, 69.9637, 26.176, 0.83", "89.7386, 75.1517, 30.4726, 0.83", "95.4143, 79.2981, 35.1482, 0.83", "101.398, 83.5659, 39.302, 0.83", "107.593, 88.3, 42.5388, 0.83", "113.544, 92.7622, 46.5319, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "59.7278, 31.4707, 7.43236, 0.83", "62.6807, 38.4734, 8.73244, 0.83", "66.3402, 45.2367, 9.29119, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-5.22851, 84.6295, -20.5905, 1.11", "-4.53183, 93.0974, -21.1188, 1.11", "-4.51947, 98.4482, -21.558, 0.83", "-4.59158, 100.949, -21.6527, 0.83", "-4.68679, 106.249, -21.8528, 0.83", "-4.71009, 109.693, -22.1308, 0.83", "-4.74146, 113.998, -22.5236, 0.83", "-4.80992, 116.858, -22.8938, 0.83", "-5.29342, 126.801, -24.1507, 0.83", "-5.46077, 129.363, -24.3769, 0.83", "-5.82159, 133.68, -24.4096, 0.83", "-5.97799, 136.197, -24.4763, 0.83", "-6.03214, 138.372, -24.4881, 0.83", "-6.23967, 143.743, -24.577, 0.83", "-6.48552, 148.06, -24.6884, 0.83", "-7.07521, 157.36, -24.8219, 0.83", "-7.34126, 163.842, -24.9244, 1.11", "-7.52623, 171.76, -25.1386, 1.11", "-7.51298, 177.358, -25.3449, 1.11", "-7.42993, 181.711, -25.4679, 1.11", "-7.26596, 185.728, -25.5777, 1.11", "-6.81877, 190.922, -25.7197, 1.11", "-6.3266, 194.971, -25.7863, 1.11", "-5.64234, 199.624, -25.9287, 1.11", "-4.92479, 203.411, -26.0352, 1.11", "-4.14133, 207.344, -26.1588, 1.11", "-3.15407, 212.305, -26.3446, 1.11", "-2.32809, 217.266, -26.6132, 1.11", "-1.21673, 225.112, -27.1373, 0.83", "-0.935609, 228.49, -27.2805, 0.83", "-0.875711, 230.092, -27.3156, 0.83", "-0.915719, 233.413, -27.275, 0.83", "-1.36099, 238.411, -27.054, 0.83", "-2.04234, 242.5, -26.6324, 0.83", "-2.74184, 245.823, -26.2514, 0.83", "-3.46564, 249.327, -25.8179, 0.83", "-4.03944, 252.482, -25.5209, 0.83", "-4.93385, 257.473, -24.9848, 0.83", "-5.62075, 260.941, -24.6212, 0.83", "-6.16564, 263.866, -24.4661, 0.83", "-6.71482, 266.545, -24.377, 0.83", "-7.37778, 269.934, -24.4377, 0.83", "-8.05738, 274.238, -24.7091, 0.83", "-8.55321, 277.661, -25.0077, 0.83", "-9.02482, 281.941, -25.5557, 0.83", "-9.40985, 287.626, -26.2868, 0.83", "-9.79677, 297.094, -27.3406, 0.83", "-9.84296, 305.62, -28.3838, 0.83", "-9.69333, 310.571, -29.0763, 0.83", "-9.34227, 317.59, -29.9594, 0.83", "-8.62044, 327.994, -31.1424, 0.83", "-8.24436, 331.654, -31.4895, 0.83", "-7.81536, 335.716, -31.7736, 0.83", "-7.40229, 339.31, -32.004, 0.83", "-6.86623, 343.751, -32.2721, 0.83", "-6.24294, 349.801, -32.6245, 0.83", "-5.85415, 353.295, -32.9185, 0.83", "-5.4909, 358.545, -33.5102, 0.83", "-5.41205, 360.439, -33.7367, 0.83", "-5.32394, 365.786, -34.4032, 0.83", "-5.36556, 369.616, -34.8702, 0.83", "-5.49702, 371.991, -35.1231, 0.83", "-6.06455, 378.428, -35.9014, 0.83", "-6.65886, 384.03, -36.5541, 0.83", "-7.70928, 392.581, -37.8192, 0.83", "-7.98859, 394.814, -38.184, 0.83", "-8.61559, 401.1, -39.2588, 0.83", "-8.86506, 405.541, -40.0647, 0.83", "-9.01178, 411.241, -41.0813, 0.83", "-9.28542, 415.546, -41.9571, 0.83", "-9.43698, 418.834, -42.6082, 0.83", "-9.53048, 421.802, -42.9826, 0.83", "-9.56414, 422.928, -42.9766, 0.83", "-9.71123, 426.375, -42.6415, 0.83", "-9.96841, 430.031, -42.101, 0.83", "-10.1831, 436.572, -41.3298, 0.83", "-10.3158, 439.296, -41.2496, 0.83", "-10.394, 442.725, -41.3958, 0.83", "-10.3162, 446.648, -41.7853, 0.83", "-10.1554, 449.144, -42.2165, 0.83", "-9.57317, 456.579, -43.876, 0.83", "-9.10457, 463.06, -45.6001, 0.83", "-8.8588, 466.174, -46.3631, 0.83", "-8.66867, 468.97, -46.9364, 0.83", "-8.51033, 473.291, -47.5392, 0.83", "-8.48635, 478.499, -48.0089, 0.83", "-8.48329, 481.299, -48.094, 0.83", "-8.34128, 491.532, -48.1019, 0.83", "-8.32572, 494.112, -48.0001, 0.83", "-8.31648, 497.668, -47.6657, 0.83", "-8.30015, 499.142, -47.4686, 0.83", "-8.16643, 504.659, -46.5826, 0.83", "-8.03376, 508.579, -45.7773, 0.83", "-7.87837, 512.082, -44.8744, 0.83", "-7.67025, 520.053, -43.0597, 0.83", "-7.7212, 525.365, -41.8884, 0.83", "-7.93402, 529.074, -41.1787, 0.83", "-8.28659, 532.161, -40.5832, 0.83", "-8.56902, 534.614, -40.1683, 0.83", "-9.34002, 540.683, -39.2317, 0.83", "-10.1252, 547.461, -38.3474, 0.83", "-11.4478, 557.348, -37.0119, 0.83", "-12.0687, 561.433, -36.5243, 0.83", "-13.0782, 567.78, -35.8152, 0.83", "-15.1586, 578.124, -34.5298, 0.83", "-16.5754, 584.303, -33.7751, 0.83", "-17.7331, 588.646, -33.4128, 0.83", "-19.7202, 594.936, -33.0319, 0.83", "-20.6023, 597.38, -32.9532, 0.83", "-23.3599, 603.692, -32.9151, 0.55", "-25.38, 608.028, -33.1187, 0.55", "-26.302, 610.117, -33.1801, 0.55", "-28.2627, 615.356, -33.5146, 0.55", "-29.4393, 618.733, -33.7443, 0.55", "-30.7798, 622.684, -33.9442, 0.55", "-32.4735, 628.314, -34.1738, 0.55", "-34.9333, 635.673, -34.1834, 0.55", "-37.0129, 641.589, -34.1, 0.55", "-37.9381, 644.167, -34.0183, 0.55", "-39.9172, 649.83, -33.721, 0.55", "-40.9079, 652.519, -33.4083, 0.55", "-42.6886, 657.752, -32.4404, 0.55", "-44.2592, 662.469, -31.3444, 0.55", "-45.1921, 665.605, -30.5431, 0.55", "-45.8737, 668.17, -29.894, 0.55", "-46.4159, 670.294, -29.3769, 0.55", "-48.7224, 680.25, -27.3723, 0.55", "-49.5302, 684.103, -26.7647, 0.55", "-51.0368, 690.865, -25.9512, 0.55", "-52.0411, 695.319, -25.705, 0.55", "-52.5915, 697.709, -25.6221, 0.55", "-55.2002, 708.929, -25.5503, 0.55", "-56.0894, 712.428, -25.646, 0.55", "-57.3613, 717.937, -25.9026, 0.55", "-58.7921, 723.459, -26.402, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 33
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-5.22851, 84.6295, -20.5905, 1.11", "-2.93873, 83.8645, -23.1715, 0.83", "0.290371, 82.3034, -27.0316, 0.55", "2.49283, 81.083, -29.7783, 0.55", "6.35552, 78.7415, -34.7028, 0.55", "8.15775, 77.5595, -37.0326, 0.55", "9.30831, 76.749, -38.5233, 0.55", "11.6244, 74.6912, -41.9505, 0.55", "12.9278, 73.3032, -43.9224, 0.55", "14.4057, 71.7472, -46.1015, 0.55", "15.3451, 70.7495, -47.4478, 0.55", "18.7454, 67.4943, -51.8648, 0.55", "20.688, 65.8282, -54.3139, 0.55", "24.3413, 63.1424, -58.7464, 0.55", "26.0137, 62.0778, -60.6823, 0.55", "27.1718, 61.4026, -62.0218, 0.55", "28.1489, 60.8955, -63.1411, 0.55", "29.8525, 60.1936, -65.1059, 0.55", "32.3586, 59.364, -68.0998, 0.55", "33.6896, 58.9872, -69.9286, 0.55", "35.6685, 58.2868, -73.1195, 0.55", "36.6224, 57.9713, -74.7382, 0.55", "38.1436, 57.4949, -77.5191, 0.55", "39.4848, 57.1513, -80.0935, 0.55", "40.3237, 56.9723, -81.887, 0.55", "42.0371, 56.7883, -85.6022, 0.55", "43.0881, 56.8376, -87.8085, 0.55", "44.6829, 56.9563, -91.2611, 0.55", "45.6606, 57.0092, -93.3803, 0.55", "46.6652, 57.1568, -95.5451, 0.55", "47.5488, 57.4155, -97.4729, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "32.9124, 136.895, 29.4818, 0.55", "32.6126, 138.227, 31.9709, 0.55", "32.3509, 139.39, 34.1438, 0.55", "32.1845, 140.129, 35.5248, 0.28", "32.0495, 140.728, 36.6452, 0.28", "31.5285, 143.043, 40.9702, 0.28", "31.293, 144.089, 42.9253, 0.28", "30.7795, 150.606, 53.8795, 0.28", "30.1124, 155.727, 65.544, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "32.9124, 136.895, 29.4818, 0.55", "33.3054, 138.638, 28.6938, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_2", "apic_1", "axon_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_28", "dend_11", "dend_0", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SP_c3f779f565_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999998123122724)
    connect dend_31(0), soma_0(0.49999998123122724)
    connect dend_28(0), soma_0(0.49999998123122724)
    connect dend_11(0), soma_0(0.49999998123122724)
    connect dend_0(0), soma_0(0.49999998123122724)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.7762, -6.65843, 1.68973, 1.62225 ) }
    soma_0 { pt3dadd( -3.37091, -6.05756, 1.49202, 2.68302 ) }
    soma_0 { pt3dadd( -2.96562, -5.45669, 1.29431, 4.18183 ) }
    soma_0 { pt3dadd( -2.56033, -4.85582, 1.09659, 5.23637 ) }
    soma_0 { pt3dadd( -2.15504, -4.25495, 0.898882, 5.96111 ) }
    soma_0 { pt3dadd( -1.74975, -3.65409, 0.701169, 6.6575 ) }
    soma_0 { pt3dadd( -1.34446, -3.05322, 0.503456, 7.22539 ) }
    soma_0 { pt3dadd( -0.939173, -2.45235, 0.305744, 7.74314 ) }
    soma_0 { pt3dadd( -0.533883, -1.85148, 0.108031, 8.02668 ) }
    soma_0 { pt3dadd( -0.128593, -1.25061, -0.0896814, 7.99979 ) }
    soma_0 { pt3dadd( 0.276697, -0.649743, -0.287394, 7.71194 ) }
    soma_0 { pt3dadd( 0.681986, -0.0488738, -0.485107, 7.51065 ) }
    soma_0 { pt3dadd( 1.08728, 0.551995, -0.682819, 7.35885 ) }
    soma_0 { pt3dadd( 1.49257, 1.15286, -0.880532, 7.1093 ) }
    soma_0 { pt3dadd( 1.89786, 1.75373, -1.07824, 6.85975 ) }
    soma_0 { pt3dadd( 2.30315, 2.3546, -1.27596, 6.61021 ) }
    soma_0 { pt3dadd( 2.70844, 2.95547, -1.47367, 6.35799 ) }
    soma_0 { pt3dadd( 3.11373, 3.55634, -1.67138, 5.44931 ) }
    soma_0 { pt3dadd( 3.51902, 4.15721, -1.86909, 4.29173 ) }
    soma_0 { pt3dadd( 3.92431, 4.75808, -2.06681, 2.41932 ) }
    soma_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 1.40798 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -0.790603, 5.91784, -1.87579, 2.22 ) }
    apic_0 { pt3dadd( -0.895269, 6.58334, -2.0865, 2.22 ) }
    apic_0 { pt3dadd( -0.913649, 8.61523, -1.96984, 1.66 ) }
    apic_0 { pt3dadd( -0.950849, 12.7247, -1.73391, 1.66 ) }
    apic_0 { pt3dadd( -0.969619, 14.7986, -1.61484, 1.39 ) }
    apic_0 { pt3dadd( -0.986479, 16.6614, -1.50789, 1.39 ) }
    apic_0 { pt3dadd( -1.00074, 18.2369, -1.41744, 1.94 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.42677, -4.17199, -2.46667, 1.94 ) }
    dend_31 { pt3dadd( -4.21274, -5.13558, -3.00198, 1.94 ) }
    dend_31 { pt3dadd( -5.12404, -7.82128, -3.49217, 1.11 ) }
    dend_31 { pt3dadd( -5.93238, -10.2036, -3.92699, 1.11 ) }
    dend_31 { pt3dadd( -6.4555, -11.7452, -4.20837, 1.11 ) }
    dend_31 { pt3dadd( -7.30151, -14.2385, -4.66345, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.13212, -1.65457, -2.57467, 0.83 ) }
    dend_28 { pt3dadd( -9.56635, -3.19554, -4.70421, 0.83 ) }
    dend_28 { pt3dadd( -10.6604, -4.08394, -4.43751, 0.83 ) }
    dend_28 { pt3dadd( -13.8593, -6.62535, -3.85276, 1.11 ) }
    dend_28 { pt3dadd( -16.8431, -8.85341, -3.21011, 0.55 ) }
    dend_28 { pt3dadd( -18.1446, -9.79917, -2.93062, 0.55 ) }
    dend_28 { pt3dadd( -20.2201, -11.2138, -2.54849, 0.55 ) }
    dend_28 { pt3dadd( -22.2933, -12.3356, -2.40551, 0.55 ) }
    dend_28 { pt3dadd( -23.2744, -12.8552, -2.39035, 0.55 ) }
    dend_28 { pt3dadd( -26.0954, -14.2411, -2.41763, 0.55 ) }
    dend_28 { pt3dadd( -28.3275, -15.3654, -2.2991, 0.55 ) }
    dend_28 { pt3dadd( -30.5999, -16.4062, -2.10211, 0.83 ) }
    dend_28 { pt3dadd( -33.0186, -17.4505, -1.79519, 0.55 ) }
    dend_28 { pt3dadd( -34.0368, -17.906, -1.66993, 0.83 ) }
    dend_28 { pt3dadd( -36.5435, -19.0938, -1.5219, 0.55 ) }
    dend_28 { pt3dadd( -39.8351, -20.7626, -1.60691, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.00657, -1.7762, 3.02105, 1.39 ) }
    dend_11 { pt3dadd( 11.2557, -4.25977, 6.95016, 1.39 ) }
    dend_11 { pt3dadd( 13.851, -5.43797, 2.30203, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 53/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.10871, 3.75617, -3.97262, 1.39 ) }
    dend_0 { pt3dadd( 4.04589, 4.87878, -5.19832, 1.39 ) }
    dend_0 { pt3dadd( 6.88653, 5.16566, -8.79633, 1.39 ) }
    dend_0 { pt3dadd( 9.59622, 5.4393, -12.2285, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 57/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 0.670401 ) }
    axon_0 { pt3dadd( 12.7175, 17.7945, -2.26452, 0.670401 ) }
    axon_0 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.670401 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 60/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.00074, 18.2369, -1.41744, 1.94 ) }
    apic_2 { pt3dadd( -2.78418, 22.1666, -2.16391, 1.11 ) }
    apic_2 { pt3dadd( -3.91451, 24.6571, -2.63702, 1.11 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 63/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -1.00074, 18.2369, -1.41744, 1.94 ) }
    apic_1 { pt3dadd( -7.34064, 20.4121, 0.650147, 1.11 ) }
    apic_1 { pt3dadd( -12.722, 22.0096, 2.49714, 0.83 ) }
    apic_1 { pt3dadd( -15.5754, 22.7575, 3.54617, 0.83 ) }
    apic_1 { pt3dadd( -20.2573, 24.0005, 5.41184, 0.83 ) }
    apic_1 { pt3dadd( -24.1363, 24.929, 6.9047, 0.83 ) }
    apic_1 { pt3dadd( -26.4148, 25.3788, 7.77039, 0.83 ) }
    apic_1 { pt3dadd( -30.6237, 25.9642, 9.77273, 0.83 ) }
    apic_1 { pt3dadd( -33.6864, 26.1364, 11.2771, 0.83 ) }
    apic_1 { pt3dadd( -37.3338, 26.1054, 13.1282, 0.83 ) }
    apic_1 { pt3dadd( -41.3449, 25.87, 15.2786, 0.83 ) }
    apic_1 { pt3dadd( -44.4648, 25.7584, 17.0789, 0.83 ) }
    apic_1 { pt3dadd( -48.4608, 25.7423, 19.5039, 0.83 ) }
    apic_1 { pt3dadd( -51.3091, 25.9629, 21.2807, 0.55 ) }
    apic_1 { pt3dadd( -55.3394, 26.4684, 23.7985, 0.55 ) }
    apic_1 { pt3dadd( -60.1589, 27.4959, 26.8745, 0.55 ) }
    apic_1 { pt3dadd( -62.6739, 28.2661, 28.5969, 0.55 ) }
    apic_1 { pt3dadd( -65.3683, 29.3038, 30.427, 0.55 ) }
    apic_1 { pt3dadd( -70.1305, 31.096, 33.5374, 0.55 ) }
    apic_1 { pt3dadd( -70.9928, 31.4262, 34.1138, 0.83 ) }
    apic_1 { pt3dadd( -76.0576, 33.25, 37.5486, 0.55 ) }
    apic_1 { pt3dadd( -80.1429, 34.5179, 40.3446, 0.55 ) }
    apic_1 { pt3dadd( -81.7251, 34.9962, 41.49, 0.55 ) }
    apic_1 { pt3dadd( -87.7869, 36.9046, 45.9059, 0.55 ) }
    apic_1 { pt3dadd( -90.229, 37.6187, 47.8626, 0.55 ) }
    apic_1 { pt3dadd( -92.2714, 38.2956, 49.6548, 0.55 ) }
    apic_1 { pt3dadd( -94.0273, 38.941, 51.2473, 0.55 ) }
    apic_1 { pt3dadd( -97.3215, 40.4414, 54.2812, 0.55 ) }
    apic_1 { pt3dadd( -99.8487, 41.7318, 56.6857, 0.55 ) }
    apic_1 { pt3dadd( -103.079, 43.8537, 60.4539, 0.55 ) }
    apic_1 { pt3dadd( -105.433, 45.4337, 63.6372, 0.55 ) }
    apic_1 { pt3dadd( -106.897, 46.4633, 66.1389, 1.11 ) }
    apic_1 { pt3dadd( -108.126, 47.3594, 68.3997, 0.55 ) }
    apic_1 { pt3dadd( -109.314, 48.1255, 70.7272, 0.83 ) }
    apic_1 { pt3dadd( -111.588, 49.7979, 76.1307, 0.28 ) }
    apic_1 { pt3dadd( -112.601, 50.5808, 78.568, 0.28 ) }
    apic_1 { pt3dadd( -113.958, 51.4446, 82.8214, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 0/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -7.30151, -14.2385, -4.66345, 1.94 ) }
    dend_33 { pt3dadd( -7.23998, -15.881, -6.62801, 1.39 ) }
    dend_33 { pt3dadd( -7.20612, -16.7849, -7.70917, 1.39 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 3/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -7.30151, -14.2385, -4.66345, 1.94 ) }
    dend_32 { pt3dadd( -10.3673, -17.7497, -4.82476, 0.55 ) }
    dend_32 { pt3dadd( -11.9274, -19.6915, -5.01196, 0.83 ) }
    dend_32 { pt3dadd( -15.8967, -24.8273, -5.82454, 0.55 ) }
    dend_32 { pt3dadd( -18.8002, -28.8767, -6.19954, 0.55 ) }
    dend_32 { pt3dadd( -20.9036, -31.678, -6.36687, 0.55 ) }
    dend_32 { pt3dadd( -23.0352, -34.482, -6.47389, 0.55 ) }
    dend_32 { pt3dadd( -25.1822, -37.0141, -6.56743, 0.55 ) }
    dend_32 { pt3dadd( -28.0825, -40.4309, -6.65422, 0.55 ) }
    dend_32 { pt3dadd( -29.7928, -42.4235, -6.71261, 0.55 ) }
    dend_32 { pt3dadd( -32.2155, -45.107, -6.67952, 0.55 ) }
    dend_32 { pt3dadd( -34.1269, -46.8953, -6.49642, 0.55 ) }
    dend_32 { pt3dadd( -38.0402, -50.0707, -6.06589, 0.55 ) }
    dend_32 { pt3dadd( -40.7157, -52.0628, -5.82278, 0.55 ) }
    dend_32 { pt3dadd( -41.7173, -52.7413, -5.77636, 0.55 ) }
    dend_32 { pt3dadd( -45.1815, -54.9287, -5.5202, 0.83 ) }
    dend_32 { pt3dadd( -48.0224, -56.6044, -5.12091, 0.55 ) }
    dend_32 { pt3dadd( -50.6462, -58.0986, -4.53829, 1.11 ) }
    dend_32 { pt3dadd( -55.1911, -60.5814, -3.1608, 0.55 ) }
    dend_32 { pt3dadd( -57.8026, -62.0165, -2.30064, 0.55 ) }
    dend_32 { pt3dadd( -60.6435, -63.7106, -1.24443, 0.83 ) }
    dend_32 { pt3dadd( -64.5153, -66.3458, 0.374219, 0.55 ) }
    dend_32 { pt3dadd( -67.4244, -68.5095, 1.76152, 0.55 ) }
    dend_32 { pt3dadd( -69.451, -70.2366, 2.87002, 0.55 ) }
    dend_32 { pt3dadd( -70.7885, -71.5914, 3.64182, 0.55 ) }
    dend_32 { pt3dadd( -72.4526, -73.5153, 4.54254, 0.55 ) }
    dend_32 { pt3dadd( -74.4675, -76.0535, 5.53553, 0.55 ) }
    dend_32 { pt3dadd( -75.3525, -77.2243, 5.91721, 0.55 ) }
    dend_32 { pt3dadd( -77.939, -80.4977, 6.84601, 0.55 ) }
    dend_32 { pt3dadd( -80.3824, -83.5603, 7.659, 0.55 ) }
    dend_32 { pt3dadd( -82.3318, -85.8983, 8.26066, 0.55 ) }
    dend_32 { pt3dadd( -84.0136, -87.8593, 8.72869, 0.28 ) }
    dend_32 { pt3dadd( -84.8808, -88.8532, 8.97731, 0.55 ) }
    dend_32 { pt3dadd( -86.8703, -91.1852, 9.55937, 0.28 ) }
    dend_32 { pt3dadd( -88.4396, -92.9763, 10.0484, 0.83 ) }
    dend_32 { pt3dadd( -89.8839, -94.8621, 10.4848, 0.55 ) }
    dend_32 { pt3dadd( -91.5081, -97.2026, 10.9167, 0.28 ) }
    dend_32 { pt3dadd( -92.072, -98.0929, 11.0329, 0.55 ) }
    dend_32 { pt3dadd( -93.1128, -99.8566, 11.1953, 0.28 ) }
    dend_32 { pt3dadd( -93.5913, -100.817, 11.2251, 0.55 ) }
    dend_32 { pt3dadd( -94.7516, -103.639, 11.1674, 0.28 ) }
    dend_32 { pt3dadd( -95.252, -105.06, 11.0919, 0.55 ) }
    dend_32 { pt3dadd( -95.8196, -106.91, 10.9408, 0.28 ) }
    dend_32 { pt3dadd( -96.1162, -107.909, 10.8554, 0.55 ) }
    dend_32 { pt3dadd( -96.501, -109.354, 10.7155, 0.28 ) }
    dend_32 { pt3dadd( -97.1505, -111.726, 10.5106, 0.28 ) }
    dend_32 { pt3dadd( -97.59, -113.338, 10.3927, 0.55 ) }
    dend_32 { pt3dadd( -98.4711, -116.103, 10.4062, 0.28 ) }
    dend_32 { pt3dadd( -98.9306, -117.362, 10.4848, 0.28 ) }
    dend_32 { pt3dadd( -99.4649, -118.597, 10.6654, 0.83 ) }
    dend_32 { pt3dadd( -101.097, -121.918, 11.3757, 0.28 ) }
    dend_32 { pt3dadd( -102.215, -124.013, 11.9895, 0.83 ) }
    dend_32 { pt3dadd( -105.08, -128.886, 13.804, 0.28 ) }
    dend_32 { pt3dadd( -105.466, -129.495, 14.0711, 0.55 ) }
    dend_32 { pt3dadd( -107.386, -132.392, 15.4878, 0.28 ) }
    dend_32 { pt3dadd( -107.638, -132.75, 15.6905, 0.55 ) }
    dend_32 { pt3dadd( -108.839, -134.277, 16.7997, 0.28 ) }
    dend_32 { pt3dadd( -109.261, -134.718, 17.2124, 0.55 ) }
    dend_32 { pt3dadd( -116.159, -144.131, 20.5379, 0.55 ) }
    dend_32 { pt3dadd( -124.016, -151.936, 25.4997, 0.55 ) }
    dend_32 { pt3dadd( -130.134, -160.231, 31.9033, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -39.8351, -20.7626, -1.60691, 0.83 ) }
    dend_30 { pt3dadd( -41.2437, -21.6803, -3.22045, 0.55 ) }
    dend_30 { pt3dadd( -44.6676, -23.3784, -7.1128, 0.55 ) }
    dend_30 { pt3dadd( -46.9311, -24.763, -9.61873, 0.55 ) }
    dend_30 { pt3dadd( -48.5612, -25.9471, -11.5776, 0.55 ) }
    dend_30 { pt3dadd( -51.281, -28.1795, -15.4898, 0.55 ) }
    dend_30 { pt3dadd( -52.6514, -29.2344, -17.6841, 0.55 ) }
    dend_30 { pt3dadd( -54.5255, -30.7733, -21.1899, 0.55 ) }
    dend_30 { pt3dadd( -55.2328, -31.38, -22.9091, 0.55 ) }
    dend_30 { pt3dadd( -55.9774, -32.0896, -25.6411, 0.55 ) }
    dend_30 { pt3dadd( -56.6072, -33.042, -29.5075, 0.83 ) }
    dend_30 { pt3dadd( -57.3984, -34.4032, -34.7092, 0.55 ) }
    dend_30 { pt3dadd( -57.5381, -34.6042, -35.738, 0.55 ) }
    dend_30 { pt3dadd( -58.1796, -35.022, -39.8205, 0.28 ) }
    dend_30 { pt3dadd( -58.7749, -35.2412, -42.6736, 0.83 ) }
    dend_30 { pt3dadd( -59.2633, -35.3581, -44.7802, 0.83 ) }
    dend_30 { pt3dadd( -60.5375, -35.5358, -49.751, 0.28 ) }
    dend_30 { pt3dadd( -60.9556, -35.591, -51.5058, 0.28 ) }
    dend_30 { pt3dadd( -62.6579, -35.7215, -58.4849, 1.66 ) }
    dend_30 { pt3dadd( -63.7364, -35.8605, -62.8416, 0.28 ) }
    dend_30 { pt3dadd( -64.137, -35.9313, -64.4688, 0.28 ) }
    dend_30 { pt3dadd( -64.8441, -35.941, -67.0028, 1.11 ) }
    dend_30 { pt3dadd( -65.7066, -36.0292, -69.9664, 0.55 ) }
    dend_30 { pt3dadd( -66.6271, -36.353, -72.4966, 0.28 ) }
    dend_30 { pt3dadd( -67.1587, -36.5708, -73.6605, 0.55 ) }
    dend_30 { pt3dadd( -68.9541, -37.131, -77.2073, 0.55 ) }
    dend_30 { pt3dadd( -72.4655, -38.1061, -83.8952, 0.55 ) }
    dend_30 { pt3dadd( -75.1744, -38.6751, -88.6414, 0.28 ) }
    dend_30 { pt3dadd( -76.3975, -38.878, -90.6805, 0.83 ) }
    dend_30 { pt3dadd( -80.4831, -39.5465, -97.2329, 0.83 ) }
    dend_30 { pt3dadd( -82.7144, -39.7808, -100.762, 0.28 ) }
    dend_30 { pt3dadd( -83.0787, -39.7888, -101.334, 0.83 ) }
    dend_30 { pt3dadd( -87.209, -39.7019, -107.664, 0.28 ) }
    dend_30 { pt3dadd( -88.0073, -39.5508, -108.837, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 98/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -39.8351, -20.7626, -1.60691, 0.83 ) }
    dend_29 { pt3dadd( -42.6557, -21.1627, -1.61716, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( -44.5796, -21.5034, -1.58106, 0.55 ) }
    dend_29 { pt3dadd( -48.6685, -22.092, -1.48507, 0.55 ) }
    dend_29 { pt3dadd( -53.2208, -23.0362, -1.18754, 0.55 ) }
    dend_29 { pt3dadd( -56.4048, -23.8528, -0.945245, 0.55 ) }
    dend_29 { pt3dadd( -59.9183, -24.89, -0.613897, 0.55 ) }
    dend_29 { pt3dadd( -61.3547, -25.4205, -0.506336, 0.55 ) }
    dend_29 { pt3dadd( -64.0855, -26.6649, -0.286338, 0.55 ) }
    dend_29 { pt3dadd( -68.6531, -29.2466, -0.0122561, 0.55 ) }
    dend_29 { pt3dadd( -71.7048, -31.3607, 0.234891, 0.83 ) }
    dend_29 { pt3dadd( -73.5066, -32.6593, 0.325363, 0.55 ) }
    dend_29 { pt3dadd( -76.584, -34.8044, 0.272913, 0.55 ) }
    dend_29 { pt3dadd( -77.5253, -35.4368, 0.224834, 0.55 ) }
    dend_29 { pt3dadd( -79.5732, -36.8066, 0.122593, 0.55 ) }
    dend_29 { pt3dadd( -82.2278, -38.4414, -0.171269, 1.11 ) }
    dend_29 { pt3dadd( -86.194, -40.795, -0.609772, 0.55 ) }
    dend_29 { pt3dadd( -87.9012, -41.7043, -0.860466, 0.55 ) }
    dend_29 { pt3dadd( -89.4802, -42.3933, -1.09076, 0.83 ) }
    dend_29 { pt3dadd( -91.1069, -43.0698, -1.38846, 0.55 ) }
    dend_29 { pt3dadd( -94.3951, -44.6039, -2.14519, 0.55 ) }
    dend_29 { pt3dadd( -95.1116, -44.9493, -2.33118, 0.55 ) }
    dend_29 { pt3dadd( -98.1532, -46.1657, -3.01961, 1.39 ) }
    dend_29 { pt3dadd( -100.783, -47.2303, -3.54348, 0.83 ) }
    dend_29 { pt3dadd( -103.359, -48.1926, -3.95398, 0.55 ) }
    dend_29 { pt3dadd( -104.816, -48.5838, -4.12229, 0.55 ) }
    dend_29 { pt3dadd( -106.92, -49.009, -4.21312, 0.55 ) }
    dend_29 { pt3dadd( -111.286, -49.766, -4.36163, 0.55 ) }
    dend_29 { pt3dadd( -113.488, -50.0867, -4.41798, 0.55 ) }
    dend_29 { pt3dadd( -114.917, -50.3125, -4.52629, 0.55 ) }
    dend_29 { pt3dadd( -118.251, -50.8899, -5.01958, 0.83 ) }
    dend_29 { pt3dadd( -120.303, -51.2922, -5.46021, 0.83 ) }
    dend_29 { pt3dadd( -123.79, -52.2382, -6.49585, 0.55 ) }
    dend_29 { pt3dadd( -125.785, -52.9563, -7.24166, 0.83 ) }
    dend_29 { pt3dadd( -128.013, -53.8933, -8.15976, 0.28 ) }
    dend_29 { pt3dadd( -129.993, -54.9565, -9.03076, 0.55 ) }
    dend_29 { pt3dadd( -130.679, -55.478, -9.30545, 0.28 ) }
    dend_29 { pt3dadd( -131.723, -56.3927, -9.74167, 0.83 ) }
    dend_29 { pt3dadd( -132.824, -57.5722, -10.1583, 0.55 ) }
    dend_29 { pt3dadd( -134.495, -59.478, -10.6326, 0.28 ) }
    dend_29 { pt3dadd( -135.916, -61.1757, -10.8965, 0.55 ) }
    dend_29 { pt3dadd( -137.931, -63.5527, -11.2024, 0.28 ) }
    dend_29 { pt3dadd( -140.513, -66.3768, -11.6049, 0.83 ) }
    dend_29 { pt3dadd( -142.241, -68.0713, -11.961, 0.83 ) }
    dend_29 { pt3dadd( -145.369, -71.1669, -12.6566, 0.28 ) }
    dend_29 { pt3dadd( -147.862, -73.5271, -13.2331, 0.55 ) }
    dend_29 { pt3dadd( -149.861, -75.4182, -13.7021, 0.28 ) }
    dend_29 { pt3dadd( -151.343, -76.6968, -14.0675, 0.83 ) }
    dend_29 { pt3dadd( -154.007, -79.0448, -14.513, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.851, -5.43797, 2.30203, 1.39 ) }
    dend_19 { pt3dadd( 16.6847, -3.73463, -1.39769, 0.83 ) }
    dend_19 { pt3dadd( 18.428, -2.68673, -3.67377, 0.83 ) }
    dend_19 { pt3dadd( 19.496, -2.04477, -5.06813, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.851, -5.43797, 2.30203, 1.39 ) }
    dend_12 { pt3dadd( 16.5159, -2.473, 4.94033, 1.11 ) }
    dend_12 { pt3dadd( 17.3435, -1.55221, 5.75968, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.59622, 5.4393, -12.2285, 1.39 ) }
    dend_4 { pt3dadd( 10.4505, 7.46007, -15.736, 1.11 ) }
    dend_4 { pt3dadd( 10.9935, 8.74438, -17.9652, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 57/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.59622, 5.4393, -12.2285, 1.39 ) }
    dend_1 { pt3dadd( 11.0694, 4.43947, -14.5997, 0.55 ) }
    dend_1 { pt3dadd( 12.28, 3.51795, -16.5692, 0.55 ) }
    dend_1 { pt3dadd( 13.3377, 2.63103, -18.0139, 0.55 ) }
    dend_1 { pt3dadd( 14.4215, 1.91591, -19.1198, 0.83 ) }
    dend_1 { pt3dadd( 15.9476, 1.09094, -20.2918, 0.83 ) }
    dend_1 { pt3dadd( 18.2133, 0.0107659, -21.7185, 0.28 ) }
    dend_1 { pt3dadd( 19.7118, -0.642742, -22.4662, 0.83 ) }
    dend_1 { pt3dadd( 22.649, -1.92931, -23.7278, 0.83 ) }
    dend_1 { pt3dadd( 28.1857, -4.39837, -25.6506, 0.83 ) }
    dend_1 { pt3dadd( 31.8002, -6.13092, -26.8534, 0.83 ) }
    dend_1 { pt3dadd( 34.224, -7.27816, -27.5527, 0.55 ) }
    dend_1 { pt3dadd( 35.1741, -7.70102, -27.7828, 0.55 ) }
    dend_1 { pt3dadd( 36.5382, -8.28875, -28.0781, 1.11 ) }
    dend_1 { pt3dadd( 39.5589, -9.65205, -28.8049, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.67 ) }
    axon_1 { pt3dadd( 29.4932, 42.6657, -2.26452, 0.67 ) }
    axon_1 { pt3dadd( 37.8811, 55.1012, -2.26452, 0.67 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 75/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -3.91451, 24.6571, -2.63702, 1.11 ) }
    apic_4 { pt3dadd( -4.37292, 25.6563, -3.60032, 1.11 ) }
    apic_4 { pt3dadd( -5.29441, 27.6648, -5.53677, 1.11 ) }
    apic_4 { pt3dadd( -7.33303, 32.1082, -9.82078, 1.11 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 79/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -3.91451, 24.6571, -2.63702, 1.11 ) }
    apic_3 { pt3dadd( -8.8377, 25.3154, 1.7109, 0.83 ) }
    apic_3 { pt3dadd( -11.1069, 25.7848, 3.75787, 0.83 ) }
    apic_3 { pt3dadd( -12.0939, 26.0087, 4.57575, 0.83 ) }
    apic_3 { pt3dadd( -14.2961, 26.4658, 6.17665, 0.83 ) }
    apic_3 { pt3dadd( -16.117, 26.7688, 7.31923, 0.83 ) }
    apic_3 { pt3dadd( -17.8568, 26.9533, 8.24859, 0.83 ) }
    apic_3 { pt3dadd( -19.5096, 26.8624, 9.17218, 0.83 ) }
    apic_3 { pt3dadd( -21.6973, 26.7646, 8.96469, 0.83 ) }
    apic_3 { pt3dadd( -23.4571, 26.7434, 8.39942, 0.83 ) }
    apic_3 { pt3dadd( -24.6222, 26.6632, 7.87104, 0.83 ) }
    apic_3 { pt3dadd( -25.8408, 26.5176, 7.30901, 0.83 ) }
    apic_3 { pt3dadd( -27.2119, 26.2826, 6.77619, 0.83 ) }
    apic_3 { pt3dadd( -31.1249, 25.5534, 5.79658, 0.83 ) }
    apic_3 { pt3dadd( -32.6221, 25.3859, 5.56058, 0.83 ) }
    apic_3 { pt3dadd( -34.529, 25.329, 5.37871, 0.83 ) }
    apic_3 { pt3dadd( -35.9513, 25.3338, 5.30467, 0.83 ) }
    apic_3 { pt3dadd( -37.6159, 25.3385, 5.24375, 0.83 ) }
    apic_3 { pt3dadd( -39.8012, 25.329, 5.2671, 0.83 ) }
    apic_3 { pt3dadd( -42.3564, 25.2758, 5.50613, 1.11 ) }
    apic_3 { pt3dadd( -44.2573, 25.2425, 5.76586, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_3 { pt3dadd( -46.1793, 25.1883, 6.01393, 0.55 ) }
    apic_3 { pt3dadd( -47.4821, 25.0785, 6.16098, 0.55 ) }
    apic_3 { pt3dadd( -49.7883, 24.7524, 6.46184, 0.83 ) }
    apic_3 { pt3dadd( -51.4802, 24.3207, 6.7492, 0.55 ) }
    apic_3 { pt3dadd( -52.8273, 23.8009, 7.0235, 0.55 ) }
    apic_3 { pt3dadd( -54.3504, 23.0386, 7.3725, 1.11 ) }
    apic_3 { pt3dadd( -55.4595, 22.4038, 7.68903, 0.55 ) }
    apic_3 { pt3dadd( -56.6722, 21.6349, 8.13192, 0.55 ) }
    apic_3 { pt3dadd( -57.6635, 20.957, 8.48285, 0.55 ) }
    apic_3 { pt3dadd( -58.3706, 20.5081, 8.72006, 0.55 ) }
    apic_3 { pt3dadd( -59.9236, 19.576, 9.2416, 0.83 ) }
    apic_3 { pt3dadd( -61.6203, 18.5753, 9.86393, 0.28 ) }
    apic_3 { pt3dadd( -62.8346, 17.8713, 10.2677, 1.39 ) }
    apic_3 { pt3dadd( -64.4299, 16.9395, 10.7794, 1.11 ) }
    apic_3 { pt3dadd( -65.7247, 16.2032, 11.2422, 0.28 ) }
    apic_3 { pt3dadd( -66.537, 15.7485, 11.5434, 0.55 ) }
    apic_3 { pt3dadd( -67.7724, 15.0989, 11.9424, 0.28 ) }
    apic_3 { pt3dadd( -68.8983, 14.469, 12.259, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 18/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.20612, -16.7849, -7.70917, 1.39 ) }
    dend_41 { pt3dadd( -12.7796, -16.9525, -7.54189, 0.83 ) }
    dend_41 { pt3dadd( -14.842, -17.0145, -7.47999, 0.83 ) }
    dend_41 { pt3dadd( -16.2757, -17.0576, -7.43695, 0.83 ) }
    dend_41 { pt3dadd( -17.8978, -17.1063, -7.38827, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 23/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.20612, -16.7849, -7.70917, 1.39 ) }
    dend_34 { pt3dadd( -5.511, -19.8463, -8.88284, 0.83 ) }
    dend_34 { pt3dadd( -3.80325, -22.6881, -10.1626, 0.83 ) }
    dend_34 { pt3dadd( -2.58045, -25.0035, -11.1199, 0.83 ) }
    dend_34 { pt3dadd( -0.970819, -28.1934, -12.4845, 0.83 ) }
    dend_34 { pt3dadd( 0.0199549, -30.3792, -13.3855, 0.83 ) }
    dend_34 { pt3dadd( 1.92906, -34.7799, -15.2564, 0.83 ) }
    dend_34 { pt3dadd( 3.57198, -38.932, -16.8093, 0.83 ) }
    dend_34 { pt3dadd( 5.10157, -43.2368, -18.3362, 0.83 ) }
    dend_34 { pt3dadd( 6.44478, -47.1319, -19.6483, 0.83 ) }
    dend_34 { pt3dadd( 7.3601, -49.8886, -20.5165, 0.83 ) }
    dend_34 { pt3dadd( 8.67629, -54.2477, -21.6687, 0.83 ) }
    dend_34 { pt3dadd( 9.40254, -56.962, -22.2699, 0.83 ) }
    dend_34 { pt3dadd( 9.88422, -59.0648, -22.6045, 0.83 ) }
    dend_34 { pt3dadd( 10.6018, -61.9497, -22.9843, 0.55 ) }
    dend_34 { pt3dadd( 11.0935, -64.124, -23.0951, 1.39 ) }
    dend_34 { pt3dadd( 12.1305, -68.3664, -23.1667, 1.39 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.496, -2.04477, -5.06813, 0.83 ) }
    dend_27 { pt3dadd( 21.4777, -2.94194, -7.48578, 0.83 ) }
    dend_27 { pt3dadd( 23.3127, -3.97941, -9.80649, 0.83 ) }
    dend_27 { pt3dadd( 26.1982, -5.7547, -13.3273, 0.55 ) }
    dend_27 { pt3dadd( 28.8351, -7.51844, -16.5104, 0.55 ) }
    dend_27 { pt3dadd( 31.4296, -9.34938, -19.415, 0.55 ) }
    dend_27 { pt3dadd( 33.6383, -10.9099, -21.8003, 0.55 ) }
    dend_27 { pt3dadd( 36.4356, -12.9646, -24.7522, 0.55 ) }
    dend_27 { pt3dadd( 38.8507, -14.6036, -27.3256, 0.55 ) }
    dend_27 { pt3dadd( 41.8126, -16.5164, -30.6594, 0.55 ) }
    dend_27 { pt3dadd( 46.9194, -19.5547, -36.7754, 0.55 ) }
    dend_27 { pt3dadd( 48.5929, -20.4262, -38.8603, 0.55 ) }
    dend_27 { pt3dadd( 51.7075, -21.8828, -42.9543, 0.55 ) }
    dend_27 { pt3dadd( 54.5546, -23.0732, -46.8833, 0.55 ) }
    dend_27 { pt3dadd( 57.9736, -24.4219, -51.7864, 0.55 ) }
    dend_27 { pt3dadd( 60.1659, -25.294, -54.9254, 0.55 ) }
    dend_27 { pt3dadd( 62.4591, -26.2213, -58.3383, 0.55 ) }
    dend_27 { pt3dadd( 65.9085, -27.6021, -63.2194, 0.55 ) }
    dend_27 { pt3dadd( 67.2401, -28.1471, -64.978, 0.55 ) }
    dend_27 { pt3dadd( 69.5737, -29.0472, -67.7805, 0.55 ) }
    dend_27 { pt3dadd( 73.5993, -30.3431, -72.2901, 0.55 ) }
    dend_27 { pt3dadd( 78.0443, -31.4414, -77.0722, 0.55 ) }
    dend_27 { pt3dadd( 81.1004, -31.9869, -80.3064, 0.55 ) }
    dend_27 { pt3dadd( 85.079, -32.4217, -84.4439, 0.55 ) }
    dend_27 { pt3dadd( 88.8542, -32.5883, -88.2849, 0.55 ) }
    dend_27 { pt3dadd( 92.5317, -32.5243, -91.959, 0.55 ) }
    dend_27 { pt3dadd( 95.0357, -32.3823, -94.359, 0.55 ) }
    dend_27 { pt3dadd( 97.4789, -32.2799, -96.5789, 0.55 ) }
    dend_27 { pt3dadd( 99.1898, -32.2784, -98.1604, 0.83 ) }
    dend_27 { pt3dadd( 102.941, -32.2263, -101.613, 0.55 ) }
    dend_27 { pt3dadd( 104.402, -32.2706, -102.982, 0.83 ) }
    dend_27 { pt3dadd( 109.292, -32.5454, -107.793, 0.55 ) }
    dend_27 { pt3dadd( 110.688, -32.6624, -109.221, 0.83 ) }
    dend_27 { pt3dadd( 115.93, -33.2071, -114.748, 0.55 ) }
    dend_27 { pt3dadd( 118.037, -33.5611, -117.058, 0.55 ) }
    dend_27 { pt3dadd( 120.269, -34.0411, -119.627, 0.55 ) }
    dend_27 { pt3dadd( 122.877, -34.649, -122.701, 0.55 ) }
    dend_27 { pt3dadd( 124.485, -35.0136, -124.656, 0.55 ) }
    dend_27 { pt3dadd( 126.047, -35.4006, -126.615, 0.55 ) }
    dend_27 { pt3dadd( 129.192, -36.3663, -130.832, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 80/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.496, -2.04477, -5.06813, 0.83 ) }
    dend_20 { pt3dadd( 22.7862, -4.68423, -1.35608, 0.83 ) }
    dend_20 { pt3dadd( 25.0293, -5.92386, 0.672194, 0.83 ) }
    dend_20 { pt3dadd( 29.3067, -7.33316, 3.74114, 0.83 ) }
    dend_20 { pt3dadd( 31.5301, -8.0657, 5.33633, 0.83 ) }
    dend_20 { pt3dadd( 33.1414, -8.59659, 6.49243, 0.83 ) }
    dend_20 { pt3dadd( 36.8581, -9.82116, 9.15909, 0.55 ) }
    dend_20 { pt3dadd( 39.5303, -10.0922, 10.7488, 0.55 ) }
    dend_20 { pt3dadd( 42.6549, -9.9306, 12.1586, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 17.3435, -1.55221, 5.75968, 1.11 ) }
    dend_16 { pt3dadd( 20.2538, 1.89438, 8.39823, 0.55 ) }
    dend_16 { pt3dadd( 22.2015, 4.84338, 10.5142, 0.83 ) }
    dend_16 { pt3dadd( 23.5064, 7.01128, 12.2903, 0.55 ) }
    dend_16 { pt3dadd( 25.3889, 10.139, 14.8529, 0.55 ) }
    dend_16 { pt3dadd( 25.9331, 11.0431, 15.5936, 0.55 ) }
    dend_16 { pt3dadd( 26.812, 12.5034, 16.79, 0.83 ) }
    dend_16 { pt3dadd( 27.5447, 13.5517, 17.9824, 0.55 ) }
    dend_16 { pt3dadd( 28.4443, 15.0842, 19.0445, 0.83 ) }
    dend_16 { pt3dadd( 35.8651, 23.9528, 23.9289, 0.83 ) }
    dend_16 { pt3dadd( 43.7901, 33.0272, 27.4543, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 51.9086, 41.5644, 31.7882, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 1/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 17.3435, -1.55221, 5.75968, 1.11 ) }
    dend_13 { pt3dadd( 16.2316, -2.58532, 9.19899, 0.55 ) }
    dend_13 { pt3dadd( 15.8151, -3.11475, 10.6525, 0.55 ) }
    dend_13 { pt3dadd( 15.3978, -3.71988, 12.5179, 0.55 ) }
    dend_13 { pt3dadd( 14.2895, -6.22755, 19.9797, 0.55 ) }
    dend_13 { pt3dadd( 14.0195, -6.937, 22.271, 0.55 ) }
    dend_13 { pt3dadd( 13.9077, -7.32526, 23.617, 0.55 ) }
    dend_13 { pt3dadd( 13.8478, -8.40503, 27.6112, 0.55 ) }
    dend_13 { pt3dadd( 13.9501, -9.35529, 31.29, 0.55 ) }
    dend_13 { pt3dadd( 14.2533, -10.3183, 35.4522, 0.55 ) }
    dend_13 { pt3dadd( 14.4968, -10.776, 37.3856, 0.55 ) }
    dend_13 { pt3dadd( 14.9819, -11.4886, 40.0086, 1.11 ) }
    dend_13 { pt3dadd( 14.1112, -12.496, 51.1752, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 10.9935, 8.74438, -17.9652, 1.39 ) }
    dend_8 { pt3dadd( 16.4172, 10.2853, -21.2056, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 16/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.9935, 8.74438, -17.9652, 1.39 ) }
    dend_5 { pt3dadd( 11.3345, 9.06887, -19.1684, 0.83 ) }
    dend_5 { pt3dadd( 11.7257, 9.73026, -21.2314, 0.83 ) }
    dend_5 { pt3dadd( 12.0365, 10.8299, -24.1667, 0.83 ) }
    dend_5 { pt3dadd( 12.1098, 11.1749, -25.0935, 0.83 ) }
    dend_5 { pt3dadd( 12.1079, 11.795, -26.9165, 0.83 ) }
    dend_5 { pt3dadd( 12.1039, 13.0633, -30.6449, 0.83 ) }
    dend_5 { pt3dadd( 12.038, 13.7472, -32.6684, 0.83 ) }
    dend_5 { pt3dadd( 11.9158, 14.1753, -33.8263, 0.83 ) }
    dend_5 { pt3dadd( 11.6976, 14.9802, -35.7349, 0.83 ) }
    dend_5 { pt3dadd( 11.1445, 16.1059, -39.105, 1.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 27/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 39.5589, -9.65205, -28.8049, 0.83 ) }
    dend_3 { pt3dadd( 43.1783, -12.4041, -29.8829, 0.83 ) }
    dend_3 { pt3dadd( 44.6955, -13.5126, -30.598, 0.83 ) }
    dend_3 { pt3dadd( 45.569, -14.1519, -30.9804, 0.83 ) }
    dend_3 { pt3dadd( 46.9634, -15.2009, -31.5222, 0.83 ) }
    dend_3 { pt3dadd( 48.9114, -16.6739, -32.2754, 0.83 ) }
    dend_3 { pt3dadd( 51.7949, -18.874, -33.3642, 0.83 ) }
    dend_3 { pt3dadd( 53.6712, -20.3394, -34.0679, 0.83 ) }
    dend_3 { pt3dadd( 55.8039, -22.0929, -34.8122, 0.83 ) }
    dend_3 { pt3dadd( 57.9225, -23.8648, -35.5357, 0.83 ) }
    dend_3 { pt3dadd( 61.9663, -27.457, -36.7964, 0.83 ) }
    dend_3 { pt3dadd( 63.3153, -28.6219, -37.2016, 0.83 ) }
    dend_3 { pt3dadd( 64.7229, -29.8226, -37.5993, 0.83 ) }
    dend_3 { pt3dadd( 66.5016, -31.4528, -38.1655, 0.83 ) }
    dend_3 { pt3dadd( 67.647, -32.5166, -38.5444, 0.83 ) }
    dend_3 { pt3dadd( 69.0157, -33.8349, -38.9485, 0.28 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 43/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 39.5589, -9.65205, -28.8049, 0.83 ) }
    dend_2 { pt3dadd( 43.6757, -14.8408, -32.0853, 0.28 ) }
    dend_2 { pt3dadd( 43.8889, -15.1778, -32.416, 0.55 ) }
    dend_2 { pt3dadd( 44.9061, -16.7211, -33.8579, 0.28 ) }
    dend_2 { pt3dadd( 46.0638, -18.4679, -35.3768, 1.11 ) }
    dend_2 { pt3dadd( 49.4634, -23.4707, -39.625, 0.28 ) }
    dend_2 { pt3dadd( 49.9021, -24.1113, -40.1502, 0.83 ) }
    dend_2 { pt3dadd( 52.4328, -27.5118, -42.7491, 0.28 ) }
    dend_2 { pt3dadd( 52.9846, -28.2217, -43.2493, 0.55 ) }
    dend_2 { pt3dadd( 54.0175, -29.5286, -44.0883, 0.28 ) }
    dend_2 { pt3dadd( 55.8103, -31.6759, -45.3781, 0.83 ) }
    dend_2 { pt3dadd( 58.1846, -34.3902, -46.8265, 0.28 ) }
    dend_2 { pt3dadd( 59.4928, -35.8774, -47.6377, 0.55 ) }
    dend_2 { pt3dadd( 61.3459, -37.9588, -48.8217, 0.28 ) }
    dend_2 { pt3dadd( 62.0507, -38.719, -49.2522, 0.55 ) }
    dend_2 { pt3dadd( 64.6426, -41.3821, -50.7962, 0.28 ) }
    dend_2 { pt3dadd( 66.8152, -43.5472, -51.9204, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 60/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -7.33303, 32.1082, -9.82078, 1.11 ) }
    apic_8 { pt3dadd( -6.83897, 38.2538, -10.9074, 1.11 ) }
    apic_8 { pt3dadd( -6.09115, 42.9896, -11.633, 1.11 ) }
    apic_8 { pt3dadd( -5.20767, 48.5844, -12.4901, 1.11 ) }
    apic_8 { pt3dadd( -4.67705, 51.9447, -13.0049, 1.11 ) }
    apic_8 { pt3dadd( -4.02409, 56.0798, -13.6384, 1.11 ) }
    apic_8 { pt3dadd( -3.01048, 62.4987, -14.6218, 1.11 ) }
    apic_8 { pt3dadd( -3.1731, 69.3539, -16.4485, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 68/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -7.33303, 32.1082, -9.82078, 1.11 ) }
    apic_5 { pt3dadd( -8.5504, 31.8334, -7.52803, 1.11 ) }
    apic_5 { pt3dadd( -10.4312, 31.4089, -3.98576, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 71/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -17.8978, -17.1063, -7.38827, 1.11 ) }
    dend_45 { pt3dadd( -18.6652, -17.388, -9.95035, 0.55 ) }
    dend_45 { pt3dadd( -18.7805, -17.4904, -10.3119, 0.55 ) }
    dend_45 { pt3dadd( -19.1128, -17.8828, -11.2483, 0.55 ) }
    dend_45 { pt3dadd( -21.1277, -20.3953, -16.0449, 0.55 ) }
    dend_45 { pt3dadd( -21.6713, -20.981, -17.0862, 0.55 ) }
    dend_45 { pt3dadd( -21.9747, -21.3079, -17.6673, 0.55 ) }
    dend_45 { pt3dadd( -23.5094, -23.0629, -20.1738, 0.55 ) }
    dend_45 { pt3dadd( -24.0366, -23.7221, -20.992, 0.55 ) }
    dend_45 { pt3dadd( -24.5833, -24.5249, -21.7565, 0.55 ) }
    dend_45 { pt3dadd( -25.793, -26.4227, -22.3972, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -17.8978, -17.1063, -7.38827, 1.11 ) }
    dend_42 { pt3dadd( -19.2404, -20.7662, -8.75905, 0.83 ) }
    dend_42 { pt3dadd( -21.1335, -24.8394, -10.2562, 0.83 ) }
    dend_42 { pt3dadd( -21.7627, -26.1792, -10.6896, 0.28 ) }
    dend_42 { pt3dadd( -22.185, -27.1349, -10.9928, 0.83 ) }
    dend_42 { pt3dadd( -23.1357, -29.3442, -11.5446, 0.55 ) }
    dend_42 { pt3dadd( -24.7488, -32.8278, -12.3214, 0.55 ) }
    dend_42 { pt3dadd( -27.3198, -37.8618, -13.3629, 0.55 ) }
    dend_42 { pt3dadd( -28.4719, -39.9907, -13.8645, 0.55 ) }
    dend_42 { pt3dadd( -30.7708, -44.0633, -14.9028, 0.83 ) }
    dend_42 { pt3dadd( -33.5038, -48.6974, -16.1466, 0.83 ) }
    dend_42 { pt3dadd( -35.7872, -52.5562, -17.1592, 0.83 ) }
    dend_42 { pt3dadd( -37.2225, -55.0419, -17.7856, 0.83 ) }
    dend_42 { pt3dadd( -38.4371, -57.091, -18.3858, 0.83 ) }
    dend_42 { pt3dadd( -39.5257, -58.7505, -18.9653, 0.83 ) }
    dend_42 { pt3dadd( -40.0394, -59.4371, -19.2544, 0.83 ) }
    dend_42 { pt3dadd( -41.4236, -61.2598, -20.5575, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 99/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 12.1305, -68.3664, -23.1667, 1.39 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( 14.6569, -71.3571, -21.0112, 0.55 ) }
    dend_36 { pt3dadd( 15.9825, -72.9263, -19.8802, 0.83 ) }
    dend_36 { pt3dadd( 17.5618, -74.7959, -18.5327, 0.55 ) }
    dend_36 { pt3dadd( 18.3768, -75.7607, -17.8373, 0.55 ) }
    dend_36 { pt3dadd( 18.9914, -76.4882, -17.313, 0.55 ) }
    dend_36 { pt3dadd( 20.1261, -77.8315, -16.3449, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.1305, -68.3664, -23.1667, 1.39 ) }
    dend_35 { pt3dadd( 12.7494, -69.4783, -23.8763, 0.55 ) }
    dend_35 { pt3dadd( 13.9703, -71.5887, -25.0897, 0.55 ) }
    dend_35 { pt3dadd( 15.8372, -75.0456, -27.2288, 0.55 ) }
    dend_35 { pt3dadd( 16.777, -76.6798, -28.274, 0.55 ) }
    dend_35 { pt3dadd( 18.4695, -79.6229, -30.1264, 0.55 ) }
    dend_35 { pt3dadd( 18.8772, -80.3688, -30.5759, 0.55 ) }
    dend_35 { pt3dadd( 20.1353, -82.7296, -31.9332, 1.11 ) }
    dend_35 { pt3dadd( 21.3955, -85.4043, -33.3186, 0.28 ) }
    dend_35 { pt3dadd( 22.3607, -87.7747, -34.2446, 0.28 ) }
    dend_35 { pt3dadd( 22.768, -89.0108, -34.6331, 0.28 ) }
    dend_35 { pt3dadd( 23.058, -90.4817, -34.9112, 0.83 ) }
    dend_35 { pt3dadd( 23.3387, -91.8984, -35.0861, 0.28 ) }
    dend_35 { pt3dadd( 23.587, -93.5878, -35.0996, 0.28 ) }
    dend_35 { pt3dadd( 23.7941, -95.0233, -34.9128, 0.55 ) }
    dend_35 { pt3dadd( 23.9252, -96.1022, -34.8038, 0.28 ) }
    dend_35 { pt3dadd( 24.0767, -97.247, -34.8221, 0.28 ) }
    dend_35 { pt3dadd( 24.295, -98.7678, -34.9836, 0.83 ) }
    dend_35 { pt3dadd( 24.7163, -102.028, -35.6186, 0.83 ) }
    dend_35 { pt3dadd( 25.0909, -105.086, -36.2672, 0.28 ) }
    dend_35 { pt3dadd( 25.3095, -107.283, -36.8143, 0.83 ) }
    dend_35 { pt3dadd( 25.6611, -110.446, -37.6506, 0.28 ) }
    dend_35 { pt3dadd( 25.9187, -112.54, -38.2567, 0.55 ) }
    dend_35 { pt3dadd( 26.2361, -115.405, -39.3505, 0.28 ) }
    dend_35 { pt3dadd( 26.4854, -117.343, -40.2443, 1.11 ) }
    dend_35 { pt3dadd( 27.021, -120.983, -42.1137, 0.28 ) }
    dend_35 { pt3dadd( 27.5164, -123.737, -43.4855, 0.28 ) }
    dend_35 { pt3dadd( 27.8013, -125.11, -44.1915, 0.83 ) }
    dend_35 { pt3dadd( 28.8056, -129.964, -46.8971, 0.28 ) }
    dend_35 { pt3dadd( 29.077, -131.238, -47.668, 0.55 ) }
    dend_35 { pt3dadd( 29.3954, -132.813, -48.7262, 0.55 ) }
    dend_35 { pt3dadd( 29.8686, -134.909, -50.2056, 0.55 ) }
    dend_35 { pt3dadd( 30.2424, -137.06, -51.7509, 0.28 ) }
    dend_35 { pt3dadd( 30.3885, -137.831, -52.2183, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 42.6549, -9.9306, 12.1586, 0.55 ) }
    dend_22 { pt3dadd( 43.7622, -6.61541, 11.7624, 0.28 ) }
    dend_22 { pt3dadd( 43.9503, -6.05232, 11.6951, 0.83 ) }
    dend_22 { pt3dadd( 44.3723, -4.78893, 11.5441, 0.28 ) }
    dend_22 { pt3dadd( 45.7125, -0.776843, 11.0645, 0.83 ) }
    dend_22 { pt3dadd( 49.7491, 9.08274, 9.88655, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 42.6549, -9.9306, 12.1586, 0.55 ) }
    dend_21 { pt3dadd( 47.4043, -11.7827, 14.742, 0.28 ) }
    dend_21 { pt3dadd( 47.8399, -11.9525, 14.9789, 0.83 ) }
    dend_21 { pt3dadd( 49.1967, -12.4816, 15.7169, 0.55 ) }
    dend_21 { pt3dadd( 52.7909, -13.8832, 17.6719, 1.11 ) }
    dend_21 { pt3dadd( 61.1363, -14.9533, 21.4635, 1.11 ) }
    dend_21 { pt3dadd( 69.5002, -17.0218, 24.7698, 1.11 ) }
    dend_21 { pt3dadd( 77.0028, -19.9898, 29.2495, 1.11 ) }
    dend_21 { pt3dadd( 84.0869, -23.501, 34.0091, 1.11 ) }
    dend_21 { pt3dadd( 90.9867, -27.9882, 38.1832, 1.11 ) }
    dend_21 { pt3dadd( 96.6361, -32.8972, 43.5824, 1.11 ) }
    dend_21 { pt3dadd( 103.248, -36.1079, 49.1634, 1.11 ) }
    dend_21 { pt3dadd( 108.459, -40.4552, 55.4175, 1.11 ) }
    dend_21 { pt3dadd( 112.085, -45.7535, 62.0464, 1.11 ) }
    dend_21 { pt3dadd( 116.651, -51.331, 67.8089, 1.11 ) }
    dend_21 { pt3dadd( 121.594, -56.4638, 73.6731, 1.11 ) }
    dend_21 { pt3dadd( 126.603, -61.5636, 79.5102, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 63/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 51.9086, 41.5644, 31.7882, 0.83 ) }
    dend_18 { pt3dadd( 58.1927, 49.5555, 36.7305, 0.83 ) }
    dend_18 { pt3dadd( 64.5085, 56.7582, 42.731, 0.83 ) }
    dend_18 { pt3dadd( 70.7553, 64.2441, 48.4506, 0.83 ) }
    dend_18 { pt3dadd( 75.1446, 71.7503, 55.6731, 0.83 ) }
    dend_18 { pt3dadd( 80.4925, 78.2146, 63.2484, 0.83 ) }
    dend_18 { pt3dadd( 87.0208, 84.4018, 70.095, 0.83 ) }
    dend_18 { pt3dadd( 92.0038, 91.9712, 76.8513, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 51.9086, 41.5644, 31.7882, 0.83 ) }
    dend_17 { pt3dadd( 56.7431, 47.3041, 36.4984, 0.83 ) }
    dend_17 { pt3dadd( 62.4062, 52.1626, 41.2761, 0.83 ) }
    dend_17 { pt3dadd( 69.1775, 55.4123, 45.9762, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.1112, -12.496, 51.1752, 1.11 ) }
    dend_15 { pt3dadd( 13.4831, -15.0988, 58.0304, 0.83 ) }
    dend_15 { pt3dadd( 12.0841, -17.0017, 65.0007, 0.83 ) }
    dend_15 { pt3dadd( 9.25707, -17.3523, 71.7866, 0.83 ) }
    dend_15 { pt3dadd( 5.96756, -18.6228, 78.2464, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 80/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 14.1112, -12.496, 51.1752, 1.11 ) }
    dend_14 { pt3dadd( 14.0113, -12.934, 63.6311, 0.83 ) }
    dend_14 { pt3dadd( 16.054, -14.2366, 75.8573, 0.83 ) }
    dend_14 { pt3dadd( 17.1221, -17.943, 87.7095, 0.83 ) }
    dend_14 { pt3dadd( 19.2304, -22.8398, 98.9757, 0.83 ) }
    dend_14 { pt3dadd( 20.8854, -28.1378, 110.136, 0.83 ) }
    dend_14 { pt3dadd( 22.3982, -35.3896, 120.16, 0.83 ) }
    dend_14 { pt3dadd( 25.0447, -42.5978, 129.977, 0.83 ) }
    dend_14 { pt3dadd( 28.2365, -48.9466, 140.217, 0.83 ) }
    dend_14 { pt3dadd( 31.5258, -55.5997, 150.231, 0.83 ) }
    dend_14 { pt3dadd( 34.9626, -63.0673, 159.599, 0.83 ) }
    dend_14 { pt3dadd( 37.8898, -68.7057, 170.323, 0.83 ) }
    dend_14 { pt3dadd( 38.7838, -74.4067, 181.37, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.4172, 10.2853, -21.2056, 0.83 ) }
    dend_10 { pt3dadd( 19.2313, 12.431, -24.5211, 0.83 ) }
    dend_10 { pt3dadd( 22.3373, 14.914, -28.1048, 0.83 ) }
    dend_10 { pt3dadd( 25.683, 17.2605, -31.4654, 0.83 ) }
    dend_10 { pt3dadd( 29.1025, 19.4823, -34.6298, 0.83 ) }
    dend_10 { pt3dadd( 31.7667, 21.0897, -36.9673, 0.83 ) }
    dend_10 { pt3dadd( 35.6526, 23.3203, -40.2538, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 38.0285, 24.5244, -42.0895, 0.83 ) }
    dend_10 { pt3dadd( 42.1082, 26.4067, -44.8199, 0.83 ) }
    dend_10 { pt3dadd( 44.026, 27.2657, -46.0715, 0.83 ) }
    dend_10 { pt3dadd( 45.9674, 28.033, -47.3218, 0.83 ) }
    dend_10 { pt3dadd( 47.8866, 28.8862, -48.5751, 0.83 ) }
    dend_10 { pt3dadd( 49.558, 29.6273, -49.7073, 0.83 ) }
    dend_10 { pt3dadd( 53.4426, 31.5215, -52.4821, 0.83 ) }
    dend_10 { pt3dadd( 55.8169, 32.8384, -54.3099, 0.83 ) }
    dend_10 { pt3dadd( 58.0991, 34.1473, -56.0746, 0.83 ) }
    dend_10 { pt3dadd( 63.8168, 37.46, -60.5117, 0.83 ) }
    dend_10 { pt3dadd( 66.9367, 39.21, -62.8026, 0.83 ) }
    dend_10 { pt3dadd( 69.3925, 40.6088, -64.5273, 0.55 ) }
    dend_10 { pt3dadd( 71.3358, 41.7284, -65.8361, 0.55 ) }
    dend_10 { pt3dadd( 73.1582, 42.8392, -67.0159, 0.55 ) }
    dend_10 { pt3dadd( 74.7502, 43.8403, -68.0033, 0.55 ) }
    dend_10 { pt3dadd( 80.3926, 47.3848, -71.3505, 0.55 ) }
    dend_10 { pt3dadd( 82.8684, 48.9971, -72.7997, 0.55 ) }
    dend_10 { pt3dadd( 84.5237, 49.9658, -73.7569, 1.11 ) }
    dend_10 { pt3dadd( 85.6778, 50.6591, -74.4438, 0.55 ) }
    dend_10 { pt3dadd( 86.9162, 51.3825, -75.2135, 0.55 ) }
    dend_10 { pt3dadd( 89.8087, 53.0352, -77.0556, 0.55 ) }
    dend_10 { pt3dadd( 91.3729, 53.9, -78.002, 0.83 ) }
    dend_10 { pt3dadd( 93.8291, 55.1228, -79.3593, 0.55 ) }
    dend_10 { pt3dadd( 97.7436, 56.9896, -81.2717, 0.55 ) }
    dend_10 { pt3dadd( 99.5128, 57.798, -82.0746, 0.55 ) }
    dend_10 { pt3dadd( 103.827, 59.8147, -83.9668, 0.55 ) }
    dend_10 { pt3dadd( 106.876, 61.226, -85.2597, 0.55 ) }
    dend_10 { pt3dadd( 109.175, 62.2751, -86.2533, 0.55 ) }
    dend_10 { pt3dadd( 112.501, 63.8126, -87.7558, 0.55 ) }
    dend_10 { pt3dadd( 116.347, 65.4906, -89.6014, 0.55 ) }
    dend_10 { pt3dadd( 120.077, 67.233, -91.5371, 0.28 ) }
    dend_10 { pt3dadd( 120.62, 67.4782, -91.8523, 0.55 ) }
    dend_10 { pt3dadd( 122.113, 68.1471, -92.8374, 0.28 ) }
    dend_10 { pt3dadd( 124.578, 69.3919, -94.5482, 0.28 ) }
    dend_10 { pt3dadd( 125.278, 69.7806, -95.1092, 0.83 ) }
    dend_10 { pt3dadd( 127.179, 71.1386, -96.6698, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 36/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.4172, 10.2853, -21.2056, 0.83 ) }
    dend_9 { pt3dadd( 17.6735, 8.00384, -25.2939, 0.55 ) }
    dend_9 { pt3dadd( 18.2909, 7.14904, -26.9907, 0.55 ) }
    dend_9 { pt3dadd( 19.1976, 6.02202, -29.3855, 0.55 ) }
    dend_9 { pt3dadd( 19.89, 5.331, -30.9057, 0.55 ) }
    dend_9 { pt3dadd( 20.2228, 5.02504, -31.5593, 0.83 ) }
    dend_9 { pt3dadd( 21.5588, 4.00234, -33.8879, 0.55 ) }
    dend_9 { pt3dadd( 23.3836, 2.81367, -36.5219, 0.55 ) }
    dend_9 { pt3dadd( 24.8915, 1.83948, -38.9719, 0.55 ) }
    dend_9 { pt3dadd( 26.058, 1.07435, -41.1122, 0.55 ) }
    dend_9 { pt3dadd( 27.0879, 0.341576, -43.2001, 0.55 ) }
    dend_9 { pt3dadd( 28.3595, -0.634855, -45.939, 0.55 ) }
    dend_9 { pt3dadd( 29.3712, -1.57288, -48.4273, 0.55 ) }
    dend_9 { pt3dadd( 30.8072, -3.23265, -53.037, 0.83 ) }
    dend_9 { pt3dadd( 31.2324, -3.75146, -54.6262, 0.55 ) }
    dend_9 { pt3dadd( 31.432, -4.01077, -55.4674, 0.55 ) }
    dend_9 { pt3dadd( 31.9877, -4.6434, -57.6498, 0.83 ) }
    dend_9 { pt3dadd( 32.7357, -5.35935, -59.9133, 0.55 ) }
    dend_9 { pt3dadd( 33.8505, -6.11484, -62.2174, 0.55 ) }
    dend_9 { pt3dadd( 34.3542, -6.44174, -62.9285, 0.83 ) }
    dend_9 { pt3dadd( 35.5949, -7.30708, -64.7181, 0.28 ) }
    dend_9 { pt3dadd( 35.9449, -7.54601, -65.2125, 0.83 ) }
    dend_9 { pt3dadd( 37.0963, -8.42656, -66.8259, 0.28 ) }
    dend_9 { pt3dadd( 37.8406, -9.06038, -67.8951, 0.55 ) }
    dend_9 { pt3dadd( 39.2556, -10.5337, -70.3304, 0.55 ) }
    dend_9 { pt3dadd( 40.5757, -12.0809, -73.0671, 0.28 ) }
    dend_9 { pt3dadd( 41.1034, -12.7016, -74.261, 0.28 ) }
    dend_9 { pt3dadd( 41.487, -13.1397, -75.2304, 0.28 ) }
    dend_9 { pt3dadd( 42.0209, -13.737, -76.721, 0.83 ) }
    dend_9 { pt3dadd( 42.7498, -14.5114, -78.7819, 0.28 ) }
    dend_9 { pt3dadd( 43.185, -15.0106, -80.1615, 0.83 ) }
    dend_9 { pt3dadd( 44.0265, -16.1971, -83.0002, 0.55 ) }
    dend_9 { pt3dadd( 44.8729, -17.4174, -85.7797, 0.28 ) }
    dend_9 { pt3dadd( 45.1347, -17.7903, -86.5737, 0.83 ) }
    dend_9 { pt3dadd( 45.4738, -18.3294, -87.7508, 0.83 ) }
    dend_9 { pt3dadd( 46.0441, -19.3365, -89.9985, 0.55 ) }
    dend_9 { pt3dadd( 46.4645, -20.1613, -91.9609, 0.55 ) }
    dend_9 { pt3dadd( 46.8531, -21.186, -94.5853, 0.55 ) }
    dend_9 { pt3dadd( 47.2233, -21.9627, -96.4083, 0.55 ) }
    dend_9 { pt3dadd( 48.2292, -23.721, -100.238, 0.55 ) }
    dend_9 { pt3dadd( 48.6688, -24.3723, -101.553, 0.28 ) }
    dend_9 { pt3dadd( 48.8715, -24.6475, -102.094, 0.83 ) }
    dend_9 { pt3dadd( 50.0165, -26.0645, -105.108, 0.28 ) }
    dend_9 { pt3dadd( 51.448, -28.1348, -108.899, 0.55 ) }
    dend_9 { pt3dadd( 52.1703, -28.996, -110.059, 0.28 ) }
    dend_9 { pt3dadd( 52.5798, -29.4362, -110.255, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.1445, 16.1059, -39.105, 1.66 ) }
    dend_7 { pt3dadd( 10.6338, 17.359, -41.5257, 0.55 ) }
    dend_7 { pt3dadd( 9.41716, 20.2501, -46.0998, 0.55 ) }
    dend_7 { pt3dadd( 9.0694, 20.8997, -47.0306, 0.55 ) }
    dend_7 { pt3dadd( 8.42942, 22.1839, -48.8424, 0.28 ) }
    dend_7 { pt3dadd( 7.78229, 23.0177, -50.4787, 0.55 ) }
    dend_7 { pt3dadd( 6.58251, 24.3036, -53.705, 0.55 ) }
    dend_7 { pt3dadd( 6.05844, 24.5968, -55.0397, 0.55 ) }
    dend_7 { pt3dadd( 4.8021, 24.8979, -57.7817, 0.55 ) }
    dend_7 { pt3dadd( 4.02602, 25.0074, -59.4572, 0.55 ) }
    dend_7 { pt3dadd( 0.913524, 25.2288, -66.3531, 1.39 ) }
    dend_7 { pt3dadd( -0.233286, 25.2778, -69.1016, 0.55 ) }
    dend_7 { pt3dadd( -1.68531, 25.3118, -72.8363, 0.55 ) }
    dend_7 { pt3dadd( -4.02509, 25.2983, -79.5118, 0.55 ) }
    dend_7 { pt3dadd( -4.42277, 25.2942, -80.769, 0.55 ) }
    dend_7 { pt3dadd( -6.00943, 25.3439, -86.3157, 0.55 ) }
    dend_7 { pt3dadd( -7.11808, 25.4953, -91.5307, 0.55 ) }
    dend_7 { pt3dadd( -7.5286, 25.6088, -94.0472, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( -7.65903, 25.7649, -95.9384, 0.55 ) }
    dend_7 { pt3dadd( -7.61307, 25.9255, -98.1201, 0.28 ) }
    dend_7 { pt3dadd( -7.47882, 26.0493, -99.6056, 1.11 ) }
    dend_7 { pt3dadd( -6.80679, 26.4892, -103.342, 0.28 ) }
    dend_7 { pt3dadd( -6.6261, 26.6108, -104.154, 0.83 ) }
    dend_7 { pt3dadd( -5.55884, 27.4395, -108.662, 0.28 ) }
    dend_7 { pt3dadd( -5.46262, 27.5369, -109.067, 0.83 ) }
    dend_7 { pt3dadd( -4.72766, 28.373, -112.063, 0.28 ) }
    dend_7 { pt3dadd( -4.18022, 29.1255, -114.365, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 9/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.1445, 16.1059, -39.105, 1.66 ) }
    dend_6 { pt3dadd( 11.5105, 14.3943, -40.9323, 0.83 ) }
    dend_6 { pt3dadd( 12.0694, 11.6246, -44.3512, 0.83 ) }
    dend_6 { pt3dadd( 12.2043, 10.4618, -46.0475, 0.83 ) }
    dend_6 { pt3dadd( 12.2111, 9.7913, -47.011, 0.55 ) }
    dend_6 { pt3dadd( 12.031, 7.31668, -51.2426, 0.55 ) }
    dend_6 { pt3dadd( 11.6368, 6.38361, -53.1566, 0.55 ) }
    dend_6 { pt3dadd( 11.1088, 5.83429, -54.7008, 0.55 ) }
    dend_6 { pt3dadd( 10.2903, 5.23028, -56.799, 0.83 ) }
    dend_6 { pt3dadd( 9.38143, 4.64134, -58.8507, 0.28 ) }
    dend_6 { pt3dadd( 7.50445, 3.31424, -62.6464, 1.66 ) }
    dend_6 { pt3dadd( 4.55324, 0.668397, -67.2041, 0.83 ) }
    dend_6 { pt3dadd( 3.10612, -0.893652, -68.9012, 0.83 ) }
    dend_6 { pt3dadd( 0.651605, -4.02309, -71.2032, 0.28 ) }
    dend_6 { pt3dadd( 0.335228, -4.50926, -71.4315, 0.55 ) }
    dend_6 { pt3dadd( -1.13883, -6.95823, -72.0906, 0.28 ) }
    dend_6 { pt3dadd( -2.96962, -10.3949, -72.3341, 0.28 ) }
    dend_6 { pt3dadd( -4.29808, -13.1854, -72.3334, 0.83 ) }
    dend_6 { pt3dadd( -5.43514, -15.2667, -72.341, 0.28 ) }
    dend_6 { pt3dadd( -5.78038, -15.8141, -72.3955, 0.55 ) }
    dend_6 { pt3dadd( -7.85088, -19.0639, -72.6906, 0.28 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 30/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -3.1731, 69.3539, -16.4485, 1.11 ) }
    apic_10 { pt3dadd( -7.12587, 77.6045, -18.8658, 1.11 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 32/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -3.1731, 69.3539, -16.4485, 1.11 ) }
    apic_9 { pt3dadd( -1.55469, 70.5993, -16.974, 0.55 ) }
    apic_9 { pt3dadd( 1.14985, 72.3865, -17.6906, 0.55 ) }
    apic_9 { pt3dadd( 3.28729, 73.7324, -18.181, 0.55 ) }
    apic_9 { pt3dadd( 6.67129, 75.7423, -19.1024, 0.55 ) }
    apic_9 { pt3dadd( 12.9528, 79.2044, -20.6706, 0.55 ) }
    apic_9 { pt3dadd( 19.1811, 82.5137, -22.31, 0.55 ) }
    apic_9 { pt3dadd( 21.9924, 83.8882, -23.1521, 0.55 ) }
    apic_9 { pt3dadd( 24.1687, 84.8444, -23.9406, 0.55 ) }
    apic_9 { pt3dadd( 28.8453, 86.8875, -26.001, 0.55 ) }
    apic_9 { pt3dadd( 32.0807, 88.2651, -27.7746, 0.55 ) }
    apic_9 { pt3dadd( 34.975, 89.6223, -29.7469, 0.55 ) }
    apic_9 { pt3dadd( 39.8236, 92.0686, -33.5021, 0.55 ) }
    apic_9 { pt3dadd( 42.7482, 93.5127, -35.8208, 0.55 ) }
    apic_9 { pt3dadd( 45.8223, 95.0551, -38.3745, 0.28 ) }
    apic_9 { pt3dadd( 47.0011, 95.687, -39.3739, 0.55 ) }
    apic_9 { pt3dadd( 49.9147, 97.3336, -42.0894, 0.28 ) }
    apic_9 { pt3dadd( 51.1986, 98.0157, -43.1305, 0.28 ) }
    apic_9 { pt3dadd( 54.299, 99.4925, -44.9029, 0.28 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 51/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -10.4312, 31.4089, -3.98576, 1.11 ) }
    apic_7 { pt3dadd( -15.2224, 29.7603, -1.25763, 0.55 ) }
    apic_7 { pt3dadd( -19.4499, 28.6259, 0.488124, 0.55 ) }
    apic_7 { pt3dadd( -22.9584, 27.711, 1.74193, 0.55 ) }
    apic_7 { pt3dadd( -24.2517, 27.3866, 2.19696, 0.55 ) }
    apic_7 { pt3dadd( -28.406, 26.3371, 3.65244, 0.55 ) }
    apic_7 { pt3dadd( -31.6568, 25.555, 4.82407, 0.55 ) }
    apic_7 { pt3dadd( -37.4555, 24.4595, 6.76901, 0.55 ) }
    apic_7 { pt3dadd( -43.8488, 23.6832, 8.97268, 0.55 ) }
    apic_7 { pt3dadd( -48.8005, 23.2997, 10.6004, 0.55 ) }
    apic_7 { pt3dadd( -50.3197, 23.2588, 11.0719, 0.55 ) }
    apic_7 { pt3dadd( -54.3, 23.3144, 12.112, 0.55 ) }
    apic_7 { pt3dadd( -58.8369, 23.3971, 13.0623, 0.55 ) }
    apic_7 { pt3dadd( -63.8088, 23.6602, 13.9543, 0.55 ) }
    apic_7 { pt3dadd( -67.6414, 23.949, 14.3756, 0.55 ) }
    apic_7 { pt3dadd( -70.1309, 24.134, 14.5393, 0.55 ) }
    apic_7 { pt3dadd( -74.7847, 24.4714, 14.7745, 0.55 ) }
    apic_7 { pt3dadd( -77.7671, 24.6407, 14.891, 0.55 ) }
    apic_7 { pt3dadd( -82.2829, 24.8777, 15.1339, 0.55 ) }
    apic_7 { pt3dadd( -85.2824, 24.9875, 15.4495, 0.55 ) }
    apic_7 { pt3dadd( -87.583, 25.188, 15.9438, 0.83 ) }
    apic_7 { pt3dadd( -89.4906, 25.4526, 16.5343, 0.55 ) }
    apic_7 { pt3dadd( -91.3393, 25.7767, 17.2468, 0.55 ) }
    apic_7 { pt3dadd( -93.4144, 26.2155, 18.0622, 0.55 ) }
    apic_7 { pt3dadd( -95.5864, 26.6723, 18.9634, 0.83 ) }
    apic_7 { pt3dadd( -97.7983, 27.0781, 19.8804, 0.55 ) }
    apic_7 { pt3dadd( -99.656, 27.2846, 20.5995, 1.11 ) }
    apic_7 { pt3dadd( -102.216, 27.4444, 21.4146, 0.83 ) }
    apic_7 { pt3dadd( -104.177, 27.4963, 21.9306, 0.83 ) }
    apic_7 { pt3dadd( -106.381, 27.4942, 22.3493, 0.55 ) }
    apic_7 { pt3dadd( -108.173, 27.5469, 22.5369, 0.55 ) }
    apic_7 { pt3dadd( -110.952, 27.6033, 22.6543, 0.83 ) }
    apic_7 { pt3dadd( -114.355, 27.4953, 22.5794, 0.55 ) }
    apic_7 { pt3dadd( -115.059, 27.4395, 22.5447, 0.83 ) }
    apic_7 { pt3dadd( -117.306, 27.0853, 22.4378, 0.55 ) }
    apic_7 { pt3dadd( -118.893, 26.8144, 22.3716, 0.55 ) }
    apic_7 { pt3dadd( -122.17, 26.2436, 22.3351, 0.55 ) }
    apic_7 { pt3dadd( -124.371, 25.8524, 22.3329, 0.55 ) }
    apic_7 { pt3dadd( -128.01, 25.2241, 22.4078, 0.55 ) }
    apic_7 { pt3dadd( -133.361, 24.2914, 22.5588, 0.83 ) }
    apic_7 { pt3dadd( -136.96, 23.5732, 22.6306, 0.28 ) }
    apic_7 { pt3dadd( -137.932, 23.3422, 22.6222, 0.55 ) }
    apic_7 { pt3dadd( -140.055, 22.7992, 22.5394, 0.28 ) }
    apic_7 { pt3dadd( -142.173, 22.1739, 22.4316, 0.28 ) }
    apic_7 { pt3dadd( -144.423, 21.268, 22.2098, 0.28 ) }
    apic_7 { pt3dadd( -146.892, 20.0099, 21.7031, 0.28 ) }
    apic_7 { pt3dadd( -147.976, 19.3784, 21.3574, 0.28 ) }
    apic_7 { pt3dadd( -148.237, 19.218, 21.2472, 0.83 ) }
    apic_7 { pt3dadd( -149.629, 18.2996, 20.5911, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_7 { pt3dadd( -150.314, 17.8392, 20.1996, 0.83 ) }
    apic_7 { pt3dadd( -154.05, 15.6406, 17.9163, 0.28 ) }
    apic_7 { pt3dadd( -155.794, 14.8066, 16.8476, 0.55 ) }
    apic_7 { pt3dadd( -156.712, 14.444, 16.2674, 0.55 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 4/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -10.4312, 31.4089, -3.98576, 1.11 ) }
    apic_6 { pt3dadd( -14.1024, 30.3466, -1.63956, 0.83 ) }
    apic_6 { pt3dadd( -17.5086, 29.5029, 0.446605, 0.83 ) }
    apic_6 { pt3dadd( -21.4815, 28.4326, 2.7881, 0.83 ) }
    apic_6 { pt3dadd( -26.2664, 27.1592, 5.60901, 0.83 ) }
    apic_6 { pt3dadd( -28.1, 26.6801, 6.63847, 0.83 ) }
    apic_6 { pt3dadd( -30.0487, 26.2243, 7.61872, 0.55 ) }
    apic_6 { pt3dadd( -32.4855, 25.8226, 8.61822, 0.55 ) }
    apic_6 { pt3dadd( -37.1737, 25.1611, 10.2413, 0.55 ) }
    apic_6 { pt3dadd( -40.1731, 24.6739, 11.0972, 0.55 ) }
    apic_6 { pt3dadd( -43.0051, 24.2034, 11.8317, 0.55 ) }
    apic_6 { pt3dadd( -49.3018, 23.1096, 13.3747, 0.83 ) }
    apic_6 { pt3dadd( -52.1064, 22.6373, 14.0152, 0.83 ) }
    apic_6 { pt3dadd( -53.6102, 22.3668, 14.3418, 0.83 ) }
    apic_6 { pt3dadd( -57.1507, 21.7445, 15.0371, 0.83 ) }
    apic_6 { pt3dadd( -60.4191, 21.0739, 15.7061, 0.55 ) }
    apic_6 { pt3dadd( -61.656, 20.8006, 16.0302, 0.83 ) }
    apic_6 { pt3dadd( -64.7967, 20.0341, 17.08, 0.55 ) }
    apic_6 { pt3dadd( -65.3223, 19.9092, 17.2845, 0.83 ) }
    apic_6 { pt3dadd( -67.5308, 19.4418, 18.1159, 0.55 ) }
    apic_6 { pt3dadd( -69.2147, 19.1303, 18.7538, 0.55 ) }
    apic_6 { pt3dadd( -70.4358, 18.9474, 19.2205, 0.55 ) }
    apic_6 { pt3dadd( -72.9993, 18.5395, 20.3423, 0.55 ) }
    apic_6 { pt3dadd( -74.8715, 18.182, 21.2547, 0.55 ) }
    apic_6 { pt3dadd( -76.7106, 17.7973, 22.1164, 0.55 ) }
    apic_6 { pt3dadd( -79.0417, 17.2301, 23.1663, 0.55 ) }
    apic_6 { pt3dadd( -81.3647, 16.6118, 24.1039, 0.55 ) }
    apic_6 { pt3dadd( -84.6314, 15.7638, 25.3727, 0.55 ) }
    apic_6 { pt3dadd( -85.5808, 15.5117, 25.7426, 0.83 ) }
    apic_6 { pt3dadd( -87.5922, 14.9916, 26.5238, 0.55 ) }
    apic_6 { pt3dadd( -88.6243, 14.7221, 26.9038, 0.83 ) }
    apic_6 { pt3dadd( -91.5664, 13.9266, 27.9036, 0.55 ) }
    apic_6 { pt3dadd( -93.5366, 13.3145, 28.5289, 0.55 ) }
    apic_6 { pt3dadd( -96.5878, 12.3151, 29.4152, 0.55 ) }
    apic_6 { pt3dadd( -97.8988, 11.8349, 29.7961, 0.83 ) }
    apic_6 { pt3dadd( -100.558, 10.683, 30.5993, 0.28 ) }
    apic_6 { pt3dadd( -101.471, 10.2553, 30.8484, 0.55 ) }
    apic_6 { pt3dadd( -102.781, 9.52543, 31.1513, 0.28 ) }
    apic_6 { pt3dadd( -103.881, 8.85711, 31.4168, 0.83 ) }
    apic_6 { pt3dadd( -105.859, 7.60944, 31.9672, 0.28 ) }
    apic_6 { pt3dadd( -106.82, 7.01787, 32.2883, 0.55 ) }
    apic_6 { pt3dadd( -107.969, 6.33435, 32.7303, 0.28 ) }
    apic_6 { pt3dadd( -108.832, 5.84351, 33.0717, 0.83 ) }
    apic_6 { pt3dadd( -111.853, 4.17234, 34.3071, 0.28 ) }
    apic_6 { pt3dadd( -113.005, 3.53205, 34.8046, 0.83 ) }
    apic_6 { pt3dadd( -115.892, 1.84929, 36.1694, 0.28 ) }
    apic_6 { pt3dadd( -117.677, 0.789232, 37.0121, 0.28 ) }
    apic_6 { pt3dadd( -118.086, 0.542575, 37.2103, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -25.793, -26.4227, -22.3972, 0.83 ) }
    dend_47 { pt3dadd( -29.9918, -27.4159, -25.4206, 0.83 ) }
    dend_47 { pt3dadd( -35.0757, -28.6414, -28.6892, 0.55 ) }
    dend_47 { pt3dadd( -41.2883, -30.0963, -32.2893, 0.55 ) }
    dend_47 { pt3dadd( -44.0186, -30.8068, -33.8436, 0.55 ) }
    dend_47 { pt3dadd( -48.3925, -32.0938, -36.2951, 0.83 ) }
    dend_47 { pt3dadd( -53.3452, -33.7597, -39.0942, 0.55 ) }
    dend_47 { pt3dadd( -57.3797, -35.7236, -41.5671, 0.55 ) }
    dend_47 { pt3dadd( -58.5328, -36.3919, -42.2321, 0.55 ) }
    dend_47 { pt3dadd( -60.4358, -37.48, -43.3359, 0.55 ) }
    dend_47 { pt3dadd( -61.7686, -38.3356, -44.2377, 0.55 ) }
    dend_47 { pt3dadd( -64.2485, -40.1103, -46.1033, 0.83 ) }
    dend_47 { pt3dadd( -67.2779, -42.1398, -48.3361, 0.28 ) }
    dend_47 { pt3dadd( -69.4108, -43.8113, -50.2267, 1.94 ) }
    dend_47 { pt3dadd( -73.0038, -46.5047, -53.4905, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 67/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -25.793, -26.4227, -22.3972, 0.83 ) }
    dend_46 { pt3dadd( -23.6929, -26.6507, -27.6472, 0.55 ) }
    dend_46 { pt3dadd( -22.4464, -26.9591, -30.5393, 0.55 ) }
    dend_46 { pt3dadd( -21.184, -27.3768, -33.4059, 0.55 ) }
    dend_46 { pt3dadd( -20.0426, -27.8034, -36.1112, 0.55 ) }
    dend_46 { pt3dadd( -19.282, -28.0908, -38.3481, 1.11 ) }
    dend_46 { pt3dadd( -17.6595, -28.7236, -43.1366, 0.28 ) }
    dend_46 { pt3dadd( -17.3172, -28.9094, -44.1387, 0.55 ) }
    dend_46 { pt3dadd( -16.6392, -29.2978, -46.3059, 0.28 ) }
    dend_46 { pt3dadd( -15.7712, -29.8194, -49.0393, 0.83 ) }
    dend_46 { pt3dadd( -14.0073, -30.9509, -55.4547, 0.83 ) }
    dend_46 { pt3dadd( -13.4935, -31.2593, -57.3461, 0.55 ) }
    dend_46 { pt3dadd( -12.6768, -31.8192, -60.2928, 1.11 ) }
    dend_46 { pt3dadd( -12.272, -32.1745, -61.8248, 0.28 ) }
    dend_46 { pt3dadd( -11.8963, -32.5539, -63.0468, 0.28 ) }
    dend_46 { pt3dadd( -11.032, -33.5805, -65.8465, 1.11 ) }
    dend_46 { pt3dadd( -9.87755, -35.057, -69.4733, 0.55 ) }
    dend_46 { pt3dadd( -8.77665, -36.572, -73.2511, 0.55 ) }
    dend_46 { pt3dadd( -8.12705, -37.507, -75.5167, 0.55 ) }
    dend_46 { pt3dadd( -6.94914, -39.4371, -80.0075, 0.55 ) }
    dend_46 { pt3dadd( -5.32865, -42.2003, -86.4464, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -41.4236, -61.2598, -20.5575, 0.83 ) }
    dend_44 { pt3dadd( -41.5076, -62.6844, -19.6277, 0.55 ) }
    dend_44 { pt3dadd( -41.7057, -67.0476, -16.9528, 0.55 ) }
    dend_44 { pt3dadd( -41.9037, -70.1281, -15.0403, 0.55 ) }
    dend_44 { pt3dadd( -42.0121, -72.2159, -13.8185, 0.55 ) }
    dend_44 { pt3dadd( -42.1383, -74.7718, -12.2913, 0.55 ) }
    dend_44 { pt3dadd( -42.2831, -76.9952, -10.9556, 0.55 ) }
    dend_44 { pt3dadd( -42.3663, -78.1994, -10.2378, 0.83 ) }
    dend_44 { pt3dadd( -42.5196, -79.9114, -9.20344, 0.55 ) }
    dend_44 { pt3dadd( -42.7858, -82.6292, -7.29534, 0.55 ) }
    dend_44 { pt3dadd( -42.9833, -84.2133, -6.0722, 0.55 ) }
    dend_44 { pt3dadd( -43.2532, -86.1456, -4.48165, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_44 { pt3dadd( -43.6409, -88.8408, -2.1561, 0.55 ) }
    dend_44 { pt3dadd( -43.9383, -90.8315, -0.315896, 0.55 ) }
    dend_44 { pt3dadd( -44.1948, -92.7794, 1.54764, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -41.4236, -61.2598, -20.5575, 0.83 ) }
    dend_43 { pt3dadd( -41.6761, -61.5197, -20.5964, 0.83 ) }
    dend_43 { pt3dadd( -43.3371, -62.7765, -20.9847, 0.83 ) }
    dend_43 { pt3dadd( -45.0483, -64.0972, -21.5073, 0.83 ) }
    dend_43 { pt3dadd( -47.6773, -66.224, -22.2937, 0.83 ) }
    dend_43 { pt3dadd( -49.2948, -67.5128, -22.7939, 0.83 ) }
    dend_43 { pt3dadd( -51.4121, -69.324, -23.4484, 1.11 ) }
    dend_43 { pt3dadd( -54.3128, -72.1172, -24.4137, 0.55 ) }
    dend_43 { pt3dadd( -57.67, -75.8651, -25.6171, 0.55 ) }
    dend_43 { pt3dadd( -59.1912, -77.7744, -26.1707, 0.55 ) }
    dend_43 { pt3dadd( -60.1185, -79.1825, -26.5422, 0.55 ) }
    dend_43 { pt3dadd( -61.6669, -82.2184, -27.1448, 0.55 ) }
    dend_43 { pt3dadd( -62.7956, -85.4365, -27.6147, 0.55 ) }
    dend_43 { pt3dadd( -63.1806, -87.443, -27.7816, 0.28 ) }
    dend_43 { pt3dadd( -63.3584, -88.9603, -27.8628, 0.83 ) }
    dend_43 { pt3dadd( -63.5921, -91.4487, -28.0329, 0.28 ) }
    dend_43 { pt3dadd( -63.8279, -93.6449, -28.1811, 0.28 ) }
    dend_43 { pt3dadd( -64.076, -95.1188, -28.316, 0.83 ) }
    dend_43 { pt3dadd( -64.8092, -98.1731, -28.6268, 0.28 ) }
    dend_43 { pt3dadd( -65.4589, -100.021, -28.895, 0.55 ) }
    dend_43 { pt3dadd( -66.2853, -101.932, -29.214, 0.28 ) }
    dend_43 { pt3dadd( -67.1821, -103.744, -29.5273, 1.11 ) }
    dend_43 { pt3dadd( -68.5145, -106.196, -30.0047, 0.83 ) }
    dend_43 { pt3dadd( -69.432, -107.775, -30.2909, 0.55 ) }
    dend_43 { pt3dadd( -71.1168, -110.443, -30.7766, 0.55 ) }
    dend_43 { pt3dadd( -72.3469, -112.533, -31.1064, 0.55 ) }
    dend_43 { pt3dadd( -73.1862, -113.931, -31.3261, 0.55 ) }
    dend_43 { pt3dadd( -74.3691, -115.85, -31.6817, 0.55 ) }
    dend_43 { pt3dadd( -75.8008, -118.21, -32.1468, 0.55 ) }
    dend_43 { pt3dadd( -77.0999, -120.426, -32.5615, 0.28 ) }
    dend_43 { pt3dadd( -77.7623, -121.59, -32.7481, 0.28 ) }
    dend_43 { pt3dadd( -80.0406, -125.411, -33.413, 0.28 ) }
    dend_43 { pt3dadd( -80.6996, -126.532, -33.6036, 1.11 ) }
    dend_43 { pt3dadd( -83.3608, -131.419, -34.4319, 0.28 ) }
    dend_43 { pt3dadd( -84.2867, -133.323, -34.7757, 0.28 ) }
    dend_43 { pt3dadd( -85.0567, -135.056, -35.0982, 0.55 ) }
    dend_43 { pt3dadd( -85.9072, -137.043, -35.4786, 0.28 ) }
    dend_43 { pt3dadd( -86.4931, -138.693, -35.7924, 1.11 ) }
    dend_43 { pt3dadd( -87.7815, -142.789, -36.6253, 0.28 ) }
    dend_43 { pt3dadd( -88.0091, -143.59, -36.8276, 0.83 ) }
    dend_43 { pt3dadd( -88.6892, -146.167, -37.5463, 0.28 ) }
    dend_43 { pt3dadd( -88.7572, -146.458, -37.6264, 0.83 ) }
    dend_43 { pt3dadd( -89.5054, -149.865, -38.4502, 0.28 ) }
    dend_43 { pt3dadd( -89.7371, -150.77, -38.6638, 0.55 ) }
    dend_43 { pt3dadd( -90.2681, -152.88, -39.118, 0.28 ) }
    dend_43 { pt3dadd( -90.3734, -153.295, -39.2019, 0.55 ) }
    dend_43 { pt3dadd( -90.815, -155.258, -39.5373, 0.28 ) }
    dend_43 { pt3dadd( -90.9659, -155.841, -39.639, 0.55 ) }
    dend_43 { pt3dadd( -92.2225, -159.31, -40.2107, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 20.1261, -77.8315, -16.3449, 0.55 ) }
    dend_40 { pt3dadd( 20.4242, -80.8663, -15.8882, 0.55 ) }
    dend_40 { pt3dadd( 21.0389, -87.2114, -15.0862, 0.55 ) }
    dend_40 { pt3dadd( 21.8148, -91.8478, -14.3992, 0.55 ) }
    dend_40 { pt3dadd( 22.9004, -95.6186, -13.8232, 0.55 ) }
    dend_40 { pt3dadd( 24.131, -99.126, -13.3158, 0.55 ) }
    dend_40 { pt3dadd( 25.0291, -101.686, -12.9455, 0.55 ) }
    dend_40 { pt3dadd( 26.7219, -106.01, -12.2796, 0.55 ) }
    dend_40 { pt3dadd( 28.905, -110.872, -11.5009, 0.55 ) }
    dend_40 { pt3dadd( 32.4534, -117.133, -10.5745, 0.55 ) }
    dend_40 { pt3dadd( 34.7662, -120.761, -10.1625, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 63/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 20.1261, -77.8315, -16.3449, 0.55 ) }
    dend_37 { pt3dadd( 20.7971, -78.5071, -15.8658, 0.83 ) }
    dend_37 { pt3dadd( 22.7499, -80.9532, -14.3678, 0.55 ) }
    dend_37 { pt3dadd( 23.9336, -82.6552, -13.4226, 0.55 ) }
    dend_37 { pt3dadd( 26.3538, -86.4299, -11.588, 0.28 ) }
    dend_37 { pt3dadd( 27.4007, -88.0789, -10.8396, 0.28 ) }
    dend_37 { pt3dadd( 28.422, -89.7064, -10.0608, 0.28 ) }
    dend_37 { pt3dadd( 29.1201, -90.9351, -9.47442, 0.83 ) }
    dend_37 { pt3dadd( 29.2957, -91.2795, -9.29821, 0.83 ) }
    dend_37 { pt3dadd( 30.0533, -93.1186, -8.46732, 0.28 ) }
    dend_37 { pt3dadd( 30.6495, -94.5749, -8.08874, 0.83 ) }
    dend_37 { pt3dadd( 32.1469, -97.7334, -6.94561, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 49.7491, 9.08274, 9.88655, 0.83 ) }
    dend_24 { pt3dadd( 52.4879, 16.806, 9.04547, 0.83 ) }
    dend_24 { pt3dadd( 55.7699, 24.2546, 7.77937, 0.83 ) }
    dend_24 { pt3dadd( 59.7278, 31.4707, 7.43236, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 79/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 49.7491, 9.08274, 9.88655, 0.83 ) }
    dend_23 { pt3dadd( 54.2481, 20.4615, 8.45475, 0.83 ) }
    dend_23 { pt3dadd( 60.0202, 31.1283, 6.294, 0.83 ) }
    dend_23 { pt3dadd( 63.9047, 42.0932, 2.2384, 0.83 ) }
    dend_23 { pt3dadd( 66.1359, 54.0488, 0.27515, 0.83 ) }
    dend_23 { pt3dadd( 68.3279, 66.0671, -1.31282, 0.83 ) }
    dend_23 { pt3dadd( 69.5395, 78.2228, -2.90608, 0.83 ) }
    dend_23 { pt3dadd( 73.1128, 90.0125, -2.95504, 0.83 ) }
    dend_23 { pt3dadd( 77.7774, 101.257, -1.07038, 0.83 ) }
    dend_23 { pt3dadd( 81.3009, 112.65, 2.02049, 0.83 ) }
    dend_23 { pt3dadd( 87.106, 123.465, 3.07972, 0.83 ) }
    dend_23 { pt3dadd( 93.0682, 134.242, 2.82624, 0.83 ) }
    dend_23 { pt3dadd( 97.0263, 145.654, 0.403784, 0.83 ) }
    dend_23 { pt3dadd( 102.313, 156.757, -0.333522, 0.83 ) }
    dend_23 { pt3dadd( 107.814, 167.762, 0.296278, 0.83 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 94/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -7.12587, 77.6045, -18.8658, 1.11 ) }
    apic_14 { pt3dadd( -6.59776, 79.5599, -19.3459, 1.11 ) }
    apic_14 { pt3dadd( -5.22851, 84.6295, -20.5905, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 97/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -7.12587, 77.6045, -18.8658, 1.11 ) }
    apic_11 { pt3dadd( -4.27487, 81.2269, -16.7558, 0.55 ) }
    apic_11 { pt3dadd( -2.75875, 83.318, -15.3998, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_11 { pt3dadd( -0.518408, 86.5404, -13.033, 0.55 ) }
    apic_11 { pt3dadd( 2.73299, 91.2742, -9.5933, 0.55 ) }
    apic_11 { pt3dadd( 4.47643, 93.8441, -7.69386, 0.55 ) }
    apic_11 { pt3dadd( 6.70382, 97.0345, -5.14335, 0.55 ) }
    apic_11 { pt3dadd( 7.42099, 98.1383, -4.21367, 0.55 ) }
    apic_11 { pt3dadd( 10.1433, 102.495, -0.340214, 0.55 ) }
    apic_11 { pt3dadd( 11.5168, 104.828, 1.78981, 0.55 ) }
    apic_11 { pt3dadd( 12.2726, 105.946, 2.98025, 0.55 ) }
    apic_11 { pt3dadd( 13.8162, 107.858, 4.99332, 0.55 ) }
    apic_11 { pt3dadd( 15.849, 110.103, 7.29256, 0.55 ) }
    apic_11 { pt3dadd( 17.0534, 111.388, 8.50933, 0.55 ) }
    apic_11 { pt3dadd( 18.1578, 112.55, 9.65515, 0.55 ) }
    apic_11 { pt3dadd( 19.4073, 113.954, 10.9726, 0.55 ) }
    apic_11 { pt3dadd( 22.013, 117.192, 13.7482, 0.55 ) }
    apic_11 { pt3dadd( 23.7628, 119.427, 15.6204, 0.55 ) }
    apic_11 { pt3dadd( 24.9112, 121.004, 16.973, 0.55 ) }
    apic_11 { pt3dadd( 27.1005, 124.388, 19.8459, 0.55 ) }
    apic_11 { pt3dadd( 29.1711, 128.018, 22.6861, 0.55 ) }
    apic_11 { pt3dadd( 30.1233, 129.897, 24.1, 0.55 ) }
    apic_11 { pt3dadd( 31.3379, 132.843, 26.3698, 0.55 ) }
    apic_11 { pt3dadd( 32.2104, 135.136, 28.2397, 0.28 ) }
    apic_11 { pt3dadd( 32.4082, 135.589, 28.6187, 0.55 ) }
    apic_11 { pt3dadd( 32.9124, 136.895, 29.4818, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 23/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -73.0038, -46.5047, -53.4905, 0.55 ) }
    dend_49 { pt3dadd( -69.8317, -48.4361, -50.3336, 0.55 ) }
    dend_49 { pt3dadd( -66.7861, -50.2822, -46.6549, 0.55 ) }
    dend_49 { pt3dadd( -66.6023, -50.7115, -48.6787, 0.55 ) }
    dend_49 { pt3dadd( -66.1209, -51.1988, -50.1724, 0.55 ) }
    dend_49 { pt3dadd( -65.5437, -52.1159, -52.6048, 0.55 ) }
    dend_49 { pt3dadd( -64.68, -54.4852, -58.1102, 0.55 ) }
    dend_49 { pt3dadd( -64.4201, -55.5374, -60.4234, 0.83 ) }
    dend_49 { pt3dadd( -64.2854, -56.8606, -63.1358, 0.83 ) }
    dend_49 { pt3dadd( -64.3718, -58.1098, -65.6262, 0.55 ) }
    dend_49 { pt3dadd( -64.8181, -60.0264, -69.1067, 0.55 ) }
    dend_49 { pt3dadd( -65.4344, -61.9396, -72.5199, 0.55 ) }
    dend_49 { pt3dadd( -65.7892, -62.8957, -74.2011, 0.55 ) }
    dend_49 { pt3dadd( -66.6876, -64.6059, -77.4929, 0.28 ) }
    dend_49 { pt3dadd( -68.0011, -66.5274, -81.6508, 0.28 ) }
    dend_49 { pt3dadd( -68.5141, -67.2948, -83.6264, 0.83 ) }
    dend_49 { pt3dadd( -69.6989, -68.9058, -88.4573, 0.28 ) }
    dend_49 { pt3dadd( -70.1554, -69.4268, -90.2969, 0.83 ) }
    dend_49 { pt3dadd( -71.7796, -70.9784, -96.8276, 0.55 ) }
    dend_49 { pt3dadd( -72.5424, -71.6223, -100.209, 0.55 ) }
    dend_49 { pt3dadd( -73.5866, -72.6321, -106.93, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 44/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.0038, -46.5047, -53.4905, 0.55 ) }
    dend_48 { pt3dadd( -74.2721, -47.1586, -55.0776, 0.55 ) }
    dend_48 { pt3dadd( -77.5702, -48.9841, -59.0974, 0.55 ) }
    dend_48 { pt3dadd( -82.128, -51.699, -64.5158, 1.11 ) }
    dend_48 { pt3dadd( -83.2928, -52.4235, -65.8324, 0.55 ) }
    dend_48 { pt3dadd( -85.7757, -54.0448, -68.4831, 0.55 ) }
    dend_48 { pt3dadd( -88.2061, -55.6072, -70.9455, 0.55 ) }
    dend_48 { pt3dadd( -89.4962, -56.3816, -72.1507, 0.55 ) }
    dend_48 { pt3dadd( -90.2121, -56.8218, -72.7594, 0.55 ) }
    dend_48 { pt3dadd( -92.0573, -57.9179, -74.1652, 0.55 ) }
    dend_48 { pt3dadd( -95.3847, -59.7528, -76.7624, 0.28 ) }
    dend_48 { pt3dadd( -96.4222, -60.3235, -77.5924, 0.55 ) }
    dend_48 { pt3dadd( -100.351, -62.0706, -80.6782, 0.28 ) }
    dend_48 { pt3dadd( -101.381, -62.4739, -81.4847, 0.55 ) }
    dend_48 { pt3dadd( -103.821, -63.3489, -83.4339, 0.55 ) }
    dend_48 { pt3dadd( -105.3, -63.8344, -84.636, 0.83 ) }
    dend_48 { pt3dadd( -108.031, -64.6102, -86.811, 0.28 ) }
    dend_48 { pt3dadd( -110.634, -65.3941, -88.8493, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 62/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 32.1469, -97.7334, -6.94561, 0.55 ) }
    dend_39 { pt3dadd( 33.5139, -102.893, -9.75337, 0.55 ) }
    dend_39 { pt3dadd( 33.7307, -103.711, -10.1987, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 65/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 32.1469, -97.7334, -6.94561, 0.55 ) }
    dend_38 { pt3dadd( 28.6044, -101.073, -2.55851, 0.28 ) }
    dend_38 { pt3dadd( 27.5082, -102.106, -1.20096, 0.28 ) }
    dend_38 { pt3dadd( 26.5104, -103.047, 0.0346205, 0.83 ) }
    dend_38 { pt3dadd( 22.3939, -106.927, 5.13258, 0.55 ) }
    dend_38 { pt3dadd( 21.3869, -107.876, 6.37961, 0.55 ) }
    dend_38 { pt3dadd( 19.9723, -109.21, 8.13146, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 72/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 59.7278, 31.4707, 7.43236, 0.83 ) }
    dend_26 { pt3dadd( 62.9944, 39.1418, 8.75608, 0.83 ) }
    dend_26 { pt3dadd( 66.4358, 46.4305, 11.2656, 0.83 ) }
    dend_26 { pt3dadd( 69.9981, 53.6082, 13.9224, 0.83 ) }
    dend_26 { pt3dadd( 74.8476, 59.6961, 17.1917, 0.83 ) }
    dend_26 { pt3dadd( 80.2703, 64.9068, 21.0271, 0.83 ) }
    dend_26 { pt3dadd( 84.6501, 69.9637, 26.176, 0.83 ) }
    dend_26 { pt3dadd( 89.7386, 75.1517, 30.4726, 0.83 ) }
    dend_26 { pt3dadd( 95.4143, 79.2981, 35.1482, 0.83 ) }
    dend_26 { pt3dadd( 101.398, 83.5659, 39.302, 0.83 ) }
    dend_26 { pt3dadd( 107.593, 88.3, 42.5388, 0.83 ) }
    dend_26 { pt3dadd( 113.544, 92.7622, 46.5319, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 84/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 59.7278, 31.4707, 7.43236, 0.83 ) }
    dend_25 { pt3dadd( 62.6807, 38.4734, 8.73244, 0.83 ) }
    dend_25 { pt3dadd( 66.3402, 45.2367, 9.29119, 0.83 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 87/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -5.22851, 84.6295, -20.5905, 1.11 ) }
    apic_16 { pt3dadd( -4.53183, 93.0974, -21.1188, 1.11 ) }
    apic_16 { pt3dadd( -4.51947, 98.4482, -21.558, 0.83 ) }
    apic_16 { pt3dadd( -4.59158, 100.949, -21.6527, 0.83 ) }
    apic_16 { pt3dadd( -4.68679, 106.249, -21.8528, 0.83 ) }
    apic_16 { pt3dadd( -4.71009, 109.693, -22.1308, 0.83 ) }
    apic_16 { pt3dadd( -4.74146, 113.998, -22.5236, 0.83 ) }
    apic_16 { pt3dadd( -4.80992, 116.858, -22.8938, 0.83 ) }
    apic_16 { pt3dadd( -5.29342, 126.801, -24.1507, 0.83 ) }
    apic_16 { pt3dadd( -5.46077, 129.363, -24.3769, 0.83 ) }
    apic_16 { pt3dadd( -5.82159, 133.68, -24.4096, 0.83 ) }
    apic_16 { pt3dadd( -5.97799, 136.197, -24.4763, 0.83 ) }
    apic_16 { pt3dadd( -6.03214, 138.372, -24.4881, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_16 { pt3dadd( -6.23967, 143.743, -24.577, 0.83 ) }
    apic_16 { pt3dadd( -6.48552, 148.06, -24.6884, 0.83 ) }
    apic_16 { pt3dadd( -7.07521, 157.36, -24.8219, 0.83 ) }
    apic_16 { pt3dadd( -7.34126, 163.842, -24.9244, 1.11 ) }
    apic_16 { pt3dadd( -7.52623, 171.76, -25.1386, 1.11 ) }
    apic_16 { pt3dadd( -7.51298, 177.358, -25.3449, 1.11 ) }
    apic_16 { pt3dadd( -7.42993, 181.711, -25.4679, 1.11 ) }
    apic_16 { pt3dadd( -7.26596, 185.728, -25.5777, 1.11 ) }
    apic_16 { pt3dadd( -6.81877, 190.922, -25.7197, 1.11 ) }
    apic_16 { pt3dadd( -6.3266, 194.971, -25.7863, 1.11 ) }
    apic_16 { pt3dadd( -5.64234, 199.624, -25.9287, 1.11 ) }
    apic_16 { pt3dadd( -4.92479, 203.411, -26.0352, 1.11 ) }
    apic_16 { pt3dadd( -4.14133, 207.344, -26.1588, 1.11 ) }
    apic_16 { pt3dadd( -3.15407, 212.305, -26.3446, 1.11 ) }
    apic_16 { pt3dadd( -2.32809, 217.266, -26.6132, 1.11 ) }
    apic_16 { pt3dadd( -1.21673, 225.112, -27.1373, 0.83 ) }
    apic_16 { pt3dadd( -0.935609, 228.49, -27.2805, 0.83 ) }
    apic_16 { pt3dadd( -0.875711, 230.092, -27.3156, 0.83 ) }
    apic_16 { pt3dadd( -0.915719, 233.413, -27.275, 0.83 ) }
    apic_16 { pt3dadd( -1.36099, 238.411, -27.054, 0.83 ) }
    apic_16 { pt3dadd( -2.04234, 242.5, -26.6324, 0.83 ) }
    apic_16 { pt3dadd( -2.74184, 245.823, -26.2514, 0.83 ) }
    apic_16 { pt3dadd( -3.46564, 249.327, -25.8179, 0.83 ) }
    apic_16 { pt3dadd( -4.03944, 252.482, -25.5209, 0.83 ) }
    apic_16 { pt3dadd( -4.93385, 257.473, -24.9848, 0.83 ) }
    apic_16 { pt3dadd( -5.62075, 260.941, -24.6212, 0.83 ) }
    apic_16 { pt3dadd( -6.16564, 263.866, -24.4661, 0.83 ) }
    apic_16 { pt3dadd( -6.71482, 266.545, -24.377, 0.83 ) }
    apic_16 { pt3dadd( -7.37778, 269.934, -24.4377, 0.83 ) }
    apic_16 { pt3dadd( -8.05738, 274.238, -24.7091, 0.83 ) }
    apic_16 { pt3dadd( -8.55321, 277.661, -25.0077, 0.83 ) }
    apic_16 { pt3dadd( -9.02482, 281.941, -25.5557, 0.83 ) }
    apic_16 { pt3dadd( -9.40985, 287.626, -26.2868, 0.83 ) }
    apic_16 { pt3dadd( -9.79677, 297.094, -27.3406, 0.83 ) }
    apic_16 { pt3dadd( -9.84296, 305.62, -28.3838, 0.83 ) }
    apic_16 { pt3dadd( -9.69333, 310.571, -29.0763, 0.83 ) }
    apic_16 { pt3dadd( -9.34227, 317.59, -29.9594, 0.83 ) }
    apic_16 { pt3dadd( -8.62044, 327.994, -31.1424, 0.83 ) }
    apic_16 { pt3dadd( -8.24436, 331.654, -31.4895, 0.83 ) }
    apic_16 { pt3dadd( -7.81536, 335.716, -31.7736, 0.83 ) }
    apic_16 { pt3dadd( -7.40229, 339.31, -32.004, 0.83 ) }
    apic_16 { pt3dadd( -6.86623, 343.751, -32.2721, 0.83 ) }
    apic_16 { pt3dadd( -6.24294, 349.801, -32.6245, 0.83 ) }
    apic_16 { pt3dadd( -5.85415, 353.295, -32.9185, 0.83 ) }
    apic_16 { pt3dadd( -5.4909, 358.545, -33.5102, 0.83 ) }
    apic_16 { pt3dadd( -5.41205, 360.439, -33.7367, 0.83 ) }
    apic_16 { pt3dadd( -5.32394, 365.786, -34.4032, 0.83 ) }
    apic_16 { pt3dadd( -5.36556, 369.616, -34.8702, 0.83 ) }
    apic_16 { pt3dadd( -5.49702, 371.991, -35.1231, 0.83 ) }
    apic_16 { pt3dadd( -6.06455, 378.428, -35.9014, 0.83 ) }
    apic_16 { pt3dadd( -6.65886, 384.03, -36.5541, 0.83 ) }
    apic_16 { pt3dadd( -7.70928, 392.581, -37.8192, 0.83 ) }
    apic_16 { pt3dadd( -7.98859, 394.814, -38.184, 0.83 ) }
    apic_16 { pt3dadd( -8.61559, 401.1, -39.2588, 0.83 ) }
    apic_16 { pt3dadd( -8.86506, 405.541, -40.0647, 0.83 ) }
    apic_16 { pt3dadd( -9.01178, 411.241, -41.0813, 0.83 ) }
    apic_16 { pt3dadd( -9.28542, 415.546, -41.9571, 0.83 ) }
    apic_16 { pt3dadd( -9.43698, 418.834, -42.6082, 0.83 ) }
    apic_16 { pt3dadd( -9.53048, 421.802, -42.9826, 0.83 ) }
    apic_16 { pt3dadd( -9.56414, 422.928, -42.9766, 0.83 ) }
    apic_16 { pt3dadd( -9.71123, 426.375, -42.6415, 0.83 ) }
    apic_16 { pt3dadd( -9.96841, 430.031, -42.101, 0.83 ) }
    apic_16 { pt3dadd( -10.1831, 436.572, -41.3298, 0.83 ) }
    apic_16 { pt3dadd( -10.3158, 439.296, -41.2496, 0.83 ) }
    apic_16 { pt3dadd( -10.394, 442.725, -41.3958, 0.83 ) }
    apic_16 { pt3dadd( -10.3162, 446.648, -41.7853, 0.83 ) }
    apic_16 { pt3dadd( -10.1554, 449.144, -42.2165, 0.83 ) }
    apic_16 { pt3dadd( -9.57317, 456.579, -43.876, 0.83 ) }
    apic_16 { pt3dadd( -9.10457, 463.06, -45.6001, 0.83 ) }
    apic_16 { pt3dadd( -8.8588, 466.174, -46.3631, 0.83 ) }
    apic_16 { pt3dadd( -8.66867, 468.97, -46.9364, 0.83 ) }
    apic_16 { pt3dadd( -8.51033, 473.291, -47.5392, 0.83 ) }
    apic_16 { pt3dadd( -8.48635, 478.499, -48.0089, 0.83 ) }
    apic_16 { pt3dadd( -8.48329, 481.299, -48.094, 0.83 ) }
    apic_16 { pt3dadd( -8.34128, 491.532, -48.1019, 0.83 ) }
    apic_16 { pt3dadd( -8.32572, 494.112, -48.0001, 0.83 ) }
    apic_16 { pt3dadd( -8.31648, 497.668, -47.6657, 0.83 ) }
    apic_16 { pt3dadd( -8.30015, 499.142, -47.4686, 0.83 ) }
    apic_16 { pt3dadd( -8.16643, 504.659, -46.5826, 0.83 ) }
    apic_16 { pt3dadd( -8.03376, 508.579, -45.7773, 0.83 ) }
    apic_16 { pt3dadd( -7.87837, 512.082, -44.8744, 0.83 ) }
    apic_16 { pt3dadd( -7.67025, 520.053, -43.0597, 0.83 ) }
    apic_16 { pt3dadd( -7.7212, 525.365, -41.8884, 0.83 ) }
    apic_16 { pt3dadd( -7.93402, 529.074, -41.1787, 0.83 ) }
    apic_16 { pt3dadd( -8.28659, 532.161, -40.5832, 0.83 ) }
    apic_16 { pt3dadd( -8.56902, 534.614, -40.1683, 0.83 ) }
    apic_16 { pt3dadd( -9.34002, 540.683, -39.2317, 0.83 ) }
    apic_16 { pt3dadd( -10.1252, 547.461, -38.3474, 0.83 ) }
    apic_16 { pt3dadd( -11.4478, 557.348, -37.0119, 0.83 ) }
    apic_16 { pt3dadd( -12.0687, 561.433, -36.5243, 0.83 ) }
    apic_16 { pt3dadd( -13.0782, 567.78, -35.8152, 0.83 ) }
    apic_16 { pt3dadd( -15.1586, 578.124, -34.5298, 0.83 ) }
    apic_16 { pt3dadd( -16.5754, 584.303, -33.7751, 0.83 ) }
    apic_16 { pt3dadd( -17.7331, 588.646, -33.4128, 0.83 ) }
    apic_16 { pt3dadd( -19.7202, 594.936, -33.0319, 0.83 ) }
    apic_16 { pt3dadd( -20.6023, 597.38, -32.9532, 0.83 ) }
    apic_16 { pt3dadd( -23.3599, 603.692, -32.9151, 0.55 ) }
    apic_16 { pt3dadd( -25.38, 608.028, -33.1187, 0.55 ) }
    apic_16 { pt3dadd( -26.302, 610.117, -33.1801, 0.55 ) }
    apic_16 { pt3dadd( -28.2627, 615.356, -33.5146, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_16 { pt3dadd( -29.4393, 618.733, -33.7443, 0.55 ) }
    apic_16 { pt3dadd( -30.7798, 622.684, -33.9442, 0.55 ) }
    apic_16 { pt3dadd( -32.4735, 628.314, -34.1738, 0.55 ) }
    apic_16 { pt3dadd( -34.9333, 635.673, -34.1834, 0.55 ) }
    apic_16 { pt3dadd( -37.0129, 641.589, -34.1, 0.55 ) }
    apic_16 { pt3dadd( -37.9381, 644.167, -34.0183, 0.55 ) }
    apic_16 { pt3dadd( -39.9172, 649.83, -33.721, 0.55 ) }
    apic_16 { pt3dadd( -40.9079, 652.519, -33.4083, 0.55 ) }
    apic_16 { pt3dadd( -42.6886, 657.752, -32.4404, 0.55 ) }
    apic_16 { pt3dadd( -44.2592, 662.469, -31.3444, 0.55 ) }
    apic_16 { pt3dadd( -45.1921, 665.605, -30.5431, 0.55 ) }
    apic_16 { pt3dadd( -45.8737, 668.17, -29.894, 0.55 ) }
    apic_16 { pt3dadd( -46.4159, 670.294, -29.3769, 0.55 ) }
    apic_16 { pt3dadd( -48.7224, 680.25, -27.3723, 0.55 ) }
    apic_16 { pt3dadd( -49.5302, 684.103, -26.7647, 0.55 ) }
    apic_16 { pt3dadd( -51.0368, 690.865, -25.9512, 0.55 ) }
    apic_16 { pt3dadd( -52.0411, 695.319, -25.705, 0.55 ) }
    apic_16 { pt3dadd( -52.5915, 697.709, -25.6221, 0.55 ) }
    apic_16 { pt3dadd( -55.2002, 708.929, -25.5503, 0.55 ) }
    apic_16 { pt3dadd( -56.0894, 712.428, -25.646, 0.55 ) }
    apic_16 { pt3dadd( -57.3613, 717.937, -25.9026, 0.55 ) }
    apic_16 { pt3dadd( -58.7921, 723.459, -26.402, 0.28 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 22/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -5.22851, 84.6295, -20.5905, 1.11 ) }
    apic_15 { pt3dadd( -2.93873, 83.8645, -23.1715, 0.83 ) }
    apic_15 { pt3dadd( 0.290371, 82.3034, -27.0316, 0.55 ) }
    apic_15 { pt3dadd( 2.49283, 81.083, -29.7783, 0.55 ) }
    apic_15 { pt3dadd( 6.35552, 78.7415, -34.7028, 0.55 ) }
    apic_15 { pt3dadd( 8.15775, 77.5595, -37.0326, 0.55 ) }
    apic_15 { pt3dadd( 9.30831, 76.749, -38.5233, 0.55 ) }
    apic_15 { pt3dadd( 11.6244, 74.6912, -41.9505, 0.55 ) }
    apic_15 { pt3dadd( 12.9278, 73.3032, -43.9224, 0.55 ) }
    apic_15 { pt3dadd( 14.4057, 71.7472, -46.1015, 0.55 ) }
    apic_15 { pt3dadd( 15.3451, 70.7495, -47.4478, 0.55 ) }
    apic_15 { pt3dadd( 18.7454, 67.4943, -51.8648, 0.55 ) }
    apic_15 { pt3dadd( 20.688, 65.8282, -54.3139, 0.55 ) }
    apic_15 { pt3dadd( 24.3413, 63.1424, -58.7464, 0.55 ) }
    apic_15 { pt3dadd( 26.0137, 62.0778, -60.6823, 0.55 ) }
    apic_15 { pt3dadd( 27.1718, 61.4026, -62.0218, 0.55 ) }
    apic_15 { pt3dadd( 28.1489, 60.8955, -63.1411, 0.55 ) }
    apic_15 { pt3dadd( 29.8525, 60.1936, -65.1059, 0.55 ) }
    apic_15 { pt3dadd( 32.3586, 59.364, -68.0998, 0.55 ) }
    apic_15 { pt3dadd( 33.6896, 58.9872, -69.9286, 0.55 ) }
    apic_15 { pt3dadd( 35.6685, 58.2868, -73.1195, 0.55 ) }
    apic_15 { pt3dadd( 36.6224, 57.9713, -74.7382, 0.55 ) }
    apic_15 { pt3dadd( 38.1436, 57.4949, -77.5191, 0.55 ) }
    apic_15 { pt3dadd( 39.4848, 57.1513, -80.0935, 0.55 ) }
    apic_15 { pt3dadd( 40.3237, 56.9723, -81.887, 0.55 ) }
    apic_15 { pt3dadd( 42.0371, 56.7883, -85.6022, 0.55 ) }
    apic_15 { pt3dadd( 43.0881, 56.8376, -87.8085, 0.55 ) }
    apic_15 { pt3dadd( 44.6829, 56.9563, -91.2611, 0.55 ) }
    apic_15 { pt3dadd( 45.6606, 57.0092, -93.3803, 0.55 ) }
    apic_15 { pt3dadd( 46.6652, 57.1568, -95.5451, 0.55 ) }
    apic_15 { pt3dadd( 47.5488, 57.4155, -97.4729, 0.28 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 53/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 32.9124, 136.895, 29.4818, 0.55 ) }
    apic_13 { pt3dadd( 32.6126, 138.227, 31.9709, 0.55 ) }
    apic_13 { pt3dadd( 32.3509, 139.39, 34.1438, 0.55 ) }
    apic_13 { pt3dadd( 32.1845, 140.129, 35.5248, 0.28 ) }
    apic_13 { pt3dadd( 32.0495, 140.728, 36.6452, 0.28 ) }
    apic_13 { pt3dadd( 31.5285, 143.043, 40.9702, 0.28 ) }
    apic_13 { pt3dadd( 31.293, 144.089, 42.9253, 0.28 ) }
    apic_13 { pt3dadd( 30.7795, 150.606, 53.8795, 0.28 ) }
    apic_13 { pt3dadd( 30.1124, 155.727, 65.544, 0.28 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 62/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 32.9124, 136.895, 29.4818, 0.55 ) }
    apic_12 { pt3dadd( 33.3054, 138.638, 28.6938, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_44 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    dend_49 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_47 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_49 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    apic_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    apic_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_13 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_2 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 3
    apic_1 nseg = 7
    dend_32 nseg = 11
    dend_30 nseg = 7
    dend_29 nseg = 7
    apic_3 nseg = 3
    dend_34 nseg = 3
    dend_27 nseg = 9
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_2 nseg = 3
    dend_42 nseg = 3
    dend_35 nseg = 3
    dend_21 nseg = 7
    dend_18 nseg = 3
    dend_14 nseg = 7
    dend_10 nseg = 7
    dend_9 nseg = 5
    dend_7 nseg = 5
    dend_6 nseg = 3
    apic_9 nseg = 3
    apic_7 nseg = 7
    apic_6 nseg = 7
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_43 nseg = 5
    dend_40 nseg = 3
    dend_23 nseg = 9
    apic_11 nseg = 5
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_26 nseg = 5
    apic_16 nseg = 33
    apic_15 nseg = 5
    apic_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SP_c3f779f565_0_0


