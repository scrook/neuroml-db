// Cell: bNAC219_L5_BP_bc09d28ed4_0_0
/*
{
  "id" : "bNAC219_L5_BP_bc09d28ed4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.07628, 2.40803, 0.83", "-3.83038, 8.81845, 3.00096, 0.83", "-7.71786, 11.7563, 3.58724, 1.11", "-10.01, 13.4872, 3.89222, 0.83", "-12.2368, 15.1544, 4.16547, 0.83", "-13.5553, 16.105, 4.31521, 1.11", "-17.6841, 19.0756, 4.79511, 1.11", "-25.0689, 24.1614, 5.64345, 0.83", "-27.7294, 25.9237, 5.92358, 0.83", "-29.8362, 27.2779, 6.09759, 0.83", "-31.8907, 28.6199, 6.24821, 0.83", "-33.5631, 29.726, 6.32947, 0.55", "-34.8201, 30.4749, 6.41195, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.31578, -5.68197, 0.55", "4.16493, 5.90713, -6.09643, 0.55", "6.20695, 6.33782, -6.55245, 0.55", "7.39186, 6.44654, -7.15586, 0.83", "9.2672, 6.56224, -8.27674, 0.55", "10.1724, 6.61809, -8.81781, 1.38", "12.3983, 6.75542, -10.1481, 0.55", "13.3463, 6.70892, -10.7829, 0.83", "18.2501, 5.85609, -14.3495, 0.55", "18.7246, 5.74141, -14.7418, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.03197, 2.42803, 1.11", "-0.681767, -10.0172, 3.158, 1.11", "-0.725621, -13.7898, 4.54513, 1.11", "-0.743481, -15.3262, 5.11006, 0.83", "-0.767209, -17.3674, 5.86059, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.41203, -1.26197, 1.11", "0.908448, 9.60713, -1.37907, 1.11", "1.02655, 11.5407, -1.36539, 1.11", "1.21649, 14.6954, -1.22451, 1.38", "1.23035, 14.871, -1.21359, 1.38", "1.5372, 17.0417, -1.0625, 0.83", "1.96349, 19.335, -0.781464, 0.83", "2.68799, 21.9193, -0.153364, 0.83", "3.09385, 22.8969, 0.202945, 0.83", "3.48951, 23.6029, 0.529832, 1.11", "4.63542, 25.3192, 1.36665, 0.55", "5.96681, 27.108, 2.36798, 0.83", "7.69356, 28.9411, 3.49218, 0.55", "8.568, 29.6996, 3.99632, 0.83", "9.79482, 30.7259, 4.79069, 0.55", "11.3206, 32.0318, 5.87424, 0.55", "13.4624, 33.9998, 7.54112, 0.55", "15.8241, 36.251, 9.38198, 0.55", "17.3269, 37.7122, 10.7728, 0.55", "19.1846, 39.5602, 12.7519, 0.55", "19.5726, 39.9304, 13.2029, 0.83", "20.6018, 40.9086, 14.4789, 0.55", "21.463, 41.67, 15.4774, 0.83", "23.4549, 43.7576, 17.8488, 0.55", "24.1934, 44.5201, 18.5323, 0.83", "24.8721, 45.0798, 18.9853, 0.55", "25.5383, 45.5601, 19.324, 0.83", "27.0044, 46.4492, 19.9223, 0.83", "28.9345, 47.6611, 20.5441, 0.83", "30.1125, 48.4643, 20.7995, 0.55", "31.0125, 49.1615, 20.9994, 0.55", "33.369, 50.9625, 21.4883, 0.83", "34.8875, 52.1174, 21.7434, 0.55", "37.1863, 53.808, 22.0377, 0.55", "39.2855, 55.2224, 22.2235, 0.55", "41.1591, 56.4189, 22.3394, 0.55", "43.5184, 57.818, 22.3785, 0.55", "44.9548, 58.4984, 22.3554, 0.55", "45.9262, 58.8781, 22.2223, 0.55", "47.2061, 59.1521, 21.9356, 0.55", "49.1014, 59.2554, 21.3489, 0.55", "50.2778, 59.171, 20.9364, 0.55", "52.0039, 59.001, 20.4567, 0.55", "55.3123, 58.7801, 19.8422, 0.55", "57.922, 58.7245, 19.5472, 0.55", "60.7005, 58.7944, 19.4008, 0.55", "62.4919, 58.8984, 19.448, 0.55", "67.1716, 59.577, 19.8765, 0.55", "69.9568, 60.184, 20.3371, 0.55", "72.0595, 60.7701, 20.8755, 0.55", "73.3434, 61.3288, 21.2518, 0.55", "74.8343, 62.1674, 21.6813, 0.55", "77.3478, 63.8289, 22.1895, 0.55", "77.9198, 64.2297, 22.2282, 0.55", "79.5527, 65.2998, 22.2323, 0.55", "81.0555, 66.4438, 22.2308, 0.83", "81.8749, 67.0788, 22.2171, 0.55", "83.1013, 68.1718, 22.1489, 0.83", "89.6663, 74.0059, 23.4747, 0.83", "95.3736, 80.7311, 24.1913, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-34.8201, 30.4749, 6.41195, 0.55", "-36.3578, 31.7112, 5.38894, 0.55", "-38.03, 33.0555, 4.27652, 0.55", "-40.0479, 34.6777, 2.93407, 0.55", "-41.7141, 36.0173, 1.82557, 0.83", "-43.1104, 37.1398, 0.896652, 0.55", "-45.7022, 39.2234, -0.82756, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-34.8201, 30.4749, 6.41195, 0.55", "-37.2787, 30.9806, 5.99555, 0.55", "-39.912, 31.4191, 5.80956, 0.55", "-42.9026, 31.9062, 5.67136, 0.55", "-47.2591, 32.5371, 5.86614, 0.55", "-50.9217, 32.9433, 6.28006, 0.55", "-54.7737, 33.3002, 6.87301, 0.55", "-58.5242, 33.3728, 7.82658, 0.55", "-61.7747, 33.1113, 8.93391, 0.55", "-65.8541, 32.4839, 10.7198, 0.55", "-67.6438, 32.0703, 11.7283, 0.55", "-69.5822, 31.5983, 12.8968, 0.55", "-72.9945, 30.5336, 14.7911, 0.55", "-74.7934, 29.9923, 15.5237, 0.55", "-76.6775, 29.3712, 16.2763, 0.55", "-78.9043, 28.6755, 16.9521, 0.55", "-81.3197, 27.9722, 17.6251, 0.55", "-84.7625, 26.9658, 18.5111, 0.55", "-89.333, 25.9452, 19.3101, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "18.7246, 5.74141, -14.7418, 0.55", "22.6084, 6.40711, -15.5729, 0.55", "24.8233, 6.72336, -16.3804, 0.55", "26.9972, 6.94782, -17.2257, 0.55", "28.4756, 7.04434, -17.8132, 0.55", "30.6309, 7.13421, -18.6643, 0.55", "35.0879, 7.26288, -20.584, 0.55", "40.1311, 7.43982, -23.1038, 0.55", "42.5538, 7.40871, -24.5224, 0.55", "43.8451, 7.37663, -25.374, 0.55", "45.2602, 7.35896, -26.3648, 0.55", "47.7772, 7.25616, -28.1357, 0.55", "48.6839, 7.17149, -28.8196, 0.55", "52.5257, 6.9647, -32.002, 0.55", "55.2444, 6.89977, -34.4535, 0.55", "56.8122, 6.90086, -35.9036, 0.55", "58.3742, 6.888, -37.3512, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "18.7246, 5.74141, -14.7418, 0.83", "20.4902, 7.23546, -14.9693, 0.83", "21.5032, 8.07765, -15.1503, 0.55", "22.9985, 9.32259, -15.5649, 0.83", "24.0016, 10.1798, -15.8833, 0.55", "25.3765, 11.4061, -16.3089, 0.83", "27.0191, 12.9296, -16.7605, 0.55", "27.8541, 13.6386, -16.9346, 0.55", "29.813, 15.0241, -17.122, 0.83", "31.6119, 16.1114, -16.9901, 0.55", "32.6118, 16.7304, -16.8103, 0.83", "34.0936, 17.7295, -16.3776, 0.55", "36.1932, 19.2679, -15.4669, 0.55", "39.1244, 21.2792, -13.9995, 0.55", "41.9222, 23.1359, -12.3624, 0.55", "44.1398, 24.5912, -11.0158, 0.55", "47.791, 27.0129, -8.77875, 0.55", "50.4434, 28.8799, -7.09547, 0.55", "52.0148, 30.1643, -6.04604, 0.55", "54.8495, 32.8591, -4.15591, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.767209, -17.3674, 5.86059, 0.83", "-1.16324, -21.0389, 5.71985, 0.83", "-1.54909, -24.616, 5.58273, 0.83", "-1.97989, -28.6098, 5.42963, 0.83", "-2.20485, -30.6954, 5.34969, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.767209, -17.3674, 5.86059, 0.55", "-0.0405613, -19.2153, 7.10375, 0.55", "0.627833, -21.4727, 8.74344, 0.55", "1.05371, -24.4204, 11.0478, 0.55", "1.13973, -25.5643, 11.9815, 0.83", "1.11149, -28.4784, 14.7266, 0.55", "0.972669, -29.9802, 16.1833, 0.55", "0.64892, -32.8998, 19.1485, 0.83", "0.290801, -35.0652, 21.5018, 0.55", "-0.170248, -36.8472, 23.4273, 0.55", "-1.12671, -40.2199, 27.0168, 0.55", "-1.8887, -42.908, 29.8449, 0.55", "-2.45201, -45.0642, 32.1399, 0.55", "-2.92561, -47.3565, 34.4918, 0.28", "-3.04304, -48.3132, 35.4273, 0.55", "-3.22061, -50.0809, 37.0483, 0.28", "-3.14559, -52.8482, 39.1081, 0.55", "-5.12909, -62.0002, 46.6475, 0.55", "-7.28067, -70.4519, 54.961, 0.55", "-8.73268, -77.4138, 64.7494, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-45.7022, 39.2234, -0.82756, 0.55", "-48.6221, 39.2773, 0.066617, 0.55", "-49.8782, 39.2079, 0.561544, 0.83", "-51.3821, 39.0214, 1.29302, 0.55", "-52.5509, 38.8559, 1.94075, 0.83", "-55.6089, 38.5176, 3.63838, 0.55", "-56.7683, 38.4035, 4.29282, 0.28", "-58.7292, 38.1964, 5.52437, 0.55", "-61.3581, 37.9337, 7.16994, 0.55", "-63.3388, 37.7538, 8.34417, 0.55", "-65.9705, 37.5309, 9.84266, 0.28", "-66.6404, 37.4946, 10.1643, 0.55", "-68.0176, 37.4447, 10.7891, 0.28", "-68.9374, 37.4505, 11.1434, 0.55", "-70.7863, 37.487, 11.7219, 0.28", "-71.8617, 37.4687, 11.9983, 0.55", "-73.7625, 37.3105, 12.4686, 0.28", "-75.0311, 37.207, 12.7428, 0.55", "-83.3891, 35.2476, 17.3538, 0.55", "-91.2307, 32.2752, 22.3035, 0.55", "-98.8151, 28.4386, 27.033, 0.55", "-106.266, 23.671, 31.0318, 0.55", "-112.887, 18.9525, 36.3499, 0.55", "-120.128, 14.7027, 41.2493, 0.55", "-127.554, 11.8527, 46.872, 0.55", "-134.919, 8.31726, 52.1614, 0.55", "-142.168, 5.30457, 57.9261, 0.55", "-149.04, 2.06266, 64.016, 0.55", "-155.044, -2.33107, 70.2778, 0.55", "-161.174, -5.92434, 76.9333, 0.55", "-167.359, -10.3336, 83.0031, 0.55", "-172.528, -15.2923, 89.5679, 0.55", "-176.264, -19.9017, 97.2753, 0.55", "-179.805, -26.0124, 103.914, 0.55", "-182.006, -32.3951, 110.863, 0.55", "-184.745, -38.4091, 117.962, 0.55", "-188.522, -43.738, 125.15, 0.55", "-194.211, -47.4705, 132.113, 0.55", "-199.093, -52.2739, 139.01, 0.55", "-202.373, -55.8799, 147.443, 0.55", "-207.106, -58.653, 155.497, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.7022, 39.2234, -0.82756, 0.55", "-46.6398, 41.0583, -3.06721, 0.55", "-47.0801, 43.0228, -5.32866, 0.55", "-47.386, 45.2317, -7.58978, 0.55", "-47.5776, 46.6148, -9.00567, 0.55", "-47.927, 49.1379, -11.5884, 0.83", "-48.1826, 50.9837, -13.478, 0.55", "-48.2116, 53.564, -16.1602, 0.83", "-47.9991, 55.1222, -17.5138, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-89.333, 25.9452, 19.3101, 0.28", "-90.4838, 23.9718, 18.6511, 0.28", "-91.0301, 23.1315, 18.2886, 0.28", "-91.7377, 21.9465, 17.7337, 0.55", "-92.3213, 20.9031, 17.2581, 0.28", "-93.1831, 19.3111, 16.5568, 0.55", "-95.5841, 14.622, 14.5863, 0.28", "-96.3596, 12.9894, 13.7601, 0.55", "-97.5294, 10.4833, 12.3984, 0.28", "-98.1971, 8.99042, 11.5135, 0.55", "-98.6569, 7.96412, 10.8769, 0.28", "-99.1814, 6.78518, 10.1569, 0.55", "-100.766, 2.83799, 7.86978, 0.28", "-101.262, 1.64851, 7.13131, 0.55", "-102.125, -0.149536, 5.79174, 0.28", "-102.837, -1.28763, 4.81301, 0.28", "-103.482, -2.04138, 4.11546, 0.55", "-105.747, -4.15302, 2.18966, 0.28", "-106.805, -5.00665, 1.41969, 0.55", "-109.39, -6.9341, -0.483538, 0.28", "-111.981, -8.62878, -2.23873, 0.28", "-114.801, -10.2288, -4.03583, 0.28", "-116.098, -10.8257, -4.73803, 0.55", "-122.319, -17.8503, -9.65573, 0.55", "-129.364, -25.1633, -12.6743, 0.55", "-136.174, -31.9156, -17.2033, 0.55", "-143.105, -37.9276, -22.5647, 0.55", "-150.069, -43.0984, -28.7442, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-89.333, 25.9452, 19.3101, 0.55", "-89.9577, 25.9116, 19.3306, 0.55", "-91.7404, 25.7821, 19.6115, 0.55", "-92.4142, 25.7115, 19.7488, 0.55", "-94.0022, 25.4966, 20.0876, 0.55", "-96.4333, 25.2081, 20.4995, 0.55", "-97.6933, 25.0983, 20.698, 0.28", "-99.6522, 24.8932, 20.9634, 0.55", "-101.103, 24.7211, 21.1053, 0.55", "-101.716, 24.6444, 21.1659, 0.28", "-105.392, 24.1831, 21.5243, 0.55", "-107.104, 23.9095, 21.5779, 0.28", "-109.401, 23.5537, 21.5175, 0.28", "-111.369, 23.2933, 21.357, 0.55", "-119.165, 23.0862, 22.5453, 0.55", "-126.78, 22.5433, 24.528, 0.55", "-134.066, 21.0866, 27.1655, 0.55", "-141.155, 20.796, 30.6131, 0.55", "-147.39, 19.9943, 35.3789, 0.55", "-152.565, 19.3905, 41.3, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "58.3742, 6.888, -37.3512, 0.55", "61.6725, 7.75644, -40.2926, 0.55", "62.7161, 7.97709, -41.2848, 0.55", "64.0246, 8.21176, -42.5059, 0.55", "66.3973, 8.60011, -44.8629, 0.55", "68.8777, 8.89514, -47.3747, 0.55", "70.0958, 8.94502, -48.5603, 0.83", "71.1003, 8.90758, -49.6064, 0.55", "71.8533, 8.80807, -50.4597, 0.83", "73.6779, 8.29796, -52.6171, 0.55", "75.187, 7.73595, -54.3886, 0.55", "76.9249, 7.0878, -56.3375, 0.55", "78.8565, 6.41697, -58.5538, 0.55", "80.1528, 5.93259, -60.0698, 0.55", "81.6147, 5.37613, -61.8271, 0.55", "82.8743, 4.92964, -63.4408, 0.55", "83.661, 4.7091, -64.572, 0.55", "84.6442, 4.28085, -66.8403, 0.55", "85.1794, 3.96636, -68.2522, 0.55", "85.6349, 3.45723, -70.113, 0.55", "86.2567, 2.49621, -73.244, 0.55", "86.3842, 2.25255, -73.9466, 0.28", "88.0412, -0.800303, -82.479, 0.28", "88.6035, -1.67583, -84.9873, 0.83", "90.8345, -4.92912, -93.8695, 0.83", "91.9919, -6.6, -97.9775, 0.83", "92.5534, -7.3406, -99.6345, 0.55", "93.1998, -8.06547, -101.251, 0.55", "94.9971, -9.45479, -104.248, 0.55", "96.9244, -10.6882, -106.885, 0.28", "97.5141, -10.8679, -107.032, 0.55", "98.8169, -11.1208, -106.907, 0.28", "99.6226, -11.2084, -106.721, 0.55", "100.464, -11.3021, -106.455, 0.28", "101.473, -11.3606, -106.096, 0.55", "102.976, -11.3899, -105.726, 0.28", "104.184, -11.454, -105.463, 0.55", "105.515, -11.4516, -105.289, 0.28", "107.321, -11.4613, -105.212, 0.55", "109.343, -11.441, -105.252, 0.55", "111.118, -11.4164, -105.407, 0.28", "113.572, -11.3766, -105.76, 0.55", "117.801, -11.2467, -106.835, 0.55", "119.661, -11.1212, -107.547, 0.55", "120.457, -11.0448, -107.944, 0.83", "121.972, -10.9052, -108.841, 0.55", "123.02, -10.774, -109.536, 0.83", "125.836, -10.351, -111.446, 0.55", "127.56, -10.2161, -112.644, 0.28", "128.29, -10.1944, -113.06, 0.55", "130.3, -10.291, -113.955, 0.28", "131.007, -10.3829, -114.214, 0.55", "132.474, -10.6347, -114.513, 0.28", "133.977, -11.0012, -114.544, 0.55", "137.029, -11.8358, -114.064, 0.28", "138.442, -12.2625, -113.688, 0.55", "140.549, -12.9992, -113.006, 0.28", "143.213, -13.9087, -112.052, 0.55", "145.139, -14.5379, -111.336, 0.55", "148.471, -15.5218, -110.053, 0.28", "149.834, -15.8786, -109.643, 0.55", "152.174, -16.3956, -109.205, 0.28", "154.495, -16.7586, -108.947, 0.55", "155.759, -16.8398, -108.997, 0.28", "156.892, -16.7747, -109.149, 0.55", "160.079, -16.4405, -109.902, 0.28", "162.348, -16.0516, -110.495, 0.28", "164.314, -15.5753, -111.056, 0.55", "166.478, -15.0028, -111.794, 0.28", "167.023, -14.8225, -111.965, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "58.3742, 6.888, -37.3512, 0.55", "58.5633, 5.71767, -38.5954, 0.55", "58.6192, 4.71644, -39.5604, 0.28", "58.6717, 3.77673, -40.3531, 0.55", "58.9013, 1.77936, -42.0614, 0.28", "58.9113, 1.65898, -42.1889, 0.55", "58.9828, 1.04172, -42.919, 0.28", "58.9815, 0.560694, -43.6179, 0.55", "58.9405, 0.0802731, -44.4192, 0.28", "58.8573, -0.562478, -45.5515, 0.55", "58.6478, -2.1867, -48.3527, 0.55", "58.4322, -3.65602, -50.9404, 0.55", "58.2436, -4.82836, -53.0101, 0.55", "58.0291, -5.98503, -55.0145, 0.55", "57.9728, -6.2881, -55.5148, 0.28", "57.9264, -6.62205, -56.0135, 0.55", "57.9213, -7.10391, -56.6513, 0.28", "58.0275, -8.00288, -57.7016, 0.55", "58.4201, -9.82272, -59.3945, 0.55", "58.6438, -10.8269, -60.2055, 0.28", "58.803, -11.8293, -61.0756, 0.55", "58.9062, -13.2072, -62.3471, 0.28", "58.9053, -14.3041, -63.3984, 0.55", "58.8208, -15.9352, -64.9693, 0.28", "58.7496, -17.6394, -66.5344, 0.55", "58.6068, -20.1039, -68.8298, 0.28", "58.4965, -21.4132, -70.0563, 0.55", "58.3568, -22.7409, -71.3465, 0.28", "58.2169, -23.8875, -72.5672, 0.28", "58.0981, -25.2914, -74.2463, 0.55", "58.1017, -26.6133, -75.7693, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "54.8495, 32.8591, -4.15591, 0.55", "57.3403, 33.014, -3.57077, 0.55", "59.1694, 33.0369, -3.30705, 0.55", "63.1842, 33.0153, -2.93058, 0.55", "64.9978, 32.9488, -2.91502, 0.55", "66.9727, 32.9029, -3.0022, 0.55", "69.621, 32.8608, -3.31002, 0.55", "72.4295, 32.7108, -3.88624, 0.55", "73.9089, 32.5918, -4.35122, 0.55", "76.9218, 32.2951, -5.69707, 0.55", "78.3084, 32.1635, -6.36141, 0.55", "81.5674, 31.7853, -7.99241, 0.55", "83.7866, 31.4477, -9.06805, 0.55", "85.4204, 31.1992, -9.78618, 0.83", "88.0436, 30.7147, -10.8926, 0.55", "90.6285, 30.1356, -11.8639, 0.83", "92.8346, 29.5604, -12.6002, 0.55", "94.7928, 29.0882, -13.1607, 0.55", "95.8991, 28.873, -13.4265, 0.83", "98.4791, 28.3956, -13.9164, 0.28", "99.7541, 28.2186, -14.0879, 0.28", "100.999, 27.9651, -14.3062, 0.28", "102.34, 27.7239, -14.5523, 0.28", "104.481, 27.3701, -14.9942, 0.28", "105.341, 27.2411, -15.1484, 0.55", "107.392, 26.9786, -15.3244, 0.55", "111.087, 26.4968, -15.4557, 0.55", "112.112, 26.3438, -15.445, 0.55", "113.032, 26.1842, -15.3936, 0.83", "115.019, 25.9162, -15.1337, 0.55", "116.746, 25.6901, -14.8813, 0.55", "118.377, 25.4839, -14.6363, 0.55", "119.643, 25.2988, -14.4786, 0.55", "121.67, 24.8605, -14.3068, 0.55", "124.088, 24.1305, -14.2062, 0.55", "127.903, 22.5715, -14.2503, 0.55", "130.037, 21.4178, -14.3635, 0.55", "131.926, 20.1229, -14.5115, 0.28", "132.505, 19.624, -14.5715, 0.55", "133.828, 18.1815, -14.7211, 0.28", "135.022, 16.5226, -14.8489, 0.55", "136.217, 14.4302, -14.8259, 0.55", "137.017, 13.0671, -14.7403, 0.28", "137.308, 12.5904, -14.6846, 0.55", "138.053, 11.4124, -14.5284, 0.28", "139.06, 9.89133, -14.2848, 0.55", "141.64, 6.26554, -13.5977, 0.55", "142.975, 4.44997, -13.2086, 0.55", "144.211, 2.79052, -12.8352, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "54.8495, 32.8591, -4.15591, 0.55", "57.622, 33.3593, -2.28758, 0.55", "58.5079, 33.5225, -1.73567, 0.55", "61.8213, 34.0009, 0.162483, 0.55", "65.5139, 34.5958, 2.34384, 0.55", "70.2578, 35.333, 5.25917, 0.55", "71.5673, 35.5391, 6.05622, 0.55", "73.9281, 35.828, 7.45189, 0.55", "76.5001, 36.2117, 8.8964, 0.55", "79.4677, 36.7517, 10.4579, 0.55", "82.2592, 37.2964, 11.9444, 0.55", "83.7747, 37.6692, 12.7005, 0.55", "85.5459, 38.1557, 13.5924, 0.55", "87.7243, 38.8228, 14.6657, 0.83", "91.2639, 39.9552, 16.0531, 0.55", "93.6129, 40.6304, 16.8464, 0.83", "96.8883, 41.4386, 17.8151, 0.55", "97.9013, 41.6362, 18.0906, 0.55", "101.063, 42.1098, 18.8588, 0.55", "106.754, 42.6634, 19.9647, 0.55", "110.948, 42.8636, 20.6497, 0.55", "114.297, 42.8689, 21.246, 0.55", "117.747, 42.6939, 21.9414, 0.55", "118.476, 42.6388, 22.0885, 0.28", "119.962, 42.4736, 22.3755, 0.83", "126.08, 41.7103, 23.5755, 0.55", "130.353, 41.1909, 24.3377, 0.55", "133.854, 40.8344, 25.0582, 0.55", "135.948, 40.6131, 25.5067, 0.83", "137.594, 40.4603, 25.8659, 0.28", "139.085, 40.3256, 26.1787, 0.55", "150.428, 41.6447, 30.5827, 0.55", "162.511, 41.5705, 32.5674, 0.55", "174.371, 42.8255, 35.3314, 0.55", "185.472, 41.9242, 40.4222, 0.55", "196.133, 39.2874, 45.8238, 0.55", "207.641, 35.5779, 47.5621, 0.55", "218.946, 31.0453, 47.1203, 0.55", "230.93, 28.8085, 46.2091, 0.55", "242.886, 26.2683, 46.0819, 0.55", "255.05, 25.156, 45.3557, 0.55", "267.231, 24.3356, 46.2617, 0.55", "279.018, 21.3582, 47.5312, 0.55", "290.9, 20.2982, 50.2847, 0.55", "302.191, 20.6438, 55.007, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.20485, -30.6954, 5.34969, 1.38", "0.528914, -33.7354, 4.30976, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.20485, -30.6954, 5.34969, 0.55", "-3.18745, -31.8138, 5.40127, 0.55", "-4.27759, -33.2517, 5.45835, 0.55", "-5.12286, -34.2008, 5.51274, 0.55", "-5.83862, -34.9937, 5.44673, 0.55", "-7.40334, -36.6339, 5.15538, 0.55", "-8.50068, -37.728, 4.92083, 0.55", "-9.47769, -38.7089, 4.6754, 0.55", "-11.9853, -41.0935, 4.04766, 0.55", "-14.9957, -43.852, 3.31766, 0.55", "-17.3274, -45.9399, 2.71212, 0.55", "-18.817, -47.3119, 2.30401, 0.55", "-20.5272, -48.9599, 1.84066, 0.55", "-22.7009, -51.3304, 1.28025, 0.55", "-23.9773, -53.0188, 0.977987, 0.55", "-25.554, -55.4542, 0.740606, 0.55", "-26.8162, -57.7418, 0.59924, 0.55", "-28.1017, -60.6037, 0.475863, 0.55", "-29.3252, -63.9712, 0.407905, 0.55", "-29.9977, -66.5517, 0.412353, 0.55", "-30.2399, -67.8382, 0.498504, 0.55", "-30.6173, -70.8659, 0.865096, 0.55", "-30.9163, -73.7003, 1.28271, 0.55", "-31.0604, -76.5595, 1.91597, 0.55", "-31.1579, -78.1996, 2.37149, 0.55", "-31.4218, -83.2713, 3.96995, 0.55", "-31.4436, -83.6447, 4.09444, 0.55", "-31.531, -85.9326, 4.91299, 0.55", "-31.88, -90.0192, 6.48085, 0.55", "-32.0073, -91.3856, 6.92212, 0.55", "-32.2719, -93.5196, 7.23793, 0.55", "-32.3547, -94.3127, 7.16843, 0.55", "-32.529, -96.9995, 6.41244, 0.55", "-32.5537, -98.7418, 5.54378, 0.55", "-32.5328, -101.518, 3.58036, 0.55", "-32.3744, -104.918, 0.905289, 0.28", "-32.3253, -105.759, 0.127384, 0.55", "-32.25, -107.034, -1.16702, 0.28", "-32.2408, -107.226, -1.37246, 0.55", "-32.1943, -108.277, -2.40507, 0.28", "-32.201, -108.634, -2.67082, 0.55", "-32.2676, -110.486, -3.68429, 0.28", "-32.315, -111.116, -4.02022, 0.55", "-32.4723, -112.937, -4.88475, 0.28", "-32.5191, -113.511, -5.15482, 0.55", "-32.6963, -115.489, -6.05318, 0.28", "-32.7731, -116.399, -6.47134, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.73268, -77.4138, 64.7494, 0.55", "-12.6061, -85.3119, 72.8447, 0.55", "-17.618, -92.1611, 81.3093, 0.55", "-22.3511, -99.7856, 89.2183, 0.55", "-27.302, -107.447, 96.9537, 0.55", "-31.0699, -116.451, 103.784, 0.55", "-34.6807, -125.08, 111.186, 0.55", "-37.1078, -135.562, 116.159, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.73268, -77.4138, 64.7494, 0.55", "-7.91187, -82.4417, 69.1955, 0.55", "-7.19669, -88.1922, 72.6237, 0.55", "-7.54425, -93.8104, 76.3121, 0.55", "-8.47853, -99.6504, 79.4924, 0.55", "-9.1195, -105.515, 82.7028, 0.55", "-9.56347, -111.174, 86.3137, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-47.9991, 55.1222, -17.5138, 0.83", "-47.4078, 56.4656, -18.2672, 0.83", "-46.1083, 59.6604, -19.9032, 0.55", "-45.5734, 61.0133, -20.5163, 0.83", "-45.0206, 62.4384, -21.0902, 0.55", "-44.5031, 63.8577, -21.5082, 0.55", "-44.2613, 64.549, -21.6382, 0.28", "-44.1571, 64.9818, -21.6294, 0.55", "-43.8513, 66.3448, -21.3015, 0.28", "-43.7142, 66.9188, -21.1285, 0.55", "-43.2862, 68.894, -20.4522, 0.28", "-43.0048, 70.4481, -19.8734, 0.55", "-42.7097, 72.864, -18.9242, 0.28", "-42.541, 74.9824, -18.0681, 0.28", "-42.526, 76.1673, -17.5839, 0.55", "-42.5999, 77.5789, -17.0324, 0.28", "-42.6845, 78.2534, -16.7716, 0.55", "-42.9541, 79.8667, -16.2545, 0.28", "-43.1916, 80.9628, -15.9852, 0.28", "-43.4388, 82.0498, -15.759, 0.28", "-43.5468, 82.6232, -15.6359, 0.55", "-43.8439, 84.9492, -15.1589, 0.28", "-44.0902, 87.7118, -14.6192, 0.55", "-44.1603, 88.666, -14.4328, 0.55", "-44.2515, 89.6181, -14.2299, 0.55", "-44.5434, 91.6567, -13.8589, 0.55", "-44.8126, 93.0081, -13.6656, 0.28", "-44.971, 93.525, -13.6143, 0.55", "-45.5036, 94.9229, -13.4725, 0.28", "-46.114, 96.4299, -13.393, 0.55", "-47.1631, 98.6297, -13.4087, 0.28", "-47.6876, 99.5609, -13.4676, 0.28", "-48.5387, 100.897, -13.7083, 0.55", "-49.4911, 102.312, -14.0461, 0.28", "-49.6676, 102.538, -14.1166, 0.55", "-50.3123, 103.272, -14.3904, 0.28", "-52.5619, 105.638, -15.3324, 0.55", "-55.6807, 108.653, -16.8653, 0.28", "-56.2499, 109.18, -17.1994, 0.55", "-57.8101, 110.565, -18.1665, 0.28", "-58.4606, 111.142, -18.5959, 0.28", "-59.0191, 111.635, -19.0051, 0.55", "-60.6329, 112.891, -20.4156, 0.28", "-61.7982, 113.626, -21.3988, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-47.9991, 55.1222, -17.5138, 0.55", "-48.1051, 56.6788, -17.3279, 0.55", "-48.212, 57.5776, -17.1418, 0.28", "-48.4574, 58.1906, -16.8859, 0.55", "-49.0208, 59.5984, -16.2982, 0.28", "-49.4166, 60.5872, -15.8854, 0.55", "-50.1461, 62.41, -15.1244, 0.28", "-50.6867, 63.3492, -14.5672, 0.55", "-52.9262, 65.4216, -12.5691, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-150.069, -43.0984, -28.7442, 0.55", "-157.245, -52.0842, -33.3244, 0.55", "-162.402, -62.0258, -38.5029, 0.55", "-166.244, -71.072, -46.012, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-150.069, -43.0984, -28.7442, 0.55", "-155.068, -47.5128, -33.7463, 0.55", "-159.202, -51.7373, -39.6204, 0.55", "-162.992, -56.0274, -45.6704, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-152.565, 19.3905, 41.3, 0.55", "-162.631, 18.9217, 46.9845, 0.55", "-173.139, 19.9922, 51.6904, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-152.565, 19.3905, 41.3, 0.55", "-160.345, 18.5979, 42.5709, 0.55", "-168.015, 18.87, 44.5414, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "58.1017, -26.6133, -75.7693, 0.28", "65.5872, -30.1368, -91.2199, 0.28", "66.3276, -30.5747, -92.6122, 0.55", "67.5777, -31.314, -94.963, 0.28", "68.6303, -31.9365, -96.9423, 0.28", "70.0236, -32.7605, -99.5624, 0.55", "71.8606, -33.8469, -103.017, 0.55", "74.3556, -36.157, -105.072, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "58.1017, -26.6133, -75.7693, 0.55", "58.5503, -27.4478, -77.3593, 0.55", "58.6528, -27.7926, -78.0689, 0.28", "58.7821, -28.361, -79.3048, 0.55", "59.0668, -29.6131, -82.0273, 0.28", "59.2641, -30.4808, -83.914, 0.55", "59.5984, -31.951, -87.1106, 0.28", "59.9518, -33.6374, -91.243, 0.28", "60.0601, -34.3846, -93.1701, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "144.211, 2.79052, -12.8352, 0.28", "147.175, 0.2094, -11.1163, 0.28", "150.92, -3.13654, -8.46639, 0.28", "153.291, -5.28866, -6.62655, 0.55", "154.699, -6.43555, -5.52472, 0.28", "155.448, -7.05254, -4.92308, 0.28", "159.166, -10.1132, -2.02126, 0.55", "160.01, -10.7563, -1.2457, 0.28", "162.021, -12.4482, 0.967335, 0.55", "163.748, -13.9487, 2.79573, 0.28", "165.244, -15.1595, 4.24991, 0.55", "167.011, -16.6491, 5.85002, 0.55", "169.853, -19.1257, 7.95046, 0.55", "170.541, -19.7435, 8.43439, 0.55", "173.022, -22.0779, 10.2019, 0.28", "173.992, -23.0497, 10.8877, 0.55", "175.33, -24.2727, 11.7615, 0.28", "177.227, -26.0385, 12.8932, 0.55", "180.386, -28.9331, 14.1396, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "144.211, 2.79052, -12.8352, 0.55", "142.211, 2.48402, -12.9183, 0.55", "140.587, 2.23512, -12.9857, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.528914, -33.7354, 4.30976, 0.83", "0.646401, -33.9997, 4.26809, 0.83", "2.05942, -36.3468, 3.99247, 0.83", "3.27665, -38.4018, 3.61268, 0.55", "4.24773, -40.0413, 3.3097, 0.55", "6.31181, -43.5261, 2.66568, 0.83", "8.81539, -47.7529, 1.88453, 0.55", "10.1916, -49.9666, 1.51104, 0.83", "12.6679, -53.4941, 1.03583, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.528914, -33.7354, 4.30976, 0.55", "-0.405739, -34.6919, 1.48045, 0.55", "-1.40898, -35.7187, -1.55646, 0.55", "-2.59331, -36.9307, -5.14156, 0.55", "-4.03147, -38.4026, -9.49503, 0.55", "-4.84757, -39.2378, -11.9655, 0.55", "-5.01151, -39.4056, -12.4617, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.56347, -111.174, 86.3137, 0.55", "-9.27907, -118.549, 91.419, 0.55", "-8.04434, -126.498, 95.3563, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.56347, -111.174, 86.3137, 0.55", "-10.2842, -119.231, 91.0069, 0.55", "-11.2916, -127.032, 96.0834, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.9262, 65.4216, -12.5691, 0.28", "-53.9271, 65.9892, -11.7226, 0.28", "-54.3183, 66.1893, -11.3642, 0.55", "-55.448, 66.7605, -10.3029, 0.28", "-55.9923, 67.0625, -9.82471, 0.55", "-57.4603, 67.8986, -8.5781, 0.28", "-58.9522, 68.7483, -7.31108, 0.55", "-61.4271, 70.0386, -5.23806, 0.28", "-61.9542, 70.3167, -4.79478, 0.55", "-63.1018, 71.0015, -3.83037, 0.28", "-63.55, 71.2915, -3.44239, 0.55", "-68.2827, 73.0901, -0.718361, 0.55", "-72.9707, 75.9353, 0.948916, 0.55", "-77.3406, 78.6109, 3.51062, 0.55", "-80.9695, 81.8928, 6.44583, 0.55", "-85.0343, 85.1588, 8.7794, 0.55", "-89.7184, 87.4813, 11.1476, 0.55", "-94.3139, 89.0883, 14.2091, 0.55", "-98.6539, 89.8592, 17.9205, 0.55", "-102.948, 90.9916, 21.5823, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.9262, 65.4216, -12.5691, 0.55", "-55.6281, 64.5694, -12.4914, 0.55", "-57.032, 64.0862, -12.4659, 0.28", "-58.0768, 63.7266, -12.4469, 0.55", "-58.9475, 63.4269, -12.4311, 0.28", "-59.5575, 63.2169, -12.42, 0.55", "-61.2393, 62.638, -12.3895, 0.28", "-62.3233, 62.2067, -12.518, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-166.244, -71.072, -46.012, 0.55", "-172.835, -83.5134, -46.6476, 0.55", "-179.442, -95.9082, -45.6516, 0.55", "-184.573, -108.96, -46.8897, 0.55", "-191.409, -121.278, -46.6283, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-166.244, -71.072, -46.012, 0.55", "-169.628, -75.9625, -52.6063, 0.55", "-172.391, -79.8702, -60.1174, 0.55", "-176.087, -84.5732, -66.6864, 0.55", "-181.496, -87.7395, -73.0246, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-162.992, -56.0274, -45.6704, 0.55", "-166.525, -59.5423, -52.6778, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-162.992, -56.0274, -45.6704, 0.55", "-170.218, -67.0599, -43.9716, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "74.3556, -36.157, -105.072, 0.28", "76.571, -37.3743, -106.688, 0.28", "77.6001, -37.9397, -107.439, 0.55", "79.5625, -39.018, -108.871, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "74.3556, -36.157, -105.072, 0.55", "73.652, -37.5267, -106.868, 0.55", "72.2448, -40.2666, -110.46, 0.28", "71.7864, -41.1591, -111.631, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "60.0601, -34.3846, -93.1701, 0.28", "60.567, -36.6534, -97.4315, 0.28", "60.818, -37.7768, -99.5416, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "60.0601, -34.3846, -93.1701, 0.55", "57.9338, -35.1033, -92.3413, 0.55", "52.0048, -37.1076, -90.0303, 0.28", "50.5963, -37.5838, -89.4813, 0.55", "46.7433, -38.8862, -87.9795, 0.28", "44.2597, -39.7258, -87.0114, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.6679, -53.4941, 1.03583, 0.83", "12.6777, -53.7061, 1.01429, 0.83", "12.8736, -56.4764, 0.78988, 0.83", "12.8986, -58.5386, 0.813775, 0.83", "12.8662, -60.5132, 1.08503, 0.83", "12.8081, -63.126, 1.67174, 0.83", "12.7028, -66.1267, 2.48667, 0.83", "12.6658, -69.4671, 3.56184, 0.83", "12.688, -72.7028, 4.75185, 0.83", "12.4265, -76.6715, 6.22148, 0.83", "12.1682, -78.4976, 6.83347, 0.83", "11.9356, -79.876, 7.211, 0.83", "11.4131, -82.5219, 7.90204, 0.83", "10.9494, -84.9019, 8.3722, 0.83", "10.0132, -90.0219, 8.72049, 0.83", "9.39483, -92.8456, 8.54721, 0.83", "8.75233, -95.4587, 8.20675, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.6679, -53.4941, 1.03583, 0.55", "11.6351, -55.6857, 1.02754, 0.55", "10.8552, -57.2792, 1.14359, 0.55", "10.3787, -58.3008, 1.32494, 0.55", "9.70248, -59.9036, 1.77297, 0.55", "8.43683, -63.0825, 2.87439, 0.55", "7.44385, -65.4945, 3.97835, 0.55", "6.63852, -67.4324, 5.07436, 0.55", "5.76897, -69.3925, 6.32034, 0.55", "5.02937, -71.0199, 7.43952, 0.28", "4.39504, -72.3537, 8.55113, 0.55", "3.16547, -74.7877, 10.9173, 0.55", "2.32041, -76.2824, 12.5267, 0.55", "1.83806, -77.1195, 13.4194, 0.55", "1.2213, -78.1053, 14.4171, 0.83", "-0.623688, -81.0242, 17.1753, 0.28", "-1.2319, -81.9897, 18.0613, 0.55", "-2.27148, -83.7319, 19.6058, 0.28", "-2.59354, -84.2698, 20.1219, 0.55", "-3.27664, -85.533, 21.3122, 0.28", "-3.65736, -86.2503, 21.9354, 0.55", "-5.01051, -88.5699, 23.314, 0.55", "-7.17802, -94.8887, 29.627, 0.55", "-8.92204, -100.927, 36.3467, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.01151, -39.4056, -12.4617, 0.55", "-5.63849, -40.6371, -16.7276, 0.55", "-5.84508, -40.9264, -17.9546, 0.55", "-6.41796, -41.649, -20.9688, 0.55", "-7.79158, -43.0749, -27.4066, 0.28", "-8.02349, -43.2683, -28.3293, 0.55", "-9.07007, -44.1518, -32.0834, 0.55", "-10.7494, -45.3444, -36.9111, 0.55", "-11.4122, -45.7508, -38.7294, 0.28", "-12.035, -46.0123, -40.2628, 0.28", "-13.2863, -46.3988, -42.634, 0.55", "-14.7413, -46.7466, -45.6143, 0.28", "-16.037, -46.8543, -48.4198, 0.55", "-17.0519, -46.774, -50.5621, 0.55", "-17.7177, -46.6082, -52.0755, 0.55", "-19.5899, -45.9488, -56.6244, 0.55", "-21.592, -44.9681, -61.3551, 0.55", "-22.4397, -44.4661, -63.2768, 0.28", "-23.2282, -44.0166, -65.1269, 0.55", "-24.8634, -43.3169, -68.8476, 0.28", "-25.4227, -43.113, -70.0897, 0.83", "-26.5537, -42.7008, -72.2935, 0.28", "-27.4964, -42.5073, -73.7173, 0.55", "-28.8972, -42.3004, -75.7467, 0.28", "-29.4719, -42.2055, -76.5315, 0.55", "-30.5916, -42.0558, -77.9135, 0.55", "-32.3235, -41.5825, -79.9297, 0.55", "-33.502, -41.1715, -81.1743, 0.28", "-34.502, -40.6777, -82.0955, 0.55", "-35.664, -39.9119, -83.1909, 0.28", "-35.8489, -39.7667, -83.3787, 0.55", "-37.3207, -38.3932, -85.4493, 0.28", "-38.2832, -37.3715, -87.1028, 0.55", "-39.3658, -35.8935, -89.5432, 0.83", "-40.1353, -34.6442, -91.726, 0.28", "-40.3069, -34.327, -92.3287, 0.55", "-41.5089, -31.9558, -97.1199, 0.28", "-41.683, -31.5542, -98.0104, 0.55", "-42.1179, -30.249, -100.74, 0.28", "-42.2281, -29.9134, -101.447, 0.55", "-42.5612, -29.036, -103.192, 0.28", "-42.8301, -28.4018, -104.381, 0.55", "-43.6094, -26.9719, -106.789, 0.28", "-44.1063, -26.2032, -108.18, 0.55", "-45.2606, -24.7131, -111.035, 0.28", "-45.615, -24.3096, -111.875, 0.55", "-46.2042, -23.765, -113.155, 0.28", "-46.7326, -23.3042, -114.199, 0.55", "-47.9066, -22.3693, -116.263, 0.28", "-48.2735, -22.1008, -116.867, 0.55", "-51.12, -20.0059, -121.175, 0.28", "-52.1919, -19.1506, -122.567, 0.55", "-54.1999, -17.4782, -124.893, 0.28", "-55.1238, -16.6713, -125.908, 0.55", "-57.3421, -14.8349, -128.086, 0.28", "-58.1878, -14.2075, -128.843, 0.55", "-61.3984, -12.2839, -131.395, 0.28", "-62.7637, -11.6886, -132.443, 0.55", "-64.7612, -11.2261, -133.911, 0.55", "-66.0173, -11.0324, -134.782, 0.55", "-68.7097, -10.7049, -136.355, 0.28", "-71.4594, -10.4042, -137.737, 0.28", "-73.7867, -10.1417, -138.825, 0.55", "-76.7766, -9.54841, -139.861, 0.28", "-78.3376, -9.06167, -140.193, 0.55", "-82.1668, -7.31922, -140.659, 0.28", "-84.2966, -6.04457, -140.49, 0.55", "-85.762, -5.02489, -140.133, 0.28", "-87.5301, -3.8633, -139.413, 0.55", "-89.8104, -2.34047, -138.309, 0.28", "-90.6782, -1.80042, -137.899, 0.55", "-95.0812, 0.644688, -136.188, 0.28", "-96.5691, 1.42087, -135.624, 0.55", "-100.142, 3.15709, -134.213, 0.28", "-102.085, 4.08126, -133.448, 0.55", "-103.683, 4.83862, -132.822, 0.55", "-105.583, 5.73032, -132.114, 0.28", "-106.536, 6.18091, -131.879, 0.55", "-109.677, 7.77513, -131.256, 0.28", "-111.311, 8.77505, -130.899, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.01151, -39.4056, -12.4617, 0.55", "-4.41983, -39.4866, -13.4123, 0.55", "-3.79957, -39.449, -14.3477, 0.55", "-2.97065, -39.3086, -15.4697, 0.55", "-2.25933, -39.1076, -16.3506, 0.55", "2.78622, -37.0647, -21.7304, 0.55", "3.91155, -36.4324, -22.9525, 0.55", "5.545, -35.3367, -24.7887, 0.55", "6.6945, -34.508, -26.0942, 0.55", "7.83063, -33.6108, -27.3327, 0.28", "9.63783, -32.0965, -29.1324, 0.55", "12.4283, -29.7347, -31.6374, 0.28", "12.6372, -29.5895, -31.927, 0.55", "13.5584, -29.0852, -34.2082, 0.28", "13.925, -28.8578, -35.856, 0.55", "14.1617, -28.7456, -37.685, 0.55", "14.5496, -28.7087, -40.9846, 0.55", "15.3306, -28.6797, -47.4593, 0.55", "15.9341, -28.6998, -51.7985, 0.55", "16.1828, -28.7175, -53.2905, 0.55", "18.044, -28.7443, -63.0504, 0.55", "18.6569, -28.7073, -65.6688, 0.55", "19.1109, -28.6802, -67.1113, 0.55", "20.4668, -28.6835, -70.3833, 0.55", "24.2032, -29.0748, -78.0564, 0.55", "25.3033, -29.2635, -80.083, 0.28", "26.0203, -29.4206, -81.1912, 0.55", "27.1187, -29.7259, -82.8161, 0.28", "27.6244, -29.9233, -83.4521, 0.55", "29.5769, -30.8199, -84.933, 0.28", "31.3055, -32.0851, -85.1022, 0.55", "32.3487, -32.9943, -85.1365, 0.28", "33.311, -34.0059, -85.0506, 0.55", "34.1609, -35.1161, -84.9007, 0.28", "34.5316, -35.6902, -84.8503, 0.55", "35.3948, -37.1993, -84.6617, 0.28", "35.6204, -37.6496, -84.6833, 0.55", "36.9072, -40.2275, -84.9632, 0.28", "37.5449, -41.4138, -85.2562, 0.55", "39.0177, -43.9347, -86.186, 0.28", "39.6064, -44.8577, -86.6395, 0.55", "41.6782, -47.8757, -88.327, 0.28", "42.1884, -48.6082, -88.7717, 0.55", "43.7356, -50.9293, -90.2747, 0.28", "44.0616, -51.4765, -90.5819, 0.55", "44.8699, -52.9258, -91.3815, 0.28", "45.3505, -53.7639, -91.9345, 0.55", "45.8562, -54.583, -92.5485, 0.55", "46.8658, -56.2176, -93.7598, 0.28", "47.5989, -57.2192, -94.6358, 0.55", "50.0007, -59.6707, -97.4474, 0.28", "50.9471, -60.4502, -98.5844, 0.55", "51.6131, -60.9397, -99.3535, 0.28", "52.3011, -61.3799, -100.119, 0.55", "54.464, -62.594, -102.429, 0.28", "56.1178, -63.5397, -104.129, 0.55", "58.9997, -65.3693, -106.795, 0.28", "59.9094, -65.9377, -107.629, 0.55", "61.6986, -66.9785, -109.065, 0.28", "62.3067, -67.32, -109.493, 0.55", "63.3302, -67.8682, -110.002, 0.28", "64.2465, -68.3294, -110.373, 0.55", "66.768, -69.4635, -111.122, 0.28", "69.6697, -70.6544, -111.932, 0.28", "71.151, -71.1973, -112.238, 0.28", "72.6371, -71.6986, -112.633, 0.55", "74.8101, -72.3367, -113.217, 0.28", "75.7792, -72.6073, -113.456, 0.83", "78.2592, -73.3304, -113.975, 0.28", "79.3288, -73.6654, -114.259, 0.55", "84.0043, -75.3008, -115.724, 0.28", "86.3203, -76.1402, -116.642, 0.28", "87.9904, -76.7478, -117.418, 0.55", "88.9472, -77.119, -117.979, 0.55", "91.4527, -78.134, -119.673, 0.28", "93.7743, -79.1868, -121.356, 0.55", "95.886, -80.2121, -122.89, 0.28", "97.7757, -81.1652, -124.383, 0.55", "99.3406, -81.934, -125.606, 0.28", "100.64, -82.4705, -126.534, 0.55", "103.808, -83.5886, -128.619, 0.28", "105.427, -84.1542, -129.608, 0.55", "107.875, -85.0123, -131.004, 0.28", "109.89, -85.6582, -132.098, 0.55", "114.61, -86.9663, -134.661, 0.28", "116.512, -87.3892, -135.831, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.04434, -126.498, 95.3563, 0.55", "-8.17305, -136.717, 99.9664, 0.55", "-8.04187, -147.743, 101.804, 0.55", "-8.08779, -158.373, 105.312, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.04434, -126.498, 95.3563, 0.55", "-6.70549, -135.067, 101.114, 0.55", "-6.30315, -142.342, 108.606, 0.55", "-5.39713, -147.991, 117.414, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.2916, -127.032, 96.0834, 0.55", "-10.9906, -134.721, 100.439, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.2916, -127.032, 96.0834, 0.55", "-13.0041, -136.225, 102.059, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.75233, -95.4587, 8.20675, 0.83", "9.44792, -98.1214, 8.37038, 0.83", "10.2198, -100.361, 8.57891, 0.83", "10.9871, -102.587, 8.78619, 0.83", "11.7158, -104.7, 8.98305, 0.83", "12.8387, -107.958, 9.28641, 0.83", "13.9536, -111.192, 9.58758, 0.83", "15.0017, -113.325, 9.90472, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.75233, -95.4587, 8.20675, 0.55", "10.4564, -97.8383, 7.99401, 0.55", "11.6983, -99.714, 7.51244, 0.55", "12.5255, -101.108, 7.03428, 0.55", "13.2089, -102.752, 6.32248, 0.83", "13.8177, -104.63, 5.31755, 0.55", "14.4133, -106.468, 4.3346, 0.83", "14.9116, -108.47, 3.11199, 0.55", "15.1763, -109.638, 2.29843, 0.83", "15.8197, -113.43, -0.586254, 0.55", "16.0502, -116.414, -2.98052, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.92204, -100.927, 36.3467, 0.55", "-12.5209, -107.894, 40.7357, 0.55", "-17.3581, -114.024, 45.2504, 0.55", "-22.8381, -119.337, 50.1051, 0.55", "-29.0924, -123.63, 55.0822, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.92204, -100.927, 36.3467, 0.55", "-11.0176, -105.719, 40.2071, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.0017, -113.325, 9.90472, 0.55", "15.3906, -114.983, 10.3247, 0.55", "15.9691, -117.1, 10.8547, 0.55", "16.5074, -119.1, 11.3466, 0.55", "16.8617, -120.521, 11.6935, 0.55", "17.4436, -123.059, 12.3061, 0.55", "19.0171, -130.216, 13.8164, 0.55", "19.513, -132.66, 14.2105, 0.55", "19.8014, -134.39, 14.4225, 0.55", "20.0222, -136.379, 14.5415, 0.55", "20.0719, -137.925, 14.558, 0.55", "20.1506, -141.559, 14.4134, 0.55", "20.1412, -144.309, 14.3727, 0.55", "20.2086, -146.115, 14.3463, 0.55", "20.5517, -150.781, 14.4555, 0.55", "20.8732, -153.905, 14.6398, 0.55", "21.4727, -157.918, 15.0198, 0.55", "22.4605, -162.451, 15.6498, 0.55", "23.3585, -165.476, 16.0972, 0.55", "23.956, -167.263, 16.3621, 0.55", "24.4817, -168.909, 16.6263, 0.55", "25.097, -171.003, 16.8653, 0.55", "26.2776, -176.071, 17.2495, 0.55", "26.7252, -178.044, 17.2975, 0.55", "27.1761, -180.237, 17.3803, 0.55", "27.8215, -183.529, 17.5133, 0.55", "28.2547, -186.048, 17.7211, 0.55", "28.5464, -188.432, 18.0022, 0.55", "28.7544, -190.696, 18.3476, 0.55", "28.9556, -192.9, 18.7359, 0.55", "29.0934, -194.471, 18.9941, 0.55", "29.2619, -197.048, 19.3419, 0.55", "29.2536, -200.157, 19.6275, 0.55", "29.1902, -201.679, 19.6571, 0.55", "29.068, -203.023, 19.6018, 0.55", "28.8044, -205.58, 19.3057, 0.55", "28.5922, -207.203, 19.0994, 0.55", "28.4026, -209.201, 18.8801, 0.55", "28.2966, -210.594, 18.8241, 0.55", "28.083, -214.2, 18.8254, 0.55", "28.0232, -216.881, 19.0111, 0.55", "28.141, -221.0, 19.5891, 0.55", "28.4494, -223.645, 20.095, 0.55", "28.8276, -226.413, 20.7067, 0.28", "28.9953, -227.52, 21.0063, 0.28", "29.5826, -230.187, 21.9179, 0.28", "30.2614, -232.634, 22.9188, 0.28", "31.637, -235.87, 24.2504, 0.28", "33.959, -243.37, 25.1508, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.0017, -113.325, 9.90472, 0.55", "16.0737, -113.804, 9.42201, 0.55", "18.3781, -114.963, 8.59271, 0.55", "20.4173, -116.074, 7.96195, 0.28", "22.6432, -117.319, 7.34616, 0.55", "24.0913, -118.088, 7.12186, 0.28", "26.7253, -119.441, 6.91004, 0.55", "27.9813, -120.115, 7.06557, 0.28", "28.4716, -120.35, 7.17509, 0.28", "29.3245, -120.683, 7.35942, 0.55", "32.5541, -121.79, 7.87296, 0.28", "33.9081, -122.226, 8.04675, 0.55", "37.8179, -123.542, 8.23233, 0.28", "39.8789, -124.209, 8.2098, 0.28", "42.3818, -125.081, 8.07086, 0.55", "45.9596, -126.471, 7.62289, 0.28", "46.419, -126.661, 7.52075, 0.55", "48.6021, -127.612, 6.89166, 0.28", "48.7883, -127.703, 6.81674, 0.55", "50.4589, -128.725, 6.23517, 0.28", "51.2815, -129.269, 6.01002, 0.55", "58.0854, -133.323, 4.14565, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-29.0924, -123.63, 55.0822, 0.55", "-32.4726, -128.117, 63.6577, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-29.0924, -123.63, 55.0822, 0.55", "-35.6367, -131.855, 58.8507, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_BP_bc09d28ed4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.07628, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.83038, 8.81845, 3.00096, 0.83 ) }
    dend_43 { pt3dadd( -7.71786, 11.7563, 3.58724, 1.11 ) }
    dend_43 { pt3dadd( -10.01, 13.4872, 3.89222, 0.83 ) }
    dend_43 { pt3dadd( -12.2368, 15.1544, 4.16547, 0.83 ) }
    dend_43 { pt3dadd( -13.5553, 16.105, 4.31521, 1.11 ) }
    dend_43 { pt3dadd( -17.6841, 19.0756, 4.79511, 1.11 ) }
    dend_43 { pt3dadd( -25.0689, 24.1614, 5.64345, 0.83 ) }
    dend_43 { pt3dadd( -27.7294, 25.9237, 5.92358, 0.83 ) }
    dend_43 { pt3dadd( -29.8362, 27.2779, 6.09759, 0.83 ) }
    dend_43 { pt3dadd( -31.8907, 28.6199, 6.24821, 0.83 ) }
    dend_43 { pt3dadd( -33.5631, 29.726, 6.32947, 0.55 ) }
    dend_43 { pt3dadd( -34.8201, 30.4749, 6.41195, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.31578, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.16493, 5.90713, -6.09643, 0.55 ) }
    dend_28 { pt3dadd( 6.20695, 6.33782, -6.55245, 0.55 ) }
    dend_28 { pt3dadd( 7.39186, 6.44654, -7.15586, 0.83 ) }
    dend_28 { pt3dadd( 9.2672, 6.56224, -8.27674, 0.55 ) }
    dend_28 { pt3dadd( 10.1724, 6.61809, -8.81781, 1.38 ) }
    dend_28 { pt3dadd( 12.3983, 6.75542, -10.1481, 0.55 ) }
    dend_28 { pt3dadd( 13.3463, 6.70892, -10.7829, 0.83 ) }
    dend_28 { pt3dadd( 18.2501, 5.85609, -14.3495, 0.55 ) }
    dend_28 { pt3dadd( 18.7246, 5.74141, -14.7418, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.03197, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.681767, -10.0172, 3.158, 1.11 ) }
    dend_1 { pt3dadd( -0.725621, -13.7898, 4.54513, 1.11 ) }
    dend_1 { pt3dadd( -0.743481, -15.3262, 5.11006, 0.83 ) }
    dend_1 { pt3dadd( -0.767209, -17.3674, 5.86059, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.41203, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.908448, 9.60713, -1.37907, 1.11 ) }
    dend_0 { pt3dadd( 1.02655, 11.5407, -1.36539, 1.11 ) }
    dend_0 { pt3dadd( 1.21649, 14.6954, -1.22451, 1.38 ) }
    dend_0 { pt3dadd( 1.23035, 14.871, -1.21359, 1.38 ) }
    dend_0 { pt3dadd( 1.5372, 17.0417, -1.0625, 0.83 ) }
    dend_0 { pt3dadd( 1.96349, 19.335, -0.781464, 0.83 ) }
    dend_0 { pt3dadd( 2.68799, 21.9193, -0.153364, 0.83 ) }
    dend_0 { pt3dadd( 3.09385, 22.8969, 0.202945, 0.83 ) }
    dend_0 { pt3dadd( 3.48951, 23.6029, 0.529832, 1.11 ) }
    dend_0 { pt3dadd( 4.63542, 25.3192, 1.36665, 0.55 ) }
    dend_0 { pt3dadd( 5.96681, 27.108, 2.36798, 0.83 ) }
    dend_0 { pt3dadd( 7.69356, 28.9411, 3.49218, 0.55 ) }
    dend_0 { pt3dadd( 8.568, 29.6996, 3.99632, 0.83 ) }
    dend_0 { pt3dadd( 9.79482, 30.7259, 4.79069, 0.55 ) }
    dend_0 { pt3dadd( 11.3206, 32.0318, 5.87424, 0.55 ) }
    dend_0 { pt3dadd( 13.4624, 33.9998, 7.54112, 0.55 ) }
    dend_0 { pt3dadd( 15.8241, 36.251, 9.38198, 0.55 ) }
    dend_0 { pt3dadd( 17.3269, 37.7122, 10.7728, 0.55 ) }
    dend_0 { pt3dadd( 19.1846, 39.5602, 12.7519, 0.55 ) }
    dend_0 { pt3dadd( 19.5726, 39.9304, 13.2029, 0.83 ) }
    dend_0 { pt3dadd( 20.6018, 40.9086, 14.4789, 0.55 ) }
    dend_0 { pt3dadd( 21.463, 41.67, 15.4774, 0.83 ) }
    dend_0 { pt3dadd( 23.4549, 43.7576, 17.8488, 0.55 ) }
    dend_0 { pt3dadd( 24.1934, 44.5201, 18.5323, 0.83 ) }
    dend_0 { pt3dadd( 24.8721, 45.0798, 18.9853, 0.55 ) }
    dend_0 { pt3dadd( 25.5383, 45.5601, 19.324, 0.83 ) }
    dend_0 { pt3dadd( 27.0044, 46.4492, 19.9223, 0.83 ) }
    dend_0 { pt3dadd( 28.9345, 47.6611, 20.5441, 0.83 ) }
    dend_0 { pt3dadd( 30.1125, 48.4643, 20.7995, 0.55 ) }
    dend_0 { pt3dadd( 31.0125, 49.1615, 20.9994, 0.55 ) }
    dend_0 { pt3dadd( 33.369, 50.9625, 21.4883, 0.83 ) }
    dend_0 { pt3dadd( 34.8875, 52.1174, 21.7434, 0.55 ) }
    dend_0 { pt3dadd( 37.1863, 53.808, 22.0377, 0.55 ) }
    dend_0 { pt3dadd( 39.2855, 55.2224, 22.2235, 0.55 ) }
    dend_0 { pt3dadd( 41.1591, 56.4189, 22.3394, 0.55 ) }
    dend_0 { pt3dadd( 43.5184, 57.818, 22.3785, 0.55 ) }
    dend_0 { pt3dadd( 44.9548, 58.4984, 22.3554, 0.55 ) }
    dend_0 { pt3dadd( 45.9262, 58.8781, 22.2223, 0.55 ) }
    dend_0 { pt3dadd( 47.2061, 59.1521, 21.9356, 0.55 ) }
    dend_0 { pt3dadd( 49.1014, 59.2554, 21.3489, 0.55 ) }
    dend_0 { pt3dadd( 50.2778, 59.171, 20.9364, 0.55 ) }
    dend_0 { pt3dadd( 52.0039, 59.001, 20.4567, 0.55 ) }
    dend_0 { pt3dadd( 55.3123, 58.7801, 19.8422, 0.55 ) }
    dend_0 { pt3dadd( 57.922, 58.7245, 19.5472, 0.55 ) }
    dend_0 { pt3dadd( 60.7005, 58.7944, 19.4008, 0.55 ) }
    dend_0 { pt3dadd( 62.4919, 58.8984, 19.448, 0.55 ) }
    dend_0 { pt3dadd( 67.1716, 59.577, 19.8765, 0.55 ) }
    dend_0 { pt3dadd( 69.9568, 60.184, 20.3371, 0.55 ) }
    dend_0 { pt3dadd( 72.0595, 60.7701, 20.8755, 0.55 ) }
    dend_0 { pt3dadd( 73.3434, 61.3288, 21.2518, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 74.8343, 62.1674, 21.6813, 0.55 ) }
    dend_0 { pt3dadd( 77.3478, 63.8289, 22.1895, 0.55 ) }
    dend_0 { pt3dadd( 77.9198, 64.2297, 22.2282, 0.55 ) }
    dend_0 { pt3dadd( 79.5527, 65.2998, 22.2323, 0.55 ) }
    dend_0 { pt3dadd( 81.0555, 66.4438, 22.2308, 0.83 ) }
    dend_0 { pt3dadd( 81.8749, 67.0788, 22.2171, 0.55 ) }
    dend_0 { pt3dadd( 83.1013, 68.1718, 22.1489, 0.83 ) }
    dend_0 { pt3dadd( 89.6663, 74.0059, 23.4747, 0.83 ) }
    dend_0 { pt3dadd( 95.3736, 80.7311, 24.1913, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -34.8201, 30.4749, 6.41195, 0.55 ) }
    dend_55 { pt3dadd( -36.3578, 31.7112, 5.38894, 0.55 ) }
    dend_55 { pt3dadd( -38.03, 33.0555, 4.27652, 0.55 ) }
    dend_55 { pt3dadd( -40.0479, 34.6777, 2.93407, 0.55 ) }
    dend_55 { pt3dadd( -41.7141, 36.0173, 1.82557, 0.83 ) }
    dend_55 { pt3dadd( -43.1104, 37.1398, 0.896652, 0.55 ) }
    dend_55 { pt3dadd( -45.7022, 39.2234, -0.82756, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -34.8201, 30.4749, 6.41195, 0.55 ) }
    dend_44 { pt3dadd( -37.2787, 30.9806, 5.99555, 0.55 ) }
    dend_44 { pt3dadd( -39.912, 31.4191, 5.80956, 0.55 ) }
    dend_44 { pt3dadd( -42.9026, 31.9062, 5.67136, 0.55 ) }
    dend_44 { pt3dadd( -47.2591, 32.5371, 5.86614, 0.55 ) }
    dend_44 { pt3dadd( -50.9217, 32.9433, 6.28006, 0.55 ) }
    dend_44 { pt3dadd( -54.7737, 33.3002, 6.87301, 0.55 ) }
    dend_44 { pt3dadd( -58.5242, 33.3728, 7.82658, 0.55 ) }
    dend_44 { pt3dadd( -61.7747, 33.1113, 8.93391, 0.55 ) }
    dend_44 { pt3dadd( -65.8541, 32.4839, 10.7198, 0.55 ) }
    dend_44 { pt3dadd( -67.6438, 32.0703, 11.7283, 0.55 ) }
    dend_44 { pt3dadd( -69.5822, 31.5983, 12.8968, 0.55 ) }
    dend_44 { pt3dadd( -72.9945, 30.5336, 14.7911, 0.55 ) }
    dend_44 { pt3dadd( -74.7934, 29.9923, 15.5237, 0.55 ) }
    dend_44 { pt3dadd( -76.6775, 29.3712, 16.2763, 0.55 ) }
    dend_44 { pt3dadd( -78.9043, 28.6755, 16.9521, 0.55 ) }
    dend_44 { pt3dadd( -81.3197, 27.9722, 17.6251, 0.55 ) }
    dend_44 { pt3dadd( -84.7625, 26.9658, 18.5111, 0.55 ) }
    dend_44 { pt3dadd( -89.333, 25.9452, 19.3101, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 18.7246, 5.74141, -14.7418, 0.55 ) }
    dend_34 { pt3dadd( 22.6084, 6.40711, -15.5729, 0.55 ) }
    dend_34 { pt3dadd( 24.8233, 6.72336, -16.3804, 0.55 ) }
    dend_34 { pt3dadd( 26.9972, 6.94782, -17.2257, 0.55 ) }
    dend_34 { pt3dadd( 28.4756, 7.04434, -17.8132, 0.55 ) }
    dend_34 { pt3dadd( 30.6309, 7.13421, -18.6643, 0.55 ) }
    dend_34 { pt3dadd( 35.0879, 7.26288, -20.584, 0.55 ) }
    dend_34 { pt3dadd( 40.1311, 7.43982, -23.1038, 0.55 ) }
    dend_34 { pt3dadd( 42.5538, 7.40871, -24.5224, 0.55 ) }
    dend_34 { pt3dadd( 43.8451, 7.37663, -25.374, 0.55 ) }
    dend_34 { pt3dadd( 45.2602, 7.35896, -26.3648, 0.55 ) }
    dend_34 { pt3dadd( 47.7772, 7.25616, -28.1357, 0.55 ) }
    dend_34 { pt3dadd( 48.6839, 7.17149, -28.8196, 0.55 ) }
    dend_34 { pt3dadd( 52.5257, 6.9647, -32.002, 0.55 ) }
    dend_34 { pt3dadd( 55.2444, 6.89977, -34.4535, 0.55 ) }
    dend_34 { pt3dadd( 56.8122, 6.90086, -35.9036, 0.55 ) }
    dend_34 { pt3dadd( 58.3742, 6.888, -37.3512, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 18.7246, 5.74141, -14.7418, 0.83 ) }
    dend_29 { pt3dadd( 20.4902, 7.23546, -14.9693, 0.83 ) }
    dend_29 { pt3dadd( 21.5032, 8.07765, -15.1503, 0.55 ) }
    dend_29 { pt3dadd( 22.9985, 9.32259, -15.5649, 0.83 ) }
    dend_29 { pt3dadd( 24.0016, 10.1798, -15.8833, 0.55 ) }
    dend_29 { pt3dadd( 25.3765, 11.4061, -16.3089, 0.83 ) }
    dend_29 { pt3dadd( 27.0191, 12.9296, -16.7605, 0.55 ) }
    dend_29 { pt3dadd( 27.8541, 13.6386, -16.9346, 0.55 ) }
    dend_29 { pt3dadd( 29.813, 15.0241, -17.122, 0.83 ) }
    dend_29 { pt3dadd( 31.6119, 16.1114, -16.9901, 0.55 ) }
    dend_29 { pt3dadd( 32.6118, 16.7304, -16.8103, 0.83 ) }
    dend_29 { pt3dadd( 34.0936, 17.7295, -16.3776, 0.55 ) }
    dend_29 { pt3dadd( 36.1932, 19.2679, -15.4669, 0.55 ) }
    dend_29 { pt3dadd( 39.1244, 21.2792, -13.9995, 0.55 ) }
    dend_29 { pt3dadd( 41.9222, 23.1359, -12.3624, 0.55 ) }
    dend_29 { pt3dadd( 44.1398, 24.5912, -11.0158, 0.55 ) }
    dend_29 { pt3dadd( 47.791, 27.0129, -8.77875, 0.55 ) }
    dend_29 { pt3dadd( 50.4434, 28.8799, -7.09547, 0.55 ) }
    dend_29 { pt3dadd( 52.0148, 30.1643, -6.04604, 0.55 ) }
    dend_29 { pt3dadd( 54.8495, 32.8591, -4.15591, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.767209, -17.3674, 5.86059, 0.83 ) }
    dend_11 { pt3dadd( -1.16324, -21.0389, 5.71985, 0.83 ) }
    dend_11 { pt3dadd( -1.54909, -24.616, 5.58273, 0.83 ) }
    dend_11 { pt3dadd( -1.97989, -28.6098, 5.42963, 0.83 ) }
    dend_11 { pt3dadd( -2.20485, -30.6954, 5.34969, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.767209, -17.3674, 5.86059, 0.55 ) }
    dend_2 { pt3dadd( -0.0405613, -19.2153, 7.10375, 0.55 ) }
    dend_2 { pt3dadd( 0.627833, -21.4727, 8.74344, 0.55 ) }
    dend_2 { pt3dadd( 1.05371, -24.4204, 11.0478, 0.55 ) }
    dend_2 { pt3dadd( 1.13973, -25.5643, 11.9815, 0.83 ) }
    dend_2 { pt3dadd( 1.11149, -28.4784, 14.7266, 0.55 ) }
    dend_2 { pt3dadd( 0.972669, -29.9802, 16.1833, 0.55 ) }
    dend_2 { pt3dadd( 0.64892, -32.8998, 19.1485, 0.83 ) }
    dend_2 { pt3dadd( 0.290801, -35.0652, 21.5018, 0.55 ) }
    dend_2 { pt3dadd( -0.170248, -36.8472, 23.4273, 0.55 ) }
    dend_2 { pt3dadd( -1.12671, -40.2199, 27.0168, 0.55 ) }
    dend_2 { pt3dadd( -1.8887, -42.908, 29.8449, 0.55 ) }
    dend_2 { pt3dadd( -2.45201, -45.0642, 32.1399, 0.55 ) }
    dend_2 { pt3dadd( -2.92561, -47.3565, 34.4918, 0.28 ) }
    dend_2 { pt3dadd( -3.04304, -48.3132, 35.4273, 0.55 ) }
    dend_2 { pt3dadd( -3.22061, -50.0809, 37.0483, 0.28 ) }
    dend_2 { pt3dadd( -3.14559, -52.8482, 39.1081, 0.55 ) }
    dend_2 { pt3dadd( -5.12909, -62.0002, 46.6475, 0.55 ) }
    dend_2 { pt3dadd( -7.28067, -70.4519, 54.961, 0.55 ) }
    dend_2 { pt3dadd( -8.73268, -77.4138, 64.7494, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -45.7022, 39.2234, -0.82756, 0.55 ) }
    dend_61 { pt3dadd( -48.6221, 39.2773, 0.066617, 0.55 ) }
    dend_61 { pt3dadd( -49.8782, 39.2079, 0.561544, 0.83 ) }
    dend_61 { pt3dadd( -51.3821, 39.0214, 1.29302, 0.55 ) }
    dend_61 { pt3dadd( -52.5509, 38.8559, 1.94075, 0.83 ) }
    dend_61 { pt3dadd( -55.6089, 38.5176, 3.63838, 0.55 ) }
    dend_61 { pt3dadd( -56.7683, 38.4035, 4.29282, 0.28 ) }
    dend_61 { pt3dadd( -58.7292, 38.1964, 5.52437, 0.55 ) }
    dend_61 { pt3dadd( -61.3581, 37.9337, 7.16994, 0.55 ) }
    dend_61 { pt3dadd( -63.3388, 37.7538, 8.34417, 0.55 ) }
    dend_61 { pt3dadd( -65.9705, 37.5309, 9.84266, 0.28 ) }
    dend_61 { pt3dadd( -66.6404, 37.4946, 10.1643, 0.55 ) }
    dend_61 { pt3dadd( -68.0176, 37.4447, 10.7891, 0.28 ) }
    dend_61 { pt3dadd( -68.9374, 37.4505, 11.1434, 0.55 ) }
    dend_61 { pt3dadd( -70.7863, 37.487, 11.7219, 0.28 ) }
    dend_61 { pt3dadd( -71.8617, 37.4687, 11.9983, 0.55 ) }
    dend_61 { pt3dadd( -73.7625, 37.3105, 12.4686, 0.28 ) }
    dend_61 { pt3dadd( -75.0311, 37.207, 12.7428, 0.55 ) }
    dend_61 { pt3dadd( -83.3891, 35.2476, 17.3538, 0.55 ) }
    dend_61 { pt3dadd( -91.2307, 32.2752, 22.3035, 0.55 ) }
    dend_61 { pt3dadd( -98.8151, 28.4386, 27.033, 0.55 ) }
    dend_61 { pt3dadd( -106.266, 23.671, 31.0318, 0.55 ) }
    dend_61 { pt3dadd( -112.887, 18.9525, 36.3499, 0.55 ) }
    dend_61 { pt3dadd( -120.128, 14.7027, 41.2493, 0.55 ) }
    dend_61 { pt3dadd( -127.554, 11.8527, 46.872, 0.55 ) }
    dend_61 { pt3dadd( -134.919, 8.31726, 52.1614, 0.55 ) }
    dend_61 { pt3dadd( -142.168, 5.30457, 57.9261, 0.55 ) }
    dend_61 { pt3dadd( -149.04, 2.06266, 64.016, 0.55 ) }
    dend_61 { pt3dadd( -155.044, -2.33107, 70.2778, 0.55 ) }
    dend_61 { pt3dadd( -161.174, -5.92434, 76.9333, 0.55 ) }
    dend_61 { pt3dadd( -167.359, -10.3336, 83.0031, 0.55 ) }
    dend_61 { pt3dadd( -172.528, -15.2923, 89.5679, 0.55 ) }
    dend_61 { pt3dadd( -176.264, -19.9017, 97.2753, 0.55 ) }
    dend_61 { pt3dadd( -179.805, -26.0124, 103.914, 0.55 ) }
    dend_61 { pt3dadd( -182.006, -32.3951, 110.863, 0.55 ) }
    dend_61 { pt3dadd( -184.745, -38.4091, 117.962, 0.55 ) }
    dend_61 { pt3dadd( -188.522, -43.738, 125.15, 0.55 ) }
    dend_61 { pt3dadd( -194.211, -47.4705, 132.113, 0.55 ) }
    dend_61 { pt3dadd( -199.093, -52.2739, 139.01, 0.55 ) }
    dend_61 { pt3dadd( -202.373, -55.8799, 147.443, 0.55 ) }
    dend_61 { pt3dadd( -207.106, -58.653, 155.497, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.7022, 39.2234, -0.82756, 0.55 ) }
    dend_56 { pt3dadd( -46.6398, 41.0583, -3.06721, 0.55 ) }
    dend_56 { pt3dadd( -47.0801, 43.0228, -5.32866, 0.55 ) }
    dend_56 { pt3dadd( -47.386, 45.2317, -7.58978, 0.55 ) }
    dend_56 { pt3dadd( -47.5776, 46.6148, -9.00567, 0.55 ) }
    dend_56 { pt3dadd( -47.927, 49.1379, -11.5884, 0.83 ) }
    dend_56 { pt3dadd( -48.1826, 50.9837, -13.478, 0.55 ) }
    dend_56 { pt3dadd( -48.2116, 53.564, -16.1602, 0.83 ) }
    dend_56 { pt3dadd( -47.9991, 55.1222, -17.5138, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -89.333, 25.9452, 19.3101, 0.28 ) }
    dend_48 { pt3dadd( -90.4838, 23.9718, 18.6511, 0.28 ) }
    dend_48 { pt3dadd( -91.0301, 23.1315, 18.2886, 0.28 ) }
    dend_48 { pt3dadd( -91.7377, 21.9465, 17.7337, 0.55 ) }
    dend_48 { pt3dadd( -92.3213, 20.9031, 17.2581, 0.28 ) }
    dend_48 { pt3dadd( -93.1831, 19.3111, 16.5568, 0.55 ) }
    dend_48 { pt3dadd( -95.5841, 14.622, 14.5863, 0.28 ) }
    dend_48 { pt3dadd( -96.3596, 12.9894, 13.7601, 0.55 ) }
    dend_48 { pt3dadd( -97.5294, 10.4833, 12.3984, 0.28 ) }
    dend_48 { pt3dadd( -98.1971, 8.99042, 11.5135, 0.55 ) }
    dend_48 { pt3dadd( -98.6569, 7.96412, 10.8769, 0.28 ) }
    dend_48 { pt3dadd( -99.1814, 6.78518, 10.1569, 0.55 ) }
    dend_48 { pt3dadd( -100.766, 2.83799, 7.86978, 0.28 ) }
    dend_48 { pt3dadd( -101.262, 1.64851, 7.13131, 0.55 ) }
    dend_48 { pt3dadd( -102.125, -0.149536, 5.79174, 0.28 ) }
    dend_48 { pt3dadd( -102.837, -1.28763, 4.81301, 0.28 ) }
    dend_48 { pt3dadd( -103.482, -2.04138, 4.11546, 0.55 ) }
    dend_48 { pt3dadd( -105.747, -4.15302, 2.18966, 0.28 ) }
    dend_48 { pt3dadd( -106.805, -5.00665, 1.41969, 0.55 ) }
    dend_48 { pt3dadd( -109.39, -6.9341, -0.483538, 0.28 ) }
    dend_48 { pt3dadd( -111.981, -8.62878, -2.23873, 0.28 ) }
    dend_48 { pt3dadd( -114.801, -10.2288, -4.03583, 0.28 ) }
    dend_48 { pt3dadd( -116.098, -10.8257, -4.73803, 0.55 ) }
    dend_48 { pt3dadd( -122.319, -17.8503, -9.65573, 0.55 ) }
    dend_48 { pt3dadd( -129.364, -25.1633, -12.6743, 0.55 ) }
    dend_48 { pt3dadd( -136.174, -31.9156, -17.2033, 0.55 ) }
    dend_48 { pt3dadd( -143.105, -37.9276, -22.5647, 0.55 ) }
    dend_48 { pt3dadd( -150.069, -43.0984, -28.7442, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -89.333, 25.9452, 19.3101, 0.55 ) }
    dend_45 { pt3dadd( -89.9577, 25.9116, 19.3306, 0.55 ) }
    dend_45 { pt3dadd( -91.7404, 25.7821, 19.6115, 0.55 ) }
    dend_45 { pt3dadd( -92.4142, 25.7115, 19.7488, 0.55 ) }
    dend_45 { pt3dadd( -94.0022, 25.4966, 20.0876, 0.55 ) }
    dend_45 { pt3dadd( -96.4333, 25.2081, 20.4995, 0.55 ) }
    dend_45 { pt3dadd( -97.6933, 25.0983, 20.698, 0.28 ) }
    dend_45 { pt3dadd( -99.6522, 24.8932, 20.9634, 0.55 ) }
    dend_45 { pt3dadd( -101.103, 24.7211, 21.1053, 0.55 ) }
    dend_45 { pt3dadd( -101.716, 24.6444, 21.1659, 0.28 ) }
    dend_45 { pt3dadd( -105.392, 24.1831, 21.5243, 0.55 ) }
    dend_45 { pt3dadd( -107.104, 23.9095, 21.5779, 0.28 ) }
    dend_45 { pt3dadd( -109.401, 23.5537, 21.5175, 0.28 ) }
    dend_45 { pt3dadd( -111.369, 23.2933, 21.357, 0.55 ) }
    dend_45 { pt3dadd( -119.165, 23.0862, 22.5453, 0.55 ) }
    dend_45 { pt3dadd( -126.78, 22.5433, 24.528, 0.55 ) }
    dend_45 { pt3dadd( -134.066, 21.0866, 27.1655, 0.55 ) }
    dend_45 { pt3dadd( -141.155, 20.796, 30.6131, 0.55 ) }
    dend_45 { pt3dadd( -147.39, 19.9943, 35.3789, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -152.565, 19.3905, 41.3, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 58.3742, 6.888, -37.3512, 0.55 ) }
    dend_42 { pt3dadd( 61.6725, 7.75644, -40.2926, 0.55 ) }
    dend_42 { pt3dadd( 62.7161, 7.97709, -41.2848, 0.55 ) }
    dend_42 { pt3dadd( 64.0246, 8.21176, -42.5059, 0.55 ) }
    dend_42 { pt3dadd( 66.3973, 8.60011, -44.8629, 0.55 ) }
    dend_42 { pt3dadd( 68.8777, 8.89514, -47.3747, 0.55 ) }
    dend_42 { pt3dadd( 70.0958, 8.94502, -48.5603, 0.83 ) }
    dend_42 { pt3dadd( 71.1003, 8.90758, -49.6064, 0.55 ) }
    dend_42 { pt3dadd( 71.8533, 8.80807, -50.4597, 0.83 ) }
    dend_42 { pt3dadd( 73.6779, 8.29796, -52.6171, 0.55 ) }
    dend_42 { pt3dadd( 75.187, 7.73595, -54.3886, 0.55 ) }
    dend_42 { pt3dadd( 76.9249, 7.0878, -56.3375, 0.55 ) }
    dend_42 { pt3dadd( 78.8565, 6.41697, -58.5538, 0.55 ) }
    dend_42 { pt3dadd( 80.1528, 5.93259, -60.0698, 0.55 ) }
    dend_42 { pt3dadd( 81.6147, 5.37613, -61.8271, 0.55 ) }
    dend_42 { pt3dadd( 82.8743, 4.92964, -63.4408, 0.55 ) }
    dend_42 { pt3dadd( 83.661, 4.7091, -64.572, 0.55 ) }
    dend_42 { pt3dadd( 84.6442, 4.28085, -66.8403, 0.55 ) }
    dend_42 { pt3dadd( 85.1794, 3.96636, -68.2522, 0.55 ) }
    dend_42 { pt3dadd( 85.6349, 3.45723, -70.113, 0.55 ) }
    dend_42 { pt3dadd( 86.2567, 2.49621, -73.244, 0.55 ) }
    dend_42 { pt3dadd( 86.3842, 2.25255, -73.9466, 0.28 ) }
    dend_42 { pt3dadd( 88.0412, -0.800303, -82.479, 0.28 ) }
    dend_42 { pt3dadd( 88.6035, -1.67583, -84.9873, 0.83 ) }
    dend_42 { pt3dadd( 90.8345, -4.92912, -93.8695, 0.83 ) }
    dend_42 { pt3dadd( 91.9919, -6.6, -97.9775, 0.83 ) }
    dend_42 { pt3dadd( 92.5534, -7.3406, -99.6345, 0.55 ) }
    dend_42 { pt3dadd( 93.1998, -8.06547, -101.251, 0.55 ) }
    dend_42 { pt3dadd( 94.9971, -9.45479, -104.248, 0.55 ) }
    dend_42 { pt3dadd( 96.9244, -10.6882, -106.885, 0.28 ) }
    dend_42 { pt3dadd( 97.5141, -10.8679, -107.032, 0.55 ) }
    dend_42 { pt3dadd( 98.8169, -11.1208, -106.907, 0.28 ) }
    dend_42 { pt3dadd( 99.6226, -11.2084, -106.721, 0.55 ) }
    dend_42 { pt3dadd( 100.464, -11.3021, -106.455, 0.28 ) }
    dend_42 { pt3dadd( 101.473, -11.3606, -106.096, 0.55 ) }
    dend_42 { pt3dadd( 102.976, -11.3899, -105.726, 0.28 ) }
    dend_42 { pt3dadd( 104.184, -11.454, -105.463, 0.55 ) }
    dend_42 { pt3dadd( 105.515, -11.4516, -105.289, 0.28 ) }
    dend_42 { pt3dadd( 107.321, -11.4613, -105.212, 0.55 ) }
    dend_42 { pt3dadd( 109.343, -11.441, -105.252, 0.55 ) }
    dend_42 { pt3dadd( 111.118, -11.4164, -105.407, 0.28 ) }
    dend_42 { pt3dadd( 113.572, -11.3766, -105.76, 0.55 ) }
    dend_42 { pt3dadd( 117.801, -11.2467, -106.835, 0.55 ) }
    dend_42 { pt3dadd( 119.661, -11.1212, -107.547, 0.55 ) }
    dend_42 { pt3dadd( 120.457, -11.0448, -107.944, 0.83 ) }
    dend_42 { pt3dadd( 121.972, -10.9052, -108.841, 0.55 ) }
    dend_42 { pt3dadd( 123.02, -10.774, -109.536, 0.83 ) }
    dend_42 { pt3dadd( 125.836, -10.351, -111.446, 0.55 ) }
    dend_42 { pt3dadd( 127.56, -10.2161, -112.644, 0.28 ) }
    dend_42 { pt3dadd( 128.29, -10.1944, -113.06, 0.55 ) }
    dend_42 { pt3dadd( 130.3, -10.291, -113.955, 0.28 ) }
    dend_42 { pt3dadd( 131.007, -10.3829, -114.214, 0.55 ) }
    dend_42 { pt3dadd( 132.474, -10.6347, -114.513, 0.28 ) }
    dend_42 { pt3dadd( 133.977, -11.0012, -114.544, 0.55 ) }
    dend_42 { pt3dadd( 137.029, -11.8358, -114.064, 0.28 ) }
    dend_42 { pt3dadd( 138.442, -12.2625, -113.688, 0.55 ) }
    dend_42 { pt3dadd( 140.549, -12.9992, -113.006, 0.28 ) }
    dend_42 { pt3dadd( 143.213, -13.9087, -112.052, 0.55 ) }
    dend_42 { pt3dadd( 145.139, -14.5379, -111.336, 0.55 ) }
    dend_42 { pt3dadd( 148.471, -15.5218, -110.053, 0.28 ) }
    dend_42 { pt3dadd( 149.834, -15.8786, -109.643, 0.55 ) }
    dend_42 { pt3dadd( 152.174, -16.3956, -109.205, 0.28 ) }
    dend_42 { pt3dadd( 154.495, -16.7586, -108.947, 0.55 ) }
    dend_42 { pt3dadd( 155.759, -16.8398, -108.997, 0.28 ) }
    dend_42 { pt3dadd( 156.892, -16.7747, -109.149, 0.55 ) }
    dend_42 { pt3dadd( 160.079, -16.4405, -109.902, 0.28 ) }
    dend_42 { pt3dadd( 162.348, -16.0516, -110.495, 0.28 ) }
    dend_42 { pt3dadd( 164.314, -15.5753, -111.056, 0.55 ) }
    dend_42 { pt3dadd( 166.478, -15.0028, -111.794, 0.28 ) }
    dend_42 { pt3dadd( 167.023, -14.8225, -111.965, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 58.3742, 6.888, -37.3512, 0.55 ) }
    dend_35 { pt3dadd( 58.5633, 5.71767, -38.5954, 0.55 ) }
    dend_35 { pt3dadd( 58.6192, 4.71644, -39.5604, 0.28 ) }
    dend_35 { pt3dadd( 58.6717, 3.77673, -40.3531, 0.55 ) }
    dend_35 { pt3dadd( 58.9013, 1.77936, -42.0614, 0.28 ) }
    dend_35 { pt3dadd( 58.9113, 1.65898, -42.1889, 0.55 ) }
    dend_35 { pt3dadd( 58.9828, 1.04172, -42.919, 0.28 ) }
    dend_35 { pt3dadd( 58.9815, 0.560694, -43.6179, 0.55 ) }
    dend_35 { pt3dadd( 58.9405, 0.0802731, -44.4192, 0.28 ) }
    dend_35 { pt3dadd( 58.8573, -0.562478, -45.5515, 0.55 ) }
    dend_35 { pt3dadd( 58.6478, -2.1867, -48.3527, 0.55 ) }
    dend_35 { pt3dadd( 58.4322, -3.65602, -50.9404, 0.55 ) }
    dend_35 { pt3dadd( 58.2436, -4.82836, -53.0101, 0.55 ) }
    dend_35 { pt3dadd( 58.0291, -5.98503, -55.0145, 0.55 ) }
    dend_35 { pt3dadd( 57.9728, -6.2881, -55.5148, 0.28 ) }
    dend_35 { pt3dadd( 57.9264, -6.62205, -56.0135, 0.55 ) }
    dend_35 { pt3dadd( 57.9213, -7.10391, -56.6513, 0.28 ) }
    dend_35 { pt3dadd( 58.0275, -8.00288, -57.7016, 0.55 ) }
    dend_35 { pt3dadd( 58.4201, -9.82272, -59.3945, 0.55 ) }
    dend_35 { pt3dadd( 58.6438, -10.8269, -60.2055, 0.28 ) }
    dend_35 { pt3dadd( 58.803, -11.8293, -61.0756, 0.55 ) }
    dend_35 { pt3dadd( 58.9062, -13.2072, -62.3471, 0.28 ) }
    dend_35 { pt3dadd( 58.9053, -14.3041, -63.3984, 0.55 ) }
    dend_35 { pt3dadd( 58.8208, -15.9352, -64.9693, 0.28 ) }
    dend_35 { pt3dadd( 58.7496, -17.6394, -66.5344, 0.55 ) }
    dend_35 { pt3dadd( 58.6068, -20.1039, -68.8298, 0.28 ) }
    dend_35 { pt3dadd( 58.4965, -21.4132, -70.0563, 0.55 ) }
    dend_35 { pt3dadd( 58.3568, -22.7409, -71.3465, 0.28 ) }
    dend_35 { pt3dadd( 58.2169, -23.8875, -72.5672, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 58.0981, -25.2914, -74.2463, 0.55 ) }
    dend_35 { pt3dadd( 58.1017, -26.6133, -75.7693, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 54.8495, 32.8591, -4.15591, 0.55 ) }
    dend_31 { pt3dadd( 57.3403, 33.014, -3.57077, 0.55 ) }
    dend_31 { pt3dadd( 59.1694, 33.0369, -3.30705, 0.55 ) }
    dend_31 { pt3dadd( 63.1842, 33.0153, -2.93058, 0.55 ) }
    dend_31 { pt3dadd( 64.9978, 32.9488, -2.91502, 0.55 ) }
    dend_31 { pt3dadd( 66.9727, 32.9029, -3.0022, 0.55 ) }
    dend_31 { pt3dadd( 69.621, 32.8608, -3.31002, 0.55 ) }
    dend_31 { pt3dadd( 72.4295, 32.7108, -3.88624, 0.55 ) }
    dend_31 { pt3dadd( 73.9089, 32.5918, -4.35122, 0.55 ) }
    dend_31 { pt3dadd( 76.9218, 32.2951, -5.69707, 0.55 ) }
    dend_31 { pt3dadd( 78.3084, 32.1635, -6.36141, 0.55 ) }
    dend_31 { pt3dadd( 81.5674, 31.7853, -7.99241, 0.55 ) }
    dend_31 { pt3dadd( 83.7866, 31.4477, -9.06805, 0.55 ) }
    dend_31 { pt3dadd( 85.4204, 31.1992, -9.78618, 0.83 ) }
    dend_31 { pt3dadd( 88.0436, 30.7147, -10.8926, 0.55 ) }
    dend_31 { pt3dadd( 90.6285, 30.1356, -11.8639, 0.83 ) }
    dend_31 { pt3dadd( 92.8346, 29.5604, -12.6002, 0.55 ) }
    dend_31 { pt3dadd( 94.7928, 29.0882, -13.1607, 0.55 ) }
    dend_31 { pt3dadd( 95.8991, 28.873, -13.4265, 0.83 ) }
    dend_31 { pt3dadd( 98.4791, 28.3956, -13.9164, 0.28 ) }
    dend_31 { pt3dadd( 99.7541, 28.2186, -14.0879, 0.28 ) }
    dend_31 { pt3dadd( 100.999, 27.9651, -14.3062, 0.28 ) }
    dend_31 { pt3dadd( 102.34, 27.7239, -14.5523, 0.28 ) }
    dend_31 { pt3dadd( 104.481, 27.3701, -14.9942, 0.28 ) }
    dend_31 { pt3dadd( 105.341, 27.2411, -15.1484, 0.55 ) }
    dend_31 { pt3dadd( 107.392, 26.9786, -15.3244, 0.55 ) }
    dend_31 { pt3dadd( 111.087, 26.4968, -15.4557, 0.55 ) }
    dend_31 { pt3dadd( 112.112, 26.3438, -15.445, 0.55 ) }
    dend_31 { pt3dadd( 113.032, 26.1842, -15.3936, 0.83 ) }
    dend_31 { pt3dadd( 115.019, 25.9162, -15.1337, 0.55 ) }
    dend_31 { pt3dadd( 116.746, 25.6901, -14.8813, 0.55 ) }
    dend_31 { pt3dadd( 118.377, 25.4839, -14.6363, 0.55 ) }
    dend_31 { pt3dadd( 119.643, 25.2988, -14.4786, 0.55 ) }
    dend_31 { pt3dadd( 121.67, 24.8605, -14.3068, 0.55 ) }
    dend_31 { pt3dadd( 124.088, 24.1305, -14.2062, 0.55 ) }
    dend_31 { pt3dadd( 127.903, 22.5715, -14.2503, 0.55 ) }
    dend_31 { pt3dadd( 130.037, 21.4178, -14.3635, 0.55 ) }
    dend_31 { pt3dadd( 131.926, 20.1229, -14.5115, 0.28 ) }
    dend_31 { pt3dadd( 132.505, 19.624, -14.5715, 0.55 ) }
    dend_31 { pt3dadd( 133.828, 18.1815, -14.7211, 0.28 ) }
    dend_31 { pt3dadd( 135.022, 16.5226, -14.8489, 0.55 ) }
    dend_31 { pt3dadd( 136.217, 14.4302, -14.8259, 0.55 ) }
    dend_31 { pt3dadd( 137.017, 13.0671, -14.7403, 0.28 ) }
    dend_31 { pt3dadd( 137.308, 12.5904, -14.6846, 0.55 ) }
    dend_31 { pt3dadd( 138.053, 11.4124, -14.5284, 0.28 ) }
    dend_31 { pt3dadd( 139.06, 9.89133, -14.2848, 0.55 ) }
    dend_31 { pt3dadd( 141.64, 6.26554, -13.5977, 0.55 ) }
    dend_31 { pt3dadd( 142.975, 4.44997, -13.2086, 0.55 ) }
    dend_31 { pt3dadd( 144.211, 2.79052, -12.8352, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 54.8495, 32.8591, -4.15591, 0.55 ) }
    dend_30 { pt3dadd( 57.622, 33.3593, -2.28758, 0.55 ) }
    dend_30 { pt3dadd( 58.5079, 33.5225, -1.73567, 0.55 ) }
    dend_30 { pt3dadd( 61.8213, 34.0009, 0.162483, 0.55 ) }
    dend_30 { pt3dadd( 65.5139, 34.5958, 2.34384, 0.55 ) }
    dend_30 { pt3dadd( 70.2578, 35.333, 5.25917, 0.55 ) }
    dend_30 { pt3dadd( 71.5673, 35.5391, 6.05622, 0.55 ) }
    dend_30 { pt3dadd( 73.9281, 35.828, 7.45189, 0.55 ) }
    dend_30 { pt3dadd( 76.5001, 36.2117, 8.8964, 0.55 ) }
    dend_30 { pt3dadd( 79.4677, 36.7517, 10.4579, 0.55 ) }
    dend_30 { pt3dadd( 82.2592, 37.2964, 11.9444, 0.55 ) }
    dend_30 { pt3dadd( 83.7747, 37.6692, 12.7005, 0.55 ) }
    dend_30 { pt3dadd( 85.5459, 38.1557, 13.5924, 0.55 ) }
    dend_30 { pt3dadd( 87.7243, 38.8228, 14.6657, 0.83 ) }
    dend_30 { pt3dadd( 91.2639, 39.9552, 16.0531, 0.55 ) }
    dend_30 { pt3dadd( 93.6129, 40.6304, 16.8464, 0.83 ) }
    dend_30 { pt3dadd( 96.8883, 41.4386, 17.8151, 0.55 ) }
    dend_30 { pt3dadd( 97.9013, 41.6362, 18.0906, 0.55 ) }
    dend_30 { pt3dadd( 101.063, 42.1098, 18.8588, 0.55 ) }
    dend_30 { pt3dadd( 106.754, 42.6634, 19.9647, 0.55 ) }
    dend_30 { pt3dadd( 110.948, 42.8636, 20.6497, 0.55 ) }
    dend_30 { pt3dadd( 114.297, 42.8689, 21.246, 0.55 ) }
    dend_30 { pt3dadd( 117.747, 42.6939, 21.9414, 0.55 ) }
    dend_30 { pt3dadd( 118.476, 42.6388, 22.0885, 0.28 ) }
    dend_30 { pt3dadd( 119.962, 42.4736, 22.3755, 0.83 ) }
    dend_30 { pt3dadd( 126.08, 41.7103, 23.5755, 0.55 ) }
    dend_30 { pt3dadd( 130.353, 41.1909, 24.3377, 0.55 ) }
    dend_30 { pt3dadd( 133.854, 40.8344, 25.0582, 0.55 ) }
    dend_30 { pt3dadd( 135.948, 40.6131, 25.5067, 0.83 ) }
    dend_30 { pt3dadd( 137.594, 40.4603, 25.8659, 0.28 ) }
    dend_30 { pt3dadd( 139.085, 40.3256, 26.1787, 0.55 ) }
    dend_30 { pt3dadd( 150.428, 41.6447, 30.5827, 0.55 ) }
    dend_30 { pt3dadd( 162.511, 41.5705, 32.5674, 0.55 ) }
    dend_30 { pt3dadd( 174.371, 42.8255, 35.3314, 0.55 ) }
    dend_30 { pt3dadd( 185.472, 41.9242, 40.4222, 0.55 ) }
    dend_30 { pt3dadd( 196.133, 39.2874, 45.8238, 0.55 ) }
    dend_30 { pt3dadd( 207.641, 35.5779, 47.5621, 0.55 ) }
    dend_30 { pt3dadd( 218.946, 31.0453, 47.1203, 0.55 ) }
    dend_30 { pt3dadd( 230.93, 28.8085, 46.2091, 0.55 ) }
    dend_30 { pt3dadd( 242.886, 26.2683, 46.0819, 0.55 ) }
    dend_30 { pt3dadd( 255.05, 25.156, 45.3557, 0.55 ) }
    dend_30 { pt3dadd( 267.231, 24.3356, 46.2617, 0.55 ) }
    dend_30 { pt3dadd( 279.018, 21.3582, 47.5312, 0.55 ) }
    dend_30 { pt3dadd( 290.9, 20.2982, 50.2847, 0.55 ) }
    dend_30 { pt3dadd( 302.191, 20.6438, 55.007, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.20485, -30.6954, 5.34969, 1.38 ) }
    dend_13 { pt3dadd( 0.528914, -33.7354, 4.30976, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.20485, -30.6954, 5.34969, 0.55 ) }
    dend_12 { pt3dadd( -3.18745, -31.8138, 5.40127, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.27759, -33.2517, 5.45835, 0.55 ) }
    dend_12 { pt3dadd( -5.12286, -34.2008, 5.51274, 0.55 ) }
    dend_12 { pt3dadd( -5.83862, -34.9937, 5.44673, 0.55 ) }
    dend_12 { pt3dadd( -7.40334, -36.6339, 5.15538, 0.55 ) }
    dend_12 { pt3dadd( -8.50068, -37.728, 4.92083, 0.55 ) }
    dend_12 { pt3dadd( -9.47769, -38.7089, 4.6754, 0.55 ) }
    dend_12 { pt3dadd( -11.9853, -41.0935, 4.04766, 0.55 ) }
    dend_12 { pt3dadd( -14.9957, -43.852, 3.31766, 0.55 ) }
    dend_12 { pt3dadd( -17.3274, -45.9399, 2.71212, 0.55 ) }
    dend_12 { pt3dadd( -18.817, -47.3119, 2.30401, 0.55 ) }
    dend_12 { pt3dadd( -20.5272, -48.9599, 1.84066, 0.55 ) }
    dend_12 { pt3dadd( -22.7009, -51.3304, 1.28025, 0.55 ) }
    dend_12 { pt3dadd( -23.9773, -53.0188, 0.977987, 0.55 ) }
    dend_12 { pt3dadd( -25.554, -55.4542, 0.740606, 0.55 ) }
    dend_12 { pt3dadd( -26.8162, -57.7418, 0.59924, 0.55 ) }
    dend_12 { pt3dadd( -28.1017, -60.6037, 0.475863, 0.55 ) }
    dend_12 { pt3dadd( -29.3252, -63.9712, 0.407905, 0.55 ) }
    dend_12 { pt3dadd( -29.9977, -66.5517, 0.412353, 0.55 ) }
    dend_12 { pt3dadd( -30.2399, -67.8382, 0.498504, 0.55 ) }
    dend_12 { pt3dadd( -30.6173, -70.8659, 0.865096, 0.55 ) }
    dend_12 { pt3dadd( -30.9163, -73.7003, 1.28271, 0.55 ) }
    dend_12 { pt3dadd( -31.0604, -76.5595, 1.91597, 0.55 ) }
    dend_12 { pt3dadd( -31.1579, -78.1996, 2.37149, 0.55 ) }
    dend_12 { pt3dadd( -31.4218, -83.2713, 3.96995, 0.55 ) }
    dend_12 { pt3dadd( -31.4436, -83.6447, 4.09444, 0.55 ) }
    dend_12 { pt3dadd( -31.531, -85.9326, 4.91299, 0.55 ) }
    dend_12 { pt3dadd( -31.88, -90.0192, 6.48085, 0.55 ) }
    dend_12 { pt3dadd( -32.0073, -91.3856, 6.92212, 0.55 ) }
    dend_12 { pt3dadd( -32.2719, -93.5196, 7.23793, 0.55 ) }
    dend_12 { pt3dadd( -32.3547, -94.3127, 7.16843, 0.55 ) }
    dend_12 { pt3dadd( -32.529, -96.9995, 6.41244, 0.55 ) }
    dend_12 { pt3dadd( -32.5537, -98.7418, 5.54378, 0.55 ) }
    dend_12 { pt3dadd( -32.5328, -101.518, 3.58036, 0.55 ) }
    dend_12 { pt3dadd( -32.3744, -104.918, 0.905289, 0.28 ) }
    dend_12 { pt3dadd( -32.3253, -105.759, 0.127384, 0.55 ) }
    dend_12 { pt3dadd( -32.25, -107.034, -1.16702, 0.28 ) }
    dend_12 { pt3dadd( -32.2408, -107.226, -1.37246, 0.55 ) }
    dend_12 { pt3dadd( -32.1943, -108.277, -2.40507, 0.28 ) }
    dend_12 { pt3dadd( -32.201, -108.634, -2.67082, 0.55 ) }
    dend_12 { pt3dadd( -32.2676, -110.486, -3.68429, 0.28 ) }
    dend_12 { pt3dadd( -32.315, -111.116, -4.02022, 0.55 ) }
    dend_12 { pt3dadd( -32.4723, -112.937, -4.88475, 0.28 ) }
    dend_12 { pt3dadd( -32.5191, -113.511, -5.15482, 0.55 ) }
    dend_12 { pt3dadd( -32.6963, -115.489, -6.05318, 0.28 ) }
    dend_12 { pt3dadd( -32.7731, -116.399, -6.47134, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.73268, -77.4138, 64.7494, 0.55 ) }
    dend_10 { pt3dadd( -12.6061, -85.3119, 72.8447, 0.55 ) }
    dend_10 { pt3dadd( -17.618, -92.1611, 81.3093, 0.55 ) }
    dend_10 { pt3dadd( -22.3511, -99.7856, 89.2183, 0.55 ) }
    dend_10 { pt3dadd( -27.302, -107.447, 96.9537, 0.55 ) }
    dend_10 { pt3dadd( -31.0699, -116.451, 103.784, 0.55 ) }
    dend_10 { pt3dadd( -34.6807, -125.08, 111.186, 0.55 ) }
    dend_10 { pt3dadd( -37.1078, -135.562, 116.159, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.73268, -77.4138, 64.7494, 0.55 ) }
    dend_3 { pt3dadd( -7.91187, -82.4417, 69.1955, 0.55 ) }
    dend_3 { pt3dadd( -7.19669, -88.1922, 72.6237, 0.55 ) }
    dend_3 { pt3dadd( -7.54425, -93.8104, 76.3121, 0.55 ) }
    dend_3 { pt3dadd( -8.47853, -99.6504, 79.4924, 0.55 ) }
    dend_3 { pt3dadd( -9.1195, -105.515, 82.7028, 0.55 ) }
    dend_3 { pt3dadd( -9.56347, -111.174, 86.3137, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -47.9991, 55.1222, -17.5138, 0.83 ) }
    dend_60 { pt3dadd( -47.4078, 56.4656, -18.2672, 0.83 ) }
    dend_60 { pt3dadd( -46.1083, 59.6604, -19.9032, 0.55 ) }
    dend_60 { pt3dadd( -45.5734, 61.0133, -20.5163, 0.83 ) }
    dend_60 { pt3dadd( -45.0206, 62.4384, -21.0902, 0.55 ) }
    dend_60 { pt3dadd( -44.5031, 63.8577, -21.5082, 0.55 ) }
    dend_60 { pt3dadd( -44.2613, 64.549, -21.6382, 0.28 ) }
    dend_60 { pt3dadd( -44.1571, 64.9818, -21.6294, 0.55 ) }
    dend_60 { pt3dadd( -43.8513, 66.3448, -21.3015, 0.28 ) }
    dend_60 { pt3dadd( -43.7142, 66.9188, -21.1285, 0.55 ) }
    dend_60 { pt3dadd( -43.2862, 68.894, -20.4522, 0.28 ) }
    dend_60 { pt3dadd( -43.0048, 70.4481, -19.8734, 0.55 ) }
    dend_60 { pt3dadd( -42.7097, 72.864, -18.9242, 0.28 ) }
    dend_60 { pt3dadd( -42.541, 74.9824, -18.0681, 0.28 ) }
    dend_60 { pt3dadd( -42.526, 76.1673, -17.5839, 0.55 ) }
    dend_60 { pt3dadd( -42.5999, 77.5789, -17.0324, 0.28 ) }
    dend_60 { pt3dadd( -42.6845, 78.2534, -16.7716, 0.55 ) }
    dend_60 { pt3dadd( -42.9541, 79.8667, -16.2545, 0.28 ) }
    dend_60 { pt3dadd( -43.1916, 80.9628, -15.9852, 0.28 ) }
    dend_60 { pt3dadd( -43.4388, 82.0498, -15.759, 0.28 ) }
    dend_60 { pt3dadd( -43.5468, 82.6232, -15.6359, 0.55 ) }
    dend_60 { pt3dadd( -43.8439, 84.9492, -15.1589, 0.28 ) }
    dend_60 { pt3dadd( -44.0902, 87.7118, -14.6192, 0.55 ) }
    dend_60 { pt3dadd( -44.1603, 88.666, -14.4328, 0.55 ) }
    dend_60 { pt3dadd( -44.2515, 89.6181, -14.2299, 0.55 ) }
    dend_60 { pt3dadd( -44.5434, 91.6567, -13.8589, 0.55 ) }
    dend_60 { pt3dadd( -44.8126, 93.0081, -13.6656, 0.28 ) }
    dend_60 { pt3dadd( -44.971, 93.525, -13.6143, 0.55 ) }
    dend_60 { pt3dadd( -45.5036, 94.9229, -13.4725, 0.28 ) }
    dend_60 { pt3dadd( -46.114, 96.4299, -13.393, 0.55 ) }
    dend_60 { pt3dadd( -47.1631, 98.6297, -13.4087, 0.28 ) }
    dend_60 { pt3dadd( -47.6876, 99.5609, -13.4676, 0.28 ) }
    dend_60 { pt3dadd( -48.5387, 100.897, -13.7083, 0.55 ) }
    dend_60 { pt3dadd( -49.4911, 102.312, -14.0461, 0.28 ) }
    dend_60 { pt3dadd( -49.6676, 102.538, -14.1166, 0.55 ) }
    dend_60 { pt3dadd( -50.3123, 103.272, -14.3904, 0.28 ) }
    dend_60 { pt3dadd( -52.5619, 105.638, -15.3324, 0.55 ) }
    dend_60 { pt3dadd( -55.6807, 108.653, -16.8653, 0.28 ) }
    dend_60 { pt3dadd( -56.2499, 109.18, -17.1994, 0.55 ) }
    dend_60 { pt3dadd( -57.8101, 110.565, -18.1665, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -58.4606, 111.142, -18.5959, 0.28 ) }
    dend_60 { pt3dadd( -59.0191, 111.635, -19.0051, 0.55 ) }
    dend_60 { pt3dadd( -60.6329, 112.891, -20.4156, 0.28 ) }
    dend_60 { pt3dadd( -61.7982, 113.626, -21.3988, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -47.9991, 55.1222, -17.5138, 0.55 ) }
    dend_57 { pt3dadd( -48.1051, 56.6788, -17.3279, 0.55 ) }
    dend_57 { pt3dadd( -48.212, 57.5776, -17.1418, 0.28 ) }
    dend_57 { pt3dadd( -48.4574, 58.1906, -16.8859, 0.55 ) }
    dend_57 { pt3dadd( -49.0208, 59.5984, -16.2982, 0.28 ) }
    dend_57 { pt3dadd( -49.4166, 60.5872, -15.8854, 0.55 ) }
    dend_57 { pt3dadd( -50.1461, 62.41, -15.1244, 0.28 ) }
    dend_57 { pt3dadd( -50.6867, 63.3492, -14.5672, 0.55 ) }
    dend_57 { pt3dadd( -52.9262, 65.4216, -12.5691, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -150.069, -43.0984, -28.7442, 0.55 ) }
    dend_52 { pt3dadd( -157.245, -52.0842, -33.3244, 0.55 ) }
    dend_52 { pt3dadd( -162.402, -62.0258, -38.5029, 0.55 ) }
    dend_52 { pt3dadd( -166.244, -71.072, -46.012, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -150.069, -43.0984, -28.7442, 0.55 ) }
    dend_49 { pt3dadd( -155.068, -47.5128, -33.7463, 0.55 ) }
    dend_49 { pt3dadd( -159.202, -51.7373, -39.6204, 0.55 ) }
    dend_49 { pt3dadd( -162.992, -56.0274, -45.6704, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -152.565, 19.3905, 41.3, 0.55 ) }
    dend_47 { pt3dadd( -162.631, 18.9217, 46.9845, 0.55 ) }
    dend_47 { pt3dadd( -173.139, 19.9922, 51.6904, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -152.565, 19.3905, 41.3, 0.55 ) }
    dend_46 { pt3dadd( -160.345, 18.5979, 42.5709, 0.55 ) }
    dend_46 { pt3dadd( -168.015, 18.87, 44.5414, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 58.1017, -26.6133, -75.7693, 0.28 ) }
    dend_39 { pt3dadd( 65.5872, -30.1368, -91.2199, 0.28 ) }
    dend_39 { pt3dadd( 66.3276, -30.5747, -92.6122, 0.55 ) }
    dend_39 { pt3dadd( 67.5777, -31.314, -94.963, 0.28 ) }
    dend_39 { pt3dadd( 68.6303, -31.9365, -96.9423, 0.28 ) }
    dend_39 { pt3dadd( 70.0236, -32.7605, -99.5624, 0.55 ) }
    dend_39 { pt3dadd( 71.8606, -33.8469, -103.017, 0.55 ) }
    dend_39 { pt3dadd( 74.3556, -36.157, -105.072, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 58.1017, -26.6133, -75.7693, 0.55 ) }
    dend_36 { pt3dadd( 58.5503, -27.4478, -77.3593, 0.55 ) }
    dend_36 { pt3dadd( 58.6528, -27.7926, -78.0689, 0.28 ) }
    dend_36 { pt3dadd( 58.7821, -28.361, -79.3048, 0.55 ) }
    dend_36 { pt3dadd( 59.0668, -29.6131, -82.0273, 0.28 ) }
    dend_36 { pt3dadd( 59.2641, -30.4808, -83.914, 0.55 ) }
    dend_36 { pt3dadd( 59.5984, -31.951, -87.1106, 0.28 ) }
    dend_36 { pt3dadd( 59.9518, -33.6374, -91.243, 0.28 ) }
    dend_36 { pt3dadd( 60.0601, -34.3846, -93.1701, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 144.211, 2.79052, -12.8352, 0.28 ) }
    dend_33 { pt3dadd( 147.175, 0.2094, -11.1163, 0.28 ) }
    dend_33 { pt3dadd( 150.92, -3.13654, -8.46639, 0.28 ) }
    dend_33 { pt3dadd( 153.291, -5.28866, -6.62655, 0.55 ) }
    dend_33 { pt3dadd( 154.699, -6.43555, -5.52472, 0.28 ) }
    dend_33 { pt3dadd( 155.448, -7.05254, -4.92308, 0.28 ) }
    dend_33 { pt3dadd( 159.166, -10.1132, -2.02126, 0.55 ) }
    dend_33 { pt3dadd( 160.01, -10.7563, -1.2457, 0.28 ) }
    dend_33 { pt3dadd( 162.021, -12.4482, 0.967335, 0.55 ) }
    dend_33 { pt3dadd( 163.748, -13.9487, 2.79573, 0.28 ) }
    dend_33 { pt3dadd( 165.244, -15.1595, 4.24991, 0.55 ) }
    dend_33 { pt3dadd( 167.011, -16.6491, 5.85002, 0.55 ) }
    dend_33 { pt3dadd( 169.853, -19.1257, 7.95046, 0.55 ) }
    dend_33 { pt3dadd( 170.541, -19.7435, 8.43439, 0.55 ) }
    dend_33 { pt3dadd( 173.022, -22.0779, 10.2019, 0.28 ) }
    dend_33 { pt3dadd( 173.992, -23.0497, 10.8877, 0.55 ) }
    dend_33 { pt3dadd( 175.33, -24.2727, 11.7615, 0.28 ) }
    dend_33 { pt3dadd( 177.227, -26.0385, 12.8932, 0.55 ) }
    dend_33 { pt3dadd( 180.386, -28.9331, 14.1396, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 144.211, 2.79052, -12.8352, 0.55 ) }
    dend_32 { pt3dadd( 142.211, 2.48402, -12.9183, 0.55 ) }
    dend_32 { pt3dadd( 140.587, 2.23512, -12.9857, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.528914, -33.7354, 4.30976, 0.83 ) }
    dend_17 { pt3dadd( 0.646401, -33.9997, 4.26809, 0.83 ) }
    dend_17 { pt3dadd( 2.05942, -36.3468, 3.99247, 0.83 ) }
    dend_17 { pt3dadd( 3.27665, -38.4018, 3.61268, 0.55 ) }
    dend_17 { pt3dadd( 4.24773, -40.0413, 3.3097, 0.55 ) }
    dend_17 { pt3dadd( 6.31181, -43.5261, 2.66568, 0.83 ) }
    dend_17 { pt3dadd( 8.81539, -47.7529, 1.88453, 0.55 ) }
    dend_17 { pt3dadd( 10.1916, -49.9666, 1.51104, 0.83 ) }
    dend_17 { pt3dadd( 12.6679, -53.4941, 1.03583, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.528914, -33.7354, 4.30976, 0.55 ) }
    dend_14 { pt3dadd( -0.405739, -34.6919, 1.48045, 0.55 ) }
    dend_14 { pt3dadd( -1.40898, -35.7187, -1.55646, 0.55 ) }
    dend_14 { pt3dadd( -2.59331, -36.9307, -5.14156, 0.55 ) }
    dend_14 { pt3dadd( -4.03147, -38.4026, -9.49503, 0.55 ) }
    dend_14 { pt3dadd( -4.84757, -39.2378, -11.9655, 0.55 ) }
    dend_14 { pt3dadd( -5.01151, -39.4056, -12.4617, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.56347, -111.174, 86.3137, 0.55 ) }
    dend_7 { pt3dadd( -9.27907, -118.549, 91.419, 0.55 ) }
    dend_7 { pt3dadd( -8.04434, -126.498, 95.3563, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.56347, -111.174, 86.3137, 0.55 ) }
    dend_4 { pt3dadd( -10.2842, -119.231, 91.0069, 0.55 ) }
    dend_4 { pt3dadd( -11.2916, -127.032, 96.0834, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.9262, 65.4216, -12.5691, 0.28 ) }
    dend_59 { pt3dadd( -53.9271, 65.9892, -11.7226, 0.28 ) }
    dend_59 { pt3dadd( -54.3183, 66.1893, -11.3642, 0.55 ) }
    dend_59 { pt3dadd( -55.448, 66.7605, -10.3029, 0.28 ) }
    dend_59 { pt3dadd( -55.9923, 67.0625, -9.82471, 0.55 ) }
    dend_59 { pt3dadd( -57.4603, 67.8986, -8.5781, 0.28 ) }
    dend_59 { pt3dadd( -58.9522, 68.7483, -7.31108, 0.55 ) }
    dend_59 { pt3dadd( -61.4271, 70.0386, -5.23806, 0.28 ) }
    dend_59 { pt3dadd( -61.9542, 70.3167, -4.79478, 0.55 ) }
    dend_59 { pt3dadd( -63.1018, 71.0015, -3.83037, 0.28 ) }
    dend_59 { pt3dadd( -63.55, 71.2915, -3.44239, 0.55 ) }
    dend_59 { pt3dadd( -68.2827, 73.0901, -0.718361, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -72.9707, 75.9353, 0.948916, 0.55 ) }
    dend_59 { pt3dadd( -77.3406, 78.6109, 3.51062, 0.55 ) }
    dend_59 { pt3dadd( -80.9695, 81.8928, 6.44583, 0.55 ) }
    dend_59 { pt3dadd( -85.0343, 85.1588, 8.7794, 0.55 ) }
    dend_59 { pt3dadd( -89.7184, 87.4813, 11.1476, 0.55 ) }
    dend_59 { pt3dadd( -94.3139, 89.0883, 14.2091, 0.55 ) }
    dend_59 { pt3dadd( -98.6539, 89.8592, 17.9205, 0.55 ) }
    dend_59 { pt3dadd( -102.948, 90.9916, 21.5823, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.9262, 65.4216, -12.5691, 0.55 ) }
    dend_58 { pt3dadd( -55.6281, 64.5694, -12.4914, 0.55 ) }
    dend_58 { pt3dadd( -57.032, 64.0862, -12.4659, 0.28 ) }
    dend_58 { pt3dadd( -58.0768, 63.7266, -12.4469, 0.55 ) }
    dend_58 { pt3dadd( -58.9475, 63.4269, -12.4311, 0.28 ) }
    dend_58 { pt3dadd( -59.5575, 63.2169, -12.42, 0.55 ) }
    dend_58 { pt3dadd( -61.2393, 62.638, -12.3895, 0.28 ) }
    dend_58 { pt3dadd( -62.3233, 62.2067, -12.518, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -166.244, -71.072, -46.012, 0.55 ) }
    dend_54 { pt3dadd( -172.835, -83.5134, -46.6476, 0.55 ) }
    dend_54 { pt3dadd( -179.442, -95.9082, -45.6516, 0.55 ) }
    dend_54 { pt3dadd( -184.573, -108.96, -46.8897, 0.55 ) }
    dend_54 { pt3dadd( -191.409, -121.278, -46.6283, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -166.244, -71.072, -46.012, 0.55 ) }
    dend_53 { pt3dadd( -169.628, -75.9625, -52.6063, 0.55 ) }
    dend_53 { pt3dadd( -172.391, -79.8702, -60.1174, 0.55 ) }
    dend_53 { pt3dadd( -176.087, -84.5732, -66.6864, 0.55 ) }
    dend_53 { pt3dadd( -181.496, -87.7395, -73.0246, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -162.992, -56.0274, -45.6704, 0.55 ) }
    dend_51 { pt3dadd( -166.525, -59.5423, -52.6778, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -162.992, -56.0274, -45.6704, 0.55 ) }
    dend_50 { pt3dadd( -170.218, -67.0599, -43.9716, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 74.3556, -36.157, -105.072, 0.28 ) }
    dend_41 { pt3dadd( 76.571, -37.3743, -106.688, 0.28 ) }
    dend_41 { pt3dadd( 77.6001, -37.9397, -107.439, 0.55 ) }
    dend_41 { pt3dadd( 79.5625, -39.018, -108.871, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 74.3556, -36.157, -105.072, 0.55 ) }
    dend_40 { pt3dadd( 73.652, -37.5267, -106.868, 0.55 ) }
    dend_40 { pt3dadd( 72.2448, -40.2666, -110.46, 0.28 ) }
    dend_40 { pt3dadd( 71.7864, -41.1591, -111.631, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 60.0601, -34.3846, -93.1701, 0.28 ) }
    dend_38 { pt3dadd( 60.567, -36.6534, -97.4315, 0.28 ) }
    dend_38 { pt3dadd( 60.818, -37.7768, -99.5416, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 60.0601, -34.3846, -93.1701, 0.55 ) }
    dend_37 { pt3dadd( 57.9338, -35.1033, -92.3413, 0.55 ) }
    dend_37 { pt3dadd( 52.0048, -37.1076, -90.0303, 0.28 ) }
    dend_37 { pt3dadd( 50.5963, -37.5838, -89.4813, 0.55 ) }
    dend_37 { pt3dadd( 46.7433, -38.8862, -87.9795, 0.28 ) }
    dend_37 { pt3dadd( 44.2597, -39.7258, -87.0114, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.6679, -53.4941, 1.03583, 0.83 ) }
    dend_23 { pt3dadd( 12.6777, -53.7061, 1.01429, 0.83 ) }
    dend_23 { pt3dadd( 12.8736, -56.4764, 0.78988, 0.83 ) }
    dend_23 { pt3dadd( 12.8986, -58.5386, 0.813775, 0.83 ) }
    dend_23 { pt3dadd( 12.8662, -60.5132, 1.08503, 0.83 ) }
    dend_23 { pt3dadd( 12.8081, -63.126, 1.67174, 0.83 ) }
    dend_23 { pt3dadd( 12.7028, -66.1267, 2.48667, 0.83 ) }
    dend_23 { pt3dadd( 12.6658, -69.4671, 3.56184, 0.83 ) }
    dend_23 { pt3dadd( 12.688, -72.7028, 4.75185, 0.83 ) }
    dend_23 { pt3dadd( 12.4265, -76.6715, 6.22148, 0.83 ) }
    dend_23 { pt3dadd( 12.1682, -78.4976, 6.83347, 0.83 ) }
    dend_23 { pt3dadd( 11.9356, -79.876, 7.211, 0.83 ) }
    dend_23 { pt3dadd( 11.4131, -82.5219, 7.90204, 0.83 ) }
    dend_23 { pt3dadd( 10.9494, -84.9019, 8.3722, 0.83 ) }
    dend_23 { pt3dadd( 10.0132, -90.0219, 8.72049, 0.83 ) }
    dend_23 { pt3dadd( 9.39483, -92.8456, 8.54721, 0.83 ) }
    dend_23 { pt3dadd( 8.75233, -95.4587, 8.20675, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.6679, -53.4941, 1.03583, 0.55 ) }
    dend_18 { pt3dadd( 11.6351, -55.6857, 1.02754, 0.55 ) }
    dend_18 { pt3dadd( 10.8552, -57.2792, 1.14359, 0.55 ) }
    dend_18 { pt3dadd( 10.3787, -58.3008, 1.32494, 0.55 ) }
    dend_18 { pt3dadd( 9.70248, -59.9036, 1.77297, 0.55 ) }
    dend_18 { pt3dadd( 8.43683, -63.0825, 2.87439, 0.55 ) }
    dend_18 { pt3dadd( 7.44385, -65.4945, 3.97835, 0.55 ) }
    dend_18 { pt3dadd( 6.63852, -67.4324, 5.07436, 0.55 ) }
    dend_18 { pt3dadd( 5.76897, -69.3925, 6.32034, 0.55 ) }
    dend_18 { pt3dadd( 5.02937, -71.0199, 7.43952, 0.28 ) }
    dend_18 { pt3dadd( 4.39504, -72.3537, 8.55113, 0.55 ) }
    dend_18 { pt3dadd( 3.16547, -74.7877, 10.9173, 0.55 ) }
    dend_18 { pt3dadd( 2.32041, -76.2824, 12.5267, 0.55 ) }
    dend_18 { pt3dadd( 1.83806, -77.1195, 13.4194, 0.55 ) }
    dend_18 { pt3dadd( 1.2213, -78.1053, 14.4171, 0.83 ) }
    dend_18 { pt3dadd( -0.623688, -81.0242, 17.1753, 0.28 ) }
    dend_18 { pt3dadd( -1.2319, -81.9897, 18.0613, 0.55 ) }
    dend_18 { pt3dadd( -2.27148, -83.7319, 19.6058, 0.28 ) }
    dend_18 { pt3dadd( -2.59354, -84.2698, 20.1219, 0.55 ) }
    dend_18 { pt3dadd( -3.27664, -85.533, 21.3122, 0.28 ) }
    dend_18 { pt3dadd( -3.65736, -86.2503, 21.9354, 0.55 ) }
    dend_18 { pt3dadd( -5.01051, -88.5699, 23.314, 0.55 ) }
    dend_18 { pt3dadd( -7.17802, -94.8887, 29.627, 0.55 ) }
    dend_18 { pt3dadd( -8.92204, -100.927, 36.3467, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.01151, -39.4056, -12.4617, 0.55 ) }
    dend_16 { pt3dadd( -5.63849, -40.6371, -16.7276, 0.55 ) }
    dend_16 { pt3dadd( -5.84508, -40.9264, -17.9546, 0.55 ) }
    dend_16 { pt3dadd( -6.41796, -41.649, -20.9688, 0.55 ) }
    dend_16 { pt3dadd( -7.79158, -43.0749, -27.4066, 0.28 ) }
    dend_16 { pt3dadd( -8.02349, -43.2683, -28.3293, 0.55 ) }
    dend_16 { pt3dadd( -9.07007, -44.1518, -32.0834, 0.55 ) }
    dend_16 { pt3dadd( -10.7494, -45.3444, -36.9111, 0.55 ) }
    dend_16 { pt3dadd( -11.4122, -45.7508, -38.7294, 0.28 ) }
    dend_16 { pt3dadd( -12.035, -46.0123, -40.2628, 0.28 ) }
    dend_16 { pt3dadd( -13.2863, -46.3988, -42.634, 0.55 ) }
    dend_16 { pt3dadd( -14.7413, -46.7466, -45.6143, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -16.037, -46.8543, -48.4198, 0.55 ) }
    dend_16 { pt3dadd( -17.0519, -46.774, -50.5621, 0.55 ) }
    dend_16 { pt3dadd( -17.7177, -46.6082, -52.0755, 0.55 ) }
    dend_16 { pt3dadd( -19.5899, -45.9488, -56.6244, 0.55 ) }
    dend_16 { pt3dadd( -21.592, -44.9681, -61.3551, 0.55 ) }
    dend_16 { pt3dadd( -22.4397, -44.4661, -63.2768, 0.28 ) }
    dend_16 { pt3dadd( -23.2282, -44.0166, -65.1269, 0.55 ) }
    dend_16 { pt3dadd( -24.8634, -43.3169, -68.8476, 0.28 ) }
    dend_16 { pt3dadd( -25.4227, -43.113, -70.0897, 0.83 ) }
    dend_16 { pt3dadd( -26.5537, -42.7008, -72.2935, 0.28 ) }
    dend_16 { pt3dadd( -27.4964, -42.5073, -73.7173, 0.55 ) }
    dend_16 { pt3dadd( -28.8972, -42.3004, -75.7467, 0.28 ) }
    dend_16 { pt3dadd( -29.4719, -42.2055, -76.5315, 0.55 ) }
    dend_16 { pt3dadd( -30.5916, -42.0558, -77.9135, 0.55 ) }
    dend_16 { pt3dadd( -32.3235, -41.5825, -79.9297, 0.55 ) }
    dend_16 { pt3dadd( -33.502, -41.1715, -81.1743, 0.28 ) }
    dend_16 { pt3dadd( -34.502, -40.6777, -82.0955, 0.55 ) }
    dend_16 { pt3dadd( -35.664, -39.9119, -83.1909, 0.28 ) }
    dend_16 { pt3dadd( -35.8489, -39.7667, -83.3787, 0.55 ) }
    dend_16 { pt3dadd( -37.3207, -38.3932, -85.4493, 0.28 ) }
    dend_16 { pt3dadd( -38.2832, -37.3715, -87.1028, 0.55 ) }
    dend_16 { pt3dadd( -39.3658, -35.8935, -89.5432, 0.83 ) }
    dend_16 { pt3dadd( -40.1353, -34.6442, -91.726, 0.28 ) }
    dend_16 { pt3dadd( -40.3069, -34.327, -92.3287, 0.55 ) }
    dend_16 { pt3dadd( -41.5089, -31.9558, -97.1199, 0.28 ) }
    dend_16 { pt3dadd( -41.683, -31.5542, -98.0104, 0.55 ) }
    dend_16 { pt3dadd( -42.1179, -30.249, -100.74, 0.28 ) }
    dend_16 { pt3dadd( -42.2281, -29.9134, -101.447, 0.55 ) }
    dend_16 { pt3dadd( -42.5612, -29.036, -103.192, 0.28 ) }
    dend_16 { pt3dadd( -42.8301, -28.4018, -104.381, 0.55 ) }
    dend_16 { pt3dadd( -43.6094, -26.9719, -106.789, 0.28 ) }
    dend_16 { pt3dadd( -44.1063, -26.2032, -108.18, 0.55 ) }
    dend_16 { pt3dadd( -45.2606, -24.7131, -111.035, 0.28 ) }
    dend_16 { pt3dadd( -45.615, -24.3096, -111.875, 0.55 ) }
    dend_16 { pt3dadd( -46.2042, -23.765, -113.155, 0.28 ) }
    dend_16 { pt3dadd( -46.7326, -23.3042, -114.199, 0.55 ) }
    dend_16 { pt3dadd( -47.9066, -22.3693, -116.263, 0.28 ) }
    dend_16 { pt3dadd( -48.2735, -22.1008, -116.867, 0.55 ) }
    dend_16 { pt3dadd( -51.12, -20.0059, -121.175, 0.28 ) }
    dend_16 { pt3dadd( -52.1919, -19.1506, -122.567, 0.55 ) }
    dend_16 { pt3dadd( -54.1999, -17.4782, -124.893, 0.28 ) }
    dend_16 { pt3dadd( -55.1238, -16.6713, -125.908, 0.55 ) }
    dend_16 { pt3dadd( -57.3421, -14.8349, -128.086, 0.28 ) }
    dend_16 { pt3dadd( -58.1878, -14.2075, -128.843, 0.55 ) }
    dend_16 { pt3dadd( -61.3984, -12.2839, -131.395, 0.28 ) }
    dend_16 { pt3dadd( -62.7637, -11.6886, -132.443, 0.55 ) }
    dend_16 { pt3dadd( -64.7612, -11.2261, -133.911, 0.55 ) }
    dend_16 { pt3dadd( -66.0173, -11.0324, -134.782, 0.55 ) }
    dend_16 { pt3dadd( -68.7097, -10.7049, -136.355, 0.28 ) }
    dend_16 { pt3dadd( -71.4594, -10.4042, -137.737, 0.28 ) }
    dend_16 { pt3dadd( -73.7867, -10.1417, -138.825, 0.55 ) }
    dend_16 { pt3dadd( -76.7766, -9.54841, -139.861, 0.28 ) }
    dend_16 { pt3dadd( -78.3376, -9.06167, -140.193, 0.55 ) }
    dend_16 { pt3dadd( -82.1668, -7.31922, -140.659, 0.28 ) }
    dend_16 { pt3dadd( -84.2966, -6.04457, -140.49, 0.55 ) }
    dend_16 { pt3dadd( -85.762, -5.02489, -140.133, 0.28 ) }
    dend_16 { pt3dadd( -87.5301, -3.8633, -139.413, 0.55 ) }
    dend_16 { pt3dadd( -89.8104, -2.34047, -138.309, 0.28 ) }
    dend_16 { pt3dadd( -90.6782, -1.80042, -137.899, 0.55 ) }
    dend_16 { pt3dadd( -95.0812, 0.644688, -136.188, 0.28 ) }
    dend_16 { pt3dadd( -96.5691, 1.42087, -135.624, 0.55 ) }
    dend_16 { pt3dadd( -100.142, 3.15709, -134.213, 0.28 ) }
    dend_16 { pt3dadd( -102.085, 4.08126, -133.448, 0.55 ) }
    dend_16 { pt3dadd( -103.683, 4.83862, -132.822, 0.55 ) }
    dend_16 { pt3dadd( -105.583, 5.73032, -132.114, 0.28 ) }
    dend_16 { pt3dadd( -106.536, 6.18091, -131.879, 0.55 ) }
    dend_16 { pt3dadd( -109.677, 7.77513, -131.256, 0.28 ) }
    dend_16 { pt3dadd( -111.311, 8.77505, -130.899, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.01151, -39.4056, -12.4617, 0.55 ) }
    dend_15 { pt3dadd( -4.41983, -39.4866, -13.4123, 0.55 ) }
    dend_15 { pt3dadd( -3.79957, -39.449, -14.3477, 0.55 ) }
    dend_15 { pt3dadd( -2.97065, -39.3086, -15.4697, 0.55 ) }
    dend_15 { pt3dadd( -2.25933, -39.1076, -16.3506, 0.55 ) }
    dend_15 { pt3dadd( 2.78622, -37.0647, -21.7304, 0.55 ) }
    dend_15 { pt3dadd( 3.91155, -36.4324, -22.9525, 0.55 ) }
    dend_15 { pt3dadd( 5.545, -35.3367, -24.7887, 0.55 ) }
    dend_15 { pt3dadd( 6.6945, -34.508, -26.0942, 0.55 ) }
    dend_15 { pt3dadd( 7.83063, -33.6108, -27.3327, 0.28 ) }
    dend_15 { pt3dadd( 9.63783, -32.0965, -29.1324, 0.55 ) }
    dend_15 { pt3dadd( 12.4283, -29.7347, -31.6374, 0.28 ) }
    dend_15 { pt3dadd( 12.6372, -29.5895, -31.927, 0.55 ) }
    dend_15 { pt3dadd( 13.5584, -29.0852, -34.2082, 0.28 ) }
    dend_15 { pt3dadd( 13.925, -28.8578, -35.856, 0.55 ) }
    dend_15 { pt3dadd( 14.1617, -28.7456, -37.685, 0.55 ) }
    dend_15 { pt3dadd( 14.5496, -28.7087, -40.9846, 0.55 ) }
    dend_15 { pt3dadd( 15.3306, -28.6797, -47.4593, 0.55 ) }
    dend_15 { pt3dadd( 15.9341, -28.6998, -51.7985, 0.55 ) }
    dend_15 { pt3dadd( 16.1828, -28.7175, -53.2905, 0.55 ) }
    dend_15 { pt3dadd( 18.044, -28.7443, -63.0504, 0.55 ) }
    dend_15 { pt3dadd( 18.6569, -28.7073, -65.6688, 0.55 ) }
    dend_15 { pt3dadd( 19.1109, -28.6802, -67.1113, 0.55 ) }
    dend_15 { pt3dadd( 20.4668, -28.6835, -70.3833, 0.55 ) }
    dend_15 { pt3dadd( 24.2032, -29.0748, -78.0564, 0.55 ) }
    dend_15 { pt3dadd( 25.3033, -29.2635, -80.083, 0.28 ) }
    dend_15 { pt3dadd( 26.0203, -29.4206, -81.1912, 0.55 ) }
    dend_15 { pt3dadd( 27.1187, -29.7259, -82.8161, 0.28 ) }
    dend_15 { pt3dadd( 27.6244, -29.9233, -83.4521, 0.55 ) }
    dend_15 { pt3dadd( 29.5769, -30.8199, -84.933, 0.28 ) }
    dend_15 { pt3dadd( 31.3055, -32.0851, -85.1022, 0.55 ) }
    dend_15 { pt3dadd( 32.3487, -32.9943, -85.1365, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 33.311, -34.0059, -85.0506, 0.55 ) }
    dend_15 { pt3dadd( 34.1609, -35.1161, -84.9007, 0.28 ) }
    dend_15 { pt3dadd( 34.5316, -35.6902, -84.8503, 0.55 ) }
    dend_15 { pt3dadd( 35.3948, -37.1993, -84.6617, 0.28 ) }
    dend_15 { pt3dadd( 35.6204, -37.6496, -84.6833, 0.55 ) }
    dend_15 { pt3dadd( 36.9072, -40.2275, -84.9632, 0.28 ) }
    dend_15 { pt3dadd( 37.5449, -41.4138, -85.2562, 0.55 ) }
    dend_15 { pt3dadd( 39.0177, -43.9347, -86.186, 0.28 ) }
    dend_15 { pt3dadd( 39.6064, -44.8577, -86.6395, 0.55 ) }
    dend_15 { pt3dadd( 41.6782, -47.8757, -88.327, 0.28 ) }
    dend_15 { pt3dadd( 42.1884, -48.6082, -88.7717, 0.55 ) }
    dend_15 { pt3dadd( 43.7356, -50.9293, -90.2747, 0.28 ) }
    dend_15 { pt3dadd( 44.0616, -51.4765, -90.5819, 0.55 ) }
    dend_15 { pt3dadd( 44.8699, -52.9258, -91.3815, 0.28 ) }
    dend_15 { pt3dadd( 45.3505, -53.7639, -91.9345, 0.55 ) }
    dend_15 { pt3dadd( 45.8562, -54.583, -92.5485, 0.55 ) }
    dend_15 { pt3dadd( 46.8658, -56.2176, -93.7598, 0.28 ) }
    dend_15 { pt3dadd( 47.5989, -57.2192, -94.6358, 0.55 ) }
    dend_15 { pt3dadd( 50.0007, -59.6707, -97.4474, 0.28 ) }
    dend_15 { pt3dadd( 50.9471, -60.4502, -98.5844, 0.55 ) }
    dend_15 { pt3dadd( 51.6131, -60.9397, -99.3535, 0.28 ) }
    dend_15 { pt3dadd( 52.3011, -61.3799, -100.119, 0.55 ) }
    dend_15 { pt3dadd( 54.464, -62.594, -102.429, 0.28 ) }
    dend_15 { pt3dadd( 56.1178, -63.5397, -104.129, 0.55 ) }
    dend_15 { pt3dadd( 58.9997, -65.3693, -106.795, 0.28 ) }
    dend_15 { pt3dadd( 59.9094, -65.9377, -107.629, 0.55 ) }
    dend_15 { pt3dadd( 61.6986, -66.9785, -109.065, 0.28 ) }
    dend_15 { pt3dadd( 62.3067, -67.32, -109.493, 0.55 ) }
    dend_15 { pt3dadd( 63.3302, -67.8682, -110.002, 0.28 ) }
    dend_15 { pt3dadd( 64.2465, -68.3294, -110.373, 0.55 ) }
    dend_15 { pt3dadd( 66.768, -69.4635, -111.122, 0.28 ) }
    dend_15 { pt3dadd( 69.6697, -70.6544, -111.932, 0.28 ) }
    dend_15 { pt3dadd( 71.151, -71.1973, -112.238, 0.28 ) }
    dend_15 { pt3dadd( 72.6371, -71.6986, -112.633, 0.55 ) }
    dend_15 { pt3dadd( 74.8101, -72.3367, -113.217, 0.28 ) }
    dend_15 { pt3dadd( 75.7792, -72.6073, -113.456, 0.83 ) }
    dend_15 { pt3dadd( 78.2592, -73.3304, -113.975, 0.28 ) }
    dend_15 { pt3dadd( 79.3288, -73.6654, -114.259, 0.55 ) }
    dend_15 { pt3dadd( 84.0043, -75.3008, -115.724, 0.28 ) }
    dend_15 { pt3dadd( 86.3203, -76.1402, -116.642, 0.28 ) }
    dend_15 { pt3dadd( 87.9904, -76.7478, -117.418, 0.55 ) }
    dend_15 { pt3dadd( 88.9472, -77.119, -117.979, 0.55 ) }
    dend_15 { pt3dadd( 91.4527, -78.134, -119.673, 0.28 ) }
    dend_15 { pt3dadd( 93.7743, -79.1868, -121.356, 0.55 ) }
    dend_15 { pt3dadd( 95.886, -80.2121, -122.89, 0.28 ) }
    dend_15 { pt3dadd( 97.7757, -81.1652, -124.383, 0.55 ) }
    dend_15 { pt3dadd( 99.3406, -81.934, -125.606, 0.28 ) }
    dend_15 { pt3dadd( 100.64, -82.4705, -126.534, 0.55 ) }
    dend_15 { pt3dadd( 103.808, -83.5886, -128.619, 0.28 ) }
    dend_15 { pt3dadd( 105.427, -84.1542, -129.608, 0.55 ) }
    dend_15 { pt3dadd( 107.875, -85.0123, -131.004, 0.28 ) }
    dend_15 { pt3dadd( 109.89, -85.6582, -132.098, 0.55 ) }
    dend_15 { pt3dadd( 114.61, -86.9663, -134.661, 0.28 ) }
    dend_15 { pt3dadd( 116.512, -87.3892, -135.831, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.04434, -126.498, 95.3563, 0.55 ) }
    dend_9 { pt3dadd( -8.17305, -136.717, 99.9664, 0.55 ) }
    dend_9 { pt3dadd( -8.04187, -147.743, 101.804, 0.55 ) }
    dend_9 { pt3dadd( -8.08779, -158.373, 105.312, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.04434, -126.498, 95.3563, 0.55 ) }
    dend_8 { pt3dadd( -6.70549, -135.067, 101.114, 0.55 ) }
    dend_8 { pt3dadd( -6.30315, -142.342, 108.606, 0.55 ) }
    dend_8 { pt3dadd( -5.39713, -147.991, 117.414, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.2916, -127.032, 96.0834, 0.55 ) }
    dend_6 { pt3dadd( -10.9906, -134.721, 100.439, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.2916, -127.032, 96.0834, 0.55 ) }
    dend_5 { pt3dadd( -13.0041, -136.225, 102.059, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.75233, -95.4587, 8.20675, 0.83 ) }
    dend_25 { pt3dadd( 9.44792, -98.1214, 8.37038, 0.83 ) }
    dend_25 { pt3dadd( 10.2198, -100.361, 8.57891, 0.83 ) }
    dend_25 { pt3dadd( 10.9871, -102.587, 8.78619, 0.83 ) }
    dend_25 { pt3dadd( 11.7158, -104.7, 8.98305, 0.83 ) }
    dend_25 { pt3dadd( 12.8387, -107.958, 9.28641, 0.83 ) }
    dend_25 { pt3dadd( 13.9536, -111.192, 9.58758, 0.83 ) }
    dend_25 { pt3dadd( 15.0017, -113.325, 9.90472, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.75233, -95.4587, 8.20675, 0.55 ) }
    dend_24 { pt3dadd( 10.4564, -97.8383, 7.99401, 0.55 ) }
    dend_24 { pt3dadd( 11.6983, -99.714, 7.51244, 0.55 ) }
    dend_24 { pt3dadd( 12.5255, -101.108, 7.03428, 0.55 ) }
    dend_24 { pt3dadd( 13.2089, -102.752, 6.32248, 0.83 ) }
    dend_24 { pt3dadd( 13.8177, -104.63, 5.31755, 0.55 ) }
    dend_24 { pt3dadd( 14.4133, -106.468, 4.3346, 0.83 ) }
    dend_24 { pt3dadd( 14.9116, -108.47, 3.11199, 0.55 ) }
    dend_24 { pt3dadd( 15.1763, -109.638, 2.29843, 0.83 ) }
    dend_24 { pt3dadd( 15.8197, -113.43, -0.586254, 0.55 ) }
    dend_24 { pt3dadd( 16.0502, -116.414, -2.98052, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.92204, -100.927, 36.3467, 0.55 ) }
    dend_20 { pt3dadd( -12.5209, -107.894, 40.7357, 0.55 ) }
    dend_20 { pt3dadd( -17.3581, -114.024, 45.2504, 0.55 ) }
    dend_20 { pt3dadd( -22.8381, -119.337, 50.1051, 0.55 ) }
    dend_20 { pt3dadd( -29.0924, -123.63, 55.0822, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.92204, -100.927, 36.3467, 0.55 ) }
    dend_19 { pt3dadd( -11.0176, -105.719, 40.2071, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.0017, -113.325, 9.90472, 0.55 ) }
    dend_27 { pt3dadd( 15.3906, -114.983, 10.3247, 0.55 ) }
    dend_27 { pt3dadd( 15.9691, -117.1, 10.8547, 0.55 ) }
    dend_27 { pt3dadd( 16.5074, -119.1, 11.3466, 0.55 ) }
    dend_27 { pt3dadd( 16.8617, -120.521, 11.6935, 0.55 ) }
    dend_27 { pt3dadd( 17.4436, -123.059, 12.3061, 0.55 ) }
    dend_27 { pt3dadd( 19.0171, -130.216, 13.8164, 0.55 ) }
    dend_27 { pt3dadd( 19.513, -132.66, 14.2105, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 19.8014, -134.39, 14.4225, 0.55 ) }
    dend_27 { pt3dadd( 20.0222, -136.379, 14.5415, 0.55 ) }
    dend_27 { pt3dadd( 20.0719, -137.925, 14.558, 0.55 ) }
    dend_27 { pt3dadd( 20.1506, -141.559, 14.4134, 0.55 ) }
    dend_27 { pt3dadd( 20.1412, -144.309, 14.3727, 0.55 ) }
    dend_27 { pt3dadd( 20.2086, -146.115, 14.3463, 0.55 ) }
    dend_27 { pt3dadd( 20.5517, -150.781, 14.4555, 0.55 ) }
    dend_27 { pt3dadd( 20.8732, -153.905, 14.6398, 0.55 ) }
    dend_27 { pt3dadd( 21.4727, -157.918, 15.0198, 0.55 ) }
    dend_27 { pt3dadd( 22.4605, -162.451, 15.6498, 0.55 ) }
    dend_27 { pt3dadd( 23.3585, -165.476, 16.0972, 0.55 ) }
    dend_27 { pt3dadd( 23.956, -167.263, 16.3621, 0.55 ) }
    dend_27 { pt3dadd( 24.4817, -168.909, 16.6263, 0.55 ) }
    dend_27 { pt3dadd( 25.097, -171.003, 16.8653, 0.55 ) }
    dend_27 { pt3dadd( 26.2776, -176.071, 17.2495, 0.55 ) }
    dend_27 { pt3dadd( 26.7252, -178.044, 17.2975, 0.55 ) }
    dend_27 { pt3dadd( 27.1761, -180.237, 17.3803, 0.55 ) }
    dend_27 { pt3dadd( 27.8215, -183.529, 17.5133, 0.55 ) }
    dend_27 { pt3dadd( 28.2547, -186.048, 17.7211, 0.55 ) }
    dend_27 { pt3dadd( 28.5464, -188.432, 18.0022, 0.55 ) }
    dend_27 { pt3dadd( 28.7544, -190.696, 18.3476, 0.55 ) }
    dend_27 { pt3dadd( 28.9556, -192.9, 18.7359, 0.55 ) }
    dend_27 { pt3dadd( 29.0934, -194.471, 18.9941, 0.55 ) }
    dend_27 { pt3dadd( 29.2619, -197.048, 19.3419, 0.55 ) }
    dend_27 { pt3dadd( 29.2536, -200.157, 19.6275, 0.55 ) }
    dend_27 { pt3dadd( 29.1902, -201.679, 19.6571, 0.55 ) }
    dend_27 { pt3dadd( 29.068, -203.023, 19.6018, 0.55 ) }
    dend_27 { pt3dadd( 28.8044, -205.58, 19.3057, 0.55 ) }
    dend_27 { pt3dadd( 28.5922, -207.203, 19.0994, 0.55 ) }
    dend_27 { pt3dadd( 28.4026, -209.201, 18.8801, 0.55 ) }
    dend_27 { pt3dadd( 28.2966, -210.594, 18.8241, 0.55 ) }
    dend_27 { pt3dadd( 28.083, -214.2, 18.8254, 0.55 ) }
    dend_27 { pt3dadd( 28.0232, -216.881, 19.0111, 0.55 ) }
    dend_27 { pt3dadd( 28.141, -221.0, 19.5891, 0.55 ) }
    dend_27 { pt3dadd( 28.4494, -223.645, 20.095, 0.55 ) }
    dend_27 { pt3dadd( 28.8276, -226.413, 20.7067, 0.28 ) }
    dend_27 { pt3dadd( 28.9953, -227.52, 21.0063, 0.28 ) }
    dend_27 { pt3dadd( 29.5826, -230.187, 21.9179, 0.28 ) }
    dend_27 { pt3dadd( 30.2614, -232.634, 22.9188, 0.28 ) }
    dend_27 { pt3dadd( 31.637, -235.87, 24.2504, 0.28 ) }
    dend_27 { pt3dadd( 33.959, -243.37, 25.1508, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.0017, -113.325, 9.90472, 0.55 ) }
    dend_26 { pt3dadd( 16.0737, -113.804, 9.42201, 0.55 ) }
    dend_26 { pt3dadd( 18.3781, -114.963, 8.59271, 0.55 ) }
    dend_26 { pt3dadd( 20.4173, -116.074, 7.96195, 0.28 ) }
    dend_26 { pt3dadd( 22.6432, -117.319, 7.34616, 0.55 ) }
    dend_26 { pt3dadd( 24.0913, -118.088, 7.12186, 0.28 ) }
    dend_26 { pt3dadd( 26.7253, -119.441, 6.91004, 0.55 ) }
    dend_26 { pt3dadd( 27.9813, -120.115, 7.06557, 0.28 ) }
    dend_26 { pt3dadd( 28.4716, -120.35, 7.17509, 0.28 ) }
    dend_26 { pt3dadd( 29.3245, -120.683, 7.35942, 0.55 ) }
    dend_26 { pt3dadd( 32.5541, -121.79, 7.87296, 0.28 ) }
    dend_26 { pt3dadd( 33.9081, -122.226, 8.04675, 0.55 ) }
    dend_26 { pt3dadd( 37.8179, -123.542, 8.23233, 0.28 ) }
    dend_26 { pt3dadd( 39.8789, -124.209, 8.2098, 0.28 ) }
    dend_26 { pt3dadd( 42.3818, -125.081, 8.07086, 0.55 ) }
    dend_26 { pt3dadd( 45.9596, -126.471, 7.62289, 0.28 ) }
    dend_26 { pt3dadd( 46.419, -126.661, 7.52075, 0.55 ) }
    dend_26 { pt3dadd( 48.6021, -127.612, 6.89166, 0.28 ) }
    dend_26 { pt3dadd( 48.7883, -127.703, 6.81674, 0.55 ) }
    dend_26 { pt3dadd( 50.4589, -128.725, 6.23517, 0.28 ) }
    dend_26 { pt3dadd( 51.2815, -129.269, 6.01002, 0.55 ) }
    dend_26 { pt3dadd( 58.0854, -133.323, 4.14565, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -29.0924, -123.63, 55.0822, 0.55 ) }
    dend_22 { pt3dadd( -32.4726, -128.117, 63.6577, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -29.0924, -123.63, 55.0822, 0.55 ) }
    dend_21 { pt3dadd( -35.6367, -131.855, 58.8507, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 13
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 13
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 3
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 11
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_BP_bc09d28ed4_0_0


