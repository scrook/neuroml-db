// Cell: cNAC187_L4_LBC_8e834c24cb_0_0
/*
{
  "id" : "cNAC187_L4_LBC_8e834c24cb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.1095, -11.685, 0.570337, 3.16052", "-4.63521, -10.5008, 0.513621, 5.45982", "-4.16092, -9.31666, 0.456904, 7.50899", "-3.68663, -8.13248, 0.400188, 11.3322", "-3.21235, -6.9483, 0.343471, 12.8266", "-2.73806, -5.76412, 0.286755, 14.3389", "-2.26377, -4.57994, 0.230039, 15.4162", "-1.78948, -3.39575, 0.173322, 16.3756", "-1.3152, -2.21157, 0.116606, 17.1148", "-0.840909, -1.02739, 0.0598891, 17.5087", "-0.366622, 0.156787, 0.00317258, 18.1754", "0.107666, 1.34097, -0.0535439, 18.705", "0.581953, 2.52515, -0.11026, 18.3379", "1.05624, 3.70933, -0.166977, 17.6777", "1.53053, 4.89351, -0.223693, 16.2317", "2.00482, 6.07769, -0.28041, 14.5638", "2.4791, 7.26187, -0.337126, 12.887", "2.95339, 8.44605, -0.393843, 11.0587", "3.42768, 9.63023, -0.450559, 9.10164", "3.90197, 10.8144, -0.507276, 6.70215", "4.37625, 11.9986, -0.563992, 4.57645" ]
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.68434, 6.30127, -20.3386, 1.67", "6.6296, 8.721, -21.97, 1.67", "7.7355, 11.5519, -23.8786, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "7.73434, 4.99027, -12.2086, 1.11", "8.74067, 3.98435, -13.7074, 1.11", "10.2018, 3.00632, -15.8871, 0.83", "14.2571, 1.18486, -21.5652, 1.39", "15.1655, 0.91936, -22.5993, 1.39", "17.6893, 0.327441, -24.8616, 0.56", "21.01, -0.446684, -27.1579, 1.11", "23.8633, -1.04556, -28.4744, 1.39", "25.3457, -1.32272, -28.9769, 0.83", "29.4095, -2.06245, -29.9635, 1.11", "32.5357, -2.59826, -30.8617, 0.56", "35.6653, -3.11885, -31.8455, 1.11", "40.088, -3.95871, -33.4639, 0.83", "43.2967, -4.49715, -35.0318, 0.56", "46.1224, -4.847, -36.8792, 1.11", "49.2078, -4.90596, -39.6944, 0.56", "50.2625, -4.80394, -40.8085, 0.28", "51.855, -4.5177, -42.7626, 0.83", "53.8907, -4.02778, -45.3486, 0.83", "54.7883, -3.86626, -46.4023, 0.83", "57.2725, -3.62766, -48.8207, 0.56", "59.4656, -3.58571, -50.8134, 1.11", "62.4792, -3.62191, -53.733, 1.11", "63.8311, -3.66478, -55.04, 0.28", "66.738, -3.84095, -57.9218, 0.83", "73.0851, -4.32701, -64.07, 0.28", "77.1178, -4.72787, -67.8955, 1.94", "82.8909, -5.40108, -73.2605, 0.28", "84.5784, -5.58701, -74.7768, 0.56", "88.8419, -6.10554, -78.7149, 0.28", "90.7901, -6.35826, -80.8215, 0.83", "94.7558, -6.98127, -85.5604, 0.28", "96.1526, -7.23598, -87.3288, 1.39", "98.6735, -7.72201, -90.7201, 0.28", "100.322, -8.01606, -93.1218, 1.39", "108.574, -9.33895, -105.832, 0.28", "109.83, -9.55437, -108.108, 1.39", "113.883, -10.3615, -116.169, 0.28", "115.723, -10.7778, -120.141, 1.11", "117.409, -11.2446, -124.104, 0.28", "117.655, -11.3247, -124.742, 1.11", "122.031, -13.6619, -139.553, 0.28", "122.379, -13.922, -141.055, 0.28", "122.762, -14.4023, -143.18, 0.83", "123.368, -15.5078, -147.137, 0.28", "123.717, -16.4826, -149.768, 1.11", "125.271, -21.6021, -161.26, 0.28", "125.41, -22.0699, -162.111, 1.11", "126.484, -25.3433, -167.718, 0.28", "127.515, -27.9406, -171.827, 0.83", "129.521, -32.4818, -178.398, 0.28", "129.753, -32.9816, -179.069, 0.83", "131.906, -37.3323, -184.223, 0.28", "132.253, -38.0006, -185.025, 1.11", "134.877, -42.5749, -190.495, 0.28", "135.236, -43.1199, -191.132, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-8.92566, -4.19623, -8.61862, 1.39", "-10.8616, -4.31175, -9.60973, 1.39", "-14.8513, -4.32657, -11.3241, 1.39", "-17.997, -4.19553, -12.4114, 1.39", "-23.0876, -3.753, -13.9072, 1.11", "-26.6596, -3.44248, -14.9568, 1.11", "-29.8107, -3.16854, -15.8827, 1.11", "-33.1548, -2.71661, -16.6767, 0.83", "-35.6005, -2.20159, -16.9233, 0.83", "-37.2887, -1.76673, -16.8793, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-9.85566, -1.37473, -2.22863, 1.67", "-11.4622, -1.22045, -1.84037, 1.67", "-14.734, -0.906255, -1.04965, 1.67", "-17.7204, -0.619445, -0.327869, 1.94", "-20.6528, -0.337845, 0.380825, 1.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.56434, 11.9062, -4.92863, 3.89", "3.56434, 13.7007, -4.92863, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.73434, 4.99027, -12.2086, 1.11", "8.66744, 4.0684, -13.5771, 1.11", "10.0193, 3.17245, -15.569, 0.83", "13.7646, 1.50623, -20.7602, 1.39", "14.602, 1.26458, -21.7054, 1.39", "16.9264, 0.7291, -23.7719, 0.56", "19.9828, 0.0313448, -25.8669, 1.11", "22.607, -0.504981, -27.065, 1.39", "23.9696, -0.751785, -27.5211, 0.83", "27.7042, -1.40855, -28.4131, 1.11", "30.5771, -1.8838, -29.2271, 0.56", "33.4533, -2.34538, -30.1196, 1.11", "37.5192, -3.09405, -31.5897, 0.83", "40.4697, -3.57366, -33.0178, 0.56", "43.0683, -3.88371, -34.7038, 1.11", "45.9058, -3.92888, -37.2781, 0.56", "46.8754, -3.83282, -38.2976, 0.28", "48.3392, -3.56753, -40.087, 0.83", "50.2099, -3.11498, -42.4556, 0.83", "51.0348, -2.96511, -43.4204, 0.83", "53.318, -2.73966, -45.6332, 0.56", "55.3344, -2.69482, -47.4556, 1.11", "58.1061, -2.71995, -50.1258, 1.11", "59.3497, -2.75565, -51.3211, 0.28", "62.0244, -2.90969, -53.9563, 0.83", "67.8647, -3.3385, -59.5777, 0.28", "71.5757, -3.69507, -63.0749, 1.94", "76.8888, -4.29625, -67.9788, 0.28", "78.4416, -4.46183, -69.3647, 0.56", "82.3653, -4.92531, -72.9641, 0.28", "84.1592, -5.15269, -74.8905, 0.83", "87.8125, -5.7168, -79.2247, 0.28", "89.0998, -5.9482, -80.8423, 1.39", "91.4236, -6.39074, -83.9448, 0.28", "92.9436, -6.65898, -86.1424, 1.39", "100.553, -7.86758, -97.7741, 0.28", "101.712, -8.0657, -99.8584, 1.39", "105.455, -8.81036, -107.239, 0.28", "107.156, -9.19529, -110.876, 1.11", "108.715, -9.62748, -114.505, 0.28", "108.943, -9.70177, -115.089, 1.11", "113.008, -11.8726, -128.654, 0.28", "113.333, -12.1145, -130.031, 0.28", "113.693, -12.5605, -131.977, 0.83", "114.266, -13.5852, -135.601, 0.28", "114.599, -14.4868, -138.01, 1.11", "116.086, -19.215, -148.527, 0.28", "116.218, -19.6464, -149.305, 1.11", "117.238, -22.6626, -154.434, 0.28", "118.209, -25.0536, -158.19, 0.83", "120.095, -29.2304, -164.196, 0.28", "120.312, -29.6898, -164.808, 0.83", "122.328, -33.6858, -169.515, 0.28", "122.651, -34.2996, -170.247, 1.11", "125.101, -38.4988, -175.241, 0.28", "125.436, -38.9988, -175.822, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "9.05434, 0.477776, 1.01137, 1.94", "10.706, 0.37427, 1.8438, 1.94", "13.8479, 0.536991, 3.37051, 1.39", "18.2599, 1.499, 4.90117, 1.39", "20.7132, 2.41774, 5.435, 1.67", "22.3853, 3.2737, 5.6346, 1.67", "25.3002, 5.06146, 6.01861, 1.11", "28.0574, 7.23072, 6.22913, 1.11", "33.594, 12.5167, 6.65576, 1.11", "34.599, 13.6012, 6.7129, 1.11", "36.3134, 15.4974, 6.87977, 1.39", "39.6302, 19.1234, 7.41171, 1.11", "41.5775, 21.1168, 7.80418, 1.11", "44.2959, 23.5397, 8.63455, 1.11", "47.2653, 25.9526, 9.80788, 1.11", "50.3374, 28.4454, 11.0047, 1.11", "52.5351, 30.2176, 11.8008, 1.11", "54.5133, 31.8105, 12.3702, 1.11", "57.4924, 34.2385, 13.2718, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.21434, 2.69127, -15.0986, 1.39", "13.3947, 1.4295, -14.6107, 1.39", "24.1457, -1.18908, -13.5983, 1.11", "29.4428, -2.47929, -13.0995, 1.11", "32.7009, -3.27285, -12.7927, 1.11", "35.8994, -4.05189, -12.4915, 1.11", "37.9025, -4.53979, -12.3028, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.86566, -10.1718, 5.67137, 3.61", "-2.50959, -12.6363, 5.72274, 3.05", "-4.18273, -19.04, 5.85622, 3.05", "-5.22921, -23.0452, 5.93969, 2.5", "-6.55735, -28.1285, 6.04564, 2.22", "-7.00248, -29.8321, 6.08115, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.37625, 11.9986, -0.563992, 1.67", "9.95335, 25.9233, -0.563992, 1.67", "15.5304, 39.8479, -0.563992, 1.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "7.7355, 11.5519, -23.8786, 1.39", "7.94715, 11.2287, -24.9209, 1.39", "8.03915, 11.1619, -25.2811, 1.39", "8.758, 11.0706, -28.9658, 0.83", "9.12838, 11.1965, -31.7835, 1.39", "9.42952, 11.3642, -34.5466, 0.56", "9.51573, 11.4272, -35.3578, 0.56", "9.82798, 11.7412, -38.7868, 1.67", "10.3314, 12.3951, -44.4092, 1.67", "10.6732, 12.9077, -47.9713, 1.67", "11.0863, 13.5127, -52.149, 0.83", "11.2147, 13.6344, -53.3389, 1.67", "11.6172, 13.9455, -56.7817, 0.83", "11.9332, 14.1353, -58.9966, 0.28", "12.2866, 14.219, -60.7361, 1.11", "12.6779, 14.2517, -62.1522, 1.39", "13.4487, 14.254, -64.4411, 0.28", "13.4487, 14.254, -64.4411, 0.56", "14.1156, 14.2788, -66.0808, 0.28", "14.6224, 14.2942, -67.2819, 0.83", "16.0398, 14.3466, -70.6133, 0.56", "16.4931, 14.3613, -71.6924, 1.94", "20.717, 14.4187, -81.81, 0.28", "20.8436, 14.4167, -82.1101, 0.83", "21.7596, 14.3627, -84.4557, 0.56", "22.209, 14.3073, -85.6737, 0.83", "23.2002, 14.0553, -88.6802, 0.28", "23.3957, 13.9847, -89.3145, 1.39", "23.5707, 13.8902, -89.9587, 1.39", "25.6195, 12.8147, -97.831, 0.28", "25.8129, 12.7199, -98.6392, 1.11", "26.7477, 12.3133, -102.471, 0.28", "26.9081, 12.2516, -103.135, 0.83", "27.7749, 11.952, -106.81, 0.28", "27.9369, 11.8974, -107.514, 1.11", "29.4932, 11.441, -113.675, 0.28", "29.8644, 11.3648, -115.227, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "7.7355, 11.5519, -23.8786, 0.56", "7.0602, 14.6937, -23.1658, 0.56", "6.40323, 15.7627, -23.5256, 0.56", "5.44186, 17.1845, -24.2901, 0.83", "4.78304, 18.1087, -24.8068, 0.56", "3.58344, 19.6835, -25.669, 0.83", "1.44785, 22.3431, -27.1483, 2.22", "-0.916712, 24.9222, -28.763, 0.56", "-2.77602, 26.8156, -29.9277, 0.56", "-3.97839, 27.9866, -30.6282, 0.56", "-5.16652, 29.1986, -31.3033, 1.67", "-7.53932, 31.8379, -32.58, 0.56", "-8.849, 33.6257, -33.2202, 1.11", "-9.74137, 35.1207, -33.6723, 0.28", "-10.3303, 36.4023, -34.0619, 0.83", "-11.2269, 39.0166, -34.7208, 0.28", "-11.6695, 40.7042, -35.3071, 1.39", "-12.8459, 46.1319, -37.4732, 0.28", "-13.1499, 47.7763, -38.2039, 1.39", "-13.815, 51.7485, -40.129, 0.28", "-14.3128, 54.9801, -41.7121, 1.67", "-15.5201, 63.1013, -45.8976, 0.28", "-15.6711, 64.1076, -46.4191, 0.28", "-15.784, 64.836, -46.8011, 0.56", "-15.9762, 66.3221, -47.6168, 0.28", "-16.1688, 68.2677, -48.6725, 0.56", "-16.3113, 70.6327, -49.8841, 0.28", "-16.3469, 73.1498, -50.7864, 1.94", "-16.3906, 76.095, -52.0117, 0.28", "-16.5121, 78.932, -53.4411, 1.39", "-16.5944, 80.159, -54.0916, 0.28", "-16.6685, 80.947, -54.5685, 0.56", "-16.9276, 83.2837, -56.0586, 0.28", "-17.0123, 83.8292, -56.481, 0.56", "-17.4393, 85.8463, -58.0676, 0.28", "-17.8285, 87.438, -59.2898, 1.39", "-18.589, 90.4162, -61.6121, 0.28", "-18.9849, 92.0694, -62.9849, 1.67", "-19.4455, 94.0315, -64.6629, 0.28", "-19.6778, 95.2158, -65.7698, 1.11", "-19.8224, 96.1962, -66.7575, 0.28", "-19.8608, 96.566, -67.1203, 0.83", "-19.9961, 98.9536, -68.7563, 0.28", "-19.9926, 99.2359, -68.9147, 0.56", "-19.8374, 100.83, -69.6169, 0.28", "-19.7442, 101.562, -69.9509, 0.83", "-19.4444, 104.471, -71.0517, 0.28", "-19.3931, 106.566, -71.3925, 1.39" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-37.2887, -1.76673, -16.8793, 0.56", "-39.7881, -1.65855, -16.884, 0.56", "-41.9398, -1.38917, -17.0078, 0.56", "-43.7302, -1.03679, -17.182, 0.56", "-45.9753, -0.431762, -17.4754, 0.56", "-49.0543, 0.482988, -18.0013, 0.56", "-50.3047, 0.862345, -18.2693, 0.28", "-51.5273, 1.3083, -18.6685, 0.83", "-52.3706, 1.66594, -18.9773, 0.28", "-53.357, 2.0752, -19.3574, 0.56", "-54.9085, 2.63816, -19.9723, 0.28", "-56.1954, 3.004, -20.3613, 1.67", "-57.3692, 3.21696, -20.6678, 1.94", "-58.7565, 3.39629, -21.0218, 1.11", "-60.4731, 3.58728, -21.4112, 0.56", "-61.769, 3.67537, -21.6923, 0.56", "-63.3863, 3.76235, -22.013, 0.56", "-64.1008, 3.78501, -22.1041, 0.56", "-66.9397, 3.78489, -22.3654, 0.28", "-68.2628, 3.72764, -22.4734, 1.39", "-72.2219, 3.495, -22.7647, 0.56", "-73.8095, 3.38015, -22.8672, 1.67", "-77.2299, 3.0776, -23.033, 0.28", "-79.1358, 2.87436, -23.0256, 0.83", "-81.2837, 2.65249, -22.7357, 0.28", "-82.2742, 2.59065, -22.5205, 0.56", "-84.4074, 2.57232, -21.8533, 0.28", "-86.1057, 2.60988, -21.1852, 0.28", "-88.1277, 2.73254, -20.2847, 2.22", "-92.2302, 3.07118, -18.2995, 0.28", "-93.9308, 3.18764, -17.5152, 0.28", "-95.3754, 3.23774, -16.8424, 1.39", "-98.2293, 3.26055, -15.5139, 0.28", "-99.4915, 3.2106, -14.9477, 0.28", "-100.808, 3.03852, -14.3867, 0.83", "-103.507, 2.42378, -13.191, 0.28", "-105.998, 1.63746, -11.9912, 0.28", "-106.593, 1.40569, -11.6955, 0.28", "-107.527, 0.990882, -11.219, 0.56", "-110.129, -0.297013, -9.70045, 0.28", "-110.947, -0.738735, -9.24958, 1.11", "-112.911, -1.90686, -8.2495, 0.28", "-113.815, -2.4642, -7.88756, 0.56", "-115.579, -3.54365, -7.24459, 0.28", "-116.794, -4.3063, -6.84557, 1.11", "-119.138, -5.7596, -6.21245, 0.28", "-119.558, -6.01732, -6.11092, 0.83", "-121.749, -7.27805, -5.47803, 0.28", "-122.129, -7.4937, -5.38667, 0.56", "-124.31, -8.69427, -4.95004, 0.28", "-125.396, -9.26558, -4.74058, 1.11", "-129.0, -11.0653, -4.0231, 0.28", "-130.883, -11.9339, -3.65457, 1.94", "-133.285, -12.9663, -3.23728, 0.28", "-134.356, -13.3105, -3.00821, 0.83", "-135.436, -13.5102, -2.73658, 0.28", "-136.311, -13.5445, -2.49794, 0.56", "-138.48, -13.2325, -1.91469, 0.28", "-139.247, -13.0354, -1.67238, 0.83", "-142.097, -12.0269, -0.590004, 0.28", "-142.378, -11.9154, -0.477237, 0.83", "-144.284, -11.1056, 0.302468, 0.28", "-145.743, -10.5177, 0.832198, 0.83", "-149.075, -9.33144, 1.80945, 0.28", "-149.423, -9.22065, 1.88854, 0.83", "-150.511, -8.89716, 2.05131, 0.28", "-150.733, -8.83471, 2.07031, 0.83", "-153.426, -8.07646, 2.10858, 0.28", "-154.709, -7.66239, 1.90106, 0.83", "-156.516, -6.98557, 1.36545, 0.28", "-156.976, -6.81077, 1.21945, 0.83", "-159.264, -5.90196, 0.424727, 0.28", "-160.258, -5.46925, 0.0591669, 0.56", "-163.917, -3.57611, -1.4404, 0.28", "-164.976, -2.95835, -1.90394, 0.83" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-37.2887, -1.76673, -16.8793, 0.56", "-40.1807, -3.24768, -23.6361, 0.56", "-42.3881, -3.23845, -26.4437, 0.56", "-43.2436, -3.03157, -27.4233, 0.56", "-43.9146, -2.75104, -28.5568, 1.39", "-44.9152, -2.28948, -30.3005, 1.67", "-46.5009, -1.61121, -33.0468, 0.83", "-48.2963, -0.705465, -36.0546, 0.28", "-49.8933, 0.137561, -38.767, 1.11", "-54.7639, 2.80979, -47.335, 0.28", "-55.5464, 3.26516, -48.7196, 0.28", "-56.943, 4.03906, -51.3568, 1.67", "-58.9837, 5.07825, -55.0973, 0.56", "-61.04, 5.8419, -58.4337, 0.83", "-62.1655, 6.14366, -60.0234, 1.39", "-64.0118, 6.51301, -62.1172, 0.28", "-70.0295, 7.43347, -68.3395, 0.28", "-71.8772, 7.46279, -70.0106, 1.39", "-77.6216, 7.1722, -74.7723, 0.28", "-77.9834, 7.13268, -75.0571, 0.56", "-81.0278, 6.65347, -77.5171, 0.28", "-83.0775, 6.26613, -79.1328, 1.39", "-97.2941, 3.93625, -89.464, 0.28", "-98.1429, 3.80261, -90.1131, 0.83", "-99.9962, 3.54118, -91.5546, 0.83", "-105.513, 2.80008, -95.9592, 0.28", "-106.301, 2.66105, -96.6123, 0.56", "-114.658, 0.964104, -103.682, 0.28", "-117.142, 0.340971, -105.77, 1.11", "-122.974, -1.26559, -110.667, 0.28", "-123.526, -1.4226, -111.131, 0.83", "-136.422, -5.39917, -121.718, 0.28", "-138.028, -6.00822, -123.119, 1.11", "-142.746, -8.29988, -127.637, 0.28", "-144.159, -9.02052, -129.002, 0.83", "-148.35, -11.3356, -133.288, 0.28", "-148.977, -11.6872, -133.956, 0.83", "-153.078, -14.3193, -138.996, 0.28", "-155.112, -15.7025, -141.595, 1.39" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-20.6528, -0.337845, 0.380825, 1.11", "-27.8957, -2.28366, -4.24671, 1.11", "-30.3122, -2.59175, -5.6289, 0.83", "-32.9912, -2.92738, -7.08178, 0.83", "-35.2767, -3.18972, -8.25344, 0.83", "-37.0347, -3.34164, -9.11788, 0.83", "-39.5719, -3.48794, -10.39, 0.83", "-44.087, -3.44862, -12.1109, 0.83", "-46.162, -3.44467, -13.0076, 0.56", "-47.49, -3.45755, -13.5987, 0.56", "-49.1447, -3.4079, -14.2851, 1.11", "-51.8662, -3.31194, -15.3798, 0.56", "-54.5666, -3.19439, -16.3837, 0.56", "-57.8405, -2.96182, -17.443, 0.56", "-59.988, -2.67831, -18.1309, 1.94", "-62.7033, -2.29184, -19.0847, 0.56", "-63.3761, -2.1494, -19.3122, 0.56", "-65.6274, -1.54791, -20.1093, 0.56", "-67.507, -0.912575, -20.8609, 0.28", "-70.5399, 0.266689, -22.0632, 2.22", "-73.1899, 1.38664, -23.1629, 0.56", "-76.8832, 3.03097, -24.7396, 0.56", "-79.3441, 4.1614, -25.7627, 0.28", "-80.2053, 4.5598, -26.1316, 0.28", "-81.3694, 5.09331, -26.7131, 0.83", "-82.8799, 5.79998, -27.4608, 0.28", "-83.6384, 6.13156, -27.9038, 0.56", "-84.8787, 6.59269, -28.8191, 0.28", "-86.6839, 7.28099, -30.3931, 1.39", "-89.0341, 8.05744, -32.5652, 0.28", "-90.036, 8.38824, -33.5402, 0.56", "-91.6318, 8.97554, -35.0786, 0.28", "-91.9461, 9.1081, -35.3765, 0.56", "-93.4675, 9.88844, -36.7275, 0.28", "-95.8936, 11.4145, -38.6151, 0.28", "-97.0935, 12.3324, -39.4266, 1.67", "-98.8495, 13.8039, -40.5187, 0.28", "-99.4925, 14.3735, -40.8673, 0.56", "-101.351, 16.0788, -41.8498, 0.28", "-102.449, 17.1282, -42.392, 1.67", "-104.294, 18.8732, -43.4049, 0.28", "-104.738, 19.2517, -43.6529, 0.28", "-105.107, 19.511, -43.8767, 0.56", "-106.142, 20.0229, -44.4802, 0.28", "-106.904, 20.2128, -44.9434, 0.83", "-108.625, 20.4258, -46.019, 0.28", "-109.563, 20.4482, -46.6824, 0.83", "-111.717, 20.4489, -48.2814, 0.28", "-113.167, 20.4074, -49.4151, 1.39", "-115.837, 20.3243, -51.5015, 0.28", "-116.981, 20.3009, -52.3821, 1.67", "-119.892, 20.2577, -54.4753, 0.28", "-120.422, 20.2412, -54.8498, 0.56", "-122.671, 20.2129, -56.4459, 0.28", "-124.344, 20.2434, -57.6325, 1.11", "-125.546, 20.3069, -58.4433, 0.28", "-127.104, 20.3923, -59.4388, 0.28", "-129.002, 20.555, -60.5294, 0.56", "-130.778, 20.7425, -61.4887, 0.28", "-131.844, 20.8702, -62.1037, 0.83", "-133.396, 21.0642, -63.0937, 0.28", "-133.829, 21.101, -63.3745, 0.56", "-135.193, 21.2034, -64.2371, 0.28", "-136.769, 21.3254, -65.0625, 1.39", "-140.353, 21.6139, -66.7537, 0.28", "-141.221, 21.6695, -67.174, 0.83", "-144.291, 21.7951, -68.714, 0.28", "-145.142, 21.8143, -69.1853, 0.83", "-150.813, 22.0193, -72.573, 0.28", "-151.781, 22.0778, -73.1791, 0.83", "-153.878, 22.2978, -74.5248, 0.28", "-155.457, 22.5284, -75.6371, 0.83", "-157.101, 22.8824, -76.943, 0.83", "-159.801, 23.5737, -79.2368, 0.28", "-160.157, 23.6931, -79.5743, 0.56", "-162.106, 24.4703, -81.2026, 0.28", "-162.733, 24.7611, -81.6375, 0.83", "-164.55, 25.6718, -82.7252, 0.28", "-166.419, 26.5511, -83.6648, 0.83", "-168.229, 27.3403, -84.3866, 0.28", "-170.577, 28.4015, -85.1192, 1.11", "-172.47, 29.2975, -85.4449, 0.28", "-173.203, 29.6625, -85.5129, 0.56", "-175.177, 30.6668, -85.6111, 0.28", "-177.205, 31.6581, -85.7267, 0.83", "-178.054, 32.0655, -85.7557, 0.83", "-180.095, 32.9932, -85.9997, 0.28", "-180.514, 33.1964, -86.0199, 0.56", "-182.55, 34.1948, -86.205, 0.28", "-183.414, 34.6702, -86.4166, 0.56" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-20.6528, -0.337845, 0.380825, 0.83", "-23.3923, 2.11596, 1.62327, 0.83", "-24.8248, 3.583, 2.49805, 0.83", "-26.6887, 5.54667, 3.76372, 0.83", "-29.3671, 8.38525, 5.73848, 0.83", "-31.1156, 10.1785, 7.10509, 0.83", "-32.4085, 11.3972, 8.15224, 1.39", "-34.9276, 13.7876, 10.4125, 0.56", "-36.2793, 14.9833, 11.5314, 0.56", "-37.3869, 15.7384, 12.2257, 0.83", "-38.7264, 16.3565, 12.7964, 0.83", "-41.052, 17.1913, 13.2974, 0.83", "-43.588, 17.9588, 13.5394, 1.11", "-47.1159, 18.8725, 13.137, 0.83", "-48.8994, 19.3923, 12.8369, 0.83", "-50.7064, 20.05, 12.4227, 1.11", "-52.0909, 20.6856, 12.1854, 0.56", "-53.7411, 21.514, 12.1852, 1.39", "-55.6999, 22.4767, 12.6736, 1.11", "-56.856, 22.9799, 13.1909, 0.83", "-58.1619, 23.4554, 13.8298, 0.83", "-60.7268, 24.3195, 15.2594, 0.83", "-62.8969, 25.1032, 16.5596, 0.83", "-63.639, 25.38, 16.9616, 0.83", "-65.0558, 25.9286, 17.7691, 0.56", "-66.481, 26.4637, 18.5067, 0.83", "-67.9605, 27.0088, 19.2278, 0.83", "-69.1574, 27.5003, 19.6849, 0.56", "-72.4551, 29.0891, 20.7741, 0.83", "-74.4861, 30.1062, 21.4201, 0.56", "-75.4733, 30.6075, 21.7324, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.56434, 13.7007, -4.92863, 2.22", "3.00601, 19.6607, -9.67096, 2.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "3.56434, 13.7007, -4.92863, 0.83", "5.68441, 14.9619, -2.29573, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "57.4924, 34.2385, 13.2718, 1.11", "59.1113, 33.0065, 16.2048, 1.11", "59.5003, 32.7105, 16.9095, 1.39" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "57.4924, 34.2385, 13.2718, 0.56", "57.6111, 40.3397, 11.7953, 0.56", "57.6156, 43.8798, 11.9763, 0.56", "57.5842, 46.631, 12.2567, 0.28", "57.6006, 47.2351, 12.3225, 0.83", "57.7196, 49.6384, 12.6395, 0.28", "57.9863, 53.9892, 13.2139, 0.56", "58.414, 58.9521, 14.2896, 0.56", "58.6712, 60.8482, 14.5628, 0.56", "59.0836, 63.1234, 14.717, 0.56", "59.6627, 65.968, 14.7375, 0.28", "59.9134, 67.0274, 14.6416, 0.28", "60.2438, 68.2446, 14.1709, 0.83", "61.3384, 70.8523, 12.3869, 0.28", "62.1432, 72.6134, 11.1406, 0.28", "62.3019, 72.8719, 10.906, 0.56", "63.1263, 73.8152, 9.92675, 0.28", "63.1263, 73.8152, 9.92675, 0.56", "64.7653, 75.266, 8.609, 0.28", "65.9679, 76.2704, 7.93712, 0.56", "69.5677, 78.8492, 6.14078, 0.28", "70.7277, 79.5833, 5.57674, 0.28", "70.9539, 79.7344, 5.50326, 0.56", "71.7457, 80.5322, 5.58119, 0.28", "72.5827, 81.9755, 6.36287, 0.83", "73.1987, 83.3595, 7.32703, 0.28", "73.605, 84.6331, 8.38341, 0.83", "74.6868, 88.9291, 12.1312, 0.28", "75.4578, 92.5128, 15.3907, 0.28", "75.5617, 93.2426, 16.0973, 0.56", "79.4642, 102.253, 16.1743, 0.56", "84.4229, 110.747, 17.0724, 0.56", "89.6929, 118.982, 16.1463, 0.56", "95.1587, 127.136, 17.5127, 0.56", "101.037, 134.986, 19.1113, 0.56", "106.357, 143.043, 21.5496, 0.56" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "37.9025, -4.53979, -12.3028, 0.83", "45.4839, -7.06163, -11.9093, 0.83", "48.5097, -7.95427, -11.6866, 0.28", "51.2185, -8.73778, -11.4757, 0.83", "54.8423, -9.73158, -11.1936, 0.56", "62.9966, -11.6061, -10.3558, 0.56", "69.7734, -13.1215, -9.58033, 0.56", "75.5225, -14.2516, -9.14738, 0.56", "78.6213, -14.838, -8.76777, 1.39", "81.1933, -15.31, -8.43964, 0.83", "87.8531, -16.4377, -7.59859, 0.56", "89.9962, -16.884, -7.34396, 0.83", "93.3451, -17.5588, -7.0193, 0.56", "97.1479, -18.4382, -6.76993, 0.56", "102.427, -19.689, -6.65896, 0.83", "108.831, -21.2376, -6.78851, 0.56", "113.062, -22.3978, -7.09653, 0.56", "116.661, -23.3903, -7.40221, 0.56", "121.88, -25.0001, -7.91612, 1.94", "127.001, -26.8591, -8.48656, 0.56", "130.647, -28.3678, -8.78803, 0.56", "137.607, -31.8239, -9.34037, 0.56", "141.128, -33.7476, -9.59781, 0.56", "143.364, -35.1524, -9.75739, 0.28", "145.856, -36.9414, -9.84834, 0.28", "148.399, -39.0289, -9.84939, 1.67", "154.88, -45.2019, -9.6368, 0.28", "156.974, -47.4625, -9.3702, 0.28", "158.379, -49.1107, -9.10182, 0.56", "161.139, -52.549, -8.59606, 0.28", "164.567, -57.2476, -7.99143, 0.28", "167.546, -61.7931, -7.40289, 0.28", "169.664, -65.4491, -6.94323, 1.39", "170.836, -67.522, -6.67063, 1.39", "173.291, -71.869, -6.13424, 0.28", "174.01, -73.2129, -6.03388, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "37.9025, -4.53979, -12.3028, 0.83", "38.6149, -4.21765, -15.2089, 0.83", "43.098, -2.3977, -30.3248, 0.56", "43.8212, -2.15003, -32.4189, 0.56", "45.4528, -1.71929, -36.462, 1.11", "47.5215, -1.23592, -41.1009, 0.56", "49.2892, -0.891115, -44.7201, 1.67", "51.0267, -0.691985, -47.6674, 0.28", "52.2927, -0.557895, -49.2085, 1.11", "57.8855, -0.177746, -55.3371, 0.28", "58.7821, -0.145454, -56.1809, 0.83", "60.4676, -0.0050692, -57.5136, 0.83", "63.8887, 0.649797, -59.9481, 0.28", "64.6276, 0.920535, -60.4592, 1.11", "66.052, 1.59507, -61.376, 0.28", "67.3653, 2.24208, -62.1814, 0.83", "71.0902, 3.9992, -64.495, 0.28", "74.3649, 5.42928, -66.6322, 1.67", "82.4657, 8.66582, -71.9175, 0.28", "84.6438, 9.39705, -73.4054, 2.22", "92.0507, 11.4857, -78.6704, 0.28", "93.7464, 11.884, -79.9501, 1.11", "99.0541, 12.8836, -84.0566, 0.28", "100.454, 13.1142, -85.1597, 1.11", "105.298, 13.8098, -89.1991, 0.28", "106.935, 14.2825, -90.9139, 1.11", "110.408, 15.884, -95.4629, 0.28", "111.693, 16.635, -97.4116, 1.11", "113.024, 17.5526, -99.6229, 0.28", "113.446, 17.9095, -100.379, 0.56", "120.554, 25.0736, -113.871, 0.28", "122.416, 27.1029, -117.919, 1.67", "124.708, 29.7099, -123.14, 0.28", "124.918, 29.9545, -123.638, 0.56", "128.265, 33.8538, -131.589, 0.28", "128.696, 34.3745, -132.656, 1.39", "133.348, 40.4711, -144.885, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.00248, -29.8321, 6.08115, 1.67", "-7.71525, -35.8195, 6.66311, 1.67", "-8.44199, -40.4625, 7.12028, 1.67", "-9.12542, -44.244, 7.47142, 1.67", "-10.1457, -49.7519, 7.68117, 1.67", "-10.6328, -52.1875, 7.68202, 1.67", "-11.4513, -56.0015, 7.64029, 1.67", "-12.2446, -59.3297, 7.51157, 1.67", "-13.1763, -62.8397, 7.0749, 1.67", "-14.6644, -67.8846, 5.94586, 1.39", "-16.4903, -73.7787, 4.15778, 1.39", "-17.0965, -75.9815, 3.40039, 1.39", "-17.9962, -79.9958, 1.94992, 1.39", "-19.321, -88.2482, -0.985605, 1.39", "-19.6362, -91.5696, -2.10075, 1.39", "-19.8787, -97.3004, -3.65634, 1.11", "-19.8263, -102.283, -4.79485, 1.11", "-19.714, -105.297, -5.19582, 1.11", "-19.5815, -108.668, -5.20389, 1.11", "-19.4828, -112.94, -4.63726, 1.11", "-19.5936, -120.729, -3.15343, 1.11", "-19.987, -124.645, -2.15331, 1.11", "-20.9096, -129.593, -0.677093, 1.11", "-21.8691, -133.284, 0.452778, 1.11", "-22.6282, -135.715, 1.22612, 1.11", "-22.9757, -136.734, 1.54002, 1.11", "-24.4298, -141.1, 2.64454, 1.11", "-25.1988, -143.949, 2.94258, 1.11", "-25.6543, -146.31, 2.86337, 1.39", "-25.9895, -149.235, 2.58866, 1.39", "-26.192, -152.348, 2.2155, 1.11", "-26.3061, -155.069, 1.84152, 1.11", "-26.4794, -160.494, 1.01169, 1.11", "-26.6354, -163.422, 0.55891, 1.11", "-26.8629, -166.084, 0.0884328, 1.11", "-27.1901, -168.274, -0.309734, 1.39", "-27.5037, -170.127, -0.656324, 1.67", "-27.946, -172.148, -1.01992, 1.67", "-28.7804, -174.769, -1.40444, 1.11", "-30.0971, -178.143, -1.94409, 1.11", "-31.9791, -182.157, -2.61585, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.00248, -29.8321, 6.08115, 0.83", "-13.3764, -36.2712, 1.37164, 0.83", "-17.3496, -39.7287, -1.18924, 0.83", "-20.5928, -42.3319, -3.34955, 0.83", "-24.0949, -45.0266, -5.58076, 0.83", "-27.6046, -47.6098, -7.70492, 0.83", "-29.459, -48.8516, -8.83871, 0.83", "-32.779, -50.7507, -10.4665, 0.83", "-36.5342, -52.8781, -12.5716, 1.11", "-39.006, -54.1925, -14.0624, 0.83", "-41.5085, -55.5085, -15.5337, 1.11", "-46.7156, -58.3611, -18.5478, 0.83", "-50.2394, -60.4367, -20.5216, 0.83", "-55.1324, -63.504, -23.2981, 0.83", "-58.1756, -65.5243, -24.9529, 1.39", "-61.1809, -67.6822, -26.6295, 0.56", "-62.9671, -69.1408, -27.6595, 0.56", "-64.396, -70.4325, -28.4709, 1.11", "-67.7974, -73.5924, -30.4306, 0.56", "-71.9474, -77.402, -32.5924, 0.56", "-73.2331, -78.6969, -33.2415, 0.83", "-76.2209, -81.9823, -34.6637, 0.28", "-77.4772, -83.5033, -35.1657, 0.28", "-78.74, -85.1305, -35.5663, 1.39", "-81.032, -88.1908, -36.0243, 0.83", "-83.0939, -90.9605, -36.2999, 0.28", "-84.2004, -92.5699, -36.4581, 0.83", "-85.664, -94.8934, -36.6613, 0.28", "-86.5825, -96.5971, -36.8577, 0.56", "-87.7468, -98.9147, -37.2254, 0.28", "-88.4919, -100.469, -37.5309, 1.67", "-90.521, -104.709, -38.4161, 0.56", "-92.0003, -107.867, -39.075, 0.28", "-93.372, -110.909, -39.7894, 0.28", "-93.7932, -111.792, -40.0297, 1.67", "-95.0607, -114.267, -40.7898, 1.11", "-97.4407, -118.575, -42.2218, 0.28", "-98.0512, -119.563, -42.554, 0.56", "-100.217, -122.718, -43.7555, 0.28", "-102.9, -126.092, -45.1822, 0.28", "-103.407, -126.622, -45.3775, 0.56", "-104.864, -127.83, -45.7711, 0.28", "-105.432, -128.196, -45.8785, 0.83", "-108.099, -129.704, -46.2605, 0.28", "-111.011, -131.167, -46.3805, 1.39", "-116.077, -133.716, -46.0337, 0.28", "-118.001, -134.746, -45.7561, 0.56", "-120.712, -136.354, -45.1528, 0.28", "-121.711, -137.02, -44.8232, 0.28", "-124.716, -139.208, -43.4691, 1.67", "-127.652, -141.866, -41.7291, 0.56", "-128.443, -142.819, -41.1437, 0.28", "-129.495, -144.269, -40.115, 0.56", "-131.187, -146.717, -38.1877, 0.28", "-131.764, -147.499, -37.5479, 0.83", "-133.294, -149.369, -36.1528, 0.28", "-134.22, -150.375, -35.4583, 0.28", "-136.39, -152.626, -33.9111, 0.83", "-139.015, -155.357, -32.0543, 0.28", "-140.041, -156.472, -31.2687, 0.83", "-143.976, -160.902, -28.0985, 0.28", "-144.861, -161.885, -27.3778, 1.11", "-148.749, -166.42, -23.8049, 0.28", "-149.133, -166.933, -23.3989, 0.83", "-151.335, -170.328, -20.5989, 0.28", "-152.018, -171.494, -19.5857, 0.28", "-152.078, -171.615, -19.4634, 0.83", "-153.732, -175.327, -15.4181, 0.28", "-154.235, -176.645, -13.8041, 0.28", "-154.424, -177.107, -13.2218, 0.56" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "15.5304, 39.8479, -0.563992, 0.28", "21.1075, 53.7726, -0.563992, 0.28", "26.6846, 67.6972, -0.563992, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-19.3931, 106.566, -71.3925, 0.28", "-17.8752, 110.092, -73.0154, 0.28", "-17.197, 111.667, -73.7405, 0.28", "-16.8505, 112.472, -74.111, 1.39" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-19.3931, 106.566, -71.3925, 0.28", "-20.114, 108.379, -71.9557, 0.28", "-20.3272, 108.915, -72.1222, 0.56" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-75.4733, 30.6075, 21.7324, 0.56", "-76.458, 32.0237, 22.0534, 0.56", "-76.9875, 32.8818, 22.1977, 1.11", "-78.791, 36.1792, 22.5839, 0.56", "-80.2478, 39.0812, 22.8496, 0.83", "-80.7955, 40.4354, 22.9381, 0.83", "-81.0953, 41.4183, 22.9839, 0.28", "-81.1006, 41.8694, 22.9591, 0.56", "-80.8953, 42.5353, 22.8314, 0.28", "-80.8015, 42.7042, 22.7875, 0.83", "-79.6681, 44.2381, 22.7462, 0.28", "-79.2467, 44.9488, 22.7938, 0.83", "-78.8065, 45.9386, 22.9865, 0.28", "-78.5108, 46.6898, 23.1594, 0.83", "-77.8304, 49.0428, 23.8138, 0.28", "-77.6965, 49.8892, 24.0778, 0.83", "-77.7169, 51.6783, 24.7222, 0.28", "-77.823, 52.7998, 25.1629, 1.11", "-80.0681, 59.528, 26.7095, 1.11", "-84.1196, 65.4763, 28.1497, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-75.4733, 30.6075, 21.7324, 0.56", "-75.4751, 29.4266, 22.2076, 0.56", "-75.4768, 28.3017, 22.6603, 0.28", "-75.4799, 26.2653, 23.4797, 0.56", "-76.3472, 20.3818, 27.5826, 0.56", "-77.912, 14.481, 31.4303, 0.56", "-79.4784, 8.79187, 35.6192, 0.56", "-82.1163, 3.74434, 40.1523, 0.56", "-83.5693, -1.46728, 45.0205, 0.56", "-84.6151, -6.70801, 49.9629, 0.56", "-86.5203, -11.4916, 55.1454, 0.56", "-88.6884, -16.1916, 60.3059, 0.56" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "3.00601, 19.6607, -9.67096, 1.11", "0.0457888, 26.366, -13.3478, 1.11", "-1.6, 30.094, -15.392, 1.11", "-2.87812, 32.9891, -16.9795, 1.39" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.00601, 19.6607, -9.67096, 1.11", "11.6173, 25.6708, -0.168672, 1.11", "13.8237, 27.4481, 2.36018, 1.11", "16.554, 29.9936, 5.71226, 1.11", "18.6664, 31.9631, 8.30571, 1.11", "20.2372, 33.4276, 10.2343, 1.11", "21.6369, 34.7326, 11.9528, 1.11", "24.4146, 37.8778, 14.1164, 1.11", "25.542, 39.2136, 15.1712, 1.39" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.68441, 14.9619, -2.29573, 0.83", "7.27081, 16.3469, 0.495854, 0.83", "9.57809, 18.3399, 4.65517, 0.56", "11.0789, 19.7017, 7.36537, 0.56", "12.4754, 21.0291, 9.85006, 0.56", "17.2576, 25.7314, 17.9409, 1.11", "19.5362, 28.0159, 21.6185, 0.56", "20.7594, 29.1951, 23.3564, 0.83", "22.4477, 30.8545, 25.7372, 0.56", "23.0815, 31.4823, 26.6727, 0.56", "25.2014, 33.4221, 29.3621, 0.83", "26.9737, 35.3102, 30.3949, 0.56", "31.4175, 39.9922, 31.5158, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.68441, 14.9619, -2.29573, 0.56", "7.39274, 14.3903, -1.25884, 0.56", "9.57032, 13.6615, 0.062873, 0.83", "18.3179, 11.638, 5.64134, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "59.5003, 32.7105, 16.9095, 0.83", "62.6492, 34.6184, 18.4343, 0.83", "64.0762, 35.483, 19.1253, 0.83", "65.6594, 36.4423, 19.8919, 0.83", "67.1719, 37.3587, 20.6243, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "59.5003, 32.7105, 16.9095, 0.83", "61.008, 32.8733, 19.7877, 0.83", "63.4361, 33.1353, 24.4229, 0.83", "64.5301, 33.2534, 26.5111, 0.56", "65.2811, 33.3344, 27.9449, 0.56", "66.5394, 33.4702, 30.3469, 0.56", "67.477, 33.5714, 32.1367, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "174.01, -73.2129, -6.03388, 0.28", "176.652, -75.4744, -6.15475, 0.28", "179.073, -77.9631, -6.46759, 0.28", "180.012, -78.9275, -6.58882, 0.56", "183.217, -82.2216, -7.0029, 0.28", "183.907, -82.9308, -7.09205, 0.56", "187.199, -86.3152, -7.51747, 0.28", "188.434, -87.9098, -7.87401, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "174.01, -73.2129, -6.03388, 0.28", "177.437, -76.5764, -5.53821, 0.28", "179.025, -78.1209, -4.80469, 0.28", "179.708, -78.8247, -4.43462, 0.56", "181.333, -80.5029, -3.50971, 0.28", "182.746, -81.9925, -2.73856, 1.11", "184.031, -83.3395, -2.08106, 0.83", "188.193, -87.5766, -0.0146184, 0.28", "190.181, -89.5217, 1.04068, 0.28", "190.499, -89.8335, 1.25105, 0.56", "192.75, -92.0744, 2.9286, 0.28", "193.842, -93.1772, 3.73853, 1.11", "195.488, -94.7933, 4.99616, 0.28", "198.776, -97.7631, 7.44492, 0.56", "202.49, -100.937, 10.7379, 0.28", "203.252, -101.592, 11.5208, 0.56", "211.073, -109.532, 17.3319, 0.56" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-31.9791, -182.157, -2.61585, 1.11", "-31.6604, -184.763, -3.60605, 1.11", "-31.3402, -188.586, -4.984, 1.11", "-31.2025, -192.547, -6.82512, 1.11", "-31.1465, -193.906, -7.41876, 1.11", "-30.879, -196.762, -8.49532, 2.22", "-30.5797, -199.078, -9.35205, 3.33", "-30.3643, -200.693, -9.91435, 1.94", "-29.9791, -205.723, -11.2926, 0.83", "-29.9593, -208.792, -12.0247, 1.67", "-30.0038, -212.576, -12.7024, 2.22", "-30.0788, -215.013, -12.9811, 0.83", "-30.3112, -218.154, -13.3318, 0.83", "-30.7472, -221.529, -13.6199, 0.83", "-31.4392, -225.409, -13.9491, 1.11", "-31.9374, -227.51, -14.3152, 0.83", "-32.5121, -229.563, -14.7613, 0.83", "-33.4433, -232.975, -15.5358, 2.22", "-34.245, -236.093, -16.3359, 1.11", "-35.4856, -240.986, -17.6913, 0.83", "-36.2538, -243.804, -18.4658, 2.22", "-36.4515, -244.525, -18.6465, 2.22", "-37.5072, -248.564, -19.462, 0.83", "-38.1672, -251.4, -19.8465, 0.83", "-38.3569, -252.255, -19.9398, 1.39", "-39.0017, -255.259, -20.0327, 2.22", "-39.7986, -259.396, -19.9285, 0.83", "-40.1231, -261.167, -19.8762, 1.67", "-40.6672, -264.528, -19.7429, 2.5" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-31.9791, -182.157, -2.61585, 0.56", "-34.3565, -182.85, -4.85318, 0.56", "-35.9926, -183.328, -6.39296, 0.56", "-37.1951, -183.678, -7.52459, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-154.424, -177.107, -13.2218, 0.28", "-156.633, -177.836, -12.8235, 0.28", "-157.638, -178.168, -12.6422, 0.56", "-161.265, -179.365, -11.9881, 0.28", "-162.954, -179.922, -11.6837, 0.56", "-166.503, -181.093, -11.0437, 0.56", "-176.809, -184.185, -10.3424, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-154.424, -177.107, -13.2218, 0.28", "-153.687, -178.35, -13.6252, 0.28", "-153.397, -178.838, -13.7838, 0.56", "-149.359, -187.294, -14.8301, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-2.87812, 32.9891, -16.9795, 0.83", "-3.35462, 36.4981, -17.2988, 0.83", "-3.67253, 41.3964, -18.1148, 0.83", "-3.84146, 46.7956, -19.1666, 0.83", "-3.88455, 49.8361, -19.6956, 0.83", "-3.90394, 50.7682, -19.8645, 0.83", "-3.98608, 54.1071, -20.4605, 0.83", "-4.03931, 59.0077, -21.1567, 0.83", "-4.10055, 62.0723, -21.6735, 0.83", "-4.15707, 65.549, -22.2611, 1.11", "-4.36079, 69.7491, -22.9353, 0.83", "-4.56938, 71.7868, -23.1425, 1.11", "-5.00186, 74.8375, -23.3819, 0.83", "-5.93285, 79.7632, -23.5262, 0.83", "-6.67872, 83.4457, -23.665, 0.83", "-7.23924, 85.9731, -23.7871, 0.83", "-8.00679, 89.2268, -23.7696, 2.5" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-2.87812, 32.9891, -16.9795, 0.56", "-2.27696, 37.2272, -19.8282, 0.56", "-1.37137, 42.2874, -22.5842, 0.56", "-0.869122, 45.2643, -24.1904, 1.11", "0.0370398, 50.065, -26.6673, 0.56", "0.559755, 52.7525, -27.9753, 0.56", "1.41235, 56.7356, -29.8527, 1.11", "2.12777, 60.3211, -31.26, 0.56", "3.25445, 64.7582, -32.7317, 0.56", "3.96214, 66.943, -33.4882, 0.28", "4.61846, 68.6475, -33.9722, 0.56", "5.69163, 71.3801, -34.5856, 0.28", "5.93951, 72.0112, -34.6654, 0.56", "6.52941, 73.5204, -34.8179, 0.28", "6.69262, 73.9322, -34.809, 0.56", "7.15096, 75.2704, -34.766, 0.28", "8.38969, 78.8827, -34.6975, 1.67", "9.70826, 82.9597, -34.6289, 0.28", "9.89515, 83.5561, -34.6753, 0.56", "10.6414, 85.8972, -35.0039, 0.28", "10.8143, 86.4744, -35.1371, 1.39", "11.924, 90.0405, -36.1921, 0.28", "12.3077, 91.2896, -36.663, 0.83", "13.6623, 95.3858, -38.1473, 0.28", "14.3368, 97.3478, -38.9882, 1.39", "15.8873, 101.778, -41.1543, 0.28", "16.2567, 102.87, -41.703, 0.83", "17.2554, 106.086, -43.3715, 0.28", "17.91, 108.288, -44.5977, 1.39", "19.0398, 112.409, -46.9536, 0.28", "19.063, 112.524, -47.0203, 0.56", "19.2795, 114.2, -47.8548, 0.28", "19.3124, 114.848, -48.1194, 0.56", "19.3565, 118.329, -49.2852, 0.28", "19.3415, 119.259, -49.5884, 0.83", "19.2488, 122.991, -50.6146, 0.28", "19.2073, 125.402, -51.2648, 1.11", "19.1709, 134.123, -53.567, 0.28", "19.1843, 135.937, -53.9884, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "25.542, 39.2136, 15.1712, 0.83", "25.0867, 41.5371, 15.6557, 0.83", "24.6711, 43.3773, 16.1896, 0.83", "24.2344, 44.9844, 16.6363, 0.83", "23.3384, 47.9513, 17.5209, 0.83", "22.793, 49.7684, 18.1701, 0.83", "21.5248, 53.9378, 19.6962, 0.83", "20.7135, 56.789, 20.7626, 0.83", "19.8972, 59.7131, 21.8496, 0.83", "19.4318, 61.3948, 22.4044, 0.83", "18.4813, 64.6664, 23.4291, 0.83", "18.0691, 66.3892, 23.9807, 0.83", "17.4856, 69.3816, 24.8428, 0.83", "17.1539, 70.9228, 25.2654, 1.94", "16.6102, 73.5145, 25.9571, 1.39", "15.5788, 78.2475, 27.0208, 0.83", "14.916, 81.2047, 27.5843, 0.83", "14.3315, 83.7936, 28.1286, 1.11", "13.3867, 87.7834, 28.9528, 0.83", "13.0279, 89.4309, 29.2465, 0.83", "12.8526, 90.5732, 29.3912, 1.11", "12.6183, 92.985, 29.4571, 0.83", "12.5291, 94.1948, 29.4457, 0.56", "12.4652, 96.1406, 29.4237, 1.39", "12.4336, 99.2881, 29.373, 0.83", "12.3583, 102.215, 29.3465, 1.67", "12.2115, 105.361, 29.3217, 0.83", "12.1374, 106.565, 29.2765, 0.28", "12.0693, 107.63, 29.1888, 0.83", "11.9485, 109.084, 29.0418, 0.28", "11.856, 109.83, 28.9165, 0.83", "11.6057, 111.258, 28.7064, 0.28", "11.251, 113.11, 28.5021, 1.67", "10.7982, 115.288, 28.3749, 0.28", "10.6071, 116.156, 28.3655, 1.39", "10.0109, 118.538, 28.3503, 0.83", "9.2722, 121.248, 28.2347, 0.28", "9.01162, 122.102, 28.1864, 1.67", "8.4869, 123.642, 28.1174, 2.5", "8.03735, 124.869, 28.0415, 1.39", "7.31706, 126.828, 27.8219, 0.56", "6.65554, 128.602, 27.5354, 1.11", "6.03738, 130.284, 26.972, 0.28", "5.54031, 131.611, 26.4474, 1.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "25.542, 39.2136, 15.1712, 0.56", "25.841, 39.8739, 15.6836, 0.56", "26.0775, 40.5476, 16.0887, 0.56", "26.6239, 43.0223, 17.4538, 0.56", "26.9271, 44.9134, 18.4601, 0.83", "27.031, 45.5548, 18.7924, 0.83", "27.2759, 46.9036, 19.4662, 0.83", "27.5121, 48.6169, 20.1843, 0.56", "27.8096, 50.7232, 20.9082, 0.56", "27.8898, 51.1146, 20.994, 0.56", "28.1797, 52.0805, 21.1582, 0.56", "28.4287, 52.8456, 21.2707, 0.56", "29.0731, 54.5572, 21.5575, 0.83", "29.579, 55.9153, 21.8784, 0.56", "29.8243, 57.0062, 22.1499, 0.56", "29.8099, 57.3584, 22.2624, 0.83", "29.468, 58.5798, 22.734, 0.56", "28.8231, 59.9831, 23.3133, 1.67", "28.1375, 61.0132, 23.7742, 1.11", "26.9675, 62.3451, 24.2735, 0.83", "26.2194, 63.0314, 24.5763, 0.83", "25.264, 63.7468, 24.9568, 0.28", "24.653, 64.0641, 25.204, 0.56", "24.0027, 64.2549, 25.3806, 0.83", "22.6683, 64.3614, 25.5559, 0.56", "20.5364, 64.203, 25.8068, 0.83", "19.3341, 64.068, 25.9766, 0.28", "18.3212, 63.9775, 26.1154, 0.28", "16.9108, 63.8589, 26.3402, 0.83", "15.1918, 63.7478, 26.5993, 0.28", "13.0193, 63.6691, 26.869, 0.83", "10.7546, 63.7298, 26.876, 0.28", "9.67736, 63.849, 26.897, 1.11", "7.82601, 69.0386, 29.0713, 1.11", "5.20506, 73.5922, 31.9381, 1.11", "2.87977, 78.4595, 34.4669, 1.11", "0.285564, 83.1562, 37.0932, 1.11", "-1.97773, 87.6291, 40.3693, 1.11", "-5.14229, 91.5691, 43.6597, 1.11", "-9.13073, 95.1922, 46.414, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "31.4175, 39.9922, 31.5158, 0.56", "33.1378, 42.2711, 31.9419, 0.56", "34.0274, 43.4209, 32.2541, 0.83", "37.0049, 47.173, 33.5167, 0.56", "40.2379, 51.0523, 35.0045, 0.56", "44.1939, 55.3868, 36.7549, 0.56", "46.9303, 58.3902, 38.0787, 0.56", "47.4233, 58.9269, 38.3584, 0.56", "49.3827, 60.9471, 39.406, 0.28", "50.0923, 61.595, 39.7986, 0.83", "52.1075, 62.9019, 40.8904, 0.56", "55.3061, 64.4643, 42.1441, 0.28", "56.7926, 65.139, 42.5099, 0.83", "58.6161, 65.9024, 42.9297, 0.56", "62.3346, 67.1679, 43.6056, 1.11", "66.6991, 68.6235, 44.3468, 0.56", "75.8738, 76.6131, 48.2402, 0.56", "85.9496, 84.1805, 50.3699, 0.56", "97.4472, 89.1347, 53.636, 0.56", "109.158, 92.6633, 58.0765, 0.56", "121.602, 95.2691, 60.9621, 0.56", "134.08, 96.3912, 64.7391, 0.56", "146.638, 95.9071, 68.4942, 0.56", "158.89, 95.689, 73.1659, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "31.4175, 39.9922, 31.5158, 0.56", "32.6126, 40.1929, 31.7476, 0.56", "34.1917, 40.4581, 32.054, 0.56", "35.2661, 40.6385, 32.2625, 0.83", "38.6483, 41.2066, 32.9187, 0.56", "42.9807, 41.9342, 33.7593, 0.28", "52.539, 44.3121, 34.7986, 0.28", "62.0038, 46.8807, 36.1366, 0.28", "71.8766, 47.9335, 36.5395, 0.28", "81.7314, 47.3591, 35.2811, 0.28", "91.6372, 47.0666, 34.3796, 0.28", "101.401, 47.8463, 32.6742, 0.28", "110.27, 50.4576, 29.1358, 0.28", "119.163, 52.1537, 25.0657, 0.28", "128.364, 54.5076, 22.2442, 0.28", "136.967, 57.9166, 18.8108, 0.28", "145.732, 62.1156, 17.322, 0.28", "154.508, 65.9915, 15.0989, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "67.1719, 37.3587, 20.6243, 0.83", "69.5135, 38.5057, 21.0275, 0.83", "72.2311, 39.9388, 21.4568, 0.83", "75.2951, 41.4781, 21.8056, 0.83", "79.3452, 43.3211, 22.3706, 0.83", "81.0677, 43.9973, 22.7021, 0.83", "86.0991, 45.7967, 23.7929, 0.83", "90.0436, 47.1617, 24.7362, 0.83", "92.7684, 48.0838, 25.4101, 0.83", "96.0984, 49.1896, 26.2108, 1.39", "100.889, 50.4908, 27.2517, 0.83", "103.45, 51.0331, 27.7672, 0.83", "106.239, 51.4878, 28.2717, 1.11", "108.767, 51.8594, 28.6885, 0.83", "111.662, 52.3118, 29.0693, 0.83", "113.768, 52.6634, 29.1543, 0.83", "116.197, 53.0379, 29.1226, 0.83", "117.653, 53.262, 28.9905, 0.83", "119.218, 53.4921, 28.751, 1.39", "120.01, 53.6501, 28.5734, 1.39", "122.798, 54.4145, 27.7323, 0.56", "125.45, 55.3489, 26.6349, 1.67", "129.79, 57.0991, 24.5235, 0.56", "130.456, 57.3817, 24.1557, 0.83", "132.555, 58.2688, 22.9082, 0.28", "133.468, 58.6242, 22.4058, 0.56", "136.809, 59.6228, 20.7364, 0.28", "138.14, 59.963, 20.1218, 0.56", "141.132, 60.549, 19.0854, 0.28", "142.107, 60.7253, 18.7589, 0.56", "145.495, 61.1549, 17.756, 0.28", "148.051, 61.4005, 17.1462, 1.11", "160.821, 63.8161, 14.7718, 1.11", "174.011, 64.2937, 13.8521, 1.11", "187.083, 62.4904, 13.1319, 1.11", "200.293, 61.9256, 13.5943, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "67.1719, 37.3587, 20.6243, 0.56", "69.3868, 38.9392, 21.9277, 0.56", "70.3786, 39.6595, 22.612, 0.56", "71.9146, 40.7111, 23.6926, 0.56", "75.9696, 43.392, 26.4965, 0.56", "76.6251, 43.8195, 26.9365, 0.56", "81.2204, 46.6492, 29.8405, 0.56", "82.952, 47.613, 30.8509, 0.28", "84.1851, 48.2645, 31.4874, 0.56", "85.2581, 48.7913, 31.9031, 0.28", "86.5089, 49.4027, 32.176, 0.56", "89.6223, 51.0157, 32.4572, 0.28", "92.7098, 52.6087, 32.2809, 0.28", "93.91, 53.357, 32.0527, 0.56", "96.6267, 55.3548, 31.5489, 0.28", "97.4361, 55.9803, 31.3755, 0.56", "99.8006, 57.9572, 30.7615, 0.28", "100.187, 58.3355, 30.6302, 0.56", "104.188, 62.8007, 29.1705, 0.28", "106.569, 65.7356, 28.2728, 1.94", "114.823, 71.1333, 30.6572, 1.94", "124.154, 75.1586, 31.6398, 1.94", "132.907, 80.1927, 32.7799, 1.94", "141.167, 85.1088, 36.1209, 1.94", "149.633, 88.0714, 41.102, 1.94", "159.472, 88.9349, 44.0083, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "67.477, 33.5714, 32.1367, 0.56", "70.3603, 33.834, 33.654, 0.56", "72.7775, 34.0541, 34.926, 0.56", "74.4451, 34.206, 35.8035, 0.56", "77.2457, 34.461, 37.2773, 0.56", "80.3391, 34.7427, 38.9052, 0.83", "88.8521, 36.9834, 42.8152, 0.83", "97.3115, 40.4298, 45.7178, 0.83", "105.596, 44.6575, 47.841, 0.83", "114.173, 48.7504, 48.1003, 0.83", "122.853, 52.5917, 48.9722, 0.83", "131.117, 57.2018, 48.6456, 0.83", "139.599, 61.3156, 47.6417, 0.83", "148.208, 65.3188, 48.3414, 0.83", "156.14, 70.3437, 49.689, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "67.477, 33.5714, 32.1367, 0.83", "67.1217, 32.7903, 32.4081, 0.83", "66.6534, 31.7608, 32.7658, 0.83", "65.2568, 26.2207, 34.5794, 0.83", "63.7032, 20.5317, 35.6417, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-40.6672, -264.528, -19.7429, 0.56", "-41.301, -268.387, -19.0692, 0.56", "-41.4934, -270.141, -18.9021, 0.83", "-42.1554, -275.708, -18.3001, 0.56", "-42.7409, -279.872, -17.9896, 0.83", "-43.2222, -282.867, -17.8208, 1.94", "-43.6967, -285.792, -17.6986, 2.22", "-44.2295, -290.237, -17.5386, 0.83", "-44.5513, -294.34, -17.2884, 0.83", "-44.6486, -297.579, -17.0626, 0.83", "-44.6704, -299.036, -16.8051, 0.56", "-44.6879, -300.829, -16.2948, 0.56", "-44.6587, -303.793, -15.1828, 1.11", "-44.359, -307.511, -13.3002, 0.56", "-44.1095, -308.649, -12.6468, 0.56", "-43.3974, -311.059, -10.8997, 0.56", "-42.8229, -312.928, -9.4601, 1.39" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-40.6672, -264.528, -19.7429, 0.56", "-39.3602, -266.725, -22.0281, 0.56", "-38.3238, -269.165, -24.7702, 0.56", "-37.8666, -270.516, -26.2504, 0.56", "-37.5681, -271.494, -27.266, 0.28", "-37.3415, -272.292, -28.0974, 0.28", "-37.0613, -273.491, -29.3502, 1.11", "-36.9049, -275.048, -30.9678, 0.28", "-36.884, -275.997, -31.9699, 0.28", "-36.8054, -276.683, -32.8083, 2.22", "-36.439, -278.113, -35.0829, 0.28", "-36.1954, -278.639, -36.4162, 0.28", "-35.9946, -278.817, -37.2441, 0.28", "-35.5409, -278.836, -38.6936, 0.83", "-34.3122, -278.226, -42.8704, 0.28", "-33.99, -277.961, -43.976, 1.67", "-33.4656, -277.411, -45.6298, 0.28", "-33.2726, -277.193, -46.2203, 0.83", "-32.7219, -276.523, -47.9622, 0.28", "-32.2552, -275.964, -49.4407, 1.67", "-31.5224, -275.134, -51.5377, 0.56", "-30.9028, -274.439, -53.3386, 0.28", "-30.8326, -274.361, -53.5464, 0.83", "-29.6895, -273.017, -57.122, 0.28", "-29.1706, -272.424, -58.6945, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-8.00679, 89.2268, -23.7696, 0.56", "-10.2979, 92.316, -18.2107, 0.56", "-11.1374, 93.6363, -16.3981, 1.39", "-13.7835, 98.8976, -10.9143, 0.56", "-14.4037, 100.478, -9.61504, 0.28", "-15.0936, 103.172, -7.72959, 0.28", "-15.9002, 107.17, -5.13748, 0.56", "-16.2816, 110.614, -3.30987, 1.11", "-16.5838, 114.849, -1.42547, 0.28", "-16.8078, 118.327, -0.158359, 1.67", "-16.9704, 125.23, 2.49281, 0.28", "-16.971, 126.102, 2.83282, 0.28", "-16.9484, 128.671, 4.0094, 0.83", "-17.0499, 131.43, 5.53693, 0.28", "-17.2575, 132.814, 6.45078, 0.28", "-17.7832, 134.73, 7.94723, 0.83", "-19.0387, 137.365, 10.1677, 0.28", "-20.3754, 139.977, 12.8111, 1.11", "-21.6752, 141.242, 14.7882, 0.56", "-22.8548, 141.87, 16.3894, 0.28", "-24.2953, 142.475, 18.2845, 0.28", "-26.157, 143.015, 20.5968, 0.28", "-28.8916, 143.406, 23.9954, 0.56", "-35.5307, 143.675, 31.3772, 0.28", "-37.1106, 143.607, 33.1676, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-8.00679, 89.2268, -23.7696, 0.83", "-7.61618, 91.1216, -23.6469, 0.83", "-7.12169, 93.4708, -23.8092, 0.83", "-6.14957, 98.1606, -24.3958, 0.56", "-5.32489, 102.662, -25.2751, 0.56", "-4.92684, 104.981, -25.821, 0.28", "-4.51848, 107.49, -26.4526, 1.67", "-3.49999, 113.647, -28.4793, 0.28", "-3.40746, 114.206, -28.7016, 0.56", "-3.04759, 116.777, -29.8821, 0.28", "-3.01379, 117.325, -30.116, 0.83", "-2.94744, 118.886, -30.6256, 0.28", "-2.94531, 120.033, -31.0212, 0.83", "-3.01328, 122.851, -31.7955, 0.28", "-3.18382, 125.127, -32.5452, 1.94", "-3.58036, 128.753, -33.7805, 0.28", "-3.9888, 130.591, -34.5914, 0.83", "-5.11254, 134.518, -36.5529, 0.28", "-5.39795, 135.315, -37.0477, 0.83", "-6.7319, 138.501, -39.353, 0.28", "-7.19884, 139.602, -40.2072, 1.11", "-9.39245, 145.165, -44.3609, 0.28", "-9.95206, 146.664, -45.4508, 1.39", "-11.7648, 152.467, -49.1006, 0.28", "-11.8815, 152.927, -49.3613, 0.56", "-12.5429, 156.76, -51.1678, 0.28", "-12.9053, 160.089, -52.5334, 1.39", "-12.901, 162.954, -53.221, 1.11", "-12.7934, 166.196, -53.6432, 0.28", "-12.7524, 166.989, -53.6583, 0.56", "-12.695, 170.697, -53.7853, 0.28", "-12.6935, 171.539, -53.8086, 0.83", "-12.7994, 176.151, -54.1077, 0.28", "-12.8154, 177.295, -54.1351, 1.39", "-12.9599, 181.095, -54.3132, 0.28", "-13.0585, 182.803, -54.3787, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.54031, 131.611, 26.4474, 1.94", "4.96265, 133.25, 27.71, 1.94", "4.30051, 135.297, 29.3055, 0.28", "4.06962, 136.19, 29.7411, 0.83", "3.28187, 140.109, 31.2049, 0.28", "3.13695, 141.054, 31.3613, 1.11", "2.90452, 142.788, 31.464, 0.28", "2.79694, 144.005, 31.5073, 1.67", "2.47445, 148.009, 31.4738, 0.28", "2.4256, 148.955, 31.2997, 0.83", "2.30478, 152.431, 29.9363, 0.28", "2.31171, 152.97, 29.6834, 0.56", "0.992622, 162.541, 29.9735, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "5.54031, 131.611, 26.4474, 0.28", "6.9637, 136.363, 28.2501, 0.28", "7.15664, 137.007, 28.4944, 0.83", "8.68887, 142.123, 30.4349, 0.28", "8.78442, 142.442, 30.5559, 0.56", "9.74623, 145.653, 31.774, 0.28", "10.8214, 149.243, 33.1357, 1.11", "12.7185, 160.387, 39.5156, 1.11", "12.1577, 170.134, 48.3061, 1.11", "11.9408, 180.271, 56.6037, 1.11", "12.4755, 190.388, 64.8987, 1.11", "12.1633, 201.024, 72.4712, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "158.89, 95.689, 73.1659, 0.28", "168.609, 99.8734, 76.4689, 0.28", "179.015, 103.264, 78.416, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "158.89, 95.689, 73.1659, 0.28", "167.628, 99.7708, 75.5938, 0.28", "177.028, 102.357, 77.8854, 0.28", "186.583, 103.536, 80.8165, 0.28", "195.902, 104.063, 84.6295, 0.28", "205.254, 102.691, 88.1926, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-42.8229, -312.928, -9.4601, 0.56", "-43.8658, -312.576, -9.151, 0.56", "-45.3434, -312.077, -8.7131, 1.11", "-46.6363, -311.641, -8.32991, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-42.8229, -312.928, -9.4601, 1.39", "-42.8815, -313.716, -8.56541, 1.39", "-43.0451, -315.917, -6.06526, 1.39" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-13.0585, 182.803, -54.3787, 0.28", "-13.0203, 187.314, -52.338, 0.28", "-13.0178, 187.62, -52.1994, 0.56", "-12.9941, 190.416, -50.9347, 0.28", "-12.986, 191.366, -50.505, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.0585, 182.803, -54.3787, 0.28", "-14.691, 182.735, -55.2876, 0.28", "-15.027, 182.722, -55.4746, 0.56", "-17.2362, 182.631, -56.7045, 0.28", "-18.8119, 182.566, -57.5818, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-43.0451, -315.917, -6.06526, 0.56", "-44.8282, -319.775, -2.99709, 0.56", "-46.4585, -322.316, -1.15015, 0.56", "-48.6377, -325.221, 0.565215, 0.56", "-50.0051, -326.985, 1.43079, 0.56", "-51.9536, -329.559, 2.80018, 0.56", "-54.4608, -333.292, 4.89075, 0.56", "-56.1453, -335.741, 6.27199, 0.56", "-57.8079, -338.559, 7.97703, 0.56", "-58.414, -340.004, 8.77414, 0.56", "-59.9134, -344.719, 11.4312, 0.56", "-60.5315, -347.649, 13.1552, 0.56", "-60.6485, -350.55, 15.0737, 0.56", "-60.5266, -353.403, 17.1934, 0.83", "-60.2582, -355.719, 19.1351, 1.39" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-43.0451, -315.917, -6.06526, 0.56", "-41.5623, -320.702, -6.50619, 0.56", "-39.2987, -328.019, -7.62499, 0.56", "-38.5482, -330.643, -8.09683, 0.56", "-38.105, -332.445, -8.4381, 0.56", "-37.2943, -336.05, -9.13521, 0.83", "-36.4619, -340.164, -10.0584, 0.56", "-36.09, -343.097, -10.8717, 0.56", "-35.9948, -344.89, -11.4611, 1.11", "-36.0237, -346.77, -12.0961, 0.28", "-36.1707, -349.279, -12.9974, 0.28", "-36.4213, -351.709, -13.9448, 1.67", "-36.8399, -353.796, -14.7326, 2.5", "-37.8705, -359.434, -16.4884, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-60.2582, -355.719, 19.1351, 0.56", "-62.6447, -358.841, 20.3134, 0.56", "-64.1691, -361.187, 21.2695, 0.56", "-64.5349, -361.839, 21.4616, 0.56", "-65.9602, -364.58, 22.0316, 0.56", "-66.8593, -366.536, 22.3353, 0.56", "-67.4612, -367.846, 22.5387, 0.56", "-68.1334, -369.852, 22.8089, 0.56", "-69.0899, -373.111, 23.1004, 0.56", "-69.8044, -375.641, 23.1571, 0.56", "-70.2061, -377.207, 22.9665, 0.56", "-72.3701, -385.624, 23.4481, 0.56" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-60.2582, -355.719, 19.1351, 0.28", "-61.071, -357.488, 19.014, 0.28", "-61.8089, -359.015, 18.7915, 0.28", "-62.9993, -361.167, 18.4527, 0.28", "-63.712, -362.359, 18.271, 0.28", "-64.6315, -363.652, 18.1055, 0.28", "-66.8177, -366.332, 17.7846, 0.28", "-67.5241, -367.018, 17.6379, 0.28", "-68.763, -368.151, 17.3169, 0.28", "-69.6309, -368.943, 17.063, 0.28", "-71.6027, -370.691, 16.4645, 0.56", "-72.7953, -371.72, 16.1318, 0.56", "-75.3706, -373.984, 15.5763, 0.28", "-77.3023, -375.733, 15.0421, 0.28", "-78.2688, -376.741, 14.6501, 0.83", "-82.5816, -384.071, 13.65, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-37.8705, -359.434, -16.4884, 0.28", "-37.5377, -362.107, -15.7811, 0.28", "-37.467, -362.9, -15.6078, 0.56", "-37.4172, -364.042, -15.5609, 0.28", "-37.3219, -365.764, -15.6267, 0.28", "-37.2062, -367.099, -15.7845, 0.56", "-36.866, -370.041, -16.2306, 0.28", "-36.596, -371.873, -16.7106, 0.83", "-36.1145, -375.018, -17.6081, 0.28", "-35.9397, -376.107, -17.9526, 0.56", "-35.5035, -379.32, -19.1205, 0.28", "-35.3726, -380.213, -19.5006, 0.56", "-34.7936, -382.663, -20.8089, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-37.8705, -359.434, -16.4884, 0.28", "-37.2252, -360.737, -15.6584, 0.28", "-36.6582, -361.813, -14.9282, 0.28", "-34.663, -365.06, -12.7069, 0.28", "-33.4095, -367.1, -11.3115, 0.28", "-33.2119, -367.421, -11.0914, 0.83", "-31.6368, -369.984, -9.33785, 0.28", "-31.2167, -370.688, -8.79917, 0.28", "-30.3254, -372.033, -7.62101, 0.28", "-27.7373, -377.293, -3.74963, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_62", "dend_61", "dend_58", "dend_53", "dend_32", "dend_31", "dend_22", "dend_17", "dend_0", "dend_66", "dend_63", "dend_60", "dend_59", "dend_57", "dend_54", "dend_40", "dend_33", "dend_24", "dend_23", "dend_19", "dend_18", "dend_4", "dend_1", "dend_65", "dend_64", "dend_56", "dend_55", "dend_46", "dend_41", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_47", "dend_43", "dend_42", "dend_37", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_52", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_16", "dend_9", "dend_51", "dend_50", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_62", "dend_61", "dend_58", "dend_53", "dend_32", "dend_31", "dend_22", "dend_17", "dend_0", "dend_66", "dend_63", "dend_60", "dend_59", "dend_57", "dend_54", "dend_40", "dend_33", "dend_24", "dend_23", "dend_19", "dend_18", "dend_4", "dend_1", "dend_65", "dend_64", "dend_56", "dend_55", "dend_46", "dend_41", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_47", "dend_43", "dend_42", "dend_37", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_52", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_16", "dend_9", "dend_51", "dend_50", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_40", "dend_33", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_LBC_8e834c24cb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_68
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_40, dend_33, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_16, dend_16, dend_16, dend_9, dend_9, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_62(0), soma_0(0.4999995714066505)
    connect dend_61(0), soma_0(0.4999995714066505)
    connect dend_58(0), soma_0(0.4999995714066505)
    connect dend_53(0), soma_0(0.4999995714066505)
    connect dend_32(0), soma_0(0.4999995714066505)
    connect dend_31(0), soma_0(0.4999995714066505)
    connect dend_22(0), soma_0(0.4999995714066505)
    connect dend_17(0), soma_0(0.4999995714066505)
    connect dend_0(0), soma_0(0.4999995714066505)
    connect axon_0(0), soma_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.1095, -11.685, 0.570337, 3.16052 ) }
    soma_0 { pt3dadd( -4.63521, -10.5008, 0.513621, 5.45982 ) }
    soma_0 { pt3dadd( -4.16092, -9.31666, 0.456904, 7.50899 ) }
    soma_0 { pt3dadd( -3.68663, -8.13248, 0.400188, 11.3322 ) }
    soma_0 { pt3dadd( -3.21235, -6.9483, 0.343471, 12.8266 ) }
    soma_0 { pt3dadd( -2.73806, -5.76412, 0.286755, 14.3389 ) }
    soma_0 { pt3dadd( -2.26377, -4.57994, 0.230039, 15.4162 ) }
    soma_0 { pt3dadd( -1.78948, -3.39575, 0.173322, 16.3756 ) }
    soma_0 { pt3dadd( -1.3152, -2.21157, 0.116606, 17.1148 ) }
    soma_0 { pt3dadd( -0.840909, -1.02739, 0.0598891, 17.5087 ) }
    soma_0 { pt3dadd( -0.366622, 0.156787, 0.00317258, 18.1754 ) }
    soma_0 { pt3dadd( 0.107666, 1.34097, -0.0535439, 18.705 ) }
    soma_0 { pt3dadd( 0.581953, 2.52515, -0.11026, 18.3379 ) }
    soma_0 { pt3dadd( 1.05624, 3.70933, -0.166977, 17.6777 ) }
    soma_0 { pt3dadd( 1.53053, 4.89351, -0.223693, 16.2317 ) }
    soma_0 { pt3dadd( 2.00482, 6.07769, -0.28041, 14.5638 ) }
    soma_0 { pt3dadd( 2.4791, 7.26187, -0.337126, 12.887 ) }
    soma_0 { pt3dadd( 2.95339, 8.44605, -0.393843, 11.0587 ) }
    soma_0 { pt3dadd( 3.42768, 9.63023, -0.450559, 9.10164 ) }
    soma_0 { pt3dadd( 3.90197, 10.8144, -0.507276, 6.70215 ) }
    soma_0 { pt3dadd( 4.37625, 11.9986, -0.563992, 4.57645 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 21/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.68434, 6.30127, -20.3386, 1.67 ) }
    dend_62 { pt3dadd( 6.6296, 8.721, -21.97, 1.67 ) }
    dend_62 { pt3dadd( 7.7355, 11.5519, -23.8786, 2.22 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 7.73434, 4.99027, -12.2086, 1.11 ) }
    dend_61 { pt3dadd( 8.74067, 3.98435, -13.7074, 1.11 ) }
    dend_61 { pt3dadd( 10.2018, 3.00632, -15.8871, 0.83 ) }
    dend_61 { pt3dadd( 14.2571, 1.18486, -21.5652, 1.39 ) }
    dend_61 { pt3dadd( 15.1655, 0.91936, -22.5993, 1.39 ) }
    dend_61 { pt3dadd( 17.6893, 0.327441, -24.8616, 0.56 ) }
    dend_61 { pt3dadd( 21.01, -0.446684, -27.1579, 1.11 ) }
    dend_61 { pt3dadd( 23.8633, -1.04556, -28.4744, 1.39 ) }
    dend_61 { pt3dadd( 25.3457, -1.32272, -28.9769, 0.83 ) }
    dend_61 { pt3dadd( 29.4095, -2.06245, -29.9635, 1.11 ) }
    dend_61 { pt3dadd( 32.5357, -2.59826, -30.8617, 0.56 ) }
    dend_61 { pt3dadd( 35.6653, -3.11885, -31.8455, 1.11 ) }
    dend_61 { pt3dadd( 40.088, -3.95871, -33.4639, 0.83 ) }
    dend_61 { pt3dadd( 43.2967, -4.49715, -35.0318, 0.56 ) }
    dend_61 { pt3dadd( 46.1224, -4.847, -36.8792, 1.11 ) }
    dend_61 { pt3dadd( 49.2078, -4.90596, -39.6944, 0.56 ) }
    dend_61 { pt3dadd( 50.2625, -4.80394, -40.8085, 0.28 ) }
    dend_61 { pt3dadd( 51.855, -4.5177, -42.7626, 0.83 ) }
    dend_61 { pt3dadd( 53.8907, -4.02778, -45.3486, 0.83 ) }
    dend_61 { pt3dadd( 54.7883, -3.86626, -46.4023, 0.83 ) }
    dend_61 { pt3dadd( 57.2725, -3.62766, -48.8207, 0.56 ) }
    dend_61 { pt3dadd( 59.4656, -3.58571, -50.8134, 1.11 ) }
    dend_61 { pt3dadd( 62.4792, -3.62191, -53.733, 1.11 ) }
    dend_61 { pt3dadd( 63.8311, -3.66478, -55.04, 0.28 ) }
    dend_61 { pt3dadd( 66.738, -3.84095, -57.9218, 0.83 ) }
    dend_61 { pt3dadd( 73.0851, -4.32701, -64.07, 0.28 ) }
    dend_61 { pt3dadd( 77.1178, -4.72787, -67.8955, 1.94 ) }
    dend_61 { pt3dadd( 82.8909, -5.40108, -73.2605, 0.28 ) }
    dend_61 { pt3dadd( 84.5784, -5.58701, -74.7768, 0.56 ) }
    dend_61 { pt3dadd( 88.8419, -6.10554, -78.7149, 0.28 ) }
    dend_61 { pt3dadd( 90.7901, -6.35826, -80.8215, 0.83 ) }
    dend_61 { pt3dadd( 94.7558, -6.98127, -85.5604, 0.28 ) }
    dend_61 { pt3dadd( 96.1526, -7.23598, -87.3288, 1.39 ) }
    dend_61 { pt3dadd( 98.6735, -7.72201, -90.7201, 0.28 ) }
    dend_61 { pt3dadd( 100.322, -8.01606, -93.1218, 1.39 ) }
    dend_61 { pt3dadd( 108.574, -9.33895, -105.832, 0.28 ) }
    dend_61 { pt3dadd( 109.83, -9.55437, -108.108, 1.39 ) }
    dend_61 { pt3dadd( 113.883, -10.3615, -116.169, 0.28 ) }
    dend_61 { pt3dadd( 115.723, -10.7778, -120.141, 1.11 ) }
    dend_61 { pt3dadd( 117.409, -11.2446, -124.104, 0.28 ) }
    dend_61 { pt3dadd( 117.655, -11.3247, -124.742, 1.11 ) }
    dend_61 { pt3dadd( 122.031, -13.6619, -139.553, 0.28 ) }
    dend_61 { pt3dadd( 122.379, -13.922, -141.055, 0.28 ) }
    dend_61 { pt3dadd( 122.762, -14.4023, -143.18, 0.83 ) }
    dend_61 { pt3dadd( 123.368, -15.5078, -147.137, 0.28 ) }
    dend_61 { pt3dadd( 123.717, -16.4826, -149.768, 1.11 ) }
    dend_61 { pt3dadd( 125.271, -21.6021, -161.26, 0.28 ) }
    dend_61 { pt3dadd( 125.41, -22.0699, -162.111, 1.11 ) }
    dend_61 { pt3dadd( 126.484, -25.3433, -167.718, 0.28 ) }
    dend_61 { pt3dadd( 127.515, -27.9406, -171.827, 0.83 ) }
    dend_61 { pt3dadd( 129.521, -32.4818, -178.398, 0.28 ) }
    dend_61 { pt3dadd( 129.753, -32.9816, -179.069, 0.83 ) }
    dend_61 { pt3dadd( 131.906, -37.3323, -184.223, 0.28 ) }
    dend_61 { pt3dadd( 132.253, -38.0006, -185.025, 1.11 ) }
    dend_61 { pt3dadd( 134.877, -42.5749, -190.495, 0.28 ) }
    dend_61 { pt3dadd( 135.236, -43.1199, -191.132, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -8.92566, -4.19623, -8.61862, 1.39 ) }
    dend_58 { pt3dadd( -10.8616, -4.31175, -9.60973, 1.39 ) }
    dend_58 { pt3dadd( -14.8513, -4.32657, -11.3241, 1.39 ) }
    dend_58 { pt3dadd( -17.997, -4.19553, -12.4114, 1.39 ) }
    dend_58 { pt3dadd( -23.0876, -3.753, -13.9072, 1.11 ) }
    dend_58 { pt3dadd( -26.6596, -3.44248, -14.9568, 1.11 ) }
    dend_58 { pt3dadd( -29.8107, -3.16854, -15.8827, 1.11 ) }
    dend_58 { pt3dadd( -33.1548, -2.71661, -16.6767, 0.83 ) }
    dend_58 { pt3dadd( -35.6005, -2.20159, -16.9233, 0.83 ) }
    dend_58 { pt3dadd( -37.2887, -1.76673, -16.8793, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -9.85566, -1.37473, -2.22863, 1.67 ) }
    dend_53 { pt3dadd( -11.4622, -1.22045, -1.84037, 1.67 ) }
    dend_53 { pt3dadd( -14.734, -0.906255, -1.04965, 1.67 ) }
    dend_53 { pt3dadd( -17.7204, -0.619445, -0.327869, 1.94 ) }
    dend_53 { pt3dadd( -20.6528, -0.337845, 0.380825, 1.67 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.56434, 11.9062, -4.92863, 3.89 ) }
    dend_32 { pt3dadd( 3.56434, 13.7007, -4.92863, 3.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 97/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.73434, 4.99027, -12.2086, 1.11 ) }
    dend_31 { pt3dadd( 8.66744, 4.0684, -13.5771, 1.11 ) }
    dend_31 { pt3dadd( 10.0193, 3.17245, -15.569, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_31 { pt3dadd( 13.7646, 1.50623, -20.7602, 1.39 ) }
    dend_31 { pt3dadd( 14.602, 1.26458, -21.7054, 1.39 ) }
    dend_31 { pt3dadd( 16.9264, 0.7291, -23.7719, 0.56 ) }
    dend_31 { pt3dadd( 19.9828, 0.0313448, -25.8669, 1.11 ) }
    dend_31 { pt3dadd( 22.607, -0.504981, -27.065, 1.39 ) }
    dend_31 { pt3dadd( 23.9696, -0.751785, -27.5211, 0.83 ) }
    dend_31 { pt3dadd( 27.7042, -1.40855, -28.4131, 1.11 ) }
    dend_31 { pt3dadd( 30.5771, -1.8838, -29.2271, 0.56 ) }
    dend_31 { pt3dadd( 33.4533, -2.34538, -30.1196, 1.11 ) }
    dend_31 { pt3dadd( 37.5192, -3.09405, -31.5897, 0.83 ) }
    dend_31 { pt3dadd( 40.4697, -3.57366, -33.0178, 0.56 ) }
    dend_31 { pt3dadd( 43.0683, -3.88371, -34.7038, 1.11 ) }
    dend_31 { pt3dadd( 45.9058, -3.92888, -37.2781, 0.56 ) }
    dend_31 { pt3dadd( 46.8754, -3.83282, -38.2976, 0.28 ) }
    dend_31 { pt3dadd( 48.3392, -3.56753, -40.087, 0.83 ) }
    dend_31 { pt3dadd( 50.2099, -3.11498, -42.4556, 0.83 ) }
    dend_31 { pt3dadd( 51.0348, -2.96511, -43.4204, 0.83 ) }
    dend_31 { pt3dadd( 53.318, -2.73966, -45.6332, 0.56 ) }
    dend_31 { pt3dadd( 55.3344, -2.69482, -47.4556, 1.11 ) }
    dend_31 { pt3dadd( 58.1061, -2.71995, -50.1258, 1.11 ) }
    dend_31 { pt3dadd( 59.3497, -2.75565, -51.3211, 0.28 ) }
    dend_31 { pt3dadd( 62.0244, -2.90969, -53.9563, 0.83 ) }
    dend_31 { pt3dadd( 67.8647, -3.3385, -59.5777, 0.28 ) }
    dend_31 { pt3dadd( 71.5757, -3.69507, -63.0749, 1.94 ) }
    dend_31 { pt3dadd( 76.8888, -4.29625, -67.9788, 0.28 ) }
    dend_31 { pt3dadd( 78.4416, -4.46183, -69.3647, 0.56 ) }
    dend_31 { pt3dadd( 82.3653, -4.92531, -72.9641, 0.28 ) }
    dend_31 { pt3dadd( 84.1592, -5.15269, -74.8905, 0.83 ) }
    dend_31 { pt3dadd( 87.8125, -5.7168, -79.2247, 0.28 ) }
    dend_31 { pt3dadd( 89.0998, -5.9482, -80.8423, 1.39 ) }
    dend_31 { pt3dadd( 91.4236, -6.39074, -83.9448, 0.28 ) }
    dend_31 { pt3dadd( 92.9436, -6.65898, -86.1424, 1.39 ) }
    dend_31 { pt3dadd( 100.553, -7.86758, -97.7741, 0.28 ) }
    dend_31 { pt3dadd( 101.712, -8.0657, -99.8584, 1.39 ) }
    dend_31 { pt3dadd( 105.455, -8.81036, -107.239, 0.28 ) }
    dend_31 { pt3dadd( 107.156, -9.19529, -110.876, 1.11 ) }
    dend_31 { pt3dadd( 108.715, -9.62748, -114.505, 0.28 ) }
    dend_31 { pt3dadd( 108.943, -9.70177, -115.089, 1.11 ) }
    dend_31 { pt3dadd( 113.008, -11.8726, -128.654, 0.28 ) }
    dend_31 { pt3dadd( 113.333, -12.1145, -130.031, 0.28 ) }
    dend_31 { pt3dadd( 113.693, -12.5605, -131.977, 0.83 ) }
    dend_31 { pt3dadd( 114.266, -13.5852, -135.601, 0.28 ) }
    dend_31 { pt3dadd( 114.599, -14.4868, -138.01, 1.11 ) }
    dend_31 { pt3dadd( 116.086, -19.215, -148.527, 0.28 ) }
    dend_31 { pt3dadd( 116.218, -19.6464, -149.305, 1.11 ) }
    dend_31 { pt3dadd( 117.238, -22.6626, -154.434, 0.28 ) }
    dend_31 { pt3dadd( 118.209, -25.0536, -158.19, 0.83 ) }
    dend_31 { pt3dadd( 120.095, -29.2304, -164.196, 0.28 ) }
    dend_31 { pt3dadd( 120.312, -29.6898, -164.808, 0.83 ) }
    dend_31 { pt3dadd( 122.328, -33.6858, -169.515, 0.28 ) }
    dend_31 { pt3dadd( 122.651, -34.2996, -170.247, 1.11 ) }
    dend_31 { pt3dadd( 125.101, -38.4988, -175.241, 0.28 ) }
    dend_31 { pt3dadd( 125.436, -38.9988, -175.822, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 53/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 9.05434, 0.477776, 1.01137, 1.94 ) }
    dend_22 { pt3dadd( 10.706, 0.37427, 1.8438, 1.94 ) }
    dend_22 { pt3dadd( 13.8479, 0.536991, 3.37051, 1.39 ) }
    dend_22 { pt3dadd( 18.2599, 1.499, 4.90117, 1.39 ) }
    dend_22 { pt3dadd( 20.7132, 2.41774, 5.435, 1.67 ) }
    dend_22 { pt3dadd( 22.3853, 3.2737, 5.6346, 1.67 ) }
    dend_22 { pt3dadd( 25.3002, 5.06146, 6.01861, 1.11 ) }
    dend_22 { pt3dadd( 28.0574, 7.23072, 6.22913, 1.11 ) }
    dend_22 { pt3dadd( 33.594, 12.5167, 6.65576, 1.11 ) }
    dend_22 { pt3dadd( 34.599, 13.6012, 6.7129, 1.11 ) }
    dend_22 { pt3dadd( 36.3134, 15.4974, 6.87977, 1.39 ) }
    dend_22 { pt3dadd( 39.6302, 19.1234, 7.41171, 1.11 ) }
    dend_22 { pt3dadd( 41.5775, 21.1168, 7.80418, 1.11 ) }
    dend_22 { pt3dadd( 44.2959, 23.5397, 8.63455, 1.11 ) }
    dend_22 { pt3dadd( 47.2653, 25.9526, 9.80788, 1.11 ) }
    dend_22 { pt3dadd( 50.3374, 28.4454, 11.0047, 1.11 ) }
    dend_22 { pt3dadd( 52.5351, 30.2176, 11.8008, 1.11 ) }
    dend_22 { pt3dadd( 54.5133, 31.8105, 12.3702, 1.11 ) }
    dend_22 { pt3dadd( 57.4924, 34.2385, 13.2718, 1.94 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.21434, 2.69127, -15.0986, 1.39 ) }
    dend_17 { pt3dadd( 13.3947, 1.4295, -14.6107, 1.39 ) }
    dend_17 { pt3dadd( 24.1457, -1.18908, -13.5983, 1.11 ) }
    dend_17 { pt3dadd( 29.4428, -2.47929, -13.0995, 1.11 ) }
    dend_17 { pt3dadd( 32.7009, -3.27285, -12.7927, 1.11 ) }
    dend_17 { pt3dadd( 35.8994, -4.05189, -12.4915, 1.11 ) }
    dend_17 { pt3dadd( 37.9025, -4.53979, -12.3028, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 79/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.86566, -10.1718, 5.67137, 3.61 ) }
    dend_0 { pt3dadd( -2.50959, -12.6363, 5.72274, 3.05 ) }
    dend_0 { pt3dadd( -4.18273, -19.04, 5.85622, 3.05 ) }
    dend_0 { pt3dadd( -5.22921, -23.0452, 5.93969, 2.5 ) }
    dend_0 { pt3dadd( -6.55735, -28.1285, 6.04564, 2.22 ) }
    dend_0 { pt3dadd( -7.00248, -29.8321, 6.08115, 2.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.37625, 11.9986, -0.563992, 1.67 ) }
    axon_0 { pt3dadd( 9.95335, 25.9233, -0.563992, 1.67 ) }
    axon_0 { pt3dadd( 15.5304, 39.8479, -0.563992, 1.67 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 88/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 7.7355, 11.5519, -23.8786, 1.39 ) }
    dend_66 { pt3dadd( 7.94715, 11.2287, -24.9209, 1.39 ) }
    dend_66 { pt3dadd( 8.03915, 11.1619, -25.2811, 1.39 ) }
    dend_66 { pt3dadd( 8.758, 11.0706, -28.9658, 0.83 ) }
    dend_66 { pt3dadd( 9.12838, 11.1965, -31.7835, 1.39 ) }
    dend_66 { pt3dadd( 9.42952, 11.3642, -34.5466, 0.56 ) }
    dend_66 { pt3dadd( 9.51573, 11.4272, -35.3578, 0.56 ) }
    dend_66 { pt3dadd( 9.82798, 11.7412, -38.7868, 1.67 ) }
    dend_66 { pt3dadd( 10.3314, 12.3951, -44.4092, 1.67 ) }
    dend_66 { pt3dadd( 10.6732, 12.9077, -47.9713, 1.67 ) }
    dend_66 { pt3dadd( 11.0863, 13.5127, -52.149, 0.83 ) }
    dend_66 { pt3dadd( 11.2147, 13.6344, -53.3389, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_66 { pt3dadd( 11.6172, 13.9455, -56.7817, 0.83 ) }
    dend_66 { pt3dadd( 11.9332, 14.1353, -58.9966, 0.28 ) }
    dend_66 { pt3dadd( 12.2866, 14.219, -60.7361, 1.11 ) }
    dend_66 { pt3dadd( 12.6779, 14.2517, -62.1522, 1.39 ) }
    dend_66 { pt3dadd( 13.4487, 14.254, -64.4411, 0.28 ) }
    dend_66 { pt3dadd( 13.4487, 14.254, -64.4411, 0.56 ) }
    dend_66 { pt3dadd( 14.1156, 14.2788, -66.0808, 0.28 ) }
    dend_66 { pt3dadd( 14.6224, 14.2942, -67.2819, 0.83 ) }
    dend_66 { pt3dadd( 16.0398, 14.3466, -70.6133, 0.56 ) }
    dend_66 { pt3dadd( 16.4931, 14.3613, -71.6924, 1.94 ) }
    dend_66 { pt3dadd( 20.717, 14.4187, -81.81, 0.28 ) }
    dend_66 { pt3dadd( 20.8436, 14.4167, -82.1101, 0.83 ) }
    dend_66 { pt3dadd( 21.7596, 14.3627, -84.4557, 0.56 ) }
    dend_66 { pt3dadd( 22.209, 14.3073, -85.6737, 0.83 ) }
    dend_66 { pt3dadd( 23.2002, 14.0553, -88.6802, 0.28 ) }
    dend_66 { pt3dadd( 23.3957, 13.9847, -89.3145, 1.39 ) }
    dend_66 { pt3dadd( 23.5707, 13.8902, -89.9587, 1.39 ) }
    dend_66 { pt3dadd( 25.6195, 12.8147, -97.831, 0.28 ) }
    dend_66 { pt3dadd( 25.8129, 12.7199, -98.6392, 1.11 ) }
    dend_66 { pt3dadd( 26.7477, 12.3133, -102.471, 0.28 ) }
    dend_66 { pt3dadd( 26.9081, 12.2516, -103.135, 0.83 ) }
    dend_66 { pt3dadd( 27.7749, 11.952, -106.81, 0.28 ) }
    dend_66 { pt3dadd( 27.9369, 11.8974, -107.514, 1.11 ) }
    dend_66 { pt3dadd( 29.4932, 11.441, -113.675, 0.28 ) }
    dend_66 { pt3dadd( 29.8644, 11.3648, -115.227, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 25/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 7.7355, 11.5519, -23.8786, 0.56 ) }
    dend_63 { pt3dadd( 7.0602, 14.6937, -23.1658, 0.56 ) }
    dend_63 { pt3dadd( 6.40323, 15.7627, -23.5256, 0.56 ) }
    dend_63 { pt3dadd( 5.44186, 17.1845, -24.2901, 0.83 ) }
    dend_63 { pt3dadd( 4.78304, 18.1087, -24.8068, 0.56 ) }
    dend_63 { pt3dadd( 3.58344, 19.6835, -25.669, 0.83 ) }
    dend_63 { pt3dadd( 1.44785, 22.3431, -27.1483, 2.22 ) }
    dend_63 { pt3dadd( -0.916712, 24.9222, -28.763, 0.56 ) }
    dend_63 { pt3dadd( -2.77602, 26.8156, -29.9277, 0.56 ) }
    dend_63 { pt3dadd( -3.97839, 27.9866, -30.6282, 0.56 ) }
    dend_63 { pt3dadd( -5.16652, 29.1986, -31.3033, 1.67 ) }
    dend_63 { pt3dadd( -7.53932, 31.8379, -32.58, 0.56 ) }
    dend_63 { pt3dadd( -8.849, 33.6257, -33.2202, 1.11 ) }
    dend_63 { pt3dadd( -9.74137, 35.1207, -33.6723, 0.28 ) }
    dend_63 { pt3dadd( -10.3303, 36.4023, -34.0619, 0.83 ) }
    dend_63 { pt3dadd( -11.2269, 39.0166, -34.7208, 0.28 ) }
    dend_63 { pt3dadd( -11.6695, 40.7042, -35.3071, 1.39 ) }
    dend_63 { pt3dadd( -12.8459, 46.1319, -37.4732, 0.28 ) }
    dend_63 { pt3dadd( -13.1499, 47.7763, -38.2039, 1.39 ) }
    dend_63 { pt3dadd( -13.815, 51.7485, -40.129, 0.28 ) }
    dend_63 { pt3dadd( -14.3128, 54.9801, -41.7121, 1.67 ) }
    dend_63 { pt3dadd( -15.5201, 63.1013, -45.8976, 0.28 ) }
    dend_63 { pt3dadd( -15.6711, 64.1076, -46.4191, 0.28 ) }
    dend_63 { pt3dadd( -15.784, 64.836, -46.8011, 0.56 ) }
    dend_63 { pt3dadd( -15.9762, 66.3221, -47.6168, 0.28 ) }
    dend_63 { pt3dadd( -16.1688, 68.2677, -48.6725, 0.56 ) }
    dend_63 { pt3dadd( -16.3113, 70.6327, -49.8841, 0.28 ) }
    dend_63 { pt3dadd( -16.3469, 73.1498, -50.7864, 1.94 ) }
    dend_63 { pt3dadd( -16.3906, 76.095, -52.0117, 0.28 ) }
    dend_63 { pt3dadd( -16.5121, 78.932, -53.4411, 1.39 ) }
    dend_63 { pt3dadd( -16.5944, 80.159, -54.0916, 0.28 ) }
    dend_63 { pt3dadd( -16.6685, 80.947, -54.5685, 0.56 ) }
    dend_63 { pt3dadd( -16.9276, 83.2837, -56.0586, 0.28 ) }
    dend_63 { pt3dadd( -17.0123, 83.8292, -56.481, 0.56 ) }
    dend_63 { pt3dadd( -17.4393, 85.8463, -58.0676, 0.28 ) }
    dend_63 { pt3dadd( -17.8285, 87.438, -59.2898, 1.39 ) }
    dend_63 { pt3dadd( -18.589, 90.4162, -61.6121, 0.28 ) }
    dend_63 { pt3dadd( -18.9849, 92.0694, -62.9849, 1.67 ) }
    dend_63 { pt3dadd( -19.4455, 94.0315, -64.6629, 0.28 ) }
    dend_63 { pt3dadd( -19.6778, 95.2158, -65.7698, 1.11 ) }
    dend_63 { pt3dadd( -19.8224, 96.1962, -66.7575, 0.28 ) }
    dend_63 { pt3dadd( -19.8608, 96.566, -67.1203, 0.83 ) }
    dend_63 { pt3dadd( -19.9961, 98.9536, -68.7563, 0.28 ) }
    dend_63 { pt3dadd( -19.9926, 99.2359, -68.9147, 0.56 ) }
    dend_63 { pt3dadd( -19.8374, 100.83, -69.6169, 0.28 ) }
    dend_63 { pt3dadd( -19.7442, 101.562, -69.9509, 0.83 ) }
    dend_63 { pt3dadd( -19.4444, 104.471, -71.0517, 0.28 ) }
    dend_63 { pt3dadd( -19.3931, 106.566, -71.3925, 1.39 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 73/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -37.2887, -1.76673, -16.8793, 0.56 ) }
    dend_60 { pt3dadd( -39.7881, -1.65855, -16.884, 0.56 ) }
    dend_60 { pt3dadd( -41.9398, -1.38917, -17.0078, 0.56 ) }
    dend_60 { pt3dadd( -43.7302, -1.03679, -17.182, 0.56 ) }
    dend_60 { pt3dadd( -45.9753, -0.431762, -17.4754, 0.56 ) }
    dend_60 { pt3dadd( -49.0543, 0.482988, -18.0013, 0.56 ) }
    dend_60 { pt3dadd( -50.3047, 0.862345, -18.2693, 0.28 ) }
    dend_60 { pt3dadd( -51.5273, 1.3083, -18.6685, 0.83 ) }
    dend_60 { pt3dadd( -52.3706, 1.66594, -18.9773, 0.28 ) }
    dend_60 { pt3dadd( -53.357, 2.0752, -19.3574, 0.56 ) }
    dend_60 { pt3dadd( -54.9085, 2.63816, -19.9723, 0.28 ) }
    dend_60 { pt3dadd( -56.1954, 3.004, -20.3613, 1.67 ) }
    dend_60 { pt3dadd( -57.3692, 3.21696, -20.6678, 1.94 ) }
    dend_60 { pt3dadd( -58.7565, 3.39629, -21.0218, 1.11 ) }
    dend_60 { pt3dadd( -60.4731, 3.58728, -21.4112, 0.56 ) }
    dend_60 { pt3dadd( -61.769, 3.67537, -21.6923, 0.56 ) }
    dend_60 { pt3dadd( -63.3863, 3.76235, -22.013, 0.56 ) }
    dend_60 { pt3dadd( -64.1008, 3.78501, -22.1041, 0.56 ) }
    dend_60 { pt3dadd( -66.9397, 3.78489, -22.3654, 0.28 ) }
    dend_60 { pt3dadd( -68.2628, 3.72764, -22.4734, 1.39 ) }
    dend_60 { pt3dadd( -72.2219, 3.495, -22.7647, 0.56 ) }
    dend_60 { pt3dadd( -73.8095, 3.38015, -22.8672, 1.67 ) }
    dend_60 { pt3dadd( -77.2299, 3.0776, -23.033, 0.28 ) }
    dend_60 { pt3dadd( -79.1358, 2.87436, -23.0256, 0.83 ) }
    dend_60 { pt3dadd( -81.2837, 2.65249, -22.7357, 0.28 ) }
    dend_60 { pt3dadd( -82.2742, 2.59065, -22.5205, 0.56 ) }
    dend_60 { pt3dadd( -84.4074, 2.57232, -21.8533, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_60 { pt3dadd( -86.1057, 2.60988, -21.1852, 0.28 ) }
    dend_60 { pt3dadd( -88.1277, 2.73254, -20.2847, 2.22 ) }
    dend_60 { pt3dadd( -92.2302, 3.07118, -18.2995, 0.28 ) }
    dend_60 { pt3dadd( -93.9308, 3.18764, -17.5152, 0.28 ) }
    dend_60 { pt3dadd( -95.3754, 3.23774, -16.8424, 1.39 ) }
    dend_60 { pt3dadd( -98.2293, 3.26055, -15.5139, 0.28 ) }
    dend_60 { pt3dadd( -99.4915, 3.2106, -14.9477, 0.28 ) }
    dend_60 { pt3dadd( -100.808, 3.03852, -14.3867, 0.83 ) }
    dend_60 { pt3dadd( -103.507, 2.42378, -13.191, 0.28 ) }
    dend_60 { pt3dadd( -105.998, 1.63746, -11.9912, 0.28 ) }
    dend_60 { pt3dadd( -106.593, 1.40569, -11.6955, 0.28 ) }
    dend_60 { pt3dadd( -107.527, 0.990882, -11.219, 0.56 ) }
    dend_60 { pt3dadd( -110.129, -0.297013, -9.70045, 0.28 ) }
    dend_60 { pt3dadd( -110.947, -0.738735, -9.24958, 1.11 ) }
    dend_60 { pt3dadd( -112.911, -1.90686, -8.2495, 0.28 ) }
    dend_60 { pt3dadd( -113.815, -2.4642, -7.88756, 0.56 ) }
    dend_60 { pt3dadd( -115.579, -3.54365, -7.24459, 0.28 ) }
    dend_60 { pt3dadd( -116.794, -4.3063, -6.84557, 1.11 ) }
    dend_60 { pt3dadd( -119.138, -5.7596, -6.21245, 0.28 ) }
    dend_60 { pt3dadd( -119.558, -6.01732, -6.11092, 0.83 ) }
    dend_60 { pt3dadd( -121.749, -7.27805, -5.47803, 0.28 ) }
    dend_60 { pt3dadd( -122.129, -7.4937, -5.38667, 0.56 ) }
    dend_60 { pt3dadd( -124.31, -8.69427, -4.95004, 0.28 ) }
    dend_60 { pt3dadd( -125.396, -9.26558, -4.74058, 1.11 ) }
    dend_60 { pt3dadd( -129.0, -11.0653, -4.0231, 0.28 ) }
    dend_60 { pt3dadd( -130.883, -11.9339, -3.65457, 1.94 ) }
    dend_60 { pt3dadd( -133.285, -12.9663, -3.23728, 0.28 ) }
    dend_60 { pt3dadd( -134.356, -13.3105, -3.00821, 0.83 ) }
    dend_60 { pt3dadd( -135.436, -13.5102, -2.73658, 0.28 ) }
    dend_60 { pt3dadd( -136.311, -13.5445, -2.49794, 0.56 ) }
    dend_60 { pt3dadd( -138.48, -13.2325, -1.91469, 0.28 ) }
    dend_60 { pt3dadd( -139.247, -13.0354, -1.67238, 0.83 ) }
    dend_60 { pt3dadd( -142.097, -12.0269, -0.590004, 0.28 ) }
    dend_60 { pt3dadd( -142.378, -11.9154, -0.477237, 0.83 ) }
    dend_60 { pt3dadd( -144.284, -11.1056, 0.302468, 0.28 ) }
    dend_60 { pt3dadd( -145.743, -10.5177, 0.832198, 0.83 ) }
    dend_60 { pt3dadd( -149.075, -9.33144, 1.80945, 0.28 ) }
    dend_60 { pt3dadd( -149.423, -9.22065, 1.88854, 0.83 ) }
    dend_60 { pt3dadd( -150.511, -8.89716, 2.05131, 0.28 ) }
    dend_60 { pt3dadd( -150.733, -8.83471, 2.07031, 0.83 ) }
    dend_60 { pt3dadd( -153.426, -8.07646, 2.10858, 0.28 ) }
    dend_60 { pt3dadd( -154.709, -7.66239, 1.90106, 0.83 ) }
    dend_60 { pt3dadd( -156.516, -6.98557, 1.36545, 0.28 ) }
    dend_60 { pt3dadd( -156.976, -6.81077, 1.21945, 0.83 ) }
    dend_60 { pt3dadd( -159.264, -5.90196, 0.424727, 0.28 ) }
    dend_60 { pt3dadd( -160.258, -5.46925, 0.0591669, 0.56 ) }
    dend_60 { pt3dadd( -163.917, -3.57611, -1.4404, 0.28 ) }
    dend_60 { pt3dadd( -164.976, -2.95835, -1.90394, 0.83 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 48/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -37.2887, -1.76673, -16.8793, 0.56 ) }
    dend_59 { pt3dadd( -40.1807, -3.24768, -23.6361, 0.56 ) }
    dend_59 { pt3dadd( -42.3881, -3.23845, -26.4437, 0.56 ) }
    dend_59 { pt3dadd( -43.2436, -3.03157, -27.4233, 0.56 ) }
    dend_59 { pt3dadd( -43.9146, -2.75104, -28.5568, 1.39 ) }
    dend_59 { pt3dadd( -44.9152, -2.28948, -30.3005, 1.67 ) }
    dend_59 { pt3dadd( -46.5009, -1.61121, -33.0468, 0.83 ) }
    dend_59 { pt3dadd( -48.2963, -0.705465, -36.0546, 0.28 ) }
    dend_59 { pt3dadd( -49.8933, 0.137561, -38.767, 1.11 ) }
    dend_59 { pt3dadd( -54.7639, 2.80979, -47.335, 0.28 ) }
    dend_59 { pt3dadd( -55.5464, 3.26516, -48.7196, 0.28 ) }
    dend_59 { pt3dadd( -56.943, 4.03906, -51.3568, 1.67 ) }
    dend_59 { pt3dadd( -58.9837, 5.07825, -55.0973, 0.56 ) }
    dend_59 { pt3dadd( -61.04, 5.8419, -58.4337, 0.83 ) }
    dend_59 { pt3dadd( -62.1655, 6.14366, -60.0234, 1.39 ) }
    dend_59 { pt3dadd( -64.0118, 6.51301, -62.1172, 0.28 ) }
    dend_59 { pt3dadd( -70.0295, 7.43347, -68.3395, 0.28 ) }
    dend_59 { pt3dadd( -71.8772, 7.46279, -70.0106, 1.39 ) }
    dend_59 { pt3dadd( -77.6216, 7.1722, -74.7723, 0.28 ) }
    dend_59 { pt3dadd( -77.9834, 7.13268, -75.0571, 0.56 ) }
    dend_59 { pt3dadd( -81.0278, 6.65347, -77.5171, 0.28 ) }
    dend_59 { pt3dadd( -83.0775, 6.26613, -79.1328, 1.39 ) }
    dend_59 { pt3dadd( -97.2941, 3.93625, -89.464, 0.28 ) }
    dend_59 { pt3dadd( -98.1429, 3.80261, -90.1131, 0.83 ) }
    dend_59 { pt3dadd( -99.9962, 3.54118, -91.5546, 0.83 ) }
    dend_59 { pt3dadd( -105.513, 2.80008, -95.9592, 0.28 ) }
    dend_59 { pt3dadd( -106.301, 2.66105, -96.6123, 0.56 ) }
    dend_59 { pt3dadd( -114.658, 0.964104, -103.682, 0.28 ) }
    dend_59 { pt3dadd( -117.142, 0.340971, -105.77, 1.11 ) }
    dend_59 { pt3dadd( -122.974, -1.26559, -110.667, 0.28 ) }
    dend_59 { pt3dadd( -123.526, -1.4226, -111.131, 0.83 ) }
    dend_59 { pt3dadd( -136.422, -5.39917, -121.718, 0.28 ) }
    dend_59 { pt3dadd( -138.028, -6.00822, -123.119, 1.11 ) }
    dend_59 { pt3dadd( -142.746, -8.29988, -127.637, 0.28 ) }
    dend_59 { pt3dadd( -144.159, -9.02052, -129.002, 0.83 ) }
    dend_59 { pt3dadd( -148.35, -11.3356, -133.288, 0.28 ) }
    dend_59 { pt3dadd( -148.977, -11.6872, -133.956, 0.83 ) }
    dend_59 { pt3dadd( -153.078, -14.3193, -138.996, 0.28 ) }
    dend_59 { pt3dadd( -155.112, -15.7025, -141.595, 1.39 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 87/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -20.6528, -0.337845, 0.380825, 1.11 ) }
    dend_57 { pt3dadd( -27.8957, -2.28366, -4.24671, 1.11 ) }
    dend_57 { pt3dadd( -30.3122, -2.59175, -5.6289, 0.83 ) }
    dend_57 { pt3dadd( -32.9912, -2.92738, -7.08178, 0.83 ) }
    dend_57 { pt3dadd( -35.2767, -3.18972, -8.25344, 0.83 ) }
    dend_57 { pt3dadd( -37.0347, -3.34164, -9.11788, 0.83 ) }
    dend_57 { pt3dadd( -39.5719, -3.48794, -10.39, 0.83 ) }
    dend_57 { pt3dadd( -44.087, -3.44862, -12.1109, 0.83 ) }
    dend_57 { pt3dadd( -46.162, -3.44467, -13.0076, 0.56 ) }
    dend_57 { pt3dadd( -47.49, -3.45755, -13.5987, 0.56 ) }
    dend_57 { pt3dadd( -49.1447, -3.4079, -14.2851, 1.11 ) }
    dend_57 { pt3dadd( -51.8662, -3.31194, -15.3798, 0.56 ) }
    dend_57 { pt3dadd( -54.5666, -3.19439, -16.3837, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_57 { pt3dadd( -57.8405, -2.96182, -17.443, 0.56 ) }
    dend_57 { pt3dadd( -59.988, -2.67831, -18.1309, 1.94 ) }
    dend_57 { pt3dadd( -62.7033, -2.29184, -19.0847, 0.56 ) }
    dend_57 { pt3dadd( -63.3761, -2.1494, -19.3122, 0.56 ) }
    dend_57 { pt3dadd( -65.6274, -1.54791, -20.1093, 0.56 ) }
    dend_57 { pt3dadd( -67.507, -0.912575, -20.8609, 0.28 ) }
    dend_57 { pt3dadd( -70.5399, 0.266689, -22.0632, 2.22 ) }
    dend_57 { pt3dadd( -73.1899, 1.38664, -23.1629, 0.56 ) }
    dend_57 { pt3dadd( -76.8832, 3.03097, -24.7396, 0.56 ) }
    dend_57 { pt3dadd( -79.3441, 4.1614, -25.7627, 0.28 ) }
    dend_57 { pt3dadd( -80.2053, 4.5598, -26.1316, 0.28 ) }
    dend_57 { pt3dadd( -81.3694, 5.09331, -26.7131, 0.83 ) }
    dend_57 { pt3dadd( -82.8799, 5.79998, -27.4608, 0.28 ) }
    dend_57 { pt3dadd( -83.6384, 6.13156, -27.9038, 0.56 ) }
    dend_57 { pt3dadd( -84.8787, 6.59269, -28.8191, 0.28 ) }
    dend_57 { pt3dadd( -86.6839, 7.28099, -30.3931, 1.39 ) }
    dend_57 { pt3dadd( -89.0341, 8.05744, -32.5652, 0.28 ) }
    dend_57 { pt3dadd( -90.036, 8.38824, -33.5402, 0.56 ) }
    dend_57 { pt3dadd( -91.6318, 8.97554, -35.0786, 0.28 ) }
    dend_57 { pt3dadd( -91.9461, 9.1081, -35.3765, 0.56 ) }
    dend_57 { pt3dadd( -93.4675, 9.88844, -36.7275, 0.28 ) }
    dend_57 { pt3dadd( -95.8936, 11.4145, -38.6151, 0.28 ) }
    dend_57 { pt3dadd( -97.0935, 12.3324, -39.4266, 1.67 ) }
    dend_57 { pt3dadd( -98.8495, 13.8039, -40.5187, 0.28 ) }
    dend_57 { pt3dadd( -99.4925, 14.3735, -40.8673, 0.56 ) }
    dend_57 { pt3dadd( -101.351, 16.0788, -41.8498, 0.28 ) }
    dend_57 { pt3dadd( -102.449, 17.1282, -42.392, 1.67 ) }
    dend_57 { pt3dadd( -104.294, 18.8732, -43.4049, 0.28 ) }
    dend_57 { pt3dadd( -104.738, 19.2517, -43.6529, 0.28 ) }
    dend_57 { pt3dadd( -105.107, 19.511, -43.8767, 0.56 ) }
    dend_57 { pt3dadd( -106.142, 20.0229, -44.4802, 0.28 ) }
    dend_57 { pt3dadd( -106.904, 20.2128, -44.9434, 0.83 ) }
    dend_57 { pt3dadd( -108.625, 20.4258, -46.019, 0.28 ) }
    dend_57 { pt3dadd( -109.563, 20.4482, -46.6824, 0.83 ) }
    dend_57 { pt3dadd( -111.717, 20.4489, -48.2814, 0.28 ) }
    dend_57 { pt3dadd( -113.167, 20.4074, -49.4151, 1.39 ) }
    dend_57 { pt3dadd( -115.837, 20.3243, -51.5015, 0.28 ) }
    dend_57 { pt3dadd( -116.981, 20.3009, -52.3821, 1.67 ) }
    dend_57 { pt3dadd( -119.892, 20.2577, -54.4753, 0.28 ) }
    dend_57 { pt3dadd( -120.422, 20.2412, -54.8498, 0.56 ) }
    dend_57 { pt3dadd( -122.671, 20.2129, -56.4459, 0.28 ) }
    dend_57 { pt3dadd( -124.344, 20.2434, -57.6325, 1.11 ) }
    dend_57 { pt3dadd( -125.546, 20.3069, -58.4433, 0.28 ) }
    dend_57 { pt3dadd( -127.104, 20.3923, -59.4388, 0.28 ) }
    dend_57 { pt3dadd( -129.002, 20.555, -60.5294, 0.56 ) }
    dend_57 { pt3dadd( -130.778, 20.7425, -61.4887, 0.28 ) }
    dend_57 { pt3dadd( -131.844, 20.8702, -62.1037, 0.83 ) }
    dend_57 { pt3dadd( -133.396, 21.0642, -63.0937, 0.28 ) }
    dend_57 { pt3dadd( -133.829, 21.101, -63.3745, 0.56 ) }
    dend_57 { pt3dadd( -135.193, 21.2034, -64.2371, 0.28 ) }
    dend_57 { pt3dadd( -136.769, 21.3254, -65.0625, 1.39 ) }
    dend_57 { pt3dadd( -140.353, 21.6139, -66.7537, 0.28 ) }
    dend_57 { pt3dadd( -141.221, 21.6695, -67.174, 0.83 ) }
    dend_57 { pt3dadd( -144.291, 21.7951, -68.714, 0.28 ) }
    dend_57 { pt3dadd( -145.142, 21.8143, -69.1853, 0.83 ) }
    dend_57 { pt3dadd( -150.813, 22.0193, -72.573, 0.28 ) }
    dend_57 { pt3dadd( -151.781, 22.0778, -73.1791, 0.83 ) }
    dend_57 { pt3dadd( -153.878, 22.2978, -74.5248, 0.28 ) }
    dend_57 { pt3dadd( -155.457, 22.5284, -75.6371, 0.83 ) }
    dend_57 { pt3dadd( -157.101, 22.8824, -76.943, 0.83 ) }
    dend_57 { pt3dadd( -159.801, 23.5737, -79.2368, 0.28 ) }
    dend_57 { pt3dadd( -160.157, 23.6931, -79.5743, 0.56 ) }
    dend_57 { pt3dadd( -162.106, 24.4703, -81.2026, 0.28 ) }
    dend_57 { pt3dadd( -162.733, 24.7611, -81.6375, 0.83 ) }
    dend_57 { pt3dadd( -164.55, 25.6718, -82.7252, 0.28 ) }
    dend_57 { pt3dadd( -166.419, 26.5511, -83.6648, 0.83 ) }
    dend_57 { pt3dadd( -168.229, 27.3403, -84.3866, 0.28 ) }
    dend_57 { pt3dadd( -170.577, 28.4015, -85.1192, 1.11 ) }
    dend_57 { pt3dadd( -172.47, 29.2975, -85.4449, 0.28 ) }
    dend_57 { pt3dadd( -173.203, 29.6625, -85.5129, 0.56 ) }
    dend_57 { pt3dadd( -175.177, 30.6668, -85.6111, 0.28 ) }
    dend_57 { pt3dadd( -177.205, 31.6581, -85.7267, 0.83 ) }
    dend_57 { pt3dadd( -178.054, 32.0655, -85.7557, 0.83 ) }
    dend_57 { pt3dadd( -180.095, 32.9932, -85.9997, 0.28 ) }
    dend_57 { pt3dadd( -180.514, 33.1964, -86.0199, 0.56 ) }
    dend_57 { pt3dadd( -182.55, 34.1948, -86.205, 0.28 ) }
    dend_57 { pt3dadd( -183.414, 34.6702, -86.4166, 0.56 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -20.6528, -0.337845, 0.380825, 0.83 ) }
    dend_54 { pt3dadd( -23.3923, 2.11596, 1.62327, 0.83 ) }
    dend_54 { pt3dadd( -24.8248, 3.583, 2.49805, 0.83 ) }
    dend_54 { pt3dadd( -26.6887, 5.54667, 3.76372, 0.83 ) }
    dend_54 { pt3dadd( -29.3671, 8.38525, 5.73848, 0.83 ) }
    dend_54 { pt3dadd( -31.1156, 10.1785, 7.10509, 0.83 ) }
    dend_54 { pt3dadd( -32.4085, 11.3972, 8.15224, 1.39 ) }
    dend_54 { pt3dadd( -34.9276, 13.7876, 10.4125, 0.56 ) }
    dend_54 { pt3dadd( -36.2793, 14.9833, 11.5314, 0.56 ) }
    dend_54 { pt3dadd( -37.3869, 15.7384, 12.2257, 0.83 ) }
    dend_54 { pt3dadd( -38.7264, 16.3565, 12.7964, 0.83 ) }
    dend_54 { pt3dadd( -41.052, 17.1913, 13.2974, 0.83 ) }
    dend_54 { pt3dadd( -43.588, 17.9588, 13.5394, 1.11 ) }
    dend_54 { pt3dadd( -47.1159, 18.8725, 13.137, 0.83 ) }
    dend_54 { pt3dadd( -48.8994, 19.3923, 12.8369, 0.83 ) }
    dend_54 { pt3dadd( -50.7064, 20.05, 12.4227, 1.11 ) }
    dend_54 { pt3dadd( -52.0909, 20.6856, 12.1854, 0.56 ) }
    dend_54 { pt3dadd( -53.7411, 21.514, 12.1852, 1.39 ) }
    dend_54 { pt3dadd( -55.6999, 22.4767, 12.6736, 1.11 ) }
    dend_54 { pt3dadd( -56.856, 22.9799, 13.1909, 0.83 ) }
    dend_54 { pt3dadd( -58.1619, 23.4554, 13.8298, 0.83 ) }
    dend_54 { pt3dadd( -60.7268, 24.3195, 15.2594, 0.83 ) }
    dend_54 { pt3dadd( -62.8969, 25.1032, 16.5596, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( -63.639, 25.38, 16.9616, 0.83 ) }
    dend_54 { pt3dadd( -65.0558, 25.9286, 17.7691, 0.56 ) }
    dend_54 { pt3dadd( -66.481, 26.4637, 18.5067, 0.83 ) }
    dend_54 { pt3dadd( -67.9605, 27.0088, 19.2278, 0.83 ) }
    dend_54 { pt3dadd( -69.1574, 27.5003, 19.6849, 0.56 ) }
    dend_54 { pt3dadd( -72.4551, 29.0891, 20.7741, 0.83 ) }
    dend_54 { pt3dadd( -74.4861, 30.1062, 21.4201, 0.56 ) }
    dend_54 { pt3dadd( -75.4733, 30.6075, 21.7324, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.56434, 13.7007, -4.92863, 2.22 ) }
    dend_40 { pt3dadd( 3.00601, 19.6607, -9.67096, 2.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 3.56434, 13.7007, -4.92863, 0.83 ) }
    dend_33 { pt3dadd( 5.68441, 14.9619, -2.29573, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 12/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 57.4924, 34.2385, 13.2718, 1.11 ) }
    dend_24 { pt3dadd( 59.1113, 33.0065, 16.2048, 1.11 ) }
    dend_24 { pt3dadd( 59.5003, 32.7105, 16.9095, 1.39 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 57.4924, 34.2385, 13.2718, 0.56 ) }
    dend_23 { pt3dadd( 57.6111, 40.3397, 11.7953, 0.56 ) }
    dend_23 { pt3dadd( 57.6156, 43.8798, 11.9763, 0.56 ) }
    dend_23 { pt3dadd( 57.5842, 46.631, 12.2567, 0.28 ) }
    dend_23 { pt3dadd( 57.6006, 47.2351, 12.3225, 0.83 ) }
    dend_23 { pt3dadd( 57.7196, 49.6384, 12.6395, 0.28 ) }
    dend_23 { pt3dadd( 57.9863, 53.9892, 13.2139, 0.56 ) }
    dend_23 { pt3dadd( 58.414, 58.9521, 14.2896, 0.56 ) }
    dend_23 { pt3dadd( 58.6712, 60.8482, 14.5628, 0.56 ) }
    dend_23 { pt3dadd( 59.0836, 63.1234, 14.717, 0.56 ) }
    dend_23 { pt3dadd( 59.6627, 65.968, 14.7375, 0.28 ) }
    dend_23 { pt3dadd( 59.9134, 67.0274, 14.6416, 0.28 ) }
    dend_23 { pt3dadd( 60.2438, 68.2446, 14.1709, 0.83 ) }
    dend_23 { pt3dadd( 61.3384, 70.8523, 12.3869, 0.28 ) }
    dend_23 { pt3dadd( 62.1432, 72.6134, 11.1406, 0.28 ) }
    dend_23 { pt3dadd( 62.3019, 72.8719, 10.906, 0.56 ) }
    dend_23 { pt3dadd( 63.1263, 73.8152, 9.92675, 0.28 ) }
    dend_23 { pt3dadd( 63.1263, 73.8152, 9.92675, 0.56 ) }
    dend_23 { pt3dadd( 64.7653, 75.266, 8.609, 0.28 ) }
    dend_23 { pt3dadd( 65.9679, 76.2704, 7.93712, 0.56 ) }
    dend_23 { pt3dadd( 69.5677, 78.8492, 6.14078, 0.28 ) }
    dend_23 { pt3dadd( 70.7277, 79.5833, 5.57674, 0.28 ) }
    dend_23 { pt3dadd( 70.9539, 79.7344, 5.50326, 0.56 ) }
    dend_23 { pt3dadd( 71.7457, 80.5322, 5.58119, 0.28 ) }
    dend_23 { pt3dadd( 72.5827, 81.9755, 6.36287, 0.83 ) }
    dend_23 { pt3dadd( 73.1987, 83.3595, 7.32703, 0.28 ) }
    dend_23 { pt3dadd( 73.605, 84.6331, 8.38341, 0.83 ) }
    dend_23 { pt3dadd( 74.6868, 88.9291, 12.1312, 0.28 ) }
    dend_23 { pt3dadd( 75.4578, 92.5128, 15.3907, 0.28 ) }
    dend_23 { pt3dadd( 75.5617, 93.2426, 16.0973, 0.56 ) }
    dend_23 { pt3dadd( 79.4642, 102.253, 16.1743, 0.56 ) }
    dend_23 { pt3dadd( 84.4229, 110.747, 17.0724, 0.56 ) }
    dend_23 { pt3dadd( 89.6929, 118.982, 16.1463, 0.56 ) }
    dend_23 { pt3dadd( 95.1587, 127.136, 17.5127, 0.56 ) }
    dend_23 { pt3dadd( 101.037, 134.986, 19.1113, 0.56 ) }
    dend_23 { pt3dadd( 106.357, 143.043, 21.5496, 0.56 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 51/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 37.9025, -4.53979, -12.3028, 0.83 ) }
    dend_19 { pt3dadd( 45.4839, -7.06163, -11.9093, 0.83 ) }
    dend_19 { pt3dadd( 48.5097, -7.95427, -11.6866, 0.28 ) }
    dend_19 { pt3dadd( 51.2185, -8.73778, -11.4757, 0.83 ) }
    dend_19 { pt3dadd( 54.8423, -9.73158, -11.1936, 0.56 ) }
    dend_19 { pt3dadd( 62.9966, -11.6061, -10.3558, 0.56 ) }
    dend_19 { pt3dadd( 69.7734, -13.1215, -9.58033, 0.56 ) }
    dend_19 { pt3dadd( 75.5225, -14.2516, -9.14738, 0.56 ) }
    dend_19 { pt3dadd( 78.6213, -14.838, -8.76777, 1.39 ) }
    dend_19 { pt3dadd( 81.1933, -15.31, -8.43964, 0.83 ) }
    dend_19 { pt3dadd( 87.8531, -16.4377, -7.59859, 0.56 ) }
    dend_19 { pt3dadd( 89.9962, -16.884, -7.34396, 0.83 ) }
    dend_19 { pt3dadd( 93.3451, -17.5588, -7.0193, 0.56 ) }
    dend_19 { pt3dadd( 97.1479, -18.4382, -6.76993, 0.56 ) }
    dend_19 { pt3dadd( 102.427, -19.689, -6.65896, 0.83 ) }
    dend_19 { pt3dadd( 108.831, -21.2376, -6.78851, 0.56 ) }
    dend_19 { pt3dadd( 113.062, -22.3978, -7.09653, 0.56 ) }
    dend_19 { pt3dadd( 116.661, -23.3903, -7.40221, 0.56 ) }
    dend_19 { pt3dadd( 121.88, -25.0001, -7.91612, 1.94 ) }
    dend_19 { pt3dadd( 127.001, -26.8591, -8.48656, 0.56 ) }
    dend_19 { pt3dadd( 130.647, -28.3678, -8.78803, 0.56 ) }
    dend_19 { pt3dadd( 137.607, -31.8239, -9.34037, 0.56 ) }
    dend_19 { pt3dadd( 141.128, -33.7476, -9.59781, 0.56 ) }
    dend_19 { pt3dadd( 143.364, -35.1524, -9.75739, 0.28 ) }
    dend_19 { pt3dadd( 145.856, -36.9414, -9.84834, 0.28 ) }
    dend_19 { pt3dadd( 148.399, -39.0289, -9.84939, 1.67 ) }
    dend_19 { pt3dadd( 154.88, -45.2019, -9.6368, 0.28 ) }
    dend_19 { pt3dadd( 156.974, -47.4625, -9.3702, 0.28 ) }
    dend_19 { pt3dadd( 158.379, -49.1107, -9.10182, 0.56 ) }
    dend_19 { pt3dadd( 161.139, -52.549, -8.59606, 0.28 ) }
    dend_19 { pt3dadd( 164.567, -57.2476, -7.99143, 0.28 ) }
    dend_19 { pt3dadd( 167.546, -61.7931, -7.40289, 0.28 ) }
    dend_19 { pt3dadd( 169.664, -65.4491, -6.94323, 1.39 ) }
    dend_19 { pt3dadd( 170.836, -67.522, -6.67063, 1.39 ) }
    dend_19 { pt3dadd( 173.291, -71.869, -6.13424, 0.28 ) }
    dend_19 { pt3dadd( 174.01, -73.2129, -6.03388, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 37.9025, -4.53979, -12.3028, 0.83 ) }
    dend_18 { pt3dadd( 38.6149, -4.21765, -15.2089, 0.83 ) }
    dend_18 { pt3dadd( 43.098, -2.3977, -30.3248, 0.56 ) }
    dend_18 { pt3dadd( 43.8212, -2.15003, -32.4189, 0.56 ) }
    dend_18 { pt3dadd( 45.4528, -1.71929, -36.462, 1.11 ) }
    dend_18 { pt3dadd( 47.5215, -1.23592, -41.1009, 0.56 ) }
    dend_18 { pt3dadd( 49.2892, -0.891115, -44.7201, 1.67 ) }
    dend_18 { pt3dadd( 51.0267, -0.691985, -47.6674, 0.28 ) }
    dend_18 { pt3dadd( 52.2927, -0.557895, -49.2085, 1.11 ) }
    dend_18 { pt3dadd( 57.8855, -0.177746, -55.3371, 0.28 ) }
    dend_18 { pt3dadd( 58.7821, -0.145454, -56.1809, 0.83 ) }
    dend_18 { pt3dadd( 60.4676, -0.0050692, -57.5136, 0.83 ) }
    dend_18 { pt3dadd( 63.8887, 0.649797, -59.9481, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_18 { pt3dadd( 64.6276, 0.920535, -60.4592, 1.11 ) }
    dend_18 { pt3dadd( 66.052, 1.59507, -61.376, 0.28 ) }
    dend_18 { pt3dadd( 67.3653, 2.24208, -62.1814, 0.83 ) }
    dend_18 { pt3dadd( 71.0902, 3.9992, -64.495, 0.28 ) }
    dend_18 { pt3dadd( 74.3649, 5.42928, -66.6322, 1.67 ) }
    dend_18 { pt3dadd( 82.4657, 8.66582, -71.9175, 0.28 ) }
    dend_18 { pt3dadd( 84.6438, 9.39705, -73.4054, 2.22 ) }
    dend_18 { pt3dadd( 92.0507, 11.4857, -78.6704, 0.28 ) }
    dend_18 { pt3dadd( 93.7464, 11.884, -79.9501, 1.11 ) }
    dend_18 { pt3dadd( 99.0541, 12.8836, -84.0566, 0.28 ) }
    dend_18 { pt3dadd( 100.454, 13.1142, -85.1597, 1.11 ) }
    dend_18 { pt3dadd( 105.298, 13.8098, -89.1991, 0.28 ) }
    dend_18 { pt3dadd( 106.935, 14.2825, -90.9139, 1.11 ) }
    dend_18 { pt3dadd( 110.408, 15.884, -95.4629, 0.28 ) }
    dend_18 { pt3dadd( 111.693, 16.635, -97.4116, 1.11 ) }
    dend_18 { pt3dadd( 113.024, 17.5526, -99.6229, 0.28 ) }
    dend_18 { pt3dadd( 113.446, 17.9095, -100.379, 0.56 ) }
    dend_18 { pt3dadd( 120.554, 25.0736, -113.871, 0.28 ) }
    dend_18 { pt3dadd( 122.416, 27.1029, -117.919, 1.67 ) }
    dend_18 { pt3dadd( 124.708, 29.7099, -123.14, 0.28 ) }
    dend_18 { pt3dadd( 124.918, 29.9545, -123.638, 0.56 ) }
    dend_18 { pt3dadd( 128.265, 33.8538, -131.589, 0.28 ) }
    dend_18 { pt3dadd( 128.696, 34.3745, -132.656, 1.39 ) }
    dend_18 { pt3dadd( 133.348, 40.4711, -144.885, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 24/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.00248, -29.8321, 6.08115, 1.67 ) }
    dend_4 { pt3dadd( -7.71525, -35.8195, 6.66311, 1.67 ) }
    dend_4 { pt3dadd( -8.44199, -40.4625, 7.12028, 1.67 ) }
    dend_4 { pt3dadd( -9.12542, -44.244, 7.47142, 1.67 ) }
    dend_4 { pt3dadd( -10.1457, -49.7519, 7.68117, 1.67 ) }
    dend_4 { pt3dadd( -10.6328, -52.1875, 7.68202, 1.67 ) }
    dend_4 { pt3dadd( -11.4513, -56.0015, 7.64029, 1.67 ) }
    dend_4 { pt3dadd( -12.2446, -59.3297, 7.51157, 1.67 ) }
    dend_4 { pt3dadd( -13.1763, -62.8397, 7.0749, 1.67 ) }
    dend_4 { pt3dadd( -14.6644, -67.8846, 5.94586, 1.39 ) }
    dend_4 { pt3dadd( -16.4903, -73.7787, 4.15778, 1.39 ) }
    dend_4 { pt3dadd( -17.0965, -75.9815, 3.40039, 1.39 ) }
    dend_4 { pt3dadd( -17.9962, -79.9958, 1.94992, 1.39 ) }
    dend_4 { pt3dadd( -19.321, -88.2482, -0.985605, 1.39 ) }
    dend_4 { pt3dadd( -19.6362, -91.5696, -2.10075, 1.39 ) }
    dend_4 { pt3dadd( -19.8787, -97.3004, -3.65634, 1.11 ) }
    dend_4 { pt3dadd( -19.8263, -102.283, -4.79485, 1.11 ) }
    dend_4 { pt3dadd( -19.714, -105.297, -5.19582, 1.11 ) }
    dend_4 { pt3dadd( -19.5815, -108.668, -5.20389, 1.11 ) }
    dend_4 { pt3dadd( -19.4828, -112.94, -4.63726, 1.11 ) }
    dend_4 { pt3dadd( -19.5936, -120.729, -3.15343, 1.11 ) }
    dend_4 { pt3dadd( -19.987, -124.645, -2.15331, 1.11 ) }
    dend_4 { pt3dadd( -20.9096, -129.593, -0.677093, 1.11 ) }
    dend_4 { pt3dadd( -21.8691, -133.284, 0.452778, 1.11 ) }
    dend_4 { pt3dadd( -22.6282, -135.715, 1.22612, 1.11 ) }
    dend_4 { pt3dadd( -22.9757, -136.734, 1.54002, 1.11 ) }
    dend_4 { pt3dadd( -24.4298, -141.1, 2.64454, 1.11 ) }
    dend_4 { pt3dadd( -25.1988, -143.949, 2.94258, 1.11 ) }
    dend_4 { pt3dadd( -25.6543, -146.31, 2.86337, 1.39 ) }
    dend_4 { pt3dadd( -25.9895, -149.235, 2.58866, 1.39 ) }
    dend_4 { pt3dadd( -26.192, -152.348, 2.2155, 1.11 ) }
    dend_4 { pt3dadd( -26.3061, -155.069, 1.84152, 1.11 ) }
    dend_4 { pt3dadd( -26.4794, -160.494, 1.01169, 1.11 ) }
    dend_4 { pt3dadd( -26.6354, -163.422, 0.55891, 1.11 ) }
    dend_4 { pt3dadd( -26.8629, -166.084, 0.0884328, 1.11 ) }
    dend_4 { pt3dadd( -27.1901, -168.274, -0.309734, 1.39 ) }
    dend_4 { pt3dadd( -27.5037, -170.127, -0.656324, 1.67 ) }
    dend_4 { pt3dadd( -27.946, -172.148, -1.01992, 1.67 ) }
    dend_4 { pt3dadd( -28.7804, -174.769, -1.40444, 1.11 ) }
    dend_4 { pt3dadd( -30.0971, -178.143, -1.94409, 1.11 ) }
    dend_4 { pt3dadd( -31.9791, -182.157, -2.61585, 1.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.00248, -29.8321, 6.08115, 0.83 ) }
    dend_1 { pt3dadd( -13.3764, -36.2712, 1.37164, 0.83 ) }
    dend_1 { pt3dadd( -17.3496, -39.7287, -1.18924, 0.83 ) }
    dend_1 { pt3dadd( -20.5928, -42.3319, -3.34955, 0.83 ) }
    dend_1 { pt3dadd( -24.0949, -45.0266, -5.58076, 0.83 ) }
    dend_1 { pt3dadd( -27.6046, -47.6098, -7.70492, 0.83 ) }
    dend_1 { pt3dadd( -29.459, -48.8516, -8.83871, 0.83 ) }
    dend_1 { pt3dadd( -32.779, -50.7507, -10.4665, 0.83 ) }
    dend_1 { pt3dadd( -36.5342, -52.8781, -12.5716, 1.11 ) }
    dend_1 { pt3dadd( -39.006, -54.1925, -14.0624, 0.83 ) }
    dend_1 { pt3dadd( -41.5085, -55.5085, -15.5337, 1.11 ) }
    dend_1 { pt3dadd( -46.7156, -58.3611, -18.5478, 0.83 ) }
    dend_1 { pt3dadd( -50.2394, -60.4367, -20.5216, 0.83 ) }
    dend_1 { pt3dadd( -55.1324, -63.504, -23.2981, 0.83 ) }
    dend_1 { pt3dadd( -58.1756, -65.5243, -24.9529, 1.39 ) }
    dend_1 { pt3dadd( -61.1809, -67.6822, -26.6295, 0.56 ) }
    dend_1 { pt3dadd( -62.9671, -69.1408, -27.6595, 0.56 ) }
    dend_1 { pt3dadd( -64.396, -70.4325, -28.4709, 1.11 ) }
    dend_1 { pt3dadd( -67.7974, -73.5924, -30.4306, 0.56 ) }
    dend_1 { pt3dadd( -71.9474, -77.402, -32.5924, 0.56 ) }
    dend_1 { pt3dadd( -73.2331, -78.6969, -33.2415, 0.83 ) }
    dend_1 { pt3dadd( -76.2209, -81.9823, -34.6637, 0.28 ) }
    dend_1 { pt3dadd( -77.4772, -83.5033, -35.1657, 0.28 ) }
    dend_1 { pt3dadd( -78.74, -85.1305, -35.5663, 1.39 ) }
    dend_1 { pt3dadd( -81.032, -88.1908, -36.0243, 0.83 ) }
    dend_1 { pt3dadd( -83.0939, -90.9605, -36.2999, 0.28 ) }
    dend_1 { pt3dadd( -84.2004, -92.5699, -36.4581, 0.83 ) }
    dend_1 { pt3dadd( -85.664, -94.8934, -36.6613, 0.28 ) }
    dend_1 { pt3dadd( -86.5825, -96.5971, -36.8577, 0.56 ) }
    dend_1 { pt3dadd( -87.7468, -98.9147, -37.2254, 0.28 ) }
    dend_1 { pt3dadd( -88.4919, -100.469, -37.5309, 1.67 ) }
    dend_1 { pt3dadd( -90.521, -104.709, -38.4161, 0.56 ) }
    dend_1 { pt3dadd( -92.0003, -107.867, -39.075, 0.28 ) }
    dend_1 { pt3dadd( -93.372, -110.909, -39.7894, 0.28 ) }
    dend_1 { pt3dadd( -93.7932, -111.792, -40.0297, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -95.0607, -114.267, -40.7898, 1.11 ) }
    dend_1 { pt3dadd( -97.4407, -118.575, -42.2218, 0.28 ) }
    dend_1 { pt3dadd( -98.0512, -119.563, -42.554, 0.56 ) }
    dend_1 { pt3dadd( -100.217, -122.718, -43.7555, 0.28 ) }
    dend_1 { pt3dadd( -102.9, -126.092, -45.1822, 0.28 ) }
    dend_1 { pt3dadd( -103.407, -126.622, -45.3775, 0.56 ) }
    dend_1 { pt3dadd( -104.864, -127.83, -45.7711, 0.28 ) }
    dend_1 { pt3dadd( -105.432, -128.196, -45.8785, 0.83 ) }
    dend_1 { pt3dadd( -108.099, -129.704, -46.2605, 0.28 ) }
    dend_1 { pt3dadd( -111.011, -131.167, -46.3805, 1.39 ) }
    dend_1 { pt3dadd( -116.077, -133.716, -46.0337, 0.28 ) }
    dend_1 { pt3dadd( -118.001, -134.746, -45.7561, 0.56 ) }
    dend_1 { pt3dadd( -120.712, -136.354, -45.1528, 0.28 ) }
    dend_1 { pt3dadd( -121.711, -137.02, -44.8232, 0.28 ) }
    dend_1 { pt3dadd( -124.716, -139.208, -43.4691, 1.67 ) }
    dend_1 { pt3dadd( -127.652, -141.866, -41.7291, 0.56 ) }
    dend_1 { pt3dadd( -128.443, -142.819, -41.1437, 0.28 ) }
    dend_1 { pt3dadd( -129.495, -144.269, -40.115, 0.56 ) }
    dend_1 { pt3dadd( -131.187, -146.717, -38.1877, 0.28 ) }
    dend_1 { pt3dadd( -131.764, -147.499, -37.5479, 0.83 ) }
    dend_1 { pt3dadd( -133.294, -149.369, -36.1528, 0.28 ) }
    dend_1 { pt3dadd( -134.22, -150.375, -35.4583, 0.28 ) }
    dend_1 { pt3dadd( -136.39, -152.626, -33.9111, 0.83 ) }
    dend_1 { pt3dadd( -139.015, -155.357, -32.0543, 0.28 ) }
    dend_1 { pt3dadd( -140.041, -156.472, -31.2687, 0.83 ) }
    dend_1 { pt3dadd( -143.976, -160.902, -28.0985, 0.28 ) }
    dend_1 { pt3dadd( -144.861, -161.885, -27.3778, 1.11 ) }
    dend_1 { pt3dadd( -148.749, -166.42, -23.8049, 0.28 ) }
    dend_1 { pt3dadd( -149.133, -166.933, -23.3989, 0.83 ) }
    dend_1 { pt3dadd( -151.335, -170.328, -20.5989, 0.28 ) }
    dend_1 { pt3dadd( -152.018, -171.494, -19.5857, 0.28 ) }
    dend_1 { pt3dadd( -152.078, -171.615, -19.4634, 0.83 ) }
    dend_1 { pt3dadd( -153.732, -175.327, -15.4181, 0.28 ) }
    dend_1 { pt3dadd( -154.235, -176.645, -13.8041, 0.28 ) }
    dend_1 { pt3dadd( -154.424, -177.107, -13.2218, 0.56 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 35/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 15.5304, 39.8479, -0.563992, 0.28 ) }
    axon_1 { pt3dadd( 21.1075, 53.7726, -0.563992, 0.28 ) }
    axon_1 { pt3dadd( 26.6846, 67.6972, -0.563992, 0.28 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 38/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -19.3931, 106.566, -71.3925, 0.28 ) }
    dend_65 { pt3dadd( -17.8752, 110.092, -73.0154, 0.28 ) }
    dend_65 { pt3dadd( -17.197, 111.667, -73.7405, 0.28 ) }
    dend_65 { pt3dadd( -16.8505, 112.472, -74.111, 1.39 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 42/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -19.3931, 106.566, -71.3925, 0.28 ) }
    dend_64 { pt3dadd( -20.114, 108.379, -71.9557, 0.28 ) }
    dend_64 { pt3dadd( -20.3272, 108.915, -72.1222, 0.56 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 45/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -75.4733, 30.6075, 21.7324, 0.56 ) }
    dend_56 { pt3dadd( -76.458, 32.0237, 22.0534, 0.56 ) }
    dend_56 { pt3dadd( -76.9875, 32.8818, 22.1977, 1.11 ) }
    dend_56 { pt3dadd( -78.791, 36.1792, 22.5839, 0.56 ) }
    dend_56 { pt3dadd( -80.2478, 39.0812, 22.8496, 0.83 ) }
    dend_56 { pt3dadd( -80.7955, 40.4354, 22.9381, 0.83 ) }
    dend_56 { pt3dadd( -81.0953, 41.4183, 22.9839, 0.28 ) }
    dend_56 { pt3dadd( -81.1006, 41.8694, 22.9591, 0.56 ) }
    dend_56 { pt3dadd( -80.8953, 42.5353, 22.8314, 0.28 ) }
    dend_56 { pt3dadd( -80.8015, 42.7042, 22.7875, 0.83 ) }
    dend_56 { pt3dadd( -79.6681, 44.2381, 22.7462, 0.28 ) }
    dend_56 { pt3dadd( -79.2467, 44.9488, 22.7938, 0.83 ) }
    dend_56 { pt3dadd( -78.8065, 45.9386, 22.9865, 0.28 ) }
    dend_56 { pt3dadd( -78.5108, 46.6898, 23.1594, 0.83 ) }
    dend_56 { pt3dadd( -77.8304, 49.0428, 23.8138, 0.28 ) }
    dend_56 { pt3dadd( -77.6965, 49.8892, 24.0778, 0.83 ) }
    dend_56 { pt3dadd( -77.7169, 51.6783, 24.7222, 0.28 ) }
    dend_56 { pt3dadd( -77.823, 52.7998, 25.1629, 1.11 ) }
    dend_56 { pt3dadd( -80.0681, 59.528, 26.7095, 1.11 ) }
    dend_56 { pt3dadd( -84.1196, 65.4763, 28.1497, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 65/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -75.4733, 30.6075, 21.7324, 0.56 ) }
    dend_55 { pt3dadd( -75.4751, 29.4266, 22.2076, 0.56 ) }
    dend_55 { pt3dadd( -75.4768, 28.3017, 22.6603, 0.28 ) }
    dend_55 { pt3dadd( -75.4799, 26.2653, 23.4797, 0.56 ) }
    dend_55 { pt3dadd( -76.3472, 20.3818, 27.5826, 0.56 ) }
    dend_55 { pt3dadd( -77.912, 14.481, 31.4303, 0.56 ) }
    dend_55 { pt3dadd( -79.4784, 8.79187, 35.6192, 0.56 ) }
    dend_55 { pt3dadd( -82.1163, 3.74434, 40.1523, 0.56 ) }
    dend_55 { pt3dadd( -83.5693, -1.46728, 45.0205, 0.56 ) }
    dend_55 { pt3dadd( -84.6151, -6.70801, 49.9629, 0.56 ) }
    dend_55 { pt3dadd( -86.5203, -11.4916, 55.1454, 0.56 ) }
    dend_55 { pt3dadd( -88.6884, -16.1916, 60.3059, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 77/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 3.00601, 19.6607, -9.67096, 1.11 ) }
    dend_46 { pt3dadd( 0.0457888, 26.366, -13.3478, 1.11 ) }
    dend_46 { pt3dadd( -1.6, 30.094, -15.392, 1.11 ) }
    dend_46 { pt3dadd( -2.87812, 32.9891, -16.9795, 1.39 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 81/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.00601, 19.6607, -9.67096, 1.11 ) }
    dend_41 { pt3dadd( 11.6173, 25.6708, -0.168672, 1.11 ) }
    dend_41 { pt3dadd( 13.8237, 27.4481, 2.36018, 1.11 ) }
    dend_41 { pt3dadd( 16.554, 29.9936, 5.71226, 1.11 ) }
    dend_41 { pt3dadd( 18.6664, 31.9631, 8.30571, 1.11 ) }
    dend_41 { pt3dadd( 20.2372, 33.4276, 10.2343, 1.11 ) }
    dend_41 { pt3dadd( 21.6369, 34.7326, 11.9528, 1.11 ) }
    dend_41 { pt3dadd( 24.4146, 37.8778, 14.1164, 1.11 ) }
    dend_41 { pt3dadd( 25.542, 39.2136, 15.1712, 1.39 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.68441, 14.9619, -2.29573, 0.83 ) }
    dend_35 { pt3dadd( 7.27081, 16.3469, 0.495854, 0.83 ) }
    dend_35 { pt3dadd( 9.57809, 18.3399, 4.65517, 0.56 ) }
    dend_35 { pt3dadd( 11.0789, 19.7017, 7.36537, 0.56 ) }
    dend_35 { pt3dadd( 12.4754, 21.0291, 9.85006, 0.56 ) }
    dend_35 { pt3dadd( 17.2576, 25.7314, 17.9409, 1.11 ) }
    dend_35 { pt3dadd( 19.5362, 28.0159, 21.6185, 0.56 ) }
    dend_35 { pt3dadd( 20.7594, 29.1951, 23.3564, 0.83 ) }
    dend_35 { pt3dadd( 22.4477, 30.8545, 25.7372, 0.56 ) }
    dend_35 { pt3dadd( 23.0815, 31.4823, 26.6727, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 25.2014, 33.4221, 29.3621, 0.83 ) }
    dend_35 { pt3dadd( 26.9737, 35.3102, 30.3949, 0.56 ) }
    dend_35 { pt3dadd( 31.4175, 39.9922, 31.5158, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 3/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.68441, 14.9619, -2.29573, 0.56 ) }
    dend_34 { pt3dadd( 7.39274, 14.3903, -1.25884, 0.56 ) }
    dend_34 { pt3dadd( 9.57032, 13.6615, 0.062873, 0.83 ) }
    dend_34 { pt3dadd( 18.3179, 11.638, 5.64134, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 59.5003, 32.7105, 16.9095, 0.83 ) }
    dend_28 { pt3dadd( 62.6492, 34.6184, 18.4343, 0.83 ) }
    dend_28 { pt3dadd( 64.0762, 35.483, 19.1253, 0.83 ) }
    dend_28 { pt3dadd( 65.6594, 36.4423, 19.8919, 0.83 ) }
    dend_28 { pt3dadd( 67.1719, 37.3587, 20.6243, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 12/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 59.5003, 32.7105, 16.9095, 0.83 ) }
    dend_25 { pt3dadd( 61.008, 32.8733, 19.7877, 0.83 ) }
    dend_25 { pt3dadd( 63.4361, 33.1353, 24.4229, 0.83 ) }
    dend_25 { pt3dadd( 64.5301, 33.2534, 26.5111, 0.56 ) }
    dend_25 { pt3dadd( 65.2811, 33.3344, 27.9449, 0.56 ) }
    dend_25 { pt3dadd( 66.5394, 33.4702, 30.3469, 0.56 ) }
    dend_25 { pt3dadd( 67.477, 33.5714, 32.1367, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 19/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 174.01, -73.2129, -6.03388, 0.28 ) }
    dend_21 { pt3dadd( 176.652, -75.4744, -6.15475, 0.28 ) }
    dend_21 { pt3dadd( 179.073, -77.9631, -6.46759, 0.28 ) }
    dend_21 { pt3dadd( 180.012, -78.9275, -6.58882, 0.56 ) }
    dend_21 { pt3dadd( 183.217, -82.2216, -7.0029, 0.28 ) }
    dend_21 { pt3dadd( 183.907, -82.9308, -7.09205, 0.56 ) }
    dend_21 { pt3dadd( 187.199, -86.3152, -7.51747, 0.28 ) }
    dend_21 { pt3dadd( 188.434, -87.9098, -7.87401, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 174.01, -73.2129, -6.03388, 0.28 ) }
    dend_20 { pt3dadd( 177.437, -76.5764, -5.53821, 0.28 ) }
    dend_20 { pt3dadd( 179.025, -78.1209, -4.80469, 0.28 ) }
    dend_20 { pt3dadd( 179.708, -78.8247, -4.43462, 0.56 ) }
    dend_20 { pt3dadd( 181.333, -80.5029, -3.50971, 0.28 ) }
    dend_20 { pt3dadd( 182.746, -81.9925, -2.73856, 1.11 ) }
    dend_20 { pt3dadd( 184.031, -83.3395, -2.08106, 0.83 ) }
    dend_20 { pt3dadd( 188.193, -87.5766, -0.0146184, 0.28 ) }
    dend_20 { pt3dadd( 190.181, -89.5217, 1.04068, 0.28 ) }
    dend_20 { pt3dadd( 190.499, -89.8335, 1.25105, 0.56 ) }
    dend_20 { pt3dadd( 192.75, -92.0744, 2.9286, 0.28 ) }
    dend_20 { pt3dadd( 193.842, -93.1772, 3.73853, 1.11 ) }
    dend_20 { pt3dadd( 195.488, -94.7933, 4.99616, 0.28 ) }
    dend_20 { pt3dadd( 198.776, -97.7631, 7.44492, 0.56 ) }
    dend_20 { pt3dadd( 202.49, -100.937, 10.7379, 0.28 ) }
    dend_20 { pt3dadd( 203.252, -101.592, 11.5208, 0.56 ) }
    dend_20 { pt3dadd( 211.073, -109.532, 17.3319, 0.56 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -31.9791, -182.157, -2.61585, 1.11 ) }
    dend_6 { pt3dadd( -31.6604, -184.763, -3.60605, 1.11 ) }
    dend_6 { pt3dadd( -31.3402, -188.586, -4.984, 1.11 ) }
    dend_6 { pt3dadd( -31.2025, -192.547, -6.82512, 1.11 ) }
    dend_6 { pt3dadd( -31.1465, -193.906, -7.41876, 1.11 ) }
    dend_6 { pt3dadd( -30.879, -196.762, -8.49532, 2.22 ) }
    dend_6 { pt3dadd( -30.5797, -199.078, -9.35205, 3.33 ) }
    dend_6 { pt3dadd( -30.3643, -200.693, -9.91435, 1.94 ) }
    dend_6 { pt3dadd( -29.9791, -205.723, -11.2926, 0.83 ) }
    dend_6 { pt3dadd( -29.9593, -208.792, -12.0247, 1.67 ) }
    dend_6 { pt3dadd( -30.0038, -212.576, -12.7024, 2.22 ) }
    dend_6 { pt3dadd( -30.0788, -215.013, -12.9811, 0.83 ) }
    dend_6 { pt3dadd( -30.3112, -218.154, -13.3318, 0.83 ) }
    dend_6 { pt3dadd( -30.7472, -221.529, -13.6199, 0.83 ) }
    dend_6 { pt3dadd( -31.4392, -225.409, -13.9491, 1.11 ) }
    dend_6 { pt3dadd( -31.9374, -227.51, -14.3152, 0.83 ) }
    dend_6 { pt3dadd( -32.5121, -229.563, -14.7613, 0.83 ) }
    dend_6 { pt3dadd( -33.4433, -232.975, -15.5358, 2.22 ) }
    dend_6 { pt3dadd( -34.245, -236.093, -16.3359, 1.11 ) }
    dend_6 { pt3dadd( -35.4856, -240.986, -17.6913, 0.83 ) }
    dend_6 { pt3dadd( -36.2538, -243.804, -18.4658, 2.22 ) }
    dend_6 { pt3dadd( -36.4515, -244.525, -18.6465, 2.22 ) }
    dend_6 { pt3dadd( -37.5072, -248.564, -19.462, 0.83 ) }
    dend_6 { pt3dadd( -38.1672, -251.4, -19.8465, 0.83 ) }
    dend_6 { pt3dadd( -38.3569, -252.255, -19.9398, 1.39 ) }
    dend_6 { pt3dadd( -39.0017, -255.259, -20.0327, 2.22 ) }
    dend_6 { pt3dadd( -39.7986, -259.396, -19.9285, 0.83 ) }
    dend_6 { pt3dadd( -40.1231, -261.167, -19.8762, 1.67 ) }
    dend_6 { pt3dadd( -40.6672, -264.528, -19.7429, 2.5 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 73/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -31.9791, -182.157, -2.61585, 0.56 ) }
    dend_5 { pt3dadd( -34.3565, -182.85, -4.85318, 0.56 ) }
    dend_5 { pt3dadd( -35.9926, -183.328, -6.39296, 0.56 ) }
    dend_5 { pt3dadd( -37.1951, -183.678, -7.52459, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -154.424, -177.107, -13.2218, 0.28 ) }
    dend_3 { pt3dadd( -156.633, -177.836, -12.8235, 0.28 ) }
    dend_3 { pt3dadd( -157.638, -178.168, -12.6422, 0.56 ) }
    dend_3 { pt3dadd( -161.265, -179.365, -11.9881, 0.28 ) }
    dend_3 { pt3dadd( -162.954, -179.922, -11.6837, 0.56 ) }
    dend_3 { pt3dadd( -166.503, -181.093, -11.0437, 0.56 ) }
    dend_3 { pt3dadd( -176.809, -184.185, -10.3424, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 84/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -154.424, -177.107, -13.2218, 0.28 ) }
    dend_2 { pt3dadd( -153.687, -178.35, -13.6252, 0.28 ) }
    dend_2 { pt3dadd( -153.397, -178.838, -13.7838, 0.56 ) }
    dend_2 { pt3dadd( -149.359, -187.294, -14.8301, 0.56 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 88/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -2.87812, 32.9891, -16.9795, 0.83 ) }
    dend_48 { pt3dadd( -3.35462, 36.4981, -17.2988, 0.83 ) }
    dend_48 { pt3dadd( -3.67253, 41.3964, -18.1148, 0.83 ) }
    dend_48 { pt3dadd( -3.84146, 46.7956, -19.1666, 0.83 ) }
    dend_48 { pt3dadd( -3.88455, 49.8361, -19.6956, 0.83 ) }
    dend_48 { pt3dadd( -3.90394, 50.7682, -19.8645, 0.83 ) }
    dend_48 { pt3dadd( -3.98608, 54.1071, -20.4605, 0.83 ) }
    dend_48 { pt3dadd( -4.03931, 59.0077, -21.1567, 0.83 ) }
    dend_48 { pt3dadd( -4.10055, 62.0723, -21.6735, 0.83 ) }
    dend_48 { pt3dadd( -4.15707, 65.549, -22.2611, 1.11 ) }
    dend_48 { pt3dadd( -4.36079, 69.7491, -22.9353, 0.83 ) }
    dend_48 { pt3dadd( -4.56938, 71.7868, -23.1425, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -5.00186, 74.8375, -23.3819, 0.83 ) }
    dend_48 { pt3dadd( -5.93285, 79.7632, -23.5262, 0.83 ) }
    dend_48 { pt3dadd( -6.67872, 83.4457, -23.665, 0.83 ) }
    dend_48 { pt3dadd( -7.23924, 85.9731, -23.7871, 0.83 ) }
    dend_48 { pt3dadd( -8.00679, 89.2268, -23.7696, 2.5 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -2.87812, 32.9891, -16.9795, 0.56 ) }
    dend_47 { pt3dadd( -2.27696, 37.2272, -19.8282, 0.56 ) }
    dend_47 { pt3dadd( -1.37137, 42.2874, -22.5842, 0.56 ) }
    dend_47 { pt3dadd( -0.869122, 45.2643, -24.1904, 1.11 ) }
    dend_47 { pt3dadd( 0.0370398, 50.065, -26.6673, 0.56 ) }
    dend_47 { pt3dadd( 0.559755, 52.7525, -27.9753, 0.56 ) }
    dend_47 { pt3dadd( 1.41235, 56.7356, -29.8527, 1.11 ) }
    dend_47 { pt3dadd( 2.12777, 60.3211, -31.26, 0.56 ) }
    dend_47 { pt3dadd( 3.25445, 64.7582, -32.7317, 0.56 ) }
    dend_47 { pt3dadd( 3.96214, 66.943, -33.4882, 0.28 ) }
    dend_47 { pt3dadd( 4.61846, 68.6475, -33.9722, 0.56 ) }
    dend_47 { pt3dadd( 5.69163, 71.3801, -34.5856, 0.28 ) }
    dend_47 { pt3dadd( 5.93951, 72.0112, -34.6654, 0.56 ) }
    dend_47 { pt3dadd( 6.52941, 73.5204, -34.8179, 0.28 ) }
    dend_47 { pt3dadd( 6.69262, 73.9322, -34.809, 0.56 ) }
    dend_47 { pt3dadd( 7.15096, 75.2704, -34.766, 0.28 ) }
    dend_47 { pt3dadd( 8.38969, 78.8827, -34.6975, 1.67 ) }
    dend_47 { pt3dadd( 9.70826, 82.9597, -34.6289, 0.28 ) }
    dend_47 { pt3dadd( 9.89515, 83.5561, -34.6753, 0.56 ) }
    dend_47 { pt3dadd( 10.6414, 85.8972, -35.0039, 0.28 ) }
    dend_47 { pt3dadd( 10.8143, 86.4744, -35.1371, 1.39 ) }
    dend_47 { pt3dadd( 11.924, 90.0405, -36.1921, 0.28 ) }
    dend_47 { pt3dadd( 12.3077, 91.2896, -36.663, 0.83 ) }
    dend_47 { pt3dadd( 13.6623, 95.3858, -38.1473, 0.28 ) }
    dend_47 { pt3dadd( 14.3368, 97.3478, -38.9882, 1.39 ) }
    dend_47 { pt3dadd( 15.8873, 101.778, -41.1543, 0.28 ) }
    dend_47 { pt3dadd( 16.2567, 102.87, -41.703, 0.83 ) }
    dend_47 { pt3dadd( 17.2554, 106.086, -43.3715, 0.28 ) }
    dend_47 { pt3dadd( 17.91, 108.288, -44.5977, 1.39 ) }
    dend_47 { pt3dadd( 19.0398, 112.409, -46.9536, 0.28 ) }
    dend_47 { pt3dadd( 19.063, 112.524, -47.0203, 0.56 ) }
    dend_47 { pt3dadd( 19.2795, 114.2, -47.8548, 0.28 ) }
    dend_47 { pt3dadd( 19.3124, 114.848, -48.1194, 0.56 ) }
    dend_47 { pt3dadd( 19.3565, 118.329, -49.2852, 0.28 ) }
    dend_47 { pt3dadd( 19.3415, 119.259, -49.5884, 0.83 ) }
    dend_47 { pt3dadd( 19.2488, 122.991, -50.6146, 0.28 ) }
    dend_47 { pt3dadd( 19.2073, 125.402, -51.2648, 1.11 ) }
    dend_47 { pt3dadd( 19.1709, 134.123, -53.567, 0.28 ) }
    dend_47 { pt3dadd( 19.1843, 135.937, -53.9884, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 25.542, 39.2136, 15.1712, 0.83 ) }
    dend_43 { pt3dadd( 25.0867, 41.5371, 15.6557, 0.83 ) }
    dend_43 { pt3dadd( 24.6711, 43.3773, 16.1896, 0.83 ) }
    dend_43 { pt3dadd( 24.2344, 44.9844, 16.6363, 0.83 ) }
    dend_43 { pt3dadd( 23.3384, 47.9513, 17.5209, 0.83 ) }
    dend_43 { pt3dadd( 22.793, 49.7684, 18.1701, 0.83 ) }
    dend_43 { pt3dadd( 21.5248, 53.9378, 19.6962, 0.83 ) }
    dend_43 { pt3dadd( 20.7135, 56.789, 20.7626, 0.83 ) }
    dend_43 { pt3dadd( 19.8972, 59.7131, 21.8496, 0.83 ) }
    dend_43 { pt3dadd( 19.4318, 61.3948, 22.4044, 0.83 ) }
    dend_43 { pt3dadd( 18.4813, 64.6664, 23.4291, 0.83 ) }
    dend_43 { pt3dadd( 18.0691, 66.3892, 23.9807, 0.83 ) }
    dend_43 { pt3dadd( 17.4856, 69.3816, 24.8428, 0.83 ) }
    dend_43 { pt3dadd( 17.1539, 70.9228, 25.2654, 1.94 ) }
    dend_43 { pt3dadd( 16.6102, 73.5145, 25.9571, 1.39 ) }
    dend_43 { pt3dadd( 15.5788, 78.2475, 27.0208, 0.83 ) }
    dend_43 { pt3dadd( 14.916, 81.2047, 27.5843, 0.83 ) }
    dend_43 { pt3dadd( 14.3315, 83.7936, 28.1286, 1.11 ) }
    dend_43 { pt3dadd( 13.3867, 87.7834, 28.9528, 0.83 ) }
    dend_43 { pt3dadd( 13.0279, 89.4309, 29.2465, 0.83 ) }
    dend_43 { pt3dadd( 12.8526, 90.5732, 29.3912, 1.11 ) }
    dend_43 { pt3dadd( 12.6183, 92.985, 29.4571, 0.83 ) }
    dend_43 { pt3dadd( 12.5291, 94.1948, 29.4457, 0.56 ) }
    dend_43 { pt3dadd( 12.4652, 96.1406, 29.4237, 1.39 ) }
    dend_43 { pt3dadd( 12.4336, 99.2881, 29.373, 0.83 ) }
    dend_43 { pt3dadd( 12.3583, 102.215, 29.3465, 1.67 ) }
    dend_43 { pt3dadd( 12.2115, 105.361, 29.3217, 0.83 ) }
    dend_43 { pt3dadd( 12.1374, 106.565, 29.2765, 0.28 ) }
    dend_43 { pt3dadd( 12.0693, 107.63, 29.1888, 0.83 ) }
    dend_43 { pt3dadd( 11.9485, 109.084, 29.0418, 0.28 ) }
    dend_43 { pt3dadd( 11.856, 109.83, 28.9165, 0.83 ) }
    dend_43 { pt3dadd( 11.6057, 111.258, 28.7064, 0.28 ) }
    dend_43 { pt3dadd( 11.251, 113.11, 28.5021, 1.67 ) }
    dend_43 { pt3dadd( 10.7982, 115.288, 28.3749, 0.28 ) }
    dend_43 { pt3dadd( 10.6071, 116.156, 28.3655, 1.39 ) }
    dend_43 { pt3dadd( 10.0109, 118.538, 28.3503, 0.83 ) }
    dend_43 { pt3dadd( 9.2722, 121.248, 28.2347, 0.28 ) }
    dend_43 { pt3dadd( 9.01162, 122.102, 28.1864, 1.67 ) }
    dend_43 { pt3dadd( 8.4869, 123.642, 28.1174, 2.5 ) }
    dend_43 { pt3dadd( 8.03735, 124.869, 28.0415, 1.39 ) }
    dend_43 { pt3dadd( 7.31706, 126.828, 27.8219, 0.56 ) }
    dend_43 { pt3dadd( 6.65554, 128.602, 27.5354, 1.11 ) }
    dend_43 { pt3dadd( 6.03738, 130.284, 26.972, 0.28 ) }
    dend_43 { pt3dadd( 5.54031, 131.611, 26.4474, 1.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 25.542, 39.2136, 15.1712, 0.56 ) }
    dend_42 { pt3dadd( 25.841, 39.8739, 15.6836, 0.56 ) }
    dend_42 { pt3dadd( 26.0775, 40.5476, 16.0887, 0.56 ) }
    dend_42 { pt3dadd( 26.6239, 43.0223, 17.4538, 0.56 ) }
    dend_42 { pt3dadd( 26.9271, 44.9134, 18.4601, 0.83 ) }
    dend_42 { pt3dadd( 27.031, 45.5548, 18.7924, 0.83 ) }
    dend_42 { pt3dadd( 27.2759, 46.9036, 19.4662, 0.83 ) }
    dend_42 { pt3dadd( 27.5121, 48.6169, 20.1843, 0.56 ) }
    dend_42 { pt3dadd( 27.8096, 50.7232, 20.9082, 0.56 ) }
    dend_42 { pt3dadd( 27.8898, 51.1146, 20.994, 0.56 ) }
    dend_42 { pt3dadd( 28.1797, 52.0805, 21.1582, 0.56 ) }
    dend_42 { pt3dadd( 28.4287, 52.8456, 21.2707, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_42 { pt3dadd( 29.0731, 54.5572, 21.5575, 0.83 ) }
    dend_42 { pt3dadd( 29.579, 55.9153, 21.8784, 0.56 ) }
    dend_42 { pt3dadd( 29.8243, 57.0062, 22.1499, 0.56 ) }
    dend_42 { pt3dadd( 29.8099, 57.3584, 22.2624, 0.83 ) }
    dend_42 { pt3dadd( 29.468, 58.5798, 22.734, 0.56 ) }
    dend_42 { pt3dadd( 28.8231, 59.9831, 23.3133, 1.67 ) }
    dend_42 { pt3dadd( 28.1375, 61.0132, 23.7742, 1.11 ) }
    dend_42 { pt3dadd( 26.9675, 62.3451, 24.2735, 0.83 ) }
    dend_42 { pt3dadd( 26.2194, 63.0314, 24.5763, 0.83 ) }
    dend_42 { pt3dadd( 25.264, 63.7468, 24.9568, 0.28 ) }
    dend_42 { pt3dadd( 24.653, 64.0641, 25.204, 0.56 ) }
    dend_42 { pt3dadd( 24.0027, 64.2549, 25.3806, 0.83 ) }
    dend_42 { pt3dadd( 22.6683, 64.3614, 25.5559, 0.56 ) }
    dend_42 { pt3dadd( 20.5364, 64.203, 25.8068, 0.83 ) }
    dend_42 { pt3dadd( 19.3341, 64.068, 25.9766, 0.28 ) }
    dend_42 { pt3dadd( 18.3212, 63.9775, 26.1154, 0.28 ) }
    dend_42 { pt3dadd( 16.9108, 63.8589, 26.3402, 0.83 ) }
    dend_42 { pt3dadd( 15.1918, 63.7478, 26.5993, 0.28 ) }
    dend_42 { pt3dadd( 13.0193, 63.6691, 26.869, 0.83 ) }
    dend_42 { pt3dadd( 10.7546, 63.7298, 26.876, 0.28 ) }
    dend_42 { pt3dadd( 9.67736, 63.849, 26.897, 1.11 ) }
    dend_42 { pt3dadd( 7.82601, 69.0386, 29.0713, 1.11 ) }
    dend_42 { pt3dadd( 5.20506, 73.5922, 31.9381, 1.11 ) }
    dend_42 { pt3dadd( 2.87977, 78.4595, 34.4669, 1.11 ) }
    dend_42 { pt3dadd( 0.285564, 83.1562, 37.0932, 1.11 ) }
    dend_42 { pt3dadd( -1.97773, 87.6291, 40.3693, 1.11 ) }
    dend_42 { pt3dadd( -5.14229, 91.5691, 43.6597, 1.11 ) }
    dend_42 { pt3dadd( -9.13073, 95.1922, 46.414, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 28/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 31.4175, 39.9922, 31.5158, 0.56 ) }
    dend_37 { pt3dadd( 33.1378, 42.2711, 31.9419, 0.56 ) }
    dend_37 { pt3dadd( 34.0274, 43.4209, 32.2541, 0.83 ) }
    dend_37 { pt3dadd( 37.0049, 47.173, 33.5167, 0.56 ) }
    dend_37 { pt3dadd( 40.2379, 51.0523, 35.0045, 0.56 ) }
    dend_37 { pt3dadd( 44.1939, 55.3868, 36.7549, 0.56 ) }
    dend_37 { pt3dadd( 46.9303, 58.3902, 38.0787, 0.56 ) }
    dend_37 { pt3dadd( 47.4233, 58.9269, 38.3584, 0.56 ) }
    dend_37 { pt3dadd( 49.3827, 60.9471, 39.406, 0.28 ) }
    dend_37 { pt3dadd( 50.0923, 61.595, 39.7986, 0.83 ) }
    dend_37 { pt3dadd( 52.1075, 62.9019, 40.8904, 0.56 ) }
    dend_37 { pt3dadd( 55.3061, 64.4643, 42.1441, 0.28 ) }
    dend_37 { pt3dadd( 56.7926, 65.139, 42.5099, 0.83 ) }
    dend_37 { pt3dadd( 58.6161, 65.9024, 42.9297, 0.56 ) }
    dend_37 { pt3dadd( 62.3346, 67.1679, 43.6056, 1.11 ) }
    dend_37 { pt3dadd( 66.6991, 68.6235, 44.3468, 0.56 ) }
    dend_37 { pt3dadd( 75.8738, 76.6131, 48.2402, 0.56 ) }
    dend_37 { pt3dadd( 85.9496, 84.1805, 50.3699, 0.56 ) }
    dend_37 { pt3dadd( 97.4472, 89.1347, 53.636, 0.56 ) }
    dend_37 { pt3dadd( 109.158, 92.6633, 58.0765, 0.56 ) }
    dend_37 { pt3dadd( 121.602, 95.2691, 60.9621, 0.56 ) }
    dend_37 { pt3dadd( 134.08, 96.3912, 64.7391, 0.56 ) }
    dend_37 { pt3dadd( 146.638, 95.9071, 68.4942, 0.56 ) }
    dend_37 { pt3dadd( 158.89, 95.689, 73.1659, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 52/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 31.4175, 39.9922, 31.5158, 0.56 ) }
    dend_36 { pt3dadd( 32.6126, 40.1929, 31.7476, 0.56 ) }
    dend_36 { pt3dadd( 34.1917, 40.4581, 32.054, 0.56 ) }
    dend_36 { pt3dadd( 35.2661, 40.6385, 32.2625, 0.83 ) }
    dend_36 { pt3dadd( 38.6483, 41.2066, 32.9187, 0.56 ) }
    dend_36 { pt3dadd( 42.9807, 41.9342, 33.7593, 0.28 ) }
    dend_36 { pt3dadd( 52.539, 44.3121, 34.7986, 0.28 ) }
    dend_36 { pt3dadd( 62.0038, 46.8807, 36.1366, 0.28 ) }
    dend_36 { pt3dadd( 71.8766, 47.9335, 36.5395, 0.28 ) }
    dend_36 { pt3dadd( 81.7314, 47.3591, 35.2811, 0.28 ) }
    dend_36 { pt3dadd( 91.6372, 47.0666, 34.3796, 0.28 ) }
    dend_36 { pt3dadd( 101.401, 47.8463, 32.6742, 0.28 ) }
    dend_36 { pt3dadd( 110.27, 50.4576, 29.1358, 0.28 ) }
    dend_36 { pt3dadd( 119.163, 52.1537, 25.0657, 0.28 ) }
    dend_36 { pt3dadd( 128.364, 54.5076, 22.2442, 0.28 ) }
    dend_36 { pt3dadd( 136.967, 57.9166, 18.8108, 0.28 ) }
    dend_36 { pt3dadd( 145.732, 62.1156, 17.322, 0.28 ) }
    dend_36 { pt3dadd( 154.508, 65.9915, 15.0989, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 70/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 67.1719, 37.3587, 20.6243, 0.83 ) }
    dend_30 { pt3dadd( 69.5135, 38.5057, 21.0275, 0.83 ) }
    dend_30 { pt3dadd( 72.2311, 39.9388, 21.4568, 0.83 ) }
    dend_30 { pt3dadd( 75.2951, 41.4781, 21.8056, 0.83 ) }
    dend_30 { pt3dadd( 79.3452, 43.3211, 22.3706, 0.83 ) }
    dend_30 { pt3dadd( 81.0677, 43.9973, 22.7021, 0.83 ) }
    dend_30 { pt3dadd( 86.0991, 45.7967, 23.7929, 0.83 ) }
    dend_30 { pt3dadd( 90.0436, 47.1617, 24.7362, 0.83 ) }
    dend_30 { pt3dadd( 92.7684, 48.0838, 25.4101, 0.83 ) }
    dend_30 { pt3dadd( 96.0984, 49.1896, 26.2108, 1.39 ) }
    dend_30 { pt3dadd( 100.889, 50.4908, 27.2517, 0.83 ) }
    dend_30 { pt3dadd( 103.45, 51.0331, 27.7672, 0.83 ) }
    dend_30 { pt3dadd( 106.239, 51.4878, 28.2717, 1.11 ) }
    dend_30 { pt3dadd( 108.767, 51.8594, 28.6885, 0.83 ) }
    dend_30 { pt3dadd( 111.662, 52.3118, 29.0693, 0.83 ) }
    dend_30 { pt3dadd( 113.768, 52.6634, 29.1543, 0.83 ) }
    dend_30 { pt3dadd( 116.197, 53.0379, 29.1226, 0.83 ) }
    dend_30 { pt3dadd( 117.653, 53.262, 28.9905, 0.83 ) }
    dend_30 { pt3dadd( 119.218, 53.4921, 28.751, 1.39 ) }
    dend_30 { pt3dadd( 120.01, 53.6501, 28.5734, 1.39 ) }
    dend_30 { pt3dadd( 122.798, 54.4145, 27.7323, 0.56 ) }
    dend_30 { pt3dadd( 125.45, 55.3489, 26.6349, 1.67 ) }
    dend_30 { pt3dadd( 129.79, 57.0991, 24.5235, 0.56 ) }
    dend_30 { pt3dadd( 130.456, 57.3817, 24.1557, 0.83 ) }
    dend_30 { pt3dadd( 132.555, 58.2688, 22.9082, 0.28 ) }
    dend_30 { pt3dadd( 133.468, 58.6242, 22.4058, 0.56 ) }
    dend_30 { pt3dadd( 136.809, 59.6228, 20.7364, 0.28 ) }
    dend_30 { pt3dadd( 138.14, 59.963, 20.1218, 0.56 ) }
    dend_30 { pt3dadd( 141.132, 60.549, 19.0854, 0.28 ) }
    dend_30 { pt3dadd( 142.107, 60.7253, 18.7589, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( 145.495, 61.1549, 17.756, 0.28 ) }
    dend_30 { pt3dadd( 148.051, 61.4005, 17.1462, 1.11 ) }
    dend_30 { pt3dadd( 160.821, 63.8161, 14.7718, 1.11 ) }
    dend_30 { pt3dadd( 174.011, 64.2937, 13.8521, 1.11 ) }
    dend_30 { pt3dadd( 187.083, 62.4904, 13.1319, 1.11 ) }
    dend_30 { pt3dadd( 200.293, 61.9256, 13.5943, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 6/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 67.1719, 37.3587, 20.6243, 0.56 ) }
    dend_29 { pt3dadd( 69.3868, 38.9392, 21.9277, 0.56 ) }
    dend_29 { pt3dadd( 70.3786, 39.6595, 22.612, 0.56 ) }
    dend_29 { pt3dadd( 71.9146, 40.7111, 23.6926, 0.56 ) }
    dend_29 { pt3dadd( 75.9696, 43.392, 26.4965, 0.56 ) }
    dend_29 { pt3dadd( 76.6251, 43.8195, 26.9365, 0.56 ) }
    dend_29 { pt3dadd( 81.2204, 46.6492, 29.8405, 0.56 ) }
    dend_29 { pt3dadd( 82.952, 47.613, 30.8509, 0.28 ) }
    dend_29 { pt3dadd( 84.1851, 48.2645, 31.4874, 0.56 ) }
    dend_29 { pt3dadd( 85.2581, 48.7913, 31.9031, 0.28 ) }
    dend_29 { pt3dadd( 86.5089, 49.4027, 32.176, 0.56 ) }
    dend_29 { pt3dadd( 89.6223, 51.0157, 32.4572, 0.28 ) }
    dend_29 { pt3dadd( 92.7098, 52.6087, 32.2809, 0.28 ) }
    dend_29 { pt3dadd( 93.91, 53.357, 32.0527, 0.56 ) }
    dend_29 { pt3dadd( 96.6267, 55.3548, 31.5489, 0.28 ) }
    dend_29 { pt3dadd( 97.4361, 55.9803, 31.3755, 0.56 ) }
    dend_29 { pt3dadd( 99.8006, 57.9572, 30.7615, 0.28 ) }
    dend_29 { pt3dadd( 100.187, 58.3355, 30.6302, 0.56 ) }
    dend_29 { pt3dadd( 104.188, 62.8007, 29.1705, 0.28 ) }
    dend_29 { pt3dadd( 106.569, 65.7356, 28.2728, 1.94 ) }
    dend_29 { pt3dadd( 114.823, 71.1333, 30.6572, 1.94 ) }
    dend_29 { pt3dadd( 124.154, 75.1586, 31.6398, 1.94 ) }
    dend_29 { pt3dadd( 132.907, 80.1927, 32.7799, 1.94 ) }
    dend_29 { pt3dadd( 141.167, 85.1088, 36.1209, 1.94 ) }
    dend_29 { pt3dadd( 149.633, 88.0714, 41.102, 1.94 ) }
    dend_29 { pt3dadd( 159.472, 88.9349, 44.0083, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 32/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 67.477, 33.5714, 32.1367, 0.56 ) }
    dend_27 { pt3dadd( 70.3603, 33.834, 33.654, 0.56 ) }
    dend_27 { pt3dadd( 72.7775, 34.0541, 34.926, 0.56 ) }
    dend_27 { pt3dadd( 74.4451, 34.206, 35.8035, 0.56 ) }
    dend_27 { pt3dadd( 77.2457, 34.461, 37.2773, 0.56 ) }
    dend_27 { pt3dadd( 80.3391, 34.7427, 38.9052, 0.83 ) }
    dend_27 { pt3dadd( 88.8521, 36.9834, 42.8152, 0.83 ) }
    dend_27 { pt3dadd( 97.3115, 40.4298, 45.7178, 0.83 ) }
    dend_27 { pt3dadd( 105.596, 44.6575, 47.841, 0.83 ) }
    dend_27 { pt3dadd( 114.173, 48.7504, 48.1003, 0.83 ) }
    dend_27 { pt3dadd( 122.853, 52.5917, 48.9722, 0.83 ) }
    dend_27 { pt3dadd( 131.117, 57.2018, 48.6456, 0.83 ) }
    dend_27 { pt3dadd( 139.599, 61.3156, 47.6417, 0.83 ) }
    dend_27 { pt3dadd( 148.208, 65.3188, 48.3414, 0.83 ) }
    dend_27 { pt3dadd( 156.14, 70.3437, 49.689, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 67.477, 33.5714, 32.1367, 0.83 ) }
    dend_26 { pt3dadd( 67.1217, 32.7903, 32.4081, 0.83 ) }
    dend_26 { pt3dadd( 66.6534, 31.7608, 32.7658, 0.83 ) }
    dend_26 { pt3dadd( 65.2568, 26.2207, 34.5794, 0.83 ) }
    dend_26 { pt3dadd( 63.7032, 20.5317, 35.6417, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -40.6672, -264.528, -19.7429, 0.56 ) }
    dend_8 { pt3dadd( -41.301, -268.387, -19.0692, 0.56 ) }
    dend_8 { pt3dadd( -41.4934, -270.141, -18.9021, 0.83 ) }
    dend_8 { pt3dadd( -42.1554, -275.708, -18.3001, 0.56 ) }
    dend_8 { pt3dadd( -42.7409, -279.872, -17.9896, 0.83 ) }
    dend_8 { pt3dadd( -43.2222, -282.867, -17.8208, 1.94 ) }
    dend_8 { pt3dadd( -43.6967, -285.792, -17.6986, 2.22 ) }
    dend_8 { pt3dadd( -44.2295, -290.237, -17.5386, 0.83 ) }
    dend_8 { pt3dadd( -44.5513, -294.34, -17.2884, 0.83 ) }
    dend_8 { pt3dadd( -44.6486, -297.579, -17.0626, 0.83 ) }
    dend_8 { pt3dadd( -44.6704, -299.036, -16.8051, 0.56 ) }
    dend_8 { pt3dadd( -44.6879, -300.829, -16.2948, 0.56 ) }
    dend_8 { pt3dadd( -44.6587, -303.793, -15.1828, 1.11 ) }
    dend_8 { pt3dadd( -44.359, -307.511, -13.3002, 0.56 ) }
    dend_8 { pt3dadd( -44.1095, -308.649, -12.6468, 0.56 ) }
    dend_8 { pt3dadd( -43.3974, -311.059, -10.8997, 0.56 ) }
    dend_8 { pt3dadd( -42.8229, -312.928, -9.4601, 1.39 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 69/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -40.6672, -264.528, -19.7429, 0.56 ) }
    dend_7 { pt3dadd( -39.3602, -266.725, -22.0281, 0.56 ) }
    dend_7 { pt3dadd( -38.3238, -269.165, -24.7702, 0.56 ) }
    dend_7 { pt3dadd( -37.8666, -270.516, -26.2504, 0.56 ) }
    dend_7 { pt3dadd( -37.5681, -271.494, -27.266, 0.28 ) }
    dend_7 { pt3dadd( -37.3415, -272.292, -28.0974, 0.28 ) }
    dend_7 { pt3dadd( -37.0613, -273.491, -29.3502, 1.11 ) }
    dend_7 { pt3dadd( -36.9049, -275.048, -30.9678, 0.28 ) }
    dend_7 { pt3dadd( -36.884, -275.997, -31.9699, 0.28 ) }
    dend_7 { pt3dadd( -36.8054, -276.683, -32.8083, 2.22 ) }
    dend_7 { pt3dadd( -36.439, -278.113, -35.0829, 0.28 ) }
    dend_7 { pt3dadd( -36.1954, -278.639, -36.4162, 0.28 ) }
    dend_7 { pt3dadd( -35.9946, -278.817, -37.2441, 0.28 ) }
    dend_7 { pt3dadd( -35.5409, -278.836, -38.6936, 0.83 ) }
    dend_7 { pt3dadd( -34.3122, -278.226, -42.8704, 0.28 ) }
    dend_7 { pt3dadd( -33.99, -277.961, -43.976, 1.67 ) }
    dend_7 { pt3dadd( -33.4656, -277.411, -45.6298, 0.28 ) }
    dend_7 { pt3dadd( -33.2726, -277.193, -46.2203, 0.83 ) }
    dend_7 { pt3dadd( -32.7219, -276.523, -47.9622, 0.28 ) }
    dend_7 { pt3dadd( -32.2552, -275.964, -49.4407, 1.67 ) }
    dend_7 { pt3dadd( -31.5224, -275.134, -51.5377, 0.56 ) }
    dend_7 { pt3dadd( -30.9028, -274.439, -53.3386, 0.28 ) }
    dend_7 { pt3dadd( -30.8326, -274.361, -53.5464, 0.83 ) }
    dend_7 { pt3dadd( -29.6895, -273.017, -57.122, 0.28 ) }
    dend_7 { pt3dadd( -29.1706, -272.424, -58.6945, 1.11 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 94/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -8.00679, 89.2268, -23.7696, 0.56 ) }
    dend_52 { pt3dadd( -10.2979, 92.316, -18.2107, 0.56 ) }
    dend_52 { pt3dadd( -11.1374, 93.6363, -16.3981, 1.39 ) }
    dend_52 { pt3dadd( -13.7835, 98.8976, -10.9143, 0.56 ) }
    dend_52 { pt3dadd( -14.4037, 100.478, -9.61504, 0.28 ) }
    dend_52 { pt3dadd( -15.0936, 103.172, -7.72959, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_52 { pt3dadd( -15.9002, 107.17, -5.13748, 0.56 ) }
    dend_52 { pt3dadd( -16.2816, 110.614, -3.30987, 1.11 ) }
    dend_52 { pt3dadd( -16.5838, 114.849, -1.42547, 0.28 ) }
    dend_52 { pt3dadd( -16.8078, 118.327, -0.158359, 1.67 ) }
    dend_52 { pt3dadd( -16.9704, 125.23, 2.49281, 0.28 ) }
    dend_52 { pt3dadd( -16.971, 126.102, 2.83282, 0.28 ) }
    dend_52 { pt3dadd( -16.9484, 128.671, 4.0094, 0.83 ) }
    dend_52 { pt3dadd( -17.0499, 131.43, 5.53693, 0.28 ) }
    dend_52 { pt3dadd( -17.2575, 132.814, 6.45078, 0.28 ) }
    dend_52 { pt3dadd( -17.7832, 134.73, 7.94723, 0.83 ) }
    dend_52 { pt3dadd( -19.0387, 137.365, 10.1677, 0.28 ) }
    dend_52 { pt3dadd( -20.3754, 139.977, 12.8111, 1.11 ) }
    dend_52 { pt3dadd( -21.6752, 141.242, 14.7882, 0.56 ) }
    dend_52 { pt3dadd( -22.8548, 141.87, 16.3894, 0.28 ) }
    dend_52 { pt3dadd( -24.2953, 142.475, 18.2845, 0.28 ) }
    dend_52 { pt3dadd( -26.157, 143.015, 20.5968, 0.28 ) }
    dend_52 { pt3dadd( -28.8916, 143.406, 23.9954, 0.56 ) }
    dend_52 { pt3dadd( -35.5307, 143.675, 31.3772, 0.28 ) }
    dend_52 { pt3dadd( -37.1106, 143.607, 33.1676, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 19/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -8.00679, 89.2268, -23.7696, 0.83 ) }
    dend_49 { pt3dadd( -7.61618, 91.1216, -23.6469, 0.83 ) }
    dend_49 { pt3dadd( -7.12169, 93.4708, -23.8092, 0.83 ) }
    dend_49 { pt3dadd( -6.14957, 98.1606, -24.3958, 0.56 ) }
    dend_49 { pt3dadd( -5.32489, 102.662, -25.2751, 0.56 ) }
    dend_49 { pt3dadd( -4.92684, 104.981, -25.821, 0.28 ) }
    dend_49 { pt3dadd( -4.51848, 107.49, -26.4526, 1.67 ) }
    dend_49 { pt3dadd( -3.49999, 113.647, -28.4793, 0.28 ) }
    dend_49 { pt3dadd( -3.40746, 114.206, -28.7016, 0.56 ) }
    dend_49 { pt3dadd( -3.04759, 116.777, -29.8821, 0.28 ) }
    dend_49 { pt3dadd( -3.01379, 117.325, -30.116, 0.83 ) }
    dend_49 { pt3dadd( -2.94744, 118.886, -30.6256, 0.28 ) }
    dend_49 { pt3dadd( -2.94531, 120.033, -31.0212, 0.83 ) }
    dend_49 { pt3dadd( -3.01328, 122.851, -31.7955, 0.28 ) }
    dend_49 { pt3dadd( -3.18382, 125.127, -32.5452, 1.94 ) }
    dend_49 { pt3dadd( -3.58036, 128.753, -33.7805, 0.28 ) }
    dend_49 { pt3dadd( -3.9888, 130.591, -34.5914, 0.83 ) }
    dend_49 { pt3dadd( -5.11254, 134.518, -36.5529, 0.28 ) }
    dend_49 { pt3dadd( -5.39795, 135.315, -37.0477, 0.83 ) }
    dend_49 { pt3dadd( -6.7319, 138.501, -39.353, 0.28 ) }
    dend_49 { pt3dadd( -7.19884, 139.602, -40.2072, 1.11 ) }
    dend_49 { pt3dadd( -9.39245, 145.165, -44.3609, 0.28 ) }
    dend_49 { pt3dadd( -9.95206, 146.664, -45.4508, 1.39 ) }
    dend_49 { pt3dadd( -11.7648, 152.467, -49.1006, 0.28 ) }
    dend_49 { pt3dadd( -11.8815, 152.927, -49.3613, 0.56 ) }
    dend_49 { pt3dadd( -12.5429, 156.76, -51.1678, 0.28 ) }
    dend_49 { pt3dadd( -12.9053, 160.089, -52.5334, 1.39 ) }
    dend_49 { pt3dadd( -12.901, 162.954, -53.221, 1.11 ) }
    dend_49 { pt3dadd( -12.7934, 166.196, -53.6432, 0.28 ) }
    dend_49 { pt3dadd( -12.7524, 166.989, -53.6583, 0.56 ) }
    dend_49 { pt3dadd( -12.695, 170.697, -53.7853, 0.28 ) }
    dend_49 { pt3dadd( -12.6935, 171.539, -53.8086, 0.83 ) }
    dend_49 { pt3dadd( -12.7994, 176.151, -54.1077, 0.28 ) }
    dend_49 { pt3dadd( -12.8154, 177.295, -54.1351, 1.39 ) }
    dend_49 { pt3dadd( -12.9599, 181.095, -54.3132, 0.28 ) }
    dend_49 { pt3dadd( -13.0585, 182.803, -54.3787, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 55/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.54031, 131.611, 26.4474, 1.94 ) }
    dend_45 { pt3dadd( 4.96265, 133.25, 27.71, 1.94 ) }
    dend_45 { pt3dadd( 4.30051, 135.297, 29.3055, 0.28 ) }
    dend_45 { pt3dadd( 4.06962, 136.19, 29.7411, 0.83 ) }
    dend_45 { pt3dadd( 3.28187, 140.109, 31.2049, 0.28 ) }
    dend_45 { pt3dadd( 3.13695, 141.054, 31.3613, 1.11 ) }
    dend_45 { pt3dadd( 2.90452, 142.788, 31.464, 0.28 ) }
    dend_45 { pt3dadd( 2.79694, 144.005, 31.5073, 1.67 ) }
    dend_45 { pt3dadd( 2.47445, 148.009, 31.4738, 0.28 ) }
    dend_45 { pt3dadd( 2.4256, 148.955, 31.2997, 0.83 ) }
    dend_45 { pt3dadd( 2.30478, 152.431, 29.9363, 0.28 ) }
    dend_45 { pt3dadd( 2.31171, 152.97, 29.6834, 0.56 ) }
    dend_45 { pt3dadd( 0.992622, 162.541, 29.9735, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 68/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 5.54031, 131.611, 26.4474, 0.28 ) }
    dend_44 { pt3dadd( 6.9637, 136.363, 28.2501, 0.28 ) }
    dend_44 { pt3dadd( 7.15664, 137.007, 28.4944, 0.83 ) }
    dend_44 { pt3dadd( 8.68887, 142.123, 30.4349, 0.28 ) }
    dend_44 { pt3dadd( 8.78442, 142.442, 30.5559, 0.56 ) }
    dend_44 { pt3dadd( 9.74623, 145.653, 31.774, 0.28 ) }
    dend_44 { pt3dadd( 10.8214, 149.243, 33.1357, 1.11 ) }
    dend_44 { pt3dadd( 12.7185, 160.387, 39.5156, 1.11 ) }
    dend_44 { pt3dadd( 12.1577, 170.134, 48.3061, 1.11 ) }
    dend_44 { pt3dadd( 11.9408, 180.271, 56.6037, 1.11 ) }
    dend_44 { pt3dadd( 12.4755, 190.388, 64.8987, 1.11 ) }
    dend_44 { pt3dadd( 12.1633, 201.024, 72.4712, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 158.89, 95.689, 73.1659, 0.28 ) }
    dend_39 { pt3dadd( 168.609, 99.8734, 76.4689, 0.28 ) }
    dend_39 { pt3dadd( 179.015, 103.264, 78.416, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 158.89, 95.689, 73.1659, 0.28 ) }
    dend_38 { pt3dadd( 167.628, 99.7708, 75.5938, 0.28 ) }
    dend_38 { pt3dadd( 177.028, 102.357, 77.8854, 0.28 ) }
    dend_38 { pt3dadd( 186.583, 103.536, 80.8165, 0.28 ) }
    dend_38 { pt3dadd( 195.902, 104.063, 84.6295, 0.28 ) }
    dend_38 { pt3dadd( 205.254, 102.691, 88.1926, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -42.8229, -312.928, -9.4601, 0.56 ) }
    dend_16 { pt3dadd( -43.8658, -312.576, -9.151, 0.56 ) }
    dend_16 { pt3dadd( -45.3434, -312.077, -8.7131, 1.11 ) }
    dend_16 { pt3dadd( -46.6363, -311.641, -8.32991, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -42.8229, -312.928, -9.4601, 1.39 ) }
    dend_9 { pt3dadd( -42.8815, -313.716, -8.56541, 1.39 ) }
    dend_9 { pt3dadd( -43.0451, -315.917, -6.06526, 1.39 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 96/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -13.0585, 182.803, -54.3787, 0.28 ) }
    dend_51 { pt3dadd( -13.0203, 187.314, -52.338, 0.28 ) }
    dend_51 { pt3dadd( -13.0178, 187.62, -52.1994, 0.56 ) }
    dend_51 { pt3dadd( -12.9941, 190.416, -50.9347, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( -12.986, 191.366, -50.505, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.0585, 182.803, -54.3787, 0.28 ) }
    dend_50 { pt3dadd( -14.691, 182.735, -55.2876, 0.28 ) }
    dend_50 { pt3dadd( -15.027, 182.722, -55.4746, 0.56 ) }
    dend_50 { pt3dadd( -17.2362, 182.631, -56.7045, 0.28 ) }
    dend_50 { pt3dadd( -18.8119, 182.566, -57.5818, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -43.0451, -315.917, -6.06526, 0.56 ) }
    dend_13 { pt3dadd( -44.8282, -319.775, -2.99709, 0.56 ) }
    dend_13 { pt3dadd( -46.4585, -322.316, -1.15015, 0.56 ) }
    dend_13 { pt3dadd( -48.6377, -325.221, 0.565215, 0.56 ) }
    dend_13 { pt3dadd( -50.0051, -326.985, 1.43079, 0.56 ) }
    dend_13 { pt3dadd( -51.9536, -329.559, 2.80018, 0.56 ) }
    dend_13 { pt3dadd( -54.4608, -333.292, 4.89075, 0.56 ) }
    dend_13 { pt3dadd( -56.1453, -335.741, 6.27199, 0.56 ) }
    dend_13 { pt3dadd( -57.8079, -338.559, 7.97703, 0.56 ) }
    dend_13 { pt3dadd( -58.414, -340.004, 8.77414, 0.56 ) }
    dend_13 { pt3dadd( -59.9134, -344.719, 11.4312, 0.56 ) }
    dend_13 { pt3dadd( -60.5315, -347.649, 13.1552, 0.56 ) }
    dend_13 { pt3dadd( -60.6485, -350.55, 15.0737, 0.56 ) }
    dend_13 { pt3dadd( -60.5266, -353.403, 17.1934, 0.83 ) }
    dend_13 { pt3dadd( -60.2582, -355.719, 19.1351, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 21/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -43.0451, -315.917, -6.06526, 0.56 ) }
    dend_10 { pt3dadd( -41.5623, -320.702, -6.50619, 0.56 ) }
    dend_10 { pt3dadd( -39.2987, -328.019, -7.62499, 0.56 ) }
    dend_10 { pt3dadd( -38.5482, -330.643, -8.09683, 0.56 ) }
    dend_10 { pt3dadd( -38.105, -332.445, -8.4381, 0.56 ) }
    dend_10 { pt3dadd( -37.2943, -336.05, -9.13521, 0.83 ) }
    dend_10 { pt3dadd( -36.4619, -340.164, -10.0584, 0.56 ) }
    dend_10 { pt3dadd( -36.09, -343.097, -10.8717, 0.56 ) }
    dend_10 { pt3dadd( -35.9948, -344.89, -11.4611, 1.11 ) }
    dend_10 { pt3dadd( -36.0237, -346.77, -12.0961, 0.28 ) }
    dend_10 { pt3dadd( -36.1707, -349.279, -12.9974, 0.28 ) }
    dend_10 { pt3dadd( -36.4213, -351.709, -13.9448, 1.67 ) }
    dend_10 { pt3dadd( -36.8399, -353.796, -14.7326, 2.5 ) }
    dend_10 { pt3dadd( -37.8705, -359.434, -16.4884, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -60.2582, -355.719, 19.1351, 0.56 ) }
    dend_15 { pt3dadd( -62.6447, -358.841, 20.3134, 0.56 ) }
    dend_15 { pt3dadd( -64.1691, -361.187, 21.2695, 0.56 ) }
    dend_15 { pt3dadd( -64.5349, -361.839, 21.4616, 0.56 ) }
    dend_15 { pt3dadd( -65.9602, -364.58, 22.0316, 0.56 ) }
    dend_15 { pt3dadd( -66.8593, -366.536, 22.3353, 0.56 ) }
    dend_15 { pt3dadd( -67.4612, -367.846, 22.5387, 0.56 ) }
    dend_15 { pt3dadd( -68.1334, -369.852, 22.8089, 0.56 ) }
    dend_15 { pt3dadd( -69.0899, -373.111, 23.1004, 0.56 ) }
    dend_15 { pt3dadd( -69.8044, -375.641, 23.1571, 0.56 ) }
    dend_15 { pt3dadd( -70.2061, -377.207, 22.9665, 0.56 ) }
    dend_15 { pt3dadd( -72.3701, -385.624, 23.4481, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -60.2582, -355.719, 19.1351, 0.28 ) }
    dend_14 { pt3dadd( -61.071, -357.488, 19.014, 0.28 ) }
    dend_14 { pt3dadd( -61.8089, -359.015, 18.7915, 0.28 ) }
    dend_14 { pt3dadd( -62.9993, -361.167, 18.4527, 0.28 ) }
    dend_14 { pt3dadd( -63.712, -362.359, 18.271, 0.28 ) }
    dend_14 { pt3dadd( -64.6315, -363.652, 18.1055, 0.28 ) }
    dend_14 { pt3dadd( -66.8177, -366.332, 17.7846, 0.28 ) }
    dend_14 { pt3dadd( -67.5241, -367.018, 17.6379, 0.28 ) }
    dend_14 { pt3dadd( -68.763, -368.151, 17.3169, 0.28 ) }
    dend_14 { pt3dadd( -69.6309, -368.943, 17.063, 0.28 ) }
    dend_14 { pt3dadd( -71.6027, -370.691, 16.4645, 0.56 ) }
    dend_14 { pt3dadd( -72.7953, -371.72, 16.1318, 0.56 ) }
    dend_14 { pt3dadd( -75.3706, -373.984, 15.5763, 0.28 ) }
    dend_14 { pt3dadd( -77.3023, -375.733, 15.0421, 0.28 ) }
    dend_14 { pt3dadd( -78.2688, -376.741, 14.6501, 0.83 ) }
    dend_14 { pt3dadd( -82.5816, -384.071, 13.65, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 63/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -37.8705, -359.434, -16.4884, 0.28 ) }
    dend_12 { pt3dadd( -37.5377, -362.107, -15.7811, 0.28 ) }
    dend_12 { pt3dadd( -37.467, -362.9, -15.6078, 0.56 ) }
    dend_12 { pt3dadd( -37.4172, -364.042, -15.5609, 0.28 ) }
    dend_12 { pt3dadd( -37.3219, -365.764, -15.6267, 0.28 ) }
    dend_12 { pt3dadd( -37.2062, -367.099, -15.7845, 0.56 ) }
    dend_12 { pt3dadd( -36.866, -370.041, -16.2306, 0.28 ) }
    dend_12 { pt3dadd( -36.596, -371.873, -16.7106, 0.83 ) }
    dend_12 { pt3dadd( -36.1145, -375.018, -17.6081, 0.28 ) }
    dend_12 { pt3dadd( -35.9397, -376.107, -17.9526, 0.56 ) }
    dend_12 { pt3dadd( -35.5035, -379.32, -19.1205, 0.28 ) }
    dend_12 { pt3dadd( -35.3726, -380.213, -19.5006, 0.56 ) }
    dend_12 { pt3dadd( -34.7936, -382.663, -20.8089, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 76/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -37.8705, -359.434, -16.4884, 0.28 ) }
    dend_11 { pt3dadd( -37.2252, -360.737, -15.6584, 0.28 ) }
    dend_11 { pt3dadd( -36.6582, -361.813, -14.9282, 0.28 ) }
    dend_11 { pt3dadd( -34.663, -365.06, -12.7069, 0.28 ) }
    dend_11 { pt3dadd( -33.4095, -367.1, -11.3115, 0.28 ) }
    dend_11 { pt3dadd( -33.2119, -367.421, -11.0914, 0.83 ) }
    dend_11 { pt3dadd( -31.6368, -369.984, -9.33785, 0.28 ) }
    dend_11 { pt3dadd( -31.2167, -370.688, -8.79917, 0.28 ) }
    dend_11 { pt3dadd( -30.3254, -372.033, -7.62101, 0.28 ) }
    dend_11 { pt3dadd( -27.7373, -377.293, -3.74963, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_2 = new SectionList()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_61 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_63 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_60 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_59 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_57 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_54 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_23 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_19 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_1 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_55 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_43 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_42 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_44 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_38 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_13 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_10 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_62 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_40 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_58 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_17 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_24 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_28 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_25 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_45 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_50 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_51 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_2 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_11 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_12 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_15 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_14 OneSecGrp_SectionRef_68.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_40, dend_33, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_16, dend_16, dend_16, dend_9, dend_9, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_61 nseg = 13
    dend_31 nseg = 11
    dend_22 nseg = 3
    dend_66 nseg = 5
    dend_63 nseg = 5
    dend_60 nseg = 7
    dend_59 nseg = 9
    dend_57 nseg = 9
    dend_54 nseg = 3
    dend_23 nseg = 7
    dend_19 nseg = 9
    dend_18 nseg = 9
    dend_4 nseg = 7
    dend_1 nseg = 11
    dend_55 nseg = 3
    dend_35 nseg = 3
    dend_20 nseg = 3
    dend_6 nseg = 5
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_43 nseg = 5
    dend_42 nseg = 5
    dend_37 nseg = 7
    dend_36 nseg = 7
    dend_30 nseg = 7
    dend_29 nseg = 5
    dend_27 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_52 nseg = 5
    dend_49 nseg = 5
    dend_44 nseg = 5
    dend_38 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_LBC_8e834c24cb_0_0


