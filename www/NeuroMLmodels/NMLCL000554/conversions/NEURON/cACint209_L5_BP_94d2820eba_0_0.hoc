// Cell: cACint209_L5_BP_94d2820eba_0_0
/*
{
  "id" : "cACint209_L5_BP_94d2820eba_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.07628, 2.40803, 0.83", "-3.08083, 8.07688, 2.84061, 0.83", "-5.91702, 10.2202, 3.26835, 1.11", "-7.58926, 11.4831, 3.49085, 0.83", "-9.21389, 12.6994, 3.69021, 0.83", "-10.1758, 13.3929, 3.79945, 1.11", "-13.1881, 15.5602, 4.14957, 1.11", "-18.5758, 19.2706, 4.76849, 0.83", "-20.5168, 20.5564, 4.97287, 0.83", "-22.0539, 21.5443, 5.09982, 0.83", "-23.5528, 22.5234, 5.20971, 0.83", "-24.7729, 23.3304, 5.26899, 0.55", "-25.69, 23.8768, 5.32917, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.31578, -5.68197, 0.55", "4.3138, 5.96941, -6.14008, 0.55", "6.57085, 6.44545, -6.64412, 0.55", "7.88054, 6.56562, -7.31107, 0.83", "9.95338, 6.6935, -8.54999, 0.55", "10.9539, 6.75524, -9.14803, 1.38", "13.4142, 6.90702, -10.6185, 0.55", "14.462, 6.85563, -11.3201, 0.83", "19.8823, 5.91299, -15.2622, 0.55", "20.4067, 5.78623, -15.6959, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.03197, 2.42803, 1.11", "-0.684043, -10.2131, 3.23002, 1.11", "-0.732224, -14.3579, 4.754, 1.11", "-0.751846, -16.0459, 5.37467, 0.83", "-0.777915, -18.2885, 6.19925, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.41203, -1.26197, 1.11", "1.01253, 9.62061, -1.42145, 1.11", "1.25275, 11.5665, -1.43784, 1.11", "1.67202, 14.7396, -1.34772, 1.38", "1.69935, 14.916, -1.34052, 1.38", "2.17382, 17.0878, -1.27015, 0.83", "2.8057, 19.3741, -1.10277, 0.83", "3.83536, 21.9309, -0.670976, 0.83", "4.38382, 22.8882, -0.424772, 0.83", "4.89781, 23.5722, -0.204833, 1.11", "6.33801, 25.2232, 0.324436, 0.55", "8.00581, 26.9336, 0.967824, 0.83", "10.0941, 28.6628, 1.63127, 0.55", "11.1245, 29.368, 1.90339, 0.83", "12.5898, 30.3177, 2.37046, 0.55", "14.4383, 31.5272, 3.04503, 0.55", "17.0784, 33.359, 4.13488, 0.55", "19.9954, 35.4607, 5.33941, 0.55", "21.909, 36.8236, 6.32084, 0.55", "24.3428, 38.5464, 7.78875, 0.55", "24.8597, 38.8897, 8.13217, 0.83", "26.2507, 39.7952, 9.1213, 0.55", "27.3935, 40.4964, 9.88113, 0.83", "30.0731, 42.4469, 11.6993, 0.55", "31.0162, 43.1615, 12.1817, 0.83", "31.8297, 43.6785, 12.4534, 0.55", "32.5971, 44.118, 12.6163, 0.83", "34.2382, 44.9177, 12.8304, 0.83", "36.3592, 46.0149, 12.9499, 0.83", "37.6262, 46.7508, 12.9013, 0.55", "38.6006, 47.3974, 12.8688, 0.55", "41.142, 49.066, 12.75, 0.83", "42.764, 50.1365, 12.6147, 0.55", "45.1926, 51.7002, 12.3198, 0.55", "47.3812, 52.9986, 11.9693, 0.55", "49.3178, 54.0918, 11.6074, 0.55", "51.7227, 55.3613, 11.0472, 0.55", "53.1641, 55.9619, 10.66, 0.55", "54.1042, 56.2886, 10.2831, 0.55", "55.3004, 56.4923, 9.67741, 0.55", "57.0117, 56.4908, 8.62163, 0.55", "58.0524, 56.3408, 7.91887, 0.55", "59.6082, 56.0718, 7.0108, 0.55", "62.6741, 55.6576, 5.56905, 0.55", "65.148, 55.4478, 4.61768, 0.55", "67.8324, 55.3521, 3.76917, 0.55", "69.6027, 55.3477, 3.36076, 0.55", "74.3303, 55.7424, 2.59307, 0.55", "77.2087, 56.1793, 2.33761, 0.55", "79.4381, 56.6353, 2.33159, 0.55", "80.824, 57.1158, 2.37445, 0.55", "82.4433, 57.8656, 2.41697, 0.55", "85.1343, 59.3835, 2.27726, 0.55", "85.7286, 59.7531, 2.17002, 0.55", "87.3936, 60.735, 1.75968, 0.55", "88.9345, 61.7995, 1.37697, 0.83", "89.7722, 62.3914, 1.1557, 0.55", "91.0228, 63.4222, 0.777686, 0.83", "98.1446, 68.8964, 0.411211, 0.83", "104.33, 75.3324, -0.334407, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-25.69, 23.8768, 5.32917, 0.55", "-26.9764, 24.9118, 4.47247, 0.55", "-28.3752, 26.0373, 3.54089, 0.55", "-30.0633, 27.3955, 2.41668, 0.55", "-31.4572, 28.517, 1.48838, 0.83", "-32.6253, 29.4568, 0.710477, 0.55", "-34.7934, 31.2012, -0.733433, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.69, 23.8768, 5.32917, 0.55", "-27.6417, 24.2123, 5.13528, 0.55", "-29.7133, 24.5101, 5.13668, 0.55", "-32.0609, 24.8451, 5.19571, 0.55", "-35.4532, 25.3006, 5.59463, 0.55", "-38.2865, 25.6049, 6.13295, 0.55", "-41.2548, 25.8816, 6.8264, 0.55", "-44.1152, 25.9642, 7.81307, 0.55", "-46.5702, 25.8035, 8.90922, 0.55", "-49.6197, 25.3975, 10.6136, 0.55", "-50.9404, 25.1279, 11.5457, 0.55", "-52.3654, 24.8228, 12.6162, 0.55", "-54.8804, 24.0918, 14.3909, 0.55", "-56.2242, 23.7027, 15.1187, 0.55", "-57.6316, 23.252, 15.8734, 0.55", "-59.3097, 22.7337, 16.5968, 0.55", "-61.1349, 22.2072, 17.3312, 0.55", "-63.7411, 21.4483, 18.3215, 0.55", "-67.2314, 20.6591, 19.3211, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.4067, 5.78623, -15.6959, 0.55", "24.9244, 6.95861, -16.659, 0.55", "27.5288, 7.49069, -17.5851, 0.55", "30.0996, 7.90331, -18.5388, 0.55", "31.8563, 8.11648, -19.1913, 0.55", "34.424, 8.36931, -20.1263, 0.55", "39.7509, 8.7957, -22.235, 0.55", "45.7941, 9.24881, -25.0327, 0.55", "48.725, 9.29256, -26.597, 0.55", "50.2949, 9.27987, -27.5391, 0.55", "52.0162, 9.27535, -28.6422, 0.55", "55.088, 9.18297, -30.6002, 0.55", "56.2038, 9.08578, -31.3499, 0.55", "60.9269, 8.79634, -34.8883, 0.55", "64.2699, 8.64823, -37.6408, 0.55", "66.1945, 8.6006, -39.278, 0.55", "68.1141, 8.53645, -40.9098, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "20.4067, 5.78623, -15.6959, 0.83", "21.6862, 6.90823, -15.8854, 0.83", "22.4207, 7.53995, -16.0309, 0.55", "23.5056, 8.47093, -16.3544, 0.83", "24.2332, 9.11094, -16.6015, 0.55", "25.2297, 10.0262, -16.9332, 0.83", "26.419, 11.1638, -17.2887, 0.55", "27.0244, 11.6949, -17.4274, 0.55", "28.4477, 12.7406, -17.5845, 0.83", "29.7562, 13.5705, -17.5013, 0.55", "30.4828, 14.0445, -17.3769, 0.83", "31.5578, 14.8104, -17.0718, 0.55", "33.0778, 15.9918, -16.4225, 0.55", "35.2012, 17.5443, -15.3691, 0.55", "37.2278, 18.9842, -14.1883, 0.55", "38.8342, 20.1144, -13.216, 0.55", "41.4786, 21.9945, -11.6008, 0.55", "43.3977, 23.4408, -10.3868, 0.55", "44.5319, 24.4299, -9.63248, 0.55", "46.5724, 26.4923, -8.28124, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.777915, -18.2885, 6.19925, 0.83", "-0.594212, -21.1167, 6.10743, 0.83", "-0.415234, -23.8722, 6.01798, 0.83", "-0.215405, -26.9487, 5.9181, 0.83", "-0.111055, -28.5552, 5.86594, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.777915, -18.2885, 6.19925, 0.55", "-0.176922, -19.9141, 7.36456, 0.55", "0.353655, -21.9054, 8.87965, 0.55", "0.637621, -24.5166, 10.9705, 0.55", "0.674546, -25.5319, 11.8111, 0.83", "0.522133, -28.1237, 14.2602, 0.55", "0.330132, -29.4625, 15.5507, 0.55", "-0.100696, -32.0663, 18.1738, 0.83", "-0.536303, -34.0002, 20.2476, 0.55", "-1.0417, -35.5959, 21.9322, 0.55", "-2.06871, -38.6183, 25.0657, 0.55", "-2.88457, -41.0272, 27.5342, 0.55", "-3.49838, -42.9583, 29.5411, 0.55", "-4.03326, -45.0081, 31.6058, 0.28", "-4.18186, -45.8617, 32.4324, 0.55", "-4.41358, -47.4381, 33.8671, 0.28", "-4.42791, -49.8979, 35.7143, 0.55", "-6.51041, -58.0884, 42.3064, 0.55", "-8.8164, -65.6574, 49.5712, 0.55", "-10.6464, -71.8779, 58.1912, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-34.7934, 31.2012, -0.733433, 0.55", "-37.4053, 31.1416, -0.310345, 0.55", "-38.5404, 31.022, -0.0470096, 0.83", "-39.9143, 30.7719, 0.372485, 0.55", "-40.9911, 30.5494, 0.763017, 0.83", "-43.8098, 30.0481, 1.79977, 0.55", "-44.8799, 29.8687, 2.20389, 0.28", "-46.7041, 29.5366, 2.99129, 0.55", "-49.1494, 29.105, 4.04421, 0.55", "-50.9844, 28.804, 4.78423, 0.55", "-53.4155, 28.4259, 5.71728, 0.28", "-54.0276, 28.3552, 5.9068, 0.55", "-55.2821, 28.2356, 6.26861, 0.28", "-56.1132, 28.1976, 6.46203, 0.55", "-57.7685, 28.1603, 6.74072, 0.28", "-58.7238, 28.1127, 6.84659, 0.55", "-60.4084, 27.9232, 7.00173, 0.28", "-61.528, 27.8037, 7.07177, 0.55", "-69.2145, 25.5511, 9.74448, 0.55", "-76.4832, 22.3839, 12.6314, 0.55", "-83.4937, 18.5047, 15.2477, 0.55", "-90.2923, 13.9247, 17.1368, 0.55", "-96.532, 9.2081, 20.2492, 0.55", "-103.262, 4.95109, 22.9954, 0.55", "-110.253, 1.79776, 26.5182, 0.55", "-117.145, -1.89867, 29.6749, 0.55", "-123.999, -5.21098, 33.3175, 0.55", "-130.565, -8.7643, 37.2499, 0.55", "-136.39, -13.3305, 41.278, 0.55", "-142.379, -17.2629, 45.7311, 0.55", "-148.337, -21.8162, 49.573, 0.55", "-153.473, -26.91, 53.8816, 0.55", "-157.515, -31.8624, 59.3739, 0.55", "-161.246, -37.9597, 63.785, 0.55", "-163.859, -44.3367, 68.5799, 0.55", "-166.956, -50.4155, 73.487, 0.55", "-170.964, -55.915, 78.4389, 0.55", "-176.608, -60.0093, 83.1863, 0.55", "-181.538, -65.0155, 87.8314, 0.55", "-185.289, -69.2067, 94.1243, 0.55", "-190.254, -72.6283, 100.035, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-34.7934, 31.2012, -0.733433, 0.55", "-35.6102, 32.6169, -2.57218, 0.55", "-36.0256, 34.1356, -4.44603, 0.55", "-36.3321, 35.8514, -6.33077, 0.55", "-36.5241, 36.9258, -7.51096, 0.55", "-36.8743, 38.8856, -9.66378, 0.83", "-37.1304, 40.3194, -11.2388, 0.55", "-37.2244, 42.3218, -13.4824, 0.83", "-37.088, 43.5386, -14.6287, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-67.2314, 20.6591, 19.3211, 0.28", "-68.1384, 18.7655, 19.4834, 0.28", "-68.5836, 17.9332, 19.4927, 0.28", "-69.1621, 16.7499, 19.4605, 0.55", "-69.6355, 15.7135, 19.4373, 0.28", "-70.3298, 14.1405, 19.4179, 0.55", "-72.2433, 9.54071, 19.4198, 0.28", "-72.8738, 7.90205, 19.2955, 0.55", "-73.8352, 5.36084, 19.0242, 0.28", "-74.3914, 3.82739, 18.7972, 0.55", "-74.778, 2.76507, 18.6179, 0.28", "-75.2174, 1.54813, 18.4207, 0.55", "-76.524, -2.48305, 17.838, 0.28", "-76.9405, -3.71279, 17.6244, 0.55", "-77.6949, -5.64068, 17.1324, 0.28", "-78.3331, -6.90603, 16.7363, 0.28", "-78.9129, -7.7662, 16.4581, 0.55", "-80.9349, -10.1892, 15.7686, 0.28", "-81.8752, -11.1728, 15.5175, 0.55", "-84.1897, -13.45, 14.8421, 0.28", "-86.5121, -15.4903, 14.2264, 0.28", "-89.0486, -17.4741, 13.583, 0.28", "-90.2119, -18.2345, 13.3519, 0.55", "-95.6082, -25.8085, 12.103, 0.55", "-101.465, -33.1196, 12.6277, 0.55", "-107.353, -40.382, 11.7114, 0.55", "-113.514, -47.2681, 9.91842, 0.55", "-119.879, -53.6852, 7.2202, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-67.2314, 20.6591, 19.3211, 0.55", "-67.9963, 20.6017, 19.4348, 0.55", "-70.1496, 20.4395, 20.0365, 0.55", "-70.9584, 20.3577, 20.3059, 0.55", "-72.8603, 20.1087, 20.9685, 0.55", "-75.7872, 19.7562, 21.8453, 0.55", "-77.3082, 19.6193, 22.2741, 0.28", "-79.6764, 19.356, 22.8943, 0.55", "-81.4365, 19.1256, 23.2911, 0.55", "-82.1797, 19.0235, 23.4603, 0.28", "-86.6381, 18.4089, 24.4689, 0.55", "-88.7248, 18.0287, 24.8118, 0.28", "-91.542, 17.507, 25.1087, 0.28", "-93.9726, 17.0933, 25.2223, 0.55", "-103.412, 16.8158, 27.7367, 0.55", "-112.513, 16.2873, 31.258, 0.55", "-121.078, 14.7781, 35.7055, 0.55", "-129.36, 14.8585, 40.8928, 0.55", "-136.399, 14.5966, 47.6686, 0.55", "-141.998, 14.8347, 55.6735, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "68.1141, 8.53645, -40.9098, 0.55", "72.9361, 10.1668, -44.626, 0.55", "74.4505, 10.6378, -45.9068, 0.55", "76.3389, 11.1634, -47.4998, 0.55", "79.7579, 12.1284, -50.5946, 0.55", "83.307, 13.012, -53.9404, 0.55", "85.0264, 13.3008, -55.5599, 0.83", "86.4276, 13.4648, -57.0197, 0.55", "87.4627, 13.5235, -58.2365, 0.83", "89.9098, 13.3506, -61.4183, 0.55", "91.9005, 13.0181, -64.0922, 0.55", "94.1908, 12.5953, -67.0504, 0.55", "96.749, 12.2118, -70.384, 0.55", "98.4585, 11.9217, -72.6739, 0.55", "100.386, 11.6014, -75.3241, 0.55", "102.056, 11.4111, -77.7264, 0.55", "103.115, 11.4213, -79.3664, 0.55", "104.424, 11.5974, -82.6198, 0.55", "105.121, 11.6618, -84.6612, 0.55", "105.673, 11.6801, -87.3795, 0.55", "106.378, 11.6074, -91.9903, 0.55", "106.513, 11.557, -93.0363, 0.28", "108.28, 10.7976, -105.783, 0.28", "108.908, 10.5858, -109.525, 0.83", "111.428, 9.5795, -122.851, 0.83", "112.728, 8.86689, -129.092, 0.83", "113.367, 8.47008, -131.641, 0.55", "114.126, 8.05693, -134.134, 0.55", "116.348, 7.09352, -138.806, 0.55", "118.778, 6.15099, -142.938, 0.28", "119.553, 5.84168, -143.24, 0.55", "121.287, 5.15564, -143.245, 0.28", "122.374, 4.7754, -143.074, 0.55", "123.506, 4.34485, -142.8, 0.28", "124.875, 3.88224, -142.396, 0.55", "126.933, 3.33916, -141.99, 0.28", "128.577, 2.86459, -141.728, 0.55", "130.409, 2.48606, -141.56, 0.28", "132.897, 2.0233, -141.551, 0.55", "135.691, 1.60015, -141.696, 0.55", "138.149, 1.28853, -141.98, 0.28", "141.55, 0.924491, -142.555, 0.55", "147.439, 0.575981, -144.143, 0.55", "150.051, 0.614324, -145.131, 0.55", "151.176, 0.69942, -145.667, 0.83", "153.32, 0.91482, -146.879, 0.55", "154.812, 1.14064, -147.801, 0.83", "158.84, 1.85856, -150.307, 0.55", "161.278, 2.14733, -151.932, 0.28", "162.299, 2.18459, -152.514, 0.55", "165.069, 1.97433, -153.847, 0.28", "166.03, 1.80062, -154.267, 0.55", "168.0, 1.25863, -154.844, 0.28", "169.988, 0.443795, -155.116, 0.55", "173.99, -1.56136, -154.98, 0.28", "175.829, -2.60769, -154.73, 0.55", "178.547, -4.35164, -154.237, 0.28", "181.985, -6.56679, -153.483, 0.55", "184.477, -8.14244, -152.89, 0.55", "188.811, -10.7498, -151.762, 0.28", "190.598, -11.7072, -151.434, 0.55", "193.693, -13.1129, -151.185, 0.28", "196.803, -14.2351, -151.11, 0.55", "198.529, -14.6122, -151.274, 0.28", "200.111, -14.724, -151.505, 0.55", "204.603, -14.7008, -152.525, 0.28", "207.837, -14.4618, -153.263, 0.28", "210.673, -14.0515, -153.906, 0.55", "213.811, -13.4857, -154.755, 0.28", "214.608, -13.3016, -154.934, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "68.1141, 8.53645, -40.9098, 0.55", "68.4241, 7.07082, -42.4376, 0.55", "68.5547, 5.81458, -43.6237, 0.28", "68.6741, 4.63695, -44.5964, 0.55", "69.0755, 2.13761, -46.6896, 0.28", "69.0956, 1.98655, -46.8464, 0.55", "69.226, 1.21164, -47.7449, 0.28", "69.2603, 0.60418, -48.6084, 0.55", "69.2482, -0.00516434, -49.6004, 0.28", "69.1982, -0.82213, -51.0035, 0.55", "69.0714, -2.88581, -54.4742, 0.55", "68.9258, -4.75424, -57.6814, 0.55", "68.7889, -6.24565, -60.247, 0.55", "68.6177, -7.71763, -62.7324, 0.55", "68.572, -8.103, -63.3526, 0.28", "68.5395, -8.52645, -63.9701, 0.55", "68.5675, -9.13431, -64.7577, 0.28", "68.7596, -10.2626, -66.05, 0.55", "69.3574, -12.5352, -68.1219, 0.55", "69.6925, -13.7876, -69.1117, 0.28", "69.9491, -15.0405, -70.1769, 0.55", "70.1599, -16.7678, -71.7382, 0.28", "70.2255, -18.146, -73.0322, 0.55", "70.2197, -20.1986, -74.968, 0.28", "70.2329, -22.3416, -76.8953, 0.55", "70.2033, -25.4424, -79.7233, 0.28", "70.1449, -27.0909, -81.2356, 0.55", "70.0524, -28.7642, -82.8275, 0.28", "69.9514, -30.2113, -84.3355, 0.28", "69.8985, -31.9835, -86.4099, 0.55", "69.9906, -33.6477, -88.2879, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "46.5724, 26.4923, -8.28124, 0.55", "49.4059, 26.7484, -7.59695, 0.55", "51.4904, 26.8271, -7.28064, 0.55", "56.0694, 26.9107, -6.81477, 0.55", "58.1407, 26.8783, -6.77863, 0.55", "60.3966, 26.8697, -6.85901, 0.55", "63.4231, 26.8737, -7.18531, 0.55", "66.6375, 26.7492, -7.81267, 0.55", "68.3332, 26.6322, -8.32595, 0.55", "71.7917, 26.3183, -9.82452, 0.55", "73.3837, 26.1779, -10.5657, 0.55", "77.1276, 25.7669, -12.3846, 0.55", "79.6787, 25.3968, -13.5804, 0.55", "81.556, 25.127, -14.3766, 0.83", "84.5718, 24.5979, -15.5989, 0.55", "87.5449, 23.9648, -16.664, 0.83", "90.0832, 23.3351, -17.4645, 0.55", "92.3346, 22.8234, -18.0701, 0.55", "93.6048, 22.5948, -18.356, 0.83", "96.5653, 22.0943, -18.8755, 0.28", "98.0263, 21.9166, -19.0537, 0.28", "99.455, 21.6492, -19.2828, 0.28", "100.994, 21.3973, -19.5434, 0.28", "103.45, 21.029, -20.0162, 0.28", "104.436, 20.8968, -20.1801, 0.55", "106.784, 20.6398, -20.3535, 0.55", "111.013, 20.1732, -20.4537, 0.55", "112.187, 20.0233, -20.4271, 0.55", "113.24, 19.8648, -20.3547, 0.83", "115.512, 19.6153, -20.0312, 0.55", "117.486, 19.407, -19.72, 0.55", "119.35, 19.2189, -19.4188, 0.55", "120.798, 19.0432, -19.2212, 0.55", "123.12, 18.5973, -18.9918, 0.55", "125.896, 17.8252, -18.83, 0.55", "130.287, 16.1356, -18.7919, 0.55", "132.75, 14.8661, -18.8619, 0.55", "134.938, 13.4284, -18.9687, 0.28", "135.611, 12.8708, -19.0146, 0.55", "137.157, 11.2514, -19.1229, 0.28", "138.559, 9.38268, -19.2001, 0.55", "139.971, 7.02477, -19.09, 0.55", "140.916, 5.49175, -18.9376, 0.28", "141.258, 4.95665, -18.8547, 0.55", "142.135, 3.63587, -18.6287, 0.28", "143.317, 1.93302, -18.2885, 0.55", "146.34, -2.11827, -17.3547, 0.55", "147.903, -4.14431, -16.8354, 0.55", "149.349, -5.99514, -16.3403, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "46.5724, 26.4923, -8.28124, 0.55", "48.9819, 28.7346, -5.9912, 0.55", "49.7689, 29.4262, -5.30373, 0.55", "52.7749, 31.7783, -2.79996, 0.55", "56.1003, 34.5018, 0.0111005, 0.55", "60.3293, 38.0449, 3.74556, 0.55", "61.4995, 39.0207, 4.76752, 0.55", "63.6248, 40.6726, 6.6261, 0.55", "65.9692, 42.4924, 8.53452, 0.55", "68.7146, 44.6219, 10.5741, 0.55", "71.2903, 46.6723, 12.4848, 0.55", "72.7084, 47.8294, 13.4237, 0.55", "74.3629, 49.237, 14.495, 0.55", "76.4068, 51.0209, 15.7452, 0.83", "79.8636, 53.7436, 17.412, 0.55", "82.2056, 55.3953, 18.4499, 0.83", "85.5226, 57.4809, 19.857, 0.55", "86.5575, 58.0593, 20.3043, 0.55", "89.8213, 59.6658, 21.7097, 0.55", "95.7995, 62.0895, 24.1787, 0.55", "100.255, 63.5896, 26.0145, 0.55", "103.792, 64.6661, 27.6288, 0.55", "107.405, 65.6484, 29.4866, 0.55", "108.169, 65.8382, 29.8912, 0.28", "109.73, 66.165, 30.7392, 0.83", "116.147, 67.44, 34.3023, 0.55", "120.659, 68.2963, 36.711, 0.55", "124.319, 69.1262, 38.7284, 0.55", "126.501, 69.6257, 39.9569, 0.83", "128.214, 70.0432, 40.9145, 0.28", "129.771, 70.4173, 41.768, 0.55", "140.854, 76.8413, 48.5975, 0.55", "153.681, 80.5289, 54.3277, 0.55", "165.967, 85.9682, 59.8347, 0.55", "176.509, 90.5863, 68.6961, 0.55", "186.432, 93.5992, 78.8557, 0.55", "198.69, 93.4327, 86.5774, 0.55", "211.545, 91.0452, 92.7468, 0.55", "225.35, 90.765, 97.1755, 0.55", "238.824, 90.6723, 102.526, 0.55", "252.766, 91.6531, 106.441, 0.55", "266.109, 93.9493, 111.69, 0.55", "278.862, 94.2675, 118.579, 0.55", "291.168, 97.4252, 125.614, 0.55", "302.069, 103.08, 133.368, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.111055, -28.5552, 5.86594, 1.38", "3.48968, -31.4498, 6.10439, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.111055, -28.5552, 5.86594, 0.55", "-0.67438, -30.1216, 5.18694, 0.55", "-1.25489, -32.0916, 4.45958, 0.55", "-1.75133, -33.4245, 3.88187, 0.55", "-2.07432, -34.5317, 3.3004, 0.55", "-2.67041, -36.8306, 1.89775, 0.55", "-3.07418, -38.3742, 0.882127, 0.55", "-3.39953, -39.7538, -0.0508769, 0.55", "-4.26645, -43.1379, -2.46136, 0.55", "-5.3517, -47.0796, -5.34987, 0.55", "-6.16754, -50.072, -7.62618, 0.55", "-6.66119, -52.027, -9.09253, 0.55", "-7.21621, -54.3578, -10.7622, 0.55", "-7.88498, -57.6476, -12.8248, 0.55", "-8.23484, -59.9308, -13.975, 0.55", "-8.70941, -63.1739, -15.2392, 0.55", "-9.05663, -66.1722, -16.167, 0.55", "-9.30884, -69.8545, -17.0248, 0.55", "-9.44808, -74.1213, -17.7159, 0.55", "-9.39775, -77.3295, -17.9654, 0.55", "-9.3745, -78.9124, -17.9394, 0.55", "-9.31505, -82.6028, -17.5751, 0.55", "-9.28323, -86.0499, -17.1258, 0.55", "-9.31658, -89.5047, -16.3614, 0.55", "-9.42948, -91.4974, -15.8612, 0.55", "-9.91837, -97.6653, -14.1274, 0.55", "-9.96226, -98.1205, -13.9963, 0.55", "-10.245, -100.902, -13.1073, 0.55", "-10.9948, -105.928, -11.6039, 0.55", "-11.18, -107.605, -11.178, 0.55", "-11.1881, -110.21, -10.8734, 0.55", "-11.0126, -111.16, -10.898, 0.55", "-9.87104, -114.309, -11.3091, 0.55", "-8.72462, -116.299, -11.8044, 0.55", "-6.33467, -119.411, -13.0097, 0.55", "-3.06304, -123.166, -14.5877, 0.28", "-2.14257, -124.083, -15.0635, 0.55", "-0.644018, -125.464, -15.8774, 0.28", "-0.410592, -125.671, -16.0103, 0.55", "0.782071, -126.817, -16.667, 0.28", "1.09375, -127.218, -16.8411, 0.55", "2.36126, -129.337, -17.4761, 0.28", "2.76507, -130.065, -17.707, 0.55", "3.82176, -132.181, -18.3057, 0.28", "4.15465, -132.847, -18.4901, 0.55", "5.26116, -135.151, -19.1131, 0.28", "5.77829, -136.209, -19.3994, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.6464, -71.8779, 58.1912, 0.55", "-14.6777, -79.4254, 64.8029, 0.55", "-19.9117, -86.184, 71.4721, 0.55", "-24.6887, -93.6016, 77.7353, 0.55", "-29.615, -101.081, 83.8026, 0.55", "-33.1515, -109.61, 89.3596, 0.55", "-36.7172, -117.779, 95.4391, 0.55", "-38.5127, -127.46, 99.6838, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.6464, -71.8779, 58.1912, 0.55", "-9.92717, -80.7986, 67.3263, 0.55", "-8.44484, -91.0863, 74.6828, 0.55", "-9.02384, -101.602, 81.8298, 0.55", "-10.2053, -112.781, 87.7404, 0.55", "-10.8873, -123.876, 93.8889, 0.55", "-11.5673, -134.508, 100.843, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-37.088, 43.5386, -14.6287, 0.83", "-36.385, 45.2724, -15.1457, 0.83", "-34.867, 49.3603, -16.2192, 0.55", "-34.2577, 51.076, -16.5858, 0.83", "-33.6422, 52.8697, -16.8918, 0.55", "-33.0979, 54.6264, -17.0273, 0.55", "-32.8591, 55.468, -17.0111, 0.28", "-32.7819, 55.9756, -16.9076, 0.55", "-32.6238, 57.5189, -16.2422, 0.28", "-32.5544, 58.1631, -15.9202, 0.55", "-32.3824, 60.3623, -14.7285, 0.28", "-32.3202, 62.0807, -13.7491, 0.55", "-32.3979, 64.7336, -12.1995, 0.28", "-32.5748, 67.0497, -10.8324, 0.28", "-32.7665, 68.339, -10.0781, 0.55", "-33.0959, 69.8736, -9.22786, 0.28", "-33.3099, 70.6041, -8.83498, 0.55", "-33.878, 72.3661, -8.03164, 0.28", "-34.3107, 73.5743, -7.59117, 0.28", "-34.7454, 74.7792, -7.20354, 0.28", "-34.9494, 75.4156, -6.99016, 0.55", "-35.6099, 78.0102, -6.12035, 0.28", "-36.2659, 81.1037, -5.0958, 0.55", "-36.4751, 82.1732, -4.73878, 0.55", "-36.7118, 83.2359, -4.36767, 0.55", "-37.3178, 85.5164, -3.66589, 0.55", "-37.7967, 87.0326, -3.27686, 0.28", "-38.0394, 87.6131, -3.16553, 0.55", "-38.817, 89.1752, -2.88286, 0.28", "-39.6827, 90.8701, -2.66972, 0.55", "-41.1033, 93.3575, -2.54267, 0.28", "-41.7871, 94.4145, -2.56549, 0.28", "-42.8517, 95.953, -2.7979, 0.55", "-44.0216, 97.5934, -3.14974, 0.28", "-44.2335, 97.8572, -3.22998, 0.55", "-44.995, 98.7159, -3.55688, 0.28", "-47.6364, 101.483, -4.71471, 0.55", "-51.2285, 105.055, -6.62373, 0.28", "-51.871, 105.688, -7.03826, 0.55", "-53.6166, 107.368, -8.24318, 0.28", "-54.3392, 108.072, -8.77562, 0.28", "-54.9514, 108.681, -9.2795, 0.55", "-56.6593, 110.287, -11.025, 0.28", "-57.8829, 111.241, -12.2734, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-37.088, 43.5386, -14.6287, 0.55", "-37.1978, 44.7847, -14.4698, 0.55", "-37.2991, 45.5029, -14.3157, 0.28", "-37.5088, 45.9894, -14.11, 0.55", "-37.9902, 47.1066, -13.6378, 0.28", "-38.3284, 47.8913, -13.3061, 0.55", "-38.9517, 49.338, -12.6947, 0.28", "-39.4078, 50.0799, -12.25, 0.55", "-41.267, 51.6966, -10.6703, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-119.879, -53.6852, 7.2202, 0.55", "-125.39, -61.9622, 6.59099, 0.55", "-129.304, -71.0109, 5.39386, 0.55", "-132.563, -79.7985, 2.03761, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-119.879, -53.6852, 7.2202, 0.55", "-124.659, -60.2455, 5.80986, 0.55", "-128.626, -67.0903, 3.5235, 0.55", "-132.256, -74.0711, 1.10601, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-141.998, 14.8347, 55.6735, 0.55", "-145.957, 14.6643, 58.3737, 0.55", "-150.113, 15.1532, 60.7109, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-141.998, 14.8347, 55.6735, 0.55", "-151.366, 13.7221, 60.0545, 0.55", "-160.989, 14.2054, 63.9815, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "69.9906, -33.6477, -88.2879, 0.28", "75.7008, -36.0966, -99.2114, 0.28", "76.2637, -36.403, -100.195, 0.55", "77.214, -36.9202, -101.855, 0.28", "78.0142, -37.3558, -103.252, 0.28", "79.0734, -37.9323, -105.102, 0.55", "80.4699, -38.6925, -107.541, 0.55", "82.3209, -40.3247, -108.964, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "69.9906, -33.6477, -88.2879, 0.55", "70.5261, -34.5537, -89.8642, 0.55", "70.6627, -34.9395, -90.5687, 0.28", "70.8474, -35.5835, -91.7972, 0.55", "71.2543, -37.0022, -94.5034, 0.28", "71.5363, -37.9854, -96.3789, 0.55", "72.014, -39.6512, -99.5565, 0.28", "72.5303, -41.5943, -103.678, 0.28", "72.7096, -42.466, -105.601, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "149.349, -5.99514, -16.3403, 0.28", "151.533, -7.29284, -14.6019, 0.28", "154.288, -8.88916, -12.0598, 0.28", "156.031, -9.88862, -10.3321, 0.55", "157.062, -10.3903, -9.3276, 0.28", "157.611, -10.6586, -8.78115, 0.28", "160.333, -12.0072, -6.12709, 0.55", "160.948, -12.2532, -5.4555, 0.28", "162.413, -12.8712, -3.57116, 0.55", "163.673, -13.4498, -1.99227, 0.28", "164.764, -13.9175, -0.732332, 0.55", "166.056, -14.5355, 0.687928, 0.55", "168.143, -15.6852, 2.66511, 0.55", "168.65, -15.9812, 3.1308, 0.55", "170.479, -17.1168, 4.84811, 0.28", "171.196, -17.6024, 5.52851, 0.55", "172.182, -18.2071, 6.39258, 0.28", "173.584, -19.1089, 7.55101, 0.55", "175.924, -20.7144, 9.03288, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "149.349, -5.99514, -16.3403, 0.55", "147.011, -6.44133, -16.4057, 0.55", "145.112, -6.80369, -16.4587, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.48968, -31.4498, 6.10439, 0.83", "3.63293, -31.6652, 6.14302, 0.83", "5.12929, -33.529, 6.73897, 0.83", "6.49324, -35.1582, 7.14776, 0.55", "7.58137, -36.458, 7.47389, 0.55", "9.89424, -39.2207, 8.16709, 0.83", "12.6996, -42.5716, 9.00789, 0.55", "14.1989, -44.319, 9.50688, 0.83", "16.7364, -47.0687, 10.5313, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.48968, -31.4498, 6.10439, 0.55", "4.64847, -32.501, 3.02732, 0.55", "5.89229, -33.6294, -0.275531, 0.55", "7.36064, -34.9614, -4.17458, 0.55", "9.14368, -36.5789, -8.90928, 0.55", "10.1555, -37.4968, -11.5961, 0.55", "10.3587, -37.6812, -12.1358, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.5673, -134.508, 100.843, 0.55", "-11.4295, -139.773, 104.887, 0.55", "-10.2518, -145.27, 108.395, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-11.5673, -134.508, 100.843, 0.55", "-11.6761, -139.831, 104.108, 0.55", "-12.1318, -145.09, 107.457, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-41.267, 51.6966, -10.6703, 0.28", "-43.0798, 52.9652, -8.92438, 0.28", "-43.7834, 53.4228, -8.1846, 0.55", "-45.8104, 54.7353, -5.9955, 0.28", "-46.7931, 55.415, -5.01005, 0.55", "-49.4508, 57.2835, -2.44014, 0.28", "-52.152, 59.1827, 0.171828, 0.55", "-56.6383, 62.0939, 4.46765, 0.28", "-57.5934, 62.7207, 5.38549, 0.55", "-59.673, 64.2412, 7.36965, 0.28", "-60.4831, 64.8811, 8.16308, 0.55", "-69.287, 68.933, 14.0578, 0.55", "-78.1929, 74.8721, 17.7058, 0.55", "-86.3123, 80.6166, 23.0753, 0.55", "-92.9074, 87.6014, 28.9446, 0.55", "-100.467, 94.4652, 33.7169, 0.55", "-109.239, 99.4893, 38.8213, 0.55", "-117.713, 103.217, 45.3831, 0.55", "-125.568, 105.401, 53.307, 0.55", "-133.343, 108.287, 61.0671, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-41.267, 51.6966, -10.6703, 0.55", "-45.9867, 50.4921, -9.1315, 0.55", "-48.4463, 49.7897, -8.34363, 0.28", "-50.2767, 49.267, -7.75732, 0.55", "-51.8022, 48.8314, -7.26865, 0.28", "-52.8708, 48.5262, -6.92637, 0.55", "-55.8172, 47.6848, -5.98256, 0.28", "-57.7803, 46.9905, -5.60896, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-132.563, -79.7985, 2.03761, 0.55", "-135.865, -88.4661, 2.97728, 0.55", "-138.866, -97.0604, 4.9512, 0.55", "-141.322, -106.04, 5.22785, 0.55", "-144.614, -114.62, 6.78181, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-132.563, -79.7985, 2.03761, 0.55", "-137.632, -87.1686, -3.82724, 0.55", "-142.362, -93.4876, -11.0925, 0.55", "-147.812, -100.66, -16.8682, 0.55", "-155.407, -106.131, -22.1277, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-132.256, -74.0711, 1.10601, 0.55", "-136.5, -78.3262, -3.71194, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-132.256, -74.0711, 1.10601, 0.55", "-135.759, -83.7174, 3.5859, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "82.3209, -40.3247, -108.964, 0.28", "85.0781, -41.5214, -110.799, 0.28", "86.3588, -42.0772, -111.651, 0.55", "88.8012, -43.1372, -113.276, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "82.3209, -40.3247, -108.964, 0.55", "81.7553, -41.3353, -110.553, 0.55", "80.624, -43.3566, -113.731, 0.28", "80.2554, -44.0151, -114.767, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "72.7096, -42.466, -105.601, 0.28", "73.8656, -45.9542, -110.076, 0.28", "74.438, -47.6814, -112.291, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "72.7096, -42.466, -105.601, 0.55", "71.0792, -42.9605, -105.074, 0.55", "66.5325, -44.3392, -103.604, 0.28", "65.4524, -44.6667, -103.255, 0.55", "62.4978, -45.5627, -102.299, 0.28", "60.5933, -46.1402, -101.683, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "16.7364, -47.0687, 10.5313, 0.83", "16.834, -47.3907, 10.5241, 0.83", "18.1219, -51.5942, 10.5701, 0.83", "18.7394, -54.7875, 10.6851, 0.83", "18.9975, -57.9052, 11.012, 0.83", "19.0738, -62.0772, 11.6837, 0.83", "18.9648, -66.9044, 12.5708, 0.83", "18.7486, -72.2911, 13.8361, 0.83", "18.4407, -77.5235, 15.2929, 0.83", "17.7345, -84.0106, 16.7711, 0.83", "17.3281, -87.0153, 17.2265, 0.83", "17.072, -89.2762, 17.4336, 0.83", "16.5335, -93.6276, 17.7091, 0.83", "16.2213, -97.5114, 17.7938, 0.83", "16.3411, -105.727, 17.2987, 0.83", "16.6936, -110.212, 16.5021, 0.83", "17.1392, -114.346, 15.4847, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.7364, -47.0687, 10.5313, 0.55", "15.7856, -50.3962, 10.2269, 0.55", "14.9881, -52.8163, 10.151, 0.55", "14.448, -54.3581, 10.2563, 0.55", "13.6028, -56.7547, 10.6764, 0.55", "11.9067, -61.4826, 11.8318, 0.55", "10.4275, -65.0651, 13.0448, 0.55", "9.11258, -67.936, 14.2913, 0.55", "7.63398, -70.8454, 15.7034, 0.55", "6.33602, -73.2611, 16.9781, 0.28", "5.12699, -75.2384, 18.2639, 0.55", "2.63817, -78.8476, 21.017, 0.55", "0.904844, -81.0765, 22.8649, 0.55", "-0.0729318, -82.327, 23.8835, 0.55", "-1.25831, -83.8126, 24.9856, 0.83", "-4.68348, -88.2236, 27.9802, 0.28", "-5.79905, -89.6833, 28.9371, 0.55", "-7.70598, -92.3075, 30.6237, 0.28", "-8.31807, -93.1161, 31.1956, 0.55", "-9.64755, -95.0005, 32.5501, 0.28", "-10.3638, -96.0713, 33.2536, 0.55", "-12.4842, -99.588, 34.6213, 0.55", "-17.6996, -108.73, 42.5521, 0.55", "-22.6383, -117.368, 51.2165, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "10.3587, -37.6812, -12.1358, 0.55", "12.095, -38.3926, -14.4841, 0.55", "12.576, -38.5563, -15.1734, 0.55", "13.7269, -38.9718, -16.896, 0.55", "16.102, -39.7938, -20.6467, 0.28", "16.4245, -39.9073, -21.2005, 0.55", "17.6946, -40.4416, -23.4977, 0.55", "19.1709, -41.194, -26.6015, 0.55", "19.7084, -41.4515, -27.7856, 0.28", "20.1237, -41.6201, -28.8155, 0.28", "20.6243, -41.8928, -30.5395, 0.55", "21.2987, -42.1342, -32.657, 0.28", "21.9507, -42.2093, -34.6231, 0.55", "22.422, -42.1608, -36.1409, 0.55", "22.7704, -42.0499, -37.1929, 0.55", "23.8666, -41.5988, -40.3016, 0.55", "24.9542, -40.9385, -43.5682, 0.55", "25.3704, -40.6043, -44.9138, 0.28", "25.7873, -40.3026, -46.1958, 0.55", "26.6196, -39.8359, -48.7903, 0.28", "26.8934, -39.7008, -49.6617, 0.83", "27.3076, -39.4394, -51.2721, 0.28", "27.4784, -39.3365, -52.4067, 0.55", "27.7001, -39.2403, -54.0478, 0.28", "27.7685, -39.1959, -54.6979, 0.55", "27.8381, -39.1384, -55.8911, 0.55", "27.8698, -38.8934, -57.6838, 0.55", "27.826, -38.6723, -58.8436, 0.28", "27.7151, -38.3934, -59.7657, 0.55", "27.581, -37.941, -60.855, 0.28", "27.5638, -37.8529, -61.0357, 0.55", "27.6689, -36.9864, -62.7636, 0.28", "27.8627, -36.3266, -64.0446, 0.55", "28.3157, -35.3445, -65.7809, 0.83", "28.8238, -34.4978, -67.2415, 0.28", "28.9863, -34.279, -67.6255, 0.55", "30.3702, -32.6263, -70.5993, 0.28", "30.6547, -32.341, -71.1286, 0.55", "31.5682, -31.409, -72.7076, 0.28", "31.8065, -31.169, -73.1157, 0.55", "32.3599, -30.5492, -74.1514, 0.28", "32.7139, -30.1062, -74.8776, 0.55", "33.3037, -29.132, -76.4588, 0.28", "33.6267, -28.6112, -77.3917, 0.55", "34.2317, -27.6116, -79.365, 0.28", "34.4056, -27.3419, -79.9513, 0.55", "34.6529, -26.9817, -80.8652, 0.28", "34.8298, -26.6809, -81.6325, 0.55", "35.1143, -26.0811, -83.2088, 0.28", "35.1868, -25.9109, -83.6808, 0.55", "35.5762, -24.5966, -87.1555, 0.28", "35.6127, -24.0661, -88.3525, 0.55", "35.5471, -23.0363, -90.4585, 0.28", "35.4885, -22.5396, -91.4011, 0.55", "35.2396, -21.4239, -93.5344, 0.28", "35.1179, -21.0495, -94.3099, 0.55", "34.5485, -19.9446, -97.0802, 0.28", "34.309, -19.624, -98.2337, 0.55", "33.9637, -19.4287, -99.8767, 0.55", "33.7316, -19.3723, -100.882, 0.55", "33.1081, -19.3206, -102.888, 0.28", "32.3726, -19.2985, -104.826, 0.28", "31.7122, -19.2776, -106.426, 0.55", "30.6777, -19.0941, -108.311, 0.28", "30.0275, -18.8886, -109.198, 0.55", "28.2274, -18.033, -111.217, 0.28", "27.0056, -17.3702, -112.139, 0.55", "26.0432, -16.8284, -112.658, 0.28", "24.757, -16.231, -113.141, 0.55", "23.0166, -15.4507, -113.678, 0.28", "22.3624, -15.1796, -113.886, 0.55", "19.235, -13.9862, -115.115, 0.28", "18.1892, -13.6156, -115.536, 0.55", "15.6629, -12.8127, -116.515, 0.28", "14.2914, -12.3893, -117.048, 0.55", "13.1654, -12.0427, -117.487, 0.55", "11.8442, -11.635, -118.028, 0.28", "11.2352, -11.424, -118.358, 0.55", "9.28846, -10.65, -119.524, 0.28", "8.24624, -10.1354, -120.12, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.3587, -37.6812, -12.1358, 0.55", "11.5144, -37.6278, -12.4866, 0.55", "12.6648, -37.4449, -12.8112, 0.55", "14.0989, -37.1115, -13.1458, 0.55", "15.26, -36.7443, -13.3705, 0.55", "22.7935, -33.5313, -14.2916, 0.55", "24.4635, -32.6251, -14.5244, 0.55", "26.9054, -31.1167, -14.9223, 0.55", "28.6249, -29.9931, -15.2162, 0.55", "30.2763, -28.8022, -15.4686, 0.28", "32.7704, -26.8247, -15.7363, 0.55", "36.4251, -23.7616, -15.9285, 0.28", "36.7752, -23.5601, -16.0241, 0.55", "39.0468, -22.76, -17.2545, 0.28", "40.4682, -22.3711, -18.3466, 0.55", "41.9302, -22.1135, -19.6715, 0.55", "44.5605, -21.8309, -22.0806, 0.55", "49.7442, -21.3197, -26.7914, 0.55", "53.2882, -21.0077, -29.8899, 0.55", "54.5413, -20.9059, -30.9257, 0.55", "62.9133, -20.1113, -37.541, 0.55", "65.2438, -19.8346, -39.238, 0.55", "66.6201, -19.6582, -40.0912, 0.55", "70.0123, -19.2798, -41.7933, 0.55", "78.4694, -18.7202, -45.3722, 0.55", "80.8064, -18.6469, -46.2331, 0.28", "82.1846, -18.6476, -46.6196, 0.55", "84.2541, -18.7216, -47.1493, 0.28", "85.1363, -18.8227, -47.2991, 0.55", "87.8753, -19.4111, -47.0785, 0.28", "89.5645, -20.4992, -45.9307, 0.55", "90.5574, -21.3149, -45.1753, 0.28", "91.4159, -22.2583, -44.3739, 0.55", "92.1537, -23.3266, -43.5946, 0.28", "92.4992, -23.8875, -43.2621, 0.55", "93.2788, -25.3812, -42.4209, 0.28", "93.5406, -25.8271, -42.2558, 0.55", "95.1463, -28.3717, -41.4403, 0.28", "96.0372, -29.5269, -41.1663, 0.55", "98.2414, -31.9468, -40.7507, 0.28", "99.1677, -32.8194, -40.6555, 0.55", "102.459, -35.6394, -40.407, 0.28", "103.288, -36.3208, -40.3701, 0.55", "105.927, -38.4847, -40.3781, 0.28", "106.484, -39.0031, -40.3691, 0.55", "107.907, -40.385, -40.3726, 0.28", "108.805, -41.177, -40.4389, 0.55", "109.763, -41.9417, -40.538, 0.55", "111.664, -43.4686, -40.7244, 0.28", "113.015, -44.38, -40.8665, 0.55", "117.28, -46.4848, -41.3284, 0.28", "118.953, -47.1138, -41.5438, 0.55", "120.1, -47.4953, -41.6733, 0.28", "121.255, -47.8213, -41.787, 0.55", "124.793, -48.6706, -42.0745, 0.28", "127.454, -49.3423, -42.2398, 0.55", "131.909, -50.7231, -42.2777, 0.28", "133.309, -51.1496, -42.2841, 0.55", "135.906, -51.918, -42.1347, 0.28", "136.745, -52.1695, -42.0353, 0.55", "138.004, -52.5765, -41.699, 0.28", "139.067, -52.9141, -41.3304, 0.55", "141.781, -53.7147, -40.1014, 0.28", "144.85, -54.5174, -38.6507, 0.28", "146.332, -54.8638, -37.8268, 0.28", "147.874, -55.1603, -37.0739, 0.55", "150.12, -55.4922, -35.9827, 0.28", "151.105, -55.6265, -35.4797, 0.83", "153.563, -56.0083, -34.1147, 0.28", "154.669, -56.1942, -33.5737, 0.55", "159.686, -57.1762, -31.3822, 0.28", "162.311, -57.683, -30.4506, 0.28", "164.284, -58.0444, -29.8716, 0.55", "165.501, -58.2695, -29.6338, 0.55", "168.85, -58.892, -29.1898, 0.28", "172.05, -59.582, -28.8649, 0.55", "174.973, -60.2815, -28.569, 0.28", "177.678, -60.9386, -28.3991, 0.55", "179.906, -61.4617, -28.2495, 0.28", "181.678, -61.7927, -28.0594, 0.55", "185.849, -62.4067, -27.4609, 0.28", "187.926, -62.7187, -27.0936, 0.55", "190.997, -63.1992, -26.4563, 0.28", "193.476, -63.5335, -25.8912, 0.55", "199.255, -64.098, -24.5768, 0.28", "201.665, -64.2066, -24.1639, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.2518, -145.27, 108.395, 0.55", "-9.6919, -150.955, 111.462, 0.55", "-8.08562, -156.955, 113.257, 0.55", "-7.10254, -162.819, 115.82, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.2518, -145.27, 108.395, 0.55", "-9.08028, -153.594, 115.503, 0.55", "-9.98454, -161.007, 123.648, 0.55", "-11.5941, -166.67, 133.065, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.1318, -145.09, 107.457, 0.55", "-11.6048, -151.476, 112.717, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.1318, -145.09, 107.457, 0.55", "-12.8883, -153.432, 112.328, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "17.1392, -114.346, 15.4847, 0.83", "18.0743, -117.045, 16.1766, 0.83", "18.9504, -119.295, 16.9508, 0.83", "19.8212, -121.531, 17.7204, 0.83", "20.6482, -123.654, 18.4512, 0.83", "21.9226, -126.927, 19.5775, 0.83", "23.1878, -130.176, 20.6956, 0.83", "24.1723, -132.284, 21.7548, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "17.1392, -114.346, 15.4847, 0.55", "18.6259, -115.939, 15.7624, 0.55", "19.7989, -117.199, 15.7344, 0.55", "20.6311, -118.143, 15.6059, 0.55", "21.4408, -119.283, 15.2814, 0.83", "22.2891, -120.599, 14.7344, 0.55", "23.1189, -121.886, 14.1994, 0.83", "23.952, -123.301, 13.4736, 0.55", "24.4429, -124.127, 12.9728, 0.83", "25.9407, -126.826, 11.1237, 0.55", "26.9539, -128.976, 9.51627, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-22.6383, -117.368, 51.2165, 0.55", "-27.371, -125.73, 55.7645, 0.55", "-33.6256, -133.202, 60.1132, 0.55", "-40.7657, -139.751, 64.6567, 0.55", "-48.9044, -145.157, 69.1012, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-22.6383, -117.368, 51.2165, 0.55", "-26.114, -123.542, 55.3218, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "24.1723, -132.284, 21.7548, 0.55", "24.4766, -134.807, 22.6364, 0.55", "24.9278, -138.012, 23.8702, 0.55", "25.36, -141.038, 25.0184, 0.55", "25.6526, -143.194, 25.7939, 0.55", "26.1499, -147.051, 27.1043, 0.55", "27.7985, -157.873, 30.5579, 0.55", "28.4963, -161.538, 31.5967, 0.55", "29.0385, -164.124, 32.2002, 0.55", "29.7555, -167.08, 32.6563, 0.55", "30.3335, -169.378, 32.7915, 0.55", "31.9118, -174.728, 32.9308, 0.55", "32.9692, -178.813, 32.9889, 0.55", "33.7116, -181.482, 33.1282, 0.55", "35.5042, -188.396, 33.8416, 0.55", "36.6169, -193.043, 34.5216, 0.55", "37.9779, -199.021, 35.7492, 0.55", "39.4523, -205.774, 37.6999, 0.55", "40.5575, -210.242, 39.3476, 0.55", "41.2542, -212.87, 40.4131, 0.55", "41.8525, -215.3, 41.3748, 0.55", "42.7081, -218.373, 42.4581, 0.55", "44.8344, -225.809, 44.5232, 0.55", "45.7894, -228.674, 45.2409, 0.55", "46.7813, -231.877, 45.9948, 0.55", "48.2379, -236.694, 47.0896, 0.55", "49.1708, -240.426, 47.9171, 0.55", "49.8629, -244.007, 48.5963, 0.55", "50.3699, -247.446, 49.2005, 0.55", "50.7929, -250.81, 49.8226, 0.55", "51.1156, -253.203, 50.2457, 0.55", "51.7082, -257.117, 50.8088, 0.55", "52.4621, -261.837, 51.1057, 0.55", "52.939, -264.124, 51.0939, 0.55", "53.4256, -266.133, 50.9368, 0.55", "54.5851, -269.901, 50.4639, 0.55", "55.3161, -272.295, 50.0895, 0.55", "56.2164, -275.237, 49.7507, 0.55", "56.7325, -277.315, 49.6171, 0.55", "57.913, -282.728, 49.455, 0.55", "58.6093, -286.79, 49.5973, 0.55", "59.4268, -293.082, 50.3046, 0.55", "59.9253, -297.118, 51.1707, 0.55", "60.3741, -301.357, 52.2094, 0.28", "60.4908, -303.066, 52.6853, 0.28", "60.6401, -307.208, 54.2133, 0.28", "60.6497, -311.031, 55.9204, 0.28", "60.9672, -315.996, 58.8384, 0.28", "64.0503, -326.993, 62.9109, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "24.1723, -132.284, 21.7548, 0.55", "24.8148, -132.591, 23.1059, 0.55", "26.0069, -133.478, 26.0069, 0.55", "26.9761, -134.398, 28.5741, 0.28", "27.964, -135.469, 31.3745, 0.55", "28.3898, -136.185, 33.1822, 0.28", "28.9244, -137.512, 36.4552, 0.55", "28.8973, -138.273, 38.002, 0.28", "28.821, -138.558, 38.6009, 0.28", "28.6661, -138.963, 39.6372, 0.55", "28.2323, -140.254, 43.561, 0.28", "28.0873, -140.747, 45.2066, 0.55", "28.05, -142.115, 49.9819, 0.28", "28.1573, -142.76, 52.5045, 0.28", "28.4385, -143.572, 55.5796, 0.55", "29.1782, -144.801, 60.0014, 0.28", "29.3287, -144.956, 60.5729, 0.55", "30.2241, -145.687, 63.3005, 0.28", "30.3284, -145.752, 63.5352, 0.55", "31.2389, -146.611, 65.6509, 0.28", "31.6324, -147.102, 66.6918, 0.55", "34.7242, -150.664, 75.269, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-48.9044, -145.157, 69.1012, 0.55", "-56.6857, -150.726, 77.0765, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-48.9044, -145.157, 69.1012, 0.55", "-55.2661, -153.092, 71.886, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BP_94d2820eba_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.07628, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.08083, 8.07688, 2.84061, 0.83 ) }
    dend_43 { pt3dadd( -5.91702, 10.2202, 3.26835, 1.11 ) }
    dend_43 { pt3dadd( -7.58926, 11.4831, 3.49085, 0.83 ) }
    dend_43 { pt3dadd( -9.21389, 12.6994, 3.69021, 0.83 ) }
    dend_43 { pt3dadd( -10.1758, 13.3929, 3.79945, 1.11 ) }
    dend_43 { pt3dadd( -13.1881, 15.5602, 4.14957, 1.11 ) }
    dend_43 { pt3dadd( -18.5758, 19.2706, 4.76849, 0.83 ) }
    dend_43 { pt3dadd( -20.5168, 20.5564, 4.97287, 0.83 ) }
    dend_43 { pt3dadd( -22.0539, 21.5443, 5.09982, 0.83 ) }
    dend_43 { pt3dadd( -23.5528, 22.5234, 5.20971, 0.83 ) }
    dend_43 { pt3dadd( -24.7729, 23.3304, 5.26899, 0.55 ) }
    dend_43 { pt3dadd( -25.69, 23.8768, 5.32917, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.31578, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.3138, 5.96941, -6.14008, 0.55 ) }
    dend_28 { pt3dadd( 6.57085, 6.44545, -6.64412, 0.55 ) }
    dend_28 { pt3dadd( 7.88054, 6.56562, -7.31107, 0.83 ) }
    dend_28 { pt3dadd( 9.95338, 6.6935, -8.54999, 0.55 ) }
    dend_28 { pt3dadd( 10.9539, 6.75524, -9.14803, 1.38 ) }
    dend_28 { pt3dadd( 13.4142, 6.90702, -10.6185, 0.55 ) }
    dend_28 { pt3dadd( 14.462, 6.85563, -11.3201, 0.83 ) }
    dend_28 { pt3dadd( 19.8823, 5.91299, -15.2622, 0.55 ) }
    dend_28 { pt3dadd( 20.4067, 5.78623, -15.6959, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.03197, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.684043, -10.2131, 3.23002, 1.11 ) }
    dend_1 { pt3dadd( -0.732224, -14.3579, 4.754, 1.11 ) }
    dend_1 { pt3dadd( -0.751846, -16.0459, 5.37467, 0.83 ) }
    dend_1 { pt3dadd( -0.777915, -18.2885, 6.19925, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.41203, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 1.01253, 9.62061, -1.42145, 1.11 ) }
    dend_0 { pt3dadd( 1.25275, 11.5665, -1.43784, 1.11 ) }
    dend_0 { pt3dadd( 1.67202, 14.7396, -1.34772, 1.38 ) }
    dend_0 { pt3dadd( 1.69935, 14.916, -1.34052, 1.38 ) }
    dend_0 { pt3dadd( 2.17382, 17.0878, -1.27015, 0.83 ) }
    dend_0 { pt3dadd( 2.8057, 19.3741, -1.10277, 0.83 ) }
    dend_0 { pt3dadd( 3.83536, 21.9309, -0.670976, 0.83 ) }
    dend_0 { pt3dadd( 4.38382, 22.8882, -0.424772, 0.83 ) }
    dend_0 { pt3dadd( 4.89781, 23.5722, -0.204833, 1.11 ) }
    dend_0 { pt3dadd( 6.33801, 25.2232, 0.324436, 0.55 ) }
    dend_0 { pt3dadd( 8.00581, 26.9336, 0.967824, 0.83 ) }
    dend_0 { pt3dadd( 10.0941, 28.6628, 1.63127, 0.55 ) }
    dend_0 { pt3dadd( 11.1245, 29.368, 1.90339, 0.83 ) }
    dend_0 { pt3dadd( 12.5898, 30.3177, 2.37046, 0.55 ) }
    dend_0 { pt3dadd( 14.4383, 31.5272, 3.04503, 0.55 ) }
    dend_0 { pt3dadd( 17.0784, 33.359, 4.13488, 0.55 ) }
    dend_0 { pt3dadd( 19.9954, 35.4607, 5.33941, 0.55 ) }
    dend_0 { pt3dadd( 21.909, 36.8236, 6.32084, 0.55 ) }
    dend_0 { pt3dadd( 24.3428, 38.5464, 7.78875, 0.55 ) }
    dend_0 { pt3dadd( 24.8597, 38.8897, 8.13217, 0.83 ) }
    dend_0 { pt3dadd( 26.2507, 39.7952, 9.1213, 0.55 ) }
    dend_0 { pt3dadd( 27.3935, 40.4964, 9.88113, 0.83 ) }
    dend_0 { pt3dadd( 30.0731, 42.4469, 11.6993, 0.55 ) }
    dend_0 { pt3dadd( 31.0162, 43.1615, 12.1817, 0.83 ) }
    dend_0 { pt3dadd( 31.8297, 43.6785, 12.4534, 0.55 ) }
    dend_0 { pt3dadd( 32.5971, 44.118, 12.6163, 0.83 ) }
    dend_0 { pt3dadd( 34.2382, 44.9177, 12.8304, 0.83 ) }
    dend_0 { pt3dadd( 36.3592, 46.0149, 12.9499, 0.83 ) }
    dend_0 { pt3dadd( 37.6262, 46.7508, 12.9013, 0.55 ) }
    dend_0 { pt3dadd( 38.6006, 47.3974, 12.8688, 0.55 ) }
    dend_0 { pt3dadd( 41.142, 49.066, 12.75, 0.83 ) }
    dend_0 { pt3dadd( 42.764, 50.1365, 12.6147, 0.55 ) }
    dend_0 { pt3dadd( 45.1926, 51.7002, 12.3198, 0.55 ) }
    dend_0 { pt3dadd( 47.3812, 52.9986, 11.9693, 0.55 ) }
    dend_0 { pt3dadd( 49.3178, 54.0918, 11.6074, 0.55 ) }
    dend_0 { pt3dadd( 51.7227, 55.3613, 11.0472, 0.55 ) }
    dend_0 { pt3dadd( 53.1641, 55.9619, 10.66, 0.55 ) }
    dend_0 { pt3dadd( 54.1042, 56.2886, 10.2831, 0.55 ) }
    dend_0 { pt3dadd( 55.3004, 56.4923, 9.67741, 0.55 ) }
    dend_0 { pt3dadd( 57.0117, 56.4908, 8.62163, 0.55 ) }
    dend_0 { pt3dadd( 58.0524, 56.3408, 7.91887, 0.55 ) }
    dend_0 { pt3dadd( 59.6082, 56.0718, 7.0108, 0.55 ) }
    dend_0 { pt3dadd( 62.6741, 55.6576, 5.56905, 0.55 ) }
    dend_0 { pt3dadd( 65.148, 55.4478, 4.61768, 0.55 ) }
    dend_0 { pt3dadd( 67.8324, 55.3521, 3.76917, 0.55 ) }
    dend_0 { pt3dadd( 69.6027, 55.3477, 3.36076, 0.55 ) }
    dend_0 { pt3dadd( 74.3303, 55.7424, 2.59307, 0.55 ) }
    dend_0 { pt3dadd( 77.2087, 56.1793, 2.33761, 0.55 ) }
    dend_0 { pt3dadd( 79.4381, 56.6353, 2.33159, 0.55 ) }
    dend_0 { pt3dadd( 80.824, 57.1158, 2.37445, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 82.4433, 57.8656, 2.41697, 0.55 ) }
    dend_0 { pt3dadd( 85.1343, 59.3835, 2.27726, 0.55 ) }
    dend_0 { pt3dadd( 85.7286, 59.7531, 2.17002, 0.55 ) }
    dend_0 { pt3dadd( 87.3936, 60.735, 1.75968, 0.55 ) }
    dend_0 { pt3dadd( 88.9345, 61.7995, 1.37697, 0.83 ) }
    dend_0 { pt3dadd( 89.7722, 62.3914, 1.1557, 0.55 ) }
    dend_0 { pt3dadd( 91.0228, 63.4222, 0.777686, 0.83 ) }
    dend_0 { pt3dadd( 98.1446, 68.8964, 0.411211, 0.83 ) }
    dend_0 { pt3dadd( 104.33, 75.3324, -0.334407, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -25.69, 23.8768, 5.32917, 0.55 ) }
    dend_55 { pt3dadd( -26.9764, 24.9118, 4.47247, 0.55 ) }
    dend_55 { pt3dadd( -28.3752, 26.0373, 3.54089, 0.55 ) }
    dend_55 { pt3dadd( -30.0633, 27.3955, 2.41668, 0.55 ) }
    dend_55 { pt3dadd( -31.4572, 28.517, 1.48838, 0.83 ) }
    dend_55 { pt3dadd( -32.6253, 29.4568, 0.710477, 0.55 ) }
    dend_55 { pt3dadd( -34.7934, 31.2012, -0.733433, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.69, 23.8768, 5.32917, 0.55 ) }
    dend_44 { pt3dadd( -27.6417, 24.2123, 5.13528, 0.55 ) }
    dend_44 { pt3dadd( -29.7133, 24.5101, 5.13668, 0.55 ) }
    dend_44 { pt3dadd( -32.0609, 24.8451, 5.19571, 0.55 ) }
    dend_44 { pt3dadd( -35.4532, 25.3006, 5.59463, 0.55 ) }
    dend_44 { pt3dadd( -38.2865, 25.6049, 6.13295, 0.55 ) }
    dend_44 { pt3dadd( -41.2548, 25.8816, 6.8264, 0.55 ) }
    dend_44 { pt3dadd( -44.1152, 25.9642, 7.81307, 0.55 ) }
    dend_44 { pt3dadd( -46.5702, 25.8035, 8.90922, 0.55 ) }
    dend_44 { pt3dadd( -49.6197, 25.3975, 10.6136, 0.55 ) }
    dend_44 { pt3dadd( -50.9404, 25.1279, 11.5457, 0.55 ) }
    dend_44 { pt3dadd( -52.3654, 24.8228, 12.6162, 0.55 ) }
    dend_44 { pt3dadd( -54.8804, 24.0918, 14.3909, 0.55 ) }
    dend_44 { pt3dadd( -56.2242, 23.7027, 15.1187, 0.55 ) }
    dend_44 { pt3dadd( -57.6316, 23.252, 15.8734, 0.55 ) }
    dend_44 { pt3dadd( -59.3097, 22.7337, 16.5968, 0.55 ) }
    dend_44 { pt3dadd( -61.1349, 22.2072, 17.3312, 0.55 ) }
    dend_44 { pt3dadd( -63.7411, 21.4483, 18.3215, 0.55 ) }
    dend_44 { pt3dadd( -67.2314, 20.6591, 19.3211, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.4067, 5.78623, -15.6959, 0.55 ) }
    dend_34 { pt3dadd( 24.9244, 6.95861, -16.659, 0.55 ) }
    dend_34 { pt3dadd( 27.5288, 7.49069, -17.5851, 0.55 ) }
    dend_34 { pt3dadd( 30.0996, 7.90331, -18.5388, 0.55 ) }
    dend_34 { pt3dadd( 31.8563, 8.11648, -19.1913, 0.55 ) }
    dend_34 { pt3dadd( 34.424, 8.36931, -20.1263, 0.55 ) }
    dend_34 { pt3dadd( 39.7509, 8.7957, -22.235, 0.55 ) }
    dend_34 { pt3dadd( 45.7941, 9.24881, -25.0327, 0.55 ) }
    dend_34 { pt3dadd( 48.725, 9.29256, -26.597, 0.55 ) }
    dend_34 { pt3dadd( 50.2949, 9.27987, -27.5391, 0.55 ) }
    dend_34 { pt3dadd( 52.0162, 9.27535, -28.6422, 0.55 ) }
    dend_34 { pt3dadd( 55.088, 9.18297, -30.6002, 0.55 ) }
    dend_34 { pt3dadd( 56.2038, 9.08578, -31.3499, 0.55 ) }
    dend_34 { pt3dadd( 60.9269, 8.79634, -34.8883, 0.55 ) }
    dend_34 { pt3dadd( 64.2699, 8.64823, -37.6408, 0.55 ) }
    dend_34 { pt3dadd( 66.1945, 8.6006, -39.278, 0.55 ) }
    dend_34 { pt3dadd( 68.1141, 8.53645, -40.9098, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 20.4067, 5.78623, -15.6959, 0.83 ) }
    dend_29 { pt3dadd( 21.6862, 6.90823, -15.8854, 0.83 ) }
    dend_29 { pt3dadd( 22.4207, 7.53995, -16.0309, 0.55 ) }
    dend_29 { pt3dadd( 23.5056, 8.47093, -16.3544, 0.83 ) }
    dend_29 { pt3dadd( 24.2332, 9.11094, -16.6015, 0.55 ) }
    dend_29 { pt3dadd( 25.2297, 10.0262, -16.9332, 0.83 ) }
    dend_29 { pt3dadd( 26.419, 11.1638, -17.2887, 0.55 ) }
    dend_29 { pt3dadd( 27.0244, 11.6949, -17.4274, 0.55 ) }
    dend_29 { pt3dadd( 28.4477, 12.7406, -17.5845, 0.83 ) }
    dend_29 { pt3dadd( 29.7562, 13.5705, -17.5013, 0.55 ) }
    dend_29 { pt3dadd( 30.4828, 14.0445, -17.3769, 0.83 ) }
    dend_29 { pt3dadd( 31.5578, 14.8104, -17.0718, 0.55 ) }
    dend_29 { pt3dadd( 33.0778, 15.9918, -16.4225, 0.55 ) }
    dend_29 { pt3dadd( 35.2012, 17.5443, -15.3691, 0.55 ) }
    dend_29 { pt3dadd( 37.2278, 18.9842, -14.1883, 0.55 ) }
    dend_29 { pt3dadd( 38.8342, 20.1144, -13.216, 0.55 ) }
    dend_29 { pt3dadd( 41.4786, 21.9945, -11.6008, 0.55 ) }
    dend_29 { pt3dadd( 43.3977, 23.4408, -10.3868, 0.55 ) }
    dend_29 { pt3dadd( 44.5319, 24.4299, -9.63248, 0.55 ) }
    dend_29 { pt3dadd( 46.5724, 26.4923, -8.28124, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.777915, -18.2885, 6.19925, 0.83 ) }
    dend_11 { pt3dadd( -0.594212, -21.1167, 6.10743, 0.83 ) }
    dend_11 { pt3dadd( -0.415234, -23.8722, 6.01798, 0.83 ) }
    dend_11 { pt3dadd( -0.215405, -26.9487, 5.9181, 0.83 ) }
    dend_11 { pt3dadd( -0.111055, -28.5552, 5.86594, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.777915, -18.2885, 6.19925, 0.55 ) }
    dend_2 { pt3dadd( -0.176922, -19.9141, 7.36456, 0.55 ) }
    dend_2 { pt3dadd( 0.353655, -21.9054, 8.87965, 0.55 ) }
    dend_2 { pt3dadd( 0.637621, -24.5166, 10.9705, 0.55 ) }
    dend_2 { pt3dadd( 0.674546, -25.5319, 11.8111, 0.83 ) }
    dend_2 { pt3dadd( 0.522133, -28.1237, 14.2602, 0.55 ) }
    dend_2 { pt3dadd( 0.330132, -29.4625, 15.5507, 0.55 ) }
    dend_2 { pt3dadd( -0.100696, -32.0663, 18.1738, 0.83 ) }
    dend_2 { pt3dadd( -0.536303, -34.0002, 20.2476, 0.55 ) }
    dend_2 { pt3dadd( -1.0417, -35.5959, 21.9322, 0.55 ) }
    dend_2 { pt3dadd( -2.06871, -38.6183, 25.0657, 0.55 ) }
    dend_2 { pt3dadd( -2.88457, -41.0272, 27.5342, 0.55 ) }
    dend_2 { pt3dadd( -3.49838, -42.9583, 29.5411, 0.55 ) }
    dend_2 { pt3dadd( -4.03326, -45.0081, 31.6058, 0.28 ) }
    dend_2 { pt3dadd( -4.18186, -45.8617, 32.4324, 0.55 ) }
    dend_2 { pt3dadd( -4.41358, -47.4381, 33.8671, 0.28 ) }
    dend_2 { pt3dadd( -4.42791, -49.8979, 35.7143, 0.55 ) }
    dend_2 { pt3dadd( -6.51041, -58.0884, 42.3064, 0.55 ) }
    dend_2 { pt3dadd( -8.8164, -65.6574, 49.5712, 0.55 ) }
    dend_2 { pt3dadd( -10.6464, -71.8779, 58.1912, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -34.7934, 31.2012, -0.733433, 0.55 ) }
    dend_61 { pt3dadd( -37.4053, 31.1416, -0.310345, 0.55 ) }
    dend_61 { pt3dadd( -38.5404, 31.022, -0.0470096, 0.83 ) }
    dend_61 { pt3dadd( -39.9143, 30.7719, 0.372485, 0.55 ) }
    dend_61 { pt3dadd( -40.9911, 30.5494, 0.763017, 0.83 ) }
    dend_61 { pt3dadd( -43.8098, 30.0481, 1.79977, 0.55 ) }
    dend_61 { pt3dadd( -44.8799, 29.8687, 2.20389, 0.28 ) }
    dend_61 { pt3dadd( -46.7041, 29.5366, 2.99129, 0.55 ) }
    dend_61 { pt3dadd( -49.1494, 29.105, 4.04421, 0.55 ) }
    dend_61 { pt3dadd( -50.9844, 28.804, 4.78423, 0.55 ) }
    dend_61 { pt3dadd( -53.4155, 28.4259, 5.71728, 0.28 ) }
    dend_61 { pt3dadd( -54.0276, 28.3552, 5.9068, 0.55 ) }
    dend_61 { pt3dadd( -55.2821, 28.2356, 6.26861, 0.28 ) }
    dend_61 { pt3dadd( -56.1132, 28.1976, 6.46203, 0.55 ) }
    dend_61 { pt3dadd( -57.7685, 28.1603, 6.74072, 0.28 ) }
    dend_61 { pt3dadd( -58.7238, 28.1127, 6.84659, 0.55 ) }
    dend_61 { pt3dadd( -60.4084, 27.9232, 7.00173, 0.28 ) }
    dend_61 { pt3dadd( -61.528, 27.8037, 7.07177, 0.55 ) }
    dend_61 { pt3dadd( -69.2145, 25.5511, 9.74448, 0.55 ) }
    dend_61 { pt3dadd( -76.4832, 22.3839, 12.6314, 0.55 ) }
    dend_61 { pt3dadd( -83.4937, 18.5047, 15.2477, 0.55 ) }
    dend_61 { pt3dadd( -90.2923, 13.9247, 17.1368, 0.55 ) }
    dend_61 { pt3dadd( -96.532, 9.2081, 20.2492, 0.55 ) }
    dend_61 { pt3dadd( -103.262, 4.95109, 22.9954, 0.55 ) }
    dend_61 { pt3dadd( -110.253, 1.79776, 26.5182, 0.55 ) }
    dend_61 { pt3dadd( -117.145, -1.89867, 29.6749, 0.55 ) }
    dend_61 { pt3dadd( -123.999, -5.21098, 33.3175, 0.55 ) }
    dend_61 { pt3dadd( -130.565, -8.7643, 37.2499, 0.55 ) }
    dend_61 { pt3dadd( -136.39, -13.3305, 41.278, 0.55 ) }
    dend_61 { pt3dadd( -142.379, -17.2629, 45.7311, 0.55 ) }
    dend_61 { pt3dadd( -148.337, -21.8162, 49.573, 0.55 ) }
    dend_61 { pt3dadd( -153.473, -26.91, 53.8816, 0.55 ) }
    dend_61 { pt3dadd( -157.515, -31.8624, 59.3739, 0.55 ) }
    dend_61 { pt3dadd( -161.246, -37.9597, 63.785, 0.55 ) }
    dend_61 { pt3dadd( -163.859, -44.3367, 68.5799, 0.55 ) }
    dend_61 { pt3dadd( -166.956, -50.4155, 73.487, 0.55 ) }
    dend_61 { pt3dadd( -170.964, -55.915, 78.4389, 0.55 ) }
    dend_61 { pt3dadd( -176.608, -60.0093, 83.1863, 0.55 ) }
    dend_61 { pt3dadd( -181.538, -65.0155, 87.8314, 0.55 ) }
    dend_61 { pt3dadd( -185.289, -69.2067, 94.1243, 0.55 ) }
    dend_61 { pt3dadd( -190.254, -72.6283, 100.035, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -34.7934, 31.2012, -0.733433, 0.55 ) }
    dend_56 { pt3dadd( -35.6102, 32.6169, -2.57218, 0.55 ) }
    dend_56 { pt3dadd( -36.0256, 34.1356, -4.44603, 0.55 ) }
    dend_56 { pt3dadd( -36.3321, 35.8514, -6.33077, 0.55 ) }
    dend_56 { pt3dadd( -36.5241, 36.9258, -7.51096, 0.55 ) }
    dend_56 { pt3dadd( -36.8743, 38.8856, -9.66378, 0.83 ) }
    dend_56 { pt3dadd( -37.1304, 40.3194, -11.2388, 0.55 ) }
    dend_56 { pt3dadd( -37.2244, 42.3218, -13.4824, 0.83 ) }
    dend_56 { pt3dadd( -37.088, 43.5386, -14.6287, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -67.2314, 20.6591, 19.3211, 0.28 ) }
    dend_48 { pt3dadd( -68.1384, 18.7655, 19.4834, 0.28 ) }
    dend_48 { pt3dadd( -68.5836, 17.9332, 19.4927, 0.28 ) }
    dend_48 { pt3dadd( -69.1621, 16.7499, 19.4605, 0.55 ) }
    dend_48 { pt3dadd( -69.6355, 15.7135, 19.4373, 0.28 ) }
    dend_48 { pt3dadd( -70.3298, 14.1405, 19.4179, 0.55 ) }
    dend_48 { pt3dadd( -72.2433, 9.54071, 19.4198, 0.28 ) }
    dend_48 { pt3dadd( -72.8738, 7.90205, 19.2955, 0.55 ) }
    dend_48 { pt3dadd( -73.8352, 5.36084, 19.0242, 0.28 ) }
    dend_48 { pt3dadd( -74.3914, 3.82739, 18.7972, 0.55 ) }
    dend_48 { pt3dadd( -74.778, 2.76507, 18.6179, 0.28 ) }
    dend_48 { pt3dadd( -75.2174, 1.54813, 18.4207, 0.55 ) }
    dend_48 { pt3dadd( -76.524, -2.48305, 17.838, 0.28 ) }
    dend_48 { pt3dadd( -76.9405, -3.71279, 17.6244, 0.55 ) }
    dend_48 { pt3dadd( -77.6949, -5.64068, 17.1324, 0.28 ) }
    dend_48 { pt3dadd( -78.3331, -6.90603, 16.7363, 0.28 ) }
    dend_48 { pt3dadd( -78.9129, -7.7662, 16.4581, 0.55 ) }
    dend_48 { pt3dadd( -80.9349, -10.1892, 15.7686, 0.28 ) }
    dend_48 { pt3dadd( -81.8752, -11.1728, 15.5175, 0.55 ) }
    dend_48 { pt3dadd( -84.1897, -13.45, 14.8421, 0.28 ) }
    dend_48 { pt3dadd( -86.5121, -15.4903, 14.2264, 0.28 ) }
    dend_48 { pt3dadd( -89.0486, -17.4741, 13.583, 0.28 ) }
    dend_48 { pt3dadd( -90.2119, -18.2345, 13.3519, 0.55 ) }
    dend_48 { pt3dadd( -95.6082, -25.8085, 12.103, 0.55 ) }
    dend_48 { pt3dadd( -101.465, -33.1196, 12.6277, 0.55 ) }
    dend_48 { pt3dadd( -107.353, -40.382, 11.7114, 0.55 ) }
    dend_48 { pt3dadd( -113.514, -47.2681, 9.91842, 0.55 ) }
    dend_48 { pt3dadd( -119.879, -53.6852, 7.2202, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -67.2314, 20.6591, 19.3211, 0.55 ) }
    dend_45 { pt3dadd( -67.9963, 20.6017, 19.4348, 0.55 ) }
    dend_45 { pt3dadd( -70.1496, 20.4395, 20.0365, 0.55 ) }
    dend_45 { pt3dadd( -70.9584, 20.3577, 20.3059, 0.55 ) }
    dend_45 { pt3dadd( -72.8603, 20.1087, 20.9685, 0.55 ) }
    dend_45 { pt3dadd( -75.7872, 19.7562, 21.8453, 0.55 ) }
    dend_45 { pt3dadd( -77.3082, 19.6193, 22.2741, 0.28 ) }
    dend_45 { pt3dadd( -79.6764, 19.356, 22.8943, 0.55 ) }
    dend_45 { pt3dadd( -81.4365, 19.1256, 23.2911, 0.55 ) }
    dend_45 { pt3dadd( -82.1797, 19.0235, 23.4603, 0.28 ) }
    dend_45 { pt3dadd( -86.6381, 18.4089, 24.4689, 0.55 ) }
    dend_45 { pt3dadd( -88.7248, 18.0287, 24.8118, 0.28 ) }
    dend_45 { pt3dadd( -91.542, 17.507, 25.1087, 0.28 ) }
    dend_45 { pt3dadd( -93.9726, 17.0933, 25.2223, 0.55 ) }
    dend_45 { pt3dadd( -103.412, 16.8158, 27.7367, 0.55 ) }
    dend_45 { pt3dadd( -112.513, 16.2873, 31.258, 0.55 ) }
    dend_45 { pt3dadd( -121.078, 14.7781, 35.7055, 0.55 ) }
    dend_45 { pt3dadd( -129.36, 14.8585, 40.8928, 0.55 ) }
    dend_45 { pt3dadd( -136.399, 14.5966, 47.6686, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -141.998, 14.8347, 55.6735, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 68.1141, 8.53645, -40.9098, 0.55 ) }
    dend_42 { pt3dadd( 72.9361, 10.1668, -44.626, 0.55 ) }
    dend_42 { pt3dadd( 74.4505, 10.6378, -45.9068, 0.55 ) }
    dend_42 { pt3dadd( 76.3389, 11.1634, -47.4998, 0.55 ) }
    dend_42 { pt3dadd( 79.7579, 12.1284, -50.5946, 0.55 ) }
    dend_42 { pt3dadd( 83.307, 13.012, -53.9404, 0.55 ) }
    dend_42 { pt3dadd( 85.0264, 13.3008, -55.5599, 0.83 ) }
    dend_42 { pt3dadd( 86.4276, 13.4648, -57.0197, 0.55 ) }
    dend_42 { pt3dadd( 87.4627, 13.5235, -58.2365, 0.83 ) }
    dend_42 { pt3dadd( 89.9098, 13.3506, -61.4183, 0.55 ) }
    dend_42 { pt3dadd( 91.9005, 13.0181, -64.0922, 0.55 ) }
    dend_42 { pt3dadd( 94.1908, 12.5953, -67.0504, 0.55 ) }
    dend_42 { pt3dadd( 96.749, 12.2118, -70.384, 0.55 ) }
    dend_42 { pt3dadd( 98.4585, 11.9217, -72.6739, 0.55 ) }
    dend_42 { pt3dadd( 100.386, 11.6014, -75.3241, 0.55 ) }
    dend_42 { pt3dadd( 102.056, 11.4111, -77.7264, 0.55 ) }
    dend_42 { pt3dadd( 103.115, 11.4213, -79.3664, 0.55 ) }
    dend_42 { pt3dadd( 104.424, 11.5974, -82.6198, 0.55 ) }
    dend_42 { pt3dadd( 105.121, 11.6618, -84.6612, 0.55 ) }
    dend_42 { pt3dadd( 105.673, 11.6801, -87.3795, 0.55 ) }
    dend_42 { pt3dadd( 106.378, 11.6074, -91.9903, 0.55 ) }
    dend_42 { pt3dadd( 106.513, 11.557, -93.0363, 0.28 ) }
    dend_42 { pt3dadd( 108.28, 10.7976, -105.783, 0.28 ) }
    dend_42 { pt3dadd( 108.908, 10.5858, -109.525, 0.83 ) }
    dend_42 { pt3dadd( 111.428, 9.5795, -122.851, 0.83 ) }
    dend_42 { pt3dadd( 112.728, 8.86689, -129.092, 0.83 ) }
    dend_42 { pt3dadd( 113.367, 8.47008, -131.641, 0.55 ) }
    dend_42 { pt3dadd( 114.126, 8.05693, -134.134, 0.55 ) }
    dend_42 { pt3dadd( 116.348, 7.09352, -138.806, 0.55 ) }
    dend_42 { pt3dadd( 118.778, 6.15099, -142.938, 0.28 ) }
    dend_42 { pt3dadd( 119.553, 5.84168, -143.24, 0.55 ) }
    dend_42 { pt3dadd( 121.287, 5.15564, -143.245, 0.28 ) }
    dend_42 { pt3dadd( 122.374, 4.7754, -143.074, 0.55 ) }
    dend_42 { pt3dadd( 123.506, 4.34485, -142.8, 0.28 ) }
    dend_42 { pt3dadd( 124.875, 3.88224, -142.396, 0.55 ) }
    dend_42 { pt3dadd( 126.933, 3.33916, -141.99, 0.28 ) }
    dend_42 { pt3dadd( 128.577, 2.86459, -141.728, 0.55 ) }
    dend_42 { pt3dadd( 130.409, 2.48606, -141.56, 0.28 ) }
    dend_42 { pt3dadd( 132.897, 2.0233, -141.551, 0.55 ) }
    dend_42 { pt3dadd( 135.691, 1.60015, -141.696, 0.55 ) }
    dend_42 { pt3dadd( 138.149, 1.28853, -141.98, 0.28 ) }
    dend_42 { pt3dadd( 141.55, 0.924491, -142.555, 0.55 ) }
    dend_42 { pt3dadd( 147.439, 0.575981, -144.143, 0.55 ) }
    dend_42 { pt3dadd( 150.051, 0.614324, -145.131, 0.55 ) }
    dend_42 { pt3dadd( 151.176, 0.69942, -145.667, 0.83 ) }
    dend_42 { pt3dadd( 153.32, 0.91482, -146.879, 0.55 ) }
    dend_42 { pt3dadd( 154.812, 1.14064, -147.801, 0.83 ) }
    dend_42 { pt3dadd( 158.84, 1.85856, -150.307, 0.55 ) }
    dend_42 { pt3dadd( 161.278, 2.14733, -151.932, 0.28 ) }
    dend_42 { pt3dadd( 162.299, 2.18459, -152.514, 0.55 ) }
    dend_42 { pt3dadd( 165.069, 1.97433, -153.847, 0.28 ) }
    dend_42 { pt3dadd( 166.03, 1.80062, -154.267, 0.55 ) }
    dend_42 { pt3dadd( 168.0, 1.25863, -154.844, 0.28 ) }
    dend_42 { pt3dadd( 169.988, 0.443795, -155.116, 0.55 ) }
    dend_42 { pt3dadd( 173.99, -1.56136, -154.98, 0.28 ) }
    dend_42 { pt3dadd( 175.829, -2.60769, -154.73, 0.55 ) }
    dend_42 { pt3dadd( 178.547, -4.35164, -154.237, 0.28 ) }
    dend_42 { pt3dadd( 181.985, -6.56679, -153.483, 0.55 ) }
    dend_42 { pt3dadd( 184.477, -8.14244, -152.89, 0.55 ) }
    dend_42 { pt3dadd( 188.811, -10.7498, -151.762, 0.28 ) }
    dend_42 { pt3dadd( 190.598, -11.7072, -151.434, 0.55 ) }
    dend_42 { pt3dadd( 193.693, -13.1129, -151.185, 0.28 ) }
    dend_42 { pt3dadd( 196.803, -14.2351, -151.11, 0.55 ) }
    dend_42 { pt3dadd( 198.529, -14.6122, -151.274, 0.28 ) }
    dend_42 { pt3dadd( 200.111, -14.724, -151.505, 0.55 ) }
    dend_42 { pt3dadd( 204.603, -14.7008, -152.525, 0.28 ) }
    dend_42 { pt3dadd( 207.837, -14.4618, -153.263, 0.28 ) }
    dend_42 { pt3dadd( 210.673, -14.0515, -153.906, 0.55 ) }
    dend_42 { pt3dadd( 213.811, -13.4857, -154.755, 0.28 ) }
    dend_42 { pt3dadd( 214.608, -13.3016, -154.934, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 68.1141, 8.53645, -40.9098, 0.55 ) }
    dend_35 { pt3dadd( 68.4241, 7.07082, -42.4376, 0.55 ) }
    dend_35 { pt3dadd( 68.5547, 5.81458, -43.6237, 0.28 ) }
    dend_35 { pt3dadd( 68.6741, 4.63695, -44.5964, 0.55 ) }
    dend_35 { pt3dadd( 69.0755, 2.13761, -46.6896, 0.28 ) }
    dend_35 { pt3dadd( 69.0956, 1.98655, -46.8464, 0.55 ) }
    dend_35 { pt3dadd( 69.226, 1.21164, -47.7449, 0.28 ) }
    dend_35 { pt3dadd( 69.2603, 0.60418, -48.6084, 0.55 ) }
    dend_35 { pt3dadd( 69.2482, -0.00516434, -49.6004, 0.28 ) }
    dend_35 { pt3dadd( 69.1982, -0.82213, -51.0035, 0.55 ) }
    dend_35 { pt3dadd( 69.0714, -2.88581, -54.4742, 0.55 ) }
    dend_35 { pt3dadd( 68.9258, -4.75424, -57.6814, 0.55 ) }
    dend_35 { pt3dadd( 68.7889, -6.24565, -60.247, 0.55 ) }
    dend_35 { pt3dadd( 68.6177, -7.71763, -62.7324, 0.55 ) }
    dend_35 { pt3dadd( 68.572, -8.103, -63.3526, 0.28 ) }
    dend_35 { pt3dadd( 68.5395, -8.52645, -63.9701, 0.55 ) }
    dend_35 { pt3dadd( 68.5675, -9.13431, -64.7577, 0.28 ) }
    dend_35 { pt3dadd( 68.7596, -10.2626, -66.05, 0.55 ) }
    dend_35 { pt3dadd( 69.3574, -12.5352, -68.1219, 0.55 ) }
    dend_35 { pt3dadd( 69.6925, -13.7876, -69.1117, 0.28 ) }
    dend_35 { pt3dadd( 69.9491, -15.0405, -70.1769, 0.55 ) }
    dend_35 { pt3dadd( 70.1599, -16.7678, -71.7382, 0.28 ) }
    dend_35 { pt3dadd( 70.2255, -18.146, -73.0322, 0.55 ) }
    dend_35 { pt3dadd( 70.2197, -20.1986, -74.968, 0.28 ) }
    dend_35 { pt3dadd( 70.2329, -22.3416, -76.8953, 0.55 ) }
    dend_35 { pt3dadd( 70.2033, -25.4424, -79.7233, 0.28 ) }
    dend_35 { pt3dadd( 70.1449, -27.0909, -81.2356, 0.55 ) }
    dend_35 { pt3dadd( 70.0524, -28.7642, -82.8275, 0.28 ) }
    dend_35 { pt3dadd( 69.9514, -30.2113, -84.3355, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 69.8985, -31.9835, -86.4099, 0.55 ) }
    dend_35 { pt3dadd( 69.9906, -33.6477, -88.2879, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 46.5724, 26.4923, -8.28124, 0.55 ) }
    dend_31 { pt3dadd( 49.4059, 26.7484, -7.59695, 0.55 ) }
    dend_31 { pt3dadd( 51.4904, 26.8271, -7.28064, 0.55 ) }
    dend_31 { pt3dadd( 56.0694, 26.9107, -6.81477, 0.55 ) }
    dend_31 { pt3dadd( 58.1407, 26.8783, -6.77863, 0.55 ) }
    dend_31 { pt3dadd( 60.3966, 26.8697, -6.85901, 0.55 ) }
    dend_31 { pt3dadd( 63.4231, 26.8737, -7.18531, 0.55 ) }
    dend_31 { pt3dadd( 66.6375, 26.7492, -7.81267, 0.55 ) }
    dend_31 { pt3dadd( 68.3332, 26.6322, -8.32595, 0.55 ) }
    dend_31 { pt3dadd( 71.7917, 26.3183, -9.82452, 0.55 ) }
    dend_31 { pt3dadd( 73.3837, 26.1779, -10.5657, 0.55 ) }
    dend_31 { pt3dadd( 77.1276, 25.7669, -12.3846, 0.55 ) }
    dend_31 { pt3dadd( 79.6787, 25.3968, -13.5804, 0.55 ) }
    dend_31 { pt3dadd( 81.556, 25.127, -14.3766, 0.83 ) }
    dend_31 { pt3dadd( 84.5718, 24.5979, -15.5989, 0.55 ) }
    dend_31 { pt3dadd( 87.5449, 23.9648, -16.664, 0.83 ) }
    dend_31 { pt3dadd( 90.0832, 23.3351, -17.4645, 0.55 ) }
    dend_31 { pt3dadd( 92.3346, 22.8234, -18.0701, 0.55 ) }
    dend_31 { pt3dadd( 93.6048, 22.5948, -18.356, 0.83 ) }
    dend_31 { pt3dadd( 96.5653, 22.0943, -18.8755, 0.28 ) }
    dend_31 { pt3dadd( 98.0263, 21.9166, -19.0537, 0.28 ) }
    dend_31 { pt3dadd( 99.455, 21.6492, -19.2828, 0.28 ) }
    dend_31 { pt3dadd( 100.994, 21.3973, -19.5434, 0.28 ) }
    dend_31 { pt3dadd( 103.45, 21.029, -20.0162, 0.28 ) }
    dend_31 { pt3dadd( 104.436, 20.8968, -20.1801, 0.55 ) }
    dend_31 { pt3dadd( 106.784, 20.6398, -20.3535, 0.55 ) }
    dend_31 { pt3dadd( 111.013, 20.1732, -20.4537, 0.55 ) }
    dend_31 { pt3dadd( 112.187, 20.0233, -20.4271, 0.55 ) }
    dend_31 { pt3dadd( 113.24, 19.8648, -20.3547, 0.83 ) }
    dend_31 { pt3dadd( 115.512, 19.6153, -20.0312, 0.55 ) }
    dend_31 { pt3dadd( 117.486, 19.407, -19.72, 0.55 ) }
    dend_31 { pt3dadd( 119.35, 19.2189, -19.4188, 0.55 ) }
    dend_31 { pt3dadd( 120.798, 19.0432, -19.2212, 0.55 ) }
    dend_31 { pt3dadd( 123.12, 18.5973, -18.9918, 0.55 ) }
    dend_31 { pt3dadd( 125.896, 17.8252, -18.83, 0.55 ) }
    dend_31 { pt3dadd( 130.287, 16.1356, -18.7919, 0.55 ) }
    dend_31 { pt3dadd( 132.75, 14.8661, -18.8619, 0.55 ) }
    dend_31 { pt3dadd( 134.938, 13.4284, -18.9687, 0.28 ) }
    dend_31 { pt3dadd( 135.611, 12.8708, -19.0146, 0.55 ) }
    dend_31 { pt3dadd( 137.157, 11.2514, -19.1229, 0.28 ) }
    dend_31 { pt3dadd( 138.559, 9.38268, -19.2001, 0.55 ) }
    dend_31 { pt3dadd( 139.971, 7.02477, -19.09, 0.55 ) }
    dend_31 { pt3dadd( 140.916, 5.49175, -18.9376, 0.28 ) }
    dend_31 { pt3dadd( 141.258, 4.95665, -18.8547, 0.55 ) }
    dend_31 { pt3dadd( 142.135, 3.63587, -18.6287, 0.28 ) }
    dend_31 { pt3dadd( 143.317, 1.93302, -18.2885, 0.55 ) }
    dend_31 { pt3dadd( 146.34, -2.11827, -17.3547, 0.55 ) }
    dend_31 { pt3dadd( 147.903, -4.14431, -16.8354, 0.55 ) }
    dend_31 { pt3dadd( 149.349, -5.99514, -16.3403, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 46.5724, 26.4923, -8.28124, 0.55 ) }
    dend_30 { pt3dadd( 48.9819, 28.7346, -5.9912, 0.55 ) }
    dend_30 { pt3dadd( 49.7689, 29.4262, -5.30373, 0.55 ) }
    dend_30 { pt3dadd( 52.7749, 31.7783, -2.79996, 0.55 ) }
    dend_30 { pt3dadd( 56.1003, 34.5018, 0.0111005, 0.55 ) }
    dend_30 { pt3dadd( 60.3293, 38.0449, 3.74556, 0.55 ) }
    dend_30 { pt3dadd( 61.4995, 39.0207, 4.76752, 0.55 ) }
    dend_30 { pt3dadd( 63.6248, 40.6726, 6.6261, 0.55 ) }
    dend_30 { pt3dadd( 65.9692, 42.4924, 8.53452, 0.55 ) }
    dend_30 { pt3dadd( 68.7146, 44.6219, 10.5741, 0.55 ) }
    dend_30 { pt3dadd( 71.2903, 46.6723, 12.4848, 0.55 ) }
    dend_30 { pt3dadd( 72.7084, 47.8294, 13.4237, 0.55 ) }
    dend_30 { pt3dadd( 74.3629, 49.237, 14.495, 0.55 ) }
    dend_30 { pt3dadd( 76.4068, 51.0209, 15.7452, 0.83 ) }
    dend_30 { pt3dadd( 79.8636, 53.7436, 17.412, 0.55 ) }
    dend_30 { pt3dadd( 82.2056, 55.3953, 18.4499, 0.83 ) }
    dend_30 { pt3dadd( 85.5226, 57.4809, 19.857, 0.55 ) }
    dend_30 { pt3dadd( 86.5575, 58.0593, 20.3043, 0.55 ) }
    dend_30 { pt3dadd( 89.8213, 59.6658, 21.7097, 0.55 ) }
    dend_30 { pt3dadd( 95.7995, 62.0895, 24.1787, 0.55 ) }
    dend_30 { pt3dadd( 100.255, 63.5896, 26.0145, 0.55 ) }
    dend_30 { pt3dadd( 103.792, 64.6661, 27.6288, 0.55 ) }
    dend_30 { pt3dadd( 107.405, 65.6484, 29.4866, 0.55 ) }
    dend_30 { pt3dadd( 108.169, 65.8382, 29.8912, 0.28 ) }
    dend_30 { pt3dadd( 109.73, 66.165, 30.7392, 0.83 ) }
    dend_30 { pt3dadd( 116.147, 67.44, 34.3023, 0.55 ) }
    dend_30 { pt3dadd( 120.659, 68.2963, 36.711, 0.55 ) }
    dend_30 { pt3dadd( 124.319, 69.1262, 38.7284, 0.55 ) }
    dend_30 { pt3dadd( 126.501, 69.6257, 39.9569, 0.83 ) }
    dend_30 { pt3dadd( 128.214, 70.0432, 40.9145, 0.28 ) }
    dend_30 { pt3dadd( 129.771, 70.4173, 41.768, 0.55 ) }
    dend_30 { pt3dadd( 140.854, 76.8413, 48.5975, 0.55 ) }
    dend_30 { pt3dadd( 153.681, 80.5289, 54.3277, 0.55 ) }
    dend_30 { pt3dadd( 165.967, 85.9682, 59.8347, 0.55 ) }
    dend_30 { pt3dadd( 176.509, 90.5863, 68.6961, 0.55 ) }
    dend_30 { pt3dadd( 186.432, 93.5992, 78.8557, 0.55 ) }
    dend_30 { pt3dadd( 198.69, 93.4327, 86.5774, 0.55 ) }
    dend_30 { pt3dadd( 211.545, 91.0452, 92.7468, 0.55 ) }
    dend_30 { pt3dadd( 225.35, 90.765, 97.1755, 0.55 ) }
    dend_30 { pt3dadd( 238.824, 90.6723, 102.526, 0.55 ) }
    dend_30 { pt3dadd( 252.766, 91.6531, 106.441, 0.55 ) }
    dend_30 { pt3dadd( 266.109, 93.9493, 111.69, 0.55 ) }
    dend_30 { pt3dadd( 278.862, 94.2675, 118.579, 0.55 ) }
    dend_30 { pt3dadd( 291.168, 97.4252, 125.614, 0.55 ) }
    dend_30 { pt3dadd( 302.069, 103.08, 133.368, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.111055, -28.5552, 5.86594, 1.38 ) }
    dend_13 { pt3dadd( 3.48968, -31.4498, 6.10439, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.111055, -28.5552, 5.86594, 0.55 ) }
    dend_12 { pt3dadd( -0.67438, -30.1216, 5.18694, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -1.25489, -32.0916, 4.45958, 0.55 ) }
    dend_12 { pt3dadd( -1.75133, -33.4245, 3.88187, 0.55 ) }
    dend_12 { pt3dadd( -2.07432, -34.5317, 3.3004, 0.55 ) }
    dend_12 { pt3dadd( -2.67041, -36.8306, 1.89775, 0.55 ) }
    dend_12 { pt3dadd( -3.07418, -38.3742, 0.882127, 0.55 ) }
    dend_12 { pt3dadd( -3.39953, -39.7538, -0.0508769, 0.55 ) }
    dend_12 { pt3dadd( -4.26645, -43.1379, -2.46136, 0.55 ) }
    dend_12 { pt3dadd( -5.3517, -47.0796, -5.34987, 0.55 ) }
    dend_12 { pt3dadd( -6.16754, -50.072, -7.62618, 0.55 ) }
    dend_12 { pt3dadd( -6.66119, -52.027, -9.09253, 0.55 ) }
    dend_12 { pt3dadd( -7.21621, -54.3578, -10.7622, 0.55 ) }
    dend_12 { pt3dadd( -7.88498, -57.6476, -12.8248, 0.55 ) }
    dend_12 { pt3dadd( -8.23484, -59.9308, -13.975, 0.55 ) }
    dend_12 { pt3dadd( -8.70941, -63.1739, -15.2392, 0.55 ) }
    dend_12 { pt3dadd( -9.05663, -66.1722, -16.167, 0.55 ) }
    dend_12 { pt3dadd( -9.30884, -69.8545, -17.0248, 0.55 ) }
    dend_12 { pt3dadd( -9.44808, -74.1213, -17.7159, 0.55 ) }
    dend_12 { pt3dadd( -9.39775, -77.3295, -17.9654, 0.55 ) }
    dend_12 { pt3dadd( -9.3745, -78.9124, -17.9394, 0.55 ) }
    dend_12 { pt3dadd( -9.31505, -82.6028, -17.5751, 0.55 ) }
    dend_12 { pt3dadd( -9.28323, -86.0499, -17.1258, 0.55 ) }
    dend_12 { pt3dadd( -9.31658, -89.5047, -16.3614, 0.55 ) }
    dend_12 { pt3dadd( -9.42948, -91.4974, -15.8612, 0.55 ) }
    dend_12 { pt3dadd( -9.91837, -97.6653, -14.1274, 0.55 ) }
    dend_12 { pt3dadd( -9.96226, -98.1205, -13.9963, 0.55 ) }
    dend_12 { pt3dadd( -10.245, -100.902, -13.1073, 0.55 ) }
    dend_12 { pt3dadd( -10.9948, -105.928, -11.6039, 0.55 ) }
    dend_12 { pt3dadd( -11.18, -107.605, -11.178, 0.55 ) }
    dend_12 { pt3dadd( -11.1881, -110.21, -10.8734, 0.55 ) }
    dend_12 { pt3dadd( -11.0126, -111.16, -10.898, 0.55 ) }
    dend_12 { pt3dadd( -9.87104, -114.309, -11.3091, 0.55 ) }
    dend_12 { pt3dadd( -8.72462, -116.299, -11.8044, 0.55 ) }
    dend_12 { pt3dadd( -6.33467, -119.411, -13.0097, 0.55 ) }
    dend_12 { pt3dadd( -3.06304, -123.166, -14.5877, 0.28 ) }
    dend_12 { pt3dadd( -2.14257, -124.083, -15.0635, 0.55 ) }
    dend_12 { pt3dadd( -0.644018, -125.464, -15.8774, 0.28 ) }
    dend_12 { pt3dadd( -0.410592, -125.671, -16.0103, 0.55 ) }
    dend_12 { pt3dadd( 0.782071, -126.817, -16.667, 0.28 ) }
    dend_12 { pt3dadd( 1.09375, -127.218, -16.8411, 0.55 ) }
    dend_12 { pt3dadd( 2.36126, -129.337, -17.4761, 0.28 ) }
    dend_12 { pt3dadd( 2.76507, -130.065, -17.707, 0.55 ) }
    dend_12 { pt3dadd( 3.82176, -132.181, -18.3057, 0.28 ) }
    dend_12 { pt3dadd( 4.15465, -132.847, -18.4901, 0.55 ) }
    dend_12 { pt3dadd( 5.26116, -135.151, -19.1131, 0.28 ) }
    dend_12 { pt3dadd( 5.77829, -136.209, -19.3994, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.6464, -71.8779, 58.1912, 0.55 ) }
    dend_10 { pt3dadd( -14.6777, -79.4254, 64.8029, 0.55 ) }
    dend_10 { pt3dadd( -19.9117, -86.184, 71.4721, 0.55 ) }
    dend_10 { pt3dadd( -24.6887, -93.6016, 77.7353, 0.55 ) }
    dend_10 { pt3dadd( -29.615, -101.081, 83.8026, 0.55 ) }
    dend_10 { pt3dadd( -33.1515, -109.61, 89.3596, 0.55 ) }
    dend_10 { pt3dadd( -36.7172, -117.779, 95.4391, 0.55 ) }
    dend_10 { pt3dadd( -38.5127, -127.46, 99.6838, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.6464, -71.8779, 58.1912, 0.55 ) }
    dend_3 { pt3dadd( -9.92717, -80.7986, 67.3263, 0.55 ) }
    dend_3 { pt3dadd( -8.44484, -91.0863, 74.6828, 0.55 ) }
    dend_3 { pt3dadd( -9.02384, -101.602, 81.8298, 0.55 ) }
    dend_3 { pt3dadd( -10.2053, -112.781, 87.7404, 0.55 ) }
    dend_3 { pt3dadd( -10.8873, -123.876, 93.8889, 0.55 ) }
    dend_3 { pt3dadd( -11.5673, -134.508, 100.843, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -37.088, 43.5386, -14.6287, 0.83 ) }
    dend_60 { pt3dadd( -36.385, 45.2724, -15.1457, 0.83 ) }
    dend_60 { pt3dadd( -34.867, 49.3603, -16.2192, 0.55 ) }
    dend_60 { pt3dadd( -34.2577, 51.076, -16.5858, 0.83 ) }
    dend_60 { pt3dadd( -33.6422, 52.8697, -16.8918, 0.55 ) }
    dend_60 { pt3dadd( -33.0979, 54.6264, -17.0273, 0.55 ) }
    dend_60 { pt3dadd( -32.8591, 55.468, -17.0111, 0.28 ) }
    dend_60 { pt3dadd( -32.7819, 55.9756, -16.9076, 0.55 ) }
    dend_60 { pt3dadd( -32.6238, 57.5189, -16.2422, 0.28 ) }
    dend_60 { pt3dadd( -32.5544, 58.1631, -15.9202, 0.55 ) }
    dend_60 { pt3dadd( -32.3824, 60.3623, -14.7285, 0.28 ) }
    dend_60 { pt3dadd( -32.3202, 62.0807, -13.7491, 0.55 ) }
    dend_60 { pt3dadd( -32.3979, 64.7336, -12.1995, 0.28 ) }
    dend_60 { pt3dadd( -32.5748, 67.0497, -10.8324, 0.28 ) }
    dend_60 { pt3dadd( -32.7665, 68.339, -10.0781, 0.55 ) }
    dend_60 { pt3dadd( -33.0959, 69.8736, -9.22786, 0.28 ) }
    dend_60 { pt3dadd( -33.3099, 70.6041, -8.83498, 0.55 ) }
    dend_60 { pt3dadd( -33.878, 72.3661, -8.03164, 0.28 ) }
    dend_60 { pt3dadd( -34.3107, 73.5743, -7.59117, 0.28 ) }
    dend_60 { pt3dadd( -34.7454, 74.7792, -7.20354, 0.28 ) }
    dend_60 { pt3dadd( -34.9494, 75.4156, -6.99016, 0.55 ) }
    dend_60 { pt3dadd( -35.6099, 78.0102, -6.12035, 0.28 ) }
    dend_60 { pt3dadd( -36.2659, 81.1037, -5.0958, 0.55 ) }
    dend_60 { pt3dadd( -36.4751, 82.1732, -4.73878, 0.55 ) }
    dend_60 { pt3dadd( -36.7118, 83.2359, -4.36767, 0.55 ) }
    dend_60 { pt3dadd( -37.3178, 85.5164, -3.66589, 0.55 ) }
    dend_60 { pt3dadd( -37.7967, 87.0326, -3.27686, 0.28 ) }
    dend_60 { pt3dadd( -38.0394, 87.6131, -3.16553, 0.55 ) }
    dend_60 { pt3dadd( -38.817, 89.1752, -2.88286, 0.28 ) }
    dend_60 { pt3dadd( -39.6827, 90.8701, -2.66972, 0.55 ) }
    dend_60 { pt3dadd( -41.1033, 93.3575, -2.54267, 0.28 ) }
    dend_60 { pt3dadd( -41.7871, 94.4145, -2.56549, 0.28 ) }
    dend_60 { pt3dadd( -42.8517, 95.953, -2.7979, 0.55 ) }
    dend_60 { pt3dadd( -44.0216, 97.5934, -3.14974, 0.28 ) }
    dend_60 { pt3dadd( -44.2335, 97.8572, -3.22998, 0.55 ) }
    dend_60 { pt3dadd( -44.995, 98.7159, -3.55688, 0.28 ) }
    dend_60 { pt3dadd( -47.6364, 101.483, -4.71471, 0.55 ) }
    dend_60 { pt3dadd( -51.2285, 105.055, -6.62373, 0.28 ) }
    dend_60 { pt3dadd( -51.871, 105.688, -7.03826, 0.55 ) }
    dend_60 { pt3dadd( -53.6166, 107.368, -8.24318, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -54.3392, 108.072, -8.77562, 0.28 ) }
    dend_60 { pt3dadd( -54.9514, 108.681, -9.2795, 0.55 ) }
    dend_60 { pt3dadd( -56.6593, 110.287, -11.025, 0.28 ) }
    dend_60 { pt3dadd( -57.8829, 111.241, -12.2734, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -37.088, 43.5386, -14.6287, 0.55 ) }
    dend_57 { pt3dadd( -37.1978, 44.7847, -14.4698, 0.55 ) }
    dend_57 { pt3dadd( -37.2991, 45.5029, -14.3157, 0.28 ) }
    dend_57 { pt3dadd( -37.5088, 45.9894, -14.11, 0.55 ) }
    dend_57 { pt3dadd( -37.9902, 47.1066, -13.6378, 0.28 ) }
    dend_57 { pt3dadd( -38.3284, 47.8913, -13.3061, 0.55 ) }
    dend_57 { pt3dadd( -38.9517, 49.338, -12.6947, 0.28 ) }
    dend_57 { pt3dadd( -39.4078, 50.0799, -12.25, 0.55 ) }
    dend_57 { pt3dadd( -41.267, 51.6966, -10.6703, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -119.879, -53.6852, 7.2202, 0.55 ) }
    dend_52 { pt3dadd( -125.39, -61.9622, 6.59099, 0.55 ) }
    dend_52 { pt3dadd( -129.304, -71.0109, 5.39386, 0.55 ) }
    dend_52 { pt3dadd( -132.563, -79.7985, 2.03761, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -119.879, -53.6852, 7.2202, 0.55 ) }
    dend_49 { pt3dadd( -124.659, -60.2455, 5.80986, 0.55 ) }
    dend_49 { pt3dadd( -128.626, -67.0903, 3.5235, 0.55 ) }
    dend_49 { pt3dadd( -132.256, -74.0711, 1.10601, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -141.998, 14.8347, 55.6735, 0.55 ) }
    dend_47 { pt3dadd( -145.957, 14.6643, 58.3737, 0.55 ) }
    dend_47 { pt3dadd( -150.113, 15.1532, 60.7109, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -141.998, 14.8347, 55.6735, 0.55 ) }
    dend_46 { pt3dadd( -151.366, 13.7221, 60.0545, 0.55 ) }
    dend_46 { pt3dadd( -160.989, 14.2054, 63.9815, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 69.9906, -33.6477, -88.2879, 0.28 ) }
    dend_39 { pt3dadd( 75.7008, -36.0966, -99.2114, 0.28 ) }
    dend_39 { pt3dadd( 76.2637, -36.403, -100.195, 0.55 ) }
    dend_39 { pt3dadd( 77.214, -36.9202, -101.855, 0.28 ) }
    dend_39 { pt3dadd( 78.0142, -37.3558, -103.252, 0.28 ) }
    dend_39 { pt3dadd( 79.0734, -37.9323, -105.102, 0.55 ) }
    dend_39 { pt3dadd( 80.4699, -38.6925, -107.541, 0.55 ) }
    dend_39 { pt3dadd( 82.3209, -40.3247, -108.964, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 69.9906, -33.6477, -88.2879, 0.55 ) }
    dend_36 { pt3dadd( 70.5261, -34.5537, -89.8642, 0.55 ) }
    dend_36 { pt3dadd( 70.6627, -34.9395, -90.5687, 0.28 ) }
    dend_36 { pt3dadd( 70.8474, -35.5835, -91.7972, 0.55 ) }
    dend_36 { pt3dadd( 71.2543, -37.0022, -94.5034, 0.28 ) }
    dend_36 { pt3dadd( 71.5363, -37.9854, -96.3789, 0.55 ) }
    dend_36 { pt3dadd( 72.014, -39.6512, -99.5565, 0.28 ) }
    dend_36 { pt3dadd( 72.5303, -41.5943, -103.678, 0.28 ) }
    dend_36 { pt3dadd( 72.7096, -42.466, -105.601, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 149.349, -5.99514, -16.3403, 0.28 ) }
    dend_33 { pt3dadd( 151.533, -7.29284, -14.6019, 0.28 ) }
    dend_33 { pt3dadd( 154.288, -8.88916, -12.0598, 0.28 ) }
    dend_33 { pt3dadd( 156.031, -9.88862, -10.3321, 0.55 ) }
    dend_33 { pt3dadd( 157.062, -10.3903, -9.3276, 0.28 ) }
    dend_33 { pt3dadd( 157.611, -10.6586, -8.78115, 0.28 ) }
    dend_33 { pt3dadd( 160.333, -12.0072, -6.12709, 0.55 ) }
    dend_33 { pt3dadd( 160.948, -12.2532, -5.4555, 0.28 ) }
    dend_33 { pt3dadd( 162.413, -12.8712, -3.57116, 0.55 ) }
    dend_33 { pt3dadd( 163.673, -13.4498, -1.99227, 0.28 ) }
    dend_33 { pt3dadd( 164.764, -13.9175, -0.732332, 0.55 ) }
    dend_33 { pt3dadd( 166.056, -14.5355, 0.687928, 0.55 ) }
    dend_33 { pt3dadd( 168.143, -15.6852, 2.66511, 0.55 ) }
    dend_33 { pt3dadd( 168.65, -15.9812, 3.1308, 0.55 ) }
    dend_33 { pt3dadd( 170.479, -17.1168, 4.84811, 0.28 ) }
    dend_33 { pt3dadd( 171.196, -17.6024, 5.52851, 0.55 ) }
    dend_33 { pt3dadd( 172.182, -18.2071, 6.39258, 0.28 ) }
    dend_33 { pt3dadd( 173.584, -19.1089, 7.55101, 0.55 ) }
    dend_33 { pt3dadd( 175.924, -20.7144, 9.03288, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 149.349, -5.99514, -16.3403, 0.55 ) }
    dend_32 { pt3dadd( 147.011, -6.44133, -16.4057, 0.55 ) }
    dend_32 { pt3dadd( 145.112, -6.80369, -16.4587, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.48968, -31.4498, 6.10439, 0.83 ) }
    dend_17 { pt3dadd( 3.63293, -31.6652, 6.14302, 0.83 ) }
    dend_17 { pt3dadd( 5.12929, -33.529, 6.73897, 0.83 ) }
    dend_17 { pt3dadd( 6.49324, -35.1582, 7.14776, 0.55 ) }
    dend_17 { pt3dadd( 7.58137, -36.458, 7.47389, 0.55 ) }
    dend_17 { pt3dadd( 9.89424, -39.2207, 8.16709, 0.83 ) }
    dend_17 { pt3dadd( 12.6996, -42.5716, 9.00789, 0.55 ) }
    dend_17 { pt3dadd( 14.1989, -44.319, 9.50688, 0.83 ) }
    dend_17 { pt3dadd( 16.7364, -47.0687, 10.5313, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.48968, -31.4498, 6.10439, 0.55 ) }
    dend_14 { pt3dadd( 4.64847, -32.501, 3.02732, 0.55 ) }
    dend_14 { pt3dadd( 5.89229, -33.6294, -0.275531, 0.55 ) }
    dend_14 { pt3dadd( 7.36064, -34.9614, -4.17458, 0.55 ) }
    dend_14 { pt3dadd( 9.14368, -36.5789, -8.90928, 0.55 ) }
    dend_14 { pt3dadd( 10.1555, -37.4968, -11.5961, 0.55 ) }
    dend_14 { pt3dadd( 10.3587, -37.6812, -12.1358, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.5673, -134.508, 100.843, 0.55 ) }
    dend_7 { pt3dadd( -11.4295, -139.773, 104.887, 0.55 ) }
    dend_7 { pt3dadd( -10.2518, -145.27, 108.395, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -11.5673, -134.508, 100.843, 0.55 ) }
    dend_4 { pt3dadd( -11.6761, -139.831, 104.108, 0.55 ) }
    dend_4 { pt3dadd( -12.1318, -145.09, 107.457, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -41.267, 51.6966, -10.6703, 0.28 ) }
    dend_59 { pt3dadd( -43.0798, 52.9652, -8.92438, 0.28 ) }
    dend_59 { pt3dadd( -43.7834, 53.4228, -8.1846, 0.55 ) }
    dend_59 { pt3dadd( -45.8104, 54.7353, -5.9955, 0.28 ) }
    dend_59 { pt3dadd( -46.7931, 55.415, -5.01005, 0.55 ) }
    dend_59 { pt3dadd( -49.4508, 57.2835, -2.44014, 0.28 ) }
    dend_59 { pt3dadd( -52.152, 59.1827, 0.171828, 0.55 ) }
    dend_59 { pt3dadd( -56.6383, 62.0939, 4.46765, 0.28 ) }
    dend_59 { pt3dadd( -57.5934, 62.7207, 5.38549, 0.55 ) }
    dend_59 { pt3dadd( -59.673, 64.2412, 7.36965, 0.28 ) }
    dend_59 { pt3dadd( -60.4831, 64.8811, 8.16308, 0.55 ) }
    dend_59 { pt3dadd( -69.287, 68.933, 14.0578, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -78.1929, 74.8721, 17.7058, 0.55 ) }
    dend_59 { pt3dadd( -86.3123, 80.6166, 23.0753, 0.55 ) }
    dend_59 { pt3dadd( -92.9074, 87.6014, 28.9446, 0.55 ) }
    dend_59 { pt3dadd( -100.467, 94.4652, 33.7169, 0.55 ) }
    dend_59 { pt3dadd( -109.239, 99.4893, 38.8213, 0.55 ) }
    dend_59 { pt3dadd( -117.713, 103.217, 45.3831, 0.55 ) }
    dend_59 { pt3dadd( -125.568, 105.401, 53.307, 0.55 ) }
    dend_59 { pt3dadd( -133.343, 108.287, 61.0671, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -41.267, 51.6966, -10.6703, 0.55 ) }
    dend_58 { pt3dadd( -45.9867, 50.4921, -9.1315, 0.55 ) }
    dend_58 { pt3dadd( -48.4463, 49.7897, -8.34363, 0.28 ) }
    dend_58 { pt3dadd( -50.2767, 49.267, -7.75732, 0.55 ) }
    dend_58 { pt3dadd( -51.8022, 48.8314, -7.26865, 0.28 ) }
    dend_58 { pt3dadd( -52.8708, 48.5262, -6.92637, 0.55 ) }
    dend_58 { pt3dadd( -55.8172, 47.6848, -5.98256, 0.28 ) }
    dend_58 { pt3dadd( -57.7803, 46.9905, -5.60896, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -132.563, -79.7985, 2.03761, 0.55 ) }
    dend_54 { pt3dadd( -135.865, -88.4661, 2.97728, 0.55 ) }
    dend_54 { pt3dadd( -138.866, -97.0604, 4.9512, 0.55 ) }
    dend_54 { pt3dadd( -141.322, -106.04, 5.22785, 0.55 ) }
    dend_54 { pt3dadd( -144.614, -114.62, 6.78181, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -132.563, -79.7985, 2.03761, 0.55 ) }
    dend_53 { pt3dadd( -137.632, -87.1686, -3.82724, 0.55 ) }
    dend_53 { pt3dadd( -142.362, -93.4876, -11.0925, 0.55 ) }
    dend_53 { pt3dadd( -147.812, -100.66, -16.8682, 0.55 ) }
    dend_53 { pt3dadd( -155.407, -106.131, -22.1277, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -132.256, -74.0711, 1.10601, 0.55 ) }
    dend_51 { pt3dadd( -136.5, -78.3262, -3.71194, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -132.256, -74.0711, 1.10601, 0.55 ) }
    dend_50 { pt3dadd( -135.759, -83.7174, 3.5859, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 82.3209, -40.3247, -108.964, 0.28 ) }
    dend_41 { pt3dadd( 85.0781, -41.5214, -110.799, 0.28 ) }
    dend_41 { pt3dadd( 86.3588, -42.0772, -111.651, 0.55 ) }
    dend_41 { pt3dadd( 88.8012, -43.1372, -113.276, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 82.3209, -40.3247, -108.964, 0.55 ) }
    dend_40 { pt3dadd( 81.7553, -41.3353, -110.553, 0.55 ) }
    dend_40 { pt3dadd( 80.624, -43.3566, -113.731, 0.28 ) }
    dend_40 { pt3dadd( 80.2554, -44.0151, -114.767, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 72.7096, -42.466, -105.601, 0.28 ) }
    dend_38 { pt3dadd( 73.8656, -45.9542, -110.076, 0.28 ) }
    dend_38 { pt3dadd( 74.438, -47.6814, -112.291, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 72.7096, -42.466, -105.601, 0.55 ) }
    dend_37 { pt3dadd( 71.0792, -42.9605, -105.074, 0.55 ) }
    dend_37 { pt3dadd( 66.5325, -44.3392, -103.604, 0.28 ) }
    dend_37 { pt3dadd( 65.4524, -44.6667, -103.255, 0.55 ) }
    dend_37 { pt3dadd( 62.4978, -45.5627, -102.299, 0.28 ) }
    dend_37 { pt3dadd( 60.5933, -46.1402, -101.683, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 16.7364, -47.0687, 10.5313, 0.83 ) }
    dend_23 { pt3dadd( 16.834, -47.3907, 10.5241, 0.83 ) }
    dend_23 { pt3dadd( 18.1219, -51.5942, 10.5701, 0.83 ) }
    dend_23 { pt3dadd( 18.7394, -54.7875, 10.6851, 0.83 ) }
    dend_23 { pt3dadd( 18.9975, -57.9052, 11.012, 0.83 ) }
    dend_23 { pt3dadd( 19.0738, -62.0772, 11.6837, 0.83 ) }
    dend_23 { pt3dadd( 18.9648, -66.9044, 12.5708, 0.83 ) }
    dend_23 { pt3dadd( 18.7486, -72.2911, 13.8361, 0.83 ) }
    dend_23 { pt3dadd( 18.4407, -77.5235, 15.2929, 0.83 ) }
    dend_23 { pt3dadd( 17.7345, -84.0106, 16.7711, 0.83 ) }
    dend_23 { pt3dadd( 17.3281, -87.0153, 17.2265, 0.83 ) }
    dend_23 { pt3dadd( 17.072, -89.2762, 17.4336, 0.83 ) }
    dend_23 { pt3dadd( 16.5335, -93.6276, 17.7091, 0.83 ) }
    dend_23 { pt3dadd( 16.2213, -97.5114, 17.7938, 0.83 ) }
    dend_23 { pt3dadd( 16.3411, -105.727, 17.2987, 0.83 ) }
    dend_23 { pt3dadd( 16.6936, -110.212, 16.5021, 0.83 ) }
    dend_23 { pt3dadd( 17.1392, -114.346, 15.4847, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.7364, -47.0687, 10.5313, 0.55 ) }
    dend_18 { pt3dadd( 15.7856, -50.3962, 10.2269, 0.55 ) }
    dend_18 { pt3dadd( 14.9881, -52.8163, 10.151, 0.55 ) }
    dend_18 { pt3dadd( 14.448, -54.3581, 10.2563, 0.55 ) }
    dend_18 { pt3dadd( 13.6028, -56.7547, 10.6764, 0.55 ) }
    dend_18 { pt3dadd( 11.9067, -61.4826, 11.8318, 0.55 ) }
    dend_18 { pt3dadd( 10.4275, -65.0651, 13.0448, 0.55 ) }
    dend_18 { pt3dadd( 9.11258, -67.936, 14.2913, 0.55 ) }
    dend_18 { pt3dadd( 7.63398, -70.8454, 15.7034, 0.55 ) }
    dend_18 { pt3dadd( 6.33602, -73.2611, 16.9781, 0.28 ) }
    dend_18 { pt3dadd( 5.12699, -75.2384, 18.2639, 0.55 ) }
    dend_18 { pt3dadd( 2.63817, -78.8476, 21.017, 0.55 ) }
    dend_18 { pt3dadd( 0.904844, -81.0765, 22.8649, 0.55 ) }
    dend_18 { pt3dadd( -0.0729318, -82.327, 23.8835, 0.55 ) }
    dend_18 { pt3dadd( -1.25831, -83.8126, 24.9856, 0.83 ) }
    dend_18 { pt3dadd( -4.68348, -88.2236, 27.9802, 0.28 ) }
    dend_18 { pt3dadd( -5.79905, -89.6833, 28.9371, 0.55 ) }
    dend_18 { pt3dadd( -7.70598, -92.3075, 30.6237, 0.28 ) }
    dend_18 { pt3dadd( -8.31807, -93.1161, 31.1956, 0.55 ) }
    dend_18 { pt3dadd( -9.64755, -95.0005, 32.5501, 0.28 ) }
    dend_18 { pt3dadd( -10.3638, -96.0713, 33.2536, 0.55 ) }
    dend_18 { pt3dadd( -12.4842, -99.588, 34.6213, 0.55 ) }
    dend_18 { pt3dadd( -17.6996, -108.73, 42.5521, 0.55 ) }
    dend_18 { pt3dadd( -22.6383, -117.368, 51.2165, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 10.3587, -37.6812, -12.1358, 0.55 ) }
    dend_16 { pt3dadd( 12.095, -38.3926, -14.4841, 0.55 ) }
    dend_16 { pt3dadd( 12.576, -38.5563, -15.1734, 0.55 ) }
    dend_16 { pt3dadd( 13.7269, -38.9718, -16.896, 0.55 ) }
    dend_16 { pt3dadd( 16.102, -39.7938, -20.6467, 0.28 ) }
    dend_16 { pt3dadd( 16.4245, -39.9073, -21.2005, 0.55 ) }
    dend_16 { pt3dadd( 17.6946, -40.4416, -23.4977, 0.55 ) }
    dend_16 { pt3dadd( 19.1709, -41.194, -26.6015, 0.55 ) }
    dend_16 { pt3dadd( 19.7084, -41.4515, -27.7856, 0.28 ) }
    dend_16 { pt3dadd( 20.1237, -41.6201, -28.8155, 0.28 ) }
    dend_16 { pt3dadd( 20.6243, -41.8928, -30.5395, 0.55 ) }
    dend_16 { pt3dadd( 21.2987, -42.1342, -32.657, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 21.9507, -42.2093, -34.6231, 0.55 ) }
    dend_16 { pt3dadd( 22.422, -42.1608, -36.1409, 0.55 ) }
    dend_16 { pt3dadd( 22.7704, -42.0499, -37.1929, 0.55 ) }
    dend_16 { pt3dadd( 23.8666, -41.5988, -40.3016, 0.55 ) }
    dend_16 { pt3dadd( 24.9542, -40.9385, -43.5682, 0.55 ) }
    dend_16 { pt3dadd( 25.3704, -40.6043, -44.9138, 0.28 ) }
    dend_16 { pt3dadd( 25.7873, -40.3026, -46.1958, 0.55 ) }
    dend_16 { pt3dadd( 26.6196, -39.8359, -48.7903, 0.28 ) }
    dend_16 { pt3dadd( 26.8934, -39.7008, -49.6617, 0.83 ) }
    dend_16 { pt3dadd( 27.3076, -39.4394, -51.2721, 0.28 ) }
    dend_16 { pt3dadd( 27.4784, -39.3365, -52.4067, 0.55 ) }
    dend_16 { pt3dadd( 27.7001, -39.2403, -54.0478, 0.28 ) }
    dend_16 { pt3dadd( 27.7685, -39.1959, -54.6979, 0.55 ) }
    dend_16 { pt3dadd( 27.8381, -39.1384, -55.8911, 0.55 ) }
    dend_16 { pt3dadd( 27.8698, -38.8934, -57.6838, 0.55 ) }
    dend_16 { pt3dadd( 27.826, -38.6723, -58.8436, 0.28 ) }
    dend_16 { pt3dadd( 27.7151, -38.3934, -59.7657, 0.55 ) }
    dend_16 { pt3dadd( 27.581, -37.941, -60.855, 0.28 ) }
    dend_16 { pt3dadd( 27.5638, -37.8529, -61.0357, 0.55 ) }
    dend_16 { pt3dadd( 27.6689, -36.9864, -62.7636, 0.28 ) }
    dend_16 { pt3dadd( 27.8627, -36.3266, -64.0446, 0.55 ) }
    dend_16 { pt3dadd( 28.3157, -35.3445, -65.7809, 0.83 ) }
    dend_16 { pt3dadd( 28.8238, -34.4978, -67.2415, 0.28 ) }
    dend_16 { pt3dadd( 28.9863, -34.279, -67.6255, 0.55 ) }
    dend_16 { pt3dadd( 30.3702, -32.6263, -70.5993, 0.28 ) }
    dend_16 { pt3dadd( 30.6547, -32.341, -71.1286, 0.55 ) }
    dend_16 { pt3dadd( 31.5682, -31.409, -72.7076, 0.28 ) }
    dend_16 { pt3dadd( 31.8065, -31.169, -73.1157, 0.55 ) }
    dend_16 { pt3dadd( 32.3599, -30.5492, -74.1514, 0.28 ) }
    dend_16 { pt3dadd( 32.7139, -30.1062, -74.8776, 0.55 ) }
    dend_16 { pt3dadd( 33.3037, -29.132, -76.4588, 0.28 ) }
    dend_16 { pt3dadd( 33.6267, -28.6112, -77.3917, 0.55 ) }
    dend_16 { pt3dadd( 34.2317, -27.6116, -79.365, 0.28 ) }
    dend_16 { pt3dadd( 34.4056, -27.3419, -79.9513, 0.55 ) }
    dend_16 { pt3dadd( 34.6529, -26.9817, -80.8652, 0.28 ) }
    dend_16 { pt3dadd( 34.8298, -26.6809, -81.6325, 0.55 ) }
    dend_16 { pt3dadd( 35.1143, -26.0811, -83.2088, 0.28 ) }
    dend_16 { pt3dadd( 35.1868, -25.9109, -83.6808, 0.55 ) }
    dend_16 { pt3dadd( 35.5762, -24.5966, -87.1555, 0.28 ) }
    dend_16 { pt3dadd( 35.6127, -24.0661, -88.3525, 0.55 ) }
    dend_16 { pt3dadd( 35.5471, -23.0363, -90.4585, 0.28 ) }
    dend_16 { pt3dadd( 35.4885, -22.5396, -91.4011, 0.55 ) }
    dend_16 { pt3dadd( 35.2396, -21.4239, -93.5344, 0.28 ) }
    dend_16 { pt3dadd( 35.1179, -21.0495, -94.3099, 0.55 ) }
    dend_16 { pt3dadd( 34.5485, -19.9446, -97.0802, 0.28 ) }
    dend_16 { pt3dadd( 34.309, -19.624, -98.2337, 0.55 ) }
    dend_16 { pt3dadd( 33.9637, -19.4287, -99.8767, 0.55 ) }
    dend_16 { pt3dadd( 33.7316, -19.3723, -100.882, 0.55 ) }
    dend_16 { pt3dadd( 33.1081, -19.3206, -102.888, 0.28 ) }
    dend_16 { pt3dadd( 32.3726, -19.2985, -104.826, 0.28 ) }
    dend_16 { pt3dadd( 31.7122, -19.2776, -106.426, 0.55 ) }
    dend_16 { pt3dadd( 30.6777, -19.0941, -108.311, 0.28 ) }
    dend_16 { pt3dadd( 30.0275, -18.8886, -109.198, 0.55 ) }
    dend_16 { pt3dadd( 28.2274, -18.033, -111.217, 0.28 ) }
    dend_16 { pt3dadd( 27.0056, -17.3702, -112.139, 0.55 ) }
    dend_16 { pt3dadd( 26.0432, -16.8284, -112.658, 0.28 ) }
    dend_16 { pt3dadd( 24.757, -16.231, -113.141, 0.55 ) }
    dend_16 { pt3dadd( 23.0166, -15.4507, -113.678, 0.28 ) }
    dend_16 { pt3dadd( 22.3624, -15.1796, -113.886, 0.55 ) }
    dend_16 { pt3dadd( 19.235, -13.9862, -115.115, 0.28 ) }
    dend_16 { pt3dadd( 18.1892, -13.6156, -115.536, 0.55 ) }
    dend_16 { pt3dadd( 15.6629, -12.8127, -116.515, 0.28 ) }
    dend_16 { pt3dadd( 14.2914, -12.3893, -117.048, 0.55 ) }
    dend_16 { pt3dadd( 13.1654, -12.0427, -117.487, 0.55 ) }
    dend_16 { pt3dadd( 11.8442, -11.635, -118.028, 0.28 ) }
    dend_16 { pt3dadd( 11.2352, -11.424, -118.358, 0.55 ) }
    dend_16 { pt3dadd( 9.28846, -10.65, -119.524, 0.28 ) }
    dend_16 { pt3dadd( 8.24624, -10.1354, -120.12, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.3587, -37.6812, -12.1358, 0.55 ) }
    dend_15 { pt3dadd( 11.5144, -37.6278, -12.4866, 0.55 ) }
    dend_15 { pt3dadd( 12.6648, -37.4449, -12.8112, 0.55 ) }
    dend_15 { pt3dadd( 14.0989, -37.1115, -13.1458, 0.55 ) }
    dend_15 { pt3dadd( 15.26, -36.7443, -13.3705, 0.55 ) }
    dend_15 { pt3dadd( 22.7935, -33.5313, -14.2916, 0.55 ) }
    dend_15 { pt3dadd( 24.4635, -32.6251, -14.5244, 0.55 ) }
    dend_15 { pt3dadd( 26.9054, -31.1167, -14.9223, 0.55 ) }
    dend_15 { pt3dadd( 28.6249, -29.9931, -15.2162, 0.55 ) }
    dend_15 { pt3dadd( 30.2763, -28.8022, -15.4686, 0.28 ) }
    dend_15 { pt3dadd( 32.7704, -26.8247, -15.7363, 0.55 ) }
    dend_15 { pt3dadd( 36.4251, -23.7616, -15.9285, 0.28 ) }
    dend_15 { pt3dadd( 36.7752, -23.5601, -16.0241, 0.55 ) }
    dend_15 { pt3dadd( 39.0468, -22.76, -17.2545, 0.28 ) }
    dend_15 { pt3dadd( 40.4682, -22.3711, -18.3466, 0.55 ) }
    dend_15 { pt3dadd( 41.9302, -22.1135, -19.6715, 0.55 ) }
    dend_15 { pt3dadd( 44.5605, -21.8309, -22.0806, 0.55 ) }
    dend_15 { pt3dadd( 49.7442, -21.3197, -26.7914, 0.55 ) }
    dend_15 { pt3dadd( 53.2882, -21.0077, -29.8899, 0.55 ) }
    dend_15 { pt3dadd( 54.5413, -20.9059, -30.9257, 0.55 ) }
    dend_15 { pt3dadd( 62.9133, -20.1113, -37.541, 0.55 ) }
    dend_15 { pt3dadd( 65.2438, -19.8346, -39.238, 0.55 ) }
    dend_15 { pt3dadd( 66.6201, -19.6582, -40.0912, 0.55 ) }
    dend_15 { pt3dadd( 70.0123, -19.2798, -41.7933, 0.55 ) }
    dend_15 { pt3dadd( 78.4694, -18.7202, -45.3722, 0.55 ) }
    dend_15 { pt3dadd( 80.8064, -18.6469, -46.2331, 0.28 ) }
    dend_15 { pt3dadd( 82.1846, -18.6476, -46.6196, 0.55 ) }
    dend_15 { pt3dadd( 84.2541, -18.7216, -47.1493, 0.28 ) }
    dend_15 { pt3dadd( 85.1363, -18.8227, -47.2991, 0.55 ) }
    dend_15 { pt3dadd( 87.8753, -19.4111, -47.0785, 0.28 ) }
    dend_15 { pt3dadd( 89.5645, -20.4992, -45.9307, 0.55 ) }
    dend_15 { pt3dadd( 90.5574, -21.3149, -45.1753, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 91.4159, -22.2583, -44.3739, 0.55 ) }
    dend_15 { pt3dadd( 92.1537, -23.3266, -43.5946, 0.28 ) }
    dend_15 { pt3dadd( 92.4992, -23.8875, -43.2621, 0.55 ) }
    dend_15 { pt3dadd( 93.2788, -25.3812, -42.4209, 0.28 ) }
    dend_15 { pt3dadd( 93.5406, -25.8271, -42.2558, 0.55 ) }
    dend_15 { pt3dadd( 95.1463, -28.3717, -41.4403, 0.28 ) }
    dend_15 { pt3dadd( 96.0372, -29.5269, -41.1663, 0.55 ) }
    dend_15 { pt3dadd( 98.2414, -31.9468, -40.7507, 0.28 ) }
    dend_15 { pt3dadd( 99.1677, -32.8194, -40.6555, 0.55 ) }
    dend_15 { pt3dadd( 102.459, -35.6394, -40.407, 0.28 ) }
    dend_15 { pt3dadd( 103.288, -36.3208, -40.3701, 0.55 ) }
    dend_15 { pt3dadd( 105.927, -38.4847, -40.3781, 0.28 ) }
    dend_15 { pt3dadd( 106.484, -39.0031, -40.3691, 0.55 ) }
    dend_15 { pt3dadd( 107.907, -40.385, -40.3726, 0.28 ) }
    dend_15 { pt3dadd( 108.805, -41.177, -40.4389, 0.55 ) }
    dend_15 { pt3dadd( 109.763, -41.9417, -40.538, 0.55 ) }
    dend_15 { pt3dadd( 111.664, -43.4686, -40.7244, 0.28 ) }
    dend_15 { pt3dadd( 113.015, -44.38, -40.8665, 0.55 ) }
    dend_15 { pt3dadd( 117.28, -46.4848, -41.3284, 0.28 ) }
    dend_15 { pt3dadd( 118.953, -47.1138, -41.5438, 0.55 ) }
    dend_15 { pt3dadd( 120.1, -47.4953, -41.6733, 0.28 ) }
    dend_15 { pt3dadd( 121.255, -47.8213, -41.787, 0.55 ) }
    dend_15 { pt3dadd( 124.793, -48.6706, -42.0745, 0.28 ) }
    dend_15 { pt3dadd( 127.454, -49.3423, -42.2398, 0.55 ) }
    dend_15 { pt3dadd( 131.909, -50.7231, -42.2777, 0.28 ) }
    dend_15 { pt3dadd( 133.309, -51.1496, -42.2841, 0.55 ) }
    dend_15 { pt3dadd( 135.906, -51.918, -42.1347, 0.28 ) }
    dend_15 { pt3dadd( 136.745, -52.1695, -42.0353, 0.55 ) }
    dend_15 { pt3dadd( 138.004, -52.5765, -41.699, 0.28 ) }
    dend_15 { pt3dadd( 139.067, -52.9141, -41.3304, 0.55 ) }
    dend_15 { pt3dadd( 141.781, -53.7147, -40.1014, 0.28 ) }
    dend_15 { pt3dadd( 144.85, -54.5174, -38.6507, 0.28 ) }
    dend_15 { pt3dadd( 146.332, -54.8638, -37.8268, 0.28 ) }
    dend_15 { pt3dadd( 147.874, -55.1603, -37.0739, 0.55 ) }
    dend_15 { pt3dadd( 150.12, -55.4922, -35.9827, 0.28 ) }
    dend_15 { pt3dadd( 151.105, -55.6265, -35.4797, 0.83 ) }
    dend_15 { pt3dadd( 153.563, -56.0083, -34.1147, 0.28 ) }
    dend_15 { pt3dadd( 154.669, -56.1942, -33.5737, 0.55 ) }
    dend_15 { pt3dadd( 159.686, -57.1762, -31.3822, 0.28 ) }
    dend_15 { pt3dadd( 162.311, -57.683, -30.4506, 0.28 ) }
    dend_15 { pt3dadd( 164.284, -58.0444, -29.8716, 0.55 ) }
    dend_15 { pt3dadd( 165.501, -58.2695, -29.6338, 0.55 ) }
    dend_15 { pt3dadd( 168.85, -58.892, -29.1898, 0.28 ) }
    dend_15 { pt3dadd( 172.05, -59.582, -28.8649, 0.55 ) }
    dend_15 { pt3dadd( 174.973, -60.2815, -28.569, 0.28 ) }
    dend_15 { pt3dadd( 177.678, -60.9386, -28.3991, 0.55 ) }
    dend_15 { pt3dadd( 179.906, -61.4617, -28.2495, 0.28 ) }
    dend_15 { pt3dadd( 181.678, -61.7927, -28.0594, 0.55 ) }
    dend_15 { pt3dadd( 185.849, -62.4067, -27.4609, 0.28 ) }
    dend_15 { pt3dadd( 187.926, -62.7187, -27.0936, 0.55 ) }
    dend_15 { pt3dadd( 190.997, -63.1992, -26.4563, 0.28 ) }
    dend_15 { pt3dadd( 193.476, -63.5335, -25.8912, 0.55 ) }
    dend_15 { pt3dadd( 199.255, -64.098, -24.5768, 0.28 ) }
    dend_15 { pt3dadd( 201.665, -64.2066, -24.1639, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.2518, -145.27, 108.395, 0.55 ) }
    dend_9 { pt3dadd( -9.6919, -150.955, 111.462, 0.55 ) }
    dend_9 { pt3dadd( -8.08562, -156.955, 113.257, 0.55 ) }
    dend_9 { pt3dadd( -7.10254, -162.819, 115.82, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.2518, -145.27, 108.395, 0.55 ) }
    dend_8 { pt3dadd( -9.08028, -153.594, 115.503, 0.55 ) }
    dend_8 { pt3dadd( -9.98454, -161.007, 123.648, 0.55 ) }
    dend_8 { pt3dadd( -11.5941, -166.67, 133.065, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.1318, -145.09, 107.457, 0.55 ) }
    dend_6 { pt3dadd( -11.6048, -151.476, 112.717, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.1318, -145.09, 107.457, 0.55 ) }
    dend_5 { pt3dadd( -12.8883, -153.432, 112.328, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 17.1392, -114.346, 15.4847, 0.83 ) }
    dend_25 { pt3dadd( 18.0743, -117.045, 16.1766, 0.83 ) }
    dend_25 { pt3dadd( 18.9504, -119.295, 16.9508, 0.83 ) }
    dend_25 { pt3dadd( 19.8212, -121.531, 17.7204, 0.83 ) }
    dend_25 { pt3dadd( 20.6482, -123.654, 18.4512, 0.83 ) }
    dend_25 { pt3dadd( 21.9226, -126.927, 19.5775, 0.83 ) }
    dend_25 { pt3dadd( 23.1878, -130.176, 20.6956, 0.83 ) }
    dend_25 { pt3dadd( 24.1723, -132.284, 21.7548, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 17.1392, -114.346, 15.4847, 0.55 ) }
    dend_24 { pt3dadd( 18.6259, -115.939, 15.7624, 0.55 ) }
    dend_24 { pt3dadd( 19.7989, -117.199, 15.7344, 0.55 ) }
    dend_24 { pt3dadd( 20.6311, -118.143, 15.6059, 0.55 ) }
    dend_24 { pt3dadd( 21.4408, -119.283, 15.2814, 0.83 ) }
    dend_24 { pt3dadd( 22.2891, -120.599, 14.7344, 0.55 ) }
    dend_24 { pt3dadd( 23.1189, -121.886, 14.1994, 0.83 ) }
    dend_24 { pt3dadd( 23.952, -123.301, 13.4736, 0.55 ) }
    dend_24 { pt3dadd( 24.4429, -124.127, 12.9728, 0.83 ) }
    dend_24 { pt3dadd( 25.9407, -126.826, 11.1237, 0.55 ) }
    dend_24 { pt3dadd( 26.9539, -128.976, 9.51627, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -22.6383, -117.368, 51.2165, 0.55 ) }
    dend_20 { pt3dadd( -27.371, -125.73, 55.7645, 0.55 ) }
    dend_20 { pt3dadd( -33.6256, -133.202, 60.1132, 0.55 ) }
    dend_20 { pt3dadd( -40.7657, -139.751, 64.6567, 0.55 ) }
    dend_20 { pt3dadd( -48.9044, -145.157, 69.1012, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -22.6383, -117.368, 51.2165, 0.55 ) }
    dend_19 { pt3dadd( -26.114, -123.542, 55.3218, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 24.1723, -132.284, 21.7548, 0.55 ) }
    dend_27 { pt3dadd( 24.4766, -134.807, 22.6364, 0.55 ) }
    dend_27 { pt3dadd( 24.9278, -138.012, 23.8702, 0.55 ) }
    dend_27 { pt3dadd( 25.36, -141.038, 25.0184, 0.55 ) }
    dend_27 { pt3dadd( 25.6526, -143.194, 25.7939, 0.55 ) }
    dend_27 { pt3dadd( 26.1499, -147.051, 27.1043, 0.55 ) }
    dend_27 { pt3dadd( 27.7985, -157.873, 30.5579, 0.55 ) }
    dend_27 { pt3dadd( 28.4963, -161.538, 31.5967, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 29.0385, -164.124, 32.2002, 0.55 ) }
    dend_27 { pt3dadd( 29.7555, -167.08, 32.6563, 0.55 ) }
    dend_27 { pt3dadd( 30.3335, -169.378, 32.7915, 0.55 ) }
    dend_27 { pt3dadd( 31.9118, -174.728, 32.9308, 0.55 ) }
    dend_27 { pt3dadd( 32.9692, -178.813, 32.9889, 0.55 ) }
    dend_27 { pt3dadd( 33.7116, -181.482, 33.1282, 0.55 ) }
    dend_27 { pt3dadd( 35.5042, -188.396, 33.8416, 0.55 ) }
    dend_27 { pt3dadd( 36.6169, -193.043, 34.5216, 0.55 ) }
    dend_27 { pt3dadd( 37.9779, -199.021, 35.7492, 0.55 ) }
    dend_27 { pt3dadd( 39.4523, -205.774, 37.6999, 0.55 ) }
    dend_27 { pt3dadd( 40.5575, -210.242, 39.3476, 0.55 ) }
    dend_27 { pt3dadd( 41.2542, -212.87, 40.4131, 0.55 ) }
    dend_27 { pt3dadd( 41.8525, -215.3, 41.3748, 0.55 ) }
    dend_27 { pt3dadd( 42.7081, -218.373, 42.4581, 0.55 ) }
    dend_27 { pt3dadd( 44.8344, -225.809, 44.5232, 0.55 ) }
    dend_27 { pt3dadd( 45.7894, -228.674, 45.2409, 0.55 ) }
    dend_27 { pt3dadd( 46.7813, -231.877, 45.9948, 0.55 ) }
    dend_27 { pt3dadd( 48.2379, -236.694, 47.0896, 0.55 ) }
    dend_27 { pt3dadd( 49.1708, -240.426, 47.9171, 0.55 ) }
    dend_27 { pt3dadd( 49.8629, -244.007, 48.5963, 0.55 ) }
    dend_27 { pt3dadd( 50.3699, -247.446, 49.2005, 0.55 ) }
    dend_27 { pt3dadd( 50.7929, -250.81, 49.8226, 0.55 ) }
    dend_27 { pt3dadd( 51.1156, -253.203, 50.2457, 0.55 ) }
    dend_27 { pt3dadd( 51.7082, -257.117, 50.8088, 0.55 ) }
    dend_27 { pt3dadd( 52.4621, -261.837, 51.1057, 0.55 ) }
    dend_27 { pt3dadd( 52.939, -264.124, 51.0939, 0.55 ) }
    dend_27 { pt3dadd( 53.4256, -266.133, 50.9368, 0.55 ) }
    dend_27 { pt3dadd( 54.5851, -269.901, 50.4639, 0.55 ) }
    dend_27 { pt3dadd( 55.3161, -272.295, 50.0895, 0.55 ) }
    dend_27 { pt3dadd( 56.2164, -275.237, 49.7507, 0.55 ) }
    dend_27 { pt3dadd( 56.7325, -277.315, 49.6171, 0.55 ) }
    dend_27 { pt3dadd( 57.913, -282.728, 49.455, 0.55 ) }
    dend_27 { pt3dadd( 58.6093, -286.79, 49.5973, 0.55 ) }
    dend_27 { pt3dadd( 59.4268, -293.082, 50.3046, 0.55 ) }
    dend_27 { pt3dadd( 59.9253, -297.118, 51.1707, 0.55 ) }
    dend_27 { pt3dadd( 60.3741, -301.357, 52.2094, 0.28 ) }
    dend_27 { pt3dadd( 60.4908, -303.066, 52.6853, 0.28 ) }
    dend_27 { pt3dadd( 60.6401, -307.208, 54.2133, 0.28 ) }
    dend_27 { pt3dadd( 60.6497, -311.031, 55.9204, 0.28 ) }
    dend_27 { pt3dadd( 60.9672, -315.996, 58.8384, 0.28 ) }
    dend_27 { pt3dadd( 64.0503, -326.993, 62.9109, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 24.1723, -132.284, 21.7548, 0.55 ) }
    dend_26 { pt3dadd( 24.8148, -132.591, 23.1059, 0.55 ) }
    dend_26 { pt3dadd( 26.0069, -133.478, 26.0069, 0.55 ) }
    dend_26 { pt3dadd( 26.9761, -134.398, 28.5741, 0.28 ) }
    dend_26 { pt3dadd( 27.964, -135.469, 31.3745, 0.55 ) }
    dend_26 { pt3dadd( 28.3898, -136.185, 33.1822, 0.28 ) }
    dend_26 { pt3dadd( 28.9244, -137.512, 36.4552, 0.55 ) }
    dend_26 { pt3dadd( 28.8973, -138.273, 38.002, 0.28 ) }
    dend_26 { pt3dadd( 28.821, -138.558, 38.6009, 0.28 ) }
    dend_26 { pt3dadd( 28.6661, -138.963, 39.6372, 0.55 ) }
    dend_26 { pt3dadd( 28.2323, -140.254, 43.561, 0.28 ) }
    dend_26 { pt3dadd( 28.0873, -140.747, 45.2066, 0.55 ) }
    dend_26 { pt3dadd( 28.05, -142.115, 49.9819, 0.28 ) }
    dend_26 { pt3dadd( 28.1573, -142.76, 52.5045, 0.28 ) }
    dend_26 { pt3dadd( 28.4385, -143.572, 55.5796, 0.55 ) }
    dend_26 { pt3dadd( 29.1782, -144.801, 60.0014, 0.28 ) }
    dend_26 { pt3dadd( 29.3287, -144.956, 60.5729, 0.55 ) }
    dend_26 { pt3dadd( 30.2241, -145.687, 63.3005, 0.28 ) }
    dend_26 { pt3dadd( 30.3284, -145.752, 63.5352, 0.55 ) }
    dend_26 { pt3dadd( 31.2389, -146.611, 65.6509, 0.28 ) }
    dend_26 { pt3dadd( 31.6324, -147.102, 66.6918, 0.55 ) }
    dend_26 { pt3dadd( 34.7242, -150.664, 75.269, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -48.9044, -145.157, 69.1012, 0.55 ) }
    dend_22 { pt3dadd( -56.6857, -150.726, 77.0765, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -48.9044, -145.157, 69.1012, 0.55 ) }
    dend_21 { pt3dadd( -55.2661, -153.092, 71.886, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 11
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 15
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BP_94d2820eba_0_0


