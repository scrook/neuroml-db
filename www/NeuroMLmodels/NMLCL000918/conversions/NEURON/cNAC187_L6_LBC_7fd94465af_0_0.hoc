// Cell: cNAC187_L6_LBC_7fd94465af_0_0
/*
{
  "id" : "cNAC187_L6_LBC_7fd94465af_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.78412, -8.09899, 0.0, 4.55814", "-5.26901, -7.31108, 0.0, 8.32644", "-4.7539, -6.52318, 0.0, 11.1999", "-4.23878, -5.73527, 0.0, 12.9076", "-3.72367, -4.94736, 0.0, 14.3867", "-3.20856, -4.15945, 0.0, 15.6541", "-2.69344, -3.37154, 0.0, 16.4084", "-2.17833, -2.58363, 0.0, 17.1297", "-1.66322, -1.79572, 0.0, 17.2471", "-1.1481, -1.00781, 0.0, 17.2628", "-0.632991, -0.219905, 0.0, 17.2074", "-0.117878, 0.568004, 0.0, 16.9082", "0.397236, 1.35591, 0.0, 16.5246", "0.912349, 2.14382, 0.0, 15.7252", "1.42746, 2.93173, 0.0, 14.8134", "1.94257, 3.71964, 0.0, 13.8399", "2.45769, 4.50755, 0.0, 12.6669", "2.9728, 5.29546, 0.0, 11.0086", "3.48791, 6.08336, 0.0, 8.99182", "4.00303, 6.87127, 0.0, 6.51377", "4.51814, 7.65918, 0.0, 3.7977" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.57932, -10.8079, -1.33, 5.9", "-1.89843, -12.9431, -1.39075, 5.22", "-2.28792, -15.5492, -1.46489, 4.31", "-2.81432, -19.0715, -1.56509, 3.63", "-3.17057, -21.4552, -1.63291, 3.18", "-3.43134, -23.2001, -1.68255, 3.18", "-3.91084, -26.4085, -1.77382, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.219318, -8.6764, -8.12, 2.04", "-0.275563, -11.0163, -8.03213, 2.04", "-0.291734, -15.3519, -8.00215, 2.04", "-0.263386, -17.3288, -8.05884, 2.04", "-0.201428, -19.9799, -8.17669, 2.04", "-0.144989, -22.4038, -8.32568, 2.04", "-0.0545841, -26.2864, -8.56434, 1.81", "0.0464438, -29.206, -8.76966, 2.27", "0.196065, -32.4571, -9.038, 2.27", "0.360762, -35.1681, -9.34273, 2.27", "0.485161, -36.8558, -9.62001, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.93069, -7.9099, -3.17, 2.72", "6.53548, -9.2736, -3.13419, 1.81", "8.63656, -11.0279, -3.22831, 1.59", "10.5868, -12.6375, -3.39154, 1.81", "11.4806, -13.3568, -3.50154, 2.04", "13.6044, -15.0667, -3.85666, 1.81", "15.4108, -16.507, -4.19287, 1.36", "17.0111, -17.7808, -4.54516, 1.13", "18.8917, -19.3154, -5.03943, 1.59", "21.0834, -21.1944, -5.79341, 1.36", "22.7737, -22.7179, -6.47067, 1.36", "23.7311, -23.592, -6.89926, 1.81", "25.352, -25.0879, -7.69108, 1.36", "27.125, -26.6819, -8.6169, 1.36", "29.5881, -28.9031, -10.0438, 1.36", "32.0281, -31.0401, -11.4843, 1.36", "33.8719, -32.5553, -12.5401, 1.36", "35.2232, -33.6043, -13.2804, 0.91", "36.9545, -34.8692, -14.1822, 1.59", "39.1687, -36.3586, -15.2273, 1.13", "41.5114, -37.8475, -16.1731, 1.13", "43.4356, -39.0592, -16.8779, 1.13", "45.6009, -40.4389, -17.6423, 1.13", "47.9746, -41.9667, -18.4784, 0.91", "49.8357, -43.1748, -19.1223, 1.13", "51.5663, -44.319, -19.6664, 0.91", "53.4774, -45.6385, -20.2439, 1.13", "56.541, -47.7833, -21.1367, 1.13", "59.0229, -49.4863, -21.8948, 1.13", "61.1853, -50.9448, -22.5609, 0.91", "62.995, -52.1769, -23.172, 1.13", "64.3417, -53.0953, -23.7041, 1.13", "66.3956, -54.4385, -24.5352, 0.68", "68.7217, -55.9371, -25.5273, 0.91", "70.1214, -56.8067, -26.1762, 0.91", "73.2397, -58.6756, -27.6478, 0.91", "75.6806, -60.0576, -28.7464, 1.13", "78.7414, -61.7439, -29.9688, 1.13", "81.0332, -62.9626, -30.7319, 0.91", "83.5575, -64.2626, -31.3938, 1.13", "86.8139, -65.8705, -32.0671, 0.68", "89.936, -67.3485, -32.5226, 0.68", "91.9947, -68.2973, -32.7245, 1.36", "94.0254, -69.2356, -32.8834, 1.36", "96.5989, -70.4269, -32.9797, 0.68", "99.3513, -71.7401, -32.9999, 0.45", "101.582, -72.849, -33.0212, 0.68", "102.962, -73.584, -33.0386, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "4.22069, 7.79811, -5.26, 1.36", "4.54674, 8.89774, -5.30091, 1.36", "5.26149, 11.1946, -5.38605, 1.13", "5.7779, 12.7821, -5.51148, 0.91", "6.32309, 14.1597, -5.67244, 0.91", "7.19833, 16.0207, -5.97484, 0.91", "7.88616, 17.3568, -6.25531, 0.91", "8.73343, 18.994, -6.70767, 1.13", "9.56413, 20.6928, -7.31659, 0.91", "10.4037, 22.5527, -8.21054, 0.91", "10.9859, 23.9328, -9.05642, 1.36", "11.3842, 25.1517, -9.93891, 1.36", "11.6588, 26.4244, -10.8794, 1.13", "11.8005, 27.9622, -11.9464, 1.59", "11.825, 29.7587, -13.0795, 0.45", "11.7644, 31.1131, -13.9296, 0.91", "11.5895, 33.4646, -15.4121, 1.81", "11.5102, 34.7021, -16.2345, 1.36", "11.4914, 36.1698, -17.2857, 1.59", "11.5567, 37.6077, -18.4011, 1.13", "11.681, 38.9811, -19.6433, 0.91", "11.8137, 39.4658, -20.3348, 0.91", "12.1408, 39.7844, -21.2145, 0.91", "12.5228, 39.9755, -22.0106, 0.91", "13.0913, 40.0972, -23.0267, 1.36", "14.3108, 40.2005, -24.9386, 0.68", "15.7248, 40.275, -26.9488, 1.36", "17.1199, 40.3173, -28.8302, 1.36", "18.1396, 40.3365, -30.1332, 0.45", "19.7175, 40.3314, -32.1615, 0.23", "20.8397, 40.3014, -33.6321, 0.23", "21.3931, 40.2703, -34.3737, 0.45", "22.4983, 40.2602, -35.9486, 0.23", "23.7976, 40.3532, -37.9708, 0.23", "24.641, 40.5013, -39.3141, 0.68", "25.7851, 40.8466, -41.1091, 1.13", "27.5667, 41.554, -43.9032, 0.23", "28.5148, 42.0193, -45.4166, 0.23", "29.4222, 42.5744, -46.8505, 0.68", "30.3894, 43.3104, -48.3614, 1.13", "30.9997, 43.8251, -49.2438, 1.13", "32.4166, 45.1359, -51.1781, 0.45", "33.7805, 46.5093, -52.9678, 0.45", "34.4479, 47.2379, -53.8892, 0.91", "36.0399, 49.1637, -56.2913, 0.23", "36.7638, 50.1112, -57.5197, 0.23", "37.67, 51.2345, -59.1519, 0.23", "38.3951, 52.0323, -60.5098, 0.68", "39.0365, 52.5552, -61.7445, 0.68", "40.0543, 53.2576, -63.7993, 0.23", "41.2086, 53.8394, -66.1913, 0.23", "42.3543, 54.2482, -68.6402, 0.23", "42.9884, 54.346, -69.9645, 0.23", "44.2832, 54.3096, -72.4456, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.70068, 8.94261, -2.94, 2.04", "2.06702, 11.0323, -3.14182, 2.04", "2.64744, 14.3431, -3.46157, 1.81", "3.16595, 17.3008, -3.74721, 1.13", "3.65765, 20.1055, -4.01809, 1.36", "3.6621, 20.1309, -4.02054, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.76068, 8.3021, -1.04, 4.31", "1.07987, 9.93115, -0.2774, 3.4", "0.767573, 10.6784, 0.0724064, 3.4", "-0.546796, 13.8234, 1.54467, 2.04", "-1.07825, 15.0951, 2.13996, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.24932, 3.1256, 3.4, 1.36", "-5.44904, 4.70443, 4.40658, 1.36", "-5.46921, 6.83108, 5.3986, 1.36", "-5.37682, 8.32429, 6.00516, 1.36", "-5.23123, 9.90082, 6.6084, 1.13", "-5.05246, 11.26, 7.1044, 1.13", "-4.80279, 13.1516, 7.76245, 1.13", "-4.50976, 14.9444, 8.31991, 0.68", "-4.02249, 17.4183, 9.01768, 1.36", "-3.54655, 19.6656, 9.65362, 0.68", "-3.31381, 20.7786, 9.97552, 1.13", "-2.84882, 23.2505, 10.7522, 0.68", "-2.58175, 25.0268, 11.3406, 0.23", "-2.42868, 26.2236, 11.7276, 1.36", "-2.33878, 27.1782, 11.9856, 0.23", "-2.34189, 28.4483, 12.2192, 0.68", "-2.43785, 29.4176, 12.278, 0.68", "-2.59972, 30.7741, 12.2093, 0.68", "-2.89662, 32.7887, 11.9798, 0.68", "-3.00235, 33.4131, 11.9191, 1.13", "-3.37889, 36.1637, 11.7227, 0.23", "-3.54446, 38.6241, 11.6207, 0.23", "-3.51316, 41.1909, 11.5825, 0.23", "-3.42969, 43.1803, 11.5679, 0.23", "-3.32361, 45.0597, 11.5794, 0.68", "-3.10495, 47.036, 11.6724, 0.23", "-2.65595, 48.9582, 11.9461, 0.23", "-2.24408, 50.1942, 12.2703, 0.23", "-1.26273, 61.1111, 12.9522, 0.23", "-0.28954, 71.9205, 14.5643, 0.23", "1.51673, 82.6129, 16.1653, 0.23", "3.90625, 93.2728, 17.0304, 0.23", "6.56042, 103.74, 18.7922, 0.23", "10.3866, 113.273, 22.3211, 0.23", "15.1105, 122.198, 26.1878, 0.23", "18.4448, 131.624, 30.4107, 0.23", "20.2855, 141.156, 35.2809, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.36068, 7.81911, -4.06, 1.59", "6.53594, 9.08546, -3.80648, 1.59", "8.61466, 11.3803, -3.3212, 1.36", "10.5698, 13.5948, -2.84251, 1.59", "13.2823, 16.7293, -2.11287, 1.36", "16.147, 20.1038, -1.31399, 1.36", "18.2685, 22.6457, -0.726534, 1.36", "20.6866, 25.6372, -0.117795, 1.36", "22.9192, 28.4615, 0.354564, 1.36", "24.611, 30.6763, 0.626678, 1.36", "25.4208, 31.7762, 0.681675, 1.81", "27.2172, 34.2319, 0.543165, 1.36", "29.4049, 37.1254, 0.160908, 0.91", "31.5174, 39.846, -0.381319, 1.36", "34.0385, 42.9942, -1.00144, 1.36", "35.734, 45.0649, -1.3696, 1.59", "38.1439, 47.9558, -1.87628, 1.13", "40.2075, 50.3844, -2.27423, 1.36", "42.3317, 52.824, -2.57835, 1.81", "44.6485, 55.4642, -2.82297, 1.81", "46.696, 57.7131, -2.82027, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.93069, 6.9056, -0.94, 1.59", "5.696, 9.01629, -0.0914437, 1.59", "6.18306, 10.4857, 0.500051, 1.36", "6.90392, 12.7024, 1.41241, 2.04", "8.08022, 16.3072, 2.90132, 1.36", "8.71953, 18.2133, 3.73748, 1.81", "9.82312, 21.3689, 5.13785, 1.36", "10.34, 22.7736, 5.81393, 1.13", "11.1691, 24.8618, 6.8427, 1.59", "11.8746, 26.4141, 7.61874, 1.59", "13.0223, 28.665, 8.69256, 1.13", "13.7467, 30.0023, 9.30162, 1.13", "14.8162, 31.8453, 10.1191, 1.81", "16.2028, 34.2389, 11.1473, 1.13", "17.2426, 36.0259, 11.885, 1.36", "18.4956, 38.1906, 12.7409, 1.13", "19.1129, 39.2905, 13.134, 1.59", "19.9668, 40.9032, 13.7233, 1.36", "20.6977, 42.4303, 14.2433, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.51814, 7.65918, 0.0, 1.16355", "12.7262, 20.2141, 0.0, 1.16355", "20.9343, 32.7691, 0.0, 1.16355" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-3.91084, -26.4085, -1.77382, 2.27", "-3.39002, -29.0442, -1.10369, 2.27", "-2.79203, -32.0706, -0.33425, 2.27", "-2.22424, -34.944, 0.396323, 2.27", "-2.06434, -35.7532, 0.602066, 2.27" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-3.91084, -26.4085, -1.77382, 1.13", "-6.73346, -28.7476, -1.95625, 1.13", "-7.9353, -29.7355, -2.01281, 1.13", "-10.7554, -31.976, -2.11074, 1.13", "-12.2691, -33.1727, -2.21782, 1.59", "-14.4902, -34.9217, -2.43322, 1.36", "-15.9401, -36.0319, -2.6131, 1.36", "-17.0885, -36.8616, -2.8218, 1.36", "-18.523, -37.8879, -3.15089, 1.36", "-19.9096, -38.8954, -3.57222, 1.36", "-21.5214, -40.0779, -4.16979, 1.36", "-23.4917, -41.5437, -4.98914, 1.36", "-25.057, -42.7908, -5.61069, 1.36", "-25.8626, -43.4854, -5.94553, 1.36", "-27.3749, -44.9176, -6.55575, 1.59", "-28.8664, -46.4869, -7.09674, 1.13", "-30.7003, -48.5909, -7.77203, 1.36", "-32.6482, -50.96, -8.46285, 1.36", "-33.6263, -52.1514, -8.78162, 2.04", "-35.2901, -54.1267, -9.32191, 1.59", "-37.2021, -56.3742, -9.942, 1.13", "-38.1666, -57.4788, -10.2565, 1.13", "-38.8524, -58.1993, -10.4962, 1.13", "-39.7379, -59.0115, -10.8063, 1.13", "-41.4713, -60.4784, -11.3653, 0.91", "-42.4811, -61.2988, -11.6903, 0.91", "-43.4057, -62.1041, -11.9062, 0.91", "-44.7157, -63.4044, -12.0776, 0.91", "-46.1483, -64.9398, -12.1698, 0.68", "-47.6331, -66.5707, -12.2014, 0.91", "-49.3856, -68.4614, -12.1975, 0.91", "-52.1884, -71.4496, -12.185, 1.13", "-54.3843, -73.765, -12.2245, 1.81", "-56.3707, -75.8302, -12.2927, 0.91", "-58.118, -77.6366, -12.4098, 0.91", "-60.0577, -79.5956, -12.6238, 1.59", "-61.0033, -80.5212, -12.7828, 1.59", "-62.5361, -81.9634, -13.2121, 0.68", "-63.2798, -82.6515, -13.4533, 0.68", "-64.4152, -83.7228, -13.8222, 1.13", "-65.2422, -84.5378, -14.0859, 1.13", "-65.9584, -85.2286, -14.2918, 1.13", "-67.3529, -86.4847, -14.6453, 0.91", "-68.988, -87.8571, -14.9939, 1.13", "-70.4396, -89.0538, -15.2381, 1.13", "-71.7052, -90.0913, -15.3995, 0.68", "-73.3326, -91.4652, -15.5284, 0.68", "-74.3562, -92.3476, -15.5671, 1.13", "-74.9769, -92.8563, -15.5689, 1.13", "-77.3586, -94.5977, -15.5992, 0.68", "-78.9352, -95.6344, -15.6762, 1.13", "-79.829, -96.1815, -15.7459, 1.36", "-81.643, -97.2636, -15.9557, 0.68", "-83.9739, -98.5924, -16.3043, 1.13", "-86.3856, -99.9125, -16.8143, 0.45", "-87.8303, -100.622, -17.1967, 0.23", "-89.4719, -101.405, -17.6588, 0.45", "-90.6319, -101.941, -17.9947, 1.13", "-93.1939, -103.066, -18.7511, 0.45", "-95.1304, -103.848, -19.3008, 1.36", "-97.5683, -104.695, -19.8606, 1.81", "-99.0476, -105.064, -20.14, 0.68", "-100.669, -105.347, -20.3963, 0.91", "-102.655, -105.584, -20.6307, 1.13", "-104.775, -105.749, -20.8262, 0.68", "-107.551, -105.879, -20.9715, 1.36", "-110.233, -105.952, -21.0691, 0.23", "-111.964, -105.963, -21.0995, 1.59", "-112.913, -105.966, -21.0863, 1.59" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.485161, -36.8558, -9.62001, 0.68", "1.69234, -37.125, -10.9094, 0.68", "2.88249, -37.5017, -11.9547, 1.13", "4.08004, -38.0221, -12.9079, 1.13", "4.71301, -38.3514, -13.3917, 1.13", "5.26319, -38.6744, -13.8223, 0.91", "6.24567, -39.2672, -14.6243, 1.36", "7.25873, -39.8646, -15.3584, 1.13", "8.29899, -40.6103, -16.0815, 1.13", "8.59221, -40.8894, -16.3, 1.13", "8.91171, -41.2484, -16.5618, 1.13", "9.38555, -41.844, -17.0037, 1.13", "9.86646, -42.4627, -17.4631, 1.13", "10.4961, -43.2714, -18.0994, 1.13", "11.3798, -44.4301, -19.0479, 0.68", "11.8968, -45.1052, -19.6019, 1.13", "13.1096, -46.697, -20.9466, 0.68", "13.9022, -47.7067, -21.8288, 1.13", "15.1585, -49.2606, -23.2352, 0.45", "15.7805, -49.9638, -23.8942, 0.45", "17.1308, -51.3428, -25.2391, 0.45", "18.6065, -52.7529, -26.6616, 1.13", "20.1336, -54.1382, -28.0779, 0.45", "21.2021, -55.1116, -29.0117, 0.45", "22.9947, -56.7141, -30.4219, 0.45", "24.2793, -57.8469, -31.3671, 0.23", "25.3922, -58.8107, -32.1319, 1.13", "26.3788, -59.6595, -32.743, 0.23", "28.0293, -61.0692, -33.6541, 0.23", "29.3476, -62.1404, -34.2448, 0.68", "31.7477, -63.9902, -35.0213, 0.23", "34.4447, -65.8257, -35.4877, 0.23", "35.3272, -66.3244, -35.5267, 0.23", "36.8743, -67.0319, -35.4677, 0.68", "39.0974, -67.9216, -35.2974, 0.23", "40.881, -68.6349, -35.096, 0.91", "43.3922, -69.6551, -34.7876, 0.23", "46.2421, -70.8257, -34.4808, 0.23", "50.7656, -72.705, -34.2154, 0.23", "54.6071, -74.3369, -34.2257, 0.23", "56.3049, -75.0717, -34.345, 0.68", "58.6566, -76.1237, -34.5998, 0.23", "59.9519, -76.7478, -34.803, 0.91", "61.451, -77.5071, -35.1067, 0.23", "63.6896, -78.6207, -35.7266, 0.68", "65.9608, -79.5551, -36.5455, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.485161, -36.8558, -9.62001, 1.81", "-1.22286, -39.1201, -12.1881, 1.81", "-2.56237, -40.9016, -14.1316, 1.81", "-3.81626, -42.4935, -15.7694, 1.81", "-5.64475, -44.8149, -18.1578, 1.81", "-6.85148, -46.347, -19.734, 1.81", "-7.71526, -47.4436, -20.8623, 1.59", "-8.44868, -48.4948, -21.8843, 1.81", "-9.34017, -49.8785, -23.2373, 1.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "102.962, -73.584, -33.0386, 0.23", "105.185, -73.0565, -33.5003, 0.23", "109.376, -71.8134, -34.1806, 0.45", "111.302, -71.2205, -34.4972, 0.45", "113.722, -70.4029, -34.9246, 0.23", "115.929, -69.6571, -35.3145, 1.13", "119.51, -68.4474, -35.947, 0.23", "122.33, -67.3355, -36.385, 0.91", "125.236, -65.9568, -36.8356, 0.23", "127.796, -64.7216, -37.2648, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "102.962, -73.584, -33.0386, 0.23", "105.213, -75.1289, -32.6244, 0.23", "107.786, -76.8632, -32.2149, 0.23", "109.987, -78.361, -31.905, 0.23", "111.266, -79.2443, -31.7405, 1.36", "113.153, -80.5716, -31.5152, 0.23", "115.042, -81.9545, -31.3108, 0.68", "117.388, -83.7254, -31.1591, 0.23", "118.843, -84.8744, -31.1473, 0.23", "119.666, -85.5735, -31.1861, 0.23", "120.372, -86.2073, -31.2385, 0.91", "122.2, -87.9707, -31.4369, 0.23", "123.605, -89.404, -31.6402, 0.23", "124.144, -89.9583, -31.6928, 0.91", "125.138, -90.8995, -31.7306, 0.91", "125.977, -91.6075, -31.7198, 0.23", "126.906, -92.2951, -31.6694, 0.23", "128.069, -93.0602, -31.6022, 0.68", "130.613, -94.6616, -31.4467, 0.23", "132.398, -95.7351, -31.3722, 0.23", "133.981, -96.6415, -31.3341, 1.36", "135.413, -97.4432, -31.3252, 0.45", "137.491, -98.5802, -31.3553, 0.23", "138.713, -99.2469, -31.4054, 1.13", "139.66, -99.7837, -31.4376, 1.13", "140.99, -100.586, -31.4232, 0.23", "141.696, -101.032, -31.3866, 0.91", "142.712, -101.704, -31.2955, 0.91", "144.792, -103.156, -31.0359, 0.23", "147.003, -104.84, -30.763, 0.23", "148.428, -106.028, -30.5957, 0.23", "148.99, -106.555, -30.5358, 1.13", "150.82, -108.431, -30.3698, 0.23", "151.74, -109.466, -30.3081, 1.36", "153.009, -111.036, -30.2351, 0.68", "153.866, -112.153, -30.2442, 1.13", "154.983, -113.635, -30.2468, 0.23", "155.554, -114.386, -30.2323, 0.68", "156.328, -115.408, -30.1706, 0.68", "158.035, -117.605, -29.9656, 0.23", "159.149, -119.059, -29.7756, 0.68", "160.158, -120.375, -29.5802, 0.23", "160.827, -121.235, -29.4336, 0.23", "161.931, -122.712, -29.161, 0.23", "162.857, -123.997, -28.8961, 0.23", "163.93, -125.634, -28.5224, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.6621, 20.1309, -4.02054, 0.23", "2.99423, 21.9689, -4.83085, 0.23", "2.58418, 23.2499, -5.32996, 0.68", "2.18012, 24.9454, -5.90315, 1.13", "1.91838, 26.369, -6.44824, 0.68", "1.44355, 28.6445, -7.47482, 0.68", "1.22057, 29.7354, -7.99213, 0.68", "1.10577, 30.3129, -8.28257, 0.68", "0.763123, 31.7436, -9.08891, 1.81", "0.302327, 33.8703, -10.3946, 1.13", "-0.197226, 36.2785, -12.036, 0.68", "-0.492292, 37.5163, -12.9323, 1.13", "-1.04821, 39.6099, -14.4749, 0.45", "-1.44802, 41.0689, -15.6093, 0.45", "-1.87049, 42.7292, -17.0294, 1.36", "-2.13963, 44.0727, -18.3503, 0.68", "-2.21923, 45.0265, -19.5151, 0.68", "-2.24133, 46.266, -21.234, 1.36", "-2.15408, 47.8737, -23.676, 0.45", "-1.96029, 49.1658, -25.902, 0.45", "-1.72049, 50.2918, -28.2359, 0.45", "-1.36209, 51.2402, -30.6399, 0.45", "-1.00892, 51.7778, -32.3443, 1.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.6621, 20.1309, -4.02054, 1.13", "3.49455, 23.7445, -4.4412, 1.13", "3.53938, 26.9158, -4.77872, 1.13", "3.73286, 30.874, -5.29863, 1.13", "4.04632, 35.4279, -5.98153, 1.13", "4.17109, 37.1625, -6.26297, 1.13", "4.35416, 39.2119, -6.62165, 1.13", "4.69762, 42.603, -7.24412, 1.36", "5.12572, 45.8498, -7.87538, 1.13", "5.7962, 49.6495, -8.67431, 1.13", "6.3791, 52.3769, -9.3482, 1.59", "6.76541, 54.2695, -9.86212, 1.36" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.07825, 15.0951, 2.13996, 2.95", "-2.25521, 15.872, 2.05091, 2.95" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.07825, 15.0951, 2.13996, 0.91", "0.229623, 18.0772, 3.57992, 0.91", "0.456476, 18.7339, 3.9694, 0.91", "0.977002, 19.9914, 4.8509, 0.91", "1.77551, 21.5164, 6.03795, 1.36", "3.2619, 23.7524, 8.00495, 0.91", "4.5476, 25.3365, 9.49189, 0.91", "6.43195, 27.1667, 11.3564, 1.36", "8.72222, 29.1165, 13.5751, 0.68", "10.4081, 30.3816, 15.181, 0.23", "12.1011, 31.4995, 16.666, 0.23", "14.2216, 32.4636, 18.1866, 0.23", "14.9514, 32.6709, 18.6046, 1.13", "16.4103, 32.9458, 19.3038, 0.23", "17.4249, 33.0914, 19.7439, 0.23", "18.895, 33.2863, 20.3703, 0.68", "22.0638, 33.7258, 21.7282, 0.23", "23.1759, 33.5144, 22.2429, 0.23", "30.7787, 38.6755, 31.1438, 0.23", "39.6882, 44.5936, 38.2134, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "20.2855, 141.156, 35.2809, 0.23", "22.0875, 151.071, 37.5681, 0.23", "22.8416, 160.546, 41.5439, 0.23", "23.336, 170.22, 45.1013, 0.23", "22.7604, 179.579, 49.3565, 0.23", "22.7849, 188.406, 54.5738, 0.23", "21.4885, 196.682, 60.4179, 0.23", "18.5661, 204.676, 66.0333, 0.23", "17.4936, 212.642, 72.2985, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "20.2855, 141.156, 35.2809, 0.23", "22.0971, 151.224, 37.4408, 0.23", "23.0113, 161.59, 38.7078, 0.23", "21.928, 171.999, 39.4735, 0.23", "21.0203, 182.171, 41.8026, 0.23", "21.0609, 192.114, 45.0244, 0.23", "22.156, 201.643, 49.0811, 0.23", "22.0771, 211.261, 53.1061, 0.23", "23.4808, 220.522, 57.6077, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "46.696, 57.7131, -2.82027, 0.68", "47.7139, 58.8857, -3.05702, 0.68", "48.8132, 60.132, -3.30536, 1.13", "49.6569, 61.1112, -3.55073, 1.59", "51.0038, 62.6801, -3.99156, 0.68", "51.8232, 63.6199, -4.26486, 0.68", "53.0716, 65.0204, -4.6699, 1.81", "54.2058, 66.2754, -5.06621, 0.91", "55.4963, 67.6965, -5.5172, 0.23", "56.5672, 68.8642, -5.90287, 1.13", "57.3598, 69.7113, -6.18207, 1.13", "58.3664, 70.6924, -6.4996, 0.23", "59.2612, 71.4641, -6.74771, 0.23", "60.1165, 72.1085, -6.94961, 0.91", "60.965, 72.6627, -7.08789, 0.23", "61.841, 73.1994, -7.23151, 1.36", "63.1818, 73.9763, -7.45202, 0.23", "63.9153, 74.4074, -7.56521, 1.36", "64.783, 74.962, -7.70648, 1.81", "67.097, 76.6689, -8.11892, 0.23", "68.4132, 77.7376, -8.39099, 0.23", "69.4656, 78.6348, -8.61615, 1.36", "70.7632, 79.8327, -8.89944, 0.23", "71.9593, 81.0031, -9.18231, 0.91", "73.0649, 82.1614, -9.47574, 0.23", "73.9566, 83.2616, -9.76109, 2.27" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "46.696, 57.7131, -2.82027, 0.23", "49.6086, 58.2713, -3.26657, 0.23", "52.9683, 59.2007, -3.84282, 0.45", "55.0871, 59.9591, -4.23752, 1.13", "59.3119, 61.5699, -5.03301, 0.45", "61.5448, 62.4928, -5.48575, 1.36", "64.4525, 63.8019, -6.08874, 1.13", "68.1734, 65.6716, -6.90811, 0.91", "71.8614, 67.7096, -7.68306, 0.68", "73.8203, 68.8785, -7.98351, 0.23", "75.4939, 69.9238, -8.12474, 0.68", "77.8272, 71.3651, -8.17839, 0.23", "79.8569, 72.575, -8.12074, 1.13", "84.9114, 75.3461, -7.81651, 0.23", "90.6207, 78.2351, -7.36078, 0.23", "93.2998, 79.4172, -7.14568, 1.36", "95.2947, 80.1402, -6.98446, 1.36", "99.4299, 81.3053, -6.71211, 0.23", "101.267, 81.6783, -6.63371, 0.23", "103.923, 81.7751, -6.65673, 0.91", "107.943, 81.2964, -7.06403, 0.23", "109.126, 81.1034, -7.24368, 0.91", "111.375, 80.7297, -7.67633, 0.91", "113.945, 80.3584, -8.25602, 0.23", "117.736, 79.9752, -9.27993, 1.59", "123.488, 79.6811, -11.1693, 0.23", "126.429, 79.6561, -12.2176, 0.68", "128.339, 79.7042, -12.9378, 0.23", "130.299, 79.8259, -13.7473, 0.91", "133.566, 80.2097, -15.2514, 0.23", "135.764, 80.7686, -16.3911, 1.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.6977, 42.4303, 14.2433, 0.45", "21.9926, 42.6544, 14.6983, 0.45", "23.6833, 43.0548, 15.2987, 0.45", "24.7162, 43.3371, 15.6457, 0.91", "26.1149, 43.7071, 16.0737, 0.23", "27.4112, 44.0276, 16.4507, 0.68", "28.8831, 44.3533, 16.8416, 0.68", "29.8705, 44.5409, 17.0769, 0.23", "30.8032, 44.7053, 17.2566, 0.23", "32.4876, 44.9903, 17.526, 0.23", "33.8911, 45.1896, 17.7042, 0.23", "35.2075, 45.3143, 17.8189, 0.23", "35.9898, 45.3567, 17.8615, 0.23", "36.9804, 45.3715, 17.9175, 0.68", "37.9441, 45.3807, 17.9691, 0.68", "39.0632, 45.4287, 17.9961, 0.23", "47.2662, 45.5765, 18.7227, 0.23", "55.4566, 45.9017, 19.5293, 0.23", "63.3708, 46.1916, 21.7927, 0.23", "71.4716, 47.3265, 22.7986, 0.23", "79.6899, 47.8414, 23.0011, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "20.6977, 42.4303, 14.2433, 0.91", "21.2149, 44.2008, 14.5995, 0.91", "21.862, 45.771, 14.8704, 1.36", "22.7287, 47.874, 15.2332, 0.91", "23.548, 49.862, 15.5762, 0.91", "24.105, 51.2133, 15.8093, 0.68", "24.922, 53.1957, 16.1513, 0.45", "25.7901, 54.9357, 16.4576, 0.23", "28.5442, 65.5088, 16.9846, 0.23", "30.2862, 76.1262, 19.0332, 0.23", "31.1354, 86.8384, 21.2114, 0.23", "34.161, 96.8506, 24.2815, 0.23", "38.2717, 105.88, 28.605, 0.23", "41.4112, 114.674, 34.0541, 0.23", "46.2198, 123.746, 37.4704, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "20.9343, 32.7691, 0.0, 0.618443", "29.1424, 45.3241, 0.0, 0.618443", "37.3505, 57.8791, 0.0, 0.618443" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-2.06434, -35.7532, 0.602066, 0.68", "-2.05084, -37.925, 0.872914, 0.68", "-2.16787, -40.1222, 1.07453, 1.13", "-2.28777, -41.7174, 1.21975, 1.13", "-2.45702, -43.9227, 1.43963, 1.36", "-2.62302, -46.3502, 1.71028, 1.36", "-2.80132, -49.4823, 2.06632, 1.36", "-2.96625, -52.3152, 2.36917, 1.36", "-3.10614, -54.5499, 2.59779, 1.36", "-3.2739, -57.3024, 2.85347, 1.36", "-3.48001, -61.1446, 3.21362, 1.59", "-3.58772, -63.8394, 3.48605, 1.59", "-3.6545, -67.639, 3.8957, 1.36", "-3.67238, -71.1722, 4.26983, 1.36", "-3.70007, -73.8844, 4.50519, 1.59" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.06434, -35.7532, 0.602066, 1.59", "-2.74179, -37.869, 2.79048, 1.59", "-3.55436, -40.4067, 5.41536, 1.81", "-4.06581, -42.0041, 7.06755, 1.81" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-112.913, -105.966, -21.0863, 0.23", "-114.517, -107.614, -22.2137, 0.23", "-116.13, -109.491, -23.2966, 0.23", "-116.786, -110.315, -23.7147, 0.91", "-117.547, -111.317, -24.1609, 0.45", "-118.202, -112.181, -24.509, 0.91", "-119.12, -113.399, -24.9471, 0.23", "-119.858, -114.473, -25.228, 0.23", "-120.798, -115.86, -25.5455, 0.91", "-121.749, -117.178, -25.8578, 0.91", "-122.522, -118.197, -26.0947, 1.59", "-123.702, -119.751, -26.4559, 0.23", "-124.565, -120.892, -26.7348, 0.68", "-125.693, -122.465, -27.1392, 0.23", "-126.488, -123.654, -27.4714, 0.91", "-127.236, -124.823, -27.8511, 0.91", "-128.229, -126.391, -28.4125, 0.23", "-129.058, -127.612, -28.8836, 0.91", "-129.981, -128.797, -29.3634, 0.23", "-131.256, -130.134, -29.9127, 0.45", "-132.604, -131.26, -30.4199, 0.45", "-133.245, -131.711, -30.6397, 1.13", "-134.778, -132.715, -31.1107, 1.81", "-136.084, -133.641, -31.525, 1.36", "-137.815, -135.003, -32.1391, 0.68", "-138.68, -135.801, -32.4773, 1.13", "-140.204, -137.671, -33.2932, 0.68", "-141.103, -138.968, -33.8644, 1.13", "-142.409, -141.354, -34.9315, 0.45", "-142.989, -142.741, -35.5562, 0.45", "-143.195, -143.433, -35.8773, 1.13", "-143.669, -145.641, -36.9281, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-112.913, -105.966, -21.0863, 0.23", "-115.312, -105.768, -21.4753, 0.23", "-116.765, -105.684, -21.7287, 0.91", "-119.029, -105.62, -22.1415, 0.23", "-121.586, -105.602, -22.5702, 0.91", "-123.596, -105.548, -22.9046, 0.23", "-125.075, -105.495, -23.154, 0.23", "-129.354, -105.414, -23.9198, 0.68", "-132.794, -105.412, -24.5392, 0.23", "-135.188, -105.509, -24.9674, 0.23", "-137.635, -105.719, -25.4025, 0.45", "-140.755, -105.967, -25.9629, 0.23", "-142.214, -106.114, -26.2261, 0.23", "-143.608, -106.352, -26.4807, 0.23", "-146.413, -107.012, -27.0261, 0.23", "-148.583, -107.777, -27.5087, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.34017, -49.8785, -23.2373, 1.13", "-8.39152, -51.1359, -25.2054, 1.13", "-7.8263, -52.3073, -26.3616, 1.13", "-7.3206, -53.6312, -27.0918, 0.45", "-6.91508, -54.6695, -27.41, 0.68", "-6.54218, -55.6272, -27.6024, 0.68", "-5.66715, -58.0513, -27.9294, 1.13", "-5.00626, -59.9334, -28.0103, 1.13", "-4.16189, -62.4113, -28.0735, 0.91", "-3.52951, -64.3336, -28.1474, 0.91", "-2.63015, -66.9893, -28.2926, 1.59", "-1.55859, -69.9148, -28.6398, 0.91", "-0.566152, -72.3313, -29.125, 0.91", "0.348599, -74.2925, -29.7316, 0.91", "2.00217, -77.6088, -31.2403, 0.91", "2.92538, -79.3429, -32.3363, 1.36", "4.66664, -82.1743, -34.6782, 0.68", "5.59422, -83.4041, -36.0198, 0.68", "6.60886, -84.4825, -37.5731, 0.68", "7.80475, -85.457, -39.5237, 1.36", "9.07856, -86.2763, -41.7984, 0.68", "9.77631, -86.6994, -43.0769, 0.68", "10.7447, -87.4211, -44.9177, 0.68", "11.4764, -88.3713, -46.4716, 0.68", "12.2737, -89.7783, -48.0681, 0.68", "12.7737, -90.8125, -48.9903, 0.68", "13.3767, -92.5134, -50.1872, 0.68", "14.0781, -94.7957, -51.6362, 0.68", "15.0566, -97.9735, -53.3714, 0.68", "16.126, -101.149, -54.9171, 0.68", "17.3095, -103.989, -56.1689, 0.68", "19.0292, -107.619, -57.6673, 0.45", "20.6415, -110.716, -58.859, 0.45", "22.12, -113.352, -59.715, 1.13", "23.5549, -115.823, -60.3307, 0.45", "25.9621, -120.099, -60.9883, 0.45", "26.7816, -121.54, -61.0991, 1.13", "28.1516, -123.941, -61.1394, 1.13", "29.6659, -126.8, -60.978, 0.23", "30.7985, -129.088, -60.7609, 0.91", "31.7068, -131.039, -60.4628, 0.91", "33.6749, -135.41, -59.7046, 0.23", "35.2237, -138.736, -59.1018, 0.23", "36.558, -141.555, -58.5508, 0.45", "37.0923, -142.61, -58.3559, 0.45", "38.3981, -145.102, -57.9146, 0.23", "40.1622, -148.53, -57.3023, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-9.34017, -49.8785, -23.2373, 0.91", "-10.3363, -50.5638, -24.1099, 0.91", "-11.0931, -51.1604, -24.8187, 1.13", "-12.0212, -51.9412, -25.6844, 1.13", "-13.1048, -52.8382, -26.6722, 1.13", "-13.4124, -53.0868, -26.9512, 1.13", "-14.0558, -53.5789, -27.5322, 1.13", "-14.9924, -54.269, -28.4, 1.13", "-15.5373, -54.634, -28.9109, 1.59", "-16.8248, -55.428, -30.1079, 0.68", "-17.7179, -55.9623, -30.9412, 0.68", "-18.3537, -56.3328, -31.5699, 0.68", "-18.8165, -56.5827, -32.0435, 0.91", "-19.2433, -56.7975, -32.4805, 0.91", "-19.6556, -57.0106, -32.9441, 0.91", "-20.4308, -57.4406, -33.9145, 0.91", "-20.8824, -57.7442, -34.5344, 0.91", "-21.4349, -58.2004, -35.3427, 1.13", "-22.4607, -59.1659, -36.9136, 0.91", "-23.2687, -59.9745, -38.1843, 0.91", "-23.971, -60.6569, -39.3034, 0.91", "-24.5916, -61.2681, -40.3243, 0.68", "-25.7121, -62.4284, -42.1957, 0.45", "-26.2457, -63.0234, -43.1174, 0.45", "-27.0958, -64.0127, -44.6081, 1.13", "-28.0558, -65.1026, -46.233, 0.23", "-28.4891, -65.5543, -46.9008, 0.23", "-29.033, -66.0718, -47.6796, 0.45", "-29.5364, -66.5355, -48.3885, 0.45", "-30.2894, -67.2232, -49.4105, 0.45", "-30.675, -67.5946, -49.9113, 0.45", "-31.516, -68.4733, -50.9168, 0.45", "-32.4866, -69.4246, -52.0224, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "127.796, -64.7216, -37.2648, 0.23", "129.585, -65.6005, -38.6456, 0.23", "131.931, -67.0226, -40.577, 0.23", "133.379, -68.0611, -41.8411, 0.91", "135.693, -70.1009, -43.7982, 0.23", "136.916, -71.3388, -44.804, 0.23", "137.651, -72.2157, -45.425, 0.91", "138.939, -74.2072, -46.468, 0.23", "139.687, -75.613, -47.0245, 0.91", "141.285, -78.5945, -47.9524, 0.23", "141.937, -79.7901, -48.248, 0.68", "143.816, -82.8469, -48.8935, 0.23", "145.383, -85.1558, -49.3649, 0.23", "146.532, -86.6336, -49.6538, 0.68", "149.156, -89.634, -50.2959, 0.23", "150.531, -91.0188, -50.6627, 0.23", "151.98, -92.3567, -51.0536, 1.13", "154.543, -94.4165, -51.7971, 0.23", "156.835, -96.0985, -52.5406, 0.23", "157.755, -96.7202, -52.8879, 0.91", "160.886, -98.7689, -54.134, 0.23", "164.011, -100.706, -55.416, 0.23", "168.038, -103.126, -57.1254, 0.23", "169.412, -103.871, -57.7083, 0.68", "172.611, -105.565, -59.1294, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "127.796, -64.7216, -37.2648, 0.23", "130.732, -63.8827, -37.9305, 0.23", "132.603, -63.3208, -38.3372, 0.23", "135.015, -62.5781, -38.8291, 0.91", "136.593, -62.0946, -39.107, 0.23", "139.536, -61.1895, -39.5156, 0.68", "142.782, -60.1294, -39.8875, 0.23", "144.181, -59.6265, -40.027, 0.23", "146.181, -58.8066, -40.1992, 0.23", "147.355, -58.2439, -40.2559, 0.23", "150.034, -56.6138, -40.3348, 0.91", "152.585, -54.6688, -40.3524, 0.23", "153.954, -53.4507, -40.3577, 0.91", "155.645, -51.8071, -40.441, 0.23", "157.419, -50.0283, -40.6124, 0.23", "160.161, -47.2843, -41.0062, 0.23", "161.147, -46.3487, -41.2015, 0.91", "162.211, -45.4814, -41.4416, 1.36", "164.428, -44.0155, -41.9716, 0.23", "166.934, -42.7695, -42.6072, 0.23", "167.895, -42.4114, -42.8739, 0.91", "169.731, -41.8373, -43.448, 0.23", "171.505, -41.2253, -44.0715, 0.23", "173.376, -40.3496, -44.7779, 0.91", "174.824, -39.4561, -45.2887, 0.23", "175.973, -38.6388, -45.7009, 0.68", "177.657, -37.2898, -46.3094, 0.23", "178.377, -36.624, -46.5621, 0.68", "181.34, -33.5922, -47.6657, 0.23", "183.018, -31.7292, -48.279, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.00892, 51.7778, -32.3443, 0.23", "-0.419464, 53.4942, -33.8828, 0.23", "0.187858, 55.2378, -35.5386, 0.23", "0.651627, 56.483, -36.7375, 0.91", "1.23517, 57.9827, -38.1289, 0.23", "2.14493, 60.354, -40.179, 0.23", "2.33359, 60.8548, -40.5887, 1.13", "3.14129, 63.0869, -42.2891, 0.23", "3.55252, 64.3043, -43.1889, 0.23", "3.89541, 65.4488, -44.009, 0.23", "4.20827, 66.6916, -44.9216, 0.91", "4.71968, 69.5936, -47.1044, 0.23", "4.78629, 70.7856, -48.094, 1.36", "4.56578, 72.7955, -49.9431, 0.23", "4.30141, 74.2847, -51.4054, 0.23", "3.8179, 76.191, -53.4559, 0.23", "3.32244, 77.5818, -55.1137, 0.68", "2.39365, 79.2649, -57.3255, 0.23", "1.31233, 80.776, -59.4962, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.00892, 51.7778, -32.3443, 0.23", "-2.46501, 53.1018, -33.186, 0.23", "-3.27001, 53.8338, -33.6513, 0.68", "-4.30726, 54.777, -34.2509, 0.68", "-4.94744, 55.3592, -34.621, 0.23", "-6.33193, 56.6181, -35.4213, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "6.76541, 54.2695, -9.86212, 0.23", "6.64609, 56.8984, -10.3138, 0.23", "6.57999, 58.5827, -10.6486, 0.23", "6.50156, 60.8761, -11.1058, 0.91", "6.3817, 63.6676, -11.6364, 0.23", "6.31486, 65.5487, -11.9871, 0.23", "6.22046, 67.9233, -12.4064, 0.45", "6.1179, 69.7463, -12.7431, 0.23", "6.02725, 71.6797, -13.0807, 0.91", "5.94559, 73.3737, -13.3633, 1.13", "5.75467, 76.3918, -13.7854, 0.23", "5.63725, 78.417, -14.0123, 0.68", "5.5044, 81.1298, -14.3217, 0.23", "5.36714, 83.1308, -14.5208, 0.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.76541, 54.2695, -9.86212, 1.13", "7.18862, 55.3047, -10.7191, 1.13", "7.58844, 56.4809, -11.6087, 0.23", "7.83499, 57.5194, -12.2714, 0.68", "7.99882, 58.6854, -12.9843, 1.36", "8.1685, 60.5729, -14.066, 1.36", "8.2531, 61.6993, -14.7179, 0.23", "8.28778, 62.9868, -15.4293, 0.91", "8.31396, 64.5528, -16.3046, 1.36", "8.43344, 66.2927, -17.4153, 0.23", "8.54741, 67.0963, -18.0463, 0.68", "8.76152, 68.1236, -19.0143, 0.23", "8.91171, 68.6918, -19.617, 0.23", "9.36687, 69.9112, -21.0332, 0.91", "9.86889, 71.033, -22.3402, 1.36", "10.4405, 72.2885, -23.634, 0.23", "10.8421, 73.3222, -24.5383, 0.23", "11.1039, 74.1859, -25.0866, 1.13", "11.1995, 74.587, -25.2744, 1.13", "11.53, 76.1629, -25.7576, 0.23", "11.8395, 77.7977, -26.0912, 1.59", "12.0917, 79.0268, -26.2665, 1.59", "12.4987, 80.9204, -26.5481, 0.45", "12.6359, 81.5263, -26.668, 0.45", "13.0877, 83.2888, -27.0825, 0.45", "13.3377, 84.0835, -27.3115, 0.45", "13.8431, 85.3134, -27.7992, 0.45", "14.597, 86.7181, -28.5849, 1.13", "15.574, 88.0508, -29.592, 0.23", "16.1114, 88.5939, -30.1524, 0.23", "16.8033, 89.0642, -30.8216, 0.91", "18.4869, 89.8806, -32.3822, 0.23", "19.268, 90.147, -33.1024, 1.13", "20.3497, 90.3754, -34.0204, 0.23", "22.1293, 90.6622, -35.4452, 0.68", "23.7729, 90.9247, -36.6872, 0.23", "24.5941, 91.0787, -37.2847, 0.68", "25.7534, 91.3381, -38.0971, 0.23", "27.3138, 91.7216, -39.1688, 0.23", "28.5996, 92.0857, -40.066, 0.68", "29.7053, 92.4446, -40.8651, 0.23", "30.9411, 92.981, -41.9253, 0.23", "32.0693, 93.5453, -42.9434, 0.23", "32.8441, 93.992, -43.6541, 0.91", "34.0352, 94.7709, -44.798, 0.23", "35.2474, 95.6293, -46.0052, 0.45", "37.2471, 97.1143, -48.0539, 0.23", "37.9832, 97.6917, -48.7983, 0.23", "39.0564, 98.5927, -49.9001, 0.23", "39.8504, 99.3064, -50.7381, 0.23", "41.2854, 100.641, -52.1564, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.25521, 15.872, 2.05091, 1.13", "-2.44913, 19.3924, 1.81924, 1.13", "-2.68856, 22.8252, 1.54484, 1.13", "-2.88342, 25.8394, 1.29176, 0.91", "-3.1126, 29.6243, 0.987619, 0.91", "-3.26041, 32.1964, 0.790869, 0.91", "-3.36738, 34.1755, 0.685587, 0.91", "-3.45884, 36.6257, 0.6259, 1.13", "-3.5339, 40.4375, 0.647983, 0.45", "-3.57616, 43.8756, 0.732305, 0.45", "-3.57472, 46.5338, 0.829405, 1.13", "-3.5309, 49.8397, 0.969846, 0.91", "-3.43741, 52.9401, 1.08623, 0.91", "-3.32081, 55.2837, 1.12341, 0.45", "-3.14409, 58.4701, 1.0711, 0.68", "-3.00535, 60.8993, 0.927843, 0.23", "-2.92564, 62.2944, 0.75077, 0.91", "-2.81993, 64.5072, 0.305741, 0.23", "-2.78219, 66.2664, -0.105962, 0.23", "-2.75043, 68.5001, -0.63601, 0.91", "-2.69447, 70.7905, -1.13799, 0.23", "-2.67214, 73.2011, -1.6257, 0.91", "-2.68776, 74.356, -1.84827, 1.13", "-2.72069, 77.7425, -2.50022, 0.23", "-2.72884, 79.6847, -2.82467, 0.23", "-2.72563, 82.0127, -3.19982, 1.13", "-2.70848, 83.7647, -3.44798, 1.13", "-2.67742, 85.2013, -3.61878, 1.13", "-2.51192, 89.3244, -4.11755, 0.23", "-2.3301, 92.3212, -4.52755, 1.13", "-2.22721, 93.9257, -4.75683, 1.36", "-2.09909, 95.467, -4.95857, 0.45", "-1.85817, 97.8259, -5.23834, 1.13", "-1.53202, 100.554, -5.49992, 0.23", "-1.32172, 102.471, -5.65676, 0.23", "-1.1502, 104.016, -5.76694, 0.23", "-0.875359, 106.708, -5.85985, 0.45", "-0.769394, 108.264, -5.86664, 0.91", "-0.675539, 110.36, -5.79786, 0.23", "-0.58303, 112.712, -5.65278, 1.59", "-0.486757, 115.372, -5.5264, 0.23", "-0.396669, 117.811, -5.4639, 0.91", "-0.271694, 121.647, -5.44018, 0.23", "-0.161249, 123.939, -5.42862, 0.23", "0.0715676, 127.37, -5.45751, 1.36", "0.391009, 130.634, -5.49308, 0.23", "0.689098, 133.279, -5.55636, 1.36", "0.788721, 134.027, -5.58777, 1.36", "1.47944, 138.313, -5.77134, 0.23", "1.91332, 140.827, -5.87857, 0.23", "2.21029, 142.346, -5.90483, 1.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.25521, 15.872, 2.05091, 0.68", "-3.62959, 14.399, 1.86328, 0.68", "-4.69667, 13.2278, 1.70502, 0.68", "-5.69417, 12.0534, 1.5386, 0.68", "-6.41567, 11.1506, 1.40655, 0.68", "-8.24063, 8.82625, 1.03748, 0.68", "-9.45296, 7.2513, 0.772061, 0.68", "-10.5486, 5.68932, 0.494424, 0.91", "-11.7687, 3.82684, 0.127065, 1.13", "-12.6405, 2.49168, -0.147698, 1.13", "-13.6288, 0.99367, -0.459129, 1.13", "-14.5412, -0.464437, -0.747431, 1.13", "-15.4805, -2.08282, -1.05927, 1.13", "-16.0884, -3.1623, -1.29224, 1.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "39.6882, 44.5936, 38.2134, 0.23", "44.458, 49.1014, 45.7688, 0.23", "49.4187, 53.8848, 53.043, 0.23", "52.86, 58.7946, 61.0643, 0.23", "57.6899, 63.1315, 68.6736, 0.23", "62.7528, 65.4518, 76.9216, 0.23", "68.663, 68.6324, 84.2984, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.6882, 44.5936, 38.2134, 0.23", "48.4675, 49.813, 43.6222, 0.23", "58.1906, 53.8942, 48.2784, 0.23", "67.4099, 60.0368, 51.8121, 0.23", "75.3668, 68.6404, 53.1634, 0.23", "82.4399, 77.4944, 56.3432, 0.23", "89.3769, 86.6264, 59.0987, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "73.9566, 83.2616, -9.76109, 0.23", "76.1034, 84.7246, -10.2468, 0.23", "77.2285, 85.4553, -10.4718, 0.23", "79.0099, 86.5475, -10.7177, 0.68", "80.2213, 87.2628, -10.8093, 0.23", "82.632, 88.6241, -10.9214, 0.91", "83.9273, 89.2944, -10.9669, 0.91", "86.3014, 90.3367, -10.9983, 0.23", "88.0399, 91.0123, -10.9772, 0.23", "89.8078, 91.6147, -10.8869, 0.91", "90.7084, 91.9016, -10.8265, 0.91", "93.4091, 92.7783, -10.5618, 0.23", "95.2527, 93.3838, -10.3518, 0.91", "97.0765, 93.9878, -10.1178, 0.91", "98.8648, 94.6222, -9.88863, 0.23", "100.276, 95.1409, -9.68681, 0.91", "102.85, 96.117, -9.21039, 0.23", "103.778, 96.4412, -9.02411, 1.36", "104.62, 96.7054, -8.86775, 1.36", "106.323, 97.1523, -8.59955, 1.36", "108.244, 97.5267, -8.35416, 0.23", "110.164, 97.7411, -8.19564, 1.59", "112.816, 97.8058, -8.08953, 0.23", "114.125, 97.7416, -8.06859, 0.91", "115.301, 97.6458, -8.06867, 0.91", "117.75, 97.3528, -8.09887, 0.23", "119.047, 97.1535, -8.13834, 0.23", "121.293, 96.7302, -8.24859, 0.23", "124.198, 96.083, -8.322, 0.23" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "73.9566, 83.2616, -9.76109, 0.23", "75.3578, 86.9629, -8.87342, 0.23", "76.3488, 89.4723, -8.23587, 0.23", "77.144, 91.4534, -7.7254, 1.59", "78.8307, 95.4907, -6.71319, 0.23", "79.2975, 96.56, -6.45582, 1.36", "81.4105, 101.107, -5.43402, 0.23", "82.2237, 102.738, -5.08302, 0.68", "83.1096, 104.334, -4.77106, 0.91", "84.736, 107.143, -4.32202, 0.23", "86.0242, 109.31, -4.09051, 1.13", "88.2661, 112.983, -3.82004, 0.23", "89.0492, 114.2, -3.76942, 1.59", "90.7014, 116.536, -3.69635, 0.23", "91.9784, 118.24, -3.69823, 0.23", "93.5297, 120.162, -3.6874, 1.13", "96.2615, 123.312, -3.58084, 0.23", "97.7988, 125.003, -3.46313, 1.13", "100.515, 127.802, -3.06211, 0.23", "102.083, 129.267, -2.75803, 1.36", "104.554, 131.213, -2.18611, 0.23", "105.756, 131.975, -1.84502, 0.91", "106.676, 132.383, -1.50558, 0.91", "108.746, 133.087, -0.617261, 0.23", "109.69, 133.328, -0.18124, 0.23", "111.29, 133.714, 0.494452, 0.23", "113.508, 134.201, 1.27929, 0.91", "116.135, 134.773, 2.09483, 0.23", "117.511, 135.08, 2.48061, 1.13", "120.552, 135.971, 3.23098, 0.23", "122.092, 136.561, 3.66244, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-3.70007, -73.8844, 4.50519, 0.91", "-3.94324, -76.0941, 5.28439, 0.91", "-4.11625, -78.6124, 6.0026, 1.36", "-4.17937, -80.5088, 6.43451, 1.36", "-4.25186, -82.6869, 6.93056, 1.36", "-4.32572, -84.9059, 7.43595, 1.13", "-4.38798, -86.7764, 7.86196, 1.13", "-4.47899, -89.9903, 8.42126, 1.13", "-4.49725, -92.8711, 8.77235, 1.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-3.70007, -73.8844, 4.50519, 0.91", "-4.55145, -76.0498, 3.45322, 0.91", "-4.99091, -77.8992, 2.6529, 0.91", "-5.24871, -79.4596, 1.99332, 1.59", "-5.4234, -80.6796, 1.45379, 0.91", "-5.65144, -82.239, 0.753836, 1.36", "-5.96887, -84.1543, -0.098309, 1.36", "-6.37344, -86.8812, -1.25466, 1.13", "-6.62605, -88.4817, -1.89486, 1.13", "-6.86482, -89.9103, -2.41852, 1.36", "-7.37422, -92.7293, -3.35767, 0.91", "-7.79694, -94.7237, -3.92386, 1.59", "-8.10949, -96.0118, -4.22636, 1.59", "-8.52681, -97.7465, -4.55966, 0.91", "-8.82903, -99.1587, -4.77409, 1.36", "-9.14976, -100.874, -4.98923, 1.36", "-9.53682, -103.283, -5.32009, 1.13", "-9.72567, -104.709, -5.57838, 0.91", "-9.91424, -106.172, -5.92409, 1.36", "-10.1594, -107.694, -6.35756, 1.36", "-10.5585, -109.823, -7.00926, 0.91", "-10.9078, -111.548, -7.58847, 1.36", "-11.318, -113.47, -8.28697, 0.91", "-11.6947, -115.071, -8.90677, 0.91", "-12.1112, -116.704, -9.55361, 0.45", "-12.5872, -118.55, -10.2871, 0.45" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.06581, -42.0041, 7.06755, 1.13", "-2.60586, -43.5859, 8.28559, 1.13", "-0.962595, -45.7259, 9.92377, 1.13", "0.344964, -47.715, 11.266, 1.13", "0.920458, -48.7004, 11.8866, 1.36", "2.00135, -50.7765, 13.1503, 1.36", "3.10715, -53.1658, 14.6029, 0.91", "3.51285, -54.4415, 15.4002, 1.36", "3.84323, -56.763, 16.9262, 1.13", "3.79135, -58.3973, 18.0526, 1.13", "3.65986, -59.236, 18.6649, 1.13", "3.39802, -60.2797, 19.3946, 1.13", "2.96117, -61.7951, 20.3506, 1.13", "2.10072, -64.9211, 22.1273, 1.59", "1.52451, -67.597, 23.3045, 0.91", "1.35393, -69.0914, 23.739, 0.91", "1.31983, -71.3239, 24.1341, 0.45", "1.38238, -72.9276, 24.2556, 0.45", "1.56967, -76.1637, 24.2511, 0.45", "1.92319, -79.7789, 23.9871, 0.45", "2.22814, -81.7924, 23.7847, 0.45", "2.50418, -83.4181, 23.6043, 0.68", "2.94479, -86.014, 23.3503, 0.23", "3.25433, -88.2643, 23.1552, 0.23", "4.88023, -98.3777, 27.149, 0.23", "7.95442, -108.667, 29.5715, 0.23" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.06581, -42.0041, 7.06755, 0.91", "-4.69043, -42.8449, 7.59302, 0.91", "-5.07415, -43.2759, 7.87456, 0.91", "-5.64426, -43.7813, 8.2495, 0.91", "-6.0702, -44.1103, 8.51493, 1.13", "-6.8247, -44.642, 8.95677, 0.91", "-8.01583, -45.4323, 9.60097, 0.91", "-9.21641, -46.1667, 10.2135, 0.91", "-10.5809, -46.9124, 10.8735, 0.45", "-11.5238, -47.3918, 11.307, 1.13", "-12.1346, -47.7084, 11.5689, 0.68", "-13.0627, -48.2498, 11.9539, 0.45", "-14.4318, -49.085, 12.5159, 0.45", "-15.7148, -49.9362, 13.0446, 0.45", "-16.1404, -50.2631, 13.2211, 0.45", "-16.9536, -50.9557, 13.5711, 0.45", "-17.9591, -51.9242, 14.0547, 0.45", "-21.5652, -56.0878, 17.2243, 0.45", "-24.561, -60.4325, 20.784, 0.45", "-27.6746, -65.3639, 23.4342, 0.45", "-30.806, -70.6667, 25.2972, 0.45" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-32.4866, -69.4246, -52.0224, 0.23", "-33.7822, -72.5491, -52.9749, 0.23", "-34.3979, -73.9192, -53.2912, 0.91", "-35.9098, -76.9309, -53.75, 0.23", "-36.889, -78.7185, -53.9513, 0.23", "-37.376, -79.5178, -54.0235, 0.91", "-38.7234, -81.5637, -54.1821, 0.23", "-40.1379, -83.5123, -54.1526, 0.45", "-41.8441, -85.8031, -53.91, 0.23", "-42.767, -87.006, -53.6967, 0.23", "-43.9677, -88.6052, -53.3802, 0.91", "-44.4857, -89.3519, -53.2568, 0.91", "-46.6395, -92.7717, -52.7847, 0.23", "-47.934, -95.0458, -52.5468, 0.23", "-48.8073, -96.71, -52.387, 0.23", "-49.9376, -98.9984, -52.1326, 0.68", "-51.0727, -101.445, -51.8115, 0.23", "-52.033, -103.581, -51.4892, 0.23", "-52.8573, -105.459, -51.2064, 0.68", "-53.0653, -105.923, -51.1165, 0.23", "-54.0195, -108.067, -50.546, 1.13", "-54.5938, -109.339, -50.1356, 1.13", "-55.3522, -111.162, -49.5081, 0.23", "-55.8686, -112.735, -49.0442, 0.23", "-56.3797, -114.433, -48.5655, 0.91", "-56.804, -115.951, -48.1661, 0.23", "-57.1532, -117.334, -47.8612, 0.91", "-58.0288, -120.999, -47.1711, 0.23", "-58.5511, -123.451, -46.7441, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-32.4866, -69.4246, -52.0224, 0.23", "-33.2565, -69.7044, -53.0709, 0.23", "-33.8704, -69.9271, -54.1321, 0.68", "-34.5494, -70.1407, -55.3137, 0.23", "-35.2941, -70.3034, -56.5817, 0.68", "-35.9133, -70.3609, -57.5541, 0.68", "-37.1209, -70.383, -59.2222, 0.23", "-38.6386, -70.365, -61.1389, 0.23", "-39.0952, -70.3608, -61.6347, 0.68", "-40.5688, -70.3455, -63.034, 0.23", "-42.0284, -70.3596, -64.2828, 0.91", "-44.5564, -70.4966, -66.2487, 0.23", "-46.3737, -70.7041, -67.488, 0.23", "-49.59, -71.2931, -69.462, 0.23", "-50.7243, -71.5656, -70.1191, 0.68", "-52.8851, -72.2594, -71.2474, 0.23", "-54.1209, -72.7773, -71.8213, 0.23", "-55.2292, -73.325, -72.2373, 0.23", "-56.9076, -74.2359, -72.7447, 0.23", "-57.8148, -74.7353, -72.9576, 0.23", "-59.2213, -75.4595, -73.3094, 0.23", "-61.8255, -76.801, -73.9707, 0.23", "-64.3846, -78.0704, -74.7255, 0.23", "-65.9543, -78.8329, -75.2572, 0.23", "-67.9162, -79.7765, -75.9863, 1.13", "-71.4543, -81.4206, -77.5579, 0.23", "-73.2049, -82.22, -78.4469, 0.68", "-75.2124, -83.1091, -79.5769, 0.23", "-76.5451, -83.6546, -80.3777, 0.23", "-77.7604, -84.0741, -81.0968, 0.23", "-79.9629, -84.5907, -82.3122, 0.23", "-81.9515, -84.9445, -83.3308, 0.68", "-83.4404, -85.1184, -84.05, 0.23", "-85.6697, -85.3161, -84.9845, 0.23", "-87.3228, -85.3678, -85.5916, 0.91", "-90.8731, -85.2268, -86.7229, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.21029, 142.346, -5.90483, 0.23", "2.03249, 144.204, -6.03333, 0.23", "1.86169, 145.828, -6.15702, 0.23", "1.71775, 147.038, -6.25121, 0.68", "1.53379, 148.516, -6.37394, 0.23", "1.41317, 149.509, -6.45557, 0.68", "1.22324, 151.025, -6.57767, 0.23", "1.12173, 151.875, -6.64906, 0.91", "1.0288, 152.548, -6.70483, 0.91", "0.601448, 155.183, -6.89993, 0.23", "0.482655, 155.98, -6.94633, 1.59", "0.387513, 156.657, -6.98023, 1.59", "0.156145, 158.712, -7.08965, 0.23", "0.0826327, 159.567, -7.14088, 0.23", "9.11832E-4, 160.909, -7.21155, 0.91", "-0.0548712, 162.75, -7.28942, 0.23", "-0.0566582, 163.81, -7.32859, 0.91", "-0.0314632, 165.172, -7.36994, 0.23", "0.00239684, 166.177, -7.3912, 0.91", "0.0677037, 168.825, -7.43126, 0.23", "0.0970153, 169.882, -7.44121, 0.68", "0.105807, 170.698, -7.43995, 0.23", "0.11593, 171.814, -7.42148, 1.13", "0.0925697, 173.238, -7.35454, 0.23", "0.0593341, 174.113, -7.31815, 0.68" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.21029, 142.346, -5.90483, 0.23", "3.50694, 143.21, -6.15277, 0.23", "4.99163, 143.884, -6.52312, 0.91", "6.48547, 144.3, -6.87427, 0.23", "7.29662, 144.357, -7.0786, 0.68", "8.78803, 144.183, -7.52505, 0.23", "11.3384, 143.433, -8.51424, 0.23", "12.8318, 142.827, -9.13354, 0.23", "14.3131, 142.061, -9.7962, 0.68", "16.4176, 140.742, -10.7793, 0.23", "18.2546, 139.415, -11.6851, 0.91", "20.7721, 137.194, -13.0724, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.0884, -3.1623, -1.29224, 1.13", "-17.7588, -5.49177, -1.667, 1.13", "-19.3705, -7.96041, -2.15473, 1.59", "-20.9571, -10.5469, -2.70038, 0.91", "-21.9376, -12.17, -3.10139, 0.91", "-23.4428, -14.6288, -3.8037, 2.04", "-25.4649, -17.9408, -4.80662, 1.13", "-26.7213, -20.0555, -5.49981, 1.13", "-27.52, -21.4359, -5.95071, 1.81", "-29.2638, -24.3719, -6.87184, 0.91", "-31.0761, -27.1984, -7.69074, 0.91", "-32.0277, -28.5301, -8.0232, 0.91", "-33.0583, -29.8378, -8.28514, 1.36", "-34.7389, -31.9497, -8.56731, 0.91", "-36.5777, -34.2396, -8.73852, 1.13", "-38.013, -36.029, -8.76452, 1.36", "-39.5463, -37.9496, -8.74381, 1.36", "-41.086, -39.9255, -8.74672, 1.59", "-42.3083, -41.5353, -8.74776, 1.36", "-44.0379, -43.8754, -8.80088, 2.04", "-44.7114, -44.8733, -8.84863, 2.04", "-46.263, -47.2733, -8.9065, 1.13", "-47.3672, -48.9904, -8.92208, 1.81", "-49.7176, -52.6482, -8.90253, 0.91", "-50.9356, -54.6054, -8.87674, 2.04", "-52.9751, -58.1221, -8.83067, 1.13", "-54.7571, -61.3816, -8.78969, 0.68", "-55.5843, -63.0102, -8.73068, 0.68", "-56.1637, -64.2074, -8.64016, 1.13", "-56.6385, -65.2792, -8.53268, 1.13", "-57.4399, -67.1562, -8.30355, 1.13", "-58.5909, -69.9206, -7.93409, 0.45", "-60.1639, -73.7345, -7.52903, 0.91", "-60.8462, -75.3065, -7.38632, 1.59", "-61.7428, -77.2843, -7.19383, 0.68", "-63.2122, -80.3053, -6.928, 0.68", "-65.0352, -83.6803, -6.70031, 0.68", "-65.4147, -84.303, -6.68581, 1.13", "-66.6464, -86.1146, -6.76301, 1.13", "-67.9923, -88.0017, -6.90103, 0.45", "-69.3507, -89.7057, -7.05586, 0.91", "-70.5843, -91.0542, -7.23388, 0.23", "-71.916, -92.4149, -7.49063, 0.23", "-73.1368, -93.6924, -7.75485, 0.23", "-74.2172, -94.8112, -8.00681, 0.23", "-75.8807, -96.5101, -8.45382, 0.23", "-77.0379, -97.744, -8.75913, 0.23", "-79.5966, -100.679, -9.43767, 0.23", "-81.0822, -102.372, -9.85858, 0.23", "-88.6789, -113.534, -11.3968, 0.23", "-95.0259, -125.292, -14.1131, 0.23", "-99.8752, -137.579, -17.6547, 0.23", "-104.887, -150.158, -19.7341, 0.23", "-108.31, -162.801, -23.7592, 0.23", "-110.272, -176.086, -26.7321, 0.23", "-110.815, -189.404, -30.1217, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.0884, -3.1623, -1.29224, 0.45", "-16.9061, -5.11478, -0.920962, 0.45", "-17.5012, -6.56748, -0.6707, 0.45", "-18.2851, -8.45961, -0.372304, 0.68", "-19.1267, -10.4367, -0.0680721, 1.13", "-20.1423, -12.7999, 0.2876, 0.91", "-21.2558, -15.3958, 0.693512, 0.45", "-22.0025, -17.0671, 0.961103, 0.45", "-22.3749, -17.9493, 1.12629, 1.13", "-22.8119, -19.1153, 1.36887, 0.45", "-23.0611, -19.8476, 1.55263, 0.91", "-23.6817, -21.8364, 2.15366, 0.23", "-23.994, -22.9454, 2.5286, 0.68", "-24.5962, -25.1321, 3.28523, 0.23", "-24.9586, -26.5543, 3.77195, 1.59", "-25.1789, -27.5206, 4.09012, 1.59", "-25.6052, -29.5964, 4.74302, 0.23", "-25.8064, -30.7529, 5.07263, 0.68", "-26.017, -32.1107, 5.45555, 0.68", "-26.3841, -34.5771, 6.20205, 0.23", "-26.4864, -35.3129, 6.4486, 0.45", "-26.6367, -36.5358, 6.88279, 0.45", "-26.8601, -38.7089, 7.67033, 0.45", "-27.0143, -40.4489, 8.31744, 0.91", "-27.2117, -42.5257, 9.09485, 0.91", "-27.3425, -43.8191, 9.5505, 0.23", "-27.4293, -44.5378, 9.79844, 0.68", "-27.6276, -45.9929, 10.2891, 0.45", "-27.8745, -47.7103, 10.8305, 0.23", "-27.9948, -48.5489, 11.0612, 0.91", "-28.328, -50.8258, 11.6398, 0.23", "-28.5387, -52.0757, 11.9512, 0.68", "-29.0049, -54.6461, 12.5994, 0.91", "-29.2981, -56.1227, 12.9642, 0.91", "-29.7066, -58.0939, 13.4404, 2.27", "-29.9488, -59.0969, 13.6863, 1.81", "-30.6159, -61.3829, 14.2189, 0.91", "-30.9171, -62.35, 14.4251, 1.59", "-31.5896, -64.3448, 14.8337, 0.45", "-31.8409, -65.0594, 14.984, 0.45", "-32.9291, -68.1356, 15.6325, 0.91", "-33.3386, -69.3568, 15.8889, 0.23", "-33.4725, -69.8411, 15.9908, 0.68", "-33.6348, -70.5812, 16.1502, 0.68", "-33.8174, -71.8273, 16.4226, 0.68", "-33.9869, -73.6022, 16.7893, 1.81", "-34.0246, -74.395, 16.936, 1.81", "-34.1548, -76.7381, 17.3787, 0.45", "-34.2489, -78.002, 17.6137, 0.45", "-34.3762, -79.583, 17.9095, 1.36", "-34.4542, -80.6695, 18.1041, 0.91", "-34.5243, -82.0824, 18.3497, 1.13", "-34.5928, -84.1453, 18.6966, 0.23", "-34.6048, -84.902, 18.8163, 0.68", "-34.5797, -86.9772, 19.145, 0.23", "-34.5168, -88.1968, 19.3495, 0.68", "-34.4143, -89.3811, 19.5621, 0.23", "-34.3301, -90.1581, 19.7072, 0.68", "-34.0232, -92.9461, 20.2294, 0.23", "-33.871, -94.4586, 20.5237, 0.23", "-33.7337, -96.0882, 20.8467, 0.68", "-33.6391, -97.6013, 21.1633, 0.23", "-33.5911, -98.614, 21.376, 0.68", "-33.5371, -99.6163, 21.5927, 0.23", "-33.4202, -100.92, 21.9104, 0.23", "-36.3414, -108.967, 24.5913, 0.23", "-40.3918, -116.705, 26.4961, 0.23", "-43.373, -124.558, 29.618, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "68.663, 68.6324, 84.2984, 0.23", "73.8959, 71.4878, 90.4258, 0.23", "79.1402, 73.9932, 96.6834, 0.23", "84.6223, 77.6178, 102.187, 0.23", "89.8626, 82.4943, 106.997, 0.23", "96.1911, 87.5323, 110.011, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "68.663, 68.6324, 84.2984, 0.23", "70.373, 73.9131, 89.3702, 0.23", "72.7427, 79.256, 94.1345, 0.23", "75.5198, 83.132, 99.9058, 0.23", "78.1129, 86.164, 106.21, 0.23", "80.1929, 88.8674, 112.833, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "89.3769, 86.6264, 59.0987, 0.23", "95.6126, 94.4731, 61.8728, 0.23", "103.749, 99.858, 65.0209, 0.23", "110.14, 106.791, 69.2609, 0.23", "115.681, 113.075, 75.2523, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "89.3769, 86.6264, 59.0987, 0.23", "96.5275, 91.4232, 62.5983, 0.23", "103.366, 96.2152, 66.65, 0.23", "110.369, 100.521, 70.909, 0.23", "116.795, 106.747, 73.7041, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-4.49725, -92.8711, 8.77235, 0.91", "-5.06492, -94.2441, 7.60616, 0.91", "-5.53469, -95.4388, 6.82057, 1.36", "-6.34032, -97.702, 5.63059, 0.91", "-6.82454, -99.2505, 5.06454, 1.36", "-7.00486, -99.8735, 4.88565, 1.36", "-7.26725, -100.819, 4.63776, 1.59", "-7.85245, -103.14, 4.2298, 1.13", "-8.16833, -104.507, 4.08015, 1.13", "-8.76081, -107.17, 3.83136, 0.91", "-9.21384, -109.191, 3.59338, 0.91", "-9.72338, -111.344, 3.29497, 1.59", "-10.2478, -113.395, 2.96439, 0.91", "-10.7752, -115.266, 2.62607, 0.91", "-11.4739, -117.443, 2.20872, 0.91", "-11.9689, -118.788, 1.93697, 0.91", "-12.6473, -120.365, 1.68153, 1.36", "-13.3232, -121.706, 1.5006, 1.59", "-14.1842, -123.199, 1.33427, 1.13", "-14.8619, -124.311, 1.19325, 1.13", "-15.3118, -125.059, 1.09694, 0.91", "-16.1026, -126.363, 0.88421, 1.36", "-17.1375, -128.042, 0.514605, 0.45", "-17.9759, -129.387, 0.134207, 1.59", "-19.321, -131.496, -0.555728, 1.36", "-20.1342, -132.832, -1.04152, 1.13", "-20.6199, -133.711, -1.38394, 0.68", "-21.4082, -135.235, -1.99724, 0.45", "-22.1657, -136.739, -2.57454, 0.91", "-22.7126, -137.862, -2.9887, 0.68", "-23.2603, -139.048, -3.35076, 0.45", "-23.9167, -140.621, -3.72352, 1.13", "-24.4229, -142.012, -3.96459, 1.13", "-24.8046, -143.181, -4.094, 1.36", "-25.2578, -144.733, -4.19604, 1.13", "-25.6565, -146.152, -4.2555, 0.68", "-26.2308, -148.144, -4.28685, 0.91", "-26.8251, -150.306, -4.30612, 0.68", "-27.1824, -151.801, -4.32458, 1.36", "-27.4358, -152.945, -4.32816, 1.36", "-27.7141, -154.271, -4.34981, 0.91", "-28.1348, -156.145, -4.43218, 0.68", "-28.719, -158.456, -4.59855, 0.91", "-29.2832, -160.504, -4.77253, 1.59", "-29.8934, -162.642, -4.9653, 1.36", "-30.4993, -164.753, -5.16027, 0.91", "-30.9969, -166.64, -5.32693, 1.13", "-31.3512, -168.219, -5.45943, 0.23", "-31.5616, -169.469, -5.55165, 1.13", "-31.7053, -171.135, -5.65263, 0.68", "-31.7224, -172.792, -5.73052, 1.36", "-31.6259, -174.963, -5.77707, 0.91", "-31.4353, -177.146, -5.8072, 0.91", "-31.2559, -179.074, -5.84248, 1.36", "-31.0565, -181.966, -5.90126, 0.68", "-30.9911, -183.631, -5.97299, 0.68", "-30.9642, -185.052, -6.06252, 1.36", "-30.9739, -185.76, -6.1212, 1.36", "-31.0545, -187.618, -6.31585, 0.68", "-31.1325, -188.915, -6.4788, 1.36", "-31.2733, -190.995, -6.81672, 0.23", "-31.3445, -192.284, -7.0411, 0.23", "-31.4137, -193.72, -7.31742, 1.13", "-31.4512, -194.967, -7.55285, 1.36", "-31.4576, -196.133, -7.76847, 1.81", "-31.4373, -198.219, -8.17061, 1.13", "-31.4145, -200.077, -8.51985, 1.36", "-31.3869, -201.882, -8.85704, 0.68", "-31.3202, -204.236, -9.30146, 0.91", "-31.2596, -205.92, -9.61354, 0.68", "-31.1741, -207.722, -9.93814, 0.68", "-31.0927, -208.904, -10.1289, 2.04", "-30.9456, -210.54, -10.4077, 2.04" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-4.49725, -92.8711, 8.77235, 0.45", "-4.98497, -94.6092, 8.96331, 0.45", "-5.43336, -96.4442, 9.14663, 0.68", "-5.94551, -98.9324, 9.39737, 1.13", "-6.34336, -101.198, 9.63005, 1.13", "-6.77649, -103.905, 9.94182, 1.13", "-7.17083, -106.354, 10.2337, 0.91", "-7.62139, -109.018, 10.5208, 0.91", "-8.02755, -111.43, 10.7602, 0.91", "-8.39936, -113.823, 10.9982, 0.23", "-8.5463, -114.888, 11.1101, 0.23", "-8.69464, -116.043, 11.2456, 1.36", "-9.11074, -118.804, 11.6441, 0.91", "-9.46235, -120.733, 11.9409, 0.91", "-9.66993, -121.882, 12.1168, 0.23", "-9.76245, -122.448, 12.2, 0.91", "-10.0626, -124.496, 12.4828, 0.68", "-10.327, -126.549, 12.8156, 1.13", "-10.6067, -128.658, 13.1876, 0.91", "-10.9586, -131.014, 13.5906, 0.91", "-11.2337, -132.595, 13.8187, 0.91", "-11.3924, -133.483, 13.9251, 1.36", "-11.6873, -135.146, 14.0694, 1.13", "-11.9529, -136.598, 14.1603, 1.59", "-12.2114, -137.979, 14.233, 1.36", "-12.5388, -139.872, 14.2793, 1.36", "-12.8236, -141.748, 14.2825, 1.81", "-12.9768, -142.885, 14.2601, 0.68", "-13.2427, -144.845, 14.1712, 1.13", "-13.6065, -147.239, 14.0945, 0.45", "-14.0207, -149.416, 14.0416, 0.45", "-14.3411, -150.738, 14.0151, 1.81", "-14.8741, -152.302, 13.9945, 1.36", "-15.4392, -153.538, 13.9973, 0.91", "-16.5826, -155.201, 13.9624, 1.36", "-17.6612, -156.202, 13.8968, 0.23", "-18.1873, -156.518, 13.8503, 0.23", "-20.0034, -157.183, 13.5565, 0.23", "-20.8638, -157.341, 13.3649, 0.23", "-23.1819, -157.569, 12.7621, 0.23", "-23.9577, -157.581, 12.5196, 0.68", "-25.3018, -157.537, 12.062, 0.23", "-27.1582, -157.469, 11.3609, 0.23", "-28.1902, -157.426, 10.8939, 0.23", "-30.3353, -166.402, 12.3603, 0.23" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-12.5872, -118.55, -10.2871, 1.36", "-13.4603, -119.333, -11.2318, 1.36", "-15.7394, -120.554, -13.9796, 0.45", "-16.5435, -120.782, -15.1973, 0.45", "-17.3386, -120.9, -16.531, 0.91", "-17.9319, -120.943, -17.5986, 0.91", "-18.8673, -120.942, -19.3142, 0.23", "-20.6444, -120.566, -22.7881, 1.36", "-22.3273, -119.89, -26.2506, 0.23", "-22.8847, -119.629, -27.4291, 0.23", "-23.924, -119.094, -29.6656, 1.13", "-24.5531, -118.736, -30.9908, 1.36", "-25.2133, -118.33, -32.2483, 0.23", "-26.0095, -117.79, -33.4715, 0.23", "-26.7284, -117.241, -34.3856, 0.23", "-27.5102, -116.479, -35.3529, 0.23", "-28.6012, -115.221, -36.7758, 0.91", "-29.2056, -114.525, -37.5635, 1.59", "-30.3985, -113.255, -39.2257, 0.68", "-32.2333, -111.538, -42.028, 0.23", "-33.4183, -110.649, -43.9486, 0.68", "-35.1976, -109.79, -47.0248, 0.23", "-36.1866, -109.651, -48.8973, 1.13", "-37.8914, -110.218, -52.5393, 0.23", "-38.9113, -111.447, -55.119, 0.91", "-39.396, -112.677, -56.5367, 0.91", "-39.9921, -115.025, -58.3686, 0.23", "-40.3963, -117.536, -59.6942, 0.23", "-40.7108, -119.915, -60.6625, 0.91", "-41.0672, -122.341, -61.3648, 0.23", "-41.3824, -123.906, -61.7399, 0.23", "-42.2926, -126.764, -62.4235, 0.23", "-43.3435, -128.919, -62.9509, 0.23", "-44.2048, -130.233, -63.3615, 1.36", "-45.2427, -131.514, -63.8719, 0.23", "-46.6866, -133.032, -64.5856, 0.91", "-49.1825, -135.263, -66.0215, 0.23", "-49.8895, -135.851, -66.4492, 0.91", "-52.5716, -137.937, -68.1474, 0.23", "-53.8938, -138.973, -69.0341, 0.68", "-54.7423, -139.608, -69.6467, 0.68", "-57.3329, -141.428, -71.7334, 0.23" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-12.5872, -118.55, -10.2871, 0.23", "-12.261, -119.72, -10.1636, 0.23", "-11.9852, -120.509, -10.1395, 0.23", "-11.4519, -121.949, -10.1423, 0.23", "-10.7059, -123.832, -10.1521, 0.91", "-10.1965, -125.082, -10.1814, 0.23", "-9.78242, -126.084, -10.2038, 0.45", "-9.29209, -127.211, -10.26, 0.23", "-8.86307, -128.108, -10.3257, 0.68", "-8.45755, -128.851, -10.4274, 0.23", "-7.99242, -129.668, -10.5595, 0.23", "-7.34576, -131.028, -10.682, 0.23" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-30.9456, -210.54, -10.4077, 0.23", "-32.4304, -211.187, -9.65088, 0.23", "-33.5561, -211.745, -9.08573, 0.23", "-35.8634, -213.192, -8.01905, 0.68", "-38.28, -214.915, -7.18153, 0.23", "-40.3581, -216.47, -6.62154, 0.68", "-41.5001, -217.304, -6.36336, 0.23", "-43.5458, -218.749, -6.00308, 0.23", "-46.5787, -220.909, -5.67537, 0.68", "-49.5901, -223.156, -5.60912, 0.23", "-51.8479, -224.959, -5.68293, 0.91", "-53.1793, -226.029, -5.80312, 0.91", "-54.829, -227.295, -5.9764, 0.23", "-56.1536, -228.212, -6.09587, 0.23", "-57.2705, -228.962, -6.15639, 0.23", "-58.7161, -230.027, -6.0729, 0.23", "-59.4317, -230.609, -5.996, 0.23", "-60.7766, -231.833, -5.79994, 0.23", "-61.9267, -232.903, -5.59835, 0.68", "-64.2347, -235.026, -5.10975, 0.23", "-67.0272, -237.584, -4.47509, 0.23", "-68.6195, -239.063, -4.0815, 0.23", "-69.6133, -240.037, -3.8136, 0.23" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-30.9456, -210.54, -10.4077, 0.45", "-31.2507, -211.271, -12.2169, 0.45", "-31.4275, -211.439, -13.6661, 0.45", "-31.5899, -211.594, -14.9977, 0.45", "-31.7202, -211.718, -16.0654, 0.45", "-31.879, -211.869, -17.3667, 0.45", "-32.0485, -212.03, -18.7565, 1.13", "-32.4134, -211.627, -20.3012, 0.23" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_34", "dend_33", "dend_26", "dend_11", "dend_8", "dend_3", "dend_0", "dend_50", "dend_47", "dend_45", "dend_40", "dend_36", "dend_35", "dend_30", "dend_27", "dend_19", "dend_12", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_54", "dend_51", "dend_49", "dend_48", "dend_44", "dend_41", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_23", "dend_20", "dend_16", "dend_13", "dend_7", "dend_6", "dend_58", "dend_55", "dend_53", "dend_52", "dend_43", "dend_42", "dend_25", "dend_24", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_60", "dend_59", "dend_57", "dend_56", "dend_62", "dend_61" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_34", "dend_33", "dend_26", "dend_11", "dend_8", "dend_3", "dend_0", "dend_50", "dend_47", "dend_45", "dend_40", "dend_36", "dend_35", "dend_30", "dend_27", "dend_19", "dend_12", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_54", "dend_51", "dend_49", "dend_48", "dend_44", "dend_41", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_23", "dend_20", "dend_16", "dend_13", "dend_7", "dend_6", "dend_58", "dend_55", "dend_53", "dend_52", "dend_43", "dend_42", "dend_25", "dend_24", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_60", "dend_59", "dend_57", "dend_56", "dend_62", "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_LBC_7fd94465af_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_66
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999997093558307)
    connect dend_39(0), soma_0(0.49999997093558307)
    connect dend_34(0), soma_0(0.49999997093558307)
    connect dend_33(0), soma_0(0.49999997093558307)
    connect dend_26(0), soma_0(0.49999997093558307)
    connect dend_11(0), soma_0(0.49999997093558307)
    connect dend_8(0), soma_0(0.49999997093558307)
    connect dend_3(0), soma_0(0.49999997093558307)
    connect dend_0(0), soma_0(0.49999997093558307)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.78412, -8.09899, 0.0, 4.55814 ) }
    soma_0 { pt3dadd( -5.26901, -7.31108, 0.0, 8.32644 ) }
    soma_0 { pt3dadd( -4.7539, -6.52318, 0.0, 11.1999 ) }
    soma_0 { pt3dadd( -4.23878, -5.73527, 0.0, 12.9076 ) }
    soma_0 { pt3dadd( -3.72367, -4.94736, 0.0, 14.3867 ) }
    soma_0 { pt3dadd( -3.20856, -4.15945, 0.0, 15.6541 ) }
    soma_0 { pt3dadd( -2.69344, -3.37154, 0.0, 16.4084 ) }
    soma_0 { pt3dadd( -2.17833, -2.58363, 0.0, 17.1297 ) }
    soma_0 { pt3dadd( -1.66322, -1.79572, 0.0, 17.2471 ) }
    soma_0 { pt3dadd( -1.1481, -1.00781, 0.0, 17.2628 ) }
    soma_0 { pt3dadd( -0.632991, -0.219905, 0.0, 17.2074 ) }
    soma_0 { pt3dadd( -0.117878, 0.568004, 0.0, 16.9082 ) }
    soma_0 { pt3dadd( 0.397236, 1.35591, 0.0, 16.5246 ) }
    soma_0 { pt3dadd( 0.912349, 2.14382, 0.0, 15.7252 ) }
    soma_0 { pt3dadd( 1.42746, 2.93173, 0.0, 14.8134 ) }
    soma_0 { pt3dadd( 1.94257, 3.71964, 0.0, 13.8399 ) }
    soma_0 { pt3dadd( 2.45769, 4.50755, 0.0, 12.6669 ) }
    soma_0 { pt3dadd( 2.9728, 5.29546, 0.0, 11.0086 ) }
    soma_0 { pt3dadd( 3.48791, 6.08336, 0.0, 8.99182 ) }
    soma_0 { pt3dadd( 4.00303, 6.87127, 0.0, 6.51377 ) }
    soma_0 { pt3dadd( 4.51814, 7.65918, 0.0, 3.7977 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.57932, -10.8079, -1.33, 5.9 ) }
    dend_46 { pt3dadd( -1.89843, -12.9431, -1.39075, 5.22 ) }
    dend_46 { pt3dadd( -2.28792, -15.5492, -1.46489, 4.31 ) }
    dend_46 { pt3dadd( -2.81432, -19.0715, -1.56509, 3.63 ) }
    dend_46 { pt3dadd( -3.17057, -21.4552, -1.63291, 3.18 ) }
    dend_46 { pt3dadd( -3.43134, -23.2001, -1.68255, 3.18 ) }
    dend_46 { pt3dadd( -3.91084, -26.4085, -1.77382, 3.18 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.219318, -8.6764, -8.12, 2.04 ) }
    dend_39 { pt3dadd( -0.275563, -11.0163, -8.03213, 2.04 ) }
    dend_39 { pt3dadd( -0.291734, -15.3519, -8.00215, 2.04 ) }
    dend_39 { pt3dadd( -0.263386, -17.3288, -8.05884, 2.04 ) }
    dend_39 { pt3dadd( -0.201428, -19.9799, -8.17669, 2.04 ) }
    dend_39 { pt3dadd( -0.144989, -22.4038, -8.32568, 2.04 ) }
    dend_39 { pt3dadd( -0.0545841, -26.2864, -8.56434, 1.81 ) }
    dend_39 { pt3dadd( 0.0464438, -29.206, -8.76966, 2.27 ) }
    dend_39 { pt3dadd( 0.196065, -32.4571, -9.038, 2.27 ) }
    dend_39 { pt3dadd( 0.360762, -35.1681, -9.34273, 2.27 ) }
    dend_39 { pt3dadd( 0.485161, -36.8558, -9.62001, 2.27 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.93069, -7.9099, -3.17, 2.72 ) }
    dend_34 { pt3dadd( 6.53548, -9.2736, -3.13419, 1.81 ) }
    dend_34 { pt3dadd( 8.63656, -11.0279, -3.22831, 1.59 ) }
    dend_34 { pt3dadd( 10.5868, -12.6375, -3.39154, 1.81 ) }
    dend_34 { pt3dadd( 11.4806, -13.3568, -3.50154, 2.04 ) }
    dend_34 { pt3dadd( 13.6044, -15.0667, -3.85666, 1.81 ) }
    dend_34 { pt3dadd( 15.4108, -16.507, -4.19287, 1.36 ) }
    dend_34 { pt3dadd( 17.0111, -17.7808, -4.54516, 1.13 ) }
    dend_34 { pt3dadd( 18.8917, -19.3154, -5.03943, 1.59 ) }
    dend_34 { pt3dadd( 21.0834, -21.1944, -5.79341, 1.36 ) }
    dend_34 { pt3dadd( 22.7737, -22.7179, -6.47067, 1.36 ) }
    dend_34 { pt3dadd( 23.7311, -23.592, -6.89926, 1.81 ) }
    dend_34 { pt3dadd( 25.352, -25.0879, -7.69108, 1.36 ) }
    dend_34 { pt3dadd( 27.125, -26.6819, -8.6169, 1.36 ) }
    dend_34 { pt3dadd( 29.5881, -28.9031, -10.0438, 1.36 ) }
    dend_34 { pt3dadd( 32.0281, -31.0401, -11.4843, 1.36 ) }
    dend_34 { pt3dadd( 33.8719, -32.5553, -12.5401, 1.36 ) }
    dend_34 { pt3dadd( 35.2232, -33.6043, -13.2804, 0.91 ) }
    dend_34 { pt3dadd( 36.9545, -34.8692, -14.1822, 1.59 ) }
    dend_34 { pt3dadd( 39.1687, -36.3586, -15.2273, 1.13 ) }
    dend_34 { pt3dadd( 41.5114, -37.8475, -16.1731, 1.13 ) }
    dend_34 { pt3dadd( 43.4356, -39.0592, -16.8779, 1.13 ) }
    dend_34 { pt3dadd( 45.6009, -40.4389, -17.6423, 1.13 ) }
    dend_34 { pt3dadd( 47.9746, -41.9667, -18.4784, 0.91 ) }
    dend_34 { pt3dadd( 49.8357, -43.1748, -19.1223, 1.13 ) }
    dend_34 { pt3dadd( 51.5663, -44.319, -19.6664, 0.91 ) }
    dend_34 { pt3dadd( 53.4774, -45.6385, -20.2439, 1.13 ) }
    dend_34 { pt3dadd( 56.541, -47.7833, -21.1367, 1.13 ) }
    dend_34 { pt3dadd( 59.0229, -49.4863, -21.8948, 1.13 ) }
    dend_34 { pt3dadd( 61.1853, -50.9448, -22.5609, 0.91 ) }
    dend_34 { pt3dadd( 62.995, -52.1769, -23.172, 1.13 ) }
    dend_34 { pt3dadd( 64.3417, -53.0953, -23.7041, 1.13 ) }
    dend_34 { pt3dadd( 66.3956, -54.4385, -24.5352, 0.68 ) }
    dend_34 { pt3dadd( 68.7217, -55.9371, -25.5273, 0.91 ) }
    dend_34 { pt3dadd( 70.1214, -56.8067, -26.1762, 0.91 ) }
    dend_34 { pt3dadd( 73.2397, -58.6756, -27.6478, 0.91 ) }
    dend_34 { pt3dadd( 75.6806, -60.0576, -28.7464, 1.13 ) }
    dend_34 { pt3dadd( 78.7414, -61.7439, -29.9688, 1.13 ) }
    dend_34 { pt3dadd( 81.0332, -62.9626, -30.7319, 0.91 ) }
    dend_34 { pt3dadd( 83.5575, -64.2626, -31.3938, 1.13 ) }
    dend_34 { pt3dadd( 86.8139, -65.8705, -32.0671, 0.68 ) }
    dend_34 { pt3dadd( 89.936, -67.3485, -32.5226, 0.68 ) }
    dend_34 { pt3dadd( 91.9947, -68.2973, -32.7245, 1.36 ) }
    dend_34 { pt3dadd( 94.0254, -69.2356, -32.8834, 1.36 ) }
    dend_34 { pt3dadd( 96.5989, -70.4269, -32.9797, 0.68 ) }
    dend_34 { pt3dadd( 99.3513, -71.7401, -32.9999, 0.45 ) }
    dend_34 { pt3dadd( 101.582, -72.849, -33.0212, 0.68 ) }
    dend_34 { pt3dadd( 102.962, -73.584, -33.0386, 1.59 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 4.22069, 7.79811, -5.26, 1.36 ) }
    dend_33 { pt3dadd( 4.54674, 8.89774, -5.30091, 1.36 ) }
    dend_33 { pt3dadd( 5.26149, 11.1946, -5.38605, 1.13 ) }
    dend_33 { pt3dadd( 5.7779, 12.7821, -5.51148, 0.91 ) }
    dend_33 { pt3dadd( 6.32309, 14.1597, -5.67244, 0.91 ) }
    dend_33 { pt3dadd( 7.19833, 16.0207, -5.97484, 0.91 ) }
    dend_33 { pt3dadd( 7.88616, 17.3568, -6.25531, 0.91 ) }
    dend_33 { pt3dadd( 8.73343, 18.994, -6.70767, 1.13 ) }
    dend_33 { pt3dadd( 9.56413, 20.6928, -7.31659, 0.91 ) }
    dend_33 { pt3dadd( 10.4037, 22.5527, -8.21054, 0.91 ) }
    dend_33 { pt3dadd( 10.9859, 23.9328, -9.05642, 1.36 ) }
    dend_33 { pt3dadd( 11.3842, 25.1517, -9.93891, 1.36 ) }
    dend_33 { pt3dadd( 11.6588, 26.4244, -10.8794, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 11.8005, 27.9622, -11.9464, 1.59 ) }
    dend_33 { pt3dadd( 11.825, 29.7587, -13.0795, 0.45 ) }
    dend_33 { pt3dadd( 11.7644, 31.1131, -13.9296, 0.91 ) }
    dend_33 { pt3dadd( 11.5895, 33.4646, -15.4121, 1.81 ) }
    dend_33 { pt3dadd( 11.5102, 34.7021, -16.2345, 1.36 ) }
    dend_33 { pt3dadd( 11.4914, 36.1698, -17.2857, 1.59 ) }
    dend_33 { pt3dadd( 11.5567, 37.6077, -18.4011, 1.13 ) }
    dend_33 { pt3dadd( 11.681, 38.9811, -19.6433, 0.91 ) }
    dend_33 { pt3dadd( 11.8137, 39.4658, -20.3348, 0.91 ) }
    dend_33 { pt3dadd( 12.1408, 39.7844, -21.2145, 0.91 ) }
    dend_33 { pt3dadd( 12.5228, 39.9755, -22.0106, 0.91 ) }
    dend_33 { pt3dadd( 13.0913, 40.0972, -23.0267, 1.36 ) }
    dend_33 { pt3dadd( 14.3108, 40.2005, -24.9386, 0.68 ) }
    dend_33 { pt3dadd( 15.7248, 40.275, -26.9488, 1.36 ) }
    dend_33 { pt3dadd( 17.1199, 40.3173, -28.8302, 1.36 ) }
    dend_33 { pt3dadd( 18.1396, 40.3365, -30.1332, 0.45 ) }
    dend_33 { pt3dadd( 19.7175, 40.3314, -32.1615, 0.23 ) }
    dend_33 { pt3dadd( 20.8397, 40.3014, -33.6321, 0.23 ) }
    dend_33 { pt3dadd( 21.3931, 40.2703, -34.3737, 0.45 ) }
    dend_33 { pt3dadd( 22.4983, 40.2602, -35.9486, 0.23 ) }
    dend_33 { pt3dadd( 23.7976, 40.3532, -37.9708, 0.23 ) }
    dend_33 { pt3dadd( 24.641, 40.5013, -39.3141, 0.68 ) }
    dend_33 { pt3dadd( 25.7851, 40.8466, -41.1091, 1.13 ) }
    dend_33 { pt3dadd( 27.5667, 41.554, -43.9032, 0.23 ) }
    dend_33 { pt3dadd( 28.5148, 42.0193, -45.4166, 0.23 ) }
    dend_33 { pt3dadd( 29.4222, 42.5744, -46.8505, 0.68 ) }
    dend_33 { pt3dadd( 30.3894, 43.3104, -48.3614, 1.13 ) }
    dend_33 { pt3dadd( 30.9997, 43.8251, -49.2438, 1.13 ) }
    dend_33 { pt3dadd( 32.4166, 45.1359, -51.1781, 0.45 ) }
    dend_33 { pt3dadd( 33.7805, 46.5093, -52.9678, 0.45 ) }
    dend_33 { pt3dadd( 34.4479, 47.2379, -53.8892, 0.91 ) }
    dend_33 { pt3dadd( 36.0399, 49.1637, -56.2913, 0.23 ) }
    dend_33 { pt3dadd( 36.7638, 50.1112, -57.5197, 0.23 ) }
    dend_33 { pt3dadd( 37.67, 51.2345, -59.1519, 0.23 ) }
    dend_33 { pt3dadd( 38.3951, 52.0323, -60.5098, 0.68 ) }
    dend_33 { pt3dadd( 39.0365, 52.5552, -61.7445, 0.68 ) }
    dend_33 { pt3dadd( 40.0543, 53.2576, -63.7993, 0.23 ) }
    dend_33 { pt3dadd( 41.2086, 53.8394, -66.1913, 0.23 ) }
    dend_33 { pt3dadd( 42.3543, 54.2482, -68.6402, 0.23 ) }
    dend_33 { pt3dadd( 42.9884, 54.346, -69.9645, 0.23 ) }
    dend_33 { pt3dadd( 44.2832, 54.3096, -72.4456, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.70068, 8.94261, -2.94, 2.04 ) }
    dend_26 { pt3dadd( 2.06702, 11.0323, -3.14182, 2.04 ) }
    dend_26 { pt3dadd( 2.64744, 14.3431, -3.46157, 1.81 ) }
    dend_26 { pt3dadd( 3.16595, 17.3008, -3.74721, 1.13 ) }
    dend_26 { pt3dadd( 3.65765, 20.1055, -4.01809, 1.36 ) }
    dend_26 { pt3dadd( 3.6621, 20.1309, -4.02054, 1.36 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.76068, 8.3021, -1.04, 4.31 ) }
    dend_11 { pt3dadd( 1.07987, 9.93115, -0.2774, 3.4 ) }
    dend_11 { pt3dadd( 0.767573, 10.6784, 0.0724064, 3.4 ) }
    dend_11 { pt3dadd( -0.546796, 13.8234, 1.54467, 2.04 ) }
    dend_11 { pt3dadd( -1.07825, 15.0951, 2.13996, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.24932, 3.1256, 3.4, 1.36 ) }
    dend_8 { pt3dadd( -5.44904, 4.70443, 4.40658, 1.36 ) }
    dend_8 { pt3dadd( -5.46921, 6.83108, 5.3986, 1.36 ) }
    dend_8 { pt3dadd( -5.37682, 8.32429, 6.00516, 1.36 ) }
    dend_8 { pt3dadd( -5.23123, 9.90082, 6.6084, 1.13 ) }
    dend_8 { pt3dadd( -5.05246, 11.26, 7.1044, 1.13 ) }
    dend_8 { pt3dadd( -4.80279, 13.1516, 7.76245, 1.13 ) }
    dend_8 { pt3dadd( -4.50976, 14.9444, 8.31991, 0.68 ) }
    dend_8 { pt3dadd( -4.02249, 17.4183, 9.01768, 1.36 ) }
    dend_8 { pt3dadd( -3.54655, 19.6656, 9.65362, 0.68 ) }
    dend_8 { pt3dadd( -3.31381, 20.7786, 9.97552, 1.13 ) }
    dend_8 { pt3dadd( -2.84882, 23.2505, 10.7522, 0.68 ) }
    dend_8 { pt3dadd( -2.58175, 25.0268, 11.3406, 0.23 ) }
    dend_8 { pt3dadd( -2.42868, 26.2236, 11.7276, 1.36 ) }
    dend_8 { pt3dadd( -2.33878, 27.1782, 11.9856, 0.23 ) }
    dend_8 { pt3dadd( -2.34189, 28.4483, 12.2192, 0.68 ) }
    dend_8 { pt3dadd( -2.43785, 29.4176, 12.278, 0.68 ) }
    dend_8 { pt3dadd( -2.59972, 30.7741, 12.2093, 0.68 ) }
    dend_8 { pt3dadd( -2.89662, 32.7887, 11.9798, 0.68 ) }
    dend_8 { pt3dadd( -3.00235, 33.4131, 11.9191, 1.13 ) }
    dend_8 { pt3dadd( -3.37889, 36.1637, 11.7227, 0.23 ) }
    dend_8 { pt3dadd( -3.54446, 38.6241, 11.6207, 0.23 ) }
    dend_8 { pt3dadd( -3.51316, 41.1909, 11.5825, 0.23 ) }
    dend_8 { pt3dadd( -3.42969, 43.1803, 11.5679, 0.23 ) }
    dend_8 { pt3dadd( -3.32361, 45.0597, 11.5794, 0.68 ) }
    dend_8 { pt3dadd( -3.10495, 47.036, 11.6724, 0.23 ) }
    dend_8 { pt3dadd( -2.65595, 48.9582, 11.9461, 0.23 ) }
    dend_8 { pt3dadd( -2.24408, 50.1942, 12.2703, 0.23 ) }
    dend_8 { pt3dadd( -1.26273, 61.1111, 12.9522, 0.23 ) }
    dend_8 { pt3dadd( -0.28954, 71.9205, 14.5643, 0.23 ) }
    dend_8 { pt3dadd( 1.51673, 82.6129, 16.1653, 0.23 ) }
    dend_8 { pt3dadd( 3.90625, 93.2728, 17.0304, 0.23 ) }
    dend_8 { pt3dadd( 6.56042, 103.74, 18.7922, 0.23 ) }
    dend_8 { pt3dadd( 10.3866, 113.273, 22.3211, 0.23 ) }
    dend_8 { pt3dadd( 15.1105, 122.198, 26.1878, 0.23 ) }
    dend_8 { pt3dadd( 18.4448, 131.624, 30.4107, 0.23 ) }
    dend_8 { pt3dadd( 20.2855, 141.156, 35.2809, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.36068, 7.81911, -4.06, 1.59 ) }
    dend_3 { pt3dadd( 6.53594, 9.08546, -3.80648, 1.59 ) }
    dend_3 { pt3dadd( 8.61466, 11.3803, -3.3212, 1.36 ) }
    dend_3 { pt3dadd( 10.5698, 13.5948, -2.84251, 1.59 ) }
    dend_3 { pt3dadd( 13.2823, 16.7293, -2.11287, 1.36 ) }
    dend_3 { pt3dadd( 16.147, 20.1038, -1.31399, 1.36 ) }
    dend_3 { pt3dadd( 18.2685, 22.6457, -0.726534, 1.36 ) }
    dend_3 { pt3dadd( 20.6866, 25.6372, -0.117795, 1.36 ) }
    dend_3 { pt3dadd( 22.9192, 28.4615, 0.354564, 1.36 ) }
    dend_3 { pt3dadd( 24.611, 30.6763, 0.626678, 1.36 ) }
    dend_3 { pt3dadd( 25.4208, 31.7762, 0.681675, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_3 { pt3dadd( 27.2172, 34.2319, 0.543165, 1.36 ) }
    dend_3 { pt3dadd( 29.4049, 37.1254, 0.160908, 0.91 ) }
    dend_3 { pt3dadd( 31.5174, 39.846, -0.381319, 1.36 ) }
    dend_3 { pt3dadd( 34.0385, 42.9942, -1.00144, 1.36 ) }
    dend_3 { pt3dadd( 35.734, 45.0649, -1.3696, 1.59 ) }
    dend_3 { pt3dadd( 38.1439, 47.9558, -1.87628, 1.13 ) }
    dend_3 { pt3dadd( 40.2075, 50.3844, -2.27423, 1.36 ) }
    dend_3 { pt3dadd( 42.3317, 52.824, -2.57835, 1.81 ) }
    dend_3 { pt3dadd( 44.6485, 55.4642, -2.82297, 1.81 ) }
    dend_3 { pt3dadd( 46.696, 57.7131, -2.82027, 1.36 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.93069, 6.9056, -0.94, 1.59 ) }
    dend_0 { pt3dadd( 5.696, 9.01629, -0.0914437, 1.59 ) }
    dend_0 { pt3dadd( 6.18306, 10.4857, 0.500051, 1.36 ) }
    dend_0 { pt3dadd( 6.90392, 12.7024, 1.41241, 2.04 ) }
    dend_0 { pt3dadd( 8.08022, 16.3072, 2.90132, 1.36 ) }
    dend_0 { pt3dadd( 8.71953, 18.2133, 3.73748, 1.81 ) }
    dend_0 { pt3dadd( 9.82312, 21.3689, 5.13785, 1.36 ) }
    dend_0 { pt3dadd( 10.34, 22.7736, 5.81393, 1.13 ) }
    dend_0 { pt3dadd( 11.1691, 24.8618, 6.8427, 1.59 ) }
    dend_0 { pt3dadd( 11.8746, 26.4141, 7.61874, 1.59 ) }
    dend_0 { pt3dadd( 13.0223, 28.665, 8.69256, 1.13 ) }
    dend_0 { pt3dadd( 13.7467, 30.0023, 9.30162, 1.13 ) }
    dend_0 { pt3dadd( 14.8162, 31.8453, 10.1191, 1.81 ) }
    dend_0 { pt3dadd( 16.2028, 34.2389, 11.1473, 1.13 ) }
    dend_0 { pt3dadd( 17.2426, 36.0259, 11.885, 1.36 ) }
    dend_0 { pt3dadd( 18.4956, 38.1906, 12.7409, 1.13 ) }
    dend_0 { pt3dadd( 19.1129, 39.2905, 13.134, 1.59 ) }
    dend_0 { pt3dadd( 19.9668, 40.9032, 13.7233, 1.36 ) }
    dend_0 { pt3dadd( 20.6977, 42.4303, 14.2433, 1.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.51814, 7.65918, 0.0, 1.16355 ) }
    axon_0 { pt3dadd( 12.7262, 20.2141, 0.0, 1.16355 ) }
    axon_0 { pt3dadd( 20.9343, 32.7691, 0.0, 1.16355 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 32/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -3.91084, -26.4085, -1.77382, 2.27 ) }
    dend_50 { pt3dadd( -3.39002, -29.0442, -1.10369, 2.27 ) }
    dend_50 { pt3dadd( -2.79203, -32.0706, -0.33425, 2.27 ) }
    dend_50 { pt3dadd( -2.22424, -34.944, 0.396323, 2.27 ) }
    dend_50 { pt3dadd( -2.06434, -35.7532, 0.602066, 2.27 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 37/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -3.91084, -26.4085, -1.77382, 1.13 ) }
    dend_47 { pt3dadd( -6.73346, -28.7476, -1.95625, 1.13 ) }
    dend_47 { pt3dadd( -7.9353, -29.7355, -2.01281, 1.13 ) }
    dend_47 { pt3dadd( -10.7554, -31.976, -2.11074, 1.13 ) }
    dend_47 { pt3dadd( -12.2691, -33.1727, -2.21782, 1.59 ) }
    dend_47 { pt3dadd( -14.4902, -34.9217, -2.43322, 1.36 ) }
    dend_47 { pt3dadd( -15.9401, -36.0319, -2.6131, 1.36 ) }
    dend_47 { pt3dadd( -17.0885, -36.8616, -2.8218, 1.36 ) }
    dend_47 { pt3dadd( -18.523, -37.8879, -3.15089, 1.36 ) }
    dend_47 { pt3dadd( -19.9096, -38.8954, -3.57222, 1.36 ) }
    dend_47 { pt3dadd( -21.5214, -40.0779, -4.16979, 1.36 ) }
    dend_47 { pt3dadd( -23.4917, -41.5437, -4.98914, 1.36 ) }
    dend_47 { pt3dadd( -25.057, -42.7908, -5.61069, 1.36 ) }
    dend_47 { pt3dadd( -25.8626, -43.4854, -5.94553, 1.36 ) }
    dend_47 { pt3dadd( -27.3749, -44.9176, -6.55575, 1.59 ) }
    dend_47 { pt3dadd( -28.8664, -46.4869, -7.09674, 1.13 ) }
    dend_47 { pt3dadd( -30.7003, -48.5909, -7.77203, 1.36 ) }
    dend_47 { pt3dadd( -32.6482, -50.96, -8.46285, 1.36 ) }
    dend_47 { pt3dadd( -33.6263, -52.1514, -8.78162, 2.04 ) }
    dend_47 { pt3dadd( -35.2901, -54.1267, -9.32191, 1.59 ) }
    dend_47 { pt3dadd( -37.2021, -56.3742, -9.942, 1.13 ) }
    dend_47 { pt3dadd( -38.1666, -57.4788, -10.2565, 1.13 ) }
    dend_47 { pt3dadd( -38.8524, -58.1993, -10.4962, 1.13 ) }
    dend_47 { pt3dadd( -39.7379, -59.0115, -10.8063, 1.13 ) }
    dend_47 { pt3dadd( -41.4713, -60.4784, -11.3653, 0.91 ) }
    dend_47 { pt3dadd( -42.4811, -61.2988, -11.6903, 0.91 ) }
    dend_47 { pt3dadd( -43.4057, -62.1041, -11.9062, 0.91 ) }
    dend_47 { pt3dadd( -44.7157, -63.4044, -12.0776, 0.91 ) }
    dend_47 { pt3dadd( -46.1483, -64.9398, -12.1698, 0.68 ) }
    dend_47 { pt3dadd( -47.6331, -66.5707, -12.2014, 0.91 ) }
    dend_47 { pt3dadd( -49.3856, -68.4614, -12.1975, 0.91 ) }
    dend_47 { pt3dadd( -52.1884, -71.4496, -12.185, 1.13 ) }
    dend_47 { pt3dadd( -54.3843, -73.765, -12.2245, 1.81 ) }
    dend_47 { pt3dadd( -56.3707, -75.8302, -12.2927, 0.91 ) }
    dend_47 { pt3dadd( -58.118, -77.6366, -12.4098, 0.91 ) }
    dend_47 { pt3dadd( -60.0577, -79.5956, -12.6238, 1.59 ) }
    dend_47 { pt3dadd( -61.0033, -80.5212, -12.7828, 1.59 ) }
    dend_47 { pt3dadd( -62.5361, -81.9634, -13.2121, 0.68 ) }
    dend_47 { pt3dadd( -63.2798, -82.6515, -13.4533, 0.68 ) }
    dend_47 { pt3dadd( -64.4152, -83.7228, -13.8222, 1.13 ) }
    dend_47 { pt3dadd( -65.2422, -84.5378, -14.0859, 1.13 ) }
    dend_47 { pt3dadd( -65.9584, -85.2286, -14.2918, 1.13 ) }
    dend_47 { pt3dadd( -67.3529, -86.4847, -14.6453, 0.91 ) }
    dend_47 { pt3dadd( -68.988, -87.8571, -14.9939, 1.13 ) }
    dend_47 { pt3dadd( -70.4396, -89.0538, -15.2381, 1.13 ) }
    dend_47 { pt3dadd( -71.7052, -90.0913, -15.3995, 0.68 ) }
    dend_47 { pt3dadd( -73.3326, -91.4652, -15.5284, 0.68 ) }
    dend_47 { pt3dadd( -74.3562, -92.3476, -15.5671, 1.13 ) }
    dend_47 { pt3dadd( -74.9769, -92.8563, -15.5689, 1.13 ) }
    dend_47 { pt3dadd( -77.3586, -94.5977, -15.5992, 0.68 ) }
    dend_47 { pt3dadd( -78.9352, -95.6344, -15.6762, 1.13 ) }
    dend_47 { pt3dadd( -79.829, -96.1815, -15.7459, 1.36 ) }
    dend_47 { pt3dadd( -81.643, -97.2636, -15.9557, 0.68 ) }
    dend_47 { pt3dadd( -83.9739, -98.5924, -16.3043, 1.13 ) }
    dend_47 { pt3dadd( -86.3856, -99.9125, -16.8143, 0.45 ) }
    dend_47 { pt3dadd( -87.8303, -100.622, -17.1967, 0.23 ) }
    dend_47 { pt3dadd( -89.4719, -101.405, -17.6588, 0.45 ) }
    dend_47 { pt3dadd( -90.6319, -101.941, -17.9947, 1.13 ) }
    dend_47 { pt3dadd( -93.1939, -103.066, -18.7511, 0.45 ) }
    dend_47 { pt3dadd( -95.1304, -103.848, -19.3008, 1.36 ) }
    dend_47 { pt3dadd( -97.5683, -104.695, -19.8606, 1.81 ) }
    dend_47 { pt3dadd( -99.0476, -105.064, -20.14, 0.68 ) }
    dend_47 { pt3dadd( -100.669, -105.347, -20.3963, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_47 { pt3dadd( -102.655, -105.584, -20.6307, 1.13 ) }
    dend_47 { pt3dadd( -104.775, -105.749, -20.8262, 0.68 ) }
    dend_47 { pt3dadd( -107.551, -105.879, -20.9715, 1.36 ) }
    dend_47 { pt3dadd( -110.233, -105.952, -21.0691, 0.23 ) }
    dend_47 { pt3dadd( -111.964, -105.963, -21.0995, 1.59 ) }
    dend_47 { pt3dadd( -112.913, -105.966, -21.0863, 1.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.485161, -36.8558, -9.62001, 0.68 ) }
    dend_45 { pt3dadd( 1.69234, -37.125, -10.9094, 0.68 ) }
    dend_45 { pt3dadd( 2.88249, -37.5017, -11.9547, 1.13 ) }
    dend_45 { pt3dadd( 4.08004, -38.0221, -12.9079, 1.13 ) }
    dend_45 { pt3dadd( 4.71301, -38.3514, -13.3917, 1.13 ) }
    dend_45 { pt3dadd( 5.26319, -38.6744, -13.8223, 0.91 ) }
    dend_45 { pt3dadd( 6.24567, -39.2672, -14.6243, 1.36 ) }
    dend_45 { pt3dadd( 7.25873, -39.8646, -15.3584, 1.13 ) }
    dend_45 { pt3dadd( 8.29899, -40.6103, -16.0815, 1.13 ) }
    dend_45 { pt3dadd( 8.59221, -40.8894, -16.3, 1.13 ) }
    dend_45 { pt3dadd( 8.91171, -41.2484, -16.5618, 1.13 ) }
    dend_45 { pt3dadd( 9.38555, -41.844, -17.0037, 1.13 ) }
    dend_45 { pt3dadd( 9.86646, -42.4627, -17.4631, 1.13 ) }
    dend_45 { pt3dadd( 10.4961, -43.2714, -18.0994, 1.13 ) }
    dend_45 { pt3dadd( 11.3798, -44.4301, -19.0479, 0.68 ) }
    dend_45 { pt3dadd( 11.8968, -45.1052, -19.6019, 1.13 ) }
    dend_45 { pt3dadd( 13.1096, -46.697, -20.9466, 0.68 ) }
    dend_45 { pt3dadd( 13.9022, -47.7067, -21.8288, 1.13 ) }
    dend_45 { pt3dadd( 15.1585, -49.2606, -23.2352, 0.45 ) }
    dend_45 { pt3dadd( 15.7805, -49.9638, -23.8942, 0.45 ) }
    dend_45 { pt3dadd( 17.1308, -51.3428, -25.2391, 0.45 ) }
    dend_45 { pt3dadd( 18.6065, -52.7529, -26.6616, 1.13 ) }
    dend_45 { pt3dadd( 20.1336, -54.1382, -28.0779, 0.45 ) }
    dend_45 { pt3dadd( 21.2021, -55.1116, -29.0117, 0.45 ) }
    dend_45 { pt3dadd( 22.9947, -56.7141, -30.4219, 0.45 ) }
    dend_45 { pt3dadd( 24.2793, -57.8469, -31.3671, 0.23 ) }
    dend_45 { pt3dadd( 25.3922, -58.8107, -32.1319, 1.13 ) }
    dend_45 { pt3dadd( 26.3788, -59.6595, -32.743, 0.23 ) }
    dend_45 { pt3dadd( 28.0293, -61.0692, -33.6541, 0.23 ) }
    dend_45 { pt3dadd( 29.3476, -62.1404, -34.2448, 0.68 ) }
    dend_45 { pt3dadd( 31.7477, -63.9902, -35.0213, 0.23 ) }
    dend_45 { pt3dadd( 34.4447, -65.8257, -35.4877, 0.23 ) }
    dend_45 { pt3dadd( 35.3272, -66.3244, -35.5267, 0.23 ) }
    dend_45 { pt3dadd( 36.8743, -67.0319, -35.4677, 0.68 ) }
    dend_45 { pt3dadd( 39.0974, -67.9216, -35.2974, 0.23 ) }
    dend_45 { pt3dadd( 40.881, -68.6349, -35.096, 0.91 ) }
    dend_45 { pt3dadd( 43.3922, -69.6551, -34.7876, 0.23 ) }
    dend_45 { pt3dadd( 46.2421, -70.8257, -34.4808, 0.23 ) }
    dend_45 { pt3dadd( 50.7656, -72.705, -34.2154, 0.23 ) }
    dend_45 { pt3dadd( 54.6071, -74.3369, -34.2257, 0.23 ) }
    dend_45 { pt3dadd( 56.3049, -75.0717, -34.345, 0.68 ) }
    dend_45 { pt3dadd( 58.6566, -76.1237, -34.5998, 0.23 ) }
    dend_45 { pt3dadd( 59.9519, -76.7478, -34.803, 0.91 ) }
    dend_45 { pt3dadd( 61.451, -77.5071, -35.1067, 0.23 ) }
    dend_45 { pt3dadd( 63.6896, -78.6207, -35.7266, 0.68 ) }
    dend_45 { pt3dadd( 65.9608, -79.5551, -36.5455, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.485161, -36.8558, -9.62001, 1.81 ) }
    dend_40 { pt3dadd( -1.22286, -39.1201, -12.1881, 1.81 ) }
    dend_40 { pt3dadd( -2.56237, -40.9016, -14.1316, 1.81 ) }
    dend_40 { pt3dadd( -3.81626, -42.4935, -15.7694, 1.81 ) }
    dend_40 { pt3dadd( -5.64475, -44.8149, -18.1578, 1.81 ) }
    dend_40 { pt3dadd( -6.85148, -46.347, -19.734, 1.81 ) }
    dend_40 { pt3dadd( -7.71526, -47.4436, -20.8623, 1.59 ) }
    dend_40 { pt3dadd( -8.44868, -48.4948, -21.8843, 1.81 ) }
    dend_40 { pt3dadd( -9.34017, -49.8785, -23.2373, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 102.962, -73.584, -33.0386, 0.23 ) }
    dend_36 { pt3dadd( 105.185, -73.0565, -33.5003, 0.23 ) }
    dend_36 { pt3dadd( 109.376, -71.8134, -34.1806, 0.45 ) }
    dend_36 { pt3dadd( 111.302, -71.2205, -34.4972, 0.45 ) }
    dend_36 { pt3dadd( 113.722, -70.4029, -34.9246, 0.23 ) }
    dend_36 { pt3dadd( 115.929, -69.6571, -35.3145, 1.13 ) }
    dend_36 { pt3dadd( 119.51, -68.4474, -35.947, 0.23 ) }
    dend_36 { pt3dadd( 122.33, -67.3355, -36.385, 0.91 ) }
    dend_36 { pt3dadd( 125.236, -65.9568, -36.8356, 0.23 ) }
    dend_36 { pt3dadd( 127.796, -64.7216, -37.2648, 0.91 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 102.962, -73.584, -33.0386, 0.23 ) }
    dend_35 { pt3dadd( 105.213, -75.1289, -32.6244, 0.23 ) }
    dend_35 { pt3dadd( 107.786, -76.8632, -32.2149, 0.23 ) }
    dend_35 { pt3dadd( 109.987, -78.361, -31.905, 0.23 ) }
    dend_35 { pt3dadd( 111.266, -79.2443, -31.7405, 1.36 ) }
    dend_35 { pt3dadd( 113.153, -80.5716, -31.5152, 0.23 ) }
    dend_35 { pt3dadd( 115.042, -81.9545, -31.3108, 0.68 ) }
    dend_35 { pt3dadd( 117.388, -83.7254, -31.1591, 0.23 ) }
    dend_35 { pt3dadd( 118.843, -84.8744, -31.1473, 0.23 ) }
    dend_35 { pt3dadd( 119.666, -85.5735, -31.1861, 0.23 ) }
    dend_35 { pt3dadd( 120.372, -86.2073, -31.2385, 0.91 ) }
    dend_35 { pt3dadd( 122.2, -87.9707, -31.4369, 0.23 ) }
    dend_35 { pt3dadd( 123.605, -89.404, -31.6402, 0.23 ) }
    dend_35 { pt3dadd( 124.144, -89.9583, -31.6928, 0.91 ) }
    dend_35 { pt3dadd( 125.138, -90.8995, -31.7306, 0.91 ) }
    dend_35 { pt3dadd( 125.977, -91.6075, -31.7198, 0.23 ) }
    dend_35 { pt3dadd( 126.906, -92.2951, -31.6694, 0.23 ) }
    dend_35 { pt3dadd( 128.069, -93.0602, -31.6022, 0.68 ) }
    dend_35 { pt3dadd( 130.613, -94.6616, -31.4467, 0.23 ) }
    dend_35 { pt3dadd( 132.398, -95.7351, -31.3722, 0.23 ) }
    dend_35 { pt3dadd( 133.981, -96.6415, -31.3341, 1.36 ) }
    dend_35 { pt3dadd( 135.413, -97.4432, -31.3252, 0.45 ) }
    dend_35 { pt3dadd( 137.491, -98.5802, -31.3553, 0.23 ) }
    dend_35 { pt3dadd( 138.713, -99.2469, -31.4054, 1.13 ) }
    dend_35 { pt3dadd( 139.66, -99.7837, -31.4376, 1.13 ) }
    dend_35 { pt3dadd( 140.99, -100.586, -31.4232, 0.23 ) }
    dend_35 { pt3dadd( 141.696, -101.032, -31.3866, 0.91 ) }
    dend_35 { pt3dadd( 142.712, -101.704, -31.2955, 0.91 ) }
    dend_35 { pt3dadd( 144.792, -103.156, -31.0359, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 147.003, -104.84, -30.763, 0.23 ) }
    dend_35 { pt3dadd( 148.428, -106.028, -30.5957, 0.23 ) }
    dend_35 { pt3dadd( 148.99, -106.555, -30.5358, 1.13 ) }
    dend_35 { pt3dadd( 150.82, -108.431, -30.3698, 0.23 ) }
    dend_35 { pt3dadd( 151.74, -109.466, -30.3081, 1.36 ) }
    dend_35 { pt3dadd( 153.009, -111.036, -30.2351, 0.68 ) }
    dend_35 { pt3dadd( 153.866, -112.153, -30.2442, 1.13 ) }
    dend_35 { pt3dadd( 154.983, -113.635, -30.2468, 0.23 ) }
    dend_35 { pt3dadd( 155.554, -114.386, -30.2323, 0.68 ) }
    dend_35 { pt3dadd( 156.328, -115.408, -30.1706, 0.68 ) }
    dend_35 { pt3dadd( 158.035, -117.605, -29.9656, 0.23 ) }
    dend_35 { pt3dadd( 159.149, -119.059, -29.7756, 0.68 ) }
    dend_35 { pt3dadd( 160.158, -120.375, -29.5802, 0.23 ) }
    dend_35 { pt3dadd( 160.827, -121.235, -29.4336, 0.23 ) }
    dend_35 { pt3dadd( 161.931, -122.712, -29.161, 0.23 ) }
    dend_35 { pt3dadd( 162.857, -123.997, -28.8961, 0.23 ) }
    dend_35 { pt3dadd( 163.93, -125.634, -28.5224, 0.91 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 17/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.6621, 20.1309, -4.02054, 0.23 ) }
    dend_30 { pt3dadd( 2.99423, 21.9689, -4.83085, 0.23 ) }
    dend_30 { pt3dadd( 2.58418, 23.2499, -5.32996, 0.68 ) }
    dend_30 { pt3dadd( 2.18012, 24.9454, -5.90315, 1.13 ) }
    dend_30 { pt3dadd( 1.91838, 26.369, -6.44824, 0.68 ) }
    dend_30 { pt3dadd( 1.44355, 28.6445, -7.47482, 0.68 ) }
    dend_30 { pt3dadd( 1.22057, 29.7354, -7.99213, 0.68 ) }
    dend_30 { pt3dadd( 1.10577, 30.3129, -8.28257, 0.68 ) }
    dend_30 { pt3dadd( 0.763123, 31.7436, -9.08891, 1.81 ) }
    dend_30 { pt3dadd( 0.302327, 33.8703, -10.3946, 1.13 ) }
    dend_30 { pt3dadd( -0.197226, 36.2785, -12.036, 0.68 ) }
    dend_30 { pt3dadd( -0.492292, 37.5163, -12.9323, 1.13 ) }
    dend_30 { pt3dadd( -1.04821, 39.6099, -14.4749, 0.45 ) }
    dend_30 { pt3dadd( -1.44802, 41.0689, -15.6093, 0.45 ) }
    dend_30 { pt3dadd( -1.87049, 42.7292, -17.0294, 1.36 ) }
    dend_30 { pt3dadd( -2.13963, 44.0727, -18.3503, 0.68 ) }
    dend_30 { pt3dadd( -2.21923, 45.0265, -19.5151, 0.68 ) }
    dend_30 { pt3dadd( -2.24133, 46.266, -21.234, 1.36 ) }
    dend_30 { pt3dadd( -2.15408, 47.8737, -23.676, 0.45 ) }
    dend_30 { pt3dadd( -1.96029, 49.1658, -25.902, 0.45 ) }
    dend_30 { pt3dadd( -1.72049, 50.2918, -28.2359, 0.45 ) }
    dend_30 { pt3dadd( -1.36209, 51.2402, -30.6399, 0.45 ) }
    dend_30 { pt3dadd( -1.00892, 51.7778, -32.3443, 1.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.6621, 20.1309, -4.02054, 1.13 ) }
    dend_27 { pt3dadd( 3.49455, 23.7445, -4.4412, 1.13 ) }
    dend_27 { pt3dadd( 3.53938, 26.9158, -4.77872, 1.13 ) }
    dend_27 { pt3dadd( 3.73286, 30.874, -5.29863, 1.13 ) }
    dend_27 { pt3dadd( 4.04632, 35.4279, -5.98153, 1.13 ) }
    dend_27 { pt3dadd( 4.17109, 37.1625, -6.26297, 1.13 ) }
    dend_27 { pt3dadd( 4.35416, 39.2119, -6.62165, 1.13 ) }
    dend_27 { pt3dadd( 4.69762, 42.603, -7.24412, 1.36 ) }
    dend_27 { pt3dadd( 5.12572, 45.8498, -7.87538, 1.13 ) }
    dend_27 { pt3dadd( 5.7962, 49.6495, -8.67431, 1.13 ) }
    dend_27 { pt3dadd( 6.3791, 52.3769, -9.3482, 1.59 ) }
    dend_27 { pt3dadd( 6.76541, 54.2695, -9.86212, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.07825, 15.0951, 2.13996, 2.95 ) }
    dend_19 { pt3dadd( -2.25521, 15.872, 2.05091, 2.95 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 54/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.07825, 15.0951, 2.13996, 0.91 ) }
    dend_12 { pt3dadd( 0.229623, 18.0772, 3.57992, 0.91 ) }
    dend_12 { pt3dadd( 0.456476, 18.7339, 3.9694, 0.91 ) }
    dend_12 { pt3dadd( 0.977002, 19.9914, 4.8509, 0.91 ) }
    dend_12 { pt3dadd( 1.77551, 21.5164, 6.03795, 1.36 ) }
    dend_12 { pt3dadd( 3.2619, 23.7524, 8.00495, 0.91 ) }
    dend_12 { pt3dadd( 4.5476, 25.3365, 9.49189, 0.91 ) }
    dend_12 { pt3dadd( 6.43195, 27.1667, 11.3564, 1.36 ) }
    dend_12 { pt3dadd( 8.72222, 29.1165, 13.5751, 0.68 ) }
    dend_12 { pt3dadd( 10.4081, 30.3816, 15.181, 0.23 ) }
    dend_12 { pt3dadd( 12.1011, 31.4995, 16.666, 0.23 ) }
    dend_12 { pt3dadd( 14.2216, 32.4636, 18.1866, 0.23 ) }
    dend_12 { pt3dadd( 14.9514, 32.6709, 18.6046, 1.13 ) }
    dend_12 { pt3dadd( 16.4103, 32.9458, 19.3038, 0.23 ) }
    dend_12 { pt3dadd( 17.4249, 33.0914, 19.7439, 0.23 ) }
    dend_12 { pt3dadd( 18.895, 33.2863, 20.3703, 0.68 ) }
    dend_12 { pt3dadd( 22.0638, 33.7258, 21.7282, 0.23 ) }
    dend_12 { pt3dadd( 23.1759, 33.5144, 22.2429, 0.23 ) }
    dend_12 { pt3dadd( 30.7787, 38.6755, 31.1438, 0.23 ) }
    dend_12 { pt3dadd( 39.6882, 44.5936, 38.2134, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 74/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 20.2855, 141.156, 35.2809, 0.23 ) }
    dend_10 { pt3dadd( 22.0875, 151.071, 37.5681, 0.23 ) }
    dend_10 { pt3dadd( 22.8416, 160.546, 41.5439, 0.23 ) }
    dend_10 { pt3dadd( 23.336, 170.22, 45.1013, 0.23 ) }
    dend_10 { pt3dadd( 22.7604, 179.579, 49.3565, 0.23 ) }
    dend_10 { pt3dadd( 22.7849, 188.406, 54.5738, 0.23 ) }
    dend_10 { pt3dadd( 21.4885, 196.682, 60.4179, 0.23 ) }
    dend_10 { pt3dadd( 18.5661, 204.676, 66.0333, 0.23 ) }
    dend_10 { pt3dadd( 17.4936, 212.642, 72.2985, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 83/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 20.2855, 141.156, 35.2809, 0.23 ) }
    dend_9 { pt3dadd( 22.0971, 151.224, 37.4408, 0.23 ) }
    dend_9 { pt3dadd( 23.0113, 161.59, 38.7078, 0.23 ) }
    dend_9 { pt3dadd( 21.928, 171.999, 39.4735, 0.23 ) }
    dend_9 { pt3dadd( 21.0203, 182.171, 41.8026, 0.23 ) }
    dend_9 { pt3dadd( 21.0609, 192.114, 45.0244, 0.23 ) }
    dend_9 { pt3dadd( 22.156, 201.643, 49.0811, 0.23 ) }
    dend_9 { pt3dadd( 22.0771, 211.261, 53.1061, 0.23 ) }
    dend_9 { pt3dadd( 23.4808, 220.522, 57.6077, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 92/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 46.696, 57.7131, -2.82027, 0.68 ) }
    dend_5 { pt3dadd( 47.7139, 58.8857, -3.05702, 0.68 ) }
    dend_5 { pt3dadd( 48.8132, 60.132, -3.30536, 1.13 ) }
    dend_5 { pt3dadd( 49.6569, 61.1112, -3.55073, 1.59 ) }
    dend_5 { pt3dadd( 51.0038, 62.6801, -3.99156, 0.68 ) }
    dend_5 { pt3dadd( 51.8232, 63.6199, -4.26486, 0.68 ) }
    dend_5 { pt3dadd( 53.0716, 65.0204, -4.6699, 1.81 ) }
    dend_5 { pt3dadd( 54.2058, 66.2754, -5.06621, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_5 { pt3dadd( 55.4963, 67.6965, -5.5172, 0.23 ) }
    dend_5 { pt3dadd( 56.5672, 68.8642, -5.90287, 1.13 ) }
    dend_5 { pt3dadd( 57.3598, 69.7113, -6.18207, 1.13 ) }
    dend_5 { pt3dadd( 58.3664, 70.6924, -6.4996, 0.23 ) }
    dend_5 { pt3dadd( 59.2612, 71.4641, -6.74771, 0.23 ) }
    dend_5 { pt3dadd( 60.1165, 72.1085, -6.94961, 0.91 ) }
    dend_5 { pt3dadd( 60.965, 72.6627, -7.08789, 0.23 ) }
    dend_5 { pt3dadd( 61.841, 73.1994, -7.23151, 1.36 ) }
    dend_5 { pt3dadd( 63.1818, 73.9763, -7.45202, 0.23 ) }
    dend_5 { pt3dadd( 63.9153, 74.4074, -7.56521, 1.36 ) }
    dend_5 { pt3dadd( 64.783, 74.962, -7.70648, 1.81 ) }
    dend_5 { pt3dadd( 67.097, 76.6689, -8.11892, 0.23 ) }
    dend_5 { pt3dadd( 68.4132, 77.7376, -8.39099, 0.23 ) }
    dend_5 { pt3dadd( 69.4656, 78.6348, -8.61615, 1.36 ) }
    dend_5 { pt3dadd( 70.7632, 79.8327, -8.89944, 0.23 ) }
    dend_5 { pt3dadd( 71.9593, 81.0031, -9.18231, 0.91 ) }
    dend_5 { pt3dadd( 73.0649, 82.1614, -9.47574, 0.23 ) }
    dend_5 { pt3dadd( 73.9566, 83.2616, -9.76109, 2.27 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 18/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 46.696, 57.7131, -2.82027, 0.23 ) }
    dend_4 { pt3dadd( 49.6086, 58.2713, -3.26657, 0.23 ) }
    dend_4 { pt3dadd( 52.9683, 59.2007, -3.84282, 0.45 ) }
    dend_4 { pt3dadd( 55.0871, 59.9591, -4.23752, 1.13 ) }
    dend_4 { pt3dadd( 59.3119, 61.5699, -5.03301, 0.45 ) }
    dend_4 { pt3dadd( 61.5448, 62.4928, -5.48575, 1.36 ) }
    dend_4 { pt3dadd( 64.4525, 63.8019, -6.08874, 1.13 ) }
    dend_4 { pt3dadd( 68.1734, 65.6716, -6.90811, 0.91 ) }
    dend_4 { pt3dadd( 71.8614, 67.7096, -7.68306, 0.68 ) }
    dend_4 { pt3dadd( 73.8203, 68.8785, -7.98351, 0.23 ) }
    dend_4 { pt3dadd( 75.4939, 69.9238, -8.12474, 0.68 ) }
    dend_4 { pt3dadd( 77.8272, 71.3651, -8.17839, 0.23 ) }
    dend_4 { pt3dadd( 79.8569, 72.575, -8.12074, 1.13 ) }
    dend_4 { pt3dadd( 84.9114, 75.3461, -7.81651, 0.23 ) }
    dend_4 { pt3dadd( 90.6207, 78.2351, -7.36078, 0.23 ) }
    dend_4 { pt3dadd( 93.2998, 79.4172, -7.14568, 1.36 ) }
    dend_4 { pt3dadd( 95.2947, 80.1402, -6.98446, 1.36 ) }
    dend_4 { pt3dadd( 99.4299, 81.3053, -6.71211, 0.23 ) }
    dend_4 { pt3dadd( 101.267, 81.6783, -6.63371, 0.23 ) }
    dend_4 { pt3dadd( 103.923, 81.7751, -6.65673, 0.91 ) }
    dend_4 { pt3dadd( 107.943, 81.2964, -7.06403, 0.23 ) }
    dend_4 { pt3dadd( 109.126, 81.1034, -7.24368, 0.91 ) }
    dend_4 { pt3dadd( 111.375, 80.7297, -7.67633, 0.91 ) }
    dend_4 { pt3dadd( 113.945, 80.3584, -8.25602, 0.23 ) }
    dend_4 { pt3dadd( 117.736, 79.9752, -9.27993, 1.59 ) }
    dend_4 { pt3dadd( 123.488, 79.6811, -11.1693, 0.23 ) }
    dend_4 { pt3dadd( 126.429, 79.6561, -12.2176, 0.68 ) }
    dend_4 { pt3dadd( 128.339, 79.7042, -12.9378, 0.23 ) }
    dend_4 { pt3dadd( 130.299, 79.8259, -13.7473, 0.91 ) }
    dend_4 { pt3dadd( 133.566, 80.2097, -15.2514, 0.23 ) }
    dend_4 { pt3dadd( 135.764, 80.7686, -16.3911, 1.36 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 49/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.6977, 42.4303, 14.2433, 0.45 ) }
    dend_2 { pt3dadd( 21.9926, 42.6544, 14.6983, 0.45 ) }
    dend_2 { pt3dadd( 23.6833, 43.0548, 15.2987, 0.45 ) }
    dend_2 { pt3dadd( 24.7162, 43.3371, 15.6457, 0.91 ) }
    dend_2 { pt3dadd( 26.1149, 43.7071, 16.0737, 0.23 ) }
    dend_2 { pt3dadd( 27.4112, 44.0276, 16.4507, 0.68 ) }
    dend_2 { pt3dadd( 28.8831, 44.3533, 16.8416, 0.68 ) }
    dend_2 { pt3dadd( 29.8705, 44.5409, 17.0769, 0.23 ) }
    dend_2 { pt3dadd( 30.8032, 44.7053, 17.2566, 0.23 ) }
    dend_2 { pt3dadd( 32.4876, 44.9903, 17.526, 0.23 ) }
    dend_2 { pt3dadd( 33.8911, 45.1896, 17.7042, 0.23 ) }
    dend_2 { pt3dadd( 35.2075, 45.3143, 17.8189, 0.23 ) }
    dend_2 { pt3dadd( 35.9898, 45.3567, 17.8615, 0.23 ) }
    dend_2 { pt3dadd( 36.9804, 45.3715, 17.9175, 0.68 ) }
    dend_2 { pt3dadd( 37.9441, 45.3807, 17.9691, 0.68 ) }
    dend_2 { pt3dadd( 39.0632, 45.4287, 17.9961, 0.23 ) }
    dend_2 { pt3dadd( 47.2662, 45.5765, 18.7227, 0.23 ) }
    dend_2 { pt3dadd( 55.4566, 45.9017, 19.5293, 0.23 ) }
    dend_2 { pt3dadd( 63.3708, 46.1916, 21.7927, 0.23 ) }
    dend_2 { pt3dadd( 71.4716, 47.3265, 22.7986, 0.23 ) }
    dend_2 { pt3dadd( 79.6899, 47.8414, 23.0011, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 20.6977, 42.4303, 14.2433, 0.91 ) }
    dend_1 { pt3dadd( 21.2149, 44.2008, 14.5995, 0.91 ) }
    dend_1 { pt3dadd( 21.862, 45.771, 14.8704, 1.36 ) }
    dend_1 { pt3dadd( 22.7287, 47.874, 15.2332, 0.91 ) }
    dend_1 { pt3dadd( 23.548, 49.862, 15.5762, 0.91 ) }
    dend_1 { pt3dadd( 24.105, 51.2133, 15.8093, 0.68 ) }
    dend_1 { pt3dadd( 24.922, 53.1957, 16.1513, 0.45 ) }
    dend_1 { pt3dadd( 25.7901, 54.9357, 16.4576, 0.23 ) }
    dend_1 { pt3dadd( 28.5442, 65.5088, 16.9846, 0.23 ) }
    dend_1 { pt3dadd( 30.2862, 76.1262, 19.0332, 0.23 ) }
    dend_1 { pt3dadd( 31.1354, 86.8384, 21.2114, 0.23 ) }
    dend_1 { pt3dadd( 34.161, 96.8506, 24.2815, 0.23 ) }
    dend_1 { pt3dadd( 38.2717, 105.88, 28.605, 0.23 ) }
    dend_1 { pt3dadd( 41.4112, 114.674, 34.0541, 0.23 ) }
    dend_1 { pt3dadd( 46.2198, 123.746, 37.4704, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 20.9343, 32.7691, 0.0, 0.618443 ) }
    axon_1 { pt3dadd( 29.1424, 45.3241, 0.0, 0.618443 ) }
    axon_1 { pt3dadd( 37.3505, 57.8791, 0.0, 0.618443 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 88/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -2.06434, -35.7532, 0.602066, 0.68 ) }
    dend_54 { pt3dadd( -2.05084, -37.925, 0.872914, 0.68 ) }
    dend_54 { pt3dadd( -2.16787, -40.1222, 1.07453, 1.13 ) }
    dend_54 { pt3dadd( -2.28777, -41.7174, 1.21975, 1.13 ) }
    dend_54 { pt3dadd( -2.45702, -43.9227, 1.43963, 1.36 ) }
    dend_54 { pt3dadd( -2.62302, -46.3502, 1.71028, 1.36 ) }
    dend_54 { pt3dadd( -2.80132, -49.4823, 2.06632, 1.36 ) }
    dend_54 { pt3dadd( -2.96625, -52.3152, 2.36917, 1.36 ) }
    dend_54 { pt3dadd( -3.10614, -54.5499, 2.59779, 1.36 ) }
    dend_54 { pt3dadd( -3.2739, -57.3024, 2.85347, 1.36 ) }
    dend_54 { pt3dadd( -3.48001, -61.1446, 3.21362, 1.59 ) }
    dend_54 { pt3dadd( -3.58772, -63.8394, 3.48605, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( -3.6545, -67.639, 3.8957, 1.36 ) }
    dend_54 { pt3dadd( -3.67238, -71.1722, 4.26983, 1.36 ) }
    dend_54 { pt3dadd( -3.70007, -73.8844, 4.50519, 1.59 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 3/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.06434, -35.7532, 0.602066, 1.59 ) }
    dend_51 { pt3dadd( -2.74179, -37.869, 2.79048, 1.59 ) }
    dend_51 { pt3dadd( -3.55436, -40.4067, 5.41536, 1.81 ) }
    dend_51 { pt3dadd( -4.06581, -42.0041, 7.06755, 1.81 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -112.913, -105.966, -21.0863, 0.23 ) }
    dend_49 { pt3dadd( -114.517, -107.614, -22.2137, 0.23 ) }
    dend_49 { pt3dadd( -116.13, -109.491, -23.2966, 0.23 ) }
    dend_49 { pt3dadd( -116.786, -110.315, -23.7147, 0.91 ) }
    dend_49 { pt3dadd( -117.547, -111.317, -24.1609, 0.45 ) }
    dend_49 { pt3dadd( -118.202, -112.181, -24.509, 0.91 ) }
    dend_49 { pt3dadd( -119.12, -113.399, -24.9471, 0.23 ) }
    dend_49 { pt3dadd( -119.858, -114.473, -25.228, 0.23 ) }
    dend_49 { pt3dadd( -120.798, -115.86, -25.5455, 0.91 ) }
    dend_49 { pt3dadd( -121.749, -117.178, -25.8578, 0.91 ) }
    dend_49 { pt3dadd( -122.522, -118.197, -26.0947, 1.59 ) }
    dend_49 { pt3dadd( -123.702, -119.751, -26.4559, 0.23 ) }
    dend_49 { pt3dadd( -124.565, -120.892, -26.7348, 0.68 ) }
    dend_49 { pt3dadd( -125.693, -122.465, -27.1392, 0.23 ) }
    dend_49 { pt3dadd( -126.488, -123.654, -27.4714, 0.91 ) }
    dend_49 { pt3dadd( -127.236, -124.823, -27.8511, 0.91 ) }
    dend_49 { pt3dadd( -128.229, -126.391, -28.4125, 0.23 ) }
    dend_49 { pt3dadd( -129.058, -127.612, -28.8836, 0.91 ) }
    dend_49 { pt3dadd( -129.981, -128.797, -29.3634, 0.23 ) }
    dend_49 { pt3dadd( -131.256, -130.134, -29.9127, 0.45 ) }
    dend_49 { pt3dadd( -132.604, -131.26, -30.4199, 0.45 ) }
    dend_49 { pt3dadd( -133.245, -131.711, -30.6397, 1.13 ) }
    dend_49 { pt3dadd( -134.778, -132.715, -31.1107, 1.81 ) }
    dend_49 { pt3dadd( -136.084, -133.641, -31.525, 1.36 ) }
    dend_49 { pt3dadd( -137.815, -135.003, -32.1391, 0.68 ) }
    dend_49 { pt3dadd( -138.68, -135.801, -32.4773, 1.13 ) }
    dend_49 { pt3dadd( -140.204, -137.671, -33.2932, 0.68 ) }
    dend_49 { pt3dadd( -141.103, -138.968, -33.8644, 1.13 ) }
    dend_49 { pt3dadd( -142.409, -141.354, -34.9315, 0.45 ) }
    dend_49 { pt3dadd( -142.989, -142.741, -35.5562, 0.45 ) }
    dend_49 { pt3dadd( -143.195, -143.433, -35.8773, 1.13 ) }
    dend_49 { pt3dadd( -143.669, -145.641, -36.9281, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 39/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -112.913, -105.966, -21.0863, 0.23 ) }
    dend_48 { pt3dadd( -115.312, -105.768, -21.4753, 0.23 ) }
    dend_48 { pt3dadd( -116.765, -105.684, -21.7287, 0.91 ) }
    dend_48 { pt3dadd( -119.029, -105.62, -22.1415, 0.23 ) }
    dend_48 { pt3dadd( -121.586, -105.602, -22.5702, 0.91 ) }
    dend_48 { pt3dadd( -123.596, -105.548, -22.9046, 0.23 ) }
    dend_48 { pt3dadd( -125.075, -105.495, -23.154, 0.23 ) }
    dend_48 { pt3dadd( -129.354, -105.414, -23.9198, 0.68 ) }
    dend_48 { pt3dadd( -132.794, -105.412, -24.5392, 0.23 ) }
    dend_48 { pt3dadd( -135.188, -105.509, -24.9674, 0.23 ) }
    dend_48 { pt3dadd( -137.635, -105.719, -25.4025, 0.45 ) }
    dend_48 { pt3dadd( -140.755, -105.967, -25.9629, 0.23 ) }
    dend_48 { pt3dadd( -142.214, -106.114, -26.2261, 0.23 ) }
    dend_48 { pt3dadd( -143.608, -106.352, -26.4807, 0.23 ) }
    dend_48 { pt3dadd( -146.413, -107.012, -27.0261, 0.23 ) }
    dend_48 { pt3dadd( -148.583, -107.777, -27.5087, 0.23 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 55/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.34017, -49.8785, -23.2373, 1.13 ) }
    dend_44 { pt3dadd( -8.39152, -51.1359, -25.2054, 1.13 ) }
    dend_44 { pt3dadd( -7.8263, -52.3073, -26.3616, 1.13 ) }
    dend_44 { pt3dadd( -7.3206, -53.6312, -27.0918, 0.45 ) }
    dend_44 { pt3dadd( -6.91508, -54.6695, -27.41, 0.68 ) }
    dend_44 { pt3dadd( -6.54218, -55.6272, -27.6024, 0.68 ) }
    dend_44 { pt3dadd( -5.66715, -58.0513, -27.9294, 1.13 ) }
    dend_44 { pt3dadd( -5.00626, -59.9334, -28.0103, 1.13 ) }
    dend_44 { pt3dadd( -4.16189, -62.4113, -28.0735, 0.91 ) }
    dend_44 { pt3dadd( -3.52951, -64.3336, -28.1474, 0.91 ) }
    dend_44 { pt3dadd( -2.63015, -66.9893, -28.2926, 1.59 ) }
    dend_44 { pt3dadd( -1.55859, -69.9148, -28.6398, 0.91 ) }
    dend_44 { pt3dadd( -0.566152, -72.3313, -29.125, 0.91 ) }
    dend_44 { pt3dadd( 0.348599, -74.2925, -29.7316, 0.91 ) }
    dend_44 { pt3dadd( 2.00217, -77.6088, -31.2403, 0.91 ) }
    dend_44 { pt3dadd( 2.92538, -79.3429, -32.3363, 1.36 ) }
    dend_44 { pt3dadd( 4.66664, -82.1743, -34.6782, 0.68 ) }
    dend_44 { pt3dadd( 5.59422, -83.4041, -36.0198, 0.68 ) }
    dend_44 { pt3dadd( 6.60886, -84.4825, -37.5731, 0.68 ) }
    dend_44 { pt3dadd( 7.80475, -85.457, -39.5237, 1.36 ) }
    dend_44 { pt3dadd( 9.07856, -86.2763, -41.7984, 0.68 ) }
    dend_44 { pt3dadd( 9.77631, -86.6994, -43.0769, 0.68 ) }
    dend_44 { pt3dadd( 10.7447, -87.4211, -44.9177, 0.68 ) }
    dend_44 { pt3dadd( 11.4764, -88.3713, -46.4716, 0.68 ) }
    dend_44 { pt3dadd( 12.2737, -89.7783, -48.0681, 0.68 ) }
    dend_44 { pt3dadd( 12.7737, -90.8125, -48.9903, 0.68 ) }
    dend_44 { pt3dadd( 13.3767, -92.5134, -50.1872, 0.68 ) }
    dend_44 { pt3dadd( 14.0781, -94.7957, -51.6362, 0.68 ) }
    dend_44 { pt3dadd( 15.0566, -97.9735, -53.3714, 0.68 ) }
    dend_44 { pt3dadd( 16.126, -101.149, -54.9171, 0.68 ) }
    dend_44 { pt3dadd( 17.3095, -103.989, -56.1689, 0.68 ) }
    dend_44 { pt3dadd( 19.0292, -107.619, -57.6673, 0.45 ) }
    dend_44 { pt3dadd( 20.6415, -110.716, -58.859, 0.45 ) }
    dend_44 { pt3dadd( 22.12, -113.352, -59.715, 1.13 ) }
    dend_44 { pt3dadd( 23.5549, -115.823, -60.3307, 0.45 ) }
    dend_44 { pt3dadd( 25.9621, -120.099, -60.9883, 0.45 ) }
    dend_44 { pt3dadd( 26.7816, -121.54, -61.0991, 1.13 ) }
    dend_44 { pt3dadd( 28.1516, -123.941, -61.1394, 1.13 ) }
    dend_44 { pt3dadd( 29.6659, -126.8, -60.978, 0.23 ) }
    dend_44 { pt3dadd( 30.7985, -129.088, -60.7609, 0.91 ) }
    dend_44 { pt3dadd( 31.7068, -131.039, -60.4628, 0.91 ) }
    dend_44 { pt3dadd( 33.6749, -135.41, -59.7046, 0.23 ) }
    dend_44 { pt3dadd( 35.2237, -138.736, -59.1018, 0.23 ) }
    dend_44 { pt3dadd( 36.558, -141.555, -58.5508, 0.45 ) }
    dend_44 { pt3dadd( 37.0923, -142.61, -58.3559, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( 38.3981, -145.102, -57.9146, 0.23 ) }
    dend_44 { pt3dadd( 40.1622, -148.53, -57.3023, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 2/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -9.34017, -49.8785, -23.2373, 0.91 ) }
    dend_41 { pt3dadd( -10.3363, -50.5638, -24.1099, 0.91 ) }
    dend_41 { pt3dadd( -11.0931, -51.1604, -24.8187, 1.13 ) }
    dend_41 { pt3dadd( -12.0212, -51.9412, -25.6844, 1.13 ) }
    dend_41 { pt3dadd( -13.1048, -52.8382, -26.6722, 1.13 ) }
    dend_41 { pt3dadd( -13.4124, -53.0868, -26.9512, 1.13 ) }
    dend_41 { pt3dadd( -14.0558, -53.5789, -27.5322, 1.13 ) }
    dend_41 { pt3dadd( -14.9924, -54.269, -28.4, 1.13 ) }
    dend_41 { pt3dadd( -15.5373, -54.634, -28.9109, 1.59 ) }
    dend_41 { pt3dadd( -16.8248, -55.428, -30.1079, 0.68 ) }
    dend_41 { pt3dadd( -17.7179, -55.9623, -30.9412, 0.68 ) }
    dend_41 { pt3dadd( -18.3537, -56.3328, -31.5699, 0.68 ) }
    dend_41 { pt3dadd( -18.8165, -56.5827, -32.0435, 0.91 ) }
    dend_41 { pt3dadd( -19.2433, -56.7975, -32.4805, 0.91 ) }
    dend_41 { pt3dadd( -19.6556, -57.0106, -32.9441, 0.91 ) }
    dend_41 { pt3dadd( -20.4308, -57.4406, -33.9145, 0.91 ) }
    dend_41 { pt3dadd( -20.8824, -57.7442, -34.5344, 0.91 ) }
    dend_41 { pt3dadd( -21.4349, -58.2004, -35.3427, 1.13 ) }
    dend_41 { pt3dadd( -22.4607, -59.1659, -36.9136, 0.91 ) }
    dend_41 { pt3dadd( -23.2687, -59.9745, -38.1843, 0.91 ) }
    dend_41 { pt3dadd( -23.971, -60.6569, -39.3034, 0.91 ) }
    dend_41 { pt3dadd( -24.5916, -61.2681, -40.3243, 0.68 ) }
    dend_41 { pt3dadd( -25.7121, -62.4284, -42.1957, 0.45 ) }
    dend_41 { pt3dadd( -26.2457, -63.0234, -43.1174, 0.45 ) }
    dend_41 { pt3dadd( -27.0958, -64.0127, -44.6081, 1.13 ) }
    dend_41 { pt3dadd( -28.0558, -65.1026, -46.233, 0.23 ) }
    dend_41 { pt3dadd( -28.4891, -65.5543, -46.9008, 0.23 ) }
    dend_41 { pt3dadd( -29.033, -66.0718, -47.6796, 0.45 ) }
    dend_41 { pt3dadd( -29.5364, -66.5355, -48.3885, 0.45 ) }
    dend_41 { pt3dadd( -30.2894, -67.2232, -49.4105, 0.45 ) }
    dend_41 { pt3dadd( -30.675, -67.5946, -49.9113, 0.45 ) }
    dend_41 { pt3dadd( -31.516, -68.4733, -50.9168, 0.45 ) }
    dend_41 { pt3dadd( -32.4866, -69.4246, -52.0224, 0.91 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 127.796, -64.7216, -37.2648, 0.23 ) }
    dend_38 { pt3dadd( 129.585, -65.6005, -38.6456, 0.23 ) }
    dend_38 { pt3dadd( 131.931, -67.0226, -40.577, 0.23 ) }
    dend_38 { pt3dadd( 133.379, -68.0611, -41.8411, 0.91 ) }
    dend_38 { pt3dadd( 135.693, -70.1009, -43.7982, 0.23 ) }
    dend_38 { pt3dadd( 136.916, -71.3388, -44.804, 0.23 ) }
    dend_38 { pt3dadd( 137.651, -72.2157, -45.425, 0.91 ) }
    dend_38 { pt3dadd( 138.939, -74.2072, -46.468, 0.23 ) }
    dend_38 { pt3dadd( 139.687, -75.613, -47.0245, 0.91 ) }
    dend_38 { pt3dadd( 141.285, -78.5945, -47.9524, 0.23 ) }
    dend_38 { pt3dadd( 141.937, -79.7901, -48.248, 0.68 ) }
    dend_38 { pt3dadd( 143.816, -82.8469, -48.8935, 0.23 ) }
    dend_38 { pt3dadd( 145.383, -85.1558, -49.3649, 0.23 ) }
    dend_38 { pt3dadd( 146.532, -86.6336, -49.6538, 0.68 ) }
    dend_38 { pt3dadd( 149.156, -89.634, -50.2959, 0.23 ) }
    dend_38 { pt3dadd( 150.531, -91.0188, -50.6627, 0.23 ) }
    dend_38 { pt3dadd( 151.98, -92.3567, -51.0536, 1.13 ) }
    dend_38 { pt3dadd( 154.543, -94.4165, -51.7971, 0.23 ) }
    dend_38 { pt3dadd( 156.835, -96.0985, -52.5406, 0.23 ) }
    dend_38 { pt3dadd( 157.755, -96.7202, -52.8879, 0.91 ) }
    dend_38 { pt3dadd( 160.886, -98.7689, -54.134, 0.23 ) }
    dend_38 { pt3dadd( 164.011, -100.706, -55.416, 0.23 ) }
    dend_38 { pt3dadd( 168.038, -103.126, -57.1254, 0.23 ) }
    dend_38 { pt3dadd( 169.412, -103.871, -57.7083, 0.68 ) }
    dend_38 { pt3dadd( 172.611, -105.565, -59.1294, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 60/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 127.796, -64.7216, -37.2648, 0.23 ) }
    dend_37 { pt3dadd( 130.732, -63.8827, -37.9305, 0.23 ) }
    dend_37 { pt3dadd( 132.603, -63.3208, -38.3372, 0.23 ) }
    dend_37 { pt3dadd( 135.015, -62.5781, -38.8291, 0.91 ) }
    dend_37 { pt3dadd( 136.593, -62.0946, -39.107, 0.23 ) }
    dend_37 { pt3dadd( 139.536, -61.1895, -39.5156, 0.68 ) }
    dend_37 { pt3dadd( 142.782, -60.1294, -39.8875, 0.23 ) }
    dend_37 { pt3dadd( 144.181, -59.6265, -40.027, 0.23 ) }
    dend_37 { pt3dadd( 146.181, -58.8066, -40.1992, 0.23 ) }
    dend_37 { pt3dadd( 147.355, -58.2439, -40.2559, 0.23 ) }
    dend_37 { pt3dadd( 150.034, -56.6138, -40.3348, 0.91 ) }
    dend_37 { pt3dadd( 152.585, -54.6688, -40.3524, 0.23 ) }
    dend_37 { pt3dadd( 153.954, -53.4507, -40.3577, 0.91 ) }
    dend_37 { pt3dadd( 155.645, -51.8071, -40.441, 0.23 ) }
    dend_37 { pt3dadd( 157.419, -50.0283, -40.6124, 0.23 ) }
    dend_37 { pt3dadd( 160.161, -47.2843, -41.0062, 0.23 ) }
    dend_37 { pt3dadd( 161.147, -46.3487, -41.2015, 0.91 ) }
    dend_37 { pt3dadd( 162.211, -45.4814, -41.4416, 1.36 ) }
    dend_37 { pt3dadd( 164.428, -44.0155, -41.9716, 0.23 ) }
    dend_37 { pt3dadd( 166.934, -42.7695, -42.6072, 0.23 ) }
    dend_37 { pt3dadd( 167.895, -42.4114, -42.8739, 0.91 ) }
    dend_37 { pt3dadd( 169.731, -41.8373, -43.448, 0.23 ) }
    dend_37 { pt3dadd( 171.505, -41.2253, -44.0715, 0.23 ) }
    dend_37 { pt3dadd( 173.376, -40.3496, -44.7779, 0.91 ) }
    dend_37 { pt3dadd( 174.824, -39.4561, -45.2887, 0.23 ) }
    dend_37 { pt3dadd( 175.973, -38.6388, -45.7009, 0.68 ) }
    dend_37 { pt3dadd( 177.657, -37.2898, -46.3094, 0.23 ) }
    dend_37 { pt3dadd( 178.377, -36.624, -46.5621, 0.68 ) }
    dend_37 { pt3dadd( 181.34, -33.5922, -47.6657, 0.23 ) }
    dend_37 { pt3dadd( 183.018, -31.7292, -48.279, 0.91 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.00892, 51.7778, -32.3443, 0.23 ) }
    dend_32 { pt3dadd( -0.419464, 53.4942, -33.8828, 0.23 ) }
    dend_32 { pt3dadd( 0.187858, 55.2378, -35.5386, 0.23 ) }
    dend_32 { pt3dadd( 0.651627, 56.483, -36.7375, 0.91 ) }
    dend_32 { pt3dadd( 1.23517, 57.9827, -38.1289, 0.23 ) }
    dend_32 { pt3dadd( 2.14493, 60.354, -40.179, 0.23 ) }
    dend_32 { pt3dadd( 2.33359, 60.8548, -40.5887, 1.13 ) }
    dend_32 { pt3dadd( 3.14129, 63.0869, -42.2891, 0.23 ) }
    dend_32 { pt3dadd( 3.55252, 64.3043, -43.1889, 0.23 ) }
    dend_32 { pt3dadd( 3.89541, 65.4488, -44.009, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_32 { pt3dadd( 4.20827, 66.6916, -44.9216, 0.91 ) }
    dend_32 { pt3dadd( 4.71968, 69.5936, -47.1044, 0.23 ) }
    dend_32 { pt3dadd( 4.78629, 70.7856, -48.094, 1.36 ) }
    dend_32 { pt3dadd( 4.56578, 72.7955, -49.9431, 0.23 ) }
    dend_32 { pt3dadd( 4.30141, 74.2847, -51.4054, 0.23 ) }
    dend_32 { pt3dadd( 3.8179, 76.191, -53.4559, 0.23 ) }
    dend_32 { pt3dadd( 3.32244, 77.5818, -55.1137, 0.68 ) }
    dend_32 { pt3dadd( 2.39365, 79.2649, -57.3255, 0.23 ) }
    dend_32 { pt3dadd( 1.31233, 80.776, -59.4962, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 9/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.00892, 51.7778, -32.3443, 0.23 ) }
    dend_31 { pt3dadd( -2.46501, 53.1018, -33.186, 0.23 ) }
    dend_31 { pt3dadd( -3.27001, 53.8338, -33.6513, 0.68 ) }
    dend_31 { pt3dadd( -4.30726, 54.777, -34.2509, 0.68 ) }
    dend_31 { pt3dadd( -4.94744, 55.3592, -34.621, 0.23 ) }
    dend_31 { pt3dadd( -6.33193, 56.6181, -35.4213, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 6.76541, 54.2695, -9.86212, 0.23 ) }
    dend_29 { pt3dadd( 6.64609, 56.8984, -10.3138, 0.23 ) }
    dend_29 { pt3dadd( 6.57999, 58.5827, -10.6486, 0.23 ) }
    dend_29 { pt3dadd( 6.50156, 60.8761, -11.1058, 0.91 ) }
    dend_29 { pt3dadd( 6.3817, 63.6676, -11.6364, 0.23 ) }
    dend_29 { pt3dadd( 6.31486, 65.5487, -11.9871, 0.23 ) }
    dend_29 { pt3dadd( 6.22046, 67.9233, -12.4064, 0.45 ) }
    dend_29 { pt3dadd( 6.1179, 69.7463, -12.7431, 0.23 ) }
    dend_29 { pt3dadd( 6.02725, 71.6797, -13.0807, 0.91 ) }
    dend_29 { pt3dadd( 5.94559, 73.3737, -13.3633, 1.13 ) }
    dend_29 { pt3dadd( 5.75467, 76.3918, -13.7854, 0.23 ) }
    dend_29 { pt3dadd( 5.63725, 78.417, -14.0123, 0.68 ) }
    dend_29 { pt3dadd( 5.5044, 81.1298, -14.3217, 0.23 ) }
    dend_29 { pt3dadd( 5.36714, 83.1308, -14.5208, 0.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.76541, 54.2695, -9.86212, 1.13 ) }
    dend_28 { pt3dadd( 7.18862, 55.3047, -10.7191, 1.13 ) }
    dend_28 { pt3dadd( 7.58844, 56.4809, -11.6087, 0.23 ) }
    dend_28 { pt3dadd( 7.83499, 57.5194, -12.2714, 0.68 ) }
    dend_28 { pt3dadd( 7.99882, 58.6854, -12.9843, 1.36 ) }
    dend_28 { pt3dadd( 8.1685, 60.5729, -14.066, 1.36 ) }
    dend_28 { pt3dadd( 8.2531, 61.6993, -14.7179, 0.23 ) }
    dend_28 { pt3dadd( 8.28778, 62.9868, -15.4293, 0.91 ) }
    dend_28 { pt3dadd( 8.31396, 64.5528, -16.3046, 1.36 ) }
    dend_28 { pt3dadd( 8.43344, 66.2927, -17.4153, 0.23 ) }
    dend_28 { pt3dadd( 8.54741, 67.0963, -18.0463, 0.68 ) }
    dend_28 { pt3dadd( 8.76152, 68.1236, -19.0143, 0.23 ) }
    dend_28 { pt3dadd( 8.91171, 68.6918, -19.617, 0.23 ) }
    dend_28 { pt3dadd( 9.36687, 69.9112, -21.0332, 0.91 ) }
    dend_28 { pt3dadd( 9.86889, 71.033, -22.3402, 1.36 ) }
    dend_28 { pt3dadd( 10.4405, 72.2885, -23.634, 0.23 ) }
    dend_28 { pt3dadd( 10.8421, 73.3222, -24.5383, 0.23 ) }
    dend_28 { pt3dadd( 11.1039, 74.1859, -25.0866, 1.13 ) }
    dend_28 { pt3dadd( 11.1995, 74.587, -25.2744, 1.13 ) }
    dend_28 { pt3dadd( 11.53, 76.1629, -25.7576, 0.23 ) }
    dend_28 { pt3dadd( 11.8395, 77.7977, -26.0912, 1.59 ) }
    dend_28 { pt3dadd( 12.0917, 79.0268, -26.2665, 1.59 ) }
    dend_28 { pt3dadd( 12.4987, 80.9204, -26.5481, 0.45 ) }
    dend_28 { pt3dadd( 12.6359, 81.5263, -26.668, 0.45 ) }
    dend_28 { pt3dadd( 13.0877, 83.2888, -27.0825, 0.45 ) }
    dend_28 { pt3dadd( 13.3377, 84.0835, -27.3115, 0.45 ) }
    dend_28 { pt3dadd( 13.8431, 85.3134, -27.7992, 0.45 ) }
    dend_28 { pt3dadd( 14.597, 86.7181, -28.5849, 1.13 ) }
    dend_28 { pt3dadd( 15.574, 88.0508, -29.592, 0.23 ) }
    dend_28 { pt3dadd( 16.1114, 88.5939, -30.1524, 0.23 ) }
    dend_28 { pt3dadd( 16.8033, 89.0642, -30.8216, 0.91 ) }
    dend_28 { pt3dadd( 18.4869, 89.8806, -32.3822, 0.23 ) }
    dend_28 { pt3dadd( 19.268, 90.147, -33.1024, 1.13 ) }
    dend_28 { pt3dadd( 20.3497, 90.3754, -34.0204, 0.23 ) }
    dend_28 { pt3dadd( 22.1293, 90.6622, -35.4452, 0.68 ) }
    dend_28 { pt3dadd( 23.7729, 90.9247, -36.6872, 0.23 ) }
    dend_28 { pt3dadd( 24.5941, 91.0787, -37.2847, 0.68 ) }
    dend_28 { pt3dadd( 25.7534, 91.3381, -38.0971, 0.23 ) }
    dend_28 { pt3dadd( 27.3138, 91.7216, -39.1688, 0.23 ) }
    dend_28 { pt3dadd( 28.5996, 92.0857, -40.066, 0.68 ) }
    dend_28 { pt3dadd( 29.7053, 92.4446, -40.8651, 0.23 ) }
    dend_28 { pt3dadd( 30.9411, 92.981, -41.9253, 0.23 ) }
    dend_28 { pt3dadd( 32.0693, 93.5453, -42.9434, 0.23 ) }
    dend_28 { pt3dadd( 32.8441, 93.992, -43.6541, 0.91 ) }
    dend_28 { pt3dadd( 34.0352, 94.7709, -44.798, 0.23 ) }
    dend_28 { pt3dadd( 35.2474, 95.6293, -46.0052, 0.45 ) }
    dend_28 { pt3dadd( 37.2471, 97.1143, -48.0539, 0.23 ) }
    dend_28 { pt3dadd( 37.9832, 97.6917, -48.7983, 0.23 ) }
    dend_28 { pt3dadd( 39.0564, 98.5927, -49.9001, 0.23 ) }
    dend_28 { pt3dadd( 39.8504, 99.3064, -50.7381, 0.23 ) }
    dend_28 { pt3dadd( 41.2854, 100.641, -52.1564, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.25521, 15.872, 2.05091, 1.13 ) }
    dend_23 { pt3dadd( -2.44913, 19.3924, 1.81924, 1.13 ) }
    dend_23 { pt3dadd( -2.68856, 22.8252, 1.54484, 1.13 ) }
    dend_23 { pt3dadd( -2.88342, 25.8394, 1.29176, 0.91 ) }
    dend_23 { pt3dadd( -3.1126, 29.6243, 0.987619, 0.91 ) }
    dend_23 { pt3dadd( -3.26041, 32.1964, 0.790869, 0.91 ) }
    dend_23 { pt3dadd( -3.36738, 34.1755, 0.685587, 0.91 ) }
    dend_23 { pt3dadd( -3.45884, 36.6257, 0.6259, 1.13 ) }
    dend_23 { pt3dadd( -3.5339, 40.4375, 0.647983, 0.45 ) }
    dend_23 { pt3dadd( -3.57616, 43.8756, 0.732305, 0.45 ) }
    dend_23 { pt3dadd( -3.57472, 46.5338, 0.829405, 1.13 ) }
    dend_23 { pt3dadd( -3.5309, 49.8397, 0.969846, 0.91 ) }
    dend_23 { pt3dadd( -3.43741, 52.9401, 1.08623, 0.91 ) }
    dend_23 { pt3dadd( -3.32081, 55.2837, 1.12341, 0.45 ) }
    dend_23 { pt3dadd( -3.14409, 58.4701, 1.0711, 0.68 ) }
    dend_23 { pt3dadd( -3.00535, 60.8993, 0.927843, 0.23 ) }
    dend_23 { pt3dadd( -2.92564, 62.2944, 0.75077, 0.91 ) }
    dend_23 { pt3dadd( -2.81993, 64.5072, 0.305741, 0.23 ) }
    dend_23 { pt3dadd( -2.78219, 66.2664, -0.105962, 0.23 ) }
    dend_23 { pt3dadd( -2.75043, 68.5001, -0.63601, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -2.69447, 70.7905, -1.13799, 0.23 ) }
    dend_23 { pt3dadd( -2.67214, 73.2011, -1.6257, 0.91 ) }
    dend_23 { pt3dadd( -2.68776, 74.356, -1.84827, 1.13 ) }
    dend_23 { pt3dadd( -2.72069, 77.7425, -2.50022, 0.23 ) }
    dend_23 { pt3dadd( -2.72884, 79.6847, -2.82467, 0.23 ) }
    dend_23 { pt3dadd( -2.72563, 82.0127, -3.19982, 1.13 ) }
    dend_23 { pt3dadd( -2.70848, 83.7647, -3.44798, 1.13 ) }
    dend_23 { pt3dadd( -2.67742, 85.2013, -3.61878, 1.13 ) }
    dend_23 { pt3dadd( -2.51192, 89.3244, -4.11755, 0.23 ) }
    dend_23 { pt3dadd( -2.3301, 92.3212, -4.52755, 1.13 ) }
    dend_23 { pt3dadd( -2.22721, 93.9257, -4.75683, 1.36 ) }
    dend_23 { pt3dadd( -2.09909, 95.467, -4.95857, 0.45 ) }
    dend_23 { pt3dadd( -1.85817, 97.8259, -5.23834, 1.13 ) }
    dend_23 { pt3dadd( -1.53202, 100.554, -5.49992, 0.23 ) }
    dend_23 { pt3dadd( -1.32172, 102.471, -5.65676, 0.23 ) }
    dend_23 { pt3dadd( -1.1502, 104.016, -5.76694, 0.23 ) }
    dend_23 { pt3dadd( -0.875359, 106.708, -5.85985, 0.45 ) }
    dend_23 { pt3dadd( -0.769394, 108.264, -5.86664, 0.91 ) }
    dend_23 { pt3dadd( -0.675539, 110.36, -5.79786, 0.23 ) }
    dend_23 { pt3dadd( -0.58303, 112.712, -5.65278, 1.59 ) }
    dend_23 { pt3dadd( -0.486757, 115.372, -5.5264, 0.23 ) }
    dend_23 { pt3dadd( -0.396669, 117.811, -5.4639, 0.91 ) }
    dend_23 { pt3dadd( -0.271694, 121.647, -5.44018, 0.23 ) }
    dend_23 { pt3dadd( -0.161249, 123.939, -5.42862, 0.23 ) }
    dend_23 { pt3dadd( 0.0715676, 127.37, -5.45751, 1.36 ) }
    dend_23 { pt3dadd( 0.391009, 130.634, -5.49308, 0.23 ) }
    dend_23 { pt3dadd( 0.689098, 133.279, -5.55636, 1.36 ) }
    dend_23 { pt3dadd( 0.788721, 134.027, -5.58777, 1.36 ) }
    dend_23 { pt3dadd( 1.47944, 138.313, -5.77134, 0.23 ) }
    dend_23 { pt3dadd( 1.91332, 140.827, -5.87857, 0.23 ) }
    dend_23 { pt3dadd( 2.21029, 142.346, -5.90483, 1.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.25521, 15.872, 2.05091, 0.68 ) }
    dend_20 { pt3dadd( -3.62959, 14.399, 1.86328, 0.68 ) }
    dend_20 { pt3dadd( -4.69667, 13.2278, 1.70502, 0.68 ) }
    dend_20 { pt3dadd( -5.69417, 12.0534, 1.5386, 0.68 ) }
    dend_20 { pt3dadd( -6.41567, 11.1506, 1.40655, 0.68 ) }
    dend_20 { pt3dadd( -8.24063, 8.82625, 1.03748, 0.68 ) }
    dend_20 { pt3dadd( -9.45296, 7.2513, 0.772061, 0.68 ) }
    dend_20 { pt3dadd( -10.5486, 5.68932, 0.494424, 0.91 ) }
    dend_20 { pt3dadd( -11.7687, 3.82684, 0.127065, 1.13 ) }
    dend_20 { pt3dadd( -12.6405, 2.49168, -0.147698, 1.13 ) }
    dend_20 { pt3dadd( -13.6288, 0.99367, -0.459129, 1.13 ) }
    dend_20 { pt3dadd( -14.5412, -0.464437, -0.747431, 1.13 ) }
    dend_20 { pt3dadd( -15.4805, -2.08282, -1.05927, 1.13 ) }
    dend_20 { pt3dadd( -16.0884, -3.1623, -1.29224, 1.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 39.6882, 44.5936, 38.2134, 0.23 ) }
    dend_16 { pt3dadd( 44.458, 49.1014, 45.7688, 0.23 ) }
    dend_16 { pt3dadd( 49.4187, 53.8848, 53.043, 0.23 ) }
    dend_16 { pt3dadd( 52.86, 58.7946, 61.0643, 0.23 ) }
    dend_16 { pt3dadd( 57.6899, 63.1315, 68.6736, 0.23 ) }
    dend_16 { pt3dadd( 62.7528, 65.4518, 76.9216, 0.23 ) }
    dend_16 { pt3dadd( 68.663, 68.6324, 84.2984, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 52/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.6882, 44.5936, 38.2134, 0.23 ) }
    dend_13 { pt3dadd( 48.4675, 49.813, 43.6222, 0.23 ) }
    dend_13 { pt3dadd( 58.1906, 53.8942, 48.2784, 0.23 ) }
    dend_13 { pt3dadd( 67.4099, 60.0368, 51.8121, 0.23 ) }
    dend_13 { pt3dadd( 75.3668, 68.6404, 53.1634, 0.23 ) }
    dend_13 { pt3dadd( 82.4399, 77.4944, 56.3432, 0.23 ) }
    dend_13 { pt3dadd( 89.3769, 86.6264, 59.0987, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 73.9566, 83.2616, -9.76109, 0.23 ) }
    dend_7 { pt3dadd( 76.1034, 84.7246, -10.2468, 0.23 ) }
    dend_7 { pt3dadd( 77.2285, 85.4553, -10.4718, 0.23 ) }
    dend_7 { pt3dadd( 79.0099, 86.5475, -10.7177, 0.68 ) }
    dend_7 { pt3dadd( 80.2213, 87.2628, -10.8093, 0.23 ) }
    dend_7 { pt3dadd( 82.632, 88.6241, -10.9214, 0.91 ) }
    dend_7 { pt3dadd( 83.9273, 89.2944, -10.9669, 0.91 ) }
    dend_7 { pt3dadd( 86.3014, 90.3367, -10.9983, 0.23 ) }
    dend_7 { pt3dadd( 88.0399, 91.0123, -10.9772, 0.23 ) }
    dend_7 { pt3dadd( 89.8078, 91.6147, -10.8869, 0.91 ) }
    dend_7 { pt3dadd( 90.7084, 91.9016, -10.8265, 0.91 ) }
    dend_7 { pt3dadd( 93.4091, 92.7783, -10.5618, 0.23 ) }
    dend_7 { pt3dadd( 95.2527, 93.3838, -10.3518, 0.91 ) }
    dend_7 { pt3dadd( 97.0765, 93.9878, -10.1178, 0.91 ) }
    dend_7 { pt3dadd( 98.8648, 94.6222, -9.88863, 0.23 ) }
    dend_7 { pt3dadd( 100.276, 95.1409, -9.68681, 0.91 ) }
    dend_7 { pt3dadd( 102.85, 96.117, -9.21039, 0.23 ) }
    dend_7 { pt3dadd( 103.778, 96.4412, -9.02411, 1.36 ) }
    dend_7 { pt3dadd( 104.62, 96.7054, -8.86775, 1.36 ) }
    dend_7 { pt3dadd( 106.323, 97.1523, -8.59955, 1.36 ) }
    dend_7 { pt3dadd( 108.244, 97.5267, -8.35416, 0.23 ) }
    dend_7 { pt3dadd( 110.164, 97.7411, -8.19564, 1.59 ) }
    dend_7 { pt3dadd( 112.816, 97.8058, -8.08953, 0.23 ) }
    dend_7 { pt3dadd( 114.125, 97.7416, -8.06859, 0.91 ) }
    dend_7 { pt3dadd( 115.301, 97.6458, -8.06867, 0.91 ) }
    dend_7 { pt3dadd( 117.75, 97.3528, -8.09887, 0.23 ) }
    dend_7 { pt3dadd( 119.047, 97.1535, -8.13834, 0.23 ) }
    dend_7 { pt3dadd( 121.293, 96.7302, -8.24859, 0.23 ) }
    dend_7 { pt3dadd( 124.198, 96.083, -8.322, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 88/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 73.9566, 83.2616, -9.76109, 0.23 ) }
    dend_6 { pt3dadd( 75.3578, 86.9629, -8.87342, 0.23 ) }
    dend_6 { pt3dadd( 76.3488, 89.4723, -8.23587, 0.23 ) }
    dend_6 { pt3dadd( 77.144, 91.4534, -7.7254, 1.59 ) }
    dend_6 { pt3dadd( 78.8307, 95.4907, -6.71319, 0.23 ) }
    dend_6 { pt3dadd( 79.2975, 96.56, -6.45582, 1.36 ) }
    dend_6 { pt3dadd( 81.4105, 101.107, -5.43402, 0.23 ) }
    dend_6 { pt3dadd( 82.2237, 102.738, -5.08302, 0.68 ) }
    dend_6 { pt3dadd( 83.1096, 104.334, -4.77106, 0.91 ) }
    dend_6 { pt3dadd( 84.736, 107.143, -4.32202, 0.23 ) }
    dend_6 { pt3dadd( 86.0242, 109.31, -4.09051, 1.13 ) }
    dend_6 { pt3dadd( 88.2661, 112.983, -3.82004, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 89.0492, 114.2, -3.76942, 1.59 ) }
    dend_6 { pt3dadd( 90.7014, 116.536, -3.69635, 0.23 ) }
    dend_6 { pt3dadd( 91.9784, 118.24, -3.69823, 0.23 ) }
    dend_6 { pt3dadd( 93.5297, 120.162, -3.6874, 1.13 ) }
    dend_6 { pt3dadd( 96.2615, 123.312, -3.58084, 0.23 ) }
    dend_6 { pt3dadd( 97.7988, 125.003, -3.46313, 1.13 ) }
    dend_6 { pt3dadd( 100.515, 127.802, -3.06211, 0.23 ) }
    dend_6 { pt3dadd( 102.083, 129.267, -2.75803, 1.36 ) }
    dend_6 { pt3dadd( 104.554, 131.213, -2.18611, 0.23 ) }
    dend_6 { pt3dadd( 105.756, 131.975, -1.84502, 0.91 ) }
    dend_6 { pt3dadd( 106.676, 132.383, -1.50558, 0.91 ) }
    dend_6 { pt3dadd( 108.746, 133.087, -0.617261, 0.23 ) }
    dend_6 { pt3dadd( 109.69, 133.328, -0.18124, 0.23 ) }
    dend_6 { pt3dadd( 111.29, 133.714, 0.494452, 0.23 ) }
    dend_6 { pt3dadd( 113.508, 134.201, 1.27929, 0.91 ) }
    dend_6 { pt3dadd( 116.135, 134.773, 2.09483, 0.23 ) }
    dend_6 { pt3dadd( 117.511, 135.08, 2.48061, 1.13 ) }
    dend_6 { pt3dadd( 120.552, 135.971, 3.23098, 0.23 ) }
    dend_6 { pt3dadd( 122.092, 136.561, 3.66244, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 19/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -3.70007, -73.8844, 4.50519, 0.91 ) }
    dend_58 { pt3dadd( -3.94324, -76.0941, 5.28439, 0.91 ) }
    dend_58 { pt3dadd( -4.11625, -78.6124, 6.0026, 1.36 ) }
    dend_58 { pt3dadd( -4.17937, -80.5088, 6.43451, 1.36 ) }
    dend_58 { pt3dadd( -4.25186, -82.6869, 6.93056, 1.36 ) }
    dend_58 { pt3dadd( -4.32572, -84.9059, 7.43595, 1.13 ) }
    dend_58 { pt3dadd( -4.38798, -86.7764, 7.86196, 1.13 ) }
    dend_58 { pt3dadd( -4.47899, -89.9903, 8.42126, 1.13 ) }
    dend_58 { pt3dadd( -4.49725, -92.8711, 8.77235, 1.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 28/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -3.70007, -73.8844, 4.50519, 0.91 ) }
    dend_55 { pt3dadd( -4.55145, -76.0498, 3.45322, 0.91 ) }
    dend_55 { pt3dadd( -4.99091, -77.8992, 2.6529, 0.91 ) }
    dend_55 { pt3dadd( -5.24871, -79.4596, 1.99332, 1.59 ) }
    dend_55 { pt3dadd( -5.4234, -80.6796, 1.45379, 0.91 ) }
    dend_55 { pt3dadd( -5.65144, -82.239, 0.753836, 1.36 ) }
    dend_55 { pt3dadd( -5.96887, -84.1543, -0.098309, 1.36 ) }
    dend_55 { pt3dadd( -6.37344, -86.8812, -1.25466, 1.13 ) }
    dend_55 { pt3dadd( -6.62605, -88.4817, -1.89486, 1.13 ) }
    dend_55 { pt3dadd( -6.86482, -89.9103, -2.41852, 1.36 ) }
    dend_55 { pt3dadd( -7.37422, -92.7293, -3.35767, 0.91 ) }
    dend_55 { pt3dadd( -7.79694, -94.7237, -3.92386, 1.59 ) }
    dend_55 { pt3dadd( -8.10949, -96.0118, -4.22636, 1.59 ) }
    dend_55 { pt3dadd( -8.52681, -97.7465, -4.55966, 0.91 ) }
    dend_55 { pt3dadd( -8.82903, -99.1587, -4.77409, 1.36 ) }
    dend_55 { pt3dadd( -9.14976, -100.874, -4.98923, 1.36 ) }
    dend_55 { pt3dadd( -9.53682, -103.283, -5.32009, 1.13 ) }
    dend_55 { pt3dadd( -9.72567, -104.709, -5.57838, 0.91 ) }
    dend_55 { pt3dadd( -9.91424, -106.172, -5.92409, 1.36 ) }
    dend_55 { pt3dadd( -10.1594, -107.694, -6.35756, 1.36 ) }
    dend_55 { pt3dadd( -10.5585, -109.823, -7.00926, 0.91 ) }
    dend_55 { pt3dadd( -10.9078, -111.548, -7.58847, 1.36 ) }
    dend_55 { pt3dadd( -11.318, -113.47, -8.28697, 0.91 ) }
    dend_55 { pt3dadd( -11.6947, -115.071, -8.90677, 0.91 ) }
    dend_55 { pt3dadd( -12.1112, -116.704, -9.55361, 0.45 ) }
    dend_55 { pt3dadd( -12.5872, -118.55, -10.2871, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 54/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.06581, -42.0041, 7.06755, 1.13 ) }
    dend_53 { pt3dadd( -2.60586, -43.5859, 8.28559, 1.13 ) }
    dend_53 { pt3dadd( -0.962595, -45.7259, 9.92377, 1.13 ) }
    dend_53 { pt3dadd( 0.344964, -47.715, 11.266, 1.13 ) }
    dend_53 { pt3dadd( 0.920458, -48.7004, 11.8866, 1.36 ) }
    dend_53 { pt3dadd( 2.00135, -50.7765, 13.1503, 1.36 ) }
    dend_53 { pt3dadd( 3.10715, -53.1658, 14.6029, 0.91 ) }
    dend_53 { pt3dadd( 3.51285, -54.4415, 15.4002, 1.36 ) }
    dend_53 { pt3dadd( 3.84323, -56.763, 16.9262, 1.13 ) }
    dend_53 { pt3dadd( 3.79135, -58.3973, 18.0526, 1.13 ) }
    dend_53 { pt3dadd( 3.65986, -59.236, 18.6649, 1.13 ) }
    dend_53 { pt3dadd( 3.39802, -60.2797, 19.3946, 1.13 ) }
    dend_53 { pt3dadd( 2.96117, -61.7951, 20.3506, 1.13 ) }
    dend_53 { pt3dadd( 2.10072, -64.9211, 22.1273, 1.59 ) }
    dend_53 { pt3dadd( 1.52451, -67.597, 23.3045, 0.91 ) }
    dend_53 { pt3dadd( 1.35393, -69.0914, 23.739, 0.91 ) }
    dend_53 { pt3dadd( 1.31983, -71.3239, 24.1341, 0.45 ) }
    dend_53 { pt3dadd( 1.38238, -72.9276, 24.2556, 0.45 ) }
    dend_53 { pt3dadd( 1.56967, -76.1637, 24.2511, 0.45 ) }
    dend_53 { pt3dadd( 1.92319, -79.7789, 23.9871, 0.45 ) }
    dend_53 { pt3dadd( 2.22814, -81.7924, 23.7847, 0.45 ) }
    dend_53 { pt3dadd( 2.50418, -83.4181, 23.6043, 0.68 ) }
    dend_53 { pt3dadd( 2.94479, -86.014, 23.3503, 0.23 ) }
    dend_53 { pt3dadd( 3.25433, -88.2643, 23.1552, 0.23 ) }
    dend_53 { pt3dadd( 4.88023, -98.3777, 27.149, 0.23 ) }
    dend_53 { pt3dadd( 7.95442, -108.667, 29.5715, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 80/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.06581, -42.0041, 7.06755, 0.91 ) }
    dend_52 { pt3dadd( -4.69043, -42.8449, 7.59302, 0.91 ) }
    dend_52 { pt3dadd( -5.07415, -43.2759, 7.87456, 0.91 ) }
    dend_52 { pt3dadd( -5.64426, -43.7813, 8.2495, 0.91 ) }
    dend_52 { pt3dadd( -6.0702, -44.1103, 8.51493, 1.13 ) }
    dend_52 { pt3dadd( -6.8247, -44.642, 8.95677, 0.91 ) }
    dend_52 { pt3dadd( -8.01583, -45.4323, 9.60097, 0.91 ) }
    dend_52 { pt3dadd( -9.21641, -46.1667, 10.2135, 0.91 ) }
    dend_52 { pt3dadd( -10.5809, -46.9124, 10.8735, 0.45 ) }
    dend_52 { pt3dadd( -11.5238, -47.3918, 11.307, 1.13 ) }
    dend_52 { pt3dadd( -12.1346, -47.7084, 11.5689, 0.68 ) }
    dend_52 { pt3dadd( -13.0627, -48.2498, 11.9539, 0.45 ) }
    dend_52 { pt3dadd( -14.4318, -49.085, 12.5159, 0.45 ) }
    dend_52 { pt3dadd( -15.7148, -49.9362, 13.0446, 0.45 ) }
    dend_52 { pt3dadd( -16.1404, -50.2631, 13.2211, 0.45 ) }
    dend_52 { pt3dadd( -16.9536, -50.9557, 13.5711, 0.45 ) }
    dend_52 { pt3dadd( -17.9591, -51.9242, 14.0547, 0.45 ) }
    dend_52 { pt3dadd( -21.5652, -56.0878, 17.2243, 0.45 ) }
    dend_52 { pt3dadd( -24.561, -60.4325, 20.784, 0.45 ) }
    dend_52 { pt3dadd( -27.6746, -65.3639, 23.4342, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( -30.806, -70.6667, 25.2972, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 1/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -32.4866, -69.4246, -52.0224, 0.23 ) }
    dend_43 { pt3dadd( -33.7822, -72.5491, -52.9749, 0.23 ) }
    dend_43 { pt3dadd( -34.3979, -73.9192, -53.2912, 0.91 ) }
    dend_43 { pt3dadd( -35.9098, -76.9309, -53.75, 0.23 ) }
    dend_43 { pt3dadd( -36.889, -78.7185, -53.9513, 0.23 ) }
    dend_43 { pt3dadd( -37.376, -79.5178, -54.0235, 0.91 ) }
    dend_43 { pt3dadd( -38.7234, -81.5637, -54.1821, 0.23 ) }
    dend_43 { pt3dadd( -40.1379, -83.5123, -54.1526, 0.45 ) }
    dend_43 { pt3dadd( -41.8441, -85.8031, -53.91, 0.23 ) }
    dend_43 { pt3dadd( -42.767, -87.006, -53.6967, 0.23 ) }
    dend_43 { pt3dadd( -43.9677, -88.6052, -53.3802, 0.91 ) }
    dend_43 { pt3dadd( -44.4857, -89.3519, -53.2568, 0.91 ) }
    dend_43 { pt3dadd( -46.6395, -92.7717, -52.7847, 0.23 ) }
    dend_43 { pt3dadd( -47.934, -95.0458, -52.5468, 0.23 ) }
    dend_43 { pt3dadd( -48.8073, -96.71, -52.387, 0.23 ) }
    dend_43 { pt3dadd( -49.9376, -98.9984, -52.1326, 0.68 ) }
    dend_43 { pt3dadd( -51.0727, -101.445, -51.8115, 0.23 ) }
    dend_43 { pt3dadd( -52.033, -103.581, -51.4892, 0.23 ) }
    dend_43 { pt3dadd( -52.8573, -105.459, -51.2064, 0.68 ) }
    dend_43 { pt3dadd( -53.0653, -105.923, -51.1165, 0.23 ) }
    dend_43 { pt3dadd( -54.0195, -108.067, -50.546, 1.13 ) }
    dend_43 { pt3dadd( -54.5938, -109.339, -50.1356, 1.13 ) }
    dend_43 { pt3dadd( -55.3522, -111.162, -49.5081, 0.23 ) }
    dend_43 { pt3dadd( -55.8686, -112.735, -49.0442, 0.23 ) }
    dend_43 { pt3dadd( -56.3797, -114.433, -48.5655, 0.91 ) }
    dend_43 { pt3dadd( -56.804, -115.951, -48.1661, 0.23 ) }
    dend_43 { pt3dadd( -57.1532, -117.334, -47.8612, 0.91 ) }
    dend_43 { pt3dadd( -58.0288, -120.999, -47.1711, 0.23 ) }
    dend_43 { pt3dadd( -58.5511, -123.451, -46.7441, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 30/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -32.4866, -69.4246, -52.0224, 0.23 ) }
    dend_42 { pt3dadd( -33.2565, -69.7044, -53.0709, 0.23 ) }
    dend_42 { pt3dadd( -33.8704, -69.9271, -54.1321, 0.68 ) }
    dend_42 { pt3dadd( -34.5494, -70.1407, -55.3137, 0.23 ) }
    dend_42 { pt3dadd( -35.2941, -70.3034, -56.5817, 0.68 ) }
    dend_42 { pt3dadd( -35.9133, -70.3609, -57.5541, 0.68 ) }
    dend_42 { pt3dadd( -37.1209, -70.383, -59.2222, 0.23 ) }
    dend_42 { pt3dadd( -38.6386, -70.365, -61.1389, 0.23 ) }
    dend_42 { pt3dadd( -39.0952, -70.3608, -61.6347, 0.68 ) }
    dend_42 { pt3dadd( -40.5688, -70.3455, -63.034, 0.23 ) }
    dend_42 { pt3dadd( -42.0284, -70.3596, -64.2828, 0.91 ) }
    dend_42 { pt3dadd( -44.5564, -70.4966, -66.2487, 0.23 ) }
    dend_42 { pt3dadd( -46.3737, -70.7041, -67.488, 0.23 ) }
    dend_42 { pt3dadd( -49.59, -71.2931, -69.462, 0.23 ) }
    dend_42 { pt3dadd( -50.7243, -71.5656, -70.1191, 0.68 ) }
    dend_42 { pt3dadd( -52.8851, -72.2594, -71.2474, 0.23 ) }
    dend_42 { pt3dadd( -54.1209, -72.7773, -71.8213, 0.23 ) }
    dend_42 { pt3dadd( -55.2292, -73.325, -72.2373, 0.23 ) }
    dend_42 { pt3dadd( -56.9076, -74.2359, -72.7447, 0.23 ) }
    dend_42 { pt3dadd( -57.8148, -74.7353, -72.9576, 0.23 ) }
    dend_42 { pt3dadd( -59.2213, -75.4595, -73.3094, 0.23 ) }
    dend_42 { pt3dadd( -61.8255, -76.801, -73.9707, 0.23 ) }
    dend_42 { pt3dadd( -64.3846, -78.0704, -74.7255, 0.23 ) }
    dend_42 { pt3dadd( -65.9543, -78.8329, -75.2572, 0.23 ) }
    dend_42 { pt3dadd( -67.9162, -79.7765, -75.9863, 1.13 ) }
    dend_42 { pt3dadd( -71.4543, -81.4206, -77.5579, 0.23 ) }
    dend_42 { pt3dadd( -73.2049, -82.22, -78.4469, 0.68 ) }
    dend_42 { pt3dadd( -75.2124, -83.1091, -79.5769, 0.23 ) }
    dend_42 { pt3dadd( -76.5451, -83.6546, -80.3777, 0.23 ) }
    dend_42 { pt3dadd( -77.7604, -84.0741, -81.0968, 0.23 ) }
    dend_42 { pt3dadd( -79.9629, -84.5907, -82.3122, 0.23 ) }
    dend_42 { pt3dadd( -81.9515, -84.9445, -83.3308, 0.68 ) }
    dend_42 { pt3dadd( -83.4404, -85.1184, -84.05, 0.23 ) }
    dend_42 { pt3dadd( -85.6697, -85.3161, -84.9845, 0.23 ) }
    dend_42 { pt3dadd( -87.3228, -85.3678, -85.5916, 0.91 ) }
    dend_42 { pt3dadd( -90.8731, -85.2268, -86.7229, 0.23 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.21029, 142.346, -5.90483, 0.23 ) }
    dend_25 { pt3dadd( 2.03249, 144.204, -6.03333, 0.23 ) }
    dend_25 { pt3dadd( 1.86169, 145.828, -6.15702, 0.23 ) }
    dend_25 { pt3dadd( 1.71775, 147.038, -6.25121, 0.68 ) }
    dend_25 { pt3dadd( 1.53379, 148.516, -6.37394, 0.23 ) }
    dend_25 { pt3dadd( 1.41317, 149.509, -6.45557, 0.68 ) }
    dend_25 { pt3dadd( 1.22324, 151.025, -6.57767, 0.23 ) }
    dend_25 { pt3dadd( 1.12173, 151.875, -6.64906, 0.91 ) }
    dend_25 { pt3dadd( 1.0288, 152.548, -6.70483, 0.91 ) }
    dend_25 { pt3dadd( 0.601448, 155.183, -6.89993, 0.23 ) }
    dend_25 { pt3dadd( 0.482655, 155.98, -6.94633, 1.59 ) }
    dend_25 { pt3dadd( 0.387513, 156.657, -6.98023, 1.59 ) }
    dend_25 { pt3dadd( 0.156145, 158.712, -7.08965, 0.23 ) }
    dend_25 { pt3dadd( 0.0826327, 159.567, -7.14088, 0.23 ) }
    dend_25 { pt3dadd( 9.11832E-4, 160.909, -7.21155, 0.91 ) }
    dend_25 { pt3dadd( -0.0548712, 162.75, -7.28942, 0.23 ) }
    dend_25 { pt3dadd( -0.0566582, 163.81, -7.32859, 0.91 ) }
    dend_25 { pt3dadd( -0.0314632, 165.172, -7.36994, 0.23 ) }
    dend_25 { pt3dadd( 0.00239684, 166.177, -7.3912, 0.91 ) }
    dend_25 { pt3dadd( 0.0677037, 168.825, -7.43126, 0.23 ) }
    dend_25 { pt3dadd( 0.0970153, 169.882, -7.44121, 0.68 ) }
    dend_25 { pt3dadd( 0.105807, 170.698, -7.43995, 0.23 ) }
    dend_25 { pt3dadd( 0.11593, 171.814, -7.42148, 1.13 ) }
    dend_25 { pt3dadd( 0.0925697, 173.238, -7.35454, 0.23 ) }
    dend_25 { pt3dadd( 0.0593341, 174.113, -7.31815, 0.68 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.21029, 142.346, -5.90483, 0.23 ) }
    dend_24 { pt3dadd( 3.50694, 143.21, -6.15277, 0.23 ) }
    dend_24 { pt3dadd( 4.99163, 143.884, -6.52312, 0.91 ) }
    dend_24 { pt3dadd( 6.48547, 144.3, -6.87427, 0.23 ) }
    dend_24 { pt3dadd( 7.29662, 144.357, -7.0786, 0.68 ) }
    dend_24 { pt3dadd( 8.78803, 144.183, -7.52505, 0.23 ) }
    dend_24 { pt3dadd( 11.3384, 143.433, -8.51424, 0.23 ) }
    dend_24 { pt3dadd( 12.8318, 142.827, -9.13354, 0.23 ) }
    dend_24 { pt3dadd( 14.3131, 142.061, -9.7962, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( 16.4176, 140.742, -10.7793, 0.23 ) }
    dend_24 { pt3dadd( 18.2546, 139.415, -11.6851, 0.91 ) }
    dend_24 { pt3dadd( 20.7721, 137.194, -13.0724, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 3/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.0884, -3.1623, -1.29224, 1.13 ) }
    dend_22 { pt3dadd( -17.7588, -5.49177, -1.667, 1.13 ) }
    dend_22 { pt3dadd( -19.3705, -7.96041, -2.15473, 1.59 ) }
    dend_22 { pt3dadd( -20.9571, -10.5469, -2.70038, 0.91 ) }
    dend_22 { pt3dadd( -21.9376, -12.17, -3.10139, 0.91 ) }
    dend_22 { pt3dadd( -23.4428, -14.6288, -3.8037, 2.04 ) }
    dend_22 { pt3dadd( -25.4649, -17.9408, -4.80662, 1.13 ) }
    dend_22 { pt3dadd( -26.7213, -20.0555, -5.49981, 1.13 ) }
    dend_22 { pt3dadd( -27.52, -21.4359, -5.95071, 1.81 ) }
    dend_22 { pt3dadd( -29.2638, -24.3719, -6.87184, 0.91 ) }
    dend_22 { pt3dadd( -31.0761, -27.1984, -7.69074, 0.91 ) }
    dend_22 { pt3dadd( -32.0277, -28.5301, -8.0232, 0.91 ) }
    dend_22 { pt3dadd( -33.0583, -29.8378, -8.28514, 1.36 ) }
    dend_22 { pt3dadd( -34.7389, -31.9497, -8.56731, 0.91 ) }
    dend_22 { pt3dadd( -36.5777, -34.2396, -8.73852, 1.13 ) }
    dend_22 { pt3dadd( -38.013, -36.029, -8.76452, 1.36 ) }
    dend_22 { pt3dadd( -39.5463, -37.9496, -8.74381, 1.36 ) }
    dend_22 { pt3dadd( -41.086, -39.9255, -8.74672, 1.59 ) }
    dend_22 { pt3dadd( -42.3083, -41.5353, -8.74776, 1.36 ) }
    dend_22 { pt3dadd( -44.0379, -43.8754, -8.80088, 2.04 ) }
    dend_22 { pt3dadd( -44.7114, -44.8733, -8.84863, 2.04 ) }
    dend_22 { pt3dadd( -46.263, -47.2733, -8.9065, 1.13 ) }
    dend_22 { pt3dadd( -47.3672, -48.9904, -8.92208, 1.81 ) }
    dend_22 { pt3dadd( -49.7176, -52.6482, -8.90253, 0.91 ) }
    dend_22 { pt3dadd( -50.9356, -54.6054, -8.87674, 2.04 ) }
    dend_22 { pt3dadd( -52.9751, -58.1221, -8.83067, 1.13 ) }
    dend_22 { pt3dadd( -54.7571, -61.3816, -8.78969, 0.68 ) }
    dend_22 { pt3dadd( -55.5843, -63.0102, -8.73068, 0.68 ) }
    dend_22 { pt3dadd( -56.1637, -64.2074, -8.64016, 1.13 ) }
    dend_22 { pt3dadd( -56.6385, -65.2792, -8.53268, 1.13 ) }
    dend_22 { pt3dadd( -57.4399, -67.1562, -8.30355, 1.13 ) }
    dend_22 { pt3dadd( -58.5909, -69.9206, -7.93409, 0.45 ) }
    dend_22 { pt3dadd( -60.1639, -73.7345, -7.52903, 0.91 ) }
    dend_22 { pt3dadd( -60.8462, -75.3065, -7.38632, 1.59 ) }
    dend_22 { pt3dadd( -61.7428, -77.2843, -7.19383, 0.68 ) }
    dend_22 { pt3dadd( -63.2122, -80.3053, -6.928, 0.68 ) }
    dend_22 { pt3dadd( -65.0352, -83.6803, -6.70031, 0.68 ) }
    dend_22 { pt3dadd( -65.4147, -84.303, -6.68581, 1.13 ) }
    dend_22 { pt3dadd( -66.6464, -86.1146, -6.76301, 1.13 ) }
    dend_22 { pt3dadd( -67.9923, -88.0017, -6.90103, 0.45 ) }
    dend_22 { pt3dadd( -69.3507, -89.7057, -7.05586, 0.91 ) }
    dend_22 { pt3dadd( -70.5843, -91.0542, -7.23388, 0.23 ) }
    dend_22 { pt3dadd( -71.916, -92.4149, -7.49063, 0.23 ) }
    dend_22 { pt3dadd( -73.1368, -93.6924, -7.75485, 0.23 ) }
    dend_22 { pt3dadd( -74.2172, -94.8112, -8.00681, 0.23 ) }
    dend_22 { pt3dadd( -75.8807, -96.5101, -8.45382, 0.23 ) }
    dend_22 { pt3dadd( -77.0379, -97.744, -8.75913, 0.23 ) }
    dend_22 { pt3dadd( -79.5966, -100.679, -9.43767, 0.23 ) }
    dend_22 { pt3dadd( -81.0822, -102.372, -9.85858, 0.23 ) }
    dend_22 { pt3dadd( -88.6789, -113.534, -11.3968, 0.23 ) }
    dend_22 { pt3dadd( -95.0259, -125.292, -14.1131, 0.23 ) }
    dend_22 { pt3dadd( -99.8752, -137.579, -17.6547, 0.23 ) }
    dend_22 { pt3dadd( -104.887, -150.158, -19.7341, 0.23 ) }
    dend_22 { pt3dadd( -108.31, -162.801, -23.7592, 0.23 ) }
    dend_22 { pt3dadd( -110.272, -176.086, -26.7321, 0.23 ) }
    dend_22 { pt3dadd( -110.815, -189.404, -30.1217, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 59/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.0884, -3.1623, -1.29224, 0.45 ) }
    dend_21 { pt3dadd( -16.9061, -5.11478, -0.920962, 0.45 ) }
    dend_21 { pt3dadd( -17.5012, -6.56748, -0.6707, 0.45 ) }
    dend_21 { pt3dadd( -18.2851, -8.45961, -0.372304, 0.68 ) }
    dend_21 { pt3dadd( -19.1267, -10.4367, -0.0680721, 1.13 ) }
    dend_21 { pt3dadd( -20.1423, -12.7999, 0.2876, 0.91 ) }
    dend_21 { pt3dadd( -21.2558, -15.3958, 0.693512, 0.45 ) }
    dend_21 { pt3dadd( -22.0025, -17.0671, 0.961103, 0.45 ) }
    dend_21 { pt3dadd( -22.3749, -17.9493, 1.12629, 1.13 ) }
    dend_21 { pt3dadd( -22.8119, -19.1153, 1.36887, 0.45 ) }
    dend_21 { pt3dadd( -23.0611, -19.8476, 1.55263, 0.91 ) }
    dend_21 { pt3dadd( -23.6817, -21.8364, 2.15366, 0.23 ) }
    dend_21 { pt3dadd( -23.994, -22.9454, 2.5286, 0.68 ) }
    dend_21 { pt3dadd( -24.5962, -25.1321, 3.28523, 0.23 ) }
    dend_21 { pt3dadd( -24.9586, -26.5543, 3.77195, 1.59 ) }
    dend_21 { pt3dadd( -25.1789, -27.5206, 4.09012, 1.59 ) }
    dend_21 { pt3dadd( -25.6052, -29.5964, 4.74302, 0.23 ) }
    dend_21 { pt3dadd( -25.8064, -30.7529, 5.07263, 0.68 ) }
    dend_21 { pt3dadd( -26.017, -32.1107, 5.45555, 0.68 ) }
    dend_21 { pt3dadd( -26.3841, -34.5771, 6.20205, 0.23 ) }
    dend_21 { pt3dadd( -26.4864, -35.3129, 6.4486, 0.45 ) }
    dend_21 { pt3dadd( -26.6367, -36.5358, 6.88279, 0.45 ) }
    dend_21 { pt3dadd( -26.8601, -38.7089, 7.67033, 0.45 ) }
    dend_21 { pt3dadd( -27.0143, -40.4489, 8.31744, 0.91 ) }
    dend_21 { pt3dadd( -27.2117, -42.5257, 9.09485, 0.91 ) }
    dend_21 { pt3dadd( -27.3425, -43.8191, 9.5505, 0.23 ) }
    dend_21 { pt3dadd( -27.4293, -44.5378, 9.79844, 0.68 ) }
    dend_21 { pt3dadd( -27.6276, -45.9929, 10.2891, 0.45 ) }
    dend_21 { pt3dadd( -27.8745, -47.7103, 10.8305, 0.23 ) }
    dend_21 { pt3dadd( -27.9948, -48.5489, 11.0612, 0.91 ) }
    dend_21 { pt3dadd( -28.328, -50.8258, 11.6398, 0.23 ) }
    dend_21 { pt3dadd( -28.5387, -52.0757, 11.9512, 0.68 ) }
    dend_21 { pt3dadd( -29.0049, -54.6461, 12.5994, 0.91 ) }
    dend_21 { pt3dadd( -29.2981, -56.1227, 12.9642, 0.91 ) }
    dend_21 { pt3dadd( -29.7066, -58.0939, 13.4404, 2.27 ) }
    dend_21 { pt3dadd( -29.9488, -59.0969, 13.6863, 1.81 ) }
    dend_21 { pt3dadd( -30.6159, -61.3829, 14.2189, 0.91 ) }
    dend_21 { pt3dadd( -30.9171, -62.35, 14.4251, 1.59 ) }
    dend_21 { pt3dadd( -31.5896, -64.3448, 14.8337, 0.45 ) }
    dend_21 { pt3dadd( -31.8409, -65.0594, 14.984, 0.45 ) }
    dend_21 { pt3dadd( -32.9291, -68.1356, 15.6325, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( -33.3386, -69.3568, 15.8889, 0.23 ) }
    dend_21 { pt3dadd( -33.4725, -69.8411, 15.9908, 0.68 ) }
    dend_21 { pt3dadd( -33.6348, -70.5812, 16.1502, 0.68 ) }
    dend_21 { pt3dadd( -33.8174, -71.8273, 16.4226, 0.68 ) }
    dend_21 { pt3dadd( -33.9869, -73.6022, 16.7893, 1.81 ) }
    dend_21 { pt3dadd( -34.0246, -74.395, 16.936, 1.81 ) }
    dend_21 { pt3dadd( -34.1548, -76.7381, 17.3787, 0.45 ) }
    dend_21 { pt3dadd( -34.2489, -78.002, 17.6137, 0.45 ) }
    dend_21 { pt3dadd( -34.3762, -79.583, 17.9095, 1.36 ) }
    dend_21 { pt3dadd( -34.4542, -80.6695, 18.1041, 0.91 ) }
    dend_21 { pt3dadd( -34.5243, -82.0824, 18.3497, 1.13 ) }
    dend_21 { pt3dadd( -34.5928, -84.1453, 18.6966, 0.23 ) }
    dend_21 { pt3dadd( -34.6048, -84.902, 18.8163, 0.68 ) }
    dend_21 { pt3dadd( -34.5797, -86.9772, 19.145, 0.23 ) }
    dend_21 { pt3dadd( -34.5168, -88.1968, 19.3495, 0.68 ) }
    dend_21 { pt3dadd( -34.4143, -89.3811, 19.5621, 0.23 ) }
    dend_21 { pt3dadd( -34.3301, -90.1581, 19.7072, 0.68 ) }
    dend_21 { pt3dadd( -34.0232, -92.9461, 20.2294, 0.23 ) }
    dend_21 { pt3dadd( -33.871, -94.4586, 20.5237, 0.23 ) }
    dend_21 { pt3dadd( -33.7337, -96.0882, 20.8467, 0.68 ) }
    dend_21 { pt3dadd( -33.6391, -97.6013, 21.1633, 0.23 ) }
    dend_21 { pt3dadd( -33.5911, -98.614, 21.376, 0.68 ) }
    dend_21 { pt3dadd( -33.5371, -99.6163, 21.5927, 0.23 ) }
    dend_21 { pt3dadd( -33.4202, -100.92, 21.9104, 0.23 ) }
    dend_21 { pt3dadd( -36.3414, -108.967, 24.5913, 0.23 ) }
    dend_21 { pt3dadd( -40.3918, -116.705, 26.4961, 0.23 ) }
    dend_21 { pt3dadd( -43.373, -124.558, 29.618, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 68.663, 68.6324, 84.2984, 0.23 ) }
    dend_18 { pt3dadd( 73.8959, 71.4878, 90.4258, 0.23 ) }
    dend_18 { pt3dadd( 79.1402, 73.9932, 96.6834, 0.23 ) }
    dend_18 { pt3dadd( 84.6223, 77.6178, 102.187, 0.23 ) }
    dend_18 { pt3dadd( 89.8626, 82.4943, 106.997, 0.23 ) }
    dend_18 { pt3dadd( 96.1911, 87.5323, 110.011, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 68.663, 68.6324, 84.2984, 0.23 ) }
    dend_17 { pt3dadd( 70.373, 73.9131, 89.3702, 0.23 ) }
    dend_17 { pt3dadd( 72.7427, 79.256, 94.1345, 0.23 ) }
    dend_17 { pt3dadd( 75.5198, 83.132, 99.9058, 0.23 ) }
    dend_17 { pt3dadd( 78.1129, 86.164, 106.21, 0.23 ) }
    dend_17 { pt3dadd( 80.1929, 88.8674, 112.833, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 89.3769, 86.6264, 59.0987, 0.23 ) }
    dend_15 { pt3dadd( 95.6126, 94.4731, 61.8728, 0.23 ) }
    dend_15 { pt3dadd( 103.749, 99.858, 65.0209, 0.23 ) }
    dend_15 { pt3dadd( 110.14, 106.791, 69.2609, 0.23 ) }
    dend_15 { pt3dadd( 115.681, 113.075, 75.2523, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 44/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 89.3769, 86.6264, 59.0987, 0.23 ) }
    dend_14 { pt3dadd( 96.5275, 91.4232, 62.5983, 0.23 ) }
    dend_14 { pt3dadd( 103.366, 96.2152, 66.65, 0.23 ) }
    dend_14 { pt3dadd( 110.369, 100.521, 70.909, 0.23 ) }
    dend_14 { pt3dadd( 116.795, 106.747, 73.7041, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 49/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -4.49725, -92.8711, 8.77235, 0.91 ) }
    dend_60 { pt3dadd( -5.06492, -94.2441, 7.60616, 0.91 ) }
    dend_60 { pt3dadd( -5.53469, -95.4388, 6.82057, 1.36 ) }
    dend_60 { pt3dadd( -6.34032, -97.702, 5.63059, 0.91 ) }
    dend_60 { pt3dadd( -6.82454, -99.2505, 5.06454, 1.36 ) }
    dend_60 { pt3dadd( -7.00486, -99.8735, 4.88565, 1.36 ) }
    dend_60 { pt3dadd( -7.26725, -100.819, 4.63776, 1.59 ) }
    dend_60 { pt3dadd( -7.85245, -103.14, 4.2298, 1.13 ) }
    dend_60 { pt3dadd( -8.16833, -104.507, 4.08015, 1.13 ) }
    dend_60 { pt3dadd( -8.76081, -107.17, 3.83136, 0.91 ) }
    dend_60 { pt3dadd( -9.21384, -109.191, 3.59338, 0.91 ) }
    dend_60 { pt3dadd( -9.72338, -111.344, 3.29497, 1.59 ) }
    dend_60 { pt3dadd( -10.2478, -113.395, 2.96439, 0.91 ) }
    dend_60 { pt3dadd( -10.7752, -115.266, 2.62607, 0.91 ) }
    dend_60 { pt3dadd( -11.4739, -117.443, 2.20872, 0.91 ) }
    dend_60 { pt3dadd( -11.9689, -118.788, 1.93697, 0.91 ) }
    dend_60 { pt3dadd( -12.6473, -120.365, 1.68153, 1.36 ) }
    dend_60 { pt3dadd( -13.3232, -121.706, 1.5006, 1.59 ) }
    dend_60 { pt3dadd( -14.1842, -123.199, 1.33427, 1.13 ) }
    dend_60 { pt3dadd( -14.8619, -124.311, 1.19325, 1.13 ) }
    dend_60 { pt3dadd( -15.3118, -125.059, 1.09694, 0.91 ) }
    dend_60 { pt3dadd( -16.1026, -126.363, 0.88421, 1.36 ) }
    dend_60 { pt3dadd( -17.1375, -128.042, 0.514605, 0.45 ) }
    dend_60 { pt3dadd( -17.9759, -129.387, 0.134207, 1.59 ) }
    dend_60 { pt3dadd( -19.321, -131.496, -0.555728, 1.36 ) }
    dend_60 { pt3dadd( -20.1342, -132.832, -1.04152, 1.13 ) }
    dend_60 { pt3dadd( -20.6199, -133.711, -1.38394, 0.68 ) }
    dend_60 { pt3dadd( -21.4082, -135.235, -1.99724, 0.45 ) }
    dend_60 { pt3dadd( -22.1657, -136.739, -2.57454, 0.91 ) }
    dend_60 { pt3dadd( -22.7126, -137.862, -2.9887, 0.68 ) }
    dend_60 { pt3dadd( -23.2603, -139.048, -3.35076, 0.45 ) }
    dend_60 { pt3dadd( -23.9167, -140.621, -3.72352, 1.13 ) }
    dend_60 { pt3dadd( -24.4229, -142.012, -3.96459, 1.13 ) }
    dend_60 { pt3dadd( -24.8046, -143.181, -4.094, 1.36 ) }
    dend_60 { pt3dadd( -25.2578, -144.733, -4.19604, 1.13 ) }
    dend_60 { pt3dadd( -25.6565, -146.152, -4.2555, 0.68 ) }
    dend_60 { pt3dadd( -26.2308, -148.144, -4.28685, 0.91 ) }
    dend_60 { pt3dadd( -26.8251, -150.306, -4.30612, 0.68 ) }
    dend_60 { pt3dadd( -27.1824, -151.801, -4.32458, 1.36 ) }
    dend_60 { pt3dadd( -27.4358, -152.945, -4.32816, 1.36 ) }
    dend_60 { pt3dadd( -27.7141, -154.271, -4.34981, 0.91 ) }
    dend_60 { pt3dadd( -28.1348, -156.145, -4.43218, 0.68 ) }
    dend_60 { pt3dadd( -28.719, -158.456, -4.59855, 0.91 ) }
    dend_60 { pt3dadd( -29.2832, -160.504, -4.77253, 1.59 ) }
    dend_60 { pt3dadd( -29.8934, -162.642, -4.9653, 1.36 ) }
    dend_60 { pt3dadd( -30.4993, -164.753, -5.16027, 0.91 ) }
    dend_60 { pt3dadd( -30.9969, -166.64, -5.32693, 1.13 ) }
    dend_60 { pt3dadd( -31.3512, -168.219, -5.45943, 0.23 ) }
    dend_60 { pt3dadd( -31.5616, -169.469, -5.55165, 1.13 ) }
    dend_60 { pt3dadd( -31.7053, -171.135, -5.65263, 0.68 ) }
    dend_60 { pt3dadd( -31.7224, -172.792, -5.73052, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( -31.6259, -174.963, -5.77707, 0.91 ) }
    dend_60 { pt3dadd( -31.4353, -177.146, -5.8072, 0.91 ) }
    dend_60 { pt3dadd( -31.2559, -179.074, -5.84248, 1.36 ) }
    dend_60 { pt3dadd( -31.0565, -181.966, -5.90126, 0.68 ) }
    dend_60 { pt3dadd( -30.9911, -183.631, -5.97299, 0.68 ) }
    dend_60 { pt3dadd( -30.9642, -185.052, -6.06252, 1.36 ) }
    dend_60 { pt3dadd( -30.9739, -185.76, -6.1212, 1.36 ) }
    dend_60 { pt3dadd( -31.0545, -187.618, -6.31585, 0.68 ) }
    dend_60 { pt3dadd( -31.1325, -188.915, -6.4788, 1.36 ) }
    dend_60 { pt3dadd( -31.2733, -190.995, -6.81672, 0.23 ) }
    dend_60 { pt3dadd( -31.3445, -192.284, -7.0411, 0.23 ) }
    dend_60 { pt3dadd( -31.4137, -193.72, -7.31742, 1.13 ) }
    dend_60 { pt3dadd( -31.4512, -194.967, -7.55285, 1.36 ) }
    dend_60 { pt3dadd( -31.4576, -196.133, -7.76847, 1.81 ) }
    dend_60 { pt3dadd( -31.4373, -198.219, -8.17061, 1.13 ) }
    dend_60 { pt3dadd( -31.4145, -200.077, -8.51985, 1.36 ) }
    dend_60 { pt3dadd( -31.3869, -201.882, -8.85704, 0.68 ) }
    dend_60 { pt3dadd( -31.3202, -204.236, -9.30146, 0.91 ) }
    dend_60 { pt3dadd( -31.2596, -205.92, -9.61354, 0.68 ) }
    dend_60 { pt3dadd( -31.1741, -207.722, -9.93814, 0.68 ) }
    dend_60 { pt3dadd( -31.0927, -208.904, -10.1289, 2.04 ) }
    dend_60 { pt3dadd( -30.9456, -210.54, -10.4077, 2.04 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 22/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -4.49725, -92.8711, 8.77235, 0.45 ) }
    dend_59 { pt3dadd( -4.98497, -94.6092, 8.96331, 0.45 ) }
    dend_59 { pt3dadd( -5.43336, -96.4442, 9.14663, 0.68 ) }
    dend_59 { pt3dadd( -5.94551, -98.9324, 9.39737, 1.13 ) }
    dend_59 { pt3dadd( -6.34336, -101.198, 9.63005, 1.13 ) }
    dend_59 { pt3dadd( -6.77649, -103.905, 9.94182, 1.13 ) }
    dend_59 { pt3dadd( -7.17083, -106.354, 10.2337, 0.91 ) }
    dend_59 { pt3dadd( -7.62139, -109.018, 10.5208, 0.91 ) }
    dend_59 { pt3dadd( -8.02755, -111.43, 10.7602, 0.91 ) }
    dend_59 { pt3dadd( -8.39936, -113.823, 10.9982, 0.23 ) }
    dend_59 { pt3dadd( -8.5463, -114.888, 11.1101, 0.23 ) }
    dend_59 { pt3dadd( -8.69464, -116.043, 11.2456, 1.36 ) }
    dend_59 { pt3dadd( -9.11074, -118.804, 11.6441, 0.91 ) }
    dend_59 { pt3dadd( -9.46235, -120.733, 11.9409, 0.91 ) }
    dend_59 { pt3dadd( -9.66993, -121.882, 12.1168, 0.23 ) }
    dend_59 { pt3dadd( -9.76245, -122.448, 12.2, 0.91 ) }
    dend_59 { pt3dadd( -10.0626, -124.496, 12.4828, 0.68 ) }
    dend_59 { pt3dadd( -10.327, -126.549, 12.8156, 1.13 ) }
    dend_59 { pt3dadd( -10.6067, -128.658, 13.1876, 0.91 ) }
    dend_59 { pt3dadd( -10.9586, -131.014, 13.5906, 0.91 ) }
    dend_59 { pt3dadd( -11.2337, -132.595, 13.8187, 0.91 ) }
    dend_59 { pt3dadd( -11.3924, -133.483, 13.9251, 1.36 ) }
    dend_59 { pt3dadd( -11.6873, -135.146, 14.0694, 1.13 ) }
    dend_59 { pt3dadd( -11.9529, -136.598, 14.1603, 1.59 ) }
    dend_59 { pt3dadd( -12.2114, -137.979, 14.233, 1.36 ) }
    dend_59 { pt3dadd( -12.5388, -139.872, 14.2793, 1.36 ) }
    dend_59 { pt3dadd( -12.8236, -141.748, 14.2825, 1.81 ) }
    dend_59 { pt3dadd( -12.9768, -142.885, 14.2601, 0.68 ) }
    dend_59 { pt3dadd( -13.2427, -144.845, 14.1712, 1.13 ) }
    dend_59 { pt3dadd( -13.6065, -147.239, 14.0945, 0.45 ) }
    dend_59 { pt3dadd( -14.0207, -149.416, 14.0416, 0.45 ) }
    dend_59 { pt3dadd( -14.3411, -150.738, 14.0151, 1.81 ) }
    dend_59 { pt3dadd( -14.8741, -152.302, 13.9945, 1.36 ) }
    dend_59 { pt3dadd( -15.4392, -153.538, 13.9973, 0.91 ) }
    dend_59 { pt3dadd( -16.5826, -155.201, 13.9624, 1.36 ) }
    dend_59 { pt3dadd( -17.6612, -156.202, 13.8968, 0.23 ) }
    dend_59 { pt3dadd( -18.1873, -156.518, 13.8503, 0.23 ) }
    dend_59 { pt3dadd( -20.0034, -157.183, 13.5565, 0.23 ) }
    dend_59 { pt3dadd( -20.8638, -157.341, 13.3649, 0.23 ) }
    dend_59 { pt3dadd( -23.1819, -157.569, 12.7621, 0.23 ) }
    dend_59 { pt3dadd( -23.9577, -157.581, 12.5196, 0.68 ) }
    dend_59 { pt3dadd( -25.3018, -157.537, 12.062, 0.23 ) }
    dend_59 { pt3dadd( -27.1582, -157.469, 11.3609, 0.23 ) }
    dend_59 { pt3dadd( -28.1902, -157.426, 10.8939, 0.23 ) }
    dend_59 { pt3dadd( -30.3353, -166.402, 12.3603, 0.23 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 67/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -12.5872, -118.55, -10.2871, 1.36 ) }
    dend_57 { pt3dadd( -13.4603, -119.333, -11.2318, 1.36 ) }
    dend_57 { pt3dadd( -15.7394, -120.554, -13.9796, 0.45 ) }
    dend_57 { pt3dadd( -16.5435, -120.782, -15.1973, 0.45 ) }
    dend_57 { pt3dadd( -17.3386, -120.9, -16.531, 0.91 ) }
    dend_57 { pt3dadd( -17.9319, -120.943, -17.5986, 0.91 ) }
    dend_57 { pt3dadd( -18.8673, -120.942, -19.3142, 0.23 ) }
    dend_57 { pt3dadd( -20.6444, -120.566, -22.7881, 1.36 ) }
    dend_57 { pt3dadd( -22.3273, -119.89, -26.2506, 0.23 ) }
    dend_57 { pt3dadd( -22.8847, -119.629, -27.4291, 0.23 ) }
    dend_57 { pt3dadd( -23.924, -119.094, -29.6656, 1.13 ) }
    dend_57 { pt3dadd( -24.5531, -118.736, -30.9908, 1.36 ) }
    dend_57 { pt3dadd( -25.2133, -118.33, -32.2483, 0.23 ) }
    dend_57 { pt3dadd( -26.0095, -117.79, -33.4715, 0.23 ) }
    dend_57 { pt3dadd( -26.7284, -117.241, -34.3856, 0.23 ) }
    dend_57 { pt3dadd( -27.5102, -116.479, -35.3529, 0.23 ) }
    dend_57 { pt3dadd( -28.6012, -115.221, -36.7758, 0.91 ) }
    dend_57 { pt3dadd( -29.2056, -114.525, -37.5635, 1.59 ) }
    dend_57 { pt3dadd( -30.3985, -113.255, -39.2257, 0.68 ) }
    dend_57 { pt3dadd( -32.2333, -111.538, -42.028, 0.23 ) }
    dend_57 { pt3dadd( -33.4183, -110.649, -43.9486, 0.68 ) }
    dend_57 { pt3dadd( -35.1976, -109.79, -47.0248, 0.23 ) }
    dend_57 { pt3dadd( -36.1866, -109.651, -48.8973, 1.13 ) }
    dend_57 { pt3dadd( -37.8914, -110.218, -52.5393, 0.23 ) }
    dend_57 { pt3dadd( -38.9113, -111.447, -55.119, 0.91 ) }
    dend_57 { pt3dadd( -39.396, -112.677, -56.5367, 0.91 ) }
    dend_57 { pt3dadd( -39.9921, -115.025, -58.3686, 0.23 ) }
    dend_57 { pt3dadd( -40.3963, -117.536, -59.6942, 0.23 ) }
    dend_57 { pt3dadd( -40.7108, -119.915, -60.6625, 0.91 ) }
    dend_57 { pt3dadd( -41.0672, -122.341, -61.3648, 0.23 ) }
    dend_57 { pt3dadd( -41.3824, -123.906, -61.7399, 0.23 ) }
    dend_57 { pt3dadd( -42.2926, -126.764, -62.4235, 0.23 ) }
    dend_57 { pt3dadd( -43.3435, -128.919, -62.9509, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_57 { pt3dadd( -44.2048, -130.233, -63.3615, 1.36 ) }
    dend_57 { pt3dadd( -45.2427, -131.514, -63.8719, 0.23 ) }
    dend_57 { pt3dadd( -46.6866, -133.032, -64.5856, 0.91 ) }
    dend_57 { pt3dadd( -49.1825, -135.263, -66.0215, 0.23 ) }
    dend_57 { pt3dadd( -49.8895, -135.851, -66.4492, 0.91 ) }
    dend_57 { pt3dadd( -52.5716, -137.937, -68.1474, 0.23 ) }
    dend_57 { pt3dadd( -53.8938, -138.973, -69.0341, 0.68 ) }
    dend_57 { pt3dadd( -54.7423, -139.608, -69.6467, 0.68 ) }
    dend_57 { pt3dadd( -57.3329, -141.428, -71.7334, 0.23 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 9/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -12.5872, -118.55, -10.2871, 0.23 ) }
    dend_56 { pt3dadd( -12.261, -119.72, -10.1636, 0.23 ) }
    dend_56 { pt3dadd( -11.9852, -120.509, -10.1395, 0.23 ) }
    dend_56 { pt3dadd( -11.4519, -121.949, -10.1423, 0.23 ) }
    dend_56 { pt3dadd( -10.7059, -123.832, -10.1521, 0.91 ) }
    dend_56 { pt3dadd( -10.1965, -125.082, -10.1814, 0.23 ) }
    dend_56 { pt3dadd( -9.78242, -126.084, -10.2038, 0.45 ) }
    dend_56 { pt3dadd( -9.29209, -127.211, -10.26, 0.23 ) }
    dend_56 { pt3dadd( -8.86307, -128.108, -10.3257, 0.68 ) }
    dend_56 { pt3dadd( -8.45755, -128.851, -10.4274, 0.23 ) }
    dend_56 { pt3dadd( -7.99242, -129.668, -10.5595, 0.23 ) }
    dend_56 { pt3dadd( -7.34576, -131.028, -10.682, 0.23 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 21/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -30.9456, -210.54, -10.4077, 0.23 ) }
    dend_62 { pt3dadd( -32.4304, -211.187, -9.65088, 0.23 ) }
    dend_62 { pt3dadd( -33.5561, -211.745, -9.08573, 0.23 ) }
    dend_62 { pt3dadd( -35.8634, -213.192, -8.01905, 0.68 ) }
    dend_62 { pt3dadd( -38.28, -214.915, -7.18153, 0.23 ) }
    dend_62 { pt3dadd( -40.3581, -216.47, -6.62154, 0.68 ) }
    dend_62 { pt3dadd( -41.5001, -217.304, -6.36336, 0.23 ) }
    dend_62 { pt3dadd( -43.5458, -218.749, -6.00308, 0.23 ) }
    dend_62 { pt3dadd( -46.5787, -220.909, -5.67537, 0.68 ) }
    dend_62 { pt3dadd( -49.5901, -223.156, -5.60912, 0.23 ) }
    dend_62 { pt3dadd( -51.8479, -224.959, -5.68293, 0.91 ) }
    dend_62 { pt3dadd( -53.1793, -226.029, -5.80312, 0.91 ) }
    dend_62 { pt3dadd( -54.829, -227.295, -5.9764, 0.23 ) }
    dend_62 { pt3dadd( -56.1536, -228.212, -6.09587, 0.23 ) }
    dend_62 { pt3dadd( -57.2705, -228.962, -6.15639, 0.23 ) }
    dend_62 { pt3dadd( -58.7161, -230.027, -6.0729, 0.23 ) }
    dend_62 { pt3dadd( -59.4317, -230.609, -5.996, 0.23 ) }
    dend_62 { pt3dadd( -60.7766, -231.833, -5.79994, 0.23 ) }
    dend_62 { pt3dadd( -61.9267, -232.903, -5.59835, 0.68 ) }
    dend_62 { pt3dadd( -64.2347, -235.026, -5.10975, 0.23 ) }
    dend_62 { pt3dadd( -67.0272, -237.584, -4.47509, 0.23 ) }
    dend_62 { pt3dadd( -68.6195, -239.063, -4.0815, 0.23 ) }
    dend_62 { pt3dadd( -69.6133, -240.037, -3.8136, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 44/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -30.9456, -210.54, -10.4077, 0.45 ) }
    dend_61 { pt3dadd( -31.2507, -211.271, -12.2169, 0.45 ) }
    dend_61 { pt3dadd( -31.4275, -211.439, -13.6661, 0.45 ) }
    dend_61 { pt3dadd( -31.5899, -211.594, -14.9977, 0.45 ) }
    dend_61 { pt3dadd( -31.7202, -211.718, -16.0654, 0.45 ) }
    dend_61 { pt3dadd( -31.879, -211.869, -17.3667, 0.45 ) }
    dend_61 { pt3dadd( -32.0485, -212.03, -18.7565, 1.13 ) }
    dend_61 { pt3dadd( -32.4134, -211.627, -20.3012, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_33 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_8 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_3 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_45 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_9 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_4 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_1 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_49 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_44 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_41 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_37 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_16 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_55 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_53 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_42 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_22 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_18 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_15 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_60 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_59 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_57 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_62 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_19 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_50 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_27 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_40 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_54 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_29 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_58 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_56 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_36 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_17 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_14 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_61 OneSecGrp_SectionRef_66.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 7
    dend_33 nseg = 5
    dend_8 nseg = 7
    dend_3 nseg = 3
    dend_0 nseg = 3
    dend_47 nseg = 7
    dend_45 nseg = 5
    dend_35 nseg = 5
    dend_30 nseg = 3
    dend_12 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_49 nseg = 3
    dend_44 nseg = 7
    dend_41 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_28 nseg = 3
    dend_23 nseg = 7
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_55 nseg = 3
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_22 nseg = 11
    dend_21 nseg = 7
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_60 nseg = 7
    dend_59 nseg = 5
    dend_57 nseg = 5
    dend_62 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_LBC_7fd94465af_0_0


