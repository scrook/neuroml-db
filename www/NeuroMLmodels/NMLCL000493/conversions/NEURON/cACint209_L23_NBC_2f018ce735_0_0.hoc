// Cell: cACint209_L23_NBC_2f018ce735_0_0
/*
{
  "id" : "cACint209_L23_NBC_2f018ce735_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.11709, 7.30639, -0.967776, 2.36862", "-6.36745, 6.56762, -0.862279, 4.05465", "-5.61782, 5.82885, -0.756782, 6.37159", "-4.86818, 5.09008, -0.651285, 7.6682", "-4.11855, 4.35131, -0.545788, 8.31963", "-3.36891, 3.61254, -0.440291, 8.63962", "-2.61928, 2.87377, -0.334794, 8.75226", "-1.86965, 2.135, -0.229297, 8.73568", "-1.12001, 1.39623, -0.1238, 8.76537", "-0.370378, 0.657463, -0.0183025, 8.79506", "0.379256, -0.0813072, 0.0871946, 8.85046", "1.12889, -0.820077, 0.192692, 9.12539", "1.87852, -1.55885, 0.298189, 9.37848", "2.62816, -2.29762, 0.403686, 9.54524", "3.37779, -3.03639, 0.509183, 9.52778", "4.12743, -3.77516, 0.61468, 9.63906", "4.87706, -4.51393, 0.720177, 9.78204", "5.6267, -5.2527, 0.825674, 9.68621", "6.37633, -5.99147, 0.931171, 8.82442", "7.12596, -6.73024, 1.03667, 6.80231", "7.8756, -7.46901, 1.14217, 3.72742" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.66963, 8.31212, -5.40351, 1.39", "-3.51825, 11.1505, -6.27895, 1.11", "-4.25768, 13.6237, -7.04175, 1.11", "-4.4672, 14.3245, -7.25789, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.0996272, 6.47462, 2.21649, 1.39", "0.540036, 7.51204, 2.36352, 1.39", "2.05632, 9.63676, 2.37372, 1.11", "4.38391, 12.6173, 2.15053, 1.11", "8.04362, 16.869, 1.41754, 1.11", "9.87844, 18.789, 1.03891, 1.11", "12.4178, 21.2326, 0.476265, 1.11", "13.9638, 22.549, -0.00797262, 1.11", "15.1271, 23.4572, -0.677798, 1.11", "16.8177, 24.6822, -2.12352, 1.11", "17.9169, 25.5474, -3.41554, 1.11", "18.9265, 26.3998, -4.72728, 0.83", "20.7804, 28.0287, -7.13248, 0.83", "23.7718, 30.6759, -11.3521, 0.83", "25.2962, 32.067, -13.7239, 0.83", "26.2357, 32.9834, -15.3546, 0.83", "27.459, 34.2547, -17.7214, 0.83", "28.1773, 34.983, -19.1446, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "7.99037, -3.85738, -7.17351, 0.83", "11.6349, -3.93139, -7.82793, 0.83", "14.2027, -4.0378, -8.28183, 0.55", "15.6425, -4.10507, -8.51905, 0.55", "19.2634, -4.29067, -8.98363, 0.55", "25.3486, -4.63308, -9.78961, 0.55", "31.5556, -5.04241, -10.5089, 0.55", "36.7285, -5.46156, -10.9881, 0.55", "39.3416, -5.70443, -11.1107, 0.28", "41.7075, -5.90208, -11.1399, 0.55", "45.5609, -6.14888, -11.0239, 0.55", "48.6754, -6.09193, -10.8356, 0.55", "51.8432, -5.96284, -10.5476, 0.28", "54.8716, -5.68289, -10.1468, 0.83", "58.5104, -5.19794, -9.635, 0.28", "61.5404, -4.72207, -9.19651, 0.55", "64.5741, -4.17369, -8.60497, 0.55", "66.7107, -3.75999, -8.24989, 0.55", "70.8122, -2.95768, -7.59594, 0.55", "72.4731, -2.62322, -7.3437, 0.55", "74.9256, -2.13919, -6.92494, 0.55", "78.6526, -1.50815, -6.23977, 0.55", "82.4081, -0.950027, -5.53615, 0.55", "84.1207, -0.665557, -5.26673, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.35038, -6.49288, -16.6335, 1.11", "6.99611, -6.3906, -18.977, 1.11", "9.31948, -6.0226, -27.409, 1.11", "11.1632, -5.73057, -34.1003, 1.11", "12.4638, -5.52456, -38.8206, 1.11", "13.0408, -5.43317, -40.9146, 1.11", "14.7199, -5.16722, -47.0084, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.70037, -9.38038, -13.7535, 1.94", "2.27281, -11.5776, -15.9758, 1.94", "1.45803, -15.7646, -20.2107, 1.94", "0.795307, -19.1702, -23.6553, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.82962, 2.01212, 1.87649, 1.11", "-8.89382, 1.23167, 2.85335, 1.11", "-12.1887, 0.271596, 4.03257, 0.83", "-14.3461, -0.482642, 4.804, 0.83", "-20.1385, -2.47261, 7.07338, 0.83", "-23.5488, -3.5405, 8.59022, 0.83", "-30.2131, -5.57531, 11.8845, 0.83", "-33.1103, -6.43032, 13.5217, 0.55", "-36.2273, -7.12264, 15.5666, 0.55", "-41.8458, -8.01999, 19.7253, 0.55", "-45.2006, -8.55245, 22.5494, 0.55", "-49.249, -9.24612, 25.9832, 0.55", "-54.1471, -10.1292, 30.1187, 0.55", "-60.2944, -11.5273, 35.3739, 0.55", "-65.4267, -13.0045, 39.7867, 0.55", "-69.1372, -14.5988, 43.0293, 0.55", "-72.6674, -16.7006, 46.1202, 0.55", "-75.1891, -18.6186, 48.3431, 0.55", "-76.5199, -20.4027, 49.5371, 0.28", "-76.969, -21.6517, 49.8507, 0.55", "-77.4039, -25.9156, 49.9479, 0.28", "-77.0244, -28.1037, 49.884, 0.55", "-88.3918, -32.3425, 59.2108, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.72962, 5.47712, -11.8535, 1.66", "-13.4594, 5.90734, -11.8535, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.49962, 7.41962, 3.5965, 1.94", "-9.57198, 9.21962, 3.5965, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.8756, -7.46901, 1.14217, 0.55", "18.5593, -17.9979, 1.14217, 0.55", "29.2431, -28.5268, 1.14217, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-4.4672, 14.3245, -7.25789, 0.83", "-4.99484, 17.7579, -8.22286, 0.83", "-5.69457, 24.4872, -10.0166, 0.83", "-6.11779, 29.7217, -11.2478, 0.83", "-6.42204, 35.8797, -12.4949, 0.83", "-6.47235, 42.2391, -13.3373, 0.55", "-6.41308, 44.7207, -13.5401, 0.55", "-6.04492, 49.7511, -13.5565, 0.55", "-5.52252, 54.3536, -12.9149, 0.55", "-5.09727, 57.716, -12.0586, 0.55", "-4.44249, 64.141, -9.76327, 0.83", "-4.16461, 68.3905, -7.62458, 0.83", "-4.08594, 70.8258, -6.15583, 0.28", "-4.22622, 75.3482, -3.08685, 0.83", "-4.40988, 77.4135, -1.66635, 0.55", "-4.77561, 79.36, -0.460294, 0.83", "-6.478, 85.415, 2.51246, 0.28", "-6.57836, 85.8366, 2.76136, 0.55", "-6.98699, 88.139, 4.25701, 0.28", "-7.29575, 90.3781, 5.89614, 0.55", "-7.54321, 92.631, 7.69133, 0.28", "-7.77501, 94.3418, 9.0709, 0.55", "-9.13073, 102.263, 15.2532, 0.55", "-9.80287, 105.667, 17.7943, 0.55", "-10.4333, 108.474, 19.802, 0.55", "-10.957, 110.485, 21.0433, 0.55", "-11.8378, 113.342, 22.429, 0.55", "-12.7876, 115.707, 22.9589, 0.55", "-15.0391, 119.987, 22.6291, 0.28", "-16.5191, 122.554, 22.0878, 0.55", "-18.3512, 125.396, 21.1377, 0.28", "-19.3611, 126.753, 20.5392, 0.55", "-21.5344, 129.315, 19.15, 0.28", "-23.4569, 131.228, 17.9353, 0.28", "-24.1174, 131.795, 17.5285, 0.55", "-26.5466, 133.662, 16.0762, 0.28", "-28.096, 134.741, 15.2919, 0.83", "-29.2355, 135.488, 14.7759, 0.28", "-29.6449, 135.721, 14.6128, 0.83", "-33.0254, 147.277, 18.3428, 0.83", "-34.9985, 159.102, 22.3441, 0.83", "-37.5125, 170.272, 27.5357, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-4.4672, 14.3245, -7.25789, 0.83", "-2.48967, 15.0547, -11.8964, 0.83", "-1.41184, 15.467, -14.3569, 0.83", "0.4528, 16.1233, -18.5412, 0.83", "5.61942, 17.8209, -29.4561, 0.83", "9.4377, 19.098, -37.1697, 0.83", "10.5463, 19.4633, -39.3171, 0.28", "12.0221, 19.8396, -42.0908, 0.83", "12.7456, 19.9989, -43.471, 0.83", "14.3933, 20.3655, -46.9467, 0.83", "15.1237, 20.5361, -48.0155, 0.83", "17.4384, 21.3575, -50.311, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "28.1773, 34.983, -19.1446, 0.83", "30.6128, 35.958, -21.5972, 0.83", "31.9909, 36.451, -22.8219, 0.83", "34.6156, 37.2488, -24.9112, 0.83", "36.0647, 37.6655, -25.9791, 0.83", "38.2286, 38.2107, -27.4487, 0.83", "39.8356, 38.5919, -28.4609, 0.83", "41.9102, 39.002, -29.531, 0.83", "43.3339, 39.2456, -30.1851, 0.83", "44.9711, 39.5241, -30.8507, 0.83", "46.7131, 39.8478, -31.5243, 0.83", "47.8035, 40.088, -31.9219, 0.55", "48.6132, 40.246, -32.2233, 0.55", "51.169, 40.6163, -33.2765, 0.55", "52.0548, 40.7626, -33.6747, 0.55", "54.1118, 41.0688, -34.7343, 0.83", "55.4051, 41.2128, -35.4658, 0.83", "57.8722, 41.4562, -36.9785, 0.83", "59.469, 41.6267, -37.9895, 0.55", "61.4358, 41.8789, -39.2693, 0.55", "63.419, 42.1424, -40.585, 0.55", "65.6276, 42.4345, -42.0014, 0.83", "71.4874, 43.0823, -45.4337, 0.55", "73.1243, 43.2236, -46.2934, 0.55", "74.2047, 43.2651, -46.778, 0.28", "75.3047, 43.2255, -47.1684, 0.55", "77.9045, 43.0448, -47.7519, 0.55", "79.6949, 42.8519, -47.9209, 0.55", "81.3874, 42.5351, -47.8122, 0.55", "83.0888, 42.2503, -47.6563, 0.55", "85.0534, 42.0086, -47.4606, 1.11", "87.3701, 41.9059, -47.2794, 0.55", "88.9699, 41.9686, -47.2529, 0.28", "90.7058, 42.1435, -47.3685, 0.55", "91.9445, 42.3114, -47.5662, 0.28", "92.7158, 42.399, -47.7918, 0.55", "93.8998, 42.4904, -48.2765, 0.83", "96.2258, 42.5595, -49.521, 0.55", "97.6264, 42.5179, -50.3241, 0.28", "100.607, 42.3528, -52.1232, 0.55", "103.945, 42.074, -54.126, 0.28", "105.131, 41.9564, -54.8562, 0.55", "106.82, 41.765, -55.8447, 0.55", "108.881, 41.5221, -56.9813, 0.55", "110.587, 41.3273, -57.8709, 0.28", "111.209, 41.2496, -58.1937, 0.55", "113.075, 41.0789, -58.978, 0.28", "114.813, 40.9255, -59.5327, 0.55", "116.167, 40.8197, -59.8469, 0.28", "116.766, 40.7981, -59.9904, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "28.1773, 34.983, -19.1446, 0.55", "29.3561, 35.7413, -21.645, 0.55", "31.2307, 36.9759, -25.4767, 0.55", "32.5231, 37.7753, -27.9978, 0.55", "34.3352, 38.9447, -31.2075, 0.55", "35.6599, 39.8385, -33.4112, 0.55", "37.3554, 41.0509, -36.0004, 0.55", "37.8749, 41.443, -36.6799, 0.55", "39.2319, 42.5116, -38.1087, 0.55", "41.9295, 44.6986, -40.2925, 0.55", "43.8612, 46.3949, -41.4138, 0.55", "46.7307, 48.9745, -42.3896, 0.55", "48.5151, 50.5722, -42.6128, 0.28", "49.715, 51.6001, -42.5532, 0.28", "53.4824, 54.7975, -41.74, 0.28", "54.2993, 55.4277, -41.4582, 0.83", "56.8772, 57.2382, -40.4149, 0.28", "58.6745, 58.3707, -39.8281, 0.83", "61.8979, 60.1003, -39.184, 0.28", "63.4165, 60.8589, -38.992, 0.55", "64.933, 61.5624, -39.0276, 0.28", "66.6722, 62.2888, -39.1589, 0.55", "71.3128, 63.9145, -40.0711, 0.55", "73.5647, 64.5502, -40.9328, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "14.7199, -5.16722, -47.0084, 0.55", "18.8893, -5.99821, -54.0293, 0.55", "20.5618, -6.4263, -56.8748, 1.11", "25.2056, -7.76176, -64.4177, 0.28", "27.2157, -8.39179, -67.5596, 0.55", "28.9749, -8.94954, -70.2123, 0.55", "30.8985, -9.48252, -73.0558, 0.28", "33.0632, -10.0827, -76.132, 1.11", "35.5413, -10.5604, -79.5931, 0.55", "37.9823, -10.8236, -82.7971, 0.28", "38.5785, -10.8399, -83.6478, 1.11", "41.9216, -10.646, -88.6421, 0.55", "44.6103, -10.1756, -92.7888, 0.28", "46.5481, -9.6509, -95.8371, 0.83", "48.0578, -9.13802, -98.4157, 0.83", "51.138, -8.00068, -103.838, 0.55", "51.8424, -7.7941, -105.077, 0.83", "55.3857, -6.92644, -111.183, 0.28", "56.9248, -6.55592, -113.829, 0.83", "59.6954, -5.98364, -118.591, 0.28", "60.6387, -5.79887, -120.202, 1.11", "68.4659, -4.56404, -133.181, 0.28", "68.8074, -4.52439, -133.752, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.7199, -5.16722, -47.0084, 0.28", "14.5372, -4.10247, -49.523, 0.28", "14.4916, -3.74937, -50.3229, 0.55", "13.9809, 0.339799, -58.9706, 0.28", "13.9518, 0.465156, -59.2223, 0.55", "13.7526, 1.15451, -60.5746, 0.28", "13.4097, 1.9248, -62.131, 0.55", "11.8563, 4.68312, -67.8052, 0.28", "11.5623, 5.11008, -68.7819, 0.55", "9.63924, 7.57281, -74.57, 0.28", "9.30053, 7.97851, -75.5601, 1.11", "6.95367, 10.5984, -82.2412, 0.28", "6.29741, 11.2678, -84.0324, 0.83", "3.169, 14.1303, -92.1226, 0.83", "1.89614, 15.2762, -95.6202, 0.28", "1.47895, 15.6691, -96.9122, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "0.795307, -19.1702, -23.6553, 1.11", "1.31091, -24.4592, -24.3865, 1.11", "1.82042, -29.6857, -25.109, 1.11", "2.10779, -32.6336, -25.5165, 1.11", "2.51218, -36.7819, -26.09, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.795307, -19.1702, -23.6553, 1.11", "-0.0340262, -21.0504, -35.5683, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-88.3918, -32.3425, 59.2108, 0.55", "-99.9365, -37.1205, 67.0059, 0.55", "-110.283, -42.9864, 75.7341, 0.55", "-120.227, -50.7349, 83.5498, 0.55", "-128.132, -57.4807, 94.0379, 0.55", "-137.869, -62.5305, 103.855, 0.55", "-145.015, -66.0223, 116.185, 0.55", "-151.255, -69.6921, 128.948, 0.55", "-155.18, -71.6177, 142.936, 0.55", "-159.283, -75.748, 156.407, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-88.3918, -32.3425, 59.2108, 0.28", "-96.174, -35.6111, 64.5847, 0.55", "-104.873, -37.7451, 68.989, 0.55", "-113.852, -39.4394, 72.9864, 0.55", "-122.405, -41.7741, 77.5777, 0.55", "-131.22, -45.2287, 80.8584, 0.55", "-140.371, -48.1992, 83.6094, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.4594, 5.90734, -11.8535, 1.11", "-18.1901, 4.71828, -21.3611, 1.11", "-19.6026, 4.36322, -24.2001, 1.66", "-21.3789, 3.91675, -27.77, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.4594, 5.90734, -11.8535, 0.83", "-15.6089, 8.68148, -19.7288, 0.83", "-16.5981, 10.1542, -23.5437, 0.83", "-18.8079, 13.6329, -32.1324, 0.83", "-20.6272, 16.6694, -39.2434, 0.83", "-21.6571, 18.366, -43.1161, 0.83", "-23.1685, 20.8862, -48.6555, 0.83", "-24.6048, 23.435, -53.7958, 0.55", "-25.4005, 24.9642, -56.5336, 1.39", "-26.4966, 27.0531, -59.8646, 0.55", "-26.9927, 27.9467, -61.1993, 0.83", "-28.3305, 30.3708, -65.1165, 0.28", "-28.8789, 31.366, -66.8001, 0.83", "-30.4983, 34.4773, -72.2408, 0.28", "-30.7909, 35.1245, -73.4584, 0.83", "-31.7677, 37.484, -78.2037, 0.83", "-33.4238, 41.7466, -87.39, 0.28", "-33.6404, 42.3725, -88.8181, 0.83", "-34.3498, 44.5876, -94.023, 0.28", "-35.3471, 47.3639, -100.924, 0.28", "-35.544, 47.8716, -102.223, 0.83", "-35.9438, 48.8255, -104.648, 0.83", "-37.7918, 52.4082, -114.204, 0.28", "-37.9524, 52.6765, -114.963, 0.55", "-40.1754, 56.0104, -124.819, 0.28", "-40.721, 56.784, -127.084, 0.55", "-41.3485, 57.667, -129.679, 0.55", "-42.333, 59.0001, -133.663, 0.28", "-43.4711, 60.2525, -137.895, 0.55", "-45.0832, 62.1709, -144.381, 0.28", "-45.2201, 62.3541, -144.987, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.57198, 9.21962, 3.5965, 1.11", "-13.1662, 11.5306, 4.10076, 1.11", "-14.3781, 12.3707, 4.3074, 0.83", "-15.5245, 13.2659, 4.62835, 1.66", "-18.399, 15.718, 5.61723, 0.83", "-19.4697, 16.6834, 6.00273, 0.83", "-24.5722, 21.5023, 7.99316, 0.83", "-26.1315, 23.0911, 8.65628, 0.83", "-29.3373, 26.4035, 10.0469, 1.11", "-30.6208, 27.7767, 10.662, 0.83", "-33.0594, 30.5276, 12.0036, 0.83", "-35.3624, 33.1986, 13.3532, 0.83", "-37.549, 35.6784, 14.7308, 0.83", "-39.7067, 38.0862, 15.9147, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.57198, 9.21962, 3.5965, 0.83", "-10.3843, 12.912, 7.71123, 0.83", "-11.6027, 18.4501, 13.8829, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.2431, -28.5268, 1.14217, 0.55", "39.9268, -39.0557, 1.14217, 0.55", "50.6106, -49.5846, 1.14217, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-37.5125, 170.272, 27.5357, 0.83", "-36.6635, 182.047, 30.7796, 0.83", "-33.9752, 193.819, 32.9835, 0.83", "-31.827, 205.286, 36.6246, 0.83", "-28.693, 216.243, 40.9211, 0.83", "-24.8457, 227.186, 44.6767, 0.83", "-21.6841, 237.305, 50.505, 0.83", "-17.3105, 246.444, 56.9966, 0.83", "-13.4632, 256.914, 61.7918, 0.83", "-9.66606, 267.984, 65.261, 0.83", "-5.23889, 279.407, 66.1368, 0.83", "-1.37158, 291.087, 65.3331, 0.83", "2.01805, 302.858, 63.784, 0.83", "2.98906, 314.883, 61.0484, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-37.5125, 170.272, 27.5357, 0.83", "-44.1515, 176.023, 25.2317, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "17.4384, 21.3575, -50.311, 0.55", "20.6873, 23.2673, -50.024, 0.55", "21.7078, 23.8672, -49.9339, 0.83", "23.2359, 24.7655, -49.7989, 0.55", "24.4002, 25.4499, -49.6961, 0.83", "27.1536, 27.0685, -49.4529, 0.55", "30.3858, 28.9685, -49.1674, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "17.4384, 21.3575, -50.311, 0.55", "17.4717, 21.4143, -50.7266, 0.55", "17.6941, 21.7932, -53.5001, 0.55", "17.8983, 22.1413, -56.0475, 0.55", "17.9127, 22.1657, -56.2265, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "116.766, 40.7981, -59.9904, 0.28", "120.959, 42.3776, -60.2321, 0.28", "123.439, 43.2902, -60.3551, 0.28", "128.096, 45.0183, -60.5385, 0.28", "130.821, 46.0114, -60.4895, 0.55", "133.144, 46.8576, -60.4477, 0.28", "134.459, 47.3368, -60.424, 0.55", "136.255, 48.0283, -60.3808, 0.28", "137.617, 48.5341, -60.2318, 0.55", "140.19, 49.4312, -59.2483, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "116.766, 40.7981, -59.9904, 0.28", "118.873, 38.9641, -60.2701, 0.28", "119.251, 38.642, -60.2458, 0.55", "121.539, 36.7063, -59.8562, 0.28", "122.288, 36.0826, -59.6873, 0.55", "124.349, 34.4676, -59.3733, 0.28", "125.252, 33.8182, -59.2404, 0.55", "127.942, 32.2413, -58.8134, 0.28", "128.622, 31.8581, -58.6965, 0.28", "128.924, 31.7052, -58.6367, 0.55", "131.803, 30.1256, -57.8948, 0.28", "133.321, 29.1392, -57.3011, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "68.8074, -4.52439, -133.752, 0.55", "71.3763, -2.54198, -139.851, 0.55", "72.3098, -1.90962, -141.836, 1.11", "78.064, 1.68917, -153.23, 0.28", "79.1105, 2.30339, -155.195, 0.83", "82.5791, 4.28494, -161.475, 0.28", "83.2748, 4.65396, -162.675, 0.83", "85.6818, 5.83905, -166.429, 0.28", "86.1097, 6.03033, -167.046, 0.83", "88.3453, 6.73276, -169.473, 0.28", "88.7446, 6.84595, -169.883, 0.55", "91.8289, 7.42414, -172.903, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "68.8074, -4.52439, -133.752, 0.28", "70.5148, -5.70691, -134.628, 0.28", "71.815, -6.6674, -135.28, 0.28", "71.9944, -6.78792, -135.371, 0.55", "72.9549, -7.38435, -135.835, 0.28", "73.2431, -7.5355, -135.971, 0.55", "76.7748, -9.17546, -137.476, 0.28", "77.4601, -9.46942, -137.743, 0.83", "80.7702, -10.8739, -139.062, 0.28", "81.6523, -11.2256, -139.408, 0.55", "85.2605, -12.5355, -140.788, 0.28", "87.9224, -13.406, -141.728, 0.28", "88.6514, -13.5913, -141.933, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.51218, -36.7819, -26.09, 0.83", "2.11493, -40.4592, -27.5645, 0.83", "1.93693, -42.6825, -28.3059, 0.83", "1.8398, -46.2987, -29.4324, 0.83", "1.86239, -46.8088, -29.5879, 0.83", "2.2845, -51.1421, -30.9049, 0.83", "2.48866, -52.9782, -31.4442, 0.83", "2.85636, -55.7243, -32.0774, 0.83", "3.60777, -61.5905, -33.1912, 0.83", "4.07409, -67.0462, -33.9185, 0.83", "4.16487, -72.444, -34.5786, 0.83", "4.0313, -74.9372, -34.8467, 0.83", "3.5655, -78.7299, -35.2162, 0.83", "2.89953, -81.7749, -35.4726, 0.83", "0.965847, -87.3079, -35.8707, 0.83", "-0.779909, -91.077, -36.1849, 0.83", "-1.67173, -92.816, -36.452, 0.83", "-3.13033, -95.8055, -37.2344, 0.83", "-4.14471, -98.0301, -38.0411, 0.83", "-5.06861, -100.284, -38.9843, 0.83", "-6.23284, -103.419, -40.41, 0.55", "-7.35173, -106.86, -41.803, 0.55", "-8.33021, -110.191, -43.1017, 0.55", "-8.91503, -112.683, -44.0518, 0.28", "-9.11541, -113.662, -44.4314, 0.55", "-9.39141, -115.058, -45.0017, 0.28", "-10.1945, -118.878, -46.6403, 0.55", "-10.3747, -119.651, -46.968, 0.55", "-11.0919, -122.754, -48.4521, 0.55", "-11.6231, -125.354, -49.8536, 0.55", "-11.9016, -126.832, -50.6956, 0.55", "-12.1966, -128.566, -51.7282, 0.55", "-12.729, -131.574, -53.5953, 0.55", "-12.9402, -132.621, -54.2128, 0.55", "-13.4896, -134.956, -55.5164, 0.28", "-13.7063, -135.778, -55.9401, 0.55", "-14.4957, -138.751, -57.4233, 0.55", "-14.6977, -139.679, -57.9072, 0.55", "-15.0147, -141.011, -58.5405, 0.83", "-15.5581, -143.246, -59.5753, 0.28", "-16.1225, -145.249, -60.4217, 0.28", "-16.4802, -146.514, -60.9574, 0.55", "-17.1874, -149.049, -61.9533, 0.55", "-17.8153, -151.641, -62.9759, 0.55", "-18.2644, -153.552, -63.715, 1.11", "-18.8941, -155.955, -64.6601, 0.55", "-19.477, -157.976, -65.4833, 0.28", "-19.9622, -159.521, -66.0908, 0.55", "-20.6272, -161.38, -66.7146, 0.28", "-20.8721, -162.074, -66.9283, 0.55", "-21.8029, -164.468, -67.4912, 0.28", "-22.2625, -165.671, -67.7708, 0.83", "-23.4132, -168.614, -68.3501, 0.28", "-24.4907, -171.41, -68.903, 0.83", "-25.2515, -173.389, -69.2705, 0.28", "-25.812, -174.953, -69.5993, 0.55", "-26.7227, -177.654, -70.21, 0.55", "-27.4967, -180.129, -70.9347, 0.55", "-28.0473, -181.956, -71.5671, 0.28", "-28.3119, -182.919, -71.9502, 0.83", "-28.7633, -184.381, -72.5496, 0.28", "-28.9753, -185.014, -72.8078, 0.83", "-30.096, -187.958, -73.9924, 0.28", "-30.9155, -190.041, -74.8328, 0.28", "-31.1556, -190.704, -75.1149, 0.83", "-31.8227, -192.81, -76.0254, 0.28", "-31.8774, -193.025, -76.1235, 0.83", "-32.2394, -194.94, -77.0416, 0.28", "-32.3699, -196.209, -77.6888, 0.83", "-32.5098, -198.836, -79.0901, 0.28", "-32.5212, -200.377, -79.8953, 0.83", "-32.4112, -203.092, -81.2437, 0.28", "-32.3622, -204.422, -81.9189, 0.55", "-32.215, -207.943, -83.6852, 0.28", "-32.2056, -208.21, -83.8182, 0.55", "-32.1716, -209.492, -84.348, 0.28", "-32.1533, -210.402, -84.6841, 0.55", "-32.1331, -212.275, -85.1943, 0.28", "-32.1339, -213.245, -85.3985, 0.28", "-32.1413, -213.581, -85.4226, 0.83", "-32.2872, -215.602, -85.6143, 0.28", "-32.3757, -216.307, -85.6843, 0.28", "-32.4453, -216.852, -85.7215, 0.55", "-32.5592, -217.836, -85.7274, 0.28", "-32.6749, -218.592, -85.7604, 0.55", "-33.052, -220.823, -85.9628, 0.28", "-33.1353, -221.335, -86.0611, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.51218, -36.7819, -26.09, 0.55", "6.3428, -40.2011, -25.961, 0.55", "10.4518, -43.942, -25.9682, 0.55", "14.0969, -46.9914, -25.9054, 0.55", "17.2533, -49.6321, -25.851, 0.55", "19.6382, -51.6272, -25.8098, 0.28", "22.8239, -54.2923, -25.7549, 0.55", "24.8991, -56.0414, -25.5656, 0.28", "28.0218, -58.8299, -25.3606, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.0340262, -21.0504, -35.5683, 0.83", "-3.94426, -22.0443, -37.8453, 0.83", "-6.73094, -22.7488, -39.7492, 0.83", "-9.95629, -23.4955, -42.8126, 0.83", "-11.5998, -23.8368, -44.5941, 0.55", "-12.8072, -24.1216, -46.0279, 0.28", "-13.5772, -24.3222, -46.9853, 0.83", "-16.6523, -25.2417, -51.1266, 0.83", "-20.8452, -26.4999, -57.2984, 0.83", "-22.5968, -27.034, -59.9745, 0.83", "-24.269, -27.5767, -62.5753, 0.83", "-27.3197, -28.5831, -67.1308, 0.28", "-27.6897, -28.7069, -67.6319, 1.11", "-29.9145, -29.438, -70.1087, 0.28", "-30.236, -29.5162, -70.3965, 0.55", "-33.1305, -29.979, -72.802, 0.28", "-34.6982, -30.1478, -74.0194, 0.83", "-36.9292, -30.4144, -75.7818, 0.55", "-39.1481, -30.7126, -77.5222, 0.55", "-44.9939, -31.57, -82.0183, 0.28", "-45.6984, -31.6773, -82.5767, 1.11", "-49.4298, -32.228, -85.6647, 0.83", "-54.5851, -33.0727, -90.1631, 0.28", "-56.041, -33.3444, -91.4512, 0.28", "-56.5065, -33.4449, -91.8643, 0.55", "-60.2698, -34.3183, -95.1794, 0.28", "-62.1341, -34.7344, -96.7117, 0.55", "-65.5906, -35.4407, -99.3443, 0.28", "-65.9629, -35.5283, -99.5725, 0.55", "-68.8978, -36.3154, -101.125, 0.28", "-69.5067, -36.4916, -101.42, 0.55", "-73.1278, -37.6016, -102.998, 0.28", "-74.13, -37.9402, -103.406, 0.83", "-80.8602, -40.3857, -106.037, 0.28", "-82.3285, -40.9404, -106.643, 0.55", "-88.2417, -43.2599, -109.204, 0.28", "-89.7104, -43.8568, -109.981, 1.11", "-97.59, -47.1367, -114.543, 0.28", "-99.0628, -47.7846, -115.548, 0.83", "-101.583, -49.0076, -117.456, 0.28", "-102.961, -49.709, -118.434, 0.83", "-110.835, -53.8658, -123.581, 0.28", "-113.179, -55.0897, -124.928, 1.11", "-120.396, -58.7321, -128.533, 0.28", "-122.43, -59.7565, -129.326, 0.83", "-128.695, -63.0003, -130.772, 0.28", "-129.478, -63.403, -130.827, 0.83", "-133.446, -65.4548, -129.711, 0.28", "-134.259, -65.8582, -129.375, 0.55", "-136.759, -66.9667, -127.631, 0.28", "-137.708, -67.3887, -127.182, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.0340262, -21.0504, -35.5683, 0.55", "0.213139, -21.3359, -37.3003, 0.55", "0.828307, -22.3879, -42.7207, 0.55", "1.33496, -23.6625, -48.5435, 0.55", "1.56445, -24.4413, -51.8284, 0.55", "1.67782, -24.9748, -54.0458, 0.55", "1.73184, -25.3169, -55.4417, 0.55", "1.80861, -26.032, -58.2469, 0.55", "1.75543, -26.3979, -59.3773, 0.28", "1.63849, -26.8332, -60.564, 0.83", "1.41582, -27.7252, -62.9998, 0.83", "1.21023, -29.0828, -66.7053, 0.28", "1.19682, -29.2196, -67.0799, 0.83", "1.1724, -30.0105, -69.0587, 0.28", "1.17593, -30.2671, -69.6492, 0.55", "1.18347, -31.5027, -72.1274, 0.28", "1.18685, -31.6846, -72.4349, 0.83", "1.18892, -32.4347, -73.6684, 0.28", "1.15388, -33.0627, -74.7963, 0.55", "1.00137, -34.0461, -76.646, 0.28", "0.938677, -34.2545, -77.1127, 0.83", "0.558909, -35.1999, -79.3558, 0.28", "0.263388, -35.8467, -81.1059, 0.55", "-0.148846, -36.6974, -83.5588, 0.28", "-0.27201, -37.0225, -84.5007, 0.28", "-0.81654, -39.0081, -90.3372, 0.28", "-0.847492, -39.2039, -90.9469, 0.55", "-0.952168, -40.7309, -95.4701, 0.28", "-0.944145, -41.1311, -96.5939, 0.55", "-0.763245, -42.8046, -101.098, 0.28", "-0.658741, -43.4373, -102.708, 0.55", "-0.341912, -45.3924, -107.112, 0.55", "-0.0685792, -46.9933, -110.443, 0.28", "-3.3018E-4, -47.4002, -111.17, 0.55", "0.118663, -48.2624, -112.569, 0.28", "0.16476, -48.7469, -113.222, 0.55", "0.440949, -51.1966, -115.949, 0.28", "0.570483, -52.0891, -116.692, 0.55", "0.874297, -53.8698, -118.032, 0.28", "1.02168, -54.9497, -118.653, 0.55", "1.2895, -56.8853, -119.655, 0.28", "1.41186, -57.7234, -120.055, 0.55", "1.66569, -59.2753, -120.658, 0.55", "2.10693, -62.8427, -121.962, 0.28", "2.53583, -67.3536, -123.088, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-21.3789, 3.91675, -27.77, 0.83", "-23.6077, 2.5844, -29.5966, 0.83", "-24.768, 1.84698, -30.4255, 0.83", "-29.5053, -1.08719, -33.4676, 0.83", "-30.7326, -1.82578, -34.1812, 0.55", "-31.6404, -2.32609, -34.6402, 1.11", "-34.8335, -4.05398, -36.1696, 0.55", "-38.0309, -5.77261, -37.4578, 0.83", "-39.2983, -6.41604, -37.8866, 0.28", "-40.8885, -7.13438, -38.2619, 0.55", "-43.9827, -8.36563, -38.8699, 0.55", "-46.7099, -9.34011, -39.2927, 0.28", "-48.6378, -9.9199, -39.5374, 0.83", "-50.8772, -10.4878, -39.8122, 0.55", "-53.4052, -11.1286, -40.0875, 0.55", "-55.9804, -11.7325, -40.4198, 0.55", "-57.6982, -12.1224, -40.6569, 0.55", "-59.6651, -12.5293, -40.915, 0.28", "-60.3552, -12.694, -41.0463, 0.28", "-63.734, -13.6308, -41.8327, 0.55", "-66.5106, -14.4663, -42.5359, 0.55", "-67.9142, -14.9067, -42.9253, 0.55", "-69.7919, -15.5078, -43.4168, 0.83", "-73.1771, -16.642, -44.3229, 0.55", "-75.4581, -17.3606, -44.9886, 0.55", "-78.0068, -18.071, -45.8651, 0.83", "-79.9151, -18.5296, -46.5947, 0.55", "-82.9616, -19.2392, -47.9837, 0.55", "-84.8911, -19.7013, -48.9609, 0.55", "-87.5673, -20.347, -50.6149, 0.55", "-90.0636, -20.9636, -52.3806, 0.28", "-93.0674, -21.6481, -54.8893, 0.55", "-95.4895, -22.126, -57.0564, 0.28", "-96.7332, -22.3141, -58.3208, 0.83", "-100.678, -22.6824, -62.6227, 0.28", "-101.656, -22.741, -63.7121, 0.55", "-104.858, -22.6759, -67.2452, 0.28", "-106.411, -22.5, -68.9617, 0.28", "-109.057, -21.8467, -71.7557, 0.55", "-110.439, -21.4151, -73.1189, 0.28", "-113.143, -20.4366, -75.5333, 0.83", "-117.034, -18.9668, -78.9298, 0.28", "-117.455, -18.8089, -79.2606, 0.55", "-119.721, -17.9749, -81.0836, 0.28", "-120.777, -17.5967, -81.848, 0.55", "-123.338, -16.6399, -83.9023, 0.28", "-123.729, -16.4768, -84.2831, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-21.3789, 3.91675, -27.77, 0.83", "-24.6915, 3.58626, -31.3237, 0.83", "-26.1704, 3.43871, -32.9103, 0.55", "-27.531, 3.30296, -34.37, 0.55", "-29.0778, 3.14863, -36.0295, 0.55", "-30.4233, 3.01439, -37.473, 0.83", "-32.1604, 2.84108, -39.3365, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-39.7067, 38.0862, 15.9147, 0.83", "-42.0765, 40.8421, 16.2842, 0.83", "-43.3622, 42.3467, 16.5557, 1.11", "-44.7813, 44.0486, 17.0078, 0.55", "-46.8712, 46.5571, 17.7719, 0.83", "-48.8184, 48.8741, 18.5454, 0.83", "-50.3945, 50.765, 19.3213, 0.28", "-51.7549, 52.3013, 20.1113, 0.83", "-53.5479, 54.3758, 21.3243, 0.28", "-53.8427, 54.7201, 21.4738, 0.55", "-55.5504, 56.6538, 21.8858, 0.28", "-58.101, 58.8911, 21.4467, 0.83", "-60.3316, 60.4532, 20.2075, 0.83", "-63.2833, 62.2122, 17.9476, 0.55", "-68.9363, 65.0833, 11.9417, 0.28", "-70.8398, 65.9577, 9.53196, 0.83", "-74.6331, 67.5428, 4.00449, 0.28", "-75.7753, 67.9349, 2.13797, 0.55", "-76.8225, 68.2019, 0.249056, 0.83", "-79.6817, 68.7414, -5.14029, 0.28", "-80.9728, 69.0094, -7.59448, 0.28", "-81.4741, 69.1178, -8.63266, 0.83", "-83.8374, 69.7728, -13.5603, 0.55", "-86.1499, 70.3515, -18.3216, 0.28", "-86.5674, 70.4455, -19.1824, 0.55", "-89.2486, 71.1012, -24.3959, 0.28", "-90.3698, 71.3434, -26.4903, 0.55", "-92.0156, 71.7407, -29.2844, 0.28", "-92.572, 71.9022, -30.1034, 0.83", "-95.5678, 72.8635, -34.0422, 0.28", "-96.2197, 73.0743, -34.83, 0.83", "-100.293, 74.3838, -39.5901, 0.28", "-101.954, 74.9359, -41.4785, 0.28", "-103.009, 75.2786, -42.6695, 0.83", "-110.99, 77.8156, -51.5512, 0.28", "-111.905, 78.0942, -52.5595, 0.83", "-117.525, 79.7634, -59.0486, 0.28", "-118.647, 80.1177, -60.4538, 0.28", "-119.898, 80.5075, -62.1226, 0.28", "-120.575, 80.7176, -63.045, 0.55", "-123.113, 81.4713, -66.3533, 0.28", "-124.264, 81.8335, -67.9218, 0.55", "-128.452, 83.3533, -73.662, 0.28", "-129.948, 83.9134, -75.8606, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-39.7067, 38.0862, 15.9147, 0.55", "-41.6096, 37.5987, 17.7749, 0.55", "-42.4346, 37.3889, 18.6538, 0.55", "-43.995, 36.977, 20.2049, 0.28", "-44.2924, 36.9016, 20.4803, 0.28", "-45.8111, 36.5551, 21.9347, 0.55", "-46.6426, 36.3654, 22.7309, 0.83", "-49.3815, 35.7493, 25.2177, 0.55", "-50.312, 35.5607, 26.0836, 0.83", "-50.9266, 35.419, 26.6253, 0.55", "-52.3053, 35.1449, 27.9066, 0.55", "-57.2613, 34.8693, 32.2634, 0.55", "-61.8022, 33.9018, 36.9642, 0.55", "-65.137, 31.84, 42.3003, 0.55", "-68.9943, 29.309, 47.0702, 0.55", "-73.3701, 25.5344, 50.4453, 0.55", "-77.6299, 20.8573, 52.7961, 0.55", "-81.5743, 16.0399, 55.4157, 0.55", "-85.9799, 11.8154, 58.2253, 0.55", "-90.4229, 7.13743, 60.2176, 0.55", "-94.3532, 2.72097, 63.4254, 0.55", "-98.0124, -1.83616, 66.768, 0.55", "-101.941, -5.88269, 70.3911, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.6027, 18.4501, 13.8829, 0.83", "-12.8317, 21.221, 12.3719, 0.83", "-15.1207, 26.3815, 9.5578, 0.83", "-18.2332, 33.3987, 5.73117, 0.83", "-21.0371, 39.72, 2.28407, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.6027, 18.4501, 13.8829, 0.83", "-12.2633, 18.5357, 19.9177, 0.83", "-12.6283, 18.583, 23.2513, 0.83", "-13.0995, 18.6441, 27.5561, 0.83", "-13.494, 18.6952, 31.1594, 0.83", "-13.9635, 18.756, 35.4484, 0.55", "-13.5596, 19.9168, 45.4347, 0.55", "-13.6734, 19.8875, 55.5023, 0.55", "-14.2292, 18.5732, 65.4883, 0.55", "-13.2958, 16.4501, 75.3338, 0.55", "-10.4583, 13.0056, 84.4767, 0.55", "-8.7289, 10.8606, 94.2141, 0.55", "-5.3562, 9.80918, 103.672, 0.55", "-3.44325, 8.08163, 113.446, 0.55", "-2.50825, 6.45256, 123.371, 0.55", "-0.394631, 2.63257, 132.573, 0.55", "0.0703571, -0.513731, 142.208, 0.55", "-2.15875, -2.92002, 151.767, 0.55", "-3.25839, -5.34117, 161.523, 0.55", "-4.69806, -5.85159, 171.478, 0.55", "-6.07109, -6.04022, 181.449, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "30.3858, 28.9685, -49.1674, 0.55", "37.1561, 30.9984, -47.0159, 0.55", "41.5725, 32.2274, -45.6161, 0.55", "46.6683, 33.5473, -44.0391, 0.55", "49.6151, 34.2757, -43.1551, 0.55", "54.73, 35.4308, -41.5897, 0.55", "57.7329, 36.075, -40.6761, 0.28", "59.5476, 36.3713, -40.1282, 0.55", "61.7427, 36.735, -39.4784, 0.28", "62.944, 36.9901, -39.1423, 0.55", "65.8596, 37.7753, -38.2582, 0.28", "67.5827, 38.3952, -37.6146, 0.55", "71.7097, 40.1545, -35.7783, 0.55", "73.9432, 41.2841, -34.6117, 0.55", "76.546, 42.9162, -32.9938, 0.28", "78.3247, 44.2609, -31.7478, 0.55", "80.6571, 46.5378, -29.7993, 0.28", "81.0537, 47.0114, -29.3945, 0.28", "81.8852, 48.247, -28.3467, 0.83", "83.0441, 50.15, -26.707, 0.28", "83.7041, 51.3367, -25.8091, 0.83", "84.8912, 53.8302, -24.2331, 0.28", "85.2133, 54.6048, -23.8371, 0.28", "85.6558, 55.7155, -23.2727, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "30.3858, 28.9685, -49.1674, 0.55", "33.2758, 30.6304, -52.1816, 0.55", "33.8247, 30.909, -52.6751, 0.83", "36.9821, 32.2422, -54.8825, 0.55", "39.2902, 33.0622, -56.1986, 0.28", "41.0301, 33.6803, -57.1907, 0.55", "42.8454, 34.3252, -58.2258, 0.28", "45.6622, 35.1735, -59.357, 0.55", "48.6662, 35.9702, -60.4167, 0.28", "50.3857, 36.302, -60.7612, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-32.1604, 2.84108, -39.3365, 0.83", "-34.2459, 4.22171, -46.6071, 0.83", "-35.6375, 5.17274, -51.2281, 0.83", "-36.6009, 5.87489, -54.5752, 0.28", "-37.5616, 6.66604, -57.925, 0.83", "-38.46, 7.44761, -60.9434, 0.83", "-39.8168, 8.82521, -65.9307, 0.28", "-40.2267, 9.34352, -67.4776, 0.55", "-41.6595, 11.5935, -73.1858, 1.39", "-42.0848, 12.3342, -74.8732, 0.28", "-42.3703, 12.9075, -76.0492, 0.83", "-44.2606, 17.3057, -83.8883, 0.28", "-44.5861, 18.2183, -85.2164, 0.55", "-45.0172, 19.3884, -86.6661, 0.28", "-45.1801, 19.8096, -87.0773, 0.55", "-46.0737, 22.1228, -89.1149, 0.28", "-46.5965, 23.508, -90.0297, 1.11", "-47.4793, 25.5749, -91.0362, 0.55", "-48.1716, 27.1136, -92.0291, 0.28", "-48.3896, 27.5183, -92.3368, 0.83", "-48.9651, 28.446, -93.1431, 0.28", "-49.338, 29.0074, -93.6693, 0.83", "-51.9814, 32.9511, -98.0567, 0.28", "-52.3819, 33.4705, -98.7803, 0.55", "-53.3105, 34.5875, -100.536, 0.28", "-53.8538, 35.1521, -101.523, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-32.1604, 2.84108, -39.3365, 0.55", "-34.3218, 2.26592, -41.0061, 0.55", "-35.3585, 1.94461, -41.8182, 0.55", "-37.7125, 1.08023, -43.7912, 0.55", "-38.4819, 0.780429, -44.4618, 0.55", "-39.538, 0.341689, -45.4834, 0.55", "-41.3155, -0.402129, -47.2709, 0.55", "-43.5356, -1.34279, -49.6598, 0.55", "-45.7859, -2.34599, -52.2421, 0.28", "-47.4324, -3.08068, -54.2262, 0.83", "-50.145, -4.3247, -57.7863, 0.55", "-51.6313, -5.05494, -60.0081, 0.55", "-53.0956, -5.82847, -62.5165, 0.55", "-54.3634, -6.52377, -64.6913, 0.28", "-55.0146, -6.91263, -65.9242, 1.39", "-57.3783, -8.39353, -70.7133, 0.55", "-58.9245, -9.39225, -73.9833, 0.28", "-59.488, -9.7572, -75.188, 0.83", "-61.2198, -10.8355, -78.7308, 0.28", "-64.1162, -12.5508, -84.4706, 0.55", "-66.2862, -13.7971, -88.4791, 0.28", "-67.0251, -14.1535, -89.6294, 0.55", "-69.0872, -15.0247, -92.5393, 0.28", "-69.6123, -15.2239, -93.2525, 0.55", "-70.9374, -15.6741, -95.0471, 0.28", "-72.0127, -16.0137, -96.2691, 0.55", "-75.1582, -17.0029, -99.7364, 0.28", "-76.0924, -17.2831, -100.761, 0.55", "-79.364, -18.1927, -104.421, 0.28", "-81.216, -18.6688, -106.545, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-129.948, 83.9134, -75.8606, 0.28", "-131.223, 83.7685, -77.1599, 0.28", "-134.57, 83.5337, -80.5737, 0.28", "-135.733, 83.5257, -81.7851, 0.55", "-139.717, 83.5795, -86.1411, 0.28", "-140.9, 83.5955, -87.4346, 0.83", "-144.436, 83.6433, -91.3012, 0.28", "-145.039, 83.6729, -91.9939, 0.55", "-148.132, 83.9964, -95.5665, 0.28", "-150.193, 84.3504, -98.0663, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-129.948, 83.9134, -75.8606, 0.28", "-133.637, 86.3057, -83.3307, 0.28", "-134.038, 86.58, -84.1582, 0.55", "-136.382, 88.288, -89.0606, 0.28", "-136.675, 88.6688, -89.8129, 0.55", "-137.527, 90.1821, -92.3413, 0.28", "-138.062, 91.3219, -94.0709, 0.83", "-138.806, 93.9869, -97.2162, 0.28", "-138.9, 94.4043, -97.688, 0.55", "-139.806, 100.402, -104.025, 0.28", "-139.889, 101.174, -104.789, 0.55", "-139.958, 103.213, -106.526, 0.28", "-139.929, 104.328, -107.368, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-21.0371, 39.72, 2.28407, 0.55", "-20.5135, 42.2058, 2.56997, 0.55", "-19.4641, 46.9995, 3.10141, 0.55", "-18.7075, 50.4655, 3.46261, 0.55", "-17.2707, 56.728, 3.97858, 0.55", "-16.586, 59.7221, 4.16351, 0.28", "-16.31, 60.9711, 4.18496, 0.55", "-15.9183, 62.7101, 4.22961, 0.28", "-15.7266, 63.4833, 4.24688, 0.55", "-15.0927, 65.6329, 4.1813, 0.28", "-14.5985, 67.1405, 4.05527, 0.55", "-12.8488, 71.8295, 3.70394, 0.28", "-11.3475, 75.4618, 3.31362, 0.28", "-10.7381, 76.8709, 3.18341, 0.83", "-8.919, 80.8524, 2.86327, 0.55", "-7.65203, 83.448, 2.70681, 0.28", "-7.47697, 83.7554, 2.68887, 0.55", "-4.21164, 88.2581, 2.36825, 0.28", "0.391644, 99.8928, 4.62429, 0.28", "6.37685, 110.913, 6.35657, 0.28", "13.6928, 120.793, 8.95811, 0.28", "21.3095, 130.265, 12.0363, 0.28", "27.0633, 140.528, 16.508, 0.28", "33.6584, 150.841, 19.4744, 0.28", "38.6552, 162.276, 21.7945, 0.28", "43.1955, 173.804, 24.5904, 0.28", "48.4452, 184.152, 29.4865, 0.28", "52.3582, 194.166, 36.0105, 0.28" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-21.0371, 39.72, 2.28407, 0.55", "-23.1993, 47.2714, 3.86126, 0.55", "-24.3666, 50.9458, 4.81927, 0.55", "-25.4009, 53.8753, 5.74041, 0.55", "-26.1077, 55.7213, 6.3563, 0.55", "-28.771, 62.2517, 8.5408, 0.55", "-29.7229, 64.6292, 9.29387, 0.55", "-30.6543, 66.9016, 10.1991, 0.83", "-31.8127, 69.6654, 11.4118, 0.83", "-32.6834, 71.8849, 12.3865, 0.83", "-33.4604, 73.8444, 13.2146, 0.55", "-35.4617, 79.1133, 15.059, 0.55", "-36.6651, 82.6481, 16.2365, 0.55", "-37.3569, 84.994, 17.0414, 0.55", "-38.09, 87.9493, 18.0471, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-38.09, 87.9493, 18.0471, 0.55", "-41.5527, 90.5281, 18.7748, 0.55", "-44.0822, 92.4294, 19.3612, 0.55", "-45.6642, 93.7046, 19.726, 0.28", "-47.1325, 94.9308, 20.0639, 0.55", "-48.2402, 95.8333, 20.2444, 0.55", "-49.3211, 96.6954, 20.3823, 0.28", "-50.0573, 97.3069, 20.4799, 0.55", "-51.699, 98.7021, 20.6758, 0.28", "-52.1616, 99.0782, 20.6688, 0.55", "-54.2931, 100.851, 20.4512, 0.28", "-55.0487, 101.451, 20.3096, 0.55", "-62.6937, 106.691, 22.7728, 0.55", "-70.4398, 112.055, 24.6432, 0.55", "-76.8749, 119.213, 25.9449, 0.55", "-84.4143, 125.27, 25.9739, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-38.09, 87.9493, 18.0471, 0.28", "-37.5111, 90.6823, 20.3105, 0.28", "-37.2995, 91.6812, 21.1377, 0.55", "-37.0874, 92.6829, 21.9671, 0.55", "-36.4013, 95.9216, 24.6492, 0.28", "-35.8245, 98.6448, 26.9044, 0.55", "-32.3036, 106.754, 34.2299, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-84.4143, 125.27, 25.9739, 0.55", "-93.3785, 131.64, 27.9722, 0.55", "-101.646, 138.895, 30.2212, 0.55", "-109.58, 146.567, 32.4165, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-84.4143, 125.27, 25.9739, 0.28", "-90.9529, 131.61, 25.6563, 0.55", "-98.1558, 136.812, 23.9746, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_38", "dend_37", "dend_32", "dend_25", "dend_22", "dend_15", "dend_0", "dend_49", "dend_44", "dend_40", "dend_39", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_17", "dend_16", "dend_10", "dend_1", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_48", "dend_47", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_4", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_38", "dend_37", "dend_32", "dend_25", "dend_22", "dend_15", "dend_0", "dend_49", "dend_44", "dend_40", "dend_39", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_17", "dend_16", "dend_10", "dend_1", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_48", "dend_47", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_4", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_38", "dend_37", "dend_32", "dend_25", "dend_22", "dend_15", "dend_0", "axon_0", "dend_49", "dend_44", "dend_40", "dend_39", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_17", "dend_16", "dend_10", "dend_1", "axon_1", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_48", "dend_47", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_4", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "axon_1", "axon_1", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_NBC_2f018ce735_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_43
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, axon_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, axon_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.49999992974454743)
    connect dend_38(0), soma_0(0.49999992974454743)
    connect dend_37(0), soma_0(0.49999992974454743)
    connect dend_32(0), soma_0(0.49999992974454743)
    connect dend_25(0), soma_0(0.49999992974454743)
    connect dend_22(0), soma_0(0.49999992974454743)
    connect dend_15(0), soma_0(0.49999992974454743)
    connect dend_0(0), soma_0(0.49999992974454743)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.11709, 7.30639, -0.967776, 2.36862 ) }
    soma_0 { pt3dadd( -6.36745, 6.56762, -0.862279, 4.05465 ) }
    soma_0 { pt3dadd( -5.61782, 5.82885, -0.756782, 6.37159 ) }
    soma_0 { pt3dadd( -4.86818, 5.09008, -0.651285, 7.6682 ) }
    soma_0 { pt3dadd( -4.11855, 4.35131, -0.545788, 8.31963 ) }
    soma_0 { pt3dadd( -3.36891, 3.61254, -0.440291, 8.63962 ) }
    soma_0 { pt3dadd( -2.61928, 2.87377, -0.334794, 8.75226 ) }
    soma_0 { pt3dadd( -1.86965, 2.135, -0.229297, 8.73568 ) }
    soma_0 { pt3dadd( -1.12001, 1.39623, -0.1238, 8.76537 ) }
    soma_0 { pt3dadd( -0.370378, 0.657463, -0.0183025, 8.79506 ) }
    soma_0 { pt3dadd( 0.379256, -0.0813072, 0.0871946, 8.85046 ) }
    soma_0 { pt3dadd( 1.12889, -0.820077, 0.192692, 9.12539 ) }
    soma_0 { pt3dadd( 1.87852, -1.55885, 0.298189, 9.37848 ) }
    soma_0 { pt3dadd( 2.62816, -2.29762, 0.403686, 9.54524 ) }
    soma_0 { pt3dadd( 3.37779, -3.03639, 0.509183, 9.52778 ) }
    soma_0 { pt3dadd( 4.12743, -3.77516, 0.61468, 9.63906 ) }
    soma_0 { pt3dadd( 4.87706, -4.51393, 0.720177, 9.78204 ) }
    soma_0 { pt3dadd( 5.6267, -5.2527, 0.825674, 9.68621 ) }
    soma_0 { pt3dadd( 6.37633, -5.99147, 0.931171, 8.82442 ) }
    soma_0 { pt3dadd( 7.12596, -6.73024, 1.03667, 6.80231 ) }
    soma_0 { pt3dadd( 7.8756, -7.46901, 1.14217, 3.72742 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.66963, 8.31212, -5.40351, 1.39 ) }
    dend_43 { pt3dadd( -3.51825, 11.1505, -6.27895, 1.11 ) }
    dend_43 { pt3dadd( -4.25768, 13.6237, -7.04175, 1.11 ) }
    dend_43 { pt3dadd( -4.4672, 14.3245, -7.25789, 1.39 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.0996272, 6.47462, 2.21649, 1.39 ) }
    dend_38 { pt3dadd( 0.540036, 7.51204, 2.36352, 1.39 ) }
    dend_38 { pt3dadd( 2.05632, 9.63676, 2.37372, 1.11 ) }
    dend_38 { pt3dadd( 4.38391, 12.6173, 2.15053, 1.11 ) }
    dend_38 { pt3dadd( 8.04362, 16.869, 1.41754, 1.11 ) }
    dend_38 { pt3dadd( 9.87844, 18.789, 1.03891, 1.11 ) }
    dend_38 { pt3dadd( 12.4178, 21.2326, 0.476265, 1.11 ) }
    dend_38 { pt3dadd( 13.9638, 22.549, -0.00797262, 1.11 ) }
    dend_38 { pt3dadd( 15.1271, 23.4572, -0.677798, 1.11 ) }
    dend_38 { pt3dadd( 16.8177, 24.6822, -2.12352, 1.11 ) }
    dend_38 { pt3dadd( 17.9169, 25.5474, -3.41554, 1.11 ) }
    dend_38 { pt3dadd( 18.9265, 26.3998, -4.72728, 0.83 ) }
    dend_38 { pt3dadd( 20.7804, 28.0287, -7.13248, 0.83 ) }
    dend_38 { pt3dadd( 23.7718, 30.6759, -11.3521, 0.83 ) }
    dend_38 { pt3dadd( 25.2962, 32.067, -13.7239, 0.83 ) }
    dend_38 { pt3dadd( 26.2357, 32.9834, -15.3546, 0.83 ) }
    dend_38 { pt3dadd( 27.459, 34.2547, -17.7214, 0.83 ) }
    dend_38 { pt3dadd( 28.1773, 34.983, -19.1446, 1.39 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 7.99037, -3.85738, -7.17351, 0.83 ) }
    dend_37 { pt3dadd( 11.6349, -3.93139, -7.82793, 0.83 ) }
    dend_37 { pt3dadd( 14.2027, -4.0378, -8.28183, 0.55 ) }
    dend_37 { pt3dadd( 15.6425, -4.10507, -8.51905, 0.55 ) }
    dend_37 { pt3dadd( 19.2634, -4.29067, -8.98363, 0.55 ) }
    dend_37 { pt3dadd( 25.3486, -4.63308, -9.78961, 0.55 ) }
    dend_37 { pt3dadd( 31.5556, -5.04241, -10.5089, 0.55 ) }
    dend_37 { pt3dadd( 36.7285, -5.46156, -10.9881, 0.55 ) }
    dend_37 { pt3dadd( 39.3416, -5.70443, -11.1107, 0.28 ) }
    dend_37 { pt3dadd( 41.7075, -5.90208, -11.1399, 0.55 ) }
    dend_37 { pt3dadd( 45.5609, -6.14888, -11.0239, 0.55 ) }
    dend_37 { pt3dadd( 48.6754, -6.09193, -10.8356, 0.55 ) }
    dend_37 { pt3dadd( 51.8432, -5.96284, -10.5476, 0.28 ) }
    dend_37 { pt3dadd( 54.8716, -5.68289, -10.1468, 0.83 ) }
    dend_37 { pt3dadd( 58.5104, -5.19794, -9.635, 0.28 ) }
    dend_37 { pt3dadd( 61.5404, -4.72207, -9.19651, 0.55 ) }
    dend_37 { pt3dadd( 64.5741, -4.17369, -8.60497, 0.55 ) }
    dend_37 { pt3dadd( 66.7107, -3.75999, -8.24989, 0.55 ) }
    dend_37 { pt3dadd( 70.8122, -2.95768, -7.59594, 0.55 ) }
    dend_37 { pt3dadd( 72.4731, -2.62322, -7.3437, 0.55 ) }
    dend_37 { pt3dadd( 74.9256, -2.13919, -6.92494, 0.55 ) }
    dend_37 { pt3dadd( 78.6526, -1.50815, -6.23977, 0.55 ) }
    dend_37 { pt3dadd( 82.4081, -0.950027, -5.53615, 0.55 ) }
    dend_37 { pt3dadd( 84.1207, -0.665557, -5.26673, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.35038, -6.49288, -16.6335, 1.11 ) }
    dend_32 { pt3dadd( 6.99611, -6.3906, -18.977, 1.11 ) }
    dend_32 { pt3dadd( 9.31948, -6.0226, -27.409, 1.11 ) }
    dend_32 { pt3dadd( 11.1632, -5.73057, -34.1003, 1.11 ) }
    dend_32 { pt3dadd( 12.4638, -5.52456, -38.8206, 1.11 ) }
    dend_32 { pt3dadd( 13.0408, -5.43317, -40.9146, 1.11 ) }
    dend_32 { pt3dadd( 14.7199, -5.16722, -47.0084, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.70037, -9.38038, -13.7535, 1.94 ) }
    dend_25 { pt3dadd( 2.27281, -11.5776, -15.9758, 1.94 ) }
    dend_25 { pt3dadd( 1.45803, -15.7646, -20.2107, 1.94 ) }
    dend_25 { pt3dadd( 0.795307, -19.1702, -23.6553, 1.94 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 78/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.82962, 2.01212, 1.87649, 1.11 ) }
    dend_22 { pt3dadd( -8.89382, 1.23167, 2.85335, 1.11 ) }
    dend_22 { pt3dadd( -12.1887, 0.271596, 4.03257, 0.83 ) }
    dend_22 { pt3dadd( -14.3461, -0.482642, 4.804, 0.83 ) }
    dend_22 { pt3dadd( -20.1385, -2.47261, 7.07338, 0.83 ) }
    dend_22 { pt3dadd( -23.5488, -3.5405, 8.59022, 0.83 ) }
    dend_22 { pt3dadd( -30.2131, -5.57531, 11.8845, 0.83 ) }
    dend_22 { pt3dadd( -33.1103, -6.43032, 13.5217, 0.55 ) }
    dend_22 { pt3dadd( -36.2273, -7.12264, 15.5666, 0.55 ) }
    dend_22 { pt3dadd( -41.8458, -8.01999, 19.7253, 0.55 ) }
    dend_22 { pt3dadd( -45.2006, -8.55245, 22.5494, 0.55 ) }
    dend_22 { pt3dadd( -49.249, -9.24612, 25.9832, 0.55 ) }
    dend_22 { pt3dadd( -54.1471, -10.1292, 30.1187, 0.55 ) }
    dend_22 { pt3dadd( -60.2944, -11.5273, 35.3739, 0.55 ) }
    dend_22 { pt3dadd( -65.4267, -13.0045, 39.7867, 0.55 ) }
    dend_22 { pt3dadd( -69.1372, -14.5988, 43.0293, 0.55 ) }
    dend_22 { pt3dadd( -72.6674, -16.7006, 46.1202, 0.55 ) }
    dend_22 { pt3dadd( -75.1891, -18.6186, 48.3431, 0.55 ) }
    dend_22 { pt3dadd( -76.5199, -20.4027, 49.5371, 0.28 ) }
    dend_22 { pt3dadd( -76.969, -21.6517, 49.8507, 0.55 ) }
    dend_22 { pt3dadd( -77.4039, -25.9156, 49.9479, 0.28 ) }
    dend_22 { pt3dadd( -77.0244, -28.1037, 49.884, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( -88.3918, -32.3425, 59.2108, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.72962, 5.47712, -11.8535, 1.66 ) }
    dend_15 { pt3dadd( -13.4594, 5.90734, -11.8535, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 3/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.49962, 7.41962, 3.5965, 1.94 ) }
    dend_0 { pt3dadd( -9.57198, 9.21962, 3.5965, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 5/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.8756, -7.46901, 1.14217, 0.55 ) }
    axon_0 { pt3dadd( 18.5593, -17.9979, 1.14217, 0.55 ) }
    axon_0 { pt3dadd( 29.2431, -28.5268, 1.14217, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_43 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -4.4672, 14.3245, -7.25789, 0.83 ) }
    dend_49 { pt3dadd( -4.99484, 17.7579, -8.22286, 0.83 ) }
    dend_49 { pt3dadd( -5.69457, 24.4872, -10.0166, 0.83 ) }
    dend_49 { pt3dadd( -6.11779, 29.7217, -11.2478, 0.83 ) }
    dend_49 { pt3dadd( -6.42204, 35.8797, -12.4949, 0.83 ) }
    dend_49 { pt3dadd( -6.47235, 42.2391, -13.3373, 0.55 ) }
    dend_49 { pt3dadd( -6.41308, 44.7207, -13.5401, 0.55 ) }
    dend_49 { pt3dadd( -6.04492, 49.7511, -13.5565, 0.55 ) }
    dend_49 { pt3dadd( -5.52252, 54.3536, -12.9149, 0.55 ) }
    dend_49 { pt3dadd( -5.09727, 57.716, -12.0586, 0.55 ) }
    dend_49 { pt3dadd( -4.44249, 64.141, -9.76327, 0.83 ) }
    dend_49 { pt3dadd( -4.16461, 68.3905, -7.62458, 0.83 ) }
    dend_49 { pt3dadd( -4.08594, 70.8258, -6.15583, 0.28 ) }
    dend_49 { pt3dadd( -4.22622, 75.3482, -3.08685, 0.83 ) }
    dend_49 { pt3dadd( -4.40988, 77.4135, -1.66635, 0.55 ) }
    dend_49 { pt3dadd( -4.77561, 79.36, -0.460294, 0.83 ) }
    dend_49 { pt3dadd( -6.478, 85.415, 2.51246, 0.28 ) }
    dend_49 { pt3dadd( -6.57836, 85.8366, 2.76136, 0.55 ) }
    dend_49 { pt3dadd( -6.98699, 88.139, 4.25701, 0.28 ) }
    dend_49 { pt3dadd( -7.29575, 90.3781, 5.89614, 0.55 ) }
    dend_49 { pt3dadd( -7.54321, 92.631, 7.69133, 0.28 ) }
    dend_49 { pt3dadd( -7.77501, 94.3418, 9.0709, 0.55 ) }
    dend_49 { pt3dadd( -9.13073, 102.263, 15.2532, 0.55 ) }
    dend_49 { pt3dadd( -9.80287, 105.667, 17.7943, 0.55 ) }
    dend_49 { pt3dadd( -10.4333, 108.474, 19.802, 0.55 ) }
    dend_49 { pt3dadd( -10.957, 110.485, 21.0433, 0.55 ) }
    dend_49 { pt3dadd( -11.8378, 113.342, 22.429, 0.55 ) }
    dend_49 { pt3dadd( -12.7876, 115.707, 22.9589, 0.55 ) }
    dend_49 { pt3dadd( -15.0391, 119.987, 22.6291, 0.28 ) }
    dend_49 { pt3dadd( -16.5191, 122.554, 22.0878, 0.55 ) }
    dend_49 { pt3dadd( -18.3512, 125.396, 21.1377, 0.28 ) }
    dend_49 { pt3dadd( -19.3611, 126.753, 20.5392, 0.55 ) }
    dend_49 { pt3dadd( -21.5344, 129.315, 19.15, 0.28 ) }
    dend_49 { pt3dadd( -23.4569, 131.228, 17.9353, 0.28 ) }
    dend_49 { pt3dadd( -24.1174, 131.795, 17.5285, 0.55 ) }
    dend_49 { pt3dadd( -26.5466, 133.662, 16.0762, 0.28 ) }
    dend_49 { pt3dadd( -28.096, 134.741, 15.2919, 0.83 ) }
    dend_49 { pt3dadd( -29.2355, 135.488, 14.7759, 0.28 ) }
    dend_49 { pt3dadd( -29.6449, 135.721, 14.6128, 0.83 ) }
    dend_49 { pt3dadd( -33.0254, 147.277, 18.3428, 0.83 ) }
    dend_49 { pt3dadd( -34.9985, 159.102, 22.3441, 0.83 ) }
    dend_49 { pt3dadd( -37.5125, 170.272, 27.5357, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 50/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -4.4672, 14.3245, -7.25789, 0.83 ) }
    dend_44 { pt3dadd( -2.48967, 15.0547, -11.8964, 0.83 ) }
    dend_44 { pt3dadd( -1.41184, 15.467, -14.3569, 0.83 ) }
    dend_44 { pt3dadd( 0.4528, 16.1233, -18.5412, 0.83 ) }
    dend_44 { pt3dadd( 5.61942, 17.8209, -29.4561, 0.83 ) }
    dend_44 { pt3dadd( 9.4377, 19.098, -37.1697, 0.83 ) }
    dend_44 { pt3dadd( 10.5463, 19.4633, -39.3171, 0.28 ) }
    dend_44 { pt3dadd( 12.0221, 19.8396, -42.0908, 0.83 ) }
    dend_44 { pt3dadd( 12.7456, 19.9989, -43.471, 0.83 ) }
    dend_44 { pt3dadd( 14.3933, 20.3655, -46.9467, 0.83 ) }
    dend_44 { pt3dadd( 15.1237, 20.5361, -48.0155, 0.83 ) }
    dend_44 { pt3dadd( 17.4384, 21.3575, -50.311, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 62/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 28.1773, 34.983, -19.1446, 0.83 ) }
    dend_40 { pt3dadd( 30.6128, 35.958, -21.5972, 0.83 ) }
    dend_40 { pt3dadd( 31.9909, 36.451, -22.8219, 0.83 ) }
    dend_40 { pt3dadd( 34.6156, 37.2488, -24.9112, 0.83 ) }
    dend_40 { pt3dadd( 36.0647, 37.6655, -25.9791, 0.83 ) }
    dend_40 { pt3dadd( 38.2286, 38.2107, -27.4487, 0.83 ) }
    dend_40 { pt3dadd( 39.8356, 38.5919, -28.4609, 0.83 ) }
    dend_40 { pt3dadd( 41.9102, 39.002, -29.531, 0.83 ) }
    dend_40 { pt3dadd( 43.3339, 39.2456, -30.1851, 0.83 ) }
    dend_40 { pt3dadd( 44.9711, 39.5241, -30.8507, 0.83 ) }
    dend_40 { pt3dadd( 46.7131, 39.8478, -31.5243, 0.83 ) }
    dend_40 { pt3dadd( 47.8035, 40.088, -31.9219, 0.55 ) }
    dend_40 { pt3dadd( 48.6132, 40.246, -32.2233, 0.55 ) }
    dend_40 { pt3dadd( 51.169, 40.6163, -33.2765, 0.55 ) }
    dend_40 { pt3dadd( 52.0548, 40.7626, -33.6747, 0.55 ) }
    dend_40 { pt3dadd( 54.1118, 41.0688, -34.7343, 0.83 ) }
    dend_40 { pt3dadd( 55.4051, 41.2128, -35.4658, 0.83 ) }
    dend_40 { pt3dadd( 57.8722, 41.4562, -36.9785, 0.83 ) }
    dend_40 { pt3dadd( 59.469, 41.6267, -37.9895, 0.55 ) }
    dend_40 { pt3dadd( 61.4358, 41.8789, -39.2693, 0.55 ) }
    dend_40 { pt3dadd( 63.419, 42.1424, -40.585, 0.55 ) }
    dend_40 { pt3dadd( 65.6276, 42.4345, -42.0014, 0.83 ) }
    dend_40 { pt3dadd( 71.4874, 43.0823, -45.4337, 0.55 ) }
    dend_40 { pt3dadd( 73.1243, 43.2236, -46.2934, 0.55 ) }
    dend_40 { pt3dadd( 74.2047, 43.2651, -46.778, 0.28 ) }
    dend_40 { pt3dadd( 75.3047, 43.2255, -47.1684, 0.55 ) }
    dend_40 { pt3dadd( 77.9045, 43.0448, -47.7519, 0.55 ) }
    dend_40 { pt3dadd( 79.6949, 42.8519, -47.9209, 0.55 ) }
    dend_40 { pt3dadd( 81.3874, 42.5351, -47.8122, 0.55 ) }
    dend_40 { pt3dadd( 83.0888, 42.2503, -47.6563, 0.55 ) }
    dend_40 { pt3dadd( 85.0534, 42.0086, -47.4606, 1.11 ) }
    dend_40 { pt3dadd( 87.3701, 41.9059, -47.2794, 0.55 ) }
    dend_40 { pt3dadd( 88.9699, 41.9686, -47.2529, 0.28 ) }
    dend_40 { pt3dadd( 90.7058, 42.1435, -47.3685, 0.55 ) }
    dend_40 { pt3dadd( 91.9445, 42.3114, -47.5662, 0.28 ) }
    dend_40 { pt3dadd( 92.7158, 42.399, -47.7918, 0.55 ) }
    dend_40 { pt3dadd( 93.8998, 42.4904, -48.2765, 0.83 ) }
    dend_40 { pt3dadd( 96.2258, 42.5595, -49.521, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_40 { pt3dadd( 97.6264, 42.5179, -50.3241, 0.28 ) }
    dend_40 { pt3dadd( 100.607, 42.3528, -52.1232, 0.55 ) }
    dend_40 { pt3dadd( 103.945, 42.074, -54.126, 0.28 ) }
    dend_40 { pt3dadd( 105.131, 41.9564, -54.8562, 0.55 ) }
    dend_40 { pt3dadd( 106.82, 41.765, -55.8447, 0.55 ) }
    dend_40 { pt3dadd( 108.881, 41.5221, -56.9813, 0.55 ) }
    dend_40 { pt3dadd( 110.587, 41.3273, -57.8709, 0.28 ) }
    dend_40 { pt3dadd( 111.209, 41.2496, -58.1937, 0.55 ) }
    dend_40 { pt3dadd( 113.075, 41.0789, -58.978, 0.28 ) }
    dend_40 { pt3dadd( 114.813, 40.9255, -59.5327, 0.55 ) }
    dend_40 { pt3dadd( 116.167, 40.8197, -59.8469, 0.28 ) }
    dend_40 { pt3dadd( 116.766, 40.7981, -59.9904, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 28.1773, 34.983, -19.1446, 0.55 ) }
    dend_39 { pt3dadd( 29.3561, 35.7413, -21.645, 0.55 ) }
    dend_39 { pt3dadd( 31.2307, 36.9759, -25.4767, 0.55 ) }
    dend_39 { pt3dadd( 32.5231, 37.7753, -27.9978, 0.55 ) }
    dend_39 { pt3dadd( 34.3352, 38.9447, -31.2075, 0.55 ) }
    dend_39 { pt3dadd( 35.6599, 39.8385, -33.4112, 0.55 ) }
    dend_39 { pt3dadd( 37.3554, 41.0509, -36.0004, 0.55 ) }
    dend_39 { pt3dadd( 37.8749, 41.443, -36.6799, 0.55 ) }
    dend_39 { pt3dadd( 39.2319, 42.5116, -38.1087, 0.55 ) }
    dend_39 { pt3dadd( 41.9295, 44.6986, -40.2925, 0.55 ) }
    dend_39 { pt3dadd( 43.8612, 46.3949, -41.4138, 0.55 ) }
    dend_39 { pt3dadd( 46.7307, 48.9745, -42.3896, 0.55 ) }
    dend_39 { pt3dadd( 48.5151, 50.5722, -42.6128, 0.28 ) }
    dend_39 { pt3dadd( 49.715, 51.6001, -42.5532, 0.28 ) }
    dend_39 { pt3dadd( 53.4824, 54.7975, -41.74, 0.28 ) }
    dend_39 { pt3dadd( 54.2993, 55.4277, -41.4582, 0.83 ) }
    dend_39 { pt3dadd( 56.8772, 57.2382, -40.4149, 0.28 ) }
    dend_39 { pt3dadd( 58.6745, 58.3707, -39.8281, 0.83 ) }
    dend_39 { pt3dadd( 61.8979, 60.1003, -39.184, 0.28 ) }
    dend_39 { pt3dadd( 63.4165, 60.8589, -38.992, 0.55 ) }
    dend_39 { pt3dadd( 64.933, 61.5624, -39.0276, 0.28 ) }
    dend_39 { pt3dadd( 66.6722, 62.2888, -39.1589, 0.55 ) }
    dend_39 { pt3dadd( 71.3128, 63.9145, -40.0711, 0.55 ) }
    dend_39 { pt3dadd( 73.5647, 64.5502, -40.9328, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 14.7199, -5.16722, -47.0084, 0.55 ) }
    dend_34 { pt3dadd( 18.8893, -5.99821, -54.0293, 0.55 ) }
    dend_34 { pt3dadd( 20.5618, -6.4263, -56.8748, 1.11 ) }
    dend_34 { pt3dadd( 25.2056, -7.76176, -64.4177, 0.28 ) }
    dend_34 { pt3dadd( 27.2157, -8.39179, -67.5596, 0.55 ) }
    dend_34 { pt3dadd( 28.9749, -8.94954, -70.2123, 0.55 ) }
    dend_34 { pt3dadd( 30.8985, -9.48252, -73.0558, 0.28 ) }
    dend_34 { pt3dadd( 33.0632, -10.0827, -76.132, 1.11 ) }
    dend_34 { pt3dadd( 35.5413, -10.5604, -79.5931, 0.55 ) }
    dend_34 { pt3dadd( 37.9823, -10.8236, -82.7971, 0.28 ) }
    dend_34 { pt3dadd( 38.5785, -10.8399, -83.6478, 1.11 ) }
    dend_34 { pt3dadd( 41.9216, -10.646, -88.6421, 0.55 ) }
    dend_34 { pt3dadd( 44.6103, -10.1756, -92.7888, 0.28 ) }
    dend_34 { pt3dadd( 46.5481, -9.6509, -95.8371, 0.83 ) }
    dend_34 { pt3dadd( 48.0578, -9.13802, -98.4157, 0.83 ) }
    dend_34 { pt3dadd( 51.138, -8.00068, -103.838, 0.55 ) }
    dend_34 { pt3dadd( 51.8424, -7.7941, -105.077, 0.83 ) }
    dend_34 { pt3dadd( 55.3857, -6.92644, -111.183, 0.28 ) }
    dend_34 { pt3dadd( 56.9248, -6.55592, -113.829, 0.83 ) }
    dend_34 { pt3dadd( 59.6954, -5.98364, -118.591, 0.28 ) }
    dend_34 { pt3dadd( 60.6387, -5.79887, -120.202, 1.11 ) }
    dend_34 { pt3dadd( 68.4659, -4.56404, -133.181, 0.28 ) }
    dend_34 { pt3dadd( 68.8074, -4.52439, -133.752, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.7199, -5.16722, -47.0084, 0.28 ) }
    dend_33 { pt3dadd( 14.5372, -4.10247, -49.523, 0.28 ) }
    dend_33 { pt3dadd( 14.4916, -3.74937, -50.3229, 0.55 ) }
    dend_33 { pt3dadd( 13.9809, 0.339799, -58.9706, 0.28 ) }
    dend_33 { pt3dadd( 13.9518, 0.465156, -59.2223, 0.55 ) }
    dend_33 { pt3dadd( 13.7526, 1.15451, -60.5746, 0.28 ) }
    dend_33 { pt3dadd( 13.4097, 1.9248, -62.131, 0.55 ) }
    dend_33 { pt3dadd( 11.8563, 4.68312, -67.8052, 0.28 ) }
    dend_33 { pt3dadd( 11.5623, 5.11008, -68.7819, 0.55 ) }
    dend_33 { pt3dadd( 9.63924, 7.57281, -74.57, 0.28 ) }
    dend_33 { pt3dadd( 9.30053, 7.97851, -75.5601, 1.11 ) }
    dend_33 { pt3dadd( 6.95367, 10.5984, -82.2412, 0.28 ) }
    dend_33 { pt3dadd( 6.29741, 11.2678, -84.0324, 0.83 ) }
    dend_33 { pt3dadd( 3.169, 14.1303, -92.1226, 0.83 ) }
    dend_33 { pt3dadd( 1.89614, 15.2762, -95.6202, 0.28 ) }
    dend_33 { pt3dadd( 1.47895, 15.6691, -96.9122, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 75/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 0.795307, -19.1702, -23.6553, 1.11 ) }
    dend_29 { pt3dadd( 1.31091, -24.4592, -24.3865, 1.11 ) }
    dend_29 { pt3dadd( 1.82042, -29.6857, -25.109, 1.11 ) }
    dend_29 { pt3dadd( 2.10779, -32.6336, -25.5165, 1.11 ) }
    dend_29 { pt3dadd( 2.51218, -36.7819, -26.09, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.795307, -19.1702, -23.6553, 1.11 ) }
    dend_26 { pt3dadd( -0.0340262, -21.0504, -35.5683, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 82/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -88.3918, -32.3425, 59.2108, 0.55 ) }
    dend_24 { pt3dadd( -99.9365, -37.1205, 67.0059, 0.55 ) }
    dend_24 { pt3dadd( -110.283, -42.9864, 75.7341, 0.55 ) }
    dend_24 { pt3dadd( -120.227, -50.7349, 83.5498, 0.55 ) }
    dend_24 { pt3dadd( -128.132, -57.4807, 94.0379, 0.55 ) }
    dend_24 { pt3dadd( -137.869, -62.5305, 103.855, 0.55 ) }
    dend_24 { pt3dadd( -145.015, -66.0223, 116.185, 0.55 ) }
    dend_24 { pt3dadd( -151.255, -69.6921, 128.948, 0.55 ) }
    dend_24 { pt3dadd( -155.18, -71.6177, 142.936, 0.55 ) }
    dend_24 { pt3dadd( -159.283, -75.748, 156.407, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -88.3918, -32.3425, 59.2108, 0.28 ) }
    dend_23 { pt3dadd( -96.174, -35.6111, 64.5847, 0.55 ) }
    dend_23 { pt3dadd( -104.873, -37.7451, 68.989, 0.55 ) }
    dend_23 { pt3dadd( -113.852, -39.4394, 72.9864, 0.55 ) }
    dend_23 { pt3dadd( -122.405, -41.7741, 77.5777, 0.55 ) }
    dend_23 { pt3dadd( -131.22, -45.2287, 80.8584, 0.55 ) }
    dend_23 { pt3dadd( -140.371, -48.1992, 83.6094, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.4594, 5.90734, -11.8535, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_17 { pt3dadd( -18.1901, 4.71828, -21.3611, 1.11 ) }
    dend_17 { pt3dadd( -19.6026, 4.36322, -24.2001, 1.66 ) }
    dend_17 { pt3dadd( -21.3789, 3.91675, -27.77, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 3/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.4594, 5.90734, -11.8535, 0.83 ) }
    dend_16 { pt3dadd( -15.6089, 8.68148, -19.7288, 0.83 ) }
    dend_16 { pt3dadd( -16.5981, 10.1542, -23.5437, 0.83 ) }
    dend_16 { pt3dadd( -18.8079, 13.6329, -32.1324, 0.83 ) }
    dend_16 { pt3dadd( -20.6272, 16.6694, -39.2434, 0.83 ) }
    dend_16 { pt3dadd( -21.6571, 18.366, -43.1161, 0.83 ) }
    dend_16 { pt3dadd( -23.1685, 20.8862, -48.6555, 0.83 ) }
    dend_16 { pt3dadd( -24.6048, 23.435, -53.7958, 0.55 ) }
    dend_16 { pt3dadd( -25.4005, 24.9642, -56.5336, 1.39 ) }
    dend_16 { pt3dadd( -26.4966, 27.0531, -59.8646, 0.55 ) }
    dend_16 { pt3dadd( -26.9927, 27.9467, -61.1993, 0.83 ) }
    dend_16 { pt3dadd( -28.3305, 30.3708, -65.1165, 0.28 ) }
    dend_16 { pt3dadd( -28.8789, 31.366, -66.8001, 0.83 ) }
    dend_16 { pt3dadd( -30.4983, 34.4773, -72.2408, 0.28 ) }
    dend_16 { pt3dadd( -30.7909, 35.1245, -73.4584, 0.83 ) }
    dend_16 { pt3dadd( -31.7677, 37.484, -78.2037, 0.83 ) }
    dend_16 { pt3dadd( -33.4238, 41.7466, -87.39, 0.28 ) }
    dend_16 { pt3dadd( -33.6404, 42.3725, -88.8181, 0.83 ) }
    dend_16 { pt3dadd( -34.3498, 44.5876, -94.023, 0.28 ) }
    dend_16 { pt3dadd( -35.3471, 47.3639, -100.924, 0.28 ) }
    dend_16 { pt3dadd( -35.544, 47.8716, -102.223, 0.83 ) }
    dend_16 { pt3dadd( -35.9438, 48.8255, -104.648, 0.83 ) }
    dend_16 { pt3dadd( -37.7918, 52.4082, -114.204, 0.28 ) }
    dend_16 { pt3dadd( -37.9524, 52.6765, -114.963, 0.55 ) }
    dend_16 { pt3dadd( -40.1754, 56.0104, -124.819, 0.28 ) }
    dend_16 { pt3dadd( -40.721, 56.784, -127.084, 0.55 ) }
    dend_16 { pt3dadd( -41.3485, 57.667, -129.679, 0.55 ) }
    dend_16 { pt3dadd( -42.333, 59.0001, -133.663, 0.28 ) }
    dend_16 { pt3dadd( -43.4711, 60.2525, -137.895, 0.55 ) }
    dend_16 { pt3dadd( -45.0832, 62.1709, -144.381, 0.28 ) }
    dend_16 { pt3dadd( -45.2201, 62.3541, -144.987, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.57198, 9.21962, 3.5965, 1.11 ) }
    dend_10 { pt3dadd( -13.1662, 11.5306, 4.10076, 1.11 ) }
    dend_10 { pt3dadd( -14.3781, 12.3707, 4.3074, 0.83 ) }
    dend_10 { pt3dadd( -15.5245, 13.2659, 4.62835, 1.66 ) }
    dend_10 { pt3dadd( -18.399, 15.718, 5.61723, 0.83 ) }
    dend_10 { pt3dadd( -19.4697, 16.6834, 6.00273, 0.83 ) }
    dend_10 { pt3dadd( -24.5722, 21.5023, 7.99316, 0.83 ) }
    dend_10 { pt3dadd( -26.1315, 23.0911, 8.65628, 0.83 ) }
    dend_10 { pt3dadd( -29.3373, 26.4035, 10.0469, 1.11 ) }
    dend_10 { pt3dadd( -30.6208, 27.7767, 10.662, 0.83 ) }
    dend_10 { pt3dadd( -33.0594, 30.5276, 12.0036, 0.83 ) }
    dend_10 { pt3dadd( -35.3624, 33.1986, 13.3532, 0.83 ) }
    dend_10 { pt3dadd( -37.549, 35.6784, 14.7308, 0.83 ) }
    dend_10 { pt3dadd( -39.7067, 38.0862, 15.9147, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.57198, 9.21962, 3.5965, 0.83 ) }
    dend_1 { pt3dadd( -10.3843, 12.912, 7.71123, 0.83 ) }
    dend_1 { pt3dadd( -11.6027, 18.4501, 13.8829, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.2431, -28.5268, 1.14217, 0.55 ) }
    axon_1 { pt3dadd( 39.9268, -39.0557, 1.14217, 0.55 ) }
    axon_1 { pt3dadd( 50.6106, -49.5846, 1.14217, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 54/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -37.5125, 170.272, 27.5357, 0.83 ) }
    dend_51 { pt3dadd( -36.6635, 182.047, 30.7796, 0.83 ) }
    dend_51 { pt3dadd( -33.9752, 193.819, 32.9835, 0.83 ) }
    dend_51 { pt3dadd( -31.827, 205.286, 36.6246, 0.83 ) }
    dend_51 { pt3dadd( -28.693, 216.243, 40.9211, 0.83 ) }
    dend_51 { pt3dadd( -24.8457, 227.186, 44.6767, 0.83 ) }
    dend_51 { pt3dadd( -21.6841, 237.305, 50.505, 0.83 ) }
    dend_51 { pt3dadd( -17.3105, 246.444, 56.9966, 0.83 ) }
    dend_51 { pt3dadd( -13.4632, 256.914, 61.7918, 0.83 ) }
    dend_51 { pt3dadd( -9.66606, 267.984, 65.261, 0.83 ) }
    dend_51 { pt3dadd( -5.23889, 279.407, 66.1368, 0.83 ) }
    dend_51 { pt3dadd( -1.37158, 291.087, 65.3331, 0.83 ) }
    dend_51 { pt3dadd( 2.01805, 302.858, 63.784, 0.83 ) }
    dend_51 { pt3dadd( 2.98906, 314.883, 61.0484, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 68/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -37.5125, 170.272, 27.5357, 0.83 ) }
    dend_50 { pt3dadd( -44.1515, 176.023, 25.2317, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 70/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 17.4384, 21.3575, -50.311, 0.55 ) }
    dend_46 { pt3dadd( 20.6873, 23.2673, -50.024, 0.55 ) }
    dend_46 { pt3dadd( 21.7078, 23.8672, -49.9339, 0.83 ) }
    dend_46 { pt3dadd( 23.2359, 24.7655, -49.7989, 0.55 ) }
    dend_46 { pt3dadd( 24.4002, 25.4499, -49.6961, 0.83 ) }
    dend_46 { pt3dadd( 27.1536, 27.0685, -49.4529, 0.55 ) }
    dend_46 { pt3dadd( 30.3858, 28.9685, -49.1674, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 77/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 17.4384, 21.3575, -50.311, 0.55 ) }
    dend_45 { pt3dadd( 17.4717, 21.4143, -50.7266, 0.55 ) }
    dend_45 { pt3dadd( 17.6941, 21.7932, -53.5001, 0.55 ) }
    dend_45 { pt3dadd( 17.8983, 22.1413, -56.0475, 0.55 ) }
    dend_45 { pt3dadd( 17.9127, 22.1657, -56.2265, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 116.766, 40.7981, -59.9904, 0.28 ) }
    dend_42 { pt3dadd( 120.959, 42.3776, -60.2321, 0.28 ) }
    dend_42 { pt3dadd( 123.439, 43.2902, -60.3551, 0.28 ) }
    dend_42 { pt3dadd( 128.096, 45.0183, -60.5385, 0.28 ) }
    dend_42 { pt3dadd( 130.821, 46.0114, -60.4895, 0.55 ) }
    dend_42 { pt3dadd( 133.144, 46.8576, -60.4477, 0.28 ) }
    dend_42 { pt3dadd( 134.459, 47.3368, -60.424, 0.55 ) }
    dend_42 { pt3dadd( 136.255, 48.0283, -60.3808, 0.28 ) }
    dend_42 { pt3dadd( 137.617, 48.5341, -60.2318, 0.55 ) }
    dend_42 { pt3dadd( 140.19, 49.4312, -59.2483, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 116.766, 40.7981, -59.9904, 0.28 ) }
    dend_41 { pt3dadd( 118.873, 38.9641, -60.2701, 0.28 ) }
    dend_41 { pt3dadd( 119.251, 38.642, -60.2458, 0.55 ) }
    dend_41 { pt3dadd( 121.539, 36.7063, -59.8562, 0.28 ) }
    dend_41 { pt3dadd( 122.288, 36.0826, -59.6873, 0.55 ) }
    dend_41 { pt3dadd( 124.349, 34.4676, -59.3733, 0.28 ) }
    dend_41 { pt3dadd( 125.252, 33.8182, -59.2404, 0.55 ) }
    dend_41 { pt3dadd( 127.942, 32.2413, -58.8134, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_41 { pt3dadd( 128.622, 31.8581, -58.6965, 0.28 ) }
    dend_41 { pt3dadd( 128.924, 31.7052, -58.6367, 0.55 ) }
    dend_41 { pt3dadd( 131.803, 30.1256, -57.8948, 0.28 ) }
    dend_41 { pt3dadd( 133.321, 29.1392, -57.3011, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 4/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 68.8074, -4.52439, -133.752, 0.55 ) }
    dend_36 { pt3dadd( 71.3763, -2.54198, -139.851, 0.55 ) }
    dend_36 { pt3dadd( 72.3098, -1.90962, -141.836, 1.11 ) }
    dend_36 { pt3dadd( 78.064, 1.68917, -153.23, 0.28 ) }
    dend_36 { pt3dadd( 79.1105, 2.30339, -155.195, 0.83 ) }
    dend_36 { pt3dadd( 82.5791, 4.28494, -161.475, 0.28 ) }
    dend_36 { pt3dadd( 83.2748, 4.65396, -162.675, 0.83 ) }
    dend_36 { pt3dadd( 85.6818, 5.83905, -166.429, 0.28 ) }
    dend_36 { pt3dadd( 86.1097, 6.03033, -167.046, 0.83 ) }
    dend_36 { pt3dadd( 88.3453, 6.73276, -169.473, 0.28 ) }
    dend_36 { pt3dadd( 88.7446, 6.84595, -169.883, 0.55 ) }
    dend_36 { pt3dadd( 91.8289, 7.42414, -172.903, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 68.8074, -4.52439, -133.752, 0.28 ) }
    dend_35 { pt3dadd( 70.5148, -5.70691, -134.628, 0.28 ) }
    dend_35 { pt3dadd( 71.815, -6.6674, -135.28, 0.28 ) }
    dend_35 { pt3dadd( 71.9944, -6.78792, -135.371, 0.55 ) }
    dend_35 { pt3dadd( 72.9549, -7.38435, -135.835, 0.28 ) }
    dend_35 { pt3dadd( 73.2431, -7.5355, -135.971, 0.55 ) }
    dend_35 { pt3dadd( 76.7748, -9.17546, -137.476, 0.28 ) }
    dend_35 { pt3dadd( 77.4601, -9.46942, -137.743, 0.83 ) }
    dend_35 { pt3dadd( 80.7702, -10.8739, -139.062, 0.28 ) }
    dend_35 { pt3dadd( 81.6523, -11.2256, -139.408, 0.55 ) }
    dend_35 { pt3dadd( 85.2605, -12.5355, -140.788, 0.28 ) }
    dend_35 { pt3dadd( 87.9224, -13.406, -141.728, 0.28 ) }
    dend_35 { pt3dadd( 88.6514, -13.5913, -141.933, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.51218, -36.7819, -26.09, 0.83 ) }
    dend_31 { pt3dadd( 2.11493, -40.4592, -27.5645, 0.83 ) }
    dend_31 { pt3dadd( 1.93693, -42.6825, -28.3059, 0.83 ) }
    dend_31 { pt3dadd( 1.8398, -46.2987, -29.4324, 0.83 ) }
    dend_31 { pt3dadd( 1.86239, -46.8088, -29.5879, 0.83 ) }
    dend_31 { pt3dadd( 2.2845, -51.1421, -30.9049, 0.83 ) }
    dend_31 { pt3dadd( 2.48866, -52.9782, -31.4442, 0.83 ) }
    dend_31 { pt3dadd( 2.85636, -55.7243, -32.0774, 0.83 ) }
    dend_31 { pt3dadd( 3.60777, -61.5905, -33.1912, 0.83 ) }
    dend_31 { pt3dadd( 4.07409, -67.0462, -33.9185, 0.83 ) }
    dend_31 { pt3dadd( 4.16487, -72.444, -34.5786, 0.83 ) }
    dend_31 { pt3dadd( 4.0313, -74.9372, -34.8467, 0.83 ) }
    dend_31 { pt3dadd( 3.5655, -78.7299, -35.2162, 0.83 ) }
    dend_31 { pt3dadd( 2.89953, -81.7749, -35.4726, 0.83 ) }
    dend_31 { pt3dadd( 0.965847, -87.3079, -35.8707, 0.83 ) }
    dend_31 { pt3dadd( -0.779909, -91.077, -36.1849, 0.83 ) }
    dend_31 { pt3dadd( -1.67173, -92.816, -36.452, 0.83 ) }
    dend_31 { pt3dadd( -3.13033, -95.8055, -37.2344, 0.83 ) }
    dend_31 { pt3dadd( -4.14471, -98.0301, -38.0411, 0.83 ) }
    dend_31 { pt3dadd( -5.06861, -100.284, -38.9843, 0.83 ) }
    dend_31 { pt3dadd( -6.23284, -103.419, -40.41, 0.55 ) }
    dend_31 { pt3dadd( -7.35173, -106.86, -41.803, 0.55 ) }
    dend_31 { pt3dadd( -8.33021, -110.191, -43.1017, 0.55 ) }
    dend_31 { pt3dadd( -8.91503, -112.683, -44.0518, 0.28 ) }
    dend_31 { pt3dadd( -9.11541, -113.662, -44.4314, 0.55 ) }
    dend_31 { pt3dadd( -9.39141, -115.058, -45.0017, 0.28 ) }
    dend_31 { pt3dadd( -10.1945, -118.878, -46.6403, 0.55 ) }
    dend_31 { pt3dadd( -10.3747, -119.651, -46.968, 0.55 ) }
    dend_31 { pt3dadd( -11.0919, -122.754, -48.4521, 0.55 ) }
    dend_31 { pt3dadd( -11.6231, -125.354, -49.8536, 0.55 ) }
    dend_31 { pt3dadd( -11.9016, -126.832, -50.6956, 0.55 ) }
    dend_31 { pt3dadd( -12.1966, -128.566, -51.7282, 0.55 ) }
    dend_31 { pt3dadd( -12.729, -131.574, -53.5953, 0.55 ) }
    dend_31 { pt3dadd( -12.9402, -132.621, -54.2128, 0.55 ) }
    dend_31 { pt3dadd( -13.4896, -134.956, -55.5164, 0.28 ) }
    dend_31 { pt3dadd( -13.7063, -135.778, -55.9401, 0.55 ) }
    dend_31 { pt3dadd( -14.4957, -138.751, -57.4233, 0.55 ) }
    dend_31 { pt3dadd( -14.6977, -139.679, -57.9072, 0.55 ) }
    dend_31 { pt3dadd( -15.0147, -141.011, -58.5405, 0.83 ) }
    dend_31 { pt3dadd( -15.5581, -143.246, -59.5753, 0.28 ) }
    dend_31 { pt3dadd( -16.1225, -145.249, -60.4217, 0.28 ) }
    dend_31 { pt3dadd( -16.4802, -146.514, -60.9574, 0.55 ) }
    dend_31 { pt3dadd( -17.1874, -149.049, -61.9533, 0.55 ) }
    dend_31 { pt3dadd( -17.8153, -151.641, -62.9759, 0.55 ) }
    dend_31 { pt3dadd( -18.2644, -153.552, -63.715, 1.11 ) }
    dend_31 { pt3dadd( -18.8941, -155.955, -64.6601, 0.55 ) }
    dend_31 { pt3dadd( -19.477, -157.976, -65.4833, 0.28 ) }
    dend_31 { pt3dadd( -19.9622, -159.521, -66.0908, 0.55 ) }
    dend_31 { pt3dadd( -20.6272, -161.38, -66.7146, 0.28 ) }
    dend_31 { pt3dadd( -20.8721, -162.074, -66.9283, 0.55 ) }
    dend_31 { pt3dadd( -21.8029, -164.468, -67.4912, 0.28 ) }
    dend_31 { pt3dadd( -22.2625, -165.671, -67.7708, 0.83 ) }
    dend_31 { pt3dadd( -23.4132, -168.614, -68.3501, 0.28 ) }
    dend_31 { pt3dadd( -24.4907, -171.41, -68.903, 0.83 ) }
    dend_31 { pt3dadd( -25.2515, -173.389, -69.2705, 0.28 ) }
    dend_31 { pt3dadd( -25.812, -174.953, -69.5993, 0.55 ) }
    dend_31 { pt3dadd( -26.7227, -177.654, -70.21, 0.55 ) }
    dend_31 { pt3dadd( -27.4967, -180.129, -70.9347, 0.55 ) }
    dend_31 { pt3dadd( -28.0473, -181.956, -71.5671, 0.28 ) }
    dend_31 { pt3dadd( -28.3119, -182.919, -71.9502, 0.83 ) }
    dend_31 { pt3dadd( -28.7633, -184.381, -72.5496, 0.28 ) }
    dend_31 { pt3dadd( -28.9753, -185.014, -72.8078, 0.83 ) }
    dend_31 { pt3dadd( -30.096, -187.958, -73.9924, 0.28 ) }
    dend_31 { pt3dadd( -30.9155, -190.041, -74.8328, 0.28 ) }
    dend_31 { pt3dadd( -31.1556, -190.704, -75.1149, 0.83 ) }
    dend_31 { pt3dadd( -31.8227, -192.81, -76.0254, 0.28 ) }
    dend_31 { pt3dadd( -31.8774, -193.025, -76.1235, 0.83 ) }
    dend_31 { pt3dadd( -32.2394, -194.94, -77.0416, 0.28 ) }
    dend_31 { pt3dadd( -32.3699, -196.209, -77.6888, 0.83 ) }
    dend_31 { pt3dadd( -32.5098, -198.836, -79.0901, 0.28 ) }
    dend_31 { pt3dadd( -32.5212, -200.377, -79.8953, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( -32.4112, -203.092, -81.2437, 0.28 ) }
    dend_31 { pt3dadd( -32.3622, -204.422, -81.9189, 0.55 ) }
    dend_31 { pt3dadd( -32.215, -207.943, -83.6852, 0.28 ) }
    dend_31 { pt3dadd( -32.2056, -208.21, -83.8182, 0.55 ) }
    dend_31 { pt3dadd( -32.1716, -209.492, -84.348, 0.28 ) }
    dend_31 { pt3dadd( -32.1533, -210.402, -84.6841, 0.55 ) }
    dend_31 { pt3dadd( -32.1331, -212.275, -85.1943, 0.28 ) }
    dend_31 { pt3dadd( -32.1339, -213.245, -85.3985, 0.28 ) }
    dend_31 { pt3dadd( -32.1413, -213.581, -85.4226, 0.83 ) }
    dend_31 { pt3dadd( -32.2872, -215.602, -85.6143, 0.28 ) }
    dend_31 { pt3dadd( -32.3757, -216.307, -85.6843, 0.28 ) }
    dend_31 { pt3dadd( -32.4453, -216.852, -85.7215, 0.55 ) }
    dend_31 { pt3dadd( -32.5592, -217.836, -85.7274, 0.28 ) }
    dend_31 { pt3dadd( -32.6749, -218.592, -85.7604, 0.55 ) }
    dend_31 { pt3dadd( -33.052, -220.823, -85.9628, 0.28 ) }
    dend_31 { pt3dadd( -33.1353, -221.335, -86.0611, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 16/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.51218, -36.7819, -26.09, 0.55 ) }
    dend_30 { pt3dadd( 6.3428, -40.2011, -25.961, 0.55 ) }
    dend_30 { pt3dadd( 10.4518, -43.942, -25.9682, 0.55 ) }
    dend_30 { pt3dadd( 14.0969, -46.9914, -25.9054, 0.55 ) }
    dend_30 { pt3dadd( 17.2533, -49.6321, -25.851, 0.55 ) }
    dend_30 { pt3dadd( 19.6382, -51.6272, -25.8098, 0.28 ) }
    dend_30 { pt3dadd( 22.8239, -54.2923, -25.7549, 0.55 ) }
    dend_30 { pt3dadd( 24.8991, -56.0414, -25.5656, 0.28 ) }
    dend_30 { pt3dadd( 28.0218, -58.8299, -25.3606, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.0340262, -21.0504, -35.5683, 0.83 ) }
    dend_28 { pt3dadd( -3.94426, -22.0443, -37.8453, 0.83 ) }
    dend_28 { pt3dadd( -6.73094, -22.7488, -39.7492, 0.83 ) }
    dend_28 { pt3dadd( -9.95629, -23.4955, -42.8126, 0.83 ) }
    dend_28 { pt3dadd( -11.5998, -23.8368, -44.5941, 0.55 ) }
    dend_28 { pt3dadd( -12.8072, -24.1216, -46.0279, 0.28 ) }
    dend_28 { pt3dadd( -13.5772, -24.3222, -46.9853, 0.83 ) }
    dend_28 { pt3dadd( -16.6523, -25.2417, -51.1266, 0.83 ) }
    dend_28 { pt3dadd( -20.8452, -26.4999, -57.2984, 0.83 ) }
    dend_28 { pt3dadd( -22.5968, -27.034, -59.9745, 0.83 ) }
    dend_28 { pt3dadd( -24.269, -27.5767, -62.5753, 0.83 ) }
    dend_28 { pt3dadd( -27.3197, -28.5831, -67.1308, 0.28 ) }
    dend_28 { pt3dadd( -27.6897, -28.7069, -67.6319, 1.11 ) }
    dend_28 { pt3dadd( -29.9145, -29.438, -70.1087, 0.28 ) }
    dend_28 { pt3dadd( -30.236, -29.5162, -70.3965, 0.55 ) }
    dend_28 { pt3dadd( -33.1305, -29.979, -72.802, 0.28 ) }
    dend_28 { pt3dadd( -34.6982, -30.1478, -74.0194, 0.83 ) }
    dend_28 { pt3dadd( -36.9292, -30.4144, -75.7818, 0.55 ) }
    dend_28 { pt3dadd( -39.1481, -30.7126, -77.5222, 0.55 ) }
    dend_28 { pt3dadd( -44.9939, -31.57, -82.0183, 0.28 ) }
    dend_28 { pt3dadd( -45.6984, -31.6773, -82.5767, 1.11 ) }
    dend_28 { pt3dadd( -49.4298, -32.228, -85.6647, 0.83 ) }
    dend_28 { pt3dadd( -54.5851, -33.0727, -90.1631, 0.28 ) }
    dend_28 { pt3dadd( -56.041, -33.3444, -91.4512, 0.28 ) }
    dend_28 { pt3dadd( -56.5065, -33.4449, -91.8643, 0.55 ) }
    dend_28 { pt3dadd( -60.2698, -34.3183, -95.1794, 0.28 ) }
    dend_28 { pt3dadd( -62.1341, -34.7344, -96.7117, 0.55 ) }
    dend_28 { pt3dadd( -65.5906, -35.4407, -99.3443, 0.28 ) }
    dend_28 { pt3dadd( -65.9629, -35.5283, -99.5725, 0.55 ) }
    dend_28 { pt3dadd( -68.8978, -36.3154, -101.125, 0.28 ) }
    dend_28 { pt3dadd( -69.5067, -36.4916, -101.42, 0.55 ) }
    dend_28 { pt3dadd( -73.1278, -37.6016, -102.998, 0.28 ) }
    dend_28 { pt3dadd( -74.13, -37.9402, -103.406, 0.83 ) }
    dend_28 { pt3dadd( -80.8602, -40.3857, -106.037, 0.28 ) }
    dend_28 { pt3dadd( -82.3285, -40.9404, -106.643, 0.55 ) }
    dend_28 { pt3dadd( -88.2417, -43.2599, -109.204, 0.28 ) }
    dend_28 { pt3dadd( -89.7104, -43.8568, -109.981, 1.11 ) }
    dend_28 { pt3dadd( -97.59, -47.1367, -114.543, 0.28 ) }
    dend_28 { pt3dadd( -99.0628, -47.7846, -115.548, 0.83 ) }
    dend_28 { pt3dadd( -101.583, -49.0076, -117.456, 0.28 ) }
    dend_28 { pt3dadd( -102.961, -49.709, -118.434, 0.83 ) }
    dend_28 { pt3dadd( -110.835, -53.8658, -123.581, 0.28 ) }
    dend_28 { pt3dadd( -113.179, -55.0897, -124.928, 1.11 ) }
    dend_28 { pt3dadd( -120.396, -58.7321, -128.533, 0.28 ) }
    dend_28 { pt3dadd( -122.43, -59.7565, -129.326, 0.83 ) }
    dend_28 { pt3dadd( -128.695, -63.0003, -130.772, 0.28 ) }
    dend_28 { pt3dadd( -129.478, -63.403, -130.827, 0.83 ) }
    dend_28 { pt3dadd( -133.446, -65.4548, -129.711, 0.28 ) }
    dend_28 { pt3dadd( -134.259, -65.8582, -129.375, 0.55 ) }
    dend_28 { pt3dadd( -136.759, -66.9667, -127.631, 0.28 ) }
    dend_28 { pt3dadd( -137.708, -67.3887, -127.182, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.0340262, -21.0504, -35.5683, 0.55 ) }
    dend_27 { pt3dadd( 0.213139, -21.3359, -37.3003, 0.55 ) }
    dend_27 { pt3dadd( 0.828307, -22.3879, -42.7207, 0.55 ) }
    dend_27 { pt3dadd( 1.33496, -23.6625, -48.5435, 0.55 ) }
    dend_27 { pt3dadd( 1.56445, -24.4413, -51.8284, 0.55 ) }
    dend_27 { pt3dadd( 1.67782, -24.9748, -54.0458, 0.55 ) }
    dend_27 { pt3dadd( 1.73184, -25.3169, -55.4417, 0.55 ) }
    dend_27 { pt3dadd( 1.80861, -26.032, -58.2469, 0.55 ) }
    dend_27 { pt3dadd( 1.75543, -26.3979, -59.3773, 0.28 ) }
    dend_27 { pt3dadd( 1.63849, -26.8332, -60.564, 0.83 ) }
    dend_27 { pt3dadd( 1.41582, -27.7252, -62.9998, 0.83 ) }
    dend_27 { pt3dadd( 1.21023, -29.0828, -66.7053, 0.28 ) }
    dend_27 { pt3dadd( 1.19682, -29.2196, -67.0799, 0.83 ) }
    dend_27 { pt3dadd( 1.1724, -30.0105, -69.0587, 0.28 ) }
    dend_27 { pt3dadd( 1.17593, -30.2671, -69.6492, 0.55 ) }
    dend_27 { pt3dadd( 1.18347, -31.5027, -72.1274, 0.28 ) }
    dend_27 { pt3dadd( 1.18685, -31.6846, -72.4349, 0.83 ) }
    dend_27 { pt3dadd( 1.18892, -32.4347, -73.6684, 0.28 ) }
    dend_27 { pt3dadd( 1.15388, -33.0627, -74.7963, 0.55 ) }
    dend_27 { pt3dadd( 1.00137, -34.0461, -76.646, 0.28 ) }
    dend_27 { pt3dadd( 0.938677, -34.2545, -77.1127, 0.83 ) }
    dend_27 { pt3dadd( 0.558909, -35.1999, -79.3558, 0.28 ) }
    dend_27 { pt3dadd( 0.263388, -35.8467, -81.1059, 0.55 ) }
    dend_27 { pt3dadd( -0.148846, -36.6974, -83.5588, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_27 { pt3dadd( -0.27201, -37.0225, -84.5007, 0.28 ) }
    dend_27 { pt3dadd( -0.81654, -39.0081, -90.3372, 0.28 ) }
    dend_27 { pt3dadd( -0.847492, -39.2039, -90.9469, 0.55 ) }
    dend_27 { pt3dadd( -0.952168, -40.7309, -95.4701, 0.28 ) }
    dend_27 { pt3dadd( -0.944145, -41.1311, -96.5939, 0.55 ) }
    dend_27 { pt3dadd( -0.763245, -42.8046, -101.098, 0.28 ) }
    dend_27 { pt3dadd( -0.658741, -43.4373, -102.708, 0.55 ) }
    dend_27 { pt3dadd( -0.341912, -45.3924, -107.112, 0.55 ) }
    dend_27 { pt3dadd( -0.0685792, -46.9933, -110.443, 0.28 ) }
    dend_27 { pt3dadd( -3.3018E-4, -47.4002, -111.17, 0.55 ) }
    dend_27 { pt3dadd( 0.118663, -48.2624, -112.569, 0.28 ) }
    dend_27 { pt3dadd( 0.16476, -48.7469, -113.222, 0.55 ) }
    dend_27 { pt3dadd( 0.440949, -51.1966, -115.949, 0.28 ) }
    dend_27 { pt3dadd( 0.570483, -52.0891, -116.692, 0.55 ) }
    dend_27 { pt3dadd( 0.874297, -53.8698, -118.032, 0.28 ) }
    dend_27 { pt3dadd( 1.02168, -54.9497, -118.653, 0.55 ) }
    dend_27 { pt3dadd( 1.2895, -56.8853, -119.655, 0.28 ) }
    dend_27 { pt3dadd( 1.41186, -57.7234, -120.055, 0.55 ) }
    dend_27 { pt3dadd( 1.66569, -59.2753, -120.658, 0.55 ) }
    dend_27 { pt3dadd( 2.10693, -62.8427, -121.962, 0.28 ) }
    dend_27 { pt3dadd( 2.53583, -67.3536, -123.088, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -21.3789, 3.91675, -27.77, 0.83 ) }
    dend_21 { pt3dadd( -23.6077, 2.5844, -29.5966, 0.83 ) }
    dend_21 { pt3dadd( -24.768, 1.84698, -30.4255, 0.83 ) }
    dend_21 { pt3dadd( -29.5053, -1.08719, -33.4676, 0.83 ) }
    dend_21 { pt3dadd( -30.7326, -1.82578, -34.1812, 0.55 ) }
    dend_21 { pt3dadd( -31.6404, -2.32609, -34.6402, 1.11 ) }
    dend_21 { pt3dadd( -34.8335, -4.05398, -36.1696, 0.55 ) }
    dend_21 { pt3dadd( -38.0309, -5.77261, -37.4578, 0.83 ) }
    dend_21 { pt3dadd( -39.2983, -6.41604, -37.8866, 0.28 ) }
    dend_21 { pt3dadd( -40.8885, -7.13438, -38.2619, 0.55 ) }
    dend_21 { pt3dadd( -43.9827, -8.36563, -38.8699, 0.55 ) }
    dend_21 { pt3dadd( -46.7099, -9.34011, -39.2927, 0.28 ) }
    dend_21 { pt3dadd( -48.6378, -9.9199, -39.5374, 0.83 ) }
    dend_21 { pt3dadd( -50.8772, -10.4878, -39.8122, 0.55 ) }
    dend_21 { pt3dadd( -53.4052, -11.1286, -40.0875, 0.55 ) }
    dend_21 { pt3dadd( -55.9804, -11.7325, -40.4198, 0.55 ) }
    dend_21 { pt3dadd( -57.6982, -12.1224, -40.6569, 0.55 ) }
    dend_21 { pt3dadd( -59.6651, -12.5293, -40.915, 0.28 ) }
    dend_21 { pt3dadd( -60.3552, -12.694, -41.0463, 0.28 ) }
    dend_21 { pt3dadd( -63.734, -13.6308, -41.8327, 0.55 ) }
    dend_21 { pt3dadd( -66.5106, -14.4663, -42.5359, 0.55 ) }
    dend_21 { pt3dadd( -67.9142, -14.9067, -42.9253, 0.55 ) }
    dend_21 { pt3dadd( -69.7919, -15.5078, -43.4168, 0.83 ) }
    dend_21 { pt3dadd( -73.1771, -16.642, -44.3229, 0.55 ) }
    dend_21 { pt3dadd( -75.4581, -17.3606, -44.9886, 0.55 ) }
    dend_21 { pt3dadd( -78.0068, -18.071, -45.8651, 0.83 ) }
    dend_21 { pt3dadd( -79.9151, -18.5296, -46.5947, 0.55 ) }
    dend_21 { pt3dadd( -82.9616, -19.2392, -47.9837, 0.55 ) }
    dend_21 { pt3dadd( -84.8911, -19.7013, -48.9609, 0.55 ) }
    dend_21 { pt3dadd( -87.5673, -20.347, -50.6149, 0.55 ) }
    dend_21 { pt3dadd( -90.0636, -20.9636, -52.3806, 0.28 ) }
    dend_21 { pt3dadd( -93.0674, -21.6481, -54.8893, 0.55 ) }
    dend_21 { pt3dadd( -95.4895, -22.126, -57.0564, 0.28 ) }
    dend_21 { pt3dadd( -96.7332, -22.3141, -58.3208, 0.83 ) }
    dend_21 { pt3dadd( -100.678, -22.6824, -62.6227, 0.28 ) }
    dend_21 { pt3dadd( -101.656, -22.741, -63.7121, 0.55 ) }
    dend_21 { pt3dadd( -104.858, -22.6759, -67.2452, 0.28 ) }
    dend_21 { pt3dadd( -106.411, -22.5, -68.9617, 0.28 ) }
    dend_21 { pt3dadd( -109.057, -21.8467, -71.7557, 0.55 ) }
    dend_21 { pt3dadd( -110.439, -21.4151, -73.1189, 0.28 ) }
    dend_21 { pt3dadd( -113.143, -20.4366, -75.5333, 0.83 ) }
    dend_21 { pt3dadd( -117.034, -18.9668, -78.9298, 0.28 ) }
    dend_21 { pt3dadd( -117.455, -18.8089, -79.2606, 0.55 ) }
    dend_21 { pt3dadd( -119.721, -17.9749, -81.0836, 0.28 ) }
    dend_21 { pt3dadd( -120.777, -17.5967, -81.848, 0.55 ) }
    dend_21 { pt3dadd( -123.338, -16.6399, -83.9023, 0.28 ) }
    dend_21 { pt3dadd( -123.729, -16.4768, -84.2831, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 68/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -21.3789, 3.91675, -27.77, 0.83 ) }
    dend_18 { pt3dadd( -24.6915, 3.58626, -31.3237, 0.83 ) }
    dend_18 { pt3dadd( -26.1704, 3.43871, -32.9103, 0.55 ) }
    dend_18 { pt3dadd( -27.531, 3.30296, -34.37, 0.55 ) }
    dend_18 { pt3dadd( -29.0778, 3.14863, -36.0295, 0.55 ) }
    dend_18 { pt3dadd( -30.4233, 3.01439, -37.473, 0.83 ) }
    dend_18 { pt3dadd( -32.1604, 2.84108, -39.3365, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -39.7067, 38.0862, 15.9147, 0.83 ) }
    dend_12 { pt3dadd( -42.0765, 40.8421, 16.2842, 0.83 ) }
    dend_12 { pt3dadd( -43.3622, 42.3467, 16.5557, 1.11 ) }
    dend_12 { pt3dadd( -44.7813, 44.0486, 17.0078, 0.55 ) }
    dend_12 { pt3dadd( -46.8712, 46.5571, 17.7719, 0.83 ) }
    dend_12 { pt3dadd( -48.8184, 48.8741, 18.5454, 0.83 ) }
    dend_12 { pt3dadd( -50.3945, 50.765, 19.3213, 0.28 ) }
    dend_12 { pt3dadd( -51.7549, 52.3013, 20.1113, 0.83 ) }
    dend_12 { pt3dadd( -53.5479, 54.3758, 21.3243, 0.28 ) }
    dend_12 { pt3dadd( -53.8427, 54.7201, 21.4738, 0.55 ) }
    dend_12 { pt3dadd( -55.5504, 56.6538, 21.8858, 0.28 ) }
    dend_12 { pt3dadd( -58.101, 58.8911, 21.4467, 0.83 ) }
    dend_12 { pt3dadd( -60.3316, 60.4532, 20.2075, 0.83 ) }
    dend_12 { pt3dadd( -63.2833, 62.2122, 17.9476, 0.55 ) }
    dend_12 { pt3dadd( -68.9363, 65.0833, 11.9417, 0.28 ) }
    dend_12 { pt3dadd( -70.8398, 65.9577, 9.53196, 0.83 ) }
    dend_12 { pt3dadd( -74.6331, 67.5428, 4.00449, 0.28 ) }
    dend_12 { pt3dadd( -75.7753, 67.9349, 2.13797, 0.55 ) }
    dend_12 { pt3dadd( -76.8225, 68.2019, 0.249056, 0.83 ) }
    dend_12 { pt3dadd( -79.6817, 68.7414, -5.14029, 0.28 ) }
    dend_12 { pt3dadd( -80.9728, 69.0094, -7.59448, 0.28 ) }
    dend_12 { pt3dadd( -81.4741, 69.1178, -8.63266, 0.83 ) }
    dend_12 { pt3dadd( -83.8374, 69.7728, -13.5603, 0.55 ) }
    dend_12 { pt3dadd( -86.1499, 70.3515, -18.3216, 0.28 ) }
    dend_12 { pt3dadd( -86.5674, 70.4455, -19.1824, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -89.2486, 71.1012, -24.3959, 0.28 ) }
    dend_12 { pt3dadd( -90.3698, 71.3434, -26.4903, 0.55 ) }
    dend_12 { pt3dadd( -92.0156, 71.7407, -29.2844, 0.28 ) }
    dend_12 { pt3dadd( -92.572, 71.9022, -30.1034, 0.83 ) }
    dend_12 { pt3dadd( -95.5678, 72.8635, -34.0422, 0.28 ) }
    dend_12 { pt3dadd( -96.2197, 73.0743, -34.83, 0.83 ) }
    dend_12 { pt3dadd( -100.293, 74.3838, -39.5901, 0.28 ) }
    dend_12 { pt3dadd( -101.954, 74.9359, -41.4785, 0.28 ) }
    dend_12 { pt3dadd( -103.009, 75.2786, -42.6695, 0.83 ) }
    dend_12 { pt3dadd( -110.99, 77.8156, -51.5512, 0.28 ) }
    dend_12 { pt3dadd( -111.905, 78.0942, -52.5595, 0.83 ) }
    dend_12 { pt3dadd( -117.525, 79.7634, -59.0486, 0.28 ) }
    dend_12 { pt3dadd( -118.647, 80.1177, -60.4538, 0.28 ) }
    dend_12 { pt3dadd( -119.898, 80.5075, -62.1226, 0.28 ) }
    dend_12 { pt3dadd( -120.575, 80.7176, -63.045, 0.55 ) }
    dend_12 { pt3dadd( -123.113, 81.4713, -66.3533, 0.28 ) }
    dend_12 { pt3dadd( -124.264, 81.8335, -67.9218, 0.55 ) }
    dend_12 { pt3dadd( -128.452, 83.3533, -73.662, 0.28 ) }
    dend_12 { pt3dadd( -129.948, 83.9134, -75.8606, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 19/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -39.7067, 38.0862, 15.9147, 0.55 ) }
    dend_11 { pt3dadd( -41.6096, 37.5987, 17.7749, 0.55 ) }
    dend_11 { pt3dadd( -42.4346, 37.3889, 18.6538, 0.55 ) }
    dend_11 { pt3dadd( -43.995, 36.977, 20.2049, 0.28 ) }
    dend_11 { pt3dadd( -44.2924, 36.9016, 20.4803, 0.28 ) }
    dend_11 { pt3dadd( -45.8111, 36.5551, 21.9347, 0.55 ) }
    dend_11 { pt3dadd( -46.6426, 36.3654, 22.7309, 0.83 ) }
    dend_11 { pt3dadd( -49.3815, 35.7493, 25.2177, 0.55 ) }
    dend_11 { pt3dadd( -50.312, 35.5607, 26.0836, 0.83 ) }
    dend_11 { pt3dadd( -50.9266, 35.419, 26.6253, 0.55 ) }
    dend_11 { pt3dadd( -52.3053, 35.1449, 27.9066, 0.55 ) }
    dend_11 { pt3dadd( -57.2613, 34.8693, 32.2634, 0.55 ) }
    dend_11 { pt3dadd( -61.8022, 33.9018, 36.9642, 0.55 ) }
    dend_11 { pt3dadd( -65.137, 31.84, 42.3003, 0.55 ) }
    dend_11 { pt3dadd( -68.9943, 29.309, 47.0702, 0.55 ) }
    dend_11 { pt3dadd( -73.3701, 25.5344, 50.4453, 0.55 ) }
    dend_11 { pt3dadd( -77.6299, 20.8573, 52.7961, 0.55 ) }
    dend_11 { pt3dadd( -81.5743, 16.0399, 55.4157, 0.55 ) }
    dend_11 { pt3dadd( -85.9799, 11.8154, 58.2253, 0.55 ) }
    dend_11 { pt3dadd( -90.4229, 7.13743, 60.2176, 0.55 ) }
    dend_11 { pt3dadd( -94.3532, 2.72097, 63.4254, 0.55 ) }
    dend_11 { pt3dadd( -98.0124, -1.83616, 66.768, 0.55 ) }
    dend_11 { pt3dadd( -101.941, -5.88269, 70.3911, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.6027, 18.4501, 13.8829, 0.83 ) }
    dend_3 { pt3dadd( -12.8317, 21.221, 12.3719, 0.83 ) }
    dend_3 { pt3dadd( -15.1207, 26.3815, 9.5578, 0.83 ) }
    dend_3 { pt3dadd( -18.2332, 33.3987, 5.73117, 0.83 ) }
    dend_3 { pt3dadd( -21.0371, 39.72, 2.28407, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.6027, 18.4501, 13.8829, 0.83 ) }
    dend_2 { pt3dadd( -12.2633, 18.5357, 19.9177, 0.83 ) }
    dend_2 { pt3dadd( -12.6283, 18.583, 23.2513, 0.83 ) }
    dend_2 { pt3dadd( -13.0995, 18.6441, 27.5561, 0.83 ) }
    dend_2 { pt3dadd( -13.494, 18.6952, 31.1594, 0.83 ) }
    dend_2 { pt3dadd( -13.9635, 18.756, 35.4484, 0.55 ) }
    dend_2 { pt3dadd( -13.5596, 19.9168, 45.4347, 0.55 ) }
    dend_2 { pt3dadd( -13.6734, 19.8875, 55.5023, 0.55 ) }
    dend_2 { pt3dadd( -14.2292, 18.5732, 65.4883, 0.55 ) }
    dend_2 { pt3dadd( -13.2958, 16.4501, 75.3338, 0.55 ) }
    dend_2 { pt3dadd( -10.4583, 13.0056, 84.4767, 0.55 ) }
    dend_2 { pt3dadd( -8.7289, 10.8606, 94.2141, 0.55 ) }
    dend_2 { pt3dadd( -5.3562, 9.80918, 103.672, 0.55 ) }
    dend_2 { pt3dadd( -3.44325, 8.08163, 113.446, 0.55 ) }
    dend_2 { pt3dadd( -2.50825, 6.45256, 123.371, 0.55 ) }
    dend_2 { pt3dadd( -0.394631, 2.63257, 132.573, 0.55 ) }
    dend_2 { pt3dadd( 0.0703571, -0.513731, 142.208, 0.55 ) }
    dend_2 { pt3dadd( -2.15875, -2.92002, 151.767, 0.55 ) }
    dend_2 { pt3dadd( -3.25839, -5.34117, 161.523, 0.55 ) }
    dend_2 { pt3dadd( -4.69806, -5.85159, 171.478, 0.55 ) }
    dend_2 { pt3dadd( -6.07109, -6.04022, 181.449, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 68/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 30.3858, 28.9685, -49.1674, 0.55 ) }
    dend_48 { pt3dadd( 37.1561, 30.9984, -47.0159, 0.55 ) }
    dend_48 { pt3dadd( 41.5725, 32.2274, -45.6161, 0.55 ) }
    dend_48 { pt3dadd( 46.6683, 33.5473, -44.0391, 0.55 ) }
    dend_48 { pt3dadd( 49.6151, 34.2757, -43.1551, 0.55 ) }
    dend_48 { pt3dadd( 54.73, 35.4308, -41.5897, 0.55 ) }
    dend_48 { pt3dadd( 57.7329, 36.075, -40.6761, 0.28 ) }
    dend_48 { pt3dadd( 59.5476, 36.3713, -40.1282, 0.55 ) }
    dend_48 { pt3dadd( 61.7427, 36.735, -39.4784, 0.28 ) }
    dend_48 { pt3dadd( 62.944, 36.9901, -39.1423, 0.55 ) }
    dend_48 { pt3dadd( 65.8596, 37.7753, -38.2582, 0.28 ) }
    dend_48 { pt3dadd( 67.5827, 38.3952, -37.6146, 0.55 ) }
    dend_48 { pt3dadd( 71.7097, 40.1545, -35.7783, 0.55 ) }
    dend_48 { pt3dadd( 73.9432, 41.2841, -34.6117, 0.55 ) }
    dend_48 { pt3dadd( 76.546, 42.9162, -32.9938, 0.28 ) }
    dend_48 { pt3dadd( 78.3247, 44.2609, -31.7478, 0.55 ) }
    dend_48 { pt3dadd( 80.6571, 46.5378, -29.7993, 0.28 ) }
    dend_48 { pt3dadd( 81.0537, 47.0114, -29.3945, 0.28 ) }
    dend_48 { pt3dadd( 81.8852, 48.247, -28.3467, 0.83 ) }
    dend_48 { pt3dadd( 83.0441, 50.15, -26.707, 0.28 ) }
    dend_48 { pt3dadd( 83.7041, 51.3367, -25.8091, 0.83 ) }
    dend_48 { pt3dadd( 84.8912, 53.8302, -24.2331, 0.28 ) }
    dend_48 { pt3dadd( 85.2133, 54.6048, -23.8371, 0.28 ) }
    dend_48 { pt3dadd( 85.6558, 55.7155, -23.2727, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 92/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 30.3858, 28.9685, -49.1674, 0.55 ) }
    dend_47 { pt3dadd( 33.2758, 30.6304, -52.1816, 0.55 ) }
    dend_47 { pt3dadd( 33.8247, 30.909, -52.6751, 0.83 ) }
    dend_47 { pt3dadd( 36.9821, 32.2422, -54.8825, 0.55 ) }
    dend_47 { pt3dadd( 39.2902, 33.0622, -56.1986, 0.28 ) }
    dend_47 { pt3dadd( 41.0301, 33.6803, -57.1907, 0.55 ) }
    dend_47 { pt3dadd( 42.8454, 34.3252, -58.2258, 0.28 ) }
    dend_47 { pt3dadd( 45.6622, 35.1735, -59.357, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_47 { pt3dadd( 48.6662, 35.9702, -60.4167, 0.28 ) }
    dend_47 { pt3dadd( 50.3857, 36.302, -60.7612, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -32.1604, 2.84108, -39.3365, 0.83 ) }
    dend_20 { pt3dadd( -34.2459, 4.22171, -46.6071, 0.83 ) }
    dend_20 { pt3dadd( -35.6375, 5.17274, -51.2281, 0.83 ) }
    dend_20 { pt3dadd( -36.6009, 5.87489, -54.5752, 0.28 ) }
    dend_20 { pt3dadd( -37.5616, 6.66604, -57.925, 0.83 ) }
    dend_20 { pt3dadd( -38.46, 7.44761, -60.9434, 0.83 ) }
    dend_20 { pt3dadd( -39.8168, 8.82521, -65.9307, 0.28 ) }
    dend_20 { pt3dadd( -40.2267, 9.34352, -67.4776, 0.55 ) }
    dend_20 { pt3dadd( -41.6595, 11.5935, -73.1858, 1.39 ) }
    dend_20 { pt3dadd( -42.0848, 12.3342, -74.8732, 0.28 ) }
    dend_20 { pt3dadd( -42.3703, 12.9075, -76.0492, 0.83 ) }
    dend_20 { pt3dadd( -44.2606, 17.3057, -83.8883, 0.28 ) }
    dend_20 { pt3dadd( -44.5861, 18.2183, -85.2164, 0.55 ) }
    dend_20 { pt3dadd( -45.0172, 19.3884, -86.6661, 0.28 ) }
    dend_20 { pt3dadd( -45.1801, 19.8096, -87.0773, 0.55 ) }
    dend_20 { pt3dadd( -46.0737, 22.1228, -89.1149, 0.28 ) }
    dend_20 { pt3dadd( -46.5965, 23.508, -90.0297, 1.11 ) }
    dend_20 { pt3dadd( -47.4793, 25.5749, -91.0362, 0.55 ) }
    dend_20 { pt3dadd( -48.1716, 27.1136, -92.0291, 0.28 ) }
    dend_20 { pt3dadd( -48.3896, 27.5183, -92.3368, 0.83 ) }
    dend_20 { pt3dadd( -48.9651, 28.446, -93.1431, 0.28 ) }
    dend_20 { pt3dadd( -49.338, 29.0074, -93.6693, 0.83 ) }
    dend_20 { pt3dadd( -51.9814, 32.9511, -98.0567, 0.28 ) }
    dend_20 { pt3dadd( -52.3819, 33.4705, -98.7803, 0.55 ) }
    dend_20 { pt3dadd( -53.3105, 34.5875, -100.536, 0.28 ) }
    dend_20 { pt3dadd( -53.8538, 35.1521, -101.523, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 28/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -32.1604, 2.84108, -39.3365, 0.55 ) }
    dend_19 { pt3dadd( -34.3218, 2.26592, -41.0061, 0.55 ) }
    dend_19 { pt3dadd( -35.3585, 1.94461, -41.8182, 0.55 ) }
    dend_19 { pt3dadd( -37.7125, 1.08023, -43.7912, 0.55 ) }
    dend_19 { pt3dadd( -38.4819, 0.780429, -44.4618, 0.55 ) }
    dend_19 { pt3dadd( -39.538, 0.341689, -45.4834, 0.55 ) }
    dend_19 { pt3dadd( -41.3155, -0.402129, -47.2709, 0.55 ) }
    dend_19 { pt3dadd( -43.5356, -1.34279, -49.6598, 0.55 ) }
    dend_19 { pt3dadd( -45.7859, -2.34599, -52.2421, 0.28 ) }
    dend_19 { pt3dadd( -47.4324, -3.08068, -54.2262, 0.83 ) }
    dend_19 { pt3dadd( -50.145, -4.3247, -57.7863, 0.55 ) }
    dend_19 { pt3dadd( -51.6313, -5.05494, -60.0081, 0.55 ) }
    dend_19 { pt3dadd( -53.0956, -5.82847, -62.5165, 0.55 ) }
    dend_19 { pt3dadd( -54.3634, -6.52377, -64.6913, 0.28 ) }
    dend_19 { pt3dadd( -55.0146, -6.91263, -65.9242, 1.39 ) }
    dend_19 { pt3dadd( -57.3783, -8.39353, -70.7133, 0.55 ) }
    dend_19 { pt3dadd( -58.9245, -9.39225, -73.9833, 0.28 ) }
    dend_19 { pt3dadd( -59.488, -9.7572, -75.188, 0.83 ) }
    dend_19 { pt3dadd( -61.2198, -10.8355, -78.7308, 0.28 ) }
    dend_19 { pt3dadd( -64.1162, -12.5508, -84.4706, 0.55 ) }
    dend_19 { pt3dadd( -66.2862, -13.7971, -88.4791, 0.28 ) }
    dend_19 { pt3dadd( -67.0251, -14.1535, -89.6294, 0.55 ) }
    dend_19 { pt3dadd( -69.0872, -15.0247, -92.5393, 0.28 ) }
    dend_19 { pt3dadd( -69.6123, -15.2239, -93.2525, 0.55 ) }
    dend_19 { pt3dadd( -70.9374, -15.6741, -95.0471, 0.28 ) }
    dend_19 { pt3dadd( -72.0127, -16.0137, -96.2691, 0.55 ) }
    dend_19 { pt3dadd( -75.1582, -17.0029, -99.7364, 0.28 ) }
    dend_19 { pt3dadd( -76.0924, -17.2831, -100.761, 0.55 ) }
    dend_19 { pt3dadd( -79.364, -18.1927, -104.421, 0.28 ) }
    dend_19 { pt3dadd( -81.216, -18.6688, -106.545, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -129.948, 83.9134, -75.8606, 0.28 ) }
    dend_14 { pt3dadd( -131.223, 83.7685, -77.1599, 0.28 ) }
    dend_14 { pt3dadd( -134.57, 83.5337, -80.5737, 0.28 ) }
    dend_14 { pt3dadd( -135.733, 83.5257, -81.7851, 0.55 ) }
    dend_14 { pt3dadd( -139.717, 83.5795, -86.1411, 0.28 ) }
    dend_14 { pt3dadd( -140.9, 83.5955, -87.4346, 0.83 ) }
    dend_14 { pt3dadd( -144.436, 83.6433, -91.3012, 0.28 ) }
    dend_14 { pt3dadd( -145.039, 83.6729, -91.9939, 0.55 ) }
    dend_14 { pt3dadd( -148.132, 83.9964, -95.5665, 0.28 ) }
    dend_14 { pt3dadd( -150.193, 84.3504, -98.0663, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -129.948, 83.9134, -75.8606, 0.28 ) }
    dend_13 { pt3dadd( -133.637, 86.3057, -83.3307, 0.28 ) }
    dend_13 { pt3dadd( -134.038, 86.58, -84.1582, 0.55 ) }
    dend_13 { pt3dadd( -136.382, 88.288, -89.0606, 0.28 ) }
    dend_13 { pt3dadd( -136.675, 88.6688, -89.8129, 0.55 ) }
    dend_13 { pt3dadd( -137.527, 90.1821, -92.3413, 0.28 ) }
    dend_13 { pt3dadd( -138.062, 91.3219, -94.0709, 0.83 ) }
    dend_13 { pt3dadd( -138.806, 93.9869, -97.2162, 0.28 ) }
    dend_13 { pt3dadd( -138.9, 94.4043, -97.688, 0.55 ) }
    dend_13 { pt3dadd( -139.806, 100.402, -104.025, 0.28 ) }
    dend_13 { pt3dadd( -139.889, 101.174, -104.789, 0.55 ) }
    dend_13 { pt3dadd( -139.958, 103.213, -106.526, 0.28 ) }
    dend_13 { pt3dadd( -139.929, 104.328, -107.368, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 81/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -21.0371, 39.72, 2.28407, 0.55 ) }
    dend_9 { pt3dadd( -20.5135, 42.2058, 2.56997, 0.55 ) }
    dend_9 { pt3dadd( -19.4641, 46.9995, 3.10141, 0.55 ) }
    dend_9 { pt3dadd( -18.7075, 50.4655, 3.46261, 0.55 ) }
    dend_9 { pt3dadd( -17.2707, 56.728, 3.97858, 0.55 ) }
    dend_9 { pt3dadd( -16.586, 59.7221, 4.16351, 0.28 ) }
    dend_9 { pt3dadd( -16.31, 60.9711, 4.18496, 0.55 ) }
    dend_9 { pt3dadd( -15.9183, 62.7101, 4.22961, 0.28 ) }
    dend_9 { pt3dadd( -15.7266, 63.4833, 4.24688, 0.55 ) }
    dend_9 { pt3dadd( -15.0927, 65.6329, 4.1813, 0.28 ) }
    dend_9 { pt3dadd( -14.5985, 67.1405, 4.05527, 0.55 ) }
    dend_9 { pt3dadd( -12.8488, 71.8295, 3.70394, 0.28 ) }
    dend_9 { pt3dadd( -11.3475, 75.4618, 3.31362, 0.28 ) }
    dend_9 { pt3dadd( -10.7381, 76.8709, 3.18341, 0.83 ) }
    dend_9 { pt3dadd( -8.919, 80.8524, 2.86327, 0.55 ) }
    dend_9 { pt3dadd( -7.65203, 83.448, 2.70681, 0.28 ) }
    dend_9 { pt3dadd( -7.47697, 83.7554, 2.68887, 0.55 ) }
    dend_9 { pt3dadd( -4.21164, 88.2581, 2.36825, 0.28 ) }
    dend_9 { pt3dadd( 0.391644, 99.8928, 4.62429, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_9 { pt3dadd( 6.37685, 110.913, 6.35657, 0.28 ) }
    dend_9 { pt3dadd( 13.6928, 120.793, 8.95811, 0.28 ) }
    dend_9 { pt3dadd( 21.3095, 130.265, 12.0363, 0.28 ) }
    dend_9 { pt3dadd( 27.0633, 140.528, 16.508, 0.28 ) }
    dend_9 { pt3dadd( 33.6584, 150.841, 19.4744, 0.28 ) }
    dend_9 { pt3dadd( 38.6552, 162.276, 21.7945, 0.28 ) }
    dend_9 { pt3dadd( 43.1955, 173.804, 24.5904, 0.28 ) }
    dend_9 { pt3dadd( 48.4452, 184.152, 29.4865, 0.28 ) }
    dend_9 { pt3dadd( 52.3582, 194.166, 36.0105, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 9/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -21.0371, 39.72, 2.28407, 0.55 ) }
    dend_4 { pt3dadd( -23.1993, 47.2714, 3.86126, 0.55 ) }
    dend_4 { pt3dadd( -24.3666, 50.9458, 4.81927, 0.55 ) }
    dend_4 { pt3dadd( -25.4009, 53.8753, 5.74041, 0.55 ) }
    dend_4 { pt3dadd( -26.1077, 55.7213, 6.3563, 0.55 ) }
    dend_4 { pt3dadd( -28.771, 62.2517, 8.5408, 0.55 ) }
    dend_4 { pt3dadd( -29.7229, 64.6292, 9.29387, 0.55 ) }
    dend_4 { pt3dadd( -30.6543, 66.9016, 10.1991, 0.83 ) }
    dend_4 { pt3dadd( -31.8127, 69.6654, 11.4118, 0.83 ) }
    dend_4 { pt3dadd( -32.6834, 71.8849, 12.3865, 0.83 ) }
    dend_4 { pt3dadd( -33.4604, 73.8444, 13.2146, 0.55 ) }
    dend_4 { pt3dadd( -35.4617, 79.1133, 15.059, 0.55 ) }
    dend_4 { pt3dadd( -36.6651, 82.6481, 16.2365, 0.55 ) }
    dend_4 { pt3dadd( -37.3569, 84.994, 17.0414, 0.55 ) }
    dend_4 { pt3dadd( -38.09, 87.9493, 18.0471, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 24/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -38.09, 87.9493, 18.0471, 0.55 ) }
    dend_6 { pt3dadd( -41.5527, 90.5281, 18.7748, 0.55 ) }
    dend_6 { pt3dadd( -44.0822, 92.4294, 19.3612, 0.55 ) }
    dend_6 { pt3dadd( -45.6642, 93.7046, 19.726, 0.28 ) }
    dend_6 { pt3dadd( -47.1325, 94.9308, 20.0639, 0.55 ) }
    dend_6 { pt3dadd( -48.2402, 95.8333, 20.2444, 0.55 ) }
    dend_6 { pt3dadd( -49.3211, 96.6954, 20.3823, 0.28 ) }
    dend_6 { pt3dadd( -50.0573, 97.3069, 20.4799, 0.55 ) }
    dend_6 { pt3dadd( -51.699, 98.7021, 20.6758, 0.28 ) }
    dend_6 { pt3dadd( -52.1616, 99.0782, 20.6688, 0.55 ) }
    dend_6 { pt3dadd( -54.2931, 100.851, 20.4512, 0.28 ) }
    dend_6 { pt3dadd( -55.0487, 101.451, 20.3096, 0.55 ) }
    dend_6 { pt3dadd( -62.6937, 106.691, 22.7728, 0.55 ) }
    dend_6 { pt3dadd( -70.4398, 112.055, 24.6432, 0.55 ) }
    dend_6 { pt3dadd( -76.8749, 119.213, 25.9449, 0.55 ) }
    dend_6 { pt3dadd( -84.4143, 125.27, 25.9739, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -38.09, 87.9493, 18.0471, 0.28 ) }
    dend_5 { pt3dadd( -37.5111, 90.6823, 20.3105, 0.28 ) }
    dend_5 { pt3dadd( -37.2995, 91.6812, 21.1377, 0.55 ) }
    dend_5 { pt3dadd( -37.0874, 92.6829, 21.9671, 0.55 ) }
    dend_5 { pt3dadd( -36.4013, 95.9216, 24.6492, 0.28 ) }
    dend_5 { pt3dadd( -35.8245, 98.6448, 26.9044, 0.55 ) }
    dend_5 { pt3dadd( -32.3036, 106.754, 34.2299, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -84.4143, 125.27, 25.9739, 0.55 ) }
    dend_8 { pt3dadd( -93.3785, 131.64, 27.9722, 0.55 ) }
    dend_8 { pt3dadd( -101.646, 138.895, 30.2212, 0.55 ) }
    dend_8 { pt3dadd( -109.58, 146.567, 32.4165, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -84.4143, 125.27, 25.9739, 0.28 ) }
    dend_7 { pt3dadd( -90.9529, 131.61, 25.6563, 0.55 ) }
    dend_7 { pt3dadd( -98.1558, 136.812, 23.9746, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, axon_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, axon_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_38 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_37 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_22 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_44 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_39 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_34 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_33 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_16 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_10 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_51 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_36 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_11 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_48 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_20 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_19 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_15 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_25 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_47 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_5 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_7 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_8 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_50 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    axon_1 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_22 nseg = 5
    dend_49 nseg = 9
    dend_44 nseg = 3
    dend_40 nseg = 5
    dend_39 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 3
    dend_16 nseg = 7
    dend_10 nseg = 3
    dend_51 nseg = 7
    dend_36 nseg = 3
    dend_31 nseg = 11
    dend_28 nseg = 9
    dend_27 nseg = 5
    dend_21 nseg = 7
    dend_12 nseg = 7
    dend_11 nseg = 5
    dend_2 nseg = 9
    dend_48 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_9 nseg = 9
    dend_4 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_NBC_2f018ce735_0_0


