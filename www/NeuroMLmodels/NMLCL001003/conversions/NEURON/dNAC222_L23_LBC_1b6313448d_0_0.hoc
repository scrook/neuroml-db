// Cell: dNAC222_L23_LBC_1b6313448d_0_0
/*
{
  "id" : "dNAC222_L23_LBC_1b6313448d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.94076, -9.8712, -1.65398, 2.77643", "-2.68752, -8.89837, -1.49144, 3.78775", "-2.43427, -7.92553, -1.32889, 4.91862", "-2.18103, -6.95269, -1.16635, 5.95702", "-1.92778, -5.97986, -1.00381, 6.99541", "-1.67453, -5.00702, -0.841265, 8.01733", "-1.42129, -4.03418, -0.678723, 8.72435", "-1.16804, -3.06135, -0.516181, 9.35315", "-0.914798, -2.08851, -0.353638, 9.98195", "-0.661552, -1.11567, -0.191096, 10.5", "-0.408307, -0.142835, -0.0285532, 10.7936", "-0.155061, 0.830002, 0.133989, 11.1592", "0.0981843, 1.80284, 0.296532, 11.5247", "0.35143, 2.77568, 0.459074, 11.423", "0.604675, 3.74851, 0.621617, 11.7952", "0.857921, 4.72135, 0.784159, 12.2515", "1.11117, 5.69419, 0.946702, 11.9034", "1.36441, 6.66702, 1.10924, 10.4337", "1.61766, 7.63986, 1.27179, 8.34249", "1.8709, 8.6127, 1.43433, 5.63558", "2.12415, 9.58553, 1.59687, 3.26719" ]
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.931045, 7.08157, 20.757, 0.83", "2.32254, 9.73543, 20.8047, 0.83", "3.64917, 12.0231, 20.8643, 0.83", "4.70914, 13.7119, 20.9199, 1.11", "5.71224, 15.2451, 20.9764, 0.83", "6.97941, 17.1645, 21.0486, 0.83", "7.7222, 18.2355, 21.0942, 0.83", "8.35715, 19.0297, 21.1769, 0.83", "8.90545, 19.737, 21.3155, 1.11", "9.63327, 20.6694, 21.5716, 0.83", "10.1317, 21.3158, 21.7813, 1.11", "10.9187, 22.4432, 22.1592, 0.83", "12.0304, 23.9587, 22.6711, 1.11", "13.2565, 25.6265, 23.2085, 0.83", "14.2002, 26.9109, 23.5802, 0.55", "15.13, 28.1542, 23.8789, 0.55", "15.7319, 28.9933, 24.0297, 0.83", "17.0498, 30.9512, 24.263, 0.83", "17.8757, 32.1532, 24.3399, 0.83", "19.0328, 33.8843, 24.4005, 0.55", "20.749, 36.4852, 24.4879, 1.11", "21.8494, 38.2916, 24.6505, 0.83", "22.5479, 39.5353, 24.8151, 1.11", "23.6655, 41.693, 25.1795, 0.55", "24.1439, 42.649, 25.3899, 0.55", "25.2841, 45.2427, 26.0605, 0.55", "26.4002, 48.0853, 26.946, 0.83", "26.8718, 49.406, 27.4186, 0.55", "27.1956, 50.2994, 27.7646, 0.83", "27.6436, 51.5667, 28.2695, 0.83", "28.2906, 53.2583, 28.9238, 0.83", "29.4953, 56.1306, 29.9958, 1.11", "30.4278, 58.0767, 30.6486, 0.55", "31.686, 60.5283, 31.5076, 0.83", "32.2826, 61.5903, 31.8815, 0.55", "33.1891, 63.1022, 32.4113, 0.83", "33.9095, 64.2039, 32.8122, 0.28", "34.4757, 65.0032, 33.072, 0.55", "35.0098, 65.6922, 33.2648, 0.28", "36.1517, 67.3278, 33.6651, 0.83", "39.7742, 73.5194, 35.2163, 0.83", "41.8866, 80.0025, 37.8832, 0.83", "43.5516, 86.1026, 41.5283, 0.83", "45.2357, 92.6517, 44.3203, 0.83", "47.224, 99.0824, 47.1905, 0.83", "49.8138, 105.602, 49.3216, 0.83", "51.9083, 112.59, 50.1414, 0.83", "54.9269, 119.288, 50.1772, 0.83", "57.5394, 126.104, 49.3712, 0.83", "60.1339, 132.93, 48.5949, 0.83", "62.414, 139.761, 47.1916, 0.83", "64.1305, 146.78, 45.941, 0.83", "66.4066, 153.744, 45.4484, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "1.84105, 8.53707, 11.867, 1.38", "2.35243, 9.21473, 12.0507, 1.38", "2.83454, 9.85353, 12.2239, 1.38", "3.63321, 10.9119, 12.5108, 1.11", "4.29739, 11.792, 12.7494, 1.11", "5.66943, 13.6101, 13.2422, 0.83", "7.12608, 15.5403, 13.7655, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.61104, 4.15007, -0.263001, 2.77", "6.32593, 4.50161, -0.342115, 2.77", "8.44693, 5.54459, -0.576836, 1.66", "11.8268, 7.20665, -0.950882, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.58105, 7.13282, -5.263, 0.83", "4.86065, 8.20248, -5.3388, 0.83", "6.44117, 9.76893, -5.29836, 0.83", "8.82207, 12.409, -5.65317, 0.83", "10.7701, 14.6216, -6.24255, 0.83", "12.2406, 16.215, -6.75373, 0.83", "14.2279, 18.278, -7.48001, 0.83", "15.6777, 19.8324, -8.05393, 0.83", "19.2576, 24.0921, -9.64691, 1.11", "20.6681, 25.9454, -10.2989, 0.55", "21.7396, 27.3952, -10.753, 0.55", "22.7249, 28.7167, -11.098, 0.55", "24.5834, 31.2057, -11.6224, 1.11", "26.5408, 33.9551, -11.9358, 0.83", "28.3216, 36.6213, -11.9193, 0.83", "29.7739, 38.9701, -11.8804, 0.55", "31.2562, 41.5289, -11.8736, 0.55", "31.8333, 42.559, -11.8666, 0.83", "33.6242, 45.8056, -11.8654, 0.55", "34.1391, 46.7551, -11.8665, 0.55", "35.0954, 48.6675, -11.9144, 1.11", "35.6933, 49.8821, -11.9489, 1.11", "36.2727, 51.1014, -12.0134, 0.28", "36.963, 52.6295, -12.2221, 0.55", "37.4211, 53.7998, -12.5134, 0.28", "37.8375, 55.0092, -12.902, 0.83", "38.9571, 58.4476, -14.1428, 0.55", "39.5929, 60.2555, -14.8449, 0.55", "40.5003, 62.7764, -15.851, 0.83", "41.2683, 64.9571, -16.6983, 0.83", "41.8721, 66.6767, -17.3274, 0.55", "42.6864, 68.8858, -18.1254, 0.55", "43.5124, 71.0573, -18.8761, 0.55", "43.8476, 71.7976, -19.0689, 0.55", "44.9281, 73.6939, -19.3842, 1.38", "46.1317, 75.4418, -19.5922, 0.55", "46.9318, 76.4755, -19.615, 0.83", "47.3015, 76.9307, -19.5855, 0.28", "48.3926, 78.2452, -19.3969, 0.83", "49.4006, 79.3747, -19.1938, 0.28", "50.3647, 80.3658, -18.9028, 0.28", "52.3243, 82.475, -18.2579, 0.55", "53.2042, 83.4474, -17.9421, 0.55", "54.7278, 85.1445, -17.3653, 0.55", "56.1473, 86.7901, -16.799, 0.55", "57.7246, 88.6752, -16.1903, 0.83", "58.9866, 90.2386, -15.7747, 0.83", "59.86, 91.4242, -15.5445, 0.28", "60.2829, 92.082, -15.3944, 0.83", "61.3015, 93.7888, -15.037, 0.28", "61.4266, 94.0319, -14.9954, 0.83", "62.3358, 96.0081, -14.8201, 0.28", "62.9279, 97.3326, -14.6954, 0.83", "63.7595, 99.3194, -14.6102, 0.28", "64.6071, 101.371, -14.5571, 1.11", "65.1549, 102.603, -14.538, 1.11", "65.7323, 103.75, -14.5739, 0.55", "66.5212, 105.077, -14.6971, 0.28", "67.083, 105.942, -14.825, 0.55", "67.8492, 107.095, -15.0947, 0.28", "68.5868, 108.171, -15.298, 0.83", "70.1611, 110.132, -15.6568, 0.55", "70.7357, 110.784, -15.7681, 0.55", "72.3906, 112.538, -16.0322, 1.11", "74.7999, 115.017, -16.3121, 0.28", "76.3061, 116.4, -16.4418, 0.83", "77.974, 117.829, -16.4702, 0.28", "78.8188, 118.547, -16.4191, 0.83", "80.2196, 119.734, -16.2855, 0.28", "80.9469, 120.343, -16.1839, 0.83", "83.2298, 122.354, -15.7893, 0.83", "84.1725, 123.267, -15.6508, 0.28", "86.4411, 125.682, -15.3113, 0.28", "87.57, 126.927, -15.1561, 1.11", "90.1031, 129.869, -14.8361, 0.28", "91.3065, 131.319, -14.6862, 1.11", "92.464, 132.83, -14.5495, 0.28", "93.1376, 133.693, -14.4859, 0.83", "94.52, 135.441, -14.343, 0.28", "94.8824, 135.915, -14.2969, 0.55", "95.5924, 136.865, -14.2198, 0.28", "95.9637, 137.326, -14.1684, 0.55", "96.9715, 138.449, -14.0352, 0.28", "97.5792, 138.979, -13.9548, 0.55", "98.779, 139.845, -13.8695, 0.28", "99.4697, 140.291, -13.8954, 0.55", "101.005, 141.182, -14.0662, 0.28", "101.478, 141.418, -14.1108, 0.83", "103.371, 142.272, -14.3289, 0.28", "104.343, 142.675, -14.4387, 0.83", "106.406, 143.598, -14.6496, 0.28", "108.481, 144.614, -14.7974, 0.28", "110.444, 145.74, -15.0242, 1.11", "111.707, 146.559, -15.1991, 0.28", "112.834, 147.381, -15.3505, 0.55", "114.076, 148.394, -15.4939, 0.28", "115.147, 149.41, -15.6265, 0.83", "117.391, 151.94, -15.8109, 0.28", "117.75, 152.42, -15.8265, 0.55", "118.913, 154.105, -15.766, 0.55", "120.148, 156.059, -15.6164, 0.28", "120.966, 157.497, -15.3511, 1.11", "121.894, 159.603, -14.7549, 0.28", "122.369, 161.087, -14.3358, 0.55", "122.924, 163.802, -13.8083, 0.28", "123.003, 164.925, -13.7004, 0.83", "122.994, 168.293, -13.2458, 0.28", "122.877, 170.716, -12.992, 0.28", "122.515, 174.406, -12.8126, 0.55", "122.208, 176.593, -12.7631, 0.28", "121.544, 179.748, -12.8398, 0.28", "120.75, 183.907, -13.2735, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.11895, -10.6099, -2.573, 2.22", "-1.20794, -12.5176, -1.57786, 2.22", "-1.36759, -15.9398, 0.207471, 2.77", "-1.63456, -21.6625, 3.19283, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.67895, -9.02118, -5.133, 1.94", "-6.34833, -9.83343, -5.133, 1.94", "-9.39009, -10.759, -5.133, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-5.96896, 2.04882, 10.787, 1.11", "-7.42382, 3.03238, 11.5186, 0.83", "-10.1304, 4.71501, 12.5967, 0.55", "-10.8434, 5.17948, 12.8399, 0.83", "-12.3106, 6.12391, 13.3265, 0.55", "-13.9455, 7.17628, 13.8688, 0.83", "-15.8108, 8.37696, 14.4874, 0.55", "-18.1216, 9.82663, 15.2199, 0.55", "-20.6444, 11.3066, 15.821, 0.55", "-22.0607, 12.1442, 16.1476, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.12895, -1.70268, 5.667, 2.49", "-0.854374, -6.15222, 5.667, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999896865996
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.12415, 9.58553, 1.59687, 1.11", "5.90296, 24.1017, 1.59687, 1.11", "9.68178, 38.618, 1.59687, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "7.12608, 15.5403, 13.7655, 0.55", "8.21418, 16.2682, 13.5048, 0.55", "9.74475, 17.2829, 13.1189, 0.55", "11.1227, 18.1212, 12.8694, 0.83", "12.4247, 18.8557, 12.7076, 0.83", "14.1496, 19.7776, 12.5592, 0.55", "15.392, 20.4147, 12.4866, 0.55", "16.6449, 21.0128, 12.4748, 0.83", "18.1958, 21.7685, 12.5393, 0.55", "19.4758, 22.4264, 12.7812, 0.55", "20.2909, 22.8944, 13.0344, 0.28", "21.0585, 23.3966, 13.3727, 0.28", "22.151, 24.1995, 14.0408, 0.55", "23.6296, 25.4481, 15.0912, 0.55", "25.2674, 26.9558, 16.3588, 0.28", "25.5769, 27.2293, 16.6283, 0.28", "26.2788, 27.8272, 17.2663, 0.55", "27.2201, 28.4909, 18.0242, 0.28", "28.4266, 29.1398, 18.7725, 0.55", "29.225, 29.4914, 19.1378, 0.28", "30.2738, 29.9064, 19.4858, 0.83", "31.6841, 30.4138, 19.8941, 0.55", "33.5058, 31.0483, 20.3577, 0.55", "35.3082, 31.6984, 20.7097, 0.55", "37.3177, 32.4551, 21.0512, 0.55", "37.607, 32.564, 21.0908, 0.28", "38.6508, 32.9261, 21.1997, 0.28", "39.8873, 33.2817, 21.2366, 0.55", "40.9055, 33.559, 21.1902, 0.28", "41.3212, 33.6613, 21.1332, 0.55", "42.3266, 33.8439, 20.7666, 0.55", "43.1089, 34.0178, 20.4246, 0.55", "44.635, 34.4349, 19.7199, 0.55", "45.6688, 34.7295, 19.2694, 0.28", "47.7898, 35.3746, 18.46, 0.83", "51.7322, 36.7186, 17.1242, 0.55", "53.1549, 37.2571, 16.6975, 0.55", "54.6781, 37.8367, 16.231, 0.83", "55.9264, 38.3421, 15.9462, 0.28", "56.8135, 38.72, 15.8157, 0.83", "57.81, 39.1761, 15.7924, 0.28", "58.7203, 39.6828, 15.933, 0.83", "61.5536, 41.3199, 16.7122, 0.28", "63.5614, 42.6799, 17.4469, 0.55", "64.914, 43.7347, 18.0855, 0.28", "65.5956, 44.2906, 18.3654, 0.28", "66.7935, 45.2577, 18.8176, 0.83", "68.8997, 46.8846, 19.578, 0.28", "69.8701, 47.5465, 19.8809, 0.83", "71.5354, 48.429, 20.0566, 0.28", "74.9304, 50.0762, 20.0776, 0.55", "76.4699, 50.7011, 20.0006, 0.28", "77.3232, 50.9512, 19.8757, 0.28", "78.5781, 51.2276, 19.4754, 0.55", "80.1797, 51.4133, 18.9831, 0.83", "86.9577, 55.4567, 19.1896, 0.83", "93.634, 59.5808, 20.0667, 0.83", "100.574, 62.6072, 22.2082, 0.83", "107.532, 64.29, 25.4169, 0.83", "113.959, 64.9726, 29.8431, 0.83", "119.104, 65.7365, 35.7012, 0.83", "124.555, 65.4769, 41.3166, 0.83", "129.335, 63.9645, 47.3402, 0.83", "135.182, 63.3413, 52.5135, 0.83", "139.89, 62.7066, 58.7396, 0.83", "145.575, 61.7156, 64.0358, 0.83" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "7.12608, 15.5403, 13.7655, 0.55", "9.35511, 16.0185, 14.9856, 0.55", "10.7096, 16.4538, 15.9089, 0.55", "13.2382, 17.1638, 17.7059, 0.55", "17.1658, 18.183, 20.5023, 0.55", "18.5471, 18.4824, 21.4405, 0.83", "19.8068, 18.7466, 22.181, 0.83", "22.7331, 19.2939, 23.9612, 0.83", "24.6731, 19.5846, 24.9779, 0.55", "27.0058, 19.7503, 25.8648, 0.83", "28.8841, 19.7056, 26.2868, 0.55", "31.7051, 19.5351, 26.7553, 0.55", "35.5267, 19.1674, 27.1596, 0.83", "39.1469, 18.7186, 27.2681, 0.83", "41.3216, 18.3895, 27.2675, 0.55", "43.4517, 17.9322, 27.2025, 0.83", "45.8277, 17.3296, 27.1157, 0.55", "47.3457, 16.8359, 27.0628, 0.83", "48.9918, 16.2256, 26.9076, 0.83", "50.798, 15.5811, 26.771, 0.83", "54.0043, 14.3866, 26.5277, 0.83", "55.3725, 13.7292, 26.3807, 0.55", "56.4453, 13.1014, 26.2433, 0.83", "57.4761, 12.4216, 26.0725, 0.83", "59.866, 10.539, 25.5944, 0.83", "61.5055, 8.95138, 25.2575, 0.83", "63.481, 6.64555, 25.114, 0.83", "65.0373, 4.72747, 25.0224, 0.83", "66.7965, 2.48562, 24.9554, 0.55", "68.1932, 0.485171, 24.9548, 0.55", "69.7872, -2.16103, 25.0737, 0.55", "72.2096, -6.04144, 25.5781, 0.55", "82.3802, -8.34739, 28.4412, 0.55" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "11.8268, 7.20665, -0.950882, 0.83", "12.6699, 12.8044, -2.22169, 0.83", "13.2217, 15.7269, -3.16293, 0.83", "13.6906, 18.5624, -3.56333, 0.83", "14.8437, 24.5415, -4.00764, 0.83", "15.5545, 27.5265, -4.19144, 0.83", "16.657, 31.7584, -4.46155, 0.28", "17.4284, 34.6103, -4.3984, 0.83", "20.3341, 43.847, -3.64102, 0.55", "21.4364, 47.0511, -3.25036, 0.55", "23.2508, 51.8582, -2.51198, 0.55", "23.8218, 53.345, -2.1437, 0.55", "25.6001, 58.0578, -0.595206, 0.55", "26.1838, 59.4541, -0.0822995, 0.28", "26.9016, 60.9389, 0.434424, 0.55", "28.2191, 63.6382, 1.63233, 0.55", "29.4171, 65.9724, 2.85371, 0.28", "29.9052, 66.8931, 3.31701, 0.28", "30.361, 67.6211, 3.62569, 0.55", "31.1481, 68.7516, 4.17274, 0.28", "32.5775, 70.5075, 5.08572, 0.55", "33.0056, 70.9522, 5.30587, 0.55", "34.1507, 72.1009, 5.83056, 0.55", "36.5785, 74.4679, 7.01883, 0.28", "38.034, 75.8419, 7.75902, 0.55", "39.4802, 77.1344, 8.50113, 0.28", "40.3955, 77.9445, 8.99923, 0.28", "41.9717, 79.2241, 9.81727, 0.55", "46.4215, 89.752, 11.7173, 0.55", "52.8649, 99.3024, 12.8227, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "11.8268, 7.20665, -0.950882, 1.11", "14.2152, 6.14441, -1.07743, 1.11", "15.9192, 5.41614, -1.35273, 1.11", "17.0882, 5.04259, -1.61268, 1.11", "18.3654, 4.74042, -1.95453, 1.38", "20.5802, 4.21637, -2.54738, 2.22", "22.5238, 3.75651, -3.06761, 1.38", "24.3659, 3.26342, -3.66972, 0.83", "26.2572, 2.80074, -4.48957, 1.38", "27.4798, 2.62773, -5.09266, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.63456, -21.6625, 3.19283, 1.38", "-2.66451, -23.0139, 3.27971, 1.38", "-4.64638, -25.6143, 3.44687, 0.83", "-5.3542, -26.5431, 3.50657, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.63456, -21.6625, 3.19283, 1.38", "-0.474475, -24.5488, 3.61312, 1.38" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.39009, -10.759, -5.133, 1.38", "-11.0329, -12.6298, -5.1416, 1.38", "-13.2643, -15.1708, -5.15329, 1.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.39009, -10.759, -5.133, 0.55", "-10.0286, -8.73891, -6.72179, 0.55", "-10.6249, -5.51662, -9.47827, 0.55", "-10.8811, -3.4156, -11.2986, 0.55", "-11.0473, -0.463985, -13.6408, 0.55", "-11.0566, 1.19269, -14.902, 0.55", "-10.9092, 3.60998, -16.7612, 0.55", "-10.4158, 6.1107, -18.5808, 0.28", "-10.1256, 7.0175, -19.1862, 0.55", "-9.09706, 9.16693, -20.6656, 0.28", "-8.28901, 10.6083, -21.4802, 0.55", "-7.02409, 12.8428, -22.408, 0.28", "-6.11516, 14.452, -22.8827, 0.55", "-4.8603, 16.7066, -23.4221, 0.28", "-4.25256, 17.7971, -23.6977, 0.55", "-2.64225, 20.6651, -24.5035, 0.28", "-1.69817, 22.3708, -25.0123, 0.55", "0.460105, 26.2619, -26.3703, 0.28", "1.13431, 27.4163, -26.8584, 0.55", "2.02554, 28.8222, -27.4871, 0.28", "2.76482, 29.9595, -28.025, 0.55", "4.49975, 32.4129, -29.3683, 0.28", "5.75655, 34.225, -30.3361, 0.55", "6.94193, 36.069, -31.2685, 0.28", "8.63366, 38.6106, -32.6222, 0.28", "9.77034, 40.2711, -33.4873, 0.55", "12.1006, 43.7473, -35.3913, 0.28", "12.7324, 44.6918, -35.9493, 1.11", "14.2441, 47.087, -37.4553, 0.55", "15.6754, 49.4599, -39.074, 0.28", "16.6619, 51.1213, -40.2549, 0.83", "17.8159, 53.0062, -41.6623, 0.28", "18.392, 53.8452, -42.4322, 0.55", "19.2414, 54.8158, -43.4568, 0.28", "20.0322, 55.5776, -44.4209, 0.83", "21.2437, 56.6633, -45.971, 0.28", "23.1052, 58.3024, -48.2609, 0.55", "26.5411, 61.086, -52.3465, 0.28", "28.2894, 62.4027, -54.4305, 0.55", "30.8832, 64.1798, -57.5322, 0.28", "33.4949, 65.8826, -60.7436, 0.28", "35.4579, 67.1573, -63.2298, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-22.0607, 12.1442, 16.1476, 0.55", "-23.4258, 15.841, 14.2989, 0.55", "-24.2066, 17.9436, 13.4546, 0.55", "-25.0191, 19.8701, 12.7963, 0.55", "-27.1501, 24.3931, 11.3606, 0.55", "-28.5003, 26.9542, 10.4535, 0.28", "-30.0851, 29.8635, 9.41823, 0.55", "-30.8131, 31.139, 9.01476, 0.28", "-32.1455, 33.4023, 8.2857, 0.55", "-33.6839, 35.9776, 7.51006, 0.55", "-35.9775, 39.7113, 6.59975, 0.28", "-37.0347, 41.4886, 6.12076, 0.55", "-38.2262, 43.55, 5.61569, 0.28", "-39.0303, 45.0161, 5.33364, 0.55", "-39.6639, 46.243, 5.13476, 0.55", "-40.5829, 48.03, 4.92623, 0.28", "-41.7761, 50.2956, 4.66925, 0.55", "-42.8353, 52.1847, 4.46887, 0.28", "-43.7312, 53.5857, 4.25319, 0.55", "-46.0924, 56.8304, 3.59346, 0.28", "-46.7034, 57.541, 3.41981, 0.55", "-48.5983, 59.4773, 2.8813, 0.28", "-50.5929, 61.3615, 2.34898, 0.55", "-53.8562, 64.3468, 1.55375, 0.28", "-55.4934, 65.8496, 1.18435, 0.55", "-57.3233, 67.5878, 0.829983, 0.28", "-58.6792, 68.9654, 0.539832, 0.55", "-59.6007, 69.976, 0.332506, 0.28", "-59.8015, 70.2395, 0.254979, 0.83", "-61.2914, 72.7948, -0.416268, 0.28", "-61.9622, 74.2132, -0.729637, 0.83", "-62.6941, 75.9785, -1.03615, 0.28", "-62.9723, 76.6891, -1.1051, 0.83", "-64.2607, 80.1071, -1.18703, 0.28", "-64.9122, 81.974, -0.977809, 0.55", "-65.8478, 84.9064, -0.253224, 0.28", "-66.3466, 86.6657, 0.344675, 0.55", "-66.869, 88.768, 1.2098, 0.28", "-67.2198, 90.282, 1.87515, 0.55", "-67.8065, 93.2174, 3.24775, 0.28", "-67.9163, 93.9135, 3.55289, 0.55", "-68.1057, 95.1923, 4.02153, 0.28", "-68.259, 96.2035, 4.36541, 0.55", "-68.6115, 98.1388, 4.94287, 0.28", "-69.0621, 100.08, 5.46692, 0.55", "-69.8242, 102.604, 6.02414, 0.28", "-70.3622, 104.187, 6.38543, 0.55", "-71.2216, 106.396, 6.89605, 0.28", "-71.4165, 106.819, 6.99355, 0.55", "-72.309, 108.638, 7.39952, 0.28", "-73.132, 110.231, 7.66888, 0.55", "-73.619, 111.197, 7.76705, 0.28", "-74.1502, 112.287, 7.87651, 0.55", "-75.2652, 114.675, 8.10413, 0.55", "-76.1044, 116.559, 8.26312, 0.83", "-76.8642, 118.402, 8.37794, 0.55", "-77.8018, 120.949, 8.54214, 0.83", "-84.5419, 131.078, 9.28026, 0.83", "-93.3072, 138.957, 12.0802, 0.83", "-101.587, 145.913, 17.4985, 0.83", "-110.404, 152.798, 22.0857, 0.83", "-120.099, 159.094, 25.5645, 0.83", "-128.776, 166.171, 30.1399, 0.83", "-137.201, 173.664, 34.5509, 0.83", "-146.085, 180.229, 39.4477, 0.83", "-153.062, 187.212, 46.4488, 0.83", "-160.087, 192.194, 54.8857, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-22.0607, 12.1442, 16.1476, 0.55", "-24.1015, 12.2537, 16.09, 0.55", "-25.9095, 12.1432, 16.3635, 0.55", "-29.643, 11.8132, 17.0301, 0.55", "-32.5966, 11.5491, 17.6092, 0.55", "-36.2617, 11.1292, 18.3341, 0.55", "-42.3121, 10.3562, 19.2736, 0.55", "-48.7346, 9.33393, 20.221, 0.55", "-52.4784, 8.58393, 20.7793, 0.55", "-56.5744, 7.48674, 21.3316, 0.55", "-59.4507, 6.53168, 21.6502, 0.55", "-63.637, 4.88653, 21.721, 0.55", "-64.7937, 4.35467, 21.5318, 0.83", "-67.4586, 3.04952, 20.6635, 0.83", "-70.679, 1.28038, 19.2747, 0.55", "-73.5048, -0.373336, 17.7194, 0.55", "-76.3417, -1.91116, 16.033, 0.83", "-78.6575, -3.15341, 14.6478, 0.28", "-80.8418, -4.27445, 13.2341, 0.55", "-84.005, -5.93901, 11.3342, 0.55", "-85.4651, -6.78443, 10.5594, 0.55", "-87.3146, -7.84758, 9.68373, 0.55", "-90.0028, -9.46686, 8.73925, 0.28", "-91.6515, -10.5155, 8.2926, 0.83", "-95.7375, -13.3879, 7.29449, 0.28", "-97.1915, -14.5411, 7.13397, 0.55", "-108.597, -19.0454, 8.09204, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.854374, -6.15222, 5.667, 2.22", "-1.94046, -9.40027, 2.84535, 2.22", "-2.9398, -12.3889, 0.249065, 1.38", "-4.54119, -17.1781, -3.91134, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.854374, -6.15222, 5.667, 1.66", "0.548228, -6.33301, 4.91991, 1.66", "2.55813, -6.59207, 3.84934, 1.66", "5.94256, -7.02831, 2.04663, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.68178, 38.618, 1.59687, 0.28", "13.4606, 53.1342, 1.59687, 0.28", "17.2394, 67.6504, 1.59687, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "27.4798, 2.62773, -5.09266, 0.83", "25.7957, 4.35186, -5.39166, 0.83", "23.9937, 5.64436, -5.60237, 0.83", "22.8362, 6.3767, -5.91056, 0.83", "21.1043, 7.62444, -6.56026, 0.83", "19.7466, 8.65048, -7.12017, 0.55", "18.7601, 9.39813, -7.64039, 0.83", "17.7071, 10.1934, -8.18436, 0.83", "15.9603, 11.644, -9.22311, 0.55", "14.0408, 13.3209, -10.4857, 0.55", "13.0525, 14.3022, -11.2445, 0.55", "11.3427, 16.3066, -12.7732, 0.83", "10.2571, 17.7672, -13.8192, 1.11", "8.74919, 20.009, -15.3272, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "27.4798, 2.62773, -5.09266, 0.55", "31.501, 6.59017, 5.06718, 0.55", "32.0071, 7.01935, 6.16304, 0.55", "33.2282, 8.02252, 8.34539, 1.11", "34.974, 9.45693, 11.4658, 0.55", "36.0306, 10.3249, 13.3543, 0.55", "36.294, 10.5413, 13.825, 0.83", "38.1866, 11.2963, 15.107, 0.55", "39.9507, 12.2487, 16.5644, 1.11", "45.1902, 17.2552, 24.0091, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-5.3542, -26.5431, 3.50657, 0.83", "-4.51153, -27.6361, 3.2661, 0.83", "-3.65021, -28.7309, 2.94904, 0.83", "-2.98375, -29.6482, 2.59237, 0.83", "-1.79702, -31.5351, 1.83837, 0.28", "-1.04683, -32.8121, 1.32459, 0.83", "0.159243, -34.8268, 0.517898, 0.28", "0.57788, -35.4783, 0.244166, 0.83", "1.76209, -37.2372, -0.462716, 0.28", "2.69672, -38.725, -1.0247, 0.55", "3.02604, -39.2631, -1.217, 0.28", "3.91154, -40.7413, -1.6157, 0.55", "4.73574, -42.1314, -1.87997, 0.55", "5.76959, -43.8525, -2.16576, 0.55", "6.94326, -45.7261, -2.41239, 0.28", "7.37746, -46.4271, -2.50774, 0.83", "7.98621, -47.5315, -2.62636, 0.28", "8.54203, -48.6533, -2.71813, 0.55", "9.13465, -49.888, -2.89142, 0.55", "9.69651, -51.0538, -3.08887, 0.55", "10.4157, -52.4043, -3.33308, 0.83", "11.0651, -53.586, -3.5593, 0.55", "12.5293, -56.1119, -4.06528, 0.55", "14.0076, -58.6063, -4.55627, 2.22", "15.1495, -60.4812, -4.92293, 0.55", "16.1042, -61.9918, -5.22353, 0.55", "17.2135, -63.7014, -5.56057, 0.28", "18.0294, -64.9076, -5.83182, 0.55", "19.0179, -66.3297, -6.13817, 0.28", "19.661, -67.2668, -6.3048, 0.83", "20.291, -68.2274, -6.50357, 0.28", "21.1309, -69.6507, -6.79896, 0.55", "22.0689, -71.5149, -7.14282, 0.28", "22.5263, -72.5603, -7.31055, 0.55", "22.9434, -73.6611, -7.50228, 0.55", "23.3953, -75.0586, -7.74496, 0.28", "23.7291, -76.1638, -7.9183, 0.55", "24.4392, -78.6373, -8.25304, 0.28", "24.6599, -79.4429, -8.3334, 0.55", "25.2565, -81.4778, -8.59831, 0.28", "25.4944, -82.1675, -8.69485, 0.55", "26.2235, -84.032, -9.01816, 0.28", "26.4975, -84.6643, -9.16173, 0.55", "27.4424, -86.6626, -9.69902, 0.28", "28.0373, -87.7967, -10.0468, 0.83", "28.9311, -89.4636, -10.5885, 0.28", "29.6282, -90.7908, -11.0691, 0.55", "30.5015, -92.4505, -11.7242, 0.28", "30.9474, -93.2651, -12.0211, 0.55", "32.3933, -95.8741, -12.8304, 0.28", "33.1497, -97.2457, -13.2182, 0.55", "33.7333, -98.3169, -13.4628, 0.55", "34.5023, -99.7374, -13.7025, 0.55", "36.019, -102.502, -14.0127, 0.28", "36.4668, -103.327, -14.0852, 0.55", "38.0395, -106.184, -14.2091, 0.28", "38.8793, -107.54, -14.284, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.3542, -26.5431, 3.50657, 0.55", "-8.18552, -28.3429, 4.47184, 0.55", "-10.9621, -30.0387, 5.55774, 0.55", "-13.9328, -31.6771, 6.76204, 0.55", "-17.7046, -33.5388, 8.19505, 0.55", "-19.9646, -34.5456, 9.00938, 0.55", "-20.9561, -34.9644, 9.37144, 0.55", "-22.7252, -35.6827, 10.0022, 0.83", "-24.7564, -36.3719, 10.7828, 0.83", "-27.4625, -37.269, 11.8109, 0.55", "-28.4649, -37.6598, 12.2291, 0.55", "-30.9168, -38.7344, 13.3397, 0.55", "-33.6509, -40.1627, 14.61, 0.83", "-37.3477, -42.4153, 16.2921, 0.28", "-39.0256, -43.6073, 17.1116, 1.11", "-41.4643, -45.5958, 18.429, 0.55", "-42.7163, -46.7302, 19.111, 0.55", "-43.834, -47.8189, 19.6917, 0.83", "-44.8225, -48.8616, 20.2106, 0.28", "-45.2249, -49.3342, 20.3408, 0.55", "-46.4655, -50.8139, 20.6411, 0.28", "-47.1162, -51.6088, 20.6931, 0.55", "-48.4853, -53.1906, 20.7276, 0.28", "-49.6339, -54.4375, 20.7234, 0.55", "-51.1373, -55.9526, 20.7336, 0.28", "-51.9146, -56.64, 20.7385, 0.55", "-53.6843, -58.0256, 20.7286, 0.28", "-56.1559, -59.8055, 20.7455, 0.83", "-59.166, -61.7923, 20.8133, 0.55", "-60.8268, -62.7959, 20.8891, 0.55", "-63.0771, -63.9768, 21.0305, 0.55", "-65.5298, -65.1063, 21.2221, 0.28", "-66.3586, -65.4412, 21.3035, 0.55", "-68.3914, -66.1449, 21.5063, 0.28", "-68.9985, -66.3252, 21.5635, 0.83", "-71.9453, -67.1833, 21.8931, 0.28", "-73.9187, -67.7147, 22.2341, 0.83", "-75.8661, -68.1292, 22.6804, 0.28", "-76.9993, -68.3033, 22.9536, 0.83", "-78.938, -68.4639, 23.4592, 0.28", "-80.5024, -68.4717, 23.8932, 0.55", "-82.4349, -68.2709, 24.4795, 0.28", "-83.2643, -68.0365, 24.7654, 0.83", "-84.7465, -67.3659, 25.3993, 0.28", "-85.2049, -67.1223, 25.6227, 0.55", "-86.0468, -66.6908, 26.035, 0.28", "-86.7902, -66.3688, 26.4037, 0.55", "-89.7036, -65.961, 27.7968, 0.28", "-90.2729, -65.9849, 28.065, 0.83", "-91.1959, -66.1397, 28.4414, 0.83", "-94.0553, -66.8807, 29.565, 0.28", "-95.6393, -67.4727, 30.0716, 0.83", "-99.7584, -69.4151, 31.143, 0.28", "-100.651, -69.8825, 31.3305, 0.83", "-102.553, -70.9356, 31.7228, 0.28", "-104.879, -72.3, 32.1802, 0.83", "-108.225, -74.5216, 32.7446, 0.28", "-109.182, -75.1943, 32.8379, 0.83", "-117.818, -78.1997, 37.4177, 0.83", "-126.272, -79.4554, 42.9991, 0.83", "-134.162, -81.7501, 49.0718, 0.83", "-142.859, -83.0444, 54.2573, 0.83", "-151.279, -85.8345, 59.3405, 0.83", "-158.622, -88.5172, 65.9265, 0.83", "-166.854, -90.5072, 71.635, 0.83", "-175.206, -90.7153, 77.4932, 0.83", "-184.132, -91.2847, 82.4076, 0.83", "-193.417, -90.4442, 86.5561, 0.83", "-203.002, -89.6565, 89.9664, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-0.474475, -24.5488, 3.61312, 0.55", "-1.83819, -28.1809, 4.37682, 0.55", "-2.50754, -30.1936, 4.72846, 0.55", "-3.29767, -32.7929, 5.09707, 1.11", "-4.00822, -35.1922, 5.42105, 0.83", "-4.7691, -37.7618, 5.74701, 1.66", "-5.51256, -40.2141, 6.15812, 0.83", "-5.81893, -41.2511, 6.36951, 0.55", "-6.40618, -43.075, 6.74412, 1.11", "-6.86552, -44.379, 6.97684, 0.55", "-7.55236, -46.267, 7.27925, 1.11", "-8.88484, -49.6745, 7.88049, 0.55", "-9.69707, -51.5083, 8.22472, 0.55", "-10.1059, -52.3733, 8.36798, 0.83", "-11.1581, -54.5609, 8.5891, 0.55", "-11.7426, -55.773, 8.59784, 0.83", "-12.4621, -57.2959, 8.57925, 0.28", "-12.9496, -58.3878, 8.52682, 1.11", "-13.3961, -59.4325, 8.5245, 1.11", "-14.1197, -61.3617, 8.59735, 0.55", "-14.5441, -62.6433, 8.68824, 0.55", "-15.477, -65.5954, 8.9579, 0.55", "-16.0342, -67.4602, 9.23357, 0.55", "-16.522, -69.2753, 9.58027, 0.55", "-16.8406, -70.6389, 9.8716, 0.55", "-17.0927, -71.7674, 10.133, 0.83", "-17.3209, -72.8074, 10.3519, 0.83", "-17.8141, -74.8494, 10.6353, 0.28", "-17.9723, -75.4184, 10.6514, 0.55", "-18.4951, -76.9976, 10.4826, 0.28", "-18.7343, -77.6751, 10.2449, 0.55", "-19.1493, -78.8131, 9.68906, 0.28", "-19.4912, -79.5958, 9.26351, 0.83", "-21.0335, -82.9038, 7.39202, 0.28", "-21.6268, -84.1384, 6.71642, 0.83", "-23.2719, -87.4297, 4.98005, 0.55", "-23.9714, -88.8243, 4.30269, 1.38", "-25.0698, -90.9956, 3.33762, 0.55", "-25.7798, -92.3568, 2.8541, 0.55", "-26.7884, -94.1552, 2.53715, 0.28", "-27.3018, -94.9875, 2.45225, 0.83", "-27.929, -95.8723, 2.4629, 0.28", "-28.0841, -96.0906, 2.45124, 0.83", "-29.064, -97.4844, 2.25942, 0.28", "-30.0728, -98.888, 2.01577, 0.55", "-30.8418, -100.061, 1.69448, 0.28", "-31.1144, -100.554, 1.50214, 0.55", "-31.9172, -102.244, 0.763444, 0.28", "-32.1118, -102.761, 0.547607, 0.55", "-32.4238, -104.01, -0.0911909, 0.55", "-32.7776, -105.657, -0.980729, 0.28", "-32.9952, -106.625, -1.51441, 0.55", "-33.283, -107.741, -2.14165, 0.28", "-33.6447, -109.136, -2.86327, 1.11", "-34.5045, -111.885, -4.40265, 0.55", "-34.9459, -112.975, -4.91664, 0.83", "-35.7448, -114.832, -5.39935, 0.28", "-35.9504, -115.318, -5.50588, 0.83", "-36.6076, -116.961, -5.77945, 0.28", "-37.0687, -118.329, -5.83827, 0.55", "-37.9533, -121.41, -5.88848, 0.55", "-38.4412, -123.387, -6.08202, 0.55", "-39.0705, -126.391, -6.38379, 0.28", "-39.2502, -127.326, -6.42315, 0.28", "-39.5372, -128.925, -6.53534, 0.83", "-39.8468, -131.066, -6.81155, 0.28", "-40.1125, -132.807, -7.18046, 0.28", "-40.3932, -134.124, -7.45213, 0.83", "-41.3139, -137.466, -7.91733, 0.28", "-42.0485, -139.427, -8.01747, 0.55", "-43.0656, -141.926, -8.07878, 0.28", "-43.7338, -143.498, -8.04133, 0.83", "-44.7954, -145.74, -8.00933, 1.38", "-45.4684, -146.929, -8.02981, 0.55", "-47.6115, -150.007, -8.22709, 1.66", "-51.6473, -158.566, -9.88417, 1.66", "-56.1318, -167.032, -10.5306, 1.66", "-60.977, -175.312, -10.6705, 1.66", "-65.4649, -183.587, -12.5225, 1.66", "-69.1212, -192.124, -14.9787, 1.66", "-74.1656, -200.224, -15.8954, 1.66", "-80.2288, -207.612, -16.0343, 1.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-0.474475, -24.5488, 3.61312, 0.83", "0.534125, -25.9507, 3.12815, 0.83", "1.76712, -27.6644, 2.53529, 0.83", "2.34278, -28.4645, 2.25849, 0.83", "3.48552, -30.0527, 1.70902, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.2643, -15.1708, -5.15329, 0.83", "-15.1458, -17.3992, -6.58218, 0.83", "-15.7361, -18.4929, -7.1022, 0.83", "-16.1761, -19.6856, -7.58235, 0.83", "-16.8987, -21.6441, -8.37084, 1.94", "-17.7648, -23.9915, -9.31586, 0.55", "-18.7684, -26.7117, -10.411, 0.55", "-19.0579, -27.9592, -10.7765, 0.55", "-19.4712, -30.3943, -11.45, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-13.2643, -15.1708, -5.15329, 0.83", "-14.586, -17.6115, -6.10327, 0.83", "-16.1071, -20.0739, -6.61246, 0.55", "-18.3447, -23.6214, -6.93857, 0.55", "-20.7797, -27.2165, -7.02043, 0.55", "-23.108, -30.4735, -6.83405, 0.55", "-25.4735, -33.6312, -6.49244, 0.55", "-30.0138, -38.6709, -5.45811, 0.55", "-31.8361, -40.4173, -4.84447, 0.28", "-33.9864, -42.2954, -3.85773, 0.55", "-36.0043, -43.7924, -2.68799, 0.55", "-37.1871, -44.5193, -1.98374, 0.55", "-39.3373, -45.5673, -0.715737, 0.55", "-41.4934, -46.3488, 0.187628, 0.28", "-42.2059, -46.5307, 0.457459, 0.28", "-44.7489, -47.0408, 1.30603, 0.83", "-48.5841, -47.664, 1.95665, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.54119, -17.1781, -3.91134, 1.11", "-7.78376, -15.9819, -2.14836, 1.11", "-9.20502, -15.4576, -1.37563, 0.83", "-11.703, -14.5361, -0.0174811, 1.38", "-16.5724, -12.7398, 2.62998, 0.83", "-18.2584, -12.1178, 3.54665, 0.83", "-21.3356, -10.9826, 5.21976, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.54119, -17.1781, -3.91134, 1.11", "-4.43032, -19.5376, -4.20312, 1.11", "-4.20381, -23.754, -4.81753, 1.11", "-3.98243, -28.7559, -5.56604, 1.11", "-3.74454, -34.1309, -6.37037, 1.11", "-3.58861, -37.654, -6.89759, 1.11", "-3.41618, -41.5499, -7.4806, 1.11", "-3.32291, -43.7115, -7.82314, 1.11", "-3.1044, -48.3211, -8.63451, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.94256, -7.02831, 2.04663, 0.55", "8.26643, -6.74703, 4.31297, 0.55", "11.3927, -6.65087, 7.558, 0.55", "14.1312, -6.79947, 10.2341, 0.83", "15.688, -6.94822, 11.633, 0.83", "18.2671, -7.20288, 13.8429, 0.83", "20.9877, -7.39313, 16.2146, 0.55", "22.7014, -7.46269, 17.8989, 0.55", "25.804, -7.00749, 20.5531, 0.83", "26.6102, -6.10836, 21.693, 0.83", "27.1698, -4.47605, 22.9921, 0.28", "27.7234, -2.60323, 24.2092, 0.83", "28.3627, -0.835125, 25.2836, 0.55", "28.802, 0.144791, 25.8943, 0.55", "30.2907, 3.31816, 27.8028, 0.55", "31.9497, 6.47526, 29.5079, 0.55", "32.8447, 7.89113, 30.1177, 0.55", "34.3762, 10.0457, 30.9705, 0.55", "35.7684, 11.9515, 31.6514, 0.55", "37.4046, 14.0501, 32.3268, 0.55", "38.7812, 15.6401, 32.761, 0.55", "40.3417, 17.4661, 33.2162, 0.55", "42.9681, 20.7446, 34.0341, 0.55", "44.4283, 22.6737, 34.4737, 0.55", "45.4047, 23.9891, 34.8294, 0.55", "46.9658, 25.8413, 35.668, 0.55", "54.4733, 33.5643, 40.9513, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.94256, -7.02831, 2.04663, 0.55", "6.67383, -8.34841, 2.05804, 0.55", "7.46165, -9.63953, 2.11678, 0.55", "8.42148, -11.2767, 2.27494, 0.55", "9.95784, -14.0075, 2.57007, 0.55", "10.8575, -15.58, 2.74492, 0.55", "12.4825, -18.4627, 3.15823, 0.55", "13.3727, -20.1388, 3.47839, 0.55", "14.4537, -22.3636, 4.02072, 0.55", "15.2541, -24.0426, 4.47075, 0.55", "16.0353, -25.7347, 4.97895, 0.28", "17.0139, -27.8987, 5.61181, 0.83", "17.9319, -30.2061, 6.35131, 0.83", "18.7239, -32.3215, 7.07291, 1.11", "19.512, -34.2768, 7.74739, 0.83", "20.7767, -37.4701, 8.89511, 0.83", "21.6581, -39.7736, 9.71686, 0.83", "22.8918, -42.8489, 10.7461, 0.55", "23.5917, -44.5142, 11.3192, 0.55", "24.6009, -46.7621, 12.1546, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "45.1902, 17.2552, 24.0091, 0.55", "49.2015, 19.1949, 30.4273, 0.55", "52.7676, 22.1376, 36.7383, 0.55", "56.869, 24.4571, 42.9743, 0.55", "61.6727, 26.6812, 48.7231, 0.55", "65.8689, 27.8049, 55.2135, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "45.1902, 17.2552, 24.0091, 0.55", "50.7888, 23.8161, 32.7285, 0.55", "55.2809, 29.4601, 42.6399, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "38.8793, -107.54, -14.284, 0.28", "40.6405, -110.897, -13.7978, 0.28", "41.8492, -113.103, -13.5666, 0.28", "43.1563, -115.459, -13.2924, 0.83", "44.3512, -117.643, -13.0302, 0.28", "45.2901, -119.419, -12.8385, 0.55", "47.3168, -123.237, -12.4682, 0.28", "47.6373, -123.813, -12.4214, 0.55", "48.7258, -125.893, -12.6298, 0.28", "49.0386, -126.534, -12.7984, 0.55", "50.3615, -129.615, -13.7462, 0.28", "50.7658, -130.772, -14.1553, 0.28", "51.1125, -131.969, -14.5137, 0.55", "52.6633, -138.222, -16.2058, 0.28", "53.1136, -140.279, -16.7297, 0.28", "53.7111, -143.527, -17.6183, 0.83", "54.4597, -149.335, -19.2392, 0.28", "54.8913, -153.558, -20.3962, 0.55", "55.0554, -155.654, -20.9233, 0.55", "55.1099, -156.444, -21.0612, 0.55", "55.3543, -161.003, -22.1942, 0.28", "55.3799, -161.946, -22.561, 0.55", "55.5401, -165.262, -24.3799, 0.28", "55.5717, -165.674, -24.6768, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "38.8793, -107.54, -14.284, 0.28", "39.7135, -109.255, -20.734, 0.28", "39.8859, -109.609, -22.067, 0.28", "40.091, -110.031, -23.6527, 0.55", "40.7326, -111.35, -28.6135, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.48552, -30.0527, 1.70902, 0.83", "4.65296, -33.4821, 2.0331, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "3.48552, -30.0527, 1.70902, 0.83", "5.72039, -29.9487, 1.31956, 0.83", "7.36392, -29.802, 1.06919, 0.83", "10.1757, -29.5611, 0.820868, 1.11", "14.0869, -29.225, 0.116484, 0.83", "16.1802, -29.1186, -0.329583, 0.83", "18.2388, -29.0146, -0.81521, 0.83", "19.9411, -28.9733, -1.36059, 0.55", "21.8435, -29.0142, -2.03884, 0.83", "26.2828, -29.1164, -3.60106, 0.55", "27.9591, -29.0486, -4.08944, 0.55", "30.5648, -28.9203, -4.8517, 0.55", "32.1522, -28.8685, -5.32673, 0.55", "33.9992, -28.838, -5.86711, 0.83", "36.0846, -28.7625, -6.41233, 0.83", "37.6066, -28.7061, -6.6618, 0.55", "39.5412, -28.6002, -6.98813, 0.55", "41.4976, -28.547, -7.26322, 0.55", "42.4916, -28.5098, -7.37907, 0.83", "43.9826, -28.4747, -7.63527, 0.28", "45.2567, -28.5004, -7.99374, 0.83", "46.2358, -28.5226, -8.31223, 0.28", "47.4, -28.5403, -8.7332, 0.83", "48.8321, -28.5655, -9.37951, 0.28", "50.4384, -28.585, -10.2087, 0.28", "52.4848, -28.5922, -11.3283, 1.11", "54.4562, -28.6239, -12.4684, 0.28", "55.3403, -28.6437, -13.0498, 0.83", "58.8421, -28.6397, -15.3771, 0.28", "59.2981, -28.6397, -15.6962, 0.83", "60.6613, -28.6237, -16.5517, 0.28", "62.6287, -28.6566, -17.7112, 0.55", "65.4669, -28.7795, -19.2833, 0.83", "68.1186, -28.943, -20.5361, 0.28", "71.1787, -29.2182, -21.8845, 0.55", "73.6232, -29.4408, -22.9317, 0.28", "75.6, -29.6706, -23.6841, 0.83", "76.8616, -29.8291, -24.1308, 0.28", "78.0346, -30.0035, -24.4911, 0.83", "81.599, -30.612, -25.4417, 0.28", "82.7523, -30.7848, -25.7263, 0.28", "84.4201, -31.013, -26.2633, 0.83", "88.3707, -31.3723, -27.4713, 0.28", "90.4785, -31.5499, -28.176, 0.28", "92.5216, -31.774, -28.8657, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-19.4712, -30.3943, -11.45, 0.55", "-21.613, -30.5299, -12.2913, 0.55", "-24.16, -30.5718, -13.2932, 0.83", "-26.7686, -30.5521, -14.2801, 0.28", "-28.9919, -30.5598, -15.0864, 0.55", "-31.194, -30.6001, -15.9042, 0.28", "-31.9209, -30.618, -16.1744, 0.55", "-33.0488, -30.6795, -16.6229, 0.55", "-34.8637, -30.8152, -17.2952, 0.55", "-35.976, -30.9131, -17.6345, 0.55", "-38.5635, -31.1933, -18.3862, 0.55", "-39.6058, -31.3813, -18.6759, 0.55", "-41.9033, -31.9839, -19.2684, 0.55", "-45.302, -33.0712, -20.0711, 1.11", "-47.2266, -33.7873, -20.4747, 0.28", "-47.9353, -34.0583, -20.6131, 0.55", "-49.3251, -34.5822, -20.8441, 0.28", "-51.2871, -35.249, -21.1738, 0.83", "-53.1203, -35.7082, -21.4537, 0.55", "-54.8423, -35.9253, -21.6763, 0.83", "-56.9046, -35.7855, -21.9986, 0.55", "-58.3345, -35.4877, -22.6802, 0.28", "-59.2387, -35.2238, -23.3185, 0.55", "-60.1252, -35.0499, -24.4344, 0.28", "-60.5115, -35.0461, -25.0828, 0.83", "-61.1775, -35.1179, -26.3096, 0.83", "-64.4694, -35.9158, -32.3987, 0.28", "-64.9339, -36.1148, -33.7414, 0.55", "-65.0907, -35.5579, -28.3395, 0.28", "-65.6531, -35.5398, -26.9851, 0.55", "-66.9101, -35.6687, -24.9467, 0.28", "-67.7214, -35.7536, -23.8111, 0.55", "-78.3538, -36.6452, -10.0193, 0.55", "-79.3747, -36.6962, -8.73482, 0.28", "-80.1304, -36.7139, -7.83628, 0.55", "-81.3086, -36.7688, -6.49534, 0.28", "-83.103, -36.9138, -4.53062, 0.83", "-85.1198, -37.09, -2.69447, 0.28", "-87.0189, -37.3153, -2.34529, 0.55", "-89.9713, -37.6416, -1.73593, 0.55", "-91.4025, -37.7536, -1.4343, 0.83", "-92.4889, -37.8283, -1.21878, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-19.4712, -30.3943, -11.45, 0.55", "-19.3094, -31.9745, -11.7002, 0.55", "-19.1422, -34.1071, -12.0585, 0.83", "-19.025, -36.6986, -12.4135, 0.55", "-19.0218, -39.9327, -12.7538, 0.83", "-19.1846, -44.4138, -13.0735, 0.55", "-19.2847, -45.7503, -13.1296, 0.28", "-19.51, -47.3499, -13.1768, 0.28", "-19.8701, -49.2559, -13.1954, 0.28", "-20.4577, -51.8588, -13.0997, 0.83", "-20.9655, -53.8015, -12.9305, 0.28", "-21.7805, -56.6454, -12.5179, 2.22", "-22.8061, -60.1177, -12.0746, 0.28", "-23.2791, -61.6804, -11.9041, 0.83", "-23.9069, -63.6962, -11.7408, 0.28", "-24.3148, -64.9878, -11.6617, 0.28", "-24.6437, -65.9426, -11.6288, 0.55", "-25.4067, -68.024, -11.6708, 0.28", "-25.6377, -68.628, -11.7089, 0.55", "-26.5412, -70.9185, -11.9481, 0.28", "-27.0961, -72.496, -12.3176, 0.55", "-27.6901, -74.4054, -12.8829, 0.55", "-28.4862, -77.2603, -13.837, 0.28", "-28.718, -78.143, -14.1569, 0.28", "-29.2539, -80.2637, -14.9498, 0.83", "-30.4194, -84.9147, -16.554, 0.28", "-30.7909, -86.4186, -17.0308, 0.83", "-31.3229, -88.6643, -17.674, 0.28", "-31.5456, -89.5317, -17.903, 0.55", "-32.4284, -92.7424, -18.6934, 0.28", "-32.9619, -94.9637, -19.3668, 0.55", "-33.8533, -97.9996, -20.1598, 0.28", "-34.0311, -98.6786, -20.4123, 0.55", "-34.4618, -100.587, -21.2729, 0.28", "-34.6316, -101.501, -21.7003, 0.55", "-35.3493, -106.641, -24.2883, 0.28", "-35.6768, -109.605, -25.904, 0.55", "-36.0183, -112.943, -27.6074, 0.28", "-36.1033, -114.137, -28.1988, 0.55", "-36.2117, -116.114, -28.9626, 0.28", "-36.2701, -116.821, -29.14, 0.55", "-36.5033, -118.406, -29.2135, 0.28", "-36.5837, -119.119, -29.2437, 0.55", "-36.9983, -121.597, -29.0793, 0.28", "-37.4562, -123.575, -28.9045, 0.55", "-38.0352, -125.463, -28.7082, 0.28", "-38.3597, -126.398, -28.547, 0.55", "-38.7472, -127.504, -28.3428, 0.28", "-38.9484, -128.106, -28.2356, 0.55", "-39.7525, -130.37, -27.8456, 0.28", "-40.4682, -132.62, -27.7084, 0.55", "-41.1414, -135.177, -27.6598, 0.28", "-41.5679, -136.852, -27.6663, 0.55", "-41.9605, -138.423, -27.8157, 0.55", "-42.2308, -139.531, -27.9768, 0.55", "-43.1866, -143.45, -28.8658, 0.28", "-44.3646, -147.664, -29.9833, 0.28", "-45.1436, -150.074, -30.5905, 0.83", "-47.0082, -155.221, -31.755, 0.28", "-47.5414, -156.555, -32.0481, 0.55", "-48.8392, -159.56, -32.6706, 0.28", "-49.8924, -161.71, -33.056, 1.11", "-51.4716, -164.685, -33.4791, 0.28", "-51.8063, -165.312, -33.455, 0.55", "-52.574, -166.717, -33.0627, 0.28", "-53.082, -167.698, -32.7229, 0.55", "-53.9213, -169.369, -32.0345, 0.28", "-54.4629, -170.494, -31.6254, 0.55", "-56.0276, -173.778, -30.5829, 0.28", "-56.4021, -174.689, -30.332, 0.55", "-56.9304, -176.237, -29.9424, 0.28", "-57.2576, -177.525, -29.6277, 0.55", "-58.0032, -181.495, -28.7355, 0.28", "-58.0491, -182.156, -28.6498, 0.83", "-58.0951, -186.161, -28.3938, 0.28", "-58.0657, -187.545, -28.3297, 0.55", "-57.9663, -190.195, -28.2333, 0.28", "-57.8814, -191.844, -28.2232, 0.55", "-57.5447, -198.8, -28.4273, 0.28", "-57.4919, -201.145, -28.6259, 0.83", "-57.5233, -204.303, -29.0671, 0.28", "-57.5642, -205.211, -29.244, 0.55", "-57.7218, -207.479, -29.8635, 0.28", "-57.8272, -208.599, -30.202, 0.55", "-58.3134, -212.146, -31.3601, 0.28", "-58.3384, -212.44, -31.4973, 0.55", "-58.4389, -214.268, -32.3599, 0.28", "-58.4955, -215.927, -33.093, 0.83", "-58.5758, -218.427, -33.959, 0.28", "-58.5963, -219.131, -34.114, 0.55", "-58.821, -225.407, -34.8946, 0.28", "-58.9309, -228.939, -35.2604, 0.28", "-58.9589, -230.126, -35.3107, 0.55", "-59.0933, -233.199, -35.0162, 0.28", "-59.1552, -234.105, -34.7015, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-48.5841, -47.664, 1.95665, 0.55", "-50.7747, -47.3212, 0.817079, 0.55", "-51.9171, -47.1922, 0.19698, 0.55", "-53.9446, -47.0748, -0.840809, 0.55", "-57.0988, -46.923, -2.23947, 0.55", "-61.2672, -46.6736, -3.88052, 0.55", "-65.4958, -46.3406, -5.33813, 0.28", "-67.4667, -46.1118, -5.99867, 0.28", "-69.8537, -45.86, -6.59584, 0.55", "-72.5848, -45.646, -6.90814, 0.28", "-73.8586, -45.5404, -7.15493, 0.55", "-75.3358, -45.4243, -7.55277, 0.28", "-76.8921, -45.2911, -8.11347, 0.83", "-80.0346, -44.9457, -9.56638, 0.28", "-81.4711, -44.7894, -10.3957, 0.55", "-90.178, -44.1251, -16.4052, 0.55", "-91.0014, -44.0815, -17.039, 0.55", "-92.3955, -44.0128, -18.2559, 0.55", "-93.5332, -43.912, -19.4029, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-48.5841, -47.664, 1.95665, 0.83", "-49.4958, -47.255, 2.42534, 0.83", "-50.6848, -46.7216, 3.03657, 1.11", "-52.104, -46.085, 3.76616, 1.11", "-53.9076, -45.2759, 4.69335, 0.28", "-55.5031, -44.5602, 5.51355, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-21.3356, -10.9826, 5.21976, 0.83", "-21.3088, -9.49386, 5.74582, 0.83", "-21.3725, -8.17746, 6.18474, 0.83", "-21.7474, -5.64637, 7.06368, 0.83", "-22.1879, -3.53205, 7.93783, 0.83", "-22.7158, -1.57448, 8.8331, 0.83", "-23.1382, -0.248544, 9.46253, 0.83", "-23.6892, 0.883381, 10.0755, 0.83", "-24.7735, 2.47753, 11.0621, 0.83", "-25.9538, 3.7545, 11.943, 0.83", "-26.5743, 4.33424, 12.3371, 0.83", "-27.7135, 5.35971, 13.079, 0.83", "-28.9738, 6.57662, 13.9328, 0.55", "-29.5768, 7.18656, 14.3297, 0.83", "-30.499, 8.18748, 14.8852, 0.83", "-31.06, 8.82292, 15.1714, 0.28", "-31.9099, 9.89923, 15.6489, 0.55", "-32.6012, 10.8619, 16.083, 0.28", "-33.2953, 12.2445, 16.6072, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-21.3356, -10.9826, 5.21976, 0.83", "-22.6096, -11.034, 4.66824, 0.83", "-24.1601, -11.1623, 4.11847, 0.83", "-25.2697, -11.3701, 3.61906, 0.83", "-27.5674, -12.0048, 2.49066, 0.83", "-29.8136, -12.6869, 1.37279, 0.83", "-30.776, -12.9791, 0.893829, 0.83", "-32.3668, -13.4324, 0.0100309, 0.83", "-34.9255, -14.1102, -1.511, 0.55", "-35.6553, -14.4054, -1.99281, 0.55", "-36.4253, -14.9876, -2.53136, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.1044, -48.3211, -8.63451, 0.83", "-2.93486, -50.7766, -8.68089, 0.83", "-2.7755, -53.4175, -8.70411, 1.11", "-2.7437, -55.507, -8.71002, 0.83", "-2.70995, -56.9913, -8.72352, 0.55", "-2.67793, -57.7737, -8.73858, 0.83", "-2.60083, -60.811, -8.80576, 0.83", "-2.56492, -62.4604, -8.81227, 0.83", "-2.54054, -65.4368, -8.81145, 0.83", "-2.56746, -67.292, -8.78625, 0.55", "-2.64822, -69.782, -8.76931, 0.55", "-2.75422, -72.3581, -8.75065, 0.55", "-2.95191, -75.4969, -8.73446, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.1044, -48.3211, -8.63451, 0.83", "-2.1154, -50.6776, -10.8214, 0.83", "-1.72553, -52.3751, -12.2957, 0.83", "-1.45063, -54.2934, -13.8093, 0.55", "-1.30137, -55.9497, -15.0266, 0.83", "-1.23689, -58.203, -16.4956, 0.83", "-1.21874, -60.2491, -17.6985, 0.83", "-1.45835, -62.9811, -19.1954, 0.55", "-1.63, -64.9973, -20.1831, 0.55", "-1.73037, -65.5791, -20.4614, 0.83", "-2.16271, -67.2908, -21.1398, 0.55", "-2.51269, -68.3714, -21.5164, 0.55", "-3.16131, -70.2523, -22.1943, 1.11", "-3.75313, -71.9058, -22.8515, 1.11", "-4.98452, -74.9511, -24.1693, 0.55", "-5.69476, -76.7002, -25.0407, 1.11", "-6.67404, -79.1329, -26.3791, 0.55", "-6.81766, -79.4769, -26.5576, 0.83", "-7.98073, -82.3284, -27.9252, 0.28", "-8.11494, -82.6779, -28.1008, 0.55", "-8.56258, -84.3545, -28.9655, 0.28", "-8.73042, -85.2844, -29.4335, 0.83", "-8.89192, -87.0396, -30.2288, 0.55", "-8.97791, -88.5331, -30.7838, 0.83", "-9.02477, -90.5124, -31.3871, 0.28", "-9.09144, -92.1679, -31.8574, 0.83", "-9.09042, -94.8956, -32.5575, 0.28", "-8.97863, -97.2949, -33.2339, 0.83", "-8.77923, -98.8963, -33.6947, 0.28", "-8.57983, -99.978, -33.9908, 0.28", "-8.22705, -101.603, -34.4743, 0.83", "-7.61715, -104.349, -35.4396, 0.28", "-7.07549, -106.561, -36.3658, 0.55", "-6.50414, -108.43, -37.154, 0.28", "-5.74013, -110.677, -38.1218, 0.28", "-5.19845, -112.261, -38.7823, 0.55", "-4.82227, -113.413, -39.2414, 0.28", "-4.48478, -114.626, -39.6823, 0.55", "-3.90599, -116.668, -40.3534, 0.28", "-3.51432, -118.178, -40.7991, 1.38", "-2.9453, -121.452, -41.8203, 0.28", "-2.83741, -122.473, -42.1547, 0.55", "-2.74338, -124.358, -42.8137, 0.28", "-2.80079, -126.128, -43.4873, 0.28", "-2.9995, -128.335, -44.3616, 1.11", "-3.33457, -132.81, -46.0093, 0.28", "-3.52908, -135.712, -47.0282, 0.28", "-3.52931, -136.879, -47.3742, 0.83", "-3.56034, -140.465, -48.4398, 0.28", "-3.54421, -141.929, -48.8514, 0.55", "-3.29642, -145.586, -49.8339, 0.28", "-3.21676, -146.176, -49.9641, 0.83", "-2.7624, -150.262, -50.8749, 0.28", "-2.28455, -154.717, -51.9513, 0.55", "-2.02968, -156.006, -52.1728, 0.28", "-1.87799, -156.638, -52.2848, 0.55", "-1.49377, -158.039, -52.5258, 0.55", "-0.983447, -159.607, -52.7704, 0.55", "-0.119786, -161.81, -53.0939, 0.55", "1.85456, -166.122, -53.5244, 0.28", "2.87502, -168.314, -53.7867, 0.28", "3.15346, -168.894, -53.8612, 0.83", "4.24339, -170.981, -54.1997, 0.28", "4.74833, -171.893, -54.3998, 0.55", "5.89091, -174.299, -55.0726, 0.28", "5.96482, -174.553, -55.1879, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "54.4733, 33.5643, 40.9513, 0.55", "61.1403, 39.3844, 45.2603, 0.55", "66.9329, 45.3635, 50.5122, 0.55", "72.92, 50.3218, 56.5133, 0.55", "77.9502, 54.1935, 63.9835, 0.55", "84.532, 57.2451, 70.5677, 0.55", "91.1724, 61.4277, 76.4529, 0.55", "96.9189, 66.6891, 82.44, 0.55", "102.621, 72.4577, 88.0062, 0.55", "109.264, 78.1224, 92.5425, 0.55", "116.116, 84.289, 96.0293, 0.55", "122.028, 90.208, 101.213, 0.55", "127.424, 97.0667, 105.819, 0.55", "131.414, 104.492, 110.975, 0.55", "135.366, 111.406, 116.797, 0.55", "138.413, 117.904, 123.542, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "54.4733, 33.5643, 40.9513, 0.55", "62.2889, 39.9937, 49.0641, 0.55", "68.599, 47.2761, 57.7621, 0.55", "74.595, 56.0763, 65.25, 0.55", "81.5918, 65.3053, 71.241, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "24.6009, -46.7621, 12.1546, 0.55", "25.8807, -48.6413, 11.7573, 0.55", "26.5379, -49.6294, 11.527, 0.55", "28.2062, -52.2198, 10.9247, 0.55", "30.9338, -56.3017, 9.9136, 0.55", "32.269, -58.2325, 9.43115, 0.55", "34.0284, -60.8538, 8.81585, 0.28", "34.9295, -62.2574, 8.51999, 0.83", "35.9497, -63.7784, 8.23157, 0.83", "37.8312, -66.5082, 7.69424, 0.55", "39.4594, -68.8904, 7.24809, 0.55", "41.0435, -71.2973, 6.89227, 0.55", "42.1018, -72.89, 6.76625, 0.28", "42.9372, -74.0925, 6.67607, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "24.6009, -46.7621, 12.1546, 0.55", "24.8103, -48.5287, 12.1185, 0.55", "25.055, -50.1164, 12.093, 0.55", "25.3183, -51.782, 12.5075, 0.55", "25.5439, -53.1267, 12.9915, 0.55", "25.7709, -54.5702, 13.6221, 0.28", "25.9181, -55.6081, 14.1071, 0.55", "26.0344, -56.2975, 14.5107, 0.55", "26.6901, -60.4931, 17.2415, 0.28", "26.716, -60.7618, 17.4182, 0.55", "26.7621, -61.8505, 18.0709, 0.28", "26.8023, -62.4791, 18.3928, 0.55", "26.8618, -63.9303, 19.086, 0.28", "26.8761, -65.198, 19.5513, 0.28", "26.8886, -66.7291, 19.7126, 0.55", "26.8979, -68.3292, 19.8369, 0.55", "26.9346, -69.9331, 19.8654, 0.55", "28.2269, -77.4442, 22.8287, 0.55", "29.9451, -85.0895, 25.1968, 0.55", "32.6098, -92.7204, 26.5243, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "65.8689, 27.8049, 55.2135, 0.55", "73.014, 28.1665, 65.5091, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "65.8689, 27.8049, 55.2135, 0.55", "69.3427, 33.0767, 61.7609, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "55.2809, 29.4601, 42.6399, 0.55", "60.3734, 36.3227, 51.455, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "55.2809, 29.4601, 42.6399, 0.55", "59.746, 35.7264, 50.5042, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "4.65296, -33.4821, 2.0331, 0.83", "6.32678, -34.8914, 1.65441, 0.83", "8.38953, -36.6215, 1.27985, 0.83", "9.36932, -37.4845, 1.0813, 0.28", "10.7402, -38.838, 0.792529, 0.55", "11.6097, -39.745, 0.607541, 0.83", "12.608, -40.8219, 0.375173, 0.28", "13.1379, -41.4283, 0.274581, 0.55", "14.3881, -42.8809, 0.110699, 0.28", "15.3847, -44.127, -0.0190511, 1.11", "16.1681, -45.195, -0.15678, 1.11", "17.2488, -46.6942, -0.391423, 0.28", "18.1244, -47.8911, -0.640572, 0.83", "19.0377, -49.1285, -0.89036, 0.28", "19.402, -49.5937, -0.978023, 0.55", "20.6805, -51.1889, -1.2392, 0.28", "21.3032, -51.9769, -1.34699, 0.55", "23.7993, -55.1717, -1.71684, 0.83", "25.4346, -57.2586, -1.93365, 0.28", "26.6683, -58.7792, -2.0486, 0.55", "27.55, -59.8452, -2.09459, 0.28", "28.6785, -61.1987, -2.06665, 0.55", "29.1408, -61.7555, -2.03253, 0.55", "29.8258, -62.5599, -1.93689, 0.28", "30.3487, -63.1897, -1.86615, 0.55", "31.5738, -64.8083, -1.78211, 0.28", "32.7156, -66.4045, -1.8018, 0.55", "33.275, -67.2692, -1.81561, 0.28", "33.6094, -67.8199, -1.82538, 0.83", "34.2466, -69.0252, -1.88042, 0.83", "34.9407, -70.6136, -1.95704, 0.28", "35.0451, -70.9052, -1.97175, 0.55", "35.4898, -72.3703, -2.07788, 0.28", "35.6512, -72.9229, -2.10837, 0.55", "36.1841, -74.6299, -2.17933, 0.28", "36.6501, -75.9155, -2.20964, 0.55", "37.0636, -76.977, -2.26158, 0.28", "37.8191, -78.7591, -2.38331, 1.38", "38.6447, -80.5306, -2.44347, 0.28", "38.9287, -81.1104, -2.44489, 0.55", "39.7775, -82.7925, -2.39014, 0.55", "41.1784, -85.5374, -2.25616, 0.55", "42.1688, -87.486, -2.18913, 0.55", "43.8909, -90.8741, -2.10111, 0.28", "44.5482, -92.1419, -2.02212, 1.11", "45.2024, -93.3814, -1.90068, 0.28", "45.5499, -93.9966, -1.81356, 0.83", "46.5159, -95.5362, -1.48138, 0.28", "46.6372, -95.7182, -1.44598, 0.55", "48.4162, -98.1624, -1.1311, 0.28", "48.7006, -98.5074, -1.07838, 0.83", "49.4954, -99.4302, -0.944651, 0.28", "49.7736, -99.7723, -0.910379, 0.83", "50.3635, -100.507, -0.819091, 0.28", "51.4974, -101.945, -0.694411, 0.83", "53.9376, -105.046, -0.592044, 0.28", "55.0255, -106.435, -0.586675, 0.83", "56.309, -108.068, -0.617234, 0.28", "57.4868, -109.496, -0.682849, 0.55", "58.2501, -110.362, -0.721297, 0.28", "59.7754, -112.013, -0.780615, 1.11", "61.0492, -113.343, -0.831525, 0.28", "61.882, -114.109, -0.864656, 0.55", "63.1367, -115.153, -0.94865, 0.55", "64.3746, -116.134, -1.08573, 0.55", "65.494, -116.968, -1.2257, 0.28", "65.672, -117.094, -1.24829, 0.83", "68.2896, -118.858, -1.5779, 0.28", "69.6973, -119.787, -1.83262, 0.55", "71.4492, -120.923, -2.24148, 0.28", "72.8882, -121.857, -2.64184, 0.83", "74.2443, -122.719, -3.04227, 0.28", "74.812, -123.085, -3.20729, 0.55", "77.035, -124.551, -3.8213, 0.28", "78.2281, -125.29, -4.1361, 1.11", "83.4412, -131.483, -5.27574, 1.11", "87.8234, -138.419, -5.42995, 1.11", "92.4455, -145.17, -4.86906, 1.11", "97.2747, -151.779, -4.48246, 1.11", "102.021, -158.334, -3.20121, 1.11", "107.845, -163.785, -1.50039, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.65296, -33.4821, 2.0331, 0.28", "4.70184, -34.4533, 2.23063, 0.28", "4.75445, -35.1689, 2.36738, 0.83", "4.83589, -36.0967, 2.47219, 0.28", "4.92607, -37.3456, 2.56244, 0.83", "4.98493, -39.136, 2.59238, 0.55", "4.98979, -39.8908, 2.58774, 0.28", "5.01713, -40.8304, 2.61055, 0.83", "5.06155, -42.4408, 2.6556, 0.28", "5.11028, -44.0842, 2.84637, 0.83", "5.14706, -46.1274, 3.25953, 0.28", "5.15215, -46.8446, 3.42191, 0.83", "5.19209, -49.0837, 3.97188, 0.28", "5.2383, -50.9416, 4.51075, 0.83", "5.35308, -54.0471, 5.63462, 0.28", "5.42934, -55.1898, 6.12022, 0.83", "5.60472, -56.9555, 7.01045, 0.28", "5.68594, -57.8109, 7.43991, 0.55", "4.67229, -66.1864, 8.02205, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-93.5332, -43.912, -19.4029, 0.28", "-99.1809, -42.1452, -19.9886, 0.28", "-100.192, -41.8289, -20.0934, 0.55", "-103.518, -40.7884, -20.4384, 0.28", "-105.6, -40.1371, -20.6543, 0.55", "-106.836, -39.7505, -20.7824, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-93.5332, -43.912, -19.4029, 0.28", "-94.708, -45.3529, -20.4095, 0.28", "-95.4324, -46.3006, -20.583, 0.55", "-97.124, -48.6963, -20.4649, 0.28", "-97.8991, -49.6472, -20.569, 0.55", "-99.7881, -51.8996, -20.9598, 0.28", "-100.44, -52.677, -21.0948, 0.55", "-102.143, -54.6773, -21.1795, 0.28", "-103.119, -55.831, -21.0977, 0.83", "-105.773, -59.0422, -20.5088, 0.28", "-106.482, -59.8626, -20.5196, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-55.5031, -44.5602, 5.51355, 0.28", "-56.2791, -43.7028, 6.77484, 0.28", "-56.6553, -43.3097, 7.19928, 0.55", "-57.5057, -42.494, 7.94899, 0.28", "-57.981, -42.0673, 8.35603, 0.83", "-59.1684, -41.0234, 9.37767, 0.28", "-59.429, -40.7938, 9.6018, 0.55", "-61.0124, -39.491, 10.9479, 0.28", "-61.6433, -38.9862, 11.4356, 0.55", "-62.4493, -38.3164, 11.995, 0.28", "-62.9923, -37.8654, 12.3414, 0.55", "-63.3285, -37.5698, 12.518, 0.28", "-63.9662, -37.0124, 12.9205, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-55.5031, -44.5602, 5.51355, 0.55", "-57.0893, -44.2462, 6.49464, 0.55", "-57.7118, -44.201, 6.84979, 0.55", "-58.6784, -44.2207, 7.28779, 0.83", "-60.2206, -44.3567, 7.88574, 0.28", "-60.7479, -44.4413, 8.0434, 0.55", "-61.601, -44.6055, 8.26148, 0.55", "-62.6764, -44.9913, 8.49413, 0.83", "-64.0753, -45.5938, 8.71897, 0.28", "-64.5099, -45.8074, 8.76336, 0.55", "-65.6112, -46.4036, 8.79802, 0.28", "-65.8295, -46.5173, 8.80726, 0.55", "-67.3941, -47.375, 8.87979, 0.28", "-68.3324, -47.8396, 8.99458, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-33.2953, 12.2445, 16.6072, 0.83", "-34.3339, 16.8333, 19.0981, 0.83", "-35.0054, 19.1962, 20.209, 0.55", "-35.2966, 20.1786, 20.6504, 0.55", "-36.1803, 23.3401, 22.0394, 0.83", "-36.8473, 26.0423, 23.1901, 0.55", "-37.2319, 27.8179, 23.9841, 0.55", "-37.7097, 31.197, 25.4184, 0.55", "-37.8416, 32.1585, 25.8491, 0.83", "-38.1663, 34.9346, 27.0712, 0.28", "-38.2914, 36.7375, 27.8716, 0.83", "-38.3107, 39.0077, 28.9097, 0.28", "-38.168, 40.7789, 29.7412, 0.83", "-39.0995, 50.7198, 35.7985, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-33.2953, 12.2445, 16.6072, 0.55", "-34.9354, 12.0069, 16.7113, 0.55", "-38.8615, 11.4381, 16.9605, 0.55", "-47.1118, 10.6088, 17.5124, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-36.4253, -14.9876, -2.53136, 0.83", "-38.4039, -15.0624, -2.11403, 0.83", "-39.8093, -14.9411, -1.83126, 0.83", "-41.1559, -14.7893, -1.55738, 0.55", "-42.3632, -14.6472, -1.31249, 0.55", "-43.8925, -14.4344, -0.962835, 0.55", "-45.3032, -14.2232, -0.625915, 0.83", "-47.3526, -13.8959, -0.143784, 0.83", "-48.3191, -13.7216, 0.0464379, 0.55", "-48.9268, -13.6036, 0.136735, 0.83", "-50.9835, -13.2063, 0.39514, 0.28", "-51.7684, -13.1013, 0.403937, 0.83", "-52.401, -13.0606, 0.355882, 0.83", "-54.1119, -13.0406, 0.0769999, 0.28", "-54.7239, -13.042, -0.0582111, 0.83", "-55.4978, -13.0696, -0.255278, 0.83", "-57.9009, -13.2899, -0.900999, 0.55", "-59.5935, -13.5018, -1.28318, 0.28", "-60.3484, -13.6698, -1.45603, 0.83", "-61.5184, -14.0857, -1.6874, 0.28", "-62.3937, -14.5651, -1.8494, 0.55", "-63.1308, -15.1467, -1.95892, 0.28", "-63.5279, -15.5569, -1.99451, 0.55", "-65.2261, -17.6908, -2.21345, 0.28", "-65.9692, -18.7378, -2.29876, 0.28", "-66.8912, -20.1841, -2.3598, 0.83", "-67.5131, -21.2181, -2.37821, 0.28", "-67.7472, -21.6079, -2.37449, 0.83", "-68.2207, -22.3641, -2.29812, 0.28", "-68.6051, -22.9511, -2.16076, 0.55", "-69.1034, -23.6811, -1.98665, 0.28", "-69.5306, -24.2442, -1.83793, 0.83", "-70.3034, -25.1143, -1.5766, 0.28", "-70.7743, -25.6432, -1.4375, 0.55", "-71.494, -26.4352, -1.24643, 0.28", "-71.865, -26.8344, -1.15573, 0.55", "-72.962, -27.9751, -0.915198, 0.28", "-74.4542, -29.4128, -0.752949, 0.55", "-75.5827, -30.3968, -0.728275, 0.28", "-76.0298, -30.7331, -0.749788, 0.83", "-76.6963, -31.1425, -0.805539, 0.28", "-77.3119, -31.4918, -0.886241, 0.83", "-79.4529, -32.5253, -1.34904, 0.28", "-79.8139, -32.6635, -1.45285, 0.83", "-81.1202, -32.989, -1.81622, 0.28", "-81.6835, -33.0955, -1.99624, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-36.4253, -14.9876, -2.53136, 0.55", "-36.2741, -16.3767, -2.21316, 0.55", "-36.0331, -18.7063, -1.6699, 0.55", "-35.9582, -20.0134, -1.31725, 1.11", "-35.928, -21.3403, -1.11337, 0.55", "-35.9293, -22.9472, -0.951483, 0.55", "-35.967, -24.3885, -0.856293, 0.55", "-36.0377, -25.5742, -0.83497, 0.28", "-36.3005, -27.5619, -0.894597, 1.11", "-36.7906, -30.9946, -1.08748, 0.28", "-37.0302, -32.3068, -1.16431, 0.28", "-37.1582, -32.8949, -1.2, 0.55", "-37.3858, -33.7388, -1.24393, 0.28", "-37.6792, -34.8429, -1.30016, 0.28", "-38.0032, -35.9673, -1.33072, 0.55", "-38.5021, -37.5797, -1.23648, 0.28", "-38.8559, -38.7203, -1.18916, 0.55", "-39.3109, -40.2462, -1.13435, 0.28", "-39.8694, -42.0477, -1.12596, 0.28", "-40.2709, -43.2073, -1.13795, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.95191, -75.4969, -8.73446, 0.55", "-5.92054, -78.8491, -7.33571, 0.55", "-7.94732, -81.2683, -6.37102, 0.55", "-9.04222, -82.5572, -5.84811, 0.28", "-10.7622, -84.6072, -5.02833, 0.55", "-11.9098, -85.9857, -4.47816, 0.28", "-13.0485, -87.3685, -3.93234, 0.55", "-14.277, -88.949, -3.31425, 0.55", "-15.3011, -90.3982, -2.74685, 0.28", "-15.6346, -90.9865, -2.54883, 0.55", "-16.0376, -91.8481, -2.30597, 0.28", "-16.4927, -93.0123, -2.03851, 0.55", "-16.9811, -94.5155, -1.73017, 0.28", "-17.4876, -96.1416, -1.35595, 0.55", "-17.7666, -97.1268, -1.12513, 0.28", "-18.056, -98.125, -0.907951, 0.83", "-18.6015, -100.017, -0.536117, 0.28", "-18.7928, -100.681, -0.447728, 0.55", "-19.3259, -102.505, -0.31392, 0.28", "-19.4307, -102.86, -0.297083, 0.83", "-20.052, -104.951, -0.232321, 0.28", "-20.3597, -106.029, -0.198333, 0.83", "-21.2209, -108.823, -0.360526, 0.28", "-22.0745, -111.14, -0.487832, 0.28", "-22.8105, -112.881, -0.560823, 0.55", "-23.9393, -115.274, -0.590222, 0.55", "-25.1345, -117.612, -0.454314, 1.11", "-27.6692, -122.202, 0.0589079, 0.28", "-29.6641, -125.535, 0.643529, 0.83", "-31.1674, -127.749, 1.08094, 0.28", "-32.0573, -128.927, 1.30415, 0.55", "-34.1469, -131.679, 1.85813, 0.28", "-34.5443, -132.215, 1.98456, 0.28", "-35.3615, -133.487, 2.33612, 0.55", "-36.7992, -136.386, 3.00809, 0.28", "-37.7878, -138.969, 3.57553, 0.83", "-38.9924, -143.3, 4.50781, 0.28", "-39.2157, -144.451, 4.7399, 0.83", "-39.5021, -147.187, 5.38627, 0.83", "-39.6465, -150.408, 6.28653, 0.28", "-39.6363, -152.074, 6.80557, 0.83", "-39.6049, -154.233, 7.4951, 0.28", "-39.6309, -155.594, 7.88656, 0.55", "-39.7669, -158.637, 8.66017, 0.28", "-39.8454, -159.9, 8.90172, 0.55", "-40.061, -162.352, 9.20253, 0.83", "-40.1215, -163.397, 9.30535, 0.83", "-40.1957, -165.627, 9.44735, 0.28", "-40.2165, -167.079, 9.40278, 0.55", "-40.159, -170.991, 8.86398, 0.28", "-40.1403, -171.335, 8.78231, 0.55", "-39.9382, -173.973, 7.90207, 0.28", "-39.8823, -174.618, 7.64697, 0.55", "-39.5628, -177.828, 6.02674, 0.28", "-39.5216, -178.238, 5.77738, 0.55", "-39.3449, -179.677, 4.61513, 0.28", "-39.3281, -179.949, 4.37248, 0.55", "-40.417, -192.341, 6.72369, 0.55", "-42.5994, -204.318, 10.1239, 0.55", "-46.1791, -216.419, 11.0529, 0.55", "-49.8619, -227.954, 14.6157, 0.55", "-51.847, -240.129, 17.4161, 0.55", "-52.3232, -252.414, 20.4077, 0.55", "-53.685, -263.75, 25.7507, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.95191, -75.4969, -8.73446, 0.55", "-2.84022, -77.275, -8.84994, 0.55", "-2.75138, -78.8289, -8.95328, 0.55", "-2.67684, -80.5864, -9.0663, 0.28", "-2.66425, -81.2315, -9.10518, 0.55", "-2.74861, -83.8059, -9.23213, 0.55", "-2.86277, -85.6324, -9.3119, 0.28", "-3.01306, -87.6331, -9.36715, 0.28", "-3.06651, -88.272, -9.34459, 0.55", "-3.21946, -90.0246, -9.20216, 0.55", "-3.50664, -93.0716, -8.83068, 0.55", "-3.71123, -95.3419, -8.47999, 0.55", "-3.76378, -96.4599, -8.30529, 0.55", "-3.83016, -99.8869, -7.83608, 0.28", "-3.83172, -100.793, -7.72146, 0.83", "-3.79579, -102.793, -7.48679, 0.55", "-3.70765, -104.538, -7.33482, 0.55", "-3.56999, -107.404, -7.18512, 0.55", "-3.49588, -109.424, -7.15151, 0.83", "-3.43264, -110.871, -7.19225, 0.28", "-3.40415, -111.449, -7.19994, 0.55", "-3.26427, -113.378, -7.115, 0.28", "-3.25957, -113.45, -7.10752, 0.55", "-3.05314, -115.514, -6.48626, 0.28", "-2.91641, -116.607, -6.0431, 0.83", "-2.8248, -117.431, -5.67181, 0.83", "-2.63284, -120.285, -4.40358, 0.28", "-2.60294, -121.039, -4.08341, 0.55", "-2.4463, -125.777, -2.25954, 0.28", "-2.37496, -127.592, -1.6277, 0.28", "-2.3395, -128.447, -1.36499, 0.83", "-2.28085, -131.059, -0.716072, 0.28", "-2.24578, -132.845, -0.427754, 0.28", "-2.19101, -133.764, -0.355519, 0.55", "-1.99096, -136.0, -0.498983, 0.55", "-1.81966, -137.137, -0.583913, 0.55", "-1.60625, -138.598, -0.685501, 0.28", "-1.4644, -139.504, -0.686755, 0.28", "-1.32937, -140.403, -0.648046, 0.55", "-0.925845, -143.275, -0.453869, 0.28", "-0.731456, -144.992, -0.307257, 0.83", "-0.583702, -146.914, -0.229497, 0.83", "-0.501981, -149.093, -0.221878, 0.55", "-0.505231, -151.302, -0.223136, 0.28", "-0.526521, -152.466, -0.237821, 0.28", "-0.537379, -153.275, -0.232778, 0.55", "-0.555992, -156.29, -0.228782, 0.28", "-0.561841, -157.165, -0.245963, 0.55", "-0.632018, -159.303, -0.331545, 0.28", "-0.703392, -160.78, -0.344408, 0.83", "-0.787753, -163.414, -0.297953, 0.28", "-0.79608, -163.985, -0.271878, 0.55", "-0.804306, -166.85, 0.0399359, 0.28", "-0.814976, -167.719, 0.125299, 0.55", "-0.804161, -169.169, 0.289235, 0.55", "-0.772051, -170.345, 0.491229, 0.28", "-0.732902, -170.906, 0.591824, 0.55", "-0.497037, -172.91, 1.00834, 0.28", "-0.411669, -173.456, 1.15115, 0.55", "0.160814, -176.585, 2.05781, 0.28", "0.378534, -177.583, 2.3795, 0.55", "0.820665, -179.483, 3.03861, 0.28", "1.01771, -180.253, 3.30243, 0.55", "-0.531366, -190.527, 3.0254, 0.55", "-0.986067, -200.868, 2.04795, 0.55", "-3.59465, -210.78, 0.392979, 0.55", "-5.11086, -220.649, -2.45193, 0.55", "-6.08958, -230.947, -3.49043, 0.55", "-5.72919, -241.334, -3.74637, 0.55", "-4.1882, -251.535, -4.95981, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "81.5918, 65.3053, 71.241, 0.55", "87.0351, 72.5075, 76.5341, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "81.5918, 65.3053, 71.241, 0.55", "85.825, 69.8439, 76.5431, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "42.9372, -74.0925, 6.67607, 0.55", "43.833, -74.7196, 8.187, 0.55", "45.3023, -75.8468, 10.3955, 0.55", "45.8878, -76.3108, 11.118, 0.55", "53.1732, -82.4376, 19.0185, 0.28", "53.9539, -83.1715, 19.7345, 0.83", "56.1521, -85.464, 21.5037, 0.28", "57.2655, -86.861, 22.2753, 0.28", "58.9868, -89.5689, 22.8558, 0.28", "59.5122, -90.4718, 22.7592, 0.55", "60.6823, -92.8568, 21.7257, 0.28", "61.0554, -93.6646, 21.4457, 0.28", "61.6721, -95.0026, 21.2135, 0.55", "62.4386, -96.7026, 21.0273, 0.55", "63.7591, -99.7917, 21.1482, 0.55", "70.2551, -107.558, 23.8889, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "42.9372, -74.0925, 6.67607, 0.55", "44.0395, -76.3101, 6.89175, 0.55", "45.0305, -78.3505, 7.08393, 0.55", "45.7874, -79.9407, 7.21668, 0.55", "46.7527, -81.9511, 7.36704, 0.28", "47.5466, -83.5507, 7.45586, 0.55", "48.7262, -85.8026, 7.53876, 0.55", "49.4018, -86.9559, 7.5734, 0.28", "49.969, -87.899, 7.59829, 0.28", "50.2821, -88.3577, 7.61112, 0.28", "51.2235, -89.6499, 7.62489, 0.55", "52.129, -90.758, 7.57104, 0.55", "53.3964, -92.1976, 7.41796, 0.28", "53.7737, -92.6047, 7.37001, 0.55", "55.3515, -94.2695, 7.17993, 0.28", "55.9878, -94.9581, 7.10168, 0.55", "57.5936, -96.7398, 6.8819, 0.28", "57.9385, -97.145, 6.78048, 0.55", "63.4401, -104.045, 7.55278, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "32.6098, -92.7204, 26.5243, 0.55", "34.3545, -99.8394, 29.5909, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "32.6098, -92.7204, 26.5243, 0.55", "33.8513, -100.281, 28.7529, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_71", "dend_68", "dend_57", "dend_56", "dend_43", "dend_30", "dend_27", "dend_0", "dend_70", "dend_69", "dend_67", "dend_58", "dend_51", "dend_44", "dend_32", "dend_31", "dend_29", "dend_28", "dend_14", "dend_1", "dend_66", "dend_59", "dend_53", "dend_52", "dend_50", "dend_45", "dend_40", "dend_33", "dend_20", "dend_15", "dend_9", "dend_2", "dend_63", "dend_60", "dend_55", "dend_54", "dend_47", "dend_46", "dend_42", "dend_41", "dend_37", "dend_34", "dend_24", "dend_21", "dend_17", "dend_16", "dend_13", "dend_10", "dend_6", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_48", "dend_39", "dend_38", "dend_36", "dend_35", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "axon_0", "axon_0", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_44", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_65", "dend_64", "dend_62", "dend_61", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_LBC_1b6313448d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_71, id: dend_71, parent: soma_0
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: soma_0
create dend_68
public dend_68
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_67, id: dend_67, parent: dend_57
create dend_67
public dend_67
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_58
create dend_66
public dend_66
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_71(0), soma_0(0.4999999896865996)
    connect dend_68(0), soma_0(0.4999999896865996)
    connect dend_57(0), soma_0(0.4999999896865996)
    connect dend_56(0), soma_0(0.4999999896865996)
    connect dend_43(0), soma_0(0.4999999896865996)
    connect dend_30(0), soma_0(0.4999999896865996)
    connect dend_27(0), soma_0(0.4999999896865996)
    connect dend_0(0), soma_0(0.4999999896865996)
    connect axon_0(0), soma_0(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_67(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.94076, -9.8712, -1.65398, 2.77643 ) }
    soma_0 { pt3dadd( -2.68752, -8.89837, -1.49144, 3.78775 ) }
    soma_0 { pt3dadd( -2.43427, -7.92553, -1.32889, 4.91862 ) }
    soma_0 { pt3dadd( -2.18103, -6.95269, -1.16635, 5.95702 ) }
    soma_0 { pt3dadd( -1.92778, -5.97986, -1.00381, 6.99541 ) }
    soma_0 { pt3dadd( -1.67453, -5.00702, -0.841265, 8.01733 ) }
    soma_0 { pt3dadd( -1.42129, -4.03418, -0.678723, 8.72435 ) }
    soma_0 { pt3dadd( -1.16804, -3.06135, -0.516181, 9.35315 ) }
    soma_0 { pt3dadd( -0.914798, -2.08851, -0.353638, 9.98195 ) }
    soma_0 { pt3dadd( -0.661552, -1.11567, -0.191096, 10.5 ) }
    soma_0 { pt3dadd( -0.408307, -0.142835, -0.0285532, 10.7936 ) }
    soma_0 { pt3dadd( -0.155061, 0.830002, 0.133989, 11.1592 ) }
    soma_0 { pt3dadd( 0.0981843, 1.80284, 0.296532, 11.5247 ) }
    soma_0 { pt3dadd( 0.35143, 2.77568, 0.459074, 11.423 ) }
    soma_0 { pt3dadd( 0.604675, 3.74851, 0.621617, 11.7952 ) }
    soma_0 { pt3dadd( 0.857921, 4.72135, 0.784159, 12.2515 ) }
    soma_0 { pt3dadd( 1.11117, 5.69419, 0.946702, 11.9034 ) }
    soma_0 { pt3dadd( 1.36441, 6.66702, 1.10924, 10.4337 ) }
    soma_0 { pt3dadd( 1.61766, 7.63986, 1.27179, 8.34249 ) }
    soma_0 { pt3dadd( 1.8709, 8.6127, 1.43433, 5.63558 ) }
    soma_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 3.26719 ) }
    // Section: dend_71, id: dend_71, parent: soma_0 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.931045, 7.08157, 20.757, 0.83 ) }
    dend_71 { pt3dadd( 2.32254, 9.73543, 20.8047, 0.83 ) }
    dend_71 { pt3dadd( 3.64917, 12.0231, 20.8643, 0.83 ) }
    dend_71 { pt3dadd( 4.70914, 13.7119, 20.9199, 1.11 ) }
    dend_71 { pt3dadd( 5.71224, 15.2451, 20.9764, 0.83 ) }
    dend_71 { pt3dadd( 6.97941, 17.1645, 21.0486, 0.83 ) }
    dend_71 { pt3dadd( 7.7222, 18.2355, 21.0942, 0.83 ) }
    dend_71 { pt3dadd( 8.35715, 19.0297, 21.1769, 0.83 ) }
    dend_71 { pt3dadd( 8.90545, 19.737, 21.3155, 1.11 ) }
    dend_71 { pt3dadd( 9.63327, 20.6694, 21.5716, 0.83 ) }
    dend_71 { pt3dadd( 10.1317, 21.3158, 21.7813, 1.11 ) }
    dend_71 { pt3dadd( 10.9187, 22.4432, 22.1592, 0.83 ) }
    dend_71 { pt3dadd( 12.0304, 23.9587, 22.6711, 1.11 ) }
    dend_71 { pt3dadd( 13.2565, 25.6265, 23.2085, 0.83 ) }
    dend_71 { pt3dadd( 14.2002, 26.9109, 23.5802, 0.55 ) }
    dend_71 { pt3dadd( 15.13, 28.1542, 23.8789, 0.55 ) }
    dend_71 { pt3dadd( 15.7319, 28.9933, 24.0297, 0.83 ) }
    dend_71 { pt3dadd( 17.0498, 30.9512, 24.263, 0.83 ) }
    dend_71 { pt3dadd( 17.8757, 32.1532, 24.3399, 0.83 ) }
    dend_71 { pt3dadd( 19.0328, 33.8843, 24.4005, 0.55 ) }
    dend_71 { pt3dadd( 20.749, 36.4852, 24.4879, 1.11 ) }
    dend_71 { pt3dadd( 21.8494, 38.2916, 24.6505, 0.83 ) }
    dend_71 { pt3dadd( 22.5479, 39.5353, 24.8151, 1.11 ) }
    dend_71 { pt3dadd( 23.6655, 41.693, 25.1795, 0.55 ) }
    dend_71 { pt3dadd( 24.1439, 42.649, 25.3899, 0.55 ) }
    dend_71 { pt3dadd( 25.2841, 45.2427, 26.0605, 0.55 ) }
    dend_71 { pt3dadd( 26.4002, 48.0853, 26.946, 0.83 ) }
    dend_71 { pt3dadd( 26.8718, 49.406, 27.4186, 0.55 ) }
    dend_71 { pt3dadd( 27.1956, 50.2994, 27.7646, 0.83 ) }
    dend_71 { pt3dadd( 27.6436, 51.5667, 28.2695, 0.83 ) }
    dend_71 { pt3dadd( 28.2906, 53.2583, 28.9238, 0.83 ) }
    dend_71 { pt3dadd( 29.4953, 56.1306, 29.9958, 1.11 ) }
    dend_71 { pt3dadd( 30.4278, 58.0767, 30.6486, 0.55 ) }
    dend_71 { pt3dadd( 31.686, 60.5283, 31.5076, 0.83 ) }
    dend_71 { pt3dadd( 32.2826, 61.5903, 31.8815, 0.55 ) }
    dend_71 { pt3dadd( 33.1891, 63.1022, 32.4113, 0.83 ) }
    dend_71 { pt3dadd( 33.9095, 64.2039, 32.8122, 0.28 ) }
    dend_71 { pt3dadd( 34.4757, 65.0032, 33.072, 0.55 ) }
    dend_71 { pt3dadd( 35.0098, 65.6922, 33.2648, 0.28 ) }
    dend_71 { pt3dadd( 36.1517, 67.3278, 33.6651, 0.83 ) }
    dend_71 { pt3dadd( 39.7742, 73.5194, 35.2163, 0.83 ) }
    dend_71 { pt3dadd( 41.8866, 80.0025, 37.8832, 0.83 ) }
    dend_71 { pt3dadd( 43.5516, 86.1026, 41.5283, 0.83 ) }
    dend_71 { pt3dadd( 45.2357, 92.6517, 44.3203, 0.83 ) }
    dend_71 { pt3dadd( 47.224, 99.0824, 47.1905, 0.83 ) }
    dend_71 { pt3dadd( 49.8138, 105.602, 49.3216, 0.83 ) }
    dend_71 { pt3dadd( 51.9083, 112.59, 50.1414, 0.83 ) }
    dend_71 { pt3dadd( 54.9269, 119.288, 50.1772, 0.83 ) }
    dend_71 { pt3dadd( 57.5394, 126.104, 49.3712, 0.83 ) }
    dend_71 { pt3dadd( 60.1339, 132.93, 48.5949, 0.83 ) }
    dend_71 { pt3dadd( 62.414, 139.761, 47.1916, 0.83 ) }
    dend_71 { pt3dadd( 64.1305, 146.78, 45.941, 0.83 ) }
    dend_71 { pt3dadd( 66.4066, 153.744, 45.4484, 0.83 ) }
    // Section: dend_68, id: dend_68, parent: soma_0 (entry count 74/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 1.84105, 8.53707, 11.867, 1.38 ) }
    dend_68 { pt3dadd( 2.35243, 9.21473, 12.0507, 1.38 ) }
    dend_68 { pt3dadd( 2.83454, 9.85353, 12.2239, 1.38 ) }
    dend_68 { pt3dadd( 3.63321, 10.9119, 12.5108, 1.11 ) }
    dend_68 { pt3dadd( 4.29739, 11.792, 12.7494, 1.11 ) }
    dend_68 { pt3dadd( 5.66943, 13.6101, 13.2422, 0.83 ) }
    dend_68 { pt3dadd( 7.12608, 15.5403, 13.7655, 1.11 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 81/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.61104, 4.15007, -0.263001, 2.77 ) }
    dend_57 { pt3dadd( 6.32593, 4.50161, -0.342115, 2.77 ) }
    dend_57 { pt3dadd( 8.44693, 5.54459, -0.576836, 1.66 ) }
    dend_57 { pt3dadd( 11.8268, 7.20665, -0.950882, 1.66 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 85/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.58105, 7.13282, -5.263, 0.83 ) }
    dend_56 { pt3dadd( 4.86065, 8.20248, -5.3388, 0.83 ) }
    dend_56 { pt3dadd( 6.44117, 9.76893, -5.29836, 0.83 ) }
    dend_56 { pt3dadd( 8.82207, 12.409, -5.65317, 0.83 ) }
    dend_56 { pt3dadd( 10.7701, 14.6216, -6.24255, 0.83 ) }
    dend_56 { pt3dadd( 12.2406, 16.215, -6.75373, 0.83 ) }
    dend_56 { pt3dadd( 14.2279, 18.278, -7.48001, 0.83 ) }
    dend_56 { pt3dadd( 15.6777, 19.8324, -8.05393, 0.83 ) }
    dend_56 { pt3dadd( 19.2576, 24.0921, -9.64691, 1.11 ) }
    dend_56 { pt3dadd( 20.6681, 25.9454, -10.2989, 0.55 ) }
    dend_56 { pt3dadd( 21.7396, 27.3952, -10.753, 0.55 ) }
    dend_56 { pt3dadd( 22.7249, 28.7167, -11.098, 0.55 ) }
    dend_56 { pt3dadd( 24.5834, 31.2057, -11.6224, 1.11 ) }
    dend_56 { pt3dadd( 26.5408, 33.9551, -11.9358, 0.83 ) }
    dend_56 { pt3dadd( 28.3216, 36.6213, -11.9193, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 29.7739, 38.9701, -11.8804, 0.55 ) }
    dend_56 { pt3dadd( 31.2562, 41.5289, -11.8736, 0.55 ) }
    dend_56 { pt3dadd( 31.8333, 42.559, -11.8666, 0.83 ) }
    dend_56 { pt3dadd( 33.6242, 45.8056, -11.8654, 0.55 ) }
    dend_56 { pt3dadd( 34.1391, 46.7551, -11.8665, 0.55 ) }
    dend_56 { pt3dadd( 35.0954, 48.6675, -11.9144, 1.11 ) }
    dend_56 { pt3dadd( 35.6933, 49.8821, -11.9489, 1.11 ) }
    dend_56 { pt3dadd( 36.2727, 51.1014, -12.0134, 0.28 ) }
    dend_56 { pt3dadd( 36.963, 52.6295, -12.2221, 0.55 ) }
    dend_56 { pt3dadd( 37.4211, 53.7998, -12.5134, 0.28 ) }
    dend_56 { pt3dadd( 37.8375, 55.0092, -12.902, 0.83 ) }
    dend_56 { pt3dadd( 38.9571, 58.4476, -14.1428, 0.55 ) }
    dend_56 { pt3dadd( 39.5929, 60.2555, -14.8449, 0.55 ) }
    dend_56 { pt3dadd( 40.5003, 62.7764, -15.851, 0.83 ) }
    dend_56 { pt3dadd( 41.2683, 64.9571, -16.6983, 0.83 ) }
    dend_56 { pt3dadd( 41.8721, 66.6767, -17.3274, 0.55 ) }
    dend_56 { pt3dadd( 42.6864, 68.8858, -18.1254, 0.55 ) }
    dend_56 { pt3dadd( 43.5124, 71.0573, -18.8761, 0.55 ) }
    dend_56 { pt3dadd( 43.8476, 71.7976, -19.0689, 0.55 ) }
    dend_56 { pt3dadd( 44.9281, 73.6939, -19.3842, 1.38 ) }
    dend_56 { pt3dadd( 46.1317, 75.4418, -19.5922, 0.55 ) }
    dend_56 { pt3dadd( 46.9318, 76.4755, -19.615, 0.83 ) }
    dend_56 { pt3dadd( 47.3015, 76.9307, -19.5855, 0.28 ) }
    dend_56 { pt3dadd( 48.3926, 78.2452, -19.3969, 0.83 ) }
    dend_56 { pt3dadd( 49.4006, 79.3747, -19.1938, 0.28 ) }
    dend_56 { pt3dadd( 50.3647, 80.3658, -18.9028, 0.28 ) }
    dend_56 { pt3dadd( 52.3243, 82.475, -18.2579, 0.55 ) }
    dend_56 { pt3dadd( 53.2042, 83.4474, -17.9421, 0.55 ) }
    dend_56 { pt3dadd( 54.7278, 85.1445, -17.3653, 0.55 ) }
    dend_56 { pt3dadd( 56.1473, 86.7901, -16.799, 0.55 ) }
    dend_56 { pt3dadd( 57.7246, 88.6752, -16.1903, 0.83 ) }
    dend_56 { pt3dadd( 58.9866, 90.2386, -15.7747, 0.83 ) }
    dend_56 { pt3dadd( 59.86, 91.4242, -15.5445, 0.28 ) }
    dend_56 { pt3dadd( 60.2829, 92.082, -15.3944, 0.83 ) }
    dend_56 { pt3dadd( 61.3015, 93.7888, -15.037, 0.28 ) }
    dend_56 { pt3dadd( 61.4266, 94.0319, -14.9954, 0.83 ) }
    dend_56 { pt3dadd( 62.3358, 96.0081, -14.8201, 0.28 ) }
    dend_56 { pt3dadd( 62.9279, 97.3326, -14.6954, 0.83 ) }
    dend_56 { pt3dadd( 63.7595, 99.3194, -14.6102, 0.28 ) }
    dend_56 { pt3dadd( 64.6071, 101.371, -14.5571, 1.11 ) }
    dend_56 { pt3dadd( 65.1549, 102.603, -14.538, 1.11 ) }
    dend_56 { pt3dadd( 65.7323, 103.75, -14.5739, 0.55 ) }
    dend_56 { pt3dadd( 66.5212, 105.077, -14.6971, 0.28 ) }
    dend_56 { pt3dadd( 67.083, 105.942, -14.825, 0.55 ) }
    dend_56 { pt3dadd( 67.8492, 107.095, -15.0947, 0.28 ) }
    dend_56 { pt3dadd( 68.5868, 108.171, -15.298, 0.83 ) }
    dend_56 { pt3dadd( 70.1611, 110.132, -15.6568, 0.55 ) }
    dend_56 { pt3dadd( 70.7357, 110.784, -15.7681, 0.55 ) }
    dend_56 { pt3dadd( 72.3906, 112.538, -16.0322, 1.11 ) }
    dend_56 { pt3dadd( 74.7999, 115.017, -16.3121, 0.28 ) }
    dend_56 { pt3dadd( 76.3061, 116.4, -16.4418, 0.83 ) }
    dend_56 { pt3dadd( 77.974, 117.829, -16.4702, 0.28 ) }
    dend_56 { pt3dadd( 78.8188, 118.547, -16.4191, 0.83 ) }
    dend_56 { pt3dadd( 80.2196, 119.734, -16.2855, 0.28 ) }
    dend_56 { pt3dadd( 80.9469, 120.343, -16.1839, 0.83 ) }
    dend_56 { pt3dadd( 83.2298, 122.354, -15.7893, 0.83 ) }
    dend_56 { pt3dadd( 84.1725, 123.267, -15.6508, 0.28 ) }
    dend_56 { pt3dadd( 86.4411, 125.682, -15.3113, 0.28 ) }
    dend_56 { pt3dadd( 87.57, 126.927, -15.1561, 1.11 ) }
    dend_56 { pt3dadd( 90.1031, 129.869, -14.8361, 0.28 ) }
    dend_56 { pt3dadd( 91.3065, 131.319, -14.6862, 1.11 ) }
    dend_56 { pt3dadd( 92.464, 132.83, -14.5495, 0.28 ) }
    dend_56 { pt3dadd( 93.1376, 133.693, -14.4859, 0.83 ) }
    dend_56 { pt3dadd( 94.52, 135.441, -14.343, 0.28 ) }
    dend_56 { pt3dadd( 94.8824, 135.915, -14.2969, 0.55 ) }
    dend_56 { pt3dadd( 95.5924, 136.865, -14.2198, 0.28 ) }
    dend_56 { pt3dadd( 95.9637, 137.326, -14.1684, 0.55 ) }
    dend_56 { pt3dadd( 96.9715, 138.449, -14.0352, 0.28 ) }
    dend_56 { pt3dadd( 97.5792, 138.979, -13.9548, 0.55 ) }
    dend_56 { pt3dadd( 98.779, 139.845, -13.8695, 0.28 ) }
    dend_56 { pt3dadd( 99.4697, 140.291, -13.8954, 0.55 ) }
    dend_56 { pt3dadd( 101.005, 141.182, -14.0662, 0.28 ) }
    dend_56 { pt3dadd( 101.478, 141.418, -14.1108, 0.83 ) }
    dend_56 { pt3dadd( 103.371, 142.272, -14.3289, 0.28 ) }
    dend_56 { pt3dadd( 104.343, 142.675, -14.4387, 0.83 ) }
    dend_56 { pt3dadd( 106.406, 143.598, -14.6496, 0.28 ) }
    dend_56 { pt3dadd( 108.481, 144.614, -14.7974, 0.28 ) }
    dend_56 { pt3dadd( 110.444, 145.74, -15.0242, 1.11 ) }
    dend_56 { pt3dadd( 111.707, 146.559, -15.1991, 0.28 ) }
    dend_56 { pt3dadd( 112.834, 147.381, -15.3505, 0.55 ) }
    dend_56 { pt3dadd( 114.076, 148.394, -15.4939, 0.28 ) }
    dend_56 { pt3dadd( 115.147, 149.41, -15.6265, 0.83 ) }
    dend_56 { pt3dadd( 117.391, 151.94, -15.8109, 0.28 ) }
    dend_56 { pt3dadd( 117.75, 152.42, -15.8265, 0.55 ) }
    dend_56 { pt3dadd( 118.913, 154.105, -15.766, 0.55 ) }
    dend_56 { pt3dadd( 120.148, 156.059, -15.6164, 0.28 ) }
    dend_56 { pt3dadd( 120.966, 157.497, -15.3511, 1.11 ) }
    dend_56 { pt3dadd( 121.894, 159.603, -14.7549, 0.28 ) }
    dend_56 { pt3dadd( 122.369, 161.087, -14.3358, 0.55 ) }
    dend_56 { pt3dadd( 122.924, 163.802, -13.8083, 0.28 ) }
    dend_56 { pt3dadd( 123.003, 164.925, -13.7004, 0.83 ) }
    dend_56 { pt3dadd( 122.994, 168.293, -13.2458, 0.28 ) }
    dend_56 { pt3dadd( 122.877, 170.716, -12.992, 0.28 ) }
    dend_56 { pt3dadd( 122.515, 174.406, -12.8126, 0.55 ) }
    dend_56 { pt3dadd( 122.208, 176.593, -12.7631, 0.28 ) }
    dend_56 { pt3dadd( 121.544, 179.748, -12.8398, 0.28 ) }
    dend_56 { pt3dadd( 120.75, 183.907, -13.2735, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 97/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.11895, -10.6099, -2.573, 2.22 ) }
    dend_43 { pt3dadd( -1.20794, -12.5176, -1.57786, 2.22 ) }
    dend_43 { pt3dadd( -1.36759, -15.9398, 0.207471, 2.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( -1.63456, -21.6625, 3.19283, 2.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.67895, -9.02118, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -6.34833, -9.83343, -5.133, 1.94 ) }
    dend_30 { pt3dadd( -9.39009, -10.759, -5.133, 2.49 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -5.96896, 2.04882, 10.787, 1.11 ) }
    dend_27 { pt3dadd( -7.42382, 3.03238, 11.5186, 0.83 ) }
    dend_27 { pt3dadd( -10.1304, 4.71501, 12.5967, 0.55 ) }
    dend_27 { pt3dadd( -10.8434, 5.17948, 12.8399, 0.83 ) }
    dend_27 { pt3dadd( -12.3106, 6.12391, 13.3265, 0.55 ) }
    dend_27 { pt3dadd( -13.9455, 7.17628, 13.8688, 0.83 ) }
    dend_27 { pt3dadd( -15.8108, 8.37696, 14.4874, 0.55 ) }
    dend_27 { pt3dadd( -18.1216, 9.82663, 15.2199, 0.55 ) }
    dend_27 { pt3dadd( -20.6444, 11.3066, 15.821, 0.55 ) }
    dend_27 { pt3dadd( -22.0607, 12.1442, 16.1476, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.12895, -1.70268, 5.667, 2.49 ) }
    dend_0 { pt3dadd( -0.854374, -6.15222, 5.667, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.12415, 9.58553, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 5.90296, 24.1017, 1.59687, 1.11 ) }
    axon_0 { pt3dadd( 9.68178, 38.618, 1.59687, 1.11 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 19/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 7.12608, 15.5403, 13.7655, 0.55 ) }
    dend_70 { pt3dadd( 8.21418, 16.2682, 13.5048, 0.55 ) }
    dend_70 { pt3dadd( 9.74475, 17.2829, 13.1189, 0.55 ) }
    dend_70 { pt3dadd( 11.1227, 18.1212, 12.8694, 0.83 ) }
    dend_70 { pt3dadd( 12.4247, 18.8557, 12.7076, 0.83 ) }
    dend_70 { pt3dadd( 14.1496, 19.7776, 12.5592, 0.55 ) }
    dend_70 { pt3dadd( 15.392, 20.4147, 12.4866, 0.55 ) }
    dend_70 { pt3dadd( 16.6449, 21.0128, 12.4748, 0.83 ) }
    dend_70 { pt3dadd( 18.1958, 21.7685, 12.5393, 0.55 ) }
    dend_70 { pt3dadd( 19.4758, 22.4264, 12.7812, 0.55 ) }
    dend_70 { pt3dadd( 20.2909, 22.8944, 13.0344, 0.28 ) }
    dend_70 { pt3dadd( 21.0585, 23.3966, 13.3727, 0.28 ) }
    dend_70 { pt3dadd( 22.151, 24.1995, 14.0408, 0.55 ) }
    dend_70 { pt3dadd( 23.6296, 25.4481, 15.0912, 0.55 ) }
    dend_70 { pt3dadd( 25.2674, 26.9558, 16.3588, 0.28 ) }
    dend_70 { pt3dadd( 25.5769, 27.2293, 16.6283, 0.28 ) }
    dend_70 { pt3dadd( 26.2788, 27.8272, 17.2663, 0.55 ) }
    dend_70 { pt3dadd( 27.2201, 28.4909, 18.0242, 0.28 ) }
    dend_70 { pt3dadd( 28.4266, 29.1398, 18.7725, 0.55 ) }
    dend_70 { pt3dadd( 29.225, 29.4914, 19.1378, 0.28 ) }
    dend_70 { pt3dadd( 30.2738, 29.9064, 19.4858, 0.83 ) }
    dend_70 { pt3dadd( 31.6841, 30.4138, 19.8941, 0.55 ) }
    dend_70 { pt3dadd( 33.5058, 31.0483, 20.3577, 0.55 ) }
    dend_70 { pt3dadd( 35.3082, 31.6984, 20.7097, 0.55 ) }
    dend_70 { pt3dadd( 37.3177, 32.4551, 21.0512, 0.55 ) }
    dend_70 { pt3dadd( 37.607, 32.564, 21.0908, 0.28 ) }
    dend_70 { pt3dadd( 38.6508, 32.9261, 21.1997, 0.28 ) }
    dend_70 { pt3dadd( 39.8873, 33.2817, 21.2366, 0.55 ) }
    dend_70 { pt3dadd( 40.9055, 33.559, 21.1902, 0.28 ) }
    dend_70 { pt3dadd( 41.3212, 33.6613, 21.1332, 0.55 ) }
    dend_70 { pt3dadd( 42.3266, 33.8439, 20.7666, 0.55 ) }
    dend_70 { pt3dadd( 43.1089, 34.0178, 20.4246, 0.55 ) }
    dend_70 { pt3dadd( 44.635, 34.4349, 19.7199, 0.55 ) }
    dend_70 { pt3dadd( 45.6688, 34.7295, 19.2694, 0.28 ) }
    dend_70 { pt3dadd( 47.7898, 35.3746, 18.46, 0.83 ) }
    dend_70 { pt3dadd( 51.7322, 36.7186, 17.1242, 0.55 ) }
    dend_70 { pt3dadd( 53.1549, 37.2571, 16.6975, 0.55 ) }
    dend_70 { pt3dadd( 54.6781, 37.8367, 16.231, 0.83 ) }
    dend_70 { pt3dadd( 55.9264, 38.3421, 15.9462, 0.28 ) }
    dend_70 { pt3dadd( 56.8135, 38.72, 15.8157, 0.83 ) }
    dend_70 { pt3dadd( 57.81, 39.1761, 15.7924, 0.28 ) }
    dend_70 { pt3dadd( 58.7203, 39.6828, 15.933, 0.83 ) }
    dend_70 { pt3dadd( 61.5536, 41.3199, 16.7122, 0.28 ) }
    dend_70 { pt3dadd( 63.5614, 42.6799, 17.4469, 0.55 ) }
    dend_70 { pt3dadd( 64.914, 43.7347, 18.0855, 0.28 ) }
    dend_70 { pt3dadd( 65.5956, 44.2906, 18.3654, 0.28 ) }
    dend_70 { pt3dadd( 66.7935, 45.2577, 18.8176, 0.83 ) }
    dend_70 { pt3dadd( 68.8997, 46.8846, 19.578, 0.28 ) }
    dend_70 { pt3dadd( 69.8701, 47.5465, 19.8809, 0.83 ) }
    dend_70 { pt3dadd( 71.5354, 48.429, 20.0566, 0.28 ) }
    dend_70 { pt3dadd( 74.9304, 50.0762, 20.0776, 0.55 ) }
    dend_70 { pt3dadd( 76.4699, 50.7011, 20.0006, 0.28 ) }
    dend_70 { pt3dadd( 77.3232, 50.9512, 19.8757, 0.28 ) }
    dend_70 { pt3dadd( 78.5781, 51.2276, 19.4754, 0.55 ) }
    dend_70 { pt3dadd( 80.1797, 51.4133, 18.9831, 0.83 ) }
    dend_70 { pt3dadd( 86.9577, 55.4567, 19.1896, 0.83 ) }
    dend_70 { pt3dadd( 93.634, 59.5808, 20.0667, 0.83 ) }
    dend_70 { pt3dadd( 100.574, 62.6072, 22.2082, 0.83 ) }
    dend_70 { pt3dadd( 107.532, 64.29, 25.4169, 0.83 ) }
    dend_70 { pt3dadd( 113.959, 64.9726, 29.8431, 0.83 ) }
    dend_70 { pt3dadd( 119.104, 65.7365, 35.7012, 0.83 ) }
    dend_70 { pt3dadd( 124.555, 65.4769, 41.3166, 0.83 ) }
    dend_70 { pt3dadd( 129.335, 63.9645, 47.3402, 0.83 ) }
    dend_70 { pt3dadd( 135.182, 63.3413, 52.5135, 0.83 ) }
    dend_70 { pt3dadd( 139.89, 62.7066, 58.7396, 0.83 ) }
    dend_70 { pt3dadd( 145.575, 61.7156, 64.0358, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 7.12608, 15.5403, 13.7655, 0.55 ) }
    dend_69 { pt3dadd( 9.35511, 16.0185, 14.9856, 0.55 ) }
    dend_69 { pt3dadd( 10.7096, 16.4538, 15.9089, 0.55 ) }
    dend_69 { pt3dadd( 13.2382, 17.1638, 17.7059, 0.55 ) }
    dend_69 { pt3dadd( 17.1658, 18.183, 20.5023, 0.55 ) }
    dend_69 { pt3dadd( 18.5471, 18.4824, 21.4405, 0.83 ) }
    dend_69 { pt3dadd( 19.8068, 18.7466, 22.181, 0.83 ) }
    dend_69 { pt3dadd( 22.7331, 19.2939, 23.9612, 0.83 ) }
    dend_69 { pt3dadd( 24.6731, 19.5846, 24.9779, 0.55 ) }
    dend_69 { pt3dadd( 27.0058, 19.7503, 25.8648, 0.83 ) }
    dend_69 { pt3dadd( 28.8841, 19.7056, 26.2868, 0.55 ) }
    dend_69 { pt3dadd( 31.7051, 19.5351, 26.7553, 0.55 ) }
    dend_69 { pt3dadd( 35.5267, 19.1674, 27.1596, 0.83 ) }
    dend_69 { pt3dadd( 39.1469, 18.7186, 27.2681, 0.83 ) }
    dend_69 { pt3dadd( 41.3216, 18.3895, 27.2675, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_69 { pt3dadd( 43.4517, 17.9322, 27.2025, 0.83 ) }
    dend_69 { pt3dadd( 45.8277, 17.3296, 27.1157, 0.55 ) }
    dend_69 { pt3dadd( 47.3457, 16.8359, 27.0628, 0.83 ) }
    dend_69 { pt3dadd( 48.9918, 16.2256, 26.9076, 0.83 ) }
    dend_69 { pt3dadd( 50.798, 15.5811, 26.771, 0.83 ) }
    dend_69 { pt3dadd( 54.0043, 14.3866, 26.5277, 0.83 ) }
    dend_69 { pt3dadd( 55.3725, 13.7292, 26.3807, 0.55 ) }
    dend_69 { pt3dadd( 56.4453, 13.1014, 26.2433, 0.83 ) }
    dend_69 { pt3dadd( 57.4761, 12.4216, 26.0725, 0.83 ) }
    dend_69 { pt3dadd( 59.866, 10.539, 25.5944, 0.83 ) }
    dend_69 { pt3dadd( 61.5055, 8.95138, 25.2575, 0.83 ) }
    dend_69 { pt3dadd( 63.481, 6.64555, 25.114, 0.83 ) }
    dend_69 { pt3dadd( 65.0373, 4.72747, 25.0224, 0.83 ) }
    dend_69 { pt3dadd( 66.7965, 2.48562, 24.9554, 0.55 ) }
    dend_69 { pt3dadd( 68.1932, 0.485171, 24.9548, 0.55 ) }
    dend_69 { pt3dadd( 69.7872, -2.16103, 25.0737, 0.55 ) }
    dend_69 { pt3dadd( 72.2096, -6.04144, 25.5781, 0.55 ) }
    dend_69 { pt3dadd( 82.3802, -8.34739, 28.4412, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_57 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 11.8268, 7.20665, -0.950882, 0.83 ) }
    dend_67 { pt3dadd( 12.6699, 12.8044, -2.22169, 0.83 ) }
    dend_67 { pt3dadd( 13.2217, 15.7269, -3.16293, 0.83 ) }
    dend_67 { pt3dadd( 13.6906, 18.5624, -3.56333, 0.83 ) }
    dend_67 { pt3dadd( 14.8437, 24.5415, -4.00764, 0.83 ) }
    dend_67 { pt3dadd( 15.5545, 27.5265, -4.19144, 0.83 ) }
    dend_67 { pt3dadd( 16.657, 31.7584, -4.46155, 0.28 ) }
    dend_67 { pt3dadd( 17.4284, 34.6103, -4.3984, 0.83 ) }
    dend_67 { pt3dadd( 20.3341, 43.847, -3.64102, 0.55 ) }
    dend_67 { pt3dadd( 21.4364, 47.0511, -3.25036, 0.55 ) }
    dend_67 { pt3dadd( 23.2508, 51.8582, -2.51198, 0.55 ) }
    dend_67 { pt3dadd( 23.8218, 53.345, -2.1437, 0.55 ) }
    dend_67 { pt3dadd( 25.6001, 58.0578, -0.595206, 0.55 ) }
    dend_67 { pt3dadd( 26.1838, 59.4541, -0.0822995, 0.28 ) }
    dend_67 { pt3dadd( 26.9016, 60.9389, 0.434424, 0.55 ) }
    dend_67 { pt3dadd( 28.2191, 63.6382, 1.63233, 0.55 ) }
    dend_67 { pt3dadd( 29.4171, 65.9724, 2.85371, 0.28 ) }
    dend_67 { pt3dadd( 29.9052, 66.8931, 3.31701, 0.28 ) }
    dend_67 { pt3dadd( 30.361, 67.6211, 3.62569, 0.55 ) }
    dend_67 { pt3dadd( 31.1481, 68.7516, 4.17274, 0.28 ) }
    dend_67 { pt3dadd( 32.5775, 70.5075, 5.08572, 0.55 ) }
    dend_67 { pt3dadd( 33.0056, 70.9522, 5.30587, 0.55 ) }
    dend_67 { pt3dadd( 34.1507, 72.1009, 5.83056, 0.55 ) }
    dend_67 { pt3dadd( 36.5785, 74.4679, 7.01883, 0.28 ) }
    dend_67 { pt3dadd( 38.034, 75.8419, 7.75902, 0.55 ) }
    dend_67 { pt3dadd( 39.4802, 77.1344, 8.50113, 0.28 ) }
    dend_67 { pt3dadd( 40.3955, 77.9445, 8.99923, 0.28 ) }
    dend_67 { pt3dadd( 41.9717, 79.2241, 9.81727, 0.55 ) }
    dend_67 { pt3dadd( 46.4215, 89.752, 11.7173, 0.55 ) }
    dend_67 { pt3dadd( 52.8649, 99.3024, 12.8227, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 11.8268, 7.20665, -0.950882, 1.11 ) }
    dend_58 { pt3dadd( 14.2152, 6.14441, -1.07743, 1.11 ) }
    dend_58 { pt3dadd( 15.9192, 5.41614, -1.35273, 1.11 ) }
    dend_58 { pt3dadd( 17.0882, 5.04259, -1.61268, 1.11 ) }
    dend_58 { pt3dadd( 18.3654, 4.74042, -1.95453, 1.38 ) }
    dend_58 { pt3dadd( 20.5802, 4.21637, -2.54738, 2.22 ) }
    dend_58 { pt3dadd( 22.5238, 3.75651, -3.06761, 1.38 ) }
    dend_58 { pt3dadd( 24.3659, 3.26342, -3.66972, 0.83 ) }
    dend_58 { pt3dadd( 26.2572, 2.80074, -4.48957, 1.38 ) }
    dend_58 { pt3dadd( 27.4798, 2.62773, -5.09266, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.63456, -21.6625, 3.19283, 1.38 ) }
    dend_51 { pt3dadd( -2.66451, -23.0139, 3.27971, 1.38 ) }
    dend_51 { pt3dadd( -4.64638, -25.6143, 3.44687, 0.83 ) }
    dend_51 { pt3dadd( -5.3542, -26.5431, 3.50657, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 62/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.63456, -21.6625, 3.19283, 1.38 ) }
    dend_44 { pt3dadd( -0.474475, -24.5488, 3.61312, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.39009, -10.759, -5.133, 1.38 ) }
    dend_32 { pt3dadd( -11.0329, -12.6298, -5.1416, 1.38 ) }
    dend_32 { pt3dadd( -13.2643, -15.1708, -5.15329, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 67/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.39009, -10.759, -5.133, 0.55 ) }
    dend_31 { pt3dadd( -10.0286, -8.73891, -6.72179, 0.55 ) }
    dend_31 { pt3dadd( -10.6249, -5.51662, -9.47827, 0.55 ) }
    dend_31 { pt3dadd( -10.8811, -3.4156, -11.2986, 0.55 ) }
    dend_31 { pt3dadd( -11.0473, -0.463985, -13.6408, 0.55 ) }
    dend_31 { pt3dadd( -11.0566, 1.19269, -14.902, 0.55 ) }
    dend_31 { pt3dadd( -10.9092, 3.60998, -16.7612, 0.55 ) }
    dend_31 { pt3dadd( -10.4158, 6.1107, -18.5808, 0.28 ) }
    dend_31 { pt3dadd( -10.1256, 7.0175, -19.1862, 0.55 ) }
    dend_31 { pt3dadd( -9.09706, 9.16693, -20.6656, 0.28 ) }
    dend_31 { pt3dadd( -8.28901, 10.6083, -21.4802, 0.55 ) }
    dend_31 { pt3dadd( -7.02409, 12.8428, -22.408, 0.28 ) }
    dend_31 { pt3dadd( -6.11516, 14.452, -22.8827, 0.55 ) }
    dend_31 { pt3dadd( -4.8603, 16.7066, -23.4221, 0.28 ) }
    dend_31 { pt3dadd( -4.25256, 17.7971, -23.6977, 0.55 ) }
    dend_31 { pt3dadd( -2.64225, 20.6651, -24.5035, 0.28 ) }
    dend_31 { pt3dadd( -1.69817, 22.3708, -25.0123, 0.55 ) }
    dend_31 { pt3dadd( 0.460105, 26.2619, -26.3703, 0.28 ) }
    dend_31 { pt3dadd( 1.13431, 27.4163, -26.8584, 0.55 ) }
    dend_31 { pt3dadd( 2.02554, 28.8222, -27.4871, 0.28 ) }
    dend_31 { pt3dadd( 2.76482, 29.9595, -28.025, 0.55 ) }
    dend_31 { pt3dadd( 4.49975, 32.4129, -29.3683, 0.28 ) }
    dend_31 { pt3dadd( 5.75655, 34.225, -30.3361, 0.55 ) }
    dend_31 { pt3dadd( 6.94193, 36.069, -31.2685, 0.28 ) }
    dend_31 { pt3dadd( 8.63366, 38.6106, -32.6222, 0.28 ) }
    dend_31 { pt3dadd( 9.77034, 40.2711, -33.4873, 0.55 ) }
    dend_31 { pt3dadd( 12.1006, 43.7473, -35.3913, 0.28 ) }
    dend_31 { pt3dadd( 12.7324, 44.6918, -35.9493, 1.11 ) }
    dend_31 { pt3dadd( 14.2441, 47.087, -37.4553, 0.55 ) }
    dend_31 { pt3dadd( 15.6754, 49.4599, -39.074, 0.28 ) }
    dend_31 { pt3dadd( 16.6619, 51.1213, -40.2549, 0.83 ) }
    dend_31 { pt3dadd( 17.8159, 53.0062, -41.6623, 0.28 ) }
    dend_31 { pt3dadd( 18.392, 53.8452, -42.4322, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 19.2414, 54.8158, -43.4568, 0.28 ) }
    dend_31 { pt3dadd( 20.0322, 55.5776, -44.4209, 0.83 ) }
    dend_31 { pt3dadd( 21.2437, 56.6633, -45.971, 0.28 ) }
    dend_31 { pt3dadd( 23.1052, 58.3024, -48.2609, 0.55 ) }
    dend_31 { pt3dadd( 26.5411, 61.086, -52.3465, 0.28 ) }
    dend_31 { pt3dadd( 28.2894, 62.4027, -54.4305, 0.55 ) }
    dend_31 { pt3dadd( 30.8832, 64.1798, -57.5322, 0.28 ) }
    dend_31 { pt3dadd( 33.4949, 65.8826, -60.7436, 0.28 ) }
    dend_31 { pt3dadd( 35.4579, 67.1573, -63.2298, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -22.0607, 12.1442, 16.1476, 0.55 ) }
    dend_29 { pt3dadd( -23.4258, 15.841, 14.2989, 0.55 ) }
    dend_29 { pt3dadd( -24.2066, 17.9436, 13.4546, 0.55 ) }
    dend_29 { pt3dadd( -25.0191, 19.8701, 12.7963, 0.55 ) }
    dend_29 { pt3dadd( -27.1501, 24.3931, 11.3606, 0.55 ) }
    dend_29 { pt3dadd( -28.5003, 26.9542, 10.4535, 0.28 ) }
    dend_29 { pt3dadd( -30.0851, 29.8635, 9.41823, 0.55 ) }
    dend_29 { pt3dadd( -30.8131, 31.139, 9.01476, 0.28 ) }
    dend_29 { pt3dadd( -32.1455, 33.4023, 8.2857, 0.55 ) }
    dend_29 { pt3dadd( -33.6839, 35.9776, 7.51006, 0.55 ) }
    dend_29 { pt3dadd( -35.9775, 39.7113, 6.59975, 0.28 ) }
    dend_29 { pt3dadd( -37.0347, 41.4886, 6.12076, 0.55 ) }
    dend_29 { pt3dadd( -38.2262, 43.55, 5.61569, 0.28 ) }
    dend_29 { pt3dadd( -39.0303, 45.0161, 5.33364, 0.55 ) }
    dend_29 { pt3dadd( -39.6639, 46.243, 5.13476, 0.55 ) }
    dend_29 { pt3dadd( -40.5829, 48.03, 4.92623, 0.28 ) }
    dend_29 { pt3dadd( -41.7761, 50.2956, 4.66925, 0.55 ) }
    dend_29 { pt3dadd( -42.8353, 52.1847, 4.46887, 0.28 ) }
    dend_29 { pt3dadd( -43.7312, 53.5857, 4.25319, 0.55 ) }
    dend_29 { pt3dadd( -46.0924, 56.8304, 3.59346, 0.28 ) }
    dend_29 { pt3dadd( -46.7034, 57.541, 3.41981, 0.55 ) }
    dend_29 { pt3dadd( -48.5983, 59.4773, 2.8813, 0.28 ) }
    dend_29 { pt3dadd( -50.5929, 61.3615, 2.34898, 0.55 ) }
    dend_29 { pt3dadd( -53.8562, 64.3468, 1.55375, 0.28 ) }
    dend_29 { pt3dadd( -55.4934, 65.8496, 1.18435, 0.55 ) }
    dend_29 { pt3dadd( -57.3233, 67.5878, 0.829983, 0.28 ) }
    dend_29 { pt3dadd( -58.6792, 68.9654, 0.539832, 0.55 ) }
    dend_29 { pt3dadd( -59.6007, 69.976, 0.332506, 0.28 ) }
    dend_29 { pt3dadd( -59.8015, 70.2395, 0.254979, 0.83 ) }
    dend_29 { pt3dadd( -61.2914, 72.7948, -0.416268, 0.28 ) }
    dend_29 { pt3dadd( -61.9622, 74.2132, -0.729637, 0.83 ) }
    dend_29 { pt3dadd( -62.6941, 75.9785, -1.03615, 0.28 ) }
    dend_29 { pt3dadd( -62.9723, 76.6891, -1.1051, 0.83 ) }
    dend_29 { pt3dadd( -64.2607, 80.1071, -1.18703, 0.28 ) }
    dend_29 { pt3dadd( -64.9122, 81.974, -0.977809, 0.55 ) }
    dend_29 { pt3dadd( -65.8478, 84.9064, -0.253224, 0.28 ) }
    dend_29 { pt3dadd( -66.3466, 86.6657, 0.344675, 0.55 ) }
    dend_29 { pt3dadd( -66.869, 88.768, 1.2098, 0.28 ) }
    dend_29 { pt3dadd( -67.2198, 90.282, 1.87515, 0.55 ) }
    dend_29 { pt3dadd( -67.8065, 93.2174, 3.24775, 0.28 ) }
    dend_29 { pt3dadd( -67.9163, 93.9135, 3.55289, 0.55 ) }
    dend_29 { pt3dadd( -68.1057, 95.1923, 4.02153, 0.28 ) }
    dend_29 { pt3dadd( -68.259, 96.2035, 4.36541, 0.55 ) }
    dend_29 { pt3dadd( -68.6115, 98.1388, 4.94287, 0.28 ) }
    dend_29 { pt3dadd( -69.0621, 100.08, 5.46692, 0.55 ) }
    dend_29 { pt3dadd( -69.8242, 102.604, 6.02414, 0.28 ) }
    dend_29 { pt3dadd( -70.3622, 104.187, 6.38543, 0.55 ) }
    dend_29 { pt3dadd( -71.2216, 106.396, 6.89605, 0.28 ) }
    dend_29 { pt3dadd( -71.4165, 106.819, 6.99355, 0.55 ) }
    dend_29 { pt3dadd( -72.309, 108.638, 7.39952, 0.28 ) }
    dend_29 { pt3dadd( -73.132, 110.231, 7.66888, 0.55 ) }
    dend_29 { pt3dadd( -73.619, 111.197, 7.76705, 0.28 ) }
    dend_29 { pt3dadd( -74.1502, 112.287, 7.87651, 0.55 ) }
    dend_29 { pt3dadd( -75.2652, 114.675, 8.10413, 0.55 ) }
    dend_29 { pt3dadd( -76.1044, 116.559, 8.26312, 0.83 ) }
    dend_29 { pt3dadd( -76.8642, 118.402, 8.37794, 0.55 ) }
    dend_29 { pt3dadd( -77.8018, 120.949, 8.54214, 0.83 ) }
    dend_29 { pt3dadd( -84.5419, 131.078, 9.28026, 0.83 ) }
    dend_29 { pt3dadd( -93.3072, 138.957, 12.0802, 0.83 ) }
    dend_29 { pt3dadd( -101.587, 145.913, 17.4985, 0.83 ) }
    dend_29 { pt3dadd( -110.404, 152.798, 22.0857, 0.83 ) }
    dend_29 { pt3dadd( -120.099, 159.094, 25.5645, 0.83 ) }
    dend_29 { pt3dadd( -128.776, 166.171, 30.1399, 0.83 ) }
    dend_29 { pt3dadd( -137.201, 173.664, 34.5509, 0.83 ) }
    dend_29 { pt3dadd( -146.085, 180.229, 39.4477, 0.83 ) }
    dend_29 { pt3dadd( -153.062, 187.212, 46.4488, 0.83 ) }
    dend_29 { pt3dadd( -160.087, 192.194, 54.8857, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -22.0607, 12.1442, 16.1476, 0.55 ) }
    dend_28 { pt3dadd( -24.1015, 12.2537, 16.09, 0.55 ) }
    dend_28 { pt3dadd( -25.9095, 12.1432, 16.3635, 0.55 ) }
    dend_28 { pt3dadd( -29.643, 11.8132, 17.0301, 0.55 ) }
    dend_28 { pt3dadd( -32.5966, 11.5491, 17.6092, 0.55 ) }
    dend_28 { pt3dadd( -36.2617, 11.1292, 18.3341, 0.55 ) }
    dend_28 { pt3dadd( -42.3121, 10.3562, 19.2736, 0.55 ) }
    dend_28 { pt3dadd( -48.7346, 9.33393, 20.221, 0.55 ) }
    dend_28 { pt3dadd( -52.4784, 8.58393, 20.7793, 0.55 ) }
    dend_28 { pt3dadd( -56.5744, 7.48674, 21.3316, 0.55 ) }
    dend_28 { pt3dadd( -59.4507, 6.53168, 21.6502, 0.55 ) }
    dend_28 { pt3dadd( -63.637, 4.88653, 21.721, 0.55 ) }
    dend_28 { pt3dadd( -64.7937, 4.35467, 21.5318, 0.83 ) }
    dend_28 { pt3dadd( -67.4586, 3.04952, 20.6635, 0.83 ) }
    dend_28 { pt3dadd( -70.679, 1.28038, 19.2747, 0.55 ) }
    dend_28 { pt3dadd( -73.5048, -0.373336, 17.7194, 0.55 ) }
    dend_28 { pt3dadd( -76.3417, -1.91116, 16.033, 0.83 ) }
    dend_28 { pt3dadd( -78.6575, -3.15341, 14.6478, 0.28 ) }
    dend_28 { pt3dadd( -80.8418, -4.27445, 13.2341, 0.55 ) }
    dend_28 { pt3dadd( -84.005, -5.93901, 11.3342, 0.55 ) }
    dend_28 { pt3dadd( -85.4651, -6.78443, 10.5594, 0.55 ) }
    dend_28 { pt3dadd( -87.3146, -7.84758, 9.68373, 0.55 ) }
    dend_28 { pt3dadd( -90.0028, -9.46686, 8.73925, 0.28 ) }
    dend_28 { pt3dadd( -91.6515, -10.5155, 8.2926, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( -95.7375, -13.3879, 7.29449, 0.28 ) }
    dend_28 { pt3dadd( -97.1915, -14.5411, 7.13397, 0.55 ) }
    dend_28 { pt3dadd( -108.597, -19.0454, 8.09204, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 3/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.854374, -6.15222, 5.667, 2.22 ) }
    dend_14 { pt3dadd( -1.94046, -9.40027, 2.84535, 2.22 ) }
    dend_14 { pt3dadd( -2.9398, -12.3889, 0.249065, 1.38 ) }
    dend_14 { pt3dadd( -4.54119, -17.1781, -3.91134, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.854374, -6.15222, 5.667, 1.66 ) }
    dend_1 { pt3dadd( 0.548228, -6.33301, 4.91991, 1.66 ) }
    dend_1 { pt3dadd( 2.55813, -6.59207, 3.84934, 1.66 ) }
    dend_1 { pt3dadd( 5.94256, -7.02831, 2.04663, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.68178, 38.618, 1.59687, 0.28 ) }
    axon_1 { pt3dadd( 13.4606, 53.1342, 1.59687, 0.28 ) }
    axon_1 { pt3dadd( 17.2394, 67.6504, 1.59687, 0.28 ) }
    // Section: dend_66, id: dend_66, parent: dend_58 (entry count 14/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 27.4798, 2.62773, -5.09266, 0.83 ) }
    dend_66 { pt3dadd( 25.7957, 4.35186, -5.39166, 0.83 ) }
    dend_66 { pt3dadd( 23.9937, 5.64436, -5.60237, 0.83 ) }
    dend_66 { pt3dadd( 22.8362, 6.3767, -5.91056, 0.83 ) }
    dend_66 { pt3dadd( 21.1043, 7.62444, -6.56026, 0.83 ) }
    dend_66 { pt3dadd( 19.7466, 8.65048, -7.12017, 0.55 ) }
    dend_66 { pt3dadd( 18.7601, 9.39813, -7.64039, 0.83 ) }
    dend_66 { pt3dadd( 17.7071, 10.1934, -8.18436, 0.83 ) }
    dend_66 { pt3dadd( 15.9603, 11.644, -9.22311, 0.55 ) }
    dend_66 { pt3dadd( 14.0408, 13.3209, -10.4857, 0.55 ) }
    dend_66 { pt3dadd( 13.0525, 14.3022, -11.2445, 0.55 ) }
    dend_66 { pt3dadd( 11.3427, 16.3066, -12.7732, 0.83 ) }
    dend_66 { pt3dadd( 10.2571, 17.7672, -13.8192, 1.11 ) }
    dend_66 { pt3dadd( 8.74919, 20.009, -15.3272, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 28/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 27.4798, 2.62773, -5.09266, 0.55 ) }
    dend_59 { pt3dadd( 31.501, 6.59017, 5.06718, 0.55 ) }
    dend_59 { pt3dadd( 32.0071, 7.01935, 6.16304, 0.55 ) }
    dend_59 { pt3dadd( 33.2282, 8.02252, 8.34539, 1.11 ) }
    dend_59 { pt3dadd( 34.974, 9.45693, 11.4658, 0.55 ) }
    dend_59 { pt3dadd( 36.0306, 10.3249, 13.3543, 0.55 ) }
    dend_59 { pt3dadd( 36.294, 10.5413, 13.825, 0.83 ) }
    dend_59 { pt3dadd( 38.1866, 11.2963, 15.107, 0.55 ) }
    dend_59 { pt3dadd( 39.9507, 12.2487, 16.5644, 1.11 ) }
    dend_59 { pt3dadd( 45.1902, 17.2552, 24.0091, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -5.3542, -26.5431, 3.50657, 0.83 ) }
    dend_53 { pt3dadd( -4.51153, -27.6361, 3.2661, 0.83 ) }
    dend_53 { pt3dadd( -3.65021, -28.7309, 2.94904, 0.83 ) }
    dend_53 { pt3dadd( -2.98375, -29.6482, 2.59237, 0.83 ) }
    dend_53 { pt3dadd( -1.79702, -31.5351, 1.83837, 0.28 ) }
    dend_53 { pt3dadd( -1.04683, -32.8121, 1.32459, 0.83 ) }
    dend_53 { pt3dadd( 0.159243, -34.8268, 0.517898, 0.28 ) }
    dend_53 { pt3dadd( 0.57788, -35.4783, 0.244166, 0.83 ) }
    dend_53 { pt3dadd( 1.76209, -37.2372, -0.462716, 0.28 ) }
    dend_53 { pt3dadd( 2.69672, -38.725, -1.0247, 0.55 ) }
    dend_53 { pt3dadd( 3.02604, -39.2631, -1.217, 0.28 ) }
    dend_53 { pt3dadd( 3.91154, -40.7413, -1.6157, 0.55 ) }
    dend_53 { pt3dadd( 4.73574, -42.1314, -1.87997, 0.55 ) }
    dend_53 { pt3dadd( 5.76959, -43.8525, -2.16576, 0.55 ) }
    dend_53 { pt3dadd( 6.94326, -45.7261, -2.41239, 0.28 ) }
    dend_53 { pt3dadd( 7.37746, -46.4271, -2.50774, 0.83 ) }
    dend_53 { pt3dadd( 7.98621, -47.5315, -2.62636, 0.28 ) }
    dend_53 { pt3dadd( 8.54203, -48.6533, -2.71813, 0.55 ) }
    dend_53 { pt3dadd( 9.13465, -49.888, -2.89142, 0.55 ) }
    dend_53 { pt3dadd( 9.69651, -51.0538, -3.08887, 0.55 ) }
    dend_53 { pt3dadd( 10.4157, -52.4043, -3.33308, 0.83 ) }
    dend_53 { pt3dadd( 11.0651, -53.586, -3.5593, 0.55 ) }
    dend_53 { pt3dadd( 12.5293, -56.1119, -4.06528, 0.55 ) }
    dend_53 { pt3dadd( 14.0076, -58.6063, -4.55627, 2.22 ) }
    dend_53 { pt3dadd( 15.1495, -60.4812, -4.92293, 0.55 ) }
    dend_53 { pt3dadd( 16.1042, -61.9918, -5.22353, 0.55 ) }
    dend_53 { pt3dadd( 17.2135, -63.7014, -5.56057, 0.28 ) }
    dend_53 { pt3dadd( 18.0294, -64.9076, -5.83182, 0.55 ) }
    dend_53 { pt3dadd( 19.0179, -66.3297, -6.13817, 0.28 ) }
    dend_53 { pt3dadd( 19.661, -67.2668, -6.3048, 0.83 ) }
    dend_53 { pt3dadd( 20.291, -68.2274, -6.50357, 0.28 ) }
    dend_53 { pt3dadd( 21.1309, -69.6507, -6.79896, 0.55 ) }
    dend_53 { pt3dadd( 22.0689, -71.5149, -7.14282, 0.28 ) }
    dend_53 { pt3dadd( 22.5263, -72.5603, -7.31055, 0.55 ) }
    dend_53 { pt3dadd( 22.9434, -73.6611, -7.50228, 0.55 ) }
    dend_53 { pt3dadd( 23.3953, -75.0586, -7.74496, 0.28 ) }
    dend_53 { pt3dadd( 23.7291, -76.1638, -7.9183, 0.55 ) }
    dend_53 { pt3dadd( 24.4392, -78.6373, -8.25304, 0.28 ) }
    dend_53 { pt3dadd( 24.6599, -79.4429, -8.3334, 0.55 ) }
    dend_53 { pt3dadd( 25.2565, -81.4778, -8.59831, 0.28 ) }
    dend_53 { pt3dadd( 25.4944, -82.1675, -8.69485, 0.55 ) }
    dend_53 { pt3dadd( 26.2235, -84.032, -9.01816, 0.28 ) }
    dend_53 { pt3dadd( 26.4975, -84.6643, -9.16173, 0.55 ) }
    dend_53 { pt3dadd( 27.4424, -86.6626, -9.69902, 0.28 ) }
    dend_53 { pt3dadd( 28.0373, -87.7967, -10.0468, 0.83 ) }
    dend_53 { pt3dadd( 28.9311, -89.4636, -10.5885, 0.28 ) }
    dend_53 { pt3dadd( 29.6282, -90.7908, -11.0691, 0.55 ) }
    dend_53 { pt3dadd( 30.5015, -92.4505, -11.7242, 0.28 ) }
    dend_53 { pt3dadd( 30.9474, -93.2651, -12.0211, 0.55 ) }
    dend_53 { pt3dadd( 32.3933, -95.8741, -12.8304, 0.28 ) }
    dend_53 { pt3dadd( 33.1497, -97.2457, -13.2182, 0.55 ) }
    dend_53 { pt3dadd( 33.7333, -98.3169, -13.4628, 0.55 ) }
    dend_53 { pt3dadd( 34.5023, -99.7374, -13.7025, 0.55 ) }
    dend_53 { pt3dadd( 36.019, -102.502, -14.0127, 0.28 ) }
    dend_53 { pt3dadd( 36.4668, -103.327, -14.0852, 0.55 ) }
    dend_53 { pt3dadd( 38.0395, -106.184, -14.2091, 0.28 ) }
    dend_53 { pt3dadd( 38.8793, -107.54, -14.284, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 95/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.3542, -26.5431, 3.50657, 0.55 ) }
    dend_52 { pt3dadd( -8.18552, -28.3429, 4.47184, 0.55 ) }
    dend_52 { pt3dadd( -10.9621, -30.0387, 5.55774, 0.55 ) }
    dend_52 { pt3dadd( -13.9328, -31.6771, 6.76204, 0.55 ) }
    dend_52 { pt3dadd( -17.7046, -33.5388, 8.19505, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( -19.9646, -34.5456, 9.00938, 0.55 ) }
    dend_52 { pt3dadd( -20.9561, -34.9644, 9.37144, 0.55 ) }
    dend_52 { pt3dadd( -22.7252, -35.6827, 10.0022, 0.83 ) }
    dend_52 { pt3dadd( -24.7564, -36.3719, 10.7828, 0.83 ) }
    dend_52 { pt3dadd( -27.4625, -37.269, 11.8109, 0.55 ) }
    dend_52 { pt3dadd( -28.4649, -37.6598, 12.2291, 0.55 ) }
    dend_52 { pt3dadd( -30.9168, -38.7344, 13.3397, 0.55 ) }
    dend_52 { pt3dadd( -33.6509, -40.1627, 14.61, 0.83 ) }
    dend_52 { pt3dadd( -37.3477, -42.4153, 16.2921, 0.28 ) }
    dend_52 { pt3dadd( -39.0256, -43.6073, 17.1116, 1.11 ) }
    dend_52 { pt3dadd( -41.4643, -45.5958, 18.429, 0.55 ) }
    dend_52 { pt3dadd( -42.7163, -46.7302, 19.111, 0.55 ) }
    dend_52 { pt3dadd( -43.834, -47.8189, 19.6917, 0.83 ) }
    dend_52 { pt3dadd( -44.8225, -48.8616, 20.2106, 0.28 ) }
    dend_52 { pt3dadd( -45.2249, -49.3342, 20.3408, 0.55 ) }
    dend_52 { pt3dadd( -46.4655, -50.8139, 20.6411, 0.28 ) }
    dend_52 { pt3dadd( -47.1162, -51.6088, 20.6931, 0.55 ) }
    dend_52 { pt3dadd( -48.4853, -53.1906, 20.7276, 0.28 ) }
    dend_52 { pt3dadd( -49.6339, -54.4375, 20.7234, 0.55 ) }
    dend_52 { pt3dadd( -51.1373, -55.9526, 20.7336, 0.28 ) }
    dend_52 { pt3dadd( -51.9146, -56.64, 20.7385, 0.55 ) }
    dend_52 { pt3dadd( -53.6843, -58.0256, 20.7286, 0.28 ) }
    dend_52 { pt3dadd( -56.1559, -59.8055, 20.7455, 0.83 ) }
    dend_52 { pt3dadd( -59.166, -61.7923, 20.8133, 0.55 ) }
    dend_52 { pt3dadd( -60.8268, -62.7959, 20.8891, 0.55 ) }
    dend_52 { pt3dadd( -63.0771, -63.9768, 21.0305, 0.55 ) }
    dend_52 { pt3dadd( -65.5298, -65.1063, 21.2221, 0.28 ) }
    dend_52 { pt3dadd( -66.3586, -65.4412, 21.3035, 0.55 ) }
    dend_52 { pt3dadd( -68.3914, -66.1449, 21.5063, 0.28 ) }
    dend_52 { pt3dadd( -68.9985, -66.3252, 21.5635, 0.83 ) }
    dend_52 { pt3dadd( -71.9453, -67.1833, 21.8931, 0.28 ) }
    dend_52 { pt3dadd( -73.9187, -67.7147, 22.2341, 0.83 ) }
    dend_52 { pt3dadd( -75.8661, -68.1292, 22.6804, 0.28 ) }
    dend_52 { pt3dadd( -76.9993, -68.3033, 22.9536, 0.83 ) }
    dend_52 { pt3dadd( -78.938, -68.4639, 23.4592, 0.28 ) }
    dend_52 { pt3dadd( -80.5024, -68.4717, 23.8932, 0.55 ) }
    dend_52 { pt3dadd( -82.4349, -68.2709, 24.4795, 0.28 ) }
    dend_52 { pt3dadd( -83.2643, -68.0365, 24.7654, 0.83 ) }
    dend_52 { pt3dadd( -84.7465, -67.3659, 25.3993, 0.28 ) }
    dend_52 { pt3dadd( -85.2049, -67.1223, 25.6227, 0.55 ) }
    dend_52 { pt3dadd( -86.0468, -66.6908, 26.035, 0.28 ) }
    dend_52 { pt3dadd( -86.7902, -66.3688, 26.4037, 0.55 ) }
    dend_52 { pt3dadd( -89.7036, -65.961, 27.7968, 0.28 ) }
    dend_52 { pt3dadd( -90.2729, -65.9849, 28.065, 0.83 ) }
    dend_52 { pt3dadd( -91.1959, -66.1397, 28.4414, 0.83 ) }
    dend_52 { pt3dadd( -94.0553, -66.8807, 29.565, 0.28 ) }
    dend_52 { pt3dadd( -95.6393, -67.4727, 30.0716, 0.83 ) }
    dend_52 { pt3dadd( -99.7584, -69.4151, 31.143, 0.28 ) }
    dend_52 { pt3dadd( -100.651, -69.8825, 31.3305, 0.83 ) }
    dend_52 { pt3dadd( -102.553, -70.9356, 31.7228, 0.28 ) }
    dend_52 { pt3dadd( -104.879, -72.3, 32.1802, 0.83 ) }
    dend_52 { pt3dadd( -108.225, -74.5216, 32.7446, 0.28 ) }
    dend_52 { pt3dadd( -109.182, -75.1943, 32.8379, 0.83 ) }
    dend_52 { pt3dadd( -117.818, -78.1997, 37.4177, 0.83 ) }
    dend_52 { pt3dadd( -126.272, -79.4554, 42.9991, 0.83 ) }
    dend_52 { pt3dadd( -134.162, -81.7501, 49.0718, 0.83 ) }
    dend_52 { pt3dadd( -142.859, -83.0444, 54.2573, 0.83 ) }
    dend_52 { pt3dadd( -151.279, -85.8345, 59.3405, 0.83 ) }
    dend_52 { pt3dadd( -158.622, -88.5172, 65.9265, 0.83 ) }
    dend_52 { pt3dadd( -166.854, -90.5072, 71.635, 0.83 ) }
    dend_52 { pt3dadd( -175.206, -90.7153, 77.4932, 0.83 ) }
    dend_52 { pt3dadd( -184.132, -91.2847, 82.4076, 0.83 ) }
    dend_52 { pt3dadd( -193.417, -90.4442, 86.5561, 0.83 ) }
    dend_52 { pt3dadd( -203.002, -89.6565, 89.9664, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -0.474475, -24.5488, 3.61312, 0.55 ) }
    dend_50 { pt3dadd( -1.83819, -28.1809, 4.37682, 0.55 ) }
    dend_50 { pt3dadd( -2.50754, -30.1936, 4.72846, 0.55 ) }
    dend_50 { pt3dadd( -3.29767, -32.7929, 5.09707, 1.11 ) }
    dend_50 { pt3dadd( -4.00822, -35.1922, 5.42105, 0.83 ) }
    dend_50 { pt3dadd( -4.7691, -37.7618, 5.74701, 1.66 ) }
    dend_50 { pt3dadd( -5.51256, -40.2141, 6.15812, 0.83 ) }
    dend_50 { pt3dadd( -5.81893, -41.2511, 6.36951, 0.55 ) }
    dend_50 { pt3dadd( -6.40618, -43.075, 6.74412, 1.11 ) }
    dend_50 { pt3dadd( -6.86552, -44.379, 6.97684, 0.55 ) }
    dend_50 { pt3dadd( -7.55236, -46.267, 7.27925, 1.11 ) }
    dend_50 { pt3dadd( -8.88484, -49.6745, 7.88049, 0.55 ) }
    dend_50 { pt3dadd( -9.69707, -51.5083, 8.22472, 0.55 ) }
    dend_50 { pt3dadd( -10.1059, -52.3733, 8.36798, 0.83 ) }
    dend_50 { pt3dadd( -11.1581, -54.5609, 8.5891, 0.55 ) }
    dend_50 { pt3dadd( -11.7426, -55.773, 8.59784, 0.83 ) }
    dend_50 { pt3dadd( -12.4621, -57.2959, 8.57925, 0.28 ) }
    dend_50 { pt3dadd( -12.9496, -58.3878, 8.52682, 1.11 ) }
    dend_50 { pt3dadd( -13.3961, -59.4325, 8.5245, 1.11 ) }
    dend_50 { pt3dadd( -14.1197, -61.3617, 8.59735, 0.55 ) }
    dend_50 { pt3dadd( -14.5441, -62.6433, 8.68824, 0.55 ) }
    dend_50 { pt3dadd( -15.477, -65.5954, 8.9579, 0.55 ) }
    dend_50 { pt3dadd( -16.0342, -67.4602, 9.23357, 0.55 ) }
    dend_50 { pt3dadd( -16.522, -69.2753, 9.58027, 0.55 ) }
    dend_50 { pt3dadd( -16.8406, -70.6389, 9.8716, 0.55 ) }
    dend_50 { pt3dadd( -17.0927, -71.7674, 10.133, 0.83 ) }
    dend_50 { pt3dadd( -17.3209, -72.8074, 10.3519, 0.83 ) }
    dend_50 { pt3dadd( -17.8141, -74.8494, 10.6353, 0.28 ) }
    dend_50 { pt3dadd( -17.9723, -75.4184, 10.6514, 0.55 ) }
    dend_50 { pt3dadd( -18.4951, -76.9976, 10.4826, 0.28 ) }
    dend_50 { pt3dadd( -18.7343, -77.6751, 10.2449, 0.55 ) }
    dend_50 { pt3dadd( -19.1493, -78.8131, 9.68906, 0.28 ) }
    dend_50 { pt3dadd( -19.4912, -79.5958, 9.26351, 0.83 ) }
    dend_50 { pt3dadd( -21.0335, -82.9038, 7.39202, 0.28 ) }
    dend_50 { pt3dadd( -21.6268, -84.1384, 6.71642, 0.83 ) }
    dend_50 { pt3dadd( -23.2719, -87.4297, 4.98005, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_50 { pt3dadd( -23.9714, -88.8243, 4.30269, 1.38 ) }
    dend_50 { pt3dadd( -25.0698, -90.9956, 3.33762, 0.55 ) }
    dend_50 { pt3dadd( -25.7798, -92.3568, 2.8541, 0.55 ) }
    dend_50 { pt3dadd( -26.7884, -94.1552, 2.53715, 0.28 ) }
    dend_50 { pt3dadd( -27.3018, -94.9875, 2.45225, 0.83 ) }
    dend_50 { pt3dadd( -27.929, -95.8723, 2.4629, 0.28 ) }
    dend_50 { pt3dadd( -28.0841, -96.0906, 2.45124, 0.83 ) }
    dend_50 { pt3dadd( -29.064, -97.4844, 2.25942, 0.28 ) }
    dend_50 { pt3dadd( -30.0728, -98.888, 2.01577, 0.55 ) }
    dend_50 { pt3dadd( -30.8418, -100.061, 1.69448, 0.28 ) }
    dend_50 { pt3dadd( -31.1144, -100.554, 1.50214, 0.55 ) }
    dend_50 { pt3dadd( -31.9172, -102.244, 0.763444, 0.28 ) }
    dend_50 { pt3dadd( -32.1118, -102.761, 0.547607, 0.55 ) }
    dend_50 { pt3dadd( -32.4238, -104.01, -0.0911909, 0.55 ) }
    dend_50 { pt3dadd( -32.7776, -105.657, -0.980729, 0.28 ) }
    dend_50 { pt3dadd( -32.9952, -106.625, -1.51441, 0.55 ) }
    dend_50 { pt3dadd( -33.283, -107.741, -2.14165, 0.28 ) }
    dend_50 { pt3dadd( -33.6447, -109.136, -2.86327, 1.11 ) }
    dend_50 { pt3dadd( -34.5045, -111.885, -4.40265, 0.55 ) }
    dend_50 { pt3dadd( -34.9459, -112.975, -4.91664, 0.83 ) }
    dend_50 { pt3dadd( -35.7448, -114.832, -5.39935, 0.28 ) }
    dend_50 { pt3dadd( -35.9504, -115.318, -5.50588, 0.83 ) }
    dend_50 { pt3dadd( -36.6076, -116.961, -5.77945, 0.28 ) }
    dend_50 { pt3dadd( -37.0687, -118.329, -5.83827, 0.55 ) }
    dend_50 { pt3dadd( -37.9533, -121.41, -5.88848, 0.55 ) }
    dend_50 { pt3dadd( -38.4412, -123.387, -6.08202, 0.55 ) }
    dend_50 { pt3dadd( -39.0705, -126.391, -6.38379, 0.28 ) }
    dend_50 { pt3dadd( -39.2502, -127.326, -6.42315, 0.28 ) }
    dend_50 { pt3dadd( -39.5372, -128.925, -6.53534, 0.83 ) }
    dend_50 { pt3dadd( -39.8468, -131.066, -6.81155, 0.28 ) }
    dend_50 { pt3dadd( -40.1125, -132.807, -7.18046, 0.28 ) }
    dend_50 { pt3dadd( -40.3932, -134.124, -7.45213, 0.83 ) }
    dend_50 { pt3dadd( -41.3139, -137.466, -7.91733, 0.28 ) }
    dend_50 { pt3dadd( -42.0485, -139.427, -8.01747, 0.55 ) }
    dend_50 { pt3dadd( -43.0656, -141.926, -8.07878, 0.28 ) }
    dend_50 { pt3dadd( -43.7338, -143.498, -8.04133, 0.83 ) }
    dend_50 { pt3dadd( -44.7954, -145.74, -8.00933, 1.38 ) }
    dend_50 { pt3dadd( -45.4684, -146.929, -8.02981, 0.55 ) }
    dend_50 { pt3dadd( -47.6115, -150.007, -8.22709, 1.66 ) }
    dend_50 { pt3dadd( -51.6473, -158.566, -9.88417, 1.66 ) }
    dend_50 { pt3dadd( -56.1318, -167.032, -10.5306, 1.66 ) }
    dend_50 { pt3dadd( -60.977, -175.312, -10.6705, 1.66 ) }
    dend_50 { pt3dadd( -65.4649, -183.587, -12.5225, 1.66 ) }
    dend_50 { pt3dadd( -69.1212, -192.124, -14.9787, 1.66 ) }
    dend_50 { pt3dadd( -74.1656, -200.224, -15.8954, 1.66 ) }
    dend_50 { pt3dadd( -80.2288, -207.612, -16.0343, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -0.474475, -24.5488, 3.61312, 0.83 ) }
    dend_45 { pt3dadd( 0.534125, -25.9507, 3.12815, 0.83 ) }
    dend_45 { pt3dadd( 1.76712, -27.6644, 2.53529, 0.83 ) }
    dend_45 { pt3dadd( 2.34278, -28.4645, 2.25849, 0.83 ) }
    dend_45 { pt3dadd( 3.48552, -30.0527, 1.70902, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.2643, -15.1708, -5.15329, 0.83 ) }
    dend_40 { pt3dadd( -15.1458, -17.3992, -6.58218, 0.83 ) }
    dend_40 { pt3dadd( -15.7361, -18.4929, -7.1022, 0.83 ) }
    dend_40 { pt3dadd( -16.1761, -19.6856, -7.58235, 0.83 ) }
    dend_40 { pt3dadd( -16.8987, -21.6441, -8.37084, 1.94 ) }
    dend_40 { pt3dadd( -17.7648, -23.9915, -9.31586, 0.55 ) }
    dend_40 { pt3dadd( -18.7684, -26.7117, -10.411, 0.55 ) }
    dend_40 { pt3dadd( -19.0579, -27.9592, -10.7765, 0.55 ) }
    dend_40 { pt3dadd( -19.4712, -30.3943, -11.45, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 60/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -13.2643, -15.1708, -5.15329, 0.83 ) }
    dend_33 { pt3dadd( -14.586, -17.6115, -6.10327, 0.83 ) }
    dend_33 { pt3dadd( -16.1071, -20.0739, -6.61246, 0.55 ) }
    dend_33 { pt3dadd( -18.3447, -23.6214, -6.93857, 0.55 ) }
    dend_33 { pt3dadd( -20.7797, -27.2165, -7.02043, 0.55 ) }
    dend_33 { pt3dadd( -23.108, -30.4735, -6.83405, 0.55 ) }
    dend_33 { pt3dadd( -25.4735, -33.6312, -6.49244, 0.55 ) }
    dend_33 { pt3dadd( -30.0138, -38.6709, -5.45811, 0.55 ) }
    dend_33 { pt3dadd( -31.8361, -40.4173, -4.84447, 0.28 ) }
    dend_33 { pt3dadd( -33.9864, -42.2954, -3.85773, 0.55 ) }
    dend_33 { pt3dadd( -36.0043, -43.7924, -2.68799, 0.55 ) }
    dend_33 { pt3dadd( -37.1871, -44.5193, -1.98374, 0.55 ) }
    dend_33 { pt3dadd( -39.3373, -45.5673, -0.715737, 0.55 ) }
    dend_33 { pt3dadd( -41.4934, -46.3488, 0.187628, 0.28 ) }
    dend_33 { pt3dadd( -42.2059, -46.5307, 0.457459, 0.28 ) }
    dend_33 { pt3dadd( -44.7489, -47.0408, 1.30603, 0.83 ) }
    dend_33 { pt3dadd( -48.5841, -47.664, 1.95665, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 77/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.54119, -17.1781, -3.91134, 1.11 ) }
    dend_20 { pt3dadd( -7.78376, -15.9819, -2.14836, 1.11 ) }
    dend_20 { pt3dadd( -9.20502, -15.4576, -1.37563, 0.83 ) }
    dend_20 { pt3dadd( -11.703, -14.5361, -0.0174811, 1.38 ) }
    dend_20 { pt3dadd( -16.5724, -12.7398, 2.62998, 0.83 ) }
    dend_20 { pt3dadd( -18.2584, -12.1178, 3.54665, 0.83 ) }
    dend_20 { pt3dadd( -21.3356, -10.9826, 5.21976, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.54119, -17.1781, -3.91134, 1.11 ) }
    dend_15 { pt3dadd( -4.43032, -19.5376, -4.20312, 1.11 ) }
    dend_15 { pt3dadd( -4.20381, -23.754, -4.81753, 1.11 ) }
    dend_15 { pt3dadd( -3.98243, -28.7559, -5.56604, 1.11 ) }
    dend_15 { pt3dadd( -3.74454, -34.1309, -6.37037, 1.11 ) }
    dend_15 { pt3dadd( -3.58861, -37.654, -6.89759, 1.11 ) }
    dend_15 { pt3dadd( -3.41618, -41.5499, -7.4806, 1.11 ) }
    dend_15 { pt3dadd( -3.32291, -43.7115, -7.82314, 1.11 ) }
    dend_15 { pt3dadd( -3.1044, -48.3211, -8.63451, 1.38 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.94256, -7.02831, 2.04663, 0.55 ) }
    dend_9 { pt3dadd( 8.26643, -6.74703, 4.31297, 0.55 ) }
    dend_9 { pt3dadd( 11.3927, -6.65087, 7.558, 0.55 ) }
    dend_9 { pt3dadd( 14.1312, -6.79947, 10.2341, 0.83 ) }
    dend_9 { pt3dadd( 15.688, -6.94822, 11.633, 0.83 ) }
    dend_9 { pt3dadd( 18.2671, -7.20288, 13.8429, 0.83 ) }
    dend_9 { pt3dadd( 20.9877, -7.39313, 16.2146, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( 22.7014, -7.46269, 17.8989, 0.55 ) }
    dend_9 { pt3dadd( 25.804, -7.00749, 20.5531, 0.83 ) }
    dend_9 { pt3dadd( 26.6102, -6.10836, 21.693, 0.83 ) }
    dend_9 { pt3dadd( 27.1698, -4.47605, 22.9921, 0.28 ) }
    dend_9 { pt3dadd( 27.7234, -2.60323, 24.2092, 0.83 ) }
    dend_9 { pt3dadd( 28.3627, -0.835125, 25.2836, 0.55 ) }
    dend_9 { pt3dadd( 28.802, 0.144791, 25.8943, 0.55 ) }
    dend_9 { pt3dadd( 30.2907, 3.31816, 27.8028, 0.55 ) }
    dend_9 { pt3dadd( 31.9497, 6.47526, 29.5079, 0.55 ) }
    dend_9 { pt3dadd( 32.8447, 7.89113, 30.1177, 0.55 ) }
    dend_9 { pt3dadd( 34.3762, 10.0457, 30.9705, 0.55 ) }
    dend_9 { pt3dadd( 35.7684, 11.9515, 31.6514, 0.55 ) }
    dend_9 { pt3dadd( 37.4046, 14.0501, 32.3268, 0.55 ) }
    dend_9 { pt3dadd( 38.7812, 15.6401, 32.761, 0.55 ) }
    dend_9 { pt3dadd( 40.3417, 17.4661, 33.2162, 0.55 ) }
    dend_9 { pt3dadd( 42.9681, 20.7446, 34.0341, 0.55 ) }
    dend_9 { pt3dadd( 44.4283, 22.6737, 34.4737, 0.55 ) }
    dend_9 { pt3dadd( 45.4047, 23.9891, 34.8294, 0.55 ) }
    dend_9 { pt3dadd( 46.9658, 25.8413, 35.668, 0.55 ) }
    dend_9 { pt3dadd( 54.4733, 33.5643, 40.9513, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.94256, -7.02831, 2.04663, 0.55 ) }
    dend_2 { pt3dadd( 6.67383, -8.34841, 2.05804, 0.55 ) }
    dend_2 { pt3dadd( 7.46165, -9.63953, 2.11678, 0.55 ) }
    dend_2 { pt3dadd( 8.42148, -11.2767, 2.27494, 0.55 ) }
    dend_2 { pt3dadd( 9.95784, -14.0075, 2.57007, 0.55 ) }
    dend_2 { pt3dadd( 10.8575, -15.58, 2.74492, 0.55 ) }
    dend_2 { pt3dadd( 12.4825, -18.4627, 3.15823, 0.55 ) }
    dend_2 { pt3dadd( 13.3727, -20.1388, 3.47839, 0.55 ) }
    dend_2 { pt3dadd( 14.4537, -22.3636, 4.02072, 0.55 ) }
    dend_2 { pt3dadd( 15.2541, -24.0426, 4.47075, 0.55 ) }
    dend_2 { pt3dadd( 16.0353, -25.7347, 4.97895, 0.28 ) }
    dend_2 { pt3dadd( 17.0139, -27.8987, 5.61181, 0.83 ) }
    dend_2 { pt3dadd( 17.9319, -30.2061, 6.35131, 0.83 ) }
    dend_2 { pt3dadd( 18.7239, -32.3215, 7.07291, 1.11 ) }
    dend_2 { pt3dadd( 19.512, -34.2768, 7.74739, 0.83 ) }
    dend_2 { pt3dadd( 20.7767, -37.4701, 8.89511, 0.83 ) }
    dend_2 { pt3dadd( 21.6581, -39.7736, 9.71686, 0.83 ) }
    dend_2 { pt3dadd( 22.8918, -42.8489, 10.7461, 0.55 ) }
    dend_2 { pt3dadd( 23.5917, -44.5142, 11.3192, 0.55 ) }
    dend_2 { pt3dadd( 24.6009, -46.7621, 12.1546, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 40/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 45.1902, 17.2552, 24.0091, 0.55 ) }
    dend_63 { pt3dadd( 49.2015, 19.1949, 30.4273, 0.55 ) }
    dend_63 { pt3dadd( 52.7676, 22.1376, 36.7383, 0.55 ) }
    dend_63 { pt3dadd( 56.869, 24.4571, 42.9743, 0.55 ) }
    dend_63 { pt3dadd( 61.6727, 26.6812, 48.7231, 0.55 ) }
    dend_63 { pt3dadd( 65.8689, 27.8049, 55.2135, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 46/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 45.1902, 17.2552, 24.0091, 0.55 ) }
    dend_60 { pt3dadd( 50.7888, 23.8161, 32.7285, 0.55 ) }
    dend_60 { pt3dadd( 55.2809, 29.4601, 42.6399, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 38.8793, -107.54, -14.284, 0.28 ) }
    dend_55 { pt3dadd( 40.6405, -110.897, -13.7978, 0.28 ) }
    dend_55 { pt3dadd( 41.8492, -113.103, -13.5666, 0.28 ) }
    dend_55 { pt3dadd( 43.1563, -115.459, -13.2924, 0.83 ) }
    dend_55 { pt3dadd( 44.3512, -117.643, -13.0302, 0.28 ) }
    dend_55 { pt3dadd( 45.2901, -119.419, -12.8385, 0.55 ) }
    dend_55 { pt3dadd( 47.3168, -123.237, -12.4682, 0.28 ) }
    dend_55 { pt3dadd( 47.6373, -123.813, -12.4214, 0.55 ) }
    dend_55 { pt3dadd( 48.7258, -125.893, -12.6298, 0.28 ) }
    dend_55 { pt3dadd( 49.0386, -126.534, -12.7984, 0.55 ) }
    dend_55 { pt3dadd( 50.3615, -129.615, -13.7462, 0.28 ) }
    dend_55 { pt3dadd( 50.7658, -130.772, -14.1553, 0.28 ) }
    dend_55 { pt3dadd( 51.1125, -131.969, -14.5137, 0.55 ) }
    dend_55 { pt3dadd( 52.6633, -138.222, -16.2058, 0.28 ) }
    dend_55 { pt3dadd( 53.1136, -140.279, -16.7297, 0.28 ) }
    dend_55 { pt3dadd( 53.7111, -143.527, -17.6183, 0.83 ) }
    dend_55 { pt3dadd( 54.4597, -149.335, -19.2392, 0.28 ) }
    dend_55 { pt3dadd( 54.8913, -153.558, -20.3962, 0.55 ) }
    dend_55 { pt3dadd( 55.0554, -155.654, -20.9233, 0.55 ) }
    dend_55 { pt3dadd( 55.1099, -156.444, -21.0612, 0.55 ) }
    dend_55 { pt3dadd( 55.3543, -161.003, -22.1942, 0.28 ) }
    dend_55 { pt3dadd( 55.3799, -161.946, -22.561, 0.55 ) }
    dend_55 { pt3dadd( 55.5401, -165.262, -24.3799, 0.28 ) }
    dend_55 { pt3dadd( 55.5717, -165.674, -24.6768, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 73/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 38.8793, -107.54, -14.284, 0.28 ) }
    dend_54 { pt3dadd( 39.7135, -109.255, -20.734, 0.28 ) }
    dend_54 { pt3dadd( 39.8859, -109.609, -22.067, 0.28 ) }
    dend_54 { pt3dadd( 40.091, -110.031, -23.6527, 0.55 ) }
    dend_54 { pt3dadd( 40.7326, -111.35, -28.6135, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.48552, -30.0527, 1.70902, 0.83 ) }
    dend_47 { pt3dadd( 4.65296, -33.4821, 2.0331, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 3.48552, -30.0527, 1.70902, 0.83 ) }
    dend_46 { pt3dadd( 5.72039, -29.9487, 1.31956, 0.83 ) }
    dend_46 { pt3dadd( 7.36392, -29.802, 1.06919, 0.83 ) }
    dend_46 { pt3dadd( 10.1757, -29.5611, 0.820868, 1.11 ) }
    dend_46 { pt3dadd( 14.0869, -29.225, 0.116484, 0.83 ) }
    dend_46 { pt3dadd( 16.1802, -29.1186, -0.329583, 0.83 ) }
    dend_46 { pt3dadd( 18.2388, -29.0146, -0.81521, 0.83 ) }
    dend_46 { pt3dadd( 19.9411, -28.9733, -1.36059, 0.55 ) }
    dend_46 { pt3dadd( 21.8435, -29.0142, -2.03884, 0.83 ) }
    dend_46 { pt3dadd( 26.2828, -29.1164, -3.60106, 0.55 ) }
    dend_46 { pt3dadd( 27.9591, -29.0486, -4.08944, 0.55 ) }
    dend_46 { pt3dadd( 30.5648, -28.9203, -4.8517, 0.55 ) }
    dend_46 { pt3dadd( 32.1522, -28.8685, -5.32673, 0.55 ) }
    dend_46 { pt3dadd( 33.9992, -28.838, -5.86711, 0.83 ) }
    dend_46 { pt3dadd( 36.0846, -28.7625, -6.41233, 0.83 ) }
    dend_46 { pt3dadd( 37.6066, -28.7061, -6.6618, 0.55 ) }
    dend_46 { pt3dadd( 39.5412, -28.6002, -6.98813, 0.55 ) }
    dend_46 { pt3dadd( 41.4976, -28.547, -7.26322, 0.55 ) }
    dend_46 { pt3dadd( 42.4916, -28.5098, -7.37907, 0.83 ) }
    dend_46 { pt3dadd( 43.9826, -28.4747, -7.63527, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_46 { pt3dadd( 45.2567, -28.5004, -7.99374, 0.83 ) }
    dend_46 { pt3dadd( 46.2358, -28.5226, -8.31223, 0.28 ) }
    dend_46 { pt3dadd( 47.4, -28.5403, -8.7332, 0.83 ) }
    dend_46 { pt3dadd( 48.8321, -28.5655, -9.37951, 0.28 ) }
    dend_46 { pt3dadd( 50.4384, -28.585, -10.2087, 0.28 ) }
    dend_46 { pt3dadd( 52.4848, -28.5922, -11.3283, 1.11 ) }
    dend_46 { pt3dadd( 54.4562, -28.6239, -12.4684, 0.28 ) }
    dend_46 { pt3dadd( 55.3403, -28.6437, -13.0498, 0.83 ) }
    dend_46 { pt3dadd( 58.8421, -28.6397, -15.3771, 0.28 ) }
    dend_46 { pt3dadd( 59.2981, -28.6397, -15.6962, 0.83 ) }
    dend_46 { pt3dadd( 60.6613, -28.6237, -16.5517, 0.28 ) }
    dend_46 { pt3dadd( 62.6287, -28.6566, -17.7112, 0.55 ) }
    dend_46 { pt3dadd( 65.4669, -28.7795, -19.2833, 0.83 ) }
    dend_46 { pt3dadd( 68.1186, -28.943, -20.5361, 0.28 ) }
    dend_46 { pt3dadd( 71.1787, -29.2182, -21.8845, 0.55 ) }
    dend_46 { pt3dadd( 73.6232, -29.4408, -22.9317, 0.28 ) }
    dend_46 { pt3dadd( 75.6, -29.6706, -23.6841, 0.83 ) }
    dend_46 { pt3dadd( 76.8616, -29.8291, -24.1308, 0.28 ) }
    dend_46 { pt3dadd( 78.0346, -30.0035, -24.4911, 0.83 ) }
    dend_46 { pt3dadd( 81.599, -30.612, -25.4417, 0.28 ) }
    dend_46 { pt3dadd( 82.7523, -30.7848, -25.7263, 0.28 ) }
    dend_46 { pt3dadd( 84.4201, -31.013, -26.2633, 0.83 ) }
    dend_46 { pt3dadd( 88.3707, -31.3723, -27.4713, 0.28 ) }
    dend_46 { pt3dadd( 90.4785, -31.5499, -28.176, 0.28 ) }
    dend_46 { pt3dadd( 92.5216, -31.774, -28.8657, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -19.4712, -30.3943, -11.45, 0.55 ) }
    dend_42 { pt3dadd( -21.613, -30.5299, -12.2913, 0.55 ) }
    dend_42 { pt3dadd( -24.16, -30.5718, -13.2932, 0.83 ) }
    dend_42 { pt3dadd( -26.7686, -30.5521, -14.2801, 0.28 ) }
    dend_42 { pt3dadd( -28.9919, -30.5598, -15.0864, 0.55 ) }
    dend_42 { pt3dadd( -31.194, -30.6001, -15.9042, 0.28 ) }
    dend_42 { pt3dadd( -31.9209, -30.618, -16.1744, 0.55 ) }
    dend_42 { pt3dadd( -33.0488, -30.6795, -16.6229, 0.55 ) }
    dend_42 { pt3dadd( -34.8637, -30.8152, -17.2952, 0.55 ) }
    dend_42 { pt3dadd( -35.976, -30.9131, -17.6345, 0.55 ) }
    dend_42 { pt3dadd( -38.5635, -31.1933, -18.3862, 0.55 ) }
    dend_42 { pt3dadd( -39.6058, -31.3813, -18.6759, 0.55 ) }
    dend_42 { pt3dadd( -41.9033, -31.9839, -19.2684, 0.55 ) }
    dend_42 { pt3dadd( -45.302, -33.0712, -20.0711, 1.11 ) }
    dend_42 { pt3dadd( -47.2266, -33.7873, -20.4747, 0.28 ) }
    dend_42 { pt3dadd( -47.9353, -34.0583, -20.6131, 0.55 ) }
    dend_42 { pt3dadd( -49.3251, -34.5822, -20.8441, 0.28 ) }
    dend_42 { pt3dadd( -51.2871, -35.249, -21.1738, 0.83 ) }
    dend_42 { pt3dadd( -53.1203, -35.7082, -21.4537, 0.55 ) }
    dend_42 { pt3dadd( -54.8423, -35.9253, -21.6763, 0.83 ) }
    dend_42 { pt3dadd( -56.9046, -35.7855, -21.9986, 0.55 ) }
    dend_42 { pt3dadd( -58.3345, -35.4877, -22.6802, 0.28 ) }
    dend_42 { pt3dadd( -59.2387, -35.2238, -23.3185, 0.55 ) }
    dend_42 { pt3dadd( -60.1252, -35.0499, -24.4344, 0.28 ) }
    dend_42 { pt3dadd( -60.5115, -35.0461, -25.0828, 0.83 ) }
    dend_42 { pt3dadd( -61.1775, -35.1179, -26.3096, 0.83 ) }
    dend_42 { pt3dadd( -64.4694, -35.9158, -32.3987, 0.28 ) }
    dend_42 { pt3dadd( -64.9339, -36.1148, -33.7414, 0.55 ) }
    dend_42 { pt3dadd( -65.0907, -35.5579, -28.3395, 0.28 ) }
    dend_42 { pt3dadd( -65.6531, -35.5398, -26.9851, 0.55 ) }
    dend_42 { pt3dadd( -66.9101, -35.6687, -24.9467, 0.28 ) }
    dend_42 { pt3dadd( -67.7214, -35.7536, -23.8111, 0.55 ) }
    dend_42 { pt3dadd( -78.3538, -36.6452, -10.0193, 0.55 ) }
    dend_42 { pt3dadd( -79.3747, -36.6962, -8.73482, 0.28 ) }
    dend_42 { pt3dadd( -80.1304, -36.7139, -7.83628, 0.55 ) }
    dend_42 { pt3dadd( -81.3086, -36.7688, -6.49534, 0.28 ) }
    dend_42 { pt3dadd( -83.103, -36.9138, -4.53062, 0.83 ) }
    dend_42 { pt3dadd( -85.1198, -37.09, -2.69447, 0.28 ) }
    dend_42 { pt3dadd( -87.0189, -37.3153, -2.34529, 0.55 ) }
    dend_42 { pt3dadd( -89.9713, -37.6416, -1.73593, 0.55 ) }
    dend_42 { pt3dadd( -91.4025, -37.7536, -1.4343, 0.83 ) }
    dend_42 { pt3dadd( -92.4889, -37.8283, -1.21878, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -19.4712, -30.3943, -11.45, 0.55 ) }
    dend_41 { pt3dadd( -19.3094, -31.9745, -11.7002, 0.55 ) }
    dend_41 { pt3dadd( -19.1422, -34.1071, -12.0585, 0.83 ) }
    dend_41 { pt3dadd( -19.025, -36.6986, -12.4135, 0.55 ) }
    dend_41 { pt3dadd( -19.0218, -39.9327, -12.7538, 0.83 ) }
    dend_41 { pt3dadd( -19.1846, -44.4138, -13.0735, 0.55 ) }
    dend_41 { pt3dadd( -19.2847, -45.7503, -13.1296, 0.28 ) }
    dend_41 { pt3dadd( -19.51, -47.3499, -13.1768, 0.28 ) }
    dend_41 { pt3dadd( -19.8701, -49.2559, -13.1954, 0.28 ) }
    dend_41 { pt3dadd( -20.4577, -51.8588, -13.0997, 0.83 ) }
    dend_41 { pt3dadd( -20.9655, -53.8015, -12.9305, 0.28 ) }
    dend_41 { pt3dadd( -21.7805, -56.6454, -12.5179, 2.22 ) }
    dend_41 { pt3dadd( -22.8061, -60.1177, -12.0746, 0.28 ) }
    dend_41 { pt3dadd( -23.2791, -61.6804, -11.9041, 0.83 ) }
    dend_41 { pt3dadd( -23.9069, -63.6962, -11.7408, 0.28 ) }
    dend_41 { pt3dadd( -24.3148, -64.9878, -11.6617, 0.28 ) }
    dend_41 { pt3dadd( -24.6437, -65.9426, -11.6288, 0.55 ) }
    dend_41 { pt3dadd( -25.4067, -68.024, -11.6708, 0.28 ) }
    dend_41 { pt3dadd( -25.6377, -68.628, -11.7089, 0.55 ) }
    dend_41 { pt3dadd( -26.5412, -70.9185, -11.9481, 0.28 ) }
    dend_41 { pt3dadd( -27.0961, -72.496, -12.3176, 0.55 ) }
    dend_41 { pt3dadd( -27.6901, -74.4054, -12.8829, 0.55 ) }
    dend_41 { pt3dadd( -28.4862, -77.2603, -13.837, 0.28 ) }
    dend_41 { pt3dadd( -28.718, -78.143, -14.1569, 0.28 ) }
    dend_41 { pt3dadd( -29.2539, -80.2637, -14.9498, 0.83 ) }
    dend_41 { pt3dadd( -30.4194, -84.9147, -16.554, 0.28 ) }
    dend_41 { pt3dadd( -30.7909, -86.4186, -17.0308, 0.83 ) }
    dend_41 { pt3dadd( -31.3229, -88.6643, -17.674, 0.28 ) }
    dend_41 { pt3dadd( -31.5456, -89.5317, -17.903, 0.55 ) }
    dend_41 { pt3dadd( -32.4284, -92.7424, -18.6934, 0.28 ) }
    dend_41 { pt3dadd( -32.9619, -94.9637, -19.3668, 0.55 ) }
    dend_41 { pt3dadd( -33.8533, -97.9996, -20.1598, 0.28 ) }
    dend_41 { pt3dadd( -34.0311, -98.6786, -20.4123, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( -34.4618, -100.587, -21.2729, 0.28 ) }
    dend_41 { pt3dadd( -34.6316, -101.501, -21.7003, 0.55 ) }
    dend_41 { pt3dadd( -35.3493, -106.641, -24.2883, 0.28 ) }
    dend_41 { pt3dadd( -35.6768, -109.605, -25.904, 0.55 ) }
    dend_41 { pt3dadd( -36.0183, -112.943, -27.6074, 0.28 ) }
    dend_41 { pt3dadd( -36.1033, -114.137, -28.1988, 0.55 ) }
    dend_41 { pt3dadd( -36.2117, -116.114, -28.9626, 0.28 ) }
    dend_41 { pt3dadd( -36.2701, -116.821, -29.14, 0.55 ) }
    dend_41 { pt3dadd( -36.5033, -118.406, -29.2135, 0.28 ) }
    dend_41 { pt3dadd( -36.5837, -119.119, -29.2437, 0.55 ) }
    dend_41 { pt3dadd( -36.9983, -121.597, -29.0793, 0.28 ) }
    dend_41 { pt3dadd( -37.4562, -123.575, -28.9045, 0.55 ) }
    dend_41 { pt3dadd( -38.0352, -125.463, -28.7082, 0.28 ) }
    dend_41 { pt3dadd( -38.3597, -126.398, -28.547, 0.55 ) }
    dend_41 { pt3dadd( -38.7472, -127.504, -28.3428, 0.28 ) }
    dend_41 { pt3dadd( -38.9484, -128.106, -28.2356, 0.55 ) }
    dend_41 { pt3dadd( -39.7525, -130.37, -27.8456, 0.28 ) }
    dend_41 { pt3dadd( -40.4682, -132.62, -27.7084, 0.55 ) }
    dend_41 { pt3dadd( -41.1414, -135.177, -27.6598, 0.28 ) }
    dend_41 { pt3dadd( -41.5679, -136.852, -27.6663, 0.55 ) }
    dend_41 { pt3dadd( -41.9605, -138.423, -27.8157, 0.55 ) }
    dend_41 { pt3dadd( -42.2308, -139.531, -27.9768, 0.55 ) }
    dend_41 { pt3dadd( -43.1866, -143.45, -28.8658, 0.28 ) }
    dend_41 { pt3dadd( -44.3646, -147.664, -29.9833, 0.28 ) }
    dend_41 { pt3dadd( -45.1436, -150.074, -30.5905, 0.83 ) }
    dend_41 { pt3dadd( -47.0082, -155.221, -31.755, 0.28 ) }
    dend_41 { pt3dadd( -47.5414, -156.555, -32.0481, 0.55 ) }
    dend_41 { pt3dadd( -48.8392, -159.56, -32.6706, 0.28 ) }
    dend_41 { pt3dadd( -49.8924, -161.71, -33.056, 1.11 ) }
    dend_41 { pt3dadd( -51.4716, -164.685, -33.4791, 0.28 ) }
    dend_41 { pt3dadd( -51.8063, -165.312, -33.455, 0.55 ) }
    dend_41 { pt3dadd( -52.574, -166.717, -33.0627, 0.28 ) }
    dend_41 { pt3dadd( -53.082, -167.698, -32.7229, 0.55 ) }
    dend_41 { pt3dadd( -53.9213, -169.369, -32.0345, 0.28 ) }
    dend_41 { pt3dadd( -54.4629, -170.494, -31.6254, 0.55 ) }
    dend_41 { pt3dadd( -56.0276, -173.778, -30.5829, 0.28 ) }
    dend_41 { pt3dadd( -56.4021, -174.689, -30.332, 0.55 ) }
    dend_41 { pt3dadd( -56.9304, -176.237, -29.9424, 0.28 ) }
    dend_41 { pt3dadd( -57.2576, -177.525, -29.6277, 0.55 ) }
    dend_41 { pt3dadd( -58.0032, -181.495, -28.7355, 0.28 ) }
    dend_41 { pt3dadd( -58.0491, -182.156, -28.6498, 0.83 ) }
    dend_41 { pt3dadd( -58.0951, -186.161, -28.3938, 0.28 ) }
    dend_41 { pt3dadd( -58.0657, -187.545, -28.3297, 0.55 ) }
    dend_41 { pt3dadd( -57.9663, -190.195, -28.2333, 0.28 ) }
    dend_41 { pt3dadd( -57.8814, -191.844, -28.2232, 0.55 ) }
    dend_41 { pt3dadd( -57.5447, -198.8, -28.4273, 0.28 ) }
    dend_41 { pt3dadd( -57.4919, -201.145, -28.6259, 0.83 ) }
    dend_41 { pt3dadd( -57.5233, -204.303, -29.0671, 0.28 ) }
    dend_41 { pt3dadd( -57.5642, -205.211, -29.244, 0.55 ) }
    dend_41 { pt3dadd( -57.7218, -207.479, -29.8635, 0.28 ) }
    dend_41 { pt3dadd( -57.8272, -208.599, -30.202, 0.55 ) }
    dend_41 { pt3dadd( -58.3134, -212.146, -31.3601, 0.28 ) }
    dend_41 { pt3dadd( -58.3384, -212.44, -31.4973, 0.55 ) }
    dend_41 { pt3dadd( -58.4389, -214.268, -32.3599, 0.28 ) }
    dend_41 { pt3dadd( -58.4955, -215.927, -33.093, 0.83 ) }
    dend_41 { pt3dadd( -58.5758, -218.427, -33.959, 0.28 ) }
    dend_41 { pt3dadd( -58.5963, -219.131, -34.114, 0.55 ) }
    dend_41 { pt3dadd( -58.821, -225.407, -34.8946, 0.28 ) }
    dend_41 { pt3dadd( -58.9309, -228.939, -35.2604, 0.28 ) }
    dend_41 { pt3dadd( -58.9589, -230.126, -35.3107, 0.55 ) }
    dend_41 { pt3dadd( -59.0933, -233.199, -35.0162, 0.28 ) }
    dend_41 { pt3dadd( -59.1552, -234.105, -34.7015, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -48.5841, -47.664, 1.95665, 0.55 ) }
    dend_37 { pt3dadd( -50.7747, -47.3212, 0.817079, 0.55 ) }
    dend_37 { pt3dadd( -51.9171, -47.1922, 0.19698, 0.55 ) }
    dend_37 { pt3dadd( -53.9446, -47.0748, -0.840809, 0.55 ) }
    dend_37 { pt3dadd( -57.0988, -46.923, -2.23947, 0.55 ) }
    dend_37 { pt3dadd( -61.2672, -46.6736, -3.88052, 0.55 ) }
    dend_37 { pt3dadd( -65.4958, -46.3406, -5.33813, 0.28 ) }
    dend_37 { pt3dadd( -67.4667, -46.1118, -5.99867, 0.28 ) }
    dend_37 { pt3dadd( -69.8537, -45.86, -6.59584, 0.55 ) }
    dend_37 { pt3dadd( -72.5848, -45.646, -6.90814, 0.28 ) }
    dend_37 { pt3dadd( -73.8586, -45.5404, -7.15493, 0.55 ) }
    dend_37 { pt3dadd( -75.3358, -45.4243, -7.55277, 0.28 ) }
    dend_37 { pt3dadd( -76.8921, -45.2911, -8.11347, 0.83 ) }
    dend_37 { pt3dadd( -80.0346, -44.9457, -9.56638, 0.28 ) }
    dend_37 { pt3dadd( -81.4711, -44.7894, -10.3957, 0.55 ) }
    dend_37 { pt3dadd( -90.178, -44.1251, -16.4052, 0.55 ) }
    dend_37 { pt3dadd( -91.0014, -44.0815, -17.039, 0.55 ) }
    dend_37 { pt3dadd( -92.3955, -44.0128, -18.2559, 0.55 ) }
    dend_37 { pt3dadd( -93.5332, -43.912, -19.4029, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -48.5841, -47.664, 1.95665, 0.83 ) }
    dend_34 { pt3dadd( -49.4958, -47.255, 2.42534, 0.83 ) }
    dend_34 { pt3dadd( -50.6848, -46.7216, 3.03657, 1.11 ) }
    dend_34 { pt3dadd( -52.104, -46.085, 3.76616, 1.11 ) }
    dend_34 { pt3dadd( -53.9076, -45.2759, 4.69335, 0.28 ) }
    dend_34 { pt3dadd( -55.5031, -44.5602, 5.51355, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -21.3356, -10.9826, 5.21976, 0.83 ) }
    dend_24 { pt3dadd( -21.3088, -9.49386, 5.74582, 0.83 ) }
    dend_24 { pt3dadd( -21.3725, -8.17746, 6.18474, 0.83 ) }
    dend_24 { pt3dadd( -21.7474, -5.64637, 7.06368, 0.83 ) }
    dend_24 { pt3dadd( -22.1879, -3.53205, 7.93783, 0.83 ) }
    dend_24 { pt3dadd( -22.7158, -1.57448, 8.8331, 0.83 ) }
    dend_24 { pt3dadd( -23.1382, -0.248544, 9.46253, 0.83 ) }
    dend_24 { pt3dadd( -23.6892, 0.883381, 10.0755, 0.83 ) }
    dend_24 { pt3dadd( -24.7735, 2.47753, 11.0621, 0.83 ) }
    dend_24 { pt3dadd( -25.9538, 3.7545, 11.943, 0.83 ) }
    dend_24 { pt3dadd( -26.5743, 4.33424, 12.3371, 0.83 ) }
    dend_24 { pt3dadd( -27.7135, 5.35971, 13.079, 0.83 ) }
    dend_24 { pt3dadd( -28.9738, 6.57662, 13.9328, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_24 { pt3dadd( -29.5768, 7.18656, 14.3297, 0.83 ) }
    dend_24 { pt3dadd( -30.499, 8.18748, 14.8852, 0.83 ) }
    dend_24 { pt3dadd( -31.06, 8.82292, 15.1714, 0.28 ) }
    dend_24 { pt3dadd( -31.9099, 9.89923, 15.6489, 0.55 ) }
    dend_24 { pt3dadd( -32.6012, 10.8619, 16.083, 0.28 ) }
    dend_24 { pt3dadd( -33.2953, 12.2445, 16.6072, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 6/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -21.3356, -10.9826, 5.21976, 0.83 ) }
    dend_21 { pt3dadd( -22.6096, -11.034, 4.66824, 0.83 ) }
    dend_21 { pt3dadd( -24.1601, -11.1623, 4.11847, 0.83 ) }
    dend_21 { pt3dadd( -25.2697, -11.3701, 3.61906, 0.83 ) }
    dend_21 { pt3dadd( -27.5674, -12.0048, 2.49066, 0.83 ) }
    dend_21 { pt3dadd( -29.8136, -12.6869, 1.37279, 0.83 ) }
    dend_21 { pt3dadd( -30.776, -12.9791, 0.893829, 0.83 ) }
    dend_21 { pt3dadd( -32.3668, -13.4324, 0.0100309, 0.83 ) }
    dend_21 { pt3dadd( -34.9255, -14.1102, -1.511, 0.55 ) }
    dend_21 { pt3dadd( -35.6553, -14.4054, -1.99281, 0.55 ) }
    dend_21 { pt3dadd( -36.4253, -14.9876, -2.53136, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.1044, -48.3211, -8.63451, 0.83 ) }
    dend_17 { pt3dadd( -2.93486, -50.7766, -8.68089, 0.83 ) }
    dend_17 { pt3dadd( -2.7755, -53.4175, -8.70411, 1.11 ) }
    dend_17 { pt3dadd( -2.7437, -55.507, -8.71002, 0.83 ) }
    dend_17 { pt3dadd( -2.70995, -56.9913, -8.72352, 0.55 ) }
    dend_17 { pt3dadd( -2.67793, -57.7737, -8.73858, 0.83 ) }
    dend_17 { pt3dadd( -2.60083, -60.811, -8.80576, 0.83 ) }
    dend_17 { pt3dadd( -2.56492, -62.4604, -8.81227, 0.83 ) }
    dend_17 { pt3dadd( -2.54054, -65.4368, -8.81145, 0.83 ) }
    dend_17 { pt3dadd( -2.56746, -67.292, -8.78625, 0.55 ) }
    dend_17 { pt3dadd( -2.64822, -69.782, -8.76931, 0.55 ) }
    dend_17 { pt3dadd( -2.75422, -72.3581, -8.75065, 0.55 ) }
    dend_17 { pt3dadd( -2.95191, -75.4969, -8.73446, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.1044, -48.3211, -8.63451, 0.83 ) }
    dend_16 { pt3dadd( -2.1154, -50.6776, -10.8214, 0.83 ) }
    dend_16 { pt3dadd( -1.72553, -52.3751, -12.2957, 0.83 ) }
    dend_16 { pt3dadd( -1.45063, -54.2934, -13.8093, 0.55 ) }
    dend_16 { pt3dadd( -1.30137, -55.9497, -15.0266, 0.83 ) }
    dend_16 { pt3dadd( -1.23689, -58.203, -16.4956, 0.83 ) }
    dend_16 { pt3dadd( -1.21874, -60.2491, -17.6985, 0.83 ) }
    dend_16 { pt3dadd( -1.45835, -62.9811, -19.1954, 0.55 ) }
    dend_16 { pt3dadd( -1.63, -64.9973, -20.1831, 0.55 ) }
    dend_16 { pt3dadd( -1.73037, -65.5791, -20.4614, 0.83 ) }
    dend_16 { pt3dadd( -2.16271, -67.2908, -21.1398, 0.55 ) }
    dend_16 { pt3dadd( -2.51269, -68.3714, -21.5164, 0.55 ) }
    dend_16 { pt3dadd( -3.16131, -70.2523, -22.1943, 1.11 ) }
    dend_16 { pt3dadd( -3.75313, -71.9058, -22.8515, 1.11 ) }
    dend_16 { pt3dadd( -4.98452, -74.9511, -24.1693, 0.55 ) }
    dend_16 { pt3dadd( -5.69476, -76.7002, -25.0407, 1.11 ) }
    dend_16 { pt3dadd( -6.67404, -79.1329, -26.3791, 0.55 ) }
    dend_16 { pt3dadd( -6.81766, -79.4769, -26.5576, 0.83 ) }
    dend_16 { pt3dadd( -7.98073, -82.3284, -27.9252, 0.28 ) }
    dend_16 { pt3dadd( -8.11494, -82.6779, -28.1008, 0.55 ) }
    dend_16 { pt3dadd( -8.56258, -84.3545, -28.9655, 0.28 ) }
    dend_16 { pt3dadd( -8.73042, -85.2844, -29.4335, 0.83 ) }
    dend_16 { pt3dadd( -8.89192, -87.0396, -30.2288, 0.55 ) }
    dend_16 { pt3dadd( -8.97791, -88.5331, -30.7838, 0.83 ) }
    dend_16 { pt3dadd( -9.02477, -90.5124, -31.3871, 0.28 ) }
    dend_16 { pt3dadd( -9.09144, -92.1679, -31.8574, 0.83 ) }
    dend_16 { pt3dadd( -9.09042, -94.8956, -32.5575, 0.28 ) }
    dend_16 { pt3dadd( -8.97863, -97.2949, -33.2339, 0.83 ) }
    dend_16 { pt3dadd( -8.77923, -98.8963, -33.6947, 0.28 ) }
    dend_16 { pt3dadd( -8.57983, -99.978, -33.9908, 0.28 ) }
    dend_16 { pt3dadd( -8.22705, -101.603, -34.4743, 0.83 ) }
    dend_16 { pt3dadd( -7.61715, -104.349, -35.4396, 0.28 ) }
    dend_16 { pt3dadd( -7.07549, -106.561, -36.3658, 0.55 ) }
    dend_16 { pt3dadd( -6.50414, -108.43, -37.154, 0.28 ) }
    dend_16 { pt3dadd( -5.74013, -110.677, -38.1218, 0.28 ) }
    dend_16 { pt3dadd( -5.19845, -112.261, -38.7823, 0.55 ) }
    dend_16 { pt3dadd( -4.82227, -113.413, -39.2414, 0.28 ) }
    dend_16 { pt3dadd( -4.48478, -114.626, -39.6823, 0.55 ) }
    dend_16 { pt3dadd( -3.90599, -116.668, -40.3534, 0.28 ) }
    dend_16 { pt3dadd( -3.51432, -118.178, -40.7991, 1.38 ) }
    dend_16 { pt3dadd( -2.9453, -121.452, -41.8203, 0.28 ) }
    dend_16 { pt3dadd( -2.83741, -122.473, -42.1547, 0.55 ) }
    dend_16 { pt3dadd( -2.74338, -124.358, -42.8137, 0.28 ) }
    dend_16 { pt3dadd( -2.80079, -126.128, -43.4873, 0.28 ) }
    dend_16 { pt3dadd( -2.9995, -128.335, -44.3616, 1.11 ) }
    dend_16 { pt3dadd( -3.33457, -132.81, -46.0093, 0.28 ) }
    dend_16 { pt3dadd( -3.52908, -135.712, -47.0282, 0.28 ) }
    dend_16 { pt3dadd( -3.52931, -136.879, -47.3742, 0.83 ) }
    dend_16 { pt3dadd( -3.56034, -140.465, -48.4398, 0.28 ) }
    dend_16 { pt3dadd( -3.54421, -141.929, -48.8514, 0.55 ) }
    dend_16 { pt3dadd( -3.29642, -145.586, -49.8339, 0.28 ) }
    dend_16 { pt3dadd( -3.21676, -146.176, -49.9641, 0.83 ) }
    dend_16 { pt3dadd( -2.7624, -150.262, -50.8749, 0.28 ) }
    dend_16 { pt3dadd( -2.28455, -154.717, -51.9513, 0.55 ) }
    dend_16 { pt3dadd( -2.02968, -156.006, -52.1728, 0.28 ) }
    dend_16 { pt3dadd( -1.87799, -156.638, -52.2848, 0.55 ) }
    dend_16 { pt3dadd( -1.49377, -158.039, -52.5258, 0.55 ) }
    dend_16 { pt3dadd( -0.983447, -159.607, -52.7704, 0.55 ) }
    dend_16 { pt3dadd( -0.119786, -161.81, -53.0939, 0.55 ) }
    dend_16 { pt3dadd( 1.85456, -166.122, -53.5244, 0.28 ) }
    dend_16 { pt3dadd( 2.87502, -168.314, -53.7867, 0.28 ) }
    dend_16 { pt3dadd( 3.15346, -168.894, -53.8612, 0.83 ) }
    dend_16 { pt3dadd( 4.24339, -170.981, -54.1997, 0.28 ) }
    dend_16 { pt3dadd( 4.74833, -171.893, -54.3998, 0.55 ) }
    dend_16 { pt3dadd( 5.89091, -174.299, -55.0726, 0.28 ) }
    dend_16 { pt3dadd( 5.96482, -174.553, -55.1879, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 54.4733, 33.5643, 40.9513, 0.55 ) }
    dend_13 { pt3dadd( 61.1403, 39.3844, 45.2603, 0.55 ) }
    dend_13 { pt3dadd( 66.9329, 45.3635, 50.5122, 0.55 ) }
    dend_13 { pt3dadd( 72.92, 50.3218, 56.5133, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( 77.9502, 54.1935, 63.9835, 0.55 ) }
    dend_13 { pt3dadd( 84.532, 57.2451, 70.5677, 0.55 ) }
    dend_13 { pt3dadd( 91.1724, 61.4277, 76.4529, 0.55 ) }
    dend_13 { pt3dadd( 96.9189, 66.6891, 82.44, 0.55 ) }
    dend_13 { pt3dadd( 102.621, 72.4577, 88.0062, 0.55 ) }
    dend_13 { pt3dadd( 109.264, 78.1224, 92.5425, 0.55 ) }
    dend_13 { pt3dadd( 116.116, 84.289, 96.0293, 0.55 ) }
    dend_13 { pt3dadd( 122.028, 90.208, 101.213, 0.55 ) }
    dend_13 { pt3dadd( 127.424, 97.0667, 105.819, 0.55 ) }
    dend_13 { pt3dadd( 131.414, 104.492, 110.975, 0.55 ) }
    dend_13 { pt3dadd( 135.366, 111.406, 116.797, 0.55 ) }
    dend_13 { pt3dadd( 138.413, 117.904, 123.542, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 12/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 54.4733, 33.5643, 40.9513, 0.55 ) }
    dend_10 { pt3dadd( 62.2889, 39.9937, 49.0641, 0.55 ) }
    dend_10 { pt3dadd( 68.599, 47.2761, 57.7621, 0.55 ) }
    dend_10 { pt3dadd( 74.595, 56.0763, 65.25, 0.55 ) }
    dend_10 { pt3dadd( 81.5918, 65.3053, 71.241, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 24.6009, -46.7621, 12.1546, 0.55 ) }
    dend_6 { pt3dadd( 25.8807, -48.6413, 11.7573, 0.55 ) }
    dend_6 { pt3dadd( 26.5379, -49.6294, 11.527, 0.55 ) }
    dend_6 { pt3dadd( 28.2062, -52.2198, 10.9247, 0.55 ) }
    dend_6 { pt3dadd( 30.9338, -56.3017, 9.9136, 0.55 ) }
    dend_6 { pt3dadd( 32.269, -58.2325, 9.43115, 0.55 ) }
    dend_6 { pt3dadd( 34.0284, -60.8538, 8.81585, 0.28 ) }
    dend_6 { pt3dadd( 34.9295, -62.2574, 8.51999, 0.83 ) }
    dend_6 { pt3dadd( 35.9497, -63.7784, 8.23157, 0.83 ) }
    dend_6 { pt3dadd( 37.8312, -66.5082, 7.69424, 0.55 ) }
    dend_6 { pt3dadd( 39.4594, -68.8904, 7.24809, 0.55 ) }
    dend_6 { pt3dadd( 41.0435, -71.2973, 6.89227, 0.55 ) }
    dend_6 { pt3dadd( 42.1018, -72.89, 6.76625, 0.28 ) }
    dend_6 { pt3dadd( 42.9372, -74.0925, 6.67607, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 24.6009, -46.7621, 12.1546, 0.55 ) }
    dend_3 { pt3dadd( 24.8103, -48.5287, 12.1185, 0.55 ) }
    dend_3 { pt3dadd( 25.055, -50.1164, 12.093, 0.55 ) }
    dend_3 { pt3dadd( 25.3183, -51.782, 12.5075, 0.55 ) }
    dend_3 { pt3dadd( 25.5439, -53.1267, 12.9915, 0.55 ) }
    dend_3 { pt3dadd( 25.7709, -54.5702, 13.6221, 0.28 ) }
    dend_3 { pt3dadd( 25.9181, -55.6081, 14.1071, 0.55 ) }
    dend_3 { pt3dadd( 26.0344, -56.2975, 14.5107, 0.55 ) }
    dend_3 { pt3dadd( 26.6901, -60.4931, 17.2415, 0.28 ) }
    dend_3 { pt3dadd( 26.716, -60.7618, 17.4182, 0.55 ) }
    dend_3 { pt3dadd( 26.7621, -61.8505, 18.0709, 0.28 ) }
    dend_3 { pt3dadd( 26.8023, -62.4791, 18.3928, 0.55 ) }
    dend_3 { pt3dadd( 26.8618, -63.9303, 19.086, 0.28 ) }
    dend_3 { pt3dadd( 26.8761, -65.198, 19.5513, 0.28 ) }
    dend_3 { pt3dadd( 26.8886, -66.7291, 19.7126, 0.55 ) }
    dend_3 { pt3dadd( 26.8979, -68.3292, 19.8369, 0.55 ) }
    dend_3 { pt3dadd( 26.9346, -69.9331, 19.8654, 0.55 ) }
    dend_3 { pt3dadd( 28.2269, -77.4442, 22.8287, 0.55 ) }
    dend_3 { pt3dadd( 29.9451, -85.0895, 25.1968, 0.55 ) }
    dend_3 { pt3dadd( 32.6098, -92.7204, 26.5243, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 51/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 65.8689, 27.8049, 55.2135, 0.55 ) }
    dend_65 { pt3dadd( 73.014, 28.1665, 65.5091, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 53/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 65.8689, 27.8049, 55.2135, 0.55 ) }
    dend_64 { pt3dadd( 69.3427, 33.0767, 61.7609, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 55/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 55.2809, 29.4601, 42.6399, 0.55 ) }
    dend_62 { pt3dadd( 60.3734, 36.3227, 51.455, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 55.2809, 29.4601, 42.6399, 0.55 ) }
    dend_61 { pt3dadd( 59.746, 35.7264, 50.5042, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 4.65296, -33.4821, 2.0331, 0.83 ) }
    dend_49 { pt3dadd( 6.32678, -34.8914, 1.65441, 0.83 ) }
    dend_49 { pt3dadd( 8.38953, -36.6215, 1.27985, 0.83 ) }
    dend_49 { pt3dadd( 9.36932, -37.4845, 1.0813, 0.28 ) }
    dend_49 { pt3dadd( 10.7402, -38.838, 0.792529, 0.55 ) }
    dend_49 { pt3dadd( 11.6097, -39.745, 0.607541, 0.83 ) }
    dend_49 { pt3dadd( 12.608, -40.8219, 0.375173, 0.28 ) }
    dend_49 { pt3dadd( 13.1379, -41.4283, 0.274581, 0.55 ) }
    dend_49 { pt3dadd( 14.3881, -42.8809, 0.110699, 0.28 ) }
    dend_49 { pt3dadd( 15.3847, -44.127, -0.0190511, 1.11 ) }
    dend_49 { pt3dadd( 16.1681, -45.195, -0.15678, 1.11 ) }
    dend_49 { pt3dadd( 17.2488, -46.6942, -0.391423, 0.28 ) }
    dend_49 { pt3dadd( 18.1244, -47.8911, -0.640572, 0.83 ) }
    dend_49 { pt3dadd( 19.0377, -49.1285, -0.89036, 0.28 ) }
    dend_49 { pt3dadd( 19.402, -49.5937, -0.978023, 0.55 ) }
    dend_49 { pt3dadd( 20.6805, -51.1889, -1.2392, 0.28 ) }
    dend_49 { pt3dadd( 21.3032, -51.9769, -1.34699, 0.55 ) }
    dend_49 { pt3dadd( 23.7993, -55.1717, -1.71684, 0.83 ) }
    dend_49 { pt3dadd( 25.4346, -57.2586, -1.93365, 0.28 ) }
    dend_49 { pt3dadd( 26.6683, -58.7792, -2.0486, 0.55 ) }
    dend_49 { pt3dadd( 27.55, -59.8452, -2.09459, 0.28 ) }
    dend_49 { pt3dadd( 28.6785, -61.1987, -2.06665, 0.55 ) }
    dend_49 { pt3dadd( 29.1408, -61.7555, -2.03253, 0.55 ) }
    dend_49 { pt3dadd( 29.8258, -62.5599, -1.93689, 0.28 ) }
    dend_49 { pt3dadd( 30.3487, -63.1897, -1.86615, 0.55 ) }
    dend_49 { pt3dadd( 31.5738, -64.8083, -1.78211, 0.28 ) }
    dend_49 { pt3dadd( 32.7156, -66.4045, -1.8018, 0.55 ) }
    dend_49 { pt3dadd( 33.275, -67.2692, -1.81561, 0.28 ) }
    dend_49 { pt3dadd( 33.6094, -67.8199, -1.82538, 0.83 ) }
    dend_49 { pt3dadd( 34.2466, -69.0252, -1.88042, 0.83 ) }
    dend_49 { pt3dadd( 34.9407, -70.6136, -1.95704, 0.28 ) }
    dend_49 { pt3dadd( 35.0451, -70.9052, -1.97175, 0.55 ) }
    dend_49 { pt3dadd( 35.4898, -72.3703, -2.07788, 0.28 ) }
    dend_49 { pt3dadd( 35.6512, -72.9229, -2.10837, 0.55 ) }
    dend_49 { pt3dadd( 36.1841, -74.6299, -2.17933, 0.28 ) }
    dend_49 { pt3dadd( 36.6501, -75.9155, -2.20964, 0.55 ) }
    dend_49 { pt3dadd( 37.0636, -76.977, -2.26158, 0.28 ) }
    dend_49 { pt3dadd( 37.8191, -78.7591, -2.38331, 1.38 ) }
    dend_49 { pt3dadd( 38.6447, -80.5306, -2.44347, 0.28 ) }
    dend_49 { pt3dadd( 38.9287, -81.1104, -2.44489, 0.55 ) }
    dend_49 { pt3dadd( 39.7775, -82.7925, -2.39014, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_49 { pt3dadd( 41.1784, -85.5374, -2.25616, 0.55 ) }
    dend_49 { pt3dadd( 42.1688, -87.486, -2.18913, 0.55 ) }
    dend_49 { pt3dadd( 43.8909, -90.8741, -2.10111, 0.28 ) }
    dend_49 { pt3dadd( 44.5482, -92.1419, -2.02212, 1.11 ) }
    dend_49 { pt3dadd( 45.2024, -93.3814, -1.90068, 0.28 ) }
    dend_49 { pt3dadd( 45.5499, -93.9966, -1.81356, 0.83 ) }
    dend_49 { pt3dadd( 46.5159, -95.5362, -1.48138, 0.28 ) }
    dend_49 { pt3dadd( 46.6372, -95.7182, -1.44598, 0.55 ) }
    dend_49 { pt3dadd( 48.4162, -98.1624, -1.1311, 0.28 ) }
    dend_49 { pt3dadd( 48.7006, -98.5074, -1.07838, 0.83 ) }
    dend_49 { pt3dadd( 49.4954, -99.4302, -0.944651, 0.28 ) }
    dend_49 { pt3dadd( 49.7736, -99.7723, -0.910379, 0.83 ) }
    dend_49 { pt3dadd( 50.3635, -100.507, -0.819091, 0.28 ) }
    dend_49 { pt3dadd( 51.4974, -101.945, -0.694411, 0.83 ) }
    dend_49 { pt3dadd( 53.9376, -105.046, -0.592044, 0.28 ) }
    dend_49 { pt3dadd( 55.0255, -106.435, -0.586675, 0.83 ) }
    dend_49 { pt3dadd( 56.309, -108.068, -0.617234, 0.28 ) }
    dend_49 { pt3dadd( 57.4868, -109.496, -0.682849, 0.55 ) }
    dend_49 { pt3dadd( 58.2501, -110.362, -0.721297, 0.28 ) }
    dend_49 { pt3dadd( 59.7754, -112.013, -0.780615, 1.11 ) }
    dend_49 { pt3dadd( 61.0492, -113.343, -0.831525, 0.28 ) }
    dend_49 { pt3dadd( 61.882, -114.109, -0.864656, 0.55 ) }
    dend_49 { pt3dadd( 63.1367, -115.153, -0.94865, 0.55 ) }
    dend_49 { pt3dadd( 64.3746, -116.134, -1.08573, 0.55 ) }
    dend_49 { pt3dadd( 65.494, -116.968, -1.2257, 0.28 ) }
    dend_49 { pt3dadd( 65.672, -117.094, -1.24829, 0.83 ) }
    dend_49 { pt3dadd( 68.2896, -118.858, -1.5779, 0.28 ) }
    dend_49 { pt3dadd( 69.6973, -119.787, -1.83262, 0.55 ) }
    dend_49 { pt3dadd( 71.4492, -120.923, -2.24148, 0.28 ) }
    dend_49 { pt3dadd( 72.8882, -121.857, -2.64184, 0.83 ) }
    dend_49 { pt3dadd( 74.2443, -122.719, -3.04227, 0.28 ) }
    dend_49 { pt3dadd( 74.812, -123.085, -3.20729, 0.55 ) }
    dend_49 { pt3dadd( 77.035, -124.551, -3.8213, 0.28 ) }
    dend_49 { pt3dadd( 78.2281, -125.29, -4.1361, 1.11 ) }
    dend_49 { pt3dadd( 83.4412, -131.483, -5.27574, 1.11 ) }
    dend_49 { pt3dadd( 87.8234, -138.419, -5.42995, 1.11 ) }
    dend_49 { pt3dadd( 92.4455, -145.17, -4.86906, 1.11 ) }
    dend_49 { pt3dadd( 97.2747, -151.779, -4.48246, 1.11 ) }
    dend_49 { pt3dadd( 102.021, -158.334, -3.20121, 1.11 ) }
    dend_49 { pt3dadd( 107.845, -163.785, -1.50039, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.65296, -33.4821, 2.0331, 0.28 ) }
    dend_48 { pt3dadd( 4.70184, -34.4533, 2.23063, 0.28 ) }
    dend_48 { pt3dadd( 4.75445, -35.1689, 2.36738, 0.83 ) }
    dend_48 { pt3dadd( 4.83589, -36.0967, 2.47219, 0.28 ) }
    dend_48 { pt3dadd( 4.92607, -37.3456, 2.56244, 0.83 ) }
    dend_48 { pt3dadd( 4.98493, -39.136, 2.59238, 0.55 ) }
    dend_48 { pt3dadd( 4.98979, -39.8908, 2.58774, 0.28 ) }
    dend_48 { pt3dadd( 5.01713, -40.8304, 2.61055, 0.83 ) }
    dend_48 { pt3dadd( 5.06155, -42.4408, 2.6556, 0.28 ) }
    dend_48 { pt3dadd( 5.11028, -44.0842, 2.84637, 0.83 ) }
    dend_48 { pt3dadd( 5.14706, -46.1274, 3.25953, 0.28 ) }
    dend_48 { pt3dadd( 5.15215, -46.8446, 3.42191, 0.83 ) }
    dend_48 { pt3dadd( 5.19209, -49.0837, 3.97188, 0.28 ) }
    dend_48 { pt3dadd( 5.2383, -50.9416, 4.51075, 0.83 ) }
    dend_48 { pt3dadd( 5.35308, -54.0471, 5.63462, 0.28 ) }
    dend_48 { pt3dadd( 5.42934, -55.1898, 6.12022, 0.83 ) }
    dend_48 { pt3dadd( 5.60472, -56.9555, 7.01045, 0.28 ) }
    dend_48 { pt3dadd( 5.68594, -57.8109, 7.43991, 0.55 ) }
    dend_48 { pt3dadd( 4.67229, -66.1864, 8.02205, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -93.5332, -43.912, -19.4029, 0.28 ) }
    dend_39 { pt3dadd( -99.1809, -42.1452, -19.9886, 0.28 ) }
    dend_39 { pt3dadd( -100.192, -41.8289, -20.0934, 0.55 ) }
    dend_39 { pt3dadd( -103.518, -40.7884, -20.4384, 0.28 ) }
    dend_39 { pt3dadd( -105.6, -40.1371, -20.6543, 0.55 ) }
    dend_39 { pt3dadd( -106.836, -39.7505, -20.7824, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 65/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -93.5332, -43.912, -19.4029, 0.28 ) }
    dend_38 { pt3dadd( -94.708, -45.3529, -20.4095, 0.28 ) }
    dend_38 { pt3dadd( -95.4324, -46.3006, -20.583, 0.55 ) }
    dend_38 { pt3dadd( -97.124, -48.6963, -20.4649, 0.28 ) }
    dend_38 { pt3dadd( -97.8991, -49.6472, -20.569, 0.55 ) }
    dend_38 { pt3dadd( -99.7881, -51.8996, -20.9598, 0.28 ) }
    dend_38 { pt3dadd( -100.44, -52.677, -21.0948, 0.55 ) }
    dend_38 { pt3dadd( -102.143, -54.6773, -21.1795, 0.28 ) }
    dend_38 { pt3dadd( -103.119, -55.831, -21.0977, 0.83 ) }
    dend_38 { pt3dadd( -105.773, -59.0422, -20.5088, 0.28 ) }
    dend_38 { pt3dadd( -106.482, -59.8626, -20.5196, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -55.5031, -44.5602, 5.51355, 0.28 ) }
    dend_36 { pt3dadd( -56.2791, -43.7028, 6.77484, 0.28 ) }
    dend_36 { pt3dadd( -56.6553, -43.3097, 7.19928, 0.55 ) }
    dend_36 { pt3dadd( -57.5057, -42.494, 7.94899, 0.28 ) }
    dend_36 { pt3dadd( -57.981, -42.0673, 8.35603, 0.83 ) }
    dend_36 { pt3dadd( -59.1684, -41.0234, 9.37767, 0.28 ) }
    dend_36 { pt3dadd( -59.429, -40.7938, 9.6018, 0.55 ) }
    dend_36 { pt3dadd( -61.0124, -39.491, 10.9479, 0.28 ) }
    dend_36 { pt3dadd( -61.6433, -38.9862, 11.4356, 0.55 ) }
    dend_36 { pt3dadd( -62.4493, -38.3164, 11.995, 0.28 ) }
    dend_36 { pt3dadd( -62.9923, -37.8654, 12.3414, 0.55 ) }
    dend_36 { pt3dadd( -63.3285, -37.5698, 12.518, 0.28 ) }
    dend_36 { pt3dadd( -63.9662, -37.0124, 12.9205, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -55.5031, -44.5602, 5.51355, 0.55 ) }
    dend_35 { pt3dadd( -57.0893, -44.2462, 6.49464, 0.55 ) }
    dend_35 { pt3dadd( -57.7118, -44.201, 6.84979, 0.55 ) }
    dend_35 { pt3dadd( -58.6784, -44.2207, 7.28779, 0.83 ) }
    dend_35 { pt3dadd( -60.2206, -44.3567, 7.88574, 0.28 ) }
    dend_35 { pt3dadd( -60.7479, -44.4413, 8.0434, 0.55 ) }
    dend_35 { pt3dadd( -61.601, -44.6055, 8.26148, 0.55 ) }
    dend_35 { pt3dadd( -62.6764, -44.9913, 8.49413, 0.83 ) }
    dend_35 { pt3dadd( -64.0753, -45.5938, 8.71897, 0.28 ) }
    dend_35 { pt3dadd( -64.5099, -45.8074, 8.76336, 0.55 ) }
    dend_35 { pt3dadd( -65.6112, -46.4036, 8.79802, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_35 { pt3dadd( -65.8295, -46.5173, 8.80726, 0.55 ) }
    dend_35 { pt3dadd( -67.3941, -47.375, 8.87979, 0.28 ) }
    dend_35 { pt3dadd( -68.3324, -47.8396, 8.99458, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -33.2953, 12.2445, 16.6072, 0.83 ) }
    dend_26 { pt3dadd( -34.3339, 16.8333, 19.0981, 0.83 ) }
    dend_26 { pt3dadd( -35.0054, 19.1962, 20.209, 0.55 ) }
    dend_26 { pt3dadd( -35.2966, 20.1786, 20.6504, 0.55 ) }
    dend_26 { pt3dadd( -36.1803, 23.3401, 22.0394, 0.83 ) }
    dend_26 { pt3dadd( -36.8473, 26.0423, 23.1901, 0.55 ) }
    dend_26 { pt3dadd( -37.2319, 27.8179, 23.9841, 0.55 ) }
    dend_26 { pt3dadd( -37.7097, 31.197, 25.4184, 0.55 ) }
    dend_26 { pt3dadd( -37.8416, 32.1585, 25.8491, 0.83 ) }
    dend_26 { pt3dadd( -38.1663, 34.9346, 27.0712, 0.28 ) }
    dend_26 { pt3dadd( -38.2914, 36.7375, 27.8716, 0.83 ) }
    dend_26 { pt3dadd( -38.3107, 39.0077, 28.9097, 0.28 ) }
    dend_26 { pt3dadd( -38.168, 40.7789, 29.7412, 0.83 ) }
    dend_26 { pt3dadd( -39.0995, 50.7198, 35.7985, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 17/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -33.2953, 12.2445, 16.6072, 0.55 ) }
    dend_25 { pt3dadd( -34.9354, 12.0069, 16.7113, 0.55 ) }
    dend_25 { pt3dadd( -38.8615, 11.4381, 16.9605, 0.55 ) }
    dend_25 { pt3dadd( -47.1118, 10.6088, 17.5124, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -36.4253, -14.9876, -2.53136, 0.83 ) }
    dend_23 { pt3dadd( -38.4039, -15.0624, -2.11403, 0.83 ) }
    dend_23 { pt3dadd( -39.8093, -14.9411, -1.83126, 0.83 ) }
    dend_23 { pt3dadd( -41.1559, -14.7893, -1.55738, 0.55 ) }
    dend_23 { pt3dadd( -42.3632, -14.6472, -1.31249, 0.55 ) }
    dend_23 { pt3dadd( -43.8925, -14.4344, -0.962835, 0.55 ) }
    dend_23 { pt3dadd( -45.3032, -14.2232, -0.625915, 0.83 ) }
    dend_23 { pt3dadd( -47.3526, -13.8959, -0.143784, 0.83 ) }
    dend_23 { pt3dadd( -48.3191, -13.7216, 0.0464379, 0.55 ) }
    dend_23 { pt3dadd( -48.9268, -13.6036, 0.136735, 0.83 ) }
    dend_23 { pt3dadd( -50.9835, -13.2063, 0.39514, 0.28 ) }
    dend_23 { pt3dadd( -51.7684, -13.1013, 0.403937, 0.83 ) }
    dend_23 { pt3dadd( -52.401, -13.0606, 0.355882, 0.83 ) }
    dend_23 { pt3dadd( -54.1119, -13.0406, 0.0769999, 0.28 ) }
    dend_23 { pt3dadd( -54.7239, -13.042, -0.0582111, 0.83 ) }
    dend_23 { pt3dadd( -55.4978, -13.0696, -0.255278, 0.83 ) }
    dend_23 { pt3dadd( -57.9009, -13.2899, -0.900999, 0.55 ) }
    dend_23 { pt3dadd( -59.5935, -13.5018, -1.28318, 0.28 ) }
    dend_23 { pt3dadd( -60.3484, -13.6698, -1.45603, 0.83 ) }
    dend_23 { pt3dadd( -61.5184, -14.0857, -1.6874, 0.28 ) }
    dend_23 { pt3dadd( -62.3937, -14.5651, -1.8494, 0.55 ) }
    dend_23 { pt3dadd( -63.1308, -15.1467, -1.95892, 0.28 ) }
    dend_23 { pt3dadd( -63.5279, -15.5569, -1.99451, 0.55 ) }
    dend_23 { pt3dadd( -65.2261, -17.6908, -2.21345, 0.28 ) }
    dend_23 { pt3dadd( -65.9692, -18.7378, -2.29876, 0.28 ) }
    dend_23 { pt3dadd( -66.8912, -20.1841, -2.3598, 0.83 ) }
    dend_23 { pt3dadd( -67.5131, -21.2181, -2.37821, 0.28 ) }
    dend_23 { pt3dadd( -67.7472, -21.6079, -2.37449, 0.83 ) }
    dend_23 { pt3dadd( -68.2207, -22.3641, -2.29812, 0.28 ) }
    dend_23 { pt3dadd( -68.6051, -22.9511, -2.16076, 0.55 ) }
    dend_23 { pt3dadd( -69.1034, -23.6811, -1.98665, 0.28 ) }
    dend_23 { pt3dadd( -69.5306, -24.2442, -1.83793, 0.83 ) }
    dend_23 { pt3dadd( -70.3034, -25.1143, -1.5766, 0.28 ) }
    dend_23 { pt3dadd( -70.7743, -25.6432, -1.4375, 0.55 ) }
    dend_23 { pt3dadd( -71.494, -26.4352, -1.24643, 0.28 ) }
    dend_23 { pt3dadd( -71.865, -26.8344, -1.15573, 0.55 ) }
    dend_23 { pt3dadd( -72.962, -27.9751, -0.915198, 0.28 ) }
    dend_23 { pt3dadd( -74.4542, -29.4128, -0.752949, 0.55 ) }
    dend_23 { pt3dadd( -75.5827, -30.3968, -0.728275, 0.28 ) }
    dend_23 { pt3dadd( -76.0298, -30.7331, -0.749788, 0.83 ) }
    dend_23 { pt3dadd( -76.6963, -31.1425, -0.805539, 0.28 ) }
    dend_23 { pt3dadd( -77.3119, -31.4918, -0.886241, 0.83 ) }
    dend_23 { pt3dadd( -79.4529, -32.5253, -1.34904, 0.28 ) }
    dend_23 { pt3dadd( -79.8139, -32.6635, -1.45285, 0.83 ) }
    dend_23 { pt3dadd( -81.1202, -32.989, -1.81622, 0.28 ) }
    dend_23 { pt3dadd( -81.6835, -33.0955, -1.99624, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 67/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -36.4253, -14.9876, -2.53136, 0.55 ) }
    dend_22 { pt3dadd( -36.2741, -16.3767, -2.21316, 0.55 ) }
    dend_22 { pt3dadd( -36.0331, -18.7063, -1.6699, 0.55 ) }
    dend_22 { pt3dadd( -35.9582, -20.0134, -1.31725, 1.11 ) }
    dend_22 { pt3dadd( -35.928, -21.3403, -1.11337, 0.55 ) }
    dend_22 { pt3dadd( -35.9293, -22.9472, -0.951483, 0.55 ) }
    dend_22 { pt3dadd( -35.967, -24.3885, -0.856293, 0.55 ) }
    dend_22 { pt3dadd( -36.0377, -25.5742, -0.83497, 0.28 ) }
    dend_22 { pt3dadd( -36.3005, -27.5619, -0.894597, 1.11 ) }
    dend_22 { pt3dadd( -36.7906, -30.9946, -1.08748, 0.28 ) }
    dend_22 { pt3dadd( -37.0302, -32.3068, -1.16431, 0.28 ) }
    dend_22 { pt3dadd( -37.1582, -32.8949, -1.2, 0.55 ) }
    dend_22 { pt3dadd( -37.3858, -33.7388, -1.24393, 0.28 ) }
    dend_22 { pt3dadd( -37.6792, -34.8429, -1.30016, 0.28 ) }
    dend_22 { pt3dadd( -38.0032, -35.9673, -1.33072, 0.55 ) }
    dend_22 { pt3dadd( -38.5021, -37.5797, -1.23648, 0.28 ) }
    dend_22 { pt3dadd( -38.8559, -38.7203, -1.18916, 0.55 ) }
    dend_22 { pt3dadd( -39.3109, -40.2462, -1.13435, 0.28 ) }
    dend_22 { pt3dadd( -39.8694, -42.0477, -1.12596, 0.28 ) }
    dend_22 { pt3dadd( -40.2709, -43.2073, -1.13795, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.95191, -75.4969, -8.73446, 0.55 ) }
    dend_19 { pt3dadd( -5.92054, -78.8491, -7.33571, 0.55 ) }
    dend_19 { pt3dadd( -7.94732, -81.2683, -6.37102, 0.55 ) }
    dend_19 { pt3dadd( -9.04222, -82.5572, -5.84811, 0.28 ) }
    dend_19 { pt3dadd( -10.7622, -84.6072, -5.02833, 0.55 ) }
    dend_19 { pt3dadd( -11.9098, -85.9857, -4.47816, 0.28 ) }
    dend_19 { pt3dadd( -13.0485, -87.3685, -3.93234, 0.55 ) }
    dend_19 { pt3dadd( -14.277, -88.949, -3.31425, 0.55 ) }
    dend_19 { pt3dadd( -15.3011, -90.3982, -2.74685, 0.28 ) }
    dend_19 { pt3dadd( -15.6346, -90.9865, -2.54883, 0.55 ) }
    dend_19 { pt3dadd( -16.0376, -91.8481, -2.30597, 0.28 ) }
    dend_19 { pt3dadd( -16.4927, -93.0123, -2.03851, 0.55 ) }
    dend_19 { pt3dadd( -16.9811, -94.5155, -1.73017, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( -17.4876, -96.1416, -1.35595, 0.55 ) }
    dend_19 { pt3dadd( -17.7666, -97.1268, -1.12513, 0.28 ) }
    dend_19 { pt3dadd( -18.056, -98.125, -0.907951, 0.83 ) }
    dend_19 { pt3dadd( -18.6015, -100.017, -0.536117, 0.28 ) }
    dend_19 { pt3dadd( -18.7928, -100.681, -0.447728, 0.55 ) }
    dend_19 { pt3dadd( -19.3259, -102.505, -0.31392, 0.28 ) }
    dend_19 { pt3dadd( -19.4307, -102.86, -0.297083, 0.83 ) }
    dend_19 { pt3dadd( -20.052, -104.951, -0.232321, 0.28 ) }
    dend_19 { pt3dadd( -20.3597, -106.029, -0.198333, 0.83 ) }
    dend_19 { pt3dadd( -21.2209, -108.823, -0.360526, 0.28 ) }
    dend_19 { pt3dadd( -22.0745, -111.14, -0.487832, 0.28 ) }
    dend_19 { pt3dadd( -22.8105, -112.881, -0.560823, 0.55 ) }
    dend_19 { pt3dadd( -23.9393, -115.274, -0.590222, 0.55 ) }
    dend_19 { pt3dadd( -25.1345, -117.612, -0.454314, 1.11 ) }
    dend_19 { pt3dadd( -27.6692, -122.202, 0.0589079, 0.28 ) }
    dend_19 { pt3dadd( -29.6641, -125.535, 0.643529, 0.83 ) }
    dend_19 { pt3dadd( -31.1674, -127.749, 1.08094, 0.28 ) }
    dend_19 { pt3dadd( -32.0573, -128.927, 1.30415, 0.55 ) }
    dend_19 { pt3dadd( -34.1469, -131.679, 1.85813, 0.28 ) }
    dend_19 { pt3dadd( -34.5443, -132.215, 1.98456, 0.28 ) }
    dend_19 { pt3dadd( -35.3615, -133.487, 2.33612, 0.55 ) }
    dend_19 { pt3dadd( -36.7992, -136.386, 3.00809, 0.28 ) }
    dend_19 { pt3dadd( -37.7878, -138.969, 3.57553, 0.83 ) }
    dend_19 { pt3dadd( -38.9924, -143.3, 4.50781, 0.28 ) }
    dend_19 { pt3dadd( -39.2157, -144.451, 4.7399, 0.83 ) }
    dend_19 { pt3dadd( -39.5021, -147.187, 5.38627, 0.83 ) }
    dend_19 { pt3dadd( -39.6465, -150.408, 6.28653, 0.28 ) }
    dend_19 { pt3dadd( -39.6363, -152.074, 6.80557, 0.83 ) }
    dend_19 { pt3dadd( -39.6049, -154.233, 7.4951, 0.28 ) }
    dend_19 { pt3dadd( -39.6309, -155.594, 7.88656, 0.55 ) }
    dend_19 { pt3dadd( -39.7669, -158.637, 8.66017, 0.28 ) }
    dend_19 { pt3dadd( -39.8454, -159.9, 8.90172, 0.55 ) }
    dend_19 { pt3dadd( -40.061, -162.352, 9.20253, 0.83 ) }
    dend_19 { pt3dadd( -40.1215, -163.397, 9.30535, 0.83 ) }
    dend_19 { pt3dadd( -40.1957, -165.627, 9.44735, 0.28 ) }
    dend_19 { pt3dadd( -40.2165, -167.079, 9.40278, 0.55 ) }
    dend_19 { pt3dadd( -40.159, -170.991, 8.86398, 0.28 ) }
    dend_19 { pt3dadd( -40.1403, -171.335, 8.78231, 0.55 ) }
    dend_19 { pt3dadd( -39.9382, -173.973, 7.90207, 0.28 ) }
    dend_19 { pt3dadd( -39.8823, -174.618, 7.64697, 0.55 ) }
    dend_19 { pt3dadd( -39.5628, -177.828, 6.02674, 0.28 ) }
    dend_19 { pt3dadd( -39.5216, -178.238, 5.77738, 0.55 ) }
    dend_19 { pt3dadd( -39.3449, -179.677, 4.61513, 0.28 ) }
    dend_19 { pt3dadd( -39.3281, -179.949, 4.37248, 0.55 ) }
    dend_19 { pt3dadd( -40.417, -192.341, 6.72369, 0.55 ) }
    dend_19 { pt3dadd( -42.5994, -204.318, 10.1239, 0.55 ) }
    dend_19 { pt3dadd( -46.1791, -216.419, 11.0529, 0.55 ) }
    dend_19 { pt3dadd( -49.8619, -227.954, 14.6157, 0.55 ) }
    dend_19 { pt3dadd( -51.847, -240.129, 17.4161, 0.55 ) }
    dend_19 { pt3dadd( -52.3232, -252.414, 20.4077, 0.55 ) }
    dend_19 { pt3dadd( -53.685, -263.75, 25.7507, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.95191, -75.4969, -8.73446, 0.55 ) }
    dend_18 { pt3dadd( -2.84022, -77.275, -8.84994, 0.55 ) }
    dend_18 { pt3dadd( -2.75138, -78.8289, -8.95328, 0.55 ) }
    dend_18 { pt3dadd( -2.67684, -80.5864, -9.0663, 0.28 ) }
    dend_18 { pt3dadd( -2.66425, -81.2315, -9.10518, 0.55 ) }
    dend_18 { pt3dadd( -2.74861, -83.8059, -9.23213, 0.55 ) }
    dend_18 { pt3dadd( -2.86277, -85.6324, -9.3119, 0.28 ) }
    dend_18 { pt3dadd( -3.01306, -87.6331, -9.36715, 0.28 ) }
    dend_18 { pt3dadd( -3.06651, -88.272, -9.34459, 0.55 ) }
    dend_18 { pt3dadd( -3.21946, -90.0246, -9.20216, 0.55 ) }
    dend_18 { pt3dadd( -3.50664, -93.0716, -8.83068, 0.55 ) }
    dend_18 { pt3dadd( -3.71123, -95.3419, -8.47999, 0.55 ) }
    dend_18 { pt3dadd( -3.76378, -96.4599, -8.30529, 0.55 ) }
    dend_18 { pt3dadd( -3.83016, -99.8869, -7.83608, 0.28 ) }
    dend_18 { pt3dadd( -3.83172, -100.793, -7.72146, 0.83 ) }
    dend_18 { pt3dadd( -3.79579, -102.793, -7.48679, 0.55 ) }
    dend_18 { pt3dadd( -3.70765, -104.538, -7.33482, 0.55 ) }
    dend_18 { pt3dadd( -3.56999, -107.404, -7.18512, 0.55 ) }
    dend_18 { pt3dadd( -3.49588, -109.424, -7.15151, 0.83 ) }
    dend_18 { pt3dadd( -3.43264, -110.871, -7.19225, 0.28 ) }
    dend_18 { pt3dadd( -3.40415, -111.449, -7.19994, 0.55 ) }
    dend_18 { pt3dadd( -3.26427, -113.378, -7.115, 0.28 ) }
    dend_18 { pt3dadd( -3.25957, -113.45, -7.10752, 0.55 ) }
    dend_18 { pt3dadd( -3.05314, -115.514, -6.48626, 0.28 ) }
    dend_18 { pt3dadd( -2.91641, -116.607, -6.0431, 0.83 ) }
    dend_18 { pt3dadd( -2.8248, -117.431, -5.67181, 0.83 ) }
    dend_18 { pt3dadd( -2.63284, -120.285, -4.40358, 0.28 ) }
    dend_18 { pt3dadd( -2.60294, -121.039, -4.08341, 0.55 ) }
    dend_18 { pt3dadd( -2.4463, -125.777, -2.25954, 0.28 ) }
    dend_18 { pt3dadd( -2.37496, -127.592, -1.6277, 0.28 ) }
    dend_18 { pt3dadd( -2.3395, -128.447, -1.36499, 0.83 ) }
    dend_18 { pt3dadd( -2.28085, -131.059, -0.716072, 0.28 ) }
    dend_18 { pt3dadd( -2.24578, -132.845, -0.427754, 0.28 ) }
    dend_18 { pt3dadd( -2.19101, -133.764, -0.355519, 0.55 ) }
    dend_18 { pt3dadd( -1.99096, -136.0, -0.498983, 0.55 ) }
    dend_18 { pt3dadd( -1.81966, -137.137, -0.583913, 0.55 ) }
    dend_18 { pt3dadd( -1.60625, -138.598, -0.685501, 0.28 ) }
    dend_18 { pt3dadd( -1.4644, -139.504, -0.686755, 0.28 ) }
    dend_18 { pt3dadd( -1.32937, -140.403, -0.648046, 0.55 ) }
    dend_18 { pt3dadd( -0.925845, -143.275, -0.453869, 0.28 ) }
    dend_18 { pt3dadd( -0.731456, -144.992, -0.307257, 0.83 ) }
    dend_18 { pt3dadd( -0.583702, -146.914, -0.229497, 0.83 ) }
    dend_18 { pt3dadd( -0.501981, -149.093, -0.221878, 0.55 ) }
    dend_18 { pt3dadd( -0.505231, -151.302, -0.223136, 0.28 ) }
    dend_18 { pt3dadd( -0.526521, -152.466, -0.237821, 0.28 ) }
    dend_18 { pt3dadd( -0.537379, -153.275, -0.232778, 0.55 ) }
    dend_18 { pt3dadd( -0.555992, -156.29, -0.228782, 0.28 ) }
    dend_18 { pt3dadd( -0.561841, -157.165, -0.245963, 0.55 ) }
    dend_18 { pt3dadd( -0.632018, -159.303, -0.331545, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( -0.703392, -160.78, -0.344408, 0.83 ) }
    dend_18 { pt3dadd( -0.787753, -163.414, -0.297953, 0.28 ) }
    dend_18 { pt3dadd( -0.79608, -163.985, -0.271878, 0.55 ) }
    dend_18 { pt3dadd( -0.804306, -166.85, 0.0399359, 0.28 ) }
    dend_18 { pt3dadd( -0.814976, -167.719, 0.125299, 0.55 ) }
    dend_18 { pt3dadd( -0.804161, -169.169, 0.289235, 0.55 ) }
    dend_18 { pt3dadd( -0.772051, -170.345, 0.491229, 0.28 ) }
    dend_18 { pt3dadd( -0.732902, -170.906, 0.591824, 0.55 ) }
    dend_18 { pt3dadd( -0.497037, -172.91, 1.00834, 0.28 ) }
    dend_18 { pt3dadd( -0.411669, -173.456, 1.15115, 0.55 ) }
    dend_18 { pt3dadd( 0.160814, -176.585, 2.05781, 0.28 ) }
    dend_18 { pt3dadd( 0.378534, -177.583, 2.3795, 0.55 ) }
    dend_18 { pt3dadd( 0.820665, -179.483, 3.03861, 0.28 ) }
    dend_18 { pt3dadd( 1.01771, -180.253, 3.30243, 0.55 ) }
    dend_18 { pt3dadd( -0.531366, -190.527, 3.0254, 0.55 ) }
    dend_18 { pt3dadd( -0.986067, -200.868, 2.04795, 0.55 ) }
    dend_18 { pt3dadd( -3.59465, -210.78, 0.392979, 0.55 ) }
    dend_18 { pt3dadd( -5.11086, -220.649, -2.45193, 0.55 ) }
    dend_18 { pt3dadd( -6.08958, -230.947, -3.49043, 0.55 ) }
    dend_18 { pt3dadd( -5.72919, -241.334, -3.74637, 0.55 ) }
    dend_18 { pt3dadd( -4.1882, -251.535, -4.95981, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 81.5918, 65.3053, 71.241, 0.55 ) }
    dend_12 { pt3dadd( 87.0351, 72.5075, 76.5341, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 81.5918, 65.3053, 71.241, 0.55 ) }
    dend_11 { pt3dadd( 85.825, 69.8439, 76.5431, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 42.9372, -74.0925, 6.67607, 0.55 ) }
    dend_8 { pt3dadd( 43.833, -74.7196, 8.187, 0.55 ) }
    dend_8 { pt3dadd( 45.3023, -75.8468, 10.3955, 0.55 ) }
    dend_8 { pt3dadd( 45.8878, -76.3108, 11.118, 0.55 ) }
    dend_8 { pt3dadd( 53.1732, -82.4376, 19.0185, 0.28 ) }
    dend_8 { pt3dadd( 53.9539, -83.1715, 19.7345, 0.83 ) }
    dend_8 { pt3dadd( 56.1521, -85.464, 21.5037, 0.28 ) }
    dend_8 { pt3dadd( 57.2655, -86.861, 22.2753, 0.28 ) }
    dend_8 { pt3dadd( 58.9868, -89.5689, 22.8558, 0.28 ) }
    dend_8 { pt3dadd( 59.5122, -90.4718, 22.7592, 0.55 ) }
    dend_8 { pt3dadd( 60.6823, -92.8568, 21.7257, 0.28 ) }
    dend_8 { pt3dadd( 61.0554, -93.6646, 21.4457, 0.28 ) }
    dend_8 { pt3dadd( 61.6721, -95.0026, 21.2135, 0.55 ) }
    dend_8 { pt3dadd( 62.4386, -96.7026, 21.0273, 0.55 ) }
    dend_8 { pt3dadd( 63.7591, -99.7917, 21.1482, 0.55 ) }
    dend_8 { pt3dadd( 70.2551, -107.558, 23.8889, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 42.9372, -74.0925, 6.67607, 0.55 ) }
    dend_7 { pt3dadd( 44.0395, -76.3101, 6.89175, 0.55 ) }
    dend_7 { pt3dadd( 45.0305, -78.3505, 7.08393, 0.55 ) }
    dend_7 { pt3dadd( 45.7874, -79.9407, 7.21668, 0.55 ) }
    dend_7 { pt3dadd( 46.7527, -81.9511, 7.36704, 0.28 ) }
    dend_7 { pt3dadd( 47.5466, -83.5507, 7.45586, 0.55 ) }
    dend_7 { pt3dadd( 48.7262, -85.8026, 7.53876, 0.55 ) }
    dend_7 { pt3dadd( 49.4018, -86.9559, 7.5734, 0.28 ) }
    dend_7 { pt3dadd( 49.969, -87.899, 7.59829, 0.28 ) }
    dend_7 { pt3dadd( 50.2821, -88.3577, 7.61112, 0.28 ) }
    dend_7 { pt3dadd( 51.2235, -89.6499, 7.62489, 0.55 ) }
    dend_7 { pt3dadd( 52.129, -90.758, 7.57104, 0.55 ) }
    dend_7 { pt3dadd( 53.3964, -92.1976, 7.41796, 0.28 ) }
    dend_7 { pt3dadd( 53.7737, -92.6047, 7.37001, 0.55 ) }
    dend_7 { pt3dadd( 55.3515, -94.2695, 7.17993, 0.28 ) }
    dend_7 { pt3dadd( 55.9878, -94.9581, 7.10168, 0.55 ) }
    dend_7 { pt3dadd( 57.5936, -96.7398, 6.8819, 0.28 ) }
    dend_7 { pt3dadd( 57.9385, -97.145, 6.78048, 0.55 ) }
    dend_7 { pt3dadd( 63.4401, -104.045, 7.55278, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 32.6098, -92.7204, 26.5243, 0.55 ) }
    dend_5 { pt3dadd( 34.3545, -99.8394, 29.5909, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 32.6098, -92.7204, 26.5243, 0.55 ) }
    dend_4 { pt3dadd( 33.8513, -100.281, 28.7529, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_71, dend_68, dend_57, dend_56, dend_43, dend_30, dend_27, dend_0, dend_70, dend_69, dend_67, dend_58, dend_51, dend_44, dend_32, dend_31, dend_29, dend_28, dend_14, dend_1, dend_66, dend_59, dend_53, dend_52, dend_50, dend_45, dend_40, dend_33, dend_20, dend_15, dend_9, dend_2, dend_63, dend_60, dend_55, dend_54, dend_47, dend_46, dend_42, dend_41, dend_37, dend_34, dend_24, dend_21, dend_17, dend_16, dend_13, dend_10, dend_6, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_48, dend_39, dend_38, dend_36, dend_35, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_50 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_71 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_56 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_55 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_46 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_3 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_19 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_18 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_8 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_57 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_68 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_43 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_58 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_59 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_34 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_25 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_60 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_61 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_62 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_63 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_65 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_5 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_4 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_7 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_38 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_11 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_44, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_65, dend_64, dend_62, dend_61, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_66 all.append()
    dend_66 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_71 nseg = 9
    dend_56 nseg = 11
    dend_70 nseg = 9
    dend_69 nseg = 5
    dend_67 nseg = 5
    dend_31 nseg = 5
    dend_29 nseg = 13
    dend_28 nseg = 5
    dend_53 nseg = 5
    dend_52 nseg = 11
    dend_50 nseg = 11
    dend_33 nseg = 3
    dend_9 nseg = 5
    dend_2 nseg = 3
    dend_55 nseg = 3
    dend_46 nseg = 5
    dend_42 nseg = 5
    dend_41 nseg = 11
    dend_37 nseg = 3
    dend_16 nseg = 7
    dend_13 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_49 nseg = 9
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_19 nseg = 11
    dend_18 nseg = 9
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_LBC_1b6313448d_0_0


