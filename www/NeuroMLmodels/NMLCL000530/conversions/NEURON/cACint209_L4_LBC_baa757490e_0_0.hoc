// Cell: cACint209_L4_LBC_baa757490e_0_0
/*
{
  "id" : "cACint209_L4_LBC_baa757490e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.6654, -4.48604, -4.733, 4.38304", "-9.59028, -4.04928, -4.25917, 7.64773", "-8.5152, -3.61252, -3.78533, 9.76453", "-7.44013, -3.17575, -3.3115, 11.7144", "-6.36506, -2.73899, -2.83766, 13.2271", "-5.28998, -2.30223, -2.36383, 14.8155", "-4.21491, -1.86547, -1.88999, 15.9799", "-3.13983, -1.42871, -1.41616, 16.1382", "-2.06476, -0.991945, -0.942321, 16.2697", "-0.989682, -0.555184, -0.468486, 15.7798", "0.0853925, -0.118422, 0.00534972, 14.9742", "1.16047, 0.31834, 0.479185, 14.0592", "2.23554, 0.755102, 0.95302, 13.134", "3.31062, 1.19186, 1.42686, 12.2089", "4.38569, 1.62863, 1.90069, 11.2617", "5.46077, 2.06539, 2.37453, 10.0555", "6.53584, 2.50215, 2.84836, 8.84921", "7.61092, 2.93891, 3.3222, 7.64296", "8.68599, 3.37567, 3.79603, 6.28058", "9.76106, 3.81243, 4.26987, 3.94487", "10.8361, 4.2492, 4.7437, 2.44935" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.97753, 7.76798, -14.3987, 2.67", "-0.41703, 12.0195, -19.2439, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.72247, 6.75323, 11.1013, 1.33", "1.00175, 8.06823, 8.04268, 1.33", "-1.54201, 10.3514, 3.61006, 1.33", "-4.74747, 13.4337, -1.30226, 1.33", "-6.93873, 15.6044, -4.17678, 0.67", "-8.24597, 16.8495, -5.59011, 0.67", "-9.60433, 18.0725, -6.89528, 1.33", "-11.4517, 19.8343, -8.46275, 1.33", "-13.8471, 22.2773, -9.94734, 0.67", "-15.7824, 24.2875, -10.5683, 0.67", "-17.8911, 26.3689, -10.9462, 0.67", "-21.6775, 30.0118, -11.4102, 0.67", "-24.7781, 32.9147, -11.7215, 0.67", "-27.8953, 35.82, -11.9813, 0.67", "-31.1196, 38.7423, -12.2869, 0.67", "-32.8824, 40.2277, -12.4507, 0.67", "-35.6544, 42.1305, -12.7788, 0.67", "-37.6146, 43.1245, -13.0655, 0.67", "-39.3428, 43.609, -13.4877, 0.67", "-42.7976, 44.2365, -14.6329, 0.67", "-44.3005, 44.421, -15.1413, 1.33", "-49.3435, 45.0713, -16.7137, 0.67", "-52.1513, 45.5552, -17.541, 0.67", "-57.3623, 46.8038, -19.1869, 0.67", "-59.458, 47.4875, -19.8626, 0.67", "-61.9317, 48.4423, -20.6191, 0.67", "-64.5338, 49.5929, -21.5651, 1.33", "-67.6658, 51.2009, -22.8643, 0.67", "-71.1887, 53.051, -24.728, 0.67", "-72.3775, 53.7127, -25.5295, 0.67", "-73.8722, 54.533, -26.6218, 0.67", "-77.0469, 56.2104, -29.0322, 0.67", "-78.7191, 57.0424, -30.3417, 1.33", "-81.9604, 58.7288, -32.8772, 0.33", "-82.6777, 59.178, -33.4091, 0.67", "-85.0419, 60.8204, -35.1693, 0.33", "-85.8729, 61.5512, -35.7912, 1.33", "-88.7573, 64.6393, -38.1324, 0.33", "-89.2512, 65.257, -38.5629, 0.67", "-90.911, 67.8711, -39.9528, 0.33", "-91.0558, 68.1371, -40.0762, 0.67", "-92.1984, 70.4639, -41.016, 0.33", "-93.4231, 73.3713, -41.9781, 0.67", "-94.6167, 76.2299, -42.6982, 0.33", "-95.8379, 78.9058, -43.3873, 1.33", "-96.7513, 80.6295, -44.015, 0.33", "-97.2987, 81.4484, -45.0481, 0.67", "-97.9863, 82.1914, -46.8733, 0.33", "-98.6195, 82.7097, -48.7302, 0.33", "-99.0825, 82.9996, -50.223, 0.67", "-100.398, 83.639, -54.2568, 1.33", "-104.706, 85.4936, -66.3883, 0.33", "-105.184, 85.6877, -67.6444, 0.67", "-106.664, 86.2753, -71.2557, 0.33", "-107.793, 86.7943, -73.9238, 1.33", "-110.26, 87.9875, -79.2242, 0.33", "-111.548, 88.6323, -81.4013, 2.0", "-115.251, 90.4986, -86.0268, 0.33", "-115.865, 90.8615, -86.7293, 0.67", "-116.515, 91.2733, -87.367, 0.33", "-117.183, 91.7575, -87.9566, 0.67", "-120.023, 94.0851, -90.249, 0.33", "-120.615, 94.6116, -90.6983, 0.67", "-123.657, 97.454, -92.6141, 0.33", "-124.285, 98.0435, -93.0275, 0.67", "-126.86, 100.456, -94.728, 0.33", "-127.064, 100.654, -94.8654, 0.67", "-128.518, 102.152, -95.8279, 0.33", "-128.716, 102.353, -95.9685, 0.67", "-130.458, 104.035, -97.5519, 0.33", "-130.813, 104.394, -97.8495, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-8.03753, -3.70177, -13.1987, 1.33", "-11.9042, -5.81503, -17.0245, 1.33", "-14.574, -7.27415, -19.6661, 1.33", "-15.6196, -7.8456, -20.7006, 0.67", "-16.7506, -8.46376, -21.8197, 1.33", "-21.6071, -11.1179, -26.6249, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-7.62753, -6.47952, -7.99871, 1.33", "-9.42093, -10.5496, -9.20811, 1.33", "-10.3715, -13.0495, -9.49494, 1.33", "-11.3212, -16.0019, -9.53434, 1.33", "-13.2393, -23.4305, -9.27794, 1.33", "-14.3762, -27.4241, -9.06201, 0.67", "-16.1152, -33.0687, -8.87595, 0.67", "-17.5197, -37.9284, -8.7246, 0.67", "-19.0521, -42.8775, -8.89611, 0.67", "-21.3514, -50.0751, -9.47064, 0.67", "-22.972, -55.3607, -10.0536, 0.67", "-24.2733, -59.6656, -10.91, 0.67", "-25.1627, -62.2643, -11.6539, 0.67", "-28.4751, -70.6852, -14.3848, 0.67", "-29.5226, -72.9984, -15.0246, 0.67", "-30.6907, -75.5264, -15.5041, 1.33", "-32.1473, -79.0403, -15.6455, 0.67", "-33.7896, -82.6501, -15.2861, 0.67", "-35.7978, -87.1443, -14.2625, 0.67", "-37.6393, -91.4307, -12.8301, 0.67", "-39.1709, -94.7635, -11.7157, 0.67", "-42.1959, -100.769, -9.67144, 0.67", "-44.6094, -105.547, -8.09645, 0.67", "-46.8804, -110.378, -6.96505, 0.67", "-47.9083, -112.842, -6.65193, 1.33", "-49.645, -116.891, -6.6718, 0.67", "-51.6272, -120.785, -7.16189, 0.67", "-52.4396, -122.263, -7.62523, 0.67", "-55.4376, -127.526, -10.2199, 1.33", "-56.9758, -130.232, -11.8569, 0.67", "-58.3924, -133.068, -13.5969, 0.67", "-59.8587, -136.623, -15.9398, 0.67", "-60.4044, -138.105, -16.8719, 0.67", "-61.2751, -140.169, -17.9934, 0.67", "-62.7421, -143.201, -19.1912, 0.67", "-63.8709, -145.263, -19.9396, 0.67", "-65.8435, -148.857, -21.0199, 0.33", "-67.1756, -151.192, -21.6697, 0.33", "-68.3059, -152.592, -22.1039, 1.33", "-70.6614, -154.146, -22.6417, 0.33", "-71.9617, -154.628, -22.8114, 0.33", "-73.5832, -155.061, -22.8609, 0.33", "-75.3638, -155.417, -22.7867, 0.33", "-78.0208, -155.823, -22.6503, 1.33", "-82.9742, -156.595, -21.9784, 0.33", "-84.4383, -156.807, -21.6918, 1.33", "-88.3276, -157.358, -20.7619, 0.33", "-90.5797, -157.681, -20.1451, 0.33", "-93.0888, -158.062, -19.2511, 1.33", "-97.8545, -158.891, -17.0138, 0.33", "-99.1455, -159.152, -16.2725, 0.67", "-100.518, -159.537, -15.3884, 0.33", "-101.85, -159.997, -14.4524, 0.67", "-104.492, -160.964, -12.1555, 0.67", "-108.373, -162.524, -8.66696, 0.67", "-110.567, -163.47, -6.72062, 1.33", "-114.107, -165.155, -3.40261, 0.67", "-117.223, -166.753, -0.326955, 0.67", "-122.19, -169.315, 4.82051, 0.67", "-126.615, -178.583, 5.69997, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "1.55247, -7.28927, -11.9987, 3.33", "2.67349, -9.19573, -12.7373, 3.33", "4.55305, -12.3922, -13.9757, 2.67", "6.49684, -15.6978, -15.2565, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "12.3925, 3.90373, -6.39872, 2.67", "15.4754, 3.70924, -6.04346, 2.0", "22.3231, 3.27722, -5.25433, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "10.9125, 5.23623, -3.89871, 2.0", "9.03008, 8.77304, -7.06256, 2.0", "7.46086, 11.7215, -9.70004, 1.33", "6.15411, 14.1767, -11.8963, 1.33", "4.04649, 18.1367, -15.4387, 1.33", "1.90323, 22.1637, -19.041, 1.33", "-1.0028, 27.6238, -23.9254, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "7.89247, 7.75773, 7.40129, 2.0", "7.45832, 11.9807, 11.7167, 2.0", "6.69546, 19.401, 19.2994, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500014283609545
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.8361, 4.2492, 4.7437, 0.67", "24.733, 9.895, 4.7437, 0.67", "38.63, 15.5408, 4.7437, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-0.41703, 12.0195, -19.2439, 2.0", "1.19834, 18.334, -35.4031, 2.0", "1.58951, 19.8631, -39.3162, 2.0", "2.33618, 22.7819, -46.7855, 2.0" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-0.41703, 12.0195, -19.2439, 1.33", "-2.01207, 13.7561, -19.6047, 1.33", "-4.25499, 16.5527, -19.7153, 1.33", "-7.25801, 20.3945, -19.6261, 1.33", "-10.0072, 24.3199, -19.4273, 1.33", "-12.806, 28.673, -19.1688, 1.33", "-14.8987, 32.1547, -18.9453, 0.67", "-17.1983, 36.1051, -18.6047, 0.67", "-19.1526, 39.6416, -18.1674, 0.67", "-21.8908, 45.399, -17.1953, 1.33", "-22.5809, 47.1829, -16.928, 0.67", "-22.9818, 48.3754, -16.8007, 0.67", "-23.4166, 49.7267, -16.7447, 0.67", "-23.9786, 51.4172, -16.781, 1.33", "-24.6816, 53.5571, -16.7974, 0.33", "-25.0872, 54.4154, -16.8078, 0.33", "-26.0593, 56.0705, -16.8325, 1.33", "-27.1738, 58.0038, -16.8604, 0.67", "-28.1294, 59.8931, -16.8819, 1.33", "-29.0905, 61.964, -16.9016, 0.67", "-29.8808, 63.7187, -16.9172, 0.67", "-30.6787, 65.8437, -16.7321, 0.67", "-31.5008, 68.3755, -16.3535, 0.67", "-31.9508, 70.0088, -16.0885, 0.67", "-32.3786, 71.9734, -15.7631, 0.67", "-32.6565, 73.7777, -15.4783, 0.67", "-33.3413, 78.9744, -14.7295, 0.67", "-33.6871, 81.4984, -14.3956, 1.33", "-34.1749, 84.1979, -14.0975, 0.33", "-34.421, 85.4801, -14.0478, 0.67", "-34.7711, 88.0727, -14.1199, 0.67", "-35.0168, 90.3523, -14.36, 0.33", "-35.1576, 91.9035, -14.6737, 1.33", "-35.1569, 94.905, -15.538, 0.33", "-34.9304, 97.9607, -16.5702, 0.67", "-34.724, 100.868, -17.6457, 0.33", "-34.6414, 102.089, -18.13, 0.33", "-34.5024, 103.893, -18.7619, 2.0", "-34.0477, 109.518, -19.947, 0.67", "-33.7765, 112.208, -20.0904, 0.67", "-33.5083, 115.073, -19.594, 0.33", "-33.4811, 115.68, -19.4026, 0.33", "-33.3029, 118.745, -18.124, 0.67", "-33.1808, 122.967, -15.8124, 0.33", "-33.1216, 125.172, -14.561, 1.33", "-33.0958, 129.012, -12.6601, 0.33", "-33.0906, 130.645, -11.9419, 0.33", "-33.292, 134.973, -10.397, 0.67", "-33.7527, 139.837, -9.12041, 0.67", "-34.5306, 144.82, -8.22895, 0.67", "-35.1218, 147.916, -7.7897, 0.33", "-35.7194, 150.875, -7.38836, 1.33", "-36.3395, 154.079, -6.75689, 0.33", "-36.3395, 154.079, -6.75689, 0.67", "-36.583, 155.571, -6.28686, 0.33", "-36.7732, 156.792, -5.78234, 0.33", "-37.1254, 160.768, -4.36198, 0.33", "-37.3823, 162.895, -3.79525, 0.33", "-37.4913, 163.761, -3.59823, 1.33", "-37.7647, 165.936, -3.15314, 0.33", "-37.8502, 167.112, -2.86173, 0.67", "-38.096, 169.63, -2.32655, 0.33", "-38.353, 172.145, -1.98611, 0.33", "-38.4706, 173.262, -1.79096, 1.33", "-38.7911, 176.417, -1.09497, 0.33", "-38.8941, 180.121, 0.118086, 0.33" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-21.6071, -11.1179, -26.6249, 0.67", "-24.8193, -13.3822, -26.5328, 0.67", "-25.6751, -13.8425, -26.643, 0.67", "-26.9182, -14.252, -27.1038, 0.67", "-29.701, -14.9041, -28.2957, 0.67", "-30.9212, -15.1902, -28.8165, 1.33", "-34.2906, -15.7905, -30.3206, 0.33", "-36.3361, -16.0157, -31.2948, 0.33", "-39.5287, -16.0192, -32.7388, 1.33", "-41.2606, -15.8111, -33.4304, 0.33", "-42.7617, -15.542, -34.0292, 0.33", "-44.7024, -15.1624, -34.7202, 1.33", "-46.7933, -14.785, -35.3616, 0.67", "-48.4962, -14.5583, -36.017, 0.67", "-51.2436, -14.129, -37.2234, 0.67", "-53.2158, -13.7511, -38.3401, 0.67", "-55.3429, -13.3701, -39.8199, 0.33", "-56.5799, -13.1748, -40.7887, 2.0", "-59.1585, -12.7115, -43.0557, 0.67", "-59.9484, -12.4993, -43.8376, 1.33", "-61.942, -11.8865, -45.9066, 0.67", "-64.1765, -11.061, -48.1638, 0.67", "-65.0455, -10.7232, -49.0604, 0.33", "-65.7206, -10.4671, -49.7145, 1.33", "-67.6243, -9.76984, -51.4148, 0.33", "-69.0, -9.30621, -52.5465, 0.33", "-69.9494, -8.94317, -53.2657, 1.33", "-72.5325, -7.7764, -55.134, 0.33", "-74.2795, -6.977, -56.4943, 0.33", "-75.2987, -6.48371, -57.3004, 0.67", "-76.2215, -5.93284, -58.1127, 1.33", "-77.4642, -4.92242, -59.4142, 0.33", "-77.8283, -4.52722, -59.9029, 0.67", "-78.9786, -2.90507, -61.8241, 0.33", "-79.3391, -2.28702, -62.573, 1.33", "-80.6491, 0.148794, -65.5985, 0.33", "-80.9351, 0.689142, -66.2813, 0.67", "-81.8966, 2.34612, -68.4485, 0.33", "-82.2053, 2.91276, -69.1433, 0.33", "-82.4042, 3.222, -69.4947, 0.67", "-82.7868, 3.69459, -70.0572, 0.33", "-83.082, 3.96673, -70.3824, 0.67", "-84.9762, 5.43334, -72.1857, 0.33", "-85.4234, 5.72954, -72.5434, 0.67", "-88.177, 7.40985, -74.6278, 0.33", "-89.3447, 8.05671, -75.4282, 1.33", "-90.4368, 8.61747, -76.0989, 0.33", "-90.8605, 8.81328, -76.3069, 0.67", "-91.8445, 9.23945, -76.7021, 0.33", "-92.3416, 9.43889, -76.8857, 0.67", "-93.4313, 9.84188, -77.2796, 0.33", "-93.9961, 10.0617, -77.4943, 0.67", "-95.7799, 10.7717, -78.2191, 0.33", "-97.5415, 11.4536, -78.9286, 0.67", "-98.9525, 11.9991, -79.4951, 0.33", "-100.81, 12.7313, -80.3021, 1.33", "-103.421, 13.8215, -81.4646, 0.33", "-103.994, 14.0664, -81.7471, 0.67", "-105.484, 14.7396, -82.564, 0.33", "-106.067, 15.0017, -82.892, 0.67", "-108.685, 16.2351, -84.5779, 0.33", "-109.675, 16.7191, -85.2721, 0.67", "-111.945, 17.8555, -87.0635, 0.33", "-112.984, 18.4179, -87.9035, 1.33", "-114.007, 19.007, -88.7476, 0.33", "-114.716, 19.381, -89.3249, 0.67", "-115.446, 19.7204, -89.8711, 0.33", "-116.079, 19.9593, -90.3288, 0.67", "-117.311, 20.3778, -91.1371, 0.33", "-117.687, 20.4781, -91.3655, 0.67", "-120.617, 21.1297, -92.9842, 0.33", "-121.418, 21.2848, -93.383, 0.67", "-123.345, 21.6152, -94.2869, 0.33", "-124.726, 21.8519, -94.8595, 1.33", "-126.268, 22.1076, -95.4183, 0.33", "-127.454, 22.3913, -95.6907, 0.67", "-128.374, 22.6716, -95.7767, 0.33", "-128.841, 22.8881, -95.8334, 0.67", "-130.41, 23.819, -95.9922, 0.33", "-130.832, 24.0853, -96.0409, 0.67", "-134.343, 26.4697, -96.5823, 0.33", "-134.717, 26.7273, -96.6563, 0.67", "-138.275, 29.2323, -97.3873, 0.33", "-139.092, 29.8523, -97.5661, 1.33" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-21.6071, -11.1179, -26.6249, 0.67", "-20.1525, -11.4363, -32.0366, 0.67", "-19.8353, -11.5196, -33.3263, 0.33", "-19.293, -11.6453, -35.5431, 1.33", "-18.3119, -11.8688, -40.8532, 0.67", "-17.2333, -12.1779, -47.9578, 0.33", "-17.0082, -12.2507, -49.6076, 1.33", "-16.5514, -12.4489, -53.8951, 0.33", "-16.3304, -12.5639, -56.4252, 1.33", "-15.5071, -12.9523, -66.6131, 0.33", "-15.4284, -12.9912, -67.7124, 0.67", "-15.1148, -13.2129, -72.751, 0.33", "-15.0057, -13.2824, -74.6656, 1.33", "-14.4464, -13.6012, -84.6853, 0.67", "-14.248, -13.7201, -87.7672, 1.33" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "6.49684, -15.6978, -15.2565, 2.0", "11.9125, -19.283, -19.5776, 2.0", "14.2724, -20.8453, -21.4605, 2.0", "17.9909, -23.3069, -24.4274, 2.0", "21.743, -25.7908, -27.4212, 2.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.49684, -15.6978, -15.2565, 1.33", "6.00072, -21.721, -14.0632, 1.33", "5.63388, -26.1745, -13.1809, 2.0" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "22.3231, 3.27722, -5.25433, 2.0", "27.4588, 4.59474, -6.83006, 2.0" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "22.3231, 3.27722, -5.25433, 0.67", "28.7183, -0.872056, -3.29241, 0.67", "30.5407, -1.70659, -2.96887, 0.67", "32.3326, -2.33697, -2.66844, 0.67", "33.3984, -2.7158, -2.48185, 0.67", "39.3652, -4.85433, -1.4514, 0.67", "43.1142, -6.21455, -0.823385, 0.67", "46.2287, -7.10938, -0.666685, 0.67", "49.7221, -7.9875, -0.472225, 0.67", "51.7372, -8.43135, -0.345795, 0.67", "54.9966, -9.17454, -0.0802627, 0.67", "57.1079, -9.65944, 0.150442, 0.67", "61.0404, -10.7628, 0.550442, 0.67", "63.699, -11.6883, 0.807012, 0.67", "65.15, -12.1892, 0.914755, 0.67", "68.0491, -13.1348, 1.13081, 0.67", "71.0545, -14.2359, 1.25296, 0.67", "74.4189, -15.6018, 1.29421, 0.67", "76.9098, -16.6907, 1.26071, 0.67", "79.0355, -17.5435, 1.16265, 0.67", "81.7707, -18.5487, 0.866329, 0.67", "84.9082, -19.6766, 0.336051, 0.67", "86.8288, -20.387, -0.0804716, 0.67", "88.6609, -21.0519, -0.653835, 0.33", "89.4722, -21.3229, -0.959005, 0.67", "92.2208, -22.2119, -2.12562, 0.33", "92.9485, -22.4104, -2.4325, 0.33", "95.3461, -22.8204, -3.31094, 1.33", "98.3866, -22.9982, -4.24648, 0.33", "99.2674, -22.9643, -4.43746, 0.67", "100.529, -22.7554, -4.40069, 0.67", "102.283, -22.3333, -3.99158, 0.67", "103.784, -21.9318, -3.52517, 0.67", "106.886, -21.0755, -2.04805, 0.67", "108.826, -20.5662, -0.944955, 0.67", "112.924, -19.6798, 1.50641, 0.33", "114.554, -19.4264, 2.52638, 0.67", "116.521, -19.2344, 3.8023, 0.67", "119.87, -19.2816, 6.20157, 0.67", "120.996, -19.4443, 7.06473, 0.33", "121.817, -19.6169, 7.85637, 0.67", "122.394, -19.8145, 8.46498, 0.33", "122.787, -19.9888, 8.94511, 0.67", "124.508, -21.1123, 11.4769, 0.33", "124.834, -21.3879, 11.9625, 0.67", "126.434, -22.9788, 15.0071, 0.67", "134.193, -25.3439, 17.8958, 0.67", "142.423, -25.8274, 20.2951, 0.67", "150.312, -27.0259, 23.4886, 0.67", "157.725, -29.3365, 27.213, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.0028, 27.6238, -23.9254, 0.67", "-0.0917901, 30.0674, -26.3316, 0.67", "1.08309, 33.195, -30.2468, 0.67", "2.50394, 37.116, -35.3443, 0.67", "2.86017, 38.1607, -36.6772, 0.67", "3.41944, 39.9793, -38.9498, 0.67", "4.12517, 42.5916, -42.2629, 0.67", "4.95995, 45.7911, -46.7002, 0.33", "5.13838, 46.8261, -48.2991, 1.33", "5.13823, 47.6869, -49.7468, 0.33", "5.12356, 48.1445, -50.7123, 0.33", "5.09548, 49.2831, -53.5218, 0.67", "5.10692, 50.096, -55.6, 0.33", "5.3243, 51.1519, -58.6142, 1.33", "6.16606, 53.2069, -65.6973, 0.67", "6.70111, 53.9794, -68.7316, 0.67", "6.97536, 54.2613, -69.8649, 0.33", "7.18176, 54.4165, -70.4853, 1.33", "8.37952, 55.1104, -73.2894, 0.33", "8.64039, 55.2495, -73.7637, 0.67", "10.2801, 56.2092, -76.2777, 0.33", "10.8622, 56.6469, -77.2857, 1.33", "11.4676, 57.2034, -78.5305, 0.33", "12.1621, 57.9941, -80.3465, 0.67", "13.146, 59.4023, -83.4485, 0.33", "13.6023, 60.1736, -85.0599, 0.67", "13.8135, 60.5999, -85.9457, 0.33", "14.2595, 61.7254, -88.2411, 0.67", "14.8695, 63.7776, -92.1381, 0.33", "14.9278, 64.0444, -92.5912, 0.67", "15.1684, 65.3804, -94.7003, 0.33", "15.3167, 66.4266, -96.3106, 0.67", "15.3669, 66.8462, -96.9357, 0.33", "15.4643, 67.4532, -97.7086, 0.67", "15.9198, 69.6356, -100.328, 0.33", "16.1277, 70.3161, -101.197, 0.67", "16.4359, 70.9994, -102.096, 0.33", "16.5921, 71.2839, -102.51, 0.67", "17.2254, 72.3379, -104.163, 0.33", "18.0331, 73.868, -106.452, 0.67", "18.3349, 74.5775, -107.4, 0.33", "18.4949, 75.1204, -108.043, 0.67", "19.2793, 79.002, -112.162, 0.33", "19.2924, 79.3449, -112.498, 0.67", "19.1598, 81.0297, -113.993, 0.33", "19.0049, 82.057, -114.73, 1.33", "18.8127, 83.0089, -115.387, 0.33", "18.6045, 83.8985, -115.954, 0.67", "17.7032, 87.524, -117.777, 0.33", "17.5515, 88.1737, -118.138, 1.33", "17.2769, 89.6152, -119.076, 0.33", "16.9948, 91.1803, -120.181, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.0028, 27.6238, -23.9254, 0.67", "-2.26506, 31.2265, -22.6274, 0.67", "-3.24716, 34.6034, -21.5321, 0.67", "-3.74227, 36.7243, -21.0004, 0.67", "-4.12482, 38.9874, -20.506, 0.67", "-4.37707, 40.7847, -20.2395, 1.33", "-4.60569, 42.5659, -20.0018, 0.67", "-4.74397, 44.6129, -19.7452, 0.67", "-4.71429, 46.943, -19.5659, 1.33", "-4.32482, 49.9902, -19.2423, 0.67", "-3.30404, 53.9189, -18.6674, 0.67", "-2.73753, 55.4695, -18.2121, 0.67", "-2.20958, 56.7317, -17.7698, 0.67", "-0.65188, 59.9886, -16.3596, 0.67", "1.13586, 63.0087, -14.6592, 0.67", "2.12204, 64.264, -13.7494, 1.33", "5.12982, 67.1608, -10.925, 1.33" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "6.69546, 19.401, 19.2994, 1.33", "-0.7922, 31.581, 14.429, 1.33", "-2.28772, 34.0137, 13.4562, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.69546, 19.401, 19.2994, 0.67", "-3.5991, 14.9993, 19.9357, 0.67", "-6.11475, 13.9237, 20.0911, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "38.63, 15.5408, 4.7437, 0.668796", "52.5269, 21.1866, 4.7437, 0.668796", "66.4239, 26.8324, 4.7437, 0.668796" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.33618, 22.7819, -46.7855, 1.33", "1.12152, 23.6667, -49.5719, 1.33", "0.07577, 23.8641, -51.1031, 0.67", "-1.46539, 24.0267, -53.5867, 0.67", "-3.53828, 24.3929, -57.9363, 0.67", "-6.34754, 24.995, -64.0719, 0.67", "-7.89683, 25.3228, -67.3303, 1.33", "-9.02973, 25.5894, -70.2464, 0.33", "-10.8408, 25.8005, -75.8685, 1.33", "-12.673, 25.4292, -82.4601, 0.67", "-13.1725, 25.0217, -84.9419, 0.67", "-13.3467, 24.6982, -86.4046, 1.33", "-13.8937, 23.1515, -93.3972, 0.67", "-14.2946, 21.7689, -98.316, 0.67", "-14.6923, 20.2507, -102.77, 1.33", "-14.9002, 19.5469, -104.703, 0.67", "-16.0076, 16.3397, -113.865, 0.67", "-16.7774, 14.8649, -118.644, 0.33", "-18.0538, 13.2713, -124.495, 0.67", "-20.2435, 11.543, -132.733, 1.33", "-22.1731, 10.5535, -139.35, 0.33", "-23.3836, 10.1391, -143.285, 1.33", "-25.3337, 9.65347, -149.253, 0.33", "-25.9566, 9.5164, -151.252, 0.67", "-28.6608, 9.10336, -160.189, 0.33", "-30.4704, 8.72011, -165.641, 1.33", "-34.7426, 7.55837, -178.294, 0.33", "-35.0254, 7.46216, -179.093, 1.33", "-38.6154, 5.9704, -188.819, 0.33", "-38.7438, 5.91086, -189.164, 1.33", "-42.3784, 3.89769, -198.537, 0.33", "-43.8867, 3.05519, -201.914, 1.33", "-45.9327, 2.02781, -205.564, 0.33", "-47.2281, 1.44814, -207.686, 0.67" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "2.33618, 22.7819, -46.7855, 0.67", "1.89166, 25.286, -47.0461, 0.67", "1.95446, 28.7885, -48.2463, 0.67", "2.00348, 31.523, -49.1832, 0.67", "2.08233, 35.9205, -50.69, 0.67", "2.1405, 39.1651, -51.8018, 1.33", "2.21974, 43.5848, -53.3162, 0.67", "3.22954, 48.1283, -55.1188, 1.33" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-139.092, 29.8523, -97.5661, 0.33", "-140.557, 32.1395, -99.9781, 0.33", "-142.17, 35.0305, -103.194, 1.33", "-142.912, 36.4011, -104.685, 0.33", "-143.337, 37.3807, -105.758, 1.33", "-144.942, 41.5567, -110.371, 0.33", "-145.322, 42.6374, -111.55, 2.0", "-146.671, 47.4853, -116.568, 0.33", "-146.95, 48.6192, -117.617, 1.33", "-148.102, 53.6489, -122.138, 0.33", "-148.223, 54.2316, -122.612, 0.67", "-148.536, 56.0631, -123.767, 0.33", "-149.179, 59.6436, -125.512, 0.67", "-149.566, 61.7123, -126.056, 0.33", "-149.647, 62.0703, -126.158, 0.67", "-150.144, 63.8316, -126.632, 0.33", "-150.419, 64.8084, -126.935, 1.33", "-151.871, 70.0642, -128.975, 0.33", "-152.132, 71.04, -129.449, 0.67", "-153.215, 75.307, -131.69, 0.33", "-153.391, 76.0203, -132.083, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-139.092, 29.8523, -97.5661, 0.33", "-137.306, 29.9309, -93.7461, 0.33", "-136.88, 29.9497, -92.8331, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.248, -13.7201, -87.7672, 0.33", "-14.49, -15.5715, -95.6238, 0.33", "-14.8622, -16.9572, -102.178, 0.33", "-15.0227, -17.4708, -105.045, 0.67", "-15.7261, -19.4484, -116.729, 0.33", "-15.9997, -20.2206, -121.649, 1.33", "-17.0224, -23.107, -140.04, 0.33", "-17.2117, -23.4698, -142.928, 1.33", "-18.0712, -24.6183, -153.625, 0.33", "-18.1452, -24.7015, -154.597, 1.33", "-18.9383, -25.2727, -164.096, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-14.248, -13.7201, -87.7672, 0.67", "-14.0552, -13.2296, -89.3651, 0.67", "-13.7554, -12.3323, -92.2028, 1.33", "-13.1242, -10.0276, -99.4431, 0.33", "-13.0617, -9.61544, -100.692, 0.67", "-12.9371, -7.42959, -107.413, 0.33", "-12.946, -7.30235, -107.81, 1.33", "-13.3102, -5.52679, -113.058, 0.33", "-13.4969, -4.92631, -114.757, 0.67", "-14.0304, -3.53718, -118.748, 0.33", "-14.5465, -2.08123, -122.529, 0.67", "-15.1484, -0.125765, -127.047, 0.33", "-15.2083, 0.111085, -127.531, 1.33", "-15.9907, 4.16639, -134.775, 0.33", "-16.1255, 6.02787, -137.632, 1.33", "-15.9845, 8.48527, -140.77, 0.33", "-15.8251, 9.7974, -142.198, 0.67", "-15.3504, 12.1507, -144.383, 0.33", "-14.9689, 13.8074, -145.76, 0.67", "-13.9518, 16.7275, -146.886, 0.33", "-13.5779, 17.554, -147.042, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "21.743, -25.7908, -27.4212, 2.0", "22.5327, -29.9106, -25.2194, 2.0", "25.816, -41.2217, -20.3669, 2.0", "27.2732, -45.6354, -18.4706, 2.0", "27.2732, -45.6354, -18.4706, 2.0", "29.7887, -51.5962, -15.3902, 1.33", "31.8069, -55.8564, -12.8438, 1.33", "35.0472, -61.6086, -8.81382, 0.67", "37.1347, -64.5133, -6.58149, 0.67", "39.3163, -67.6618, -3.77779, 0.67", "40.0361, -68.7935, -2.74928, 1.33", "42.2376, -73.0831, 1.13584, 0.67", "43.8473, -76.62, 4.08547, 0.67", "44.3517, -77.9609, 5.2096, 0.67", "45.2575, -81.1497, 6.85738, 0.67", "45.545, -82.7387, 7.40802, 0.67", "45.7881, -85.0223, 8.00358, 1.33", "46.0353, -89.0845, 8.54589, 0.67", "46.2205, -92.5595, 8.99229, 0.67", "46.3549, -95.195, 9.36664, 0.33", "46.4651, -98.3951, 9.82242, 1.33", "46.5822, -101.085, 10.4045, 0.67", "46.775, -103.059, 10.9029, 1.33", "48.0098, -109.845, 12.809, 0.67", "48.831, -113.01, 13.6264, 0.67", "49.3737, -115.036, 14.094, 0.67", "50.4608, -118.907, 14.826, 0.67", "51.2869, -121.709, 15.3562, 0.67", "52.1688, -124.429, 15.8337, 1.33", "53.0405, -126.698, 16.1604, 0.67", "53.5983, -128.314, 16.3021, 0.67", "54.2881, -130.008, 16.3799, 0.67", "55.378, -132.53, 16.3844, 0.67", "56.521, -135.449, 16.5285, 0.67", "57.0631, -137.277, 16.7765, 1.33", "57.7755, -139.533, 17.2199, 0.67", "58.9508, -142.839, 18.3189, 0.67", "59.4765, -144.142, 18.8694, 0.67", "60.2567, -146.01, 19.6948, 1.33", "61.9551, -150.404, 22.0497, 0.33", "63.2593, -153.77, 23.9627, 0.67", "64.8978, -157.952, 26.5072, 0.67", "65.7482, -160.266, 27.9888, 1.33", "66.9665, -163.26, 29.9288, 0.67", "69.2042, -167.768, 32.737, 0.67", "70.0537, -169.13, 33.47, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "21.743, -25.7908, -27.4212, 0.67", "24.3099, -23.2542, -27.4425, 0.67", "25.5903, -22.1909, -27.4613, 0.67", "29.1628, -19.1404, -27.5392, 0.67", "30.8355, -17.7234, -27.5225, 0.33", "32.8218, -16.3537, -27.7583, 1.33", "34.3584, -15.4615, -28.2959, 0.67", "35.4071, -14.861, -28.9721, 0.67", "36.9823, -13.9263, -30.2692, 1.33", "38.2629, -13.0732, -31.5285, 0.67", "41.2935, -10.4938, -35.005, 1.33", "44.6276, -7.07371, -39.2274, 0.67", "47.1803, -4.20183, -42.5618, 0.67", "48.1991, -2.96713, -43.8977, 0.67", "49.1959, -1.64218, -45.1488, 1.33", "49.9153, -0.555507, -46.0095, 0.67", "51.5004, 1.62416, -47.8721, 1.33", "52.9629, 3.34499, -49.6313, 0.67", "53.9618, 4.35168, -50.8746, 0.67", "55.5019, 5.6383, -52.8961, 1.33", "58.4663, 7.69715, -57.0793, 0.67", "63.5084, 10.6779, -64.4865, 0.33", "64.8724, 11.2493, -66.4991, 0.33", "65.4873, 11.3988, -67.4132, 0.67", "67.4973, 11.6477, -70.1633, 0.33", "69.0967, 11.6162, -72.1487, 1.33", "70.9558, 11.4384, -74.0003, 0.33", "73.5727, 11.3006, -76.3266, 0.33", "77.1667, 11.193, -79.4592, 1.33", "79.2977, 11.1872, -81.4508, 0.67", "82.3084, 11.3357, -84.3857, 0.67", "83.9922, 11.5214, -86.1217, 0.67", "87.1121, 12.0369, -89.8303, 0.67", "88.3066, 12.4278, -91.4655, 2.0", "90.9254, 13.4568, -95.4457, 0.33", "91.5534, 13.7328, -96.5083, 0.33", "92.4042, 14.153, -97.9778, 0.67", "94.6953, 15.2537, -102.039, 0.33", "96.9499, 16.2267, -105.886, 1.33", "98.6708, 16.9493, -108.941, 0.33", "98.9448, 17.0496, -109.476, 0.67", "99.4569, 17.1801, -110.746, 0.33", "100.67, 17.3575, -114.156, 0.33", "101.381, 17.437, -116.197, 0.33", "101.929, 17.4686, -117.694, 1.33", "105.342, 17.6911, -126.225, 0.33", "108.198, 17.9016, -132.844, 0.67", "108.198, 17.9016, -132.844, 0.67", "109.381, 17.9888, -135.023, 0.33", "110.791, 18.149, -137.286, 1.33", "113.02, 18.4768, -140.277, 0.33", "113.607, 18.646, -140.904, 1.33", "117.214, 19.9567, -144.645, 0.33", "118.599, 20.5424, -146.304, 0.67", "119.863, 21.1722, -148.053, 0.33", "121.677, 22.298, -150.908, 1.33", "124.094, 24.2105, -154.895, 0.33", "125.083, 25.0848, -156.525, 0.33", "125.936, 25.9809, -157.846, 0.67", "126.31, 26.4384, -158.481, 0.33", "127.514, 28.0489, -160.494, 1.33", "128.29, 29.1335, -161.718, 0.33", "128.426, 29.316, -161.924, 0.67", "129.005, 30.3146, -162.96, 0.33", "130.026, 32.6829, -165.914, 0.67", "130.293, 33.5692, -167.156, 0.33", "130.381, 34.0622, -167.882, 0.67", "130.514, 35.7375, -170.503, 0.33", "130.473, 37.4864, -173.239, 1.33", "129.918, 40.5981, -178.359, 0.33", "129.749, 41.108, -179.177, 0.67", "129.47, 41.5508, -180.017, 0.33", "129.264, 41.7794, -180.546, 0.67", "128.784, 42.2177, -181.676, 0.33", "127.68, 43.1488, -184.353, 0.67", "127.298, 43.4878, -185.355, 0.33", "125.789, 45.1327, -189.948, 0.67", "123.931, 47.6368, -196.215, 0.33", "123.786, 47.9368, -196.823, 0.67", "123.005, 50.6362, -201.23, 0.33", "122.935, 50.9925, -201.738, 0.67", "122.791, 52.67, -203.801, 0.33", "123.02, 54.716, -205.228, 1.33", "123.971, 58.7075, -206.184, 0.33", "124.299, 59.9136, -206.308, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.63388, -26.1745, -13.1809, 1.33", "3.79565, -27.5804, -6.71806, 1.33" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "5.63388, -26.1745, -13.1809, 0.67", "8.42806, -23.0145, -23.7287, 0.67", "9.42496, -21.6532, -27.7895, 0.67", "11.8979, -18.1073, -38.5674, 0.67", "13.0818, -16.4098, -43.7272, 0.67", "16.3306, -11.7514, -57.8864, 0.67", "17.1153, -10.6264, -61.3062, 0.67", "18.3549, -8.4307, -67.3662, 0.67", "19.2078, -6.26328, -73.6378, 2.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "27.4588, 4.59474, -6.83006, 1.33", "30.3384, 4.61002, -4.50589, 1.33", "34.1201, 4.6301, -1.45367, 0.67", "38.3378, 4.65249, 1.95045, 0.67", "39.3211, 4.65771, 2.74404, 0.67", "42.3329, 4.6737, 5.17492, 0.67", "45.2108, 4.68898, 7.49765, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.4588, 4.59474, -6.83006, 1.33", "33.7913, 6.70136, -11.923, 1.33", "37.4702, 7.64867, -14.2777, 0.67", "38.4591, 7.81022, -14.9621, 0.67", "41.9609, 8.12949, -17.5972, 0.67", "44.2924, 8.21347, -19.3167, 0.67", "46.9872, 8.00425, -21.3405, 0.67", "49.5682, 7.65635, -23.0399, 0.67", "54.0267, 6.65493, -26.2076, 1.33", "57.4058, 5.8128, -28.668, 1.33", "59.1736, 5.31256, -29.9774, 0.67", "63.5656, 3.82779, -33.1062, 0.67", "65.911, 3.10474, -34.6178, 0.33", "68.1942, 2.50814, -36.0529, 1.33", "70.8249, 1.92768, -37.446, 0.67", "72.5578, 1.5826, -38.3206, 0.67", "76.515, 0.948443, -40.2986, 0.67", "79.3992, 0.508188, -41.5899, 0.33", "81.8885, -0.0222353, -42.7773, 0.67", "86.0824, -0.928566, -45.0886, 0.67", "86.6681, -1.1135, -45.496, 1.33", "87.9805, -1.58529, -46.5018, 0.67", "89.6361, -2.25741, -47.8947, 0.67", "92.6098, -3.76092, -50.6064, 0.33", "94.8735, -5.36798, -53.2271, 2.0", "98.2925, -8.46153, -57.9424, 0.33", "98.9599, -9.21238, -59.078, 0.33", "99.9115, -10.4068, -60.8962, 0.33", "100.39, -10.9995, -61.8466, 1.33", "105.472, -17.0602, -71.4647, 0.33", "106.086, -17.6693, -72.5021, 1.33", "111.594, -22.0108, -80.9436, 0.33", "112.122, -22.3421, -81.6718, 0.67", "116.128, -24.2002, -86.5534, 0.33", "118.753, -24.9789, -89.3114, 1.33", "125.523, -25.6025, -94.7825, 0.33", "126.832, -25.6248, -95.7635, 1.33", "130.105, -25.4111, -97.828, 0.33", "130.963, -25.3474, -98.3615, 1.33", "133.859, -25.1008, -100.25, 0.33", "134.754, -25.0169, -100.898, 1.33", "141.671, -24.1374, -105.93, 0.33", "143.295, -23.9325, -107.167, 1.33", "145.276, -23.6359, -108.767, 0.33", "147.583, -23.2056, -110.709, 0.67", "149.166, -22.8033, -112.128, 0.33", "149.687, -22.5999, -112.635, 0.67", "150.435, -21.9381, -113.609, 0.33", "150.582, -21.8149, -113.897, 0.33", "150.881, -21.5913, -114.55, 0.67", "152.091, -20.7451, -116.929, 0.33", "152.326, -20.5945, -117.314, 0.67", "154.024, -19.6233, -119.88, 0.33", "156.149, -18.3599, -122.787, 0.67", "156.764, -17.9681, -123.574, 0.33", "157.674, -17.3699, -124.613, 0.67", "160.078, -15.7634, -127.182, 0.33", "162.107, -14.563, -129.334, 0.67", "164.371, -13.2357, -131.631, 0.33", "164.586, -13.11, -131.871, 0.67", "166.303, -12.1937, -134.147, 0.33", "167.856, -11.4726, -136.506, 1.33", "170.267, -10.4249, -140.454, 0.33", "170.801, -10.2312, -141.321, 0.67", "173.555, -9.41244, -145.935, 0.33", "174.993, -8.99836, -148.327, 0.67", "177.12, -8.38024, -151.874, 0.33", "177.908, -8.19827, -153.032, 1.33", "182.911, -7.20601, -159.521, 0.33", "183.121, -7.17321, -159.78, 0.67", "183.859, -7.09188, -160.542, 0.33", "184.22, -7.05936, -160.856, 0.67", "188.215, -6.96901, -163.8, 0.33", "189.503, -7.0516, -164.642, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.28772, 34.0137, 13.4562, 0.67", "-1.21345, 39.3627, 13.7932, 0.67", "-0.71814, 41.6205, 13.9138, 0.67", "-0.44992, 42.9889, 13.9803, 0.67", "-0.35072, 43.8157, 13.9926, 0.67", "-0.14508, 47.7786, 13.9671, 0.67", "-0.1142, 49.9068, 13.8486, 0.67", "-0.22384, 51.2381, 13.6889, 0.67", "-0.29213, 53.1148, 13.4213, 0.67", "-0.26918, 55.8702, 13.1019, 0.67", "-0.23872, 57.5534, 13.0698, 0.67", "-0.13102, 61.2597, 13.2811, 0.67", "-0.00862002, 62.9256, 13.4866, 0.67", "0.34453, 66.3289, 14.0178, 0.67", "1.05695, 70.7001, 14.907, 0.67", "1.98778, 74.7697, 15.9934, 0.33", "2.34597, 76.1256, 16.4593, 0.33", "2.53963, 76.7981, 16.7925, 0.33", "4.79716, 83.3043, 17.1389, 0.33", "8.24635, 89.1632, 18.0939, 0.33", "11.4818, 95.1033, 19.2947, 0.33", "15.3987, 100.599, 20.4739, 0.33", "19.0078, 106.431, 20.7228, 0.33", "22.2475, 112.434, 19.9142, 0.33", "24.7043, 118.85, 19.4046, 0.33", "27.9762, 124.871, 18.9054, 0.33", "31.3072, 130.78, 17.8513, 0.33", "35.2909, 136.349, 17.6063, 0.33", "40.3627, 140.874, 17.1251, 0.33", "45.5449, 145.22, 17.922, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.28772, 34.0137, 13.4562, 0.67", "-2.67884, 37.2332, 17.0215, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.11475, 13.9237, 20.0911, 0.67", "-8.38942, 11.8337, 20.0008, 0.67", "-11.7435, 8.75192, 19.8675, 0.33", "-14.5493, 6.17391, 19.756, 0.33", "-14.9968, 5.76269, 19.7383, 0.67", "-22.4702, -0.939537, 20.2324, 0.67", "-30.7073, -6.57134, 21.1331, 0.67", "-39.7621, -10.7572, 21.5899, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.11475, 13.9237, 20.0911, 0.67", "-6.0206, 11.266, 20.7863, 0.67", "-5.93843, 8.94676, 21.3929, 0.67", "-5.85125, 6.48595, 22.0365, 0.67", "-5.65716, 1.00706, 23.4696, 0.67", "-6.53037, -9.97554, 26.3624, 0.67", "-6.38344, -21.2339, 28.2014, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "3.22954, 48.1283, -55.1188, 0.67", "3.7988, 51.3053, -59.3676, 0.67", "3.98882, 52.8052, -61.2461, 0.67", "4.38096, 56.5359, -65.6525, 0.67", "4.61153, 58.1151, -67.6106, 0.67", "4.77495, 59.275, -69.0406, 1.33", "5.56774, 63.8544, -74.9873, 0.33", "5.87162, 65.7349, -77.5373, 0.33", "6.09935, 67.5709, -80.2201, 2.0", "6.49564, 72.3678, -87.3329, 0.33", "6.58535, 72.9999, -88.3536, 1.33", "7.10183, 76.2349, -93.4931, 0.33", "7.14218, 76.789, -94.4254, 0.67", "7.15213, 78.2219, -97.0591, 0.33", "7.08743, 78.7046, -97.9068, 0.33", "6.69691, 80.7335, -101.19, 0.67", "6.42604, 82.5232, -103.845, 0.33", "5.70356, 87.4217, -110.255, 0.33", "5.57148, 88.5963, -111.7, 1.33", "5.34547, 90.5675, -113.861, 0.33", "4.82819, 93.7958, -117.227, 0.33", "4.55825, 95.0701, -118.413, 1.33", "4.05646, 97.4097, -120.383, 0.33", "3.8967, 98.3667, -121.174, 0.67", "3.16954, 103.273, -125.279, 0.33", "3.02799, 104.718, -126.552, 0.67", "2.88372, 106.452, -128.088, 0.33", "2.83162, 108.226, -129.747, 1.33", "3.11376, 117.161, -138.311, 0.33", "3.33718, 119.169, -140.345, 1.33", "4.42389, 124.44, -146.144, 0.33", "4.55903, 124.947, -146.712, 0.67", "5.28765, 127.064, -149.206, 0.33", "5.83976, 128.403, -150.883, 0.67", "7.32143, 131.538, -154.685, 0.33", "8.33936, 133.639, -157.221, 0.67", "9.08923, 135.091, -158.85, 0.33", "9.51879, 136.005, -159.785, 0.67", "11.505, 140.488, -164.201, 0.33", "12.0846, 141.996, -165.711, 1.33", "12.9455, 144.771, -168.399, 0.33", "13.0459, 145.265, -168.877, 0.67", "13.3403, 147.45, -171.098, 0.33", "13.5114, 149.933, -173.642, 1.33", "13.5162, 154.543, -178.383, 0.33", "13.4647, 155.007, -178.884, 0.67", "12.6913, 158.151, -182.155, 0.33", "12.6913, 158.151, -182.155, 0.67", "11.938, 160.041, -183.931, 0.33", "11.5539, 160.839, -184.571, 0.67", "9.6748, 163.906, -186.823, 0.33", "8.5147, 165.724, -188.144, 0.33", "8.149, 166.288, -188.516, 0.67", "6.40502, 169.028, -190.216, 0.33", "6.08699, 169.564, -190.499, 0.67", "5.48936, 170.78, -191.071, 0.33", "5.28367, 171.487, -191.309, 0.67", "4.84262, 173.503, -191.821, 0.33", "4.84262, 173.503, -191.821, 0.67", "4.65721, 175.767, -192.74, 0.33", "4.67182, 176.306, -193.167, 0.67", "4.83234, 178.018, -194.722, 0.33", "4.86346, 178.272, -194.965, 0.67", "4.99609, 179.537, -196.138, 0.33", "5.54089, 186.302, -202.282, 0.33", "5.74368, 189.347, -204.725, 0.67", "5.89222, 191.945, -206.596, 0.33", "5.93523, 192.832, -207.228, 0.67", "6.10258, 196.159, -209.39, 0.33", "6.14938, 197.106, -209.871, 0.67", "6.01155, 202.807, -210.787, 0.33", "5.98969, 203.152, -210.809, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "3.22954, 48.1283, -55.1188, 0.67", "1.98217, 50.0701, -59.2822, 0.67", "1.64194, 50.6021, -60.3039, 0.67", "1.37509, 51.0801, -61.0467, 1.33", "-1.83035, 57.2828, -69.123, 0.33", "-2.24872, 58.046, -70.0008, 2.0", "-2.91906, 59.0386, -71.7346, 0.33", "-3.24405, 59.466, -72.4805, 1.33", "-4.72621, 61.0161, -75.353, 0.33", "-5.33209, 61.4798, -76.3244, 1.33", "-6.82585, 62.1523, -78.0745, 0.33", "-17.785, 64.908, -90.8596, 1.33", "-24.3433, 64.9227, -98.3051, 0.33", "-25.128, 64.7726, -99.2084, 0.67", "-26.9872, 64.1411, -101.495, 0.33", "-27.3553, 64.011, -102.046, 0.67", "-28.0865, 63.8146, -103.418, 0.33", "-29.8799, 63.7733, -107.819, 1.33", "-30.5712, 63.784, -109.365, 0.33", "-31.1382, 63.868, -110.735, 1.33", "-33.8216, 64.4576, -117.53, 0.33", "-34.209, 64.5588, -118.529, 1.33", "-37.8199, 65.6133, -127.978, 0.33", "-38.0518, 65.6807, -128.586, 0.67", "-40.4537, 66.3205, -134.788, 0.33", "-41.7135, 66.5991, -138.012, 1.33", "-43.6573, 66.9749, -143.018, 0.33", "-45.3137, 67.2868, -147.127, 0.67", "-48.4032, 67.869, -154.685, 0.33", "-48.8494, 67.9438, -155.793, 0.67", "-49.166, 67.9905, -156.604, 0.33", "-50.128, 68.0894, -159.023, 0.67", "-53.7332, 68.2771, -168.062, 0.33", "-55.5073, 68.3196, -172.456, 0.67", "-57.2937, 68.2919, -176.871, 0.33", "-58.4046, 68.2535, -179.646, 1.33", "-61.3657, 68.0925, -187.062, 0.33", "-62.4675, 67.9817, -189.823, 0.67", "-63.4358, 67.825, -192.252, 0.33", "-64.0265, 67.7269, -193.758, 0.67", "-65.9335, 67.4012, -198.913, 0.33", "-67.3658, 67.1966, -202.664, 0.67", "-69.474, 66.8817, -208.557, 0.33", "-70.1994, 66.7647, -210.626, 0.67", "-72.8952, 66.2997, -218.749, 0.33", "-74.2803, 66.0775, -223.053, 0.67", "-77.2804, 65.4277, -233.096, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "70.0537, -169.13, 33.47, 0.67", "71.3498, -173.551, 33.4661, 0.67", "72.3981, -177.127, 33.4629, 0.67", "73.2749, -180.118, 33.4602, 0.33", "73.6463, -181.385, 33.4591, 0.33", "74.4809, -184.231, 33.4566, 0.67", "77.5833, -194.589, 34.5661, 0.67", "80.4932, -205.038, 35.2916, 0.67", "85.3334, -214.741, 35.1115, 0.67", "90.4369, -224.282, 35.7626, 0.67", "95.8493, -233.426, 37.836, 0.67", "100.173, -242.714, 41.3442, 0.67", "105.759, -250.881, 45.6451, 0.67", "111.846, -257.928, 51.0187, 0.67", "118.453, -263.353, 57.4574, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "70.0537, -169.13, 33.47, 0.33", "70.7544, -168.762, 36.146, 0.33", "71.0218, -168.622, 37.167, 0.67", "73.6492, -167.242, 47.2006, 0.33", "74.0871, -167.011, 48.873, 0.67", "77.692, -166.062, 60.0039, 0.67", "79.6966, -166.113, 71.5685, 0.67", "80.7313, -166.038, 83.26, 0.67", "82.3862, -166.535, 94.8695, 0.67", "85.1265, -166.217, 106.278, 0.67", "87.1581, -165.267, 117.802, 0.67", "87.8433, -162.638, 129.238, 0.67", "88.9576, -161.474, 140.868, 0.67", "88.4669, -160.609, 152.567, 0.67", "88.4666, -160.7, 164.304, 0.67", "88.3514, -158.338, 175.817, 0.67", "89.0289, -156.088, 187.33, 0.67", "91.823, -154.636, 198.642, 0.67", "96.4323, -150.546, 208.665, 0.67", "102.478, -148.033, 218.417, 0.67", "110.887, -145.945, 226.338, 0.67", "119.65, -143.644, 233.806, 0.67", "127.566, -139.965, 241.676, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "124.299, 59.9136, -206.308, 0.33", "123.449, 61.72, -206.482, 0.33", "123.123, 62.4115, -206.549, 0.67", "119.526, 70.0524, -207.285, 0.33", "117.758, 73.8084, -207.647, 1.33", "115.352, 78.9185, -208.139, 0.33", "115.018, 79.6265, -208.207, 1.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "124.299, 59.9136, -206.308, 0.33", "125.644, 60.9206, -207.868, 0.33", "125.775, 61.0376, -208.016, 0.67", "131.202, 66.3137, -213.88, 0.33", "133.117, 68.3439, -215.76, 1.33", "136.874, 72.5282, -219.308, 0.33", "137.522, 73.2816, -219.893, 0.67", "139.624, 76.022, -221.74, 0.33", "140.077, 76.6944, -222.129, 0.67", "141.941, 79.9311, -223.628, 0.33", "143.574, 82.8754, -224.845, 0.67", "145.494, 86.3676, -226.298, 0.33", "146.109, 87.4391, -226.817, 1.33", "149.049, 92.2569, -229.646, 0.33", "150.175, 94.1603, -230.865, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "3.79565, -27.5804, -6.71806, 0.67", "3.47991, -30.9422, -5.76061, 0.67", "2.91939, -36.158, -4.09269, 0.67", "2.23993, -44.5234, -1.38594, 0.67", "1.78554, -51.6401, 0.849297, 0.67", "1.53699, -58.4356, 3.03807, 0.67", "1.28858, -77.2319, 9.02818, 0.67", "1.33359, -83.9424, 11.1732, 0.67", "1.42712, -88.6625, 12.657, 0.67", "1.64364, -93.4687, 14.0219, 0.67", "1.98873, -100.198, 16.1716, 0.67", "2.27994, -105.094, 17.8968, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "3.79565, -27.5804, -6.71806, 0.67", "2.64498, -30.6016, -4.21504, 0.67", "1.49284, -33.6266, -1.70882, 0.67", "-0.26274, -38.2361, 2.11004, 0.67", "-5.93042, -53.1172, 14.4389, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "19.2078, -6.26328, -73.6378, 0.67", "17.4887, -4.69089, -80.6433, 0.67", "17.2599, -4.3694, -81.9586, 0.33", "17.0913, -3.96524, -83.6243, 0.67", "16.9422, -2.80197, -88.7256, 0.33", "16.9383, -2.59018, -89.6767, 0.33", "16.9827, -2.15242, -91.6349, 1.33", "17.13, -1.67287, -93.6263, 0.33", "17.4395, -0.844877, -97.0333, 1.33", "18.4539, 1.00041, -103.42, 0.33", "19.2334, 2.17635, -106.745, 1.33", "20.418, 3.74377, -110.588, 0.33", "21.2078, 4.71117, -112.542, 0.33", "21.8192, 5.39364, -113.692, 1.33", "24.5736, 8.0809, -116.872, 0.33", "25.9663, 9.20189, -117.698, 1.33", "28.5742, 11.0751, -118.673, 0.33", "30.0743, 12.0754, -119.095, 0.67", "33.5623, 14.2768, -119.917, 0.33", "35.9076, 15.7277, -120.484, 0.67", "39.2409, 17.7559, -121.349, 0.33", "40.0862, 18.292, -121.563, 0.67", "43.4204, 20.4862, -122.415, 0.33", "44.6231, 21.3166, -122.715, 0.67", "46.9506, 23.0255, -123.224, 0.33", "47.6241, 23.5372, -123.442, 0.67", "49.1972, 24.9011, -124.054, 0.33", "50.4, 25.9492, -124.503, 0.33", "52.1038, 27.5075, -125.092, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "19.2078, -6.26328, -73.6378, 0.33", "18.9074, -7.85892, -71.755, 0.33", "18.8083, -8.3854, -71.1338, 0.67", "17.7219, -14.1549, -64.3262, 0.33", "17.5128, -15.2655, -63.0158, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "45.2108, 4.68898, 7.49765, 0.67", "48.6539, 6.02051, 8.37601, 0.67", "52.9375, 7.23273, 9.35511, 0.67", "57.3183, 8.13991, 10.1496, 0.67", "59.1628, 8.39555, 10.4489, 0.67", "61.1973, 8.56236, 10.7384, 0.67", "63.5298, 8.55602, 10.8539, 0.33", "65.4919, 7.96315, 10.6252, 0.67", "67.5805, 6.92742, 10.1242, 0.33", "68.7011, 6.20907, 9.89426, 0.33", "69.4593, 5.67641, 9.78384, 0.67", "73.3858, 2.72586, 9.17021, 0.33", "77.0131, -0.00818533, 8.53576, 0.33", "78.8978, -1.53169, 8.21228, 1.33", "81.6191, -3.85317, 7.86081, 0.33", "82.1524, -4.27001, 7.82447, 1.33", "91.6609, -5.82175, 6.36429, 1.33", "101.012, -6.55885, 3.73938, 1.33", "109.812, -8.92847, 0.285724, 1.33", "119.137, -9.48094, -2.47393, 1.33", "128.467, -8.72199, -5.17767, 1.33", "137.757, -7.22294, -7.72685, 1.33", "146.671, -7.50814, -11.6428, 1.33", "155.249, -8.74926, -16.0865, 1.33", "163.793, -8.25918, -20.7475, 1.33", "172.276, -6.80834, -25.3362, 1.33", "180.978, -5.01989, -29.3679, 1.33", "190.147, -3.18024, -32.1383, 1.33", "199.523, -1.58815, -34.2833, 1.33", "209.202, -0.487156, -34.4301, 1.33", "218.835, -1.03024, -33.0807, 1.33", "228.449, -2.6313, -33.1466, 1.33", "237.7, -5.75361, -33.0052, 1.33", "246.675, -9.62584, -32.7228, 1.33", "254.653, -15.3506, -32.5591, 1.33", "263.116, -20.0396, -34.0321, 1.33", "271.163, -25.6153, -34.6894, 1.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "45.2108, 4.68898, 7.49765, 1.33", "45.3175, 6.09878, 9.44284, 1.33", "45.5486, 9.15315, 13.6572, 0.67", "45.6281, 10.2033, 15.1062, 0.33", "45.8897, 13.6609, 19.8768, 0.33", "46.9987, 19.9289, 28.5609, 0.33", "48.1308, 24.5265, 38.1839, 0.33", "47.3823, 30.1104, 47.3406, 0.33", "45.4331, 36.5826, 55.7351, 0.33", "42.264, 43.0586, 63.7479, 0.33", "38.1984, 49.6448, 71.2557, 0.33", "33.6666, 55.6933, 78.9248, 0.33", "27.9973, 61.0294, 86.3353, 0.33", "22.5489, 65.2484, 94.5497, 0.33", "16.2769, 67.5298, 102.898, 0.33", "11.2791, 68.8168, 112.245, 0.33", "6.55745, 69.175, 121.807, 0.33", "2.22553, 67.5286, 131.418, 0.33", "-1.24947, 66.6455, 141.465, 0.33", "-5.66986, 66.2068, 151.164, 0.33", "-11.2582, 66.9321, 160.228, 0.33", "-16.6657, 68.5684, 169.292, 0.33", "-22.5635, 68.8324, 178.18, 0.33", "-28.5849, 67.2512, 186.844, 0.33", "-34.1024, 66.091, 195.901, 0.33", "-38.8948, 63.9264, 205.188, 0.33", "-41.3138, 60.1188, 214.88, 0.33", "-44.3858, 56.6137, 224.496, 0.33", "-45.7118, 54.301, 234.832, 0.33", "-46.1746, 51.7416, 245.186, 0.33", "-44.7588, 50.8053, 255.719, 0.33", "-43.3415, 49.1774, 266.169, 0.33", "-40.5031, 47.6923, 276.347, 0.33", "-38.6557, 47.7204, 286.854, 0.33", "-35.1498, 47.8592, 296.929, 0.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.67884, 37.2332, 17.0215, 0.67", "-2.72834, 38.7124, 17.9738, 0.67", "-2.17006, 42.5684, 19.7348, 0.67", "-1.8609, 44.1863, 20.3555, 0.67", "-1.43196, 46.1308, 20.9874, 0.67", "-1.16828, 47.5134, 21.3747, 0.67", "-0.7583, 50.3257, 22.1626, 0.67", "0.18939, 54.9811, 23.2333, 0.33", "0.36889, 55.7223, 23.3467, 0.67", "0.690604, 57.0919, 23.5458, 0.33", "1.02656, 59.5741, 23.9538, 0.33", "1.05973, 61.5242, 24.2553, 0.67", "3.44964, 68.2329, 25.7571, 0.67", "5.90269, 74.6517, 28.123, 0.67", "7.3338, 81.3395, 30.6333, 0.67", "8.97999, 87.5607, 34.0072, 0.67", "11.3393, 93.6216, 37.2226, 0.67", "14.9393, 98.842, 40.6746, 0.67", "18.47, 104.039, 44.2313, 0.67", "21.3406, 109.501, 48.0041, 0.67", "24.4339, 114.863, 51.7342, 0.67", "27.2124, 120.27, 55.6492, 0.67", "30.544, 124.982, 59.9669, 0.67", "34.2242, 129.277, 64.4131, 0.67", "37.0161, 133.558, 69.4826, 0.67", "40.6267, 137.43, 74.3406, 0.67", "43.4911, 141.416, 79.5956, 0.67", "44.9757, 145.601, 85.2667, 0.67", "46.7148, 149.741, 90.8941, 0.67", "47.6361, 152.528, 97.4394, 0.67", "48.8669, 154.879, 104.095, 0.67", "51.0331, 158.054, 110.156, 0.67", "53.6619, 161.746, 115.731, 0.67", "57.0912, 165.051, 121.097, 0.67", "60.0113, 169.343, 126.083, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.67884, 37.2332, 17.0215, 0.67", "-2.25723, 39.3309, 19.1392, 0.67", "-2.01076, 40.5572, 20.3772, 0.67", "-0.75704, 45.7119, 27.3534, 0.67", "0.560333, 51.3308, 33.9669, 0.67", "3.31949, 57.4078, 39.6839, 0.67", "5.99686, 63.5267, 45.3976, 0.67", "10.5507, 69.0395, 50.4678, 0.67", "14.3983, 75.2308, 55.3765, 0.67", "17.5901, 80.7311, 61.4145, 0.67", "21.7963, 87.1232, 65.7471, 0.67", "26.2595, 93.0157, 70.4792, 0.67", "30.2648, 98.3446, 76.1654, 0.67", "34.2097, 103.829, 81.7525, 0.67", "38.1477, 109.05, 87.5795, 0.67", "41.9784, 114.99, 92.7894, 0.67", "44.4521, 121.216, 98.4851, 0.67", "47.8259, 126.575, 104.545, 0.67", "51.834, 131.643, 110.453, 0.67", "55.4729, 137.998, 115.321, 0.67", "59.7373, 144.067, 120.025, 0.67", "63.766, 149.631, 125.475, 0.67", "69.2144, 154.795, 129.977, 0.67", "75.3433, 158.784, 134.736, 0.67", "82.8227, 161.418, 138.317, 0.67", "90.1208, 163.298, 142.651, 0.67", "96.8747, 164.669, 147.945, 0.67", "103.352, 165.264, 153.704, 0.67", "108.689, 165.748, 160.542, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-39.7621, -10.7572, 21.5899, 0.67", "-51.0026, -16.5323, 20.7292, 0.67", "-62.9714, -20.5698, 20.8446, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-39.7621, -10.7572, 21.5899, 0.67", "-47.2129, -16.7638, 22.1977, 0.67", "-54.8369, -22.1424, 24.3183, 0.67", "-62.3524, -27.5522, 26.7278, 0.67", "-69.8039, -32.6978, 29.793, 0.67", "-77.3902, -38.1344, 31.9082, 0.67", "-85.3637, -42.1543, 35.2525, 0.67", "-94.022, -45.1926, 37.7891, 0.67", "-101.908, -49.9718, 40.2868, 0.67", "-109.633, -54.9026, 42.9931, 0.67", "-117.351, -59.3252, 46.4491, 0.67", "-125.112, -63.8904, 49.6213, 0.67", "-131.722, -69.6799, 53.4243, 0.67", "-137.65, -75.0117, 58.6985, 0.67", "-143.091, -79.8969, 64.838, 0.67", "-148.047, -85.3043, 70.9681, 0.67", "-153.724, -90.7776, 76.3769, 0.67", "-158.807, -97.5796, 80.8622, 0.67", "-162.812, -104.863, 85.6999, 0.67", "-167.08, -112.379, 89.9418, 0.67", "-170.254, -120.111, 94.7317, 0.67", "-173.856, -126.79, 100.604, 0.67", "-177.659, -134.249, 105.35, 0.67", "-181.342, -142.559, 108.623, 0.67", "-185.294, -151.118, 110.798, 0.67", "-190.149, -159.451, 111.517, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.38344, -21.2339, 28.2014, 0.67", "-8.52233, -33.2545, 30.5112, 0.67", "-9.39843, -45.0966, 34.1047, 0.67", "-11.3172, -56.9149, 37.3766, 0.67", "-11.3203, -68.9417, 40.4432, 0.67", "-9.03543, -80.9597, 42.4817, 0.67", "-9.80663, -93.3803, 42.3254, 0.67", "-11.1166, -105.631, 44.0027, 0.67", "-13.0208, -117.93, 43.9026, 0.67", "-13.7409, -130.068, 41.2731, 0.67", "-13.9224, -141.555, 36.5647, 0.67", "-12.8294, -152.991, 31.8836, 0.67", "-11.0263, -164.615, 27.9357, 0.67", "-7.18259, -176.124, 25.4477, 0.67", "-1.72519, -186.091, 20.677, 0.67", "2.7764, -195.402, 13.9997, 0.67", "6.63153, -206.324, 9.66392, 0.67", "11.3037, -217.634, 7.83945, 0.67", "15.7327, -229.033, 5.93152, 0.67", "20.454, -240.365, 4.40523, 0.67", "22.7777, -252.249, 1.67555, 0.67", "23.8143, -264.447, -0.483305, 0.67", "25.3864, -276.339, -3.69748, 0.67", "26.9159, -287.52, -8.82134, 0.67", "27.6628, -298.91, -13.6807, 0.67", "26.8927, -309.456, -20.1255, 0.67", "24.0558, -319.016, -27.4201, 0.67", "23.0283, -329.378, -34.1121, 0.67", "20.1525, -340.189, -39.4653, 0.67", "15.2382, -349.226, -46.289, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.38344, -21.2339, 28.2014, 0.67", "-8.39401, -32.6136, 30.1287, 0.67", "-9.80103, -44.2278, 30.9414, 0.67", "-12.3828, -55.6593, 30.4668, 0.67", "-16.2537, -66.6319, 29.0848, 0.67", "-21.7486, -76.6634, 26.6899, 0.67", "-27.4546, -85.8099, 22.2582, 0.67", "-34.3966, -94.4257, 18.6523, 0.67", "-41.3282, -103.706, 17.344, 0.67", "-47.7617, -112.863, 14.0845, 0.67", "-53.4484, -121.936, 9.48721, 0.67", "-60.6561, -129.633, 4.63656, 0.67", "-66.9111, -138.801, 1.0725, 0.67", "-72.8344, -148.694, -0.786745, 0.67", "-77.9563, -159.202, -1.25793, 0.67", "-81.527, -170.348, -0.694265, 0.67", "-84.8787, -181.481, -2.18496, 0.67", "-88.7891, -192.502, -2.92144, 0.67", "-91.6816, -203.4, -6.10049, 0.67", "-94.4771, -214.488, -8.67896, 0.67", "-96.5653, -225.958, -9.97614, 0.67", "-98.3011, -237.557, -10.3104, 0.67", "-101.088, -248.946, -10.1512, 0.67", "-102.34, -260.489, -11.8319, 0.67", "-103.793, -272.109, -12.5526, 0.67", "-105.218, -283.751, -12.3274, 0.67", "-108.321, -295.053, -12.6764, 0.67", "-113.386, -305.406, -10.7605, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "2.27994, -105.094, 17.8968, 0.67", "2.88718, -106.761, 14.0836, 0.67", "3.14493, -108.025, 12.1256, 0.67", "3.50919, -110.826, 8.77199, 0.67", "3.46872, -121.784, -1.78518, 0.67", "3.28671, -124.332, -3.8215, 0.67", "2.79334, -128.178, -6.59093, 0.33", "1.95274, -132.809, -9.46445, 0.33", "1.56335, -134.299, -10.134, 1.33", "-0.81452, -141.67, -12.4325, 0.67", "-2.18883, -145.637, -12.9049, 0.67", "-2.92951, -147.754, -13.1939, 0.67", "-4.90988, -152.496, -14.0081, 0.67", "-6.7086, -156.524, -14.885, 1.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.27994, -105.094, 17.8968, 0.33", "4.90645, -106.914, 16.7148, 0.33", "4.90645, -106.914, 16.7148, 0.67", "9.07047, -109.799, 14.8409, 0.33", "10.1705, -110.561, 14.3458, 0.33", "14.4912, -113.554, 12.4014, 0.67", "25.8466, -119.8, 8.86677, 0.67", "37.3707, -126.147, 6.1424, 0.67", "48.9627, -131.566, 2.10927, 0.67", "59.1727, -138.574, -3.14363, 0.67", "68.9418, -147.395, -6.14994, 0.67", "77.809, -157.431, -8.1531, 0.67", "88.1699, -165.701, -10.6196, 0.67", "97.4839, -174.72, -14.4102, 0.67", "105.373, -185.466, -16.9373, 0.67", "113.403, -196.376, -17.7861, 0.67", "121.571, -207.198, -18.3605, 0.67", "129.614, -218.117, -17.7768, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-5.93042, -53.1172, 14.4389, 0.67", "-8.28124, -54.6901, 16.0518, 0.67", "-11.6116, -56.6366, 18.0756, 1.33", "-14.1955, -57.9846, 19.4777, 0.33", "-15.5192, -58.7055, 20.2475, 0.33", "-17.4388, -59.7107, 20.9422, 1.33", "-19.6604, -60.8245, 21.3867, 0.33", "-21.8722, -61.7049, 21.1965, 1.33", "-24.2859, -62.4813, 20.4036, 0.33", "-26.8474, -63.1422, 19.2294, 0.33", "-35.5913, -65.1853, 13.8356, 0.67", "-36.6055, -65.4288, 13.0845, 0.33", "-39.1533, -66.1359, 10.972, 1.33", "-40.4877, -66.5152, 9.80457, 0.33", "-40.4877, -66.5152, 9.80457, 0.67", "-44.1983, -67.395, 7.27203, 0.33", "-45.7414, -67.806, 6.73756, 2.0", "-48.0386, -68.5678, 6.05171, 0.33", "-48.6819, -68.8332, 5.9132, 0.67", "-50.6648, -69.5705, 5.29945, 0.33", "-52.485, -70.1689, 4.73513, 0.33", "-53.2679, -70.3897, 4.53039, 0.67", "-55.7725, -71.0133, 3.83478, 0.33", "-56.5889, -71.1755, 3.56892, 0.67", "-61.9726, -72.5122, 1.74182, 1.33", "-64.5407, -73.2375, 0.857172, 0.33", "-65.9815, -73.6378, 0.318211, 1.33", "-68.1714, -74.1413, -0.482735, 0.33", "-70.6478, -74.6042, -1.20214, 1.33", "-74.0789, -75.2516, -1.88875, 0.33", "-74.9944, -75.3953, -2.01964, 0.67", "-79.2913, -75.9792, -2.78645, 0.33", "-80.258, -76.1107, -2.96179, 0.67", "-84.4209, -76.6546, -3.82846, 0.33", "-85.958, -76.8741, -4.21201, 2.0", "-91.04, -77.6222, -5.7543, 0.33", "-91.8619, -77.7987, -6.01705, 1.33", "-93.893, -78.4437, -6.75982, 0.33", "-96.0165, -79.3069, -7.70027, 0.67", "-99.6535, -81.1628, -9.52284, 0.33", "-100.709, -81.818, -10.0207, 2.0", "-102.354, -83.1874, -10.6253, 0.67", "-104.776, -85.3412, -11.3236, 0.33", "-105.712, -86.2783, -11.4782, 1.33", "-107.547, -88.2789, -11.6557, 0.33", "-108.273, -89.115, -11.6818, 0.67", "-111.161, -92.4356, -11.8165, 0.33", "-111.785, -93.1509, -11.8239, 0.67", "-113.854, -95.4796, -11.7575, 0.33", "-116.352, -98.1967, -11.8252, 1.33", "-119.757, -101.741, -12.0662, 0.33", "-120.21, -102.183, -12.1104, 1.33", "-124.707, -106.182, -12.6985, 0.33", "-125.569, -106.925, -12.8159, 1.33", "-127.854, -108.772, -13.1066, 0.33", "-128.338, -109.163, -13.1457, 0.67", "-129.781, -110.249, -13.3409, 0.33", "-131.38, -111.302, -13.6581, 1.33", "-133.276, -112.343, -14.1694, 0.33", "-133.276, -112.343, -14.1694, 0.67", "-135.049, -113.238, -14.4718, 0.33", "-135.834, -113.629, -14.5024, 0.67", "-139.448, -115.386, -14.2517, 0.33", "-140.007, -115.656, -14.1457, 0.67", "-141.63, -116.383, -13.7281, 0.33", "-142.466, -116.716, -13.4606, 1.33", "-146.24, -117.976, -11.8796, 0.33", "-146.506, -118.065, -11.73, 0.67", "-147.732, -118.52, -10.6685, 0.33", "-148.22, -118.711, -10.2108, 1.33", "-149.715, -119.292, -8.60166, 0.33", "-149.997, -119.431, -8.28843, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.93042, -53.1172, 14.4389, 0.67", "-8.92063, -58.9113, 14.4258, 0.67", "-10.3718, -61.736, 14.8534, 0.67", "-11.8609, -64.4292, 15.2889, 0.67", "-12.5089, -65.6013, 15.4784, 0.67", "-13.3972, -67.208, 15.7382, 0.33", "-14.4832, -69.1722, 16.0558, 0.33", "-16.6059, -73.4161, 17.1813, 1.33", "-18.5689, -77.4794, 18.7942, 0.67", "-21.8304, -87.8132, 21.635, 0.67", "-24.8729, -98.6017, 22.2056, 0.67", "-28.4347, -109.189, 23.206, 0.67", "-32.7154, -119.053, 26.2766, 0.67", "-34.7861, -129.062, 30.8224, 0.67", "-35.4835, -140.132, 32.5983, 0.67", "-35.9253, -151.365, 32.659, 0.67", "-34.404, -162.471, 31.9239, 0.67", "-32.6167, -173.515, 30.9418, 0.67", "-32.459, -184.751, 31.2339, 0.67", "-30.0117, -195.566, 32.933, 0.67", "-27.4783, -206.22, 35.3274, 0.67", "-22.6973, -215.587, 39.0389, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-62.9714, -20.5698, 20.8446, 0.67", "-73.0245, -23.203, 20.5989, 0.67", "-83.3548, -23.6711, 19.7627, 0.67" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-62.9714, -20.5698, 20.8446, 0.67", "-70.7941, -25.7089, 21.2776, 0.67" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-83.3548, -23.6711, 19.7627, 0.67", "-91.5677, -24.7226, 19.4497, 0.67", "-99.4185, -27.4295, 19.1557, 0.67", "-107.255, -30.1844, 18.9623, 0.67", "-115.347, -31.7163, 17.9512, 0.67", "-123.504, -32.4607, 19.1306, 0.67", "-131.711, -33.5935, 19.0063, 0.67", "-139.648, -35.8519, 18.0433, 0.67", "-147.557, -38.3687, 18.2232, 0.67", "-155.56, -40.0224, 19.5695, 0.67", "-163.556, -42.013, 20.4602, 0.67", "-171.803, -42.6585, 20.7924, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-83.3548, -23.6711, 19.7627, 0.67", "-95.5862, -23.6103, 21.1586, 0.67", "-107.451, -22.6217, 24.2783, 0.67", "-119.033, -19.367, 26.9109, 0.67", "-130.874, -16.9794, 29.2857, 0.67", "-142.374, -13.5322, 32.0396, 0.67", "-154.302, -10.647, 32.9845, 0.67", "-166.507, -9.31069, 33.8376, 0.67", "-178.695, -7.75342, 34.5624, 0.67", "-190.84, -6.94274, 32.6565, 0.67", "-202.739, -4.08894, 31.3374, 0.67", "-214.765, -1.898, 29.8809, 0.67", "-226.402, 1.85009, 28.4715, 0.67", "-238.42, 3.61575, 26.4477, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_54", "dend_47", "dend_46", "dend_27", "dend_20", "dend_17", "dend_0", "dend_57", "dend_56", "dend_51", "dend_48", "dend_39", "dend_28", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_1", "dend_61", "dend_58", "dend_53", "dend_52", "dend_50", "dend_49", "dend_43", "dend_40", "dend_32", "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_5", "dend_2", "dend_60", "dend_59", "dend_45", "dend_44", "dend_42", "dend_41", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_25", "dend_15", "dend_14", "dend_7", "dend_6", "dend_4", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_54", "dend_47", "dend_46", "dend_27", "dend_20", "dend_17", "dend_0", "dend_57", "dend_56", "dend_51", "dend_48", "dend_39", "dend_28", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_1", "dend_61", "dend_58", "dend_53", "dend_52", "dend_50", "dend_49", "dend_43", "dend_40", "dend_32", "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_5", "dend_2", "dend_60", "dend_59", "dend_45", "dend_44", "dend_42", "dend_41", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_25", "dend_15", "dend_14", "dend_7", "dend_6", "dend_4", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_54", "dend_47", "dend_46", "dend_27", "dend_20", "dend_17", "dend_0", "axon_0", "dend_57", "dend_56", "dend_51", "dend_48", "dend_39", "dend_28", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_1", "axon_1", "dend_61", "dend_58", "dend_53", "dend_52", "dend_50", "dend_49", "dend_43", "dend_40", "dend_32", "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_5", "dend_2", "dend_60", "dend_59", "dend_45", "dend_44", "dend_42", "dend_41", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_25", "dend_15", "dend_14", "dend_7", "dend_6", "dend_4", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_8", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_LBC_baa757490e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_54, dend_47, dend_46, dend_27, dend_20, dend_17, dend_0, dend_57, dend_56, dend_51, dend_48, dend_39, dend_28, dend_22, dend_21, dend_19, dend_18, dend_12, dend_1, dend_61, dend_58, dend_53, dend_52, dend_50, dend_49, dend_43, dend_40, dend_32, dend_29, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_60, dend_59, dend_45, dend_44, dend_42, dend_41, dend_36, dend_33, dend_31, dend_30, dend_26, dend_25, dend_15, dend_14, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_54, dend_47, dend_46, dend_27, dend_20, dend_17, dend_0, dend_57, dend_56, dend_51, dend_48, dend_39, dend_28, dend_22, dend_21, dend_19, dend_18, dend_12, dend_1, dend_61, dend_58, dend_53, dend_52, dend_50, dend_49, dend_43, dend_40, dend_32, dend_29, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_60, dend_59, dend_45, dend_44, dend_42, dend_41, dend_36, dend_33, dend_31, dend_30, dend_26, dend_25, dend_15, dend_14, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_54, dend_47, dend_46, dend_27, dend_20, dend_17, dend_0, axon_0, dend_57, dend_56, dend_51, dend_48, dend_39, dend_28, dend_22, dend_21, dend_19, dend_18, dend_12, dend_1, axon_1, dend_61, dend_58, dend_53, dend_52, dend_50, dend_49, dend_43, dend_40, dend_32, dend_29, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_60, dend_59, dend_45, dend_44, dend_42, dend_41, dend_36, dend_33, dend_31, dend_30, dend_26, dend_25, dend_15, dend_14, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_27, dend_27, dend_27, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_8, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4500014283609545)
    connect dend_54(0), soma_0(0.4500014283609545)
    connect dend_47(0), soma_0(0.4500014283609545)
    connect dend_46(0), soma_0(0.4500014283609545)
    connect dend_27(0), soma_0(0.4500014283609545)
    connect dend_20(0), soma_0(0.4500014283609545)
    connect dend_17(0), soma_0(0.4500014283609545)
    connect dend_0(0), soma_0(0.4500014283609545)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.6654, -4.48604, -4.733, 4.38304 ) }
    soma_0 { pt3dadd( -9.59028, -4.04928, -4.25917, 7.64773 ) }
    soma_0 { pt3dadd( -8.5152, -3.61252, -3.78533, 9.76453 ) }
    soma_0 { pt3dadd( -7.44013, -3.17575, -3.3115, 11.7144 ) }
    soma_0 { pt3dadd( -6.36506, -2.73899, -2.83766, 13.2271 ) }
    soma_0 { pt3dadd( -5.28998, -2.30223, -2.36383, 14.8155 ) }
    soma_0 { pt3dadd( -4.21491, -1.86547, -1.88999, 15.9799 ) }
    soma_0 { pt3dadd( -3.13983, -1.42871, -1.41616, 16.1382 ) }
    soma_0 { pt3dadd( -2.06476, -0.991945, -0.942321, 16.2697 ) }
    soma_0 { pt3dadd( -0.989682, -0.555184, -0.468486, 15.7798 ) }
    soma_0 { pt3dadd( 0.0853925, -0.118422, 0.00534972, 14.9742 ) }
    soma_0 { pt3dadd( 1.16047, 0.31834, 0.479185, 14.0592 ) }
    soma_0 { pt3dadd( 2.23554, 0.755102, 0.95302, 13.134 ) }
    soma_0 { pt3dadd( 3.31062, 1.19186, 1.42686, 12.2089 ) }
    soma_0 { pt3dadd( 4.38569, 1.62863, 1.90069, 11.2617 ) }
    soma_0 { pt3dadd( 5.46077, 2.06539, 2.37453, 10.0555 ) }
    soma_0 { pt3dadd( 6.53584, 2.50215, 2.84836, 8.84921 ) }
    soma_0 { pt3dadd( 7.61092, 2.93891, 3.3222, 7.64296 ) }
    soma_0 { pt3dadd( 8.68599, 3.37567, 3.79603, 6.28058 ) }
    soma_0 { pt3dadd( 9.76106, 3.81243, 4.26987, 3.94487 ) }
    soma_0 { pt3dadd( 10.8361, 4.2492, 4.7437, 2.44935 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.97753, 7.76798, -14.3987, 2.67 ) }
    dend_55 { pt3dadd( -0.41703, 12.0195, -19.2439, 2.67 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 23/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.72247, 6.75323, 11.1013, 1.33 ) }
    dend_54 { pt3dadd( 1.00175, 8.06823, 8.04268, 1.33 ) }
    dend_54 { pt3dadd( -1.54201, 10.3514, 3.61006, 1.33 ) }
    dend_54 { pt3dadd( -4.74747, 13.4337, -1.30226, 1.33 ) }
    dend_54 { pt3dadd( -6.93873, 15.6044, -4.17678, 0.67 ) }
    dend_54 { pt3dadd( -8.24597, 16.8495, -5.59011, 0.67 ) }
    dend_54 { pt3dadd( -9.60433, 18.0725, -6.89528, 1.33 ) }
    dend_54 { pt3dadd( -11.4517, 19.8343, -8.46275, 1.33 ) }
    dend_54 { pt3dadd( -13.8471, 22.2773, -9.94734, 0.67 ) }
    dend_54 { pt3dadd( -15.7824, 24.2875, -10.5683, 0.67 ) }
    dend_54 { pt3dadd( -17.8911, 26.3689, -10.9462, 0.67 ) }
    dend_54 { pt3dadd( -21.6775, 30.0118, -11.4102, 0.67 ) }
    dend_54 { pt3dadd( -24.7781, 32.9147, -11.7215, 0.67 ) }
    dend_54 { pt3dadd( -27.8953, 35.82, -11.9813, 0.67 ) }
    dend_54 { pt3dadd( -31.1196, 38.7423, -12.2869, 0.67 ) }
    dend_54 { pt3dadd( -32.8824, 40.2277, -12.4507, 0.67 ) }
    dend_54 { pt3dadd( -35.6544, 42.1305, -12.7788, 0.67 ) }
    dend_54 { pt3dadd( -37.6146, 43.1245, -13.0655, 0.67 ) }
    dend_54 { pt3dadd( -39.3428, 43.609, -13.4877, 0.67 ) }
    dend_54 { pt3dadd( -42.7976, 44.2365, -14.6329, 0.67 ) }
    dend_54 { pt3dadd( -44.3005, 44.421, -15.1413, 1.33 ) }
    dend_54 { pt3dadd( -49.3435, 45.0713, -16.7137, 0.67 ) }
    dend_54 { pt3dadd( -52.1513, 45.5552, -17.541, 0.67 ) }
    dend_54 { pt3dadd( -57.3623, 46.8038, -19.1869, 0.67 ) }
    dend_54 { pt3dadd( -59.458, 47.4875, -19.8626, 0.67 ) }
    dend_54 { pt3dadd( -61.9317, 48.4423, -20.6191, 0.67 ) }
    dend_54 { pt3dadd( -64.5338, 49.5929, -21.5651, 1.33 ) }
    dend_54 { pt3dadd( -67.6658, 51.2009, -22.8643, 0.67 ) }
    dend_54 { pt3dadd( -71.1887, 53.051, -24.728, 0.67 ) }
    dend_54 { pt3dadd( -72.3775, 53.7127, -25.5295, 0.67 ) }
    dend_54 { pt3dadd( -73.8722, 54.533, -26.6218, 0.67 ) }
    dend_54 { pt3dadd( -77.0469, 56.2104, -29.0322, 0.67 ) }
    dend_54 { pt3dadd( -78.7191, 57.0424, -30.3417, 1.33 ) }
    dend_54 { pt3dadd( -81.9604, 58.7288, -32.8772, 0.33 ) }
    dend_54 { pt3dadd( -82.6777, 59.178, -33.4091, 0.67 ) }
    dend_54 { pt3dadd( -85.0419, 60.8204, -35.1693, 0.33 ) }
    dend_54 { pt3dadd( -85.8729, 61.5512, -35.7912, 1.33 ) }
    dend_54 { pt3dadd( -88.7573, 64.6393, -38.1324, 0.33 ) }
    dend_54 { pt3dadd( -89.2512, 65.257, -38.5629, 0.67 ) }
    dend_54 { pt3dadd( -90.911, 67.8711, -39.9528, 0.33 ) }
    dend_54 { pt3dadd( -91.0558, 68.1371, -40.0762, 0.67 ) }
    dend_54 { pt3dadd( -92.1984, 70.4639, -41.016, 0.33 ) }
    dend_54 { pt3dadd( -93.4231, 73.3713, -41.9781, 0.67 ) }
    dend_54 { pt3dadd( -94.6167, 76.2299, -42.6982, 0.33 ) }
    dend_54 { pt3dadd( -95.8379, 78.9058, -43.3873, 1.33 ) }
    dend_54 { pt3dadd( -96.7513, 80.6295, -44.015, 0.33 ) }
    dend_54 { pt3dadd( -97.2987, 81.4484, -45.0481, 0.67 ) }
    dend_54 { pt3dadd( -97.9863, 82.1914, -46.8733, 0.33 ) }
    dend_54 { pt3dadd( -98.6195, 82.7097, -48.7302, 0.33 ) }
    dend_54 { pt3dadd( -99.0825, 82.9996, -50.223, 0.67 ) }
    dend_54 { pt3dadd( -100.398, 83.639, -54.2568, 1.33 ) }
    dend_54 { pt3dadd( -104.706, 85.4936, -66.3883, 0.33 ) }
    dend_54 { pt3dadd( -105.184, 85.6877, -67.6444, 0.67 ) }
    dend_54 { pt3dadd( -106.664, 86.2753, -71.2557, 0.33 ) }
    dend_54 { pt3dadd( -107.793, 86.7943, -73.9238, 1.33 ) }
    dend_54 { pt3dadd( -110.26, 87.9875, -79.2242, 0.33 ) }
    dend_54 { pt3dadd( -111.548, 88.6323, -81.4013, 2.0 ) }
    dend_54 { pt3dadd( -115.251, 90.4986, -86.0268, 0.33 ) }
    dend_54 { pt3dadd( -115.865, 90.8615, -86.7293, 0.67 ) }
    dend_54 { pt3dadd( -116.515, 91.2733, -87.367, 0.33 ) }
    dend_54 { pt3dadd( -117.183, 91.7575, -87.9566, 0.67 ) }
    dend_54 { pt3dadd( -120.023, 94.0851, -90.249, 0.33 ) }
    dend_54 { pt3dadd( -120.615, 94.6116, -90.6983, 0.67 ) }
    dend_54 { pt3dadd( -123.657, 97.454, -92.6141, 0.33 ) }
    dend_54 { pt3dadd( -124.285, 98.0435, -93.0275, 0.67 ) }
    dend_54 { pt3dadd( -126.86, 100.456, -94.728, 0.33 ) }
    dend_54 { pt3dadd( -127.064, 100.654, -94.8654, 0.67 ) }
    dend_54 { pt3dadd( -128.518, 102.152, -95.8279, 0.33 ) }
    dend_54 { pt3dadd( -128.716, 102.353, -95.9685, 0.67 ) }
    dend_54 { pt3dadd( -130.458, 104.035, -97.5519, 0.33 ) }
    dend_54 { pt3dadd( -130.813, 104.394, -97.8495, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -8.03753, -3.70177, -13.1987, 1.33 ) }
    dend_47 { pt3dadd( -11.9042, -5.81503, -17.0245, 1.33 ) }
    dend_47 { pt3dadd( -14.574, -7.27415, -19.6661, 1.33 ) }
    dend_47 { pt3dadd( -15.6196, -7.8456, -20.7006, 0.67 ) }
    dend_47 { pt3dadd( -16.7506, -8.46376, -21.8197, 1.33 ) }
    dend_47 { pt3dadd( -21.6071, -11.1179, -26.6249, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 0/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -7.62753, -6.47952, -7.99871, 1.33 ) }
    dend_46 { pt3dadd( -9.42093, -10.5496, -9.20811, 1.33 ) }
    dend_46 { pt3dadd( -10.3715, -13.0495, -9.49494, 1.33 ) }
    dend_46 { pt3dadd( -11.3212, -16.0019, -9.53434, 1.33 ) }
    dend_46 { pt3dadd( -13.2393, -23.4305, -9.27794, 1.33 ) }
    dend_46 { pt3dadd( -14.3762, -27.4241, -9.06201, 0.67 ) }
    dend_46 { pt3dadd( -16.1152, -33.0687, -8.87595, 0.67 ) }
    dend_46 { pt3dadd( -17.5197, -37.9284, -8.7246, 0.67 ) }
    dend_46 { pt3dadd( -19.0521, -42.8775, -8.89611, 0.67 ) }
    dend_46 { pt3dadd( -21.3514, -50.0751, -9.47064, 0.67 ) }
    dend_46 { pt3dadd( -22.972, -55.3607, -10.0536, 0.67 ) }
    dend_46 { pt3dadd( -24.2733, -59.6656, -10.91, 0.67 ) }
    dend_46 { pt3dadd( -25.1627, -62.2643, -11.6539, 0.67 ) }
    dend_46 { pt3dadd( -28.4751, -70.6852, -14.3848, 0.67 ) }
    dend_46 { pt3dadd( -29.5226, -72.9984, -15.0246, 0.67 ) }
    dend_46 { pt3dadd( -30.6907, -75.5264, -15.5041, 1.33 ) }
    dend_46 { pt3dadd( -32.1473, -79.0403, -15.6455, 0.67 ) }
    dend_46 { pt3dadd( -33.7896, -82.6501, -15.2861, 0.67 ) }
    dend_46 { pt3dadd( -35.7978, -87.1443, -14.2625, 0.67 ) }
    dend_46 { pt3dadd( -37.6393, -91.4307, -12.8301, 0.67 ) }
    dend_46 { pt3dadd( -39.1709, -94.7635, -11.7157, 0.67 ) }
    dend_46 { pt3dadd( -42.1959, -100.769, -9.67144, 0.67 ) }
    dend_46 { pt3dadd( -44.6094, -105.547, -8.09645, 0.67 ) }
    dend_46 { pt3dadd( -46.8804, -110.378, -6.96505, 0.67 ) }
    dend_46 { pt3dadd( -47.9083, -112.842, -6.65193, 1.33 ) }
    dend_46 { pt3dadd( -49.645, -116.891, -6.6718, 0.67 ) }
    dend_46 { pt3dadd( -51.6272, -120.785, -7.16189, 0.67 ) }
    dend_46 { pt3dadd( -52.4396, -122.263, -7.62523, 0.67 ) }
    dend_46 { pt3dadd( -55.4376, -127.526, -10.2199, 1.33 ) }
    dend_46 { pt3dadd( -56.9758, -130.232, -11.8569, 0.67 ) }
    dend_46 { pt3dadd( -58.3924, -133.068, -13.5969, 0.67 ) }
    dend_46 { pt3dadd( -59.8587, -136.623, -15.9398, 0.67 ) }
    dend_46 { pt3dadd( -60.4044, -138.105, -16.8719, 0.67 ) }
    dend_46 { pt3dadd( -61.2751, -140.169, -17.9934, 0.67 ) }
    dend_46 { pt3dadd( -62.7421, -143.201, -19.1912, 0.67 ) }
    dend_46 { pt3dadd( -63.8709, -145.263, -19.9396, 0.67 ) }
    dend_46 { pt3dadd( -65.8435, -148.857, -21.0199, 0.33 ) }
    dend_46 { pt3dadd( -67.1756, -151.192, -21.6697, 0.33 ) }
    dend_46 { pt3dadd( -68.3059, -152.592, -22.1039, 1.33 ) }
    dend_46 { pt3dadd( -70.6614, -154.146, -22.6417, 0.33 ) }
    dend_46 { pt3dadd( -71.9617, -154.628, -22.8114, 0.33 ) }
    dend_46 { pt3dadd( -73.5832, -155.061, -22.8609, 0.33 ) }
    dend_46 { pt3dadd( -75.3638, -155.417, -22.7867, 0.33 ) }
    dend_46 { pt3dadd( -78.0208, -155.823, -22.6503, 1.33 ) }
    dend_46 { pt3dadd( -82.9742, -156.595, -21.9784, 0.33 ) }
    dend_46 { pt3dadd( -84.4383, -156.807, -21.6918, 1.33 ) }
    dend_46 { pt3dadd( -88.3276, -157.358, -20.7619, 0.33 ) }
    dend_46 { pt3dadd( -90.5797, -157.681, -20.1451, 0.33 ) }
    dend_46 { pt3dadd( -93.0888, -158.062, -19.2511, 1.33 ) }
    dend_46 { pt3dadd( -97.8545, -158.891, -17.0138, 0.33 ) }
    dend_46 { pt3dadd( -99.1455, -159.152, -16.2725, 0.67 ) }
    dend_46 { pt3dadd( -100.518, -159.537, -15.3884, 0.33 ) }
    dend_46 { pt3dadd( -101.85, -159.997, -14.4524, 0.67 ) }
    dend_46 { pt3dadd( -104.492, -160.964, -12.1555, 0.67 ) }
    dend_46 { pt3dadd( -108.373, -162.524, -8.66696, 0.67 ) }
    dend_46 { pt3dadd( -110.567, -163.47, -6.72062, 1.33 ) }
    dend_46 { pt3dadd( -114.107, -165.155, -3.40261, 0.67 ) }
    dend_46 { pt3dadd( -117.223, -166.753, -0.326955, 0.67 ) }
    dend_46 { pt3dadd( -122.19, -169.315, 4.82051, 0.67 ) }
    dend_46 { pt3dadd( -126.615, -178.583, 5.69997, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 60/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 1.55247, -7.28927, -11.9987, 3.33 ) }
    dend_27 { pt3dadd( 2.67349, -9.19573, -12.7373, 3.33 ) }
    dend_27 { pt3dadd( 4.55305, -12.3922, -13.9757, 2.67 ) }
    dend_27 { pt3dadd( 6.49684, -15.6978, -15.2565, 2.67 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 64/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 12.3925, 3.90373, -6.39872, 2.67 ) }
    dend_20 { pt3dadd( 15.4754, 3.70924, -6.04346, 2.0 ) }
    dend_20 { pt3dadd( 22.3231, 3.27722, -5.25433, 2.0 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 10.9125, 5.23623, -3.89871, 2.0 ) }
    dend_17 { pt3dadd( 9.03008, 8.77304, -7.06256, 2.0 ) }
    dend_17 { pt3dadd( 7.46086, 11.7215, -9.70004, 1.33 ) }
    dend_17 { pt3dadd( 6.15411, 14.1767, -11.8963, 1.33 ) }
    dend_17 { pt3dadd( 4.04649, 18.1367, -15.4387, 1.33 ) }
    dend_17 { pt3dadd( 1.90323, 22.1637, -19.041, 1.33 ) }
    dend_17 { pt3dadd( -1.0028, 27.6238, -23.9254, 1.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 74/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 7.89247, 7.75773, 7.40129, 2.0 ) }
    dend_0 { pt3dadd( 7.45832, 11.9807, 11.7167, 2.0 ) }
    dend_0 { pt3dadd( 6.69546, 19.401, 19.2994, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 77/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.8361, 4.2492, 4.7437, 0.67 ) }
    axon_0 { pt3dadd( 24.733, 9.895, 4.7437, 0.67 ) }
    axon_0 { pt3dadd( 38.63, 15.5408, 4.7437, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 80/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -0.41703, 12.0195, -19.2439, 2.0 ) }
    dend_57 { pt3dadd( 1.19834, 18.334, -35.4031, 2.0 ) }
    dend_57 { pt3dadd( 1.58951, 19.8631, -39.3162, 2.0 ) }
    dend_57 { pt3dadd( 2.33618, 22.7819, -46.7855, 2.0 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -0.41703, 12.0195, -19.2439, 1.33 ) }
    dend_56 { pt3dadd( -2.01207, 13.7561, -19.6047, 1.33 ) }
    dend_56 { pt3dadd( -4.25499, 16.5527, -19.7153, 1.33 ) }
    dend_56 { pt3dadd( -7.25801, 20.3945, -19.6261, 1.33 ) }
    dend_56 { pt3dadd( -10.0072, 24.3199, -19.4273, 1.33 ) }
    dend_56 { pt3dadd( -12.806, 28.673, -19.1688, 1.33 ) }
    dend_56 { pt3dadd( -14.8987, 32.1547, -18.9453, 0.67 ) }
    dend_56 { pt3dadd( -17.1983, 36.1051, -18.6047, 0.67 ) }
    dend_56 { pt3dadd( -19.1526, 39.6416, -18.1674, 0.67 ) }
    dend_56 { pt3dadd( -21.8908, 45.399, -17.1953, 1.33 ) }
    dend_56 { pt3dadd( -22.5809, 47.1829, -16.928, 0.67 ) }
    dend_56 { pt3dadd( -22.9818, 48.3754, -16.8007, 0.67 ) }
    dend_56 { pt3dadd( -23.4166, 49.7267, -16.7447, 0.67 ) }
    dend_56 { pt3dadd( -23.9786, 51.4172, -16.781, 1.33 ) }
    dend_56 { pt3dadd( -24.6816, 53.5571, -16.7974, 0.33 ) }
    dend_56 { pt3dadd( -25.0872, 54.4154, -16.8078, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( -26.0593, 56.0705, -16.8325, 1.33 ) }
    dend_56 { pt3dadd( -27.1738, 58.0038, -16.8604, 0.67 ) }
    dend_56 { pt3dadd( -28.1294, 59.8931, -16.8819, 1.33 ) }
    dend_56 { pt3dadd( -29.0905, 61.964, -16.9016, 0.67 ) }
    dend_56 { pt3dadd( -29.8808, 63.7187, -16.9172, 0.67 ) }
    dend_56 { pt3dadd( -30.6787, 65.8437, -16.7321, 0.67 ) }
    dend_56 { pt3dadd( -31.5008, 68.3755, -16.3535, 0.67 ) }
    dend_56 { pt3dadd( -31.9508, 70.0088, -16.0885, 0.67 ) }
    dend_56 { pt3dadd( -32.3786, 71.9734, -15.7631, 0.67 ) }
    dend_56 { pt3dadd( -32.6565, 73.7777, -15.4783, 0.67 ) }
    dend_56 { pt3dadd( -33.3413, 78.9744, -14.7295, 0.67 ) }
    dend_56 { pt3dadd( -33.6871, 81.4984, -14.3956, 1.33 ) }
    dend_56 { pt3dadd( -34.1749, 84.1979, -14.0975, 0.33 ) }
    dend_56 { pt3dadd( -34.421, 85.4801, -14.0478, 0.67 ) }
    dend_56 { pt3dadd( -34.7711, 88.0727, -14.1199, 0.67 ) }
    dend_56 { pt3dadd( -35.0168, 90.3523, -14.36, 0.33 ) }
    dend_56 { pt3dadd( -35.1576, 91.9035, -14.6737, 1.33 ) }
    dend_56 { pt3dadd( -35.1569, 94.905, -15.538, 0.33 ) }
    dend_56 { pt3dadd( -34.9304, 97.9607, -16.5702, 0.67 ) }
    dend_56 { pt3dadd( -34.724, 100.868, -17.6457, 0.33 ) }
    dend_56 { pt3dadd( -34.6414, 102.089, -18.13, 0.33 ) }
    dend_56 { pt3dadd( -34.5024, 103.893, -18.7619, 2.0 ) }
    dend_56 { pt3dadd( -34.0477, 109.518, -19.947, 0.67 ) }
    dend_56 { pt3dadd( -33.7765, 112.208, -20.0904, 0.67 ) }
    dend_56 { pt3dadd( -33.5083, 115.073, -19.594, 0.33 ) }
    dend_56 { pt3dadd( -33.4811, 115.68, -19.4026, 0.33 ) }
    dend_56 { pt3dadd( -33.3029, 118.745, -18.124, 0.67 ) }
    dend_56 { pt3dadd( -33.1808, 122.967, -15.8124, 0.33 ) }
    dend_56 { pt3dadd( -33.1216, 125.172, -14.561, 1.33 ) }
    dend_56 { pt3dadd( -33.0958, 129.012, -12.6601, 0.33 ) }
    dend_56 { pt3dadd( -33.0906, 130.645, -11.9419, 0.33 ) }
    dend_56 { pt3dadd( -33.292, 134.973, -10.397, 0.67 ) }
    dend_56 { pt3dadd( -33.7527, 139.837, -9.12041, 0.67 ) }
    dend_56 { pt3dadd( -34.5306, 144.82, -8.22895, 0.67 ) }
    dend_56 { pt3dadd( -35.1218, 147.916, -7.7897, 0.33 ) }
    dend_56 { pt3dadd( -35.7194, 150.875, -7.38836, 1.33 ) }
    dend_56 { pt3dadd( -36.3395, 154.079, -6.75689, 0.33 ) }
    dend_56 { pt3dadd( -36.3395, 154.079, -6.75689, 0.67 ) }
    dend_56 { pt3dadd( -36.583, 155.571, -6.28686, 0.33 ) }
    dend_56 { pt3dadd( -36.7732, 156.792, -5.78234, 0.33 ) }
    dend_56 { pt3dadd( -37.1254, 160.768, -4.36198, 0.33 ) }
    dend_56 { pt3dadd( -37.3823, 162.895, -3.79525, 0.33 ) }
    dend_56 { pt3dadd( -37.4913, 163.761, -3.59823, 1.33 ) }
    dend_56 { pt3dadd( -37.7647, 165.936, -3.15314, 0.33 ) }
    dend_56 { pt3dadd( -37.8502, 167.112, -2.86173, 0.67 ) }
    dend_56 { pt3dadd( -38.096, 169.63, -2.32655, 0.33 ) }
    dend_56 { pt3dadd( -38.353, 172.145, -1.98611, 0.33 ) }
    dend_56 { pt3dadd( -38.4706, 173.262, -1.79096, 1.33 ) }
    dend_56 { pt3dadd( -38.7911, 176.417, -1.09497, 0.33 ) }
    dend_56 { pt3dadd( -38.8941, 180.121, 0.118086, 0.33 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -21.6071, -11.1179, -26.6249, 0.67 ) }
    dend_51 { pt3dadd( -24.8193, -13.3822, -26.5328, 0.67 ) }
    dend_51 { pt3dadd( -25.6751, -13.8425, -26.643, 0.67 ) }
    dend_51 { pt3dadd( -26.9182, -14.252, -27.1038, 0.67 ) }
    dend_51 { pt3dadd( -29.701, -14.9041, -28.2957, 0.67 ) }
    dend_51 { pt3dadd( -30.9212, -15.1902, -28.8165, 1.33 ) }
    dend_51 { pt3dadd( -34.2906, -15.7905, -30.3206, 0.33 ) }
    dend_51 { pt3dadd( -36.3361, -16.0157, -31.2948, 0.33 ) }
    dend_51 { pt3dadd( -39.5287, -16.0192, -32.7388, 1.33 ) }
    dend_51 { pt3dadd( -41.2606, -15.8111, -33.4304, 0.33 ) }
    dend_51 { pt3dadd( -42.7617, -15.542, -34.0292, 0.33 ) }
    dend_51 { pt3dadd( -44.7024, -15.1624, -34.7202, 1.33 ) }
    dend_51 { pt3dadd( -46.7933, -14.785, -35.3616, 0.67 ) }
    dend_51 { pt3dadd( -48.4962, -14.5583, -36.017, 0.67 ) }
    dend_51 { pt3dadd( -51.2436, -14.129, -37.2234, 0.67 ) }
    dend_51 { pt3dadd( -53.2158, -13.7511, -38.3401, 0.67 ) }
    dend_51 { pt3dadd( -55.3429, -13.3701, -39.8199, 0.33 ) }
    dend_51 { pt3dadd( -56.5799, -13.1748, -40.7887, 2.0 ) }
    dend_51 { pt3dadd( -59.1585, -12.7115, -43.0557, 0.67 ) }
    dend_51 { pt3dadd( -59.9484, -12.4993, -43.8376, 1.33 ) }
    dend_51 { pt3dadd( -61.942, -11.8865, -45.9066, 0.67 ) }
    dend_51 { pt3dadd( -64.1765, -11.061, -48.1638, 0.67 ) }
    dend_51 { pt3dadd( -65.0455, -10.7232, -49.0604, 0.33 ) }
    dend_51 { pt3dadd( -65.7206, -10.4671, -49.7145, 1.33 ) }
    dend_51 { pt3dadd( -67.6243, -9.76984, -51.4148, 0.33 ) }
    dend_51 { pt3dadd( -69.0, -9.30621, -52.5465, 0.33 ) }
    dend_51 { pt3dadd( -69.9494, -8.94317, -53.2657, 1.33 ) }
    dend_51 { pt3dadd( -72.5325, -7.7764, -55.134, 0.33 ) }
    dend_51 { pt3dadd( -74.2795, -6.977, -56.4943, 0.33 ) }
    dend_51 { pt3dadd( -75.2987, -6.48371, -57.3004, 0.67 ) }
    dend_51 { pt3dadd( -76.2215, -5.93284, -58.1127, 1.33 ) }
    dend_51 { pt3dadd( -77.4642, -4.92242, -59.4142, 0.33 ) }
    dend_51 { pt3dadd( -77.8283, -4.52722, -59.9029, 0.67 ) }
    dend_51 { pt3dadd( -78.9786, -2.90507, -61.8241, 0.33 ) }
    dend_51 { pt3dadd( -79.3391, -2.28702, -62.573, 1.33 ) }
    dend_51 { pt3dadd( -80.6491, 0.148794, -65.5985, 0.33 ) }
    dend_51 { pt3dadd( -80.9351, 0.689142, -66.2813, 0.67 ) }
    dend_51 { pt3dadd( -81.8966, 2.34612, -68.4485, 0.33 ) }
    dend_51 { pt3dadd( -82.2053, 2.91276, -69.1433, 0.33 ) }
    dend_51 { pt3dadd( -82.4042, 3.222, -69.4947, 0.67 ) }
    dend_51 { pt3dadd( -82.7868, 3.69459, -70.0572, 0.33 ) }
    dend_51 { pt3dadd( -83.082, 3.96673, -70.3824, 0.67 ) }
    dend_51 { pt3dadd( -84.9762, 5.43334, -72.1857, 0.33 ) }
    dend_51 { pt3dadd( -85.4234, 5.72954, -72.5434, 0.67 ) }
    dend_51 { pt3dadd( -88.177, 7.40985, -74.6278, 0.33 ) }
    dend_51 { pt3dadd( -89.3447, 8.05671, -75.4282, 1.33 ) }
    dend_51 { pt3dadd( -90.4368, 8.61747, -76.0989, 0.33 ) }
    dend_51 { pt3dadd( -90.8605, 8.81328, -76.3069, 0.67 ) }
    dend_51 { pt3dadd( -91.8445, 9.23945, -76.7021, 0.33 ) }
    dend_51 { pt3dadd( -92.3416, 9.43889, -76.8857, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -93.4313, 9.84188, -77.2796, 0.33 ) }
    dend_51 { pt3dadd( -93.9961, 10.0617, -77.4943, 0.67 ) }
    dend_51 { pt3dadd( -95.7799, 10.7717, -78.2191, 0.33 ) }
    dend_51 { pt3dadd( -97.5415, 11.4536, -78.9286, 0.67 ) }
    dend_51 { pt3dadd( -98.9525, 11.9991, -79.4951, 0.33 ) }
    dend_51 { pt3dadd( -100.81, 12.7313, -80.3021, 1.33 ) }
    dend_51 { pt3dadd( -103.421, 13.8215, -81.4646, 0.33 ) }
    dend_51 { pt3dadd( -103.994, 14.0664, -81.7471, 0.67 ) }
    dend_51 { pt3dadd( -105.484, 14.7396, -82.564, 0.33 ) }
    dend_51 { pt3dadd( -106.067, 15.0017, -82.892, 0.67 ) }
    dend_51 { pt3dadd( -108.685, 16.2351, -84.5779, 0.33 ) }
    dend_51 { pt3dadd( -109.675, 16.7191, -85.2721, 0.67 ) }
    dend_51 { pt3dadd( -111.945, 17.8555, -87.0635, 0.33 ) }
    dend_51 { pt3dadd( -112.984, 18.4179, -87.9035, 1.33 ) }
    dend_51 { pt3dadd( -114.007, 19.007, -88.7476, 0.33 ) }
    dend_51 { pt3dadd( -114.716, 19.381, -89.3249, 0.67 ) }
    dend_51 { pt3dadd( -115.446, 19.7204, -89.8711, 0.33 ) }
    dend_51 { pt3dadd( -116.079, 19.9593, -90.3288, 0.67 ) }
    dend_51 { pt3dadd( -117.311, 20.3778, -91.1371, 0.33 ) }
    dend_51 { pt3dadd( -117.687, 20.4781, -91.3655, 0.67 ) }
    dend_51 { pt3dadd( -120.617, 21.1297, -92.9842, 0.33 ) }
    dend_51 { pt3dadd( -121.418, 21.2848, -93.383, 0.67 ) }
    dend_51 { pt3dadd( -123.345, 21.6152, -94.2869, 0.33 ) }
    dend_51 { pt3dadd( -124.726, 21.8519, -94.8595, 1.33 ) }
    dend_51 { pt3dadd( -126.268, 22.1076, -95.4183, 0.33 ) }
    dend_51 { pt3dadd( -127.454, 22.3913, -95.6907, 0.67 ) }
    dend_51 { pt3dadd( -128.374, 22.6716, -95.7767, 0.33 ) }
    dend_51 { pt3dadd( -128.841, 22.8881, -95.8334, 0.67 ) }
    dend_51 { pt3dadd( -130.41, 23.819, -95.9922, 0.33 ) }
    dend_51 { pt3dadd( -130.832, 24.0853, -96.0409, 0.67 ) }
    dend_51 { pt3dadd( -134.343, 26.4697, -96.5823, 0.33 ) }
    dend_51 { pt3dadd( -134.717, 26.7273, -96.6563, 0.67 ) }
    dend_51 { pt3dadd( -138.275, 29.2323, -97.3873, 0.33 ) }
    dend_51 { pt3dadd( -139.092, 29.8523, -97.5661, 1.33 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 34/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -21.6071, -11.1179, -26.6249, 0.67 ) }
    dend_48 { pt3dadd( -20.1525, -11.4363, -32.0366, 0.67 ) }
    dend_48 { pt3dadd( -19.8353, -11.5196, -33.3263, 0.33 ) }
    dend_48 { pt3dadd( -19.293, -11.6453, -35.5431, 1.33 ) }
    dend_48 { pt3dadd( -18.3119, -11.8688, -40.8532, 0.67 ) }
    dend_48 { pt3dadd( -17.2333, -12.1779, -47.9578, 0.33 ) }
    dend_48 { pt3dadd( -17.0082, -12.2507, -49.6076, 1.33 ) }
    dend_48 { pt3dadd( -16.5514, -12.4489, -53.8951, 0.33 ) }
    dend_48 { pt3dadd( -16.3304, -12.5639, -56.4252, 1.33 ) }
    dend_48 { pt3dadd( -15.5071, -12.9523, -66.6131, 0.33 ) }
    dend_48 { pt3dadd( -15.4284, -12.9912, -67.7124, 0.67 ) }
    dend_48 { pt3dadd( -15.1148, -13.2129, -72.751, 0.33 ) }
    dend_48 { pt3dadd( -15.0057, -13.2824, -74.6656, 1.33 ) }
    dend_48 { pt3dadd( -14.4464, -13.6012, -84.6853, 0.67 ) }
    dend_48 { pt3dadd( -14.248, -13.7201, -87.7672, 1.33 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 49/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 6.49684, -15.6978, -15.2565, 2.0 ) }
    dend_39 { pt3dadd( 11.9125, -19.283, -19.5776, 2.0 ) }
    dend_39 { pt3dadd( 14.2724, -20.8453, -21.4605, 2.0 ) }
    dend_39 { pt3dadd( 17.9909, -23.3069, -24.4274, 2.0 ) }
    dend_39 { pt3dadd( 21.743, -25.7908, -27.4212, 2.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.49684, -15.6978, -15.2565, 1.33 ) }
    dend_28 { pt3dadd( 6.00072, -21.721, -14.0632, 1.33 ) }
    dend_28 { pt3dadd( 5.63388, -26.1745, -13.1809, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 57/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 22.3231, 3.27722, -5.25433, 2.0 ) }
    dend_22 { pt3dadd( 27.4588, 4.59474, -6.83006, 2.0 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 59/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 22.3231, 3.27722, -5.25433, 0.67 ) }
    dend_21 { pt3dadd( 28.7183, -0.872056, -3.29241, 0.67 ) }
    dend_21 { pt3dadd( 30.5407, -1.70659, -2.96887, 0.67 ) }
    dend_21 { pt3dadd( 32.3326, -2.33697, -2.66844, 0.67 ) }
    dend_21 { pt3dadd( 33.3984, -2.7158, -2.48185, 0.67 ) }
    dend_21 { pt3dadd( 39.3652, -4.85433, -1.4514, 0.67 ) }
    dend_21 { pt3dadd( 43.1142, -6.21455, -0.823385, 0.67 ) }
    dend_21 { pt3dadd( 46.2287, -7.10938, -0.666685, 0.67 ) }
    dend_21 { pt3dadd( 49.7221, -7.9875, -0.472225, 0.67 ) }
    dend_21 { pt3dadd( 51.7372, -8.43135, -0.345795, 0.67 ) }
    dend_21 { pt3dadd( 54.9966, -9.17454, -0.0802627, 0.67 ) }
    dend_21 { pt3dadd( 57.1079, -9.65944, 0.150442, 0.67 ) }
    dend_21 { pt3dadd( 61.0404, -10.7628, 0.550442, 0.67 ) }
    dend_21 { pt3dadd( 63.699, -11.6883, 0.807012, 0.67 ) }
    dend_21 { pt3dadd( 65.15, -12.1892, 0.914755, 0.67 ) }
    dend_21 { pt3dadd( 68.0491, -13.1348, 1.13081, 0.67 ) }
    dend_21 { pt3dadd( 71.0545, -14.2359, 1.25296, 0.67 ) }
    dend_21 { pt3dadd( 74.4189, -15.6018, 1.29421, 0.67 ) }
    dend_21 { pt3dadd( 76.9098, -16.6907, 1.26071, 0.67 ) }
    dend_21 { pt3dadd( 79.0355, -17.5435, 1.16265, 0.67 ) }
    dend_21 { pt3dadd( 81.7707, -18.5487, 0.866329, 0.67 ) }
    dend_21 { pt3dadd( 84.9082, -19.6766, 0.336051, 0.67 ) }
    dend_21 { pt3dadd( 86.8288, -20.387, -0.0804716, 0.67 ) }
    dend_21 { pt3dadd( 88.6609, -21.0519, -0.653835, 0.33 ) }
    dend_21 { pt3dadd( 89.4722, -21.3229, -0.959005, 0.67 ) }
    dend_21 { pt3dadd( 92.2208, -22.2119, -2.12562, 0.33 ) }
    dend_21 { pt3dadd( 92.9485, -22.4104, -2.4325, 0.33 ) }
    dend_21 { pt3dadd( 95.3461, -22.8204, -3.31094, 1.33 ) }
    dend_21 { pt3dadd( 98.3866, -22.9982, -4.24648, 0.33 ) }
    dend_21 { pt3dadd( 99.2674, -22.9643, -4.43746, 0.67 ) }
    dend_21 { pt3dadd( 100.529, -22.7554, -4.40069, 0.67 ) }
    dend_21 { pt3dadd( 102.283, -22.3333, -3.99158, 0.67 ) }
    dend_21 { pt3dadd( 103.784, -21.9318, -3.52517, 0.67 ) }
    dend_21 { pt3dadd( 106.886, -21.0755, -2.04805, 0.67 ) }
    dend_21 { pt3dadd( 108.826, -20.5662, -0.944955, 0.67 ) }
    dend_21 { pt3dadd( 112.924, -19.6798, 1.50641, 0.33 ) }
    dend_21 { pt3dadd( 114.554, -19.4264, 2.52638, 0.67 ) }
    dend_21 { pt3dadd( 116.521, -19.2344, 3.8023, 0.67 ) }
    dend_21 { pt3dadd( 119.87, -19.2816, 6.20157, 0.67 ) }
    dend_21 { pt3dadd( 120.996, -19.4443, 7.06473, 0.33 ) }
    dend_21 { pt3dadd( 121.817, -19.6169, 7.85637, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 122.394, -19.8145, 8.46498, 0.33 ) }
    dend_21 { pt3dadd( 122.787, -19.9888, 8.94511, 0.67 ) }
    dend_21 { pt3dadd( 124.508, -21.1123, 11.4769, 0.33 ) }
    dend_21 { pt3dadd( 124.834, -21.3879, 11.9625, 0.67 ) }
    dend_21 { pt3dadd( 126.434, -22.9788, 15.0071, 0.67 ) }
    dend_21 { pt3dadd( 134.193, -25.3439, 17.8958, 0.67 ) }
    dend_21 { pt3dadd( 142.423, -25.8274, 20.2951, 0.67 ) }
    dend_21 { pt3dadd( 150.312, -27.0259, 23.4886, 0.67 ) }
    dend_21 { pt3dadd( 157.725, -29.3365, 27.213, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.0028, 27.6238, -23.9254, 0.67 ) }
    dend_19 { pt3dadd( -0.0917901, 30.0674, -26.3316, 0.67 ) }
    dend_19 { pt3dadd( 1.08309, 33.195, -30.2468, 0.67 ) }
    dend_19 { pt3dadd( 2.50394, 37.116, -35.3443, 0.67 ) }
    dend_19 { pt3dadd( 2.86017, 38.1607, -36.6772, 0.67 ) }
    dend_19 { pt3dadd( 3.41944, 39.9793, -38.9498, 0.67 ) }
    dend_19 { pt3dadd( 4.12517, 42.5916, -42.2629, 0.67 ) }
    dend_19 { pt3dadd( 4.95995, 45.7911, -46.7002, 0.33 ) }
    dend_19 { pt3dadd( 5.13838, 46.8261, -48.2991, 1.33 ) }
    dend_19 { pt3dadd( 5.13823, 47.6869, -49.7468, 0.33 ) }
    dend_19 { pt3dadd( 5.12356, 48.1445, -50.7123, 0.33 ) }
    dend_19 { pt3dadd( 5.09548, 49.2831, -53.5218, 0.67 ) }
    dend_19 { pt3dadd( 5.10692, 50.096, -55.6, 0.33 ) }
    dend_19 { pt3dadd( 5.3243, 51.1519, -58.6142, 1.33 ) }
    dend_19 { pt3dadd( 6.16606, 53.2069, -65.6973, 0.67 ) }
    dend_19 { pt3dadd( 6.70111, 53.9794, -68.7316, 0.67 ) }
    dend_19 { pt3dadd( 6.97536, 54.2613, -69.8649, 0.33 ) }
    dend_19 { pt3dadd( 7.18176, 54.4165, -70.4853, 1.33 ) }
    dend_19 { pt3dadd( 8.37952, 55.1104, -73.2894, 0.33 ) }
    dend_19 { pt3dadd( 8.64039, 55.2495, -73.7637, 0.67 ) }
    dend_19 { pt3dadd( 10.2801, 56.2092, -76.2777, 0.33 ) }
    dend_19 { pt3dadd( 10.8622, 56.6469, -77.2857, 1.33 ) }
    dend_19 { pt3dadd( 11.4676, 57.2034, -78.5305, 0.33 ) }
    dend_19 { pt3dadd( 12.1621, 57.9941, -80.3465, 0.67 ) }
    dend_19 { pt3dadd( 13.146, 59.4023, -83.4485, 0.33 ) }
    dend_19 { pt3dadd( 13.6023, 60.1736, -85.0599, 0.67 ) }
    dend_19 { pt3dadd( 13.8135, 60.5999, -85.9457, 0.33 ) }
    dend_19 { pt3dadd( 14.2595, 61.7254, -88.2411, 0.67 ) }
    dend_19 { pt3dadd( 14.8695, 63.7776, -92.1381, 0.33 ) }
    dend_19 { pt3dadd( 14.9278, 64.0444, -92.5912, 0.67 ) }
    dend_19 { pt3dadd( 15.1684, 65.3804, -94.7003, 0.33 ) }
    dend_19 { pt3dadd( 15.3167, 66.4266, -96.3106, 0.67 ) }
    dend_19 { pt3dadd( 15.3669, 66.8462, -96.9357, 0.33 ) }
    dend_19 { pt3dadd( 15.4643, 67.4532, -97.7086, 0.67 ) }
    dend_19 { pt3dadd( 15.9198, 69.6356, -100.328, 0.33 ) }
    dend_19 { pt3dadd( 16.1277, 70.3161, -101.197, 0.67 ) }
    dend_19 { pt3dadd( 16.4359, 70.9994, -102.096, 0.33 ) }
    dend_19 { pt3dadd( 16.5921, 71.2839, -102.51, 0.67 ) }
    dend_19 { pt3dadd( 17.2254, 72.3379, -104.163, 0.33 ) }
    dend_19 { pt3dadd( 18.0331, 73.868, -106.452, 0.67 ) }
    dend_19 { pt3dadd( 18.3349, 74.5775, -107.4, 0.33 ) }
    dend_19 { pt3dadd( 18.4949, 75.1204, -108.043, 0.67 ) }
    dend_19 { pt3dadd( 19.2793, 79.002, -112.162, 0.33 ) }
    dend_19 { pt3dadd( 19.2924, 79.3449, -112.498, 0.67 ) }
    dend_19 { pt3dadd( 19.1598, 81.0297, -113.993, 0.33 ) }
    dend_19 { pt3dadd( 19.0049, 82.057, -114.73, 1.33 ) }
    dend_19 { pt3dadd( 18.8127, 83.0089, -115.387, 0.33 ) }
    dend_19 { pt3dadd( 18.6045, 83.8985, -115.954, 0.67 ) }
    dend_19 { pt3dadd( 17.7032, 87.524, -117.777, 0.33 ) }
    dend_19 { pt3dadd( 17.5515, 88.1737, -118.138, 1.33 ) }
    dend_19 { pt3dadd( 17.2769, 89.6152, -119.076, 0.33 ) }
    dend_19 { pt3dadd( 16.9948, 91.1803, -120.181, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 61/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.0028, 27.6238, -23.9254, 0.67 ) }
    dend_18 { pt3dadd( -2.26506, 31.2265, -22.6274, 0.67 ) }
    dend_18 { pt3dadd( -3.24716, 34.6034, -21.5321, 0.67 ) }
    dend_18 { pt3dadd( -3.74227, 36.7243, -21.0004, 0.67 ) }
    dend_18 { pt3dadd( -4.12482, 38.9874, -20.506, 0.67 ) }
    dend_18 { pt3dadd( -4.37707, 40.7847, -20.2395, 1.33 ) }
    dend_18 { pt3dadd( -4.60569, 42.5659, -20.0018, 0.67 ) }
    dend_18 { pt3dadd( -4.74397, 44.6129, -19.7452, 0.67 ) }
    dend_18 { pt3dadd( -4.71429, 46.943, -19.5659, 1.33 ) }
    dend_18 { pt3dadd( -4.32482, 49.9902, -19.2423, 0.67 ) }
    dend_18 { pt3dadd( -3.30404, 53.9189, -18.6674, 0.67 ) }
    dend_18 { pt3dadd( -2.73753, 55.4695, -18.2121, 0.67 ) }
    dend_18 { pt3dadd( -2.20958, 56.7317, -17.7698, 0.67 ) }
    dend_18 { pt3dadd( -0.65188, 59.9886, -16.3596, 0.67 ) }
    dend_18 { pt3dadd( 1.13586, 63.0087, -14.6592, 0.67 ) }
    dend_18 { pt3dadd( 2.12204, 64.264, -13.7494, 1.33 ) }
    dend_18 { pt3dadd( 5.12982, 67.1608, -10.925, 1.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 78/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 6.69546, 19.401, 19.2994, 1.33 ) }
    dend_12 { pt3dadd( -0.7922, 31.581, 14.429, 1.33 ) }
    dend_12 { pt3dadd( -2.28772, 34.0137, 13.4562, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 81/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.69546, 19.401, 19.2994, 0.67 ) }
    dend_1 { pt3dadd( -3.5991, 14.9993, 19.9357, 0.67 ) }
    dend_1 { pt3dadd( -6.11475, 13.9237, 20.0911, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 84/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 38.63, 15.5408, 4.7437, 0.668796 ) }
    axon_1 { pt3dadd( 52.5269, 21.1866, 4.7437, 0.668796 ) }
    axon_1 { pt3dadd( 66.4239, 26.8324, 4.7437, 0.668796 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.33618, 22.7819, -46.7855, 1.33 ) }
    dend_61 { pt3dadd( 1.12152, 23.6667, -49.5719, 1.33 ) }
    dend_61 { pt3dadd( 0.07577, 23.8641, -51.1031, 0.67 ) }
    dend_61 { pt3dadd( -1.46539, 24.0267, -53.5867, 0.67 ) }
    dend_61 { pt3dadd( -3.53828, 24.3929, -57.9363, 0.67 ) }
    dend_61 { pt3dadd( -6.34754, 24.995, -64.0719, 0.67 ) }
    dend_61 { pt3dadd( -7.89683, 25.3228, -67.3303, 1.33 ) }
    dend_61 { pt3dadd( -9.02973, 25.5894, -70.2464, 0.33 ) }
    dend_61 { pt3dadd( -10.8408, 25.8005, -75.8685, 1.33 ) }
    dend_61 { pt3dadd( -12.673, 25.4292, -82.4601, 0.67 ) }
    dend_61 { pt3dadd( -13.1725, 25.0217, -84.9419, 0.67 ) }
    dend_61 { pt3dadd( -13.3467, 24.6982, -86.4046, 1.33 ) }
    dend_61 { pt3dadd( -13.8937, 23.1515, -93.3972, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_61 { pt3dadd( -14.2946, 21.7689, -98.316, 0.67 ) }
    dend_61 { pt3dadd( -14.6923, 20.2507, -102.77, 1.33 ) }
    dend_61 { pt3dadd( -14.9002, 19.5469, -104.703, 0.67 ) }
    dend_61 { pt3dadd( -16.0076, 16.3397, -113.865, 0.67 ) }
    dend_61 { pt3dadd( -16.7774, 14.8649, -118.644, 0.33 ) }
    dend_61 { pt3dadd( -18.0538, 13.2713, -124.495, 0.67 ) }
    dend_61 { pt3dadd( -20.2435, 11.543, -132.733, 1.33 ) }
    dend_61 { pt3dadd( -22.1731, 10.5535, -139.35, 0.33 ) }
    dend_61 { pt3dadd( -23.3836, 10.1391, -143.285, 1.33 ) }
    dend_61 { pt3dadd( -25.3337, 9.65347, -149.253, 0.33 ) }
    dend_61 { pt3dadd( -25.9566, 9.5164, -151.252, 0.67 ) }
    dend_61 { pt3dadd( -28.6608, 9.10336, -160.189, 0.33 ) }
    dend_61 { pt3dadd( -30.4704, 8.72011, -165.641, 1.33 ) }
    dend_61 { pt3dadd( -34.7426, 7.55837, -178.294, 0.33 ) }
    dend_61 { pt3dadd( -35.0254, 7.46216, -179.093, 1.33 ) }
    dend_61 { pt3dadd( -38.6154, 5.9704, -188.819, 0.33 ) }
    dend_61 { pt3dadd( -38.7438, 5.91086, -189.164, 1.33 ) }
    dend_61 { pt3dadd( -42.3784, 3.89769, -198.537, 0.33 ) }
    dend_61 { pt3dadd( -43.8867, 3.05519, -201.914, 1.33 ) }
    dend_61 { pt3dadd( -45.9327, 2.02781, -205.564, 0.33 ) }
    dend_61 { pt3dadd( -47.2281, 1.44814, -207.686, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 2.33618, 22.7819, -46.7855, 0.67 ) }
    dend_58 { pt3dadd( 1.89166, 25.286, -47.0461, 0.67 ) }
    dend_58 { pt3dadd( 1.95446, 28.7885, -48.2463, 0.67 ) }
    dend_58 { pt3dadd( 2.00348, 31.523, -49.1832, 0.67 ) }
    dend_58 { pt3dadd( 2.08233, 35.9205, -50.69, 0.67 ) }
    dend_58 { pt3dadd( 2.1405, 39.1651, -51.8018, 1.33 ) }
    dend_58 { pt3dadd( 2.21974, 43.5848, -53.3162, 0.67 ) }
    dend_58 { pt3dadd( 3.22954, 48.1283, -55.1188, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 29/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -139.092, 29.8523, -97.5661, 0.33 ) }
    dend_53 { pt3dadd( -140.557, 32.1395, -99.9781, 0.33 ) }
    dend_53 { pt3dadd( -142.17, 35.0305, -103.194, 1.33 ) }
    dend_53 { pt3dadd( -142.912, 36.4011, -104.685, 0.33 ) }
    dend_53 { pt3dadd( -143.337, 37.3807, -105.758, 1.33 ) }
    dend_53 { pt3dadd( -144.942, 41.5567, -110.371, 0.33 ) }
    dend_53 { pt3dadd( -145.322, 42.6374, -111.55, 2.0 ) }
    dend_53 { pt3dadd( -146.671, 47.4853, -116.568, 0.33 ) }
    dend_53 { pt3dadd( -146.95, 48.6192, -117.617, 1.33 ) }
    dend_53 { pt3dadd( -148.102, 53.6489, -122.138, 0.33 ) }
    dend_53 { pt3dadd( -148.223, 54.2316, -122.612, 0.67 ) }
    dend_53 { pt3dadd( -148.536, 56.0631, -123.767, 0.33 ) }
    dend_53 { pt3dadd( -149.179, 59.6436, -125.512, 0.67 ) }
    dend_53 { pt3dadd( -149.566, 61.7123, -126.056, 0.33 ) }
    dend_53 { pt3dadd( -149.647, 62.0703, -126.158, 0.67 ) }
    dend_53 { pt3dadd( -150.144, 63.8316, -126.632, 0.33 ) }
    dend_53 { pt3dadd( -150.419, 64.8084, -126.935, 1.33 ) }
    dend_53 { pt3dadd( -151.871, 70.0642, -128.975, 0.33 ) }
    dend_53 { pt3dadd( -152.132, 71.04, -129.449, 0.67 ) }
    dend_53 { pt3dadd( -153.215, 75.307, -131.69, 0.33 ) }
    dend_53 { pt3dadd( -153.391, 76.0203, -132.083, 0.67 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 50/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -139.092, 29.8523, -97.5661, 0.33 ) }
    dend_52 { pt3dadd( -137.306, 29.9309, -93.7461, 0.33 ) }
    dend_52 { pt3dadd( -136.88, 29.9497, -92.8331, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 53/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.248, -13.7201, -87.7672, 0.33 ) }
    dend_50 { pt3dadd( -14.49, -15.5715, -95.6238, 0.33 ) }
    dend_50 { pt3dadd( -14.8622, -16.9572, -102.178, 0.33 ) }
    dend_50 { pt3dadd( -15.0227, -17.4708, -105.045, 0.67 ) }
    dend_50 { pt3dadd( -15.7261, -19.4484, -116.729, 0.33 ) }
    dend_50 { pt3dadd( -15.9997, -20.2206, -121.649, 1.33 ) }
    dend_50 { pt3dadd( -17.0224, -23.107, -140.04, 0.33 ) }
    dend_50 { pt3dadd( -17.2117, -23.4698, -142.928, 1.33 ) }
    dend_50 { pt3dadd( -18.0712, -24.6183, -153.625, 0.33 ) }
    dend_50 { pt3dadd( -18.1452, -24.7015, -154.597, 1.33 ) }
    dend_50 { pt3dadd( -18.9383, -25.2727, -164.096, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -14.248, -13.7201, -87.7672, 0.67 ) }
    dend_49 { pt3dadd( -14.0552, -13.2296, -89.3651, 0.67 ) }
    dend_49 { pt3dadd( -13.7554, -12.3323, -92.2028, 1.33 ) }
    dend_49 { pt3dadd( -13.1242, -10.0276, -99.4431, 0.33 ) }
    dend_49 { pt3dadd( -13.0617, -9.61544, -100.692, 0.67 ) }
    dend_49 { pt3dadd( -12.9371, -7.42959, -107.413, 0.33 ) }
    dend_49 { pt3dadd( -12.946, -7.30235, -107.81, 1.33 ) }
    dend_49 { pt3dadd( -13.3102, -5.52679, -113.058, 0.33 ) }
    dend_49 { pt3dadd( -13.4969, -4.92631, -114.757, 0.67 ) }
    dend_49 { pt3dadd( -14.0304, -3.53718, -118.748, 0.33 ) }
    dend_49 { pt3dadd( -14.5465, -2.08123, -122.529, 0.67 ) }
    dend_49 { pt3dadd( -15.1484, -0.125765, -127.047, 0.33 ) }
    dend_49 { pt3dadd( -15.2083, 0.111085, -127.531, 1.33 ) }
    dend_49 { pt3dadd( -15.9907, 4.16639, -134.775, 0.33 ) }
    dend_49 { pt3dadd( -16.1255, 6.02787, -137.632, 1.33 ) }
    dend_49 { pt3dadd( -15.9845, 8.48527, -140.77, 0.33 ) }
    dend_49 { pt3dadd( -15.8251, 9.7974, -142.198, 0.67 ) }
    dend_49 { pt3dadd( -15.3504, 12.1507, -144.383, 0.33 ) }
    dend_49 { pt3dadd( -14.9689, 13.8074, -145.76, 0.67 ) }
    dend_49 { pt3dadd( -13.9518, 16.7275, -146.886, 0.33 ) }
    dend_49 { pt3dadd( -13.5779, 17.554, -147.042, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 85/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 21.743, -25.7908, -27.4212, 2.0 ) }
    dend_43 { pt3dadd( 22.5327, -29.9106, -25.2194, 2.0 ) }
    dend_43 { pt3dadd( 25.816, -41.2217, -20.3669, 2.0 ) }
    dend_43 { pt3dadd( 27.2732, -45.6354, -18.4706, 2.0 ) }
    dend_43 { pt3dadd( 27.2732, -45.6354, -18.4706, 2.0 ) }
    dend_43 { pt3dadd( 29.7887, -51.5962, -15.3902, 1.33 ) }
    dend_43 { pt3dadd( 31.8069, -55.8564, -12.8438, 1.33 ) }
    dend_43 { pt3dadd( 35.0472, -61.6086, -8.81382, 0.67 ) }
    dend_43 { pt3dadd( 37.1347, -64.5133, -6.58149, 0.67 ) }
    dend_43 { pt3dadd( 39.3163, -67.6618, -3.77779, 0.67 ) }
    dend_43 { pt3dadd( 40.0361, -68.7935, -2.74928, 1.33 ) }
    dend_43 { pt3dadd( 42.2376, -73.0831, 1.13584, 0.67 ) }
    dend_43 { pt3dadd( 43.8473, -76.62, 4.08547, 0.67 ) }
    dend_43 { pt3dadd( 44.3517, -77.9609, 5.2096, 0.67 ) }
    dend_43 { pt3dadd( 45.2575, -81.1497, 6.85738, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 45.545, -82.7387, 7.40802, 0.67 ) }
    dend_43 { pt3dadd( 45.7881, -85.0223, 8.00358, 1.33 ) }
    dend_43 { pt3dadd( 46.0353, -89.0845, 8.54589, 0.67 ) }
    dend_43 { pt3dadd( 46.2205, -92.5595, 8.99229, 0.67 ) }
    dend_43 { pt3dadd( 46.3549, -95.195, 9.36664, 0.33 ) }
    dend_43 { pt3dadd( 46.4651, -98.3951, 9.82242, 1.33 ) }
    dend_43 { pt3dadd( 46.5822, -101.085, 10.4045, 0.67 ) }
    dend_43 { pt3dadd( 46.775, -103.059, 10.9029, 1.33 ) }
    dend_43 { pt3dadd( 48.0098, -109.845, 12.809, 0.67 ) }
    dend_43 { pt3dadd( 48.831, -113.01, 13.6264, 0.67 ) }
    dend_43 { pt3dadd( 49.3737, -115.036, 14.094, 0.67 ) }
    dend_43 { pt3dadd( 50.4608, -118.907, 14.826, 0.67 ) }
    dend_43 { pt3dadd( 51.2869, -121.709, 15.3562, 0.67 ) }
    dend_43 { pt3dadd( 52.1688, -124.429, 15.8337, 1.33 ) }
    dend_43 { pt3dadd( 53.0405, -126.698, 16.1604, 0.67 ) }
    dend_43 { pt3dadd( 53.5983, -128.314, 16.3021, 0.67 ) }
    dend_43 { pt3dadd( 54.2881, -130.008, 16.3799, 0.67 ) }
    dend_43 { pt3dadd( 55.378, -132.53, 16.3844, 0.67 ) }
    dend_43 { pt3dadd( 56.521, -135.449, 16.5285, 0.67 ) }
    dend_43 { pt3dadd( 57.0631, -137.277, 16.7765, 1.33 ) }
    dend_43 { pt3dadd( 57.7755, -139.533, 17.2199, 0.67 ) }
    dend_43 { pt3dadd( 58.9508, -142.839, 18.3189, 0.67 ) }
    dend_43 { pt3dadd( 59.4765, -144.142, 18.8694, 0.67 ) }
    dend_43 { pt3dadd( 60.2567, -146.01, 19.6948, 1.33 ) }
    dend_43 { pt3dadd( 61.9551, -150.404, 22.0497, 0.33 ) }
    dend_43 { pt3dadd( 63.2593, -153.77, 23.9627, 0.67 ) }
    dend_43 { pt3dadd( 64.8978, -157.952, 26.5072, 0.67 ) }
    dend_43 { pt3dadd( 65.7482, -160.266, 27.9888, 1.33 ) }
    dend_43 { pt3dadd( 66.9665, -163.26, 29.9288, 0.67 ) }
    dend_43 { pt3dadd( 69.2042, -167.768, 32.737, 0.67 ) }
    dend_43 { pt3dadd( 70.0537, -169.13, 33.47, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 21.743, -25.7908, -27.4212, 0.67 ) }
    dend_40 { pt3dadd( 24.3099, -23.2542, -27.4425, 0.67 ) }
    dend_40 { pt3dadd( 25.5903, -22.1909, -27.4613, 0.67 ) }
    dend_40 { pt3dadd( 29.1628, -19.1404, -27.5392, 0.67 ) }
    dend_40 { pt3dadd( 30.8355, -17.7234, -27.5225, 0.33 ) }
    dend_40 { pt3dadd( 32.8218, -16.3537, -27.7583, 1.33 ) }
    dend_40 { pt3dadd( 34.3584, -15.4615, -28.2959, 0.67 ) }
    dend_40 { pt3dadd( 35.4071, -14.861, -28.9721, 0.67 ) }
    dend_40 { pt3dadd( 36.9823, -13.9263, -30.2692, 1.33 ) }
    dend_40 { pt3dadd( 38.2629, -13.0732, -31.5285, 0.67 ) }
    dend_40 { pt3dadd( 41.2935, -10.4938, -35.005, 1.33 ) }
    dend_40 { pt3dadd( 44.6276, -7.07371, -39.2274, 0.67 ) }
    dend_40 { pt3dadd( 47.1803, -4.20183, -42.5618, 0.67 ) }
    dend_40 { pt3dadd( 48.1991, -2.96713, -43.8977, 0.67 ) }
    dend_40 { pt3dadd( 49.1959, -1.64218, -45.1488, 1.33 ) }
    dend_40 { pt3dadd( 49.9153, -0.555507, -46.0095, 0.67 ) }
    dend_40 { pt3dadd( 51.5004, 1.62416, -47.8721, 1.33 ) }
    dend_40 { pt3dadd( 52.9629, 3.34499, -49.6313, 0.67 ) }
    dend_40 { pt3dadd( 53.9618, 4.35168, -50.8746, 0.67 ) }
    dend_40 { pt3dadd( 55.5019, 5.6383, -52.8961, 1.33 ) }
    dend_40 { pt3dadd( 58.4663, 7.69715, -57.0793, 0.67 ) }
    dend_40 { pt3dadd( 63.5084, 10.6779, -64.4865, 0.33 ) }
    dend_40 { pt3dadd( 64.8724, 11.2493, -66.4991, 0.33 ) }
    dend_40 { pt3dadd( 65.4873, 11.3988, -67.4132, 0.67 ) }
    dend_40 { pt3dadd( 67.4973, 11.6477, -70.1633, 0.33 ) }
    dend_40 { pt3dadd( 69.0967, 11.6162, -72.1487, 1.33 ) }
    dend_40 { pt3dadd( 70.9558, 11.4384, -74.0003, 0.33 ) }
    dend_40 { pt3dadd( 73.5727, 11.3006, -76.3266, 0.33 ) }
    dend_40 { pt3dadd( 77.1667, 11.193, -79.4592, 1.33 ) }
    dend_40 { pt3dadd( 79.2977, 11.1872, -81.4508, 0.67 ) }
    dend_40 { pt3dadd( 82.3084, 11.3357, -84.3857, 0.67 ) }
    dend_40 { pt3dadd( 83.9922, 11.5214, -86.1217, 0.67 ) }
    dend_40 { pt3dadd( 87.1121, 12.0369, -89.8303, 0.67 ) }
    dend_40 { pt3dadd( 88.3066, 12.4278, -91.4655, 2.0 ) }
    dend_40 { pt3dadd( 90.9254, 13.4568, -95.4457, 0.33 ) }
    dend_40 { pt3dadd( 91.5534, 13.7328, -96.5083, 0.33 ) }
    dend_40 { pt3dadd( 92.4042, 14.153, -97.9778, 0.67 ) }
    dend_40 { pt3dadd( 94.6953, 15.2537, -102.039, 0.33 ) }
    dend_40 { pt3dadd( 96.9499, 16.2267, -105.886, 1.33 ) }
    dend_40 { pt3dadd( 98.6708, 16.9493, -108.941, 0.33 ) }
    dend_40 { pt3dadd( 98.9448, 17.0496, -109.476, 0.67 ) }
    dend_40 { pt3dadd( 99.4569, 17.1801, -110.746, 0.33 ) }
    dend_40 { pt3dadd( 100.67, 17.3575, -114.156, 0.33 ) }
    dend_40 { pt3dadd( 101.381, 17.437, -116.197, 0.33 ) }
    dend_40 { pt3dadd( 101.929, 17.4686, -117.694, 1.33 ) }
    dend_40 { pt3dadd( 105.342, 17.6911, -126.225, 0.33 ) }
    dend_40 { pt3dadd( 108.198, 17.9016, -132.844, 0.67 ) }
    dend_40 { pt3dadd( 108.198, 17.9016, -132.844, 0.67 ) }
    dend_40 { pt3dadd( 109.381, 17.9888, -135.023, 0.33 ) }
    dend_40 { pt3dadd( 110.791, 18.149, -137.286, 1.33 ) }
    dend_40 { pt3dadd( 113.02, 18.4768, -140.277, 0.33 ) }
    dend_40 { pt3dadd( 113.607, 18.646, -140.904, 1.33 ) }
    dend_40 { pt3dadd( 117.214, 19.9567, -144.645, 0.33 ) }
    dend_40 { pt3dadd( 118.599, 20.5424, -146.304, 0.67 ) }
    dend_40 { pt3dadd( 119.863, 21.1722, -148.053, 0.33 ) }
    dend_40 { pt3dadd( 121.677, 22.298, -150.908, 1.33 ) }
    dend_40 { pt3dadd( 124.094, 24.2105, -154.895, 0.33 ) }
    dend_40 { pt3dadd( 125.083, 25.0848, -156.525, 0.33 ) }
    dend_40 { pt3dadd( 125.936, 25.9809, -157.846, 0.67 ) }
    dend_40 { pt3dadd( 126.31, 26.4384, -158.481, 0.33 ) }
    dend_40 { pt3dadd( 127.514, 28.0489, -160.494, 1.33 ) }
    dend_40 { pt3dadd( 128.29, 29.1335, -161.718, 0.33 ) }
    dend_40 { pt3dadd( 128.426, 29.316, -161.924, 0.67 ) }
    dend_40 { pt3dadd( 129.005, 30.3146, -162.96, 0.33 ) }
    dend_40 { pt3dadd( 130.026, 32.6829, -165.914, 0.67 ) }
    dend_40 { pt3dadd( 130.293, 33.5692, -167.156, 0.33 ) }
    dend_40 { pt3dadd( 130.381, 34.0622, -167.882, 0.67 ) }
    dend_40 { pt3dadd( 130.514, 35.7375, -170.503, 0.33 ) }
    dend_40 { pt3dadd( 130.473, 37.4864, -173.239, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_40 { pt3dadd( 129.918, 40.5981, -178.359, 0.33 ) }
    dend_40 { pt3dadd( 129.749, 41.108, -179.177, 0.67 ) }
    dend_40 { pt3dadd( 129.47, 41.5508, -180.017, 0.33 ) }
    dend_40 { pt3dadd( 129.264, 41.7794, -180.546, 0.67 ) }
    dend_40 { pt3dadd( 128.784, 42.2177, -181.676, 0.33 ) }
    dend_40 { pt3dadd( 127.68, 43.1488, -184.353, 0.67 ) }
    dend_40 { pt3dadd( 127.298, 43.4878, -185.355, 0.33 ) }
    dend_40 { pt3dadd( 125.789, 45.1327, -189.948, 0.67 ) }
    dend_40 { pt3dadd( 123.931, 47.6368, -196.215, 0.33 ) }
    dend_40 { pt3dadd( 123.786, 47.9368, -196.823, 0.67 ) }
    dend_40 { pt3dadd( 123.005, 50.6362, -201.23, 0.33 ) }
    dend_40 { pt3dadd( 122.935, 50.9925, -201.738, 0.67 ) }
    dend_40 { pt3dadd( 122.791, 52.67, -203.801, 0.33 ) }
    dend_40 { pt3dadd( 123.02, 54.716, -205.228, 1.33 ) }
    dend_40 { pt3dadd( 123.971, 58.7075, -206.184, 0.33 ) }
    dend_40 { pt3dadd( 124.299, 59.9136, -206.308, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 16/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.63388, -26.1745, -13.1809, 1.33 ) }
    dend_32 { pt3dadd( 3.79565, -27.5804, -6.71806, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 18/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 5.63388, -26.1745, -13.1809, 0.67 ) }
    dend_29 { pt3dadd( 8.42806, -23.0145, -23.7287, 0.67 ) }
    dend_29 { pt3dadd( 9.42496, -21.6532, -27.7895, 0.67 ) }
    dend_29 { pt3dadd( 11.8979, -18.1073, -38.5674, 0.67 ) }
    dend_29 { pt3dadd( 13.0818, -16.4098, -43.7272, 0.67 ) }
    dend_29 { pt3dadd( 16.3306, -11.7514, -57.8864, 0.67 ) }
    dend_29 { pt3dadd( 17.1153, -10.6264, -61.3062, 0.67 ) }
    dend_29 { pt3dadd( 18.3549, -8.4307, -67.3662, 0.67 ) }
    dend_29 { pt3dadd( 19.2078, -6.26328, -73.6378, 2.0 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 27/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 27.4588, 4.59474, -6.83006, 1.33 ) }
    dend_24 { pt3dadd( 30.3384, 4.61002, -4.50589, 1.33 ) }
    dend_24 { pt3dadd( 34.1201, 4.6301, -1.45367, 0.67 ) }
    dend_24 { pt3dadd( 38.3378, 4.65249, 1.95045, 0.67 ) }
    dend_24 { pt3dadd( 39.3211, 4.65771, 2.74404, 0.67 ) }
    dend_24 { pt3dadd( 42.3329, 4.6737, 5.17492, 0.67 ) }
    dend_24 { pt3dadd( 45.2108, 4.68898, 7.49765, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.4588, 4.59474, -6.83006, 1.33 ) }
    dend_23 { pt3dadd( 33.7913, 6.70136, -11.923, 1.33 ) }
    dend_23 { pt3dadd( 37.4702, 7.64867, -14.2777, 0.67 ) }
    dend_23 { pt3dadd( 38.4591, 7.81022, -14.9621, 0.67 ) }
    dend_23 { pt3dadd( 41.9609, 8.12949, -17.5972, 0.67 ) }
    dend_23 { pt3dadd( 44.2924, 8.21347, -19.3167, 0.67 ) }
    dend_23 { pt3dadd( 46.9872, 8.00425, -21.3405, 0.67 ) }
    dend_23 { pt3dadd( 49.5682, 7.65635, -23.0399, 0.67 ) }
    dend_23 { pt3dadd( 54.0267, 6.65493, -26.2076, 1.33 ) }
    dend_23 { pt3dadd( 57.4058, 5.8128, -28.668, 1.33 ) }
    dend_23 { pt3dadd( 59.1736, 5.31256, -29.9774, 0.67 ) }
    dend_23 { pt3dadd( 63.5656, 3.82779, -33.1062, 0.67 ) }
    dend_23 { pt3dadd( 65.911, 3.10474, -34.6178, 0.33 ) }
    dend_23 { pt3dadd( 68.1942, 2.50814, -36.0529, 1.33 ) }
    dend_23 { pt3dadd( 70.8249, 1.92768, -37.446, 0.67 ) }
    dend_23 { pt3dadd( 72.5578, 1.5826, -38.3206, 0.67 ) }
    dend_23 { pt3dadd( 76.515, 0.948443, -40.2986, 0.67 ) }
    dend_23 { pt3dadd( 79.3992, 0.508188, -41.5899, 0.33 ) }
    dend_23 { pt3dadd( 81.8885, -0.0222353, -42.7773, 0.67 ) }
    dend_23 { pt3dadd( 86.0824, -0.928566, -45.0886, 0.67 ) }
    dend_23 { pt3dadd( 86.6681, -1.1135, -45.496, 1.33 ) }
    dend_23 { pt3dadd( 87.9805, -1.58529, -46.5018, 0.67 ) }
    dend_23 { pt3dadd( 89.6361, -2.25741, -47.8947, 0.67 ) }
    dend_23 { pt3dadd( 92.6098, -3.76092, -50.6064, 0.33 ) }
    dend_23 { pt3dadd( 94.8735, -5.36798, -53.2271, 2.0 ) }
    dend_23 { pt3dadd( 98.2925, -8.46153, -57.9424, 0.33 ) }
    dend_23 { pt3dadd( 98.9599, -9.21238, -59.078, 0.33 ) }
    dend_23 { pt3dadd( 99.9115, -10.4068, -60.8962, 0.33 ) }
    dend_23 { pt3dadd( 100.39, -10.9995, -61.8466, 1.33 ) }
    dend_23 { pt3dadd( 105.472, -17.0602, -71.4647, 0.33 ) }
    dend_23 { pt3dadd( 106.086, -17.6693, -72.5021, 1.33 ) }
    dend_23 { pt3dadd( 111.594, -22.0108, -80.9436, 0.33 ) }
    dend_23 { pt3dadd( 112.122, -22.3421, -81.6718, 0.67 ) }
    dend_23 { pt3dadd( 116.128, -24.2002, -86.5534, 0.33 ) }
    dend_23 { pt3dadd( 118.753, -24.9789, -89.3114, 1.33 ) }
    dend_23 { pt3dadd( 125.523, -25.6025, -94.7825, 0.33 ) }
    dend_23 { pt3dadd( 126.832, -25.6248, -95.7635, 1.33 ) }
    dend_23 { pt3dadd( 130.105, -25.4111, -97.828, 0.33 ) }
    dend_23 { pt3dadd( 130.963, -25.3474, -98.3615, 1.33 ) }
    dend_23 { pt3dadd( 133.859, -25.1008, -100.25, 0.33 ) }
    dend_23 { pt3dadd( 134.754, -25.0169, -100.898, 1.33 ) }
    dend_23 { pt3dadd( 141.671, -24.1374, -105.93, 0.33 ) }
    dend_23 { pt3dadd( 143.295, -23.9325, -107.167, 1.33 ) }
    dend_23 { pt3dadd( 145.276, -23.6359, -108.767, 0.33 ) }
    dend_23 { pt3dadd( 147.583, -23.2056, -110.709, 0.67 ) }
    dend_23 { pt3dadd( 149.166, -22.8033, -112.128, 0.33 ) }
    dend_23 { pt3dadd( 149.687, -22.5999, -112.635, 0.67 ) }
    dend_23 { pt3dadd( 150.435, -21.9381, -113.609, 0.33 ) }
    dend_23 { pt3dadd( 150.582, -21.8149, -113.897, 0.33 ) }
    dend_23 { pt3dadd( 150.881, -21.5913, -114.55, 0.67 ) }
    dend_23 { pt3dadd( 152.091, -20.7451, -116.929, 0.33 ) }
    dend_23 { pt3dadd( 152.326, -20.5945, -117.314, 0.67 ) }
    dend_23 { pt3dadd( 154.024, -19.6233, -119.88, 0.33 ) }
    dend_23 { pt3dadd( 156.149, -18.3599, -122.787, 0.67 ) }
    dend_23 { pt3dadd( 156.764, -17.9681, -123.574, 0.33 ) }
    dend_23 { pt3dadd( 157.674, -17.3699, -124.613, 0.67 ) }
    dend_23 { pt3dadd( 160.078, -15.7634, -127.182, 0.33 ) }
    dend_23 { pt3dadd( 162.107, -14.563, -129.334, 0.67 ) }
    dend_23 { pt3dadd( 164.371, -13.2357, -131.631, 0.33 ) }
    dend_23 { pt3dadd( 164.586, -13.11, -131.871, 0.67 ) }
    dend_23 { pt3dadd( 166.303, -12.1937, -134.147, 0.33 ) }
    dend_23 { pt3dadd( 167.856, -11.4726, -136.506, 1.33 ) }
    dend_23 { pt3dadd( 170.267, -10.4249, -140.454, 0.33 ) }
    dend_23 { pt3dadd( 170.801, -10.2312, -141.321, 0.67 ) }
    dend_23 { pt3dadd( 173.555, -9.41244, -145.935, 0.33 ) }
    dend_23 { pt3dadd( 174.993, -8.99836, -148.327, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_23 { pt3dadd( 177.12, -8.38024, -151.874, 0.33 ) }
    dend_23 { pt3dadd( 177.908, -8.19827, -153.032, 1.33 ) }
    dend_23 { pt3dadd( 182.911, -7.20601, -159.521, 0.33 ) }
    dend_23 { pt3dadd( 183.121, -7.17321, -159.78, 0.67 ) }
    dend_23 { pt3dadd( 183.859, -7.09188, -160.542, 0.33 ) }
    dend_23 { pt3dadd( 184.22, -7.05936, -160.856, 0.67 ) }
    dend_23 { pt3dadd( 188.215, -6.96901, -163.8, 0.33 ) }
    dend_23 { pt3dadd( 189.503, -7.0516, -164.642, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 8/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.28772, 34.0137, 13.4562, 0.67 ) }
    dend_16 { pt3dadd( -1.21345, 39.3627, 13.7932, 0.67 ) }
    dend_16 { pt3dadd( -0.71814, 41.6205, 13.9138, 0.67 ) }
    dend_16 { pt3dadd( -0.44992, 42.9889, 13.9803, 0.67 ) }
    dend_16 { pt3dadd( -0.35072, 43.8157, 13.9926, 0.67 ) }
    dend_16 { pt3dadd( -0.14508, 47.7786, 13.9671, 0.67 ) }
    dend_16 { pt3dadd( -0.1142, 49.9068, 13.8486, 0.67 ) }
    dend_16 { pt3dadd( -0.22384, 51.2381, 13.6889, 0.67 ) }
    dend_16 { pt3dadd( -0.29213, 53.1148, 13.4213, 0.67 ) }
    dend_16 { pt3dadd( -0.26918, 55.8702, 13.1019, 0.67 ) }
    dend_16 { pt3dadd( -0.23872, 57.5534, 13.0698, 0.67 ) }
    dend_16 { pt3dadd( -0.13102, 61.2597, 13.2811, 0.67 ) }
    dend_16 { pt3dadd( -0.00862002, 62.9256, 13.4866, 0.67 ) }
    dend_16 { pt3dadd( 0.34453, 66.3289, 14.0178, 0.67 ) }
    dend_16 { pt3dadd( 1.05695, 70.7001, 14.907, 0.67 ) }
    dend_16 { pt3dadd( 1.98778, 74.7697, 15.9934, 0.33 ) }
    dend_16 { pt3dadd( 2.34597, 76.1256, 16.4593, 0.33 ) }
    dend_16 { pt3dadd( 2.53963, 76.7981, 16.7925, 0.33 ) }
    dend_16 { pt3dadd( 4.79716, 83.3043, 17.1389, 0.33 ) }
    dend_16 { pt3dadd( 8.24635, 89.1632, 18.0939, 0.33 ) }
    dend_16 { pt3dadd( 11.4818, 95.1033, 19.2947, 0.33 ) }
    dend_16 { pt3dadd( 15.3987, 100.599, 20.4739, 0.33 ) }
    dend_16 { pt3dadd( 19.0078, 106.431, 20.7228, 0.33 ) }
    dend_16 { pt3dadd( 22.2475, 112.434, 19.9142, 0.33 ) }
    dend_16 { pt3dadd( 24.7043, 118.85, 19.4046, 0.33 ) }
    dend_16 { pt3dadd( 27.9762, 124.871, 18.9054, 0.33 ) }
    dend_16 { pt3dadd( 31.3072, 130.78, 17.8513, 0.33 ) }
    dend_16 { pt3dadd( 35.2909, 136.349, 17.6063, 0.33 ) }
    dend_16 { pt3dadd( 40.3627, 140.874, 17.1251, 0.33 ) }
    dend_16 { pt3dadd( 45.5449, 145.22, 17.922, 0.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.28772, 34.0137, 13.4562, 0.67 ) }
    dend_13 { pt3dadd( -2.67884, 37.2332, 17.0215, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.11475, 13.9237, 20.0911, 0.67 ) }
    dend_5 { pt3dadd( -8.38942, 11.8337, 20.0008, 0.67 ) }
    dend_5 { pt3dadd( -11.7435, 8.75192, 19.8675, 0.33 ) }
    dend_5 { pt3dadd( -14.5493, 6.17391, 19.756, 0.33 ) }
    dend_5 { pt3dadd( -14.9968, 5.76269, 19.7383, 0.67 ) }
    dend_5 { pt3dadd( -22.4702, -0.939537, 20.2324, 0.67 ) }
    dend_5 { pt3dadd( -30.7073, -6.57134, 21.1331, 0.67 ) }
    dend_5 { pt3dadd( -39.7621, -10.7572, 21.5899, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.11475, 13.9237, 20.0911, 0.67 ) }
    dend_2 { pt3dadd( -6.0206, 11.266, 20.7863, 0.67 ) }
    dend_2 { pt3dadd( -5.93843, 8.94676, 21.3929, 0.67 ) }
    dend_2 { pt3dadd( -5.85125, 6.48595, 22.0365, 0.67 ) }
    dend_2 { pt3dadd( -5.65716, 1.00706, 23.4696, 0.67 ) }
    dend_2 { pt3dadd( -6.53037, -9.97554, 26.3624, 0.67 ) }
    dend_2 { pt3dadd( -6.38344, -21.2339, 28.2014, 0.67 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 55/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 3.22954, 48.1283, -55.1188, 0.67 ) }
    dend_60 { pt3dadd( 3.7988, 51.3053, -59.3676, 0.67 ) }
    dend_60 { pt3dadd( 3.98882, 52.8052, -61.2461, 0.67 ) }
    dend_60 { pt3dadd( 4.38096, 56.5359, -65.6525, 0.67 ) }
    dend_60 { pt3dadd( 4.61153, 58.1151, -67.6106, 0.67 ) }
    dend_60 { pt3dadd( 4.77495, 59.275, -69.0406, 1.33 ) }
    dend_60 { pt3dadd( 5.56774, 63.8544, -74.9873, 0.33 ) }
    dend_60 { pt3dadd( 5.87162, 65.7349, -77.5373, 0.33 ) }
    dend_60 { pt3dadd( 6.09935, 67.5709, -80.2201, 2.0 ) }
    dend_60 { pt3dadd( 6.49564, 72.3678, -87.3329, 0.33 ) }
    dend_60 { pt3dadd( 6.58535, 72.9999, -88.3536, 1.33 ) }
    dend_60 { pt3dadd( 7.10183, 76.2349, -93.4931, 0.33 ) }
    dend_60 { pt3dadd( 7.14218, 76.789, -94.4254, 0.67 ) }
    dend_60 { pt3dadd( 7.15213, 78.2219, -97.0591, 0.33 ) }
    dend_60 { pt3dadd( 7.08743, 78.7046, -97.9068, 0.33 ) }
    dend_60 { pt3dadd( 6.69691, 80.7335, -101.19, 0.67 ) }
    dend_60 { pt3dadd( 6.42604, 82.5232, -103.845, 0.33 ) }
    dend_60 { pt3dadd( 5.70356, 87.4217, -110.255, 0.33 ) }
    dend_60 { pt3dadd( 5.57148, 88.5963, -111.7, 1.33 ) }
    dend_60 { pt3dadd( 5.34547, 90.5675, -113.861, 0.33 ) }
    dend_60 { pt3dadd( 4.82819, 93.7958, -117.227, 0.33 ) }
    dend_60 { pt3dadd( 4.55825, 95.0701, -118.413, 1.33 ) }
    dend_60 { pt3dadd( 4.05646, 97.4097, -120.383, 0.33 ) }
    dend_60 { pt3dadd( 3.8967, 98.3667, -121.174, 0.67 ) }
    dend_60 { pt3dadd( 3.16954, 103.273, -125.279, 0.33 ) }
    dend_60 { pt3dadd( 3.02799, 104.718, -126.552, 0.67 ) }
    dend_60 { pt3dadd( 2.88372, 106.452, -128.088, 0.33 ) }
    dend_60 { pt3dadd( 2.83162, 108.226, -129.747, 1.33 ) }
    dend_60 { pt3dadd( 3.11376, 117.161, -138.311, 0.33 ) }
    dend_60 { pt3dadd( 3.33718, 119.169, -140.345, 1.33 ) }
    dend_60 { pt3dadd( 4.42389, 124.44, -146.144, 0.33 ) }
    dend_60 { pt3dadd( 4.55903, 124.947, -146.712, 0.67 ) }
    dend_60 { pt3dadd( 5.28765, 127.064, -149.206, 0.33 ) }
    dend_60 { pt3dadd( 5.83976, 128.403, -150.883, 0.67 ) }
    dend_60 { pt3dadd( 7.32143, 131.538, -154.685, 0.33 ) }
    dend_60 { pt3dadd( 8.33936, 133.639, -157.221, 0.67 ) }
    dend_60 { pt3dadd( 9.08923, 135.091, -158.85, 0.33 ) }
    dend_60 { pt3dadd( 9.51879, 136.005, -159.785, 0.67 ) }
    dend_60 { pt3dadd( 11.505, 140.488, -164.201, 0.33 ) }
    dend_60 { pt3dadd( 12.0846, 141.996, -165.711, 1.33 ) }
    dend_60 { pt3dadd( 12.9455, 144.771, -168.399, 0.33 ) }
    dend_60 { pt3dadd( 13.0459, 145.265, -168.877, 0.67 ) }
    dend_60 { pt3dadd( 13.3403, 147.45, -171.098, 0.33 ) }
    dend_60 { pt3dadd( 13.5114, 149.933, -173.642, 1.33 ) }
    dend_60 { pt3dadd( 13.5162, 154.543, -178.383, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_60 { pt3dadd( 13.4647, 155.007, -178.884, 0.67 ) }
    dend_60 { pt3dadd( 12.6913, 158.151, -182.155, 0.33 ) }
    dend_60 { pt3dadd( 12.6913, 158.151, -182.155, 0.67 ) }
    dend_60 { pt3dadd( 11.938, 160.041, -183.931, 0.33 ) }
    dend_60 { pt3dadd( 11.5539, 160.839, -184.571, 0.67 ) }
    dend_60 { pt3dadd( 9.6748, 163.906, -186.823, 0.33 ) }
    dend_60 { pt3dadd( 8.5147, 165.724, -188.144, 0.33 ) }
    dend_60 { pt3dadd( 8.149, 166.288, -188.516, 0.67 ) }
    dend_60 { pt3dadd( 6.40502, 169.028, -190.216, 0.33 ) }
    dend_60 { pt3dadd( 6.08699, 169.564, -190.499, 0.67 ) }
    dend_60 { pt3dadd( 5.48936, 170.78, -191.071, 0.33 ) }
    dend_60 { pt3dadd( 5.28367, 171.487, -191.309, 0.67 ) }
    dend_60 { pt3dadd( 4.84262, 173.503, -191.821, 0.33 ) }
    dend_60 { pt3dadd( 4.84262, 173.503, -191.821, 0.67 ) }
    dend_60 { pt3dadd( 4.65721, 175.767, -192.74, 0.33 ) }
    dend_60 { pt3dadd( 4.67182, 176.306, -193.167, 0.67 ) }
    dend_60 { pt3dadd( 4.83234, 178.018, -194.722, 0.33 ) }
    dend_60 { pt3dadd( 4.86346, 178.272, -194.965, 0.67 ) }
    dend_60 { pt3dadd( 4.99609, 179.537, -196.138, 0.33 ) }
    dend_60 { pt3dadd( 5.54089, 186.302, -202.282, 0.33 ) }
    dend_60 { pt3dadd( 5.74368, 189.347, -204.725, 0.67 ) }
    dend_60 { pt3dadd( 5.89222, 191.945, -206.596, 0.33 ) }
    dend_60 { pt3dadd( 5.93523, 192.832, -207.228, 0.67 ) }
    dend_60 { pt3dadd( 6.10258, 196.159, -209.39, 0.33 ) }
    dend_60 { pt3dadd( 6.14938, 197.106, -209.871, 0.67 ) }
    dend_60 { pt3dadd( 6.01155, 202.807, -210.787, 0.33 ) }
    dend_60 { pt3dadd( 5.98969, 203.152, -210.809, 0.67 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 27/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 3.22954, 48.1283, -55.1188, 0.67 ) }
    dend_59 { pt3dadd( 1.98217, 50.0701, -59.2822, 0.67 ) }
    dend_59 { pt3dadd( 1.64194, 50.6021, -60.3039, 0.67 ) }
    dend_59 { pt3dadd( 1.37509, 51.0801, -61.0467, 1.33 ) }
    dend_59 { pt3dadd( -1.83035, 57.2828, -69.123, 0.33 ) }
    dend_59 { pt3dadd( -2.24872, 58.046, -70.0008, 2.0 ) }
    dend_59 { pt3dadd( -2.91906, 59.0386, -71.7346, 0.33 ) }
    dend_59 { pt3dadd( -3.24405, 59.466, -72.4805, 1.33 ) }
    dend_59 { pt3dadd( -4.72621, 61.0161, -75.353, 0.33 ) }
    dend_59 { pt3dadd( -5.33209, 61.4798, -76.3244, 1.33 ) }
    dend_59 { pt3dadd( -6.82585, 62.1523, -78.0745, 0.33 ) }
    dend_59 { pt3dadd( -17.785, 64.908, -90.8596, 1.33 ) }
    dend_59 { pt3dadd( -24.3433, 64.9227, -98.3051, 0.33 ) }
    dend_59 { pt3dadd( -25.128, 64.7726, -99.2084, 0.67 ) }
    dend_59 { pt3dadd( -26.9872, 64.1411, -101.495, 0.33 ) }
    dend_59 { pt3dadd( -27.3553, 64.011, -102.046, 0.67 ) }
    dend_59 { pt3dadd( -28.0865, 63.8146, -103.418, 0.33 ) }
    dend_59 { pt3dadd( -29.8799, 63.7733, -107.819, 1.33 ) }
    dend_59 { pt3dadd( -30.5712, 63.784, -109.365, 0.33 ) }
    dend_59 { pt3dadd( -31.1382, 63.868, -110.735, 1.33 ) }
    dend_59 { pt3dadd( -33.8216, 64.4576, -117.53, 0.33 ) }
    dend_59 { pt3dadd( -34.209, 64.5588, -118.529, 1.33 ) }
    dend_59 { pt3dadd( -37.8199, 65.6133, -127.978, 0.33 ) }
    dend_59 { pt3dadd( -38.0518, 65.6807, -128.586, 0.67 ) }
    dend_59 { pt3dadd( -40.4537, 66.3205, -134.788, 0.33 ) }
    dend_59 { pt3dadd( -41.7135, 66.5991, -138.012, 1.33 ) }
    dend_59 { pt3dadd( -43.6573, 66.9749, -143.018, 0.33 ) }
    dend_59 { pt3dadd( -45.3137, 67.2868, -147.127, 0.67 ) }
    dend_59 { pt3dadd( -48.4032, 67.869, -154.685, 0.33 ) }
    dend_59 { pt3dadd( -48.8494, 67.9438, -155.793, 0.67 ) }
    dend_59 { pt3dadd( -49.166, 67.9905, -156.604, 0.33 ) }
    dend_59 { pt3dadd( -50.128, 68.0894, -159.023, 0.67 ) }
    dend_59 { pt3dadd( -53.7332, 68.2771, -168.062, 0.33 ) }
    dend_59 { pt3dadd( -55.5073, 68.3196, -172.456, 0.67 ) }
    dend_59 { pt3dadd( -57.2937, 68.2919, -176.871, 0.33 ) }
    dend_59 { pt3dadd( -58.4046, 68.2535, -179.646, 1.33 ) }
    dend_59 { pt3dadd( -61.3657, 68.0925, -187.062, 0.33 ) }
    dend_59 { pt3dadd( -62.4675, 67.9817, -189.823, 0.67 ) }
    dend_59 { pt3dadd( -63.4358, 67.825, -192.252, 0.33 ) }
    dend_59 { pt3dadd( -64.0265, 67.7269, -193.758, 0.67 ) }
    dend_59 { pt3dadd( -65.9335, 67.4012, -198.913, 0.33 ) }
    dend_59 { pt3dadd( -67.3658, 67.1966, -202.664, 0.67 ) }
    dend_59 { pt3dadd( -69.474, 66.8817, -208.557, 0.33 ) }
    dend_59 { pt3dadd( -70.1994, 66.7647, -210.626, 0.67 ) }
    dend_59 { pt3dadd( -72.8952, 66.2997, -218.749, 0.33 ) }
    dend_59 { pt3dadd( -74.2803, 66.0775, -223.053, 0.67 ) }
    dend_59 { pt3dadd( -77.2804, 65.4277, -233.096, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 74/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 70.0537, -169.13, 33.47, 0.67 ) }
    dend_45 { pt3dadd( 71.3498, -173.551, 33.4661, 0.67 ) }
    dend_45 { pt3dadd( 72.3981, -177.127, 33.4629, 0.67 ) }
    dend_45 { pt3dadd( 73.2749, -180.118, 33.4602, 0.33 ) }
    dend_45 { pt3dadd( 73.6463, -181.385, 33.4591, 0.33 ) }
    dend_45 { pt3dadd( 74.4809, -184.231, 33.4566, 0.67 ) }
    dend_45 { pt3dadd( 77.5833, -194.589, 34.5661, 0.67 ) }
    dend_45 { pt3dadd( 80.4932, -205.038, 35.2916, 0.67 ) }
    dend_45 { pt3dadd( 85.3334, -214.741, 35.1115, 0.67 ) }
    dend_45 { pt3dadd( 90.4369, -224.282, 35.7626, 0.67 ) }
    dend_45 { pt3dadd( 95.8493, -233.426, 37.836, 0.67 ) }
    dend_45 { pt3dadd( 100.173, -242.714, 41.3442, 0.67 ) }
    dend_45 { pt3dadd( 105.759, -250.881, 45.6451, 0.67 ) }
    dend_45 { pt3dadd( 111.846, -257.928, 51.0187, 0.67 ) }
    dend_45 { pt3dadd( 118.453, -263.353, 57.4574, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 89/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 70.0537, -169.13, 33.47, 0.33 ) }
    dend_44 { pt3dadd( 70.7544, -168.762, 36.146, 0.33 ) }
    dend_44 { pt3dadd( 71.0218, -168.622, 37.167, 0.67 ) }
    dend_44 { pt3dadd( 73.6492, -167.242, 47.2006, 0.33 ) }
    dend_44 { pt3dadd( 74.0871, -167.011, 48.873, 0.67 ) }
    dend_44 { pt3dadd( 77.692, -166.062, 60.0039, 0.67 ) }
    dend_44 { pt3dadd( 79.6966, -166.113, 71.5685, 0.67 ) }
    dend_44 { pt3dadd( 80.7313, -166.038, 83.26, 0.67 ) }
    dend_44 { pt3dadd( 82.3862, -166.535, 94.8695, 0.67 ) }
    dend_44 { pt3dadd( 85.1265, -166.217, 106.278, 0.67 ) }
    dend_44 { pt3dadd( 87.1581, -165.267, 117.802, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_44 { pt3dadd( 87.8433, -162.638, 129.238, 0.67 ) }
    dend_44 { pt3dadd( 88.9576, -161.474, 140.868, 0.67 ) }
    dend_44 { pt3dadd( 88.4669, -160.609, 152.567, 0.67 ) }
    dend_44 { pt3dadd( 88.4666, -160.7, 164.304, 0.67 ) }
    dend_44 { pt3dadd( 88.3514, -158.338, 175.817, 0.67 ) }
    dend_44 { pt3dadd( 89.0289, -156.088, 187.33, 0.67 ) }
    dend_44 { pt3dadd( 91.823, -154.636, 198.642, 0.67 ) }
    dend_44 { pt3dadd( 96.4323, -150.546, 208.665, 0.67 ) }
    dend_44 { pt3dadd( 102.478, -148.033, 218.417, 0.67 ) }
    dend_44 { pt3dadd( 110.887, -145.945, 226.338, 0.67 ) }
    dend_44 { pt3dadd( 119.65, -143.644, 233.806, 0.67 ) }
    dend_44 { pt3dadd( 127.566, -139.965, 241.676, 0.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 12/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 124.299, 59.9136, -206.308, 0.33 ) }
    dend_42 { pt3dadd( 123.449, 61.72, -206.482, 0.33 ) }
    dend_42 { pt3dadd( 123.123, 62.4115, -206.549, 0.67 ) }
    dend_42 { pt3dadd( 119.526, 70.0524, -207.285, 0.33 ) }
    dend_42 { pt3dadd( 117.758, 73.8084, -207.647, 1.33 ) }
    dend_42 { pt3dadd( 115.352, 78.9185, -208.139, 0.33 ) }
    dend_42 { pt3dadd( 115.018, 79.6265, -208.207, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 19/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 124.299, 59.9136, -206.308, 0.33 ) }
    dend_41 { pt3dadd( 125.644, 60.9206, -207.868, 0.33 ) }
    dend_41 { pt3dadd( 125.775, 61.0376, -208.016, 0.67 ) }
    dend_41 { pt3dadd( 131.202, 66.3137, -213.88, 0.33 ) }
    dend_41 { pt3dadd( 133.117, 68.3439, -215.76, 1.33 ) }
    dend_41 { pt3dadd( 136.874, 72.5282, -219.308, 0.33 ) }
    dend_41 { pt3dadd( 137.522, 73.2816, -219.893, 0.67 ) }
    dend_41 { pt3dadd( 139.624, 76.022, -221.74, 0.33 ) }
    dend_41 { pt3dadd( 140.077, 76.6944, -222.129, 0.67 ) }
    dend_41 { pt3dadd( 141.941, 79.9311, -223.628, 0.33 ) }
    dend_41 { pt3dadd( 143.574, 82.8754, -224.845, 0.67 ) }
    dend_41 { pt3dadd( 145.494, 86.3676, -226.298, 0.33 ) }
    dend_41 { pt3dadd( 146.109, 87.4391, -226.817, 1.33 ) }
    dend_41 { pt3dadd( 149.049, 92.2569, -229.646, 0.33 ) }
    dend_41 { pt3dadd( 150.175, 94.1603, -230.865, 0.67 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 34/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 3.79565, -27.5804, -6.71806, 0.67 ) }
    dend_36 { pt3dadd( 3.47991, -30.9422, -5.76061, 0.67 ) }
    dend_36 { pt3dadd( 2.91939, -36.158, -4.09269, 0.67 ) }
    dend_36 { pt3dadd( 2.23993, -44.5234, -1.38594, 0.67 ) }
    dend_36 { pt3dadd( 1.78554, -51.6401, 0.849297, 0.67 ) }
    dend_36 { pt3dadd( 1.53699, -58.4356, 3.03807, 0.67 ) }
    dend_36 { pt3dadd( 1.28858, -77.2319, 9.02818, 0.67 ) }
    dend_36 { pt3dadd( 1.33359, -83.9424, 11.1732, 0.67 ) }
    dend_36 { pt3dadd( 1.42712, -88.6625, 12.657, 0.67 ) }
    dend_36 { pt3dadd( 1.64364, -93.4687, 14.0219, 0.67 ) }
    dend_36 { pt3dadd( 1.98873, -100.198, 16.1716, 0.67 ) }
    dend_36 { pt3dadd( 2.27994, -105.094, 17.8968, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 3.79565, -27.5804, -6.71806, 0.67 ) }
    dend_33 { pt3dadd( 2.64498, -30.6016, -4.21504, 0.67 ) }
    dend_33 { pt3dadd( 1.49284, -33.6266, -1.70882, 0.67 ) }
    dend_33 { pt3dadd( -0.26274, -38.2361, 2.11004, 0.67 ) }
    dend_33 { pt3dadd( -5.93042, -53.1172, 14.4389, 0.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 19.2078, -6.26328, -73.6378, 0.67 ) }
    dend_31 { pt3dadd( 17.4887, -4.69089, -80.6433, 0.67 ) }
    dend_31 { pt3dadd( 17.2599, -4.3694, -81.9586, 0.33 ) }
    dend_31 { pt3dadd( 17.0913, -3.96524, -83.6243, 0.67 ) }
    dend_31 { pt3dadd( 16.9422, -2.80197, -88.7256, 0.33 ) }
    dend_31 { pt3dadd( 16.9383, -2.59018, -89.6767, 0.33 ) }
    dend_31 { pt3dadd( 16.9827, -2.15242, -91.6349, 1.33 ) }
    dend_31 { pt3dadd( 17.13, -1.67287, -93.6263, 0.33 ) }
    dend_31 { pt3dadd( 17.4395, -0.844877, -97.0333, 1.33 ) }
    dend_31 { pt3dadd( 18.4539, 1.00041, -103.42, 0.33 ) }
    dend_31 { pt3dadd( 19.2334, 2.17635, -106.745, 1.33 ) }
    dend_31 { pt3dadd( 20.418, 3.74377, -110.588, 0.33 ) }
    dend_31 { pt3dadd( 21.2078, 4.71117, -112.542, 0.33 ) }
    dend_31 { pt3dadd( 21.8192, 5.39364, -113.692, 1.33 ) }
    dend_31 { pt3dadd( 24.5736, 8.0809, -116.872, 0.33 ) }
    dend_31 { pt3dadd( 25.9663, 9.20189, -117.698, 1.33 ) }
    dend_31 { pt3dadd( 28.5742, 11.0751, -118.673, 0.33 ) }
    dend_31 { pt3dadd( 30.0743, 12.0754, -119.095, 0.67 ) }
    dend_31 { pt3dadd( 33.5623, 14.2768, -119.917, 0.33 ) }
    dend_31 { pt3dadd( 35.9076, 15.7277, -120.484, 0.67 ) }
    dend_31 { pt3dadd( 39.2409, 17.7559, -121.349, 0.33 ) }
    dend_31 { pt3dadd( 40.0862, 18.292, -121.563, 0.67 ) }
    dend_31 { pt3dadd( 43.4204, 20.4862, -122.415, 0.33 ) }
    dend_31 { pt3dadd( 44.6231, 21.3166, -122.715, 0.67 ) }
    dend_31 { pt3dadd( 46.9506, 23.0255, -123.224, 0.33 ) }
    dend_31 { pt3dadd( 47.6241, 23.5372, -123.442, 0.67 ) }
    dend_31 { pt3dadd( 49.1972, 24.9011, -124.054, 0.33 ) }
    dend_31 { pt3dadd( 50.4, 25.9492, -124.503, 0.33 ) }
    dend_31 { pt3dadd( 52.1038, 27.5075, -125.092, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 19.2078, -6.26328, -73.6378, 0.33 ) }
    dend_30 { pt3dadd( 18.9074, -7.85892, -71.755, 0.33 ) }
    dend_30 { pt3dadd( 18.8083, -8.3854, -71.1338, 0.67 ) }
    dend_30 { pt3dadd( 17.7219, -14.1549, -64.3262, 0.33 ) }
    dend_30 { pt3dadd( 17.5128, -15.2655, -63.0158, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 45.2108, 4.68898, 7.49765, 0.67 ) }
    dend_26 { pt3dadd( 48.6539, 6.02051, 8.37601, 0.67 ) }
    dend_26 { pt3dadd( 52.9375, 7.23273, 9.35511, 0.67 ) }
    dend_26 { pt3dadd( 57.3183, 8.13991, 10.1496, 0.67 ) }
    dend_26 { pt3dadd( 59.1628, 8.39555, 10.4489, 0.67 ) }
    dend_26 { pt3dadd( 61.1973, 8.56236, 10.7384, 0.67 ) }
    dend_26 { pt3dadd( 63.5298, 8.55602, 10.8539, 0.33 ) }
    dend_26 { pt3dadd( 65.4919, 7.96315, 10.6252, 0.67 ) }
    dend_26 { pt3dadd( 67.5805, 6.92742, 10.1242, 0.33 ) }
    dend_26 { pt3dadd( 68.7011, 6.20907, 9.89426, 0.33 ) }
    dend_26 { pt3dadd( 69.4593, 5.67641, 9.78384, 0.67 ) }
    dend_26 { pt3dadd( 73.3858, 2.72586, 9.17021, 0.33 ) }
    dend_26 { pt3dadd( 77.0131, -0.00818533, 8.53576, 0.33 ) }
    dend_26 { pt3dadd( 78.8978, -1.53169, 8.21228, 1.33 ) }
    dend_26 { pt3dadd( 81.6191, -3.85317, 7.86081, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( 82.1524, -4.27001, 7.82447, 1.33 ) }
    dend_26 { pt3dadd( 91.6609, -5.82175, 6.36429, 1.33 ) }
    dend_26 { pt3dadd( 101.012, -6.55885, 3.73938, 1.33 ) }
    dend_26 { pt3dadd( 109.812, -8.92847, 0.285724, 1.33 ) }
    dend_26 { pt3dadd( 119.137, -9.48094, -2.47393, 1.33 ) }
    dend_26 { pt3dadd( 128.467, -8.72199, -5.17767, 1.33 ) }
    dend_26 { pt3dadd( 137.757, -7.22294, -7.72685, 1.33 ) }
    dend_26 { pt3dadd( 146.671, -7.50814, -11.6428, 1.33 ) }
    dend_26 { pt3dadd( 155.249, -8.74926, -16.0865, 1.33 ) }
    dend_26 { pt3dadd( 163.793, -8.25918, -20.7475, 1.33 ) }
    dend_26 { pt3dadd( 172.276, -6.80834, -25.3362, 1.33 ) }
    dend_26 { pt3dadd( 180.978, -5.01989, -29.3679, 1.33 ) }
    dend_26 { pt3dadd( 190.147, -3.18024, -32.1383, 1.33 ) }
    dend_26 { pt3dadd( 199.523, -1.58815, -34.2833, 1.33 ) }
    dend_26 { pt3dadd( 209.202, -0.487156, -34.4301, 1.33 ) }
    dend_26 { pt3dadd( 218.835, -1.03024, -33.0807, 1.33 ) }
    dend_26 { pt3dadd( 228.449, -2.6313, -33.1466, 1.33 ) }
    dend_26 { pt3dadd( 237.7, -5.75361, -33.0052, 1.33 ) }
    dend_26 { pt3dadd( 246.675, -9.62584, -32.7228, 1.33 ) }
    dend_26 { pt3dadd( 254.653, -15.3506, -32.5591, 1.33 ) }
    dend_26 { pt3dadd( 263.116, -20.0396, -34.0321, 1.33 ) }
    dend_26 { pt3dadd( 271.163, -25.6153, -34.6894, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 22/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 45.2108, 4.68898, 7.49765, 1.33 ) }
    dend_25 { pt3dadd( 45.3175, 6.09878, 9.44284, 1.33 ) }
    dend_25 { pt3dadd( 45.5486, 9.15315, 13.6572, 0.67 ) }
    dend_25 { pt3dadd( 45.6281, 10.2033, 15.1062, 0.33 ) }
    dend_25 { pt3dadd( 45.8897, 13.6609, 19.8768, 0.33 ) }
    dend_25 { pt3dadd( 46.9987, 19.9289, 28.5609, 0.33 ) }
    dend_25 { pt3dadd( 48.1308, 24.5265, 38.1839, 0.33 ) }
    dend_25 { pt3dadd( 47.3823, 30.1104, 47.3406, 0.33 ) }
    dend_25 { pt3dadd( 45.4331, 36.5826, 55.7351, 0.33 ) }
    dend_25 { pt3dadd( 42.264, 43.0586, 63.7479, 0.33 ) }
    dend_25 { pt3dadd( 38.1984, 49.6448, 71.2557, 0.33 ) }
    dend_25 { pt3dadd( 33.6666, 55.6933, 78.9248, 0.33 ) }
    dend_25 { pt3dadd( 27.9973, 61.0294, 86.3353, 0.33 ) }
    dend_25 { pt3dadd( 22.5489, 65.2484, 94.5497, 0.33 ) }
    dend_25 { pt3dadd( 16.2769, 67.5298, 102.898, 0.33 ) }
    dend_25 { pt3dadd( 11.2791, 68.8168, 112.245, 0.33 ) }
    dend_25 { pt3dadd( 6.55745, 69.175, 121.807, 0.33 ) }
    dend_25 { pt3dadd( 2.22553, 67.5286, 131.418, 0.33 ) }
    dend_25 { pt3dadd( -1.24947, 66.6455, 141.465, 0.33 ) }
    dend_25 { pt3dadd( -5.66986, 66.2068, 151.164, 0.33 ) }
    dend_25 { pt3dadd( -11.2582, 66.9321, 160.228, 0.33 ) }
    dend_25 { pt3dadd( -16.6657, 68.5684, 169.292, 0.33 ) }
    dend_25 { pt3dadd( -22.5635, 68.8324, 178.18, 0.33 ) }
    dend_25 { pt3dadd( -28.5849, 67.2512, 186.844, 0.33 ) }
    dend_25 { pt3dadd( -34.1024, 66.091, 195.901, 0.33 ) }
    dend_25 { pt3dadd( -38.8948, 63.9264, 205.188, 0.33 ) }
    dend_25 { pt3dadd( -41.3138, 60.1188, 214.88, 0.33 ) }
    dend_25 { pt3dadd( -44.3858, 56.6137, 224.496, 0.33 ) }
    dend_25 { pt3dadd( -45.7118, 54.301, 234.832, 0.33 ) }
    dend_25 { pt3dadd( -46.1746, 51.7416, 245.186, 0.33 ) }
    dend_25 { pt3dadd( -44.7588, 50.8053, 255.719, 0.33 ) }
    dend_25 { pt3dadd( -43.3415, 49.1774, 266.169, 0.33 ) }
    dend_25 { pt3dadd( -40.5031, 47.6923, 276.347, 0.33 ) }
    dend_25 { pt3dadd( -38.6557, 47.7204, 286.854, 0.33 ) }
    dend_25 { pt3dadd( -35.1498, 47.8592, 296.929, 0.33 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.67884, 37.2332, 17.0215, 0.67 ) }
    dend_15 { pt3dadd( -2.72834, 38.7124, 17.9738, 0.67 ) }
    dend_15 { pt3dadd( -2.17006, 42.5684, 19.7348, 0.67 ) }
    dend_15 { pt3dadd( -1.8609, 44.1863, 20.3555, 0.67 ) }
    dend_15 { pt3dadd( -1.43196, 46.1308, 20.9874, 0.67 ) }
    dend_15 { pt3dadd( -1.16828, 47.5134, 21.3747, 0.67 ) }
    dend_15 { pt3dadd( -0.7583, 50.3257, 22.1626, 0.67 ) }
    dend_15 { pt3dadd( 0.18939, 54.9811, 23.2333, 0.33 ) }
    dend_15 { pt3dadd( 0.36889, 55.7223, 23.3467, 0.67 ) }
    dend_15 { pt3dadd( 0.690604, 57.0919, 23.5458, 0.33 ) }
    dend_15 { pt3dadd( 1.02656, 59.5741, 23.9538, 0.33 ) }
    dend_15 { pt3dadd( 1.05973, 61.5242, 24.2553, 0.67 ) }
    dend_15 { pt3dadd( 3.44964, 68.2329, 25.7571, 0.67 ) }
    dend_15 { pt3dadd( 5.90269, 74.6517, 28.123, 0.67 ) }
    dend_15 { pt3dadd( 7.3338, 81.3395, 30.6333, 0.67 ) }
    dend_15 { pt3dadd( 8.97999, 87.5607, 34.0072, 0.67 ) }
    dend_15 { pt3dadd( 11.3393, 93.6216, 37.2226, 0.67 ) }
    dend_15 { pt3dadd( 14.9393, 98.842, 40.6746, 0.67 ) }
    dend_15 { pt3dadd( 18.47, 104.039, 44.2313, 0.67 ) }
    dend_15 { pt3dadd( 21.3406, 109.501, 48.0041, 0.67 ) }
    dend_15 { pt3dadd( 24.4339, 114.863, 51.7342, 0.67 ) }
    dend_15 { pt3dadd( 27.2124, 120.27, 55.6492, 0.67 ) }
    dend_15 { pt3dadd( 30.544, 124.982, 59.9669, 0.67 ) }
    dend_15 { pt3dadd( 34.2242, 129.277, 64.4131, 0.67 ) }
    dend_15 { pt3dadd( 37.0161, 133.558, 69.4826, 0.67 ) }
    dend_15 { pt3dadd( 40.6267, 137.43, 74.3406, 0.67 ) }
    dend_15 { pt3dadd( 43.4911, 141.416, 79.5956, 0.67 ) }
    dend_15 { pt3dadd( 44.9757, 145.601, 85.2667, 0.67 ) }
    dend_15 { pt3dadd( 46.7148, 149.741, 90.8941, 0.67 ) }
    dend_15 { pt3dadd( 47.6361, 152.528, 97.4394, 0.67 ) }
    dend_15 { pt3dadd( 48.8669, 154.879, 104.095, 0.67 ) }
    dend_15 { pt3dadd( 51.0331, 158.054, 110.156, 0.67 ) }
    dend_15 { pt3dadd( 53.6619, 161.746, 115.731, 0.67 ) }
    dend_15 { pt3dadd( 57.0912, 165.051, 121.097, 0.67 ) }
    dend_15 { pt3dadd( 60.0113, 169.343, 126.083, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 92/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.67884, 37.2332, 17.0215, 0.67 ) }
    dend_14 { pt3dadd( -2.25723, 39.3309, 19.1392, 0.67 ) }
    dend_14 { pt3dadd( -2.01076, 40.5572, 20.3772, 0.67 ) }
    dend_14 { pt3dadd( -0.75704, 45.7119, 27.3534, 0.67 ) }
    dend_14 { pt3dadd( 0.560333, 51.3308, 33.9669, 0.67 ) }
    dend_14 { pt3dadd( 3.31949, 57.4078, 39.6839, 0.67 ) }
    dend_14 { pt3dadd( 5.99686, 63.5267, 45.3976, 0.67 ) }
    dend_14 { pt3dadd( 10.5507, 69.0395, 50.4678, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 14.3983, 75.2308, 55.3765, 0.67 ) }
    dend_14 { pt3dadd( 17.5901, 80.7311, 61.4145, 0.67 ) }
    dend_14 { pt3dadd( 21.7963, 87.1232, 65.7471, 0.67 ) }
    dend_14 { pt3dadd( 26.2595, 93.0157, 70.4792, 0.67 ) }
    dend_14 { pt3dadd( 30.2648, 98.3446, 76.1654, 0.67 ) }
    dend_14 { pt3dadd( 34.2097, 103.829, 81.7525, 0.67 ) }
    dend_14 { pt3dadd( 38.1477, 109.05, 87.5795, 0.67 ) }
    dend_14 { pt3dadd( 41.9784, 114.99, 92.7894, 0.67 ) }
    dend_14 { pt3dadd( 44.4521, 121.216, 98.4851, 0.67 ) }
    dend_14 { pt3dadd( 47.8259, 126.575, 104.545, 0.67 ) }
    dend_14 { pt3dadd( 51.834, 131.643, 110.453, 0.67 ) }
    dend_14 { pt3dadd( 55.4729, 137.998, 115.321, 0.67 ) }
    dend_14 { pt3dadd( 59.7373, 144.067, 120.025, 0.67 ) }
    dend_14 { pt3dadd( 63.766, 149.631, 125.475, 0.67 ) }
    dend_14 { pt3dadd( 69.2144, 154.795, 129.977, 0.67 ) }
    dend_14 { pt3dadd( 75.3433, 158.784, 134.736, 0.67 ) }
    dend_14 { pt3dadd( 82.8227, 161.418, 138.317, 0.67 ) }
    dend_14 { pt3dadd( 90.1208, 163.298, 142.651, 0.67 ) }
    dend_14 { pt3dadd( 96.8747, 164.669, 147.945, 0.67 ) }
    dend_14 { pt3dadd( 103.352, 165.264, 153.704, 0.67 ) }
    dend_14 { pt3dadd( 108.689, 165.748, 160.542, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -39.7621, -10.7572, 21.5899, 0.67 ) }
    dend_7 { pt3dadd( -51.0026, -16.5323, 20.7292, 0.67 ) }
    dend_7 { pt3dadd( -62.9714, -20.5698, 20.8446, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 24/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -39.7621, -10.7572, 21.5899, 0.67 ) }
    dend_6 { pt3dadd( -47.2129, -16.7638, 22.1977, 0.67 ) }
    dend_6 { pt3dadd( -54.8369, -22.1424, 24.3183, 0.67 ) }
    dend_6 { pt3dadd( -62.3524, -27.5522, 26.7278, 0.67 ) }
    dend_6 { pt3dadd( -69.8039, -32.6978, 29.793, 0.67 ) }
    dend_6 { pt3dadd( -77.3902, -38.1344, 31.9082, 0.67 ) }
    dend_6 { pt3dadd( -85.3637, -42.1543, 35.2525, 0.67 ) }
    dend_6 { pt3dadd( -94.022, -45.1926, 37.7891, 0.67 ) }
    dend_6 { pt3dadd( -101.908, -49.9718, 40.2868, 0.67 ) }
    dend_6 { pt3dadd( -109.633, -54.9026, 42.9931, 0.67 ) }
    dend_6 { pt3dadd( -117.351, -59.3252, 46.4491, 0.67 ) }
    dend_6 { pt3dadd( -125.112, -63.8904, 49.6213, 0.67 ) }
    dend_6 { pt3dadd( -131.722, -69.6799, 53.4243, 0.67 ) }
    dend_6 { pt3dadd( -137.65, -75.0117, 58.6985, 0.67 ) }
    dend_6 { pt3dadd( -143.091, -79.8969, 64.838, 0.67 ) }
    dend_6 { pt3dadd( -148.047, -85.3043, 70.9681, 0.67 ) }
    dend_6 { pt3dadd( -153.724, -90.7776, 76.3769, 0.67 ) }
    dend_6 { pt3dadd( -158.807, -97.5796, 80.8622, 0.67 ) }
    dend_6 { pt3dadd( -162.812, -104.863, 85.6999, 0.67 ) }
    dend_6 { pt3dadd( -167.08, -112.379, 89.9418, 0.67 ) }
    dend_6 { pt3dadd( -170.254, -120.111, 94.7317, 0.67 ) }
    dend_6 { pt3dadd( -173.856, -126.79, 100.604, 0.67 ) }
    dend_6 { pt3dadd( -177.659, -134.249, 105.35, 0.67 ) }
    dend_6 { pt3dadd( -181.342, -142.559, 108.623, 0.67 ) }
    dend_6 { pt3dadd( -185.294, -151.118, 110.798, 0.67 ) }
    dend_6 { pt3dadd( -190.149, -159.451, 111.517, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.38344, -21.2339, 28.2014, 0.67 ) }
    dend_4 { pt3dadd( -8.52233, -33.2545, 30.5112, 0.67 ) }
    dend_4 { pt3dadd( -9.39843, -45.0966, 34.1047, 0.67 ) }
    dend_4 { pt3dadd( -11.3172, -56.9149, 37.3766, 0.67 ) }
    dend_4 { pt3dadd( -11.3203, -68.9417, 40.4432, 0.67 ) }
    dend_4 { pt3dadd( -9.03543, -80.9597, 42.4817, 0.67 ) }
    dend_4 { pt3dadd( -9.80663, -93.3803, 42.3254, 0.67 ) }
    dend_4 { pt3dadd( -11.1166, -105.631, 44.0027, 0.67 ) }
    dend_4 { pt3dadd( -13.0208, -117.93, 43.9026, 0.67 ) }
    dend_4 { pt3dadd( -13.7409, -130.068, 41.2731, 0.67 ) }
    dend_4 { pt3dadd( -13.9224, -141.555, 36.5647, 0.67 ) }
    dend_4 { pt3dadd( -12.8294, -152.991, 31.8836, 0.67 ) }
    dend_4 { pt3dadd( -11.0263, -164.615, 27.9357, 0.67 ) }
    dend_4 { pt3dadd( -7.18259, -176.124, 25.4477, 0.67 ) }
    dend_4 { pt3dadd( -1.72519, -186.091, 20.677, 0.67 ) }
    dend_4 { pt3dadd( 2.7764, -195.402, 13.9997, 0.67 ) }
    dend_4 { pt3dadd( 6.63153, -206.324, 9.66392, 0.67 ) }
    dend_4 { pt3dadd( 11.3037, -217.634, 7.83945, 0.67 ) }
    dend_4 { pt3dadd( 15.7327, -229.033, 5.93152, 0.67 ) }
    dend_4 { pt3dadd( 20.454, -240.365, 4.40523, 0.67 ) }
    dend_4 { pt3dadd( 22.7777, -252.249, 1.67555, 0.67 ) }
    dend_4 { pt3dadd( 23.8143, -264.447, -0.483305, 0.67 ) }
    dend_4 { pt3dadd( 25.3864, -276.339, -3.69748, 0.67 ) }
    dend_4 { pt3dadd( 26.9159, -287.52, -8.82134, 0.67 ) }
    dend_4 { pt3dadd( 27.6628, -298.91, -13.6807, 0.67 ) }
    dend_4 { pt3dadd( 26.8927, -309.456, -20.1255, 0.67 ) }
    dend_4 { pt3dadd( 24.0558, -319.016, -27.4201, 0.67 ) }
    dend_4 { pt3dadd( 23.0283, -329.378, -34.1121, 0.67 ) }
    dend_4 { pt3dadd( 20.1525, -340.189, -39.4653, 0.67 ) }
    dend_4 { pt3dadd( 15.2382, -349.226, -46.289, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 80/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.38344, -21.2339, 28.2014, 0.67 ) }
    dend_3 { pt3dadd( -8.39401, -32.6136, 30.1287, 0.67 ) }
    dend_3 { pt3dadd( -9.80103, -44.2278, 30.9414, 0.67 ) }
    dend_3 { pt3dadd( -12.3828, -55.6593, 30.4668, 0.67 ) }
    dend_3 { pt3dadd( -16.2537, -66.6319, 29.0848, 0.67 ) }
    dend_3 { pt3dadd( -21.7486, -76.6634, 26.6899, 0.67 ) }
    dend_3 { pt3dadd( -27.4546, -85.8099, 22.2582, 0.67 ) }
    dend_3 { pt3dadd( -34.3966, -94.4257, 18.6523, 0.67 ) }
    dend_3 { pt3dadd( -41.3282, -103.706, 17.344, 0.67 ) }
    dend_3 { pt3dadd( -47.7617, -112.863, 14.0845, 0.67 ) }
    dend_3 { pt3dadd( -53.4484, -121.936, 9.48721, 0.67 ) }
    dend_3 { pt3dadd( -60.6561, -129.633, 4.63656, 0.67 ) }
    dend_3 { pt3dadd( -66.9111, -138.801, 1.0725, 0.67 ) }
    dend_3 { pt3dadd( -72.8344, -148.694, -0.786745, 0.67 ) }
    dend_3 { pt3dadd( -77.9563, -159.202, -1.25793, 0.67 ) }
    dend_3 { pt3dadd( -81.527, -170.348, -0.694265, 0.67 ) }
    dend_3 { pt3dadd( -84.8787, -181.481, -2.18496, 0.67 ) }
    dend_3 { pt3dadd( -88.7891, -192.502, -2.92144, 0.67 ) }
    dend_3 { pt3dadd( -91.6816, -203.4, -6.10049, 0.67 ) }
    dend_3 { pt3dadd( -94.4771, -214.488, -8.67896, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_3 { pt3dadd( -96.5653, -225.958, -9.97614, 0.67 ) }
    dend_3 { pt3dadd( -98.3011, -237.557, -10.3104, 0.67 ) }
    dend_3 { pt3dadd( -101.088, -248.946, -10.1512, 0.67 ) }
    dend_3 { pt3dadd( -102.34, -260.489, -11.8319, 0.67 ) }
    dend_3 { pt3dadd( -103.793, -272.109, -12.5526, 0.67 ) }
    dend_3 { pt3dadd( -105.218, -283.751, -12.3274, 0.67 ) }
    dend_3 { pt3dadd( -108.321, -295.053, -12.6764, 0.67 ) }
    dend_3 { pt3dadd( -113.386, -305.406, -10.7605, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 8/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 2.27994, -105.094, 17.8968, 0.67 ) }
    dend_38 { pt3dadd( 2.88718, -106.761, 14.0836, 0.67 ) }
    dend_38 { pt3dadd( 3.14493, -108.025, 12.1256, 0.67 ) }
    dend_38 { pt3dadd( 3.50919, -110.826, 8.77199, 0.67 ) }
    dend_38 { pt3dadd( 3.46872, -121.784, -1.78518, 0.67 ) }
    dend_38 { pt3dadd( 3.28671, -124.332, -3.8215, 0.67 ) }
    dend_38 { pt3dadd( 2.79334, -128.178, -6.59093, 0.33 ) }
    dend_38 { pt3dadd( 1.95274, -132.809, -9.46445, 0.33 ) }
    dend_38 { pt3dadd( 1.56335, -134.299, -10.134, 1.33 ) }
    dend_38 { pt3dadd( -0.81452, -141.67, -12.4325, 0.67 ) }
    dend_38 { pt3dadd( -2.18883, -145.637, -12.9049, 0.67 ) }
    dend_38 { pt3dadd( -2.92951, -147.754, -13.1939, 0.67 ) }
    dend_38 { pt3dadd( -4.90988, -152.496, -14.0081, 0.67 ) }
    dend_38 { pt3dadd( -6.7086, -156.524, -14.885, 1.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 22/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.27994, -105.094, 17.8968, 0.33 ) }
    dend_37 { pt3dadd( 4.90645, -106.914, 16.7148, 0.33 ) }
    dend_37 { pt3dadd( 4.90645, -106.914, 16.7148, 0.67 ) }
    dend_37 { pt3dadd( 9.07047, -109.799, 14.8409, 0.33 ) }
    dend_37 { pt3dadd( 10.1705, -110.561, 14.3458, 0.33 ) }
    dend_37 { pt3dadd( 14.4912, -113.554, 12.4014, 0.67 ) }
    dend_37 { pt3dadd( 25.8466, -119.8, 8.86677, 0.67 ) }
    dend_37 { pt3dadd( 37.3707, -126.147, 6.1424, 0.67 ) }
    dend_37 { pt3dadd( 48.9627, -131.566, 2.10927, 0.67 ) }
    dend_37 { pt3dadd( 59.1727, -138.574, -3.14363, 0.67 ) }
    dend_37 { pt3dadd( 68.9418, -147.395, -6.14994, 0.67 ) }
    dend_37 { pt3dadd( 77.809, -157.431, -8.1531, 0.67 ) }
    dend_37 { pt3dadd( 88.1699, -165.701, -10.6196, 0.67 ) }
    dend_37 { pt3dadd( 97.4839, -174.72, -14.4102, 0.67 ) }
    dend_37 { pt3dadd( 105.373, -185.466, -16.9373, 0.67 ) }
    dend_37 { pt3dadd( 113.403, -196.376, -17.7861, 0.67 ) }
    dend_37 { pt3dadd( 121.571, -207.198, -18.3605, 0.67 ) }
    dend_37 { pt3dadd( 129.614, -218.117, -17.7768, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -5.93042, -53.1172, 14.4389, 0.67 ) }
    dend_35 { pt3dadd( -8.28124, -54.6901, 16.0518, 0.67 ) }
    dend_35 { pt3dadd( -11.6116, -56.6366, 18.0756, 1.33 ) }
    dend_35 { pt3dadd( -14.1955, -57.9846, 19.4777, 0.33 ) }
    dend_35 { pt3dadd( -15.5192, -58.7055, 20.2475, 0.33 ) }
    dend_35 { pt3dadd( -17.4388, -59.7107, 20.9422, 1.33 ) }
    dend_35 { pt3dadd( -19.6604, -60.8245, 21.3867, 0.33 ) }
    dend_35 { pt3dadd( -21.8722, -61.7049, 21.1965, 1.33 ) }
    dend_35 { pt3dadd( -24.2859, -62.4813, 20.4036, 0.33 ) }
    dend_35 { pt3dadd( -26.8474, -63.1422, 19.2294, 0.33 ) }
    dend_35 { pt3dadd( -35.5913, -65.1853, 13.8356, 0.67 ) }
    dend_35 { pt3dadd( -36.6055, -65.4288, 13.0845, 0.33 ) }
    dend_35 { pt3dadd( -39.1533, -66.1359, 10.972, 1.33 ) }
    dend_35 { pt3dadd( -40.4877, -66.5152, 9.80457, 0.33 ) }
    dend_35 { pt3dadd( -40.4877, -66.5152, 9.80457, 0.67 ) }
    dend_35 { pt3dadd( -44.1983, -67.395, 7.27203, 0.33 ) }
    dend_35 { pt3dadd( -45.7414, -67.806, 6.73756, 2.0 ) }
    dend_35 { pt3dadd( -48.0386, -68.5678, 6.05171, 0.33 ) }
    dend_35 { pt3dadd( -48.6819, -68.8332, 5.9132, 0.67 ) }
    dend_35 { pt3dadd( -50.6648, -69.5705, 5.29945, 0.33 ) }
    dend_35 { pt3dadd( -52.485, -70.1689, 4.73513, 0.33 ) }
    dend_35 { pt3dadd( -53.2679, -70.3897, 4.53039, 0.67 ) }
    dend_35 { pt3dadd( -55.7725, -71.0133, 3.83478, 0.33 ) }
    dend_35 { pt3dadd( -56.5889, -71.1755, 3.56892, 0.67 ) }
    dend_35 { pt3dadd( -61.9726, -72.5122, 1.74182, 1.33 ) }
    dend_35 { pt3dadd( -64.5407, -73.2375, 0.857172, 0.33 ) }
    dend_35 { pt3dadd( -65.9815, -73.6378, 0.318211, 1.33 ) }
    dend_35 { pt3dadd( -68.1714, -74.1413, -0.482735, 0.33 ) }
    dend_35 { pt3dadd( -70.6478, -74.6042, -1.20214, 1.33 ) }
    dend_35 { pt3dadd( -74.0789, -75.2516, -1.88875, 0.33 ) }
    dend_35 { pt3dadd( -74.9944, -75.3953, -2.01964, 0.67 ) }
    dend_35 { pt3dadd( -79.2913, -75.9792, -2.78645, 0.33 ) }
    dend_35 { pt3dadd( -80.258, -76.1107, -2.96179, 0.67 ) }
    dend_35 { pt3dadd( -84.4209, -76.6546, -3.82846, 0.33 ) }
    dend_35 { pt3dadd( -85.958, -76.8741, -4.21201, 2.0 ) }
    dend_35 { pt3dadd( -91.04, -77.6222, -5.7543, 0.33 ) }
    dend_35 { pt3dadd( -91.8619, -77.7987, -6.01705, 1.33 ) }
    dend_35 { pt3dadd( -93.893, -78.4437, -6.75982, 0.33 ) }
    dend_35 { pt3dadd( -96.0165, -79.3069, -7.70027, 0.67 ) }
    dend_35 { pt3dadd( -99.6535, -81.1628, -9.52284, 0.33 ) }
    dend_35 { pt3dadd( -100.709, -81.818, -10.0207, 2.0 ) }
    dend_35 { pt3dadd( -102.354, -83.1874, -10.6253, 0.67 ) }
    dend_35 { pt3dadd( -104.776, -85.3412, -11.3236, 0.33 ) }
    dend_35 { pt3dadd( -105.712, -86.2783, -11.4782, 1.33 ) }
    dend_35 { pt3dadd( -107.547, -88.2789, -11.6557, 0.33 ) }
    dend_35 { pt3dadd( -108.273, -89.115, -11.6818, 0.67 ) }
    dend_35 { pt3dadd( -111.161, -92.4356, -11.8165, 0.33 ) }
    dend_35 { pt3dadd( -111.785, -93.1509, -11.8239, 0.67 ) }
    dend_35 { pt3dadd( -113.854, -95.4796, -11.7575, 0.33 ) }
    dend_35 { pt3dadd( -116.352, -98.1967, -11.8252, 1.33 ) }
    dend_35 { pt3dadd( -119.757, -101.741, -12.0662, 0.33 ) }
    dend_35 { pt3dadd( -120.21, -102.183, -12.1104, 1.33 ) }
    dend_35 { pt3dadd( -124.707, -106.182, -12.6985, 0.33 ) }
    dend_35 { pt3dadd( -125.569, -106.925, -12.8159, 1.33 ) }
    dend_35 { pt3dadd( -127.854, -108.772, -13.1066, 0.33 ) }
    dend_35 { pt3dadd( -128.338, -109.163, -13.1457, 0.67 ) }
    dend_35 { pt3dadd( -129.781, -110.249, -13.3409, 0.33 ) }
    dend_35 { pt3dadd( -131.38, -111.302, -13.6581, 1.33 ) }
    dend_35 { pt3dadd( -133.276, -112.343, -14.1694, 0.33 ) }
    dend_35 { pt3dadd( -133.276, -112.343, -14.1694, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_35 { pt3dadd( -135.049, -113.238, -14.4718, 0.33 ) }
    dend_35 { pt3dadd( -135.834, -113.629, -14.5024, 0.67 ) }
    dend_35 { pt3dadd( -139.448, -115.386, -14.2517, 0.33 ) }
    dend_35 { pt3dadd( -140.007, -115.656, -14.1457, 0.67 ) }
    dend_35 { pt3dadd( -141.63, -116.383, -13.7281, 0.33 ) }
    dend_35 { pt3dadd( -142.466, -116.716, -13.4606, 1.33 ) }
    dend_35 { pt3dadd( -146.24, -117.976, -11.8796, 0.33 ) }
    dend_35 { pt3dadd( -146.506, -118.065, -11.73, 0.67 ) }
    dend_35 { pt3dadd( -147.732, -118.52, -10.6685, 0.33 ) }
    dend_35 { pt3dadd( -148.22, -118.711, -10.2108, 1.33 ) }
    dend_35 { pt3dadd( -149.715, -119.292, -8.60166, 0.33 ) }
    dend_35 { pt3dadd( -149.997, -119.431, -8.28843, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 12/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.93042, -53.1172, 14.4389, 0.67 ) }
    dend_34 { pt3dadd( -8.92063, -58.9113, 14.4258, 0.67 ) }
    dend_34 { pt3dadd( -10.3718, -61.736, 14.8534, 0.67 ) }
    dend_34 { pt3dadd( -11.8609, -64.4292, 15.2889, 0.67 ) }
    dend_34 { pt3dadd( -12.5089, -65.6013, 15.4784, 0.67 ) }
    dend_34 { pt3dadd( -13.3972, -67.208, 15.7382, 0.33 ) }
    dend_34 { pt3dadd( -14.4832, -69.1722, 16.0558, 0.33 ) }
    dend_34 { pt3dadd( -16.6059, -73.4161, 17.1813, 1.33 ) }
    dend_34 { pt3dadd( -18.5689, -77.4794, 18.7942, 0.67 ) }
    dend_34 { pt3dadd( -21.8304, -87.8132, 21.635, 0.67 ) }
    dend_34 { pt3dadd( -24.8729, -98.6017, 22.2056, 0.67 ) }
    dend_34 { pt3dadd( -28.4347, -109.189, 23.206, 0.67 ) }
    dend_34 { pt3dadd( -32.7154, -119.053, 26.2766, 0.67 ) }
    dend_34 { pt3dadd( -34.7861, -129.062, 30.8224, 0.67 ) }
    dend_34 { pt3dadd( -35.4835, -140.132, 32.5983, 0.67 ) }
    dend_34 { pt3dadd( -35.9253, -151.365, 32.659, 0.67 ) }
    dend_34 { pt3dadd( -34.404, -162.471, 31.9239, 0.67 ) }
    dend_34 { pt3dadd( -32.6167, -173.515, 30.9418, 0.67 ) }
    dend_34 { pt3dadd( -32.459, -184.751, 31.2339, 0.67 ) }
    dend_34 { pt3dadd( -30.0117, -195.566, 32.933, 0.67 ) }
    dend_34 { pt3dadd( -27.4783, -206.22, 35.3274, 0.67 ) }
    dend_34 { pt3dadd( -22.6973, -215.587, 39.0389, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -62.9714, -20.5698, 20.8446, 0.67 ) }
    dend_9 { pt3dadd( -73.0245, -23.203, 20.5989, 0.67 ) }
    dend_9 { pt3dadd( -83.3548, -23.6711, 19.7627, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -62.9714, -20.5698, 20.8446, 0.67 ) }
    dend_8 { pt3dadd( -70.7941, -25.7089, 21.2776, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 39/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -83.3548, -23.6711, 19.7627, 0.67 ) }
    dend_11 { pt3dadd( -91.5677, -24.7226, 19.4497, 0.67 ) }
    dend_11 { pt3dadd( -99.4185, -27.4295, 19.1557, 0.67 ) }
    dend_11 { pt3dadd( -107.255, -30.1844, 18.9623, 0.67 ) }
    dend_11 { pt3dadd( -115.347, -31.7163, 17.9512, 0.67 ) }
    dend_11 { pt3dadd( -123.504, -32.4607, 19.1306, 0.67 ) }
    dend_11 { pt3dadd( -131.711, -33.5935, 19.0063, 0.67 ) }
    dend_11 { pt3dadd( -139.648, -35.8519, 18.0433, 0.67 ) }
    dend_11 { pt3dadd( -147.557, -38.3687, 18.2232, 0.67 ) }
    dend_11 { pt3dadd( -155.56, -40.0224, 19.5695, 0.67 ) }
    dend_11 { pt3dadd( -163.556, -42.013, 20.4602, 0.67 ) }
    dend_11 { pt3dadd( -171.803, -42.6585, 20.7924, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 51/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -83.3548, -23.6711, 19.7627, 0.67 ) }
    dend_10 { pt3dadd( -95.5862, -23.6103, 21.1586, 0.67 ) }
    dend_10 { pt3dadd( -107.451, -22.6217, 24.2783, 0.67 ) }
    dend_10 { pt3dadd( -119.033, -19.367, 26.9109, 0.67 ) }
    dend_10 { pt3dadd( -130.874, -16.9794, 29.2857, 0.67 ) }
    dend_10 { pt3dadd( -142.374, -13.5322, 32.0396, 0.67 ) }
    dend_10 { pt3dadd( -154.302, -10.647, 32.9845, 0.67 ) }
    dend_10 { pt3dadd( -166.507, -9.31069, 33.8376, 0.67 ) }
    dend_10 { pt3dadd( -178.695, -7.75342, 34.5624, 0.67 ) }
    dend_10 { pt3dadd( -190.84, -6.94274, 32.6565, 0.67 ) }
    dend_10 { pt3dadd( -202.739, -4.08894, 31.3374, 0.67 ) }
    dend_10 { pt3dadd( -214.765, -1.898, 29.8809, 0.67 ) }
    dend_10 { pt3dadd( -226.402, 1.85009, 28.4715, 0.67 ) }
    dend_10 { pt3dadd( -238.42, 3.61575, 26.4477, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_54, dend_47, dend_46, dend_27, dend_20, dend_17, dend_0, dend_57, dend_56, dend_51, dend_48, dend_39, dend_28, dend_22, dend_21, dend_19, dend_18, dend_12, dend_1, dend_61, dend_58, dend_53, dend_52, dend_50, dend_49, dend_43, dend_40, dend_32, dend_29, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_60, dend_59, dend_45, dend_44, dend_42, dend_41, dend_36, dend_33, dend_31, dend_30, dend_26, dend_25, dend_15, dend_14, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_54, dend_47, dend_46, dend_27, dend_20, dend_17, dend_0, dend_57, dend_56, dend_51, dend_48, dend_39, dend_28, dend_22, dend_21, dend_19, dend_18, dend_12, dend_1, dend_61, dend_58, dend_53, dend_52, dend_50, dend_49, dend_43, dend_40, dend_32, dend_29, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_60, dend_59, dend_45, dend_44, dend_42, dend_41, dend_36, dend_33, dend_31, dend_30, dend_26, dend_25, dend_15, dend_14, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_54, dend_47, dend_46, dend_27, dend_20, dend_17, dend_0, axon_0, dend_57, dend_56, dend_51, dend_48, dend_39, dend_28, dend_22, dend_21, dend_19, dend_18, dend_12, dend_1, axon_1, dend_61, dend_58, dend_53, dend_52, dend_50, dend_49, dend_43, dend_40, dend_32, dend_29, dend_24, dend_23, dend_16, dend_13, dend_5, dend_2, dend_60, dend_59, dend_45, dend_44, dend_42, dend_41, dend_36, dend_33, dend_31, dend_30, dend_26, dend_25, dend_15, dend_14, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_5 = new SectionList()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_54 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_46 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_56 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_51 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_48 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_61 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_43 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_40 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_23 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_5 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_45 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_41 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_31 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_26 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_14 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_4 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_3 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_38 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_10 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_20 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_27 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_22 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_47 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_1 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_39 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_17 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_57 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_24 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_58 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_8 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_42 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_27, dend_27, dend_27, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_8, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_54 nseg = 11
    dend_46 nseg = 13
    dend_56 nseg = 9
    dend_51 nseg = 7
    dend_48 nseg = 3
    dend_21 nseg = 7
    dend_19 nseg = 7
    dend_18 nseg = 3
    dend_61 nseg = 9
    dend_53 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_43 nseg = 9
    dend_40 nseg = 13
    dend_29 nseg = 3
    dend_23 nseg = 11
    dend_16 nseg = 7
    dend_5 nseg = 3
    dend_60 nseg = 11
    dend_59 nseg = 11
    dend_45 nseg = 5
    dend_44 nseg = 11
    dend_41 nseg = 3
    dend_36 nseg = 5
    dend_31 nseg = 5
    dend_26 nseg = 13
    dend_25 nseg = 17
    dend_15 nseg = 9
    dend_14 nseg = 11
    dend_6 nseg = 11
    dend_4 nseg = 17
    dend_3 nseg = 15
    dend_38 nseg = 3
    dend_37 nseg = 9
    dend_35 nseg = 9
    dend_34 nseg = 9
    dend_11 nseg = 5
    dend_10 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_LBC_baa757490e_0_0


