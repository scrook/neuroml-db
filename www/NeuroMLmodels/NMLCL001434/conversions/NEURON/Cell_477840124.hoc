// Cell: Cell_477840124
/*
{
  "id" : "Cell_477840124",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "368.286, 438.61, 25.2, 10.917", "373.745, 438.61, 25.2, 10.917", "379.203, 438.61, 25.2, 10.917" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "373.745, 438.61, 25.2, 1.0", "379.586, 452.426, 25.2, 1.0", "385.427, 466.242, 25.2, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "370.214, 434.131, 24.6551, 1.6016", "370.012, 433.025, 24.5272, 1.6016", "369.682, 431.929, 24.4625, 1.6016", "369.324, 430.854, 24.4969, 1.6016", "368.527, 430.073, 24.6406, 1.6016", "367.876, 429.133, 24.7705, 1.6016", "367.186, 428.227, 24.8713, 1.6016" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "379.73, 439.887, 25.6192, 1.144", "380.75, 439.702, 25.8737, 0.9386", "381.754, 439.969, 26.2332, 0.776", "382.639, 440.599, 26.4362, 0.6278", "383.738, 440.841, 26.5586, 0.5262", "384.863, 440.684, 26.6512, 0.6388", "385.98, 440.449, 26.7663, 0.5326", "387.082, 440.228, 26.9511, 0.4896", "388.202, 440.068, 27.1942, 0.5796", "389.344, 440.06, 27.4481, 0.608", "390.488, 440.06, 27.6962, 0.6466", "391.599, 439.926, 28.0067, 0.5576", "392.603, 439.652, 28.4329, 0.4848", "393.668, 439.293, 28.8324, 0.3616", "394.727, 438.86, 29.1315, 0.304", "395.711, 438.279, 29.4557, 0.2822" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "371.283, 443.597, 24.3088, 0.2288", "370.808, 444.622, 24.0531, 0.582", "370.305, 445.647, 23.8252, 0.4732", "369.747, 446.612, 23.55, 0.3882", "369.038, 447.502, 23.3078, 0.3474", "368.365, 448.426, 23.1367, 0.3936", "367.566, 449.245, 23.0342, 0.572", "366.612, 449.873, 22.9513, 0.454", "365.643, 450.482, 22.8945, 0.3532", "364.799, 451.253, 22.855, 0.2794", "364.055, 452.121, 22.8096, 0.2832", "363.056, 452.675, 22.7531, 0.2908", "361.918, 452.628, 22.6814, 0.3044", "361.052, 453.355, 22.5602, 0.332", "360.526, 454.336, 22.3644, 0.3706", "359.559, 454.945, 22.0909, 0.5034" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "368.764, 436.921, 26.9934, 0.9152", "367.721, 436.957, 27.6108, 0.6184", "366.614, 437.133, 28.1646, 0.5024", "365.508, 437.281, 28.6964, 0.6272", "364.446, 437.207, 29.0343, 0.5814", "363.377, 437.206, 29.3572, 0.4678", "362.471, 437.777, 29.6909, 0.3962", "361.441, 438.229, 30.0443, 0.5054", "360.312, 438.279, 30.3948, 0.4492", "359.185, 438.107, 30.7073, 0.4558", "358.105, 438.077, 31.0982, 0.3866", "357.135, 438.075, 31.6002, 0.4244", "356.01, 438.071, 32.0088, 0.376", "355.007, 437.872, 32.046, 0.4036" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "378.044, 438.539, 22.4375, 0.2288", "379.131, 438.218, 21.4824, 0.464", "380.12, 437.773, 20.9504, 0.4856", "381.13, 437.611, 20.8261, 0.6598", "382.074, 437.233, 21.0132, 0.5588", "383.16, 436.882, 21.2517, 0.601", "384.265, 436.779, 21.6208, 0.4802", "385.408, 436.745, 21.8218, 0.5376", "386.483, 436.57, 21.7585, 0.4204", "387.253, 435.791, 21.0706, 0.3762" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "375.096, 443.156, 28.8548, 0.2288", "374.094, 442.737, 30.095, 0.3514", "372.984, 442.846, 31.0898, 0.401", "372.109, 443.539, 31.8004, 0.5858", "371.88, 444.622, 32.209, 0.4808", "371.819, 445.753, 32.3322, 0.3976", "371.655, 446.87, 32.2109, 0.3872", "371.635, 448.011, 32.1286, 0.3588", "372.151, 448.992, 32.149, 0.3482", "373.161, 449.52, 32.3596, 0.3538" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000458001282418
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "385.427, 466.242, 25.2, 1.0", "391.268, 480.058, 25.2, 1.0", "397.11, 493.874, 25.2, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_31",
    "id" : "apic_31",
    "points3d" : [ "367.186, 428.227, 24.8713, 1.6016", "367.7, 427.671, 26.6871, 0.2288", "367.049, 427.636, 27.5548, 0.283", "366.221, 428.378, 28.2176, 0.2902", "365.734, 429.294, 28.819, 0.3032", "364.95, 429.188, 29.3852, 0.3298", "364.237, 428.33, 29.9771, 0.366", "363.225, 428.107, 30.6765, 0.4964", "362.562, 428.47, 31.6596, 0.4326", "362.361, 429.118, 32.8507, 0.4242", "362.894, 428.476, 34.1334, 0.3338", "363.579, 427.654, 35.1935, 0.3", "363.626, 426.551, 36.1483, 0.2746", "363.547, 425.494, 37.0073, 0.2746", "362.996, 424.76, 37.8496, 0.2748", "362.163, 424.05, 38.4989, 0.2748", "361.823, 423.199, 39.2238, 0.2752", "361.674, 422.238, 40.1232, 0.2758", "361.306, 421.248, 41.0878, 0.2766", "360.532, 420.479, 42.049, 0.2784", "360.016, 420.761, 43.1875, 0.2816", "359.624, 421.732, 44.2683, 0.2876", "359.493, 422.19, 45.472, 0.2986", "358.808, 422.129, 46.6833, 0.321", "357.686, 422.246, 47.7142, 0.3502", "356.631, 422.217, 48.6475, 0.466", "355.631, 422.5, 49.4491, 0.3814", "354.676, 423.084, 50.1043, 0.305", "354.116, 424.041, 50.5658, 0.2288", "353.329, 424.8, 51.3612, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "367.186, 428.227, 24.8713, 1.6016", "366.377, 427.654, 24.0954, 1.4872", "365.547, 426.936, 23.7392, 1.4872", "364.974, 425.947, 23.4486, 1.4872", "364.311, 425.013, 23.2361, 1.4872", "363.647, 424.082, 23.0952, 1.4872", "363.133, 423.06, 23.0199, 1.4872", "362.615, 422.041, 23.0026, 1.4872", "362.101, 421.018, 23.0126, 1.4872", "361.612, 419.985, 23.0765, 1.4872" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "395.711, 438.279, 29.4557, 0.2822", "396.047, 438.279, 28.8019, 0.2882", "397.088, 438.494, 28.4855, 0.3012", "398.211, 438.659, 28.2055, 0.3188", "399.346, 438.641, 27.928, 0.382", "400.474, 438.511, 27.6354, 0.3496", "401.587, 438.297, 27.337, 0.3302", "402.555, 437.764, 27.0242, 0.3252", "403.411, 437.031, 26.7114, 0.394", "404.126, 436.148, 26.4351, 0.3716", "404.688, 435.154, 26.2111, 0.3718", "405.015, 434.065, 26.0361, 0.3984", "405.293, 432.955, 25.8924, 0.5492", "405.812, 431.973, 25.7029, 0.5644", "406.449, 431.047, 25.4752, 0.5034", "407.19, 430.182, 25.2826, 0.5964", "407.871, 429.268, 25.1258, 0.4526", "408.254, 428.221, 24.9592, 0.3508", "408.605, 427.141, 24.8332, 0.2746", "409.052, 426.114, 24.8651, 0.2746", "409.362, 425.031, 25.0152, 0.2746", "409.424, 423.897, 25.2076, 0.2746", "409.443, 422.755, 25.4232, 0.2746", "409.449, 421.626, 25.6897, 0.2746", "409.44, 420.494, 25.9711, 0.2746", "409.414, 419.355, 26.2172, 0.2746", "409.551, 418.227, 26.441, 0.2746", "409.799, 417.12, 26.6518, 0.2746", "410.077, 416.017, 26.7708, 0.2746", "410.362, 414.927, 26.7781, 0.2746", "410.75, 413.863, 26.8142, 0.2746", "411.178, 412.83, 26.9304, 0.2746", "411.277, 411.702, 27.0248, 0.2746", "411.283, 410.56, 27.0841, 0.2746", "411.323, 409.418, 27.1572, 0.2746", "411.381, 408.276, 27.2504, 0.2746", "411.451, 407.136, 27.3431, 0.2746", "411.565, 405.998, 27.4492, 0.2748", "411.686, 404.861, 27.5752, 0.2748", "411.711, 403.716, 27.7158, 0.2752", "411.469, 402.622, 27.7934, 0.2758", "411.296, 401.495, 27.8715, 0.2766", "411.23, 400.985, 29.0766, 0.2782" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "395.711, 438.279, 29.4557, 0.2822", "396.007, 437.746, 31.9231, 0.2288", "396.411, 437.097, 33.0201, 0.2766", "396.602, 436.127, 34.228, 0.2782", "396.786, 435.015, 35.3332, 0.2814", "397.67, 434.591, 36.416, 0.287", "398.674, 434.759, 37.457, 0.2988", "399.103, 435.699, 38.3922, 0.3142", "399.527, 436.397, 40.5807, 0.3734" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "359.559, 454.945, 22.0909, 0.5034", "359.107, 455.694, 23.5712, 0.4518", "358.182, 456.176, 24.1965, 0.4294", "357.107, 456.537, 24.7722, 0.4912", "356.062, 457.002, 25.2664, 0.562", "355.07, 457.57, 25.6906, 0.6756", "354.019, 458.01, 26.0767, 0.5146", "353.111, 457.735, 26.593, 0.418", "352.381, 456.916, 27.169, 0.4032", "351.276, 456.693, 27.7122, 0.4928", "350.29, 457.204, 28.2828, 0.7768", "349.245, 457.574, 28.8565, 0.7334", "348.234, 457.764, 29.4792, 0.6724", "347.141, 457.52, 30.6552, 0.6926" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "359.559, 454.945, 22.0909, 0.5034", "359.01, 455.103, 21.7907, 0.2288", "357.92, 455.442, 21.695, 0.3298", "356.901, 455.576, 21.3702, 0.402", "355.819, 455.849, 20.9583, 0.389", "354.941, 456.576, 20.5467, 0.3914", "354.275, 457.465, 20.0715, 0.4964", "353.263, 457.97, 19.6042, 0.4326", "352.283, 458.553, 19.2016, 0.4242", "351.297, 459.031, 18.7883, 0.3338", "350.186, 459.134, 17.901, 0.3" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "355.007, 437.872, 32.046, 0.4036", "354.918, 438.452, 30.5318, 0.3428", "354.639, 438.804, 29.7654, 0.3166", "353.591, 439.257, 29.1516, 0.3048", "352.506, 439.572, 28.6658, 0.333", "351.41, 439.615, 28.2489, 0.3722", "350.306, 439.416, 28.0269, 0.5062", "349.252, 439.428, 28.0938, 0.4582", "348.184, 439.762, 28.2621, 0.4352", "347.062, 439.961, 28.385, 0.531", "345.953, 440.181, 28.474, 0.4916", "344.858, 440.365, 28.5634, 0.5592", "343.797, 440.365, 28.7902, 0.4606", "342.75, 440.365, 29.0735, 0.4482", "341.62, 440.29, 29.311, 0.5118", "340.497, 440.302, 29.5439, 0.6684", "339.362, 440.417, 29.727, 0.5424", "338.219, 440.398, 29.8472, 0.4984", "337.12, 440.145, 29.9012, 0.4134", "336.096, 439.639, 29.934, 0.4986", "335.051, 439.189, 29.9706, 0.3946", "333.962, 438.838, 30.0045, 0.328", "332.841, 438.629, 30.046, 0.2794", "331.71, 438.685, 30.112, 0.2834", "330.571, 438.757, 30.1963, 0.291", "329.525, 438.416, 30.331, 0.3062", "328.435, 438.217, 30.3934, 0.3276", "327.364, 437.871, 30.5264, 0.3994", "326.252, 437.653, 30.6998, 0.3768", "325.143, 437.51, 30.8706, 0.405", "324.219, 436.887, 31.0556, 0.3454", "323.103, 436.638, 31.2063, 0.3214", "321.982, 436.439, 31.3093, 0.314", "320.849, 436.375, 31.3085, 0.3496", "319.717, 436.315, 31.2318, 0.4026", "318.618, 436.069, 31.1704, 0.5666", "317.571, 435.659, 31.1676, 0.5516", "316.484, 435.337, 31.1301, 0.6978", "315.378, 435.13, 31.0173, 0.5822", "314.245, 435.067, 30.8888, 0.6444", "313.103, 435.123, 30.7751, 0.562", "311.962, 435.196, 30.6642, 0.6814", "310.823, 435.305, 30.5572, 0.7262", "309.684, 435.418, 30.4595, 0.7502", "308.549, 435.481, 30.3386, 0.6242", "307.421, 435.481, 30.1574, 0.7614", "306.29, 435.444, 29.951, 0.5888", "305.152, 435.334, 29.7744, 0.5102", "304.013, 435.249, 29.6352, 0.5638", "302.877, 435.306, 29.5112, 0.6138", "301.752, 435.467, 29.4, 0.4862", "300.629, 435.649, 29.3521, 0.4056", "299.51, 435.835, 29.398, 0.4134", "298.377, 435.904, 29.482, 0.5798", "297.234, 435.847, 29.5624, 0.6086", "296.108, 435.699, 29.654, 0.6466", "295.046, 435.339, 29.7878, 0.5626", "294.055, 434.809, 29.9062, 0.4714", "293.125, 434.171, 29.9065, 0.446", "292.355, 433.372, 29.8304, 0.6166", "291.633, 432.497, 29.7531, 0.5624", "290.688, 431.888, 29.6814, 0.4308", "289.614, 431.494, 29.619, 0.3384", "288.523, 431.148, 29.5764, 0.345", "287.43, 430.812, 29.5576, 0.4078", "286.329, 430.503, 29.547, 0.5098", "285.21, 430.271, 29.5291, 0.7674", "284.082, 430.083, 29.5005, 0.9134", "282.95, 429.986, 29.4854, 0.7346", "281.812, 429.99, 29.4927, 0.5254", "280.801, 430.158, 29.3709, 0.4592", "279.832, 430.589, 29.1516, 0.605", "278.732, 430.83, 28.9755, 0.7168", "277.591, 430.89, 28.8621, 0.548", "276.453, 430.901, 28.8341, 0.4592", "275.316, 430.901, 28.8837, 0.3516", "274.18, 430.901, 28.9937, 0.3324", "273.039, 430.901, 29.0886, 0.337", "271.898, 430.901, 29.1071, 0.3794", "270.76, 430.916, 29.0562, 0.5222", "269.637, 431.066, 29.013, 0.4752", "268.514, 431.239, 28.9906, 0.5286", "267.4, 431.163, 28.9002, 0.4032", "266.29, 430.987, 28.7358, 0.3442", "265.187, 430.758, 28.5379, 0.3092", "264.086, 430.502, 28.3307, 0.3388", "263.018, 430.141, 28.2145, 0.3918", "261.962, 429.732, 28.2072, 0.5018", "260.902, 429.312, 28.2467, 0.6482", "259.84, 428.888, 28.2979, 0.512", "258.756, 428.527, 28.3433, 0.4086", "257.883, 427.835, 28.3704, 0.4072", "256.842, 427.509, 28.3682, 0.3972", "255.817, 427.943, 28.3416, 0.4138", "254.734, 428.3, 28.2993, 0.503", "253.628, 428.593, 28.243, 0.6146", "252.591, 429.066, 28.173, 0.6234", "251.514, 429.436, 28.0571, 0.457", "250.409, 429.315, 27.8592, 0.3502", "249.279, 429.399, 27.6416, 0.3156", "248.193, 429.756, 27.4649, 0.3762", "247.086, 430.041, 27.3216, 0.3388", "245.946, 430.099, 27.19, 0.3094", "244.807, 430.195, 27.0844, 0.292", "243.697, 430.452, 27.0421, 0.3068", "242.602, 430.785, 27.0077, 0.335", "241.519, 431.152, 26.9587, 0.3842", "240.463, 431.582, 26.8674, 0.4888", "239.485, 432.07, 26.6599, 0.6186", "238.346, 432.123, 26.4737, 0.483", "237.243, 431.818, 26.1688, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "355.007, 437.872, 32.046, 0.4036", "354.574, 437.476, 32.0678, 0.2288", "353.658, 436.795, 32.1012, 0.3124", "352.6, 436.507, 32.0964, 0.3452", "351.639, 436.474, 31.9348, 0.4024", "350.785, 436.474, 32.0468, 0.5282", "349.712, 436.566, 32.3182, 0.6638", "348.594, 436.689, 32.6584, 0.704", "347.508, 436.703, 33.0893, 0.6576", "346.418, 436.889, 33.5457, 0.4736", "345.319, 436.626, 34.0528, 0.3796" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "387.253, 435.791, 21.0706, 0.3762", "387.406, 435.787, 20.6567, 0.2288", "387.216, 435.375, 20.4016, 0.3366", "386.428, 434.941, 19.9374, 0.392", "386.312, 433.889, 19.6938, 0.4796", "386.778, 432.962, 19.5586, 0.7164", "387.682, 432.342, 19.3267, 0.7932", "388.591, 431.818, 18.949, 0.6362", "389.453, 431.128, 18.5338, 0.4258", "390.457, 430.65, 18.1317, 0.3304", "391.312, 430.113, 17.6324, 0.3256", "392.039, 429.486, 17.3264, 0.3944", "392.949, 429.393, 16.9394, 0.373", "394.028, 429.112, 16.5822, 0.373", "395.082, 428.681, 16.2744, 0.4066", "395.989, 428.086, 15.9334, 0.536", "396.712, 427.215, 15.7234, 0.678", "397.641, 426.56, 15.5842, 0.7318", "398.581, 425.918, 15.4434, 0.7038", "399.486, 425.229, 15.3443, 0.5838", "400.375, 424.511, 15.2272, 0.463", "401.056, 423.598, 15.0738, 0.4348", "401.552, 422.575, 14.8299, 0.5766", "402.273, 421.914, 14.3506, 0.5802", "403.262, 421.596, 13.7544, 0.7022", "404.395, 421.596, 13.1944, 0.8282", "405.529, 421.543, 12.7509, 0.6308", "406.504, 421.116, 12.3508, 0.529", "407.115, 420.221, 11.9073, 0.4296", "407.97, 419.61, 11.4055, 0.4976", "408.965, 419.087, 10.9234, 0.5446", "409.775, 418.405, 10.409, 0.5576", "410.591, 417.923, 9.9358, 0.712", "411.687, 417.685, 9.634, 0.8228", "412.776, 417.379, 9.3934, 0.965", "413.827, 416.994, 9.1913, 0.8486", "414.516, 416.168, 9.0292, 0.6492", "414.809, 415.095, 8.9687, 0.656", "415.148, 414.021, 8.9393, 0.6696", "415.505, 412.968, 8.8054, 0.6922", "416.216, 412.23, 8.5386, 0.9774", "417.085, 411.537, 8.2331, 1.0084", "418.107, 411.042, 8.0021, 0.7372", "419.202, 410.775, 7.896, 0.4576", "420.15, 410.153, 7.9016, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "387.253, 435.791, 21.0706, 0.3762", "387.196, 435.208, 19.5171, 0.3656", "387.545, 434.542, 18.7776, 0.4582", "388.387, 433.905, 18.1037, 0.5424", "389.071, 433.009, 17.6159, 0.4386", "389.134, 431.889, 17.3163, 0.3636", "389.049, 430.872, 17.3765, 0.3398", "389.278, 429.853, 18.3442, 0.422" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "373.161, 449.52, 32.3596, 0.3538", "371.89, 449.713, 33.1576, 0.2288", "370.903, 450.174, 33.4799, 0.3396", "370.018, 450.834, 33.7056, 0.415", "369.466, 451.591, 34.1421, 0.4368", "369.034, 452.622, 34.5425, 0.3668", "368.247, 453.45, 34.9272, 0.3136", "367.329, 453.804, 35.5306, 0.2998", "366.539, 454.486, 36.258, 0.3232", "365.545, 454.787, 37.06, 0.3542", "364.855, 455.608, 37.9008, 0.4734", "364.022, 456.186, 38.782, 0.3954", "362.94, 456.531, 39.5772, 0.3294", "362.006, 457.102, 40.3623, 0.2818", "361.254, 457.886, 41.2096, 0.2882", "360.419, 458.56, 42.1294, 0.2994", "360.082, 458.877, 43.2645, 0.3228", "359.341, 458.848, 44.4086, 0.3538", "358.312, 458.931, 45.5384, 0.4722", "358.047, 459.266, 46.8877, 0.393", "358.374, 459.603, 48.4061, 0.3254", "358.937, 460.191, 49.8607, 0.2746", "359.995, 460.606, 51.0653, 0.2746", "360.188, 461.137, 52.2892, 0.2744", "359.827, 462.08, 53.4722, 0.2744", "359.751, 463.204, 54.514, 0.2742", "360.424, 463.858, 55.6444, 0.2736", "361.227, 463.249, 56.8938, 0.2728", "361.459, 462.365, 58.4111, 0.2712", "361.565, 461.779, 60.191, 0.2684", "361.678, 461.502, 62.176, 0.2626", "361.796, 461.422, 64.2586, 0.2542", "361.796, 461.428, 66.3172, 0.2288", "361.796, 461.651, 70.5513, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "373.161, 449.52, 32.3596, 0.3538", "373.296, 449.527, 31.8268, 0.2288", "374.23, 449.909, 31.6215, 0.2746", "374.859, 450.57, 31.2732, 0.2744", "375.841, 450.664, 30.8081, 0.2744", "376.973, 450.746, 30.4226, 0.2742", "377.975, 450.888, 30.0073, 0.2736", "378.581, 451.699, 29.6677, 0.2728", "378.832, 452.78, 29.6142, 0.2712", "379.13, 453.872, 29.7856, 0.2684", "379.832, 454.302, 30.3008, 0.2626", "380.607, 454.407, 31.0822, 0.2542", "380.788, 455.478, 31.8038, 0.2288", "380.79, 456.615, 32.7356, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "373.161, 449.52, 32.3596, 0.3538", "373.628, 449.432, 34.5447, 0.4722", "374.548, 449.309, 35.499, 0.3934", "375.264, 449.194, 36.7338, 0.3254", "375.851, 449.124, 38.164, 0.2746", "376.438, 449.084, 39.6718, 0.2746", "377.433, 449.443, 42.3307, 0.2746" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "361.612, 419.985, 23.0765, 1.4872", "361.538, 419.028, 22.8116, 1.6016", "361.883, 417.998, 22.6338, 0.9678", "362.807, 417.355, 22.4594, 0.8356", "363.777, 416.804, 22.4358, 0.7118", "364.706, 416.148, 22.4848, 0.5804", "365.635, 415.485, 22.7556, 0.5456" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "361.612, 419.985, 23.0765, 1.4872", "361.318, 418.925, 23.6846, 0.7536" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "411.23, 400.985, 29.0766, 0.2782", "410.815, 400.076, 29.0993, 0.2814", "410.262, 399.087, 29.0615, 0.2872", "409.678, 398.127, 29.122, 0.2988", "409.09, 397.173, 29.2793, 0.3144", "408.614, 396.138, 29.4381, 0.3736", "408.16, 395.087, 29.5798, 0.3346", "407.714, 394.034, 29.7002, 0.3012", "407.25, 393.039, 29.8964, 0.2766", "407.217, 391.918, 30.0684, 0.2782", "407.652, 390.871, 30.1675, 0.2814", "408.152, 389.852, 30.1605, 0.2872", "408.467, 388.778, 30.0451, 0.299", "408.901, 387.741, 29.8651, 0.3148", "409.409, 386.743, 29.6461, 0.3748", "409.45, 385.641, 29.615, 0.3364", "409.45, 384.498, 29.6495, 0.3044", "409.45, 383.357, 29.7531, 0.2828", "409.45, 382.218, 29.9155, 0.2896", "409.439, 381.08, 30.1056, 0.303", "409.229, 379.964, 30.2207, 0.3262", "409.021, 378.848, 30.2764, 0.3748", "408.824, 377.734, 30.4198, 0.439", "408.635, 376.626, 30.6513, 0.6818", "408.549, 375.488, 30.8966, 0.5338", "408.418, 374.375, 31.2082, 0.418", "408.122, 373.348, 31.626, 0.3462", "408.001, 372.226, 32.0121, 0.4348", "407.891, 371.087, 32.2734, 0.4382", "408.066, 369.958, 32.4226, 0.5392", "408.739, 369.097, 32.5819, 0.4958", "409.085, 368.021, 32.5704, 0.3918", "409.443, 367.01, 32.3501, 0.3128", "409.635, 365.901, 32.0617, 0.2992", "409.812, 364.772, 31.8116, 0.3152", "409.896, 363.634, 31.6042, 0.3754", "410.18, 362.542, 31.4476, 0.3378", "410.138, 361.482, 31.2256, 0.307", "410.328, 360.535, 30.9554, 0.2874", "410.713, 359.528, 30.875, 0.2994", "410.913, 358.463, 30.8837, 0.3152", "411.008, 357.339, 30.821, 0.3756", "411.234, 356.241, 30.7216, 0.3382", "411.672, 355.19, 30.6034, 0.3078", "412.144, 354.151, 30.466, 0.289", "412.493, 353.068, 30.3013, 0.3022", "412.599, 351.947, 30.105, 0.3206", "412.599, 350.817, 29.8984, 0.3852", "412.663, 349.682, 29.7153, 0.3572", "412.789, 348.547, 29.5764, 0.3378", "413.099, 347.457, 29.514, 0.37", "413.342, 346.348, 29.517, 0.3276", "413.555, 345.233, 29.5921, 0.288", "413.772, 344.201, 29.8127, 0.2542", "414.258, 343.481, 29.853, 0.2288", "415.115, 342.861, 29.9138, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "411.23, 400.985, 29.0766, 0.2782", "411.766, 399.968, 28.5919, 0.2288", "412.294, 398.964, 28.3886, 0.2746", "412.827, 397.979, 28.1224, 0.2746", "413.434, 397.056, 27.8317, 0.2746", "414.342, 396.362, 27.6088, 0.2746", "415.185, 395.611, 27.452, 0.2746", "415.734, 394.609, 27.3557, 0.2746", "416.329, 393.639, 27.3014, 0.2748", "417.131, 392.824, 27.2689, 0.275", "417.987, 392.08, 27.2527, 0.2752", "418.997, 391.617, 27.2871, 0.276", "420.091, 391.441, 27.281, 0.2768", "421.047, 391.048, 27.0805, 0.279", "421.895, 390.327, 26.8111, 0.2828", "422.766, 389.605, 26.6028, 0.2896", "423.52, 388.788, 26.4524, 0.3028", "424.036, 387.785, 26.25, 0.3258", "424.456, 386.793, 25.9003, 0.374", "425.013, 385.889, 25.4209, 0.438", "425.711, 384.997, 24.9194, 0.6796", "426.395, 384.096, 24.395, 0.5294", "426.966, 383.15, 23.7941, 0.4098", "427.484, 382.217, 23.1064, 0.3316", "427.652, 381.231, 22.3569, 0.4054", "427.068, 380.443, 21.7115, 0.3952", "426.26, 379.815, 21.0703, 0.4032", "425.709, 379.142, 20.246, 0.5164", "425.15, 378.289, 19.437, 0.4782", "424.667, 377.471, 18.5889, 0.4684", "424.844, 376.578, 17.8013, 0.6108", "425.534, 375.691, 17.243, 0.5516", "426.125, 374.761, 16.8179, 0.411", "426.602, 373.818, 16.3778, 0.3014", "426.782, 372.766, 16.0224, 0.2768", "426.931, 371.64, 15.7889, 0.279", "427.568, 370.752, 15.5884, 0.2826", "428.434, 370.015, 15.3734, 0.2896", "429.196, 369.18, 15.1486, 0.302", "429.957, 368.335, 14.9755, 0.3274", "430.6, 367.41, 14.777, 0.3622", "431.396, 366.612, 14.5785, 0.4882", "432.297, 366.016, 14.3142, 0.4224", "433.272, 365.476, 14.0476, 0.3814", "434.273, 364.942, 13.893, 0.37", "435.262, 364.374, 13.7962, 0.4914", "436.316, 363.942, 13.7684, 0.483", "437.312, 363.461, 14.1103, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "399.527, 436.397, 40.5807, 0.3734", "399.695, 436.938, 40.3822, 0.3338", "399.999, 438.01, 40.2895, 0.3", "400.288, 439.075, 40.1069, 0.2746", "400.564, 440.16, 39.8978, 0.2746", "400.829, 441.26, 39.7494, 0.2746", "401.118, 442.362, 39.7376, 0.2746", "401.553, 443.402, 39.8588, 0.2746", "402.187, 444.347, 40.0862, 0.2746", "402.802, 445.263, 40.4533, 0.2746", "403.038, 446.297, 40.9273, 0.2746", "403.038, 447.416, 41.4389, 0.2746", "403.038, 448.541, 41.9493, 0.2746", "403.038, 449.673, 42.4306, 0.2746", "403.053, 450.806, 42.8812, 0.2746", "403.139, 451.923, 43.3182, 0.2746", "403.288, 453.029, 43.7556, 0.2746", "403.489, 454.138, 44.1546, 0.2746", "403.739, 455.253, 44.485, 0.2746", "404.096, 456.327, 44.7759, 0.2746", "404.586, 457.348, 45.054, 0.2746", "405.186, 458.307, 45.2911, 0.2746", "405.848, 459.208, 45.4152, 0.2746", "406.528, 460.091, 45.493, 0.2746", "407.161, 460.897, 45.7349, 0.2746", "407.628, 461.846, 46.0656, 0.2746", "408.083, 462.89, 46.3921, 0.2746", "408.62, 463.887, 46.7295, 0.2746", "409.267, 464.823, 47.0436, 0.2746", "410.039, 465.648, 47.2595, 0.2746", "410.96, 466.304, 47.4398, 0.2746", "411.949, 466.859, 47.6694, 0.2746", "412.779, 467.591, 47.9884, 0.2746", "413.509, 468.437, 48.3893, 0.2748", "414.19, 469.344, 48.8186, 0.2748", "414.792, 470.308, 49.2646, 0.2752", "415.144, 471.35, 49.7566, 0.2758", "415.44, 472.383, 50.307, 0.2766", "415.857, 473.324, 50.9169, 0.2782", "416.726, 473.941, 51.4455, 0.2814", "417.793, 474.347, 51.8314, 0.287", "418.854, 474.774, 52.085, 0.2988", "419.885, 475.27, 52.2259, 0.3142", "420.894, 475.809, 52.2796, 0.3734", "421.845, 476.442, 52.2791, 0.3338", "422.823, 477.032, 52.2603, 0.3", "423.917, 477.327, 52.2273, 0.2744", "425.036, 477.551, 52.1889, 0.2744", "425.898, 478.199, 52.0845, 0.2742", "426.872, 478.766, 52.0506, 0.2736", "427.855, 478.479, 52.2035, 0.2728", "428.937, 478.133, 52.4068, 0.2712", "430.077, 478.071, 52.6327, 0.2684", "431.22, 478.067, 52.8699, 0.2626", "432.365, 478.067, 53.1191, 0.2542", "433.277, 478.449, 53.5315, 0.2288", "433.725, 479.441, 54.6134, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "399.527, 436.397, 40.5807, 0.3734", "399.707, 436.982, 42.8324, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "347.141, 457.52, 30.6552, 0.6926", "346.917, 457.879, 30.7412, 0.2288", "346.224, 458.776, 30.7762, 0.3002", "345.488, 459.647, 30.7852, 0.324", "344.749, 460.506, 30.8426, 0.3558", "344.335, 461.486, 30.8613, 0.4764", "344.259, 462.597, 30.9179, 0.4008", "344.358, 463.714, 31.0853, 0.339", "344.265, 464.838, 31.3012, 0.3012", "344.264, 465.909, 31.6338, 0.3188", "344.832, 466.83, 31.9654, 0.3818", "345.742, 467.503, 32.2742, 0.3496", "346.523, 468.328, 32.5066, 0.3292", "346.743, 469.427, 32.6603, 0.3278", "347.385, 470.349, 32.7583, 0.3768", "348.449, 470.77, 32.8157, 0.448", "349.454, 471.275, 32.9106, 0.6754", "350.372, 471.804, 32.8975, 0.6324", "350.928, 472.783, 32.9577, 0.7502", "351.523, 473.713, 33.0733, 0.6954", "352.305, 474.531, 33.1489, 0.5476", "353.14, 475.309, 33.2046, 0.4976", "353.887, 476.166, 33.2181, 0.4614", "354.471, 477.136, 33.2466, 0.577", "354.915, 478.17, 33.3474, 0.5914", "355.227, 479.246, 33.5244, 0.4452", "355.459, 480.359, 33.6994, 0.3276", "355.631, 481.488, 33.861, 0.2784", "355.861, 482.602, 34.027, 0.2818", "356.226, 483.676, 34.1275, 0.2882", "356.694, 484.716, 34.1692, 0.2994", "357.371, 485.622, 34.2224, 0.3228", "358.143, 486.441, 34.3356, 0.3538", "358.355, 487.505, 34.424, 0.4722", "358.536, 488.624, 34.5201, 0.3934", "358.986, 489.669, 34.592, 0.3254", "359.48, 490.685, 34.5638, 0.2746", "360.02, 491.689, 34.4893, 0.2746", "360.518, 492.72, 34.4042, 0.2746", "361.185, 493.618, 34.2591, 0.2746", "361.918, 494.492, 34.1323, 0.2746", "362.466, 495.49, 34.046, 0.2744", "363.16, 496.394, 34.0015, 0.2744", "363.381, 497.474, 34.0458, 0.2742", "363.353, 498.61, 34.0659, 0.2736", "363.365, 499.75, 34.0519, 0.2728", "363.394, 500.891, 34.0533, 0.2712", "363.325, 502.031, 34.0656, 0.2684", "363.238, 503.167, 34.032, 0.2626", "363.441, 504.287, 33.9744, 0.2542", "363.892, 505.337, 33.9329, 0.2288", "364.77, 506.053, 33.8646, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "347.141, 457.52, 30.6552, 0.6926", "346.376, 457.417, 30.945, 0.542", "345.247, 457.382, 31.066, 0.4898", "344.108, 457.455, 31.2483, 0.4338", "343.195, 457.764, 31.6383, 0.3612", "342.204, 458.132, 32.1278, 0.3036", "341.148, 458.218, 33.4256, 0.2812" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "350.186, 459.134, 17.901, 0.3", "350.194, 460.018, 17.4294, 0.2746", "350.204, 461.15, 17.2203, 0.2746", "350.201, 462.281, 16.9719, 0.2746", "349.857, 463.351, 16.7255, 0.2746", "349.389, 464.392, 16.4973, 0.2746", "348.815, 465.376, 16.2949, 0.2746", "348.241, 466.363, 16.1288, 0.2746", "347.762, 467.401, 16.0098, 0.2746", "347.345, 468.466, 15.9278, 0.2748", "347.217, 469.593, 15.8665, 0.2748", "347.211, 470.737, 15.8138, 0.2752", "347.4, 471.861, 15.7578, 0.2758", "347.635, 472.98, 15.6878, 0.2766", "347.868, 474.1, 15.5952, 0.2784", "348.103, 475.22, 15.4736, 0.2818", "348.381, 476.308, 15.2634, 0.288", "348.683, 477.384, 14.9761, 0.3008", "349.065, 478.435, 14.639, 0.3178", "349.51, 479.47, 14.2948, 0.3804", "350.09, 480.45, 14.0204, 0.3468", "350.734, 481.386, 13.8558, 0.3244", "351.458, 482.254, 13.7908, 0.3192", "351.678, 483.314, 13.6399, 0.3602", "351.366, 484.397, 13.4674, 0.4184", "351.199, 485.493, 13.2149, 0.6128", "350.98, 486.611, 12.9662, 0.5552", "350.702, 487.719, 12.7364, 0.4174", "350.151, 488.718, 12.5527, 0.3134", "349.587, 489.713, 12.4197, 0.2994", "349.072, 490.735, 12.3158, 0.3216", "348.561, 491.759, 12.2293, 0.3564", "348.06, 492.757, 12.0624, 0.4538", "347.536, 493.753, 11.8485, 0.474", "346.915, 494.71, 11.6782, 0.6016", "346.281, 495.663, 11.5553, 0.6314", "345.624, 496.6, 11.4769, 0.5448", "344.986, 497.55, 11.4405, 0.3882", "344.467, 498.569, 11.4425, 0.3068", "343.961, 499.594, 11.4663, 0.287", "343.531, 500.654, 11.5027, 0.2988", "343.105, 501.717, 11.5545, 0.3142", "342.921, 502.844, 11.6236, 0.3734", "342.484, 503.899, 11.7118, 0.3338", "341.72, 504.745, 11.8325, 0.3", "340.815, 505.332, 12.0991, 0.2744", "339.765, 505.774, 12.3634, 0.2744", "338.695, 506.18, 12.5992, 0.2742", "337.575, 506.365, 12.8422, 0.2736", "336.448, 506.456, 13.095, 0.2728", "335.329, 506.671, 13.3148, 0.2712", "334.257, 507.065, 13.4593, 0.2684", "333.165, 507.405, 13.5576, 0.2626", "332.028, 507.538, 13.6178, 0.2542", "330.892, 507.672, 13.6458, 0.2288", "329.759, 507.832, 13.6534, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "350.186, 459.134, 17.901, 0.3", "349.605, 459.006, 17.2379, 0.4576", "348.5, 459.019, 16.9263, 0.6224", "347.383, 458.824, 16.6572, 0.5292", "346.398, 458.273, 16.3674, 0.5806", "345.542, 457.526, 16.0723, 0.504", "344.746, 456.743, 15.7382, 0.5112", "343.94, 455.946, 15.4232, 0.7156", "343.118, 455.154, 15.1519, 0.6222", "342.174, 454.528, 14.884, 0.4562", "341.118, 454.859, 14.7095, 0.3396", "340.038, 455.116, 14.4984, 0.3422", "338.923, 455.366, 14.3573, 0.4276", "337.779, 455.388, 14.2775, 0.424", "336.773, 454.842, 14.2484, 0.518", "335.764, 454.313, 14.2839, 0.4318", "334.699, 453.994, 14.4225, 0.3912", "333.603, 453.715, 14.525, 0.4244" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "345.319, 436.626, 34.0528, 0.3796", "344.743, 436.732, 34.4347, 0.4576", "343.624, 436.928, 34.5618, 0.4766", "342.487, 436.918, 34.7427, 0.539", "341.382, 436.638, 34.9698, 0.6132", "340.449, 436.124, 35.2901, 0.7236", "339.743, 435.465, 35.8481, 0.83", "338.815, 434.977, 36.5053, 0.592", "337.72, 434.745, 37.1454, 0.4324", "336.628, 434.482, 37.7289, 0.3684", "335.716, 433.888, 38.2995, 0.4992", "334.839, 433.378, 38.9004, 0.4452", "333.822, 432.981, 39.389, 0.4114", "332.723, 432.713, 39.711, 0.4848", "331.603, 432.632, 40.0131, 0.4174", "330.503, 432.739, 40.1946, 0.365", "329.436, 432.589, 40.4768, 0.3734", "328.368, 432.406, 40.8534, 0.334", "327.384, 431.9, 41.2544, 0.3002", "326.432, 431.271, 41.5999, 0.2748", "325.581, 430.513, 41.8779, 0.275", "324.544, 430.225, 42.2223, 0.2754", "323.404, 430.216, 42.5124, 0.2762", "322.269, 430.153, 42.8456, 0.2776", "321.137, 430.294, 43.2152, 0.28", "320.052, 430.282, 43.724, 0.2848", "319.108, 430.086, 44.4139, 0.2936", "318.022, 430.05, 45.1186, 0.3094", "316.97, 429.815, 45.8265, 0.341", "315.863, 429.617, 46.4358, 0.3886", "314.757, 429.335, 46.8538, 0.5312", "313.644, 429.078, 47.1302, 0.529", "312.574, 428.713, 47.381, 0.4482", "311.471, 428.479, 47.5115, 0.443", "310.355, 428.688, 47.6742, 0.4172", "309.371, 428.973, 48.02, 0.4462", "308.478, 429.388, 48.5131, 0.5858", "307.587, 429.986, 48.8026, 0.6566", "306.863, 430.81, 48.9938, 0.5556", "305.839, 431.15, 49.1966, 0.5826", "304.7, 431.059, 49.3475, 0.5058", "303.564, 430.98, 49.4724, 0.5218", "302.452, 430.884, 49.6426, 0.6994", "301.391, 430.735, 49.9276, 0.7672", "300.325, 430.674, 50.1819, 0.562", "299.25, 430.65, 50.1995, 0.4146", "298.176, 430.398, 50.141, 0.3814", "297.059, 430.247, 50.1085, 0.5282", "295.943, 430.277, 49.9965, 0.4746", "294.905, 430.614, 49.9587, 0.5848", "294.288, 431.438, 49.6681, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "345.319, 436.626, 34.0528, 0.3796", "344.836, 436.016, 32.7984, 0.3778" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "389.278, 429.853, 18.3442, 0.422", "389.299, 428.932, 17.8447, 0.4196", "389.303, 427.84, 17.575, 0.48", "389.303, 426.712, 17.278, 0.5058", "389.303, 425.601, 17.1066, 0.515", "389.307, 424.465, 16.931, 0.49", "389.327, 423.378, 16.6432, 0.4206", "389.447, 422.248, 16.3654, 0.403", "389.557, 421.11, 16.1255, 0.5164", "389.431, 419.983, 15.8637, 0.4762", "389.351, 418.861, 15.5554, 0.474", "389.51, 417.733, 15.2776, 0.574", "389.577, 416.591, 15.0584, 0.7148", "389.176, 415.52, 14.8616, 0.963", "388.622, 414.526, 14.6434, 1.027", "388.181, 413.488, 14.3861, 0.7814", "388.018, 412.359, 14.1711, 0.7226", "388.24, 411.251, 13.923, 0.7462", "388.484, 410.19, 13.5901, 0.6044", "388.794, 409.109, 13.2689, 0.5532", "389.283, 408.076, 13.0281, 0.5782", "389.777, 407.048, 12.901, 0.4994", "390.309, 406.036, 12.8456, 0.5018", "390.887, 405.049, 12.8349, 0.4738", "391.389, 404.028, 12.8534, 0.5774", "391.576, 402.902, 12.878, 0.7026", "391.594, 401.758, 12.8993, 0.802", "391.607, 400.614, 12.9119, 0.715", "391.7, 399.481, 12.9077, 0.4954", "392.091, 398.422, 12.9063, 0.3732", "392.732, 397.5, 13.0021, 0.3648", "393.215, 396.493, 13.1429, 0.4334", "393.467, 395.39, 13.2076, 0.6104", "393.686, 394.27, 13.2566, 0.6962", "393.835, 393.149, 13.3538, 0.6598", "393.797, 392.03, 13.5002, 0.6254", "393.645, 390.9, 13.617, 0.631", "393.685, 389.767, 13.6772, 0.7608", "393.848, 388.652, 13.6623, 0.6512", "393.889, 387.521, 13.6318, 0.7752", "393.951, 386.393, 13.6783, 0.5602", "394.236, 385.315, 13.7645, 0.4912", "394.868, 384.377, 13.8438, 0.3636", "395.576, 383.513, 14.0157, 0.356", "396.196, 382.602, 14.217, 0.375", "396.809, 381.664, 14.3058, 0.4768", "397.579, 380.834, 14.3858, 0.5714", "398.478, 380.138, 14.4743, 0.5178", "399.307, 379.354, 14.5373, 0.3852", "399.954, 378.425, 14.5454, 0.3012", "400.413, 377.379, 14.5018, 0.2764", "400.564, 376.27, 14.4236, 0.278", "400.762, 375.168, 14.3086, 0.281", "401.453, 374.381, 14.0591, 0.2864", "402.196, 373.658, 13.6688, 0.2968", "402.956, 372.83, 13.3378, 0.3152", "403.779, 372.038, 13.1009, 0.3524", "404.648, 371.293, 12.9441, 0.4078", "405.247, 370.333, 12.8671, 0.5758", "405.691, 369.391, 12.9954, 0.5688", "406.557, 368.714, 13.181, 0.7318", "407.428, 368.343, 13.078, 0.6358", "408.48, 367.936, 12.9226, 0.7878", "409.576, 367.608, 12.7817, 0.614", "410.316, 366.742, 12.5154, 0.4418" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "389.278, 429.853, 18.3442, 0.422", "388.996, 429.995, 17.0618, 0.4576", "389.174, 429.839, 16.3694, 0.5496", "389.863, 430.116, 15.6901, 0.5488", "390.452, 429.686, 14.8904, 0.5544", "390.94, 428.859, 14.3044, 0.5304", "390.816, 427.854, 13.9479, 0.652", "390.487, 426.862, 13.6637, 0.758", "390.066, 426.076, 13.5271, 0.6206", "390.316, 425.533, 13.2418, 0.614", "390.897, 424.831, 13.2303, 0.5396", "391.906, 424.354, 13.258, 0.476", "392.973, 424.081, 13.223, 0.4534", "393.637, 423.954, 12.9808, 0.6356", "394.505, 423.376, 12.7025, 0.5736", "395.023, 422.902, 12.2175, 0.567", "395.254, 421.865, 11.6841, 0.7148", "395.832, 421.335, 11.303, 0.8996", "396.509, 420.754, 10.9766, 0.9888", "396.625, 419.768, 10.8623, 0.7824", "397.062, 419.266, 11.0569, 0.604", "397.73, 418.723, 10.9634, 0.6546", "398.461, 418.386, 10.6728, 0.7266", "399.256, 417.939, 10.5168, 0.7362", "399.376, 417.106, 10.1553, 0.6712", "400.174, 416.414, 9.8389, 0.4936", "401.208, 416.128, 9.6967, 0.4424", "401.321, 415.615, 9.3862, 0.3686", "402.059, 415.723, 9.0784, 0.3604", "402.646, 415.048, 8.8418, 0.4068", "403.447, 414.864, 9.0275, 0.421", "404.507, 415.041, 9.3579, 0.3388", "405.5, 415.241, 9.7068, 0.2542", "405.548, 414.586, 10.92, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "377.433, 449.443, 42.3307, 0.2746", "378.629, 449.881, 42.889, 0.2746", "379.396, 450.704, 43.0996, 0.2746", "379.975, 451.456, 43.5168, 0.2746", "381.007, 451.882, 43.9519, 0.2746", "381.794, 452.696, 44.3876, 0.2746", "382.404, 453.652, 44.8392, 0.2746", "382.883, 454.653, 45.2833, 0.2746", "383.168, 455.663, 45.7652, 0.2746", "383.892, 456.419, 46.3434, 0.2746", "384.309, 457.412, 46.9188, 0.2746", "384.622, 458.466, 47.5244, 0.2746", "385.212, 459.412, 48.0497, 0.2746", "386.243, 459.823, 48.54, 0.2746", "386.555, 460.331, 49.2828, 0.2746", "386.933, 461.411, 49.891, 0.2746", "387.267, 462.485, 50.4, 0.2746", "388.216, 463.058, 50.9149, 0.2746", "388.946, 463.899, 51.4296, 0.2746", "389.411, 464.883, 51.961, 0.2746", "389.76, 465.965, 52.4062, 0.2744", "390.079, 467.032, 52.8399, 0.2744", "390.694, 467.957, 53.2288, 0.2742", "391.008, 468.922, 53.6925, 0.2736", "391.348, 469.945, 54.0252, 0.2728", "391.59, 470.907, 54.0725, 0.2712", "391.461, 471.955, 54.0859, 0.2684", "390.747, 472.733, 54.2142, 0.2626", "389.924, 473.405, 54.455, 0.2542", "388.888, 473.726, 54.5387, 0.2288", "388.341, 474.696, 54.7478, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "377.433, 449.443, 42.3307, 0.2746", "378.592, 449.348, 43.0881, 0.2288", "379.44, 448.742, 43.4451, 0.2746", "380.467, 448.411, 43.8346, 0.2746", "381.605, 448.375, 44.2061, 0.2746", "382.732, 448.375, 44.6037, 0.2746", "383.857, 448.446, 45.0117, 0.2746", "384.986, 448.581, 45.3888, 0.2746", "386.078, 448.612, 45.813, 0.2746", "387.213, 448.661, 46.1838, 0.2746", "388.355, 448.679, 46.5153, 0.2746", "389.493, 448.766, 46.8289, 0.2746", "390.618, 448.953, 47.143, 0.2746", "391.693, 449.323, 47.4928, 0.2746", "392.803, 449.579, 47.8792, 0.2744", "393.883, 449.947, 48.3227, 0.2744", "394.322, 449.153, 48.93, 0.2742", "395.07, 448.986, 49.803, 0.2736", "396.152, 449.171, 50.6162, 0.2728", "396.721, 449.741, 51.5894, 0.2712", "397.157, 450.499, 52.5608, 0.2684", "397.833, 451.413, 53.268, 0.2626", "398.366, 452.402, 53.6872, 0.2542", "398.452, 453.284, 54.0714, 0.2288", "398.181, 454.326, 54.7478, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "365.635, 415.485, 22.7556, 0.5456", "366.032, 415.406, 22.3798, 0.612", "367.131, 415.185, 22.192, 0.5592", "368.25, 415.023, 21.9755, 0.6276", "369.385, 414.93, 21.7759, 0.6328", "370.528, 414.876, 21.6261, 0.5472", "371.671, 414.85, 21.5482, 0.3928", "372.814, 414.83, 21.5382, 0.315", "373.956, 414.824, 21.5648, 0.3018", "375.1, 414.824, 21.604, 0.3274", "376.216, 415.049, 21.6434, 0.362", "377.303, 415.4, 21.681, 0.4876", "378.348, 415.866, 21.7179, 0.4228", "379.344, 416.427, 21.7599, 0.375", "380.451, 416.634, 21.81, 0.392", "381.565, 416.426, 21.8772, 0.3682", "382.669, 416.334, 22.0338, 0.364", "383.755, 416.64, 22.1962, 0.3912", "384.839, 416.998, 22.3398, 0.5008", "385.923, 417.345, 22.4014, 0.6466", "387.032, 417.458, 22.3507, 0.508", "388.101, 417.168, 22.3871, 0.4062", "389.147, 416.713, 22.4174, 0.3788", "390.184, 416.231, 22.4227, 0.4588", "391.229, 415.764, 22.4081, 0.6608", "392.324, 415.472, 22.3339, 0.7736", "393.421, 415.179, 21.9971, 0.8798" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "365.635, 415.485, 22.7556, 0.5456", "365.834, 414.846, 21.6726, 0.2288", "365.553, 413.937, 21.1252, 0.4066", "364.697, 413.285, 20.6214, 0.5718", "363.616, 413.064, 20.2163, 0.5716", "362.637, 413.424, 19.7282, 0.6862", "361.866, 413.839, 19.0442, 0.7976", "361.819, 413.042, 17.0666, 0.579" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "361.318, 418.925, 23.6846, 0.7536", "360.859, 418.892, 23.3316, 0.6864", "359.9, 418.941, 23.0989, 0.4722", "358.885, 419.308, 23.0731, 0.3724", "358.04, 419.79, 23.3369, 0.3876", "357.058, 420.047, 23.767, 0.3596", "355.936, 420.039, 24.1942, 0.3498", "354.845, 419.851, 24.4678, 0.3566", "353.729, 419.944, 24.6786, 0.4778", "352.685, 420.159, 24.9371, 0.4034", "351.569, 420.134, 25.1555, 0.3444", "350.507, 419.791, 25.2255, 0.3098", "349.697, 419.54, 25.0169, 0.339", "348.632, 419.482, 24.9424, 0.3972", "347.734, 419.325, 25.0846, 0.4878", "346.609, 419.449, 25.1751, 0.739", "345.552, 419.744, 25.2983, 0.7998", "344.643, 420.302, 25.5408, 0.8184", "343.783, 421.041, 25.7656, 0.6262", "342.92, 421.683, 25.8317, 0.4542", "342.144, 421.998, 25.9647, 0.3832", "341.213, 422.062, 26.2494, 0.4208", "340.194, 422.453, 26.4384, 0.5858", "339.435, 423.288, 26.5681, 0.6572", "338.762, 424.208, 26.703, 0.5556", "337.874, 424.87, 26.8559, 0.5852", "336.797, 425.233, 26.973, 0.499", "335.674, 425.43, 27.0295, 0.5676", "334.538, 425.487, 27.0897, 0.5014", "333.561, 425.916, 27.2261, 0.4016", "332.885, 426.798, 27.3199, 0.3322", "331.919, 427.319, 27.3963, 0.3288", "330.853, 427.724, 27.51, 0.4018", "329.799, 428.024, 27.732, 0.3812", "328.776, 428.507, 27.9294, 0.413", "327.822, 429.126, 28.1086, 0.3604", "326.836, 429.691, 28.2027, 0.3486", "325.729, 429.688, 28.3136, 0.3666", "324.586, 429.701, 28.3634, 0.4366", "323.53, 430.119, 28.3125, 0.6162", "322.528, 430.659, 28.1918, 0.7076", "321.581, 431.299, 28.0459, 0.6766", "320.549, 431.796, 27.8838, 0.679", "319.633, 432.431, 27.6133, 0.62", "319.036, 433.405, 27.3479, 0.59", "318.148, 434.123, 27.0897, 0.6076", "317.492, 434.985, 26.7436, 0.5132", "317.335, 435.968, 26.2287, 0.4984", "316.934, 436.955, 25.711, 0.6068", "316.079, 437.557, 25.1325, 0.8354", "315.224, 438.242, 24.6551, 0.8958", "314.841, 439.291, 24.2858, 0.9406", "314.624, 440.402, 23.9445, 0.893", "314.251, 441.474, 23.6236, 0.7522", "313.763, 442.497, 23.2974, 0.5168", "313.065, 443.367, 22.9502, 0.415", "312.206, 443.983, 22.4944, 0.4324", "311.726, 444.834, 22.0424, 0.6084", "311.456, 445.941, 21.6829, 0.6938", "311.079, 447.015, 21.3413, 0.6496", "310.504, 447.958, 20.9611, 0.633", "309.76, 448.804, 20.6175, 0.5154", "308.957, 449.611, 20.2986, 0.4906", "308.441, 450.468, 19.8234, 0.6518", "308.176, 451.534, 19.3724, 0.6294", "307.842, 452.609, 18.9087, 0.5452", "307.395, 453.643, 18.4248, 0.5984", "306.743, 454.568, 17.9438, 0.5946", "305.992, 455.405, 17.4448, 0.6258", "305.338, 455.078, 16.7664, 0.5008", "304.415, 455.545, 16.1818, 0.4684", "304.174, 456.61, 15.6397, 0.5864", "304.445, 457.671, 15.1231, 0.6254", "304.771, 458.731, 14.7188, 0.6562", "304.454, 459.761, 14.364, 0.6848", "303.659, 460.531, 13.9972, 0.8766", "302.797, 461.267, 13.6452, 0.7876", "301.984, 462.066, 13.3274, 0.7218", "301.155, 462.797, 12.9724, 0.8038", "300.409, 463.574, 12.5577, 0.6534", "299.773, 464.482, 12.2349, 0.4676", "299.4, 465.517, 12.0058, 0.3604", "299.281, 466.648, 11.8364, 0.3832", "298.64, 467.485, 11.6472, 0.491", "297.752, 468.195, 11.4696, 0.6034", "297.033, 469.077, 11.3212, 0.5494", "296.536, 470.039, 11.0866, 0.5788", "296.56, 471.158, 10.8917, 0.6914", "296.842, 472.26, 10.8024, 0.6178", "297.085, 473.369, 10.8276, 0.4804", "297.409, 474.46, 10.9276, 0.4582", "297.846, 475.513, 11.0645, 0.4334", "298.267, 476.576, 11.2134, 0.5366", "298.641, 477.657, 11.3338, 0.4598", "299.066, 478.719, 11.4237, 0.4754", "299.703, 479.667, 11.4948, 0.4244", "300.39, 480.581, 11.5618, 0.4882", "301.2, 481.387, 11.6371, 0.5254", "302.016, 482.189, 11.737, 0.5302", "302.805, 483.0, 11.9034, 0.6208", "303.608, 483.802, 12.115, 0.8498", "304.44, 484.583, 12.371, 0.749", "305.342, 485.287, 12.6291, 0.8248", "306.213, 485.938, 12.7588, 0.836", "306.794, 486.912, 12.8965, 0.5676", "306.777, 487.931, 13.2325, 0.3304", "306.401, 488.599, 14.791, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "361.318, 418.925, 23.6846, 0.7536", "361.551, 418.121, 22.1682, 0.6864", "360.695, 418.194, 21.4438, 0.4832", "359.775, 418.405, 20.7959, 0.4004", "359.278, 418.691, 20.6016, 0.4032", "358.326, 418.266, 20.4196, 0.5636", "357.417, 417.712, 20.298, 0.5656", "356.401, 417.87, 20.0931, 0.6286", "355.762, 417.504, 19.6008, 0.917", "354.999, 416.685, 19.0742, 1.0758", "354.154, 416.022, 18.58, 0.9076", "353.239, 416.242, 18.0942, 1.01", "352.552, 417.05, 17.5596, 1.021", "351.762, 417.825, 17.0876, 0.993", "351.04, 418.685, 16.8034, 0.9476", "350.46, 419.618, 16.5306, 1.0596", "350.189, 420.709, 16.2929, 1.0028", "349.936, 421.808, 16.1818, 1.0378", "350.023, 422.741, 15.4899, 0.8776" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "361.318, 418.925, 23.6846, 0.7536", "361.016, 418.003, 23.9084, 1.3728", "360.548, 416.958, 23.989, 1.3728", "360.045, 415.931, 24.0576, 1.3728", "359.154, 415.23, 24.1548, 1.3728", "358.204, 414.592, 24.2122, 1.3728", "357.522, 413.684, 24.1942, 1.3728", "357.034, 412.65, 24.1654, 1.3728", "356.785, 411.533, 24.1377, 1.3728", "356.587, 410.407, 24.1128, 1.3728", "356.362, 409.284, 24.092, 1.3728", "356.4, 408.141, 24.0848, 1.3728" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "399.707, 436.982, 42.8324, 0.2288", "400.105, 436.554, 43.321, 0.2746", "400.475, 435.609, 43.5828, 0.2746", "400.907, 434.721, 43.8886, 0.2746", "401.439, 433.745, 44.1392, 0.2748", "401.596, 432.629, 44.4248, 0.275", "402.035, 431.701, 44.8501, 0.2752", "402.758, 430.836, 45.2511, 0.276", "403.285, 429.934, 45.7416, 0.2768", "403.622, 428.878, 46.2336, 0.2796", "404.306, 427.961, 46.6169, 0.2796", "405.116, 427.17, 46.9451, 0.305", "405.962, 426.403, 47.4104, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "399.707, 436.982, 42.8324, 0.2288", "399.612, 437.659, 43.5481, 0.2288", "398.923, 438.34, 43.944, 0.3108", "398.229, 439.043, 44.5245, 0.3672", "397.844, 440.073, 45.0722, 0.322", "397.381, 440.984, 45.6686, 0.2796", "397.294, 441.949, 46.3529, 0.2288", "398.181, 442.654, 47.4104, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "341.148, 458.218, 33.4256, 0.2812", "340.937, 458.111, 32.3394, 0.2866", "340.004, 458.119, 31.8077, 0.2972", "339.0, 458.579, 31.3356, 0.3162", "337.87, 458.612, 31.0106, 0.3534", "336.743, 458.441, 30.8053, 0.4126", "335.611, 458.451, 30.7482, 0.571", "334.479, 458.615, 30.805, 0.6272", "333.357, 458.813, 30.9394, 0.5132", "332.26, 459.028, 31.1525, 0.4444", "331.182, 459.31, 31.425, 0.5408", "330.122, 459.727, 31.7181, 0.5466", "329.053, 460.11, 31.9869, 0.4814", "327.944, 460.187, 32.1983, 0.5016", "326.875, 460.091, 32.5184, 0.5404", "325.842, 460.379, 32.9322, 0.605", "325.174, 461.191, 33.4452, 0.5328", "324.366, 461.706, 34.118, 0.4134", "323.303, 462.081, 34.6772, 0.3526", "322.293, 461.646, 35.2523, 0.3748", "321.206, 461.364, 35.7736, 0.4466", "320.127, 461.058, 36.2505, 0.6596", "319.001, 460.855, 36.6058, 0.6676", "317.92, 460.489, 36.8578, 0.5014", "316.913, 460.145, 37.1596, 0.3864", "315.945, 460.649, 37.5085, 0.3772", "314.887, 461.037, 37.8372, 0.5158", "313.844, 461.491, 38.0733, 0.4754", "312.779, 461.848, 38.2208, 0.4698", "311.7, 462.181, 38.3908, 0.5822", "310.653, 462.635, 38.5308, 0.6504", "309.577, 462.974, 38.6711, 0.5438", "308.534, 463.281, 38.8161, 0.5618", "307.661, 463.953, 39.0169, 0.464", "306.668, 464.503, 39.1566, 0.4594", "305.62, 464.939, 39.2224, 0.5104", "304.585, 465.389, 39.2255, 0.7734", "303.549, 465.849, 39.2358, 0.9012", "302.525, 466.345, 39.3403, 0.824", "301.568, 466.928, 39.5648, 0.8348", "300.638, 467.568, 39.9034, 0.7922", "299.836, 468.157, 40.4398, 0.5624", "299.023, 468.736, 41.1292, 0.408", "298.125, 469.384, 41.7785, 0.407", "297.215, 470.055, 42.3564, 0.3908", "296.411, 470.85, 42.833, 0.4308", "295.405, 471.226, 43.2018, 0.394", "294.327, 471.424, 43.5669, 0.4084", "293.35, 471.773, 43.995, 0.4898", "292.316, 471.567, 44.3604, 0.604", "291.196, 471.374, 44.6317, 0.537", "290.118, 471.659, 44.8666, 0.6216", "289.48, 471.493, 44.7535, 0.4518", "288.661, 471.053, 44.5746, 0.3498", "287.579, 470.843, 44.5673, 0.2728", "286.454, 470.805, 44.6732, 0.2712", "285.428, 470.682, 44.9607, 0.2684", "284.437, 470.859, 45.3958, 0.2626", "283.383, 470.801, 45.8914, 0.2542", "282.344, 470.389, 46.1972, 0.2288", "281.473, 470.576, 45.7173, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "341.148, 458.218, 33.4256, 0.2812", "340.876, 458.61, 34.2577, 0.6864", "340.062, 459.337, 34.6178, 0.5104", "339.016, 459.692, 35.0809, 0.4374", "337.932, 459.691, 35.6404, 0.5354", "337.327, 459.979, 36.379, 0.5008", "336.714, 460.858, 37.1221, 0.5708", "336.159, 461.846, 37.7322, 0.507", "335.515, 462.758, 38.3062, 0.4134", "334.932, 463.646, 38.7982, 0.348", "334.053, 463.608, 39.3047, 0.389", "333.316, 463.015, 39.8829, 0.3624", "332.253, 462.876, 40.4606, 0.355", "331.183, 463.088, 41.0768, 0.366", "330.257, 462.782, 41.5974, 0.4962", "329.483, 461.969, 42.079, 0.4324", "328.545, 461.37, 42.5662, 0.4238", "327.452, 461.25, 43.0682, 0.333", "326.476, 461.707, 43.6212, 0.2982", "325.518, 461.762, 44.3145, 0.2712", "324.441, 461.89, 45.0209, 0.2684", "323.733, 462.749, 45.61, 0.2626", "322.616, 462.795, 46.1241, 0.2542", "321.49, 462.795, 46.571, 0.2288", "320.376, 462.795, 47.4104, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "333.603, 453.715, 14.525, 0.4244", "332.846, 453.669, 14.1218, 0.418", "331.733, 453.445, 13.9614, 0.507", "330.598, 453.34, 13.7953, 0.4104", "329.526, 453.609, 13.5654, 0.3584", "328.431, 453.909, 13.342, 0.3302", "327.372, 454.33, 13.1435, 0.4042", "326.264, 454.598, 12.992, 0.386", "325.13, 454.749, 12.8783, 0.422", "324.098, 455.211, 12.7929, 0.3766", "323.008, 455.545, 12.7271, 0.38", "321.915, 455.878, 12.6591, 0.4194", "320.98, 456.517, 12.5675, 0.5598", "320.035, 457.129, 12.4051, 0.7218", "319.077, 457.744, 12.2592, 0.8134", "318.169, 458.434, 12.1271, 0.853", "317.247, 459.073, 11.9498, 0.8724", "316.189, 459.464, 11.7275, 0.942", "315.114, 459.84, 11.5097, 0.9074", "314.053, 460.269, 11.2904, 0.95", "313.091, 460.707, 10.9696, 0.7416", "312.411, 461.383, 10.4754, 0.6042", "311.766, 462.238, 9.9828, 0.5148", "310.863, 462.881, 9.5855, 0.4612", "309.778, 463.169, 9.3408, 0.5042", "308.668, 463.284, 9.2868, 0.58", "307.577, 463.551, 9.35, 0.511", "306.574, 463.581, 9.3128, 0.483", "305.552, 463.859, 9.2165, 0.6326", "305.053, 464.775, 9.228, 0.6186", "304.767, 465.788, 9.4223, 0.4068", "303.898, 466.457, 10.1592, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "333.603, 453.715, 14.525, 0.4244", "332.828, 453.644, 13.0256, 0.2288", "332.143, 453.149, 12.3239, 0.3326", "331.163, 452.685, 11.6662, 0.4088", "330.148, 452.333, 10.9858, 0.3942", "329.228, 452.834, 10.36, 0.4384", "329.114, 453.924, 9.9016, 0.402", "328.711, 454.761, 9.5099, 0.4514", "327.674, 454.697, 9.1641, 0.4328", "326.634, 454.243, 8.8379, 0.4772", "325.96, 454.872, 8.4927, 0.6326", "325.441, 455.883, 8.2225, 0.7964", "324.681, 456.684, 8.0979, 0.5592", "324.266, 457.53, 7.3374, 0.4576" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "344.836, 436.016, 32.7984, 0.3778", "343.874, 435.497, 32.755, 0.4522", "342.805, 435.09, 32.7387, 0.6696", "341.693, 434.868, 32.7247, 0.687", "340.64, 434.526, 32.7883, 0.5336", "339.575, 434.243, 32.7992, 0.4644", "338.463, 434.078, 32.7454, 0.434", "337.441, 433.656, 32.7782, 0.3618", "336.461, 433.082, 32.8488, 0.3046", "335.476, 432.501, 32.909, 0.283", "334.458, 431.989, 32.9949, 0.2902", "333.41, 431.591, 33.1593, 0.3032", "332.341, 431.201, 33.2968, 0.3298", "331.269, 430.811, 33.3665, 0.366", "330.257, 430.282, 33.4172, 0.4968", "329.311, 429.647, 33.4852, 0.4332", "328.309, 429.104, 33.5135, 0.4248", "327.309, 428.556, 33.5555, 0.335", "326.467, 427.794, 33.6266, 0.3018", "325.671, 426.974, 33.691, 0.278", "325.066, 426.027, 33.6734, 0.281", "324.307, 425.201, 33.7182, 0.2864", "323.471, 424.427, 33.7361, 0.2968", "322.417, 424.01, 33.7235, 0.3158", "321.502, 423.338, 33.7674, 0.3502", "320.583, 422.659, 33.8066, 0.4172", "319.659, 422.033, 33.9416, 0.5282", "318.702, 421.419, 34.0054, 0.7964", "317.733, 420.838, 34.118, 0.9926", "316.805, 420.171, 34.1872, 0.7578", "315.87, 419.513, 34.2177, 0.4824", "314.9, 418.91, 34.2465, 0.339", "313.898, 418.361, 34.2776, 0.3494", "312.845, 417.93, 34.2888, 0.4024", "311.751, 417.594, 34.2642, 0.5644", "310.644, 417.313, 34.2264, 0.5566", "309.514, 417.184, 34.1939, 0.6638", "308.423, 416.947, 34.2115, 0.7306", "307.444, 416.543, 34.1144, 0.5786", "306.589, 415.925, 33.8803, 0.4916", "305.853, 415.086, 33.6384, 0.5286", "305.083, 414.246, 33.4754, 0.7806", "304.28, 413.494, 33.4743, 1.0428", "303.372, 412.844, 33.5745, 1.1514", "302.284, 412.571, 33.6986, 0.8984", "301.214, 412.199, 33.7784, 0.5732", "300.239, 411.644, 33.763, 0.4194", "299.254, 411.079, 33.7473, 0.4682", "298.264, 410.538, 33.7865, 0.539", "297.51, 409.704, 33.838, 0.5356", "296.836, 408.781, 33.8898, 0.7288", "296.258, 407.796, 33.9228, 0.5742", "295.706, 406.794, 33.9287, 0.4892", "294.987, 405.911, 33.9167, 0.4988", "294.109, 405.185, 33.8654, 0.6178", "293.115, 404.645, 33.7562, 0.5772", "292.17, 404.03, 33.5966, 0.6244", "291.238, 403.428, 33.5451, 0.8058", "290.173, 403.051, 33.544, 0.6844", "289.056, 402.956, 33.4684, 0.6246", "287.957, 402.705, 33.3374, 0.8522", "286.876, 402.339, 33.22, 0.777", "285.823, 401.892, 33.1173, 0.5354", "284.811, 401.36, 33.0229, 0.3542", "283.894, 400.678, 32.9515, 0.3228", "283.164, 399.801, 32.9104, 0.3896", "282.427, 398.929, 32.8588, 0.3636", "281.663, 398.102, 32.7519, 0.3574", "280.927, 397.231, 32.699, 0.37", "280.223, 396.354, 32.7384, 0.5038", "279.349, 395.619, 32.7788, 0.4462", "278.457, 394.903, 32.8037, 0.4506", "277.802, 393.973, 32.8395, 0.377", "277.069, 393.096, 32.8468, 0.4056", "276.19, 392.368, 32.772, 0.3464", "275.17, 391.874, 32.6077, 0.3242", "274.064, 391.655, 32.3641, 0.3144", "272.941, 391.474, 32.0841, 0.374", "271.806, 391.35, 31.815, 0.335", "270.67, 391.226, 31.5636, 0.3018", "269.588, 390.91, 31.2782, 0.278", "268.514, 390.578, 30.9694, 0.2812", "267.397, 390.345, 30.6888, 0.2864", "266.277, 390.13, 30.4326, 0.2976", "265.153, 389.98, 30.179, 0.3124", "264.027, 389.837, 29.9438, 0.37", "262.884, 389.78, 29.7847, 0.3276", "261.743, 389.723, 29.6836, 0.288", "260.599, 389.689, 29.6226, 0.2542", "259.454, 389.689, 29.5918, 0.2288", "258.311, 389.689, 29.5823, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "344.836, 436.016, 32.7984, 0.3778", "344.733, 435.815, 34.6928, 0.2288", "344.566, 435.231, 35.6261, 0.4592", "344.72, 434.184, 36.6184, 0.5438", "344.93, 433.098, 37.5343, 0.4416", "344.579, 432.065, 38.2872, 0.3674", "344.154, 431.249, 39.093, 0.3546", "344.159, 430.98, 40.1086, 0.4132", "343.724, 431.519, 41.0942, 0.5782", "342.964, 432.322, 41.956, 0.612", "341.962, 432.763, 42.5438, 0.6218", "340.952, 433.128, 42.8336, 0.668", "339.844, 433.259, 43.0914, 0.6184", "338.904, 432.878, 43.4678, 0.7252", "337.812, 432.561, 43.8253, 0.8724", "336.742, 432.157, 44.1487, 0.708", "335.684, 431.754, 44.5024, 0.6946", "334.682, 431.271, 44.8927, 0.6266", "333.776, 430.625, 45.7173, 0.7106" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "410.316, 366.742, 12.5154, 0.4418", "410.822, 366.014, 12.6664, 0.3118", "411.696, 365.407, 12.7938, 0.296", "412.585, 364.792, 12.8512, 0.3158", "413.314, 363.936, 12.8512, 0.3458", "414.201, 363.266, 12.9038, 0.4316", "415.15, 362.672, 13.0147, 0.4432", "416.13, 362.095, 13.0911, 0.4948", "417.117, 361.518, 13.1065, 0.6746", "417.907, 360.739, 13.008, 0.8288", "418.617, 359.868, 12.8114, 0.8388", "419.265, 358.93, 12.5944, 0.5956", "419.926, 357.999, 12.3749, 0.4994", "420.678, 357.166, 12.1212, 0.4306", "421.549, 356.446, 11.8709, 0.458", "422.531, 355.865, 11.6757, 0.67", "423.504, 355.265, 11.534, 0.5118", "424.43, 354.593, 11.4335, 0.3764", "425.345, 353.907, 11.3683, 0.2746", "426.26, 353.221, 11.3296, 0.2748", "427.135, 352.486, 11.3011, 0.2748", "427.946, 351.678, 11.268, 0.275", "428.713, 350.829, 11.2235, 0.2752", "429.436, 349.944, 11.1625, 0.276", "430.188, 349.081, 11.0779, 0.277", "430.986, 348.263, 10.9617, 0.2794", "431.924, 347.627, 10.7867, 0.2834", "432.971, 347.223, 10.5339, 0.2906", "433.951, 346.654, 10.2542, 0.3056", "434.858, 345.972, 9.9504, 0.3268", "435.085, 344.94, 9.578, 0.3976", "435.099, 343.803, 9.2613, 0.3736", "435.161, 342.661, 9.0101, 0.3992", "435.56, 341.619, 8.7433, 0.3346", "435.764, 340.522, 8.461, 0.3014", "435.344, 339.469, 8.2578, 0.2768", "434.505, 338.696, 8.1234, 0.2796", "433.76, 337.828, 8.034, 0.2796", "432.939, 337.032, 7.9828, 0.305", "431.892, 336.57, 7.9643, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "410.316, 366.742, 12.5154, 0.4418", "411.092, 366.157, 11.5665, 0.2288", "412.025, 365.851, 11.0858, 0.3292", "413.046, 365.675, 10.6904, 0.3656", "413.911, 365.978, 10.607, 0.4944", "414.711, 365.975, 10.8136, 0.4342", "415.683, 365.674, 10.9676, 0.4022", "416.473, 365.109, 10.8651, 0.4132", "417.26, 364.505, 10.5577, 0.5498", "417.941, 363.625, 10.2379, 0.6958", "418.816, 362.964, 9.9232, 0.8014", "419.909, 362.654, 9.606, 0.6546", "421.002, 362.747, 9.2579, 0.6742", "421.824, 363.356, 8.8225, 0.6668", "422.829, 363.48, 8.3457, 0.6356", "423.863, 363.06, 7.8856, 0.4322", "424.91, 362.796, 7.4024, 0.305", "425.905, 362.365, 7.1481, 0.2288", "427.015, 362.545, 6.7729, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "393.421, 415.179, 21.9971, 0.8798", "393.607, 415.555, 22.8477, 0.6626", "394.341, 416.173, 23.3086, 0.4374", "395.448, 416.399, 23.7082, 0.3036", "396.104, 417.249, 23.8473, 0.2814", "396.608, 418.242, 23.8986, 0.2874", "397.708, 418.49, 23.8834, 0.2982", "398.838, 418.32, 23.8098, 0.3194", "399.96, 418.132, 23.6894, 0.3518", "401.066, 418.151, 23.5239, 0.4454", "402.154, 418.497, 23.3985, 0.4566", "403.25, 418.774, 23.3156, 0.5804", "404.39, 418.721, 23.3122, 0.5384", "405.523, 418.587, 23.3932, 0.6346", "406.642, 418.385, 23.5648, 0.6534", "407.758, 418.179, 23.8098, 0.5494", "408.894, 418.138, 24.0738, 0.5722", "410.028, 418.281, 24.3337, 0.4812", "411.06, 418.237, 24.6747, 0.5034", "411.943, 417.797, 25.1398, 0.5318", "412.995, 417.376, 25.536, 0.4188", "414.114, 417.184, 25.8362, 0.3256", "415.232, 417.009, 26.052, 0.2748", "416.307, 416.62, 26.1971, 0.2748", "417.345, 416.141, 26.2856, 0.275", "418.336, 415.572, 26.3446, 0.2754", "419.314, 414.978, 26.4102, 0.2762", "420.292, 414.385, 26.4961, 0.2774", "421.275, 413.868, 26.6616, 0.2798", "422.335, 413.715, 26.8904, 0.2842", "423.452, 413.941, 27.0875, 0.2926", "424.553, 414.249, 27.2476, 0.308", "425.64, 414.599, 27.3767, 0.3368", "426.66, 415.107, 27.4775, 0.3878", "427.651, 415.673, 27.5694, 0.4944", "428.677, 416.139, 27.7032, 0.6346", "429.71, 416.589, 27.8768, 0.486", "430.707, 417.139, 28.0227, 0.3656", "431.702, 417.702, 28.1106, 0.3016", "432.742, 418.176, 28.1436, 0.3268", "433.802, 418.602, 28.1142, 0.3608", "434.846, 419.034, 27.9888, 0.4856", "435.903, 419.416, 27.7903, 0.418", "437.013, 419.657, 27.6038, 0.3706", "438.145, 419.822, 27.4694, 0.362", "439.264, 420.017, 27.3535, 0.4206", "440.368, 420.24, 27.2367, 0.6228", "441.446, 420.564, 27.2101, 0.5438", "442.492, 420.982, 27.3336, 0.5418", "443.417, 421.608, 27.5391, 0.5244", "444.241, 422.399, 27.7749, 0.558", "445.073, 423.136, 28.1086, 0.5286", "445.866, 423.871, 28.5684, 0.6916", "446.486, 424.739, 29.1074, 0.6216", "446.957, 425.746, 29.615, 0.6992", "447.367, 426.809, 30.0068, 0.7512", "447.944, 427.77, 30.3486, 0.607", "448.693, 428.609, 30.7076, 0.5932", "449.569, 429.308, 31.082, 0.4794", "450.519, 429.923, 31.4734, 0.4702", "451.538, 430.406, 31.89, 0.6144", "452.604, 430.776, 32.3369, 0.5582", "453.672, 430.962, 32.844, 0.4228", "454.653, 431.376, 33.3808, 0.3244", "455.449, 432.163, 33.8534, 0.3146", "456.223, 433.004, 34.2499, 0.3746", "457.019, 433.782, 34.6545, 0.3358", "457.926, 434.426, 34.9594, 0.3036", "458.941, 434.829, 35.2845, 0.2814", "459.974, 435.173, 35.6751, 0.2872", "461.077, 435.371, 36.0713, 0.299", "462.209, 435.461, 36.4277, 0.3148", "463.349, 435.543, 36.7153, 0.3746", "464.475, 435.604, 36.869, 0.3362", "465.618, 435.599, 36.9723, 0.304", "466.754, 435.538, 37.1006, 0.2822", "467.891, 435.506, 37.266, 0.2888", "469.021, 435.674, 37.4562, 0.3006", "470.15, 435.847, 37.6762, 0.3236", "471.286, 435.903, 37.9397, 0.3622", "472.424, 435.923, 38.2287, 0.4518", "473.555, 435.938, 38.5428, 0.5306", "474.67, 435.938, 38.9077, 0.4168", "475.782, 435.938, 39.3159, 0.322", "476.924, 435.938, 39.6536, 0.2684", "478.068, 435.938, 39.9193, 0.2626", "479.212, 435.917, 40.1229, 0.2542", "480.303, 435.578, 40.287, 0.2288", "481.355, 435.481, 40.9601, 0.2288" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "393.421, 415.179, 21.9971, 0.8798", "394.388, 414.388, 21.5382, 0.2288", "395.25, 413.651, 21.3422, 0.7224", "396.077, 412.898, 21.0812, 0.9518", "396.898, 412.127, 20.8032, 0.9", "397.767, 411.441, 20.501, 0.8314", "398.462, 410.614, 20.2947, 0.5734", "399.004, 409.64, 20.246, 0.501", "399.648, 408.743, 20.3151, 0.4546", "400.54, 408.138, 20.3064, 0.3998", "401.438, 407.495, 20.1771, 0.3766", "402.312, 406.79, 19.9752, 0.4082", "403.195, 406.071, 19.7504, 0.5626", "404.092, 405.363, 19.5364, 0.612", "405.021, 404.73, 19.406, 0.4828", "406.078, 404.534, 19.3514, 0.3988", "406.913, 404.009, 19.161, 0.4022", "407.645, 403.167, 18.9199, 0.5518", "407.902, 402.086, 18.6788, 0.5916", "407.71, 400.969, 18.3806, 0.4452", "407.187, 400.107, 17.8542, 0.3278", "406.549, 399.202, 17.2945, 0.279", "405.625, 398.832, 16.6799, 0.2828", "405.177, 398.595, 15.7763, 0.2896", "405.501, 397.903, 14.8756, 0.3034", "406.48, 397.32, 14.159, 0.323", "407.247, 396.568, 13.5643, 0.3896", "407.558, 395.514, 13.0992, 0.3652", "407.579, 394.373, 12.8159, 0.3524", "407.335, 393.271, 12.6798, 0.3984", "406.908, 392.21, 12.616, 0.3748", "406.483, 391.147, 12.5944, 0.4014", "406.085, 390.075, 12.6218, 0.3384", "405.667, 389.012, 12.6896, 0.3084", "405.385, 387.915, 12.7851, 0.2902", "405.345, 386.775, 12.906, 0.3046", "405.832, 385.863, 13.0435, 0.3248", "406.806, 385.87, 13.2681, 0.3936", "407.493, 385.738, 13.7301, 0.3706", "408.088, 384.894, 14.1823, 0.3702", "408.497, 383.855, 14.4178, 0.3952", "408.366, 382.858, 14.3528, 0.5436", "408.016, 381.882, 14.0661, 0.553", "407.77, 380.775, 13.7581, 0.4882", "408.068, 379.794, 13.6382, 0.5376", "408.845, 379.045, 13.6506, 0.493", "409.28, 378.063, 13.6142, 0.3864", "408.818, 377.132, 13.3882, 0.3032", "408.919, 376.199, 13.1398, 0.2806", "409.618, 375.329, 12.8005, 0.2856", "409.944, 374.379, 12.248, 0.2944", "410.46, 373.465, 11.6483, 0.3134", "411.49, 373.539, 11.1342, 0.3362", "412.388, 373.205, 10.5465, 0.4406", "413.016, 372.331, 9.9691, 0.3304", "414.031, 371.83, 9.1022, 0.2288" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "361.819, 413.042, 17.0666, 0.579", "361.878, 412.237, 15.6195, 0.408", "362.459, 411.524, 14.9338, 0.3278", "363.212, 410.776, 14.2332, 0.4", "363.999, 409.987, 13.7183, 0.3776", "364.984, 409.451, 13.3263, 0.4068", "365.84, 408.737, 12.9436, 0.3482", "366.515, 407.868, 12.654, 0.3276", "366.403, 406.93, 12.4919, 0.3206", "365.588, 406.316, 12.21, 0.3852", "365.489, 405.442, 11.8205, 0.356", "366.269, 404.656, 11.4576, 0.3418", "366.917, 403.727, 11.1398, 0.3476", "367.023, 402.612, 10.8539, 0.4322", "366.288, 401.785, 10.5714, 0.4576", "365.49, 401.229, 10.1385, 0.4576", "365.023, 400.221, 9.1022, 0.2288" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "361.819, 413.042, 17.0666, 0.579", "361.796, 413.285, 15.9457, 0.2288", "361.709, 414.145, 15.3563, 0.3348", "361.6, 415.128, 14.6891, 0.3894", "361.585, 416.259, 14.152, 0.4708", "361.84, 417.367, 13.7329, 0.7186", "361.993, 418.458, 13.4574, 0.709", "361.592, 419.438, 13.2163, 0.9076", "360.808, 420.214, 12.859, 0.9134", "360.225, 420.725, 12.2441, 0.6242", "360.657, 421.211, 11.4444, 0.3984", "360.846, 422.195, 10.6551, 0.305", "360.342, 423.031, 9.8521, 0.3814", "359.987, 424.033, 9.1022, 0.2288" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "350.023, 422.741, 15.4899, 0.8776", "348.695, 422.741, 15.122, 0.7582", "347.566, 422.741, 15.0086, 0.5908", "346.478, 422.922, 14.9671, 0.4752", "345.466, 423.438, 14.8534, 0.4592", "344.355, 423.63, 14.6166, 0.6114", "343.663, 423.231, 14.0504, 0.6974", "343.573, 422.201, 13.3865, 0.6638", "342.992, 421.262, 12.8769, 0.6234", "342.046, 420.674, 12.3978, 0.6712", "341.076, 420.452, 11.8149, 0.6228", "340.013, 420.485, 11.2403, 0.741", "338.88, 420.589, 10.7957, 0.8656", "337.743, 420.704, 10.4594, 0.871", "336.622, 420.92, 10.1968, 0.8284", "335.543, 421.287, 9.9963, 0.7782", "334.527, 421.786, 9.8734, 0.7748", "333.608, 422.445, 9.8095, 0.5612", "332.66, 423.063, 9.7098, 0.4836", "331.601, 423.478, 9.5967, 0.3976", "330.555, 423.871, 9.4413, 0.4134", "329.741, 424.578, 9.2786, 0.5086", "328.919, 425.208, 9.2579, 0.594", "328.108, 425.879, 9.2518, 0.7366", "327.174, 426.448, 9.1832, 0.6186", "326.074, 426.663, 9.0297, 0.6534", "325.073, 427.12, 8.7987, 0.6336", "324.204, 427.72, 8.4423, 0.5486", "323.173, 428.148, 8.1175, 0.3954", "322.042, 428.23, 7.9344, 0.3208", "320.9, 428.233, 7.8478, 0.308", "319.763, 428.134, 7.8313, 0.3616", "318.673, 427.847, 7.8322, 0.3134", "317.842, 428.453, 8.0475, 0.2542", "317.401, 429.379, 9.0306, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "350.023, 422.741, 15.4899, 0.8776", "349.508, 422.858, 14.1574, 0.6864", "349.387, 423.685, 13.5198, 0.4642", "349.004, 424.668, 12.9251, 0.364", "348.221, 425.246, 12.2175, 0.3404", "347.323, 425.32, 11.5254, 0.4244", "346.206, 425.14, 11.0163, 0.418", "345.168, 425.458, 10.6212, 0.507", "344.202, 426.054, 10.3499, 0.4106", "343.201, 426.6, 10.166, 0.3578", "342.81, 427.482, 9.9537, 0.3342", "342.802, 428.599, 9.7896, 0.3866", "342.441, 429.637, 9.5875, 0.4756", "341.64, 430.421, 9.3562, 0.6796", "341.517, 431.44, 9.0224, 0.869", "341.618, 432.561, 8.6898, 0.7626", "340.865, 433.257, 8.5506, 0.5", "339.806, 433.49, 8.339, 0.3304", "338.678, 433.575, 8.1329, 0.305", "337.538, 433.498, 7.9016, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "356.4, 408.141, 24.0848, 1.3728", "356.944, 407.179, 25.5192, 0.2288", "357.59, 406.281, 26.1201, 0.5166", "358.4, 405.518, 26.8696, 0.5008", "359.297, 404.881, 27.7626, 0.4008", "360.04, 404.275, 28.854, 0.331", "360.551, 403.633, 30.1888, 0.3268", "361.125, 403.561, 31.7428, 0.3968", "361.091, 404.142, 33.4113, 0.3784", "360.927, 405.078, 35.0638, 0.3766", "360.902, 406.109, 36.6405, 0.4454", "360.902, 407.176, 38.113, 0.4514", "360.902, 408.267, 39.4817, 0.5946", "360.969, 409.164, 40.9251, 0.4492", "361.398, 409.368, 42.5334, 0.3446", "362.102, 409.635, 44.1854, 0.2626", "362.697, 409.943, 45.8466, 0.2542", "362.993, 410.29, 47.4928, 0.2288", "364.109, 410.296, 50.0623, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "356.4, 408.141, 24.0848, 1.3728", "356.75, 406.559, 24.4012, 1.0296", "356.745, 405.43, 24.5543, 1.0296", "356.411, 404.363, 24.7724, 1.0296", "355.794, 403.4, 24.946, 1.0296", "355.188, 402.43, 25.1936, 1.0296" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "333.776, 430.625, 45.7173, 0.7106", "332.689, 430.542, 46.6698, 0.5332", "331.704, 430.608, 47.1156, 0.45", "330.982, 430.966, 47.7814, 0.4736", "329.923, 431.36, 48.3778, 0.5704", "328.793, 431.534, 48.9213, 0.4924", "327.678, 431.725, 49.4651, 0.454", "326.586, 431.789, 50.0592, 0.5532", "325.502, 431.675, 50.706, 0.5946", "324.436, 431.477, 51.403, 0.451", "323.383, 431.388, 52.1545, 0.3378", "322.316, 431.684, 52.9343, 0.2986", "321.259, 432.03, 53.7202, 0.314", "320.182, 432.287, 54.5017, 0.3732", "319.079, 432.393, 55.2838, 0.3334", "318.45, 432.647, 56.2108, 0.299", "317.76, 432.837, 57.2569, 0.2728", "316.868, 433.32, 58.2364, 0.2712", "315.854, 433.69, 58.9168, 0.2684", "314.952, 434.324, 59.4538, 0.2626", "313.854, 434.551, 59.8805, 0.2542", "312.734, 434.507, 60.2328, 0.2288", "311.678, 434.871, 60.9563, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "333.776, 430.625, 45.7173, 0.7106", "332.982, 429.558, 46.8476, 0.9152", "332.324, 428.644, 47.2968, 0.5294", "332.084, 427.623, 47.8643, 0.3522", "332.427, 426.63, 48.529, 0.277", "332.878, 425.665, 49.2559, 0.2792", "333.556, 424.83, 50.0013, 0.2828", "334.029, 423.824, 50.5338, 0.291", "334.389, 422.742, 50.969, 0.2994", "334.94, 421.875, 51.4791, 0.3476", "335.771, 421.231, 52.0206, 0.2796", "336.852, 420.91, 53.0544, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "355.188, 402.43, 25.1936, 1.0296", "353.734, 402.155, 24.0425, 0.2288", "352.614, 402.143, 23.5878, 0.3236", "351.559, 402.117, 23.0297, 0.3906", "350.5, 402.053, 22.4087, 0.367", "349.366, 402.085, 21.856, 0.3558", "348.315, 402.417, 21.3685, 0.4048", "347.433, 403.096, 20.9079, 0.3862", "346.471, 403.158, 20.5033, 0.4238", "345.411, 402.727, 20.169, 0.375", "344.303, 402.528, 19.8696, 0.4016", "343.178, 402.511, 19.5208, 0.339", "342.363, 402.121, 18.9946, 0.3096", "342.484, 401.159, 18.4271, 0.292", "341.941, 400.386, 17.813, 0.308", "341.029, 401.01, 17.3337, 0.3314", "339.928, 401.232, 16.9999, 0.4064", "338.956, 401.426, 16.553, 0.3892", "338.061, 400.928, 16.0493, 0.4292", "336.956, 400.776, 15.6246, 0.385", "335.853, 401.035, 15.3597, 0.42", "334.729, 401.194, 15.19, 0.3744", "333.59, 401.24, 15.0391, 0.3706", "332.465, 401.147, 14.8453, 0.4258", "331.355, 400.985, 14.6224, 0.4576", "330.302, 400.723, 14.4329, 0.4", "329.461, 401.096, 14.0658, 0.4008", "329.474, 401.975, 13.4767, 0.3378", "329.621, 402.935, 12.8257, 0.307", "329.145, 403.923, 12.2732, 0.2874", "328.247, 404.57, 11.8619, 0.2994", "327.152, 404.66, 11.573, 0.3156", "326.183, 404.165, 11.4464, 0.376", "325.237, 403.607, 11.4467, 0.3384", "324.197, 403.688, 11.408, 0.3082", "323.555, 404.37, 11.1496, 0.291", "322.639, 404.403, 10.7626, 0.2994", "321.659, 403.879, 10.3701, 0.3476", "320.568, 403.539, 10.085, 0.2796", "319.683, 402.968, 10.2399, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "355.188, 402.43, 25.1936, 1.0296", "354.989, 401.315, 25.0799, 0.9152", "355.019, 400.175, 24.9357, 0.9152" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "355.019, 400.175, 24.9357, 0.9152", "354.634, 398.909, 25.0214, 0.8008", "354.285, 397.819, 25.0496, 0.8008", "353.861, 396.759, 25.0597, 0.8008", "353.406, 395.71, 25.0491, 0.8008", "353.049, 394.625, 25.0138, 0.8008", "352.651, 393.561, 24.9505, 0.8008", "352.085, 392.568, 24.8559, 0.8008", "351.54, 391.565, 24.726, 0.8008", "351.052, 390.56, 24.5076, 0.8008", "350.582, 389.55, 24.2192, 0.8008", "350.186, 388.49, 23.9137, 0.8008", "349.908, 387.403, 23.5785, 0.8008", "349.599, 386.317, 23.254, 0.8008", "349.169, 385.259, 23.0244, 0.8008", "348.589, 384.275, 22.8936, 0.8008", "347.871, 383.385, 22.8094, 0.8008", "347.203, 382.456, 22.7452, 0.8008", "346.668, 381.446, 22.6834, 0.8008", "346.331, 380.354, 22.6058, 0.8008", "346.108, 379.261, 22.4291, 0.8008", "345.806, 378.166, 22.2309, 0.8008", "345.457, 377.076, 22.0721, 0.8008", "344.945, 376.053, 21.9562, 0.8008", "344.319, 375.096, 21.8789, 0.8008", "343.571, 374.231, 21.835, 0.8008", "342.717, 373.468, 21.8176, 0.8008", "341.928, 372.639, 21.8075, 0.8008", "341.262, 371.71, 21.7949, 0.8008", "340.799, 370.663, 21.7773, 0.8008", "340.438, 369.577, 21.7515, 0.8008", "340.174, 368.465, 21.7148, 0.8008", "339.577, 367.489, 21.6658, 0.8008", "338.98, 366.514, 21.6037, 0.8008", "338.463, 365.494, 21.52, 0.8008", "338.06, 364.467, 21.3293, 0.8008", "337.904, 363.339, 21.1361, 0.8008", "337.419, 362.304, 20.9919, 0.8008", "336.852, 361.311, 20.8958, 0.8008", "336.158, 360.401, 20.846, 0.8008", "335.629, 359.387, 20.8424, 0.8008", "335.051, 358.399, 20.8813, 0.8008", "334.443, 357.43, 20.9437, 0.8008", "333.836, 356.461, 21.0241, 0.8008", "333.311, 355.447, 21.1422, 0.8008", "332.894, 354.438, 21.3808, 0.494", "332.834, 353.297, 21.597, 0.4226", "333.01, 352.167, 21.7792, 0.4336", "332.971, 351.024, 21.9341, 0.4424", "332.76, 349.9, 22.0682, 0.5158", "332.234, 348.886, 22.1934, 0.605", "332.005, 347.771, 22.3448, 0.5388", "331.667, 346.718, 22.5912, 0.6246", "331.165, 345.694, 22.8248, 0.4576", "330.668, 344.678, 23.0611, 0.3602", "330.174, 343.668, 23.2926, 0.292", "329.681, 342.636, 23.4189, 0.3064", "329.191, 341.613, 23.4072, 0.3354", "328.591, 340.675, 23.2579, 0.378", "327.951, 339.73, 23.0944, 0.5122", "327.451, 338.712, 22.9032, 0.4928", "326.948, 337.697, 22.717, 0.3862", "326.443, 336.687, 22.6736, 0.303", "325.902, 335.693, 22.7377, 0.28", "325.333, 334.701, 22.8194, 0.2846", "324.778, 333.719, 22.899, 0.2934", "323.816, 333.103, 22.9737, 0.3086", "323.027, 332.291, 23.0376, 0.34", "322.545, 331.254, 23.0852, 0.3852", "322.004, 330.246, 23.13, 0.5322", "321.512, 329.217, 23.1941, 0.4984", "321.124, 328.154, 23.315, 0.5484", "320.617, 327.146, 23.4755, 0.5508", "320.127, 326.119, 23.5735, 0.7676", "319.644, 325.102, 23.6057, 0.8232", "318.979, 324.176, 23.648, 0.7776", "318.212, 323.339, 23.7572, 0.9566", "317.469, 322.512, 23.9708, 1.1556", "316.816, 321.625, 24.2754, 1.2536", "316.203, 320.675, 24.5958, 1.1488", "315.575, 319.722, 24.8646, 1.2022", "314.849, 318.839, 25.0513, 1.241", "314.061, 318.01, 25.1572, 1.1466", "313.342, 317.124, 25.2059, 1.323", "312.765, 316.139, 25.2207, 1.5448", "312.302, 315.093, 25.2244, 1.7808", "311.888, 314.027, 25.2291, 1.698", "311.407, 312.989, 25.2389, 1.5518", "310.888, 311.97, 25.2543, 1.4744", "310.372, 310.948, 25.2762, 1.5344", "309.872, 309.919, 25.307, 1.5728", "309.446, 308.859, 25.3484, 1.5406", "309.127, 307.761, 25.4055, 1.5258", "308.838, 306.656, 25.4904, 1.0508", "308.611, 305.542, 25.6178, 0.9704", "308.471, 304.411, 25.7698, 0.8266", "308.243, 303.302, 25.9258, 1.2204", "307.73, 302.289, 26.0789, 1.0326", "307.062, 301.362, 26.1901, 1.0214", "306.439, 300.409, 26.2634, 0.9666", "305.98, 299.361, 26.3071, 1.4868", "305.473, 298.34, 26.3312, 1.7222", "304.818, 297.403, 26.3418, 1.579", "304.17, 296.461, 26.3435, 1.3828", "303.65, 295.456, 26.3598, 1.1386", "303.247, 294.409, 26.4124, 0.794", "302.609, 293.486, 26.4174, 0.543", "301.776, 292.753, 26.278, 0.4828", "300.915, 292.088, 25.9991, 0.6922", "300.079, 291.347, 25.6861, 0.6678", "299.451, 290.4, 25.4159, 0.7926", "299.029, 289.341, 25.1924, 0.888", "298.851, 288.227, 25.0076, 1.0366", "298.868, 287.1, 24.8324, 1.2198", "298.746, 285.987, 24.6812, 1.553", "298.309, 284.95, 24.6047, 1.5138", "297.66, 284.011, 24.6058, 1.4278", "297.047, 283.059, 24.7117, 1.3334", "296.396, 282.142, 24.9122, 1.2982", "295.651, 281.279, 25.1367, 1.2428", "294.953, 280.377, 25.3554, 1.091", "294.382, 279.401, 25.5892, 1.0484", "293.864, 278.4, 25.8339, 1.181", "293.319, 277.398, 26.0333, 1.3168", "292.75, 276.406, 26.1722, 1.1886", "292.22, 275.394, 26.2679, 1.1926", "291.746, 274.353, 26.3295, 1.1698", "291.324, 273.294, 26.3654, 1.046", "291.0, 272.197, 26.3894, 0.985", "290.654, 271.106, 26.4177, 0.9686", "290.254, 270.034, 26.4572, 1.382", "289.897, 268.951, 26.5096, 1.1396", "289.592, 267.849, 26.5801, 1.2394", "289.141, 266.815, 26.6949, 1.2764", "288.512, 265.88, 26.8652, 1.3764", "287.785, 265.009, 27.0432, 1.4104", "287.048, 264.136, 27.1866, 1.294", "286.406, 263.192, 27.2882, 1.2594", "285.797, 262.239, 27.3218, 1.234", "285.147, 261.319, 27.2972, 0.9958", "284.549, 260.359, 27.3244, 0.7974", "284.062, 259.361, 27.4786, 0.62", "283.592, 258.363, 27.7416, 0.512", "283.053, 257.397, 28.0605, 0.6124", "282.492, 256.421, 28.3447, 0.482", "282.077, 255.366, 28.5208, 0.4058", "281.789, 254.259, 28.5863, 0.3766", "281.392, 253.242, 28.4701, 0.4628", "280.842, 252.324, 28.1641, 0.6288", "280.28, 251.375, 27.776, 0.907", "279.842, 250.336, 27.4319, 0.8782", "279.43, 249.277, 27.214, 0.952", "278.837, 248.314, 27.085, 0.9296", "278.168, 247.401, 26.9679, 0.975", "277.632, 246.414, 26.8374, 1.0946", "277.213, 245.356, 26.7254, 1.1428", "276.812, 244.284, 26.651, 0.9312", "276.329, 243.251, 26.6143, 1.0852", "275.768, 242.255, 26.6277, 1.0072", "275.298, 241.234, 26.7322, 1.0244", "274.914, 240.174, 26.8982, 1.644", "274.408, 239.158, 27.0514, 1.3138", "273.799, 238.195, 27.1421, 1.0154", "273.239, 237.214, 27.1564, 0.5414", "272.78, 236.178, 27.139, 0.421", "272.345, 235.131, 27.1813, 0.4072", "271.855, 234.157, 27.3596, 0.507", "271.471, 233.135, 27.6354, 0.771", "271.062, 232.082, 27.9031, 0.8772", "270.476, 231.104, 28.1084, 0.8764", "269.888, 230.124, 28.233, 1.1476", "269.355, 229.124, 28.2447, 1.47", "268.832, 228.123, 28.1649, 1.3422", "268.294, 227.12, 28.0795, 1.1954", "267.726, 226.126, 28.054, 0.9432", "267.172, 225.136, 28.1266, 0.837", "266.723, 224.107, 28.3058, 0.716", "266.426, 223.041, 28.5813, 0.8076", "266.177, 221.988, 28.9405, 0.589", "265.935, 220.901, 29.2099, 0.4682", "265.532, 219.906, 29.2648, 0.4646", "265.008, 218.922, 29.2085, 0.531", "264.691, 217.831, 29.1463, 0.5308", "264.588, 216.781, 29.2443, 0.6692", "264.381, 215.694, 29.4221, 0.6864", "263.627, 214.868, 29.6125, 0.6864", "262.947, 213.961, 29.8018, 0.6864", "262.45, 212.933, 29.8866, 0.6864", "262.049, 211.897, 29.7766, 0.6864", "261.553, 210.886, 29.5361, 0.6864", "260.983, 209.931, 29.1945, 0.6864", "260.273, 209.041, 28.8618, 0.6864", "259.612, 208.106, 28.5796, 0.6864", "258.87, 207.237, 28.3489, 0.6864", "258.178, 206.346, 28.1126, 0.6864", "257.474, 205.462, 27.8746, 0.6864", "256.683, 204.639, 27.6889, 0.6864", "255.868, 203.836, 27.5514, 0.6864", "255.029, 203.059, 27.4537, 0.6864", "254.079, 202.422, 27.3871, 0.6864", "253.033, 201.98, 27.3073, 0.6864", "251.998, 201.494, 27.256, 0.6864", "251.126, 200.771, 27.2829, 0.6864", "250.483, 199.826, 27.3171, 0.6864", "249.846, 198.876, 27.3476, 0.6864", "249.159, 197.961, 27.3725, 0.6864", "248.533, 197.004, 27.3885, 0.6864", "248.107, 195.942, 27.3865, 0.6864", "247.756, 194.853, 27.3703, 0.6864", "247.602, 193.72, 27.3512, 0.6864", "247.266, 192.629, 27.3151, 0.6864", "246.895, 191.586, 27.2009, 0.6864", "246.445, 190.534, 27.1401, 0.6864", "246.204, 189.451, 27.2348, 0.6864", "245.802, 188.386, 27.3893, 0.6864", "245.354, 187.333, 27.5584, 0.6864", "244.918, 186.288, 27.7813, 0.6864", "244.322, 185.341, 28.0602, 0.6864", "243.708, 184.376, 28.2766, 0.6864", "243.085, 183.416, 28.4234, 0.6864", "242.566, 182.397, 28.5258, 0.6864", "242.041, 181.381, 28.5953, 0.6864", "241.464, 180.393, 28.6362, 0.6864", "240.723, 179.521, 28.6625, 0.6864", "239.912, 178.714, 28.6947, 0.6864", "239.095, 177.919, 28.8492, 0.6636" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "355.019, 400.175, 24.9357, 0.9152", "355.135, 399.651, 25.0645, 0.2288", "355.585, 398.635, 25.0858, 0.322", "356.401, 397.86, 25.2283, 0.3876", "357.301, 397.188, 25.4803, 0.3612", "358.122, 396.414, 25.8112, 0.3458", "359.034, 395.805, 26.2385, 0.3848", "360.081, 395.441, 26.7324, 0.3548", "361.174, 395.146, 27.2168, 0.34", "362.293, 394.937, 27.6408, 0.3444", "363.424, 394.935, 28.0367, 0.4244", "364.52, 395.038, 28.4824, 0.4538", "365.576, 394.904, 28.9864, 0.3992", "366.535, 394.345, 29.4638, 0.3698", "367.398, 393.598, 29.8841, 0.4242", "368.411, 393.186, 30.2716, 0.4532", "369.528, 393.118, 30.6936, 0.3986", "370.595, 393.034, 31.2178, 0.3672", "371.667, 393.109, 31.8072, 0.4258", "372.723, 393.034, 32.4444, 0.4262", "373.812, 392.872, 33.0478, 0.4938", "374.946, 392.894, 33.5964, 0.5246", "376.035, 393.124, 34.1306, 0.5816", "377.088, 393.534, 34.6276, 0.459", "378.007, 393.738, 35.215, 0.4258", "378.893, 393.384, 35.8484, 0.3368", "379.799, 392.726, 36.4109, 0.3054", "380.704, 392.037, 36.8413, 0.2846", "381.732, 391.69, 37.0636, 0.2934", "382.789, 391.948, 37.1277, 0.3092", "383.855, 392.256, 37.2072, 0.3406", "384.971, 392.355, 37.3408, 0.3862", "386.065, 392.095, 37.4825, 0.5348", "387.079, 391.572, 37.6258, 0.4984", "388.077, 391.013, 37.7793, 0.5722", "389.12, 390.591, 37.9831, 0.4812", "390.169, 390.18, 38.2136, 0.5034", "391.17, 389.637, 38.4199, 0.5318", "392.108, 388.985, 38.5955, 0.419", "393.009, 388.279, 38.7411, 0.326", "394.009, 387.735, 38.8604, 0.2758", "395.072, 387.317, 38.9614, 0.2766", "396.053, 386.751, 39.1034, 0.2784", "396.889, 386.007, 39.3369, 0.2818", "397.819, 385.436, 39.4926, 0.2882", "398.766, 384.812, 39.6514, 0.2994", "399.818, 384.414, 39.9165, 0.3228", "400.653, 384.043, 40.4491, 0.3538", "401.681, 383.639, 41.0264, 0.4722", "402.746, 383.263, 41.6069, 0.3934", "403.842, 382.961, 42.1683, 0.3254", "404.926, 382.741, 42.7462, 0.2746", "405.982, 382.583, 43.3546, 0.2746", "407.104, 382.484, 43.8942, 0.2746", "408.246, 382.424, 44.3486, 0.2746", "409.387, 382.366, 44.7457, 0.2746", "410.523, 382.363, 45.1506, 0.2746", "411.658, 382.363, 45.568, 0.2746", "412.754, 382.478, 46.0625, 0.2746", "413.77, 382.72, 46.6841, 0.2744", "414.845, 382.676, 47.3609, 0.2744", "415.922, 382.448, 48.0276, 0.2742", "417.036, 382.35, 48.6279, 0.2736", "418.163, 382.327, 49.1372, 0.2728", "419.293, 382.232, 49.5365, 0.2712", "420.394, 381.919, 49.7899, 0.2684", "421.493, 381.604, 49.9388, 0.2626", "422.518, 381.096, 50.0175, 0.2542", "423.542, 380.585, 50.0522, 0.2288", "424.565, 380.072, 50.0623, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "239.095, 177.919, 28.8492, 0.6636", "238.643, 176.605, 28.2192, 0.6636", "238.222, 175.566, 27.9462, 0.6636", "237.595, 174.624, 27.6979, 0.6636", "236.818, 173.785, 27.491, 0.6636", "236.014, 172.972, 27.3216, 0.6636", "235.217, 172.153, 27.1796, 0.6636", "234.466, 171.296, 27.0407, 0.6636", "233.853, 170.362, 26.8464, 0.6636", "233.33, 169.361, 26.6372, 0.6636", "232.735, 168.388, 26.4608, 0.6636", "231.938, 167.589, 26.3038, 0.6636", "230.999, 166.943, 26.1926, 0.6636", "230.095, 166.255, 26.1694, 0.6636", "229.331, 165.414, 26.1988, 0.6636", "228.752, 164.434, 26.2374, 0.6636", "228.32, 163.377, 26.273, 0.6636", "227.937, 162.299, 26.3024, 0.6636", "227.56, 161.219, 26.3211, 0.6636", "227.122, 160.163, 26.3287, 0.6636", "226.579, 159.158, 26.3326, 0.6636", "226.008, 158.167, 26.3376, 0.6636", "225.449, 157.168, 26.3446, 0.6636", "224.828, 156.21, 26.3544, 0.6636", "224.11, 155.321, 26.3679, 0.6636", "223.435, 154.4, 26.3869, 0.6636", "223.035, 153.343, 26.4146, 0.6636", "222.816, 152.221, 26.4519, 0.6636", "222.563, 151.105, 26.5009, 0.6636", "222.176, 150.033, 26.5695, 0.6636", "221.637, 149.04, 26.6896, 0.6636", "221.032, 148.086, 26.847, 0.6636", "220.409, 147.132, 26.9794, 0.6636", "219.877, 146.122, 27.0542, 0.6636", "219.462, 145.057, 27.0648, 0.6636", "219.039, 143.994, 27.0088, 0.6636", "218.47, 143.008, 26.8747, 0.6636", "217.768, 142.131, 26.6353, 0.6636", "217.072, 141.246, 26.3225, 0.6636", "216.613, 140.233, 25.9563, 0.6636", "216.317, 139.144, 25.5772, 0.6636", "216.144, 138.018, 25.2381, 0.6636", "216.107, 136.888, 24.913, 0.6636", "216.129, 135.76, 24.6044, 0.6636", "216.281, 134.633, 24.3552, 0.6636", "216.47, 133.51, 24.1542, 0.6636", "216.548, 132.389, 23.9714, 0.6636", "216.544, 131.25, 23.8622, 0.6636", "216.476, 130.128, 23.9131, 0.6636", "216.174, 129.048, 24.0881, 0.6636", "215.681, 128.039, 24.3496, 0.6636", "215.054, 127.102, 24.6576, 0.6636", "214.414, 126.157, 24.9446, 0.6636", "213.918, 125.128, 25.1745, 0.6636", "213.49, 124.068, 25.3464, 0.6636", "213.062, 123.011, 25.4974, 0.6636", "212.695, 121.954, 25.6833, 0.6636", "212.496, 120.857, 25.8958, 0.6636", "212.445, 119.72, 26.0319, 0.6636", "212.442, 118.626, 26.0053, 0.6636", "212.447, 117.5, 25.9087, 0.6636", "212.477, 116.358, 25.8269, 0.6636", "212.681, 115.235, 25.7886, 0.6636", "213.032, 114.15, 25.8297, 0.6636", "213.593, 113.247, 26.0686, 0.6636", "214.421, 112.495, 26.3883, 0.6636", "214.787, 111.445, 26.6056, 0.6636", "215.083, 110.341, 26.7938, 0.6636", "215.08, 109.213, 27.0262, 0.6636", "214.729, 108.153, 27.3056, 0.6636", "214.359, 107.08, 27.5786, 0.6636", "214.341, 105.971, 27.8981, 0.6636", "214.677, 104.88, 28.1663, 0.6636", "215.271, 103.902, 28.3559, 0.6636", "215.817, 102.897, 28.4718, 0.6636", "215.675, 101.764, 28.532, 0.6636", "215.276, 100.692, 28.5572, 0.6636", "214.734, 99.684, 28.5606, 0.6636", "214.301, 98.6254, 28.5608, 0.6636", "214.293, 97.4814, 28.5622, 0.6636" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "239.095, 177.919, 28.8492, 0.6636", "237.793, 177.052, 29.6338, 0.6636", "236.9, 176.494, 30.0219, 0.6636", "235.892, 175.978, 30.291, 0.6636", "234.898, 175.437, 30.3884, 0.6636", "233.969, 174.791, 30.3461, 0.6636", "232.988, 174.247, 30.1748, 0.6636", "231.976, 173.728, 29.9603, 0.6636", "231.229, 172.893, 29.7217, 0.6636", "230.698, 171.894, 29.524, 0.6636", "230.299, 170.823, 29.4412, 0.6636", "230.024, 169.773, 29.5652, 0.6636", "230.547, 169.25, 29.9681, 0.6636", "229.627, 168.642, 30.203, 0.6636", "228.706, 168.028, 30.2828, 0.6636", "227.83, 167.312, 30.2912, 0.6636", "226.962, 166.572, 30.3041, 0.6636", "226.038, 165.926, 30.361, 0.6636", "225.097, 165.291, 30.4452, 0.6636", "224.264, 164.512, 30.548, 0.6636", "223.546, 163.623, 30.6373, 0.6636", "222.81, 162.748, 30.6939, 0.6636", "222.058, 161.885, 30.7135, 0.6636", "221.413, 160.943, 30.7042, 0.6636", "220.793, 159.982, 30.6715, 0.6636", "220.082, 159.11, 30.5782, 0.6636", "219.314, 158.266, 30.5004, 0.6636", "218.436, 157.562, 30.5239, 0.6636", "217.521, 156.885, 30.5948, 0.6636", "216.694, 156.095, 30.6673, 0.6636", "216.004, 155.185, 30.7353, 0.6636", "215.364, 154.238, 30.7966, 0.6636", "214.71, 153.298, 30.8409, 0.6636", "214.058, 152.358, 30.8703, 0.6636", "213.318, 151.486, 30.9005, 0.6636", "212.468, 150.722, 30.9397, 0.6636", "211.651, 149.921, 30.9904, 0.6636", "210.924, 149.04, 31.0601, 0.6636", "210.273, 148.127, 31.2021, 0.6636", "209.493, 147.308, 31.3617, 0.6636", "208.764, 146.427, 31.4731, 0.6636", "208.183, 145.444, 31.5249, 0.6636", "207.27, 144.771, 31.4938, 0.6636", "206.275, 144.27, 31.348, 0.6636", "205.228, 143.816, 31.1889, 0.6636", "204.125, 143.514, 31.0638, 0.6636", "203.156, 142.907, 30.982, 0.6636", "202.201, 142.278, 30.9453, 0.6636", "201.167, 141.809, 30.9828, 0.6636", "200.171, 141.271, 31.0842, 0.6636", "199.232, 140.655, 31.0811, 0.6636", "198.351, 139.933, 31.0282, 0.6636", "197.452, 139.226, 30.9775, 0.6636", "196.427, 138.718, 30.9361, 0.6636", "195.363, 138.299, 30.907, 0.6636", "194.369, 137.734, 30.8994, 0.6636", "193.416, 137.1, 30.9257, 0.6636", "192.514, 136.398, 30.9764, 0.6636", "191.587, 135.726, 31.0475, 0.6636", "190.696, 135.009, 31.1422, 0.6636", "189.83, 134.261, 31.2665, 0.6636", "188.835, 133.71, 31.4737, 0.6636", "187.83, 133.236, 31.7918, 0.6636", "186.788, 132.767, 32.1056, 0.6636", "185.941, 131.998, 32.3963, 0.6636", "185.259, 131.086, 32.6906, 0.6636", "184.742, 130.279, 33.796, 0.6636" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "214.293, 97.4814, 28.5622, 0.6636", "214.617, 96.5817, 29.6184, 0.5034", "215.424, 95.9926, 30.0339, 0.3114", "216.476, 95.9718, 30.6516, 0.345", "217.329, 95.7767, 31.523, 0.3944", "217.859, 95.1365, 32.5861, 0.5486", "218.138, 94.1442, 33.6647, 0.5308", "218.391, 93.0391, 34.5948, 0.6002", "218.559, 91.9179, 35.3948, 0.6898", "218.604, 90.8708, 36.2219, 0.814", "218.819, 90.0724, 37.1977, 0.5628", "219.338, 89.4128, 38.2934, 0.3764", "220.043, 88.6808, 39.3862, 0.275", "220.9, 87.9712, 40.3642, 0.2752", "221.692, 87.1829, 41.2146, 0.276", "222.074, 86.168, 41.9482, 0.2768", "222.509, 85.1786, 42.5975, 0.2796", "223.272, 84.6037, 43.258, 0.2796", "223.878, 83.747, 43.8584, 0.305", "224.796, 83.2832, 44.24, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "214.293, 97.4814, 28.5622, 0.6636", "214.009, 95.7359, 28.8277, 0.572", "213.811, 94.6145, 28.9128, 0.572", "213.584, 93.5428, 28.8, 0.572", "213.041, 92.5789, 28.5516, 0.572", "212.411, 91.6628, 28.208, 0.572", "211.758, 90.7819, 27.7866, 0.572", "210.963, 89.9912, 27.368, 0.572", "210.168, 89.1713, 27.0925, 0.572", "209.441, 88.2987, 26.9937, 0.572", "208.829, 87.3368, 26.9567, 0.572", "208.286, 86.3312, 26.9668, 0.572", "208.076, 85.2487, 27.1244, 0.572", "207.851, 84.1629, 27.3675, 0.572", "207.303, 83.1688, 27.5097, 0.572", "206.443, 82.4207, 27.5792, 0.572", "205.692, 81.5579, 27.6321, 0.572", "204.93, 80.7109, 27.76, 0.572" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "184.742, 130.279, 33.796, 0.6636", "184.62, 129.0, 33.7243, 0.6864", "184.51, 127.861, 33.696, 0.4948", "184.401, 126.722, 33.6552, 0.409", "184.292, 125.584, 33.6, 0.4808", "184.104, 124.463, 33.4827, 0.4088", "183.897, 123.348, 33.3102, 0.3548", "183.69, 122.235, 33.1047, 0.328", "183.483, 121.121, 32.8871, 0.3782", "183.621, 119.988, 32.7272, 0.4458", "183.808, 118.859, 32.6354, 0.694", "183.995, 117.73, 32.6099, 0.5562", "184.184, 116.602, 32.6407, 0.458", "184.373, 115.474, 32.7132, 0.4294", "184.592, 114.374, 32.8835, 0.545", "184.813, 113.274, 33.1078, 0.8574", "185.033, 112.175, 33.3519, 0.961", "185.254, 111.076, 33.5874, 0.7144", "185.476, 109.965, 33.6585, 0.5572", "185.695, 108.866, 33.5684, 0.64", "185.916, 107.766, 33.3539, 0.8062", "186.136, 106.667, 33.063, 0.5952", "186.207, 105.528, 32.7942, 0.4386", "186.207, 104.384, 32.5931, 0.3794", "186.207, 103.24, 32.4685, 0.5202", "186.207, 102.096, 32.4033, 0.4814", "186.207, 100.952, 32.3775, 0.4926", "186.207, 99.8076, 32.3728, 0.5666", "186.207, 98.6636, 32.373, 0.9034", "186.207, 97.5196, 32.3736, 1.0144", "186.207, 96.3756, 32.3744, 0.9688", "186.207, 95.2316, 32.3756, 0.9628", "186.207, 94.0876, 32.3772, 0.796", "186.117, 92.9471, 32.3795, 0.556", "185.929, 91.8188, 32.3826, 0.4636", "185.741, 90.6903, 32.3868, 0.4098", "185.552, 89.5619, 32.3929, 0.4248", "185.365, 88.4334, 32.4016, 0.583", "185.032, 87.3389, 32.4131, 0.4746", "184.606, 86.2769, 32.4296, 0.3908", "184.182, 85.2146, 32.4537, 0.3522", "183.756, 84.1529, 32.487, 0.4024", "183.264, 83.1205, 32.5298, 0.5882", "182.613, 82.1795, 32.5828, 0.484", "181.798, 81.3872, 32.6864, 0.4112", "180.882, 80.7302, 32.8535, 0.3768", "180.035, 79.9639, 32.9815, 0.51", "179.187, 79.1973, 33.0865, 0.4888", "178.157, 78.7093, 33.1962, 0.3784", "177.061, 78.3829, 33.3026, 0.288", "175.965, 78.0574, 33.4144, 0.2542", "175.413, 77.1577, 33.6487, 0.2288", "175.413, 76.0146, 34.1334, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "184.742, 130.279, 33.796, 0.6636", "184.124, 130.08, 33.9802, 0.644", "183.024, 129.956, 33.9979, 0.377", "181.89, 129.893, 33.9968, 0.318", "180.817, 129.574, 34.1158, 0.3808", "179.786, 129.082, 34.2678, 0.347", "178.766, 128.566, 34.4562, 0.3256", "178.07, 127.788, 34.8205, 0.3168", "177.524, 126.812, 35.2394, 0.3786", "176.896, 125.893, 35.6852, 0.3436", "176.025, 125.157, 36.0584, 0.318", "174.922, 124.861, 36.3552, 0.3078", "173.891, 124.367, 36.5879, 0.3366", "173.15, 123.496, 36.7704, 0.3864", "172.255, 122.785, 36.9519, 0.498", "171.506, 121.946, 37.1974, 0.6108", "170.96, 121.025, 37.5634, 0.5904", "170.236, 120.172, 37.9481, 0.5234", "169.229, 119.63, 38.2483, 0.5398", "168.088, 119.55, 38.6372, 0.8052" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "204.93, 80.7109, 27.76, 0.572", "204.607, 79.5202, 26.9167, 1.1564", "204.557, 78.4076, 26.5692, 1.1144", "204.679, 77.2897, 26.3105, 0.8868", "205.122, 76.2778, 26.1341, 0.7342", "206.119, 76.0247, 25.8891, 0.5154", "206.904, 75.7183, 25.3828, 0.4852", "207.931, 75.7012, 24.796, 0.4376", "208.963, 75.6571, 24.1329, 0.5384", "209.871, 74.9826, 23.592, 0.494", "210.593, 74.0963, 23.2089, 0.3882", "211.065, 73.0659, 22.9376, 0.3068", "210.712, 71.992, 22.8077, 0.287", "210.784, 70.8943, 22.8726, 0.2988", "211.022, 69.8184, 23.0412, 0.3142", "211.774, 68.9664, 23.1706, 0.3734", "212.18, 67.9697, 23.3125, 0.3338", "212.409, 67.5373, 23.0975, 0.3", "212.092, 67.5317, 22.7741, 0.2746", "211.758, 66.5587, 22.5778, 0.2744", "211.613, 65.508, 22.2351, 0.2744", "211.357, 64.5105, 21.726, 0.2742", "211.591, 63.5014, 21.1467, 0.2736", "212.484, 62.8453, 20.6693, 0.2728", "213.366, 62.1417, 20.1986, 0.2712", "214.104, 61.3094, 19.7131, 0.2684", "215.03, 60.6508, 19.3208, 0.2626", "215.983, 60.0261, 19.0098, 0.2542", "216.936, 59.4652, 18.6844, 0.2288", "218.008, 59.0716, 18.2045, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "204.93, 80.7109, 27.76, 0.572", "204.188, 80.0571, 28.5776, 0.2288", "203.555, 79.2074, 28.9444, 0.2778", "203.091, 78.1921, 29.3037, 0.2802", "202.76, 77.1154, 29.573, 0.2854", "202.299, 76.1516, 29.6288, 0.2942", "202.129, 75.149, 29.4767, 0.3118", "202.28, 74.0319, 29.2726, 0.3394", "202.288, 72.912, 29.141, 0.415", "201.795, 71.9211, 29.0254, 0.4366", "201.415, 70.8684, 28.861, 0.3664", "201.108, 69.7835, 28.6552, 0.3128", "200.754, 68.7001, 28.46, 0.2992", "200.385, 67.6169, 28.2699, 0.315", "199.742, 66.6868, 28.0756, 0.3754", "199.301, 65.6917, 27.7903, 0.3374", "199.23, 64.5755, 27.4834, 0.3068", "199.23, 63.4327, 27.2059, 0.287", "199.23, 62.2899, 26.9321, 0.2986", "199.222, 61.1752, 26.5894, 0.314", "199.12, 60.0488, 26.2282, 0.373", "198.672, 59.0095, 25.902, 0.333", "197.824, 58.275, 25.5584, 0.2982", "196.911, 57.6097, 25.1406, 0.2712", "196.034, 56.8967, 24.6812, 0.2684", "194.969, 56.5992, 24.1786, 0.2626", "193.882, 56.3484, 23.648, 0.2542", "192.829, 56.324, 23.049, 0.2288", "191.901, 56.782, 21.6177, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "168.088, 119.55, 38.6372, 0.8052", "167.366, 119.888, 38.736, 0.84", "166.271, 120.206, 38.7848, 0.6074", "165.247, 119.954, 38.7447, 0.4746", "164.166, 120.071, 38.85, 0.3824", "163.083, 120.279, 39.1132, 0.3792", "162.001, 120.49, 39.4934, 0.4724", "160.917, 120.7, 39.9512, 0.3934", "159.835, 120.909, 40.4485, 0.3258", "158.716, 121.107, 40.8794, 0.2752", "157.588, 121.299, 41.1925, 0.2758", "156.46, 121.491, 41.4058, 0.2766", "155.333, 121.682, 41.5481, 0.2784", "154.206, 121.875, 41.645, 0.2822", "153.09, 122.129, 41.7166, 0.288", "151.977, 122.391, 41.7886, 0.3008", "150.863, 122.653, 41.8723, 0.318", "149.75, 122.915, 41.9734, 0.3808", "148.635, 123.164, 42.1187, 0.3476", "147.535, 123.387, 42.3469, 0.3248", "146.435, 123.607, 42.6367, 0.323", "145.335, 123.827, 42.9584, 0.3538", "144.233, 124.068, 43.2715, 0.4728", "143.141, 124.399, 43.4944, 0.3938", "142.048, 124.74, 43.6218, 0.3264", "140.957, 125.08, 43.6632, 0.2766", "139.864, 125.421, 43.6397, 0.2784", "138.762, 125.69, 43.5285, 0.2818", "137.659, 125.919, 43.3454, 0.2882", "136.556, 126.143, 43.1309, 0.2994", "135.454, 126.368, 42.9145, 0.3228", "134.318, 126.479, 42.7958, 0.3538", "133.187, 126.506, 42.8207, 0.4724", "132.055, 126.526, 42.9663, 0.3936", "130.925, 126.547, 43.1978, 0.326", "129.795, 126.569, 43.4798, 0.2758", "128.713, 126.921, 43.7394, 0.2766", "127.672, 127.396, 43.948, 0.2784", "126.635, 127.879, 44.1146, 0.2816", "125.598, 128.36, 44.2588, 0.2876", "124.659, 129.007, 44.4287, 0.2986", "123.839, 129.785, 44.6536, 0.321", "123.026, 130.57, 44.9266, 0.3502", "122.212, 131.355, 45.2273, 0.466", "121.684, 132.321, 45.5792, 0.3814", "120.836, 133.083, 45.857, 0.305", "120.085, 133.944, 46.0494, 0.2288", "119.246, 134.722, 46.2451, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "168.088, 119.55, 38.6372, 0.8052", "168.109, 119.056, 39.4548, 0.6864", "168.087, 118.016, 39.8591, 0.4442", "167.645, 117.011, 40.2326, 0.3256", "166.934, 116.118, 40.5143, 0.2748", "166.115, 115.322, 40.7058, 0.275", "165.215, 114.616, 40.8187, 0.2752", "164.254, 114.002, 40.8414, 0.2758", "163.226, 113.562, 40.7632, 0.2768", "162.178, 113.117, 40.693, 0.279", "161.171, 112.626, 40.7417, 0.2826", "160.167, 112.104, 40.8696, 0.2892", "159.162, 111.566, 41.0318, 0.3028", "158.245, 110.888, 41.1897, 0.3216", "157.408, 110.11, 41.3241, 0.3874", "156.586, 109.315, 41.449, 0.3596", "155.789, 108.496, 41.5836, 0.3484", "155.139, 107.581, 41.795, 0.3616", "154.391, 106.746, 42.0711, 0.4508", "153.44, 106.142, 42.3732, 0.5282", "152.677, 105.348, 42.7193, 0.4122", "152.017, 104.483, 43.099, 0.3134", "150.968, 104.24, 43.2398, 0.2542", "149.977, 103.673, 43.293, 0.2288", "148.849, 103.49, 43.2356, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_104",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_105",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_33", "dend_22", "dend_13", "dend_6", "dend_0", "apic_31", "apic_1", "dend_39", "dend_34", "dend_28", "dend_23", "dend_21", "dend_14", "dend_12", "dend_7", "dend_5", "dend_4", "dend_1", "apic_24", "apic_2", "dend_41", "dend_40", "dend_38", "dend_35", "dend_32", "dend_29", "dend_27", "dend_24", "dend_20", "dend_15", "dend_9", "dend_8", "dend_3", "dend_2", "apic_28", "apic_25", "apic_23", "apic_20", "apic_3", "dend_37", "dend_36", "dend_31", "dend_30", "dend_26", "dend_25", "dend_19", "dend_16", "dend_11", "dend_10", "apic_30", "apic_29", "apic_27", "apic_26", "apic_22", "apic_21", "apic_19", "apic_4", "dend_18", "dend_17", "apic_18", "apic_5", "apic_7", "apic_6", "apic_13", "apic_8", "apic_17", "apic_14", "apic_12", "apic_9", "apic_16", "apic_15", "apic_11", "apic_10" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_22", "dend_13", "dend_6", "dend_0", "dend_39", "dend_34", "dend_28", "dend_23", "dend_21", "dend_14", "dend_12", "dend_7", "dend_5", "dend_4", "dend_1", "dend_41", "dend_40", "dend_38", "dend_35", "dend_32", "dend_29", "dend_27", "dend_24", "dend_20", "dend_15", "dend_9", "dend_8", "dend_3", "dend_2", "dend_37", "dend_36", "dend_31", "dend_30", "dend_26", "dend_25", "dend_19", "dend_16", "dend_11", "dend_10", "dend_18", "dend_17" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_31", "apic_1", "apic_24", "apic_2", "apic_28", "apic_25", "apic_23", "apic_20", "apic_3", "apic_30", "apic_29", "apic_27", "apic_26", "apic_22", "apic_21", "apic_19", "apic_4", "apic_18", "apic_5", "apic_7", "apic_6", "apic_13", "apic_8", "apic_17", "apic_14", "apic_12", "apic_9", "apic_16", "apic_15", "apic_11", "apic_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3689",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_2", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_5", "apic_5", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.9011688"
  }, {
    "group" : "apic",
    "value" : "3.9011688"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "193.00839"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "8.7887005E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.17528385",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.003324739",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.030325813",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.615023E-4",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.04287133",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.010457729",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.4452957E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.8173846E-4",
    "erev" : "-88.109474"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.7724152E-4",
    "erev" : "-88.109474"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.610396E-7",
    "erev" : "-88.109474"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "6.82672E-7",
    "erev" : "-88.109474"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.083867E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.007371566",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_477840124",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_477840124

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_31, id: apic_31, parent: apic_0
create apic_31
public apic_31
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_0
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_24, id: apic_24, parent: apic_1
create apic_24
public apic_24
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_28, id: apic_28, parent: apic_24
create apic_28
public apic_28
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_23, id: apic_23, parent: apic_2
create apic_23
public apic_23
// Section: apic_20, id: apic_20, parent: apic_2
create apic_20
public apic_20
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: apic_30, id: apic_30, parent: apic_28
create apic_30
public apic_30
// Section: apic_29, id: apic_29, parent: apic_28
create apic_29
public apic_29
// Section: apic_27, id: apic_27, parent: apic_25
create apic_27
public apic_27
// Section: apic_26, id: apic_26, parent: apic_25
create apic_26
public apic_26
// Section: apic_22, id: apic_22, parent: apic_20
create apic_22
public apic_22
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_19, id: apic_19, parent: apic_3
create apic_19
public apic_19
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: apic_18, id: apic_18, parent: apic_4
create apic_18
public apic_18
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_13, id: apic_13, parent: apic_7
create apic_13
public apic_13
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_17, id: apic_17, parent: apic_13
create apic_17
public apic_17
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_104, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_104
// Group: {name=ModelViewParmSubset_105, groups=[], sections=[apic_0, dend_33, dend_22, dend_13, dend_6, dend_0, apic_31, apic_1, dend_39, dend_34, dend_28, dend_23, dend_21, dend_14, dend_12, dend_7, dend_5, dend_4, dend_1, apic_24, apic_2, dend_41, dend_40, dend_38, dend_35, dend_32, dend_29, dend_27, dend_24, dend_20, dend_15, dend_9, dend_8, dend_3, dend_2, apic_28, apic_25, apic_23, apic_20, apic_3, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_16, dend_11, dend_10, apic_30, apic_29, apic_27, apic_26, apic_22, apic_21, apic_19, apic_4, dend_18, dend_17, apic_18, apic_5, apic_7, apic_6, apic_13, apic_8, apic_17, apic_14, apic_12, apic_9, apic_16, apic_15, apic_11, apic_10]}
objref ModelViewParmSubset_105
// Group: {name=dend, groups=[], sections=[dend_33, dend_22, dend_13, dend_6, dend_0, dend_39, dend_34, dend_28, dend_23, dend_21, dend_14, dend_12, dend_7, dend_5, dend_4, dend_1, dend_41, dend_40, dend_38, dend_35, dend_32, dend_29, dend_27, dend_24, dend_20, dend_15, dend_9, dend_8, dend_3, dend_2, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_16, dend_11, dend_10, dend_18, dend_17]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_31, apic_1, apic_24, apic_2, apic_28, apic_25, apic_23, apic_20, apic_3, apic_30, apic_29, apic_27, apic_26, apic_22, apic_21, apic_19, apic_4, apic_18, apic_5, apic_7, apic_6, apic_13, apic_8, apic_17, apic_14, apic_12, apic_9, apic_16, apic_15, apic_11, apic_10]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_3689, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_3689
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_2, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_4, apic_4, apic_4, apic_4, apic_4, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_5, apic_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_477840124
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000458001282418)
    connect apic_0(0), soma_0(0.5000458001282418)
    connect dend_33(0), soma_0(0.5000458001282418)
    connect dend_22(0), soma_0(0.5000458001282418)
    connect dend_13(0), soma_0(0.5000458001282418)
    connect dend_6(0), soma_0(0.5000458001282418)
    connect dend_0(0), soma_0(0.5000458001282418)
    connect axon_1(0), axon_0(1.0)
    connect apic_31(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_0(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_24(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_28(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_23(0), apic_2(1.0)
    connect apic_20(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect apic_30(0), apic_28(1.0)
    connect apic_29(0), apic_28(1.0)
    connect apic_27(0), apic_25(1.0)
    connect apic_26(0), apic_25(1.0)
    connect apic_22(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_19(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect apic_18(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_13(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_17(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 368.286, 438.61, 25.2, 10.917 ) }
    soma_0 { pt3dadd( 373.745, 438.61, 25.2, 10.917 ) }
    soma_0 { pt3dadd( 379.203, 438.61, 25.2, 10.917 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 373.745, 438.61, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 379.586, 452.426, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 385.427, 466.242, 25.2, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 370.214, 434.131, 24.6551, 1.6016 ) }
    apic_0 { pt3dadd( 370.012, 433.025, 24.5272, 1.6016 ) }
    apic_0 { pt3dadd( 369.682, 431.929, 24.4625, 1.6016 ) }
    apic_0 { pt3dadd( 369.324, 430.854, 24.4969, 1.6016 ) }
    apic_0 { pt3dadd( 368.527, 430.073, 24.6406, 1.6016 ) }
    apic_0 { pt3dadd( 367.876, 429.133, 24.7705, 1.6016 ) }
    apic_0 { pt3dadd( 367.186, 428.227, 24.8713, 1.6016 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 379.73, 439.887, 25.6192, 1.144 ) }
    dend_33 { pt3dadd( 380.75, 439.702, 25.8737, 0.9386 ) }
    dend_33 { pt3dadd( 381.754, 439.969, 26.2332, 0.776 ) }
    dend_33 { pt3dadd( 382.639, 440.599, 26.4362, 0.6278 ) }
    dend_33 { pt3dadd( 383.738, 440.841, 26.5586, 0.5262 ) }
    dend_33 { pt3dadd( 384.863, 440.684, 26.6512, 0.6388 ) }
    dend_33 { pt3dadd( 385.98, 440.449, 26.7663, 0.5326 ) }
    dend_33 { pt3dadd( 387.082, 440.228, 26.9511, 0.4896 ) }
    dend_33 { pt3dadd( 388.202, 440.068, 27.1942, 0.5796 ) }
    dend_33 { pt3dadd( 389.344, 440.06, 27.4481, 0.608 ) }
    dend_33 { pt3dadd( 390.488, 440.06, 27.6962, 0.6466 ) }
    dend_33 { pt3dadd( 391.599, 439.926, 28.0067, 0.5576 ) }
    dend_33 { pt3dadd( 392.603, 439.652, 28.4329, 0.4848 ) }
    dend_33 { pt3dadd( 393.668, 439.293, 28.8324, 0.3616 ) }
    dend_33 { pt3dadd( 394.727, 438.86, 29.1315, 0.304 ) }
    dend_33 { pt3dadd( 395.711, 438.279, 29.4557, 0.2822 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 371.283, 443.597, 24.3088, 0.2288 ) }
    dend_22 { pt3dadd( 370.808, 444.622, 24.0531, 0.582 ) }
    dend_22 { pt3dadd( 370.305, 445.647, 23.8252, 0.4732 ) }
    dend_22 { pt3dadd( 369.747, 446.612, 23.55, 0.3882 ) }
    dend_22 { pt3dadd( 369.038, 447.502, 23.3078, 0.3474 ) }
    dend_22 { pt3dadd( 368.365, 448.426, 23.1367, 0.3936 ) }
    dend_22 { pt3dadd( 367.566, 449.245, 23.0342, 0.572 ) }
    dend_22 { pt3dadd( 366.612, 449.873, 22.9513, 0.454 ) }
    dend_22 { pt3dadd( 365.643, 450.482, 22.8945, 0.3532 ) }
    dend_22 { pt3dadd( 364.799, 451.253, 22.855, 0.2794 ) }
    dend_22 { pt3dadd( 364.055, 452.121, 22.8096, 0.2832 ) }
    dend_22 { pt3dadd( 363.056, 452.675, 22.7531, 0.2908 ) }
    dend_22 { pt3dadd( 361.918, 452.628, 22.6814, 0.3044 ) }
    dend_22 { pt3dadd( 361.052, 453.355, 22.5602, 0.332 ) }
    dend_22 { pt3dadd( 360.526, 454.336, 22.3644, 0.3706 ) }
    dend_22 { pt3dadd( 359.559, 454.945, 22.0909, 0.5034 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 45/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 368.764, 436.921, 26.9934, 0.9152 ) }
    dend_13 { pt3dadd( 367.721, 436.957, 27.6108, 0.6184 ) }
    dend_13 { pt3dadd( 366.614, 437.133, 28.1646, 0.5024 ) }
    dend_13 { pt3dadd( 365.508, 437.281, 28.6964, 0.6272 ) }
    dend_13 { pt3dadd( 364.446, 437.207, 29.0343, 0.5814 ) }
    dend_13 { pt3dadd( 363.377, 437.206, 29.3572, 0.4678 ) }
    dend_13 { pt3dadd( 362.471, 437.777, 29.6909, 0.3962 ) }
    dend_13 { pt3dadd( 361.441, 438.229, 30.0443, 0.5054 ) }
    dend_13 { pt3dadd( 360.312, 438.279, 30.3948, 0.4492 ) }
    dend_13 { pt3dadd( 359.185, 438.107, 30.7073, 0.4558 ) }
    dend_13 { pt3dadd( 358.105, 438.077, 31.0982, 0.3866 ) }
    dend_13 { pt3dadd( 357.135, 438.075, 31.6002, 0.4244 ) }
    dend_13 { pt3dadd( 356.01, 438.071, 32.0088, 0.376 ) }
    dend_13 { pt3dadd( 355.007, 437.872, 32.046, 0.4036 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 59/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 378.044, 438.539, 22.4375, 0.2288 ) }
    dend_6 { pt3dadd( 379.131, 438.218, 21.4824, 0.464 ) }
    dend_6 { pt3dadd( 380.12, 437.773, 20.9504, 0.4856 ) }
    dend_6 { pt3dadd( 381.13, 437.611, 20.8261, 0.6598 ) }
    dend_6 { pt3dadd( 382.074, 437.233, 21.0132, 0.5588 ) }
    dend_6 { pt3dadd( 383.16, 436.882, 21.2517, 0.601 ) }
    dend_6 { pt3dadd( 384.265, 436.779, 21.6208, 0.4802 ) }
    dend_6 { pt3dadd( 385.408, 436.745, 21.8218, 0.5376 ) }
    dend_6 { pt3dadd( 386.483, 436.57, 21.7585, 0.4204 ) }
    dend_6 { pt3dadd( 387.253, 435.791, 21.0706, 0.3762 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 69/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 375.096, 443.156, 28.8548, 0.2288 ) }
    dend_0 { pt3dadd( 374.094, 442.737, 30.095, 0.3514 ) }
    dend_0 { pt3dadd( 372.984, 442.846, 31.0898, 0.401 ) }
    dend_0 { pt3dadd( 372.109, 443.539, 31.8004, 0.5858 ) }
    dend_0 { pt3dadd( 371.88, 444.622, 32.209, 0.4808 ) }
    dend_0 { pt3dadd( 371.819, 445.753, 32.3322, 0.3976 ) }
    dend_0 { pt3dadd( 371.655, 446.87, 32.2109, 0.3872 ) }
    dend_0 { pt3dadd( 371.635, 448.011, 32.1286, 0.3588 ) }
    dend_0 { pt3dadd( 372.151, 448.992, 32.149, 0.3482 ) }
    dend_0 { pt3dadd( 373.161, 449.52, 32.3596, 0.3538 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 79/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 385.427, 466.242, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 391.268, 480.058, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 397.11, 493.874, 25.2, 1.0 ) }
    // Section: apic_31, id: apic_31, parent: apic_0 (entry count 82/100)
    apic_31 { pt3dclear() }
    apic_31 { pt3dadd( 367.186, 428.227, 24.8713, 1.6016 ) }
    apic_31 { pt3dadd( 367.7, 427.671, 26.6871, 0.2288 ) }
    apic_31 { pt3dadd( 367.049, 427.636, 27.5548, 0.283 ) }
    apic_31 { pt3dadd( 366.221, 428.378, 28.2176, 0.2902 ) }
    apic_31 { pt3dadd( 365.734, 429.294, 28.819, 0.3032 ) }
    apic_31 { pt3dadd( 364.95, 429.188, 29.3852, 0.3298 ) }
    apic_31 { pt3dadd( 364.237, 428.33, 29.9771, 0.366 ) }
    apic_31 { pt3dadd( 363.225, 428.107, 30.6765, 0.4964 ) }
    apic_31 { pt3dadd( 362.562, 428.47, 31.6596, 0.4326 ) }
    apic_31 { pt3dadd( 362.361, 429.118, 32.8507, 0.4242 ) }
    apic_31 { pt3dadd( 362.894, 428.476, 34.1334, 0.3338 ) }
    apic_31 { pt3dadd( 363.579, 427.654, 35.1935, 0.3 ) }
    apic_31 { pt3dadd( 363.626, 426.551, 36.1483, 0.2746 ) }
    apic_31 { pt3dadd( 363.547, 425.494, 37.0073, 0.2746 ) }
    apic_31 { pt3dadd( 362.996, 424.76, 37.8496, 0.2748 ) }
    apic_31 { pt3dadd( 362.163, 424.05, 38.4989, 0.2748 ) }
    apic_31 { pt3dadd( 361.823, 423.199, 39.2238, 0.2752 ) }
    apic_31 { pt3dadd( 361.674, 422.238, 40.1232, 0.2758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_31 { pt3dadd( 361.306, 421.248, 41.0878, 0.2766 ) }
    apic_31 { pt3dadd( 360.532, 420.479, 42.049, 0.2784 ) }
    apic_31 { pt3dadd( 360.016, 420.761, 43.1875, 0.2816 ) }
    apic_31 { pt3dadd( 359.624, 421.732, 44.2683, 0.2876 ) }
    apic_31 { pt3dadd( 359.493, 422.19, 45.472, 0.2986 ) }
    apic_31 { pt3dadd( 358.808, 422.129, 46.6833, 0.321 ) }
    apic_31 { pt3dadd( 357.686, 422.246, 47.7142, 0.3502 ) }
    apic_31 { pt3dadd( 356.631, 422.217, 48.6475, 0.466 ) }
    apic_31 { pt3dadd( 355.631, 422.5, 49.4491, 0.3814 ) }
    apic_31 { pt3dadd( 354.676, 423.084, 50.1043, 0.305 ) }
    apic_31 { pt3dadd( 354.116, 424.041, 50.5658, 0.2288 ) }
    apic_31 { pt3dadd( 353.329, 424.8, 51.3612, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 12/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 367.186, 428.227, 24.8713, 1.6016 ) }
    apic_1 { pt3dadd( 366.377, 427.654, 24.0954, 1.4872 ) }
    apic_1 { pt3dadd( 365.547, 426.936, 23.7392, 1.4872 ) }
    apic_1 { pt3dadd( 364.974, 425.947, 23.4486, 1.4872 ) }
    apic_1 { pt3dadd( 364.311, 425.013, 23.2361, 1.4872 ) }
    apic_1 { pt3dadd( 363.647, 424.082, 23.0952, 1.4872 ) }
    apic_1 { pt3dadd( 363.133, 423.06, 23.0199, 1.4872 ) }
    apic_1 { pt3dadd( 362.615, 422.041, 23.0026, 1.4872 ) }
    apic_1 { pt3dadd( 362.101, 421.018, 23.0126, 1.4872 ) }
    apic_1 { pt3dadd( 361.612, 419.985, 23.0765, 1.4872 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 395.711, 438.279, 29.4557, 0.2822 ) }
    dend_39 { pt3dadd( 396.047, 438.279, 28.8019, 0.2882 ) }
    dend_39 { pt3dadd( 397.088, 438.494, 28.4855, 0.3012 ) }
    dend_39 { pt3dadd( 398.211, 438.659, 28.2055, 0.3188 ) }
    dend_39 { pt3dadd( 399.346, 438.641, 27.928, 0.382 ) }
    dend_39 { pt3dadd( 400.474, 438.511, 27.6354, 0.3496 ) }
    dend_39 { pt3dadd( 401.587, 438.297, 27.337, 0.3302 ) }
    dend_39 { pt3dadd( 402.555, 437.764, 27.0242, 0.3252 ) }
    dend_39 { pt3dadd( 403.411, 437.031, 26.7114, 0.394 ) }
    dend_39 { pt3dadd( 404.126, 436.148, 26.4351, 0.3716 ) }
    dend_39 { pt3dadd( 404.688, 435.154, 26.2111, 0.3718 ) }
    dend_39 { pt3dadd( 405.015, 434.065, 26.0361, 0.3984 ) }
    dend_39 { pt3dadd( 405.293, 432.955, 25.8924, 0.5492 ) }
    dend_39 { pt3dadd( 405.812, 431.973, 25.7029, 0.5644 ) }
    dend_39 { pt3dadd( 406.449, 431.047, 25.4752, 0.5034 ) }
    dend_39 { pt3dadd( 407.19, 430.182, 25.2826, 0.5964 ) }
    dend_39 { pt3dadd( 407.871, 429.268, 25.1258, 0.4526 ) }
    dend_39 { pt3dadd( 408.254, 428.221, 24.9592, 0.3508 ) }
    dend_39 { pt3dadd( 408.605, 427.141, 24.8332, 0.2746 ) }
    dend_39 { pt3dadd( 409.052, 426.114, 24.8651, 0.2746 ) }
    dend_39 { pt3dadd( 409.362, 425.031, 25.0152, 0.2746 ) }
    dend_39 { pt3dadd( 409.424, 423.897, 25.2076, 0.2746 ) }
    dend_39 { pt3dadd( 409.443, 422.755, 25.4232, 0.2746 ) }
    dend_39 { pt3dadd( 409.449, 421.626, 25.6897, 0.2746 ) }
    dend_39 { pt3dadd( 409.44, 420.494, 25.9711, 0.2746 ) }
    dend_39 { pt3dadd( 409.414, 419.355, 26.2172, 0.2746 ) }
    dend_39 { pt3dadd( 409.551, 418.227, 26.441, 0.2746 ) }
    dend_39 { pt3dadd( 409.799, 417.12, 26.6518, 0.2746 ) }
    dend_39 { pt3dadd( 410.077, 416.017, 26.7708, 0.2746 ) }
    dend_39 { pt3dadd( 410.362, 414.927, 26.7781, 0.2746 ) }
    dend_39 { pt3dadd( 410.75, 413.863, 26.8142, 0.2746 ) }
    dend_39 { pt3dadd( 411.178, 412.83, 26.9304, 0.2746 ) }
    dend_39 { pt3dadd( 411.277, 411.702, 27.0248, 0.2746 ) }
    dend_39 { pt3dadd( 411.283, 410.56, 27.0841, 0.2746 ) }
    dend_39 { pt3dadd( 411.323, 409.418, 27.1572, 0.2746 ) }
    dend_39 { pt3dadd( 411.381, 408.276, 27.2504, 0.2746 ) }
    dend_39 { pt3dadd( 411.451, 407.136, 27.3431, 0.2746 ) }
    dend_39 { pt3dadd( 411.565, 405.998, 27.4492, 0.2748 ) }
    dend_39 { pt3dadd( 411.686, 404.861, 27.5752, 0.2748 ) }
    dend_39 { pt3dadd( 411.711, 403.716, 27.7158, 0.2752 ) }
    dend_39 { pt3dadd( 411.469, 402.622, 27.7934, 0.2758 ) }
    dend_39 { pt3dadd( 411.296, 401.495, 27.8715, 0.2766 ) }
    dend_39 { pt3dadd( 411.23, 400.985, 29.0766, 0.2782 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 65/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 395.711, 438.279, 29.4557, 0.2822 ) }
    dend_34 { pt3dadd( 396.007, 437.746, 31.9231, 0.2288 ) }
    dend_34 { pt3dadd( 396.411, 437.097, 33.0201, 0.2766 ) }
    dend_34 { pt3dadd( 396.602, 436.127, 34.228, 0.2782 ) }
    dend_34 { pt3dadd( 396.786, 435.015, 35.3332, 0.2814 ) }
    dend_34 { pt3dadd( 397.67, 434.591, 36.416, 0.287 ) }
    dend_34 { pt3dadd( 398.674, 434.759, 37.457, 0.2988 ) }
    dend_34 { pt3dadd( 399.103, 435.699, 38.3922, 0.3142 ) }
    dend_34 { pt3dadd( 399.527, 436.397, 40.5807, 0.3734 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 74/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 359.559, 454.945, 22.0909, 0.5034 ) }
    dend_28 { pt3dadd( 359.107, 455.694, 23.5712, 0.4518 ) }
    dend_28 { pt3dadd( 358.182, 456.176, 24.1965, 0.4294 ) }
    dend_28 { pt3dadd( 357.107, 456.537, 24.7722, 0.4912 ) }
    dend_28 { pt3dadd( 356.062, 457.002, 25.2664, 0.562 ) }
    dend_28 { pt3dadd( 355.07, 457.57, 25.6906, 0.6756 ) }
    dend_28 { pt3dadd( 354.019, 458.01, 26.0767, 0.5146 ) }
    dend_28 { pt3dadd( 353.111, 457.735, 26.593, 0.418 ) }
    dend_28 { pt3dadd( 352.381, 456.916, 27.169, 0.4032 ) }
    dend_28 { pt3dadd( 351.276, 456.693, 27.7122, 0.4928 ) }
    dend_28 { pt3dadd( 350.29, 457.204, 28.2828, 0.7768 ) }
    dend_28 { pt3dadd( 349.245, 457.574, 28.8565, 0.7334 ) }
    dend_28 { pt3dadd( 348.234, 457.764, 29.4792, 0.6724 ) }
    dend_28 { pt3dadd( 347.141, 457.52, 30.6552, 0.6926 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 88/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 359.559, 454.945, 22.0909, 0.5034 ) }
    dend_23 { pt3dadd( 359.01, 455.103, 21.7907, 0.2288 ) }
    dend_23 { pt3dadd( 357.92, 455.442, 21.695, 0.3298 ) }
    dend_23 { pt3dadd( 356.901, 455.576, 21.3702, 0.402 ) }
    dend_23 { pt3dadd( 355.819, 455.849, 20.9583, 0.389 ) }
    dend_23 { pt3dadd( 354.941, 456.576, 20.5467, 0.3914 ) }
    dend_23 { pt3dadd( 354.275, 457.465, 20.0715, 0.4964 ) }
    dend_23 { pt3dadd( 353.263, 457.97, 19.6042, 0.4326 ) }
    dend_23 { pt3dadd( 352.283, 458.553, 19.2016, 0.4242 ) }
    dend_23 { pt3dadd( 351.297, 459.031, 18.7883, 0.3338 ) }
    dend_23 { pt3dadd( 350.186, 459.134, 17.901, 0.3 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 99/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 355.007, 437.872, 32.046, 0.4036 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_21 { pt3dadd( 354.918, 438.452, 30.5318, 0.3428 ) }
    dend_21 { pt3dadd( 354.639, 438.804, 29.7654, 0.3166 ) }
    dend_21 { pt3dadd( 353.591, 439.257, 29.1516, 0.3048 ) }
    dend_21 { pt3dadd( 352.506, 439.572, 28.6658, 0.333 ) }
    dend_21 { pt3dadd( 351.41, 439.615, 28.2489, 0.3722 ) }
    dend_21 { pt3dadd( 350.306, 439.416, 28.0269, 0.5062 ) }
    dend_21 { pt3dadd( 349.252, 439.428, 28.0938, 0.4582 ) }
    dend_21 { pt3dadd( 348.184, 439.762, 28.2621, 0.4352 ) }
    dend_21 { pt3dadd( 347.062, 439.961, 28.385, 0.531 ) }
    dend_21 { pt3dadd( 345.953, 440.181, 28.474, 0.4916 ) }
    dend_21 { pt3dadd( 344.858, 440.365, 28.5634, 0.5592 ) }
    dend_21 { pt3dadd( 343.797, 440.365, 28.7902, 0.4606 ) }
    dend_21 { pt3dadd( 342.75, 440.365, 29.0735, 0.4482 ) }
    dend_21 { pt3dadd( 341.62, 440.29, 29.311, 0.5118 ) }
    dend_21 { pt3dadd( 340.497, 440.302, 29.5439, 0.6684 ) }
    dend_21 { pt3dadd( 339.362, 440.417, 29.727, 0.5424 ) }
    dend_21 { pt3dadd( 338.219, 440.398, 29.8472, 0.4984 ) }
    dend_21 { pt3dadd( 337.12, 440.145, 29.9012, 0.4134 ) }
    dend_21 { pt3dadd( 336.096, 439.639, 29.934, 0.4986 ) }
    dend_21 { pt3dadd( 335.051, 439.189, 29.9706, 0.3946 ) }
    dend_21 { pt3dadd( 333.962, 438.838, 30.0045, 0.328 ) }
    dend_21 { pt3dadd( 332.841, 438.629, 30.046, 0.2794 ) }
    dend_21 { pt3dadd( 331.71, 438.685, 30.112, 0.2834 ) }
    dend_21 { pt3dadd( 330.571, 438.757, 30.1963, 0.291 ) }
    dend_21 { pt3dadd( 329.525, 438.416, 30.331, 0.3062 ) }
    dend_21 { pt3dadd( 328.435, 438.217, 30.3934, 0.3276 ) }
    dend_21 { pt3dadd( 327.364, 437.871, 30.5264, 0.3994 ) }
    dend_21 { pt3dadd( 326.252, 437.653, 30.6998, 0.3768 ) }
    dend_21 { pt3dadd( 325.143, 437.51, 30.8706, 0.405 ) }
    dend_21 { pt3dadd( 324.219, 436.887, 31.0556, 0.3454 ) }
    dend_21 { pt3dadd( 323.103, 436.638, 31.2063, 0.3214 ) }
    dend_21 { pt3dadd( 321.982, 436.439, 31.3093, 0.314 ) }
    dend_21 { pt3dadd( 320.849, 436.375, 31.3085, 0.3496 ) }
    dend_21 { pt3dadd( 319.717, 436.315, 31.2318, 0.4026 ) }
    dend_21 { pt3dadd( 318.618, 436.069, 31.1704, 0.5666 ) }
    dend_21 { pt3dadd( 317.571, 435.659, 31.1676, 0.5516 ) }
    dend_21 { pt3dadd( 316.484, 435.337, 31.1301, 0.6978 ) }
    dend_21 { pt3dadd( 315.378, 435.13, 31.0173, 0.5822 ) }
    dend_21 { pt3dadd( 314.245, 435.067, 30.8888, 0.6444 ) }
    dend_21 { pt3dadd( 313.103, 435.123, 30.7751, 0.562 ) }
    dend_21 { pt3dadd( 311.962, 435.196, 30.6642, 0.6814 ) }
    dend_21 { pt3dadd( 310.823, 435.305, 30.5572, 0.7262 ) }
    dend_21 { pt3dadd( 309.684, 435.418, 30.4595, 0.7502 ) }
    dend_21 { pt3dadd( 308.549, 435.481, 30.3386, 0.6242 ) }
    dend_21 { pt3dadd( 307.421, 435.481, 30.1574, 0.7614 ) }
    dend_21 { pt3dadd( 306.29, 435.444, 29.951, 0.5888 ) }
    dend_21 { pt3dadd( 305.152, 435.334, 29.7744, 0.5102 ) }
    dend_21 { pt3dadd( 304.013, 435.249, 29.6352, 0.5638 ) }
    dend_21 { pt3dadd( 302.877, 435.306, 29.5112, 0.6138 ) }
    dend_21 { pt3dadd( 301.752, 435.467, 29.4, 0.4862 ) }
    dend_21 { pt3dadd( 300.629, 435.649, 29.3521, 0.4056 ) }
    dend_21 { pt3dadd( 299.51, 435.835, 29.398, 0.4134 ) }
    dend_21 { pt3dadd( 298.377, 435.904, 29.482, 0.5798 ) }
    dend_21 { pt3dadd( 297.234, 435.847, 29.5624, 0.6086 ) }
    dend_21 { pt3dadd( 296.108, 435.699, 29.654, 0.6466 ) }
    dend_21 { pt3dadd( 295.046, 435.339, 29.7878, 0.5626 ) }
    dend_21 { pt3dadd( 294.055, 434.809, 29.9062, 0.4714 ) }
    dend_21 { pt3dadd( 293.125, 434.171, 29.9065, 0.446 ) }
    dend_21 { pt3dadd( 292.355, 433.372, 29.8304, 0.6166 ) }
    dend_21 { pt3dadd( 291.633, 432.497, 29.7531, 0.5624 ) }
    dend_21 { pt3dadd( 290.688, 431.888, 29.6814, 0.4308 ) }
    dend_21 { pt3dadd( 289.614, 431.494, 29.619, 0.3384 ) }
    dend_21 { pt3dadd( 288.523, 431.148, 29.5764, 0.345 ) }
    dend_21 { pt3dadd( 287.43, 430.812, 29.5576, 0.4078 ) }
    dend_21 { pt3dadd( 286.329, 430.503, 29.547, 0.5098 ) }
    dend_21 { pt3dadd( 285.21, 430.271, 29.5291, 0.7674 ) }
    dend_21 { pt3dadd( 284.082, 430.083, 29.5005, 0.9134 ) }
    dend_21 { pt3dadd( 282.95, 429.986, 29.4854, 0.7346 ) }
    dend_21 { pt3dadd( 281.812, 429.99, 29.4927, 0.5254 ) }
    dend_21 { pt3dadd( 280.801, 430.158, 29.3709, 0.4592 ) }
    dend_21 { pt3dadd( 279.832, 430.589, 29.1516, 0.605 ) }
    dend_21 { pt3dadd( 278.732, 430.83, 28.9755, 0.7168 ) }
    dend_21 { pt3dadd( 277.591, 430.89, 28.8621, 0.548 ) }
    dend_21 { pt3dadd( 276.453, 430.901, 28.8341, 0.4592 ) }
    dend_21 { pt3dadd( 275.316, 430.901, 28.8837, 0.3516 ) }
    dend_21 { pt3dadd( 274.18, 430.901, 28.9937, 0.3324 ) }
    dend_21 { pt3dadd( 273.039, 430.901, 29.0886, 0.337 ) }
    dend_21 { pt3dadd( 271.898, 430.901, 29.1071, 0.3794 ) }
    dend_21 { pt3dadd( 270.76, 430.916, 29.0562, 0.5222 ) }
    dend_21 { pt3dadd( 269.637, 431.066, 29.013, 0.4752 ) }
    dend_21 { pt3dadd( 268.514, 431.239, 28.9906, 0.5286 ) }
    dend_21 { pt3dadd( 267.4, 431.163, 28.9002, 0.4032 ) }
    dend_21 { pt3dadd( 266.29, 430.987, 28.7358, 0.3442 ) }
    dend_21 { pt3dadd( 265.187, 430.758, 28.5379, 0.3092 ) }
    dend_21 { pt3dadd( 264.086, 430.502, 28.3307, 0.3388 ) }
    dend_21 { pt3dadd( 263.018, 430.141, 28.2145, 0.3918 ) }
    dend_21 { pt3dadd( 261.962, 429.732, 28.2072, 0.5018 ) }
    dend_21 { pt3dadd( 260.902, 429.312, 28.2467, 0.6482 ) }
    dend_21 { pt3dadd( 259.84, 428.888, 28.2979, 0.512 ) }
    dend_21 { pt3dadd( 258.756, 428.527, 28.3433, 0.4086 ) }
    dend_21 { pt3dadd( 257.883, 427.835, 28.3704, 0.4072 ) }
    dend_21 { pt3dadd( 256.842, 427.509, 28.3682, 0.3972 ) }
    dend_21 { pt3dadd( 255.817, 427.943, 28.3416, 0.4138 ) }
    dend_21 { pt3dadd( 254.734, 428.3, 28.2993, 0.503 ) }
    dend_21 { pt3dadd( 253.628, 428.593, 28.243, 0.6146 ) }
    dend_21 { pt3dadd( 252.591, 429.066, 28.173, 0.6234 ) }
    dend_21 { pt3dadd( 251.514, 429.436, 28.0571, 0.457 ) }
    dend_21 { pt3dadd( 250.409, 429.315, 27.8592, 0.3502 ) }
    dend_21 { pt3dadd( 249.279, 429.399, 27.6416, 0.3156 ) }
    dend_21 { pt3dadd( 248.193, 429.756, 27.4649, 0.3762 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( 247.086, 430.041, 27.3216, 0.3388 ) }
    dend_21 { pt3dadd( 245.946, 430.099, 27.19, 0.3094 ) }
    dend_21 { pt3dadd( 244.807, 430.195, 27.0844, 0.292 ) }
    dend_21 { pt3dadd( 243.697, 430.452, 27.0421, 0.3068 ) }
    dend_21 { pt3dadd( 242.602, 430.785, 27.0077, 0.335 ) }
    dend_21 { pt3dadd( 241.519, 431.152, 26.9587, 0.3842 ) }
    dend_21 { pt3dadd( 240.463, 431.582, 26.8674, 0.4888 ) }
    dend_21 { pt3dadd( 239.485, 432.07, 26.6599, 0.6186 ) }
    dend_21 { pt3dadd( 238.346, 432.123, 26.4737, 0.483 ) }
    dend_21 { pt3dadd( 237.243, 431.818, 26.1688, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 10/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 355.007, 437.872, 32.046, 0.4036 ) }
    dend_14 { pt3dadd( 354.574, 437.476, 32.0678, 0.2288 ) }
    dend_14 { pt3dadd( 353.658, 436.795, 32.1012, 0.3124 ) }
    dend_14 { pt3dadd( 352.6, 436.507, 32.0964, 0.3452 ) }
    dend_14 { pt3dadd( 351.639, 436.474, 31.9348, 0.4024 ) }
    dend_14 { pt3dadd( 350.785, 436.474, 32.0468, 0.5282 ) }
    dend_14 { pt3dadd( 349.712, 436.566, 32.3182, 0.6638 ) }
    dend_14 { pt3dadd( 348.594, 436.689, 32.6584, 0.704 ) }
    dend_14 { pt3dadd( 347.508, 436.703, 33.0893, 0.6576 ) }
    dend_14 { pt3dadd( 346.418, 436.889, 33.5457, 0.4736 ) }
    dend_14 { pt3dadd( 345.319, 436.626, 34.0528, 0.3796 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 387.253, 435.791, 21.0706, 0.3762 ) }
    dend_12 { pt3dadd( 387.406, 435.787, 20.6567, 0.2288 ) }
    dend_12 { pt3dadd( 387.216, 435.375, 20.4016, 0.3366 ) }
    dend_12 { pt3dadd( 386.428, 434.941, 19.9374, 0.392 ) }
    dend_12 { pt3dadd( 386.312, 433.889, 19.6938, 0.4796 ) }
    dend_12 { pt3dadd( 386.778, 432.962, 19.5586, 0.7164 ) }
    dend_12 { pt3dadd( 387.682, 432.342, 19.3267, 0.7932 ) }
    dend_12 { pt3dadd( 388.591, 431.818, 18.949, 0.6362 ) }
    dend_12 { pt3dadd( 389.453, 431.128, 18.5338, 0.4258 ) }
    dend_12 { pt3dadd( 390.457, 430.65, 18.1317, 0.3304 ) }
    dend_12 { pt3dadd( 391.312, 430.113, 17.6324, 0.3256 ) }
    dend_12 { pt3dadd( 392.039, 429.486, 17.3264, 0.3944 ) }
    dend_12 { pt3dadd( 392.949, 429.393, 16.9394, 0.373 ) }
    dend_12 { pt3dadd( 394.028, 429.112, 16.5822, 0.373 ) }
    dend_12 { pt3dadd( 395.082, 428.681, 16.2744, 0.4066 ) }
    dend_12 { pt3dadd( 395.989, 428.086, 15.9334, 0.536 ) }
    dend_12 { pt3dadd( 396.712, 427.215, 15.7234, 0.678 ) }
    dend_12 { pt3dadd( 397.641, 426.56, 15.5842, 0.7318 ) }
    dend_12 { pt3dadd( 398.581, 425.918, 15.4434, 0.7038 ) }
    dend_12 { pt3dadd( 399.486, 425.229, 15.3443, 0.5838 ) }
    dend_12 { pt3dadd( 400.375, 424.511, 15.2272, 0.463 ) }
    dend_12 { pt3dadd( 401.056, 423.598, 15.0738, 0.4348 ) }
    dend_12 { pt3dadd( 401.552, 422.575, 14.8299, 0.5766 ) }
    dend_12 { pt3dadd( 402.273, 421.914, 14.3506, 0.5802 ) }
    dend_12 { pt3dadd( 403.262, 421.596, 13.7544, 0.7022 ) }
    dend_12 { pt3dadd( 404.395, 421.596, 13.1944, 0.8282 ) }
    dend_12 { pt3dadd( 405.529, 421.543, 12.7509, 0.6308 ) }
    dend_12 { pt3dadd( 406.504, 421.116, 12.3508, 0.529 ) }
    dend_12 { pt3dadd( 407.115, 420.221, 11.9073, 0.4296 ) }
    dend_12 { pt3dadd( 407.97, 419.61, 11.4055, 0.4976 ) }
    dend_12 { pt3dadd( 408.965, 419.087, 10.9234, 0.5446 ) }
    dend_12 { pt3dadd( 409.775, 418.405, 10.409, 0.5576 ) }
    dend_12 { pt3dadd( 410.591, 417.923, 9.9358, 0.712 ) }
    dend_12 { pt3dadd( 411.687, 417.685, 9.634, 0.8228 ) }
    dend_12 { pt3dadd( 412.776, 417.379, 9.3934, 0.965 ) }
    dend_12 { pt3dadd( 413.827, 416.994, 9.1913, 0.8486 ) }
    dend_12 { pt3dadd( 414.516, 416.168, 9.0292, 0.6492 ) }
    dend_12 { pt3dadd( 414.809, 415.095, 8.9687, 0.656 ) }
    dend_12 { pt3dadd( 415.148, 414.021, 8.9393, 0.6696 ) }
    dend_12 { pt3dadd( 415.505, 412.968, 8.8054, 0.6922 ) }
    dend_12 { pt3dadd( 416.216, 412.23, 8.5386, 0.9774 ) }
    dend_12 { pt3dadd( 417.085, 411.537, 8.2331, 1.0084 ) }
    dend_12 { pt3dadd( 418.107, 411.042, 8.0021, 0.7372 ) }
    dend_12 { pt3dadd( 419.202, 410.775, 7.896, 0.4576 ) }
    dend_12 { pt3dadd( 420.15, 410.153, 7.9016, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 66/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 387.253, 435.791, 21.0706, 0.3762 ) }
    dend_7 { pt3dadd( 387.196, 435.208, 19.5171, 0.3656 ) }
    dend_7 { pt3dadd( 387.545, 434.542, 18.7776, 0.4582 ) }
    dend_7 { pt3dadd( 388.387, 433.905, 18.1037, 0.5424 ) }
    dend_7 { pt3dadd( 389.071, 433.009, 17.6159, 0.4386 ) }
    dend_7 { pt3dadd( 389.134, 431.889, 17.3163, 0.3636 ) }
    dend_7 { pt3dadd( 389.049, 430.872, 17.3765, 0.3398 ) }
    dend_7 { pt3dadd( 389.278, 429.853, 18.3442, 0.422 ) }
    // Section: dend_5, id: dend_5, parent: dend_0 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 373.161, 449.52, 32.3596, 0.3538 ) }
    dend_5 { pt3dadd( 371.89, 449.713, 33.1576, 0.2288 ) }
    dend_5 { pt3dadd( 370.903, 450.174, 33.4799, 0.3396 ) }
    dend_5 { pt3dadd( 370.018, 450.834, 33.7056, 0.415 ) }
    dend_5 { pt3dadd( 369.466, 451.591, 34.1421, 0.4368 ) }
    dend_5 { pt3dadd( 369.034, 452.622, 34.5425, 0.3668 ) }
    dend_5 { pt3dadd( 368.247, 453.45, 34.9272, 0.3136 ) }
    dend_5 { pt3dadd( 367.329, 453.804, 35.5306, 0.2998 ) }
    dend_5 { pt3dadd( 366.539, 454.486, 36.258, 0.3232 ) }
    dend_5 { pt3dadd( 365.545, 454.787, 37.06, 0.3542 ) }
    dend_5 { pt3dadd( 364.855, 455.608, 37.9008, 0.4734 ) }
    dend_5 { pt3dadd( 364.022, 456.186, 38.782, 0.3954 ) }
    dend_5 { pt3dadd( 362.94, 456.531, 39.5772, 0.3294 ) }
    dend_5 { pt3dadd( 362.006, 457.102, 40.3623, 0.2818 ) }
    dend_5 { pt3dadd( 361.254, 457.886, 41.2096, 0.2882 ) }
    dend_5 { pt3dadd( 360.419, 458.56, 42.1294, 0.2994 ) }
    dend_5 { pt3dadd( 360.082, 458.877, 43.2645, 0.3228 ) }
    dend_5 { pt3dadd( 359.341, 458.848, 44.4086, 0.3538 ) }
    dend_5 { pt3dadd( 358.312, 458.931, 45.5384, 0.4722 ) }
    dend_5 { pt3dadd( 358.047, 459.266, 46.8877, 0.393 ) }
    dend_5 { pt3dadd( 358.374, 459.603, 48.4061, 0.3254 ) }
    dend_5 { pt3dadd( 358.937, 460.191, 49.8607, 0.2746 ) }
    dend_5 { pt3dadd( 359.995, 460.606, 51.0653, 0.2746 ) }
    dend_5 { pt3dadd( 360.188, 461.137, 52.2892, 0.2744 ) }
    dend_5 { pt3dadd( 359.827, 462.08, 53.4722, 0.2744 ) }
    dend_5 { pt3dadd( 359.751, 463.204, 54.514, 0.2742 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 360.424, 463.858, 55.6444, 0.2736 ) }
    dend_5 { pt3dadd( 361.227, 463.249, 56.8938, 0.2728 ) }
    dend_5 { pt3dadd( 361.459, 462.365, 58.4111, 0.2712 ) }
    dend_5 { pt3dadd( 361.565, 461.779, 60.191, 0.2684 ) }
    dend_5 { pt3dadd( 361.678, 461.502, 62.176, 0.2626 ) }
    dend_5 { pt3dadd( 361.796, 461.422, 64.2586, 0.2542 ) }
    dend_5 { pt3dadd( 361.796, 461.428, 66.3172, 0.2288 ) }
    dend_5 { pt3dadd( 361.796, 461.651, 70.5513, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 8/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 373.161, 449.52, 32.3596, 0.3538 ) }
    dend_4 { pt3dadd( 373.296, 449.527, 31.8268, 0.2288 ) }
    dend_4 { pt3dadd( 374.23, 449.909, 31.6215, 0.2746 ) }
    dend_4 { pt3dadd( 374.859, 450.57, 31.2732, 0.2744 ) }
    dend_4 { pt3dadd( 375.841, 450.664, 30.8081, 0.2744 ) }
    dend_4 { pt3dadd( 376.973, 450.746, 30.4226, 0.2742 ) }
    dend_4 { pt3dadd( 377.975, 450.888, 30.0073, 0.2736 ) }
    dend_4 { pt3dadd( 378.581, 451.699, 29.6677, 0.2728 ) }
    dend_4 { pt3dadd( 378.832, 452.78, 29.6142, 0.2712 ) }
    dend_4 { pt3dadd( 379.13, 453.872, 29.7856, 0.2684 ) }
    dend_4 { pt3dadd( 379.832, 454.302, 30.3008, 0.2626 ) }
    dend_4 { pt3dadd( 380.607, 454.407, 31.0822, 0.2542 ) }
    dend_4 { pt3dadd( 380.788, 455.478, 31.8038, 0.2288 ) }
    dend_4 { pt3dadd( 380.79, 456.615, 32.7356, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 373.161, 449.52, 32.3596, 0.3538 ) }
    dend_1 { pt3dadd( 373.628, 449.432, 34.5447, 0.4722 ) }
    dend_1 { pt3dadd( 374.548, 449.309, 35.499, 0.3934 ) }
    dend_1 { pt3dadd( 375.264, 449.194, 36.7338, 0.3254 ) }
    dend_1 { pt3dadd( 375.851, 449.124, 38.164, 0.2746 ) }
    dend_1 { pt3dadd( 376.438, 449.084, 39.6718, 0.2746 ) }
    dend_1 { pt3dadd( 377.433, 449.443, 42.3307, 0.2746 ) }
    // Section: apic_24, id: apic_24, parent: apic_1 (entry count 29/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 361.612, 419.985, 23.0765, 1.4872 ) }
    apic_24 { pt3dadd( 361.538, 419.028, 22.8116, 1.6016 ) }
    apic_24 { pt3dadd( 361.883, 417.998, 22.6338, 0.9678 ) }
    apic_24 { pt3dadd( 362.807, 417.355, 22.4594, 0.8356 ) }
    apic_24 { pt3dadd( 363.777, 416.804, 22.4358, 0.7118 ) }
    apic_24 { pt3dadd( 364.706, 416.148, 22.4848, 0.5804 ) }
    apic_24 { pt3dadd( 365.635, 415.485, 22.7556, 0.5456 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 36/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 361.612, 419.985, 23.0765, 1.4872 ) }
    apic_2 { pt3dadd( 361.318, 418.925, 23.6846, 0.7536 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 38/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 411.23, 400.985, 29.0766, 0.2782 ) }
    dend_41 { pt3dadd( 410.815, 400.076, 29.0993, 0.2814 ) }
    dend_41 { pt3dadd( 410.262, 399.087, 29.0615, 0.2872 ) }
    dend_41 { pt3dadd( 409.678, 398.127, 29.122, 0.2988 ) }
    dend_41 { pt3dadd( 409.09, 397.173, 29.2793, 0.3144 ) }
    dend_41 { pt3dadd( 408.614, 396.138, 29.4381, 0.3736 ) }
    dend_41 { pt3dadd( 408.16, 395.087, 29.5798, 0.3346 ) }
    dend_41 { pt3dadd( 407.714, 394.034, 29.7002, 0.3012 ) }
    dend_41 { pt3dadd( 407.25, 393.039, 29.8964, 0.2766 ) }
    dend_41 { pt3dadd( 407.217, 391.918, 30.0684, 0.2782 ) }
    dend_41 { pt3dadd( 407.652, 390.871, 30.1675, 0.2814 ) }
    dend_41 { pt3dadd( 408.152, 389.852, 30.1605, 0.2872 ) }
    dend_41 { pt3dadd( 408.467, 388.778, 30.0451, 0.299 ) }
    dend_41 { pt3dadd( 408.901, 387.741, 29.8651, 0.3148 ) }
    dend_41 { pt3dadd( 409.409, 386.743, 29.6461, 0.3748 ) }
    dend_41 { pt3dadd( 409.45, 385.641, 29.615, 0.3364 ) }
    dend_41 { pt3dadd( 409.45, 384.498, 29.6495, 0.3044 ) }
    dend_41 { pt3dadd( 409.45, 383.357, 29.7531, 0.2828 ) }
    dend_41 { pt3dadd( 409.45, 382.218, 29.9155, 0.2896 ) }
    dend_41 { pt3dadd( 409.439, 381.08, 30.1056, 0.303 ) }
    dend_41 { pt3dadd( 409.229, 379.964, 30.2207, 0.3262 ) }
    dend_41 { pt3dadd( 409.021, 378.848, 30.2764, 0.3748 ) }
    dend_41 { pt3dadd( 408.824, 377.734, 30.4198, 0.439 ) }
    dend_41 { pt3dadd( 408.635, 376.626, 30.6513, 0.6818 ) }
    dend_41 { pt3dadd( 408.549, 375.488, 30.8966, 0.5338 ) }
    dend_41 { pt3dadd( 408.418, 374.375, 31.2082, 0.418 ) }
    dend_41 { pt3dadd( 408.122, 373.348, 31.626, 0.3462 ) }
    dend_41 { pt3dadd( 408.001, 372.226, 32.0121, 0.4348 ) }
    dend_41 { pt3dadd( 407.891, 371.087, 32.2734, 0.4382 ) }
    dend_41 { pt3dadd( 408.066, 369.958, 32.4226, 0.5392 ) }
    dend_41 { pt3dadd( 408.739, 369.097, 32.5819, 0.4958 ) }
    dend_41 { pt3dadd( 409.085, 368.021, 32.5704, 0.3918 ) }
    dend_41 { pt3dadd( 409.443, 367.01, 32.3501, 0.3128 ) }
    dend_41 { pt3dadd( 409.635, 365.901, 32.0617, 0.2992 ) }
    dend_41 { pt3dadd( 409.812, 364.772, 31.8116, 0.3152 ) }
    dend_41 { pt3dadd( 409.896, 363.634, 31.6042, 0.3754 ) }
    dend_41 { pt3dadd( 410.18, 362.542, 31.4476, 0.3378 ) }
    dend_41 { pt3dadd( 410.138, 361.482, 31.2256, 0.307 ) }
    dend_41 { pt3dadd( 410.328, 360.535, 30.9554, 0.2874 ) }
    dend_41 { pt3dadd( 410.713, 359.528, 30.875, 0.2994 ) }
    dend_41 { pt3dadd( 410.913, 358.463, 30.8837, 0.3152 ) }
    dend_41 { pt3dadd( 411.008, 357.339, 30.821, 0.3756 ) }
    dend_41 { pt3dadd( 411.234, 356.241, 30.7216, 0.3382 ) }
    dend_41 { pt3dadd( 411.672, 355.19, 30.6034, 0.3078 ) }
    dend_41 { pt3dadd( 412.144, 354.151, 30.466, 0.289 ) }
    dend_41 { pt3dadd( 412.493, 353.068, 30.3013, 0.3022 ) }
    dend_41 { pt3dadd( 412.599, 351.947, 30.105, 0.3206 ) }
    dend_41 { pt3dadd( 412.599, 350.817, 29.8984, 0.3852 ) }
    dend_41 { pt3dadd( 412.663, 349.682, 29.7153, 0.3572 ) }
    dend_41 { pt3dadd( 412.789, 348.547, 29.5764, 0.3378 ) }
    dend_41 { pt3dadd( 413.099, 347.457, 29.514, 0.37 ) }
    dend_41 { pt3dadd( 413.342, 346.348, 29.517, 0.3276 ) }
    dend_41 { pt3dadd( 413.555, 345.233, 29.5921, 0.288 ) }
    dend_41 { pt3dadd( 413.772, 344.201, 29.8127, 0.2542 ) }
    dend_41 { pt3dadd( 414.258, 343.481, 29.853, 0.2288 ) }
    dend_41 { pt3dadd( 415.115, 342.861, 29.9138, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 94/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 411.23, 400.985, 29.0766, 0.2782 ) }
    dend_40 { pt3dadd( 411.766, 399.968, 28.5919, 0.2288 ) }
    dend_40 { pt3dadd( 412.294, 398.964, 28.3886, 0.2746 ) }
    dend_40 { pt3dadd( 412.827, 397.979, 28.1224, 0.2746 ) }
    dend_40 { pt3dadd( 413.434, 397.056, 27.8317, 0.2746 ) }
    dend_40 { pt3dadd( 414.342, 396.362, 27.6088, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( 415.185, 395.611, 27.452, 0.2746 ) }
    dend_40 { pt3dadd( 415.734, 394.609, 27.3557, 0.2746 ) }
    dend_40 { pt3dadd( 416.329, 393.639, 27.3014, 0.2748 ) }
    dend_40 { pt3dadd( 417.131, 392.824, 27.2689, 0.275 ) }
    dend_40 { pt3dadd( 417.987, 392.08, 27.2527, 0.2752 ) }
    dend_40 { pt3dadd( 418.997, 391.617, 27.2871, 0.276 ) }
    dend_40 { pt3dadd( 420.091, 391.441, 27.281, 0.2768 ) }
    dend_40 { pt3dadd( 421.047, 391.048, 27.0805, 0.279 ) }
    dend_40 { pt3dadd( 421.895, 390.327, 26.8111, 0.2828 ) }
    dend_40 { pt3dadd( 422.766, 389.605, 26.6028, 0.2896 ) }
    dend_40 { pt3dadd( 423.52, 388.788, 26.4524, 0.3028 ) }
    dend_40 { pt3dadd( 424.036, 387.785, 26.25, 0.3258 ) }
    dend_40 { pt3dadd( 424.456, 386.793, 25.9003, 0.374 ) }
    dend_40 { pt3dadd( 425.013, 385.889, 25.4209, 0.438 ) }
    dend_40 { pt3dadd( 425.711, 384.997, 24.9194, 0.6796 ) }
    dend_40 { pt3dadd( 426.395, 384.096, 24.395, 0.5294 ) }
    dend_40 { pt3dadd( 426.966, 383.15, 23.7941, 0.4098 ) }
    dend_40 { pt3dadd( 427.484, 382.217, 23.1064, 0.3316 ) }
    dend_40 { pt3dadd( 427.652, 381.231, 22.3569, 0.4054 ) }
    dend_40 { pt3dadd( 427.068, 380.443, 21.7115, 0.3952 ) }
    dend_40 { pt3dadd( 426.26, 379.815, 21.0703, 0.4032 ) }
    dend_40 { pt3dadd( 425.709, 379.142, 20.246, 0.5164 ) }
    dend_40 { pt3dadd( 425.15, 378.289, 19.437, 0.4782 ) }
    dend_40 { pt3dadd( 424.667, 377.471, 18.5889, 0.4684 ) }
    dend_40 { pt3dadd( 424.844, 376.578, 17.8013, 0.6108 ) }
    dend_40 { pt3dadd( 425.534, 375.691, 17.243, 0.5516 ) }
    dend_40 { pt3dadd( 426.125, 374.761, 16.8179, 0.411 ) }
    dend_40 { pt3dadd( 426.602, 373.818, 16.3778, 0.3014 ) }
    dend_40 { pt3dadd( 426.782, 372.766, 16.0224, 0.2768 ) }
    dend_40 { pt3dadd( 426.931, 371.64, 15.7889, 0.279 ) }
    dend_40 { pt3dadd( 427.568, 370.752, 15.5884, 0.2826 ) }
    dend_40 { pt3dadd( 428.434, 370.015, 15.3734, 0.2896 ) }
    dend_40 { pt3dadd( 429.196, 369.18, 15.1486, 0.302 ) }
    dend_40 { pt3dadd( 429.957, 368.335, 14.9755, 0.3274 ) }
    dend_40 { pt3dadd( 430.6, 367.41, 14.777, 0.3622 ) }
    dend_40 { pt3dadd( 431.396, 366.612, 14.5785, 0.4882 ) }
    dend_40 { pt3dadd( 432.297, 366.016, 14.3142, 0.4224 ) }
    dend_40 { pt3dadd( 433.272, 365.476, 14.0476, 0.3814 ) }
    dend_40 { pt3dadd( 434.273, 364.942, 13.893, 0.37 ) }
    dend_40 { pt3dadd( 435.262, 364.374, 13.7962, 0.4914 ) }
    dend_40 { pt3dadd( 436.316, 363.942, 13.7684, 0.483 ) }
    dend_40 { pt3dadd( 437.312, 363.461, 14.1103, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 399.527, 436.397, 40.5807, 0.3734 ) }
    dend_38 { pt3dadd( 399.695, 436.938, 40.3822, 0.3338 ) }
    dend_38 { pt3dadd( 399.999, 438.01, 40.2895, 0.3 ) }
    dend_38 { pt3dadd( 400.288, 439.075, 40.1069, 0.2746 ) }
    dend_38 { pt3dadd( 400.564, 440.16, 39.8978, 0.2746 ) }
    dend_38 { pt3dadd( 400.829, 441.26, 39.7494, 0.2746 ) }
    dend_38 { pt3dadd( 401.118, 442.362, 39.7376, 0.2746 ) }
    dend_38 { pt3dadd( 401.553, 443.402, 39.8588, 0.2746 ) }
    dend_38 { pt3dadd( 402.187, 444.347, 40.0862, 0.2746 ) }
    dend_38 { pt3dadd( 402.802, 445.263, 40.4533, 0.2746 ) }
    dend_38 { pt3dadd( 403.038, 446.297, 40.9273, 0.2746 ) }
    dend_38 { pt3dadd( 403.038, 447.416, 41.4389, 0.2746 ) }
    dend_38 { pt3dadd( 403.038, 448.541, 41.9493, 0.2746 ) }
    dend_38 { pt3dadd( 403.038, 449.673, 42.4306, 0.2746 ) }
    dend_38 { pt3dadd( 403.053, 450.806, 42.8812, 0.2746 ) }
    dend_38 { pt3dadd( 403.139, 451.923, 43.3182, 0.2746 ) }
    dend_38 { pt3dadd( 403.288, 453.029, 43.7556, 0.2746 ) }
    dend_38 { pt3dadd( 403.489, 454.138, 44.1546, 0.2746 ) }
    dend_38 { pt3dadd( 403.739, 455.253, 44.485, 0.2746 ) }
    dend_38 { pt3dadd( 404.096, 456.327, 44.7759, 0.2746 ) }
    dend_38 { pt3dadd( 404.586, 457.348, 45.054, 0.2746 ) }
    dend_38 { pt3dadd( 405.186, 458.307, 45.2911, 0.2746 ) }
    dend_38 { pt3dadd( 405.848, 459.208, 45.4152, 0.2746 ) }
    dend_38 { pt3dadd( 406.528, 460.091, 45.493, 0.2746 ) }
    dend_38 { pt3dadd( 407.161, 460.897, 45.7349, 0.2746 ) }
    dend_38 { pt3dadd( 407.628, 461.846, 46.0656, 0.2746 ) }
    dend_38 { pt3dadd( 408.083, 462.89, 46.3921, 0.2746 ) }
    dend_38 { pt3dadd( 408.62, 463.887, 46.7295, 0.2746 ) }
    dend_38 { pt3dadd( 409.267, 464.823, 47.0436, 0.2746 ) }
    dend_38 { pt3dadd( 410.039, 465.648, 47.2595, 0.2746 ) }
    dend_38 { pt3dadd( 410.96, 466.304, 47.4398, 0.2746 ) }
    dend_38 { pt3dadd( 411.949, 466.859, 47.6694, 0.2746 ) }
    dend_38 { pt3dadd( 412.779, 467.591, 47.9884, 0.2746 ) }
    dend_38 { pt3dadd( 413.509, 468.437, 48.3893, 0.2748 ) }
    dend_38 { pt3dadd( 414.19, 469.344, 48.8186, 0.2748 ) }
    dend_38 { pt3dadd( 414.792, 470.308, 49.2646, 0.2752 ) }
    dend_38 { pt3dadd( 415.144, 471.35, 49.7566, 0.2758 ) }
    dend_38 { pt3dadd( 415.44, 472.383, 50.307, 0.2766 ) }
    dend_38 { pt3dadd( 415.857, 473.324, 50.9169, 0.2782 ) }
    dend_38 { pt3dadd( 416.726, 473.941, 51.4455, 0.2814 ) }
    dend_38 { pt3dadd( 417.793, 474.347, 51.8314, 0.287 ) }
    dend_38 { pt3dadd( 418.854, 474.774, 52.085, 0.2988 ) }
    dend_38 { pt3dadd( 419.885, 475.27, 52.2259, 0.3142 ) }
    dend_38 { pt3dadd( 420.894, 475.809, 52.2796, 0.3734 ) }
    dend_38 { pt3dadd( 421.845, 476.442, 52.2791, 0.3338 ) }
    dend_38 { pt3dadd( 422.823, 477.032, 52.2603, 0.3 ) }
    dend_38 { pt3dadd( 423.917, 477.327, 52.2273, 0.2744 ) }
    dend_38 { pt3dadd( 425.036, 477.551, 52.1889, 0.2744 ) }
    dend_38 { pt3dadd( 425.898, 478.199, 52.0845, 0.2742 ) }
    dend_38 { pt3dadd( 426.872, 478.766, 52.0506, 0.2736 ) }
    dend_38 { pt3dadd( 427.855, 478.479, 52.2035, 0.2728 ) }
    dend_38 { pt3dadd( 428.937, 478.133, 52.4068, 0.2712 ) }
    dend_38 { pt3dadd( 430.077, 478.071, 52.6327, 0.2684 ) }
    dend_38 { pt3dadd( 431.22, 478.067, 52.8699, 0.2626 ) }
    dend_38 { pt3dadd( 432.365, 478.067, 53.1191, 0.2542 ) }
    dend_38 { pt3dadd( 433.277, 478.449, 53.5315, 0.2288 ) }
    dend_38 { pt3dadd( 433.725, 479.441, 54.6134, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 399.527, 436.397, 40.5807, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_35 { pt3dadd( 399.707, 436.982, 42.8324, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 1/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 347.141, 457.52, 30.6552, 0.6926 ) }
    dend_32 { pt3dadd( 346.917, 457.879, 30.7412, 0.2288 ) }
    dend_32 { pt3dadd( 346.224, 458.776, 30.7762, 0.3002 ) }
    dend_32 { pt3dadd( 345.488, 459.647, 30.7852, 0.324 ) }
    dend_32 { pt3dadd( 344.749, 460.506, 30.8426, 0.3558 ) }
    dend_32 { pt3dadd( 344.335, 461.486, 30.8613, 0.4764 ) }
    dend_32 { pt3dadd( 344.259, 462.597, 30.9179, 0.4008 ) }
    dend_32 { pt3dadd( 344.358, 463.714, 31.0853, 0.339 ) }
    dend_32 { pt3dadd( 344.265, 464.838, 31.3012, 0.3012 ) }
    dend_32 { pt3dadd( 344.264, 465.909, 31.6338, 0.3188 ) }
    dend_32 { pt3dadd( 344.832, 466.83, 31.9654, 0.3818 ) }
    dend_32 { pt3dadd( 345.742, 467.503, 32.2742, 0.3496 ) }
    dend_32 { pt3dadd( 346.523, 468.328, 32.5066, 0.3292 ) }
    dend_32 { pt3dadd( 346.743, 469.427, 32.6603, 0.3278 ) }
    dend_32 { pt3dadd( 347.385, 470.349, 32.7583, 0.3768 ) }
    dend_32 { pt3dadd( 348.449, 470.77, 32.8157, 0.448 ) }
    dend_32 { pt3dadd( 349.454, 471.275, 32.9106, 0.6754 ) }
    dend_32 { pt3dadd( 350.372, 471.804, 32.8975, 0.6324 ) }
    dend_32 { pt3dadd( 350.928, 472.783, 32.9577, 0.7502 ) }
    dend_32 { pt3dadd( 351.523, 473.713, 33.0733, 0.6954 ) }
    dend_32 { pt3dadd( 352.305, 474.531, 33.1489, 0.5476 ) }
    dend_32 { pt3dadd( 353.14, 475.309, 33.2046, 0.4976 ) }
    dend_32 { pt3dadd( 353.887, 476.166, 33.2181, 0.4614 ) }
    dend_32 { pt3dadd( 354.471, 477.136, 33.2466, 0.577 ) }
    dend_32 { pt3dadd( 354.915, 478.17, 33.3474, 0.5914 ) }
    dend_32 { pt3dadd( 355.227, 479.246, 33.5244, 0.4452 ) }
    dend_32 { pt3dadd( 355.459, 480.359, 33.6994, 0.3276 ) }
    dend_32 { pt3dadd( 355.631, 481.488, 33.861, 0.2784 ) }
    dend_32 { pt3dadd( 355.861, 482.602, 34.027, 0.2818 ) }
    dend_32 { pt3dadd( 356.226, 483.676, 34.1275, 0.2882 ) }
    dend_32 { pt3dadd( 356.694, 484.716, 34.1692, 0.2994 ) }
    dend_32 { pt3dadd( 357.371, 485.622, 34.2224, 0.3228 ) }
    dend_32 { pt3dadd( 358.143, 486.441, 34.3356, 0.3538 ) }
    dend_32 { pt3dadd( 358.355, 487.505, 34.424, 0.4722 ) }
    dend_32 { pt3dadd( 358.536, 488.624, 34.5201, 0.3934 ) }
    dend_32 { pt3dadd( 358.986, 489.669, 34.592, 0.3254 ) }
    dend_32 { pt3dadd( 359.48, 490.685, 34.5638, 0.2746 ) }
    dend_32 { pt3dadd( 360.02, 491.689, 34.4893, 0.2746 ) }
    dend_32 { pt3dadd( 360.518, 492.72, 34.4042, 0.2746 ) }
    dend_32 { pt3dadd( 361.185, 493.618, 34.2591, 0.2746 ) }
    dend_32 { pt3dadd( 361.918, 494.492, 34.1323, 0.2746 ) }
    dend_32 { pt3dadd( 362.466, 495.49, 34.046, 0.2744 ) }
    dend_32 { pt3dadd( 363.16, 496.394, 34.0015, 0.2744 ) }
    dend_32 { pt3dadd( 363.381, 497.474, 34.0458, 0.2742 ) }
    dend_32 { pt3dadd( 363.353, 498.61, 34.0659, 0.2736 ) }
    dend_32 { pt3dadd( 363.365, 499.75, 34.0519, 0.2728 ) }
    dend_32 { pt3dadd( 363.394, 500.891, 34.0533, 0.2712 ) }
    dend_32 { pt3dadd( 363.325, 502.031, 34.0656, 0.2684 ) }
    dend_32 { pt3dadd( 363.238, 503.167, 34.032, 0.2626 ) }
    dend_32 { pt3dadd( 363.441, 504.287, 33.9744, 0.2542 ) }
    dend_32 { pt3dadd( 363.892, 505.337, 33.9329, 0.2288 ) }
    dend_32 { pt3dadd( 364.77, 506.053, 33.8646, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 347.141, 457.52, 30.6552, 0.6926 ) }
    dend_29 { pt3dadd( 346.376, 457.417, 30.945, 0.542 ) }
    dend_29 { pt3dadd( 345.247, 457.382, 31.066, 0.4898 ) }
    dend_29 { pt3dadd( 344.108, 457.455, 31.2483, 0.4338 ) }
    dend_29 { pt3dadd( 343.195, 457.764, 31.6383, 0.3612 ) }
    dend_29 { pt3dadd( 342.204, 458.132, 32.1278, 0.3036 ) }
    dend_29 { pt3dadd( 341.148, 458.218, 33.4256, 0.2812 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 60/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 350.186, 459.134, 17.901, 0.3 ) }
    dend_27 { pt3dadd( 350.194, 460.018, 17.4294, 0.2746 ) }
    dend_27 { pt3dadd( 350.204, 461.15, 17.2203, 0.2746 ) }
    dend_27 { pt3dadd( 350.201, 462.281, 16.9719, 0.2746 ) }
    dend_27 { pt3dadd( 349.857, 463.351, 16.7255, 0.2746 ) }
    dend_27 { pt3dadd( 349.389, 464.392, 16.4973, 0.2746 ) }
    dend_27 { pt3dadd( 348.815, 465.376, 16.2949, 0.2746 ) }
    dend_27 { pt3dadd( 348.241, 466.363, 16.1288, 0.2746 ) }
    dend_27 { pt3dadd( 347.762, 467.401, 16.0098, 0.2746 ) }
    dend_27 { pt3dadd( 347.345, 468.466, 15.9278, 0.2748 ) }
    dend_27 { pt3dadd( 347.217, 469.593, 15.8665, 0.2748 ) }
    dend_27 { pt3dadd( 347.211, 470.737, 15.8138, 0.2752 ) }
    dend_27 { pt3dadd( 347.4, 471.861, 15.7578, 0.2758 ) }
    dend_27 { pt3dadd( 347.635, 472.98, 15.6878, 0.2766 ) }
    dend_27 { pt3dadd( 347.868, 474.1, 15.5952, 0.2784 ) }
    dend_27 { pt3dadd( 348.103, 475.22, 15.4736, 0.2818 ) }
    dend_27 { pt3dadd( 348.381, 476.308, 15.2634, 0.288 ) }
    dend_27 { pt3dadd( 348.683, 477.384, 14.9761, 0.3008 ) }
    dend_27 { pt3dadd( 349.065, 478.435, 14.639, 0.3178 ) }
    dend_27 { pt3dadd( 349.51, 479.47, 14.2948, 0.3804 ) }
    dend_27 { pt3dadd( 350.09, 480.45, 14.0204, 0.3468 ) }
    dend_27 { pt3dadd( 350.734, 481.386, 13.8558, 0.3244 ) }
    dend_27 { pt3dadd( 351.458, 482.254, 13.7908, 0.3192 ) }
    dend_27 { pt3dadd( 351.678, 483.314, 13.6399, 0.3602 ) }
    dend_27 { pt3dadd( 351.366, 484.397, 13.4674, 0.4184 ) }
    dend_27 { pt3dadd( 351.199, 485.493, 13.2149, 0.6128 ) }
    dend_27 { pt3dadd( 350.98, 486.611, 12.9662, 0.5552 ) }
    dend_27 { pt3dadd( 350.702, 487.719, 12.7364, 0.4174 ) }
    dend_27 { pt3dadd( 350.151, 488.718, 12.5527, 0.3134 ) }
    dend_27 { pt3dadd( 349.587, 489.713, 12.4197, 0.2994 ) }
    dend_27 { pt3dadd( 349.072, 490.735, 12.3158, 0.3216 ) }
    dend_27 { pt3dadd( 348.561, 491.759, 12.2293, 0.3564 ) }
    dend_27 { pt3dadd( 348.06, 492.757, 12.0624, 0.4538 ) }
    dend_27 { pt3dadd( 347.536, 493.753, 11.8485, 0.474 ) }
    dend_27 { pt3dadd( 346.915, 494.71, 11.6782, 0.6016 ) }
    dend_27 { pt3dadd( 346.281, 495.663, 11.5553, 0.6314 ) }
    dend_27 { pt3dadd( 345.624, 496.6, 11.4769, 0.5448 ) }
    dend_27 { pt3dadd( 344.986, 497.55, 11.4405, 0.3882 ) }
    dend_27 { pt3dadd( 344.467, 498.569, 11.4425, 0.3068 ) }
    dend_27 { pt3dadd( 343.961, 499.594, 11.4663, 0.287 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( 343.531, 500.654, 11.5027, 0.2988 ) }
    dend_27 { pt3dadd( 343.105, 501.717, 11.5545, 0.3142 ) }
    dend_27 { pt3dadd( 342.921, 502.844, 11.6236, 0.3734 ) }
    dend_27 { pt3dadd( 342.484, 503.899, 11.7118, 0.3338 ) }
    dend_27 { pt3dadd( 341.72, 504.745, 11.8325, 0.3 ) }
    dend_27 { pt3dadd( 340.815, 505.332, 12.0991, 0.2744 ) }
    dend_27 { pt3dadd( 339.765, 505.774, 12.3634, 0.2744 ) }
    dend_27 { pt3dadd( 338.695, 506.18, 12.5992, 0.2742 ) }
    dend_27 { pt3dadd( 337.575, 506.365, 12.8422, 0.2736 ) }
    dend_27 { pt3dadd( 336.448, 506.456, 13.095, 0.2728 ) }
    dend_27 { pt3dadd( 335.329, 506.671, 13.3148, 0.2712 ) }
    dend_27 { pt3dadd( 334.257, 507.065, 13.4593, 0.2684 ) }
    dend_27 { pt3dadd( 333.165, 507.405, 13.5576, 0.2626 ) }
    dend_27 { pt3dadd( 332.028, 507.538, 13.6178, 0.2542 ) }
    dend_27 { pt3dadd( 330.892, 507.672, 13.6458, 0.2288 ) }
    dend_27 { pt3dadd( 329.759, 507.832, 13.6534, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 16/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 350.186, 459.134, 17.901, 0.3 ) }
    dend_24 { pt3dadd( 349.605, 459.006, 17.2379, 0.4576 ) }
    dend_24 { pt3dadd( 348.5, 459.019, 16.9263, 0.6224 ) }
    dend_24 { pt3dadd( 347.383, 458.824, 16.6572, 0.5292 ) }
    dend_24 { pt3dadd( 346.398, 458.273, 16.3674, 0.5806 ) }
    dend_24 { pt3dadd( 345.542, 457.526, 16.0723, 0.504 ) }
    dend_24 { pt3dadd( 344.746, 456.743, 15.7382, 0.5112 ) }
    dend_24 { pt3dadd( 343.94, 455.946, 15.4232, 0.7156 ) }
    dend_24 { pt3dadd( 343.118, 455.154, 15.1519, 0.6222 ) }
    dend_24 { pt3dadd( 342.174, 454.528, 14.884, 0.4562 ) }
    dend_24 { pt3dadd( 341.118, 454.859, 14.7095, 0.3396 ) }
    dend_24 { pt3dadd( 340.038, 455.116, 14.4984, 0.3422 ) }
    dend_24 { pt3dadd( 338.923, 455.366, 14.3573, 0.4276 ) }
    dend_24 { pt3dadd( 337.779, 455.388, 14.2775, 0.424 ) }
    dend_24 { pt3dadd( 336.773, 454.842, 14.2484, 0.518 ) }
    dend_24 { pt3dadd( 335.764, 454.313, 14.2839, 0.4318 ) }
    dend_24 { pt3dadd( 334.699, 453.994, 14.4225, 0.3912 ) }
    dend_24 { pt3dadd( 333.603, 453.715, 14.525, 0.4244 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 34/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 345.319, 436.626, 34.0528, 0.3796 ) }
    dend_20 { pt3dadd( 344.743, 436.732, 34.4347, 0.4576 ) }
    dend_20 { pt3dadd( 343.624, 436.928, 34.5618, 0.4766 ) }
    dend_20 { pt3dadd( 342.487, 436.918, 34.7427, 0.539 ) }
    dend_20 { pt3dadd( 341.382, 436.638, 34.9698, 0.6132 ) }
    dend_20 { pt3dadd( 340.449, 436.124, 35.2901, 0.7236 ) }
    dend_20 { pt3dadd( 339.743, 435.465, 35.8481, 0.83 ) }
    dend_20 { pt3dadd( 338.815, 434.977, 36.5053, 0.592 ) }
    dend_20 { pt3dadd( 337.72, 434.745, 37.1454, 0.4324 ) }
    dend_20 { pt3dadd( 336.628, 434.482, 37.7289, 0.3684 ) }
    dend_20 { pt3dadd( 335.716, 433.888, 38.2995, 0.4992 ) }
    dend_20 { pt3dadd( 334.839, 433.378, 38.9004, 0.4452 ) }
    dend_20 { pt3dadd( 333.822, 432.981, 39.389, 0.4114 ) }
    dend_20 { pt3dadd( 332.723, 432.713, 39.711, 0.4848 ) }
    dend_20 { pt3dadd( 331.603, 432.632, 40.0131, 0.4174 ) }
    dend_20 { pt3dadd( 330.503, 432.739, 40.1946, 0.365 ) }
    dend_20 { pt3dadd( 329.436, 432.589, 40.4768, 0.3734 ) }
    dend_20 { pt3dadd( 328.368, 432.406, 40.8534, 0.334 ) }
    dend_20 { pt3dadd( 327.384, 431.9, 41.2544, 0.3002 ) }
    dend_20 { pt3dadd( 326.432, 431.271, 41.5999, 0.2748 ) }
    dend_20 { pt3dadd( 325.581, 430.513, 41.8779, 0.275 ) }
    dend_20 { pt3dadd( 324.544, 430.225, 42.2223, 0.2754 ) }
    dend_20 { pt3dadd( 323.404, 430.216, 42.5124, 0.2762 ) }
    dend_20 { pt3dadd( 322.269, 430.153, 42.8456, 0.2776 ) }
    dend_20 { pt3dadd( 321.137, 430.294, 43.2152, 0.28 ) }
    dend_20 { pt3dadd( 320.052, 430.282, 43.724, 0.2848 ) }
    dend_20 { pt3dadd( 319.108, 430.086, 44.4139, 0.2936 ) }
    dend_20 { pt3dadd( 318.022, 430.05, 45.1186, 0.3094 ) }
    dend_20 { pt3dadd( 316.97, 429.815, 45.8265, 0.341 ) }
    dend_20 { pt3dadd( 315.863, 429.617, 46.4358, 0.3886 ) }
    dend_20 { pt3dadd( 314.757, 429.335, 46.8538, 0.5312 ) }
    dend_20 { pt3dadd( 313.644, 429.078, 47.1302, 0.529 ) }
    dend_20 { pt3dadd( 312.574, 428.713, 47.381, 0.4482 ) }
    dend_20 { pt3dadd( 311.471, 428.479, 47.5115, 0.443 ) }
    dend_20 { pt3dadd( 310.355, 428.688, 47.6742, 0.4172 ) }
    dend_20 { pt3dadd( 309.371, 428.973, 48.02, 0.4462 ) }
    dend_20 { pt3dadd( 308.478, 429.388, 48.5131, 0.5858 ) }
    dend_20 { pt3dadd( 307.587, 429.986, 48.8026, 0.6566 ) }
    dend_20 { pt3dadd( 306.863, 430.81, 48.9938, 0.5556 ) }
    dend_20 { pt3dadd( 305.839, 431.15, 49.1966, 0.5826 ) }
    dend_20 { pt3dadd( 304.7, 431.059, 49.3475, 0.5058 ) }
    dend_20 { pt3dadd( 303.564, 430.98, 49.4724, 0.5218 ) }
    dend_20 { pt3dadd( 302.452, 430.884, 49.6426, 0.6994 ) }
    dend_20 { pt3dadd( 301.391, 430.735, 49.9276, 0.7672 ) }
    dend_20 { pt3dadd( 300.325, 430.674, 50.1819, 0.562 ) }
    dend_20 { pt3dadd( 299.25, 430.65, 50.1995, 0.4146 ) }
    dend_20 { pt3dadd( 298.176, 430.398, 50.141, 0.3814 ) }
    dend_20 { pt3dadd( 297.059, 430.247, 50.1085, 0.5282 ) }
    dend_20 { pt3dadd( 295.943, 430.277, 49.9965, 0.4746 ) }
    dend_20 { pt3dadd( 294.905, 430.614, 49.9587, 0.5848 ) }
    dend_20 { pt3dadd( 294.288, 431.438, 49.6681, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 85/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 345.319, 436.626, 34.0528, 0.3796 ) }
    dend_15 { pt3dadd( 344.836, 436.016, 32.7984, 0.3778 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 389.278, 429.853, 18.3442, 0.422 ) }
    dend_9 { pt3dadd( 389.299, 428.932, 17.8447, 0.4196 ) }
    dend_9 { pt3dadd( 389.303, 427.84, 17.575, 0.48 ) }
    dend_9 { pt3dadd( 389.303, 426.712, 17.278, 0.5058 ) }
    dend_9 { pt3dadd( 389.303, 425.601, 17.1066, 0.515 ) }
    dend_9 { pt3dadd( 389.307, 424.465, 16.931, 0.49 ) }
    dend_9 { pt3dadd( 389.327, 423.378, 16.6432, 0.4206 ) }
    dend_9 { pt3dadd( 389.447, 422.248, 16.3654, 0.403 ) }
    dend_9 { pt3dadd( 389.557, 421.11, 16.1255, 0.5164 ) }
    dend_9 { pt3dadd( 389.431, 419.983, 15.8637, 0.4762 ) }
    dend_9 { pt3dadd( 389.351, 418.861, 15.5554, 0.474 ) }
    dend_9 { pt3dadd( 389.51, 417.733, 15.2776, 0.574 ) }
    dend_9 { pt3dadd( 389.577, 416.591, 15.0584, 0.7148 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( 389.176, 415.52, 14.8616, 0.963 ) }
    dend_9 { pt3dadd( 388.622, 414.526, 14.6434, 1.027 ) }
    dend_9 { pt3dadd( 388.181, 413.488, 14.3861, 0.7814 ) }
    dend_9 { pt3dadd( 388.018, 412.359, 14.1711, 0.7226 ) }
    dend_9 { pt3dadd( 388.24, 411.251, 13.923, 0.7462 ) }
    dend_9 { pt3dadd( 388.484, 410.19, 13.5901, 0.6044 ) }
    dend_9 { pt3dadd( 388.794, 409.109, 13.2689, 0.5532 ) }
    dend_9 { pt3dadd( 389.283, 408.076, 13.0281, 0.5782 ) }
    dend_9 { pt3dadd( 389.777, 407.048, 12.901, 0.4994 ) }
    dend_9 { pt3dadd( 390.309, 406.036, 12.8456, 0.5018 ) }
    dend_9 { pt3dadd( 390.887, 405.049, 12.8349, 0.4738 ) }
    dend_9 { pt3dadd( 391.389, 404.028, 12.8534, 0.5774 ) }
    dend_9 { pt3dadd( 391.576, 402.902, 12.878, 0.7026 ) }
    dend_9 { pt3dadd( 391.594, 401.758, 12.8993, 0.802 ) }
    dend_9 { pt3dadd( 391.607, 400.614, 12.9119, 0.715 ) }
    dend_9 { pt3dadd( 391.7, 399.481, 12.9077, 0.4954 ) }
    dend_9 { pt3dadd( 392.091, 398.422, 12.9063, 0.3732 ) }
    dend_9 { pt3dadd( 392.732, 397.5, 13.0021, 0.3648 ) }
    dend_9 { pt3dadd( 393.215, 396.493, 13.1429, 0.4334 ) }
    dend_9 { pt3dadd( 393.467, 395.39, 13.2076, 0.6104 ) }
    dend_9 { pt3dadd( 393.686, 394.27, 13.2566, 0.6962 ) }
    dend_9 { pt3dadd( 393.835, 393.149, 13.3538, 0.6598 ) }
    dend_9 { pt3dadd( 393.797, 392.03, 13.5002, 0.6254 ) }
    dend_9 { pt3dadd( 393.645, 390.9, 13.617, 0.631 ) }
    dend_9 { pt3dadd( 393.685, 389.767, 13.6772, 0.7608 ) }
    dend_9 { pt3dadd( 393.848, 388.652, 13.6623, 0.6512 ) }
    dend_9 { pt3dadd( 393.889, 387.521, 13.6318, 0.7752 ) }
    dend_9 { pt3dadd( 393.951, 386.393, 13.6783, 0.5602 ) }
    dend_9 { pt3dadd( 394.236, 385.315, 13.7645, 0.4912 ) }
    dend_9 { pt3dadd( 394.868, 384.377, 13.8438, 0.3636 ) }
    dend_9 { pt3dadd( 395.576, 383.513, 14.0157, 0.356 ) }
    dend_9 { pt3dadd( 396.196, 382.602, 14.217, 0.375 ) }
    dend_9 { pt3dadd( 396.809, 381.664, 14.3058, 0.4768 ) }
    dend_9 { pt3dadd( 397.579, 380.834, 14.3858, 0.5714 ) }
    dend_9 { pt3dadd( 398.478, 380.138, 14.4743, 0.5178 ) }
    dend_9 { pt3dadd( 399.307, 379.354, 14.5373, 0.3852 ) }
    dend_9 { pt3dadd( 399.954, 378.425, 14.5454, 0.3012 ) }
    dend_9 { pt3dadd( 400.413, 377.379, 14.5018, 0.2764 ) }
    dend_9 { pt3dadd( 400.564, 376.27, 14.4236, 0.278 ) }
    dend_9 { pt3dadd( 400.762, 375.168, 14.3086, 0.281 ) }
    dend_9 { pt3dadd( 401.453, 374.381, 14.0591, 0.2864 ) }
    dend_9 { pt3dadd( 402.196, 373.658, 13.6688, 0.2968 ) }
    dend_9 { pt3dadd( 402.956, 372.83, 13.3378, 0.3152 ) }
    dend_9 { pt3dadd( 403.779, 372.038, 13.1009, 0.3524 ) }
    dend_9 { pt3dadd( 404.648, 371.293, 12.9441, 0.4078 ) }
    dend_9 { pt3dadd( 405.247, 370.333, 12.8671, 0.5758 ) }
    dend_9 { pt3dadd( 405.691, 369.391, 12.9954, 0.5688 ) }
    dend_9 { pt3dadd( 406.557, 368.714, 13.181, 0.7318 ) }
    dend_9 { pt3dadd( 407.428, 368.343, 13.078, 0.6358 ) }
    dend_9 { pt3dadd( 408.48, 367.936, 12.9226, 0.7878 ) }
    dend_9 { pt3dadd( 409.576, 367.608, 12.7817, 0.614 ) }
    dend_9 { pt3dadd( 410.316, 366.742, 12.5154, 0.4418 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 389.278, 429.853, 18.3442, 0.422 ) }
    dend_8 { pt3dadd( 388.996, 429.995, 17.0618, 0.4576 ) }
    dend_8 { pt3dadd( 389.174, 429.839, 16.3694, 0.5496 ) }
    dend_8 { pt3dadd( 389.863, 430.116, 15.6901, 0.5488 ) }
    dend_8 { pt3dadd( 390.452, 429.686, 14.8904, 0.5544 ) }
    dend_8 { pt3dadd( 390.94, 428.859, 14.3044, 0.5304 ) }
    dend_8 { pt3dadd( 390.816, 427.854, 13.9479, 0.652 ) }
    dend_8 { pt3dadd( 390.487, 426.862, 13.6637, 0.758 ) }
    dend_8 { pt3dadd( 390.066, 426.076, 13.5271, 0.6206 ) }
    dend_8 { pt3dadd( 390.316, 425.533, 13.2418, 0.614 ) }
    dend_8 { pt3dadd( 390.897, 424.831, 13.2303, 0.5396 ) }
    dend_8 { pt3dadd( 391.906, 424.354, 13.258, 0.476 ) }
    dend_8 { pt3dadd( 392.973, 424.081, 13.223, 0.4534 ) }
    dend_8 { pt3dadd( 393.637, 423.954, 12.9808, 0.6356 ) }
    dend_8 { pt3dadd( 394.505, 423.376, 12.7025, 0.5736 ) }
    dend_8 { pt3dadd( 395.023, 422.902, 12.2175, 0.567 ) }
    dend_8 { pt3dadd( 395.254, 421.865, 11.6841, 0.7148 ) }
    dend_8 { pt3dadd( 395.832, 421.335, 11.303, 0.8996 ) }
    dend_8 { pt3dadd( 396.509, 420.754, 10.9766, 0.9888 ) }
    dend_8 { pt3dadd( 396.625, 419.768, 10.8623, 0.7824 ) }
    dend_8 { pt3dadd( 397.062, 419.266, 11.0569, 0.604 ) }
    dend_8 { pt3dadd( 397.73, 418.723, 10.9634, 0.6546 ) }
    dend_8 { pt3dadd( 398.461, 418.386, 10.6728, 0.7266 ) }
    dend_8 { pt3dadd( 399.256, 417.939, 10.5168, 0.7362 ) }
    dend_8 { pt3dadd( 399.376, 417.106, 10.1553, 0.6712 ) }
    dend_8 { pt3dadd( 400.174, 416.414, 9.8389, 0.4936 ) }
    dend_8 { pt3dadd( 401.208, 416.128, 9.6967, 0.4424 ) }
    dend_8 { pt3dadd( 401.321, 415.615, 9.3862, 0.3686 ) }
    dend_8 { pt3dadd( 402.059, 415.723, 9.0784, 0.3604 ) }
    dend_8 { pt3dadd( 402.646, 415.048, 8.8418, 0.4068 ) }
    dend_8 { pt3dadd( 403.447, 414.864, 9.0275, 0.421 ) }
    dend_8 { pt3dadd( 404.507, 415.041, 9.3579, 0.3388 ) }
    dend_8 { pt3dadd( 405.5, 415.241, 9.7068, 0.2542 ) }
    dend_8 { pt3dadd( 405.548, 414.586, 10.92, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 86/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 377.433, 449.443, 42.3307, 0.2746 ) }
    dend_3 { pt3dadd( 378.629, 449.881, 42.889, 0.2746 ) }
    dend_3 { pt3dadd( 379.396, 450.704, 43.0996, 0.2746 ) }
    dend_3 { pt3dadd( 379.975, 451.456, 43.5168, 0.2746 ) }
    dend_3 { pt3dadd( 381.007, 451.882, 43.9519, 0.2746 ) }
    dend_3 { pt3dadd( 381.794, 452.696, 44.3876, 0.2746 ) }
    dend_3 { pt3dadd( 382.404, 453.652, 44.8392, 0.2746 ) }
    dend_3 { pt3dadd( 382.883, 454.653, 45.2833, 0.2746 ) }
    dend_3 { pt3dadd( 383.168, 455.663, 45.7652, 0.2746 ) }
    dend_3 { pt3dadd( 383.892, 456.419, 46.3434, 0.2746 ) }
    dend_3 { pt3dadd( 384.309, 457.412, 46.9188, 0.2746 ) }
    dend_3 { pt3dadd( 384.622, 458.466, 47.5244, 0.2746 ) }
    dend_3 { pt3dadd( 385.212, 459.412, 48.0497, 0.2746 ) }
    dend_3 { pt3dadd( 386.243, 459.823, 48.54, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( 386.555, 460.331, 49.2828, 0.2746 ) }
    dend_3 { pt3dadd( 386.933, 461.411, 49.891, 0.2746 ) }
    dend_3 { pt3dadd( 387.267, 462.485, 50.4, 0.2746 ) }
    dend_3 { pt3dadd( 388.216, 463.058, 50.9149, 0.2746 ) }
    dend_3 { pt3dadd( 388.946, 463.899, 51.4296, 0.2746 ) }
    dend_3 { pt3dadd( 389.411, 464.883, 51.961, 0.2746 ) }
    dend_3 { pt3dadd( 389.76, 465.965, 52.4062, 0.2744 ) }
    dend_3 { pt3dadd( 390.079, 467.032, 52.8399, 0.2744 ) }
    dend_3 { pt3dadd( 390.694, 467.957, 53.2288, 0.2742 ) }
    dend_3 { pt3dadd( 391.008, 468.922, 53.6925, 0.2736 ) }
    dend_3 { pt3dadd( 391.348, 469.945, 54.0252, 0.2728 ) }
    dend_3 { pt3dadd( 391.59, 470.907, 54.0725, 0.2712 ) }
    dend_3 { pt3dadd( 391.461, 471.955, 54.0859, 0.2684 ) }
    dend_3 { pt3dadd( 390.747, 472.733, 54.2142, 0.2626 ) }
    dend_3 { pt3dadd( 389.924, 473.405, 54.455, 0.2542 ) }
    dend_3 { pt3dadd( 388.888, 473.726, 54.5387, 0.2288 ) }
    dend_3 { pt3dadd( 388.341, 474.696, 54.7478, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 17/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 377.433, 449.443, 42.3307, 0.2746 ) }
    dend_2 { pt3dadd( 378.592, 449.348, 43.0881, 0.2288 ) }
    dend_2 { pt3dadd( 379.44, 448.742, 43.4451, 0.2746 ) }
    dend_2 { pt3dadd( 380.467, 448.411, 43.8346, 0.2746 ) }
    dend_2 { pt3dadd( 381.605, 448.375, 44.2061, 0.2746 ) }
    dend_2 { pt3dadd( 382.732, 448.375, 44.6037, 0.2746 ) }
    dend_2 { pt3dadd( 383.857, 448.446, 45.0117, 0.2746 ) }
    dend_2 { pt3dadd( 384.986, 448.581, 45.3888, 0.2746 ) }
    dend_2 { pt3dadd( 386.078, 448.612, 45.813, 0.2746 ) }
    dend_2 { pt3dadd( 387.213, 448.661, 46.1838, 0.2746 ) }
    dend_2 { pt3dadd( 388.355, 448.679, 46.5153, 0.2746 ) }
    dend_2 { pt3dadd( 389.493, 448.766, 46.8289, 0.2746 ) }
    dend_2 { pt3dadd( 390.618, 448.953, 47.143, 0.2746 ) }
    dend_2 { pt3dadd( 391.693, 449.323, 47.4928, 0.2746 ) }
    dend_2 { pt3dadd( 392.803, 449.579, 47.8792, 0.2744 ) }
    dend_2 { pt3dadd( 393.883, 449.947, 48.3227, 0.2744 ) }
    dend_2 { pt3dadd( 394.322, 449.153, 48.93, 0.2742 ) }
    dend_2 { pt3dadd( 395.07, 448.986, 49.803, 0.2736 ) }
    dend_2 { pt3dadd( 396.152, 449.171, 50.6162, 0.2728 ) }
    dend_2 { pt3dadd( 396.721, 449.741, 51.5894, 0.2712 ) }
    dend_2 { pt3dadd( 397.157, 450.499, 52.5608, 0.2684 ) }
    dend_2 { pt3dadd( 397.833, 451.413, 53.268, 0.2626 ) }
    dend_2 { pt3dadd( 398.366, 452.402, 53.6872, 0.2542 ) }
    dend_2 { pt3dadd( 398.452, 453.284, 54.0714, 0.2288 ) }
    dend_2 { pt3dadd( 398.181, 454.326, 54.7478, 0.2288 ) }
    // Section: apic_28, id: apic_28, parent: apic_24 (entry count 42/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 365.635, 415.485, 22.7556, 0.5456 ) }
    apic_28 { pt3dadd( 366.032, 415.406, 22.3798, 0.612 ) }
    apic_28 { pt3dadd( 367.131, 415.185, 22.192, 0.5592 ) }
    apic_28 { pt3dadd( 368.25, 415.023, 21.9755, 0.6276 ) }
    apic_28 { pt3dadd( 369.385, 414.93, 21.7759, 0.6328 ) }
    apic_28 { pt3dadd( 370.528, 414.876, 21.6261, 0.5472 ) }
    apic_28 { pt3dadd( 371.671, 414.85, 21.5482, 0.3928 ) }
    apic_28 { pt3dadd( 372.814, 414.83, 21.5382, 0.315 ) }
    apic_28 { pt3dadd( 373.956, 414.824, 21.5648, 0.3018 ) }
    apic_28 { pt3dadd( 375.1, 414.824, 21.604, 0.3274 ) }
    apic_28 { pt3dadd( 376.216, 415.049, 21.6434, 0.362 ) }
    apic_28 { pt3dadd( 377.303, 415.4, 21.681, 0.4876 ) }
    apic_28 { pt3dadd( 378.348, 415.866, 21.7179, 0.4228 ) }
    apic_28 { pt3dadd( 379.344, 416.427, 21.7599, 0.375 ) }
    apic_28 { pt3dadd( 380.451, 416.634, 21.81, 0.392 ) }
    apic_28 { pt3dadd( 381.565, 416.426, 21.8772, 0.3682 ) }
    apic_28 { pt3dadd( 382.669, 416.334, 22.0338, 0.364 ) }
    apic_28 { pt3dadd( 383.755, 416.64, 22.1962, 0.3912 ) }
    apic_28 { pt3dadd( 384.839, 416.998, 22.3398, 0.5008 ) }
    apic_28 { pt3dadd( 385.923, 417.345, 22.4014, 0.6466 ) }
    apic_28 { pt3dadd( 387.032, 417.458, 22.3507, 0.508 ) }
    apic_28 { pt3dadd( 388.101, 417.168, 22.3871, 0.4062 ) }
    apic_28 { pt3dadd( 389.147, 416.713, 22.4174, 0.3788 ) }
    apic_28 { pt3dadd( 390.184, 416.231, 22.4227, 0.4588 ) }
    apic_28 { pt3dadd( 391.229, 415.764, 22.4081, 0.6608 ) }
    apic_28 { pt3dadd( 392.324, 415.472, 22.3339, 0.7736 ) }
    apic_28 { pt3dadd( 393.421, 415.179, 21.9971, 0.8798 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 69/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 365.635, 415.485, 22.7556, 0.5456 ) }
    apic_25 { pt3dadd( 365.834, 414.846, 21.6726, 0.2288 ) }
    apic_25 { pt3dadd( 365.553, 413.937, 21.1252, 0.4066 ) }
    apic_25 { pt3dadd( 364.697, 413.285, 20.6214, 0.5718 ) }
    apic_25 { pt3dadd( 363.616, 413.064, 20.2163, 0.5716 ) }
    apic_25 { pt3dadd( 362.637, 413.424, 19.7282, 0.6862 ) }
    apic_25 { pt3dadd( 361.866, 413.839, 19.0442, 0.7976 ) }
    apic_25 { pt3dadd( 361.819, 413.042, 17.0666, 0.579 ) }
    // Section: apic_23, id: apic_23, parent: apic_2 (entry count 77/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 361.318, 418.925, 23.6846, 0.7536 ) }
    apic_23 { pt3dadd( 360.859, 418.892, 23.3316, 0.6864 ) }
    apic_23 { pt3dadd( 359.9, 418.941, 23.0989, 0.4722 ) }
    apic_23 { pt3dadd( 358.885, 419.308, 23.0731, 0.3724 ) }
    apic_23 { pt3dadd( 358.04, 419.79, 23.3369, 0.3876 ) }
    apic_23 { pt3dadd( 357.058, 420.047, 23.767, 0.3596 ) }
    apic_23 { pt3dadd( 355.936, 420.039, 24.1942, 0.3498 ) }
    apic_23 { pt3dadd( 354.845, 419.851, 24.4678, 0.3566 ) }
    apic_23 { pt3dadd( 353.729, 419.944, 24.6786, 0.4778 ) }
    apic_23 { pt3dadd( 352.685, 420.159, 24.9371, 0.4034 ) }
    apic_23 { pt3dadd( 351.569, 420.134, 25.1555, 0.3444 ) }
    apic_23 { pt3dadd( 350.507, 419.791, 25.2255, 0.3098 ) }
    apic_23 { pt3dadd( 349.697, 419.54, 25.0169, 0.339 ) }
    apic_23 { pt3dadd( 348.632, 419.482, 24.9424, 0.3972 ) }
    apic_23 { pt3dadd( 347.734, 419.325, 25.0846, 0.4878 ) }
    apic_23 { pt3dadd( 346.609, 419.449, 25.1751, 0.739 ) }
    apic_23 { pt3dadd( 345.552, 419.744, 25.2983, 0.7998 ) }
    apic_23 { pt3dadd( 344.643, 420.302, 25.5408, 0.8184 ) }
    apic_23 { pt3dadd( 343.783, 421.041, 25.7656, 0.6262 ) }
    apic_23 { pt3dadd( 342.92, 421.683, 25.8317, 0.4542 ) }
    apic_23 { pt3dadd( 342.144, 421.998, 25.9647, 0.3832 ) }
    apic_23 { pt3dadd( 341.213, 422.062, 26.2494, 0.4208 ) }
    apic_23 { pt3dadd( 340.194, 422.453, 26.4384, 0.5858 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_23 { pt3dadd( 339.435, 423.288, 26.5681, 0.6572 ) }
    apic_23 { pt3dadd( 338.762, 424.208, 26.703, 0.5556 ) }
    apic_23 { pt3dadd( 337.874, 424.87, 26.8559, 0.5852 ) }
    apic_23 { pt3dadd( 336.797, 425.233, 26.973, 0.499 ) }
    apic_23 { pt3dadd( 335.674, 425.43, 27.0295, 0.5676 ) }
    apic_23 { pt3dadd( 334.538, 425.487, 27.0897, 0.5014 ) }
    apic_23 { pt3dadd( 333.561, 425.916, 27.2261, 0.4016 ) }
    apic_23 { pt3dadd( 332.885, 426.798, 27.3199, 0.3322 ) }
    apic_23 { pt3dadd( 331.919, 427.319, 27.3963, 0.3288 ) }
    apic_23 { pt3dadd( 330.853, 427.724, 27.51, 0.4018 ) }
    apic_23 { pt3dadd( 329.799, 428.024, 27.732, 0.3812 ) }
    apic_23 { pt3dadd( 328.776, 428.507, 27.9294, 0.413 ) }
    apic_23 { pt3dadd( 327.822, 429.126, 28.1086, 0.3604 ) }
    apic_23 { pt3dadd( 326.836, 429.691, 28.2027, 0.3486 ) }
    apic_23 { pt3dadd( 325.729, 429.688, 28.3136, 0.3666 ) }
    apic_23 { pt3dadd( 324.586, 429.701, 28.3634, 0.4366 ) }
    apic_23 { pt3dadd( 323.53, 430.119, 28.3125, 0.6162 ) }
    apic_23 { pt3dadd( 322.528, 430.659, 28.1918, 0.7076 ) }
    apic_23 { pt3dadd( 321.581, 431.299, 28.0459, 0.6766 ) }
    apic_23 { pt3dadd( 320.549, 431.796, 27.8838, 0.679 ) }
    apic_23 { pt3dadd( 319.633, 432.431, 27.6133, 0.62 ) }
    apic_23 { pt3dadd( 319.036, 433.405, 27.3479, 0.59 ) }
    apic_23 { pt3dadd( 318.148, 434.123, 27.0897, 0.6076 ) }
    apic_23 { pt3dadd( 317.492, 434.985, 26.7436, 0.5132 ) }
    apic_23 { pt3dadd( 317.335, 435.968, 26.2287, 0.4984 ) }
    apic_23 { pt3dadd( 316.934, 436.955, 25.711, 0.6068 ) }
    apic_23 { pt3dadd( 316.079, 437.557, 25.1325, 0.8354 ) }
    apic_23 { pt3dadd( 315.224, 438.242, 24.6551, 0.8958 ) }
    apic_23 { pt3dadd( 314.841, 439.291, 24.2858, 0.9406 ) }
    apic_23 { pt3dadd( 314.624, 440.402, 23.9445, 0.893 ) }
    apic_23 { pt3dadd( 314.251, 441.474, 23.6236, 0.7522 ) }
    apic_23 { pt3dadd( 313.763, 442.497, 23.2974, 0.5168 ) }
    apic_23 { pt3dadd( 313.065, 443.367, 22.9502, 0.415 ) }
    apic_23 { pt3dadd( 312.206, 443.983, 22.4944, 0.4324 ) }
    apic_23 { pt3dadd( 311.726, 444.834, 22.0424, 0.6084 ) }
    apic_23 { pt3dadd( 311.456, 445.941, 21.6829, 0.6938 ) }
    apic_23 { pt3dadd( 311.079, 447.015, 21.3413, 0.6496 ) }
    apic_23 { pt3dadd( 310.504, 447.958, 20.9611, 0.633 ) }
    apic_23 { pt3dadd( 309.76, 448.804, 20.6175, 0.5154 ) }
    apic_23 { pt3dadd( 308.957, 449.611, 20.2986, 0.4906 ) }
    apic_23 { pt3dadd( 308.441, 450.468, 19.8234, 0.6518 ) }
    apic_23 { pt3dadd( 308.176, 451.534, 19.3724, 0.6294 ) }
    apic_23 { pt3dadd( 307.842, 452.609, 18.9087, 0.5452 ) }
    apic_23 { pt3dadd( 307.395, 453.643, 18.4248, 0.5984 ) }
    apic_23 { pt3dadd( 306.743, 454.568, 17.9438, 0.5946 ) }
    apic_23 { pt3dadd( 305.992, 455.405, 17.4448, 0.6258 ) }
    apic_23 { pt3dadd( 305.338, 455.078, 16.7664, 0.5008 ) }
    apic_23 { pt3dadd( 304.415, 455.545, 16.1818, 0.4684 ) }
    apic_23 { pt3dadd( 304.174, 456.61, 15.6397, 0.5864 ) }
    apic_23 { pt3dadd( 304.445, 457.671, 15.1231, 0.6254 ) }
    apic_23 { pt3dadd( 304.771, 458.731, 14.7188, 0.6562 ) }
    apic_23 { pt3dadd( 304.454, 459.761, 14.364, 0.6848 ) }
    apic_23 { pt3dadd( 303.659, 460.531, 13.9972, 0.8766 ) }
    apic_23 { pt3dadd( 302.797, 461.267, 13.6452, 0.7876 ) }
    apic_23 { pt3dadd( 301.984, 462.066, 13.3274, 0.7218 ) }
    apic_23 { pt3dadd( 301.155, 462.797, 12.9724, 0.8038 ) }
    apic_23 { pt3dadd( 300.409, 463.574, 12.5577, 0.6534 ) }
    apic_23 { pt3dadd( 299.773, 464.482, 12.2349, 0.4676 ) }
    apic_23 { pt3dadd( 299.4, 465.517, 12.0058, 0.3604 ) }
    apic_23 { pt3dadd( 299.281, 466.648, 11.8364, 0.3832 ) }
    apic_23 { pt3dadd( 298.64, 467.485, 11.6472, 0.491 ) }
    apic_23 { pt3dadd( 297.752, 468.195, 11.4696, 0.6034 ) }
    apic_23 { pt3dadd( 297.033, 469.077, 11.3212, 0.5494 ) }
    apic_23 { pt3dadd( 296.536, 470.039, 11.0866, 0.5788 ) }
    apic_23 { pt3dadd( 296.56, 471.158, 10.8917, 0.6914 ) }
    apic_23 { pt3dadd( 296.842, 472.26, 10.8024, 0.6178 ) }
    apic_23 { pt3dadd( 297.085, 473.369, 10.8276, 0.4804 ) }
    apic_23 { pt3dadd( 297.409, 474.46, 10.9276, 0.4582 ) }
    apic_23 { pt3dadd( 297.846, 475.513, 11.0645, 0.4334 ) }
    apic_23 { pt3dadd( 298.267, 476.576, 11.2134, 0.5366 ) }
    apic_23 { pt3dadd( 298.641, 477.657, 11.3338, 0.4598 ) }
    apic_23 { pt3dadd( 299.066, 478.719, 11.4237, 0.4754 ) }
    apic_23 { pt3dadd( 299.703, 479.667, 11.4948, 0.4244 ) }
    apic_23 { pt3dadd( 300.39, 480.581, 11.5618, 0.4882 ) }
    apic_23 { pt3dadd( 301.2, 481.387, 11.6371, 0.5254 ) }
    apic_23 { pt3dadd( 302.016, 482.189, 11.737, 0.5302 ) }
    apic_23 { pt3dadd( 302.805, 483.0, 11.9034, 0.6208 ) }
    apic_23 { pt3dadd( 303.608, 483.802, 12.115, 0.8498 ) }
    apic_23 { pt3dadd( 304.44, 484.583, 12.371, 0.749 ) }
    apic_23 { pt3dadd( 305.342, 485.287, 12.6291, 0.8248 ) }
    apic_23 { pt3dadd( 306.213, 485.938, 12.7588, 0.836 ) }
    apic_23 { pt3dadd( 306.794, 486.912, 12.8965, 0.5676 ) }
    apic_23 { pt3dadd( 306.777, 487.931, 13.2325, 0.3304 ) }
    apic_23 { pt3dadd( 306.401, 488.599, 14.791, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_2 (entry count 84/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 361.318, 418.925, 23.6846, 0.7536 ) }
    apic_20 { pt3dadd( 361.551, 418.121, 22.1682, 0.6864 ) }
    apic_20 { pt3dadd( 360.695, 418.194, 21.4438, 0.4832 ) }
    apic_20 { pt3dadd( 359.775, 418.405, 20.7959, 0.4004 ) }
    apic_20 { pt3dadd( 359.278, 418.691, 20.6016, 0.4032 ) }
    apic_20 { pt3dadd( 358.326, 418.266, 20.4196, 0.5636 ) }
    apic_20 { pt3dadd( 357.417, 417.712, 20.298, 0.5656 ) }
    apic_20 { pt3dadd( 356.401, 417.87, 20.0931, 0.6286 ) }
    apic_20 { pt3dadd( 355.762, 417.504, 19.6008, 0.917 ) }
    apic_20 { pt3dadd( 354.999, 416.685, 19.0742, 1.0758 ) }
    apic_20 { pt3dadd( 354.154, 416.022, 18.58, 0.9076 ) }
    apic_20 { pt3dadd( 353.239, 416.242, 18.0942, 1.01 ) }
    apic_20 { pt3dadd( 352.552, 417.05, 17.5596, 1.021 ) }
    apic_20 { pt3dadd( 351.762, 417.825, 17.0876, 0.993 ) }
    apic_20 { pt3dadd( 351.04, 418.685, 16.8034, 0.9476 ) }
    apic_20 { pt3dadd( 350.46, 419.618, 16.5306, 1.0596 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_20 { pt3dadd( 350.189, 420.709, 16.2929, 1.0028 ) }
    apic_20 { pt3dadd( 349.936, 421.808, 16.1818, 1.0378 ) }
    apic_20 { pt3dadd( 350.023, 422.741, 15.4899, 0.8776 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 3/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 361.318, 418.925, 23.6846, 0.7536 ) }
    apic_3 { pt3dadd( 361.016, 418.003, 23.9084, 1.3728 ) }
    apic_3 { pt3dadd( 360.548, 416.958, 23.989, 1.3728 ) }
    apic_3 { pt3dadd( 360.045, 415.931, 24.0576, 1.3728 ) }
    apic_3 { pt3dadd( 359.154, 415.23, 24.1548, 1.3728 ) }
    apic_3 { pt3dadd( 358.204, 414.592, 24.2122, 1.3728 ) }
    apic_3 { pt3dadd( 357.522, 413.684, 24.1942, 1.3728 ) }
    apic_3 { pt3dadd( 357.034, 412.65, 24.1654, 1.3728 ) }
    apic_3 { pt3dadd( 356.785, 411.533, 24.1377, 1.3728 ) }
    apic_3 { pt3dadd( 356.587, 410.407, 24.1128, 1.3728 ) }
    apic_3 { pt3dadd( 356.362, 409.284, 24.092, 1.3728 ) }
    apic_3 { pt3dadd( 356.4, 408.141, 24.0848, 1.3728 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 15/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 399.707, 436.982, 42.8324, 0.2288 ) }
    dend_37 { pt3dadd( 400.105, 436.554, 43.321, 0.2746 ) }
    dend_37 { pt3dadd( 400.475, 435.609, 43.5828, 0.2746 ) }
    dend_37 { pt3dadd( 400.907, 434.721, 43.8886, 0.2746 ) }
    dend_37 { pt3dadd( 401.439, 433.745, 44.1392, 0.2748 ) }
    dend_37 { pt3dadd( 401.596, 432.629, 44.4248, 0.275 ) }
    dend_37 { pt3dadd( 402.035, 431.701, 44.8501, 0.2752 ) }
    dend_37 { pt3dadd( 402.758, 430.836, 45.2511, 0.276 ) }
    dend_37 { pt3dadd( 403.285, 429.934, 45.7416, 0.2768 ) }
    dend_37 { pt3dadd( 403.622, 428.878, 46.2336, 0.2796 ) }
    dend_37 { pt3dadd( 404.306, 427.961, 46.6169, 0.2796 ) }
    dend_37 { pt3dadd( 405.116, 427.17, 46.9451, 0.305 ) }
    dend_37 { pt3dadd( 405.962, 426.403, 47.4104, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 399.707, 436.982, 42.8324, 0.2288 ) }
    dend_36 { pt3dadd( 399.612, 437.659, 43.5481, 0.2288 ) }
    dend_36 { pt3dadd( 398.923, 438.34, 43.944, 0.3108 ) }
    dend_36 { pt3dadd( 398.229, 439.043, 44.5245, 0.3672 ) }
    dend_36 { pt3dadd( 397.844, 440.073, 45.0722, 0.322 ) }
    dend_36 { pt3dadd( 397.381, 440.984, 45.6686, 0.2796 ) }
    dend_36 { pt3dadd( 397.294, 441.949, 46.3529, 0.2288 ) }
    dend_36 { pt3dadd( 398.181, 442.654, 47.4104, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 36/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 341.148, 458.218, 33.4256, 0.2812 ) }
    dend_31 { pt3dadd( 340.937, 458.111, 32.3394, 0.2866 ) }
    dend_31 { pt3dadd( 340.004, 458.119, 31.8077, 0.2972 ) }
    dend_31 { pt3dadd( 339.0, 458.579, 31.3356, 0.3162 ) }
    dend_31 { pt3dadd( 337.87, 458.612, 31.0106, 0.3534 ) }
    dend_31 { pt3dadd( 336.743, 458.441, 30.8053, 0.4126 ) }
    dend_31 { pt3dadd( 335.611, 458.451, 30.7482, 0.571 ) }
    dend_31 { pt3dadd( 334.479, 458.615, 30.805, 0.6272 ) }
    dend_31 { pt3dadd( 333.357, 458.813, 30.9394, 0.5132 ) }
    dend_31 { pt3dadd( 332.26, 459.028, 31.1525, 0.4444 ) }
    dend_31 { pt3dadd( 331.182, 459.31, 31.425, 0.5408 ) }
    dend_31 { pt3dadd( 330.122, 459.727, 31.7181, 0.5466 ) }
    dend_31 { pt3dadd( 329.053, 460.11, 31.9869, 0.4814 ) }
    dend_31 { pt3dadd( 327.944, 460.187, 32.1983, 0.5016 ) }
    dend_31 { pt3dadd( 326.875, 460.091, 32.5184, 0.5404 ) }
    dend_31 { pt3dadd( 325.842, 460.379, 32.9322, 0.605 ) }
    dend_31 { pt3dadd( 325.174, 461.191, 33.4452, 0.5328 ) }
    dend_31 { pt3dadd( 324.366, 461.706, 34.118, 0.4134 ) }
    dend_31 { pt3dadd( 323.303, 462.081, 34.6772, 0.3526 ) }
    dend_31 { pt3dadd( 322.293, 461.646, 35.2523, 0.3748 ) }
    dend_31 { pt3dadd( 321.206, 461.364, 35.7736, 0.4466 ) }
    dend_31 { pt3dadd( 320.127, 461.058, 36.2505, 0.6596 ) }
    dend_31 { pt3dadd( 319.001, 460.855, 36.6058, 0.6676 ) }
    dend_31 { pt3dadd( 317.92, 460.489, 36.8578, 0.5014 ) }
    dend_31 { pt3dadd( 316.913, 460.145, 37.1596, 0.3864 ) }
    dend_31 { pt3dadd( 315.945, 460.649, 37.5085, 0.3772 ) }
    dend_31 { pt3dadd( 314.887, 461.037, 37.8372, 0.5158 ) }
    dend_31 { pt3dadd( 313.844, 461.491, 38.0733, 0.4754 ) }
    dend_31 { pt3dadd( 312.779, 461.848, 38.2208, 0.4698 ) }
    dend_31 { pt3dadd( 311.7, 462.181, 38.3908, 0.5822 ) }
    dend_31 { pt3dadd( 310.653, 462.635, 38.5308, 0.6504 ) }
    dend_31 { pt3dadd( 309.577, 462.974, 38.6711, 0.5438 ) }
    dend_31 { pt3dadd( 308.534, 463.281, 38.8161, 0.5618 ) }
    dend_31 { pt3dadd( 307.661, 463.953, 39.0169, 0.464 ) }
    dend_31 { pt3dadd( 306.668, 464.503, 39.1566, 0.4594 ) }
    dend_31 { pt3dadd( 305.62, 464.939, 39.2224, 0.5104 ) }
    dend_31 { pt3dadd( 304.585, 465.389, 39.2255, 0.7734 ) }
    dend_31 { pt3dadd( 303.549, 465.849, 39.2358, 0.9012 ) }
    dend_31 { pt3dadd( 302.525, 466.345, 39.3403, 0.824 ) }
    dend_31 { pt3dadd( 301.568, 466.928, 39.5648, 0.8348 ) }
    dend_31 { pt3dadd( 300.638, 467.568, 39.9034, 0.7922 ) }
    dend_31 { pt3dadd( 299.836, 468.157, 40.4398, 0.5624 ) }
    dend_31 { pt3dadd( 299.023, 468.736, 41.1292, 0.408 ) }
    dend_31 { pt3dadd( 298.125, 469.384, 41.7785, 0.407 ) }
    dend_31 { pt3dadd( 297.215, 470.055, 42.3564, 0.3908 ) }
    dend_31 { pt3dadd( 296.411, 470.85, 42.833, 0.4308 ) }
    dend_31 { pt3dadd( 295.405, 471.226, 43.2018, 0.394 ) }
    dend_31 { pt3dadd( 294.327, 471.424, 43.5669, 0.4084 ) }
    dend_31 { pt3dadd( 293.35, 471.773, 43.995, 0.4898 ) }
    dend_31 { pt3dadd( 292.316, 471.567, 44.3604, 0.604 ) }
    dend_31 { pt3dadd( 291.196, 471.374, 44.6317, 0.537 ) }
    dend_31 { pt3dadd( 290.118, 471.659, 44.8666, 0.6216 ) }
    dend_31 { pt3dadd( 289.48, 471.493, 44.7535, 0.4518 ) }
    dend_31 { pt3dadd( 288.661, 471.053, 44.5746, 0.3498 ) }
    dend_31 { pt3dadd( 287.579, 470.843, 44.5673, 0.2728 ) }
    dend_31 { pt3dadd( 286.454, 470.805, 44.6732, 0.2712 ) }
    dend_31 { pt3dadd( 285.428, 470.682, 44.9607, 0.2684 ) }
    dend_31 { pt3dadd( 284.437, 470.859, 45.3958, 0.2626 ) }
    dend_31 { pt3dadd( 283.383, 470.801, 45.8914, 0.2542 ) }
    dend_31 { pt3dadd( 282.344, 470.389, 46.1972, 0.2288 ) }
    dend_31 { pt3dadd( 281.473, 470.576, 45.7173, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 97/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 341.148, 458.218, 33.4256, 0.2812 ) }
    dend_30 { pt3dadd( 340.876, 458.61, 34.2577, 0.6864 ) }
    dend_30 { pt3dadd( 340.062, 459.337, 34.6178, 0.5104 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_30 { pt3dadd( 339.016, 459.692, 35.0809, 0.4374 ) }
    dend_30 { pt3dadd( 337.932, 459.691, 35.6404, 0.5354 ) }
    dend_30 { pt3dadd( 337.327, 459.979, 36.379, 0.5008 ) }
    dend_30 { pt3dadd( 336.714, 460.858, 37.1221, 0.5708 ) }
    dend_30 { pt3dadd( 336.159, 461.846, 37.7322, 0.507 ) }
    dend_30 { pt3dadd( 335.515, 462.758, 38.3062, 0.4134 ) }
    dend_30 { pt3dadd( 334.932, 463.646, 38.7982, 0.348 ) }
    dend_30 { pt3dadd( 334.053, 463.608, 39.3047, 0.389 ) }
    dend_30 { pt3dadd( 333.316, 463.015, 39.8829, 0.3624 ) }
    dend_30 { pt3dadd( 332.253, 462.876, 40.4606, 0.355 ) }
    dend_30 { pt3dadd( 331.183, 463.088, 41.0768, 0.366 ) }
    dend_30 { pt3dadd( 330.257, 462.782, 41.5974, 0.4962 ) }
    dend_30 { pt3dadd( 329.483, 461.969, 42.079, 0.4324 ) }
    dend_30 { pt3dadd( 328.545, 461.37, 42.5662, 0.4238 ) }
    dend_30 { pt3dadd( 327.452, 461.25, 43.0682, 0.333 ) }
    dend_30 { pt3dadd( 326.476, 461.707, 43.6212, 0.2982 ) }
    dend_30 { pt3dadd( 325.518, 461.762, 44.3145, 0.2712 ) }
    dend_30 { pt3dadd( 324.441, 461.89, 45.0209, 0.2684 ) }
    dend_30 { pt3dadd( 323.733, 462.749, 45.61, 0.2626 ) }
    dend_30 { pt3dadd( 322.616, 462.795, 46.1241, 0.2542 ) }
    dend_30 { pt3dadd( 321.49, 462.795, 46.571, 0.2288 ) }
    dend_30 { pt3dadd( 320.376, 462.795, 47.4104, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 22/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 333.603, 453.715, 14.525, 0.4244 ) }
    dend_26 { pt3dadd( 332.846, 453.669, 14.1218, 0.418 ) }
    dend_26 { pt3dadd( 331.733, 453.445, 13.9614, 0.507 ) }
    dend_26 { pt3dadd( 330.598, 453.34, 13.7953, 0.4104 ) }
    dend_26 { pt3dadd( 329.526, 453.609, 13.5654, 0.3584 ) }
    dend_26 { pt3dadd( 328.431, 453.909, 13.342, 0.3302 ) }
    dend_26 { pt3dadd( 327.372, 454.33, 13.1435, 0.4042 ) }
    dend_26 { pt3dadd( 326.264, 454.598, 12.992, 0.386 ) }
    dend_26 { pt3dadd( 325.13, 454.749, 12.8783, 0.422 ) }
    dend_26 { pt3dadd( 324.098, 455.211, 12.7929, 0.3766 ) }
    dend_26 { pt3dadd( 323.008, 455.545, 12.7271, 0.38 ) }
    dend_26 { pt3dadd( 321.915, 455.878, 12.6591, 0.4194 ) }
    dend_26 { pt3dadd( 320.98, 456.517, 12.5675, 0.5598 ) }
    dend_26 { pt3dadd( 320.035, 457.129, 12.4051, 0.7218 ) }
    dend_26 { pt3dadd( 319.077, 457.744, 12.2592, 0.8134 ) }
    dend_26 { pt3dadd( 318.169, 458.434, 12.1271, 0.853 ) }
    dend_26 { pt3dadd( 317.247, 459.073, 11.9498, 0.8724 ) }
    dend_26 { pt3dadd( 316.189, 459.464, 11.7275, 0.942 ) }
    dend_26 { pt3dadd( 315.114, 459.84, 11.5097, 0.9074 ) }
    dend_26 { pt3dadd( 314.053, 460.269, 11.2904, 0.95 ) }
    dend_26 { pt3dadd( 313.091, 460.707, 10.9696, 0.7416 ) }
    dend_26 { pt3dadd( 312.411, 461.383, 10.4754, 0.6042 ) }
    dend_26 { pt3dadd( 311.766, 462.238, 9.9828, 0.5148 ) }
    dend_26 { pt3dadd( 310.863, 462.881, 9.5855, 0.4612 ) }
    dend_26 { pt3dadd( 309.778, 463.169, 9.3408, 0.5042 ) }
    dend_26 { pt3dadd( 308.668, 463.284, 9.2868, 0.58 ) }
    dend_26 { pt3dadd( 307.577, 463.551, 9.35, 0.511 ) }
    dend_26 { pt3dadd( 306.574, 463.581, 9.3128, 0.483 ) }
    dend_26 { pt3dadd( 305.552, 463.859, 9.2165, 0.6326 ) }
    dend_26 { pt3dadd( 305.053, 464.775, 9.228, 0.6186 ) }
    dend_26 { pt3dadd( 304.767, 465.788, 9.4223, 0.4068 ) }
    dend_26 { pt3dadd( 303.898, 466.457, 10.1592, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 54/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 333.603, 453.715, 14.525, 0.4244 ) }
    dend_25 { pt3dadd( 332.828, 453.644, 13.0256, 0.2288 ) }
    dend_25 { pt3dadd( 332.143, 453.149, 12.3239, 0.3326 ) }
    dend_25 { pt3dadd( 331.163, 452.685, 11.6662, 0.4088 ) }
    dend_25 { pt3dadd( 330.148, 452.333, 10.9858, 0.3942 ) }
    dend_25 { pt3dadd( 329.228, 452.834, 10.36, 0.4384 ) }
    dend_25 { pt3dadd( 329.114, 453.924, 9.9016, 0.402 ) }
    dend_25 { pt3dadd( 328.711, 454.761, 9.5099, 0.4514 ) }
    dend_25 { pt3dadd( 327.674, 454.697, 9.1641, 0.4328 ) }
    dend_25 { pt3dadd( 326.634, 454.243, 8.8379, 0.4772 ) }
    dend_25 { pt3dadd( 325.96, 454.872, 8.4927, 0.6326 ) }
    dend_25 { pt3dadd( 325.441, 455.883, 8.2225, 0.7964 ) }
    dend_25 { pt3dadd( 324.681, 456.684, 8.0979, 0.5592 ) }
    dend_25 { pt3dadd( 324.266, 457.53, 7.3374, 0.4576 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 344.836, 436.016, 32.7984, 0.3778 ) }
    dend_19 { pt3dadd( 343.874, 435.497, 32.755, 0.4522 ) }
    dend_19 { pt3dadd( 342.805, 435.09, 32.7387, 0.6696 ) }
    dend_19 { pt3dadd( 341.693, 434.868, 32.7247, 0.687 ) }
    dend_19 { pt3dadd( 340.64, 434.526, 32.7883, 0.5336 ) }
    dend_19 { pt3dadd( 339.575, 434.243, 32.7992, 0.4644 ) }
    dend_19 { pt3dadd( 338.463, 434.078, 32.7454, 0.434 ) }
    dend_19 { pt3dadd( 337.441, 433.656, 32.7782, 0.3618 ) }
    dend_19 { pt3dadd( 336.461, 433.082, 32.8488, 0.3046 ) }
    dend_19 { pt3dadd( 335.476, 432.501, 32.909, 0.283 ) }
    dend_19 { pt3dadd( 334.458, 431.989, 32.9949, 0.2902 ) }
    dend_19 { pt3dadd( 333.41, 431.591, 33.1593, 0.3032 ) }
    dend_19 { pt3dadd( 332.341, 431.201, 33.2968, 0.3298 ) }
    dend_19 { pt3dadd( 331.269, 430.811, 33.3665, 0.366 ) }
    dend_19 { pt3dadd( 330.257, 430.282, 33.4172, 0.4968 ) }
    dend_19 { pt3dadd( 329.311, 429.647, 33.4852, 0.4332 ) }
    dend_19 { pt3dadd( 328.309, 429.104, 33.5135, 0.4248 ) }
    dend_19 { pt3dadd( 327.309, 428.556, 33.5555, 0.335 ) }
    dend_19 { pt3dadd( 326.467, 427.794, 33.6266, 0.3018 ) }
    dend_19 { pt3dadd( 325.671, 426.974, 33.691, 0.278 ) }
    dend_19 { pt3dadd( 325.066, 426.027, 33.6734, 0.281 ) }
    dend_19 { pt3dadd( 324.307, 425.201, 33.7182, 0.2864 ) }
    dend_19 { pt3dadd( 323.471, 424.427, 33.7361, 0.2968 ) }
    dend_19 { pt3dadd( 322.417, 424.01, 33.7235, 0.3158 ) }
    dend_19 { pt3dadd( 321.502, 423.338, 33.7674, 0.3502 ) }
    dend_19 { pt3dadd( 320.583, 422.659, 33.8066, 0.4172 ) }
    dend_19 { pt3dadd( 319.659, 422.033, 33.9416, 0.5282 ) }
    dend_19 { pt3dadd( 318.702, 421.419, 34.0054, 0.7964 ) }
    dend_19 { pt3dadd( 317.733, 420.838, 34.118, 0.9926 ) }
    dend_19 { pt3dadd( 316.805, 420.171, 34.1872, 0.7578 ) }
    dend_19 { pt3dadd( 315.87, 419.513, 34.2177, 0.4824 ) }
    dend_19 { pt3dadd( 314.9, 418.91, 34.2465, 0.339 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_19 { pt3dadd( 313.898, 418.361, 34.2776, 0.3494 ) }
    dend_19 { pt3dadd( 312.845, 417.93, 34.2888, 0.4024 ) }
    dend_19 { pt3dadd( 311.751, 417.594, 34.2642, 0.5644 ) }
    dend_19 { pt3dadd( 310.644, 417.313, 34.2264, 0.5566 ) }
    dend_19 { pt3dadd( 309.514, 417.184, 34.1939, 0.6638 ) }
    dend_19 { pt3dadd( 308.423, 416.947, 34.2115, 0.7306 ) }
    dend_19 { pt3dadd( 307.444, 416.543, 34.1144, 0.5786 ) }
    dend_19 { pt3dadd( 306.589, 415.925, 33.8803, 0.4916 ) }
    dend_19 { pt3dadd( 305.853, 415.086, 33.6384, 0.5286 ) }
    dend_19 { pt3dadd( 305.083, 414.246, 33.4754, 0.7806 ) }
    dend_19 { pt3dadd( 304.28, 413.494, 33.4743, 1.0428 ) }
    dend_19 { pt3dadd( 303.372, 412.844, 33.5745, 1.1514 ) }
    dend_19 { pt3dadd( 302.284, 412.571, 33.6986, 0.8984 ) }
    dend_19 { pt3dadd( 301.214, 412.199, 33.7784, 0.5732 ) }
    dend_19 { pt3dadd( 300.239, 411.644, 33.763, 0.4194 ) }
    dend_19 { pt3dadd( 299.254, 411.079, 33.7473, 0.4682 ) }
    dend_19 { pt3dadd( 298.264, 410.538, 33.7865, 0.539 ) }
    dend_19 { pt3dadd( 297.51, 409.704, 33.838, 0.5356 ) }
    dend_19 { pt3dadd( 296.836, 408.781, 33.8898, 0.7288 ) }
    dend_19 { pt3dadd( 296.258, 407.796, 33.9228, 0.5742 ) }
    dend_19 { pt3dadd( 295.706, 406.794, 33.9287, 0.4892 ) }
    dend_19 { pt3dadd( 294.987, 405.911, 33.9167, 0.4988 ) }
    dend_19 { pt3dadd( 294.109, 405.185, 33.8654, 0.6178 ) }
    dend_19 { pt3dadd( 293.115, 404.645, 33.7562, 0.5772 ) }
    dend_19 { pt3dadd( 292.17, 404.03, 33.5966, 0.6244 ) }
    dend_19 { pt3dadd( 291.238, 403.428, 33.5451, 0.8058 ) }
    dend_19 { pt3dadd( 290.173, 403.051, 33.544, 0.6844 ) }
    dend_19 { pt3dadd( 289.056, 402.956, 33.4684, 0.6246 ) }
    dend_19 { pt3dadd( 287.957, 402.705, 33.3374, 0.8522 ) }
    dend_19 { pt3dadd( 286.876, 402.339, 33.22, 0.777 ) }
    dend_19 { pt3dadd( 285.823, 401.892, 33.1173, 0.5354 ) }
    dend_19 { pt3dadd( 284.811, 401.36, 33.0229, 0.3542 ) }
    dend_19 { pt3dadd( 283.894, 400.678, 32.9515, 0.3228 ) }
    dend_19 { pt3dadd( 283.164, 399.801, 32.9104, 0.3896 ) }
    dend_19 { pt3dadd( 282.427, 398.929, 32.8588, 0.3636 ) }
    dend_19 { pt3dadd( 281.663, 398.102, 32.7519, 0.3574 ) }
    dend_19 { pt3dadd( 280.927, 397.231, 32.699, 0.37 ) }
    dend_19 { pt3dadd( 280.223, 396.354, 32.7384, 0.5038 ) }
    dend_19 { pt3dadd( 279.349, 395.619, 32.7788, 0.4462 ) }
    dend_19 { pt3dadd( 278.457, 394.903, 32.8037, 0.4506 ) }
    dend_19 { pt3dadd( 277.802, 393.973, 32.8395, 0.377 ) }
    dend_19 { pt3dadd( 277.069, 393.096, 32.8468, 0.4056 ) }
    dend_19 { pt3dadd( 276.19, 392.368, 32.772, 0.3464 ) }
    dend_19 { pt3dadd( 275.17, 391.874, 32.6077, 0.3242 ) }
    dend_19 { pt3dadd( 274.064, 391.655, 32.3641, 0.3144 ) }
    dend_19 { pt3dadd( 272.941, 391.474, 32.0841, 0.374 ) }
    dend_19 { pt3dadd( 271.806, 391.35, 31.815, 0.335 ) }
    dend_19 { pt3dadd( 270.67, 391.226, 31.5636, 0.3018 ) }
    dend_19 { pt3dadd( 269.588, 390.91, 31.2782, 0.278 ) }
    dend_19 { pt3dadd( 268.514, 390.578, 30.9694, 0.2812 ) }
    dend_19 { pt3dadd( 267.397, 390.345, 30.6888, 0.2864 ) }
    dend_19 { pt3dadd( 266.277, 390.13, 30.4326, 0.2976 ) }
    dend_19 { pt3dadd( 265.153, 389.98, 30.179, 0.3124 ) }
    dend_19 { pt3dadd( 264.027, 389.837, 29.9438, 0.37 ) }
    dend_19 { pt3dadd( 262.884, 389.78, 29.7847, 0.3276 ) }
    dend_19 { pt3dadd( 261.743, 389.723, 29.6836, 0.288 ) }
    dend_19 { pt3dadd( 260.599, 389.689, 29.6226, 0.2542 ) }
    dend_19 { pt3dadd( 259.454, 389.689, 29.5918, 0.2288 ) }
    dend_19 { pt3dadd( 258.311, 389.689, 29.5823, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 344.836, 436.016, 32.7984, 0.3778 ) }
    dend_16 { pt3dadd( 344.733, 435.815, 34.6928, 0.2288 ) }
    dend_16 { pt3dadd( 344.566, 435.231, 35.6261, 0.4592 ) }
    dend_16 { pt3dadd( 344.72, 434.184, 36.6184, 0.5438 ) }
    dend_16 { pt3dadd( 344.93, 433.098, 37.5343, 0.4416 ) }
    dend_16 { pt3dadd( 344.579, 432.065, 38.2872, 0.3674 ) }
    dend_16 { pt3dadd( 344.154, 431.249, 39.093, 0.3546 ) }
    dend_16 { pt3dadd( 344.159, 430.98, 40.1086, 0.4132 ) }
    dend_16 { pt3dadd( 343.724, 431.519, 41.0942, 0.5782 ) }
    dend_16 { pt3dadd( 342.964, 432.322, 41.956, 0.612 ) }
    dend_16 { pt3dadd( 341.962, 432.763, 42.5438, 0.6218 ) }
    dend_16 { pt3dadd( 340.952, 433.128, 42.8336, 0.668 ) }
    dend_16 { pt3dadd( 339.844, 433.259, 43.0914, 0.6184 ) }
    dend_16 { pt3dadd( 338.904, 432.878, 43.4678, 0.7252 ) }
    dend_16 { pt3dadd( 337.812, 432.561, 43.8253, 0.8724 ) }
    dend_16 { pt3dadd( 336.742, 432.157, 44.1487, 0.708 ) }
    dend_16 { pt3dadd( 335.684, 431.754, 44.5024, 0.6946 ) }
    dend_16 { pt3dadd( 334.682, 431.271, 44.8927, 0.6266 ) }
    dend_16 { pt3dadd( 333.776, 430.625, 45.7173, 0.7106 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 410.316, 366.742, 12.5154, 0.4418 ) }
    dend_11 { pt3dadd( 410.822, 366.014, 12.6664, 0.3118 ) }
    dend_11 { pt3dadd( 411.696, 365.407, 12.7938, 0.296 ) }
    dend_11 { pt3dadd( 412.585, 364.792, 12.8512, 0.3158 ) }
    dend_11 { pt3dadd( 413.314, 363.936, 12.8512, 0.3458 ) }
    dend_11 { pt3dadd( 414.201, 363.266, 12.9038, 0.4316 ) }
    dend_11 { pt3dadd( 415.15, 362.672, 13.0147, 0.4432 ) }
    dend_11 { pt3dadd( 416.13, 362.095, 13.0911, 0.4948 ) }
    dend_11 { pt3dadd( 417.117, 361.518, 13.1065, 0.6746 ) }
    dend_11 { pt3dadd( 417.907, 360.739, 13.008, 0.8288 ) }
    dend_11 { pt3dadd( 418.617, 359.868, 12.8114, 0.8388 ) }
    dend_11 { pt3dadd( 419.265, 358.93, 12.5944, 0.5956 ) }
    dend_11 { pt3dadd( 419.926, 357.999, 12.3749, 0.4994 ) }
    dend_11 { pt3dadd( 420.678, 357.166, 12.1212, 0.4306 ) }
    dend_11 { pt3dadd( 421.549, 356.446, 11.8709, 0.458 ) }
    dend_11 { pt3dadd( 422.531, 355.865, 11.6757, 0.67 ) }
    dend_11 { pt3dadd( 423.504, 355.265, 11.534, 0.5118 ) }
    dend_11 { pt3dadd( 424.43, 354.593, 11.4335, 0.3764 ) }
    dend_11 { pt3dadd( 425.345, 353.907, 11.3683, 0.2746 ) }
    dend_11 { pt3dadd( 426.26, 353.221, 11.3296, 0.2748 ) }
    dend_11 { pt3dadd( 427.135, 352.486, 11.3011, 0.2748 ) }
    dend_11 { pt3dadd( 427.946, 351.678, 11.268, 0.275 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 428.713, 350.829, 11.2235, 0.2752 ) }
    dend_11 { pt3dadd( 429.436, 349.944, 11.1625, 0.276 ) }
    dend_11 { pt3dadd( 430.188, 349.081, 11.0779, 0.277 ) }
    dend_11 { pt3dadd( 430.986, 348.263, 10.9617, 0.2794 ) }
    dend_11 { pt3dadd( 431.924, 347.627, 10.7867, 0.2834 ) }
    dend_11 { pt3dadd( 432.971, 347.223, 10.5339, 0.2906 ) }
    dend_11 { pt3dadd( 433.951, 346.654, 10.2542, 0.3056 ) }
    dend_11 { pt3dadd( 434.858, 345.972, 9.9504, 0.3268 ) }
    dend_11 { pt3dadd( 435.085, 344.94, 9.578, 0.3976 ) }
    dend_11 { pt3dadd( 435.099, 343.803, 9.2613, 0.3736 ) }
    dend_11 { pt3dadd( 435.161, 342.661, 9.0101, 0.3992 ) }
    dend_11 { pt3dadd( 435.56, 341.619, 8.7433, 0.3346 ) }
    dend_11 { pt3dadd( 435.764, 340.522, 8.461, 0.3014 ) }
    dend_11 { pt3dadd( 435.344, 339.469, 8.2578, 0.2768 ) }
    dend_11 { pt3dadd( 434.505, 338.696, 8.1234, 0.2796 ) }
    dend_11 { pt3dadd( 433.76, 337.828, 8.034, 0.2796 ) }
    dend_11 { pt3dadd( 432.939, 337.032, 7.9828, 0.305 ) }
    dend_11 { pt3dadd( 431.892, 336.57, 7.9643, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 410.316, 366.742, 12.5154, 0.4418 ) }
    dend_10 { pt3dadd( 411.092, 366.157, 11.5665, 0.2288 ) }
    dend_10 { pt3dadd( 412.025, 365.851, 11.0858, 0.3292 ) }
    dend_10 { pt3dadd( 413.046, 365.675, 10.6904, 0.3656 ) }
    dend_10 { pt3dadd( 413.911, 365.978, 10.607, 0.4944 ) }
    dend_10 { pt3dadd( 414.711, 365.975, 10.8136, 0.4342 ) }
    dend_10 { pt3dadd( 415.683, 365.674, 10.9676, 0.4022 ) }
    dend_10 { pt3dadd( 416.473, 365.109, 10.8651, 0.4132 ) }
    dend_10 { pt3dadd( 417.26, 364.505, 10.5577, 0.5498 ) }
    dend_10 { pt3dadd( 417.941, 363.625, 10.2379, 0.6958 ) }
    dend_10 { pt3dadd( 418.816, 362.964, 9.9232, 0.8014 ) }
    dend_10 { pt3dadd( 419.909, 362.654, 9.606, 0.6546 ) }
    dend_10 { pt3dadd( 421.002, 362.747, 9.2579, 0.6742 ) }
    dend_10 { pt3dadd( 421.824, 363.356, 8.8225, 0.6668 ) }
    dend_10 { pt3dadd( 422.829, 363.48, 8.3457, 0.6356 ) }
    dend_10 { pt3dadd( 423.863, 363.06, 7.8856, 0.4322 ) }
    dend_10 { pt3dadd( 424.91, 362.796, 7.4024, 0.305 ) }
    dend_10 { pt3dadd( 425.905, 362.365, 7.1481, 0.2288 ) }
    dend_10 { pt3dadd( 427.015, 362.545, 6.7729, 0.2288 ) }
    // Section: apic_30, id: apic_30, parent: apic_28 (entry count 37/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 393.421, 415.179, 21.9971, 0.8798 ) }
    apic_30 { pt3dadd( 393.607, 415.555, 22.8477, 0.6626 ) }
    apic_30 { pt3dadd( 394.341, 416.173, 23.3086, 0.4374 ) }
    apic_30 { pt3dadd( 395.448, 416.399, 23.7082, 0.3036 ) }
    apic_30 { pt3dadd( 396.104, 417.249, 23.8473, 0.2814 ) }
    apic_30 { pt3dadd( 396.608, 418.242, 23.8986, 0.2874 ) }
    apic_30 { pt3dadd( 397.708, 418.49, 23.8834, 0.2982 ) }
    apic_30 { pt3dadd( 398.838, 418.32, 23.8098, 0.3194 ) }
    apic_30 { pt3dadd( 399.96, 418.132, 23.6894, 0.3518 ) }
    apic_30 { pt3dadd( 401.066, 418.151, 23.5239, 0.4454 ) }
    apic_30 { pt3dadd( 402.154, 418.497, 23.3985, 0.4566 ) }
    apic_30 { pt3dadd( 403.25, 418.774, 23.3156, 0.5804 ) }
    apic_30 { pt3dadd( 404.39, 418.721, 23.3122, 0.5384 ) }
    apic_30 { pt3dadd( 405.523, 418.587, 23.3932, 0.6346 ) }
    apic_30 { pt3dadd( 406.642, 418.385, 23.5648, 0.6534 ) }
    apic_30 { pt3dadd( 407.758, 418.179, 23.8098, 0.5494 ) }
    apic_30 { pt3dadd( 408.894, 418.138, 24.0738, 0.5722 ) }
    apic_30 { pt3dadd( 410.028, 418.281, 24.3337, 0.4812 ) }
    apic_30 { pt3dadd( 411.06, 418.237, 24.6747, 0.5034 ) }
    apic_30 { pt3dadd( 411.943, 417.797, 25.1398, 0.5318 ) }
    apic_30 { pt3dadd( 412.995, 417.376, 25.536, 0.4188 ) }
    apic_30 { pt3dadd( 414.114, 417.184, 25.8362, 0.3256 ) }
    apic_30 { pt3dadd( 415.232, 417.009, 26.052, 0.2748 ) }
    apic_30 { pt3dadd( 416.307, 416.62, 26.1971, 0.2748 ) }
    apic_30 { pt3dadd( 417.345, 416.141, 26.2856, 0.275 ) }
    apic_30 { pt3dadd( 418.336, 415.572, 26.3446, 0.2754 ) }
    apic_30 { pt3dadd( 419.314, 414.978, 26.4102, 0.2762 ) }
    apic_30 { pt3dadd( 420.292, 414.385, 26.4961, 0.2774 ) }
    apic_30 { pt3dadd( 421.275, 413.868, 26.6616, 0.2798 ) }
    apic_30 { pt3dadd( 422.335, 413.715, 26.8904, 0.2842 ) }
    apic_30 { pt3dadd( 423.452, 413.941, 27.0875, 0.2926 ) }
    apic_30 { pt3dadd( 424.553, 414.249, 27.2476, 0.308 ) }
    apic_30 { pt3dadd( 425.64, 414.599, 27.3767, 0.3368 ) }
    apic_30 { pt3dadd( 426.66, 415.107, 27.4775, 0.3878 ) }
    apic_30 { pt3dadd( 427.651, 415.673, 27.5694, 0.4944 ) }
    apic_30 { pt3dadd( 428.677, 416.139, 27.7032, 0.6346 ) }
    apic_30 { pt3dadd( 429.71, 416.589, 27.8768, 0.486 ) }
    apic_30 { pt3dadd( 430.707, 417.139, 28.0227, 0.3656 ) }
    apic_30 { pt3dadd( 431.702, 417.702, 28.1106, 0.3016 ) }
    apic_30 { pt3dadd( 432.742, 418.176, 28.1436, 0.3268 ) }
    apic_30 { pt3dadd( 433.802, 418.602, 28.1142, 0.3608 ) }
    apic_30 { pt3dadd( 434.846, 419.034, 27.9888, 0.4856 ) }
    apic_30 { pt3dadd( 435.903, 419.416, 27.7903, 0.418 ) }
    apic_30 { pt3dadd( 437.013, 419.657, 27.6038, 0.3706 ) }
    apic_30 { pt3dadd( 438.145, 419.822, 27.4694, 0.362 ) }
    apic_30 { pt3dadd( 439.264, 420.017, 27.3535, 0.4206 ) }
    apic_30 { pt3dadd( 440.368, 420.24, 27.2367, 0.6228 ) }
    apic_30 { pt3dadd( 441.446, 420.564, 27.2101, 0.5438 ) }
    apic_30 { pt3dadd( 442.492, 420.982, 27.3336, 0.5418 ) }
    apic_30 { pt3dadd( 443.417, 421.608, 27.5391, 0.5244 ) }
    apic_30 { pt3dadd( 444.241, 422.399, 27.7749, 0.558 ) }
    apic_30 { pt3dadd( 445.073, 423.136, 28.1086, 0.5286 ) }
    apic_30 { pt3dadd( 445.866, 423.871, 28.5684, 0.6916 ) }
    apic_30 { pt3dadd( 446.486, 424.739, 29.1074, 0.6216 ) }
    apic_30 { pt3dadd( 446.957, 425.746, 29.615, 0.6992 ) }
    apic_30 { pt3dadd( 447.367, 426.809, 30.0068, 0.7512 ) }
    apic_30 { pt3dadd( 447.944, 427.77, 30.3486, 0.607 ) }
    apic_30 { pt3dadd( 448.693, 428.609, 30.7076, 0.5932 ) }
    apic_30 { pt3dadd( 449.569, 429.308, 31.082, 0.4794 ) }
    apic_30 { pt3dadd( 450.519, 429.923, 31.4734, 0.4702 ) }
    apic_30 { pt3dadd( 451.538, 430.406, 31.89, 0.6144 ) }
    apic_30 { pt3dadd( 452.604, 430.776, 32.3369, 0.5582 ) }
    apic_30 { pt3dadd( 453.672, 430.962, 32.844, 0.4228 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_30 { pt3dadd( 454.653, 431.376, 33.3808, 0.3244 ) }
    apic_30 { pt3dadd( 455.449, 432.163, 33.8534, 0.3146 ) }
    apic_30 { pt3dadd( 456.223, 433.004, 34.2499, 0.3746 ) }
    apic_30 { pt3dadd( 457.019, 433.782, 34.6545, 0.3358 ) }
    apic_30 { pt3dadd( 457.926, 434.426, 34.9594, 0.3036 ) }
    apic_30 { pt3dadd( 458.941, 434.829, 35.2845, 0.2814 ) }
    apic_30 { pt3dadd( 459.974, 435.173, 35.6751, 0.2872 ) }
    apic_30 { pt3dadd( 461.077, 435.371, 36.0713, 0.299 ) }
    apic_30 { pt3dadd( 462.209, 435.461, 36.4277, 0.3148 ) }
    apic_30 { pt3dadd( 463.349, 435.543, 36.7153, 0.3746 ) }
    apic_30 { pt3dadd( 464.475, 435.604, 36.869, 0.3362 ) }
    apic_30 { pt3dadd( 465.618, 435.599, 36.9723, 0.304 ) }
    apic_30 { pt3dadd( 466.754, 435.538, 37.1006, 0.2822 ) }
    apic_30 { pt3dadd( 467.891, 435.506, 37.266, 0.2888 ) }
    apic_30 { pt3dadd( 469.021, 435.674, 37.4562, 0.3006 ) }
    apic_30 { pt3dadd( 470.15, 435.847, 37.6762, 0.3236 ) }
    apic_30 { pt3dadd( 471.286, 435.903, 37.9397, 0.3622 ) }
    apic_30 { pt3dadd( 472.424, 435.923, 38.2287, 0.4518 ) }
    apic_30 { pt3dadd( 473.555, 435.938, 38.5428, 0.5306 ) }
    apic_30 { pt3dadd( 474.67, 435.938, 38.9077, 0.4168 ) }
    apic_30 { pt3dadd( 475.782, 435.938, 39.3159, 0.322 ) }
    apic_30 { pt3dadd( 476.924, 435.938, 39.6536, 0.2684 ) }
    apic_30 { pt3dadd( 478.068, 435.938, 39.9193, 0.2626 ) }
    apic_30 { pt3dadd( 479.212, 435.917, 40.1229, 0.2542 ) }
    apic_30 { pt3dadd( 480.303, 435.578, 40.287, 0.2288 ) }
    apic_30 { pt3dadd( 481.355, 435.481, 40.9601, 0.2288 ) }
    // Section: apic_29, id: apic_29, parent: apic_28 (entry count 26/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 393.421, 415.179, 21.9971, 0.8798 ) }
    apic_29 { pt3dadd( 394.388, 414.388, 21.5382, 0.2288 ) }
    apic_29 { pt3dadd( 395.25, 413.651, 21.3422, 0.7224 ) }
    apic_29 { pt3dadd( 396.077, 412.898, 21.0812, 0.9518 ) }
    apic_29 { pt3dadd( 396.898, 412.127, 20.8032, 0.9 ) }
    apic_29 { pt3dadd( 397.767, 411.441, 20.501, 0.8314 ) }
    apic_29 { pt3dadd( 398.462, 410.614, 20.2947, 0.5734 ) }
    apic_29 { pt3dadd( 399.004, 409.64, 20.246, 0.501 ) }
    apic_29 { pt3dadd( 399.648, 408.743, 20.3151, 0.4546 ) }
    apic_29 { pt3dadd( 400.54, 408.138, 20.3064, 0.3998 ) }
    apic_29 { pt3dadd( 401.438, 407.495, 20.1771, 0.3766 ) }
    apic_29 { pt3dadd( 402.312, 406.79, 19.9752, 0.4082 ) }
    apic_29 { pt3dadd( 403.195, 406.071, 19.7504, 0.5626 ) }
    apic_29 { pt3dadd( 404.092, 405.363, 19.5364, 0.612 ) }
    apic_29 { pt3dadd( 405.021, 404.73, 19.406, 0.4828 ) }
    apic_29 { pt3dadd( 406.078, 404.534, 19.3514, 0.3988 ) }
    apic_29 { pt3dadd( 406.913, 404.009, 19.161, 0.4022 ) }
    apic_29 { pt3dadd( 407.645, 403.167, 18.9199, 0.5518 ) }
    apic_29 { pt3dadd( 407.902, 402.086, 18.6788, 0.5916 ) }
    apic_29 { pt3dadd( 407.71, 400.969, 18.3806, 0.4452 ) }
    apic_29 { pt3dadd( 407.187, 400.107, 17.8542, 0.3278 ) }
    apic_29 { pt3dadd( 406.549, 399.202, 17.2945, 0.279 ) }
    apic_29 { pt3dadd( 405.625, 398.832, 16.6799, 0.2828 ) }
    apic_29 { pt3dadd( 405.177, 398.595, 15.7763, 0.2896 ) }
    apic_29 { pt3dadd( 405.501, 397.903, 14.8756, 0.3034 ) }
    apic_29 { pt3dadd( 406.48, 397.32, 14.159, 0.323 ) }
    apic_29 { pt3dadd( 407.247, 396.568, 13.5643, 0.3896 ) }
    apic_29 { pt3dadd( 407.558, 395.514, 13.0992, 0.3652 ) }
    apic_29 { pt3dadd( 407.579, 394.373, 12.8159, 0.3524 ) }
    apic_29 { pt3dadd( 407.335, 393.271, 12.6798, 0.3984 ) }
    apic_29 { pt3dadd( 406.908, 392.21, 12.616, 0.3748 ) }
    apic_29 { pt3dadd( 406.483, 391.147, 12.5944, 0.4014 ) }
    apic_29 { pt3dadd( 406.085, 390.075, 12.6218, 0.3384 ) }
    apic_29 { pt3dadd( 405.667, 389.012, 12.6896, 0.3084 ) }
    apic_29 { pt3dadd( 405.385, 387.915, 12.7851, 0.2902 ) }
    apic_29 { pt3dadd( 405.345, 386.775, 12.906, 0.3046 ) }
    apic_29 { pt3dadd( 405.832, 385.863, 13.0435, 0.3248 ) }
    apic_29 { pt3dadd( 406.806, 385.87, 13.2681, 0.3936 ) }
    apic_29 { pt3dadd( 407.493, 385.738, 13.7301, 0.3706 ) }
    apic_29 { pt3dadd( 408.088, 384.894, 14.1823, 0.3702 ) }
    apic_29 { pt3dadd( 408.497, 383.855, 14.4178, 0.3952 ) }
    apic_29 { pt3dadd( 408.366, 382.858, 14.3528, 0.5436 ) }
    apic_29 { pt3dadd( 408.016, 381.882, 14.0661, 0.553 ) }
    apic_29 { pt3dadd( 407.77, 380.775, 13.7581, 0.4882 ) }
    apic_29 { pt3dadd( 408.068, 379.794, 13.6382, 0.5376 ) }
    apic_29 { pt3dadd( 408.845, 379.045, 13.6506, 0.493 ) }
    apic_29 { pt3dadd( 409.28, 378.063, 13.6142, 0.3864 ) }
    apic_29 { pt3dadd( 408.818, 377.132, 13.3882, 0.3032 ) }
    apic_29 { pt3dadd( 408.919, 376.199, 13.1398, 0.2806 ) }
    apic_29 { pt3dadd( 409.618, 375.329, 12.8005, 0.2856 ) }
    apic_29 { pt3dadd( 409.944, 374.379, 12.248, 0.2944 ) }
    apic_29 { pt3dadd( 410.46, 373.465, 11.6483, 0.3134 ) }
    apic_29 { pt3dadd( 411.49, 373.539, 11.1342, 0.3362 ) }
    apic_29 { pt3dadd( 412.388, 373.205, 10.5465, 0.4406 ) }
    apic_29 { pt3dadd( 413.016, 372.331, 9.9691, 0.3304 ) }
    apic_29 { pt3dadd( 414.031, 371.83, 9.1022, 0.2288 ) }
    // Section: apic_27, id: apic_27, parent: apic_25 (entry count 82/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 361.819, 413.042, 17.0666, 0.579 ) }
    apic_27 { pt3dadd( 361.878, 412.237, 15.6195, 0.408 ) }
    apic_27 { pt3dadd( 362.459, 411.524, 14.9338, 0.3278 ) }
    apic_27 { pt3dadd( 363.212, 410.776, 14.2332, 0.4 ) }
    apic_27 { pt3dadd( 363.999, 409.987, 13.7183, 0.3776 ) }
    apic_27 { pt3dadd( 364.984, 409.451, 13.3263, 0.4068 ) }
    apic_27 { pt3dadd( 365.84, 408.737, 12.9436, 0.3482 ) }
    apic_27 { pt3dadd( 366.515, 407.868, 12.654, 0.3276 ) }
    apic_27 { pt3dadd( 366.403, 406.93, 12.4919, 0.3206 ) }
    apic_27 { pt3dadd( 365.588, 406.316, 12.21, 0.3852 ) }
    apic_27 { pt3dadd( 365.489, 405.442, 11.8205, 0.356 ) }
    apic_27 { pt3dadd( 366.269, 404.656, 11.4576, 0.3418 ) }
    apic_27 { pt3dadd( 366.917, 403.727, 11.1398, 0.3476 ) }
    apic_27 { pt3dadd( 367.023, 402.612, 10.8539, 0.4322 ) }
    apic_27 { pt3dadd( 366.288, 401.785, 10.5714, 0.4576 ) }
    apic_27 { pt3dadd( 365.49, 401.229, 10.1385, 0.4576 ) }
    apic_27 { pt3dadd( 365.023, 400.221, 9.1022, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_25 (entry count 99/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 361.819, 413.042, 17.0666, 0.579 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_26 { pt3dadd( 361.796, 413.285, 15.9457, 0.2288 ) }
    apic_26 { pt3dadd( 361.709, 414.145, 15.3563, 0.3348 ) }
    apic_26 { pt3dadd( 361.6, 415.128, 14.6891, 0.3894 ) }
    apic_26 { pt3dadd( 361.585, 416.259, 14.152, 0.4708 ) }
    apic_26 { pt3dadd( 361.84, 417.367, 13.7329, 0.7186 ) }
    apic_26 { pt3dadd( 361.993, 418.458, 13.4574, 0.709 ) }
    apic_26 { pt3dadd( 361.592, 419.438, 13.2163, 0.9076 ) }
    apic_26 { pt3dadd( 360.808, 420.214, 12.859, 0.9134 ) }
    apic_26 { pt3dadd( 360.225, 420.725, 12.2441, 0.6242 ) }
    apic_26 { pt3dadd( 360.657, 421.211, 11.4444, 0.3984 ) }
    apic_26 { pt3dadd( 360.846, 422.195, 10.6551, 0.305 ) }
    apic_26 { pt3dadd( 360.342, 423.031, 9.8521, 0.3814 ) }
    apic_26 { pt3dadd( 359.987, 424.033, 9.1022, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_20 (entry count 13/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 350.023, 422.741, 15.4899, 0.8776 ) }
    apic_22 { pt3dadd( 348.695, 422.741, 15.122, 0.7582 ) }
    apic_22 { pt3dadd( 347.566, 422.741, 15.0086, 0.5908 ) }
    apic_22 { pt3dadd( 346.478, 422.922, 14.9671, 0.4752 ) }
    apic_22 { pt3dadd( 345.466, 423.438, 14.8534, 0.4592 ) }
    apic_22 { pt3dadd( 344.355, 423.63, 14.6166, 0.6114 ) }
    apic_22 { pt3dadd( 343.663, 423.231, 14.0504, 0.6974 ) }
    apic_22 { pt3dadd( 343.573, 422.201, 13.3865, 0.6638 ) }
    apic_22 { pt3dadd( 342.992, 421.262, 12.8769, 0.6234 ) }
    apic_22 { pt3dadd( 342.046, 420.674, 12.3978, 0.6712 ) }
    apic_22 { pt3dadd( 341.076, 420.452, 11.8149, 0.6228 ) }
    apic_22 { pt3dadd( 340.013, 420.485, 11.2403, 0.741 ) }
    apic_22 { pt3dadd( 338.88, 420.589, 10.7957, 0.8656 ) }
    apic_22 { pt3dadd( 337.743, 420.704, 10.4594, 0.871 ) }
    apic_22 { pt3dadd( 336.622, 420.92, 10.1968, 0.8284 ) }
    apic_22 { pt3dadd( 335.543, 421.287, 9.9963, 0.7782 ) }
    apic_22 { pt3dadd( 334.527, 421.786, 9.8734, 0.7748 ) }
    apic_22 { pt3dadd( 333.608, 422.445, 9.8095, 0.5612 ) }
    apic_22 { pt3dadd( 332.66, 423.063, 9.7098, 0.4836 ) }
    apic_22 { pt3dadd( 331.601, 423.478, 9.5967, 0.3976 ) }
    apic_22 { pt3dadd( 330.555, 423.871, 9.4413, 0.4134 ) }
    apic_22 { pt3dadd( 329.741, 424.578, 9.2786, 0.5086 ) }
    apic_22 { pt3dadd( 328.919, 425.208, 9.2579, 0.594 ) }
    apic_22 { pt3dadd( 328.108, 425.879, 9.2518, 0.7366 ) }
    apic_22 { pt3dadd( 327.174, 426.448, 9.1832, 0.6186 ) }
    apic_22 { pt3dadd( 326.074, 426.663, 9.0297, 0.6534 ) }
    apic_22 { pt3dadd( 325.073, 427.12, 8.7987, 0.6336 ) }
    apic_22 { pt3dadd( 324.204, 427.72, 8.4423, 0.5486 ) }
    apic_22 { pt3dadd( 323.173, 428.148, 8.1175, 0.3954 ) }
    apic_22 { pt3dadd( 322.042, 428.23, 7.9344, 0.3208 ) }
    apic_22 { pt3dadd( 320.9, 428.233, 7.8478, 0.308 ) }
    apic_22 { pt3dadd( 319.763, 428.134, 7.8313, 0.3616 ) }
    apic_22 { pt3dadd( 318.673, 427.847, 7.8322, 0.3134 ) }
    apic_22 { pt3dadd( 317.842, 428.453, 8.0475, 0.2542 ) }
    apic_22 { pt3dadd( 317.401, 429.379, 9.0306, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 48/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 350.023, 422.741, 15.4899, 0.8776 ) }
    apic_21 { pt3dadd( 349.508, 422.858, 14.1574, 0.6864 ) }
    apic_21 { pt3dadd( 349.387, 423.685, 13.5198, 0.4642 ) }
    apic_21 { pt3dadd( 349.004, 424.668, 12.9251, 0.364 ) }
    apic_21 { pt3dadd( 348.221, 425.246, 12.2175, 0.3404 ) }
    apic_21 { pt3dadd( 347.323, 425.32, 11.5254, 0.4244 ) }
    apic_21 { pt3dadd( 346.206, 425.14, 11.0163, 0.418 ) }
    apic_21 { pt3dadd( 345.168, 425.458, 10.6212, 0.507 ) }
    apic_21 { pt3dadd( 344.202, 426.054, 10.3499, 0.4106 ) }
    apic_21 { pt3dadd( 343.201, 426.6, 10.166, 0.3578 ) }
    apic_21 { pt3dadd( 342.81, 427.482, 9.9537, 0.3342 ) }
    apic_21 { pt3dadd( 342.802, 428.599, 9.7896, 0.3866 ) }
    apic_21 { pt3dadd( 342.441, 429.637, 9.5875, 0.4756 ) }
    apic_21 { pt3dadd( 341.64, 430.421, 9.3562, 0.6796 ) }
    apic_21 { pt3dadd( 341.517, 431.44, 9.0224, 0.869 ) }
    apic_21 { pt3dadd( 341.618, 432.561, 8.6898, 0.7626 ) }
    apic_21 { pt3dadd( 340.865, 433.257, 8.5506, 0.5 ) }
    apic_21 { pt3dadd( 339.806, 433.49, 8.339, 0.3304 ) }
    apic_21 { pt3dadd( 338.678, 433.575, 8.1329, 0.305 ) }
    apic_21 { pt3dadd( 337.538, 433.498, 7.9016, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_3 (entry count 68/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 356.4, 408.141, 24.0848, 1.3728 ) }
    apic_19 { pt3dadd( 356.944, 407.179, 25.5192, 0.2288 ) }
    apic_19 { pt3dadd( 357.59, 406.281, 26.1201, 0.5166 ) }
    apic_19 { pt3dadd( 358.4, 405.518, 26.8696, 0.5008 ) }
    apic_19 { pt3dadd( 359.297, 404.881, 27.7626, 0.4008 ) }
    apic_19 { pt3dadd( 360.04, 404.275, 28.854, 0.331 ) }
    apic_19 { pt3dadd( 360.551, 403.633, 30.1888, 0.3268 ) }
    apic_19 { pt3dadd( 361.125, 403.561, 31.7428, 0.3968 ) }
    apic_19 { pt3dadd( 361.091, 404.142, 33.4113, 0.3784 ) }
    apic_19 { pt3dadd( 360.927, 405.078, 35.0638, 0.3766 ) }
    apic_19 { pt3dadd( 360.902, 406.109, 36.6405, 0.4454 ) }
    apic_19 { pt3dadd( 360.902, 407.176, 38.113, 0.4514 ) }
    apic_19 { pt3dadd( 360.902, 408.267, 39.4817, 0.5946 ) }
    apic_19 { pt3dadd( 360.969, 409.164, 40.9251, 0.4492 ) }
    apic_19 { pt3dadd( 361.398, 409.368, 42.5334, 0.3446 ) }
    apic_19 { pt3dadd( 362.102, 409.635, 44.1854, 0.2626 ) }
    apic_19 { pt3dadd( 362.697, 409.943, 45.8466, 0.2542 ) }
    apic_19 { pt3dadd( 362.993, 410.29, 47.4928, 0.2288 ) }
    apic_19 { pt3dadd( 364.109, 410.296, 50.0623, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 87/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 356.4, 408.141, 24.0848, 1.3728 ) }
    apic_4 { pt3dadd( 356.75, 406.559, 24.4012, 1.0296 ) }
    apic_4 { pt3dadd( 356.745, 405.43, 24.5543, 1.0296 ) }
    apic_4 { pt3dadd( 356.411, 404.363, 24.7724, 1.0296 ) }
    apic_4 { pt3dadd( 355.794, 403.4, 24.946, 1.0296 ) }
    apic_4 { pt3dadd( 355.188, 402.43, 25.1936, 1.0296 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 333.776, 430.625, 45.7173, 0.7106 ) }
    dend_18 { pt3dadd( 332.689, 430.542, 46.6698, 0.5332 ) }
    dend_18 { pt3dadd( 331.704, 430.608, 47.1156, 0.45 ) }
    dend_18 { pt3dadd( 330.982, 430.966, 47.7814, 0.4736 ) }
    dend_18 { pt3dadd( 329.923, 431.36, 48.3778, 0.5704 ) }
    dend_18 { pt3dadd( 328.793, 431.534, 48.9213, 0.4924 ) }
    dend_18 { pt3dadd( 327.678, 431.725, 49.4651, 0.454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 326.586, 431.789, 50.0592, 0.5532 ) }
    dend_18 { pt3dadd( 325.502, 431.675, 50.706, 0.5946 ) }
    dend_18 { pt3dadd( 324.436, 431.477, 51.403, 0.451 ) }
    dend_18 { pt3dadd( 323.383, 431.388, 52.1545, 0.3378 ) }
    dend_18 { pt3dadd( 322.316, 431.684, 52.9343, 0.2986 ) }
    dend_18 { pt3dadd( 321.259, 432.03, 53.7202, 0.314 ) }
    dend_18 { pt3dadd( 320.182, 432.287, 54.5017, 0.3732 ) }
    dend_18 { pt3dadd( 319.079, 432.393, 55.2838, 0.3334 ) }
    dend_18 { pt3dadd( 318.45, 432.647, 56.2108, 0.299 ) }
    dend_18 { pt3dadd( 317.76, 432.837, 57.2569, 0.2728 ) }
    dend_18 { pt3dadd( 316.868, 433.32, 58.2364, 0.2712 ) }
    dend_18 { pt3dadd( 315.854, 433.69, 58.9168, 0.2684 ) }
    dend_18 { pt3dadd( 314.952, 434.324, 59.4538, 0.2626 ) }
    dend_18 { pt3dadd( 313.854, 434.551, 59.8805, 0.2542 ) }
    dend_18 { pt3dadd( 312.734, 434.507, 60.2328, 0.2288 ) }
    dend_18 { pt3dadd( 311.678, 434.871, 60.9563, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 16/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 333.776, 430.625, 45.7173, 0.7106 ) }
    dend_17 { pt3dadd( 332.982, 429.558, 46.8476, 0.9152 ) }
    dend_17 { pt3dadd( 332.324, 428.644, 47.2968, 0.5294 ) }
    dend_17 { pt3dadd( 332.084, 427.623, 47.8643, 0.3522 ) }
    dend_17 { pt3dadd( 332.427, 426.63, 48.529, 0.277 ) }
    dend_17 { pt3dadd( 332.878, 425.665, 49.2559, 0.2792 ) }
    dend_17 { pt3dadd( 333.556, 424.83, 50.0013, 0.2828 ) }
    dend_17 { pt3dadd( 334.029, 423.824, 50.5338, 0.291 ) }
    dend_17 { pt3dadd( 334.389, 422.742, 50.969, 0.2994 ) }
    dend_17 { pt3dadd( 334.94, 421.875, 51.4791, 0.3476 ) }
    dend_17 { pt3dadd( 335.771, 421.231, 52.0206, 0.2796 ) }
    dend_17 { pt3dadd( 336.852, 420.91, 53.0544, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_4 (entry count 28/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 355.188, 402.43, 25.1936, 1.0296 ) }
    apic_18 { pt3dadd( 353.734, 402.155, 24.0425, 0.2288 ) }
    apic_18 { pt3dadd( 352.614, 402.143, 23.5878, 0.3236 ) }
    apic_18 { pt3dadd( 351.559, 402.117, 23.0297, 0.3906 ) }
    apic_18 { pt3dadd( 350.5, 402.053, 22.4087, 0.367 ) }
    apic_18 { pt3dadd( 349.366, 402.085, 21.856, 0.3558 ) }
    apic_18 { pt3dadd( 348.315, 402.417, 21.3685, 0.4048 ) }
    apic_18 { pt3dadd( 347.433, 403.096, 20.9079, 0.3862 ) }
    apic_18 { pt3dadd( 346.471, 403.158, 20.5033, 0.4238 ) }
    apic_18 { pt3dadd( 345.411, 402.727, 20.169, 0.375 ) }
    apic_18 { pt3dadd( 344.303, 402.528, 19.8696, 0.4016 ) }
    apic_18 { pt3dadd( 343.178, 402.511, 19.5208, 0.339 ) }
    apic_18 { pt3dadd( 342.363, 402.121, 18.9946, 0.3096 ) }
    apic_18 { pt3dadd( 342.484, 401.159, 18.4271, 0.292 ) }
    apic_18 { pt3dadd( 341.941, 400.386, 17.813, 0.308 ) }
    apic_18 { pt3dadd( 341.029, 401.01, 17.3337, 0.3314 ) }
    apic_18 { pt3dadd( 339.928, 401.232, 16.9999, 0.4064 ) }
    apic_18 { pt3dadd( 338.956, 401.426, 16.553, 0.3892 ) }
    apic_18 { pt3dadd( 338.061, 400.928, 16.0493, 0.4292 ) }
    apic_18 { pt3dadd( 336.956, 400.776, 15.6246, 0.385 ) }
    apic_18 { pt3dadd( 335.853, 401.035, 15.3597, 0.42 ) }
    apic_18 { pt3dadd( 334.729, 401.194, 15.19, 0.3744 ) }
    apic_18 { pt3dadd( 333.59, 401.24, 15.0391, 0.3706 ) }
    apic_18 { pt3dadd( 332.465, 401.147, 14.8453, 0.4258 ) }
    apic_18 { pt3dadd( 331.355, 400.985, 14.6224, 0.4576 ) }
    apic_18 { pt3dadd( 330.302, 400.723, 14.4329, 0.4 ) }
    apic_18 { pt3dadd( 329.461, 401.096, 14.0658, 0.4008 ) }
    apic_18 { pt3dadd( 329.474, 401.975, 13.4767, 0.3378 ) }
    apic_18 { pt3dadd( 329.621, 402.935, 12.8257, 0.307 ) }
    apic_18 { pt3dadd( 329.145, 403.923, 12.2732, 0.2874 ) }
    apic_18 { pt3dadd( 328.247, 404.57, 11.8619, 0.2994 ) }
    apic_18 { pt3dadd( 327.152, 404.66, 11.573, 0.3156 ) }
    apic_18 { pt3dadd( 326.183, 404.165, 11.4464, 0.376 ) }
    apic_18 { pt3dadd( 325.237, 403.607, 11.4467, 0.3384 ) }
    apic_18 { pt3dadd( 324.197, 403.688, 11.408, 0.3082 ) }
    apic_18 { pt3dadd( 323.555, 404.37, 11.1496, 0.291 ) }
    apic_18 { pt3dadd( 322.639, 404.403, 10.7626, 0.2994 ) }
    apic_18 { pt3dadd( 321.659, 403.879, 10.3701, 0.3476 ) }
    apic_18 { pt3dadd( 320.568, 403.539, 10.085, 0.2796 ) }
    apic_18 { pt3dadd( 319.683, 402.968, 10.2399, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 68/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 355.188, 402.43, 25.1936, 1.0296 ) }
    apic_5 { pt3dadd( 354.989, 401.315, 25.0799, 0.9152 ) }
    apic_5 { pt3dadd( 355.019, 400.175, 24.9357, 0.9152 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 71/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 355.019, 400.175, 24.9357, 0.9152 ) }
    apic_7 { pt3dadd( 354.634, 398.909, 25.0214, 0.8008 ) }
    apic_7 { pt3dadd( 354.285, 397.819, 25.0496, 0.8008 ) }
    apic_7 { pt3dadd( 353.861, 396.759, 25.0597, 0.8008 ) }
    apic_7 { pt3dadd( 353.406, 395.71, 25.0491, 0.8008 ) }
    apic_7 { pt3dadd( 353.049, 394.625, 25.0138, 0.8008 ) }
    apic_7 { pt3dadd( 352.651, 393.561, 24.9505, 0.8008 ) }
    apic_7 { pt3dadd( 352.085, 392.568, 24.8559, 0.8008 ) }
    apic_7 { pt3dadd( 351.54, 391.565, 24.726, 0.8008 ) }
    apic_7 { pt3dadd( 351.052, 390.56, 24.5076, 0.8008 ) }
    apic_7 { pt3dadd( 350.582, 389.55, 24.2192, 0.8008 ) }
    apic_7 { pt3dadd( 350.186, 388.49, 23.9137, 0.8008 ) }
    apic_7 { pt3dadd( 349.908, 387.403, 23.5785, 0.8008 ) }
    apic_7 { pt3dadd( 349.599, 386.317, 23.254, 0.8008 ) }
    apic_7 { pt3dadd( 349.169, 385.259, 23.0244, 0.8008 ) }
    apic_7 { pt3dadd( 348.589, 384.275, 22.8936, 0.8008 ) }
    apic_7 { pt3dadd( 347.871, 383.385, 22.8094, 0.8008 ) }
    apic_7 { pt3dadd( 347.203, 382.456, 22.7452, 0.8008 ) }
    apic_7 { pt3dadd( 346.668, 381.446, 22.6834, 0.8008 ) }
    apic_7 { pt3dadd( 346.331, 380.354, 22.6058, 0.8008 ) }
    apic_7 { pt3dadd( 346.108, 379.261, 22.4291, 0.8008 ) }
    apic_7 { pt3dadd( 345.806, 378.166, 22.2309, 0.8008 ) }
    apic_7 { pt3dadd( 345.457, 377.076, 22.0721, 0.8008 ) }
    apic_7 { pt3dadd( 344.945, 376.053, 21.9562, 0.8008 ) }
    apic_7 { pt3dadd( 344.319, 375.096, 21.8789, 0.8008 ) }
    apic_7 { pt3dadd( 343.571, 374.231, 21.835, 0.8008 ) }
    apic_7 { pt3dadd( 342.717, 373.468, 21.8176, 0.8008 ) }
    apic_7 { pt3dadd( 341.928, 372.639, 21.8075, 0.8008 ) }
    apic_7 { pt3dadd( 341.262, 371.71, 21.7949, 0.8008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_7 { pt3dadd( 340.799, 370.663, 21.7773, 0.8008 ) }
    apic_7 { pt3dadd( 340.438, 369.577, 21.7515, 0.8008 ) }
    apic_7 { pt3dadd( 340.174, 368.465, 21.7148, 0.8008 ) }
    apic_7 { pt3dadd( 339.577, 367.489, 21.6658, 0.8008 ) }
    apic_7 { pt3dadd( 338.98, 366.514, 21.6037, 0.8008 ) }
    apic_7 { pt3dadd( 338.463, 365.494, 21.52, 0.8008 ) }
    apic_7 { pt3dadd( 338.06, 364.467, 21.3293, 0.8008 ) }
    apic_7 { pt3dadd( 337.904, 363.339, 21.1361, 0.8008 ) }
    apic_7 { pt3dadd( 337.419, 362.304, 20.9919, 0.8008 ) }
    apic_7 { pt3dadd( 336.852, 361.311, 20.8958, 0.8008 ) }
    apic_7 { pt3dadd( 336.158, 360.401, 20.846, 0.8008 ) }
    apic_7 { pt3dadd( 335.629, 359.387, 20.8424, 0.8008 ) }
    apic_7 { pt3dadd( 335.051, 358.399, 20.8813, 0.8008 ) }
    apic_7 { pt3dadd( 334.443, 357.43, 20.9437, 0.8008 ) }
    apic_7 { pt3dadd( 333.836, 356.461, 21.0241, 0.8008 ) }
    apic_7 { pt3dadd( 333.311, 355.447, 21.1422, 0.8008 ) }
    apic_7 { pt3dadd( 332.894, 354.438, 21.3808, 0.494 ) }
    apic_7 { pt3dadd( 332.834, 353.297, 21.597, 0.4226 ) }
    apic_7 { pt3dadd( 333.01, 352.167, 21.7792, 0.4336 ) }
    apic_7 { pt3dadd( 332.971, 351.024, 21.9341, 0.4424 ) }
    apic_7 { pt3dadd( 332.76, 349.9, 22.0682, 0.5158 ) }
    apic_7 { pt3dadd( 332.234, 348.886, 22.1934, 0.605 ) }
    apic_7 { pt3dadd( 332.005, 347.771, 22.3448, 0.5388 ) }
    apic_7 { pt3dadd( 331.667, 346.718, 22.5912, 0.6246 ) }
    apic_7 { pt3dadd( 331.165, 345.694, 22.8248, 0.4576 ) }
    apic_7 { pt3dadd( 330.668, 344.678, 23.0611, 0.3602 ) }
    apic_7 { pt3dadd( 330.174, 343.668, 23.2926, 0.292 ) }
    apic_7 { pt3dadd( 329.681, 342.636, 23.4189, 0.3064 ) }
    apic_7 { pt3dadd( 329.191, 341.613, 23.4072, 0.3354 ) }
    apic_7 { pt3dadd( 328.591, 340.675, 23.2579, 0.378 ) }
    apic_7 { pt3dadd( 327.951, 339.73, 23.0944, 0.5122 ) }
    apic_7 { pt3dadd( 327.451, 338.712, 22.9032, 0.4928 ) }
    apic_7 { pt3dadd( 326.948, 337.697, 22.717, 0.3862 ) }
    apic_7 { pt3dadd( 326.443, 336.687, 22.6736, 0.303 ) }
    apic_7 { pt3dadd( 325.902, 335.693, 22.7377, 0.28 ) }
    apic_7 { pt3dadd( 325.333, 334.701, 22.8194, 0.2846 ) }
    apic_7 { pt3dadd( 324.778, 333.719, 22.899, 0.2934 ) }
    apic_7 { pt3dadd( 323.816, 333.103, 22.9737, 0.3086 ) }
    apic_7 { pt3dadd( 323.027, 332.291, 23.0376, 0.34 ) }
    apic_7 { pt3dadd( 322.545, 331.254, 23.0852, 0.3852 ) }
    apic_7 { pt3dadd( 322.004, 330.246, 23.13, 0.5322 ) }
    apic_7 { pt3dadd( 321.512, 329.217, 23.1941, 0.4984 ) }
    apic_7 { pt3dadd( 321.124, 328.154, 23.315, 0.5484 ) }
    apic_7 { pt3dadd( 320.617, 327.146, 23.4755, 0.5508 ) }
    apic_7 { pt3dadd( 320.127, 326.119, 23.5735, 0.7676 ) }
    apic_7 { pt3dadd( 319.644, 325.102, 23.6057, 0.8232 ) }
    apic_7 { pt3dadd( 318.979, 324.176, 23.648, 0.7776 ) }
    apic_7 { pt3dadd( 318.212, 323.339, 23.7572, 0.9566 ) }
    apic_7 { pt3dadd( 317.469, 322.512, 23.9708, 1.1556 ) }
    apic_7 { pt3dadd( 316.816, 321.625, 24.2754, 1.2536 ) }
    apic_7 { pt3dadd( 316.203, 320.675, 24.5958, 1.1488 ) }
    apic_7 { pt3dadd( 315.575, 319.722, 24.8646, 1.2022 ) }
    apic_7 { pt3dadd( 314.849, 318.839, 25.0513, 1.241 ) }
    apic_7 { pt3dadd( 314.061, 318.01, 25.1572, 1.1466 ) }
    apic_7 { pt3dadd( 313.342, 317.124, 25.2059, 1.323 ) }
    apic_7 { pt3dadd( 312.765, 316.139, 25.2207, 1.5448 ) }
    apic_7 { pt3dadd( 312.302, 315.093, 25.2244, 1.7808 ) }
    apic_7 { pt3dadd( 311.888, 314.027, 25.2291, 1.698 ) }
    apic_7 { pt3dadd( 311.407, 312.989, 25.2389, 1.5518 ) }
    apic_7 { pt3dadd( 310.888, 311.97, 25.2543, 1.4744 ) }
    apic_7 { pt3dadd( 310.372, 310.948, 25.2762, 1.5344 ) }
    apic_7 { pt3dadd( 309.872, 309.919, 25.307, 1.5728 ) }
    apic_7 { pt3dadd( 309.446, 308.859, 25.3484, 1.5406 ) }
    apic_7 { pt3dadd( 309.127, 307.761, 25.4055, 1.5258 ) }
    apic_7 { pt3dadd( 308.838, 306.656, 25.4904, 1.0508 ) }
    apic_7 { pt3dadd( 308.611, 305.542, 25.6178, 0.9704 ) }
    apic_7 { pt3dadd( 308.471, 304.411, 25.7698, 0.8266 ) }
    apic_7 { pt3dadd( 308.243, 303.302, 25.9258, 1.2204 ) }
    apic_7 { pt3dadd( 307.73, 302.289, 26.0789, 1.0326 ) }
    apic_7 { pt3dadd( 307.062, 301.362, 26.1901, 1.0214 ) }
    apic_7 { pt3dadd( 306.439, 300.409, 26.2634, 0.9666 ) }
    apic_7 { pt3dadd( 305.98, 299.361, 26.3071, 1.4868 ) }
    apic_7 { pt3dadd( 305.473, 298.34, 26.3312, 1.7222 ) }
    apic_7 { pt3dadd( 304.818, 297.403, 26.3418, 1.579 ) }
    apic_7 { pt3dadd( 304.17, 296.461, 26.3435, 1.3828 ) }
    apic_7 { pt3dadd( 303.65, 295.456, 26.3598, 1.1386 ) }
    apic_7 { pt3dadd( 303.247, 294.409, 26.4124, 0.794 ) }
    apic_7 { pt3dadd( 302.609, 293.486, 26.4174, 0.543 ) }
    apic_7 { pt3dadd( 301.776, 292.753, 26.278, 0.4828 ) }
    apic_7 { pt3dadd( 300.915, 292.088, 25.9991, 0.6922 ) }
    apic_7 { pt3dadd( 300.079, 291.347, 25.6861, 0.6678 ) }
    apic_7 { pt3dadd( 299.451, 290.4, 25.4159, 0.7926 ) }
    apic_7 { pt3dadd( 299.029, 289.341, 25.1924, 0.888 ) }
    apic_7 { pt3dadd( 298.851, 288.227, 25.0076, 1.0366 ) }
    apic_7 { pt3dadd( 298.868, 287.1, 24.8324, 1.2198 ) }
    apic_7 { pt3dadd( 298.746, 285.987, 24.6812, 1.553 ) }
    apic_7 { pt3dadd( 298.309, 284.95, 24.6047, 1.5138 ) }
    apic_7 { pt3dadd( 297.66, 284.011, 24.6058, 1.4278 ) }
    apic_7 { pt3dadd( 297.047, 283.059, 24.7117, 1.3334 ) }
    apic_7 { pt3dadd( 296.396, 282.142, 24.9122, 1.2982 ) }
    apic_7 { pt3dadd( 295.651, 281.279, 25.1367, 1.2428 ) }
    apic_7 { pt3dadd( 294.953, 280.377, 25.3554, 1.091 ) }
    apic_7 { pt3dadd( 294.382, 279.401, 25.5892, 1.0484 ) }
    apic_7 { pt3dadd( 293.864, 278.4, 25.8339, 1.181 ) }
    apic_7 { pt3dadd( 293.319, 277.398, 26.0333, 1.3168 ) }
    apic_7 { pt3dadd( 292.75, 276.406, 26.1722, 1.1886 ) }
    apic_7 { pt3dadd( 292.22, 275.394, 26.2679, 1.1926 ) }
    apic_7 { pt3dadd( 291.746, 274.353, 26.3295, 1.1698 ) }
    apic_7 { pt3dadd( 291.324, 273.294, 26.3654, 1.046 ) }
    apic_7 { pt3dadd( 291.0, 272.197, 26.3894, 0.985 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_7 { pt3dadd( 290.654, 271.106, 26.4177, 0.9686 ) }
    apic_7 { pt3dadd( 290.254, 270.034, 26.4572, 1.382 ) }
    apic_7 { pt3dadd( 289.897, 268.951, 26.5096, 1.1396 ) }
    apic_7 { pt3dadd( 289.592, 267.849, 26.5801, 1.2394 ) }
    apic_7 { pt3dadd( 289.141, 266.815, 26.6949, 1.2764 ) }
    apic_7 { pt3dadd( 288.512, 265.88, 26.8652, 1.3764 ) }
    apic_7 { pt3dadd( 287.785, 265.009, 27.0432, 1.4104 ) }
    apic_7 { pt3dadd( 287.048, 264.136, 27.1866, 1.294 ) }
    apic_7 { pt3dadd( 286.406, 263.192, 27.2882, 1.2594 ) }
    apic_7 { pt3dadd( 285.797, 262.239, 27.3218, 1.234 ) }
    apic_7 { pt3dadd( 285.147, 261.319, 27.2972, 0.9958 ) }
    apic_7 { pt3dadd( 284.549, 260.359, 27.3244, 0.7974 ) }
    apic_7 { pt3dadd( 284.062, 259.361, 27.4786, 0.62 ) }
    apic_7 { pt3dadd( 283.592, 258.363, 27.7416, 0.512 ) }
    apic_7 { pt3dadd( 283.053, 257.397, 28.0605, 0.6124 ) }
    apic_7 { pt3dadd( 282.492, 256.421, 28.3447, 0.482 ) }
    apic_7 { pt3dadd( 282.077, 255.366, 28.5208, 0.4058 ) }
    apic_7 { pt3dadd( 281.789, 254.259, 28.5863, 0.3766 ) }
    apic_7 { pt3dadd( 281.392, 253.242, 28.4701, 0.4628 ) }
    apic_7 { pt3dadd( 280.842, 252.324, 28.1641, 0.6288 ) }
    apic_7 { pt3dadd( 280.28, 251.375, 27.776, 0.907 ) }
    apic_7 { pt3dadd( 279.842, 250.336, 27.4319, 0.8782 ) }
    apic_7 { pt3dadd( 279.43, 249.277, 27.214, 0.952 ) }
    apic_7 { pt3dadd( 278.837, 248.314, 27.085, 0.9296 ) }
    apic_7 { pt3dadd( 278.168, 247.401, 26.9679, 0.975 ) }
    apic_7 { pt3dadd( 277.632, 246.414, 26.8374, 1.0946 ) }
    apic_7 { pt3dadd( 277.213, 245.356, 26.7254, 1.1428 ) }
    apic_7 { pt3dadd( 276.812, 244.284, 26.651, 0.9312 ) }
    apic_7 { pt3dadd( 276.329, 243.251, 26.6143, 1.0852 ) }
    apic_7 { pt3dadd( 275.768, 242.255, 26.6277, 1.0072 ) }
    apic_7 { pt3dadd( 275.298, 241.234, 26.7322, 1.0244 ) }
    apic_7 { pt3dadd( 274.914, 240.174, 26.8982, 1.644 ) }
    apic_7 { pt3dadd( 274.408, 239.158, 27.0514, 1.3138 ) }
    apic_7 { pt3dadd( 273.799, 238.195, 27.1421, 1.0154 ) }
    apic_7 { pt3dadd( 273.239, 237.214, 27.1564, 0.5414 ) }
    apic_7 { pt3dadd( 272.78, 236.178, 27.139, 0.421 ) }
    apic_7 { pt3dadd( 272.345, 235.131, 27.1813, 0.4072 ) }
    apic_7 { pt3dadd( 271.855, 234.157, 27.3596, 0.507 ) }
    apic_7 { pt3dadd( 271.471, 233.135, 27.6354, 0.771 ) }
    apic_7 { pt3dadd( 271.062, 232.082, 27.9031, 0.8772 ) }
    apic_7 { pt3dadd( 270.476, 231.104, 28.1084, 0.8764 ) }
    apic_7 { pt3dadd( 269.888, 230.124, 28.233, 1.1476 ) }
    apic_7 { pt3dadd( 269.355, 229.124, 28.2447, 1.47 ) }
    apic_7 { pt3dadd( 268.832, 228.123, 28.1649, 1.3422 ) }
    apic_7 { pt3dadd( 268.294, 227.12, 28.0795, 1.1954 ) }
    apic_7 { pt3dadd( 267.726, 226.126, 28.054, 0.9432 ) }
    apic_7 { pt3dadd( 267.172, 225.136, 28.1266, 0.837 ) }
    apic_7 { pt3dadd( 266.723, 224.107, 28.3058, 0.716 ) }
    apic_7 { pt3dadd( 266.426, 223.041, 28.5813, 0.8076 ) }
    apic_7 { pt3dadd( 266.177, 221.988, 28.9405, 0.589 ) }
    apic_7 { pt3dadd( 265.935, 220.901, 29.2099, 0.4682 ) }
    apic_7 { pt3dadd( 265.532, 219.906, 29.2648, 0.4646 ) }
    apic_7 { pt3dadd( 265.008, 218.922, 29.2085, 0.531 ) }
    apic_7 { pt3dadd( 264.691, 217.831, 29.1463, 0.5308 ) }
    apic_7 { pt3dadd( 264.588, 216.781, 29.2443, 0.6692 ) }
    apic_7 { pt3dadd( 264.381, 215.694, 29.4221, 0.6864 ) }
    apic_7 { pt3dadd( 263.627, 214.868, 29.6125, 0.6864 ) }
    apic_7 { pt3dadd( 262.947, 213.961, 29.8018, 0.6864 ) }
    apic_7 { pt3dadd( 262.45, 212.933, 29.8866, 0.6864 ) }
    apic_7 { pt3dadd( 262.049, 211.897, 29.7766, 0.6864 ) }
    apic_7 { pt3dadd( 261.553, 210.886, 29.5361, 0.6864 ) }
    apic_7 { pt3dadd( 260.983, 209.931, 29.1945, 0.6864 ) }
    apic_7 { pt3dadd( 260.273, 209.041, 28.8618, 0.6864 ) }
    apic_7 { pt3dadd( 259.612, 208.106, 28.5796, 0.6864 ) }
    apic_7 { pt3dadd( 258.87, 207.237, 28.3489, 0.6864 ) }
    apic_7 { pt3dadd( 258.178, 206.346, 28.1126, 0.6864 ) }
    apic_7 { pt3dadd( 257.474, 205.462, 27.8746, 0.6864 ) }
    apic_7 { pt3dadd( 256.683, 204.639, 27.6889, 0.6864 ) }
    apic_7 { pt3dadd( 255.868, 203.836, 27.5514, 0.6864 ) }
    apic_7 { pt3dadd( 255.029, 203.059, 27.4537, 0.6864 ) }
    apic_7 { pt3dadd( 254.079, 202.422, 27.3871, 0.6864 ) }
    apic_7 { pt3dadd( 253.033, 201.98, 27.3073, 0.6864 ) }
    apic_7 { pt3dadd( 251.998, 201.494, 27.256, 0.6864 ) }
    apic_7 { pt3dadd( 251.126, 200.771, 27.2829, 0.6864 ) }
    apic_7 { pt3dadd( 250.483, 199.826, 27.3171, 0.6864 ) }
    apic_7 { pt3dadd( 249.846, 198.876, 27.3476, 0.6864 ) }
    apic_7 { pt3dadd( 249.159, 197.961, 27.3725, 0.6864 ) }
    apic_7 { pt3dadd( 248.533, 197.004, 27.3885, 0.6864 ) }
    apic_7 { pt3dadd( 248.107, 195.942, 27.3865, 0.6864 ) }
    apic_7 { pt3dadd( 247.756, 194.853, 27.3703, 0.6864 ) }
    apic_7 { pt3dadd( 247.602, 193.72, 27.3512, 0.6864 ) }
    apic_7 { pt3dadd( 247.266, 192.629, 27.3151, 0.6864 ) }
    apic_7 { pt3dadd( 246.895, 191.586, 27.2009, 0.6864 ) }
    apic_7 { pt3dadd( 246.445, 190.534, 27.1401, 0.6864 ) }
    apic_7 { pt3dadd( 246.204, 189.451, 27.2348, 0.6864 ) }
    apic_7 { pt3dadd( 245.802, 188.386, 27.3893, 0.6864 ) }
    apic_7 { pt3dadd( 245.354, 187.333, 27.5584, 0.6864 ) }
    apic_7 { pt3dadd( 244.918, 186.288, 27.7813, 0.6864 ) }
    apic_7 { pt3dadd( 244.322, 185.341, 28.0602, 0.6864 ) }
    apic_7 { pt3dadd( 243.708, 184.376, 28.2766, 0.6864 ) }
    apic_7 { pt3dadd( 243.085, 183.416, 28.4234, 0.6864 ) }
    apic_7 { pt3dadd( 242.566, 182.397, 28.5258, 0.6864 ) }
    apic_7 { pt3dadd( 242.041, 181.381, 28.5953, 0.6864 ) }
    apic_7 { pt3dadd( 241.464, 180.393, 28.6362, 0.6864 ) }
    apic_7 { pt3dadd( 240.723, 179.521, 28.6625, 0.6864 ) }
    apic_7 { pt3dadd( 239.912, 178.714, 28.6947, 0.6864 ) }
    apic_7 { pt3dadd( 239.095, 177.919, 28.8492, 0.6636 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 97/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 355.019, 400.175, 24.9357, 0.9152 ) }
    apic_6 { pt3dadd( 355.135, 399.651, 25.0645, 0.2288 ) }
    apic_6 { pt3dadd( 355.585, 398.635, 25.0858, 0.322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_6 { pt3dadd( 356.401, 397.86, 25.2283, 0.3876 ) }
    apic_6 { pt3dadd( 357.301, 397.188, 25.4803, 0.3612 ) }
    apic_6 { pt3dadd( 358.122, 396.414, 25.8112, 0.3458 ) }
    apic_6 { pt3dadd( 359.034, 395.805, 26.2385, 0.3848 ) }
    apic_6 { pt3dadd( 360.081, 395.441, 26.7324, 0.3548 ) }
    apic_6 { pt3dadd( 361.174, 395.146, 27.2168, 0.34 ) }
    apic_6 { pt3dadd( 362.293, 394.937, 27.6408, 0.3444 ) }
    apic_6 { pt3dadd( 363.424, 394.935, 28.0367, 0.4244 ) }
    apic_6 { pt3dadd( 364.52, 395.038, 28.4824, 0.4538 ) }
    apic_6 { pt3dadd( 365.576, 394.904, 28.9864, 0.3992 ) }
    apic_6 { pt3dadd( 366.535, 394.345, 29.4638, 0.3698 ) }
    apic_6 { pt3dadd( 367.398, 393.598, 29.8841, 0.4242 ) }
    apic_6 { pt3dadd( 368.411, 393.186, 30.2716, 0.4532 ) }
    apic_6 { pt3dadd( 369.528, 393.118, 30.6936, 0.3986 ) }
    apic_6 { pt3dadd( 370.595, 393.034, 31.2178, 0.3672 ) }
    apic_6 { pt3dadd( 371.667, 393.109, 31.8072, 0.4258 ) }
    apic_6 { pt3dadd( 372.723, 393.034, 32.4444, 0.4262 ) }
    apic_6 { pt3dadd( 373.812, 392.872, 33.0478, 0.4938 ) }
    apic_6 { pt3dadd( 374.946, 392.894, 33.5964, 0.5246 ) }
    apic_6 { pt3dadd( 376.035, 393.124, 34.1306, 0.5816 ) }
    apic_6 { pt3dadd( 377.088, 393.534, 34.6276, 0.459 ) }
    apic_6 { pt3dadd( 378.007, 393.738, 35.215, 0.4258 ) }
    apic_6 { pt3dadd( 378.893, 393.384, 35.8484, 0.3368 ) }
    apic_6 { pt3dadd( 379.799, 392.726, 36.4109, 0.3054 ) }
    apic_6 { pt3dadd( 380.704, 392.037, 36.8413, 0.2846 ) }
    apic_6 { pt3dadd( 381.732, 391.69, 37.0636, 0.2934 ) }
    apic_6 { pt3dadd( 382.789, 391.948, 37.1277, 0.3092 ) }
    apic_6 { pt3dadd( 383.855, 392.256, 37.2072, 0.3406 ) }
    apic_6 { pt3dadd( 384.971, 392.355, 37.3408, 0.3862 ) }
    apic_6 { pt3dadd( 386.065, 392.095, 37.4825, 0.5348 ) }
    apic_6 { pt3dadd( 387.079, 391.572, 37.6258, 0.4984 ) }
    apic_6 { pt3dadd( 388.077, 391.013, 37.7793, 0.5722 ) }
    apic_6 { pt3dadd( 389.12, 390.591, 37.9831, 0.4812 ) }
    apic_6 { pt3dadd( 390.169, 390.18, 38.2136, 0.5034 ) }
    apic_6 { pt3dadd( 391.17, 389.637, 38.4199, 0.5318 ) }
    apic_6 { pt3dadd( 392.108, 388.985, 38.5955, 0.419 ) }
    apic_6 { pt3dadd( 393.009, 388.279, 38.7411, 0.326 ) }
    apic_6 { pt3dadd( 394.009, 387.735, 38.8604, 0.2758 ) }
    apic_6 { pt3dadd( 395.072, 387.317, 38.9614, 0.2766 ) }
    apic_6 { pt3dadd( 396.053, 386.751, 39.1034, 0.2784 ) }
    apic_6 { pt3dadd( 396.889, 386.007, 39.3369, 0.2818 ) }
    apic_6 { pt3dadd( 397.819, 385.436, 39.4926, 0.2882 ) }
    apic_6 { pt3dadd( 398.766, 384.812, 39.6514, 0.2994 ) }
    apic_6 { pt3dadd( 399.818, 384.414, 39.9165, 0.3228 ) }
    apic_6 { pt3dadd( 400.653, 384.043, 40.4491, 0.3538 ) }
    apic_6 { pt3dadd( 401.681, 383.639, 41.0264, 0.4722 ) }
    apic_6 { pt3dadd( 402.746, 383.263, 41.6069, 0.3934 ) }
    apic_6 { pt3dadd( 403.842, 382.961, 42.1683, 0.3254 ) }
    apic_6 { pt3dadd( 404.926, 382.741, 42.7462, 0.2746 ) }
    apic_6 { pt3dadd( 405.982, 382.583, 43.3546, 0.2746 ) }
    apic_6 { pt3dadd( 407.104, 382.484, 43.8942, 0.2746 ) }
    apic_6 { pt3dadd( 408.246, 382.424, 44.3486, 0.2746 ) }
    apic_6 { pt3dadd( 409.387, 382.366, 44.7457, 0.2746 ) }
    apic_6 { pt3dadd( 410.523, 382.363, 45.1506, 0.2746 ) }
    apic_6 { pt3dadd( 411.658, 382.363, 45.568, 0.2746 ) }
    apic_6 { pt3dadd( 412.754, 382.478, 46.0625, 0.2746 ) }
    apic_6 { pt3dadd( 413.77, 382.72, 46.6841, 0.2744 ) }
    apic_6 { pt3dadd( 414.845, 382.676, 47.3609, 0.2744 ) }
    apic_6 { pt3dadd( 415.922, 382.448, 48.0276, 0.2742 ) }
    apic_6 { pt3dadd( 417.036, 382.35, 48.6279, 0.2736 ) }
    apic_6 { pt3dadd( 418.163, 382.327, 49.1372, 0.2728 ) }
    apic_6 { pt3dadd( 419.293, 382.232, 49.5365, 0.2712 ) }
    apic_6 { pt3dadd( 420.394, 381.919, 49.7899, 0.2684 ) }
    apic_6 { pt3dadd( 421.493, 381.604, 49.9388, 0.2626 ) }
    apic_6 { pt3dadd( 422.518, 381.096, 50.0175, 0.2542 ) }
    apic_6 { pt3dadd( 423.542, 380.585, 50.0522, 0.2288 ) }
    apic_6 { pt3dadd( 424.565, 380.072, 50.0623, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_7 (entry count 67/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 239.095, 177.919, 28.8492, 0.6636 ) }
    apic_13 { pt3dadd( 238.643, 176.605, 28.2192, 0.6636 ) }
    apic_13 { pt3dadd( 238.222, 175.566, 27.9462, 0.6636 ) }
    apic_13 { pt3dadd( 237.595, 174.624, 27.6979, 0.6636 ) }
    apic_13 { pt3dadd( 236.818, 173.785, 27.491, 0.6636 ) }
    apic_13 { pt3dadd( 236.014, 172.972, 27.3216, 0.6636 ) }
    apic_13 { pt3dadd( 235.217, 172.153, 27.1796, 0.6636 ) }
    apic_13 { pt3dadd( 234.466, 171.296, 27.0407, 0.6636 ) }
    apic_13 { pt3dadd( 233.853, 170.362, 26.8464, 0.6636 ) }
    apic_13 { pt3dadd( 233.33, 169.361, 26.6372, 0.6636 ) }
    apic_13 { pt3dadd( 232.735, 168.388, 26.4608, 0.6636 ) }
    apic_13 { pt3dadd( 231.938, 167.589, 26.3038, 0.6636 ) }
    apic_13 { pt3dadd( 230.999, 166.943, 26.1926, 0.6636 ) }
    apic_13 { pt3dadd( 230.095, 166.255, 26.1694, 0.6636 ) }
    apic_13 { pt3dadd( 229.331, 165.414, 26.1988, 0.6636 ) }
    apic_13 { pt3dadd( 228.752, 164.434, 26.2374, 0.6636 ) }
    apic_13 { pt3dadd( 228.32, 163.377, 26.273, 0.6636 ) }
    apic_13 { pt3dadd( 227.937, 162.299, 26.3024, 0.6636 ) }
    apic_13 { pt3dadd( 227.56, 161.219, 26.3211, 0.6636 ) }
    apic_13 { pt3dadd( 227.122, 160.163, 26.3287, 0.6636 ) }
    apic_13 { pt3dadd( 226.579, 159.158, 26.3326, 0.6636 ) }
    apic_13 { pt3dadd( 226.008, 158.167, 26.3376, 0.6636 ) }
    apic_13 { pt3dadd( 225.449, 157.168, 26.3446, 0.6636 ) }
    apic_13 { pt3dadd( 224.828, 156.21, 26.3544, 0.6636 ) }
    apic_13 { pt3dadd( 224.11, 155.321, 26.3679, 0.6636 ) }
    apic_13 { pt3dadd( 223.435, 154.4, 26.3869, 0.6636 ) }
    apic_13 { pt3dadd( 223.035, 153.343, 26.4146, 0.6636 ) }
    apic_13 { pt3dadd( 222.816, 152.221, 26.4519, 0.6636 ) }
    apic_13 { pt3dadd( 222.563, 151.105, 26.5009, 0.6636 ) }
    apic_13 { pt3dadd( 222.176, 150.033, 26.5695, 0.6636 ) }
    apic_13 { pt3dadd( 221.637, 149.04, 26.6896, 0.6636 ) }
    apic_13 { pt3dadd( 221.032, 148.086, 26.847, 0.6636 ) }
    apic_13 { pt3dadd( 220.409, 147.132, 26.9794, 0.6636 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_13 { pt3dadd( 219.877, 146.122, 27.0542, 0.6636 ) }
    apic_13 { pt3dadd( 219.462, 145.057, 27.0648, 0.6636 ) }
    apic_13 { pt3dadd( 219.039, 143.994, 27.0088, 0.6636 ) }
    apic_13 { pt3dadd( 218.47, 143.008, 26.8747, 0.6636 ) }
    apic_13 { pt3dadd( 217.768, 142.131, 26.6353, 0.6636 ) }
    apic_13 { pt3dadd( 217.072, 141.246, 26.3225, 0.6636 ) }
    apic_13 { pt3dadd( 216.613, 140.233, 25.9563, 0.6636 ) }
    apic_13 { pt3dadd( 216.317, 139.144, 25.5772, 0.6636 ) }
    apic_13 { pt3dadd( 216.144, 138.018, 25.2381, 0.6636 ) }
    apic_13 { pt3dadd( 216.107, 136.888, 24.913, 0.6636 ) }
    apic_13 { pt3dadd( 216.129, 135.76, 24.6044, 0.6636 ) }
    apic_13 { pt3dadd( 216.281, 134.633, 24.3552, 0.6636 ) }
    apic_13 { pt3dadd( 216.47, 133.51, 24.1542, 0.6636 ) }
    apic_13 { pt3dadd( 216.548, 132.389, 23.9714, 0.6636 ) }
    apic_13 { pt3dadd( 216.544, 131.25, 23.8622, 0.6636 ) }
    apic_13 { pt3dadd( 216.476, 130.128, 23.9131, 0.6636 ) }
    apic_13 { pt3dadd( 216.174, 129.048, 24.0881, 0.6636 ) }
    apic_13 { pt3dadd( 215.681, 128.039, 24.3496, 0.6636 ) }
    apic_13 { pt3dadd( 215.054, 127.102, 24.6576, 0.6636 ) }
    apic_13 { pt3dadd( 214.414, 126.157, 24.9446, 0.6636 ) }
    apic_13 { pt3dadd( 213.918, 125.128, 25.1745, 0.6636 ) }
    apic_13 { pt3dadd( 213.49, 124.068, 25.3464, 0.6636 ) }
    apic_13 { pt3dadd( 213.062, 123.011, 25.4974, 0.6636 ) }
    apic_13 { pt3dadd( 212.695, 121.954, 25.6833, 0.6636 ) }
    apic_13 { pt3dadd( 212.496, 120.857, 25.8958, 0.6636 ) }
    apic_13 { pt3dadd( 212.445, 119.72, 26.0319, 0.6636 ) }
    apic_13 { pt3dadd( 212.442, 118.626, 26.0053, 0.6636 ) }
    apic_13 { pt3dadd( 212.447, 117.5, 25.9087, 0.6636 ) }
    apic_13 { pt3dadd( 212.477, 116.358, 25.8269, 0.6636 ) }
    apic_13 { pt3dadd( 212.681, 115.235, 25.7886, 0.6636 ) }
    apic_13 { pt3dadd( 213.032, 114.15, 25.8297, 0.6636 ) }
    apic_13 { pt3dadd( 213.593, 113.247, 26.0686, 0.6636 ) }
    apic_13 { pt3dadd( 214.421, 112.495, 26.3883, 0.6636 ) }
    apic_13 { pt3dadd( 214.787, 111.445, 26.6056, 0.6636 ) }
    apic_13 { pt3dadd( 215.083, 110.341, 26.7938, 0.6636 ) }
    apic_13 { pt3dadd( 215.08, 109.213, 27.0262, 0.6636 ) }
    apic_13 { pt3dadd( 214.729, 108.153, 27.3056, 0.6636 ) }
    apic_13 { pt3dadd( 214.359, 107.08, 27.5786, 0.6636 ) }
    apic_13 { pt3dadd( 214.341, 105.971, 27.8981, 0.6636 ) }
    apic_13 { pt3dadd( 214.677, 104.88, 28.1663, 0.6636 ) }
    apic_13 { pt3dadd( 215.271, 103.902, 28.3559, 0.6636 ) }
    apic_13 { pt3dadd( 215.817, 102.897, 28.4718, 0.6636 ) }
    apic_13 { pt3dadd( 215.675, 101.764, 28.532, 0.6636 ) }
    apic_13 { pt3dadd( 215.276, 100.692, 28.5572, 0.6636 ) }
    apic_13 { pt3dadd( 214.734, 99.684, 28.5606, 0.6636 ) }
    apic_13 { pt3dadd( 214.301, 98.6254, 28.5608, 0.6636 ) }
    apic_13 { pt3dadd( 214.293, 97.4814, 28.5622, 0.6636 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 47/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 239.095, 177.919, 28.8492, 0.6636 ) }
    apic_8 { pt3dadd( 237.793, 177.052, 29.6338, 0.6636 ) }
    apic_8 { pt3dadd( 236.9, 176.494, 30.0219, 0.6636 ) }
    apic_8 { pt3dadd( 235.892, 175.978, 30.291, 0.6636 ) }
    apic_8 { pt3dadd( 234.898, 175.437, 30.3884, 0.6636 ) }
    apic_8 { pt3dadd( 233.969, 174.791, 30.3461, 0.6636 ) }
    apic_8 { pt3dadd( 232.988, 174.247, 30.1748, 0.6636 ) }
    apic_8 { pt3dadd( 231.976, 173.728, 29.9603, 0.6636 ) }
    apic_8 { pt3dadd( 231.229, 172.893, 29.7217, 0.6636 ) }
    apic_8 { pt3dadd( 230.698, 171.894, 29.524, 0.6636 ) }
    apic_8 { pt3dadd( 230.299, 170.823, 29.4412, 0.6636 ) }
    apic_8 { pt3dadd( 230.024, 169.773, 29.5652, 0.6636 ) }
    apic_8 { pt3dadd( 230.547, 169.25, 29.9681, 0.6636 ) }
    apic_8 { pt3dadd( 229.627, 168.642, 30.203, 0.6636 ) }
    apic_8 { pt3dadd( 228.706, 168.028, 30.2828, 0.6636 ) }
    apic_8 { pt3dadd( 227.83, 167.312, 30.2912, 0.6636 ) }
    apic_8 { pt3dadd( 226.962, 166.572, 30.3041, 0.6636 ) }
    apic_8 { pt3dadd( 226.038, 165.926, 30.361, 0.6636 ) }
    apic_8 { pt3dadd( 225.097, 165.291, 30.4452, 0.6636 ) }
    apic_8 { pt3dadd( 224.264, 164.512, 30.548, 0.6636 ) }
    apic_8 { pt3dadd( 223.546, 163.623, 30.6373, 0.6636 ) }
    apic_8 { pt3dadd( 222.81, 162.748, 30.6939, 0.6636 ) }
    apic_8 { pt3dadd( 222.058, 161.885, 30.7135, 0.6636 ) }
    apic_8 { pt3dadd( 221.413, 160.943, 30.7042, 0.6636 ) }
    apic_8 { pt3dadd( 220.793, 159.982, 30.6715, 0.6636 ) }
    apic_8 { pt3dadd( 220.082, 159.11, 30.5782, 0.6636 ) }
    apic_8 { pt3dadd( 219.314, 158.266, 30.5004, 0.6636 ) }
    apic_8 { pt3dadd( 218.436, 157.562, 30.5239, 0.6636 ) }
    apic_8 { pt3dadd( 217.521, 156.885, 30.5948, 0.6636 ) }
    apic_8 { pt3dadd( 216.694, 156.095, 30.6673, 0.6636 ) }
    apic_8 { pt3dadd( 216.004, 155.185, 30.7353, 0.6636 ) }
    apic_8 { pt3dadd( 215.364, 154.238, 30.7966, 0.6636 ) }
    apic_8 { pt3dadd( 214.71, 153.298, 30.8409, 0.6636 ) }
    apic_8 { pt3dadd( 214.058, 152.358, 30.8703, 0.6636 ) }
    apic_8 { pt3dadd( 213.318, 151.486, 30.9005, 0.6636 ) }
    apic_8 { pt3dadd( 212.468, 150.722, 30.9397, 0.6636 ) }
    apic_8 { pt3dadd( 211.651, 149.921, 30.9904, 0.6636 ) }
    apic_8 { pt3dadd( 210.924, 149.04, 31.0601, 0.6636 ) }
    apic_8 { pt3dadd( 210.273, 148.127, 31.2021, 0.6636 ) }
    apic_8 { pt3dadd( 209.493, 147.308, 31.3617, 0.6636 ) }
    apic_8 { pt3dadd( 208.764, 146.427, 31.4731, 0.6636 ) }
    apic_8 { pt3dadd( 208.183, 145.444, 31.5249, 0.6636 ) }
    apic_8 { pt3dadd( 207.27, 144.771, 31.4938, 0.6636 ) }
    apic_8 { pt3dadd( 206.275, 144.27, 31.348, 0.6636 ) }
    apic_8 { pt3dadd( 205.228, 143.816, 31.1889, 0.6636 ) }
    apic_8 { pt3dadd( 204.125, 143.514, 31.0638, 0.6636 ) }
    apic_8 { pt3dadd( 203.156, 142.907, 30.982, 0.6636 ) }
    apic_8 { pt3dadd( 202.201, 142.278, 30.9453, 0.6636 ) }
    apic_8 { pt3dadd( 201.167, 141.809, 30.9828, 0.6636 ) }
    apic_8 { pt3dadd( 200.171, 141.271, 31.0842, 0.6636 ) }
    apic_8 { pt3dadd( 199.232, 140.655, 31.0811, 0.6636 ) }
    apic_8 { pt3dadd( 198.351, 139.933, 31.0282, 0.6636 ) }
    apic_8 { pt3dadd( 197.452, 139.226, 30.9775, 0.6636 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_8 { pt3dadd( 196.427, 138.718, 30.9361, 0.6636 ) }
    apic_8 { pt3dadd( 195.363, 138.299, 30.907, 0.6636 ) }
    apic_8 { pt3dadd( 194.369, 137.734, 30.8994, 0.6636 ) }
    apic_8 { pt3dadd( 193.416, 137.1, 30.9257, 0.6636 ) }
    apic_8 { pt3dadd( 192.514, 136.398, 30.9764, 0.6636 ) }
    apic_8 { pt3dadd( 191.587, 135.726, 31.0475, 0.6636 ) }
    apic_8 { pt3dadd( 190.696, 135.009, 31.1422, 0.6636 ) }
    apic_8 { pt3dadd( 189.83, 134.261, 31.2665, 0.6636 ) }
    apic_8 { pt3dadd( 188.835, 133.71, 31.4737, 0.6636 ) }
    apic_8 { pt3dadd( 187.83, 133.236, 31.7918, 0.6636 ) }
    apic_8 { pt3dadd( 186.788, 132.767, 32.1056, 0.6636 ) }
    apic_8 { pt3dadd( 185.941, 131.998, 32.3963, 0.6636 ) }
    apic_8 { pt3dadd( 185.259, 131.086, 32.6906, 0.6636 ) }
    apic_8 { pt3dadd( 184.742, 130.279, 33.796, 0.6636 ) }
    // Section: apic_17, id: apic_17, parent: apic_13 (entry count 14/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 214.293, 97.4814, 28.5622, 0.6636 ) }
    apic_17 { pt3dadd( 214.617, 96.5817, 29.6184, 0.5034 ) }
    apic_17 { pt3dadd( 215.424, 95.9926, 30.0339, 0.3114 ) }
    apic_17 { pt3dadd( 216.476, 95.9718, 30.6516, 0.345 ) }
    apic_17 { pt3dadd( 217.329, 95.7767, 31.523, 0.3944 ) }
    apic_17 { pt3dadd( 217.859, 95.1365, 32.5861, 0.5486 ) }
    apic_17 { pt3dadd( 218.138, 94.1442, 33.6647, 0.5308 ) }
    apic_17 { pt3dadd( 218.391, 93.0391, 34.5948, 0.6002 ) }
    apic_17 { pt3dadd( 218.559, 91.9179, 35.3948, 0.6898 ) }
    apic_17 { pt3dadd( 218.604, 90.8708, 36.2219, 0.814 ) }
    apic_17 { pt3dadd( 218.819, 90.0724, 37.1977, 0.5628 ) }
    apic_17 { pt3dadd( 219.338, 89.4128, 38.2934, 0.3764 ) }
    apic_17 { pt3dadd( 220.043, 88.6808, 39.3862, 0.275 ) }
    apic_17 { pt3dadd( 220.9, 87.9712, 40.3642, 0.2752 ) }
    apic_17 { pt3dadd( 221.692, 87.1829, 41.2146, 0.276 ) }
    apic_17 { pt3dadd( 222.074, 86.168, 41.9482, 0.2768 ) }
    apic_17 { pt3dadd( 222.509, 85.1786, 42.5975, 0.2796 ) }
    apic_17 { pt3dadd( 223.272, 84.6037, 43.258, 0.2796 ) }
    apic_17 { pt3dadd( 223.878, 83.747, 43.8584, 0.305 ) }
    apic_17 { pt3dadd( 224.796, 83.2832, 44.24, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 34/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 214.293, 97.4814, 28.5622, 0.6636 ) }
    apic_14 { pt3dadd( 214.009, 95.7359, 28.8277, 0.572 ) }
    apic_14 { pt3dadd( 213.811, 94.6145, 28.9128, 0.572 ) }
    apic_14 { pt3dadd( 213.584, 93.5428, 28.8, 0.572 ) }
    apic_14 { pt3dadd( 213.041, 92.5789, 28.5516, 0.572 ) }
    apic_14 { pt3dadd( 212.411, 91.6628, 28.208, 0.572 ) }
    apic_14 { pt3dadd( 211.758, 90.7819, 27.7866, 0.572 ) }
    apic_14 { pt3dadd( 210.963, 89.9912, 27.368, 0.572 ) }
    apic_14 { pt3dadd( 210.168, 89.1713, 27.0925, 0.572 ) }
    apic_14 { pt3dadd( 209.441, 88.2987, 26.9937, 0.572 ) }
    apic_14 { pt3dadd( 208.829, 87.3368, 26.9567, 0.572 ) }
    apic_14 { pt3dadd( 208.286, 86.3312, 26.9668, 0.572 ) }
    apic_14 { pt3dadd( 208.076, 85.2487, 27.1244, 0.572 ) }
    apic_14 { pt3dadd( 207.851, 84.1629, 27.3675, 0.572 ) }
    apic_14 { pt3dadd( 207.303, 83.1688, 27.5097, 0.572 ) }
    apic_14 { pt3dadd( 206.443, 82.4207, 27.5792, 0.572 ) }
    apic_14 { pt3dadd( 205.692, 81.5579, 27.6321, 0.572 ) }
    apic_14 { pt3dadd( 204.93, 80.7109, 27.76, 0.572 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 52/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 184.742, 130.279, 33.796, 0.6636 ) }
    apic_12 { pt3dadd( 184.62, 129.0, 33.7243, 0.6864 ) }
    apic_12 { pt3dadd( 184.51, 127.861, 33.696, 0.4948 ) }
    apic_12 { pt3dadd( 184.401, 126.722, 33.6552, 0.409 ) }
    apic_12 { pt3dadd( 184.292, 125.584, 33.6, 0.4808 ) }
    apic_12 { pt3dadd( 184.104, 124.463, 33.4827, 0.4088 ) }
    apic_12 { pt3dadd( 183.897, 123.348, 33.3102, 0.3548 ) }
    apic_12 { pt3dadd( 183.69, 122.235, 33.1047, 0.328 ) }
    apic_12 { pt3dadd( 183.483, 121.121, 32.8871, 0.3782 ) }
    apic_12 { pt3dadd( 183.621, 119.988, 32.7272, 0.4458 ) }
    apic_12 { pt3dadd( 183.808, 118.859, 32.6354, 0.694 ) }
    apic_12 { pt3dadd( 183.995, 117.73, 32.6099, 0.5562 ) }
    apic_12 { pt3dadd( 184.184, 116.602, 32.6407, 0.458 ) }
    apic_12 { pt3dadd( 184.373, 115.474, 32.7132, 0.4294 ) }
    apic_12 { pt3dadd( 184.592, 114.374, 32.8835, 0.545 ) }
    apic_12 { pt3dadd( 184.813, 113.274, 33.1078, 0.8574 ) }
    apic_12 { pt3dadd( 185.033, 112.175, 33.3519, 0.961 ) }
    apic_12 { pt3dadd( 185.254, 111.076, 33.5874, 0.7144 ) }
    apic_12 { pt3dadd( 185.476, 109.965, 33.6585, 0.5572 ) }
    apic_12 { pt3dadd( 185.695, 108.866, 33.5684, 0.64 ) }
    apic_12 { pt3dadd( 185.916, 107.766, 33.3539, 0.8062 ) }
    apic_12 { pt3dadd( 186.136, 106.667, 33.063, 0.5952 ) }
    apic_12 { pt3dadd( 186.207, 105.528, 32.7942, 0.4386 ) }
    apic_12 { pt3dadd( 186.207, 104.384, 32.5931, 0.3794 ) }
    apic_12 { pt3dadd( 186.207, 103.24, 32.4685, 0.5202 ) }
    apic_12 { pt3dadd( 186.207, 102.096, 32.4033, 0.4814 ) }
    apic_12 { pt3dadd( 186.207, 100.952, 32.3775, 0.4926 ) }
    apic_12 { pt3dadd( 186.207, 99.8076, 32.3728, 0.5666 ) }
    apic_12 { pt3dadd( 186.207, 98.6636, 32.373, 0.9034 ) }
    apic_12 { pt3dadd( 186.207, 97.5196, 32.3736, 1.0144 ) }
    apic_12 { pt3dadd( 186.207, 96.3756, 32.3744, 0.9688 ) }
    apic_12 { pt3dadd( 186.207, 95.2316, 32.3756, 0.9628 ) }
    apic_12 { pt3dadd( 186.207, 94.0876, 32.3772, 0.796 ) }
    apic_12 { pt3dadd( 186.117, 92.9471, 32.3795, 0.556 ) }
    apic_12 { pt3dadd( 185.929, 91.8188, 32.3826, 0.4636 ) }
    apic_12 { pt3dadd( 185.741, 90.6903, 32.3868, 0.4098 ) }
    apic_12 { pt3dadd( 185.552, 89.5619, 32.3929, 0.4248 ) }
    apic_12 { pt3dadd( 185.365, 88.4334, 32.4016, 0.583 ) }
    apic_12 { pt3dadd( 185.032, 87.3389, 32.4131, 0.4746 ) }
    apic_12 { pt3dadd( 184.606, 86.2769, 32.4296, 0.3908 ) }
    apic_12 { pt3dadd( 184.182, 85.2146, 32.4537, 0.3522 ) }
    apic_12 { pt3dadd( 183.756, 84.1529, 32.487, 0.4024 ) }
    apic_12 { pt3dadd( 183.264, 83.1205, 32.5298, 0.5882 ) }
    apic_12 { pt3dadd( 182.613, 82.1795, 32.5828, 0.484 ) }
    apic_12 { pt3dadd( 181.798, 81.3872, 32.6864, 0.4112 ) }
    apic_12 { pt3dadd( 180.882, 80.7302, 32.8535, 0.3768 ) }
    apic_12 { pt3dadd( 180.035, 79.9639, 32.9815, 0.51 ) }
    apic_12 { pt3dadd( 179.187, 79.1973, 33.0865, 0.4888 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_12 { pt3dadd( 178.157, 78.7093, 33.1962, 0.3784 ) }
    apic_12 { pt3dadd( 177.061, 78.3829, 33.3026, 0.288 ) }
    apic_12 { pt3dadd( 175.965, 78.0574, 33.4144, 0.2542 ) }
    apic_12 { pt3dadd( 175.413, 77.1577, 33.6487, 0.2288 ) }
    apic_12 { pt3dadd( 175.413, 76.0146, 34.1334, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 5/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 184.742, 130.279, 33.796, 0.6636 ) }
    apic_9 { pt3dadd( 184.124, 130.08, 33.9802, 0.644 ) }
    apic_9 { pt3dadd( 183.024, 129.956, 33.9979, 0.377 ) }
    apic_9 { pt3dadd( 181.89, 129.893, 33.9968, 0.318 ) }
    apic_9 { pt3dadd( 180.817, 129.574, 34.1158, 0.3808 ) }
    apic_9 { pt3dadd( 179.786, 129.082, 34.2678, 0.347 ) }
    apic_9 { pt3dadd( 178.766, 128.566, 34.4562, 0.3256 ) }
    apic_9 { pt3dadd( 178.07, 127.788, 34.8205, 0.3168 ) }
    apic_9 { pt3dadd( 177.524, 126.812, 35.2394, 0.3786 ) }
    apic_9 { pt3dadd( 176.896, 125.893, 35.6852, 0.3436 ) }
    apic_9 { pt3dadd( 176.025, 125.157, 36.0584, 0.318 ) }
    apic_9 { pt3dadd( 174.922, 124.861, 36.3552, 0.3078 ) }
    apic_9 { pt3dadd( 173.891, 124.367, 36.5879, 0.3366 ) }
    apic_9 { pt3dadd( 173.15, 123.496, 36.7704, 0.3864 ) }
    apic_9 { pt3dadd( 172.255, 122.785, 36.9519, 0.498 ) }
    apic_9 { pt3dadd( 171.506, 121.946, 37.1974, 0.6108 ) }
    apic_9 { pt3dadd( 170.96, 121.025, 37.5634, 0.5904 ) }
    apic_9 { pt3dadd( 170.236, 120.172, 37.9481, 0.5234 ) }
    apic_9 { pt3dadd( 169.229, 119.63, 38.2483, 0.5398 ) }
    apic_9 { pt3dadd( 168.088, 119.55, 38.6372, 0.8052 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 25/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 204.93, 80.7109, 27.76, 0.572 ) }
    apic_16 { pt3dadd( 204.607, 79.5202, 26.9167, 1.1564 ) }
    apic_16 { pt3dadd( 204.557, 78.4076, 26.5692, 1.1144 ) }
    apic_16 { pt3dadd( 204.679, 77.2897, 26.3105, 0.8868 ) }
    apic_16 { pt3dadd( 205.122, 76.2778, 26.1341, 0.7342 ) }
    apic_16 { pt3dadd( 206.119, 76.0247, 25.8891, 0.5154 ) }
    apic_16 { pt3dadd( 206.904, 75.7183, 25.3828, 0.4852 ) }
    apic_16 { pt3dadd( 207.931, 75.7012, 24.796, 0.4376 ) }
    apic_16 { pt3dadd( 208.963, 75.6571, 24.1329, 0.5384 ) }
    apic_16 { pt3dadd( 209.871, 74.9826, 23.592, 0.494 ) }
    apic_16 { pt3dadd( 210.593, 74.0963, 23.2089, 0.3882 ) }
    apic_16 { pt3dadd( 211.065, 73.0659, 22.9376, 0.3068 ) }
    apic_16 { pt3dadd( 210.712, 71.992, 22.8077, 0.287 ) }
    apic_16 { pt3dadd( 210.784, 70.8943, 22.8726, 0.2988 ) }
    apic_16 { pt3dadd( 211.022, 69.8184, 23.0412, 0.3142 ) }
    apic_16 { pt3dadd( 211.774, 68.9664, 23.1706, 0.3734 ) }
    apic_16 { pt3dadd( 212.18, 67.9697, 23.3125, 0.3338 ) }
    apic_16 { pt3dadd( 212.409, 67.5373, 23.0975, 0.3 ) }
    apic_16 { pt3dadd( 212.092, 67.5317, 22.7741, 0.2746 ) }
    apic_16 { pt3dadd( 211.758, 66.5587, 22.5778, 0.2744 ) }
    apic_16 { pt3dadd( 211.613, 65.508, 22.2351, 0.2744 ) }
    apic_16 { pt3dadd( 211.357, 64.5105, 21.726, 0.2742 ) }
    apic_16 { pt3dadd( 211.591, 63.5014, 21.1467, 0.2736 ) }
    apic_16 { pt3dadd( 212.484, 62.8453, 20.6693, 0.2728 ) }
    apic_16 { pt3dadd( 213.366, 62.1417, 20.1986, 0.2712 ) }
    apic_16 { pt3dadd( 214.104, 61.3094, 19.7131, 0.2684 ) }
    apic_16 { pt3dadd( 215.03, 60.6508, 19.3208, 0.2626 ) }
    apic_16 { pt3dadd( 215.983, 60.0261, 19.0098, 0.2542 ) }
    apic_16 { pt3dadd( 216.936, 59.4652, 18.6844, 0.2288 ) }
    apic_16 { pt3dadd( 218.008, 59.0716, 18.2045, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 55/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 204.93, 80.7109, 27.76, 0.572 ) }
    apic_15 { pt3dadd( 204.188, 80.0571, 28.5776, 0.2288 ) }
    apic_15 { pt3dadd( 203.555, 79.2074, 28.9444, 0.2778 ) }
    apic_15 { pt3dadd( 203.091, 78.1921, 29.3037, 0.2802 ) }
    apic_15 { pt3dadd( 202.76, 77.1154, 29.573, 0.2854 ) }
    apic_15 { pt3dadd( 202.299, 76.1516, 29.6288, 0.2942 ) }
    apic_15 { pt3dadd( 202.129, 75.149, 29.4767, 0.3118 ) }
    apic_15 { pt3dadd( 202.28, 74.0319, 29.2726, 0.3394 ) }
    apic_15 { pt3dadd( 202.288, 72.912, 29.141, 0.415 ) }
    apic_15 { pt3dadd( 201.795, 71.9211, 29.0254, 0.4366 ) }
    apic_15 { pt3dadd( 201.415, 70.8684, 28.861, 0.3664 ) }
    apic_15 { pt3dadd( 201.108, 69.7835, 28.6552, 0.3128 ) }
    apic_15 { pt3dadd( 200.754, 68.7001, 28.46, 0.2992 ) }
    apic_15 { pt3dadd( 200.385, 67.6169, 28.2699, 0.315 ) }
    apic_15 { pt3dadd( 199.742, 66.6868, 28.0756, 0.3754 ) }
    apic_15 { pt3dadd( 199.301, 65.6917, 27.7903, 0.3374 ) }
    apic_15 { pt3dadd( 199.23, 64.5755, 27.4834, 0.3068 ) }
    apic_15 { pt3dadd( 199.23, 63.4327, 27.2059, 0.287 ) }
    apic_15 { pt3dadd( 199.23, 62.2899, 26.9321, 0.2986 ) }
    apic_15 { pt3dadd( 199.222, 61.1752, 26.5894, 0.314 ) }
    apic_15 { pt3dadd( 199.12, 60.0488, 26.2282, 0.373 ) }
    apic_15 { pt3dadd( 198.672, 59.0095, 25.902, 0.333 ) }
    apic_15 { pt3dadd( 197.824, 58.275, 25.5584, 0.2982 ) }
    apic_15 { pt3dadd( 196.911, 57.6097, 25.1406, 0.2712 ) }
    apic_15 { pt3dadd( 196.034, 56.8967, 24.6812, 0.2684 ) }
    apic_15 { pt3dadd( 194.969, 56.5992, 24.1786, 0.2626 ) }
    apic_15 { pt3dadd( 193.882, 56.3484, 23.648, 0.2542 ) }
    apic_15 { pt3dadd( 192.829, 56.324, 23.049, 0.2288 ) }
    apic_15 { pt3dadd( 191.901, 56.782, 21.6177, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 84/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 168.088, 119.55, 38.6372, 0.8052 ) }
    apic_11 { pt3dadd( 167.366, 119.888, 38.736, 0.84 ) }
    apic_11 { pt3dadd( 166.271, 120.206, 38.7848, 0.6074 ) }
    apic_11 { pt3dadd( 165.247, 119.954, 38.7447, 0.4746 ) }
    apic_11 { pt3dadd( 164.166, 120.071, 38.85, 0.3824 ) }
    apic_11 { pt3dadd( 163.083, 120.279, 39.1132, 0.3792 ) }
    apic_11 { pt3dadd( 162.001, 120.49, 39.4934, 0.4724 ) }
    apic_11 { pt3dadd( 160.917, 120.7, 39.9512, 0.3934 ) }
    apic_11 { pt3dadd( 159.835, 120.909, 40.4485, 0.3258 ) }
    apic_11 { pt3dadd( 158.716, 121.107, 40.8794, 0.2752 ) }
    apic_11 { pt3dadd( 157.588, 121.299, 41.1925, 0.2758 ) }
    apic_11 { pt3dadd( 156.46, 121.491, 41.4058, 0.2766 ) }
    apic_11 { pt3dadd( 155.333, 121.682, 41.5481, 0.2784 ) }
    apic_11 { pt3dadd( 154.206, 121.875, 41.645, 0.2822 ) }
    apic_11 { pt3dadd( 153.09, 122.129, 41.7166, 0.288 ) }
    apic_11 { pt3dadd( 151.977, 122.391, 41.7886, 0.3008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_11 { pt3dadd( 150.863, 122.653, 41.8723, 0.318 ) }
    apic_11 { pt3dadd( 149.75, 122.915, 41.9734, 0.3808 ) }
    apic_11 { pt3dadd( 148.635, 123.164, 42.1187, 0.3476 ) }
    apic_11 { pt3dadd( 147.535, 123.387, 42.3469, 0.3248 ) }
    apic_11 { pt3dadd( 146.435, 123.607, 42.6367, 0.323 ) }
    apic_11 { pt3dadd( 145.335, 123.827, 42.9584, 0.3538 ) }
    apic_11 { pt3dadd( 144.233, 124.068, 43.2715, 0.4728 ) }
    apic_11 { pt3dadd( 143.141, 124.399, 43.4944, 0.3938 ) }
    apic_11 { pt3dadd( 142.048, 124.74, 43.6218, 0.3264 ) }
    apic_11 { pt3dadd( 140.957, 125.08, 43.6632, 0.2766 ) }
    apic_11 { pt3dadd( 139.864, 125.421, 43.6397, 0.2784 ) }
    apic_11 { pt3dadd( 138.762, 125.69, 43.5285, 0.2818 ) }
    apic_11 { pt3dadd( 137.659, 125.919, 43.3454, 0.2882 ) }
    apic_11 { pt3dadd( 136.556, 126.143, 43.1309, 0.2994 ) }
    apic_11 { pt3dadd( 135.454, 126.368, 42.9145, 0.3228 ) }
    apic_11 { pt3dadd( 134.318, 126.479, 42.7958, 0.3538 ) }
    apic_11 { pt3dadd( 133.187, 126.506, 42.8207, 0.4724 ) }
    apic_11 { pt3dadd( 132.055, 126.526, 42.9663, 0.3936 ) }
    apic_11 { pt3dadd( 130.925, 126.547, 43.1978, 0.326 ) }
    apic_11 { pt3dadd( 129.795, 126.569, 43.4798, 0.2758 ) }
    apic_11 { pt3dadd( 128.713, 126.921, 43.7394, 0.2766 ) }
    apic_11 { pt3dadd( 127.672, 127.396, 43.948, 0.2784 ) }
    apic_11 { pt3dadd( 126.635, 127.879, 44.1146, 0.2816 ) }
    apic_11 { pt3dadd( 125.598, 128.36, 44.2588, 0.2876 ) }
    apic_11 { pt3dadd( 124.659, 129.007, 44.4287, 0.2986 ) }
    apic_11 { pt3dadd( 123.839, 129.785, 44.6536, 0.321 ) }
    apic_11 { pt3dadd( 123.026, 130.57, 44.9266, 0.3502 ) }
    apic_11 { pt3dadd( 122.212, 131.355, 45.2273, 0.466 ) }
    apic_11 { pt3dadd( 121.684, 132.321, 45.5792, 0.3814 ) }
    apic_11 { pt3dadd( 120.836, 133.083, 45.857, 0.305 ) }
    apic_11 { pt3dadd( 120.085, 133.944, 46.0494, 0.2288 ) }
    apic_11 { pt3dadd( 119.246, 134.722, 46.2451, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 32/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 168.088, 119.55, 38.6372, 0.8052 ) }
    apic_10 { pt3dadd( 168.109, 119.056, 39.4548, 0.6864 ) }
    apic_10 { pt3dadd( 168.087, 118.016, 39.8591, 0.4442 ) }
    apic_10 { pt3dadd( 167.645, 117.011, 40.2326, 0.3256 ) }
    apic_10 { pt3dadd( 166.934, 116.118, 40.5143, 0.2748 ) }
    apic_10 { pt3dadd( 166.115, 115.322, 40.7058, 0.275 ) }
    apic_10 { pt3dadd( 165.215, 114.616, 40.8187, 0.2752 ) }
    apic_10 { pt3dadd( 164.254, 114.002, 40.8414, 0.2758 ) }
    apic_10 { pt3dadd( 163.226, 113.562, 40.7632, 0.2768 ) }
    apic_10 { pt3dadd( 162.178, 113.117, 40.693, 0.279 ) }
    apic_10 { pt3dadd( 161.171, 112.626, 40.7417, 0.2826 ) }
    apic_10 { pt3dadd( 160.167, 112.104, 40.8696, 0.2892 ) }
    apic_10 { pt3dadd( 159.162, 111.566, 41.0318, 0.3028 ) }
    apic_10 { pt3dadd( 158.245, 110.888, 41.1897, 0.3216 ) }
    apic_10 { pt3dadd( 157.408, 110.11, 41.3241, 0.3874 ) }
    apic_10 { pt3dadd( 156.586, 109.315, 41.449, 0.3596 ) }
    apic_10 { pt3dadd( 155.789, 108.496, 41.5836, 0.3484 ) }
    apic_10 { pt3dadd( 155.139, 107.581, 41.795, 0.3616 ) }
    apic_10 { pt3dadd( 154.391, 106.746, 42.0711, 0.4508 ) }
    apic_10 { pt3dadd( 153.44, 106.142, 42.3732, 0.5282 ) }
    apic_10 { pt3dadd( 152.677, 105.348, 42.7193, 0.4122 ) }
    apic_10 { pt3dadd( 152.017, 104.483, 43.099, 0.3134 ) }
    apic_10 { pt3dadd( 150.968, 104.24, 43.2398, 0.2542 ) }
    apic_10 { pt3dadd( 149.977, 103.673, 43.293, 0.2288 ) }
    apic_10 { pt3dadd( 148.849, 103.49, 43.2356, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_104, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_104 = new SectionList()
    soma_0 ModelViewParmSubset_104.append()
    axon_0 ModelViewParmSubset_104.append()
    axon_1 ModelViewParmSubset_104.append()

    // Group: {name=ModelViewParmSubset_105, groups=[], sections=[apic_0, dend_33, dend_22, dend_13, dend_6, dend_0, apic_31, apic_1, dend_39, dend_34, dend_28, dend_23, dend_21, dend_14, dend_12, dend_7, dend_5, dend_4, dend_1, apic_24, apic_2, dend_41, dend_40, dend_38, dend_35, dend_32, dend_29, dend_27, dend_24, dend_20, dend_15, dend_9, dend_8, dend_3, dend_2, apic_28, apic_25, apic_23, apic_20, apic_3, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_16, dend_11, dend_10, apic_30, apic_29, apic_27, apic_26, apic_22, apic_21, apic_19, apic_4, dend_18, dend_17, apic_18, apic_5, apic_7, apic_6, apic_13, apic_8, apic_17, apic_14, apic_12, apic_9, apic_16, apic_15, apic_11, apic_10]}
    ModelViewParmSubset_105 = new SectionList()
    apic_0 ModelViewParmSubset_105.append()
    dend_33 ModelViewParmSubset_105.append()
    dend_22 ModelViewParmSubset_105.append()
    dend_13 ModelViewParmSubset_105.append()
    dend_6 ModelViewParmSubset_105.append()
    dend_0 ModelViewParmSubset_105.append()
    apic_31 ModelViewParmSubset_105.append()
    apic_1 ModelViewParmSubset_105.append()
    dend_39 ModelViewParmSubset_105.append()
    dend_34 ModelViewParmSubset_105.append()
    dend_28 ModelViewParmSubset_105.append()
    dend_23 ModelViewParmSubset_105.append()
    dend_21 ModelViewParmSubset_105.append()
    dend_14 ModelViewParmSubset_105.append()
    dend_12 ModelViewParmSubset_105.append()
    dend_7 ModelViewParmSubset_105.append()
    dend_5 ModelViewParmSubset_105.append()
    dend_4 ModelViewParmSubset_105.append()
    dend_1 ModelViewParmSubset_105.append()
    apic_24 ModelViewParmSubset_105.append()
    apic_2 ModelViewParmSubset_105.append()
    dend_41 ModelViewParmSubset_105.append()
    dend_40 ModelViewParmSubset_105.append()
    dend_38 ModelViewParmSubset_105.append()
    dend_35 ModelViewParmSubset_105.append()
    dend_32 ModelViewParmSubset_105.append()
    dend_29 ModelViewParmSubset_105.append()
    dend_27 ModelViewParmSubset_105.append()
    dend_24 ModelViewParmSubset_105.append()
    dend_20 ModelViewParmSubset_105.append()
    dend_15 ModelViewParmSubset_105.append()
    dend_9 ModelViewParmSubset_105.append()
    dend_8 ModelViewParmSubset_105.append()
    dend_3 ModelViewParmSubset_105.append()
    dend_2 ModelViewParmSubset_105.append()
    apic_28 ModelViewParmSubset_105.append()
    apic_25 ModelViewParmSubset_105.append()
    apic_23 ModelViewParmSubset_105.append()
    apic_20 ModelViewParmSubset_105.append()
    apic_3 ModelViewParmSubset_105.append()
    dend_37 ModelViewParmSubset_105.append()
    dend_36 ModelViewParmSubset_105.append()
    dend_31 ModelViewParmSubset_105.append()
    dend_30 ModelViewParmSubset_105.append()
    dend_26 ModelViewParmSubset_105.append()
    dend_25 ModelViewParmSubset_105.append()
    dend_19 ModelViewParmSubset_105.append()
    dend_16 ModelViewParmSubset_105.append()
    dend_11 ModelViewParmSubset_105.append()
    dend_10 ModelViewParmSubset_105.append()
    apic_30 ModelViewParmSubset_105.append()
    apic_29 ModelViewParmSubset_105.append()
    apic_27 ModelViewParmSubset_105.append()
    apic_26 ModelViewParmSubset_105.append()
    apic_22 ModelViewParmSubset_105.append()
    apic_21 ModelViewParmSubset_105.append()
    apic_19 ModelViewParmSubset_105.append()
    apic_4 ModelViewParmSubset_105.append()
    dend_18 ModelViewParmSubset_105.append()
    dend_17 ModelViewParmSubset_105.append()
    apic_18 ModelViewParmSubset_105.append()
    apic_5 ModelViewParmSubset_105.append()
    apic_7 ModelViewParmSubset_105.append()
    apic_6 ModelViewParmSubset_105.append()
    apic_13 ModelViewParmSubset_105.append()
    apic_8 ModelViewParmSubset_105.append()
    apic_17 ModelViewParmSubset_105.append()
    apic_14 ModelViewParmSubset_105.append()
    apic_12 ModelViewParmSubset_105.append()
    apic_9 ModelViewParmSubset_105.append()
    apic_16 ModelViewParmSubset_105.append()
    apic_15 ModelViewParmSubset_105.append()
    apic_11 ModelViewParmSubset_105.append()
    apic_10 ModelViewParmSubset_105.append()

    // Group: {name=dend, groups=[], sections=[dend_33, dend_22, dend_13, dend_6, dend_0, dend_39, dend_34, dend_28, dend_23, dend_21, dend_14, dend_12, dend_7, dend_5, dend_4, dend_1, dend_41, dend_40, dend_38, dend_35, dend_32, dend_29, dend_27, dend_24, dend_20, dend_15, dend_9, dend_8, dend_3, dend_2, dend_37, dend_36, dend_31, dend_30, dend_26, dend_25, dend_19, dend_16, dend_11, dend_10, dend_18, dend_17]}
    dend = new SectionList()
    dend_33 dend.append()
    dend_22 dend.append()
    dend_13 dend.append()
    dend_6 dend.append()
    dend_0 dend.append()
    dend_39 dend.append()
    dend_34 dend.append()
    dend_28 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_38 dend.append()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_27 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_15 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_31, apic_1, apic_24, apic_2, apic_28, apic_25, apic_23, apic_20, apic_3, apic_30, apic_29, apic_27, apic_26, apic_22, apic_21, apic_19, apic_4, apic_18, apic_5, apic_7, apic_6, apic_13, apic_8, apic_17, apic_14, apic_12, apic_9, apic_16, apic_15, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_31 apic.append()
    apic_1 apic.append()
    apic_24 apic.append()
    apic_2 apic.append()
    apic_28 apic.append()
    apic_25 apic.append()
    apic_23 apic.append()
    apic_20 apic.append()
    apic_3 apic.append()
    apic_30 apic.append()
    apic_29 apic.append()
    apic_27 apic.append()
    apic_26 apic.append()
    apic_22 apic.append()
    apic_21 apic.append()
    apic_19 apic.append()
    apic_4 apic.append()
    apic_18 apic.append()
    apic_5 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()
    apic_13 apic.append()
    apic_8 apic.append()
    apic_17 apic.append()
    apic_14 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_3689, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_3689 = new SectionList()
    soma_0 OneSecGrp_SectionRef_3689.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_2, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_4, apic_4, apic_4, apic_4, apic_4, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_5, apic_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_2 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.9011688  // units: uF/cm2
    forsec apic cm = 3.9011688  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 193.00839  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 8.7887005E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.17528385  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 0.003324739  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.030325813  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 5.615023E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.04287133  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.010457729  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 3.4452957E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.8173846E-4  // units: S cm-2
        e_pas_nml2 = -88.109474  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.7724152E-4  // units: S cm-2
        e_pas_nml2 = -88.109474  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.610396E-7  // units: S cm-2
        e_pas_nml2 = -88.109474  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 6.82672E-7  // units: S cm-2
        e_pas_nml2 = -88.109474  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.083867E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.007371566  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_477840124
    forsec soma {
        insert CaDynamics_477840124
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_39 nseg = 3
    dend_21 nseg = 7
    dend_12 nseg = 3
    dend_5 nseg = 3
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_38 nseg = 3
    dend_32 nseg = 3
    dend_27 nseg = 3
    dend_20 nseg = 3
    dend_9 nseg = 3
    apic_23 nseg = 7
    dend_31 nseg = 3
    dend_19 nseg = 5
    dend_11 nseg = 3
    apic_30 nseg = 5
    apic_29 nseg = 3
    apic_18 nseg = 3
    apic_7 nseg = 13
    apic_6 nseg = 5
    apic_13 nseg = 5
    apic_8 nseg = 3
    apic_12 nseg = 3
    apic_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_477840124


