// Cell: bAC217_L6_NBC_3fc0dff69e_0_0
/*
{
  "id" : "bAC217_L6_NBC_3fc0dff69e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-13.5885, -1.40806, -1.21115, 3.28922", "-12.1797, -1.31485, -1.09796, 5.53013", "-10.7708, -1.22164, -0.98478, 8.11492", "-9.36203, -1.12843, -0.871597, 8.79827", "-7.95321, -1.03522, -0.758413, 9.64874", "-6.54439, -0.94201, -0.645229, 10.525", "-5.13557, -0.848801, -0.532045, 11.3671", "-3.72674, -0.755591, -0.418861, 12.0867", "-2.31792, -0.662382, -0.305678, 12.7138", "-0.909103, -0.569173, -0.192494, 13.1296", "0.499717, -0.475964, -0.0793099, 13.1814", "1.90854, -0.382755, 0.033874, 12.8438", "3.31736, -0.289546, 0.147058, 12.4399", "4.72618, -0.196336, 0.260242, 11.9471", "6.135, -0.103127, 0.373425, 11.0762", "7.54382, -0.00991806, 0.486609, 10.1681", "8.95264, 0.0832911, 0.599793, 8.77152", "10.3615, 0.1765, 0.712977, 7.19375", "11.7703, 0.269709, 0.826161, 5.5839", "13.1791, 0.362919, 0.939345, 4.44994", "14.5879, 0.456128, 1.05253, 2.56587" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-12.1281, -3.87264, -1.27135, 2.58", "-12.1281, -3.87264, -1.27135, 2.58", "-13.4196, -4.68002, -1.46032, 2.21", "-13.4887, -4.71921, -1.4754, 2.21", "-14.5649, -5.31161, -1.73993, 2.21", "-15.4371, -5.7635, -1.95403, 2.14", "-15.4987, -5.79446, -1.96934, 2.14", "-16.4375, -6.23471, -2.24779, 1.92", "-17.6786, -6.79277, -2.63992, 1.92", "-17.7388, -6.82207, -2.66213, 1.92", "-18.8183, -7.40113, -3.13784, 1.92", "-18.8665, -7.42905, -3.16162, 1.92", "-20.0667, -8.19869, -3.75952, 1.92", "-21.4721, -9.1462, -4.47748, 2.14", "-22.7759, -10.0561, -5.16503, 2.14", "-24.2499, -11.1108, -5.97026, 2.14", "-25.4508, -12.0169, -6.66972, 2.87", "-26.7392, -13.0109, -7.42412, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000602452921
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.6281, 1.81836, -0.451354, 2.73", "-12.6281, 1.81836, -0.451354, 2.73", "-14.4809, 2.38275, -0.451354, 2.65", "-15.8172, 2.7898, -0.451354, 2.95", "-17.4225, 3.27877, -0.451354, 3.24", "-19.4456, 3.89501, -0.451354, 3.46", "-20.5228, 4.22313, -0.451354, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000602452921
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "14.6219, 1.08336, -0.521354, 3.68", "14.6219, 1.08336, -0.521354, 3.68", "18.6153, 0.600245, 1.46168, 3.68", "21.7462, 0.221456, 3.01648, 3.17", "24.5358, -0.116022, 4.40172, 3.17", "27.0652, -0.42204, 5.65782, 3.02" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000602452921
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "14.5879, 0.456128, 1.05253, 0.535241", "29.5552, 1.44638, 1.05253, 0.535241", "44.5225, 2.43664, 1.05253, 0.535241" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-26.7392, -13.0109, -7.42412, 1.92", "-26.7897, -14.5338, -7.74122, 1.92", "-26.8474, -16.2299, -8.03534, 0.74", "-26.8498, -16.3024, -8.04666, 0.74", "-26.8814, -17.5112, -8.30164, 0.52", "-26.8939, -18.4035, -8.50025, 1.11", "-26.8954, -18.4854, -8.51799, 1.11", "-26.9315, -19.5357, -8.71416, 1.11", "-26.9346, -19.6081, -8.72594, 1.11", "-27.1076, -21.4435, -9.00515, 0.59", "-27.3419, -22.9423, -9.21824, 0.59", "-27.5849, -24.0012, -9.34974, 1.4", "-27.8574, -25.0822, -9.45567, 0.74", "-27.8755, -25.1532, -9.45576, 0.74", "-28.294, -26.7811, -9.31551, 0.74", "-28.5085, -27.7196, -9.12521, 1.18", "-28.6649, -28.5504, -8.91172, 1.62", "-28.8005, -29.9152, -8.4899, 1.47", "-28.8373, -31.8366, -7.81784, 0.88", "-28.8338, -31.9146, -7.78832, 0.88", "-28.6284, -33.1633, -7.2436, 0.74", "-28.5915, -33.3148, -7.17137, 0.74", "-28.2119, -34.5939, -6.52023, 0.74", "-28.1775, -34.7309, -6.44876, 0.74" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-26.7392, -13.0109, -7.42412, 1.69", "-28.1506, -13.6512, -8.17192, 1.69", "-29.2914, -14.1779, -8.69111, 1.4", "-30.9575, -14.9514, -9.38685, 1.4", "-32.2473, -15.5502, -9.92546, 1.77", "-32.3071, -15.578, -9.95043, 1.77", "-33.7255, -16.2365, -10.5427, 2.06", "-34.4319, -16.5624, -10.7597, 2.06", "-34.5329, -16.6101, -10.7872, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-20.5228, 4.22313, -0.451354, 1.47", "-21.1583, 5.59595, -0.339889, 1.47", "-21.586, 6.51465, -0.200291, 0.81", "-21.995, 7.37973, -0.00420729, 0.81", "-22.5444, 8.50289, 0.355521, 0.81", "-23.1995, 9.8329, 0.832673, 0.81", "-23.7186, 10.9211, 1.2291, 0.81", "-24.381, 12.2684, 1.77746, 0.81", "-24.9088, 13.3628, 2.26981, 0.81", "-25.4923, 14.6193, 2.89053, 1.18", "-25.8289, 15.3397, 3.28578, 1.55", "-26.2878, 16.2675, 3.9182, 1.84" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-20.5228, 4.22313, -0.451354, 2.06", "-22.7626, 4.67665, -0.889752, 2.06", "-24.5495, 5.03845, -1.2395, 1.84", "-26.2951, 5.3919, -1.58116, 1.84", "-27.8853, 5.71389, -1.89241, 1.84", "-28.9914, 5.93785, -2.1089, 1.84", "-30.6561, 6.27492, -2.43473, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "27.0652, -0.42204, 5.65782, 2.58", "28.7652, 0.32346, 1.09782, 2.58" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "27.0652, -0.42204, 5.65782, 3.02", "30.7958, -4.45475, 7.12455, 3.02", "31.8362, -5.42309, 7.99245, 1.69", "33.009, -6.35835, 8.90029, 1.4", "33.0564, -6.3962, 8.93702, 1.4", "34.053, -7.19091, 9.70843, 1.4", "35.9434, -8.69851, 11.1718, 1.18", "37.3284, -9.81345, 12.5984, 1.03", "38.0673, -10.3009, 13.3247, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "44.5225, 2.43664, 1.05253, 0.15", "59.4897, 3.42689, 1.05253, 0.15", "74.457, 4.41715, 1.05253, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-28.1775, -34.7309, -6.44876, 0.74", "-28.7059, -35.6604, -4.67777, 0.74", "-28.821, -35.868, -4.31376, 0.74", "-29.1343, -36.5221, -3.27666, 0.22", "-29.2259, -36.7558, -2.92698, 0.66", "-29.4305, -37.354, -2.05889, 0.66", "-29.619, -38.0752, -1.08545, 0.52", "-29.6663, -38.4795, -0.631451, 0.88", "-29.6503, -38.8265, -0.221259, 0.88", "-29.5397, -39.4687, 0.469611, 0.59", "-29.5286, -39.52, 0.518517, 0.59", "-29.3967, -40.1388, 1.03261, 0.59", "-29.1996, -41.3307, 1.88831, 0.37", "-28.9485, -43.4123, 3.30437, 0.66", "-28.8803, -44.1849, 3.78443, 0.96", "-28.794, -45.1355, 4.28755, 0.88", "-28.7002, -46.0304, 4.68584, 0.88", "-28.5774, -47.1287, 5.07005, 1.18", "-28.5654, -47.1997, 5.08269, 1.18", "-28.3752, -47.9342, 5.17414, 1.77", "-28.0365, -49.0116, 5.36409, 1.69", "-27.6785, -49.9897, 5.57218, 1.69", "-27.5896, -50.2071, 5.62257, 1.69", "-26.9395, -51.7684, 6.00048, 1.69", "-26.2942, -53.3633, 6.39185, 0.52", "-25.9745, -54.2082, 6.60906, 0.52", "-25.9236, -54.3512, 6.64592, 0.52", "-25.4961, -55.5338, 6.93742, 0.52", "-25.4367, -55.6922, 6.97057, 0.52", "-25.1267, -56.466, 7.21573, 1.18", "-25.1011, -56.5303, 7.2383, 1.18", "-24.6703, -57.5695, 7.70876, 1.47", "-24.5895, -57.8023, 7.83205, 1.47", "-24.3784, -58.4494, 8.22158, 1.47", "-23.7339, -60.4888, 9.5347, 0.52", "-23.5299, -61.2016, 10.0392, 0.52", "-23.5124, -61.2656, 10.0878, 0.52", "-23.2323, -62.4632, 11.1416, 0.52" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-28.1775, -34.7309, -6.44876, 0.15", "-26.7935, -34.9757, -6.01689, 0.15", "-26.7275, -34.9874, -5.99631, 0.15", "-26.0927, -35.0998, -5.79821, 0.15", "-24.7507, -35.3372, -5.37945, 0.15", "-24.1896, -35.4366, -5.20434, 0.15", "-24.1236, -35.4482, -5.18375, 0.15", "-14.3163, -35.6992, -3.24466, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-34.5329, -16.6101, -10.7872, 1.18", "-35.2182, -16.7141, -11.8783, 1.18", "-36.6063, -16.8517, -14.0022, 0.59", "-36.9999, -16.8604, -14.615, 0.59", "-38.1001, -16.8085, -16.3123, 0.59", "-38.5873, -16.7407, -17.0185, 0.81", "-39.2107, -16.6479, -18.0539, 0.81", "-39.3306, -16.6345, -18.2729, 0.81", "-40.0005, -16.6124, -19.8294, 0.74", "-40.1387, -16.6205, -20.2279, 0.74", "-40.4384, -16.7327, -21.2708, 0.74", "-41.3201, -17.4914, -24.7995, 0.59", "-41.5116, -17.7398, -25.6364, 0.59", "-41.8504, -18.2, -26.9674, 0.59", "-41.8706, -18.2282, -27.0401, 0.59", "-42.1005, -18.5553, -27.7978, 0.44", "-42.3408, -18.8507, -28.5228, 0.44", "-43.0095, -19.3657, -30.1063, 1.18", "-43.2387, -19.5051, -30.6395, 1.18", "-44.2544, -20.1085, -32.9839, 0.52", "-44.5557, -20.3232, -33.7118, 0.52", "-45.3086, -21.0155, -35.6617, 0.52", "-45.7733, -21.6179, -36.8822, 0.52", "-45.7972, -21.6515, -36.9398, 0.52", "-46.1272, -22.0137, -37.606, 0.96", "-46.5436, -22.3849, -38.2995, 0.66", "-47.0419, -22.7933, -39.1726, 0.37", "-47.8027, -23.3643, -40.5615, 1.18", "-48.7755, -24.069, -42.4998, 0.88", "-49.8406, -24.889, -45.0649, 0.29", "-49.8972, -24.9341, -45.2144, 0.96", "-50.9085, -25.7923, -48.1486, 1.33", "-52.0675, -26.9548, -51.974, 0.52", "-52.622, -27.6755, -54.1939, 1.33", "-53.5696, -29.3215, -58.7353, 0.37", "-53.6622, -29.5402, -59.2997, 0.74", "-53.8814, -30.1164, -60.8619, 0.74", "-54.1939, -30.9795, -63.2252, 1.47", "-54.8065, -32.9548, -68.5567, 0.44", "-54.8803, -33.1842, -69.2301, 1.33", "-54.9601, -33.4077, -69.9364, 1.33", "-55.6947, -35.07, -75.3313, 1.11", "-55.8803, -35.4132, -76.4509, 0.96", "-56.3311, -36.0753, -78.7207, 1.25", "-57.4485, -37.409, -83.3245, 0.59", "-57.4702, -37.4297, -83.3989, 0.59", "-58.1345, -37.9885, -85.2699, 0.59", "-58.8224, -38.5364, -86.9251, 1.33", "-59.2712, -38.9027, -88.1521, 0.29", "-59.5281, -39.1124, -88.8971, 0.29", "-60.2523, -39.7425, -91.0424, 0.66", "-60.5388, -40.0294, -91.9443, 0.66", "-61.7943, -41.4956, -96.3484, 0.81", "-63.0765, -43.1982, -100.916, 1.18", "-63.6396, -44.0592, -103.005, 0.52", "-63.8112, -44.3475, -103.663, 0.44", "-64.2264, -45.0667, -105.278, 0.44", "-64.7274, -45.9106, -107.414, 1.11", "-64.8801, -46.1539, -108.055, 1.11", "-65.3936, -46.9095, -110.271, 0.37", "-65.5114, -47.0807, -110.826, 0.37", "-66.1664, -48.0326, -113.982, 0.37", "-67.1848, -49.4982, -119.061, 0.37", "-67.2039, -49.5233, -119.148, 0.37", "-67.6384, -50.0612, -121.001, 0.66", "-68.6553, -51.2957, -124.992, 0.37", "-68.9955, -51.7139, -126.232, 0.96", "-69.019, -51.743, -126.303, 0.96", "-71.101, -54.2038, -131.525, 0.29", "-71.882, -55.1115, -133.356, 0.96", "-72.071, -55.3367, -133.777, 0.96", "-72.2266, -55.5513, -134.132, 0.29", "-72.7437, -56.4115, -135.499, 0.29", "-72.8517, -56.6357, -135.767, 0.74", "-72.9771, -57.0039, -136.045, 0.74", "-73.5495, -58.6798, -137.37, 0.37", "-73.9197, -59.8285, -138.344, 1.03", "-74.244, -60.8988, -139.403, 0.15", "-74.6792, -62.3899, -141.125, 0.15", "-74.6933, -62.4435, -141.185, 0.15", "-75.0463, -63.8563, -142.708, 1.4", "-75.207, -64.5128, -143.366, 1.77", "-75.5309, -66.396, -145.081, 0.15", "-75.5972, -67.2968, -146.196, 0.22", "-75.5786, -68.3215, -147.746, 0.22", "-75.5764, -68.4312, -147.92, 1.03", "-75.5751, -68.4724, -147.99, 1.03", "-75.6131, -69.1176, -149.19, 1.03", "-75.8053, -71.8761, -154.68, 0.22", "-75.8339, -72.2007, -155.417, 0.22", "-75.862, -72.4003, -155.972, 0.22", "-75.8684, -72.435, -156.072, 0.22", "-76.1086, -73.2466, -158.573, 0.22", "-77.9863, -76.3636, -167.936, 0.22" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-34.5329, -16.6101, -10.7872, 1.92", "-35.7753, -17.4971, -11.0484, 1.92", "-36.8561, -18.2424, -11.2627, 1.69", "-37.6632, -18.7892, -11.424, 1.4", "-38.734, -19.5079, -11.6427, 1.4", "-38.7933, -19.5464, -11.6483, 1.4", "-39.7046, -20.0831, -11.6525, 1.4", "-40.1963, -20.3248, -11.5728, 1.11", "-41.0654, -20.6291, -11.3974, 1.11", "-41.1227, -20.6423, -11.3847, 1.11", "-43.1741, -20.979, -10.9344, 1.11", "-44.188, -21.138, -10.7442, 1.11", "-44.2565, -21.147, -10.7328, 1.11", "-45.8818, -21.4272, -10.5299, 1.33", "-46.7805, -21.6143, -10.4796, 0.96", "-47.2329, -21.7684, -10.5058, 0.96", "-47.7551, -22.0226, -10.6232, 0.96", "-47.8125, -22.062, -10.6373, 0.96", "-48.3783, -22.5264, -10.7711, 0.96", "-48.4354, -22.5836, -10.7836, 0.96", "-49.2768, -23.4254, -11.0337, 0.96", "-49.321, -23.4656, -11.0469, 0.96", "-50.2997, -24.2924, -11.3317, 1.18", "-51.0048, -24.8276, -11.5141, 1.18", "-51.0701, -24.8731, -11.5298, 1.18", "-51.8159, -25.3776, -11.6974, 1.18", "-52.5411, -25.8392, -11.8461, 1.18", "-52.6252, -25.8923, -11.8594, 1.18", "-54.1232, -26.8408, -11.8611, 1.18", "-54.1831, -26.8783, -11.8555, 1.18", "-54.8487, -27.3208, -11.7449, 1.18", "-55.1506, -27.5317, -11.6713, 1.18", "-56.1714, -28.2564, -11.3966, 1.18", "-57.6278, -29.275, -11.0058, 1.18", "-57.6928, -29.3201, -10.9876, 1.18", "-58.6799, -29.9987, -10.7464, 1.18", "-58.7376, -30.038, -10.7337, 1.18", "-59.7251, -30.7063, -10.5808, 0.96", "-60.5937, -31.2739, -10.5139, 0.96", "-60.7218, -31.3559, -10.5139, 0.96", "-61.9714, -32.1418, -10.5139, 0.96", "-62.0573, -32.1936, -10.5139, 0.96", "-63.4767, -33.0774, -10.5139, 0.96", "-64.4238, -33.7085, -10.5139, 1.47" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-26.2878, 16.2675, 3.9182, 1.11", "-26.0138, 17.0718, 4.3151, 1.11", "-25.7614, 17.9027, 4.74119, 0.74", "-25.4554, 19.0288, 5.43585, 0.74", "-25.212, 19.913, 6.00038, 0.74", "-24.9163, 20.8598, 6.61487, 1.11", "-24.3875, 22.3294, 7.53352, 0.74", "-24.1524, 22.9846, 7.94872, 0.74", "-23.59, 24.3274, 8.76176, 0.44", "-23.2145, 24.976, 9.09383, 0.44", "-22.7937, 25.4755, 9.27317, 0.81", "-22.144, 26.0983, 9.36811, 1.03", "-21.8717, 26.3544, 9.41716, 1.03", "-21.2043, 27.0518, 9.74714, 0.81", "-20.8065, 27.5623, 10.1688, 0.59", "-20.4401, 28.2148, 10.8998, 0.44", "-20.0978, 28.9967, 11.8459, 0.44", "-19.493, 30.7324, 13.9921, 0.88", "-19.2425, 31.5854, 14.9976, 0.88", "-19.0065, 32.5178, 16.0702, 0.88", "-18.7479, 33.441, 17.0429, 0.37", "-18.629, 33.7845, 17.351, 0.96", "-18.3815, 34.3785, 17.7466, 1.25", "-17.8923, 35.3798, 18.2205, 1.62", "-17.6852, 35.7811, 18.3995, 1.62", "-16.8217, 37.4174, 19.1421, 1.18", "-16.1381, 38.6399, 19.7854, 0.74", "-15.8339, 39.173, 20.1009, 1.03", "-15.0342, 40.5198, 20.9691, 1.03", "-14.5753, 41.2759, 21.5119, 1.03", "-14.1221, 42.0285, 22.0665, 1.11", "-13.5832, 42.9339, 22.7271, 1.11", "-13.1481, 43.6499, 23.2522, 1.47", "-12.7474, 44.2846, 23.6686, 1.47", "-12.0068, 45.4799, 24.3907, 1.77", "-11.7791, 45.8432, 24.5947, 1.69", "-11.3778, 46.4862, 24.9198, 1.33", "-10.3108, 48.2056, 25.7739, 1.03", "-9.43284, 49.5918, 26.4526, 1.03", "-8.7992, 50.5981, 26.9511, 1.33", "-8.22696, 51.5219, 27.3921, 1.33", "-7.49579, 52.7088, 27.9572, 1.33", "-6.5527, 54.1603, 28.6459, 1.03", "-5.83972, 55.1316, 29.0869, 1.03", "-4.97952, 56.1664, 29.5961, 0.74", "-4.53559, 56.6339, 29.8204, 0.44", "-4.08231, 57.096, 30.0178, 0.44", "-3.34787, 57.7596, 30.1886, 0.44", "-2.54521, 58.3581, 30.1224, 0.44", "-2.0532, 58.6917, 30.0225, 0.44", "-1.62375, 58.9585, 29.896, 1.03", "-0.330776, 59.7462, 29.4858, 1.03", "0.566214, 60.3648, 29.1651, 1.33", "1.56047, 61.2663, 28.7491, 1.33", "2.08314, 61.8292, 28.5085, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-26.2878, 16.2675, 3.9182, 0.81", "-26.7972, 17.0475, 3.91354, 0.81", "-27.269, 17.7467, 3.91001, 0.66", "-27.8744, 18.7162, 3.84496, 0.66", "-28.2438, 19.3718, 3.78427, 0.66", "-28.6371, 20.1344, 3.7053, 0.66", "-28.9573, 20.8252, 3.63134, 0.44", "-29.2821, 21.7289, 3.5223, 0.44", "-29.6362, 22.9675, 3.36432, 0.52", "-29.7959, 23.783, 3.25814, 0.52", "-29.837, 24.1181, 3.2026, 0.81", "-29.9084, 24.8097, 3.07524, 0.81", "-29.9655, 25.4133, 2.94742, 1.18", "-30.0438, 25.9524, 2.82955, 0.59", "-30.2064, 26.6827, 2.67863, 0.59", "-30.4239, 27.4672, 2.57081, 0.59", "-30.9241, 29.0556, 2.34809, 0.59", "-31.2125, 29.8594, 2.23424, 0.88", "-31.6755, 31.0287, 2.07617, 0.88", "-31.913, 31.6131, 2.00936, 1.25", "-32.5621, 33.073, 1.9193, 1.03" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-30.6561, 6.27492, -2.43473, 0.88", "-34.2125, 7.66376, 2.16203, 0.88", "-35.1604, 7.97776, 3.28265, 1.11", "-36.7216, 8.3828, 4.94182, 1.11", "-37.2845, 8.48304, 5.46212, 1.47", "-37.9458, 8.54321, 6.04531, 1.47", "-38.9676, 8.54844, 6.94839, 0.88", "-40.5799, 8.28173, 8.00612, 0.88", "-41.458, 7.97604, 8.63746, 0.88", "-42.6458, 7.4089, 9.48503, 1.25", "-43.8066, 6.79668, 10.3719, 1.25", "-44.9456, 6.19234, 11.2304, 1.11", "-45.7171, 5.81344, 11.7429, 1.11", "-46.8806, 5.24685, 12.4758, 0.96", "-47.6287, 4.90947, 12.9654, 0.96", "-48.7126, 4.49694, 13.6522, 0.96", "-50.0734, 4.14908, 14.3271, 0.96", "-51.6344, 3.91123, 14.9521, 1.84" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-30.6561, 6.27492, -2.43473, 0.88", "-31.4443, 6.50455, -2.87638, 0.88", "-33.2802, 6.9971, -3.8568, 0.88", "-34.9106, 7.42472, -4.70598, 0.88", "-36.5449, 7.84797, -5.49462, 0.88", "-37.8399, 8.16732, -6.06687, 0.88", "-38.543, 8.33136, -6.34006, 0.88", "-39.9961, 8.62186, -6.7925, 0.88", "-40.8399, 8.7647, -6.96803, 0.88", "-41.9219, 8.94955, -7.06828, 1.25", "-43.0872, 9.15407, -7.07476, 1.25", "-44.2801, 9.36562, -7.03795, 1.25", "-45.7427, 9.63141, -6.96052, 1.25", "-46.1288, 9.70293, -6.95008, 0.88", "-47.2709, 9.92011, -6.98253, 0.74", "-48.4148, 10.1445, -7.1044, 0.74", "-49.337, 10.3528, -7.26685, 1.03", "-50.2784, 10.5892, -7.50164, 1.25", "-51.4965, 10.9667, -7.85554, 1.25", "-52.1949, 11.2282, -8.09825, 0.96", "-52.7024, 11.4702, -8.31241, 0.81", "-53.4044, 11.9114, -8.66413, 0.81", "-53.7608, 12.2062, -8.85412, 0.66", "-54.4743, 12.9295, -9.2894, 0.66", "-55.0547, 13.6045, -9.66724, 0.96", "-55.5403, 14.2263, -10.0639, 1.11", "-56.1284, 14.9714, -10.8496, 1.4", "-56.4832, 15.3595, -11.4063, 1.4", "-57.0989, 15.8924, -12.3676, 1.18", "-57.4561, 16.1224, -12.9046, 0.96", "-58.2411, 16.4471, -14.0018, 0.88", "-60.6706, 16.8972, -17.137, 0.81", "-61.288, 16.898, -17.8279, 0.81", "-62.0982, 16.7937, -18.5949, 1.33", "-62.5547, 16.6976, -18.9519, 1.33", "-63.8271, 16.3902, -19.7597, 0.96", "-65.0309, 16.1113, -20.3547, 0.96", "-66.2406, 15.895, -20.7984, 0.81", "-67.5473, 15.7611, -21.2844, 1.25", "-68.6591, 15.7339, -21.6916, 1.25", "-69.5282, 15.8003, -22.0161, 1.25", "-70.7608, 16.0534, -22.5438, 1.03", "-71.3338, 16.2101, -22.8953, 0.88", "-71.9809, 16.3702, -23.4178, 0.81", "-72.2581, 16.4056, -23.6773, 0.81", "-73.0768, 16.3775, -24.5321, 0.74", "-74.3764, 16.1767, -25.9605, 0.74", "-75.6456, 15.9118, -27.3184, 0.59", "-76.3102, 15.7809, -28.0034, 0.59", "-77.0381, 15.669, -28.7363, 0.59", "-78.0025, 15.6122, -29.6318, 0.52", "-78.4637, 15.6418, -29.9933, 0.44", "-79.2168, 15.8218, -30.5176, 0.44", "-79.974, 16.1103, -31.0024, 1.18", "-80.916, 16.491, -31.6453, 1.18", "-82.0199, 16.8852, -32.4002, 1.18", "-82.5795, 17.0103, -32.7556, 1.18", "-83.5869, 17.0461, -33.4363, 0.52", "-84.2533, 16.9354, -33.8845, 0.52", "-85.3479, 16.5847, -34.7003, 0.52", "-86.0152, 16.306, -35.2067, 0.52", "-86.6821, 15.9914, -35.8765, 0.52", "-87.3808, 15.6874, -36.7246, 0.52", "-87.9715, 15.526, -37.6237, 0.52", "-88.8105, 15.4929, -39.0296, 0.37", "-89.0611, 15.5486, -39.4496, 0.37", "-90.4368, 16.0873, -41.6503, 0.74", "-90.8893, 16.3219, -42.2947, 0.74", "-92.1648, 17.0409, -43.786, 1.03", "-92.9027, 17.4239, -44.4476, 1.4", "-93.5688, 17.706, -44.8059, 1.4", "-94.1594, 17.9149, -45.0375, 1.4", "-95.2222, 18.2514, -45.298, 0.44", "-95.9185, 18.4628, -45.4672, 0.44", "-97.1599, 18.8252, -45.773, 0.44", "-98.7682, 19.2712, -46.2753, 0.44", "-100.081, 19.6511, -46.7203, 0.88", "-100.622, 19.8334, -46.8971, 0.88", "-101.523, 20.1808, -47.1713, 0.37", "-102.433, 20.5662, -47.4255, 0.37", "-102.887, 20.7633, -47.56, 0.15", "-103.804, 21.1314, -47.8091, 0.15", "-105.478, 21.7181, -48.2433, 0.15", "-105.912, 21.844, -48.3623, 0.66", "-106.899, 22.0717, -48.6189, 0.66", "-108.385, 22.3578, -49.0637, 0.66", "-109.08, 22.47, -49.3126, 0.96", "-110.383, 22.6424, -49.8798, 0.37", "-111.11, 22.7425, -50.2282, 0.37", "-111.968, 22.9053, -50.6293, 0.37", "-112.586, 23.0736, -50.9402, 0.37", "-113.212, 23.2881, -51.2557, 0.37", "-114.009, 23.599, -51.7239, 0.37", "-114.698, 23.908, -52.1529, 0.88", "-115.308, 24.1934, -52.5811, 1.11", "-116.389, 24.6933, -53.3484, 1.11", "-117.106, 24.9845, -53.8677, 0.66", "-117.946, 25.2821, -54.492, 0.44", "-118.492, 25.4584, -54.8912, 0.44", "-119.705, 25.8083, -55.7722, 0.44", "-120.499, 26.0043, -56.3399, 0.44", "-121.849, 26.2895, -57.2031, 0.22", "-122.221, 26.3589, -57.429, 0.22", "-123.169, 26.5326, -57.9383, 0.22", "-124.448, 26.7584, -58.5486, 0.22", "-125.784, 26.988, -59.1479, 0.59", "-126.856, 27.1714, -59.6099, 0.59", "-127.675, 27.3205, -59.9089, 0.59", "-128.917, 27.5396, -60.338, 0.96", "-129.976, 27.7027, -60.633, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "28.7652, 0.32346, 1.09782, 1.25", "31.4605, 2.42227, 5.16278, 1.25", "32.0027, 2.83525, 5.62512, 1.25", "32.1083, 2.91666, 5.69821, 1.25", "33.1455, 3.74889, 6.31913, 0.96", "34.6035, 4.94661, 7.11865, 0.96", "35.5772, 5.74647, 7.65258, 1.33", "36.9844, 6.8354, 7.93878, 1.69", "37.0485, 6.88378, 7.95196, 1.69", "37.6283, 7.35489, 8.07288, 1.69", "37.7103, 7.43474, 8.09003, 1.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "28.7652, 0.32346, 1.09782, 1.18", "32.1799, 0.954742, 4.93286, 1.18", "34.0701, 1.39781, 6.42333, 1.03", "34.1555, 1.42539, 6.46597, 1.03", "36.2939, 2.18331, 7.24574, 1.33", "37.8646, 2.80068, 7.64545, 1.33", "39.1744, 3.3396, 7.89893, 1.33", "39.2481, 3.37191, 7.89383, 1.33", "40.8603, 4.13718, 7.71512, 1.33", "41.4591, 4.42557, 7.6754, 1.33", "43.0242, 5.18973, 7.66724, 1.33", "43.858, 5.61235, 7.63018, 1.62", "44.7855, 6.07791, 7.5674, 1.92", "46.1221, 6.73748, 7.46473, 1.11", "47.6188, 7.4598, 7.32039, 0.88", "47.7141, 7.50824, 7.31022, 0.88", "49.1858, 8.27691, 7.13058, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "38.0673, -10.3009, 13.3247, 1.03", "38.6218, -10.1559, 13.3247, 1.03", "38.7806, -10.1225, 13.3585, 1.03", "40.1287, -9.85608, 13.7615, 1.03", "40.2681, -9.82202, 13.8064, 1.03", "41.6208, -9.47894, 14.2069, 1.03", "41.7135, -9.45522, 14.2331, 1.03", "43.5359, -9.08586, 14.7459, 1.03", "43.613, -9.07868, 14.7663, 1.03", "44.9378, -9.07169, 15.1081, 1.03", "46.4275, -9.22927, 15.5364, 1.03", "46.5591, -9.25816, 15.5753, 1.03", "47.7203, -9.63605, 15.8968, 1.25", "48.9849, -10.1895, 16.1989, 1.25", "49.0501, -10.2335, 16.2187, 1.25", "50.2609, -11.4779, 16.6472, 1.25", "50.7555, -12.1357, 16.8435, 1.25", "51.154, -12.7413, 17.0472, 1.11", "51.1969, -12.8077, 17.0709, 1.11", "52.3977, -14.4962, 17.7816, 1.11", "53.0004, -15.2825, 18.1343, 1.4", "53.0374, -15.3248, 18.159, 1.4", "54.098, -16.3653, 18.9792, 1.4", "55.3734, -17.2632, 19.9387, 1.11", "56.5097, -17.8604, 20.7798, 1.03", "56.5551, -17.8746, 20.8166, 1.03", "57.9477, -18.1209, 21.9267, 1.33", "58.0638, -18.1316, 22.0212, 1.33", "59.3219, -18.1502, 23.0458, 1.33", "59.3736, -18.1473, 23.0928, 1.33", "60.8555, -18.0238, 24.4497, 2.06", "62.0579, -17.9202, 25.5531, 2.06", "64.0698, -17.7355, 27.3943, 1.62", "64.121, -17.7303, 27.4417, 1.62", "65.6376, -17.5635, 28.8966, 1.4", "65.6882, -17.5586, 28.9449, 1.4", "67.1431, -17.4411, 30.278, 1.33", "67.1917, -17.4415, 30.3284, 1.33", "67.9408, -17.5673, 31.1384, 1.03", "67.9866, -17.584, 31.1889, 1.03", "69.2774, -18.4044, 32.6321, 1.4", "69.5311, -18.6215, 32.9262, 1.4", "70.8112, -19.971, 34.4706, 1.03", "71.7917, -21.0958, 35.672, 1.03", "72.4474, -21.9, 36.462, 1.03", "73.3383, -23.0132, 37.4688, 1.03", "74.3752, -24.3515, 38.5232, 0.81", "75.115, -25.2914, 39.2206, 0.81", "75.1557, -25.3389, 39.2552, 0.81", "75.7431, -25.9225, 39.7625, 0.81", "75.8365, -25.9937, 39.8583, 0.81", "76.1752, -26.1806, 40.241, 0.81", "76.2198, -26.196, 40.293, 0.81", "77.535, -26.5299, 41.8908, 0.81", "77.6289, -26.5466, 42.0102, 0.81", "78.976, -26.7758, 43.6575, 0.81", "79.0367, -26.7869, 43.7363, 0.81", "79.5471, -26.8814, 44.413, 0.81", "79.6087, -26.8936, 44.4908, 0.81", "80.8416, -27.1418, 45.9396, 0.81", "81.6824, -27.3774, 46.9434, 0.81", "83.5811, -28.0517, 49.2394, 1.69", "83.6244, -28.0726, 49.2909, 1.69", "83.9788, -28.3522, 49.6883, 1.69", "84.0175, -28.3977, 49.7273, 1.69", "84.9509, -29.8536, 50.5453, 1.11", "84.9828, -29.9141, 50.5689, 1.11", "85.6624, -31.2937, 50.9453, 1.03", "86.8643, -33.6764, 51.4914, 1.03", "87.7431, -35.3605, 51.857, 1.03", "87.7769, -35.4235, 51.8697, 1.03", "88.6748, -36.9928, 52.1927, 1.03", "89.5804, -38.4955, 52.6317, 1.03", "90.5938, -40.0585, 53.2447, 1.03", "91.6326, -41.5844, 54.0963, 0.96", "91.6624, -41.6284, 54.1272, 0.96", "92.4396, -42.8507, 55.1712, 0.66", "93.1842, -44.0693, 56.5099, 0.66", "93.201, -44.1031, 56.5577, 0.66", "93.4983, -44.995, 58.2531, 0.66", "93.5036, -45.0543, 58.3894, 0.66", "93.4998, -45.1112, 58.5207, 0.66" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-23.2323, -62.4632, 11.1416, 0.29", "-22.9875, -63.8209, 11.4926, 0.29", "-22.9722, -63.8918, 11.5031, 0.29", "-22.7593, -64.8593, 11.6179, 0.29", "-22.7437, -64.9306, 11.624, 0.29", "-22.6068, -65.5685, 11.7198, 1.25", "-22.3746, -66.6402, 11.9062, 1.55", "-22.0993, -67.7684, 12.0734, 1.55", "-22.0603, -67.9187, 12.0965, 1.55", "-21.6783, -69.3329, 12.3336, 1.55", "-21.1484, -71.2392, 12.6628, 1.4", "-21.129, -71.3085, 12.6755, 1.4", "-20.9661, -71.8777, 12.7766, 1.4", "-20.6166, -73.1752, 12.9755, 0.74", "-20.6036, -73.2363, 12.9824, 0.74", "-20.4808, -74.0865, 13.0323, 0.74", "-20.4734, -74.1702, 13.0326, 0.74", "-20.39, -75.7137, 13.1427, 0.74", "-20.3702, -76.7872, 13.274, 0.74", "-20.3402, -77.871, 13.4464, 0.74", "-20.29, -79.155, 13.7099, 0.74", "-20.2855, -79.2263, 13.7264, 0.74", "-20.1439, -80.953, 14.1611, 0.74", "-20.1251, -81.1039, 14.2, 0.74", "-19.7528, -83.3145, 14.799, 0.74", "-19.4949, -84.6104, 15.1334, 0.74", "-19.1301, -86.3396, 15.5509, 0.74", "-19.0965, -86.4895, 15.5821, 0.74", "-18.5842, -88.5891, 15.9192, 0.74", "-18.3048, -89.6626, 16.0845, 1.25", "-17.8638, -91.2238, 16.3087, 1.62", "-17.8382, -91.3031, 16.3168, 1.62", "-17.5188, -92.1985, 16.3809, 1.62", "-17.1555, -93.1956, 16.4132, 1.84", "-17.0758, -93.4108, 16.4122, 1.84", "-16.9374, -93.7937, 16.4158, 1.84", "-16.3925, -95.3667, 16.5771, 1.33", "-16.009, -96.6035, 16.7811, 0.96", "-15.4899, -98.4397, 17.1787, 0.96", "-15.4745, -98.4962, 17.2005, 0.96", "-15.0704, -99.9908, 17.9827, 0.96", "-14.7131, -101.261, 18.8317, 1.62", "-14.4931, -102.011, 19.526, 1.62", "-14.4786, -102.056, 19.5789, 1.62", "-13.826, -103.962, 22.0798, 1.03", "-13.8112, -104.004, 22.1354, 1.03", "-13.6421, -104.461, 22.7716, 1.03", "-13.2653, -105.474, 24.1696, 0.74", "-13.2507, -105.518, 24.2232, 0.74", "-13.0758, -106.218, 24.8807, 0.74", "-13.0662, -106.281, 24.9142, 0.74", "-12.9827, -107.418, 25.4255, 0.74", "-12.9829, -107.552, 25.4835, 0.74", "-13.0413, -109.273, 26.1642, 0.74", "-13.0467, -109.35, 26.1951, 0.74", "-13.1916, -110.751, 26.7902, 0.74", "-13.3549, -112.078, 27.341, 0.74", "-13.5299, -113.288, 27.8247, 1.11", "-13.5418, -113.364, 27.856, 1.11", "-13.7105, -114.393, 28.2899, 1.11", "-13.9123, -115.748, 28.8585, 1.11", "-14.0127, -116.38, 29.1109, 1.4", "-14.0335, -116.527, 29.1613, 1.4", "-14.1445, -117.323, 29.3982, 1.4", "-14.3389, -118.706, 29.8023, 1.18", "-14.5164, -119.893, 30.1931, 0.74", "-14.6667, -120.898, 30.5245, 0.74", "-14.6745, -120.967, 30.5469, 0.74", "-14.7645, -122.063, 30.8913, 1.18", "-14.7669, -122.133, 30.9114, 1.18", "-14.7228, -123.651, 31.2561, 1.33", "-14.6386, -124.612, 31.3967, 1.33", "-14.4395, -126.169, 31.5678, 1.11", "-14.4314, -126.242, 31.5727, 1.11", "-14.3387, -127.415, 31.5386, 0.74", "-14.2938, -128.559, 31.3918, 0.59", "-14.3353, -129.329, 31.1818, 0.59", "-14.3528, -129.395, 31.1581, 0.59", "-14.8862, -130.457, 30.7428, 0.59", "-15.6006, -131.551, 30.3256, 0.52", "-15.6444, -131.605, 30.3065, 0.52", "-16.2361, -132.266, 30.1132, 0.81", "-16.8433, -133.157, 29.9809, 0.81", "-17.045, -133.918, 29.9302, 0.66", "-17.0472, -133.992, 29.9288, 0.66", "-16.9916, -134.84, 29.9339, 0.66", "-16.9693, -135.003, 29.9398, 0.66", "-16.5763, -136.904, 30.0441, 0.59", "-15.9686, -139.434, 30.1934, 1.03", "-15.7412, -140.41, 30.2877, 1.33", "-15.7256, -140.481, 30.2973, 1.33", "-15.4926, -141.722, 30.5212, 0.66", "-15.3308, -143.0, 30.8006, 0.44", "-15.2766, -144.043, 31.0919, 1.11", "-15.2917, -145.38, 31.5541, 1.11", "-15.2939, -145.439, 31.5751, 1.11", "-15.3541, -146.401, 31.8994, 0.81", "-15.5185, -147.737, 32.2859, 1.11", "-15.5333, -147.815, 32.3121, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-23.2323, -62.4632, 11.1416, 0.52", "-22.3317, -61.9697, 11.6747, 0.52", "-22.2778, -61.9401, 11.7094, 0.52", "-21.4518, -61.5278, 12.1188, 0.52", "-21.2885, -61.4464, 12.1997, 0.52", "-19.9146, -60.7607, 12.8807, 0.52", "-19.766, -60.6865, 12.9544, 0.88", "-19.7104, -60.6581, 12.9874, 0.88", "-18.1524, -59.9194, 13.9373, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-14.3163, -35.6992, -3.24466, 0.15", "-4.7016, -36.3061, -0.557238, 0.15", "5.13537, -37.0388, 1.10017, 0.15", "15.0819, -37.965, 0.562913, 0.15", "25.0382, -38.5393, 1.3207, 0.15" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-14.3163, -35.6992, -3.24466, 0.15", "-4.5359, -36.4235, -1.27823, 0.15", "5.45303, -36.6536, -0.862141, 0.15", "15.2098, -37.358, 1.22522, 0.15", "24.9301, -38.5649, 3.27292, 0.15", "34.9078, -39.0197, 3.78086, 0.15" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-64.4238, -33.7085, -10.5139, 0.88", "-64.3213, -34.6763, -10.4367, 0.88", "-64.1562, -35.8843, -10.266, 0.59", "-63.9868, -37.4401, -9.89276, 0.37", "-63.9085, -38.6092, -9.56936, 0.74", "-63.8593, -40.6282, -8.99465, 0.37", "-63.8581, -41.2002, -8.81132, 0.74", "-63.8936, -42.6471, -8.25048, 0.52", "-63.9621, -44.6307, -7.39342, 0.52", "-64.0109, -45.702, -6.88143, 1.11", "-64.128, -46.9174, -6.26397, 1.11", "-64.3817, -48.1913, -5.61782, 0.88", "-64.3997, -48.2632, -5.58045, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-64.4238, -33.7085, -10.5139, 0.81", "-65.5482, -33.9586, -10.6744, 0.81", "-66.2943, -34.1369, -10.7774, 0.81", "-67.4281, -34.4157, -10.9297, 0.66", "-68.5539, -34.6756, -11.0647, 0.66", "-69.3418, -34.8504, -11.1528, 0.66", "-69.4456, -34.8713, -11.163, 0.66", "-69.9408, -34.9566, -11.2055, 0.66", "-70.0891, -34.9804, -11.2019, 0.66", "-71.2429, -35.1592, -11.0228, 0.66", "-71.31, -35.1717, -11.0068, 0.66", "-72.4147, -35.4513, -10.689, 0.66", "-72.4791, -35.4704, -10.6685, 0.66", "-73.751, -35.9821, -10.2309, 0.66", "-73.8189, -36.0182, -10.2063, 0.66", "-74.5195, -36.4839, -9.89626, 0.66", "-75.0524, -36.8671, -9.65018, 0.44", "-75.1144, -36.9115, -9.62249, 0.44", "-75.8914, -37.3326, -9.3599, 0.44", "-75.9821, -37.3686, -9.34028, 0.44", "-76.8143, -37.5514, -9.17135, 0.44", "-77.0303, -37.5681, -9.13236, 0.44", "-77.8858, -37.5954, -9.04509, 0.44", "-78.6572, -37.6035, -9.01213, 0.88", "-78.7271, -37.6022, -9.01316, 0.88", "-79.6049, -37.604, -9.07518, 0.88", "-80.3267, -37.632, -9.18171, 0.88", "-81.0663, -37.7136, -9.29935, 0.88", "-81.212, -37.74, -9.3245, 0.88", "-81.703, -37.8549, -9.40809, 0.88", "-81.9992, -37.9289, -9.45545, 0.22", "-82.867, -38.152, -9.57152, 0.37", "-83.7376, -38.3685, -9.65607, 0.37", "-83.8055, -38.3863, -9.65917, 0.37", "-84.3502, -38.541, -9.68101, 0.88", "-84.4174, -38.5608, -9.68342, 0.88", "-85.3447, -38.8339, -9.71004, 0.88", "-85.4122, -38.8527, -9.71112, 0.88", "-86.1805, -39.0244, -9.72507, 0.88", "-86.259, -39.0402, -9.72646, 0.88", "-87.2859, -39.2324, -9.73772, 0.88", "-87.3547, -39.2468, -9.73808, 0.88", "-87.8814, -39.364, -9.7386, 1.11", "-88.6758, -39.5305, -9.73627, 0.88", "-89.407, -39.6765, -9.73125, 0.88", "-90.1564, -39.8405, -9.72358, 0.74", "-90.9329, -40.0249, -9.71278, 0.59", "-91.0688, -40.0599, -9.71068, 0.59", "-92.0626, -40.3439, -9.69481, 0.59", "-92.2054, -40.389, -9.67886, 0.59", "-93.1391, -40.6943, -9.50733, 0.59", "-94.0487, -40.9869, -9.29295, 0.74", "-95.1311, -41.336, -8.99261, 0.88", "-95.8151, -41.5839, -8.78851, 0.88", "-97.3606, -42.2271, -8.28158, 0.37", "-97.5559, -42.3111, -8.21945, 0.37", "-98.3593, -42.662, -7.97949, 0.37", "-98.5353, -42.744, -7.93384, 0.37", "-99.5745, -43.249, -7.765, 0.81", "-99.8443, -43.3825, -7.75697, 0.81", "-100.369, -43.6521, -7.81758, 0.44", "-101.118, -44.0392, -7.90172, 0.44", "-101.266, -44.1112, -7.93025, 0.44", "-101.875, -44.3256, -8.07252, 0.44", "-102.197, -44.3783, -8.15164, 0.44", "-103.089, -44.4349, -8.35525, 0.44", "-103.376, -44.4317, -8.39655, 0.44", "-104.496, -44.334, -8.48633, 0.44", "-105.603, -44.1905, -8.52789, 0.74", "-106.741, -44.0177, -8.43848, 1.03", "-107.386, -43.9305, -8.32158, 1.03", "-108.381, -43.8662, -7.8896, 0.37", "-109.441, -43.8868, -7.20845, 0.37", "-109.495, -43.8936, -7.16493, 0.37", "-110.603, -44.1474, -6.15888, 0.96", "-111.007, -44.2828, -5.68249, 0.96", "-112.447, -44.8452, -3.83251, 0.66", "-112.589, -44.909, -3.65622, 0.66", "-113.307, -45.2717, -2.80211, 0.66", "-113.374, -45.3062, -2.73535, 0.66", "-115.47, -46.4044, -0.981514, 1.62", "-116.124, -46.7621, -0.539147, 1.62", "-117.214, -47.3862, 7.45655E-4, 0.81", "-118.173, -47.9359, 0.334816, 0.44", "-119.282, -48.5774, 0.557597, 0.44", "-119.344, -48.6124, 0.559389, 0.44", "-120.686, -49.3551, 0.31482, 0.44", "-120.746, -49.3882, 0.29564, 0.44", "-121.958, -50.0466, -0.304666, 0.44", "-122.086, -50.1156, -0.387112, 0.44", "-122.559, -50.376, -0.719885, 0.44", "-122.612, -50.4062, -0.755734, 0.44", "-123.827, -51.2104, -1.49965, 0.44", "-123.908, -51.2742, -1.53187, 0.44", "-124.464, -51.7626, -1.65711, 0.44", "-125.349, -52.534, -1.81225, 0.44", "-125.681, -52.8041, -1.85016, 0.44", "-126.777, -53.5853, -1.90842, 0.44", "-128.01, -54.389, -1.89848, 0.44", "-128.115, -54.4508, -1.89853, 0.44", "-129.193, -55.0124, -1.90413, 0.81", "-130.422, -55.5679, -1.88625, 1.18", "-131.761, -56.0905, -1.84529, 1.18", "-131.837, -56.1158, -1.84079, 1.18", "-133.317, -56.5658, -1.68533, 1.33", "-134.23, -56.8451, -1.54011, 1.62", "-135.825, -57.3663, -1.17819, 1.62", "-135.944, -57.4088, -1.14566, 1.62", "-136.836, -57.7575, -0.874595, 1.62", "-137.918, -58.2082, -0.537523, 1.03", "-138.411, -58.4193, -0.383863, 0.59", "-139.11, -58.7356, -0.186712, 0.37", "-139.173, -58.7642, -0.175244, 0.37", "-139.992, -59.1266, -0.110153, 0.37", "-140.446, -59.3244, -0.120311, 0.66", "-141.403, -59.7495, -0.211293, 0.66", "-141.467, -59.7794, -0.214522, 0.66", "-142.175, -60.1143, -0.223851, 0.96", "-143.155, -60.594, -0.116942, 1.18", "-143.217, -60.6255, -0.10306, 1.18", "-144.382, -61.2594, 0.224038, 1.18", "-145.344, -61.8396, 0.576401, 1.18", "-145.408, -61.8798, 0.605062, 1.18", "-146.574, -62.6593, 1.32001, 1.18", "-146.658, -62.7169, 1.38614, 1.18" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.08314, 61.8292, 28.5085, 0.37", "3.07636, 62.3471, 28.9978, 0.37", "4.47597, 63.1893, 29.733, 0.37", "5.89528, 64.0912, 30.5908, 0.37", "7.30365, 65.0485, 31.4855, 0.37", "8.22258, 65.6821, 32.0459, 0.74", "8.69503, 65.9952, 32.3425, 0.74", "9.39782, 66.4412, 32.8293, 0.44", "10.7394, 67.1759, 33.7828, 0.44", "11.3407, 67.4367, 34.1691, 0.44", "12.784, 67.8152, 34.9606, 0.44", "14.1629, 67.9653, 35.8096, 0.66", "14.9031, 67.9771, 36.4062, 0.66", "15.5528, 67.9751, 37.0115, 0.66", "16.0101, 67.9932, 37.4836, 1.03", "16.8312, 68.1323, 38.4179, 1.03", "18.6172, 68.8756, 40.6432, 1.03", "19.8389, 69.7997, 42.281, 0.66", "20.3836, 70.4117, 43.0598, 0.59", "20.7848, 71.0359, 43.6464, 0.59", "21.4512, 72.409, 44.5748, 0.44", "21.872, 73.5701, 45.064, 0.44", "22.161, 74.6713, 45.2919, 0.88", "22.352, 75.5163, 45.3859, 1.11", "22.5426, 76.4116, 45.512, 1.11", "22.7653, 77.4414, 45.6791, 0.66", "22.9671, 78.2818, 45.8247, 0.52", "23.2386, 79.1908, 46.0277, 0.52", "23.6026, 80.1507, 46.3974, 0.52", "23.9719, 80.9742, 46.9338, 0.74", "24.1967, 81.4349, 47.3262, 0.74", "24.456, 81.9661, 47.8697, 0.74", "24.9405, 82.974, 48.9672, 0.52", "25.6446, 84.4798, 50.5475, 0.52", "25.9408, 85.1314, 51.1653, 0.88", "26.1698, 85.6612, 51.6443, 0.88", "26.5764, 86.6704, 52.5585, 0.52", "26.807, 87.3042, 53.0988, 0.52", "27.1477, 88.3431, 53.763, 0.52", "27.5659, 89.5163, 54.1933, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "2.08314, 61.8292, 28.5085, 0.52", "2.50366, 63.2943, 28.9798, 0.52", "2.89005, 64.6578, 29.6236, 0.52", "3.34911, 65.9074, 30.4764, 0.52", "3.59584, 66.514, 31.151, 0.52", "3.98155, 67.4806, 32.4037, 0.52", "4.34801, 68.4332, 33.7031, 0.52", "4.71169, 69.3698, 35.1632, 0.52", "5.20699, 70.7116, 37.3674, 0.52", "5.92733, 72.8906, 40.9543, 0.52", "6.12636, 73.5623, 42.0805, 0.52", "6.27838, 74.153, 43.0375, 0.52", "6.36622, 74.529, 43.5643, 0.81", "6.50172, 75.2529, 44.307, 0.81", "6.56602, 75.7868, 44.6372, 0.81", "6.63843, 76.2199, 44.7572, 0.44", "6.88142, 77.3427, 45.0028, 0.37", "7.03188, 78.0171, 45.1186, 0.74", "7.24054, 78.9802, 45.3185, 0.74", "7.30691, 79.3808, 45.4154, 0.37", "7.37666, 79.9536, 45.6196, 0.37", "7.43399, 80.501, 45.8936, 0.37", "7.5065, 81.2006, 46.3679, 0.37", "7.59863, 81.9539, 47.07, 0.37", "7.65863, 82.4119, 47.6119, 0.37", "7.78398, 83.4352, 48.8828, 0.37", "7.84641, 83.974, 49.566, 0.37", "7.94676, 84.8367, 50.5884, 0.66", "8.17402, 86.4449, 52.3376, 0.66", "8.3829, 87.7913, 53.6597, 1.03", "8.48261, 88.3984, 54.2113, 1.03", "8.63379, 89.4319, 54.9932, 0.52", "8.80788, 90.7514, 55.869, 0.52", "8.89518, 91.4735, 56.2461, 0.81", "8.92265, 91.6888, 56.3212, 0.81", "9.07537, 92.5734, 56.6116, 0.37", "9.2957, 93.5588, 56.9742, 0.37", "9.53635, 94.3646, 57.2875, 0.37", "9.76664, 95.0348, 57.5683, 0.37", "10.1033, 96.0002, 57.9756, 0.37", "10.5834, 97.3529, 58.5366, 0.37", "10.8368, 98.006, 58.7985, 0.37", "11.2161, 98.8348, 59.1479, 0.37", "11.5485, 99.4764, 59.4003, 0.37", "11.8487, 100.006, 59.629, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-32.5621, 33.073, 1.9193, 0.66", "-33.1046, 33.424, 1.33698, 0.66", "-33.5327, 33.5924, 0.837317, 0.52", "-33.9193, 33.7266, 0.402919, 0.52", "-34.7736, 34.0364, -0.517585, 0.81", "-35.1885, 34.2186, -0.958849, 0.81", "-36.419, 34.8818, -2.30677, 0.81", "-37.6604, 35.6939, -3.73193, 0.44", "-38.0379, 35.9856, -4.15304, 0.44", "-38.384, 36.3016, -4.52695, 0.59", "-39.0772, 37.0172, -5.18226, 0.59", "-39.7727, 37.7723, -5.75997, 0.59", "-40.3301, 38.3871, -6.11125, 0.59", "-40.8749, 38.9472, -6.4493, 0.59", "-41.7506, 39.6105, -6.9899, 0.59", "-42.3242, 39.917, -7.31476, 0.22", "-43.0307, 40.1635, -7.70812, 0.22", "-43.8359, 40.3782, -8.14493, 0.22", "-45.2874, 40.7125, -8.95045, 0.44", "-46.0157, 40.882, -9.43673, 0.59", "-46.6318, 41.056, -9.87207, 0.81", "-47.5081, 41.3554, -10.5382, 0.81", "-48.1058, 41.5842, -10.9893, 1.18", "-48.5841, 41.7763, -11.3558, 1.47", "-50.3087, 42.3566, -12.5384, 0.96", "-51.0852, 42.577, -13.0973, 0.66", "-52.0679, 42.827, -13.7932, 0.66", "-52.6879, 42.971, -14.2017, 0.66", "-54.3025, 43.2561, -15.3461, 0.37", "-55.4857, 43.3867, -16.3264, 0.37", "-56.5999, 43.435, -17.2966, 0.74", "-57.1119, 43.4229, -17.7685, 0.74", "-57.8177, 43.3801, -18.4181, 0.44", "-59.5525, 43.2521, -20.0008, 0.44", "-61.387, 43.0945, -21.5568, 0.44", "-62.117, 43.0494, -22.1791, 1.33", "-63.1163, 43.0084, -22.9625, 1.33", "-63.7947, 43.0013, -23.4567, 0.52", "-64.3549, 43.0445, -23.8285, 0.52", "-65.581, 43.2514, -24.3937, 0.52", "-67.1481, 43.602, -24.9758, 0.81", "-67.9428, 43.7843, -25.2301, 0.52", "-69.0698, 44.0021, -25.6565, 0.52", "-70.6508, 44.1838, -26.3565, 0.52", "-72.6534, 44.2994, -27.2883, 0.52", "-74.4531, 44.3606, -28.1147, 0.37", "-75.9258, 44.4159, -28.7493, 1.11", "-79.0502, 44.5806, -30.1749, 1.11", "-81.1109, 44.7061, -31.16, 0.88", "-81.7164, 44.749, -31.45, 0.59", "-82.5416, 44.8455, -31.8505, 0.37", "-83.4005, 44.9974, -32.2476, 0.37", "-84.9778, 45.3729, -32.9534, 0.29", "-85.6621, 45.5755, -33.1783, 0.81", "-86.8546, 45.9424, -33.5355, 1.11", "-88.3254, 46.3442, -33.9685, 1.11", "-90.2108, 46.7925, -34.5479, 0.66", "-91.0567, 46.9772, -34.8033, 0.52", "-91.6971, 47.1123, -34.9809, 0.52", "-92.9548, 47.3927, -35.3279, 0.52", "-93.9177, 47.6337, -35.6129, 0.52", "-94.9939, 47.9587, -35.9198, 0.52", "-95.8839, 48.2998, -36.1849, 0.52", "-96.5447, 48.6176, -36.4451, 0.88", "-96.9126, 48.8326, -36.6543, 0.52", "-97.7157, 49.4046, -37.2364, 0.44", "-98.3376, 49.9193, -37.7437, 0.44", "-99.2392, 50.8111, -38.5559, 1.03", "-99.5651, 51.1633, -38.8791, 1.03", "-100.482, 52.243, -39.8199, 0.52", "-100.905, 52.7787, -40.2318, 0.37", "-101.396, 53.4669, -40.655, 0.37", "-102.274, 54.8449, -41.4643, 0.22", "-102.4, 55.0735, -41.5757, 0.74", "-102.662, 55.5972, -41.8069, 1.03", "-103.099, 56.519, -42.1737, 1.03", "-103.469, 57.2915, -42.4881, 0.74", "-104.132, 58.6199, -43.116, 0.22", "-104.567, 59.4314, -43.5214, 0.22", "-105.435, 60.8955, -44.2974, 0.22", "-105.895, 61.5865, -44.6941, 0.88", "-106.418, 62.3055, -45.1231, 0.88", "-107.233, 63.3548, -45.7345, 0.22", "-107.705, 63.9314, -46.0248, 0.22", "-108.705, 65.0607, -46.6799, 0.22", "-108.848, 65.2211, -46.7772, 0.88", "-109.192, 65.6145, -47.0013, 0.88", "-109.422, 65.8622, -47.1775, 0.15", "-109.968, 66.3963, -47.5886, 0.15", "-110.867, 67.1788, -48.3602, 0.15", "-111.188, 67.4501, -48.6604, 1.03", "-111.584, 67.8085, -49.0665, 1.25", "-112.859, 69.0191, -50.5617, 0.22", "-113.296, 69.4483, -51.1119, 0.22", "-113.625, 69.772, -51.5301, 0.22", "-114.149, 70.3, -52.129, 0.22", "-114.842, 70.9639, -52.9064, 0.22", "-115.725, 71.8549, -53.875, 0.22", "-115.945, 72.0874, -54.1107, 0.66", "-116.368, 72.5336, -54.5815, 0.66", "-117.088, 73.2587, -55.3338, 0.66", "-118.445, 74.5453, -56.7503, 0.66", "-118.827, 74.8999, -57.1202, 0.22", "-119.655, 75.7337, -57.9335, 0.22", "-119.655, 75.7337, -57.9335, 0.81", "-120.174, 76.3548, -58.4452, 0.81", "-121.358, 77.9202, -59.5314, 0.29", "-121.964, 78.784, -60.0339, 0.29", "-122.81, 79.9534, -60.662, 0.88", "-123.386, 80.7448, -61.0707, 1.18", "-123.994, 81.5717, -61.4974, 1.18", "-124.625, 82.3882, -61.9392, 0.74", "-125.302, 83.1861, -62.3611, 0.22", "-126.26, 84.2108, -62.9509, 0.22", "-127.085, 85.0186, -63.42, 0.22", "-127.619, 85.5302, -63.7133, 0.22", "-128.882, 86.7238, -64.4705, 0.22", "-129.565, 87.3732, -64.8723, 0.22", "-129.97, 87.7776, -65.1178, 0.81", "-130.442, 88.2666, -65.4822, 0.81", "-131.283, 89.1846, -66.2106, 0.81", "-132.269, 90.3837, -67.2367, 0.22", "-132.868, 91.2498, -68.0472, 0.22", "-133.506, 92.2903, -69.0997, 0.59", "-134.344, 93.7198, -70.6358, 0.96", "-134.569, 94.1049, -71.0649, 0.15", "-134.819, 94.5341, -71.576, 0.15", "-135.334, 95.4489, -72.601, 0.15", "-135.59, 95.931, -73.1301, 0.15", "-135.945, 96.6071, -73.7854, 0.81", "-136.242, 97.1559, -74.2452, 0.81", "-137.116, 98.6609, -75.5088, 0.22", "-137.362, 99.0793, -75.8309, 0.22", "-137.548, 99.4314, -76.0941, 0.66", "-137.683, 99.7027, -76.3119, 0.66", "-137.817, 99.976, -76.5522, 0.66", "-138.237, 100.817, -77.3381, 0.22", "-138.526, 101.404, -77.8784, 0.88", "-139.112, 102.587, -79.0467, 0.88", "-139.871, 104.063, -80.6035, 0.15", "-140.186, 104.652, -81.2601, 0.88", "-140.211, 104.694, -81.3111, 0.88", "-147.876, 109.607, -85.7119, 0.88", "-155.991, 114.838, -88.7656, 0.88", "-164.253, 120.416, -90.6407, 0.88", "-172.526, 125.273, -93.8268, 0.88", "-181.496, 128.153, -97.2947, 0.88", "-189.661, 133.042, -100.708, 0.88", "-197.133, 138.325, -105.051, 0.88", "-203.826, 143.924, -110.224, 0.88", "-212.061, 147.601, -114.688, 0.88", "-220.076, 150.177, -120.142, 0.88", "-226.832, 153.277, -126.897, 0.88", "-232.39, 156.247, -134.715, 0.88" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-32.5621, 33.073, 1.9193, 0.29", "-32.6842, 33.3909, 1.91522, 0.29", "-32.987, 34.1796, 1.90508, 0.29", "-33.6242, 35.8399, 1.88376, 0.29", "-34.7732, 38.8332, 1.8453, 0.29", "-34.9103, 39.1903, 1.84071, 0.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-51.6344, 3.91123, 14.9521, 1.33", "-51.5457, 3.31644, 15.9641, 1.33", "-51.4827, 2.67574, 16.8867, 0.74", "-51.4414, 1.83636, 17.9345, 0.74", "-51.3457, -0.512232, 20.5196, 0.74", "-51.2985, -1.60207, 21.5569, 1.11", "-51.268, -2.27165, 22.1019, 0.88", "-51.2505, -3.34491, 22.8106, 0.88", "-51.2805, -4.20724, 23.3121, 1.11", "-51.3816, -5.10437, 23.7769, 0.74", "-51.6072, -6.28648, 24.3178, 0.74", "-51.9419, -7.41158, 24.9977, 0.74", "-52.1851, -7.9883, 25.4298, 1.11", "-52.8056, -9.21134, 26.4979, 1.11", "-53.6472, -10.5916, 27.8877, 1.11", "-54.1756, -11.2798, 28.7021, 0.88", "-54.9282, -12.0621, 29.8331, 0.88", "-55.618, -12.6633, 30.8638, 0.88" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-51.6344, 3.91123, 14.9521, 0.96", "-52.129, 4.50244, 15.4532, 0.96", "-52.6502, 5.11213, 16.1292, 0.81", "-53.2903, 5.73885, 16.9564, 0.81", "-53.9083, 6.21541, 17.7565, 0.81", "-54.7364, 6.67759, 18.8144, 0.81", "-55.5895, 7.01539, 19.8611, 0.81", "-56.5158, 7.17886, 20.998, 0.81", "-57.1819, 7.17472, 21.7866, 0.81", "-57.9376, 7.09087, 22.5925, 0.81", "-58.9904, 6.92862, 23.4974, 0.59", "-59.5999, 6.85388, 23.8896, 0.59", "-60.5765, 6.81674, 24.3445, 0.59", "-61.3486, 6.90659, 24.62, 0.59", "-62.1169, 7.14336, 24.8549, 0.59", "-62.6457, 7.39278, 25.0417, 0.59", "-63.488, 7.94949, 25.5945, 1.03", "-64.058, 8.48228, 26.2172, 0.66", "-64.4772, 8.95805, 26.969, 0.66", "-64.8523, 9.39534, 27.8536, 0.66", "-65.513, 10.1063, 29.5743, 0.96", "-66.5323, 11.0777, 32.2639, 0.96", "-66.9285, 11.3877, 33.2829, 0.96", "-67.7632, 11.9226, 35.2972, 0.96", "-68.4218, 12.2394, 36.6572, 0.96", "-68.9428, 12.378, 37.4557, 0.96", "-69.7213, 12.4426, 37.9999, 1.18", "-70.6579, 12.4528, 38.2112, 1.18", "-71.1785, 12.46, 38.2296, 1.18", "-72.6933, 12.5748, 38.0137, 0.44", "-73.5607, 12.6719, 37.8972, 0.44", "-74.4967, 12.8129, 37.8599, 0.44", "-74.9998, 12.8995, 37.931, 0.96", "-76.0314, 13.1016, 38.2418, 1.11", "-76.5443, 13.201, 38.4583, 1.11", "-78.0904, 13.4732, 39.2588, 0.59", "-79.1898, 13.637, 39.8542, 0.59", "-80.5949, 13.7914, 40.6036, 0.74", "-81.0356, 13.838, 40.818, 0.74", "-81.7795, 13.9207, 41.1584, 0.59", "-82.6071, 14.0314, 41.4685, 0.59", "-83.0298, 14.097, 41.5733, 0.59", "-83.7401, 14.2216, 41.7171, 0.59", "-84.7204, 14.3954, 41.8494, 0.59", "-85.6583, 14.5477, 41.9766, 0.81", "-86.6111, 14.7109, 42.1021, 1.11", "-87.5389, 14.8847, 42.2456, 1.11", "-88.0851, 15.0039, 42.3329, 0.44", "-88.7198, 15.1696, 42.4213, 0.44", "-89.6355, 15.4547, 42.5176, 0.44", "-90.4159, 15.7387, 42.5668, 0.44", "-91.0228, 15.9894, 42.6014, 0.44", "-92.402, 16.5493, 42.6692, 0.44", "-93.1971, 16.8346, 42.7622, 0.44", "-94.2181, 17.1653, 42.9625, 0.44", "-94.7657, 17.3287, 43.1045, 0.29", "-95.295, 17.4676, 43.3291, 0.29", "-96.2682, 17.6977, 43.9852, 0.29", "-97.4769, 17.9478, 45.1685, 0.29", "-97.9675, 18.0517, 45.7977, 0.66", "-98.3107, 18.1367, 46.3105, 0.66", "-99.3797, 18.4805, 48.0082, 0.52", "-100.087, 18.7788, 49.1893, 0.37", "-100.242, 18.8596, 49.4443, 0.66", "-100.883, 19.1961, 50.3359, 0.96", "-101.329, 19.3975, 50.8692, 1.25", "-101.824, 19.5628, 51.3329, 1.25", "-103.163, 19.8776, 52.1853, 1.03", "-103.802, 19.9818, 52.4988, 0.74", "-104.718, 20.0536, 52.8733, 0.74", "-105.447, 20.05, 53.0912, 0.74", "-106.583, 19.9833, 53.3488, 0.74", "-107.524, 19.8969, 53.4961, 1.11", "-108.334, 19.815, 53.5523, 1.11", "-109.355, 19.7195, 53.5768, 1.11", "-110.824, 19.6287, 53.5488, 1.4", "-111.563, 19.623, 53.478, 0.66", "-112.046, 19.6518, 53.4041, 0.52", "-113.057, 19.7852, 53.1995, 0.44", "-113.768, 19.937, 53.0331, 0.44", "-114.511, 20.1621, 52.8472, 1.03", "-115.751, 20.5998, 52.4994, 0.81", "-116.209, 20.7676, 52.3735, 0.59", "-117.051, 21.0776, 52.1434, 0.59", "-117.994, 21.3992, 51.9217, 0.96", "-118.725, 21.5949, 51.7916, 0.96", "-119.232, 21.6935, 51.7347, 0.74", "-120.137, 21.8337, 51.6842, 0.66", "-120.643, 21.8973, 51.6594, 0.66", "-122.112, 22.0735, 51.603, 0.66", "-123.66, 22.2595, 51.5372, 0.66", "-124.369, 22.3535, 51.5085, 0.66", "-124.832, 22.4263, 51.4937, 1.11", "-125.407, 22.5418, 51.4685, 1.11", "-126.623, 22.8731, 51.4238, 1.11", "-127.122, 23.0396, 51.4097, 0.74", "-127.698, 23.245, 51.4008, 0.52", "-128.342, 23.4537, 51.3921, 0.52", "-129.291, 23.7265, 51.3995, 0.52", "-130.071, 23.9222, 51.4143, 0.74", "-131.016, 24.1159, 51.4614, 1.03", "-132.193, 24.3193, 51.5901, 1.18", "-133.209, 24.4506, 51.7344, 1.18", "-134.143, 24.5427, 51.8838, 0.88", "-135.228, 24.6173, 52.1098, 0.88", "-136.375, 24.6809, 52.4235, 0.74", "-137.767, 24.7712, 52.8932, 0.74", "-138.941, 24.8896, 53.3462, 0.74", "-139.962, 25.0353, 53.8154, 0.74", "-141.051, 25.257, 54.4096, 0.74", "-142.007, 25.5378, 54.991, 0.52", "-142.539, 25.7425, 55.3239, 0.52", "-143.676, 26.2653, 55.9939, 0.52", "-144.878, 26.891, 56.7424, 0.52", "-145.9, 27.4632, 57.3805, 0.52", "-146.275, 27.6843, 57.5868, 0.15", "-147.057, 28.1545, 57.9839, 0.15", "-148.291, 28.8758, 58.6365, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-129.976, 27.7027, -60.633, 0.52", "-132.028, 26.068, -61.8983, 0.52", "-133.228, 25.241, -62.5941, 0.52", "-134.576, 24.3787, -63.3524, 0.29", "-135.859, 23.5775, -64.0671, 0.29", "-137.356, 22.635, -64.8879, 0.29", "-139.496, 21.2644, -65.9841, 0.29", "-140.438, 20.7153, -66.4657, 0.29", "-141.939, 19.8715, -67.2625, 0.15", "-142.727, 19.428, -67.6772, 0.15", "-144.457, 18.4153, -68.6799, 0.15", "-146.135, 17.3984, -69.7091, 0.15", "-148.291, 15.9643, -70.8914, 0.15", "-154.528, 9.72856, -75.9737, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-129.976, 27.7027, -60.633, 1.62", "-130.812, 28.2529, -61.614, 1.62", "-131.63, 28.7266, -62.4898, 0.44", "-132.666, 29.2727, -63.4636, 0.44", "-133.329, 29.577, -64.0477, 0.37", "-134.638, 30.043, -65.1907, 0.37", "-135.878, 30.412, -66.2135, 0.22", "-136.733, 30.6158, -66.8826, 0.22", "-137.923, 30.8366, -67.7023, 0.22", "-139.439, 31.0456, -68.5896, 0.22", "-141.698, 31.2188, -69.8077, 0.22", "-142.844, 31.2259, -70.3301, 0.22", "-143.464, 31.1929, -70.5852, 0.81", "-144.163, 31.1128, -70.8592, 1.18", "-144.86, 30.971, -71.0782, 1.18", "-146.642, 30.4578, -71.4105, 0.22", "-147.652, 30.0909, -71.5516, 0.22", "-148.186, 29.86, -71.6302, 0.88", "-148.709, 29.6198, -71.7637, 0.88", "-149.778, 29.1336, -72.1854, 0.29", "-151.102, 28.5837, -72.7929, 0.29", "-152.757, 27.9964, -73.7058, 0.15", "-155.286, 27.3915, -75.2177, 0.15", "-157.548, 27.0866, -76.6155, 1.25", "-159.685, 26.9941, -78.0345, 0.52", "-161.088, 27.0867, -79.0017, 0.52", "-162.878, 27.3987, -80.2272, 0.52", "-165.153, 28.0588, -81.6868, 0.52", "-166.096, 28.4646, -82.2257, 1.03", "-167.252, 29.0425, -82.6804, 0.52", "-168.592, 29.8223, -83.0604, 0.52", "-169.126, 30.1645, -83.1848, 0.52", "-169.563, 30.4722, -83.2672, 0.22", "-170.523, 31.1807, -83.4985, 0.22", "-171.228, 31.7218, -83.6491, 0.22", "-172.089, 32.4085, -83.7869, 0.22", "-172.788, 32.9876, -83.926, 0.22", "-174.61, 34.5263, -84.3546, 0.22", "-175.033, 34.8823, -84.4683, 0.66", "-175.759, 35.4899, -84.6812, 0.22", "-177.145, 36.6931, -85.1008, 0.22", "-186.029, 38.4554, -89.3747, 0.22", "-195.016, 42.1731, -91.9611, 0.22", "-204.346, 44.8498, -94.5006, 0.22", "-214.234, 45.8099, -95.6811, 0.22", "-223.866, 45.1958, -98.3064, 0.22", "-233.8, 44.6842, -99.3419, 0.22", "-243.762, 44.7892, -100.205, 0.22", "-253.737, 44.0445, -100.179, 0.22", "-263.542, 42.8114, -98.6036, 0.22", "-273.063, 42.9343, -95.547, 0.22", "-282.831, 43.2046, -93.4212, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "37.7103, 7.43474, 8.09003, 0.74", "39.5435, 7.83743, 8.23659, 0.74", "40.5574, 8.10972, 8.33473, 0.74", "40.6249, 8.12788, 8.34096, 0.74", "41.6966, 8.41493, 8.43761, 0.96", "41.8566, 8.45683, 8.4519, 0.96", "42.9703, 8.74411, 8.55056, 0.74", "44.6893, 9.17143, 8.68102, 0.44", "45.9918, 9.4723, 8.77945, 0.81", "46.0605, 9.48587, 8.78439, 0.81", "47.3196, 9.69362, 8.81105, 1.03", "47.3988, 9.70519, 8.80862, 1.03", "48.7124, 9.85879, 8.68571, 1.03", "48.7901, 9.87204, 8.67145, 1.03", "49.6935, 10.0963, 8.45435, 1.03", "50.84, 10.5066, 8.17136, 0.66", "51.4279, 10.8065, 8.00861, 0.66", "51.5931, 10.9391, 7.96673, 0.66", "52.1868, 11.5792, 7.963, 0.66", "52.2576, 11.6598, 7.98287, 0.66", "52.8626, 12.2661, 8.50986, 0.66", "52.9644, 12.3331, 8.62375, 0.66", "53.7781, 12.6884, 9.60457, 0.66", "55.0673, 13.0349, 11.088, 1.03", "55.316, 13.069, 11.3689, 1.03", "56.5645, 13.2215, 12.9184, 0.66", "57.1569, 13.302, 13.6742, 0.66", "57.2144, 13.314, 13.7454, 0.66", "57.9077, 13.592, 14.5302, 0.66", "57.9476, 13.6243, 14.5627, 0.66", "59.1845, 14.8578, 15.3907, 1.4", "59.7793, 15.5179, 15.7374, 1.4", "60.2219, 16.0078, 16.011, 1.4", "61.4095, 17.3306, 16.7257, 0.88", "62.7675, 18.8642, 17.5127, 0.52", "64.4171, 20.656, 18.3795, 0.52", "64.4995, 20.7394, 18.4155, 0.52", "66.1239, 22.3063, 19.185, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "37.7103, 7.43474, 8.09003, 0.96", "37.7792, 8.25702, 9.05469, 0.96", "37.8379, 8.87943, 9.71739, 0.96", "37.8496, 8.99234, 9.83698, 0.96", "37.992, 10.4442, 11.3746, 0.96", "37.9968, 10.4933, 11.4265, 0.96", "38.0628, 11.1669, 12.14, 0.96", "38.0702, 11.2243, 12.198, 0.96", "38.1698, 12.0645, 13.1703, 0.96", "38.1766, 12.1274, 13.24, 0.96" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "49.1858, 8.27691, 7.13058, 0.88", "49.4592, 8.80362, 6.96745, 0.88", "50.0029, 9.90041, 6.65792, 0.88", "50.032, 9.96559, 6.64382, 0.88", "50.9108, 12.0268, 6.25516, 0.88", "50.9427, 12.1026, 6.24245, 0.88", "51.607, 13.6813, 5.99579, 0.88", "51.6476, 13.7834, 5.98244, 0.88", "52.4294, 15.6929, 5.78268, 0.88", "52.5203, 15.9155, 5.77266, 0.88", "52.7779, 16.5848, 5.79679, 0.88", "52.8031, 16.6534, 5.79904, 0.88", "53.1846, 17.7962, 5.83212, 0.66", "53.3435, 18.3117, 5.84501, 0.88", "53.6221, 19.3215, 5.86648, 0.66", "54.0109, 21.0661, 5.89157, 0.66", "54.2224, 22.1487, 5.89664, 0.66", "54.5102, 23.6692, 5.89146, 0.66", "54.5413, 23.8447, 5.88922, 0.66", "54.7157, 24.7516, 5.83593, 0.66", "55.2119, 26.9757, 5.58499, 0.52", "55.33, 27.3645, 5.5246, 0.81", "55.505, 27.8187, 5.43915, 0.66", "55.5702, 27.9641, 5.40639, 0.66", "56.2006, 29.2503, 5.09519, 0.66", "56.3299, 29.4869, 5.03665, 0.66", "56.9288, 30.6127, 4.81256, 0.66", "56.993, 30.7534, 4.7923, 0.66", "57.3854, 31.7442, 4.7427, 0.66", "57.4582, 31.9456, 4.74673, 0.66", "57.8657, 33.0994, 4.83646, 0.44", "58.4893, 34.7973, 4.98233, 0.44", "58.5189, 34.875, 4.98962, 0.44", "59.3263, 36.7568, 5.12684, 0.44", "59.7763, 37.688, 5.17548, 1.03", "60.3464, 38.8536, 5.20946, 1.33", "60.6516, 39.4905, 5.16947, 1.33", "60.7598, 39.7401, 5.11788, 1.33", "61.2748, 41.1098, 4.70208, 1.33", "61.6283, 42.2449, 4.25168, 1.18", "61.95, 43.5002, 3.6197, 0.44", "62.3731, 45.5647, 2.43461, 0.44", "62.6867, 47.3202, 1.37347, 0.44", "62.7541, 47.698, 1.14702, 0.81", "62.8641, 48.3381, 0.760722, 0.81", "63.3212, 50.5256, -0.579275, 0.44", "63.3377, 50.586, -0.615525, 0.44", "63.6457, 51.5074, -1.11594, 0.44", "64.1985, 52.9324, -1.84475, 0.44", "64.2588, 53.0798, -1.91916, 0.44", "65.1141, 55.1975, -2.90044, 0.44", "65.1387, 55.2611, -2.92521, 0.44", "65.6268, 56.5681, -3.42224, 0.44", "65.657, 56.6525, -3.45576, 0.44", "65.9344, 57.4393, -3.75434, 1.03", "66.2637, 58.3272, -4.04662, 1.03", "66.2905, 58.393, -4.06276, 1.03", "66.9346, 59.9014, -4.3877, 0.66", "67.4796, 61.0625, -4.60519, 0.66", "67.8439, 61.7882, -4.74231, 0.88", "67.9456, 61.98, -4.77832, 0.88", "68.3459, 62.7269, -4.90707, 0.88", "68.3829, 62.8004, -4.91755, 0.88", "68.8358, 63.7468, -5.00637, 1.25", "69.2971, 64.775, -5.04266, 1.47", "69.6797, 65.6606, -5.0709, 1.47", "70.0706, 66.5982, -5.09535, 0.88", "70.3842, 67.3868, -5.10794, 0.74", "71.1743, 69.4297, -5.10711, 0.74", "71.3589, 69.9437, -5.08827, 0.74", "75.5172, 79.1306, -7.56933, 0.74", "80.5281, 88.0379, -9.28031, 0.74", "84.1111, 97.839, -9.45631, 0.74", "88.7745, 107.092, -8.68856, 0.74" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "93.4998, -45.1112, 58.5207, 0.66", "91.5266, -45.9578, 66.6852, 0.66", "91.3624, -46.0282, 67.3645, 0.66", "90.9202, -46.218, 69.1949, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "93.4998, -45.1112, 58.5207, 0.52", "94.2152, -45.9599, 65.2701, 0.52", "94.2399, -45.9788, 65.4169, 0.52", "94.3434, -46.0396, 65.8783, 0.52", "94.4743, -46.091, 66.2101, 0.52", "94.8275, -46.2502, 66.7633, 0.52", "95.0477, -46.3574, 67.0426, 0.52", "95.8891, -46.8294, 67.4371, 0.52", "95.9423, -46.8652, 67.4674, 0.52", "97.0974, -47.711, 68.2013, 0.44", "98.3887, -48.7847, 69.1289, 0.44", "98.4463, -48.841, 69.1772, 0.44", "99.2981, -49.8195, 70.0023, 0.44", "99.3269, -49.8615, 70.0366, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-15.5333, -147.815, 32.3121, 0.29", "-14.722, -148.5, 32.4437, 0.29", "-14.5549, -148.648, 32.4663, 0.29", "-13.8677, -149.353, 32.5429, 0.29", "-13.7996, -149.429, 32.5498, 0.29", "-13.0492, -150.364, 32.6169, 0.29", "-12.3302, -151.317, 32.6759, 0.29", "-12.2918, -151.378, 32.6811, 0.29", "-11.7852, -152.374, 32.8231, 0.66", "-11.756, -152.45, 32.8422, 0.66", "-11.435, -153.469, 33.1675, 0.66", "-11.4201, -153.536, 33.1918, 0.66", "-11.0889, -155.477, 33.9182, 0.52", "-10.924, -156.563, 34.3037, 0.52", "-10.7504, -157.863, 34.7593, 1.03", "-10.6749, -158.364, 34.9221, 1.4", "-10.4956, -159.313, 35.1986, 1.18", "-10.2979, -160.098, 35.4395, 0.59", "-9.94625, -161.136, 35.664, 0.59", "-9.91335, -161.211, 35.6768, 0.59", "-9.49391, -162.08, 35.7688, 0.81", "-9.01273, -162.99, 35.8713, 0.81", "-8.13408, -164.606, 36.2173, 0.37", "-7.40094, -166.009, 36.6541, 0.15", "-7.37483, -166.072, 36.6793, 0.15", "-7.23788, -166.834, 37.1207, 0.66", "-7.23843, -166.892, 37.163, 0.66", "-7.3919, -168.371, 38.3297, 0.66", "-7.40729, -168.468, 38.4047, 0.66", "-7.4917, -169.024, 38.9074, 0.66", "-7.57244, -170.641, 40.3336, 0.37", "-7.46348, -172.288, 41.9238, 0.37", "-7.45544, -172.346, 41.9813, 0.37", "-7.26574, -173.096, 42.7412, 0.37", "-6.61263, -175.033, 44.7371, 0.37", "-6.0572, -176.358, 46.0793, 0.37", "-5.13287, -178.202, 47.8672, 0.37", "-5.09554, -178.265, 47.9268, 0.37", "-4.24101, -179.609, 49.2099, 0.37", "-4.0243, -179.912, 49.4999, 0.88", "-3.54487, -180.561, 49.9918, 0.22", "-3.11851, -181.226, 50.4509, 0.22", "-2.46597, -182.327, 50.708, 0.22" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-15.5333, -147.815, 32.3121, 0.44", "-15.4453, -149.051, 32.2691, 0.44", "-15.3701, -150.361, 32.1974, 0.44", "-15.3695, -150.434, 32.1929, 0.44", "-15.4005, -152.122, 32.0712, 0.44", "-15.4029, -152.196, 32.0654, 0.44", "-15.4439, -153.361, 31.931, 0.44", "-15.4563, -153.516, 31.9066, 0.44", "-15.6114, -155.136, 31.6381, 0.81", "-15.6384, -155.476, 31.6222, 0.81", "-15.6439, -155.539, 31.6202, 0.81", "-15.7205, -156.45, 31.6155, 0.37", "-15.8738, -158.473, 31.7111, 0.29", "-15.9251, -159.499, 31.7907, 0.29", "-15.9549, -161.781, 32.1379, 0.29" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "25.0382, -38.5393, 1.3207, 0.15", "34.9763, -39.2677, 2.1882, 0.15", "44.967, -39.7197, 2.1548, 0.15", "54.7823, -38.4121, 3.60664, 0.15", "64.7678, -38.5612, 4.12678, 0.15" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "25.0382, -38.5393, 1.3207, 0.15", "34.918, -39.2427, 2.71375, 0.15", "44.9142, -39.1124, 2.95988, 0.15", "54.7691, -40.8908, 2.84711, 0.15", "64.6891, -41.982, 2.13108, 0.15", "74.6743, -42.497, 2.36558, 0.15", "84.3698, -44.1671, 4.22785, 0.15", "93.8943, -46.7085, 6.07806, 0.15", "103.426, -47.9326, 8.86793, 0.15", "112.598, -49.9104, 12.3793, 0.15", "121.34, -52.5046, 16.559, 0.15", "128.853, -56.0651, 22.2211, 0.15", "137.151, -60.1475, 26.2246, 0.15", "145.928, -61.9208, 30.7085, 0.15", "154.576, -63.2243, 35.5728, 0.15", "162.81, -62.6019, 41.2175, 0.15" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "34.9078, -39.0197, 3.78086, 0.15", "44.7064, -39.7096, 5.66644, 0.15", "54.2805, -38.3448, 8.24494, 0.15", "63.8908, -36.5107, 10.3872, 0.15", "73.4133, -33.3081, 10.5324, 0.15", "82.6159, -29.3152, 9.61048, 0.15", "92.0746, -26.3216, 8.05963, 0.15", "100.897, -22.3813, 5.21771, 0.15", "108.829, -17.0773, 1.81777, 0.15", "116.043, -11.5331, -2.66355, 0.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "34.9078, -39.0197, 3.78086, 0.15", "44.8673, -39.6471, 4.45259, 0.15", "54.692, -38.6833, 6.07552, 0.15", "63.9583, -36.5718, 9.25203, 0.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-64.3997, -48.2632, -5.58045, 0.22", "-65.4613, -50.315, -5.63793, 0.22", "-66.1797, -51.4309, -5.60287, 0.22", "-66.221, -51.4899, -5.5989, 0.22", "-68.0162, -53.8333, -5.33797, 0.22", "-68.8963, -54.9179, -5.18208, 0.22", "-69.0051, -55.0458, -5.15496, 0.22", "-70.6674, -56.7409, -4.45819, 0.22", "-70.8003, -56.8672, -4.39516, 0.22", "-71.3988, -57.4198, -4.08471, 0.22", "-71.4966, -57.5089, -4.0211, 0.22", "-72.5405, -58.5746, -3.25731, 0.22", "-72.7889, -58.8466, -3.0567, 0.22", "-73.7141, -60.0655, -2.11503, 0.22", "-73.7549, -60.1232, -2.07353, 0.22", "-74.4082, -61.1923, -1.37545, 0.22", "-74.4734, -61.306, -1.30602, 0.22", "-80.9749, -68.8488, 1.16944, 0.22", "-86.9118, -77.2132, 2.30728, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-64.3997, -48.2632, -5.58045, 0.52", "-64.4652, -48.94, -5.54078, 0.52", "-64.6621, -50.2375, -5.45409, 0.52", "-64.6862, -50.382, -5.44424, 0.52", "-64.9082, -51.7813, -5.35753, 0.52", "-65.1224, -52.9951, -5.19376, 0.52", "-65.1718, -53.2656, -5.14788, 0.52", "-65.4787, -54.8616, -4.82014, 0.52", "-65.5204, -55.077, -4.75253, 0.52", "-65.7381, -56.4188, -4.25054, 0.52", "-65.9725, -58.048, -3.56551, 1.18", "-66.1165, -59.0951, -3.09867, 1.92", "-66.238, -59.9669, -2.70596, 2.28", "-66.503, -62.2948, -1.45097, 0.74", "-66.5511, -63.0844, -0.99088, 0.66", "-66.5604, -63.8565, -0.505121, 0.66", "-66.5498, -64.0007, -0.413302, 0.66", "-66.4147, -65.0331, 0.275231, 0.66", "-66.0567, -67.0647, 1.57763, 0.66", "-65.8046, -68.0905, 2.16507, 0.52", "-65.7869, -68.1519, 2.19946, 0.52", "-65.3548, -69.5623, 2.91652, 0.52", "-65.1472, -70.304, 3.22955, 1.03", "-64.9771, -71.03, 3.44284, 1.03", "-64.9568, -71.174, 3.46192, 1.03", "-64.913, -71.8862, 3.53028, 0.81", "-64.8877, -72.6505, 3.58087, 0.52", "-64.9323, -73.7197, 3.60205, 0.52", "-65.01, -74.7162, 3.62715, 0.52", "-65.0311, -74.9229, 3.63319, 0.52", "-65.1608, -76.0921, 3.67228, 0.52", "-65.1684, -76.1647, 3.67963, 0.52", "-65.2595, -77.7803, 3.91564, 0.52", "-65.2614, -78.1516, 3.98261, 0.52", "-65.2091, -78.8125, 4.1868, 0.52", "-65.1789, -79.0157, 4.26823, 0.52", "-64.8979, -80.3044, 4.87998, 0.88", "-64.6897, -81.2413, 5.38645, 0.88", "-64.6627, -81.3799, 5.46628, 0.88", "-64.4454, -82.8934, 6.32507, 0.88", "-64.4387, -82.9581, 6.35759, 0.88", "-64.3801, -83.8889, 6.72195, 0.88", "-64.3565, -85.2294, 7.08297, 1.11", "-64.3448, -86.3737, 7.30617, 1.11", "-64.3435, -86.4467, 7.31434, 1.11", "-64.3186, -87.4603, 7.35439, 0.74", "-64.2884, -88.4684, 7.40012, 0.59", "-64.2843, -88.6257, 7.40706, 0.59", "-64.2399, -89.7635, 7.43944, 0.59", "-64.2363, -89.8367, 7.44468, 0.59", "-64.213, -90.8349, 7.55712, 0.59", "-64.179, -91.5712, 7.67428, 0.59", "-64.0862, -92.4146, 7.84314, 0.59", "-64.048, -92.6366, 7.89015, 0.59", "-63.8994, -93.299, 8.03423, 0.22", "-63.8581, -93.4476, 8.06176, 0.22", "-63.4604, -94.6848, 8.22593, 0.22", "-63.1852, -95.5405, 8.47995, 0.66", "-62.9725, -96.3038, 8.77796, 0.44", "-62.956, -96.369, 8.80565, 0.44", "-62.7998, -97.0598, 9.11786, 1.18", "-62.588, -98.1046, 9.56211, 1.84", "-62.1983, -100.321, 10.4918, 1.25", "-62.0452, -101.166, 10.8142, 0.66", "-61.8619, -102.125, 11.1602, 0.44", "-61.8335, -102.271, 11.2094, 0.44", "-61.5606, -103.67, 11.624, 0.44", "-61.2704, -105.183, 11.9687, 0.44", "-61.1157, -105.978, 12.1269, 0.44", "-60.9124, -106.992, 12.3853, 0.29", "-60.8975, -107.071, 12.4075, 0.29", "-60.6655, -108.206, 12.7992, 0.29", "-60.5913, -108.555, 12.9432, 0.29", "-60.2006, -110.353, 13.7551, 1.47", "-59.9931, -111.394, 14.3065, 1.99", "-59.8242, -112.508, 14.9447, 1.77", "-59.6986, -113.93, 15.8074, 1.4", "-59.688, -114.739, 16.3196, 0.59", "-59.6955, -114.852, 16.3884, 0.59", "-59.882, -115.828, 16.9463, 0.37", "-60.1861, -116.807, 17.5389, 0.37", "-60.521, -117.626, 18.0289, 0.37", "-60.7522, -118.144, 18.2767, 0.88", "-60.9174, -118.537, 18.4402, 0.88", "-61.0984, -119.19, 18.6503, 0.37", "-61.1381, -119.666, 18.7442, 0.37", "-61.1273, -119.835, 18.7815, 0.37", "-61.0087, -120.741, 18.9778, 0.37", "-60.9967, -120.811, 18.9945, 0.37", "-60.7341, -122.151, 19.3214, 0.37", "-60.5339, -123.144, 19.5497, 0.37", "-60.2985, -124.287, 19.8276, 0.59", "-60.1273, -125.014, 19.9981, 0.59", "-59.9983, -125.519, 20.1474, 0.29", "-59.9832, -125.587, 20.1689, 0.29", "-59.8541, -126.446, 20.5003, 0.29", "-59.8271, -126.709, 20.6056, 0.29", "-59.7658, -128.095, 21.2356, 0.29", "-59.7933, -129.25, 21.8261, 0.81", "-59.8633, -130.202, 22.3457, 1.11", "-60.0425, -131.503, 23.0919, 1.4", "-60.1646, -132.095, 23.4511, 1.4", "-60.5698, -133.533, 24.3168, 0.52", "-60.8195, -134.203, 24.7157, 0.29", "-60.8428, -134.264, 24.7475, 0.29", "-61.0249, -134.856, 25.0391, 0.29", "-61.056, -135.0, 25.0921, 0.29", "-61.09, -135.586, 25.2447, 0.29", "-61.0377, -136.202, 25.4059, 0.22", "-61.0143, -136.347, 25.4598, 0.22", "-60.8318, -137.323, 25.8812, 0.22", "-60.8175, -137.449, 25.9701, 0.22", "-60.8246, -137.941, 26.3768, 0.22", "-60.9558, -139.111, 27.4616, 0.96", "-61.0414, -139.557, 27.8698, 0.96", "-61.0554, -139.611, 27.9153, 0.96", "-61.639, -141.348, 29.2898, 0.44", "-61.9313, -142.182, 29.8156, 0.44", "-61.954, -142.244, 29.8455, 0.44", "-62.2312, -143.098, 30.0538, 0.81", "-62.4605, -143.852, 30.1627, 0.81", "-62.5728, -144.275, 30.2176, 0.81", "-62.7814, -145.356, 30.2939, 0.37", "-62.7918, -145.417, 30.3033, 0.37", "-62.9842, -146.8, 30.7307, 0.37", "-62.9997, -146.938, 30.8019, 0.37", "-63.1323, -148.413, 31.8034, 1.03", "-63.1894, -148.98, 32.2273, 1.03", "-63.2122, -149.173, 32.3871, 1.03", "-63.3868, -150.172, 33.2807, 0.74", "-63.5112, -150.799, 33.9193, 0.22", "-63.5243, -150.879, 33.9922, 0.22", "-63.6251, -151.778, 34.7066, 0.22", "-63.63, -151.835, 34.7507, 0.22", "-63.6778, -153.027, 35.614, 1.18", "-63.6748, -154.909, 36.885, 0.59", "-63.6139, -156.048, 37.5831, 0.59", "-63.5242, -156.829, 38.0185, 1.03", "-63.5144, -156.884, 38.0459, 1.03", "-63.4204, -157.329, 38.2219, 1.11", "-63.0976, -158.632, 38.6679, 0.52", "-62.7234, -160.127, 39.1373, 0.52", "-62.3991, -161.456, 39.58, 1.47", "-62.2046, -162.32, 39.8213, 2.43", "-61.9085, -163.64, 40.1807, 1.4", "-61.4672, -165.612, 40.7014, 0.22", "-61.3028, -166.341, 40.8774, 0.22", "-61.2565, -166.559, 40.934, 0.22", "-60.7828, -169.34, 41.6055, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-146.658, -62.7169, 1.38614, 0.52", "-147.197, -63.1176, 0.179791, 0.52", "-147.231, -63.1437, 0.111778, 0.52", "-148.862, -64.481, -2.77584, 0.52", "-148.93, -64.5479, -2.87972, 0.52", "-149.452, -65.069, -3.56842, 0.52", "-150.132, -65.7556, -4.39405, 0.96", "-150.193, -65.8154, -4.44967, 0.96", "-150.725, -66.3421, -4.81026, 0.96", "-151.766, -67.3667, -5.23507, 0.44", "-152.558, -68.0974, -5.54851, 0.44", "-152.677, -68.2007, -5.59485, 0.44", "-153.545, -68.8781, -5.89193, 0.44", "-154.48, -69.5434, -6.2325, 0.81", "-154.66, -69.6561, -6.30101, 0.81", "-155.523, -70.136, -6.62984, 1.11", "-155.581, -70.17, -6.65063, 1.11", "-156.104, -70.4767, -6.84672, 1.11", "-157.289, -71.1749, -7.27836, 0.59", "-157.349, -71.209, -7.29651, 0.59", "-158.409, -71.7856, -7.58195, 0.59", "-158.515, -71.8423, -7.60652, 0.59", "-159.691, -72.4758, -7.81089, 0.59", "-160.857, -73.0997, -7.9476, 0.88", "-161.83, -73.6201, -8.02941, 1.18", "-162.756, -74.1075, -8.10747, 1.33", "-163.691, -74.591, -8.18185, 1.33", "-164.743, -75.1113, -8.25745, 0.52", "-165.721, -75.5587, -8.37352, 0.52", "-166.413, -75.8611, -8.50829, 0.52", "-166.865, -76.0683, -8.63813, 0.74", "-166.993, -76.1297, -8.6889, 0.74", "-167.478, -76.3602, -8.94454, 0.74", "-168.651, -76.9922, -9.70436, 0.29", "-168.704, -77.0275, -9.73678, 0.29", "-169.33, -77.5027, -10.0654, 0.29", "-169.402, -77.5609, -10.1036, 0.29", "-169.912, -77.9442, -10.3401, 0.59", "-170.406, -78.2988, -10.5357, 0.74", "-171.223, -78.8154, -10.8899, 0.74", "-171.302, -78.8605, -10.9306, 0.74", "-172.256, -79.3535, -11.4276, 0.37", "-172.929, -79.6933, -11.781, 0.37", "-173.044, -79.7486, -11.8404, 0.37", "-174.426, -80.4155, -12.5602, 1.11", "-174.98, -80.7182, -12.8109, 1.11", "-175.644, -81.1292, -13.0408, 0.44", "-175.756, -81.2139, -13.0626, 0.44", "-176.243, -81.6299, -13.1123, 0.44", "-176.418, -81.7776, -13.1262, 0.44", "-177.522, -82.6947, -13.1561, 0.44", "-177.774, -82.8855, -13.181, 0.44", "-178.388, -83.3409, -13.3281, 0.44", "-178.444, -83.3811, -13.3462, 0.44", "-179.487, -84.1438, -13.7028, 0.81", "-180.36, -84.7681, -14.0119, 1.18", "-181.016, -85.259, -14.2461, 1.18", "-182.018, -86.0334, -14.585, 0.88", "-182.623, -86.5172, -14.7787, 0.52", "-183.367, -87.1469, -14.9897, 0.52", "-183.419, -87.1947, -14.9999, 0.52", "-184.409, -88.0965, -15.1986, 0.52", "-184.462, -88.1432, -15.2083, 0.52", "-185.596, -89.0388, -15.4361, 0.44", "-185.709, -89.1205, -15.466, 0.44", "-187.152, -89.9939, -15.9185, 0.44", "-187.725, -90.3011, -16.1034, 0.81", "-188.258, -90.5647, -16.3329, 1.11", "-189.409, -91.1331, -16.914, 0.44", "-189.531, -91.1917, -16.9816, 0.44", "-190.531, -91.6767, -17.5761, 0.44", "-190.595, -91.7066, -17.6147, 0.44", "-192.148, -92.4868, -18.4749, 0.44", "-192.338, -92.5925, -18.5678, 0.44", "-193.345, -93.2137, -18.9253, 1.03", "-193.46, -93.2896, -18.958, 1.03", "-194.362, -93.9167, -19.1032, 1.03", "-194.429, -93.9622, -19.1091, 1.03", "-195.053, -94.3869, -19.1128, 0.22", "-195.884, -95.0022, -19.1307, 0.22", "-195.948, -95.0529, -19.1364, 0.22", "-197.685, -96.4223, -19.3595, 0.22", "-198.544, -97.0594, -19.535, 0.81", "-199.179, -97.509, -19.69, 1.47", "-199.827, -97.9501, -19.8719, 1.47", "-201.083, -98.776, -20.2415, 0.22", "-202.702, -99.7966, -20.734, 0.22", "-204.147, -100.671, -21.1823, 0.81", "-204.842, -101.075, -21.3877, 0.81", "-204.91, -101.113, -21.4082, 0.81", "-206.051, -101.744, -21.6988, 0.22", "-206.171, -101.812, -21.7217, 0.22", "-207.711, -102.759, -21.9502, 0.22", "-207.802, -102.816, -21.9563, 0.22", "-209.063, -103.581, -22.0221, 0.22", "-209.884, -104.072, -22.0474, 0.81", "-209.945, -104.108, -22.0476, 0.81", "-210.564, -104.441, -22.0335, 0.81", "-211.26, -104.765, -21.9254, 0.15", "-211.467, -104.859, -21.8763, 0.15", "-212.324, -105.235, -21.6154, 0.15", "-212.386, -105.262, -21.5972, 0.15", "-213.26, -105.634, -21.3642, 0.15", "-214.569, -106.192, -21.0221, 0.74", "-215.277, -106.491, -20.8608, 0.88", "-215.937, -106.77, -20.7433, 0.88", "-216.001, -106.798, -20.7354, 0.88", "-217.219, -107.34, -20.6564, 0.22", "-217.283, -107.369, -20.6575, 0.22", "-218.292, -107.854, -20.8089, 0.22", "-218.784, -108.107, -20.8915, 0.52", "-219.398, -108.479, -21.0228, 0.52", "-219.457, -108.517, -21.0361, 0.52", "-219.936, -108.853, -21.1446, 0.52", "-220.859, -109.516, -21.3584, 0.22", "-221.876, -110.286, -21.5092, 0.22", "-222.87, -111.055, -21.5845, 1.03", "-223.576, -111.629, -21.5928, 1.4", "-224.351, -112.277, -21.5548, 1.4", "-224.474, -112.377, -21.54, 1.4", "-225.921, -113.493, -21.2477, 0.22", "-226.11, -113.626, -21.2057, 0.22", "-226.792, -114.069, -21.043, 0.22", "-227.068, -114.243, -20.9918, 0.22", "-228.569, -115.106, -20.8125, 0.22", "-228.765, -115.212, -20.8053, 0.22", "-230.096, -115.938, -21.0447, 0.22", "-230.163, -115.978, -21.0647, 0.22", "-230.564, -116.245, -21.2175, 0.74", "-230.693, -116.344, -21.2764, 0.74", "-231.374, -116.939, -21.6379, 0.74", "-233.518, -118.931, -22.8238, 0.22", "-234.185, -119.585, -23.2114, 0.88", "-234.746, -120.137, -23.5167, 1.11", "-234.896, -120.286, -23.5926, 1.11", "-235.328, -120.702, -23.7806, 1.11", "-235.953, -121.286, -23.9971, 0.22", "-236.072, -121.379, -24.0152, 0.15", "-236.772, -121.85, -24.0912, 0.15", "-236.912, -121.938, -24.1192, 0.15", "-238.24, -122.774, -24.4679, 0.15", "-238.376, -122.862, -24.5109, 0.15", "-239.626, -123.69, -24.8895, 0.15", "-239.682, -123.729, -24.9089, 0.15", "-240.801, -124.559, -25.3361, 0.81", "-240.862, -124.607, -25.3606, 0.81", "-241.418, -125.04, -25.564, 0.81", "-243.372, -126.592, -26.3436, 0.22", "-244.182, -127.242, -26.6668, 0.96", "-244.466, -127.454, -26.7728, 0.96", "-245.435, -128.128, -27.1028, 0.15", "-247.108, -129.203, -27.6728, 0.15", "-248.793, -130.226, -28.2572, 1.33", "-249.46, -130.604, -28.4919, 1.33", "-250.213, -131.002, -28.7179, 0.37", "-250.299, -131.047, -28.7417, 0.37", "-251.275, -131.543, -28.9562, 0.37", "-251.838, -131.826, -29.0348, 0.81", "-251.965, -131.889, -29.0337, 0.81", "-252.524, -132.193, -29.0312, 0.59", "-253.031, -132.521, -29.0281, 0.29", "-253.742, -133.109, -29.2051, 0.29", "-253.79, -133.156, -29.2273, 0.29", "-254.398, -133.75, -29.7292, 0.66", "-254.707, -134.055, -30.0357, 0.96", "-255.196, -134.492, -30.6567, 0.44", "-256.654, -135.643, -33.0954, 0.37", "-256.744, -135.705, -33.2872, 0.81", "-257.974, -136.437, -36.1461, 0.37", "-258.21, -136.57, -36.7861, 0.37", "-259.217, -137.082, -39.7499, 0.88", "-260.243, -137.552, -43.1319, 0.88", "-261.294, -137.928, -47.0264, 0.81", "-261.389, -137.962, -47.424, 0.81", "-262.428, -138.377, -52.3154, 0.37", "-262.441, -138.384, -52.3838, 0.37", "-262.972, -138.758, -55.2077, 0.37", "-263.557, -139.262, -58.1208, 0.22", "-263.59, -139.296, -58.2702, 0.22", "-263.946, -139.696, -59.4922, 0.22", "-263.97, -139.723, -59.5526, 0.22", "-265.317, -141.044, -62.094, 0.22", "-265.516, -141.22, -62.3595, 0.81", "-267.286, -142.587, -64.2672, 0.37", "-268.889, -143.522, -65.7429, 0.37", "-268.95, -143.548, -65.7893, 0.37", "-270.591, -144.132, -66.7838, 0.37", "-271.122, -144.257, -66.9695, 0.81", "-272.626, -144.492, -67.3515, 0.29", "-274.309, -144.56, -67.5077, 0.29", "-274.906, -144.575, -67.5199, 0.66", "-274.975, -144.583, -67.5167, 0.66", "-275.809, -144.794, -67.4177, 0.66", "-275.887, -144.814, -67.4141, 0.66", "-276.972, -145.113, -67.4015, 0.44", "-278.55, -145.59, -67.5297, 0.15", "-278.683, -145.631, -67.5479, 0.15", "-280.782, -146.32, -67.9775, 0.15", "-282.609, -146.991, -68.4488, 0.59", "-284.252, -147.672, -68.9355, 0.15", "-285.914, -148.475, -69.8013, 0.15", "-286.011, -148.531, -69.8701, 0.15", "-287.334, -149.434, -70.9802, 0.52", "-287.83, -149.876, -71.4766, 1.03", "-288.386, -150.53, -72.1046, 1.03", "-290.403, -153.483, -74.9023, 0.22", "-290.928, -154.353, -75.7706, 0.22", "-290.966, -154.421, -75.8362, 0.22", "-291.546, -155.569, -76.9297, 0.22", "-292.562, -157.62, -78.8602, 0.22", "-292.587, -157.671, -78.9037, 0.22", "-293.5, -159.395, -80.0391, 0.88", "-293.819, -159.928, -80.4624, 0.88", "-293.986, -160.178, -80.6815, 0.15", "-294.026, -160.226, -80.7332, 0.15", "-294.624, -160.842, -81.5672, 0.15", "-294.664, -160.888, -81.6216, 0.15", "-295.346, -161.894, -82.7422, 0.81", "-295.496, -162.147, -83.1103, 0.81", "-295.514, -162.184, -83.1681, 0.81", "-295.992, -163.367, -85.2109, 0.15", "-296.227, -164.091, -86.488, 0.15", "-296.578, -164.906, -88.0964, 0.15", "-297.144, -166.06, -90.4122, 0.15", "-297.167, -166.101, -90.4997, 0.15", "-297.548, -166.662, -91.7255, 1.18", "-297.757, -166.925, -92.3312, 1.18", "-298.661, -167.91, -94.8454, 0.22", "-298.918, -168.148, -95.4509, 0.22", "-298.947, -168.172, -95.5101, 0.22", "-299.958, -168.97, -97.4681, 0.22", "-299.992, -168.992, -97.5258, 0.59", "-306.821, -175.259, -101.737, 0.59" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-146.658, -62.7169, 1.38614, 0.59", "-148.27, -62.6593, 2.41546, 0.59", "-149.359, -62.6749, 3.04802, 0.59", "-151.032, -62.8484, 3.88894, 0.29", "-152.113, -63.007, 4.38907, 0.29", "-152.185, -63.0203, 4.42107, 0.29", "-153.779, -63.321, 5.08453, 0.29", "-153.835, -63.3354, 5.10183, 0.29", "-155.197, -63.7526, 5.46654, 0.29", "-155.262, -63.7729, 5.48162, 0.29", "-156.282, -64.0688, 5.74667, 0.29", "-157.494, -64.4043, 6.06676, 0.66", "-158.3, -64.6348, 6.28495, 1.18", "-158.887, -64.8132, 6.43734, 1.18", "-160.182, -65.2211, 6.76419, 0.37", "-161.619, -65.7153, 7.09028, 0.37", "-162.504, -66.0428, 7.25163, 0.37", "-163.04, -66.2523, 7.3115, 0.59", "-163.506, -66.4156, 7.32882, 0.44", "-163.573, -66.4366, 7.32646, 0.44", "-164.523, -66.6799, 7.21061, 0.44", "-165.527, -66.8871, 7.06561, 0.44", "-166.615, -67.0842, 6.91752, 0.44", "-167.641, -67.2598, 6.83353, 0.44", "-167.779, -67.282, 6.82784, 0.44", "-168.581, -67.4019, 6.82491, 0.44", "-169.4, -67.5181, 6.84689, 0.29", "-170.189, -67.6198, 6.87875, 0.29", "-171.2, -67.7607, 6.93365, 0.88", "-172.107, -67.8913, 6.97108, 0.88", "-172.843, -68.0011, 6.9907, 0.52", "-174.548, -68.2719, 6.98623, 0.52", "-175.598, -68.4348, 6.95153, 1.18", "-176.544, -68.5739, 6.89129, 1.18", "-176.623, -68.586, 6.8838, 1.18", "-177.448, -68.7267, 6.80863, 1.18", "-178.222, -68.8703, 6.7467, 0.29", "-178.872, -68.985, 6.70858, 0.29", "-180.551, -69.2677, 6.6358, 0.29", "-181.074, -69.3459, 6.6165, 1.25", "-181.811, -69.4543, 6.59501, 1.25", "-182.724, -69.5816, 6.57872, 0.52", "-184.034, -69.7574, 6.57872, 0.52", "-184.113, -69.7686, 6.57872, 0.52", "-184.714, -69.8559, 6.57872, 0.88", "-184.783, -69.8651, 6.58003, 0.88", "-185.15, -69.9093, 6.59232, 0.88", "-186.108, -70.0056, 6.63575, 0.29", "-188.098, -70.2054, 6.74232, 0.29", "-188.167, -70.2126, 6.74605, 0.29", "-189.108, -70.3239, 6.79603, 0.66", "-189.188, -70.334, 6.79998, 0.66", "-189.989, -70.4438, 6.85164, 0.66", "-190.641, -70.5361, 6.90124, 0.66", "-191.844, -70.6864, 6.99838, 0.22", "-192.496, -70.7587, 7.04786, 0.88", "-193.301, -70.8387, 7.10032, 0.88", "-194.253, -70.931, 7.16624, 0.22", "-194.62, -70.9697, 7.19339, 0.22", "-195.45, -71.0788, 7.25491, 0.22", "-195.529, -71.0903, 7.26062, 0.22", "-196.332, -71.2413, 7.36621, 0.22", "-196.434, -71.2666, 7.38331, 0.22", "-197.057, -71.4505, 7.49703, 0.81", "-197.748, -71.6749, 7.63336, 0.81", "-197.813, -71.6992, 7.6462, 0.81", "-199.149, -72.1635, 7.86781, 0.22", "-200.568, -72.616, 8.0646, 0.22", "-200.726, -72.6644, 8.08132, 0.22", "-201.532, -72.8997, 8.14656, 0.96", "-202.529, -73.1929, 8.22903, 0.96", "-203.769, -73.5652, 8.31954, 0.22", "-204.553, -73.8239, 8.38617, 0.22", "-205.782, -74.2641, 8.55662, 0.22", "-205.857, -74.2919, 8.56982, 0.22", "-206.816, -74.6712, 8.78554, 1.03", "-207.558, -74.9606, 8.97463, 1.18", "-208.652, -75.4133, 9.27717, 0.22", "-208.927, -75.5166, 9.34818, 0.22", "-209.541, -75.6772, 9.52535, 0.22", "-209.685, -75.7025, 9.56035, 0.22", "-211.195, -75.8557, 9.85779, 0.22", "-211.641, -75.8927, 9.95225, 0.88", "-212.218, -75.9267, 10.0734, 0.88", "-214.457, -76.0869, 10.5944, 0.22", "-215.312, -76.16, 10.8079, 0.96", "-215.591, -76.19, 10.8824, 0.96", "-217.454, -76.5023, 11.4776, 0.22", "-217.528, -76.519, 11.5031, 0.22", "-218.14, -76.6983, 11.7159, 0.96", "-218.617, -76.8813, 11.8745, 0.96", "-218.67, -76.9026, 11.8948, 0.96", "-219.858, -77.3584, 12.3311, 0.22", "-219.921, -77.3777, 12.3544, 0.22", "-220.717, -77.5932, 12.6688, 0.22", "-220.854, -77.6236, 12.7223, 0.52", "-221.067, -77.6669, 12.8021, 0.52", "-221.282, -77.7076, 12.8737, 0.52", "-222.142, -77.8739, 13.1039, 0.15", "-222.388, -77.953, 13.1714, 0.15", "-223.124, -78.2612, 13.3963, 0.15", "-223.267, -78.3255, 13.4403, 0.52", "-223.404, -78.3918, 13.481, 0.52", "-223.862, -78.6281, 13.5963, 0.52", "-224.981, -79.2888, 13.8341, 0.22", "-225.142, -79.39, 13.867, 0.22", "-226.076, -80.0034, 14.0481, 0.88", "-226.523, -80.2872, 14.12, 1.03", "-227.732, -81.0394, 14.2816, 0.22", "-228.496, -81.5011, 14.3488, 0.22", "-229.135, -81.8833, 14.3714, 0.22", "-229.609, -82.157, 14.3713, 0.22", "-230.215, -82.496, 14.3529, 0.22", "-230.278, -82.5273, 14.3499, 0.22", "-231.524, -83.0638, 14.2708, 0.22", "-231.666, -83.1143, 14.2606, 0.22", "-232.897, -83.5058, 14.1745, 0.22", "-232.964, -83.5273, 14.1724, 0.22", "-233.685, -83.7605, 14.1738, 0.81", "-233.844, -83.8109, 14.1772, 0.81", "-234.337, -83.9563, 14.2081, 0.81", "-235.111, -84.2122, 14.2697, 0.81", "-236.283, -84.6277, 14.3796, 0.22", "-236.357, -84.6581, 14.3864, 0.22", "-237.375, -85.1329, 14.506, 0.22", "-238.343, -85.6299, 14.6282, 0.59", "-240.06, -86.5499, 14.8395, 0.22", "-240.13, -86.5887, 14.8478, 0.22", "-241.717, -87.4577, 15.0132, 0.22", "-242.493, -87.881, 15.0886, 1.03", "-243.241, -88.2807, 15.1555, 1.03", "-244.87, -89.1106, 15.2749, 0.22", "-244.943, -89.1434, 15.2757, 0.22", "-245.149, -89.2254, 15.2683, 0.74", "-246.618, -89.7193, 15.1393, 0.22", "-247.042, -89.849, 15.0823, 0.66", "-247.537, -89.9939, 15.0057, 0.66", "-249.875, -90.698, 14.5911, 0.22", "-249.982, -90.7316, 14.5723, 0.22", "-250.463, -90.8855, 14.4866, 0.81", "-250.538, -90.9104, 14.4731, 0.81", "-251.331, -91.2173, 14.313, 0.81", "-251.394, -91.2486, 14.3019, 0.81", "-252.875, -92.0896, 14.0794, 0.22", "-253.004, -92.1675, 14.0597, 0.22", "-253.406, -92.4142, 13.9985, 0.22", "-254.145, -92.8792, 13.8883, 0.22", "-256.726, -94.6154, 13.5993, 0.22", "-256.792, -94.6617, 13.5949, 0.22", "-257.171, -94.9395, 13.5859, 0.96", "-258.053, -95.5665, 13.59, 0.96", "-258.751, -96.05, 13.6165, 0.22", "-260.176, -96.9816, 13.7335, 0.22", "-260.816, -97.3853, 13.7947, 0.66", "-261.492, -97.7883, 13.852, 0.66", "-262.273, -98.2307, 13.934, 0.22", "-262.416, -98.3051, 13.9509, 0.22", "-263.404, -98.7274, 14.07, 0.22", "-263.497, -98.7603, 14.0805, 0.22", "-264.84, -99.2059, 14.2937, 0.22", "-265.681, -99.4702, 14.4609, 0.96", "-266.362, -99.6931, 14.6142, 0.96", "-266.85, -99.879, 14.7388, 0.96", "-266.946, -99.9189, 14.766, 0.96", "-268.792, -100.746, 15.3039, 0.22", "-268.923, -100.809, 15.3434, 0.22", "-269.615, -101.166, 15.5377, 1.03", "-271.914, -102.436, 16.2404, 0.22", "-271.974, -102.471, 16.2525, 0.22", "-272.342, -102.702, 16.2921, 1.03", "-272.466, -102.79, 16.2898, 1.03", "-273.011, -103.203, 16.2326, 1.03", "-273.984, -104.071, 16.0112, 0.22", "-275.556, -105.628, 15.2128, 0.22", "-275.754, -105.833, 15.0996, 0.22", "-276.259, -106.376, 14.7832, 0.22", "-276.348, -106.471, 14.7244, 0.22", "-277.699, -107.929, 13.7752, 0.22", "-278.828, -109.047, 13.0256, 0.66", "-279.355, -109.507, 12.7598, 0.66", "-279.409, -109.547, 12.7366, 0.66", "-280.323, -110.14, 12.4367, 0.22", "-280.45, -110.215, 12.4004, 0.22", "-281.613, -110.741, 12.1925, 0.22", "-281.669, -110.765, 12.1924, 0.22", "-283.085, -111.335, 12.2284, 0.22", "-283.875, -111.665, 12.2842, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "27.5659, 89.5163, 54.1933, 0.52", "27.883, 89.5984, 54.1753, 0.52", "28.5531, 89.7719, 54.1374, 0.52", "29.4186, 89.9959, 54.0883, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "27.5659, 89.5163, 54.1933, 0.52", "27.9817, 90.1422, 54.1441, 0.52", "28.6143, 91.0946, 54.0694, 0.52", "29.1592, 91.9148, 54.005, 0.52", "29.5144, 92.4495, 53.963, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-55.618, -12.6633, 30.8638, 0.88", "-55.4596, -13.2943, 31.1132, 0.88", "-55.1563, -15.1229, 31.7117, 0.96", "-55.0772, -16.1821, 32.0976, 0.96", "-55.0956, -16.9597, 32.5364, 0.96", "-55.1652, -17.6895, 33.0739, 0.96", "-55.27, -18.3015, 33.5685, 0.96", "-55.4603, -18.9275, 34.1452, 0.96", "-56.0324, -20.1439, 35.3281, 0.81", "-57.0564, -21.8678, 37.1973, 0.59", "-57.6199, -22.7239, 38.1744, 0.59", "-57.9951, -23.2813, 38.783, 0.59", "-58.4924, -24.0194, 39.4937, 0.59", "-58.9211, -24.6758, 40.04, 0.81", "-59.7642, -26.0395, 40.9216, 0.81", "-60.4588, -27.2981, 41.6475, 0.81", "-61.1872, -28.93, 42.7978, 0.81", "-61.5885, -30.1244, 43.7385, 0.81", "-61.7239, -30.6653, 44.1783, 0.81", "-61.8594, -31.4166, 44.7955, 0.66", "-62.1479, -33.5746, 46.5663, 0.96", "-62.4099, -36.639, 49.1014, 0.81", "-62.4671, -37.7556, 50.0233, 0.81", "-62.5009, -38.6545, 50.7167, 0.81", "-62.5506, -39.605, 51.3259, 0.81", "-62.5896, -40.0518, 51.5221, 0.96", "-62.7115, -40.9077, 51.6342, 0.96", "-62.9323, -42.0569, 51.5694, 0.96", "-63.1441, -43.0266, 51.4555, 0.96", "-63.3773, -44.0342, 51.295, 0.96", "-63.6985, -45.3364, 51.0538, 0.96", "-64.0456, -46.6856, 50.7729, 0.96", "-64.3382, -47.7073, 50.5533, 1.11", "-64.7701, -49.0516, 50.2718, 1.11", "-65.0719, -49.9046, 50.1113, 0.88", "-65.4774, -51.0191, 49.9379, 0.88", "-65.9926, -52.4002, 49.7736, 0.88", "-66.6917, -54.3158, 49.6335, 0.88", "-67.105, -55.5294, 49.5769, 1.4", "-67.4191, -56.5776, 49.5837, 1.03", "-67.717, -57.774, 49.6198, 0.81", "-67.913, -58.7963, 49.698, 0.81", "-68.0314, -59.7323, 49.8176, 1.11", "-68.1089, -60.6399, 49.9638, 1.11", "-68.2518, -61.8678, 50.1852, 1.11", "-68.4251, -62.6726, 50.335, 0.74", "-68.674, -63.4324, 50.4808, 0.74", "-69.1088, -64.3861, 50.657, 0.74", "-69.5575, -65.1667, 50.7915, 0.66", "-70.3183, -66.327, 50.9584, 0.66", "-71.1149, -67.4694, 51.0363, 0.66", "-71.4212, -67.9147, 51.0299, 0.66", "-71.7737, -68.4618, 50.9636, 0.66", "-72.0862, -69.011, 50.8676, 0.44", "-72.3288, -69.5485, 50.7431, 0.44", "-72.6783, -70.4462, 50.5024, 0.44", "-73.075, -71.4114, 50.2371, 0.44", "-73.4057, -72.1195, 50.1179, 0.44", "-73.8875, -73.1145, 50.0718, 0.44", "-74.3131, -73.9474, 50.1334, 0.44", "-74.8033, -74.893, 50.2986, 0.37", "-75.4424, -76.165, 50.6247, 0.37", "-76.3317, -77.938, 51.1646, 0.37", "-76.8627, -78.9914, 51.5024, 0.37", "-77.4821, -80.1991, 51.9073, 0.37", "-77.892, -80.9234, 52.1536, 0.37", "-78.489, -81.8613, 52.4403, 0.37", "-79.1857, -82.7854, 52.6576, 0.37", "-79.7515, -83.4198, 52.7631, 0.37", "-80.3027, -83.93, 52.8532, 0.37", "-81.4668, -84.9292, 53.0453, 0.37", "-82.2601, -85.6003, 53.1654, 0.37", "-82.9648, -86.2362, 53.2628, 0.37", "-83.8987, -87.1107, 53.3934, 0.37", "-84.5629, -87.7682, 53.4814, 0.37", "-85.7217, -89.0358, 53.6093, 0.37", "-86.327, -89.8204, 53.6819, 0.29", "-87.0383, -90.8423, 53.7568, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-55.618, -12.6633, 30.8638, 0.52", "-56.28, -12.8208, 30.7079, 0.52", "-57.2149, -13.0549, 30.5296, 0.29", "-57.9256, -13.2563, 30.4134, 0.29", "-58.734, -13.4854, 30.2812, 0.29", "-59.5465, -13.7157, 30.1483, 0.29", "-60.5099, -13.9888, 29.9907, 0.29", "-61.3571, -14.2198, 29.8383, 0.22", "-61.7551, -14.3426, 29.7613, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "66.1239, 22.3063, 19.185, 1.11", "66.6543, 22.7053, 20.099, 1.11", "67.9398, 23.7854, 22.0631, 0.88", "67.9754, 23.8166, 22.1155, 0.88", "69.1656, 24.7546, 23.7623, 0.74", "69.712, 25.0781, 24.6591, 0.74", "69.7388, 25.1014, 24.7595, 0.74", "70.1298, 25.5333, 26.8612, 0.74", "70.1412, 25.5476, 26.9393, 0.74", "70.2976, 25.6791, 27.8721, 0.74", "70.9276, 25.9356, 31.3182, 1.03", "72.3814, 26.2572, 38.9611, 0.88", "72.5675, 26.2895, 39.9023, 0.88", "72.588, 26.2924, 40.0066, 0.88", "73.2038, 26.4606, 42.9518, 0.88", "73.7886, 26.7182, 45.5334, 0.52", "73.8573, 26.7528, 45.7514, 0.52", "74.1157, 26.8039, 46.2183, 0.52", "74.198, 26.85, 46.4175, 0.52", "74.0766, 27.962, 47.1735, 0.52", "74.0305, 28.0975, 47.1964, 0.52", "73.6894, 29.2045, 47.2679, 0.88", "73.2558, 30.7203, 47.4037, 0.44", "73.2345, 30.8008, 47.4121, 0.44", "72.9751, 31.9072, 47.5151, 0.44", "73.0518, 31.9087, 47.644, 0.44", "73.4824, 31.8928, 48.4174, 0.44", "74.1346, 31.8985, 49.5444, 0.44", "74.2175, 31.898, 49.6831, 0.44", "75.2667, 31.9894, 51.4889, 0.44", "77.0844, 32.2222, 54.7568, 0.44", "77.1128, 32.2298, 54.8092, 0.44", "77.6452, 32.4858, 55.84, 0.66", "77.7063, 32.546, 55.9644, 0.66", "78.2511, 33.573, 57.3603, 0.66", "78.3246, 33.7947, 57.575, 0.66", "78.5235, 34.3078, 58.2878, 0.66", "78.7206, 34.7089, 59.0703, 0.66", "78.9814, 35.0735, 60.0183, 0.96", "79.7547, 35.8692, 62.5175, 0.44", "80.0872, 36.0977, 63.4537, 0.44", "81.9824, 37.0574, 68.2808, 0.44", "82.0066, 37.0657, 68.3352, 0.44", "82.5663, 37.1949, 69.3748, 0.44", "82.8048, 37.236, 69.7258, 0.44", "83.4464, 37.3731, 70.3747, 0.44", "83.5637, 37.4223, 70.4443, 0.44", "84.7094, 38.1333, 70.3234, 0.37", "85.6869, 38.8595, 70.1961, 0.37", "85.8849, 39.0335, 70.1594, 0.37", "86.2111, 39.3451, 70.0854, 0.37", "86.3515, 39.4967, 70.0462, 0.37", "86.7769, 39.9734, 69.9507, 0.37", "87.7098, 41.0938, 69.9507, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "66.1239, 22.3063, 19.185, 0.37", "66.6491, 23.6862, 18.9248, 0.37", "66.6835, 23.7616, 18.9168, 0.37", "67.3319, 25.1353, 18.8397, 0.37", "67.4009, 25.2826, 18.8355, 0.37", "68.0682, 26.7335, 18.8154, 0.37", "68.1356, 26.8818, 18.8144, 0.37", "68.5917, 27.9136, 18.8689, 0.37", "69.0414, 28.9315, 18.9229, 0.81", "69.491, 29.9671, 18.9734, 0.52", "69.8036, 30.8019, 18.9671, 0.52", "69.828, 30.8817, 18.962, 0.52", "70.0493, 31.6111, 18.883, 0.52", "70.0942, 31.7665, 18.8584, 0.52", "70.3873, 32.7237, 18.6535, 0.37", "70.7736, 33.9258, 18.3474, 1.03", "71.0115, 34.6379, 18.15, 0.52", "71.3983, 35.7794, 17.8357, 0.22", "71.4212, 35.8461, 17.8176, 0.22", "71.6477, 36.5, 17.6532, 0.59", "71.8123, 36.9458, 17.5592, 0.81", "71.8943, 37.1579, 17.5295, 0.81", "72.1482, 37.8734, 17.4345, 0.29", "72.2914, 38.313, 17.3833, 0.29", "72.3543, 38.4706, 17.3535, 0.29", "72.6188, 39.0544, 17.2191, 0.29", "72.8991, 39.5683, 17.0682, 0.88", "73.3343, 40.2607, 16.8348, 0.88", "73.4651, 40.4375, 16.7812, 0.88", "74.3936, 41.6126, 16.4707, 0.37", "74.4397, 41.6667, 16.4599, 0.37", "74.9962, 42.2656, 16.3733, 0.37", "75.2656, 42.5195, 16.3351, 0.37", "76.2046, 43.3442, 16.2121, 0.37", "76.3214, 43.4422, 16.1999, 0.37", "77.2799, 44.208, 16.1366, 0.37", "77.3362, 44.2513, 16.1316, 0.37", "79.0424, 45.5625, 15.9411, 0.37", "79.0976, 45.6066, 15.9314, 0.37", "80.0356, 46.3965, 15.7164, 0.37", "80.2619, 46.5973, 15.6212, 0.37", "80.9924, 47.27, 15.213, 0.37", "81.6249, 47.8698, 14.8014, 1.25", "82.5278, 48.7449, 14.0745, 2.06", "83.1018, 49.3092, 13.5618, 2.36", "84.9066, 51.1507, 11.8487, 1.84", "85.4548, 51.6992, 11.3231, 1.25", "85.4904, 51.7342, 11.2883, 1.25", "86.4329, 52.5944, 10.4091, 0.59", "86.9433, 53.0154, 9.953, 0.59", "87.9101, 53.7719, 9.12989, 0.52", "89.3345, 54.7831, 8.15867, 0.52", "89.3783, 54.8106, 8.12706, 0.52", "89.8295, 55.0585, 7.78815, 0.81", "91.3124, 55.7521, 6.68979, 0.22", "91.4321, 55.8004, 6.60009, 0.22", "92.4676, 56.1814, 5.8336, 0.22", "94.0144, 56.758, 4.77606, 0.22", "95.244, 57.2522, 3.97837, 0.96", "95.924, 57.5522, 3.57786, 1.11", "96.3643, 57.7689, 3.37476, 1.11", "96.7925, 58.0167, 3.18827, 0.22", "97.1572, 58.2961, 3.05728, 0.22", "97.3117, 58.4328, 3.02166, 0.22", "97.7929, 58.9002, 2.93058, 0.22", "98.606, 59.7236, 2.76152, 0.22", "99.8014, 60.952, 2.49605, 0.22", "101.161, 62.3647, 2.17599, 0.22", "101.669, 62.9001, 2.05054, 0.66", "102.007, 63.2638, 1.96363, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "38.1766, 12.1274, 13.24, 0.59", "38.6488, 11.7631, 13.7834, 0.59", "39.1335, 11.3696, 14.4658, 0.59", "40.0002, 10.65, 15.7937, 0.59", "40.4949, 10.1962, 16.6781, 1.03", "41.8912, 8.66935, 19.5452, 0.88", "41.9157, 8.63613, 19.6026, 0.88", "42.4236, 7.63911, 21.2402, 0.88", "42.4345, 7.60112, 21.2991, 0.88", "42.4889, 6.81486, 22.4018, 0.66", "42.4285, 6.10996, 23.1667, 0.66", "42.2717, 5.20657, 23.6941, 0.81", "42.2683, 5.14393, 23.7305, 0.81", "42.3947, 4.20411, 24.2307, 0.59", "42.4863, 4.0552, 24.3473, 0.59", "43.2564, 3.76332, 24.8934, 0.59", "43.463, 3.73905, 25.0201, 0.59", "45.5271, 3.80008, 26.0876, 0.59", "46.4231, 3.89206, 26.516, 0.96", "47.2788, 4.0377, 26.9343, 0.59", "48.0509, 4.16477, 27.432, 0.59", "48.1675, 4.17756, 27.5256, 0.59", "49.4082, 4.23508, 28.6319, 0.59", "49.5483, 4.22519, 28.7722, 0.59", "50.4869, 4.07967, 29.8368, 1.18", "52.3701, 3.57164, 32.0056, 1.11", "53.927, 3.03104, 33.8176, 1.11", "53.9655, 3.01459, 33.8609, 1.11", "55.5025, 2.23066, 35.5595, 0.74", "55.5427, 2.20947, 35.5993, 0.74", "57.0881, 1.34947, 36.9156, 0.74", "57.1446, 1.31118, 37.0065, 0.74", "57.8623, 0.81272, 38.7108, 1.03", "57.8884, 0.795103, 38.7845, 1.03", "58.4797, 0.440936, 40.6488, 0.74", "58.5032, 0.42938, 40.7245, 0.74", "61.1306, -0.585726, 49.9505, 1.25", "61.7193, -0.760075, 52.0124, 0.66", "61.7376, -0.76375, 52.0799, 0.66", "62.0052, -0.795054, 53.049, 0.66", "62.2278, -0.800768, 53.88, 0.44", "62.2781, -0.789159, 54.0209, 0.44", "62.771, -0.456683, 54.492, 0.29", "62.835, -0.414482, 54.5559, 0.29", "63.5458, -0.00164754, 55.2539, 0.59", "63.5986, 0.0267807, 55.3075, 0.59", "65.213, 0.810331, 56.7898, 1.18", "67.1703, 1.60945, 58.2465, 0.59", "68.5919, 2.10603, 59.1331, 0.59", "69.1837, 2.27841, 59.4174, 0.44", "69.2466, 2.29593, 59.4433, 0.44", "70.4556, 2.64901, 59.9874, 0.44", "71.7133, 3.01389, 60.5164, 0.44", "71.7709, 3.02996, 60.5531, 0.44", "72.5968, 3.26309, 61.3584, 0.44", "73.771, 3.49736, 62.6738, 0.66", "75.0036, 3.58472, 64.3648, 0.66", "75.0397, 3.58289, 64.4249, 0.66", "75.9389, 3.4421, 66.0007, 0.52", "75.9812, 3.43172, 66.0679, 0.52", "76.4839, 3.24738, 66.7816, 0.52", "77.6941, 2.74937, 68.2363, 0.74", "77.7374, 2.73555, 68.2897, 0.74", "78.3958, 2.6113, 69.1881, 0.44", "79.1578, 2.68738, 70.3901, 0.44", "79.2301, 2.71168, 70.5195, 0.44", "79.8919, 3.33685, 71.9398, 0.44", "80.2393, 3.9562, 72.775, 0.44", "80.2657, 4.02343, 72.8457, 0.44", "80.4514, 4.74156, 73.3893, 0.44", "80.4648, 4.80751, 73.4172, 0.44", "80.843, 6.10442, 73.6887, 0.44", "80.8681, 6.173, 73.691, 0.44", "81.2231, 6.9853, 73.7288, 0.29", "81.5975, 7.82007, 73.8723, 0.29", "81.7091, 8.05737, 73.9391, 0.29", "82.2397, 9.33001, 74.4184, 0.29", "82.2684, 9.41413, 74.4689, 0.29", "82.4864, 10.4606, 75.277, 0.22", "82.4816, 11.4068, 76.1797, 0.22", "82.4723, 11.4544, 76.2322, 0.22", "82.2803, 11.975, 76.8105, 0.22", "81.8403, 12.7214, 77.6566, 0.22", "81.763, 12.8321, 77.7581, 0.22", "81.3705, 13.3164, 78.1089, 0.22", "81.2775, 13.4322, 78.1697, 0.22", "80.815, 14.0371, 78.4473, 0.22", "80.7191, 14.1799, 78.4913, 0.59", "80.1902, 14.9414, 78.5355, 0.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "38.1766, 12.1274, 13.24, 0.66", "37.839, 12.4599, 13.5456, 0.66", "37.472, 13.1532, 13.6488, 0.66", "37.2381, 14.4595, 12.9257, 0.29", "37.2009, 14.9381, 12.6527, 0.22", "37.2047, 15.2209, 12.4971, 0.22", "37.362, 16.4438, 11.8927, 0.52", "37.5818, 17.3946, 11.411, 0.88", "37.9061, 18.3942, 10.9841, 1.18", "38.2917, 19.3952, 10.6883, 0.66", "38.8374, 20.6652, 10.52, 0.52", "39.4328, 22.0567, 10.6257, 0.52", "39.4593, 22.1217, 10.645, 0.52", "40.026, 23.7744, 11.3559, 0.88", "40.4158, 25.3112, 12.1447, 1.33", "40.4208, 25.3761, 12.1772, 1.33", "40.3449, 26.3111, 12.5627, 0.81", "40.1525, 27.1289, 12.7745, 0.52", "39.7521, 28.4241, 12.9066, 0.52", "39.5127, 29.0562, 12.8807, 0.96", "38.7708, 30.9622, 12.6698, 0.96", "38.3109, 32.2495, 12.5099, 0.44", "38.024, 33.1308, 12.4295, 0.37", "37.6668, 34.3104, 12.3887, 0.37", "37.6477, 34.3809, 12.3933, 0.37", "37.3817, 35.4634, 12.5832, 0.37", "37.2039, 36.3003, 12.9207, 0.88", "36.8973, 37.7705, 13.7484, 0.66", "36.8859, 37.8301, 13.7877, 0.66", "36.7455, 38.5322, 14.3123, 0.52", "36.6595, 39.0353, 14.6999, 0.52", "36.4342, 40.5464, 15.9464, 0.88", "36.4307, 40.5928, 15.9866, 0.88", "36.4743, 41.4188, 16.6375, 1.25", "36.4836, 41.4779, 16.6782, 1.25", "36.734, 42.4312, 17.259, 1.25", "36.7931, 42.5968, 17.347, 1.25", "37.2952, 43.7654, 17.8394, 0.96", "37.6493, 44.5774, 18.1712, 0.52", "38.0167, 45.4774, 18.4987, 0.44", "38.0509, 45.5695, 18.5289, 0.44", "38.214, 46.1082, 18.6659, 0.44", "38.2309, 46.1782, 18.6794, 0.44", "38.4361, 47.7468, 18.8647, 0.44", "38.5076, 49.034, 19.0479, 0.44", "38.5081, 49.1066, 19.059, 0.44", "38.4982, 49.9757, 19.1946, 0.44", "38.4986, 50.0571, 19.2145, 0.44", "38.562, 51.0336, 19.5657, 0.44", "38.7655, 52.1756, 20.1056, 0.44", "38.9911, 52.8734, 20.4941, 0.88", "39.0154, 52.9327, 20.5277, 0.88", "39.741, 54.5429, 21.3538, 1.25", "40.1778, 55.4915, 21.7906, 0.74", "40.5156, 56.2519, 22.0932, 0.74", "40.9208, 57.3297, 22.4587, 0.59", "41.2172, 58.3009, 22.74, 0.52", "41.5718, 59.9435, 23.1112, 0.37", "41.6946, 61.1187, 23.2917, 1.33", "41.7181, 62.2852, 23.4455, 1.33", "41.619, 63.4986, 23.6055, 0.96", "41.4699, 64.4034, 23.7266, 0.52", "41.2427, 65.4231, 23.8562, 0.52", "40.9217, 66.6613, 24.0015, 0.52", "40.8639, 66.883, 24.023, 0.52", "40.5556, 68.1968, 24.1504, 0.52", "40.5265, 68.3401, 24.1619, 0.52", "40.3585, 69.246, 24.244, 0.37", "40.1708, 70.455, 24.3566, 0.37", "40.0319, 71.3764, 24.3613, 1.03", "40.0083, 71.534, 24.3511, 1.03", "39.9043, 72.3226, 24.2508, 1.03", "39.7584, 73.3274, 24.0748, 1.25", "39.5943, 74.2844, 23.8517, 1.25", "39.2531, 75.9054, 23.4001, 1.25", "39.1194, 76.4787, 23.2211, 0.44", "39.0129, 76.905, 23.1042, 0.44", "38.7767, 77.7769, 22.92, 0.44", "38.7574, 77.8471, 22.9121, 0.44", "38.4601, 78.8739, 22.9162, 0.44", "38.4421, 78.9446, 22.9226, 0.44", "38.2849, 79.7348, 22.9782, 0.44", "38.1291, 80.7584, 23.0271, 0.44", "38.0158, 81.7476, 23.0736, 0.44", "37.917, 83.0077, 23.1278, 1.18", "37.8683, 84.161, 23.1702, 1.18", "37.7767, 86.3898, 23.2304, 1.18", "37.7475, 87.0134, 23.2661, 0.66", "37.7142, 87.6042, 23.33, 0.44", "37.6492, 88.2868, 23.4471, 0.44", "37.6384, 88.3673, 23.4672, 0.44", "37.4499, 89.3237, 23.7886, 0.44", "37.1645, 90.7283, 24.4305, 0.44", "37.1432, 90.9268, 24.5409, 0.44", "37.1225, 91.775, 25.0503, 1.11", "37.1616, 92.4387, 25.4625, 1.55", "37.1798, 92.5771, 25.5449, 1.55", "37.4499, 93.7364, 26.2614, 1.55", "37.7919, 95.0972, 27.046, 0.81", "37.8062, 95.1576, 27.0832, 0.81", "37.8841, 95.5624, 27.3884, 0.66", "37.9278, 96.0198, 27.7688, 0.66", "37.9154, 96.8204, 28.4324, 0.52", "37.8199, 97.4366, 28.9484, 0.52", "37.807, 97.4974, 29.002, 0.52", "37.5801, 98.6622, 30.0558, 0.52", "37.5195, 98.9673, 30.3451, 1.11", "37.4351, 99.4302, 30.7124, 1.11", "37.4171, 99.5426, 30.7839, 1.11", "37.2818, 100.77, 31.4552, 0.52", "37.2265, 101.331, 31.6986, 0.44", "37.2182, 101.411, 31.7226, 0.44", "37.0037, 103.055, 32.1457, 0.44", "36.9918, 103.126, 32.1607, 0.44", "36.7786, 104.216, 32.3429, 1.11", "36.6364, 104.819, 32.438, 1.11", "36.4596, 105.545, 32.5807, 0.74", "36.301, 106.196, 32.7279, 0.37", "36.121, 106.939, 32.9195, 0.37", "36.106, 107.008, 32.9394, 0.37", "35.8594, 108.251, 33.3316, 0.37", "35.7338, 108.881, 33.5483, 0.29", "35.717, 108.957, 33.5779, 0.29", "35.5337, 109.564, 33.8108, 0.29", "35.1401, 110.579, 34.2126, 0.29", "35.0722, 110.73, 34.2729, 0.29", "34.6913, 111.505, 34.5775, 0.29", "34.2784, 112.291, 34.9134, 0.29", "33.7296, 113.342, 35.4103, 0.29", "33.429, 113.965, 35.7106, 0.29", "33.3801, 114.079, 35.7634, 0.29", "33.0996, 114.979, 36.1527, 0.29", "33.077, 115.093, 36.1987, 0.29", "32.9892, 115.992, 36.4889, 1.25", "32.9564, 117.093, 36.7941, 1.69", "32.954, 117.174, 36.816, 1.69", "32.8912, 118.273, 37.1114, 1.69", "32.8751, 118.496, 37.1686, 1.69", "32.7963, 119.459, 37.4036, 1.69", "32.7872, 119.56, 37.4263, 1.69", "32.631, 121.069, 37.7984, 0.52", "32.5575, 121.905, 38.0186, 0.37", "32.5094, 122.749, 38.3854, 0.37", "32.5074, 122.813, 38.4199, 0.37", "32.5104, 123.396, 38.7773, 0.37", "32.5134, 123.457, 38.8159, 0.37", "32.7219, 125.401, 40.0407, 0.22", "33.0345, 127.495, 41.4015, 0.37", "33.0456, 127.556, 41.4395, 0.37", "33.1903, 128.245, 41.8461, 1.18", "33.332, 128.87, 42.1778, 1.92", "33.4936, 129.543, 42.4756, 1.25", "33.5833, 129.903, 42.5672, 0.59", "33.7582, 130.706, 42.6539, 0.59", "33.7754, 130.788, 42.6636, 0.59", "34.0478, 132.242, 42.8589, 0.29", "34.0601, 132.313, 42.869, 0.29", "34.2976, 133.754, 43.0686, 0.29", "34.311, 133.836, 43.0793, 0.29", "34.4616, 134.796, 43.1878, 0.29", "34.5148, 135.133, 43.2172, 0.81", "34.6072, 135.761, 43.2851, 0.44", "34.6446, 136.24, 43.3624, 0.44", "34.6436, 136.537, 43.4271, 0.44", "34.5627, 137.204, 43.5886, 0.44", "34.5231, 137.363, 43.6261, 0.44", "34.229, 138.461, 43.8542, 0.88", "33.9978, 139.33, 44.0537, 0.88", "33.9559, 139.498, 44.0924, 0.88", "33.6877, 140.725, 44.3624, 0.52", "33.447, 142.041, 44.6834, 0.52", "33.2441, 143.297, 44.9941, 0.37", "33.078, 144.411, 45.2614, 1.11", "32.9485, 145.368, 45.5147, 1.47", "32.8717, 145.973, 45.6844, 1.47", "32.7319, 147.33, 46.1471, 0.44", "32.6717, 147.866, 46.371, 0.44", "32.6293, 148.18, 46.5171, 0.37", "32.5937, 148.43, 46.6311, 0.37", "32.5551, 148.849, 46.8259, 0.37", "32.5444, 149.72, 47.243, 0.37", "32.5466, 149.78, 47.2834, 0.37", "32.5853, 150.391, 47.7663, 0.37", "32.5948, 150.524, 47.8793, 0.37", "32.6283, 151.02, 48.2999, 1.18", "32.7183, 152.351, 49.4096, 1.18", "32.8689, 153.856, 50.5897, 0.96", "32.9056, 154.149, 50.8225, 0.37", "32.9185, 154.211, 50.8746, 0.37", "33.1163, 154.771, 51.3392, 0.37", "33.295, 154.972, 51.5065, 0.37", "33.9566, 155.378, 51.7183, 0.37", "34.0161, 155.414, 51.7303, 0.37", "34.9923, 156.091, 51.9479, 0.37", "35.1707, 156.243, 51.9914, 0.37", "36.0084, 157.172, 52.2087, 0.37", "36.6016, 157.994, 52.3573, 0.37", "37.0054, 158.657, 52.4597, 1.25", "37.3698, 159.328, 52.5794, 1.55", "37.9713, 160.572, 52.813, 0.52", "38.5546, 161.816, 53.0478, 0.37", "39.0509, 162.753, 53.3056, 0.37", "39.0829, 162.802, 53.3262, 0.37", "39.7161, 163.564, 53.8611, 0.88", "40.0047, 163.85, 54.1514, 0.88", "40.0503, 163.891, 54.2041, 0.88", "41.4068, 165.052, 55.9025, 0.52", "41.4448, 165.088, 55.9506, 0.52", "42.4005, 166.053, 57.0897, 0.52", "42.4386, 166.096, 57.1311, 0.52", "42.8908, 166.709, 57.6105, 0.81", "42.9706, 166.837, 57.6891, 0.81", "43.3913, 167.715, 58.0235, 0.81", "43.4208, 167.778, 58.0425, 0.81", "44.0393, 169.097, 58.3649, 0.52", "44.2979, 169.548, 58.5195, 0.52", "44.4144, 169.701, 58.5863, 0.52", "44.6842, 169.997, 58.7348, 0.88", "45.18, 170.393, 58.973, 0.88", "46.3727, 171.043, 59.3874, 0.37", "47.545, 171.433, 59.7171, 0.37", "48.5215, 171.665, 59.9697, 0.37", "48.8024, 171.699, 60.034, 0.37", "50.2668, 171.655, 60.3258, 0.29", "52.1555, 171.367, 60.6432, 0.29", "53.2622, 171.052, 60.78, 1.03", "53.3284, 171.029, 60.7869, 1.03", "54.5817, 170.521, 60.9262, 0.29", "56.0501, 169.813, 61.0948, 0.29", "56.1087, 169.774, 61.1018, 0.29", "56.7595, 169.162, 61.1902, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "88.7745, 107.092, -8.68856, 0.66", "86.835, 116.968, -5.89925, 0.66", "86.5876, 126.57, -1.86123, 0.66", "87.0131, 136.419, 1.57877, 0.66", "88.9561, 146.59, 3.12546, 0.66", "91.4769, 156.525, 5.1548, 0.66", "95.301, 166.019, 7.05955, 0.66", "98.2156, 175.747, 9.44073, 0.66", "99.667, 186.119, 9.98834, 0.66", "100.931, 196.234, 12.3575, 0.66", "102.942, 205.898, 15.709, 0.66", "104.261, 215.396, 19.7635, 0.66", "104.192, 225.594, 22.1439, 0.66", "105.415, 235.311, 25.7297, 0.66", "108.854, 244.148, 29.8949, 0.66", "111.008, 253.172, 34.5306, 0.66", "114.485, 261.503, 39.527, 0.66", "116.745, 270.932, 43.3017, 0.66", "117.802, 280.013, 48.2095, 0.66", "120.385, 288.919, 52.8336, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "88.7745, 107.092, -8.68856, 0.52", "96.3715, 111.405, -13.7294, 0.66", "103.771, 117.32, -17.4046, 0.66", "109.836, 124.464, -21.5188, 0.66", "116.876, 131.209, -24.5467, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "90.9202, -46.218, 69.1949, 0.66", "91.173, -46.5769, 69.6836, 0.66", "91.4326, -46.9088, 70.1498, 0.66", "92.4214, -48.079, 71.8279, 0.66", "93.1831, -48.9422, 73.0807, 0.66", "93.2116, -48.9736, 73.124, 0.66", "94.2526, -50.1461, 74.5189, 0.66", "94.3085, -50.2038, 74.581, 0.66", "94.446, -50.348, 74.7057, 1.03", "94.446, -50.348, 74.7057, 1.03", "95.0122, -51.1758, 75.097, 0.88", "96.0862, -52.9465, 75.7918, 0.74", "96.1189, -53.0077, 75.8127, 0.74", "97.0111, -54.7576, 76.4161, 0.59", "97.3492, -55.4949, 76.6715, 0.44", "97.7184, -56.3358, 76.9661, 0.29", "97.991, -57.0242, 77.2133, 0.29", "98.394, -58.2044, 77.6179, 0.29", "98.4153, -58.2701, 77.6408, 0.29", "98.6158, -58.9827, 77.9042, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "90.9202, -46.218, 69.1949, 0.66", "90.3027, -45.8018, 69.5, 0.66", "89.4674, -45.1602, 69.8642, 0.37", "88.6618, -44.32, 70.1512, 0.37", "88.6018, -44.2388, 70.1927, 0.37", "87.97, -43.2234, 70.7931, 0.37", "87.9361, -43.1688, 70.8253, 0.37", "87.7246, -42.718, 71.0938, 0.37", "87.3456, -41.5515, 71.783, 0.22", "86.9257, -39.6735, 72.703, 0.22", "86.9181, -39.6119, 72.7404, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "98.6158, -58.9827, 77.9042, 0.15", "100.065, -61.6861, 77.5517, 0.15", "100.678, -62.8309, 77.4024, 0.15", "101.751, -64.8322, 77.1415, 0.15", "101.968, -65.2357, 77.0889, 0.15", "102.941, -67.0513, 76.8521, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "98.6158, -58.9827, 77.9042, 0.29", "98.0664, -58.8527, 77.5742, 0.29", "97.5988, -58.7421, 77.2933, 0.15", "96.6004, -58.506, 76.6935, 0.15", "95.5468, -58.2567, 76.0605, 0.15", "94.3407, -57.9713, 75.3359, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_21", "dend_0", "dend_50", "dend_41", "dend_31", "dend_22", "dend_9", "dend_1", "dend_58", "dend_51", "dend_49", "dend_42", "dend_35", "dend_32", "dend_26", "dend_23", "dend_14", "dend_10", "dend_2", "dend_60", "dend_59", "dend_55", "dend_52", "dend_46", "dend_43", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_15", "dend_11", "dend_4", "dend_3", "dend_62", "dend_61", "dend_57", "dend_56", "dend_54", "dend_53", "dend_48", "dend_47", "dend_45", "dend_44", "dend_39", "dend_38", "dend_30", "dend_29", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_12", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_21", "dend_0", "dend_50", "dend_41", "dend_31", "dend_22", "dend_9", "dend_1", "dend_58", "dend_51", "dend_49", "dend_42", "dend_35", "dend_32", "dend_26", "dend_23", "dend_14", "dend_10", "dend_2", "dend_60", "dend_59", "dend_55", "dend_52", "dend_46", "dend_43", "dend_37", "dend_36", "dend_34", "dend_33", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_15", "dend_11", "dend_4", "dend_3", "dend_62", "dend_61", "dend_57", "dend_56", "dend_54", "dend_53", "dend_48", "dend_47", "dend_45", "dend_44", "dend_39", "dend_38", "dend_30", "dend_29", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_12", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_NBC_3fc0dff69e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_0
create dend_9
public dend_9
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_50
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_41
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_9
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.450000602452921)
    connect dend_21(0), soma_0(0.450000602452921)
    connect dend_0(0), soma_0(0.450000602452921)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_14(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -13.5885, -1.40806, -1.21115, 3.28922 ) }
    soma_0 { pt3dadd( -12.1797, -1.31485, -1.09796, 5.53013 ) }
    soma_0 { pt3dadd( -10.7708, -1.22164, -0.98478, 8.11492 ) }
    soma_0 { pt3dadd( -9.36203, -1.12843, -0.871597, 8.79827 ) }
    soma_0 { pt3dadd( -7.95321, -1.03522, -0.758413, 9.64874 ) }
    soma_0 { pt3dadd( -6.54439, -0.94201, -0.645229, 10.525 ) }
    soma_0 { pt3dadd( -5.13557, -0.848801, -0.532045, 11.3671 ) }
    soma_0 { pt3dadd( -3.72674, -0.755591, -0.418861, 12.0867 ) }
    soma_0 { pt3dadd( -2.31792, -0.662382, -0.305678, 12.7138 ) }
    soma_0 { pt3dadd( -0.909103, -0.569173, -0.192494, 13.1296 ) }
    soma_0 { pt3dadd( 0.499717, -0.475964, -0.0793099, 13.1814 ) }
    soma_0 { pt3dadd( 1.90854, -0.382755, 0.033874, 12.8438 ) }
    soma_0 { pt3dadd( 3.31736, -0.289546, 0.147058, 12.4399 ) }
    soma_0 { pt3dadd( 4.72618, -0.196336, 0.260242, 11.9471 ) }
    soma_0 { pt3dadd( 6.135, -0.103127, 0.373425, 11.0762 ) }
    soma_0 { pt3dadd( 7.54382, -0.00991806, 0.486609, 10.1681 ) }
    soma_0 { pt3dadd( 8.95264, 0.0832911, 0.599793, 8.77152 ) }
    soma_0 { pt3dadd( 10.3615, 0.1765, 0.712977, 7.19375 ) }
    soma_0 { pt3dadd( 11.7703, 0.269709, 0.826161, 5.5839 ) }
    soma_0 { pt3dadd( 13.1791, 0.362919, 0.939345, 4.44994 ) }
    soma_0 { pt3dadd( 14.5879, 0.456128, 1.05253, 2.56587 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -12.1281, -3.87264, -1.27135, 2.58 ) }
    dend_40 { pt3dadd( -12.1281, -3.87264, -1.27135, 2.58 ) }
    dend_40 { pt3dadd( -13.4196, -4.68002, -1.46032, 2.21 ) }
    dend_40 { pt3dadd( -13.4887, -4.71921, -1.4754, 2.21 ) }
    dend_40 { pt3dadd( -14.5649, -5.31161, -1.73993, 2.21 ) }
    dend_40 { pt3dadd( -15.4371, -5.7635, -1.95403, 2.14 ) }
    dend_40 { pt3dadd( -15.4987, -5.79446, -1.96934, 2.14 ) }
    dend_40 { pt3dadd( -16.4375, -6.23471, -2.24779, 1.92 ) }
    dend_40 { pt3dadd( -17.6786, -6.79277, -2.63992, 1.92 ) }
    dend_40 { pt3dadd( -17.7388, -6.82207, -2.66213, 1.92 ) }
    dend_40 { pt3dadd( -18.8183, -7.40113, -3.13784, 1.92 ) }
    dend_40 { pt3dadd( -18.8665, -7.42905, -3.16162, 1.92 ) }
    dend_40 { pt3dadd( -20.0667, -8.19869, -3.75952, 1.92 ) }
    dend_40 { pt3dadd( -21.4721, -9.1462, -4.47748, 2.14 ) }
    dend_40 { pt3dadd( -22.7759, -10.0561, -5.16503, 2.14 ) }
    dend_40 { pt3dadd( -24.2499, -11.1108, -5.97026, 2.14 ) }
    dend_40 { pt3dadd( -25.4508, -12.0169, -6.66972, 2.87 ) }
    dend_40 { pt3dadd( -26.7392, -13.0109, -7.42412, 2.87 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 39/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.6281, 1.81836, -0.451354, 2.73 ) }
    dend_21 { pt3dadd( -12.6281, 1.81836, -0.451354, 2.73 ) }
    dend_21 { pt3dadd( -14.4809, 2.38275, -0.451354, 2.65 ) }
    dend_21 { pt3dadd( -15.8172, 2.7898, -0.451354, 2.95 ) }
    dend_21 { pt3dadd( -17.4225, 3.27877, -0.451354, 3.24 ) }
    dend_21 { pt3dadd( -19.4456, 3.89501, -0.451354, 3.46 ) }
    dend_21 { pt3dadd( -20.5228, 4.22313, -0.451354, 3.24 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 14.6219, 1.08336, -0.521354, 3.68 ) }
    dend_0 { pt3dadd( 14.6219, 1.08336, -0.521354, 3.68 ) }
    dend_0 { pt3dadd( 18.6153, 0.600245, 1.46168, 3.68 ) }
    dend_0 { pt3dadd( 21.7462, 0.221456, 3.01648, 3.17 ) }
    dend_0 { pt3dadd( 24.5358, -0.116022, 4.40172, 3.17 ) }
    dend_0 { pt3dadd( 27.0652, -0.42204, 5.65782, 3.02 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 14.5879, 0.456128, 1.05253, 0.535241 ) }
    axon_0 { pt3dadd( 29.5552, 1.44638, 1.05253, 0.535241 ) }
    axon_0 { pt3dadd( 44.5225, 2.43664, 1.05253, 0.535241 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 55/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -26.7392, -13.0109, -7.42412, 1.92 ) }
    dend_50 { pt3dadd( -26.7897, -14.5338, -7.74122, 1.92 ) }
    dend_50 { pt3dadd( -26.8474, -16.2299, -8.03534, 0.74 ) }
    dend_50 { pt3dadd( -26.8498, -16.3024, -8.04666, 0.74 ) }
    dend_50 { pt3dadd( -26.8814, -17.5112, -8.30164, 0.52 ) }
    dend_50 { pt3dadd( -26.8939, -18.4035, -8.50025, 1.11 ) }
    dend_50 { pt3dadd( -26.8954, -18.4854, -8.51799, 1.11 ) }
    dend_50 { pt3dadd( -26.9315, -19.5357, -8.71416, 1.11 ) }
    dend_50 { pt3dadd( -26.9346, -19.6081, -8.72594, 1.11 ) }
    dend_50 { pt3dadd( -27.1076, -21.4435, -9.00515, 0.59 ) }
    dend_50 { pt3dadd( -27.3419, -22.9423, -9.21824, 0.59 ) }
    dend_50 { pt3dadd( -27.5849, -24.0012, -9.34974, 1.4 ) }
    dend_50 { pt3dadd( -27.8574, -25.0822, -9.45567, 0.74 ) }
    dend_50 { pt3dadd( -27.8755, -25.1532, -9.45576, 0.74 ) }
    dend_50 { pt3dadd( -28.294, -26.7811, -9.31551, 0.74 ) }
    dend_50 { pt3dadd( -28.5085, -27.7196, -9.12521, 1.18 ) }
    dend_50 { pt3dadd( -28.6649, -28.5504, -8.91172, 1.62 ) }
    dend_50 { pt3dadd( -28.8005, -29.9152, -8.4899, 1.47 ) }
    dend_50 { pt3dadd( -28.8373, -31.8366, -7.81784, 0.88 ) }
    dend_50 { pt3dadd( -28.8338, -31.9146, -7.78832, 0.88 ) }
    dend_50 { pt3dadd( -28.6284, -33.1633, -7.2436, 0.74 ) }
    dend_50 { pt3dadd( -28.5915, -33.3148, -7.17137, 0.74 ) }
    dend_50 { pt3dadd( -28.2119, -34.5939, -6.52023, 0.74 ) }
    dend_50 { pt3dadd( -28.1775, -34.7309, -6.44876, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 79/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -26.7392, -13.0109, -7.42412, 1.69 ) }
    dend_41 { pt3dadd( -28.1506, -13.6512, -8.17192, 1.69 ) }
    dend_41 { pt3dadd( -29.2914, -14.1779, -8.69111, 1.4 ) }
    dend_41 { pt3dadd( -30.9575, -14.9514, -9.38685, 1.4 ) }
    dend_41 { pt3dadd( -32.2473, -15.5502, -9.92546, 1.77 ) }
    dend_41 { pt3dadd( -32.3071, -15.578, -9.95043, 1.77 ) }
    dend_41 { pt3dadd( -33.7255, -16.2365, -10.5427, 2.06 ) }
    dend_41 { pt3dadd( -34.4319, -16.5624, -10.7597, 2.06 ) }
    dend_41 { pt3dadd( -34.5329, -16.6101, -10.7872, 2.06 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 88/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -20.5228, 4.22313, -0.451354, 1.47 ) }
    dend_31 { pt3dadd( -21.1583, 5.59595, -0.339889, 1.47 ) }
    dend_31 { pt3dadd( -21.586, 6.51465, -0.200291, 0.81 ) }
    dend_31 { pt3dadd( -21.995, 7.37973, -0.00420729, 0.81 ) }
    dend_31 { pt3dadd( -22.5444, 8.50289, 0.355521, 0.81 ) }
    dend_31 { pt3dadd( -23.1995, 9.8329, 0.832673, 0.81 ) }
    dend_31 { pt3dadd( -23.7186, 10.9211, 1.2291, 0.81 ) }
    dend_31 { pt3dadd( -24.381, 12.2684, 1.77746, 0.81 ) }
    dend_31 { pt3dadd( -24.9088, 13.3628, 2.26981, 0.81 ) }
    dend_31 { pt3dadd( -25.4923, 14.6193, 2.89053, 1.18 ) }
    dend_31 { pt3dadd( -25.8289, 15.3397, 3.28578, 1.55 ) }
    dend_31 { pt3dadd( -26.2878, 16.2675, 3.9182, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 0/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -20.5228, 4.22313, -0.451354, 2.06 ) }
    dend_22 { pt3dadd( -22.7626, 4.67665, -0.889752, 2.06 ) }
    dend_22 { pt3dadd( -24.5495, 5.03845, -1.2395, 1.84 ) }
    dend_22 { pt3dadd( -26.2951, 5.3919, -1.58116, 1.84 ) }
    dend_22 { pt3dadd( -27.8853, 5.71389, -1.89241, 1.84 ) }
    dend_22 { pt3dadd( -28.9914, 5.93785, -2.1089, 1.84 ) }
    dend_22 { pt3dadd( -30.6561, 6.27492, -2.43473, 1.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_0 (entry count 7/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 27.0652, -0.42204, 5.65782, 2.58 ) }
    dend_9 { pt3dadd( 28.7652, 0.32346, 1.09782, 2.58 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 27.0652, -0.42204, 5.65782, 3.02 ) }
    dend_1 { pt3dadd( 30.7958, -4.45475, 7.12455, 3.02 ) }
    dend_1 { pt3dadd( 31.8362, -5.42309, 7.99245, 1.69 ) }
    dend_1 { pt3dadd( 33.009, -6.35835, 8.90029, 1.4 ) }
    dend_1 { pt3dadd( 33.0564, -6.3962, 8.93702, 1.4 ) }
    dend_1 { pt3dadd( 34.053, -7.19091, 9.70843, 1.4 ) }
    dend_1 { pt3dadd( 35.9434, -8.69851, 11.1718, 1.18 ) }
    dend_1 { pt3dadd( 37.3284, -9.81345, 12.5984, 1.03 ) }
    dend_1 { pt3dadd( 38.0673, -10.3009, 13.3247, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 44.5225, 2.43664, 1.05253, 0.15 ) }
    axon_1 { pt3dadd( 59.4897, 3.42689, 1.05253, 0.15 ) }
    axon_1 { pt3dadd( 74.457, 4.41715, 1.05253, 0.15 ) }
    // Section: dend_58, id: dend_58, parent: dend_50 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -28.1775, -34.7309, -6.44876, 0.74 ) }
    dend_58 { pt3dadd( -28.7059, -35.6604, -4.67777, 0.74 ) }
    dend_58 { pt3dadd( -28.821, -35.868, -4.31376, 0.74 ) }
    dend_58 { pt3dadd( -29.1343, -36.5221, -3.27666, 0.22 ) }
    dend_58 { pt3dadd( -29.2259, -36.7558, -2.92698, 0.66 ) }
    dend_58 { pt3dadd( -29.4305, -37.354, -2.05889, 0.66 ) }
    dend_58 { pt3dadd( -29.619, -38.0752, -1.08545, 0.52 ) }
    dend_58 { pt3dadd( -29.6663, -38.4795, -0.631451, 0.88 ) }
    dend_58 { pt3dadd( -29.6503, -38.8265, -0.221259, 0.88 ) }
    dend_58 { pt3dadd( -29.5397, -39.4687, 0.469611, 0.59 ) }
    dend_58 { pt3dadd( -29.5286, -39.52, 0.518517, 0.59 ) }
    dend_58 { pt3dadd( -29.3967, -40.1388, 1.03261, 0.59 ) }
    dend_58 { pt3dadd( -29.1996, -41.3307, 1.88831, 0.37 ) }
    dend_58 { pt3dadd( -28.9485, -43.4123, 3.30437, 0.66 ) }
    dend_58 { pt3dadd( -28.8803, -44.1849, 3.78443, 0.96 ) }
    dend_58 { pt3dadd( -28.794, -45.1355, 4.28755, 0.88 ) }
    dend_58 { pt3dadd( -28.7002, -46.0304, 4.68584, 0.88 ) }
    dend_58 { pt3dadd( -28.5774, -47.1287, 5.07005, 1.18 ) }
    dend_58 { pt3dadd( -28.5654, -47.1997, 5.08269, 1.18 ) }
    dend_58 { pt3dadd( -28.3752, -47.9342, 5.17414, 1.77 ) }
    dend_58 { pt3dadd( -28.0365, -49.0116, 5.36409, 1.69 ) }
    dend_58 { pt3dadd( -27.6785, -49.9897, 5.57218, 1.69 ) }
    dend_58 { pt3dadd( -27.5896, -50.2071, 5.62257, 1.69 ) }
    dend_58 { pt3dadd( -26.9395, -51.7684, 6.00048, 1.69 ) }
    dend_58 { pt3dadd( -26.2942, -53.3633, 6.39185, 0.52 ) }
    dend_58 { pt3dadd( -25.9745, -54.2082, 6.60906, 0.52 ) }
    dend_58 { pt3dadd( -25.9236, -54.3512, 6.64592, 0.52 ) }
    dend_58 { pt3dadd( -25.4961, -55.5338, 6.93742, 0.52 ) }
    dend_58 { pt3dadd( -25.4367, -55.6922, 6.97057, 0.52 ) }
    dend_58 { pt3dadd( -25.1267, -56.466, 7.21573, 1.18 ) }
    dend_58 { pt3dadd( -25.1011, -56.5303, 7.2383, 1.18 ) }
    dend_58 { pt3dadd( -24.6703, -57.5695, 7.70876, 1.47 ) }
    dend_58 { pt3dadd( -24.5895, -57.8023, 7.83205, 1.47 ) }
    dend_58 { pt3dadd( -24.3784, -58.4494, 8.22158, 1.47 ) }
    dend_58 { pt3dadd( -23.7339, -60.4888, 9.5347, 0.52 ) }
    dend_58 { pt3dadd( -23.5299, -61.2016, 10.0392, 0.52 ) }
    dend_58 { pt3dadd( -23.5124, -61.2656, 10.0878, 0.52 ) }
    dend_58 { pt3dadd( -23.2323, -62.4632, 11.1416, 0.52 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 59/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -28.1775, -34.7309, -6.44876, 0.15 ) }
    dend_51 { pt3dadd( -26.7935, -34.9757, -6.01689, 0.15 ) }
    dend_51 { pt3dadd( -26.7275, -34.9874, -5.99631, 0.15 ) }
    dend_51 { pt3dadd( -26.0927, -35.0998, -5.79821, 0.15 ) }
    dend_51 { pt3dadd( -24.7507, -35.3372, -5.37945, 0.15 ) }
    dend_51 { pt3dadd( -24.1896, -35.4366, -5.20434, 0.15 ) }
    dend_51 { pt3dadd( -24.1236, -35.4482, -5.18375, 0.15 ) }
    dend_51 { pt3dadd( -14.3163, -35.6992, -3.24466, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_41 (entry count 67/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -34.5329, -16.6101, -10.7872, 1.18 ) }
    dend_49 { pt3dadd( -35.2182, -16.7141, -11.8783, 1.18 ) }
    dend_49 { pt3dadd( -36.6063, -16.8517, -14.0022, 0.59 ) }
    dend_49 { pt3dadd( -36.9999, -16.8604, -14.615, 0.59 ) }
    dend_49 { pt3dadd( -38.1001, -16.8085, -16.3123, 0.59 ) }
    dend_49 { pt3dadd( -38.5873, -16.7407, -17.0185, 0.81 ) }
    dend_49 { pt3dadd( -39.2107, -16.6479, -18.0539, 0.81 ) }
    dend_49 { pt3dadd( -39.3306, -16.6345, -18.2729, 0.81 ) }
    dend_49 { pt3dadd( -40.0005, -16.6124, -19.8294, 0.74 ) }
    dend_49 { pt3dadd( -40.1387, -16.6205, -20.2279, 0.74 ) }
    dend_49 { pt3dadd( -40.4384, -16.7327, -21.2708, 0.74 ) }
    dend_49 { pt3dadd( -41.3201, -17.4914, -24.7995, 0.59 ) }
    dend_49 { pt3dadd( -41.5116, -17.7398, -25.6364, 0.59 ) }
    dend_49 { pt3dadd( -41.8504, -18.2, -26.9674, 0.59 ) }
    dend_49 { pt3dadd( -41.8706, -18.2282, -27.0401, 0.59 ) }
    dend_49 { pt3dadd( -42.1005, -18.5553, -27.7978, 0.44 ) }
    dend_49 { pt3dadd( -42.3408, -18.8507, -28.5228, 0.44 ) }
    dend_49 { pt3dadd( -43.0095, -19.3657, -30.1063, 1.18 ) }
    dend_49 { pt3dadd( -43.2387, -19.5051, -30.6395, 1.18 ) }
    dend_49 { pt3dadd( -44.2544, -20.1085, -32.9839, 0.52 ) }
    dend_49 { pt3dadd( -44.5557, -20.3232, -33.7118, 0.52 ) }
    dend_49 { pt3dadd( -45.3086, -21.0155, -35.6617, 0.52 ) }
    dend_49 { pt3dadd( -45.7733, -21.6179, -36.8822, 0.52 ) }
    dend_49 { pt3dadd( -45.7972, -21.6515, -36.9398, 0.52 ) }
    dend_49 { pt3dadd( -46.1272, -22.0137, -37.606, 0.96 ) }
    dend_49 { pt3dadd( -46.5436, -22.3849, -38.2995, 0.66 ) }
    dend_49 { pt3dadd( -47.0419, -22.7933, -39.1726, 0.37 ) }
    dend_49 { pt3dadd( -47.8027, -23.3643, -40.5615, 1.18 ) }
    dend_49 { pt3dadd( -48.7755, -24.069, -42.4998, 0.88 ) }
    dend_49 { pt3dadd( -49.8406, -24.889, -45.0649, 0.29 ) }
    dend_49 { pt3dadd( -49.8972, -24.9341, -45.2144, 0.96 ) }
    dend_49 { pt3dadd( -50.9085, -25.7923, -48.1486, 1.33 ) }
    dend_49 { pt3dadd( -52.0675, -26.9548, -51.974, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( -52.622, -27.6755, -54.1939, 1.33 ) }
    dend_49 { pt3dadd( -53.5696, -29.3215, -58.7353, 0.37 ) }
    dend_49 { pt3dadd( -53.6622, -29.5402, -59.2997, 0.74 ) }
    dend_49 { pt3dadd( -53.8814, -30.1164, -60.8619, 0.74 ) }
    dend_49 { pt3dadd( -54.1939, -30.9795, -63.2252, 1.47 ) }
    dend_49 { pt3dadd( -54.8065, -32.9548, -68.5567, 0.44 ) }
    dend_49 { pt3dadd( -54.8803, -33.1842, -69.2301, 1.33 ) }
    dend_49 { pt3dadd( -54.9601, -33.4077, -69.9364, 1.33 ) }
    dend_49 { pt3dadd( -55.6947, -35.07, -75.3313, 1.11 ) }
    dend_49 { pt3dadd( -55.8803, -35.4132, -76.4509, 0.96 ) }
    dend_49 { pt3dadd( -56.3311, -36.0753, -78.7207, 1.25 ) }
    dend_49 { pt3dadd( -57.4485, -37.409, -83.3245, 0.59 ) }
    dend_49 { pt3dadd( -57.4702, -37.4297, -83.3989, 0.59 ) }
    dend_49 { pt3dadd( -58.1345, -37.9885, -85.2699, 0.59 ) }
    dend_49 { pt3dadd( -58.8224, -38.5364, -86.9251, 1.33 ) }
    dend_49 { pt3dadd( -59.2712, -38.9027, -88.1521, 0.29 ) }
    dend_49 { pt3dadd( -59.5281, -39.1124, -88.8971, 0.29 ) }
    dend_49 { pt3dadd( -60.2523, -39.7425, -91.0424, 0.66 ) }
    dend_49 { pt3dadd( -60.5388, -40.0294, -91.9443, 0.66 ) }
    dend_49 { pt3dadd( -61.7943, -41.4956, -96.3484, 0.81 ) }
    dend_49 { pt3dadd( -63.0765, -43.1982, -100.916, 1.18 ) }
    dend_49 { pt3dadd( -63.6396, -44.0592, -103.005, 0.52 ) }
    dend_49 { pt3dadd( -63.8112, -44.3475, -103.663, 0.44 ) }
    dend_49 { pt3dadd( -64.2264, -45.0667, -105.278, 0.44 ) }
    dend_49 { pt3dadd( -64.7274, -45.9106, -107.414, 1.11 ) }
    dend_49 { pt3dadd( -64.8801, -46.1539, -108.055, 1.11 ) }
    dend_49 { pt3dadd( -65.3936, -46.9095, -110.271, 0.37 ) }
    dend_49 { pt3dadd( -65.5114, -47.0807, -110.826, 0.37 ) }
    dend_49 { pt3dadd( -66.1664, -48.0326, -113.982, 0.37 ) }
    dend_49 { pt3dadd( -67.1848, -49.4982, -119.061, 0.37 ) }
    dend_49 { pt3dadd( -67.2039, -49.5233, -119.148, 0.37 ) }
    dend_49 { pt3dadd( -67.6384, -50.0612, -121.001, 0.66 ) }
    dend_49 { pt3dadd( -68.6553, -51.2957, -124.992, 0.37 ) }
    dend_49 { pt3dadd( -68.9955, -51.7139, -126.232, 0.96 ) }
    dend_49 { pt3dadd( -69.019, -51.743, -126.303, 0.96 ) }
    dend_49 { pt3dadd( -71.101, -54.2038, -131.525, 0.29 ) }
    dend_49 { pt3dadd( -71.882, -55.1115, -133.356, 0.96 ) }
    dend_49 { pt3dadd( -72.071, -55.3367, -133.777, 0.96 ) }
    dend_49 { pt3dadd( -72.2266, -55.5513, -134.132, 0.29 ) }
    dend_49 { pt3dadd( -72.7437, -56.4115, -135.499, 0.29 ) }
    dend_49 { pt3dadd( -72.8517, -56.6357, -135.767, 0.74 ) }
    dend_49 { pt3dadd( -72.9771, -57.0039, -136.045, 0.74 ) }
    dend_49 { pt3dadd( -73.5495, -58.6798, -137.37, 0.37 ) }
    dend_49 { pt3dadd( -73.9197, -59.8285, -138.344, 1.03 ) }
    dend_49 { pt3dadd( -74.244, -60.8988, -139.403, 0.15 ) }
    dend_49 { pt3dadd( -74.6792, -62.3899, -141.125, 0.15 ) }
    dend_49 { pt3dadd( -74.6933, -62.4435, -141.185, 0.15 ) }
    dend_49 { pt3dadd( -75.0463, -63.8563, -142.708, 1.4 ) }
    dend_49 { pt3dadd( -75.207, -64.5128, -143.366, 1.77 ) }
    dend_49 { pt3dadd( -75.5309, -66.396, -145.081, 0.15 ) }
    dend_49 { pt3dadd( -75.5972, -67.2968, -146.196, 0.22 ) }
    dend_49 { pt3dadd( -75.5786, -68.3215, -147.746, 0.22 ) }
    dend_49 { pt3dadd( -75.5764, -68.4312, -147.92, 1.03 ) }
    dend_49 { pt3dadd( -75.5751, -68.4724, -147.99, 1.03 ) }
    dend_49 { pt3dadd( -75.6131, -69.1176, -149.19, 1.03 ) }
    dend_49 { pt3dadd( -75.8053, -71.8761, -154.68, 0.22 ) }
    dend_49 { pt3dadd( -75.8339, -72.2007, -155.417, 0.22 ) }
    dend_49 { pt3dadd( -75.862, -72.4003, -155.972, 0.22 ) }
    dend_49 { pt3dadd( -75.8684, -72.435, -156.072, 0.22 ) }
    dend_49 { pt3dadd( -76.1086, -73.2466, -158.573, 0.22 ) }
    dend_49 { pt3dadd( -77.9863, -76.3636, -167.936, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -34.5329, -16.6101, -10.7872, 1.92 ) }
    dend_42 { pt3dadd( -35.7753, -17.4971, -11.0484, 1.92 ) }
    dend_42 { pt3dadd( -36.8561, -18.2424, -11.2627, 1.69 ) }
    dend_42 { pt3dadd( -37.6632, -18.7892, -11.424, 1.4 ) }
    dend_42 { pt3dadd( -38.734, -19.5079, -11.6427, 1.4 ) }
    dend_42 { pt3dadd( -38.7933, -19.5464, -11.6483, 1.4 ) }
    dend_42 { pt3dadd( -39.7046, -20.0831, -11.6525, 1.4 ) }
    dend_42 { pt3dadd( -40.1963, -20.3248, -11.5728, 1.11 ) }
    dend_42 { pt3dadd( -41.0654, -20.6291, -11.3974, 1.11 ) }
    dend_42 { pt3dadd( -41.1227, -20.6423, -11.3847, 1.11 ) }
    dend_42 { pt3dadd( -43.1741, -20.979, -10.9344, 1.11 ) }
    dend_42 { pt3dadd( -44.188, -21.138, -10.7442, 1.11 ) }
    dend_42 { pt3dadd( -44.2565, -21.147, -10.7328, 1.11 ) }
    dend_42 { pt3dadd( -45.8818, -21.4272, -10.5299, 1.33 ) }
    dend_42 { pt3dadd( -46.7805, -21.6143, -10.4796, 0.96 ) }
    dend_42 { pt3dadd( -47.2329, -21.7684, -10.5058, 0.96 ) }
    dend_42 { pt3dadd( -47.7551, -22.0226, -10.6232, 0.96 ) }
    dend_42 { pt3dadd( -47.8125, -22.062, -10.6373, 0.96 ) }
    dend_42 { pt3dadd( -48.3783, -22.5264, -10.7711, 0.96 ) }
    dend_42 { pt3dadd( -48.4354, -22.5836, -10.7836, 0.96 ) }
    dend_42 { pt3dadd( -49.2768, -23.4254, -11.0337, 0.96 ) }
    dend_42 { pt3dadd( -49.321, -23.4656, -11.0469, 0.96 ) }
    dend_42 { pt3dadd( -50.2997, -24.2924, -11.3317, 1.18 ) }
    dend_42 { pt3dadd( -51.0048, -24.8276, -11.5141, 1.18 ) }
    dend_42 { pt3dadd( -51.0701, -24.8731, -11.5298, 1.18 ) }
    dend_42 { pt3dadd( -51.8159, -25.3776, -11.6974, 1.18 ) }
    dend_42 { pt3dadd( -52.5411, -25.8392, -11.8461, 1.18 ) }
    dend_42 { pt3dadd( -52.6252, -25.8923, -11.8594, 1.18 ) }
    dend_42 { pt3dadd( -54.1232, -26.8408, -11.8611, 1.18 ) }
    dend_42 { pt3dadd( -54.1831, -26.8783, -11.8555, 1.18 ) }
    dend_42 { pt3dadd( -54.8487, -27.3208, -11.7449, 1.18 ) }
    dend_42 { pt3dadd( -55.1506, -27.5317, -11.6713, 1.18 ) }
    dend_42 { pt3dadd( -56.1714, -28.2564, -11.3966, 1.18 ) }
    dend_42 { pt3dadd( -57.6278, -29.275, -11.0058, 1.18 ) }
    dend_42 { pt3dadd( -57.6928, -29.3201, -10.9876, 1.18 ) }
    dend_42 { pt3dadd( -58.6799, -29.9987, -10.7464, 1.18 ) }
    dend_42 { pt3dadd( -58.7376, -30.038, -10.7337, 1.18 ) }
    dend_42 { pt3dadd( -59.7251, -30.7063, -10.5808, 0.96 ) }
    dend_42 { pt3dadd( -60.5937, -31.2739, -10.5139, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -60.7218, -31.3559, -10.5139, 0.96 ) }
    dend_42 { pt3dadd( -61.9714, -32.1418, -10.5139, 0.96 ) }
    dend_42 { pt3dadd( -62.0573, -32.1936, -10.5139, 0.96 ) }
    dend_42 { pt3dadd( -63.4767, -33.0774, -10.5139, 0.96 ) }
    dend_42 { pt3dadd( -64.4238, -33.7085, -10.5139, 1.47 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 5/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -26.2878, 16.2675, 3.9182, 1.11 ) }
    dend_35 { pt3dadd( -26.0138, 17.0718, 4.3151, 1.11 ) }
    dend_35 { pt3dadd( -25.7614, 17.9027, 4.74119, 0.74 ) }
    dend_35 { pt3dadd( -25.4554, 19.0288, 5.43585, 0.74 ) }
    dend_35 { pt3dadd( -25.212, 19.913, 6.00038, 0.74 ) }
    dend_35 { pt3dadd( -24.9163, 20.8598, 6.61487, 1.11 ) }
    dend_35 { pt3dadd( -24.3875, 22.3294, 7.53352, 0.74 ) }
    dend_35 { pt3dadd( -24.1524, 22.9846, 7.94872, 0.74 ) }
    dend_35 { pt3dadd( -23.59, 24.3274, 8.76176, 0.44 ) }
    dend_35 { pt3dadd( -23.2145, 24.976, 9.09383, 0.44 ) }
    dend_35 { pt3dadd( -22.7937, 25.4755, 9.27317, 0.81 ) }
    dend_35 { pt3dadd( -22.144, 26.0983, 9.36811, 1.03 ) }
    dend_35 { pt3dadd( -21.8717, 26.3544, 9.41716, 1.03 ) }
    dend_35 { pt3dadd( -21.2043, 27.0518, 9.74714, 0.81 ) }
    dend_35 { pt3dadd( -20.8065, 27.5623, 10.1688, 0.59 ) }
    dend_35 { pt3dadd( -20.4401, 28.2148, 10.8998, 0.44 ) }
    dend_35 { pt3dadd( -20.0978, 28.9967, 11.8459, 0.44 ) }
    dend_35 { pt3dadd( -19.493, 30.7324, 13.9921, 0.88 ) }
    dend_35 { pt3dadd( -19.2425, 31.5854, 14.9976, 0.88 ) }
    dend_35 { pt3dadd( -19.0065, 32.5178, 16.0702, 0.88 ) }
    dend_35 { pt3dadd( -18.7479, 33.441, 17.0429, 0.37 ) }
    dend_35 { pt3dadd( -18.629, 33.7845, 17.351, 0.96 ) }
    dend_35 { pt3dadd( -18.3815, 34.3785, 17.7466, 1.25 ) }
    dend_35 { pt3dadd( -17.8923, 35.3798, 18.2205, 1.62 ) }
    dend_35 { pt3dadd( -17.6852, 35.7811, 18.3995, 1.62 ) }
    dend_35 { pt3dadd( -16.8217, 37.4174, 19.1421, 1.18 ) }
    dend_35 { pt3dadd( -16.1381, 38.6399, 19.7854, 0.74 ) }
    dend_35 { pt3dadd( -15.8339, 39.173, 20.1009, 1.03 ) }
    dend_35 { pt3dadd( -15.0342, 40.5198, 20.9691, 1.03 ) }
    dend_35 { pt3dadd( -14.5753, 41.2759, 21.5119, 1.03 ) }
    dend_35 { pt3dadd( -14.1221, 42.0285, 22.0665, 1.11 ) }
    dend_35 { pt3dadd( -13.5832, 42.9339, 22.7271, 1.11 ) }
    dend_35 { pt3dadd( -13.1481, 43.6499, 23.2522, 1.47 ) }
    dend_35 { pt3dadd( -12.7474, 44.2846, 23.6686, 1.47 ) }
    dend_35 { pt3dadd( -12.0068, 45.4799, 24.3907, 1.77 ) }
    dend_35 { pt3dadd( -11.7791, 45.8432, 24.5947, 1.69 ) }
    dend_35 { pt3dadd( -11.3778, 46.4862, 24.9198, 1.33 ) }
    dend_35 { pt3dadd( -10.3108, 48.2056, 25.7739, 1.03 ) }
    dend_35 { pt3dadd( -9.43284, 49.5918, 26.4526, 1.03 ) }
    dend_35 { pt3dadd( -8.7992, 50.5981, 26.9511, 1.33 ) }
    dend_35 { pt3dadd( -8.22696, 51.5219, 27.3921, 1.33 ) }
    dend_35 { pt3dadd( -7.49579, 52.7088, 27.9572, 1.33 ) }
    dend_35 { pt3dadd( -6.5527, 54.1603, 28.6459, 1.03 ) }
    dend_35 { pt3dadd( -5.83972, 55.1316, 29.0869, 1.03 ) }
    dend_35 { pt3dadd( -4.97952, 56.1664, 29.5961, 0.74 ) }
    dend_35 { pt3dadd( -4.53559, 56.6339, 29.8204, 0.44 ) }
    dend_35 { pt3dadd( -4.08231, 57.096, 30.0178, 0.44 ) }
    dend_35 { pt3dadd( -3.34787, 57.7596, 30.1886, 0.44 ) }
    dend_35 { pt3dadd( -2.54521, 58.3581, 30.1224, 0.44 ) }
    dend_35 { pt3dadd( -2.0532, 58.6917, 30.0225, 0.44 ) }
    dend_35 { pt3dadd( -1.62375, 58.9585, 29.896, 1.03 ) }
    dend_35 { pt3dadd( -0.330776, 59.7462, 29.4858, 1.03 ) }
    dend_35 { pt3dadd( 0.566214, 60.3648, 29.1651, 1.33 ) }
    dend_35 { pt3dadd( 1.56047, 61.2663, 28.7491, 1.33 ) }
    dend_35 { pt3dadd( 2.08314, 61.8292, 28.5085, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -26.2878, 16.2675, 3.9182, 0.81 ) }
    dend_32 { pt3dadd( -26.7972, 17.0475, 3.91354, 0.81 ) }
    dend_32 { pt3dadd( -27.269, 17.7467, 3.91001, 0.66 ) }
    dend_32 { pt3dadd( -27.8744, 18.7162, 3.84496, 0.66 ) }
    dend_32 { pt3dadd( -28.2438, 19.3718, 3.78427, 0.66 ) }
    dend_32 { pt3dadd( -28.6371, 20.1344, 3.7053, 0.66 ) }
    dend_32 { pt3dadd( -28.9573, 20.8252, 3.63134, 0.44 ) }
    dend_32 { pt3dadd( -29.2821, 21.7289, 3.5223, 0.44 ) }
    dend_32 { pt3dadd( -29.6362, 22.9675, 3.36432, 0.52 ) }
    dend_32 { pt3dadd( -29.7959, 23.783, 3.25814, 0.52 ) }
    dend_32 { pt3dadd( -29.837, 24.1181, 3.2026, 0.81 ) }
    dend_32 { pt3dadd( -29.9084, 24.8097, 3.07524, 0.81 ) }
    dend_32 { pt3dadd( -29.9655, 25.4133, 2.94742, 1.18 ) }
    dend_32 { pt3dadd( -30.0438, 25.9524, 2.82955, 0.59 ) }
    dend_32 { pt3dadd( -30.2064, 26.6827, 2.67863, 0.59 ) }
    dend_32 { pt3dadd( -30.4239, 27.4672, 2.57081, 0.59 ) }
    dend_32 { pt3dadd( -30.9241, 29.0556, 2.34809, 0.59 ) }
    dend_32 { pt3dadd( -31.2125, 29.8594, 2.23424, 0.88 ) }
    dend_32 { pt3dadd( -31.6755, 31.0287, 2.07617, 0.88 ) }
    dend_32 { pt3dadd( -31.913, 31.6131, 2.00936, 1.25 ) }
    dend_32 { pt3dadd( -32.5621, 33.073, 1.9193, 1.03 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -30.6561, 6.27492, -2.43473, 0.88 ) }
    dend_26 { pt3dadd( -34.2125, 7.66376, 2.16203, 0.88 ) }
    dend_26 { pt3dadd( -35.1604, 7.97776, 3.28265, 1.11 ) }
    dend_26 { pt3dadd( -36.7216, 8.3828, 4.94182, 1.11 ) }
    dend_26 { pt3dadd( -37.2845, 8.48304, 5.46212, 1.47 ) }
    dend_26 { pt3dadd( -37.9458, 8.54321, 6.04531, 1.47 ) }
    dend_26 { pt3dadd( -38.9676, 8.54844, 6.94839, 0.88 ) }
    dend_26 { pt3dadd( -40.5799, 8.28173, 8.00612, 0.88 ) }
    dend_26 { pt3dadd( -41.458, 7.97604, 8.63746, 0.88 ) }
    dend_26 { pt3dadd( -42.6458, 7.4089, 9.48503, 1.25 ) }
    dend_26 { pt3dadd( -43.8066, 6.79668, 10.3719, 1.25 ) }
    dend_26 { pt3dadd( -44.9456, 6.19234, 11.2304, 1.11 ) }
    dend_26 { pt3dadd( -45.7171, 5.81344, 11.7429, 1.11 ) }
    dend_26 { pt3dadd( -46.8806, 5.24685, 12.4758, 0.96 ) }
    dend_26 { pt3dadd( -47.6287, 4.90947, 12.9654, 0.96 ) }
    dend_26 { pt3dadd( -48.7126, 4.49694, 13.6522, 0.96 ) }
    dend_26 { pt3dadd( -50.0734, 4.14908, 14.3271, 0.96 ) }
    dend_26 { pt3dadd( -51.6344, 3.91123, 14.9521, 1.84 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -30.6561, 6.27492, -2.43473, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_23 { pt3dadd( -31.4443, 6.50455, -2.87638, 0.88 ) }
    dend_23 { pt3dadd( -33.2802, 6.9971, -3.8568, 0.88 ) }
    dend_23 { pt3dadd( -34.9106, 7.42472, -4.70598, 0.88 ) }
    dend_23 { pt3dadd( -36.5449, 7.84797, -5.49462, 0.88 ) }
    dend_23 { pt3dadd( -37.8399, 8.16732, -6.06687, 0.88 ) }
    dend_23 { pt3dadd( -38.543, 8.33136, -6.34006, 0.88 ) }
    dend_23 { pt3dadd( -39.9961, 8.62186, -6.7925, 0.88 ) }
    dend_23 { pt3dadd( -40.8399, 8.7647, -6.96803, 0.88 ) }
    dend_23 { pt3dadd( -41.9219, 8.94955, -7.06828, 1.25 ) }
    dend_23 { pt3dadd( -43.0872, 9.15407, -7.07476, 1.25 ) }
    dend_23 { pt3dadd( -44.2801, 9.36562, -7.03795, 1.25 ) }
    dend_23 { pt3dadd( -45.7427, 9.63141, -6.96052, 1.25 ) }
    dend_23 { pt3dadd( -46.1288, 9.70293, -6.95008, 0.88 ) }
    dend_23 { pt3dadd( -47.2709, 9.92011, -6.98253, 0.74 ) }
    dend_23 { pt3dadd( -48.4148, 10.1445, -7.1044, 0.74 ) }
    dend_23 { pt3dadd( -49.337, 10.3528, -7.26685, 1.03 ) }
    dend_23 { pt3dadd( -50.2784, 10.5892, -7.50164, 1.25 ) }
    dend_23 { pt3dadd( -51.4965, 10.9667, -7.85554, 1.25 ) }
    dend_23 { pt3dadd( -52.1949, 11.2282, -8.09825, 0.96 ) }
    dend_23 { pt3dadd( -52.7024, 11.4702, -8.31241, 0.81 ) }
    dend_23 { pt3dadd( -53.4044, 11.9114, -8.66413, 0.81 ) }
    dend_23 { pt3dadd( -53.7608, 12.2062, -8.85412, 0.66 ) }
    dend_23 { pt3dadd( -54.4743, 12.9295, -9.2894, 0.66 ) }
    dend_23 { pt3dadd( -55.0547, 13.6045, -9.66724, 0.96 ) }
    dend_23 { pt3dadd( -55.5403, 14.2263, -10.0639, 1.11 ) }
    dend_23 { pt3dadd( -56.1284, 14.9714, -10.8496, 1.4 ) }
    dend_23 { pt3dadd( -56.4832, 15.3595, -11.4063, 1.4 ) }
    dend_23 { pt3dadd( -57.0989, 15.8924, -12.3676, 1.18 ) }
    dend_23 { pt3dadd( -57.4561, 16.1224, -12.9046, 0.96 ) }
    dend_23 { pt3dadd( -58.2411, 16.4471, -14.0018, 0.88 ) }
    dend_23 { pt3dadd( -60.6706, 16.8972, -17.137, 0.81 ) }
    dend_23 { pt3dadd( -61.288, 16.898, -17.8279, 0.81 ) }
    dend_23 { pt3dadd( -62.0982, 16.7937, -18.5949, 1.33 ) }
    dend_23 { pt3dadd( -62.5547, 16.6976, -18.9519, 1.33 ) }
    dend_23 { pt3dadd( -63.8271, 16.3902, -19.7597, 0.96 ) }
    dend_23 { pt3dadd( -65.0309, 16.1113, -20.3547, 0.96 ) }
    dend_23 { pt3dadd( -66.2406, 15.895, -20.7984, 0.81 ) }
    dend_23 { pt3dadd( -67.5473, 15.7611, -21.2844, 1.25 ) }
    dend_23 { pt3dadd( -68.6591, 15.7339, -21.6916, 1.25 ) }
    dend_23 { pt3dadd( -69.5282, 15.8003, -22.0161, 1.25 ) }
    dend_23 { pt3dadd( -70.7608, 16.0534, -22.5438, 1.03 ) }
    dend_23 { pt3dadd( -71.3338, 16.2101, -22.8953, 0.88 ) }
    dend_23 { pt3dadd( -71.9809, 16.3702, -23.4178, 0.81 ) }
    dend_23 { pt3dadd( -72.2581, 16.4056, -23.6773, 0.81 ) }
    dend_23 { pt3dadd( -73.0768, 16.3775, -24.5321, 0.74 ) }
    dend_23 { pt3dadd( -74.3764, 16.1767, -25.9605, 0.74 ) }
    dend_23 { pt3dadd( -75.6456, 15.9118, -27.3184, 0.59 ) }
    dend_23 { pt3dadd( -76.3102, 15.7809, -28.0034, 0.59 ) }
    dend_23 { pt3dadd( -77.0381, 15.669, -28.7363, 0.59 ) }
    dend_23 { pt3dadd( -78.0025, 15.6122, -29.6318, 0.52 ) }
    dend_23 { pt3dadd( -78.4637, 15.6418, -29.9933, 0.44 ) }
    dend_23 { pt3dadd( -79.2168, 15.8218, -30.5176, 0.44 ) }
    dend_23 { pt3dadd( -79.974, 16.1103, -31.0024, 1.18 ) }
    dend_23 { pt3dadd( -80.916, 16.491, -31.6453, 1.18 ) }
    dend_23 { pt3dadd( -82.0199, 16.8852, -32.4002, 1.18 ) }
    dend_23 { pt3dadd( -82.5795, 17.0103, -32.7556, 1.18 ) }
    dend_23 { pt3dadd( -83.5869, 17.0461, -33.4363, 0.52 ) }
    dend_23 { pt3dadd( -84.2533, 16.9354, -33.8845, 0.52 ) }
    dend_23 { pt3dadd( -85.3479, 16.5847, -34.7003, 0.52 ) }
    dend_23 { pt3dadd( -86.0152, 16.306, -35.2067, 0.52 ) }
    dend_23 { pt3dadd( -86.6821, 15.9914, -35.8765, 0.52 ) }
    dend_23 { pt3dadd( -87.3808, 15.6874, -36.7246, 0.52 ) }
    dend_23 { pt3dadd( -87.9715, 15.526, -37.6237, 0.52 ) }
    dend_23 { pt3dadd( -88.8105, 15.4929, -39.0296, 0.37 ) }
    dend_23 { pt3dadd( -89.0611, 15.5486, -39.4496, 0.37 ) }
    dend_23 { pt3dadd( -90.4368, 16.0873, -41.6503, 0.74 ) }
    dend_23 { pt3dadd( -90.8893, 16.3219, -42.2947, 0.74 ) }
    dend_23 { pt3dadd( -92.1648, 17.0409, -43.786, 1.03 ) }
    dend_23 { pt3dadd( -92.9027, 17.4239, -44.4476, 1.4 ) }
    dend_23 { pt3dadd( -93.5688, 17.706, -44.8059, 1.4 ) }
    dend_23 { pt3dadd( -94.1594, 17.9149, -45.0375, 1.4 ) }
    dend_23 { pt3dadd( -95.2222, 18.2514, -45.298, 0.44 ) }
    dend_23 { pt3dadd( -95.9185, 18.4628, -45.4672, 0.44 ) }
    dend_23 { pt3dadd( -97.1599, 18.8252, -45.773, 0.44 ) }
    dend_23 { pt3dadd( -98.7682, 19.2712, -46.2753, 0.44 ) }
    dend_23 { pt3dadd( -100.081, 19.6511, -46.7203, 0.88 ) }
    dend_23 { pt3dadd( -100.622, 19.8334, -46.8971, 0.88 ) }
    dend_23 { pt3dadd( -101.523, 20.1808, -47.1713, 0.37 ) }
    dend_23 { pt3dadd( -102.433, 20.5662, -47.4255, 0.37 ) }
    dend_23 { pt3dadd( -102.887, 20.7633, -47.56, 0.15 ) }
    dend_23 { pt3dadd( -103.804, 21.1314, -47.8091, 0.15 ) }
    dend_23 { pt3dadd( -105.478, 21.7181, -48.2433, 0.15 ) }
    dend_23 { pt3dadd( -105.912, 21.844, -48.3623, 0.66 ) }
    dend_23 { pt3dadd( -106.899, 22.0717, -48.6189, 0.66 ) }
    dend_23 { pt3dadd( -108.385, 22.3578, -49.0637, 0.66 ) }
    dend_23 { pt3dadd( -109.08, 22.47, -49.3126, 0.96 ) }
    dend_23 { pt3dadd( -110.383, 22.6424, -49.8798, 0.37 ) }
    dend_23 { pt3dadd( -111.11, 22.7425, -50.2282, 0.37 ) }
    dend_23 { pt3dadd( -111.968, 22.9053, -50.6293, 0.37 ) }
    dend_23 { pt3dadd( -112.586, 23.0736, -50.9402, 0.37 ) }
    dend_23 { pt3dadd( -113.212, 23.2881, -51.2557, 0.37 ) }
    dend_23 { pt3dadd( -114.009, 23.599, -51.7239, 0.37 ) }
    dend_23 { pt3dadd( -114.698, 23.908, -52.1529, 0.88 ) }
    dend_23 { pt3dadd( -115.308, 24.1934, -52.5811, 1.11 ) }
    dend_23 { pt3dadd( -116.389, 24.6933, -53.3484, 1.11 ) }
    dend_23 { pt3dadd( -117.106, 24.9845, -53.8677, 0.66 ) }
    dend_23 { pt3dadd( -117.946, 25.2821, -54.492, 0.44 ) }
    dend_23 { pt3dadd( -118.492, 25.4584, -54.8912, 0.44 ) }
    dend_23 { pt3dadd( -119.705, 25.8083, -55.7722, 0.44 ) }
    dend_23 { pt3dadd( -120.499, 26.0043, -56.3399, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( -121.849, 26.2895, -57.2031, 0.22 ) }
    dend_23 { pt3dadd( -122.221, 26.3589, -57.429, 0.22 ) }
    dend_23 { pt3dadd( -123.169, 26.5326, -57.9383, 0.22 ) }
    dend_23 { pt3dadd( -124.448, 26.7584, -58.5486, 0.22 ) }
    dend_23 { pt3dadd( -125.784, 26.988, -59.1479, 0.59 ) }
    dend_23 { pt3dadd( -126.856, 27.1714, -59.6099, 0.59 ) }
    dend_23 { pt3dadd( -127.675, 27.3205, -59.9089, 0.59 ) }
    dend_23 { pt3dadd( -128.917, 27.5396, -60.338, 0.96 ) }
    dend_23 { pt3dadd( -129.976, 27.7027, -60.633, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_9 (entry count 9/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 28.7652, 0.32346, 1.09782, 1.25 ) }
    dend_14 { pt3dadd( 31.4605, 2.42227, 5.16278, 1.25 ) }
    dend_14 { pt3dadd( 32.0027, 2.83525, 5.62512, 1.25 ) }
    dend_14 { pt3dadd( 32.1083, 2.91666, 5.69821, 1.25 ) }
    dend_14 { pt3dadd( 33.1455, 3.74889, 6.31913, 0.96 ) }
    dend_14 { pt3dadd( 34.6035, 4.94661, 7.11865, 0.96 ) }
    dend_14 { pt3dadd( 35.5772, 5.74647, 7.65258, 1.33 ) }
    dend_14 { pt3dadd( 36.9844, 6.8354, 7.93878, 1.69 ) }
    dend_14 { pt3dadd( 37.0485, 6.88378, 7.95196, 1.69 ) }
    dend_14 { pt3dadd( 37.6283, 7.35489, 8.07288, 1.69 ) }
    dend_14 { pt3dadd( 37.7103, 7.43474, 8.09003, 1.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 20/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 28.7652, 0.32346, 1.09782, 1.18 ) }
    dend_10 { pt3dadd( 32.1799, 0.954742, 4.93286, 1.18 ) }
    dend_10 { pt3dadd( 34.0701, 1.39781, 6.42333, 1.03 ) }
    dend_10 { pt3dadd( 34.1555, 1.42539, 6.46597, 1.03 ) }
    dend_10 { pt3dadd( 36.2939, 2.18331, 7.24574, 1.33 ) }
    dend_10 { pt3dadd( 37.8646, 2.80068, 7.64545, 1.33 ) }
    dend_10 { pt3dadd( 39.1744, 3.3396, 7.89893, 1.33 ) }
    dend_10 { pt3dadd( 39.2481, 3.37191, 7.89383, 1.33 ) }
    dend_10 { pt3dadd( 40.8603, 4.13718, 7.71512, 1.33 ) }
    dend_10 { pt3dadd( 41.4591, 4.42557, 7.6754, 1.33 ) }
    dend_10 { pt3dadd( 43.0242, 5.18973, 7.66724, 1.33 ) }
    dend_10 { pt3dadd( 43.858, 5.61235, 7.63018, 1.62 ) }
    dend_10 { pt3dadd( 44.7855, 6.07791, 7.5674, 1.92 ) }
    dend_10 { pt3dadd( 46.1221, 6.73748, 7.46473, 1.11 ) }
    dend_10 { pt3dadd( 47.6188, 7.4598, 7.32039, 0.88 ) }
    dend_10 { pt3dadd( 47.7141, 7.50824, 7.31022, 0.88 ) }
    dend_10 { pt3dadd( 49.1858, 8.27691, 7.13058, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 38.0673, -10.3009, 13.3247, 1.03 ) }
    dend_2 { pt3dadd( 38.6218, -10.1559, 13.3247, 1.03 ) }
    dend_2 { pt3dadd( 38.7806, -10.1225, 13.3585, 1.03 ) }
    dend_2 { pt3dadd( 40.1287, -9.85608, 13.7615, 1.03 ) }
    dend_2 { pt3dadd( 40.2681, -9.82202, 13.8064, 1.03 ) }
    dend_2 { pt3dadd( 41.6208, -9.47894, 14.2069, 1.03 ) }
    dend_2 { pt3dadd( 41.7135, -9.45522, 14.2331, 1.03 ) }
    dend_2 { pt3dadd( 43.5359, -9.08586, 14.7459, 1.03 ) }
    dend_2 { pt3dadd( 43.613, -9.07868, 14.7663, 1.03 ) }
    dend_2 { pt3dadd( 44.9378, -9.07169, 15.1081, 1.03 ) }
    dend_2 { pt3dadd( 46.4275, -9.22927, 15.5364, 1.03 ) }
    dend_2 { pt3dadd( 46.5591, -9.25816, 15.5753, 1.03 ) }
    dend_2 { pt3dadd( 47.7203, -9.63605, 15.8968, 1.25 ) }
    dend_2 { pt3dadd( 48.9849, -10.1895, 16.1989, 1.25 ) }
    dend_2 { pt3dadd( 49.0501, -10.2335, 16.2187, 1.25 ) }
    dend_2 { pt3dadd( 50.2609, -11.4779, 16.6472, 1.25 ) }
    dend_2 { pt3dadd( 50.7555, -12.1357, 16.8435, 1.25 ) }
    dend_2 { pt3dadd( 51.154, -12.7413, 17.0472, 1.11 ) }
    dend_2 { pt3dadd( 51.1969, -12.8077, 17.0709, 1.11 ) }
    dend_2 { pt3dadd( 52.3977, -14.4962, 17.7816, 1.11 ) }
    dend_2 { pt3dadd( 53.0004, -15.2825, 18.1343, 1.4 ) }
    dend_2 { pt3dadd( 53.0374, -15.3248, 18.159, 1.4 ) }
    dend_2 { pt3dadd( 54.098, -16.3653, 18.9792, 1.4 ) }
    dend_2 { pt3dadd( 55.3734, -17.2632, 19.9387, 1.11 ) }
    dend_2 { pt3dadd( 56.5097, -17.8604, 20.7798, 1.03 ) }
    dend_2 { pt3dadd( 56.5551, -17.8746, 20.8166, 1.03 ) }
    dend_2 { pt3dadd( 57.9477, -18.1209, 21.9267, 1.33 ) }
    dend_2 { pt3dadd( 58.0638, -18.1316, 22.0212, 1.33 ) }
    dend_2 { pt3dadd( 59.3219, -18.1502, 23.0458, 1.33 ) }
    dend_2 { pt3dadd( 59.3736, -18.1473, 23.0928, 1.33 ) }
    dend_2 { pt3dadd( 60.8555, -18.0238, 24.4497, 2.06 ) }
    dend_2 { pt3dadd( 62.0579, -17.9202, 25.5531, 2.06 ) }
    dend_2 { pt3dadd( 64.0698, -17.7355, 27.3943, 1.62 ) }
    dend_2 { pt3dadd( 64.121, -17.7303, 27.4417, 1.62 ) }
    dend_2 { pt3dadd( 65.6376, -17.5635, 28.8966, 1.4 ) }
    dend_2 { pt3dadd( 65.6882, -17.5586, 28.9449, 1.4 ) }
    dend_2 { pt3dadd( 67.1431, -17.4411, 30.278, 1.33 ) }
    dend_2 { pt3dadd( 67.1917, -17.4415, 30.3284, 1.33 ) }
    dend_2 { pt3dadd( 67.9408, -17.5673, 31.1384, 1.03 ) }
    dend_2 { pt3dadd( 67.9866, -17.584, 31.1889, 1.03 ) }
    dend_2 { pt3dadd( 69.2774, -18.4044, 32.6321, 1.4 ) }
    dend_2 { pt3dadd( 69.5311, -18.6215, 32.9262, 1.4 ) }
    dend_2 { pt3dadd( 70.8112, -19.971, 34.4706, 1.03 ) }
    dend_2 { pt3dadd( 71.7917, -21.0958, 35.672, 1.03 ) }
    dend_2 { pt3dadd( 72.4474, -21.9, 36.462, 1.03 ) }
    dend_2 { pt3dadd( 73.3383, -23.0132, 37.4688, 1.03 ) }
    dend_2 { pt3dadd( 74.3752, -24.3515, 38.5232, 0.81 ) }
    dend_2 { pt3dadd( 75.115, -25.2914, 39.2206, 0.81 ) }
    dend_2 { pt3dadd( 75.1557, -25.3389, 39.2552, 0.81 ) }
    dend_2 { pt3dadd( 75.7431, -25.9225, 39.7625, 0.81 ) }
    dend_2 { pt3dadd( 75.8365, -25.9937, 39.8583, 0.81 ) }
    dend_2 { pt3dadd( 76.1752, -26.1806, 40.241, 0.81 ) }
    dend_2 { pt3dadd( 76.2198, -26.196, 40.293, 0.81 ) }
    dend_2 { pt3dadd( 77.535, -26.5299, 41.8908, 0.81 ) }
    dend_2 { pt3dadd( 77.6289, -26.5466, 42.0102, 0.81 ) }
    dend_2 { pt3dadd( 78.976, -26.7758, 43.6575, 0.81 ) }
    dend_2 { pt3dadd( 79.0367, -26.7869, 43.7363, 0.81 ) }
    dend_2 { pt3dadd( 79.5471, -26.8814, 44.413, 0.81 ) }
    dend_2 { pt3dadd( 79.6087, -26.8936, 44.4908, 0.81 ) }
    dend_2 { pt3dadd( 80.8416, -27.1418, 45.9396, 0.81 ) }
    dend_2 { pt3dadd( 81.6824, -27.3774, 46.9434, 0.81 ) }
    dend_2 { pt3dadd( 83.5811, -28.0517, 49.2394, 1.69 ) }
    dend_2 { pt3dadd( 83.6244, -28.0726, 49.2909, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 83.9788, -28.3522, 49.6883, 1.69 ) }
    dend_2 { pt3dadd( 84.0175, -28.3977, 49.7273, 1.69 ) }
    dend_2 { pt3dadd( 84.9509, -29.8536, 50.5453, 1.11 ) }
    dend_2 { pt3dadd( 84.9828, -29.9141, 50.5689, 1.11 ) }
    dend_2 { pt3dadd( 85.6624, -31.2937, 50.9453, 1.03 ) }
    dend_2 { pt3dadd( 86.8643, -33.6764, 51.4914, 1.03 ) }
    dend_2 { pt3dadd( 87.7431, -35.3605, 51.857, 1.03 ) }
    dend_2 { pt3dadd( 87.7769, -35.4235, 51.8697, 1.03 ) }
    dend_2 { pt3dadd( 88.6748, -36.9928, 52.1927, 1.03 ) }
    dend_2 { pt3dadd( 89.5804, -38.4955, 52.6317, 1.03 ) }
    dend_2 { pt3dadd( 90.5938, -40.0585, 53.2447, 1.03 ) }
    dend_2 { pt3dadd( 91.6326, -41.5844, 54.0963, 0.96 ) }
    dend_2 { pt3dadd( 91.6624, -41.6284, 54.1272, 0.96 ) }
    dend_2 { pt3dadd( 92.4396, -42.8507, 55.1712, 0.66 ) }
    dend_2 { pt3dadd( 93.1842, -44.0693, 56.5099, 0.66 ) }
    dend_2 { pt3dadd( 93.201, -44.1031, 56.5577, 0.66 ) }
    dend_2 { pt3dadd( 93.4983, -44.995, 58.2531, 0.66 ) }
    dend_2 { pt3dadd( 93.5036, -45.0543, 58.3894, 0.66 ) }
    dend_2 { pt3dadd( 93.4998, -45.1112, 58.5207, 0.66 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 19/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -23.2323, -62.4632, 11.1416, 0.29 ) }
    dend_60 { pt3dadd( -22.9875, -63.8209, 11.4926, 0.29 ) }
    dend_60 { pt3dadd( -22.9722, -63.8918, 11.5031, 0.29 ) }
    dend_60 { pt3dadd( -22.7593, -64.8593, 11.6179, 0.29 ) }
    dend_60 { pt3dadd( -22.7437, -64.9306, 11.624, 0.29 ) }
    dend_60 { pt3dadd( -22.6068, -65.5685, 11.7198, 1.25 ) }
    dend_60 { pt3dadd( -22.3746, -66.6402, 11.9062, 1.55 ) }
    dend_60 { pt3dadd( -22.0993, -67.7684, 12.0734, 1.55 ) }
    dend_60 { pt3dadd( -22.0603, -67.9187, 12.0965, 1.55 ) }
    dend_60 { pt3dadd( -21.6783, -69.3329, 12.3336, 1.55 ) }
    dend_60 { pt3dadd( -21.1484, -71.2392, 12.6628, 1.4 ) }
    dend_60 { pt3dadd( -21.129, -71.3085, 12.6755, 1.4 ) }
    dend_60 { pt3dadd( -20.9661, -71.8777, 12.7766, 1.4 ) }
    dend_60 { pt3dadd( -20.6166, -73.1752, 12.9755, 0.74 ) }
    dend_60 { pt3dadd( -20.6036, -73.2363, 12.9824, 0.74 ) }
    dend_60 { pt3dadd( -20.4808, -74.0865, 13.0323, 0.74 ) }
    dend_60 { pt3dadd( -20.4734, -74.1702, 13.0326, 0.74 ) }
    dend_60 { pt3dadd( -20.39, -75.7137, 13.1427, 0.74 ) }
    dend_60 { pt3dadd( -20.3702, -76.7872, 13.274, 0.74 ) }
    dend_60 { pt3dadd( -20.3402, -77.871, 13.4464, 0.74 ) }
    dend_60 { pt3dadd( -20.29, -79.155, 13.7099, 0.74 ) }
    dend_60 { pt3dadd( -20.2855, -79.2263, 13.7264, 0.74 ) }
    dend_60 { pt3dadd( -20.1439, -80.953, 14.1611, 0.74 ) }
    dend_60 { pt3dadd( -20.1251, -81.1039, 14.2, 0.74 ) }
    dend_60 { pt3dadd( -19.7528, -83.3145, 14.799, 0.74 ) }
    dend_60 { pt3dadd( -19.4949, -84.6104, 15.1334, 0.74 ) }
    dend_60 { pt3dadd( -19.1301, -86.3396, 15.5509, 0.74 ) }
    dend_60 { pt3dadd( -19.0965, -86.4895, 15.5821, 0.74 ) }
    dend_60 { pt3dadd( -18.5842, -88.5891, 15.9192, 0.74 ) }
    dend_60 { pt3dadd( -18.3048, -89.6626, 16.0845, 1.25 ) }
    dend_60 { pt3dadd( -17.8638, -91.2238, 16.3087, 1.62 ) }
    dend_60 { pt3dadd( -17.8382, -91.3031, 16.3168, 1.62 ) }
    dend_60 { pt3dadd( -17.5188, -92.1985, 16.3809, 1.62 ) }
    dend_60 { pt3dadd( -17.1555, -93.1956, 16.4132, 1.84 ) }
    dend_60 { pt3dadd( -17.0758, -93.4108, 16.4122, 1.84 ) }
    dend_60 { pt3dadd( -16.9374, -93.7937, 16.4158, 1.84 ) }
    dend_60 { pt3dadd( -16.3925, -95.3667, 16.5771, 1.33 ) }
    dend_60 { pt3dadd( -16.009, -96.6035, 16.7811, 0.96 ) }
    dend_60 { pt3dadd( -15.4899, -98.4397, 17.1787, 0.96 ) }
    dend_60 { pt3dadd( -15.4745, -98.4962, 17.2005, 0.96 ) }
    dend_60 { pt3dadd( -15.0704, -99.9908, 17.9827, 0.96 ) }
    dend_60 { pt3dadd( -14.7131, -101.261, 18.8317, 1.62 ) }
    dend_60 { pt3dadd( -14.4931, -102.011, 19.526, 1.62 ) }
    dend_60 { pt3dadd( -14.4786, -102.056, 19.5789, 1.62 ) }
    dend_60 { pt3dadd( -13.826, -103.962, 22.0798, 1.03 ) }
    dend_60 { pt3dadd( -13.8112, -104.004, 22.1354, 1.03 ) }
    dend_60 { pt3dadd( -13.6421, -104.461, 22.7716, 1.03 ) }
    dend_60 { pt3dadd( -13.2653, -105.474, 24.1696, 0.74 ) }
    dend_60 { pt3dadd( -13.2507, -105.518, 24.2232, 0.74 ) }
    dend_60 { pt3dadd( -13.0758, -106.218, 24.8807, 0.74 ) }
    dend_60 { pt3dadd( -13.0662, -106.281, 24.9142, 0.74 ) }
    dend_60 { pt3dadd( -12.9827, -107.418, 25.4255, 0.74 ) }
    dend_60 { pt3dadd( -12.9829, -107.552, 25.4835, 0.74 ) }
    dend_60 { pt3dadd( -13.0413, -109.273, 26.1642, 0.74 ) }
    dend_60 { pt3dadd( -13.0467, -109.35, 26.1951, 0.74 ) }
    dend_60 { pt3dadd( -13.1916, -110.751, 26.7902, 0.74 ) }
    dend_60 { pt3dadd( -13.3549, -112.078, 27.341, 0.74 ) }
    dend_60 { pt3dadd( -13.5299, -113.288, 27.8247, 1.11 ) }
    dend_60 { pt3dadd( -13.5418, -113.364, 27.856, 1.11 ) }
    dend_60 { pt3dadd( -13.7105, -114.393, 28.2899, 1.11 ) }
    dend_60 { pt3dadd( -13.9123, -115.748, 28.8585, 1.11 ) }
    dend_60 { pt3dadd( -14.0127, -116.38, 29.1109, 1.4 ) }
    dend_60 { pt3dadd( -14.0335, -116.527, 29.1613, 1.4 ) }
    dend_60 { pt3dadd( -14.1445, -117.323, 29.3982, 1.4 ) }
    dend_60 { pt3dadd( -14.3389, -118.706, 29.8023, 1.18 ) }
    dend_60 { pt3dadd( -14.5164, -119.893, 30.1931, 0.74 ) }
    dend_60 { pt3dadd( -14.6667, -120.898, 30.5245, 0.74 ) }
    dend_60 { pt3dadd( -14.6745, -120.967, 30.5469, 0.74 ) }
    dend_60 { pt3dadd( -14.7645, -122.063, 30.8913, 1.18 ) }
    dend_60 { pt3dadd( -14.7669, -122.133, 30.9114, 1.18 ) }
    dend_60 { pt3dadd( -14.7228, -123.651, 31.2561, 1.33 ) }
    dend_60 { pt3dadd( -14.6386, -124.612, 31.3967, 1.33 ) }
    dend_60 { pt3dadd( -14.4395, -126.169, 31.5678, 1.11 ) }
    dend_60 { pt3dadd( -14.4314, -126.242, 31.5727, 1.11 ) }
    dend_60 { pt3dadd( -14.3387, -127.415, 31.5386, 0.74 ) }
    dend_60 { pt3dadd( -14.2938, -128.559, 31.3918, 0.59 ) }
    dend_60 { pt3dadd( -14.3353, -129.329, 31.1818, 0.59 ) }
    dend_60 { pt3dadd( -14.3528, -129.395, 31.1581, 0.59 ) }
    dend_60 { pt3dadd( -14.8862, -130.457, 30.7428, 0.59 ) }
    dend_60 { pt3dadd( -15.6006, -131.551, 30.3256, 0.52 ) }
    dend_60 { pt3dadd( -15.6444, -131.605, 30.3065, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_60 { pt3dadd( -16.2361, -132.266, 30.1132, 0.81 ) }
    dend_60 { pt3dadd( -16.8433, -133.157, 29.9809, 0.81 ) }
    dend_60 { pt3dadd( -17.045, -133.918, 29.9302, 0.66 ) }
    dend_60 { pt3dadd( -17.0472, -133.992, 29.9288, 0.66 ) }
    dend_60 { pt3dadd( -16.9916, -134.84, 29.9339, 0.66 ) }
    dend_60 { pt3dadd( -16.9693, -135.003, 29.9398, 0.66 ) }
    dend_60 { pt3dadd( -16.5763, -136.904, 30.0441, 0.59 ) }
    dend_60 { pt3dadd( -15.9686, -139.434, 30.1934, 1.03 ) }
    dend_60 { pt3dadd( -15.7412, -140.41, 30.2877, 1.33 ) }
    dend_60 { pt3dadd( -15.7256, -140.481, 30.2973, 1.33 ) }
    dend_60 { pt3dadd( -15.4926, -141.722, 30.5212, 0.66 ) }
    dend_60 { pt3dadd( -15.3308, -143.0, 30.8006, 0.44 ) }
    dend_60 { pt3dadd( -15.2766, -144.043, 31.0919, 1.11 ) }
    dend_60 { pt3dadd( -15.2917, -145.38, 31.5541, 1.11 ) }
    dend_60 { pt3dadd( -15.2939, -145.439, 31.5751, 1.11 ) }
    dend_60 { pt3dadd( -15.3541, -146.401, 31.8994, 0.81 ) }
    dend_60 { pt3dadd( -15.5185, -147.737, 32.2859, 1.11 ) }
    dend_60 { pt3dadd( -15.5333, -147.815, 32.3121, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 18/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -23.2323, -62.4632, 11.1416, 0.52 ) }
    dend_59 { pt3dadd( -22.3317, -61.9697, 11.6747, 0.52 ) }
    dend_59 { pt3dadd( -22.2778, -61.9401, 11.7094, 0.52 ) }
    dend_59 { pt3dadd( -21.4518, -61.5278, 12.1188, 0.52 ) }
    dend_59 { pt3dadd( -21.2885, -61.4464, 12.1997, 0.52 ) }
    dend_59 { pt3dadd( -19.9146, -60.7607, 12.8807, 0.52 ) }
    dend_59 { pt3dadd( -19.766, -60.6865, 12.9544, 0.88 ) }
    dend_59 { pt3dadd( -19.7104, -60.6581, 12.9874, 0.88 ) }
    dend_59 { pt3dadd( -18.1524, -59.9194, 13.9373, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -14.3163, -35.6992, -3.24466, 0.15 ) }
    dend_55 { pt3dadd( -4.7016, -36.3061, -0.557238, 0.15 ) }
    dend_55 { pt3dadd( 5.13537, -37.0388, 1.10017, 0.15 ) }
    dend_55 { pt3dadd( 15.0819, -37.965, 0.562913, 0.15 ) }
    dend_55 { pt3dadd( 25.0382, -38.5393, 1.3207, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 32/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -14.3163, -35.6992, -3.24466, 0.15 ) }
    dend_52 { pt3dadd( -4.5359, -36.4235, -1.27823, 0.15 ) }
    dend_52 { pt3dadd( 5.45303, -36.6536, -0.862141, 0.15 ) }
    dend_52 { pt3dadd( 15.2098, -37.358, 1.22522, 0.15 ) }
    dend_52 { pt3dadd( 24.9301, -38.5649, 3.27292, 0.15 ) }
    dend_52 { pt3dadd( 34.9078, -39.0197, 3.78086, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -64.4238, -33.7085, -10.5139, 0.88 ) }
    dend_46 { pt3dadd( -64.3213, -34.6763, -10.4367, 0.88 ) }
    dend_46 { pt3dadd( -64.1562, -35.8843, -10.266, 0.59 ) }
    dend_46 { pt3dadd( -63.9868, -37.4401, -9.89276, 0.37 ) }
    dend_46 { pt3dadd( -63.9085, -38.6092, -9.56936, 0.74 ) }
    dend_46 { pt3dadd( -63.8593, -40.6282, -8.99465, 0.37 ) }
    dend_46 { pt3dadd( -63.8581, -41.2002, -8.81132, 0.74 ) }
    dend_46 { pt3dadd( -63.8936, -42.6471, -8.25048, 0.52 ) }
    dend_46 { pt3dadd( -63.9621, -44.6307, -7.39342, 0.52 ) }
    dend_46 { pt3dadd( -64.0109, -45.702, -6.88143, 1.11 ) }
    dend_46 { pt3dadd( -64.128, -46.9174, -6.26397, 1.11 ) }
    dend_46 { pt3dadd( -64.3817, -48.1913, -5.61782, 0.88 ) }
    dend_46 { pt3dadd( -64.3997, -48.2632, -5.58045, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 51/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -64.4238, -33.7085, -10.5139, 0.81 ) }
    dend_43 { pt3dadd( -65.5482, -33.9586, -10.6744, 0.81 ) }
    dend_43 { pt3dadd( -66.2943, -34.1369, -10.7774, 0.81 ) }
    dend_43 { pt3dadd( -67.4281, -34.4157, -10.9297, 0.66 ) }
    dend_43 { pt3dadd( -68.5539, -34.6756, -11.0647, 0.66 ) }
    dend_43 { pt3dadd( -69.3418, -34.8504, -11.1528, 0.66 ) }
    dend_43 { pt3dadd( -69.4456, -34.8713, -11.163, 0.66 ) }
    dend_43 { pt3dadd( -69.9408, -34.9566, -11.2055, 0.66 ) }
    dend_43 { pt3dadd( -70.0891, -34.9804, -11.2019, 0.66 ) }
    dend_43 { pt3dadd( -71.2429, -35.1592, -11.0228, 0.66 ) }
    dend_43 { pt3dadd( -71.31, -35.1717, -11.0068, 0.66 ) }
    dend_43 { pt3dadd( -72.4147, -35.4513, -10.689, 0.66 ) }
    dend_43 { pt3dadd( -72.4791, -35.4704, -10.6685, 0.66 ) }
    dend_43 { pt3dadd( -73.751, -35.9821, -10.2309, 0.66 ) }
    dend_43 { pt3dadd( -73.8189, -36.0182, -10.2063, 0.66 ) }
    dend_43 { pt3dadd( -74.5195, -36.4839, -9.89626, 0.66 ) }
    dend_43 { pt3dadd( -75.0524, -36.8671, -9.65018, 0.44 ) }
    dend_43 { pt3dadd( -75.1144, -36.9115, -9.62249, 0.44 ) }
    dend_43 { pt3dadd( -75.8914, -37.3326, -9.3599, 0.44 ) }
    dend_43 { pt3dadd( -75.9821, -37.3686, -9.34028, 0.44 ) }
    dend_43 { pt3dadd( -76.8143, -37.5514, -9.17135, 0.44 ) }
    dend_43 { pt3dadd( -77.0303, -37.5681, -9.13236, 0.44 ) }
    dend_43 { pt3dadd( -77.8858, -37.5954, -9.04509, 0.44 ) }
    dend_43 { pt3dadd( -78.6572, -37.6035, -9.01213, 0.88 ) }
    dend_43 { pt3dadd( -78.7271, -37.6022, -9.01316, 0.88 ) }
    dend_43 { pt3dadd( -79.6049, -37.604, -9.07518, 0.88 ) }
    dend_43 { pt3dadd( -80.3267, -37.632, -9.18171, 0.88 ) }
    dend_43 { pt3dadd( -81.0663, -37.7136, -9.29935, 0.88 ) }
    dend_43 { pt3dadd( -81.212, -37.74, -9.3245, 0.88 ) }
    dend_43 { pt3dadd( -81.703, -37.8549, -9.40809, 0.88 ) }
    dend_43 { pt3dadd( -81.9992, -37.9289, -9.45545, 0.22 ) }
    dend_43 { pt3dadd( -82.867, -38.152, -9.57152, 0.37 ) }
    dend_43 { pt3dadd( -83.7376, -38.3685, -9.65607, 0.37 ) }
    dend_43 { pt3dadd( -83.8055, -38.3863, -9.65917, 0.37 ) }
    dend_43 { pt3dadd( -84.3502, -38.541, -9.68101, 0.88 ) }
    dend_43 { pt3dadd( -84.4174, -38.5608, -9.68342, 0.88 ) }
    dend_43 { pt3dadd( -85.3447, -38.8339, -9.71004, 0.88 ) }
    dend_43 { pt3dadd( -85.4122, -38.8527, -9.71112, 0.88 ) }
    dend_43 { pt3dadd( -86.1805, -39.0244, -9.72507, 0.88 ) }
    dend_43 { pt3dadd( -86.259, -39.0402, -9.72646, 0.88 ) }
    dend_43 { pt3dadd( -87.2859, -39.2324, -9.73772, 0.88 ) }
    dend_43 { pt3dadd( -87.3547, -39.2468, -9.73808, 0.88 ) }
    dend_43 { pt3dadd( -87.8814, -39.364, -9.7386, 1.11 ) }
    dend_43 { pt3dadd( -88.6758, -39.5305, -9.73627, 0.88 ) }
    dend_43 { pt3dadd( -89.407, -39.6765, -9.73125, 0.88 ) }
    dend_43 { pt3dadd( -90.1564, -39.8405, -9.72358, 0.74 ) }
    dend_43 { pt3dadd( -90.9329, -40.0249, -9.71278, 0.59 ) }
    dend_43 { pt3dadd( -91.0688, -40.0599, -9.71068, 0.59 ) }
    dend_43 { pt3dadd( -92.0626, -40.3439, -9.69481, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_43 { pt3dadd( -92.2054, -40.389, -9.67886, 0.59 ) }
    dend_43 { pt3dadd( -93.1391, -40.6943, -9.50733, 0.59 ) }
    dend_43 { pt3dadd( -94.0487, -40.9869, -9.29295, 0.74 ) }
    dend_43 { pt3dadd( -95.1311, -41.336, -8.99261, 0.88 ) }
    dend_43 { pt3dadd( -95.8151, -41.5839, -8.78851, 0.88 ) }
    dend_43 { pt3dadd( -97.3606, -42.2271, -8.28158, 0.37 ) }
    dend_43 { pt3dadd( -97.5559, -42.3111, -8.21945, 0.37 ) }
    dend_43 { pt3dadd( -98.3593, -42.662, -7.97949, 0.37 ) }
    dend_43 { pt3dadd( -98.5353, -42.744, -7.93384, 0.37 ) }
    dend_43 { pt3dadd( -99.5745, -43.249, -7.765, 0.81 ) }
    dend_43 { pt3dadd( -99.8443, -43.3825, -7.75697, 0.81 ) }
    dend_43 { pt3dadd( -100.369, -43.6521, -7.81758, 0.44 ) }
    dend_43 { pt3dadd( -101.118, -44.0392, -7.90172, 0.44 ) }
    dend_43 { pt3dadd( -101.266, -44.1112, -7.93025, 0.44 ) }
    dend_43 { pt3dadd( -101.875, -44.3256, -8.07252, 0.44 ) }
    dend_43 { pt3dadd( -102.197, -44.3783, -8.15164, 0.44 ) }
    dend_43 { pt3dadd( -103.089, -44.4349, -8.35525, 0.44 ) }
    dend_43 { pt3dadd( -103.376, -44.4317, -8.39655, 0.44 ) }
    dend_43 { pt3dadd( -104.496, -44.334, -8.48633, 0.44 ) }
    dend_43 { pt3dadd( -105.603, -44.1905, -8.52789, 0.74 ) }
    dend_43 { pt3dadd( -106.741, -44.0177, -8.43848, 1.03 ) }
    dend_43 { pt3dadd( -107.386, -43.9305, -8.32158, 1.03 ) }
    dend_43 { pt3dadd( -108.381, -43.8662, -7.8896, 0.37 ) }
    dend_43 { pt3dadd( -109.441, -43.8868, -7.20845, 0.37 ) }
    dend_43 { pt3dadd( -109.495, -43.8936, -7.16493, 0.37 ) }
    dend_43 { pt3dadd( -110.603, -44.1474, -6.15888, 0.96 ) }
    dend_43 { pt3dadd( -111.007, -44.2828, -5.68249, 0.96 ) }
    dend_43 { pt3dadd( -112.447, -44.8452, -3.83251, 0.66 ) }
    dend_43 { pt3dadd( -112.589, -44.909, -3.65622, 0.66 ) }
    dend_43 { pt3dadd( -113.307, -45.2717, -2.80211, 0.66 ) }
    dend_43 { pt3dadd( -113.374, -45.3062, -2.73535, 0.66 ) }
    dend_43 { pt3dadd( -115.47, -46.4044, -0.981514, 1.62 ) }
    dend_43 { pt3dadd( -116.124, -46.7621, -0.539147, 1.62 ) }
    dend_43 { pt3dadd( -117.214, -47.3862, 7.45655E-4, 0.81 ) }
    dend_43 { pt3dadd( -118.173, -47.9359, 0.334816, 0.44 ) }
    dend_43 { pt3dadd( -119.282, -48.5774, 0.557597, 0.44 ) }
    dend_43 { pt3dadd( -119.344, -48.6124, 0.559389, 0.44 ) }
    dend_43 { pt3dadd( -120.686, -49.3551, 0.31482, 0.44 ) }
    dend_43 { pt3dadd( -120.746, -49.3882, 0.29564, 0.44 ) }
    dend_43 { pt3dadd( -121.958, -50.0466, -0.304666, 0.44 ) }
    dend_43 { pt3dadd( -122.086, -50.1156, -0.387112, 0.44 ) }
    dend_43 { pt3dadd( -122.559, -50.376, -0.719885, 0.44 ) }
    dend_43 { pt3dadd( -122.612, -50.4062, -0.755734, 0.44 ) }
    dend_43 { pt3dadd( -123.827, -51.2104, -1.49965, 0.44 ) }
    dend_43 { pt3dadd( -123.908, -51.2742, -1.53187, 0.44 ) }
    dend_43 { pt3dadd( -124.464, -51.7626, -1.65711, 0.44 ) }
    dend_43 { pt3dadd( -125.349, -52.534, -1.81225, 0.44 ) }
    dend_43 { pt3dadd( -125.681, -52.8041, -1.85016, 0.44 ) }
    dend_43 { pt3dadd( -126.777, -53.5853, -1.90842, 0.44 ) }
    dend_43 { pt3dadd( -128.01, -54.389, -1.89848, 0.44 ) }
    dend_43 { pt3dadd( -128.115, -54.4508, -1.89853, 0.44 ) }
    dend_43 { pt3dadd( -129.193, -55.0124, -1.90413, 0.81 ) }
    dend_43 { pt3dadd( -130.422, -55.5679, -1.88625, 1.18 ) }
    dend_43 { pt3dadd( -131.761, -56.0905, -1.84529, 1.18 ) }
    dend_43 { pt3dadd( -131.837, -56.1158, -1.84079, 1.18 ) }
    dend_43 { pt3dadd( -133.317, -56.5658, -1.68533, 1.33 ) }
    dend_43 { pt3dadd( -134.23, -56.8451, -1.54011, 1.62 ) }
    dend_43 { pt3dadd( -135.825, -57.3663, -1.17819, 1.62 ) }
    dend_43 { pt3dadd( -135.944, -57.4088, -1.14566, 1.62 ) }
    dend_43 { pt3dadd( -136.836, -57.7575, -0.874595, 1.62 ) }
    dend_43 { pt3dadd( -137.918, -58.2082, -0.537523, 1.03 ) }
    dend_43 { pt3dadd( -138.411, -58.4193, -0.383863, 0.59 ) }
    dend_43 { pt3dadd( -139.11, -58.7356, -0.186712, 0.37 ) }
    dend_43 { pt3dadd( -139.173, -58.7642, -0.175244, 0.37 ) }
    dend_43 { pt3dadd( -139.992, -59.1266, -0.110153, 0.37 ) }
    dend_43 { pt3dadd( -140.446, -59.3244, -0.120311, 0.66 ) }
    dend_43 { pt3dadd( -141.403, -59.7495, -0.211293, 0.66 ) }
    dend_43 { pt3dadd( -141.467, -59.7794, -0.214522, 0.66 ) }
    dend_43 { pt3dadd( -142.175, -60.1143, -0.223851, 0.96 ) }
    dend_43 { pt3dadd( -143.155, -60.594, -0.116942, 1.18 ) }
    dend_43 { pt3dadd( -143.217, -60.6255, -0.10306, 1.18 ) }
    dend_43 { pt3dadd( -144.382, -61.2594, 0.224038, 1.18 ) }
    dend_43 { pt3dadd( -145.344, -61.8396, 0.576401, 1.18 ) }
    dend_43 { pt3dadd( -145.408, -61.8798, 0.605062, 1.18 ) }
    dend_43 { pt3dadd( -146.574, -62.6593, 1.32001, 1.18 ) }
    dend_43 { pt3dadd( -146.658, -62.7169, 1.38614, 1.18 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.08314, 61.8292, 28.5085, 0.37 ) }
    dend_37 { pt3dadd( 3.07636, 62.3471, 28.9978, 0.37 ) }
    dend_37 { pt3dadd( 4.47597, 63.1893, 29.733, 0.37 ) }
    dend_37 { pt3dadd( 5.89528, 64.0912, 30.5908, 0.37 ) }
    dend_37 { pt3dadd( 7.30365, 65.0485, 31.4855, 0.37 ) }
    dend_37 { pt3dadd( 8.22258, 65.6821, 32.0459, 0.74 ) }
    dend_37 { pt3dadd( 8.69503, 65.9952, 32.3425, 0.74 ) }
    dend_37 { pt3dadd( 9.39782, 66.4412, 32.8293, 0.44 ) }
    dend_37 { pt3dadd( 10.7394, 67.1759, 33.7828, 0.44 ) }
    dend_37 { pt3dadd( 11.3407, 67.4367, 34.1691, 0.44 ) }
    dend_37 { pt3dadd( 12.784, 67.8152, 34.9606, 0.44 ) }
    dend_37 { pt3dadd( 14.1629, 67.9653, 35.8096, 0.66 ) }
    dend_37 { pt3dadd( 14.9031, 67.9771, 36.4062, 0.66 ) }
    dend_37 { pt3dadd( 15.5528, 67.9751, 37.0115, 0.66 ) }
    dend_37 { pt3dadd( 16.0101, 67.9932, 37.4836, 1.03 ) }
    dend_37 { pt3dadd( 16.8312, 68.1323, 38.4179, 1.03 ) }
    dend_37 { pt3dadd( 18.6172, 68.8756, 40.6432, 1.03 ) }
    dend_37 { pt3dadd( 19.8389, 69.7997, 42.281, 0.66 ) }
    dend_37 { pt3dadd( 20.3836, 70.4117, 43.0598, 0.59 ) }
    dend_37 { pt3dadd( 20.7848, 71.0359, 43.6464, 0.59 ) }
    dend_37 { pt3dadd( 21.4512, 72.409, 44.5748, 0.44 ) }
    dend_37 { pt3dadd( 21.872, 73.5701, 45.064, 0.44 ) }
    dend_37 { pt3dadd( 22.161, 74.6713, 45.2919, 0.88 ) }
    dend_37 { pt3dadd( 22.352, 75.5163, 45.3859, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_37 { pt3dadd( 22.5426, 76.4116, 45.512, 1.11 ) }
    dend_37 { pt3dadd( 22.7653, 77.4414, 45.6791, 0.66 ) }
    dend_37 { pt3dadd( 22.9671, 78.2818, 45.8247, 0.52 ) }
    dend_37 { pt3dadd( 23.2386, 79.1908, 46.0277, 0.52 ) }
    dend_37 { pt3dadd( 23.6026, 80.1507, 46.3974, 0.52 ) }
    dend_37 { pt3dadd( 23.9719, 80.9742, 46.9338, 0.74 ) }
    dend_37 { pt3dadd( 24.1967, 81.4349, 47.3262, 0.74 ) }
    dend_37 { pt3dadd( 24.456, 81.9661, 47.8697, 0.74 ) }
    dend_37 { pt3dadd( 24.9405, 82.974, 48.9672, 0.52 ) }
    dend_37 { pt3dadd( 25.6446, 84.4798, 50.5475, 0.52 ) }
    dend_37 { pt3dadd( 25.9408, 85.1314, 51.1653, 0.88 ) }
    dend_37 { pt3dadd( 26.1698, 85.6612, 51.6443, 0.88 ) }
    dend_37 { pt3dadd( 26.5764, 86.6704, 52.5585, 0.52 ) }
    dend_37 { pt3dadd( 26.807, 87.3042, 53.0988, 0.52 ) }
    dend_37 { pt3dadd( 27.1477, 88.3431, 53.763, 0.52 ) }
    dend_37 { pt3dadd( 27.5659, 89.5163, 54.1933, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 16/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 2.08314, 61.8292, 28.5085, 0.52 ) }
    dend_36 { pt3dadd( 2.50366, 63.2943, 28.9798, 0.52 ) }
    dend_36 { pt3dadd( 2.89005, 64.6578, 29.6236, 0.52 ) }
    dend_36 { pt3dadd( 3.34911, 65.9074, 30.4764, 0.52 ) }
    dend_36 { pt3dadd( 3.59584, 66.514, 31.151, 0.52 ) }
    dend_36 { pt3dadd( 3.98155, 67.4806, 32.4037, 0.52 ) }
    dend_36 { pt3dadd( 4.34801, 68.4332, 33.7031, 0.52 ) }
    dend_36 { pt3dadd( 4.71169, 69.3698, 35.1632, 0.52 ) }
    dend_36 { pt3dadd( 5.20699, 70.7116, 37.3674, 0.52 ) }
    dend_36 { pt3dadd( 5.92733, 72.8906, 40.9543, 0.52 ) }
    dend_36 { pt3dadd( 6.12636, 73.5623, 42.0805, 0.52 ) }
    dend_36 { pt3dadd( 6.27838, 74.153, 43.0375, 0.52 ) }
    dend_36 { pt3dadd( 6.36622, 74.529, 43.5643, 0.81 ) }
    dend_36 { pt3dadd( 6.50172, 75.2529, 44.307, 0.81 ) }
    dend_36 { pt3dadd( 6.56602, 75.7868, 44.6372, 0.81 ) }
    dend_36 { pt3dadd( 6.63843, 76.2199, 44.7572, 0.44 ) }
    dend_36 { pt3dadd( 6.88142, 77.3427, 45.0028, 0.37 ) }
    dend_36 { pt3dadd( 7.03188, 78.0171, 45.1186, 0.74 ) }
    dend_36 { pt3dadd( 7.24054, 78.9802, 45.3185, 0.74 ) }
    dend_36 { pt3dadd( 7.30691, 79.3808, 45.4154, 0.37 ) }
    dend_36 { pt3dadd( 7.37666, 79.9536, 45.6196, 0.37 ) }
    dend_36 { pt3dadd( 7.43399, 80.501, 45.8936, 0.37 ) }
    dend_36 { pt3dadd( 7.5065, 81.2006, 46.3679, 0.37 ) }
    dend_36 { pt3dadd( 7.59863, 81.9539, 47.07, 0.37 ) }
    dend_36 { pt3dadd( 7.65863, 82.4119, 47.6119, 0.37 ) }
    dend_36 { pt3dadd( 7.78398, 83.4352, 48.8828, 0.37 ) }
    dend_36 { pt3dadd( 7.84641, 83.974, 49.566, 0.37 ) }
    dend_36 { pt3dadd( 7.94676, 84.8367, 50.5884, 0.66 ) }
    dend_36 { pt3dadd( 8.17402, 86.4449, 52.3376, 0.66 ) }
    dend_36 { pt3dadd( 8.3829, 87.7913, 53.6597, 1.03 ) }
    dend_36 { pt3dadd( 8.48261, 88.3984, 54.2113, 1.03 ) }
    dend_36 { pt3dadd( 8.63379, 89.4319, 54.9932, 0.52 ) }
    dend_36 { pt3dadd( 8.80788, 90.7514, 55.869, 0.52 ) }
    dend_36 { pt3dadd( 8.89518, 91.4735, 56.2461, 0.81 ) }
    dend_36 { pt3dadd( 8.92265, 91.6888, 56.3212, 0.81 ) }
    dend_36 { pt3dadd( 9.07537, 92.5734, 56.6116, 0.37 ) }
    dend_36 { pt3dadd( 9.2957, 93.5588, 56.9742, 0.37 ) }
    dend_36 { pt3dadd( 9.53635, 94.3646, 57.2875, 0.37 ) }
    dend_36 { pt3dadd( 9.76664, 95.0348, 57.5683, 0.37 ) }
    dend_36 { pt3dadd( 10.1033, 96.0002, 57.9756, 0.37 ) }
    dend_36 { pt3dadd( 10.5834, 97.3529, 58.5366, 0.37 ) }
    dend_36 { pt3dadd( 10.8368, 98.006, 58.7985, 0.37 ) }
    dend_36 { pt3dadd( 11.2161, 98.8348, 59.1479, 0.37 ) }
    dend_36 { pt3dadd( 11.5485, 99.4764, 59.4003, 0.37 ) }
    dend_36 { pt3dadd( 11.8487, 100.006, 59.629, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -32.5621, 33.073, 1.9193, 0.66 ) }
    dend_34 { pt3dadd( -33.1046, 33.424, 1.33698, 0.66 ) }
    dend_34 { pt3dadd( -33.5327, 33.5924, 0.837317, 0.52 ) }
    dend_34 { pt3dadd( -33.9193, 33.7266, 0.402919, 0.52 ) }
    dend_34 { pt3dadd( -34.7736, 34.0364, -0.517585, 0.81 ) }
    dend_34 { pt3dadd( -35.1885, 34.2186, -0.958849, 0.81 ) }
    dend_34 { pt3dadd( -36.419, 34.8818, -2.30677, 0.81 ) }
    dend_34 { pt3dadd( -37.6604, 35.6939, -3.73193, 0.44 ) }
    dend_34 { pt3dadd( -38.0379, 35.9856, -4.15304, 0.44 ) }
    dend_34 { pt3dadd( -38.384, 36.3016, -4.52695, 0.59 ) }
    dend_34 { pt3dadd( -39.0772, 37.0172, -5.18226, 0.59 ) }
    dend_34 { pt3dadd( -39.7727, 37.7723, -5.75997, 0.59 ) }
    dend_34 { pt3dadd( -40.3301, 38.3871, -6.11125, 0.59 ) }
    dend_34 { pt3dadd( -40.8749, 38.9472, -6.4493, 0.59 ) }
    dend_34 { pt3dadd( -41.7506, 39.6105, -6.9899, 0.59 ) }
    dend_34 { pt3dadd( -42.3242, 39.917, -7.31476, 0.22 ) }
    dend_34 { pt3dadd( -43.0307, 40.1635, -7.70812, 0.22 ) }
    dend_34 { pt3dadd( -43.8359, 40.3782, -8.14493, 0.22 ) }
    dend_34 { pt3dadd( -45.2874, 40.7125, -8.95045, 0.44 ) }
    dend_34 { pt3dadd( -46.0157, 40.882, -9.43673, 0.59 ) }
    dend_34 { pt3dadd( -46.6318, 41.056, -9.87207, 0.81 ) }
    dend_34 { pt3dadd( -47.5081, 41.3554, -10.5382, 0.81 ) }
    dend_34 { pt3dadd( -48.1058, 41.5842, -10.9893, 1.18 ) }
    dend_34 { pt3dadd( -48.5841, 41.7763, -11.3558, 1.47 ) }
    dend_34 { pt3dadd( -50.3087, 42.3566, -12.5384, 0.96 ) }
    dend_34 { pt3dadd( -51.0852, 42.577, -13.0973, 0.66 ) }
    dend_34 { pt3dadd( -52.0679, 42.827, -13.7932, 0.66 ) }
    dend_34 { pt3dadd( -52.6879, 42.971, -14.2017, 0.66 ) }
    dend_34 { pt3dadd( -54.3025, 43.2561, -15.3461, 0.37 ) }
    dend_34 { pt3dadd( -55.4857, 43.3867, -16.3264, 0.37 ) }
    dend_34 { pt3dadd( -56.5999, 43.435, -17.2966, 0.74 ) }
    dend_34 { pt3dadd( -57.1119, 43.4229, -17.7685, 0.74 ) }
    dend_34 { pt3dadd( -57.8177, 43.3801, -18.4181, 0.44 ) }
    dend_34 { pt3dadd( -59.5525, 43.2521, -20.0008, 0.44 ) }
    dend_34 { pt3dadd( -61.387, 43.0945, -21.5568, 0.44 ) }
    dend_34 { pt3dadd( -62.117, 43.0494, -22.1791, 1.33 ) }
    dend_34 { pt3dadd( -63.1163, 43.0084, -22.9625, 1.33 ) }
    dend_34 { pt3dadd( -63.7947, 43.0013, -23.4567, 0.52 ) }
    dend_34 { pt3dadd( -64.3549, 43.0445, -23.8285, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( -65.581, 43.2514, -24.3937, 0.52 ) }
    dend_34 { pt3dadd( -67.1481, 43.602, -24.9758, 0.81 ) }
    dend_34 { pt3dadd( -67.9428, 43.7843, -25.2301, 0.52 ) }
    dend_34 { pt3dadd( -69.0698, 44.0021, -25.6565, 0.52 ) }
    dend_34 { pt3dadd( -70.6508, 44.1838, -26.3565, 0.52 ) }
    dend_34 { pt3dadd( -72.6534, 44.2994, -27.2883, 0.52 ) }
    dend_34 { pt3dadd( -74.4531, 44.3606, -28.1147, 0.37 ) }
    dend_34 { pt3dadd( -75.9258, 44.4159, -28.7493, 1.11 ) }
    dend_34 { pt3dadd( -79.0502, 44.5806, -30.1749, 1.11 ) }
    dend_34 { pt3dadd( -81.1109, 44.7061, -31.16, 0.88 ) }
    dend_34 { pt3dadd( -81.7164, 44.749, -31.45, 0.59 ) }
    dend_34 { pt3dadd( -82.5416, 44.8455, -31.8505, 0.37 ) }
    dend_34 { pt3dadd( -83.4005, 44.9974, -32.2476, 0.37 ) }
    dend_34 { pt3dadd( -84.9778, 45.3729, -32.9534, 0.29 ) }
    dend_34 { pt3dadd( -85.6621, 45.5755, -33.1783, 0.81 ) }
    dend_34 { pt3dadd( -86.8546, 45.9424, -33.5355, 1.11 ) }
    dend_34 { pt3dadd( -88.3254, 46.3442, -33.9685, 1.11 ) }
    dend_34 { pt3dadd( -90.2108, 46.7925, -34.5479, 0.66 ) }
    dend_34 { pt3dadd( -91.0567, 46.9772, -34.8033, 0.52 ) }
    dend_34 { pt3dadd( -91.6971, 47.1123, -34.9809, 0.52 ) }
    dend_34 { pt3dadd( -92.9548, 47.3927, -35.3279, 0.52 ) }
    dend_34 { pt3dadd( -93.9177, 47.6337, -35.6129, 0.52 ) }
    dend_34 { pt3dadd( -94.9939, 47.9587, -35.9198, 0.52 ) }
    dend_34 { pt3dadd( -95.8839, 48.2998, -36.1849, 0.52 ) }
    dend_34 { pt3dadd( -96.5447, 48.6176, -36.4451, 0.88 ) }
    dend_34 { pt3dadd( -96.9126, 48.8326, -36.6543, 0.52 ) }
    dend_34 { pt3dadd( -97.7157, 49.4046, -37.2364, 0.44 ) }
    dend_34 { pt3dadd( -98.3376, 49.9193, -37.7437, 0.44 ) }
    dend_34 { pt3dadd( -99.2392, 50.8111, -38.5559, 1.03 ) }
    dend_34 { pt3dadd( -99.5651, 51.1633, -38.8791, 1.03 ) }
    dend_34 { pt3dadd( -100.482, 52.243, -39.8199, 0.52 ) }
    dend_34 { pt3dadd( -100.905, 52.7787, -40.2318, 0.37 ) }
    dend_34 { pt3dadd( -101.396, 53.4669, -40.655, 0.37 ) }
    dend_34 { pt3dadd( -102.274, 54.8449, -41.4643, 0.22 ) }
    dend_34 { pt3dadd( -102.4, 55.0735, -41.5757, 0.74 ) }
    dend_34 { pt3dadd( -102.662, 55.5972, -41.8069, 1.03 ) }
    dend_34 { pt3dadd( -103.099, 56.519, -42.1737, 1.03 ) }
    dend_34 { pt3dadd( -103.469, 57.2915, -42.4881, 0.74 ) }
    dend_34 { pt3dadd( -104.132, 58.6199, -43.116, 0.22 ) }
    dend_34 { pt3dadd( -104.567, 59.4314, -43.5214, 0.22 ) }
    dend_34 { pt3dadd( -105.435, 60.8955, -44.2974, 0.22 ) }
    dend_34 { pt3dadd( -105.895, 61.5865, -44.6941, 0.88 ) }
    dend_34 { pt3dadd( -106.418, 62.3055, -45.1231, 0.88 ) }
    dend_34 { pt3dadd( -107.233, 63.3548, -45.7345, 0.22 ) }
    dend_34 { pt3dadd( -107.705, 63.9314, -46.0248, 0.22 ) }
    dend_34 { pt3dadd( -108.705, 65.0607, -46.6799, 0.22 ) }
    dend_34 { pt3dadd( -108.848, 65.2211, -46.7772, 0.88 ) }
    dend_34 { pt3dadd( -109.192, 65.6145, -47.0013, 0.88 ) }
    dend_34 { pt3dadd( -109.422, 65.8622, -47.1775, 0.15 ) }
    dend_34 { pt3dadd( -109.968, 66.3963, -47.5886, 0.15 ) }
    dend_34 { pt3dadd( -110.867, 67.1788, -48.3602, 0.15 ) }
    dend_34 { pt3dadd( -111.188, 67.4501, -48.6604, 1.03 ) }
    dend_34 { pt3dadd( -111.584, 67.8085, -49.0665, 1.25 ) }
    dend_34 { pt3dadd( -112.859, 69.0191, -50.5617, 0.22 ) }
    dend_34 { pt3dadd( -113.296, 69.4483, -51.1119, 0.22 ) }
    dend_34 { pt3dadd( -113.625, 69.772, -51.5301, 0.22 ) }
    dend_34 { pt3dadd( -114.149, 70.3, -52.129, 0.22 ) }
    dend_34 { pt3dadd( -114.842, 70.9639, -52.9064, 0.22 ) }
    dend_34 { pt3dadd( -115.725, 71.8549, -53.875, 0.22 ) }
    dend_34 { pt3dadd( -115.945, 72.0874, -54.1107, 0.66 ) }
    dend_34 { pt3dadd( -116.368, 72.5336, -54.5815, 0.66 ) }
    dend_34 { pt3dadd( -117.088, 73.2587, -55.3338, 0.66 ) }
    dend_34 { pt3dadd( -118.445, 74.5453, -56.7503, 0.66 ) }
    dend_34 { pt3dadd( -118.827, 74.8999, -57.1202, 0.22 ) }
    dend_34 { pt3dadd( -119.655, 75.7337, -57.9335, 0.22 ) }
    dend_34 { pt3dadd( -119.655, 75.7337, -57.9335, 0.81 ) }
    dend_34 { pt3dadd( -120.174, 76.3548, -58.4452, 0.81 ) }
    dend_34 { pt3dadd( -121.358, 77.9202, -59.5314, 0.29 ) }
    dend_34 { pt3dadd( -121.964, 78.784, -60.0339, 0.29 ) }
    dend_34 { pt3dadd( -122.81, 79.9534, -60.662, 0.88 ) }
    dend_34 { pt3dadd( -123.386, 80.7448, -61.0707, 1.18 ) }
    dend_34 { pt3dadd( -123.994, 81.5717, -61.4974, 1.18 ) }
    dend_34 { pt3dadd( -124.625, 82.3882, -61.9392, 0.74 ) }
    dend_34 { pt3dadd( -125.302, 83.1861, -62.3611, 0.22 ) }
    dend_34 { pt3dadd( -126.26, 84.2108, -62.9509, 0.22 ) }
    dend_34 { pt3dadd( -127.085, 85.0186, -63.42, 0.22 ) }
    dend_34 { pt3dadd( -127.619, 85.5302, -63.7133, 0.22 ) }
    dend_34 { pt3dadd( -128.882, 86.7238, -64.4705, 0.22 ) }
    dend_34 { pt3dadd( -129.565, 87.3732, -64.8723, 0.22 ) }
    dend_34 { pt3dadd( -129.97, 87.7776, -65.1178, 0.81 ) }
    dend_34 { pt3dadd( -130.442, 88.2666, -65.4822, 0.81 ) }
    dend_34 { pt3dadd( -131.283, 89.1846, -66.2106, 0.81 ) }
    dend_34 { pt3dadd( -132.269, 90.3837, -67.2367, 0.22 ) }
    dend_34 { pt3dadd( -132.868, 91.2498, -68.0472, 0.22 ) }
    dend_34 { pt3dadd( -133.506, 92.2903, -69.0997, 0.59 ) }
    dend_34 { pt3dadd( -134.344, 93.7198, -70.6358, 0.96 ) }
    dend_34 { pt3dadd( -134.569, 94.1049, -71.0649, 0.15 ) }
    dend_34 { pt3dadd( -134.819, 94.5341, -71.576, 0.15 ) }
    dend_34 { pt3dadd( -135.334, 95.4489, -72.601, 0.15 ) }
    dend_34 { pt3dadd( -135.59, 95.931, -73.1301, 0.15 ) }
    dend_34 { pt3dadd( -135.945, 96.6071, -73.7854, 0.81 ) }
    dend_34 { pt3dadd( -136.242, 97.1559, -74.2452, 0.81 ) }
    dend_34 { pt3dadd( -137.116, 98.6609, -75.5088, 0.22 ) }
    dend_34 { pt3dadd( -137.362, 99.0793, -75.8309, 0.22 ) }
    dend_34 { pt3dadd( -137.548, 99.4314, -76.0941, 0.66 ) }
    dend_34 { pt3dadd( -137.683, 99.7027, -76.3119, 0.66 ) }
    dend_34 { pt3dadd( -137.817, 99.976, -76.5522, 0.66 ) }
    dend_34 { pt3dadd( -138.237, 100.817, -77.3381, 0.22 ) }
    dend_34 { pt3dadd( -138.526, 101.404, -77.8784, 0.88 ) }
    dend_34 { pt3dadd( -139.112, 102.587, -79.0467, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -139.871, 104.063, -80.6035, 0.15 ) }
    dend_34 { pt3dadd( -140.186, 104.652, -81.2601, 0.88 ) }
    dend_34 { pt3dadd( -140.211, 104.694, -81.3111, 0.88 ) }
    dend_34 { pt3dadd( -147.876, 109.607, -85.7119, 0.88 ) }
    dend_34 { pt3dadd( -155.991, 114.838, -88.7656, 0.88 ) }
    dend_34 { pt3dadd( -164.253, 120.416, -90.6407, 0.88 ) }
    dend_34 { pt3dadd( -172.526, 125.273, -93.8268, 0.88 ) }
    dend_34 { pt3dadd( -181.496, 128.153, -97.2947, 0.88 ) }
    dend_34 { pt3dadd( -189.661, 133.042, -100.708, 0.88 ) }
    dend_34 { pt3dadd( -197.133, 138.325, -105.051, 0.88 ) }
    dend_34 { pt3dadd( -203.826, 143.924, -110.224, 0.88 ) }
    dend_34 { pt3dadd( -212.061, 147.601, -114.688, 0.88 ) }
    dend_34 { pt3dadd( -220.076, 150.177, -120.142, 0.88 ) }
    dend_34 { pt3dadd( -226.832, 153.277, -126.897, 0.88 ) }
    dend_34 { pt3dadd( -232.39, 156.247, -134.715, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 15/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -32.5621, 33.073, 1.9193, 0.29 ) }
    dend_33 { pt3dadd( -32.6842, 33.3909, 1.91522, 0.29 ) }
    dend_33 { pt3dadd( -32.987, 34.1796, 1.90508, 0.29 ) }
    dend_33 { pt3dadd( -33.6242, 35.8399, 1.88376, 0.29 ) }
    dend_33 { pt3dadd( -34.7732, 38.8332, 1.8453, 0.29 ) }
    dend_33 { pt3dadd( -34.9103, 39.1903, 1.84071, 0.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -51.6344, 3.91123, 14.9521, 1.33 ) }
    dend_28 { pt3dadd( -51.5457, 3.31644, 15.9641, 1.33 ) }
    dend_28 { pt3dadd( -51.4827, 2.67574, 16.8867, 0.74 ) }
    dend_28 { pt3dadd( -51.4414, 1.83636, 17.9345, 0.74 ) }
    dend_28 { pt3dadd( -51.3457, -0.512232, 20.5196, 0.74 ) }
    dend_28 { pt3dadd( -51.2985, -1.60207, 21.5569, 1.11 ) }
    dend_28 { pt3dadd( -51.268, -2.27165, 22.1019, 0.88 ) }
    dend_28 { pt3dadd( -51.2505, -3.34491, 22.8106, 0.88 ) }
    dend_28 { pt3dadd( -51.2805, -4.20724, 23.3121, 1.11 ) }
    dend_28 { pt3dadd( -51.3816, -5.10437, 23.7769, 0.74 ) }
    dend_28 { pt3dadd( -51.6072, -6.28648, 24.3178, 0.74 ) }
    dend_28 { pt3dadd( -51.9419, -7.41158, 24.9977, 0.74 ) }
    dend_28 { pt3dadd( -52.1851, -7.9883, 25.4298, 1.11 ) }
    dend_28 { pt3dadd( -52.8056, -9.21134, 26.4979, 1.11 ) }
    dend_28 { pt3dadd( -53.6472, -10.5916, 27.8877, 1.11 ) }
    dend_28 { pt3dadd( -54.1756, -11.2798, 28.7021, 0.88 ) }
    dend_28 { pt3dadd( -54.9282, -12.0621, 29.8331, 0.88 ) }
    dend_28 { pt3dadd( -55.618, -12.6633, 30.8638, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 39/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -51.6344, 3.91123, 14.9521, 0.96 ) }
    dend_27 { pt3dadd( -52.129, 4.50244, 15.4532, 0.96 ) }
    dend_27 { pt3dadd( -52.6502, 5.11213, 16.1292, 0.81 ) }
    dend_27 { pt3dadd( -53.2903, 5.73885, 16.9564, 0.81 ) }
    dend_27 { pt3dadd( -53.9083, 6.21541, 17.7565, 0.81 ) }
    dend_27 { pt3dadd( -54.7364, 6.67759, 18.8144, 0.81 ) }
    dend_27 { pt3dadd( -55.5895, 7.01539, 19.8611, 0.81 ) }
    dend_27 { pt3dadd( -56.5158, 7.17886, 20.998, 0.81 ) }
    dend_27 { pt3dadd( -57.1819, 7.17472, 21.7866, 0.81 ) }
    dend_27 { pt3dadd( -57.9376, 7.09087, 22.5925, 0.81 ) }
    dend_27 { pt3dadd( -58.9904, 6.92862, 23.4974, 0.59 ) }
    dend_27 { pt3dadd( -59.5999, 6.85388, 23.8896, 0.59 ) }
    dend_27 { pt3dadd( -60.5765, 6.81674, 24.3445, 0.59 ) }
    dend_27 { pt3dadd( -61.3486, 6.90659, 24.62, 0.59 ) }
    dend_27 { pt3dadd( -62.1169, 7.14336, 24.8549, 0.59 ) }
    dend_27 { pt3dadd( -62.6457, 7.39278, 25.0417, 0.59 ) }
    dend_27 { pt3dadd( -63.488, 7.94949, 25.5945, 1.03 ) }
    dend_27 { pt3dadd( -64.058, 8.48228, 26.2172, 0.66 ) }
    dend_27 { pt3dadd( -64.4772, 8.95805, 26.969, 0.66 ) }
    dend_27 { pt3dadd( -64.8523, 9.39534, 27.8536, 0.66 ) }
    dend_27 { pt3dadd( -65.513, 10.1063, 29.5743, 0.96 ) }
    dend_27 { pt3dadd( -66.5323, 11.0777, 32.2639, 0.96 ) }
    dend_27 { pt3dadd( -66.9285, 11.3877, 33.2829, 0.96 ) }
    dend_27 { pt3dadd( -67.7632, 11.9226, 35.2972, 0.96 ) }
    dend_27 { pt3dadd( -68.4218, 12.2394, 36.6572, 0.96 ) }
    dend_27 { pt3dadd( -68.9428, 12.378, 37.4557, 0.96 ) }
    dend_27 { pt3dadd( -69.7213, 12.4426, 37.9999, 1.18 ) }
    dend_27 { pt3dadd( -70.6579, 12.4528, 38.2112, 1.18 ) }
    dend_27 { pt3dadd( -71.1785, 12.46, 38.2296, 1.18 ) }
    dend_27 { pt3dadd( -72.6933, 12.5748, 38.0137, 0.44 ) }
    dend_27 { pt3dadd( -73.5607, 12.6719, 37.8972, 0.44 ) }
    dend_27 { pt3dadd( -74.4967, 12.8129, 37.8599, 0.44 ) }
    dend_27 { pt3dadd( -74.9998, 12.8995, 37.931, 0.96 ) }
    dend_27 { pt3dadd( -76.0314, 13.1016, 38.2418, 1.11 ) }
    dend_27 { pt3dadd( -76.5443, 13.201, 38.4583, 1.11 ) }
    dend_27 { pt3dadd( -78.0904, 13.4732, 39.2588, 0.59 ) }
    dend_27 { pt3dadd( -79.1898, 13.637, 39.8542, 0.59 ) }
    dend_27 { pt3dadd( -80.5949, 13.7914, 40.6036, 0.74 ) }
    dend_27 { pt3dadd( -81.0356, 13.838, 40.818, 0.74 ) }
    dend_27 { pt3dadd( -81.7795, 13.9207, 41.1584, 0.59 ) }
    dend_27 { pt3dadd( -82.6071, 14.0314, 41.4685, 0.59 ) }
    dend_27 { pt3dadd( -83.0298, 14.097, 41.5733, 0.59 ) }
    dend_27 { pt3dadd( -83.7401, 14.2216, 41.7171, 0.59 ) }
    dend_27 { pt3dadd( -84.7204, 14.3954, 41.8494, 0.59 ) }
    dend_27 { pt3dadd( -85.6583, 14.5477, 41.9766, 0.81 ) }
    dend_27 { pt3dadd( -86.6111, 14.7109, 42.1021, 1.11 ) }
    dend_27 { pt3dadd( -87.5389, 14.8847, 42.2456, 1.11 ) }
    dend_27 { pt3dadd( -88.0851, 15.0039, 42.3329, 0.44 ) }
    dend_27 { pt3dadd( -88.7198, 15.1696, 42.4213, 0.44 ) }
    dend_27 { pt3dadd( -89.6355, 15.4547, 42.5176, 0.44 ) }
    dend_27 { pt3dadd( -90.4159, 15.7387, 42.5668, 0.44 ) }
    dend_27 { pt3dadd( -91.0228, 15.9894, 42.6014, 0.44 ) }
    dend_27 { pt3dadd( -92.402, 16.5493, 42.6692, 0.44 ) }
    dend_27 { pt3dadd( -93.1971, 16.8346, 42.7622, 0.44 ) }
    dend_27 { pt3dadd( -94.2181, 17.1653, 42.9625, 0.44 ) }
    dend_27 { pt3dadd( -94.7657, 17.3287, 43.1045, 0.29 ) }
    dend_27 { pt3dadd( -95.295, 17.4676, 43.3291, 0.29 ) }
    dend_27 { pt3dadd( -96.2682, 17.6977, 43.9852, 0.29 ) }
    dend_27 { pt3dadd( -97.4769, 17.9478, 45.1685, 0.29 ) }
    dend_27 { pt3dadd( -97.9675, 18.0517, 45.7977, 0.66 ) }
    dend_27 { pt3dadd( -98.3107, 18.1367, 46.3105, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -99.3797, 18.4805, 48.0082, 0.52 ) }
    dend_27 { pt3dadd( -100.087, 18.7788, 49.1893, 0.37 ) }
    dend_27 { pt3dadd( -100.242, 18.8596, 49.4443, 0.66 ) }
    dend_27 { pt3dadd( -100.883, 19.1961, 50.3359, 0.96 ) }
    dend_27 { pt3dadd( -101.329, 19.3975, 50.8692, 1.25 ) }
    dend_27 { pt3dadd( -101.824, 19.5628, 51.3329, 1.25 ) }
    dend_27 { pt3dadd( -103.163, 19.8776, 52.1853, 1.03 ) }
    dend_27 { pt3dadd( -103.802, 19.9818, 52.4988, 0.74 ) }
    dend_27 { pt3dadd( -104.718, 20.0536, 52.8733, 0.74 ) }
    dend_27 { pt3dadd( -105.447, 20.05, 53.0912, 0.74 ) }
    dend_27 { pt3dadd( -106.583, 19.9833, 53.3488, 0.74 ) }
    dend_27 { pt3dadd( -107.524, 19.8969, 53.4961, 1.11 ) }
    dend_27 { pt3dadd( -108.334, 19.815, 53.5523, 1.11 ) }
    dend_27 { pt3dadd( -109.355, 19.7195, 53.5768, 1.11 ) }
    dend_27 { pt3dadd( -110.824, 19.6287, 53.5488, 1.4 ) }
    dend_27 { pt3dadd( -111.563, 19.623, 53.478, 0.66 ) }
    dend_27 { pt3dadd( -112.046, 19.6518, 53.4041, 0.52 ) }
    dend_27 { pt3dadd( -113.057, 19.7852, 53.1995, 0.44 ) }
    dend_27 { pt3dadd( -113.768, 19.937, 53.0331, 0.44 ) }
    dend_27 { pt3dadd( -114.511, 20.1621, 52.8472, 1.03 ) }
    dend_27 { pt3dadd( -115.751, 20.5998, 52.4994, 0.81 ) }
    dend_27 { pt3dadd( -116.209, 20.7676, 52.3735, 0.59 ) }
    dend_27 { pt3dadd( -117.051, 21.0776, 52.1434, 0.59 ) }
    dend_27 { pt3dadd( -117.994, 21.3992, 51.9217, 0.96 ) }
    dend_27 { pt3dadd( -118.725, 21.5949, 51.7916, 0.96 ) }
    dend_27 { pt3dadd( -119.232, 21.6935, 51.7347, 0.74 ) }
    dend_27 { pt3dadd( -120.137, 21.8337, 51.6842, 0.66 ) }
    dend_27 { pt3dadd( -120.643, 21.8973, 51.6594, 0.66 ) }
    dend_27 { pt3dadd( -122.112, 22.0735, 51.603, 0.66 ) }
    dend_27 { pt3dadd( -123.66, 22.2595, 51.5372, 0.66 ) }
    dend_27 { pt3dadd( -124.369, 22.3535, 51.5085, 0.66 ) }
    dend_27 { pt3dadd( -124.832, 22.4263, 51.4937, 1.11 ) }
    dend_27 { pt3dadd( -125.407, 22.5418, 51.4685, 1.11 ) }
    dend_27 { pt3dadd( -126.623, 22.8731, 51.4238, 1.11 ) }
    dend_27 { pt3dadd( -127.122, 23.0396, 51.4097, 0.74 ) }
    dend_27 { pt3dadd( -127.698, 23.245, 51.4008, 0.52 ) }
    dend_27 { pt3dadd( -128.342, 23.4537, 51.3921, 0.52 ) }
    dend_27 { pt3dadd( -129.291, 23.7265, 51.3995, 0.52 ) }
    dend_27 { pt3dadd( -130.071, 23.9222, 51.4143, 0.74 ) }
    dend_27 { pt3dadd( -131.016, 24.1159, 51.4614, 1.03 ) }
    dend_27 { pt3dadd( -132.193, 24.3193, 51.5901, 1.18 ) }
    dend_27 { pt3dadd( -133.209, 24.4506, 51.7344, 1.18 ) }
    dend_27 { pt3dadd( -134.143, 24.5427, 51.8838, 0.88 ) }
    dend_27 { pt3dadd( -135.228, 24.6173, 52.1098, 0.88 ) }
    dend_27 { pt3dadd( -136.375, 24.6809, 52.4235, 0.74 ) }
    dend_27 { pt3dadd( -137.767, 24.7712, 52.8932, 0.74 ) }
    dend_27 { pt3dadd( -138.941, 24.8896, 53.3462, 0.74 ) }
    dend_27 { pt3dadd( -139.962, 25.0353, 53.8154, 0.74 ) }
    dend_27 { pt3dadd( -141.051, 25.257, 54.4096, 0.74 ) }
    dend_27 { pt3dadd( -142.007, 25.5378, 54.991, 0.52 ) }
    dend_27 { pt3dadd( -142.539, 25.7425, 55.3239, 0.52 ) }
    dend_27 { pt3dadd( -143.676, 26.2653, 55.9939, 0.52 ) }
    dend_27 { pt3dadd( -144.878, 26.891, 56.7424, 0.52 ) }
    dend_27 { pt3dadd( -145.9, 27.4632, 57.3805, 0.52 ) }
    dend_27 { pt3dadd( -146.275, 27.6843, 57.5868, 0.15 ) }
    dend_27 { pt3dadd( -147.057, 28.1545, 57.9839, 0.15 ) }
    dend_27 { pt3dadd( -148.291, 28.8758, 58.6365, 0.15 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 57/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -129.976, 27.7027, -60.633, 0.52 ) }
    dend_25 { pt3dadd( -132.028, 26.068, -61.8983, 0.52 ) }
    dend_25 { pt3dadd( -133.228, 25.241, -62.5941, 0.52 ) }
    dend_25 { pt3dadd( -134.576, 24.3787, -63.3524, 0.29 ) }
    dend_25 { pt3dadd( -135.859, 23.5775, -64.0671, 0.29 ) }
    dend_25 { pt3dadd( -137.356, 22.635, -64.8879, 0.29 ) }
    dend_25 { pt3dadd( -139.496, 21.2644, -65.9841, 0.29 ) }
    dend_25 { pt3dadd( -140.438, 20.7153, -66.4657, 0.29 ) }
    dend_25 { pt3dadd( -141.939, 19.8715, -67.2625, 0.15 ) }
    dend_25 { pt3dadd( -142.727, 19.428, -67.6772, 0.15 ) }
    dend_25 { pt3dadd( -144.457, 18.4153, -68.6799, 0.15 ) }
    dend_25 { pt3dadd( -146.135, 17.3984, -69.7091, 0.15 ) }
    dend_25 { pt3dadd( -148.291, 15.9643, -70.8914, 0.15 ) }
    dend_25 { pt3dadd( -154.528, 9.72856, -75.9737, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -129.976, 27.7027, -60.633, 1.62 ) }
    dend_24 { pt3dadd( -130.812, 28.2529, -61.614, 1.62 ) }
    dend_24 { pt3dadd( -131.63, 28.7266, -62.4898, 0.44 ) }
    dend_24 { pt3dadd( -132.666, 29.2727, -63.4636, 0.44 ) }
    dend_24 { pt3dadd( -133.329, 29.577, -64.0477, 0.37 ) }
    dend_24 { pt3dadd( -134.638, 30.043, -65.1907, 0.37 ) }
    dend_24 { pt3dadd( -135.878, 30.412, -66.2135, 0.22 ) }
    dend_24 { pt3dadd( -136.733, 30.6158, -66.8826, 0.22 ) }
    dend_24 { pt3dadd( -137.923, 30.8366, -67.7023, 0.22 ) }
    dend_24 { pt3dadd( -139.439, 31.0456, -68.5896, 0.22 ) }
    dend_24 { pt3dadd( -141.698, 31.2188, -69.8077, 0.22 ) }
    dend_24 { pt3dadd( -142.844, 31.2259, -70.3301, 0.22 ) }
    dend_24 { pt3dadd( -143.464, 31.1929, -70.5852, 0.81 ) }
    dend_24 { pt3dadd( -144.163, 31.1128, -70.8592, 1.18 ) }
    dend_24 { pt3dadd( -144.86, 30.971, -71.0782, 1.18 ) }
    dend_24 { pt3dadd( -146.642, 30.4578, -71.4105, 0.22 ) }
    dend_24 { pt3dadd( -147.652, 30.0909, -71.5516, 0.22 ) }
    dend_24 { pt3dadd( -148.186, 29.86, -71.6302, 0.88 ) }
    dend_24 { pt3dadd( -148.709, 29.6198, -71.7637, 0.88 ) }
    dend_24 { pt3dadd( -149.778, 29.1336, -72.1854, 0.29 ) }
    dend_24 { pt3dadd( -151.102, 28.5837, -72.7929, 0.29 ) }
    dend_24 { pt3dadd( -152.757, 27.9964, -73.7058, 0.15 ) }
    dend_24 { pt3dadd( -155.286, 27.3915, -75.2177, 0.15 ) }
    dend_24 { pt3dadd( -157.548, 27.0866, -76.6155, 1.25 ) }
    dend_24 { pt3dadd( -159.685, 26.9941, -78.0345, 0.52 ) }
    dend_24 { pt3dadd( -161.088, 27.0867, -79.0017, 0.52 ) }
    dend_24 { pt3dadd( -162.878, 27.3987, -80.2272, 0.52 ) }
    dend_24 { pt3dadd( -165.153, 28.0588, -81.6868, 0.52 ) }
    dend_24 { pt3dadd( -166.096, 28.4646, -82.2257, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_24 { pt3dadd( -167.252, 29.0425, -82.6804, 0.52 ) }
    dend_24 { pt3dadd( -168.592, 29.8223, -83.0604, 0.52 ) }
    dend_24 { pt3dadd( -169.126, 30.1645, -83.1848, 0.52 ) }
    dend_24 { pt3dadd( -169.563, 30.4722, -83.2672, 0.22 ) }
    dend_24 { pt3dadd( -170.523, 31.1807, -83.4985, 0.22 ) }
    dend_24 { pt3dadd( -171.228, 31.7218, -83.6491, 0.22 ) }
    dend_24 { pt3dadd( -172.089, 32.4085, -83.7869, 0.22 ) }
    dend_24 { pt3dadd( -172.788, 32.9876, -83.926, 0.22 ) }
    dend_24 { pt3dadd( -174.61, 34.5263, -84.3546, 0.22 ) }
    dend_24 { pt3dadd( -175.033, 34.8823, -84.4683, 0.66 ) }
    dend_24 { pt3dadd( -175.759, 35.4899, -84.6812, 0.22 ) }
    dend_24 { pt3dadd( -177.145, 36.6931, -85.1008, 0.22 ) }
    dend_24 { pt3dadd( -186.029, 38.4554, -89.3747, 0.22 ) }
    dend_24 { pt3dadd( -195.016, 42.1731, -91.9611, 0.22 ) }
    dend_24 { pt3dadd( -204.346, 44.8498, -94.5006, 0.22 ) }
    dend_24 { pt3dadd( -214.234, 45.8099, -95.6811, 0.22 ) }
    dend_24 { pt3dadd( -223.866, 45.1958, -98.3064, 0.22 ) }
    dend_24 { pt3dadd( -233.8, 44.6842, -99.3419, 0.22 ) }
    dend_24 { pt3dadd( -243.762, 44.7892, -100.205, 0.22 ) }
    dend_24 { pt3dadd( -253.737, 44.0445, -100.179, 0.22 ) }
    dend_24 { pt3dadd( -263.542, 42.8114, -98.6036, 0.22 ) }
    dend_24 { pt3dadd( -273.063, 42.9343, -95.547, 0.22 ) }
    dend_24 { pt3dadd( -282.831, 43.2046, -93.4212, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 37.7103, 7.43474, 8.09003, 0.74 ) }
    dend_18 { pt3dadd( 39.5435, 7.83743, 8.23659, 0.74 ) }
    dend_18 { pt3dadd( 40.5574, 8.10972, 8.33473, 0.74 ) }
    dend_18 { pt3dadd( 40.6249, 8.12788, 8.34096, 0.74 ) }
    dend_18 { pt3dadd( 41.6966, 8.41493, 8.43761, 0.96 ) }
    dend_18 { pt3dadd( 41.8566, 8.45683, 8.4519, 0.96 ) }
    dend_18 { pt3dadd( 42.9703, 8.74411, 8.55056, 0.74 ) }
    dend_18 { pt3dadd( 44.6893, 9.17143, 8.68102, 0.44 ) }
    dend_18 { pt3dadd( 45.9918, 9.4723, 8.77945, 0.81 ) }
    dend_18 { pt3dadd( 46.0605, 9.48587, 8.78439, 0.81 ) }
    dend_18 { pt3dadd( 47.3196, 9.69362, 8.81105, 1.03 ) }
    dend_18 { pt3dadd( 47.3988, 9.70519, 8.80862, 1.03 ) }
    dend_18 { pt3dadd( 48.7124, 9.85879, 8.68571, 1.03 ) }
    dend_18 { pt3dadd( 48.7901, 9.87204, 8.67145, 1.03 ) }
    dend_18 { pt3dadd( 49.6935, 10.0963, 8.45435, 1.03 ) }
    dend_18 { pt3dadd( 50.84, 10.5066, 8.17136, 0.66 ) }
    dend_18 { pt3dadd( 51.4279, 10.8065, 8.00861, 0.66 ) }
    dend_18 { pt3dadd( 51.5931, 10.9391, 7.96673, 0.66 ) }
    dend_18 { pt3dadd( 52.1868, 11.5792, 7.963, 0.66 ) }
    dend_18 { pt3dadd( 52.2576, 11.6598, 7.98287, 0.66 ) }
    dend_18 { pt3dadd( 52.8626, 12.2661, 8.50986, 0.66 ) }
    dend_18 { pt3dadd( 52.9644, 12.3331, 8.62375, 0.66 ) }
    dend_18 { pt3dadd( 53.7781, 12.6884, 9.60457, 0.66 ) }
    dend_18 { pt3dadd( 55.0673, 13.0349, 11.088, 1.03 ) }
    dend_18 { pt3dadd( 55.316, 13.069, 11.3689, 1.03 ) }
    dend_18 { pt3dadd( 56.5645, 13.2215, 12.9184, 0.66 ) }
    dend_18 { pt3dadd( 57.1569, 13.302, 13.6742, 0.66 ) }
    dend_18 { pt3dadd( 57.2144, 13.314, 13.7454, 0.66 ) }
    dend_18 { pt3dadd( 57.9077, 13.592, 14.5302, 0.66 ) }
    dend_18 { pt3dadd( 57.9476, 13.6243, 14.5627, 0.66 ) }
    dend_18 { pt3dadd( 59.1845, 14.8578, 15.3907, 1.4 ) }
    dend_18 { pt3dadd( 59.7793, 15.5179, 15.7374, 1.4 ) }
    dend_18 { pt3dadd( 60.2219, 16.0078, 16.011, 1.4 ) }
    dend_18 { pt3dadd( 61.4095, 17.3306, 16.7257, 0.88 ) }
    dend_18 { pt3dadd( 62.7675, 18.8642, 17.5127, 0.52 ) }
    dend_18 { pt3dadd( 64.4171, 20.656, 18.3795, 0.52 ) }
    dend_18 { pt3dadd( 64.4995, 20.7394, 18.4155, 0.52 ) }
    dend_18 { pt3dadd( 66.1239, 22.3063, 19.185, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 61/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 37.7103, 7.43474, 8.09003, 0.96 ) }
    dend_15 { pt3dadd( 37.7792, 8.25702, 9.05469, 0.96 ) }
    dend_15 { pt3dadd( 37.8379, 8.87943, 9.71739, 0.96 ) }
    dend_15 { pt3dadd( 37.8496, 8.99234, 9.83698, 0.96 ) }
    dend_15 { pt3dadd( 37.992, 10.4442, 11.3746, 0.96 ) }
    dend_15 { pt3dadd( 37.9968, 10.4933, 11.4265, 0.96 ) }
    dend_15 { pt3dadd( 38.0628, 11.1669, 12.14, 0.96 ) }
    dend_15 { pt3dadd( 38.0702, 11.2243, 12.198, 0.96 ) }
    dend_15 { pt3dadd( 38.1698, 12.0645, 13.1703, 0.96 ) }
    dend_15 { pt3dadd( 38.1766, 12.1274, 13.24, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 49.1858, 8.27691, 7.13058, 0.88 ) }
    dend_11 { pt3dadd( 49.4592, 8.80362, 6.96745, 0.88 ) }
    dend_11 { pt3dadd( 50.0029, 9.90041, 6.65792, 0.88 ) }
    dend_11 { pt3dadd( 50.032, 9.96559, 6.64382, 0.88 ) }
    dend_11 { pt3dadd( 50.9108, 12.0268, 6.25516, 0.88 ) }
    dend_11 { pt3dadd( 50.9427, 12.1026, 6.24245, 0.88 ) }
    dend_11 { pt3dadd( 51.607, 13.6813, 5.99579, 0.88 ) }
    dend_11 { pt3dadd( 51.6476, 13.7834, 5.98244, 0.88 ) }
    dend_11 { pt3dadd( 52.4294, 15.6929, 5.78268, 0.88 ) }
    dend_11 { pt3dadd( 52.5203, 15.9155, 5.77266, 0.88 ) }
    dend_11 { pt3dadd( 52.7779, 16.5848, 5.79679, 0.88 ) }
    dend_11 { pt3dadd( 52.8031, 16.6534, 5.79904, 0.88 ) }
    dend_11 { pt3dadd( 53.1846, 17.7962, 5.83212, 0.66 ) }
    dend_11 { pt3dadd( 53.3435, 18.3117, 5.84501, 0.88 ) }
    dend_11 { pt3dadd( 53.6221, 19.3215, 5.86648, 0.66 ) }
    dend_11 { pt3dadd( 54.0109, 21.0661, 5.89157, 0.66 ) }
    dend_11 { pt3dadd( 54.2224, 22.1487, 5.89664, 0.66 ) }
    dend_11 { pt3dadd( 54.5102, 23.6692, 5.89146, 0.66 ) }
    dend_11 { pt3dadd( 54.5413, 23.8447, 5.88922, 0.66 ) }
    dend_11 { pt3dadd( 54.7157, 24.7516, 5.83593, 0.66 ) }
    dend_11 { pt3dadd( 55.2119, 26.9757, 5.58499, 0.52 ) }
    dend_11 { pt3dadd( 55.33, 27.3645, 5.5246, 0.81 ) }
    dend_11 { pt3dadd( 55.505, 27.8187, 5.43915, 0.66 ) }
    dend_11 { pt3dadd( 55.5702, 27.9641, 5.40639, 0.66 ) }
    dend_11 { pt3dadd( 56.2006, 29.2503, 5.09519, 0.66 ) }
    dend_11 { pt3dadd( 56.3299, 29.4869, 5.03665, 0.66 ) }
    dend_11 { pt3dadd( 56.9288, 30.6127, 4.81256, 0.66 ) }
    dend_11 { pt3dadd( 56.993, 30.7534, 4.7923, 0.66 ) }
    dend_11 { pt3dadd( 57.3854, 31.7442, 4.7427, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 57.4582, 31.9456, 4.74673, 0.66 ) }
    dend_11 { pt3dadd( 57.8657, 33.0994, 4.83646, 0.44 ) }
    dend_11 { pt3dadd( 58.4893, 34.7973, 4.98233, 0.44 ) }
    dend_11 { pt3dadd( 58.5189, 34.875, 4.98962, 0.44 ) }
    dend_11 { pt3dadd( 59.3263, 36.7568, 5.12684, 0.44 ) }
    dend_11 { pt3dadd( 59.7763, 37.688, 5.17548, 1.03 ) }
    dend_11 { pt3dadd( 60.3464, 38.8536, 5.20946, 1.33 ) }
    dend_11 { pt3dadd( 60.6516, 39.4905, 5.16947, 1.33 ) }
    dend_11 { pt3dadd( 60.7598, 39.7401, 5.11788, 1.33 ) }
    dend_11 { pt3dadd( 61.2748, 41.1098, 4.70208, 1.33 ) }
    dend_11 { pt3dadd( 61.6283, 42.2449, 4.25168, 1.18 ) }
    dend_11 { pt3dadd( 61.95, 43.5002, 3.6197, 0.44 ) }
    dend_11 { pt3dadd( 62.3731, 45.5647, 2.43461, 0.44 ) }
    dend_11 { pt3dadd( 62.6867, 47.3202, 1.37347, 0.44 ) }
    dend_11 { pt3dadd( 62.7541, 47.698, 1.14702, 0.81 ) }
    dend_11 { pt3dadd( 62.8641, 48.3381, 0.760722, 0.81 ) }
    dend_11 { pt3dadd( 63.3212, 50.5256, -0.579275, 0.44 ) }
    dend_11 { pt3dadd( 63.3377, 50.586, -0.615525, 0.44 ) }
    dend_11 { pt3dadd( 63.6457, 51.5074, -1.11594, 0.44 ) }
    dend_11 { pt3dadd( 64.1985, 52.9324, -1.84475, 0.44 ) }
    dend_11 { pt3dadd( 64.2588, 53.0798, -1.91916, 0.44 ) }
    dend_11 { pt3dadd( 65.1141, 55.1975, -2.90044, 0.44 ) }
    dend_11 { pt3dadd( 65.1387, 55.2611, -2.92521, 0.44 ) }
    dend_11 { pt3dadd( 65.6268, 56.5681, -3.42224, 0.44 ) }
    dend_11 { pt3dadd( 65.657, 56.6525, -3.45576, 0.44 ) }
    dend_11 { pt3dadd( 65.9344, 57.4393, -3.75434, 1.03 ) }
    dend_11 { pt3dadd( 66.2637, 58.3272, -4.04662, 1.03 ) }
    dend_11 { pt3dadd( 66.2905, 58.393, -4.06276, 1.03 ) }
    dend_11 { pt3dadd( 66.9346, 59.9014, -4.3877, 0.66 ) }
    dend_11 { pt3dadd( 67.4796, 61.0625, -4.60519, 0.66 ) }
    dend_11 { pt3dadd( 67.8439, 61.7882, -4.74231, 0.88 ) }
    dend_11 { pt3dadd( 67.9456, 61.98, -4.77832, 0.88 ) }
    dend_11 { pt3dadd( 68.3459, 62.7269, -4.90707, 0.88 ) }
    dend_11 { pt3dadd( 68.3829, 62.8004, -4.91755, 0.88 ) }
    dend_11 { pt3dadd( 68.8358, 63.7468, -5.00637, 1.25 ) }
    dend_11 { pt3dadd( 69.2971, 64.775, -5.04266, 1.47 ) }
    dend_11 { pt3dadd( 69.6797, 65.6606, -5.0709, 1.47 ) }
    dend_11 { pt3dadd( 70.0706, 66.5982, -5.09535, 0.88 ) }
    dend_11 { pt3dadd( 70.3842, 67.3868, -5.10794, 0.74 ) }
    dend_11 { pt3dadd( 71.1743, 69.4297, -5.10711, 0.74 ) }
    dend_11 { pt3dadd( 71.3589, 69.9437, -5.08827, 0.74 ) }
    dend_11 { pt3dadd( 75.5172, 79.1306, -7.56933, 0.74 ) }
    dend_11 { pt3dadd( 80.5281, 88.0379, -9.28031, 0.74 ) }
    dend_11 { pt3dadd( 84.1111, 97.839, -9.45631, 0.74 ) }
    dend_11 { pt3dadd( 88.7745, 107.092, -8.68856, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 93.4998, -45.1112, 58.5207, 0.66 ) }
    dend_4 { pt3dadd( 91.5266, -45.9578, 66.6852, 0.66 ) }
    dend_4 { pt3dadd( 91.3624, -46.0282, 67.3645, 0.66 ) }
    dend_4 { pt3dadd( 90.9202, -46.218, 69.1949, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 93.4998, -45.1112, 58.5207, 0.52 ) }
    dend_3 { pt3dadd( 94.2152, -45.9599, 65.2701, 0.52 ) }
    dend_3 { pt3dadd( 94.2399, -45.9788, 65.4169, 0.52 ) }
    dend_3 { pt3dadd( 94.3434, -46.0396, 65.8783, 0.52 ) }
    dend_3 { pt3dadd( 94.4743, -46.091, 66.2101, 0.52 ) }
    dend_3 { pt3dadd( 94.8275, -46.2502, 66.7633, 0.52 ) }
    dend_3 { pt3dadd( 95.0477, -46.3574, 67.0426, 0.52 ) }
    dend_3 { pt3dadd( 95.8891, -46.8294, 67.4371, 0.52 ) }
    dend_3 { pt3dadd( 95.9423, -46.8652, 67.4674, 0.52 ) }
    dend_3 { pt3dadd( 97.0974, -47.711, 68.2013, 0.44 ) }
    dend_3 { pt3dadd( 98.3887, -48.7847, 69.1289, 0.44 ) }
    dend_3 { pt3dadd( 98.4463, -48.841, 69.1772, 0.44 ) }
    dend_3 { pt3dadd( 99.2981, -49.8195, 70.0023, 0.44 ) }
    dend_3 { pt3dadd( 99.3269, -49.8615, 70.0366, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 63/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -15.5333, -147.815, 32.3121, 0.29 ) }
    dend_62 { pt3dadd( -14.722, -148.5, 32.4437, 0.29 ) }
    dend_62 { pt3dadd( -14.5549, -148.648, 32.4663, 0.29 ) }
    dend_62 { pt3dadd( -13.8677, -149.353, 32.5429, 0.29 ) }
    dend_62 { pt3dadd( -13.7996, -149.429, 32.5498, 0.29 ) }
    dend_62 { pt3dadd( -13.0492, -150.364, 32.6169, 0.29 ) }
    dend_62 { pt3dadd( -12.3302, -151.317, 32.6759, 0.29 ) }
    dend_62 { pt3dadd( -12.2918, -151.378, 32.6811, 0.29 ) }
    dend_62 { pt3dadd( -11.7852, -152.374, 32.8231, 0.66 ) }
    dend_62 { pt3dadd( -11.756, -152.45, 32.8422, 0.66 ) }
    dend_62 { pt3dadd( -11.435, -153.469, 33.1675, 0.66 ) }
    dend_62 { pt3dadd( -11.4201, -153.536, 33.1918, 0.66 ) }
    dend_62 { pt3dadd( -11.0889, -155.477, 33.9182, 0.52 ) }
    dend_62 { pt3dadd( -10.924, -156.563, 34.3037, 0.52 ) }
    dend_62 { pt3dadd( -10.7504, -157.863, 34.7593, 1.03 ) }
    dend_62 { pt3dadd( -10.6749, -158.364, 34.9221, 1.4 ) }
    dend_62 { pt3dadd( -10.4956, -159.313, 35.1986, 1.18 ) }
    dend_62 { pt3dadd( -10.2979, -160.098, 35.4395, 0.59 ) }
    dend_62 { pt3dadd( -9.94625, -161.136, 35.664, 0.59 ) }
    dend_62 { pt3dadd( -9.91335, -161.211, 35.6768, 0.59 ) }
    dend_62 { pt3dadd( -9.49391, -162.08, 35.7688, 0.81 ) }
    dend_62 { pt3dadd( -9.01273, -162.99, 35.8713, 0.81 ) }
    dend_62 { pt3dadd( -8.13408, -164.606, 36.2173, 0.37 ) }
    dend_62 { pt3dadd( -7.40094, -166.009, 36.6541, 0.15 ) }
    dend_62 { pt3dadd( -7.37483, -166.072, 36.6793, 0.15 ) }
    dend_62 { pt3dadd( -7.23788, -166.834, 37.1207, 0.66 ) }
    dend_62 { pt3dadd( -7.23843, -166.892, 37.163, 0.66 ) }
    dend_62 { pt3dadd( -7.3919, -168.371, 38.3297, 0.66 ) }
    dend_62 { pt3dadd( -7.40729, -168.468, 38.4047, 0.66 ) }
    dend_62 { pt3dadd( -7.4917, -169.024, 38.9074, 0.66 ) }
    dend_62 { pt3dadd( -7.57244, -170.641, 40.3336, 0.37 ) }
    dend_62 { pt3dadd( -7.46348, -172.288, 41.9238, 0.37 ) }
    dend_62 { pt3dadd( -7.45544, -172.346, 41.9813, 0.37 ) }
    dend_62 { pt3dadd( -7.26574, -173.096, 42.7412, 0.37 ) }
    dend_62 { pt3dadd( -6.61263, -175.033, 44.7371, 0.37 ) }
    dend_62 { pt3dadd( -6.0572, -176.358, 46.0793, 0.37 ) }
    dend_62 { pt3dadd( -5.13287, -178.202, 47.8672, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_62 { pt3dadd( -5.09554, -178.265, 47.9268, 0.37 ) }
    dend_62 { pt3dadd( -4.24101, -179.609, 49.2099, 0.37 ) }
    dend_62 { pt3dadd( -4.0243, -179.912, 49.4999, 0.88 ) }
    dend_62 { pt3dadd( -3.54487, -180.561, 49.9918, 0.22 ) }
    dend_62 { pt3dadd( -3.11851, -181.226, 50.4509, 0.22 ) }
    dend_62 { pt3dadd( -2.46597, -182.327, 50.708, 0.22 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 6/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -15.5333, -147.815, 32.3121, 0.44 ) }
    dend_61 { pt3dadd( -15.4453, -149.051, 32.2691, 0.44 ) }
    dend_61 { pt3dadd( -15.3701, -150.361, 32.1974, 0.44 ) }
    dend_61 { pt3dadd( -15.3695, -150.434, 32.1929, 0.44 ) }
    dend_61 { pt3dadd( -15.4005, -152.122, 32.0712, 0.44 ) }
    dend_61 { pt3dadd( -15.4029, -152.196, 32.0654, 0.44 ) }
    dend_61 { pt3dadd( -15.4439, -153.361, 31.931, 0.44 ) }
    dend_61 { pt3dadd( -15.4563, -153.516, 31.9066, 0.44 ) }
    dend_61 { pt3dadd( -15.6114, -155.136, 31.6381, 0.81 ) }
    dend_61 { pt3dadd( -15.6384, -155.476, 31.6222, 0.81 ) }
    dend_61 { pt3dadd( -15.6439, -155.539, 31.6202, 0.81 ) }
    dend_61 { pt3dadd( -15.7205, -156.45, 31.6155, 0.37 ) }
    dend_61 { pt3dadd( -15.8738, -158.473, 31.7111, 0.29 ) }
    dend_61 { pt3dadd( -15.9251, -159.499, 31.7907, 0.29 ) }
    dend_61 { pt3dadd( -15.9549, -161.781, 32.1379, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 21/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 25.0382, -38.5393, 1.3207, 0.15 ) }
    dend_57 { pt3dadd( 34.9763, -39.2677, 2.1882, 0.15 ) }
    dend_57 { pt3dadd( 44.967, -39.7197, 2.1548, 0.15 ) }
    dend_57 { pt3dadd( 54.7823, -38.4121, 3.60664, 0.15 ) }
    dend_57 { pt3dadd( 64.7678, -38.5612, 4.12678, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 26/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 25.0382, -38.5393, 1.3207, 0.15 ) }
    dend_56 { pt3dadd( 34.918, -39.2427, 2.71375, 0.15 ) }
    dend_56 { pt3dadd( 44.9142, -39.1124, 2.95988, 0.15 ) }
    dend_56 { pt3dadd( 54.7691, -40.8908, 2.84711, 0.15 ) }
    dend_56 { pt3dadd( 64.6891, -41.982, 2.13108, 0.15 ) }
    dend_56 { pt3dadd( 74.6743, -42.497, 2.36558, 0.15 ) }
    dend_56 { pt3dadd( 84.3698, -44.1671, 4.22785, 0.15 ) }
    dend_56 { pt3dadd( 93.8943, -46.7085, 6.07806, 0.15 ) }
    dend_56 { pt3dadd( 103.426, -47.9326, 8.86793, 0.15 ) }
    dend_56 { pt3dadd( 112.598, -49.9104, 12.3793, 0.15 ) }
    dend_56 { pt3dadd( 121.34, -52.5046, 16.559, 0.15 ) }
    dend_56 { pt3dadd( 128.853, -56.0651, 22.2211, 0.15 ) }
    dend_56 { pt3dadd( 137.151, -60.1475, 26.2246, 0.15 ) }
    dend_56 { pt3dadd( 145.928, -61.9208, 30.7085, 0.15 ) }
    dend_56 { pt3dadd( 154.576, -63.2243, 35.5728, 0.15 ) }
    dend_56 { pt3dadd( 162.81, -62.6019, 41.2175, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 34.9078, -39.0197, 3.78086, 0.15 ) }
    dend_54 { pt3dadd( 44.7064, -39.7096, 5.66644, 0.15 ) }
    dend_54 { pt3dadd( 54.2805, -38.3448, 8.24494, 0.15 ) }
    dend_54 { pt3dadd( 63.8908, -36.5107, 10.3872, 0.15 ) }
    dend_54 { pt3dadd( 73.4133, -33.3081, 10.5324, 0.15 ) }
    dend_54 { pt3dadd( 82.6159, -29.3152, 9.61048, 0.15 ) }
    dend_54 { pt3dadd( 92.0746, -26.3216, 8.05963, 0.15 ) }
    dend_54 { pt3dadd( 100.897, -22.3813, 5.21771, 0.15 ) }
    dend_54 { pt3dadd( 108.829, -17.0773, 1.81777, 0.15 ) }
    dend_54 { pt3dadd( 116.043, -11.5331, -2.66355, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 52/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 34.9078, -39.0197, 3.78086, 0.15 ) }
    dend_53 { pt3dadd( 44.8673, -39.6471, 4.45259, 0.15 ) }
    dend_53 { pt3dadd( 54.692, -38.6833, 6.07552, 0.15 ) }
    dend_53 { pt3dadd( 63.9583, -36.5718, 9.25203, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 56/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -64.3997, -48.2632, -5.58045, 0.22 ) }
    dend_48 { pt3dadd( -65.4613, -50.315, -5.63793, 0.22 ) }
    dend_48 { pt3dadd( -66.1797, -51.4309, -5.60287, 0.22 ) }
    dend_48 { pt3dadd( -66.221, -51.4899, -5.5989, 0.22 ) }
    dend_48 { pt3dadd( -68.0162, -53.8333, -5.33797, 0.22 ) }
    dend_48 { pt3dadd( -68.8963, -54.9179, -5.18208, 0.22 ) }
    dend_48 { pt3dadd( -69.0051, -55.0458, -5.15496, 0.22 ) }
    dend_48 { pt3dadd( -70.6674, -56.7409, -4.45819, 0.22 ) }
    dend_48 { pt3dadd( -70.8003, -56.8672, -4.39516, 0.22 ) }
    dend_48 { pt3dadd( -71.3988, -57.4198, -4.08471, 0.22 ) }
    dend_48 { pt3dadd( -71.4966, -57.5089, -4.0211, 0.22 ) }
    dend_48 { pt3dadd( -72.5405, -58.5746, -3.25731, 0.22 ) }
    dend_48 { pt3dadd( -72.7889, -58.8466, -3.0567, 0.22 ) }
    dend_48 { pt3dadd( -73.7141, -60.0655, -2.11503, 0.22 ) }
    dend_48 { pt3dadd( -73.7549, -60.1232, -2.07353, 0.22 ) }
    dend_48 { pt3dadd( -74.4082, -61.1923, -1.37545, 0.22 ) }
    dend_48 { pt3dadd( -74.4734, -61.306, -1.30602, 0.22 ) }
    dend_48 { pt3dadd( -80.9749, -68.8488, 1.16944, 0.22 ) }
    dend_48 { pt3dadd( -86.9118, -77.2132, 2.30728, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 75/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -64.3997, -48.2632, -5.58045, 0.52 ) }
    dend_47 { pt3dadd( -64.4652, -48.94, -5.54078, 0.52 ) }
    dend_47 { pt3dadd( -64.6621, -50.2375, -5.45409, 0.52 ) }
    dend_47 { pt3dadd( -64.6862, -50.382, -5.44424, 0.52 ) }
    dend_47 { pt3dadd( -64.9082, -51.7813, -5.35753, 0.52 ) }
    dend_47 { pt3dadd( -65.1224, -52.9951, -5.19376, 0.52 ) }
    dend_47 { pt3dadd( -65.1718, -53.2656, -5.14788, 0.52 ) }
    dend_47 { pt3dadd( -65.4787, -54.8616, -4.82014, 0.52 ) }
    dend_47 { pt3dadd( -65.5204, -55.077, -4.75253, 0.52 ) }
    dend_47 { pt3dadd( -65.7381, -56.4188, -4.25054, 0.52 ) }
    dend_47 { pt3dadd( -65.9725, -58.048, -3.56551, 1.18 ) }
    dend_47 { pt3dadd( -66.1165, -59.0951, -3.09867, 1.92 ) }
    dend_47 { pt3dadd( -66.238, -59.9669, -2.70596, 2.28 ) }
    dend_47 { pt3dadd( -66.503, -62.2948, -1.45097, 0.74 ) }
    dend_47 { pt3dadd( -66.5511, -63.0844, -0.99088, 0.66 ) }
    dend_47 { pt3dadd( -66.5604, -63.8565, -0.505121, 0.66 ) }
    dend_47 { pt3dadd( -66.5498, -64.0007, -0.413302, 0.66 ) }
    dend_47 { pt3dadd( -66.4147, -65.0331, 0.275231, 0.66 ) }
    dend_47 { pt3dadd( -66.0567, -67.0647, 1.57763, 0.66 ) }
    dend_47 { pt3dadd( -65.8046, -68.0905, 2.16507, 0.52 ) }
    dend_47 { pt3dadd( -65.7869, -68.1519, 2.19946, 0.52 ) }
    dend_47 { pt3dadd( -65.3548, -69.5623, 2.91652, 0.52 ) }
    dend_47 { pt3dadd( -65.1472, -70.304, 3.22955, 1.03 ) }
    dend_47 { pt3dadd( -64.9771, -71.03, 3.44284, 1.03 ) }
    dend_47 { pt3dadd( -64.9568, -71.174, 3.46192, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_47 { pt3dadd( -64.913, -71.8862, 3.53028, 0.81 ) }
    dend_47 { pt3dadd( -64.8877, -72.6505, 3.58087, 0.52 ) }
    dend_47 { pt3dadd( -64.9323, -73.7197, 3.60205, 0.52 ) }
    dend_47 { pt3dadd( -65.01, -74.7162, 3.62715, 0.52 ) }
    dend_47 { pt3dadd( -65.0311, -74.9229, 3.63319, 0.52 ) }
    dend_47 { pt3dadd( -65.1608, -76.0921, 3.67228, 0.52 ) }
    dend_47 { pt3dadd( -65.1684, -76.1647, 3.67963, 0.52 ) }
    dend_47 { pt3dadd( -65.2595, -77.7803, 3.91564, 0.52 ) }
    dend_47 { pt3dadd( -65.2614, -78.1516, 3.98261, 0.52 ) }
    dend_47 { pt3dadd( -65.2091, -78.8125, 4.1868, 0.52 ) }
    dend_47 { pt3dadd( -65.1789, -79.0157, 4.26823, 0.52 ) }
    dend_47 { pt3dadd( -64.8979, -80.3044, 4.87998, 0.88 ) }
    dend_47 { pt3dadd( -64.6897, -81.2413, 5.38645, 0.88 ) }
    dend_47 { pt3dadd( -64.6627, -81.3799, 5.46628, 0.88 ) }
    dend_47 { pt3dadd( -64.4454, -82.8934, 6.32507, 0.88 ) }
    dend_47 { pt3dadd( -64.4387, -82.9581, 6.35759, 0.88 ) }
    dend_47 { pt3dadd( -64.3801, -83.8889, 6.72195, 0.88 ) }
    dend_47 { pt3dadd( -64.3565, -85.2294, 7.08297, 1.11 ) }
    dend_47 { pt3dadd( -64.3448, -86.3737, 7.30617, 1.11 ) }
    dend_47 { pt3dadd( -64.3435, -86.4467, 7.31434, 1.11 ) }
    dend_47 { pt3dadd( -64.3186, -87.4603, 7.35439, 0.74 ) }
    dend_47 { pt3dadd( -64.2884, -88.4684, 7.40012, 0.59 ) }
    dend_47 { pt3dadd( -64.2843, -88.6257, 7.40706, 0.59 ) }
    dend_47 { pt3dadd( -64.2399, -89.7635, 7.43944, 0.59 ) }
    dend_47 { pt3dadd( -64.2363, -89.8367, 7.44468, 0.59 ) }
    dend_47 { pt3dadd( -64.213, -90.8349, 7.55712, 0.59 ) }
    dend_47 { pt3dadd( -64.179, -91.5712, 7.67428, 0.59 ) }
    dend_47 { pt3dadd( -64.0862, -92.4146, 7.84314, 0.59 ) }
    dend_47 { pt3dadd( -64.048, -92.6366, 7.89015, 0.59 ) }
    dend_47 { pt3dadd( -63.8994, -93.299, 8.03423, 0.22 ) }
    dend_47 { pt3dadd( -63.8581, -93.4476, 8.06176, 0.22 ) }
    dend_47 { pt3dadd( -63.4604, -94.6848, 8.22593, 0.22 ) }
    dend_47 { pt3dadd( -63.1852, -95.5405, 8.47995, 0.66 ) }
    dend_47 { pt3dadd( -62.9725, -96.3038, 8.77796, 0.44 ) }
    dend_47 { pt3dadd( -62.956, -96.369, 8.80565, 0.44 ) }
    dend_47 { pt3dadd( -62.7998, -97.0598, 9.11786, 1.18 ) }
    dend_47 { pt3dadd( -62.588, -98.1046, 9.56211, 1.84 ) }
    dend_47 { pt3dadd( -62.1983, -100.321, 10.4918, 1.25 ) }
    dend_47 { pt3dadd( -62.0452, -101.166, 10.8142, 0.66 ) }
    dend_47 { pt3dadd( -61.8619, -102.125, 11.1602, 0.44 ) }
    dend_47 { pt3dadd( -61.8335, -102.271, 11.2094, 0.44 ) }
    dend_47 { pt3dadd( -61.5606, -103.67, 11.624, 0.44 ) }
    dend_47 { pt3dadd( -61.2704, -105.183, 11.9687, 0.44 ) }
    dend_47 { pt3dadd( -61.1157, -105.978, 12.1269, 0.44 ) }
    dend_47 { pt3dadd( -60.9124, -106.992, 12.3853, 0.29 ) }
    dend_47 { pt3dadd( -60.8975, -107.071, 12.4075, 0.29 ) }
    dend_47 { pt3dadd( -60.6655, -108.206, 12.7992, 0.29 ) }
    dend_47 { pt3dadd( -60.5913, -108.555, 12.9432, 0.29 ) }
    dend_47 { pt3dadd( -60.2006, -110.353, 13.7551, 1.47 ) }
    dend_47 { pt3dadd( -59.9931, -111.394, 14.3065, 1.99 ) }
    dend_47 { pt3dadd( -59.8242, -112.508, 14.9447, 1.77 ) }
    dend_47 { pt3dadd( -59.6986, -113.93, 15.8074, 1.4 ) }
    dend_47 { pt3dadd( -59.688, -114.739, 16.3196, 0.59 ) }
    dend_47 { pt3dadd( -59.6955, -114.852, 16.3884, 0.59 ) }
    dend_47 { pt3dadd( -59.882, -115.828, 16.9463, 0.37 ) }
    dend_47 { pt3dadd( -60.1861, -116.807, 17.5389, 0.37 ) }
    dend_47 { pt3dadd( -60.521, -117.626, 18.0289, 0.37 ) }
    dend_47 { pt3dadd( -60.7522, -118.144, 18.2767, 0.88 ) }
    dend_47 { pt3dadd( -60.9174, -118.537, 18.4402, 0.88 ) }
    dend_47 { pt3dadd( -61.0984, -119.19, 18.6503, 0.37 ) }
    dend_47 { pt3dadd( -61.1381, -119.666, 18.7442, 0.37 ) }
    dend_47 { pt3dadd( -61.1273, -119.835, 18.7815, 0.37 ) }
    dend_47 { pt3dadd( -61.0087, -120.741, 18.9778, 0.37 ) }
    dend_47 { pt3dadd( -60.9967, -120.811, 18.9945, 0.37 ) }
    dend_47 { pt3dadd( -60.7341, -122.151, 19.3214, 0.37 ) }
    dend_47 { pt3dadd( -60.5339, -123.144, 19.5497, 0.37 ) }
    dend_47 { pt3dadd( -60.2985, -124.287, 19.8276, 0.59 ) }
    dend_47 { pt3dadd( -60.1273, -125.014, 19.9981, 0.59 ) }
    dend_47 { pt3dadd( -59.9983, -125.519, 20.1474, 0.29 ) }
    dend_47 { pt3dadd( -59.9832, -125.587, 20.1689, 0.29 ) }
    dend_47 { pt3dadd( -59.8541, -126.446, 20.5003, 0.29 ) }
    dend_47 { pt3dadd( -59.8271, -126.709, 20.6056, 0.29 ) }
    dend_47 { pt3dadd( -59.7658, -128.095, 21.2356, 0.29 ) }
    dend_47 { pt3dadd( -59.7933, -129.25, 21.8261, 0.81 ) }
    dend_47 { pt3dadd( -59.8633, -130.202, 22.3457, 1.11 ) }
    dend_47 { pt3dadd( -60.0425, -131.503, 23.0919, 1.4 ) }
    dend_47 { pt3dadd( -60.1646, -132.095, 23.4511, 1.4 ) }
    dend_47 { pt3dadd( -60.5698, -133.533, 24.3168, 0.52 ) }
    dend_47 { pt3dadd( -60.8195, -134.203, 24.7157, 0.29 ) }
    dend_47 { pt3dadd( -60.8428, -134.264, 24.7475, 0.29 ) }
    dend_47 { pt3dadd( -61.0249, -134.856, 25.0391, 0.29 ) }
    dend_47 { pt3dadd( -61.056, -135.0, 25.0921, 0.29 ) }
    dend_47 { pt3dadd( -61.09, -135.586, 25.2447, 0.29 ) }
    dend_47 { pt3dadd( -61.0377, -136.202, 25.4059, 0.22 ) }
    dend_47 { pt3dadd( -61.0143, -136.347, 25.4598, 0.22 ) }
    dend_47 { pt3dadd( -60.8318, -137.323, 25.8812, 0.22 ) }
    dend_47 { pt3dadd( -60.8175, -137.449, 25.9701, 0.22 ) }
    dend_47 { pt3dadd( -60.8246, -137.941, 26.3768, 0.22 ) }
    dend_47 { pt3dadd( -60.9558, -139.111, 27.4616, 0.96 ) }
    dend_47 { pt3dadd( -61.0414, -139.557, 27.8698, 0.96 ) }
    dend_47 { pt3dadd( -61.0554, -139.611, 27.9153, 0.96 ) }
    dend_47 { pt3dadd( -61.639, -141.348, 29.2898, 0.44 ) }
    dend_47 { pt3dadd( -61.9313, -142.182, 29.8156, 0.44 ) }
    dend_47 { pt3dadd( -61.954, -142.244, 29.8455, 0.44 ) }
    dend_47 { pt3dadd( -62.2312, -143.098, 30.0538, 0.81 ) }
    dend_47 { pt3dadd( -62.4605, -143.852, 30.1627, 0.81 ) }
    dend_47 { pt3dadd( -62.5728, -144.275, 30.2176, 0.81 ) }
    dend_47 { pt3dadd( -62.7814, -145.356, 30.2939, 0.37 ) }
    dend_47 { pt3dadd( -62.7918, -145.417, 30.3033, 0.37 ) }
    dend_47 { pt3dadd( -62.9842, -146.8, 30.7307, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -62.9997, -146.938, 30.8019, 0.37 ) }
    dend_47 { pt3dadd( -63.1323, -148.413, 31.8034, 1.03 ) }
    dend_47 { pt3dadd( -63.1894, -148.98, 32.2273, 1.03 ) }
    dend_47 { pt3dadd( -63.2122, -149.173, 32.3871, 1.03 ) }
    dend_47 { pt3dadd( -63.3868, -150.172, 33.2807, 0.74 ) }
    dend_47 { pt3dadd( -63.5112, -150.799, 33.9193, 0.22 ) }
    dend_47 { pt3dadd( -63.5243, -150.879, 33.9922, 0.22 ) }
    dend_47 { pt3dadd( -63.6251, -151.778, 34.7066, 0.22 ) }
    dend_47 { pt3dadd( -63.63, -151.835, 34.7507, 0.22 ) }
    dend_47 { pt3dadd( -63.6778, -153.027, 35.614, 1.18 ) }
    dend_47 { pt3dadd( -63.6748, -154.909, 36.885, 0.59 ) }
    dend_47 { pt3dadd( -63.6139, -156.048, 37.5831, 0.59 ) }
    dend_47 { pt3dadd( -63.5242, -156.829, 38.0185, 1.03 ) }
    dend_47 { pt3dadd( -63.5144, -156.884, 38.0459, 1.03 ) }
    dend_47 { pt3dadd( -63.4204, -157.329, 38.2219, 1.11 ) }
    dend_47 { pt3dadd( -63.0976, -158.632, 38.6679, 0.52 ) }
    dend_47 { pt3dadd( -62.7234, -160.127, 39.1373, 0.52 ) }
    dend_47 { pt3dadd( -62.3991, -161.456, 39.58, 1.47 ) }
    dend_47 { pt3dadd( -62.2046, -162.32, 39.8213, 2.43 ) }
    dend_47 { pt3dadd( -61.9085, -163.64, 40.1807, 1.4 ) }
    dend_47 { pt3dadd( -61.4672, -165.612, 40.7014, 0.22 ) }
    dend_47 { pt3dadd( -61.3028, -166.341, 40.8774, 0.22 ) }
    dend_47 { pt3dadd( -61.2565, -166.559, 40.934, 0.22 ) }
    dend_47 { pt3dadd( -60.7828, -169.34, 41.6055, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 24/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -146.658, -62.7169, 1.38614, 0.52 ) }
    dend_45 { pt3dadd( -147.197, -63.1176, 0.179791, 0.52 ) }
    dend_45 { pt3dadd( -147.231, -63.1437, 0.111778, 0.52 ) }
    dend_45 { pt3dadd( -148.862, -64.481, -2.77584, 0.52 ) }
    dend_45 { pt3dadd( -148.93, -64.5479, -2.87972, 0.52 ) }
    dend_45 { pt3dadd( -149.452, -65.069, -3.56842, 0.52 ) }
    dend_45 { pt3dadd( -150.132, -65.7556, -4.39405, 0.96 ) }
    dend_45 { pt3dadd( -150.193, -65.8154, -4.44967, 0.96 ) }
    dend_45 { pt3dadd( -150.725, -66.3421, -4.81026, 0.96 ) }
    dend_45 { pt3dadd( -151.766, -67.3667, -5.23507, 0.44 ) }
    dend_45 { pt3dadd( -152.558, -68.0974, -5.54851, 0.44 ) }
    dend_45 { pt3dadd( -152.677, -68.2007, -5.59485, 0.44 ) }
    dend_45 { pt3dadd( -153.545, -68.8781, -5.89193, 0.44 ) }
    dend_45 { pt3dadd( -154.48, -69.5434, -6.2325, 0.81 ) }
    dend_45 { pt3dadd( -154.66, -69.6561, -6.30101, 0.81 ) }
    dend_45 { pt3dadd( -155.523, -70.136, -6.62984, 1.11 ) }
    dend_45 { pt3dadd( -155.581, -70.17, -6.65063, 1.11 ) }
    dend_45 { pt3dadd( -156.104, -70.4767, -6.84672, 1.11 ) }
    dend_45 { pt3dadd( -157.289, -71.1749, -7.27836, 0.59 ) }
    dend_45 { pt3dadd( -157.349, -71.209, -7.29651, 0.59 ) }
    dend_45 { pt3dadd( -158.409, -71.7856, -7.58195, 0.59 ) }
    dend_45 { pt3dadd( -158.515, -71.8423, -7.60652, 0.59 ) }
    dend_45 { pt3dadd( -159.691, -72.4758, -7.81089, 0.59 ) }
    dend_45 { pt3dadd( -160.857, -73.0997, -7.9476, 0.88 ) }
    dend_45 { pt3dadd( -161.83, -73.6201, -8.02941, 1.18 ) }
    dend_45 { pt3dadd( -162.756, -74.1075, -8.10747, 1.33 ) }
    dend_45 { pt3dadd( -163.691, -74.591, -8.18185, 1.33 ) }
    dend_45 { pt3dadd( -164.743, -75.1113, -8.25745, 0.52 ) }
    dend_45 { pt3dadd( -165.721, -75.5587, -8.37352, 0.52 ) }
    dend_45 { pt3dadd( -166.413, -75.8611, -8.50829, 0.52 ) }
    dend_45 { pt3dadd( -166.865, -76.0683, -8.63813, 0.74 ) }
    dend_45 { pt3dadd( -166.993, -76.1297, -8.6889, 0.74 ) }
    dend_45 { pt3dadd( -167.478, -76.3602, -8.94454, 0.74 ) }
    dend_45 { pt3dadd( -168.651, -76.9922, -9.70436, 0.29 ) }
    dend_45 { pt3dadd( -168.704, -77.0275, -9.73678, 0.29 ) }
    dend_45 { pt3dadd( -169.33, -77.5027, -10.0654, 0.29 ) }
    dend_45 { pt3dadd( -169.402, -77.5609, -10.1036, 0.29 ) }
    dend_45 { pt3dadd( -169.912, -77.9442, -10.3401, 0.59 ) }
    dend_45 { pt3dadd( -170.406, -78.2988, -10.5357, 0.74 ) }
    dend_45 { pt3dadd( -171.223, -78.8154, -10.8899, 0.74 ) }
    dend_45 { pt3dadd( -171.302, -78.8605, -10.9306, 0.74 ) }
    dend_45 { pt3dadd( -172.256, -79.3535, -11.4276, 0.37 ) }
    dend_45 { pt3dadd( -172.929, -79.6933, -11.781, 0.37 ) }
    dend_45 { pt3dadd( -173.044, -79.7486, -11.8404, 0.37 ) }
    dend_45 { pt3dadd( -174.426, -80.4155, -12.5602, 1.11 ) }
    dend_45 { pt3dadd( -174.98, -80.7182, -12.8109, 1.11 ) }
    dend_45 { pt3dadd( -175.644, -81.1292, -13.0408, 0.44 ) }
    dend_45 { pt3dadd( -175.756, -81.2139, -13.0626, 0.44 ) }
    dend_45 { pt3dadd( -176.243, -81.6299, -13.1123, 0.44 ) }
    dend_45 { pt3dadd( -176.418, -81.7776, -13.1262, 0.44 ) }
    dend_45 { pt3dadd( -177.522, -82.6947, -13.1561, 0.44 ) }
    dend_45 { pt3dadd( -177.774, -82.8855, -13.181, 0.44 ) }
    dend_45 { pt3dadd( -178.388, -83.3409, -13.3281, 0.44 ) }
    dend_45 { pt3dadd( -178.444, -83.3811, -13.3462, 0.44 ) }
    dend_45 { pt3dadd( -179.487, -84.1438, -13.7028, 0.81 ) }
    dend_45 { pt3dadd( -180.36, -84.7681, -14.0119, 1.18 ) }
    dend_45 { pt3dadd( -181.016, -85.259, -14.2461, 1.18 ) }
    dend_45 { pt3dadd( -182.018, -86.0334, -14.585, 0.88 ) }
    dend_45 { pt3dadd( -182.623, -86.5172, -14.7787, 0.52 ) }
    dend_45 { pt3dadd( -183.367, -87.1469, -14.9897, 0.52 ) }
    dend_45 { pt3dadd( -183.419, -87.1947, -14.9999, 0.52 ) }
    dend_45 { pt3dadd( -184.409, -88.0965, -15.1986, 0.52 ) }
    dend_45 { pt3dadd( -184.462, -88.1432, -15.2083, 0.52 ) }
    dend_45 { pt3dadd( -185.596, -89.0388, -15.4361, 0.44 ) }
    dend_45 { pt3dadd( -185.709, -89.1205, -15.466, 0.44 ) }
    dend_45 { pt3dadd( -187.152, -89.9939, -15.9185, 0.44 ) }
    dend_45 { pt3dadd( -187.725, -90.3011, -16.1034, 0.81 ) }
    dend_45 { pt3dadd( -188.258, -90.5647, -16.3329, 1.11 ) }
    dend_45 { pt3dadd( -189.409, -91.1331, -16.914, 0.44 ) }
    dend_45 { pt3dadd( -189.531, -91.1917, -16.9816, 0.44 ) }
    dend_45 { pt3dadd( -190.531, -91.6767, -17.5761, 0.44 ) }
    dend_45 { pt3dadd( -190.595, -91.7066, -17.6147, 0.44 ) }
    dend_45 { pt3dadd( -192.148, -92.4868, -18.4749, 0.44 ) }
    dend_45 { pt3dadd( -192.338, -92.5925, -18.5678, 0.44 ) }
    dend_45 { pt3dadd( -193.345, -93.2137, -18.9253, 1.03 ) }
    dend_45 { pt3dadd( -193.46, -93.2896, -18.958, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_45 { pt3dadd( -194.362, -93.9167, -19.1032, 1.03 ) }
    dend_45 { pt3dadd( -194.429, -93.9622, -19.1091, 1.03 ) }
    dend_45 { pt3dadd( -195.053, -94.3869, -19.1128, 0.22 ) }
    dend_45 { pt3dadd( -195.884, -95.0022, -19.1307, 0.22 ) }
    dend_45 { pt3dadd( -195.948, -95.0529, -19.1364, 0.22 ) }
    dend_45 { pt3dadd( -197.685, -96.4223, -19.3595, 0.22 ) }
    dend_45 { pt3dadd( -198.544, -97.0594, -19.535, 0.81 ) }
    dend_45 { pt3dadd( -199.179, -97.509, -19.69, 1.47 ) }
    dend_45 { pt3dadd( -199.827, -97.9501, -19.8719, 1.47 ) }
    dend_45 { pt3dadd( -201.083, -98.776, -20.2415, 0.22 ) }
    dend_45 { pt3dadd( -202.702, -99.7966, -20.734, 0.22 ) }
    dend_45 { pt3dadd( -204.147, -100.671, -21.1823, 0.81 ) }
    dend_45 { pt3dadd( -204.842, -101.075, -21.3877, 0.81 ) }
    dend_45 { pt3dadd( -204.91, -101.113, -21.4082, 0.81 ) }
    dend_45 { pt3dadd( -206.051, -101.744, -21.6988, 0.22 ) }
    dend_45 { pt3dadd( -206.171, -101.812, -21.7217, 0.22 ) }
    dend_45 { pt3dadd( -207.711, -102.759, -21.9502, 0.22 ) }
    dend_45 { pt3dadd( -207.802, -102.816, -21.9563, 0.22 ) }
    dend_45 { pt3dadd( -209.063, -103.581, -22.0221, 0.22 ) }
    dend_45 { pt3dadd( -209.884, -104.072, -22.0474, 0.81 ) }
    dend_45 { pt3dadd( -209.945, -104.108, -22.0476, 0.81 ) }
    dend_45 { pt3dadd( -210.564, -104.441, -22.0335, 0.81 ) }
    dend_45 { pt3dadd( -211.26, -104.765, -21.9254, 0.15 ) }
    dend_45 { pt3dadd( -211.467, -104.859, -21.8763, 0.15 ) }
    dend_45 { pt3dadd( -212.324, -105.235, -21.6154, 0.15 ) }
    dend_45 { pt3dadd( -212.386, -105.262, -21.5972, 0.15 ) }
    dend_45 { pt3dadd( -213.26, -105.634, -21.3642, 0.15 ) }
    dend_45 { pt3dadd( -214.569, -106.192, -21.0221, 0.74 ) }
    dend_45 { pt3dadd( -215.277, -106.491, -20.8608, 0.88 ) }
    dend_45 { pt3dadd( -215.937, -106.77, -20.7433, 0.88 ) }
    dend_45 { pt3dadd( -216.001, -106.798, -20.7354, 0.88 ) }
    dend_45 { pt3dadd( -217.219, -107.34, -20.6564, 0.22 ) }
    dend_45 { pt3dadd( -217.283, -107.369, -20.6575, 0.22 ) }
    dend_45 { pt3dadd( -218.292, -107.854, -20.8089, 0.22 ) }
    dend_45 { pt3dadd( -218.784, -108.107, -20.8915, 0.52 ) }
    dend_45 { pt3dadd( -219.398, -108.479, -21.0228, 0.52 ) }
    dend_45 { pt3dadd( -219.457, -108.517, -21.0361, 0.52 ) }
    dend_45 { pt3dadd( -219.936, -108.853, -21.1446, 0.52 ) }
    dend_45 { pt3dadd( -220.859, -109.516, -21.3584, 0.22 ) }
    dend_45 { pt3dadd( -221.876, -110.286, -21.5092, 0.22 ) }
    dend_45 { pt3dadd( -222.87, -111.055, -21.5845, 1.03 ) }
    dend_45 { pt3dadd( -223.576, -111.629, -21.5928, 1.4 ) }
    dend_45 { pt3dadd( -224.351, -112.277, -21.5548, 1.4 ) }
    dend_45 { pt3dadd( -224.474, -112.377, -21.54, 1.4 ) }
    dend_45 { pt3dadd( -225.921, -113.493, -21.2477, 0.22 ) }
    dend_45 { pt3dadd( -226.11, -113.626, -21.2057, 0.22 ) }
    dend_45 { pt3dadd( -226.792, -114.069, -21.043, 0.22 ) }
    dend_45 { pt3dadd( -227.068, -114.243, -20.9918, 0.22 ) }
    dend_45 { pt3dadd( -228.569, -115.106, -20.8125, 0.22 ) }
    dend_45 { pt3dadd( -228.765, -115.212, -20.8053, 0.22 ) }
    dend_45 { pt3dadd( -230.096, -115.938, -21.0447, 0.22 ) }
    dend_45 { pt3dadd( -230.163, -115.978, -21.0647, 0.22 ) }
    dend_45 { pt3dadd( -230.564, -116.245, -21.2175, 0.74 ) }
    dend_45 { pt3dadd( -230.693, -116.344, -21.2764, 0.74 ) }
    dend_45 { pt3dadd( -231.374, -116.939, -21.6379, 0.74 ) }
    dend_45 { pt3dadd( -233.518, -118.931, -22.8238, 0.22 ) }
    dend_45 { pt3dadd( -234.185, -119.585, -23.2114, 0.88 ) }
    dend_45 { pt3dadd( -234.746, -120.137, -23.5167, 1.11 ) }
    dend_45 { pt3dadd( -234.896, -120.286, -23.5926, 1.11 ) }
    dend_45 { pt3dadd( -235.328, -120.702, -23.7806, 1.11 ) }
    dend_45 { pt3dadd( -235.953, -121.286, -23.9971, 0.22 ) }
    dend_45 { pt3dadd( -236.072, -121.379, -24.0152, 0.15 ) }
    dend_45 { pt3dadd( -236.772, -121.85, -24.0912, 0.15 ) }
    dend_45 { pt3dadd( -236.912, -121.938, -24.1192, 0.15 ) }
    dend_45 { pt3dadd( -238.24, -122.774, -24.4679, 0.15 ) }
    dend_45 { pt3dadd( -238.376, -122.862, -24.5109, 0.15 ) }
    dend_45 { pt3dadd( -239.626, -123.69, -24.8895, 0.15 ) }
    dend_45 { pt3dadd( -239.682, -123.729, -24.9089, 0.15 ) }
    dend_45 { pt3dadd( -240.801, -124.559, -25.3361, 0.81 ) }
    dend_45 { pt3dadd( -240.862, -124.607, -25.3606, 0.81 ) }
    dend_45 { pt3dadd( -241.418, -125.04, -25.564, 0.81 ) }
    dend_45 { pt3dadd( -243.372, -126.592, -26.3436, 0.22 ) }
    dend_45 { pt3dadd( -244.182, -127.242, -26.6668, 0.96 ) }
    dend_45 { pt3dadd( -244.466, -127.454, -26.7728, 0.96 ) }
    dend_45 { pt3dadd( -245.435, -128.128, -27.1028, 0.15 ) }
    dend_45 { pt3dadd( -247.108, -129.203, -27.6728, 0.15 ) }
    dend_45 { pt3dadd( -248.793, -130.226, -28.2572, 1.33 ) }
    dend_45 { pt3dadd( -249.46, -130.604, -28.4919, 1.33 ) }
    dend_45 { pt3dadd( -250.213, -131.002, -28.7179, 0.37 ) }
    dend_45 { pt3dadd( -250.299, -131.047, -28.7417, 0.37 ) }
    dend_45 { pt3dadd( -251.275, -131.543, -28.9562, 0.37 ) }
    dend_45 { pt3dadd( -251.838, -131.826, -29.0348, 0.81 ) }
    dend_45 { pt3dadd( -251.965, -131.889, -29.0337, 0.81 ) }
    dend_45 { pt3dadd( -252.524, -132.193, -29.0312, 0.59 ) }
    dend_45 { pt3dadd( -253.031, -132.521, -29.0281, 0.29 ) }
    dend_45 { pt3dadd( -253.742, -133.109, -29.2051, 0.29 ) }
    dend_45 { pt3dadd( -253.79, -133.156, -29.2273, 0.29 ) }
    dend_45 { pt3dadd( -254.398, -133.75, -29.7292, 0.66 ) }
    dend_45 { pt3dadd( -254.707, -134.055, -30.0357, 0.96 ) }
    dend_45 { pt3dadd( -255.196, -134.492, -30.6567, 0.44 ) }
    dend_45 { pt3dadd( -256.654, -135.643, -33.0954, 0.37 ) }
    dend_45 { pt3dadd( -256.744, -135.705, -33.2872, 0.81 ) }
    dend_45 { pt3dadd( -257.974, -136.437, -36.1461, 0.37 ) }
    dend_45 { pt3dadd( -258.21, -136.57, -36.7861, 0.37 ) }
    dend_45 { pt3dadd( -259.217, -137.082, -39.7499, 0.88 ) }
    dend_45 { pt3dadd( -260.243, -137.552, -43.1319, 0.88 ) }
    dend_45 { pt3dadd( -261.294, -137.928, -47.0264, 0.81 ) }
    dend_45 { pt3dadd( -261.389, -137.962, -47.424, 0.81 ) }
    dend_45 { pt3dadd( -262.428, -138.377, -52.3154, 0.37 ) }
    dend_45 { pt3dadd( -262.441, -138.384, -52.3838, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( -262.972, -138.758, -55.2077, 0.37 ) }
    dend_45 { pt3dadd( -263.557, -139.262, -58.1208, 0.22 ) }
    dend_45 { pt3dadd( -263.59, -139.296, -58.2702, 0.22 ) }
    dend_45 { pt3dadd( -263.946, -139.696, -59.4922, 0.22 ) }
    dend_45 { pt3dadd( -263.97, -139.723, -59.5526, 0.22 ) }
    dend_45 { pt3dadd( -265.317, -141.044, -62.094, 0.22 ) }
    dend_45 { pt3dadd( -265.516, -141.22, -62.3595, 0.81 ) }
    dend_45 { pt3dadd( -267.286, -142.587, -64.2672, 0.37 ) }
    dend_45 { pt3dadd( -268.889, -143.522, -65.7429, 0.37 ) }
    dend_45 { pt3dadd( -268.95, -143.548, -65.7893, 0.37 ) }
    dend_45 { pt3dadd( -270.591, -144.132, -66.7838, 0.37 ) }
    dend_45 { pt3dadd( -271.122, -144.257, -66.9695, 0.81 ) }
    dend_45 { pt3dadd( -272.626, -144.492, -67.3515, 0.29 ) }
    dend_45 { pt3dadd( -274.309, -144.56, -67.5077, 0.29 ) }
    dend_45 { pt3dadd( -274.906, -144.575, -67.5199, 0.66 ) }
    dend_45 { pt3dadd( -274.975, -144.583, -67.5167, 0.66 ) }
    dend_45 { pt3dadd( -275.809, -144.794, -67.4177, 0.66 ) }
    dend_45 { pt3dadd( -275.887, -144.814, -67.4141, 0.66 ) }
    dend_45 { pt3dadd( -276.972, -145.113, -67.4015, 0.44 ) }
    dend_45 { pt3dadd( -278.55, -145.59, -67.5297, 0.15 ) }
    dend_45 { pt3dadd( -278.683, -145.631, -67.5479, 0.15 ) }
    dend_45 { pt3dadd( -280.782, -146.32, -67.9775, 0.15 ) }
    dend_45 { pt3dadd( -282.609, -146.991, -68.4488, 0.59 ) }
    dend_45 { pt3dadd( -284.252, -147.672, -68.9355, 0.15 ) }
    dend_45 { pt3dadd( -285.914, -148.475, -69.8013, 0.15 ) }
    dend_45 { pt3dadd( -286.011, -148.531, -69.8701, 0.15 ) }
    dend_45 { pt3dadd( -287.334, -149.434, -70.9802, 0.52 ) }
    dend_45 { pt3dadd( -287.83, -149.876, -71.4766, 1.03 ) }
    dend_45 { pt3dadd( -288.386, -150.53, -72.1046, 1.03 ) }
    dend_45 { pt3dadd( -290.403, -153.483, -74.9023, 0.22 ) }
    dend_45 { pt3dadd( -290.928, -154.353, -75.7706, 0.22 ) }
    dend_45 { pt3dadd( -290.966, -154.421, -75.8362, 0.22 ) }
    dend_45 { pt3dadd( -291.546, -155.569, -76.9297, 0.22 ) }
    dend_45 { pt3dadd( -292.562, -157.62, -78.8602, 0.22 ) }
    dend_45 { pt3dadd( -292.587, -157.671, -78.9037, 0.22 ) }
    dend_45 { pt3dadd( -293.5, -159.395, -80.0391, 0.88 ) }
    dend_45 { pt3dadd( -293.819, -159.928, -80.4624, 0.88 ) }
    dend_45 { pt3dadd( -293.986, -160.178, -80.6815, 0.15 ) }
    dend_45 { pt3dadd( -294.026, -160.226, -80.7332, 0.15 ) }
    dend_45 { pt3dadd( -294.624, -160.842, -81.5672, 0.15 ) }
    dend_45 { pt3dadd( -294.664, -160.888, -81.6216, 0.15 ) }
    dend_45 { pt3dadd( -295.346, -161.894, -82.7422, 0.81 ) }
    dend_45 { pt3dadd( -295.496, -162.147, -83.1103, 0.81 ) }
    dend_45 { pt3dadd( -295.514, -162.184, -83.1681, 0.81 ) }
    dend_45 { pt3dadd( -295.992, -163.367, -85.2109, 0.15 ) }
    dend_45 { pt3dadd( -296.227, -164.091, -86.488, 0.15 ) }
    dend_45 { pt3dadd( -296.578, -164.906, -88.0964, 0.15 ) }
    dend_45 { pt3dadd( -297.144, -166.06, -90.4122, 0.15 ) }
    dend_45 { pt3dadd( -297.167, -166.101, -90.4997, 0.15 ) }
    dend_45 { pt3dadd( -297.548, -166.662, -91.7255, 1.18 ) }
    dend_45 { pt3dadd( -297.757, -166.925, -92.3312, 1.18 ) }
    dend_45 { pt3dadd( -298.661, -167.91, -94.8454, 0.22 ) }
    dend_45 { pt3dadd( -298.918, -168.148, -95.4509, 0.22 ) }
    dend_45 { pt3dadd( -298.947, -168.172, -95.5101, 0.22 ) }
    dend_45 { pt3dadd( -299.958, -168.97, -97.4681, 0.22 ) }
    dend_45 { pt3dadd( -299.992, -168.992, -97.5258, 0.59 ) }
    dend_45 { pt3dadd( -306.821, -175.259, -101.737, 0.59 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 57/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -146.658, -62.7169, 1.38614, 0.59 ) }
    dend_44 { pt3dadd( -148.27, -62.6593, 2.41546, 0.59 ) }
    dend_44 { pt3dadd( -149.359, -62.6749, 3.04802, 0.59 ) }
    dend_44 { pt3dadd( -151.032, -62.8484, 3.88894, 0.29 ) }
    dend_44 { pt3dadd( -152.113, -63.007, 4.38907, 0.29 ) }
    dend_44 { pt3dadd( -152.185, -63.0203, 4.42107, 0.29 ) }
    dend_44 { pt3dadd( -153.779, -63.321, 5.08453, 0.29 ) }
    dend_44 { pt3dadd( -153.835, -63.3354, 5.10183, 0.29 ) }
    dend_44 { pt3dadd( -155.197, -63.7526, 5.46654, 0.29 ) }
    dend_44 { pt3dadd( -155.262, -63.7729, 5.48162, 0.29 ) }
    dend_44 { pt3dadd( -156.282, -64.0688, 5.74667, 0.29 ) }
    dend_44 { pt3dadd( -157.494, -64.4043, 6.06676, 0.66 ) }
    dend_44 { pt3dadd( -158.3, -64.6348, 6.28495, 1.18 ) }
    dend_44 { pt3dadd( -158.887, -64.8132, 6.43734, 1.18 ) }
    dend_44 { pt3dadd( -160.182, -65.2211, 6.76419, 0.37 ) }
    dend_44 { pt3dadd( -161.619, -65.7153, 7.09028, 0.37 ) }
    dend_44 { pt3dadd( -162.504, -66.0428, 7.25163, 0.37 ) }
    dend_44 { pt3dadd( -163.04, -66.2523, 7.3115, 0.59 ) }
    dend_44 { pt3dadd( -163.506, -66.4156, 7.32882, 0.44 ) }
    dend_44 { pt3dadd( -163.573, -66.4366, 7.32646, 0.44 ) }
    dend_44 { pt3dadd( -164.523, -66.6799, 7.21061, 0.44 ) }
    dend_44 { pt3dadd( -165.527, -66.8871, 7.06561, 0.44 ) }
    dend_44 { pt3dadd( -166.615, -67.0842, 6.91752, 0.44 ) }
    dend_44 { pt3dadd( -167.641, -67.2598, 6.83353, 0.44 ) }
    dend_44 { pt3dadd( -167.779, -67.282, 6.82784, 0.44 ) }
    dend_44 { pt3dadd( -168.581, -67.4019, 6.82491, 0.44 ) }
    dend_44 { pt3dadd( -169.4, -67.5181, 6.84689, 0.29 ) }
    dend_44 { pt3dadd( -170.189, -67.6198, 6.87875, 0.29 ) }
    dend_44 { pt3dadd( -171.2, -67.7607, 6.93365, 0.88 ) }
    dend_44 { pt3dadd( -172.107, -67.8913, 6.97108, 0.88 ) }
    dend_44 { pt3dadd( -172.843, -68.0011, 6.9907, 0.52 ) }
    dend_44 { pt3dadd( -174.548, -68.2719, 6.98623, 0.52 ) }
    dend_44 { pt3dadd( -175.598, -68.4348, 6.95153, 1.18 ) }
    dend_44 { pt3dadd( -176.544, -68.5739, 6.89129, 1.18 ) }
    dend_44 { pt3dadd( -176.623, -68.586, 6.8838, 1.18 ) }
    dend_44 { pt3dadd( -177.448, -68.7267, 6.80863, 1.18 ) }
    dend_44 { pt3dadd( -178.222, -68.8703, 6.7467, 0.29 ) }
    dend_44 { pt3dadd( -178.872, -68.985, 6.70858, 0.29 ) }
    dend_44 { pt3dadd( -180.551, -69.2677, 6.6358, 0.29 ) }
    dend_44 { pt3dadd( -181.074, -69.3459, 6.6165, 1.25 ) }
    dend_44 { pt3dadd( -181.811, -69.4543, 6.59501, 1.25 ) }
    dend_44 { pt3dadd( -182.724, -69.5816, 6.57872, 0.52 ) }
    dend_44 { pt3dadd( -184.034, -69.7574, 6.57872, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -184.113, -69.7686, 6.57872, 0.52 ) }
    dend_44 { pt3dadd( -184.714, -69.8559, 6.57872, 0.88 ) }
    dend_44 { pt3dadd( -184.783, -69.8651, 6.58003, 0.88 ) }
    dend_44 { pt3dadd( -185.15, -69.9093, 6.59232, 0.88 ) }
    dend_44 { pt3dadd( -186.108, -70.0056, 6.63575, 0.29 ) }
    dend_44 { pt3dadd( -188.098, -70.2054, 6.74232, 0.29 ) }
    dend_44 { pt3dadd( -188.167, -70.2126, 6.74605, 0.29 ) }
    dend_44 { pt3dadd( -189.108, -70.3239, 6.79603, 0.66 ) }
    dend_44 { pt3dadd( -189.188, -70.334, 6.79998, 0.66 ) }
    dend_44 { pt3dadd( -189.989, -70.4438, 6.85164, 0.66 ) }
    dend_44 { pt3dadd( -190.641, -70.5361, 6.90124, 0.66 ) }
    dend_44 { pt3dadd( -191.844, -70.6864, 6.99838, 0.22 ) }
    dend_44 { pt3dadd( -192.496, -70.7587, 7.04786, 0.88 ) }
    dend_44 { pt3dadd( -193.301, -70.8387, 7.10032, 0.88 ) }
    dend_44 { pt3dadd( -194.253, -70.931, 7.16624, 0.22 ) }
    dend_44 { pt3dadd( -194.62, -70.9697, 7.19339, 0.22 ) }
    dend_44 { pt3dadd( -195.45, -71.0788, 7.25491, 0.22 ) }
    dend_44 { pt3dadd( -195.529, -71.0903, 7.26062, 0.22 ) }
    dend_44 { pt3dadd( -196.332, -71.2413, 7.36621, 0.22 ) }
    dend_44 { pt3dadd( -196.434, -71.2666, 7.38331, 0.22 ) }
    dend_44 { pt3dadd( -197.057, -71.4505, 7.49703, 0.81 ) }
    dend_44 { pt3dadd( -197.748, -71.6749, 7.63336, 0.81 ) }
    dend_44 { pt3dadd( -197.813, -71.6992, 7.6462, 0.81 ) }
    dend_44 { pt3dadd( -199.149, -72.1635, 7.86781, 0.22 ) }
    dend_44 { pt3dadd( -200.568, -72.616, 8.0646, 0.22 ) }
    dend_44 { pt3dadd( -200.726, -72.6644, 8.08132, 0.22 ) }
    dend_44 { pt3dadd( -201.532, -72.8997, 8.14656, 0.96 ) }
    dend_44 { pt3dadd( -202.529, -73.1929, 8.22903, 0.96 ) }
    dend_44 { pt3dadd( -203.769, -73.5652, 8.31954, 0.22 ) }
    dend_44 { pt3dadd( -204.553, -73.8239, 8.38617, 0.22 ) }
    dend_44 { pt3dadd( -205.782, -74.2641, 8.55662, 0.22 ) }
    dend_44 { pt3dadd( -205.857, -74.2919, 8.56982, 0.22 ) }
    dend_44 { pt3dadd( -206.816, -74.6712, 8.78554, 1.03 ) }
    dend_44 { pt3dadd( -207.558, -74.9606, 8.97463, 1.18 ) }
    dend_44 { pt3dadd( -208.652, -75.4133, 9.27717, 0.22 ) }
    dend_44 { pt3dadd( -208.927, -75.5166, 9.34818, 0.22 ) }
    dend_44 { pt3dadd( -209.541, -75.6772, 9.52535, 0.22 ) }
    dend_44 { pt3dadd( -209.685, -75.7025, 9.56035, 0.22 ) }
    dend_44 { pt3dadd( -211.195, -75.8557, 9.85779, 0.22 ) }
    dend_44 { pt3dadd( -211.641, -75.8927, 9.95225, 0.88 ) }
    dend_44 { pt3dadd( -212.218, -75.9267, 10.0734, 0.88 ) }
    dend_44 { pt3dadd( -214.457, -76.0869, 10.5944, 0.22 ) }
    dend_44 { pt3dadd( -215.312, -76.16, 10.8079, 0.96 ) }
    dend_44 { pt3dadd( -215.591, -76.19, 10.8824, 0.96 ) }
    dend_44 { pt3dadd( -217.454, -76.5023, 11.4776, 0.22 ) }
    dend_44 { pt3dadd( -217.528, -76.519, 11.5031, 0.22 ) }
    dend_44 { pt3dadd( -218.14, -76.6983, 11.7159, 0.96 ) }
    dend_44 { pt3dadd( -218.617, -76.8813, 11.8745, 0.96 ) }
    dend_44 { pt3dadd( -218.67, -76.9026, 11.8948, 0.96 ) }
    dend_44 { pt3dadd( -219.858, -77.3584, 12.3311, 0.22 ) }
    dend_44 { pt3dadd( -219.921, -77.3777, 12.3544, 0.22 ) }
    dend_44 { pt3dadd( -220.717, -77.5932, 12.6688, 0.22 ) }
    dend_44 { pt3dadd( -220.854, -77.6236, 12.7223, 0.52 ) }
    dend_44 { pt3dadd( -221.067, -77.6669, 12.8021, 0.52 ) }
    dend_44 { pt3dadd( -221.282, -77.7076, 12.8737, 0.52 ) }
    dend_44 { pt3dadd( -222.142, -77.8739, 13.1039, 0.15 ) }
    dend_44 { pt3dadd( -222.388, -77.953, 13.1714, 0.15 ) }
    dend_44 { pt3dadd( -223.124, -78.2612, 13.3963, 0.15 ) }
    dend_44 { pt3dadd( -223.267, -78.3255, 13.4403, 0.52 ) }
    dend_44 { pt3dadd( -223.404, -78.3918, 13.481, 0.52 ) }
    dend_44 { pt3dadd( -223.862, -78.6281, 13.5963, 0.52 ) }
    dend_44 { pt3dadd( -224.981, -79.2888, 13.8341, 0.22 ) }
    dend_44 { pt3dadd( -225.142, -79.39, 13.867, 0.22 ) }
    dend_44 { pt3dadd( -226.076, -80.0034, 14.0481, 0.88 ) }
    dend_44 { pt3dadd( -226.523, -80.2872, 14.12, 1.03 ) }
    dend_44 { pt3dadd( -227.732, -81.0394, 14.2816, 0.22 ) }
    dend_44 { pt3dadd( -228.496, -81.5011, 14.3488, 0.22 ) }
    dend_44 { pt3dadd( -229.135, -81.8833, 14.3714, 0.22 ) }
    dend_44 { pt3dadd( -229.609, -82.157, 14.3713, 0.22 ) }
    dend_44 { pt3dadd( -230.215, -82.496, 14.3529, 0.22 ) }
    dend_44 { pt3dadd( -230.278, -82.5273, 14.3499, 0.22 ) }
    dend_44 { pt3dadd( -231.524, -83.0638, 14.2708, 0.22 ) }
    dend_44 { pt3dadd( -231.666, -83.1143, 14.2606, 0.22 ) }
    dend_44 { pt3dadd( -232.897, -83.5058, 14.1745, 0.22 ) }
    dend_44 { pt3dadd( -232.964, -83.5273, 14.1724, 0.22 ) }
    dend_44 { pt3dadd( -233.685, -83.7605, 14.1738, 0.81 ) }
    dend_44 { pt3dadd( -233.844, -83.8109, 14.1772, 0.81 ) }
    dend_44 { pt3dadd( -234.337, -83.9563, 14.2081, 0.81 ) }
    dend_44 { pt3dadd( -235.111, -84.2122, 14.2697, 0.81 ) }
    dend_44 { pt3dadd( -236.283, -84.6277, 14.3796, 0.22 ) }
    dend_44 { pt3dadd( -236.357, -84.6581, 14.3864, 0.22 ) }
    dend_44 { pt3dadd( -237.375, -85.1329, 14.506, 0.22 ) }
    dend_44 { pt3dadd( -238.343, -85.6299, 14.6282, 0.59 ) }
    dend_44 { pt3dadd( -240.06, -86.5499, 14.8395, 0.22 ) }
    dend_44 { pt3dadd( -240.13, -86.5887, 14.8478, 0.22 ) }
    dend_44 { pt3dadd( -241.717, -87.4577, 15.0132, 0.22 ) }
    dend_44 { pt3dadd( -242.493, -87.881, 15.0886, 1.03 ) }
    dend_44 { pt3dadd( -243.241, -88.2807, 15.1555, 1.03 ) }
    dend_44 { pt3dadd( -244.87, -89.1106, 15.2749, 0.22 ) }
    dend_44 { pt3dadd( -244.943, -89.1434, 15.2757, 0.22 ) }
    dend_44 { pt3dadd( -245.149, -89.2254, 15.2683, 0.74 ) }
    dend_44 { pt3dadd( -246.618, -89.7193, 15.1393, 0.22 ) }
    dend_44 { pt3dadd( -247.042, -89.849, 15.0823, 0.66 ) }
    dend_44 { pt3dadd( -247.537, -89.9939, 15.0057, 0.66 ) }
    dend_44 { pt3dadd( -249.875, -90.698, 14.5911, 0.22 ) }
    dend_44 { pt3dadd( -249.982, -90.7316, 14.5723, 0.22 ) }
    dend_44 { pt3dadd( -250.463, -90.8855, 14.4866, 0.81 ) }
    dend_44 { pt3dadd( -250.538, -90.9104, 14.4731, 0.81 ) }
    dend_44 { pt3dadd( -251.331, -91.2173, 14.313, 0.81 ) }
    dend_44 { pt3dadd( -251.394, -91.2486, 14.3019, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -252.875, -92.0896, 14.0794, 0.22 ) }
    dend_44 { pt3dadd( -253.004, -92.1675, 14.0597, 0.22 ) }
    dend_44 { pt3dadd( -253.406, -92.4142, 13.9985, 0.22 ) }
    dend_44 { pt3dadd( -254.145, -92.8792, 13.8883, 0.22 ) }
    dend_44 { pt3dadd( -256.726, -94.6154, 13.5993, 0.22 ) }
    dend_44 { pt3dadd( -256.792, -94.6617, 13.5949, 0.22 ) }
    dend_44 { pt3dadd( -257.171, -94.9395, 13.5859, 0.96 ) }
    dend_44 { pt3dadd( -258.053, -95.5665, 13.59, 0.96 ) }
    dend_44 { pt3dadd( -258.751, -96.05, 13.6165, 0.22 ) }
    dend_44 { pt3dadd( -260.176, -96.9816, 13.7335, 0.22 ) }
    dend_44 { pt3dadd( -260.816, -97.3853, 13.7947, 0.66 ) }
    dend_44 { pt3dadd( -261.492, -97.7883, 13.852, 0.66 ) }
    dend_44 { pt3dadd( -262.273, -98.2307, 13.934, 0.22 ) }
    dend_44 { pt3dadd( -262.416, -98.3051, 13.9509, 0.22 ) }
    dend_44 { pt3dadd( -263.404, -98.7274, 14.07, 0.22 ) }
    dend_44 { pt3dadd( -263.497, -98.7603, 14.0805, 0.22 ) }
    dend_44 { pt3dadd( -264.84, -99.2059, 14.2937, 0.22 ) }
    dend_44 { pt3dadd( -265.681, -99.4702, 14.4609, 0.96 ) }
    dend_44 { pt3dadd( -266.362, -99.6931, 14.6142, 0.96 ) }
    dend_44 { pt3dadd( -266.85, -99.879, 14.7388, 0.96 ) }
    dend_44 { pt3dadd( -266.946, -99.9189, 14.766, 0.96 ) }
    dend_44 { pt3dadd( -268.792, -100.746, 15.3039, 0.22 ) }
    dend_44 { pt3dadd( -268.923, -100.809, 15.3434, 0.22 ) }
    dend_44 { pt3dadd( -269.615, -101.166, 15.5377, 1.03 ) }
    dend_44 { pt3dadd( -271.914, -102.436, 16.2404, 0.22 ) }
    dend_44 { pt3dadd( -271.974, -102.471, 16.2525, 0.22 ) }
    dend_44 { pt3dadd( -272.342, -102.702, 16.2921, 1.03 ) }
    dend_44 { pt3dadd( -272.466, -102.79, 16.2898, 1.03 ) }
    dend_44 { pt3dadd( -273.011, -103.203, 16.2326, 1.03 ) }
    dend_44 { pt3dadd( -273.984, -104.071, 16.0112, 0.22 ) }
    dend_44 { pt3dadd( -275.556, -105.628, 15.2128, 0.22 ) }
    dend_44 { pt3dadd( -275.754, -105.833, 15.0996, 0.22 ) }
    dend_44 { pt3dadd( -276.259, -106.376, 14.7832, 0.22 ) }
    dend_44 { pt3dadd( -276.348, -106.471, 14.7244, 0.22 ) }
    dend_44 { pt3dadd( -277.699, -107.929, 13.7752, 0.22 ) }
    dend_44 { pt3dadd( -278.828, -109.047, 13.0256, 0.66 ) }
    dend_44 { pt3dadd( -279.355, -109.507, 12.7598, 0.66 ) }
    dend_44 { pt3dadd( -279.409, -109.547, 12.7366, 0.66 ) }
    dend_44 { pt3dadd( -280.323, -110.14, 12.4367, 0.22 ) }
    dend_44 { pt3dadd( -280.45, -110.215, 12.4004, 0.22 ) }
    dend_44 { pt3dadd( -281.613, -110.741, 12.1925, 0.22 ) }
    dend_44 { pt3dadd( -281.669, -110.765, 12.1924, 0.22 ) }
    dend_44 { pt3dadd( -283.085, -111.335, 12.2284, 0.22 ) }
    dend_44 { pt3dadd( -283.875, -111.665, 12.2842, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 27.5659, 89.5163, 54.1933, 0.52 ) }
    dend_39 { pt3dadd( 27.883, 89.5984, 54.1753, 0.52 ) }
    dend_39 { pt3dadd( 28.5531, 89.7719, 54.1374, 0.52 ) }
    dend_39 { pt3dadd( 29.4186, 89.9959, 54.0883, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 48/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 27.5659, 89.5163, 54.1933, 0.52 ) }
    dend_38 { pt3dadd( 27.9817, 90.1422, 54.1441, 0.52 ) }
    dend_38 { pt3dadd( 28.6143, 91.0946, 54.0694, 0.52 ) }
    dend_38 { pt3dadd( 29.1592, 91.9148, 54.005, 0.52 ) }
    dend_38 { pt3dadd( 29.5144, 92.4495, 53.963, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 53/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -55.618, -12.6633, 30.8638, 0.88 ) }
    dend_30 { pt3dadd( -55.4596, -13.2943, 31.1132, 0.88 ) }
    dend_30 { pt3dadd( -55.1563, -15.1229, 31.7117, 0.96 ) }
    dend_30 { pt3dadd( -55.0772, -16.1821, 32.0976, 0.96 ) }
    dend_30 { pt3dadd( -55.0956, -16.9597, 32.5364, 0.96 ) }
    dend_30 { pt3dadd( -55.1652, -17.6895, 33.0739, 0.96 ) }
    dend_30 { pt3dadd( -55.27, -18.3015, 33.5685, 0.96 ) }
    dend_30 { pt3dadd( -55.4603, -18.9275, 34.1452, 0.96 ) }
    dend_30 { pt3dadd( -56.0324, -20.1439, 35.3281, 0.81 ) }
    dend_30 { pt3dadd( -57.0564, -21.8678, 37.1973, 0.59 ) }
    dend_30 { pt3dadd( -57.6199, -22.7239, 38.1744, 0.59 ) }
    dend_30 { pt3dadd( -57.9951, -23.2813, 38.783, 0.59 ) }
    dend_30 { pt3dadd( -58.4924, -24.0194, 39.4937, 0.59 ) }
    dend_30 { pt3dadd( -58.9211, -24.6758, 40.04, 0.81 ) }
    dend_30 { pt3dadd( -59.7642, -26.0395, 40.9216, 0.81 ) }
    dend_30 { pt3dadd( -60.4588, -27.2981, 41.6475, 0.81 ) }
    dend_30 { pt3dadd( -61.1872, -28.93, 42.7978, 0.81 ) }
    dend_30 { pt3dadd( -61.5885, -30.1244, 43.7385, 0.81 ) }
    dend_30 { pt3dadd( -61.7239, -30.6653, 44.1783, 0.81 ) }
    dend_30 { pt3dadd( -61.8594, -31.4166, 44.7955, 0.66 ) }
    dend_30 { pt3dadd( -62.1479, -33.5746, 46.5663, 0.96 ) }
    dend_30 { pt3dadd( -62.4099, -36.639, 49.1014, 0.81 ) }
    dend_30 { pt3dadd( -62.4671, -37.7556, 50.0233, 0.81 ) }
    dend_30 { pt3dadd( -62.5009, -38.6545, 50.7167, 0.81 ) }
    dend_30 { pt3dadd( -62.5506, -39.605, 51.3259, 0.81 ) }
    dend_30 { pt3dadd( -62.5896, -40.0518, 51.5221, 0.96 ) }
    dend_30 { pt3dadd( -62.7115, -40.9077, 51.6342, 0.96 ) }
    dend_30 { pt3dadd( -62.9323, -42.0569, 51.5694, 0.96 ) }
    dend_30 { pt3dadd( -63.1441, -43.0266, 51.4555, 0.96 ) }
    dend_30 { pt3dadd( -63.3773, -44.0342, 51.295, 0.96 ) }
    dend_30 { pt3dadd( -63.6985, -45.3364, 51.0538, 0.96 ) }
    dend_30 { pt3dadd( -64.0456, -46.6856, 50.7729, 0.96 ) }
    dend_30 { pt3dadd( -64.3382, -47.7073, 50.5533, 1.11 ) }
    dend_30 { pt3dadd( -64.7701, -49.0516, 50.2718, 1.11 ) }
    dend_30 { pt3dadd( -65.0719, -49.9046, 50.1113, 0.88 ) }
    dend_30 { pt3dadd( -65.4774, -51.0191, 49.9379, 0.88 ) }
    dend_30 { pt3dadd( -65.9926, -52.4002, 49.7736, 0.88 ) }
    dend_30 { pt3dadd( -66.6917, -54.3158, 49.6335, 0.88 ) }
    dend_30 { pt3dadd( -67.105, -55.5294, 49.5769, 1.4 ) }
    dend_30 { pt3dadd( -67.4191, -56.5776, 49.5837, 1.03 ) }
    dend_30 { pt3dadd( -67.717, -57.774, 49.6198, 0.81 ) }
    dend_30 { pt3dadd( -67.913, -58.7963, 49.698, 0.81 ) }
    dend_30 { pt3dadd( -68.0314, -59.7323, 49.8176, 1.11 ) }
    dend_30 { pt3dadd( -68.1089, -60.6399, 49.9638, 1.11 ) }
    dend_30 { pt3dadd( -68.2518, -61.8678, 50.1852, 1.11 ) }
    dend_30 { pt3dadd( -68.4251, -62.6726, 50.335, 0.74 ) }
    dend_30 { pt3dadd( -68.674, -63.4324, 50.4808, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_30 { pt3dadd( -69.1088, -64.3861, 50.657, 0.74 ) }
    dend_30 { pt3dadd( -69.5575, -65.1667, 50.7915, 0.66 ) }
    dend_30 { pt3dadd( -70.3183, -66.327, 50.9584, 0.66 ) }
    dend_30 { pt3dadd( -71.1149, -67.4694, 51.0363, 0.66 ) }
    dend_30 { pt3dadd( -71.4212, -67.9147, 51.0299, 0.66 ) }
    dend_30 { pt3dadd( -71.7737, -68.4618, 50.9636, 0.66 ) }
    dend_30 { pt3dadd( -72.0862, -69.011, 50.8676, 0.44 ) }
    dend_30 { pt3dadd( -72.3288, -69.5485, 50.7431, 0.44 ) }
    dend_30 { pt3dadd( -72.6783, -70.4462, 50.5024, 0.44 ) }
    dend_30 { pt3dadd( -73.075, -71.4114, 50.2371, 0.44 ) }
    dend_30 { pt3dadd( -73.4057, -72.1195, 50.1179, 0.44 ) }
    dend_30 { pt3dadd( -73.8875, -73.1145, 50.0718, 0.44 ) }
    dend_30 { pt3dadd( -74.3131, -73.9474, 50.1334, 0.44 ) }
    dend_30 { pt3dadd( -74.8033, -74.893, 50.2986, 0.37 ) }
    dend_30 { pt3dadd( -75.4424, -76.165, 50.6247, 0.37 ) }
    dend_30 { pt3dadd( -76.3317, -77.938, 51.1646, 0.37 ) }
    dend_30 { pt3dadd( -76.8627, -78.9914, 51.5024, 0.37 ) }
    dend_30 { pt3dadd( -77.4821, -80.1991, 51.9073, 0.37 ) }
    dend_30 { pt3dadd( -77.892, -80.9234, 52.1536, 0.37 ) }
    dend_30 { pt3dadd( -78.489, -81.8613, 52.4403, 0.37 ) }
    dend_30 { pt3dadd( -79.1857, -82.7854, 52.6576, 0.37 ) }
    dend_30 { pt3dadd( -79.7515, -83.4198, 52.7631, 0.37 ) }
    dend_30 { pt3dadd( -80.3027, -83.93, 52.8532, 0.37 ) }
    dend_30 { pt3dadd( -81.4668, -84.9292, 53.0453, 0.37 ) }
    dend_30 { pt3dadd( -82.2601, -85.6003, 53.1654, 0.37 ) }
    dend_30 { pt3dadd( -82.9648, -86.2362, 53.2628, 0.37 ) }
    dend_30 { pt3dadd( -83.8987, -87.1107, 53.3934, 0.37 ) }
    dend_30 { pt3dadd( -84.5629, -87.7682, 53.4814, 0.37 ) }
    dend_30 { pt3dadd( -85.7217, -89.0358, 53.6093, 0.37 ) }
    dend_30 { pt3dadd( -86.327, -89.8204, 53.6819, 0.29 ) }
    dend_30 { pt3dadd( -87.0383, -90.8423, 53.7568, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -55.618, -12.6633, 30.8638, 0.52 ) }
    dend_29 { pt3dadd( -56.28, -12.8208, 30.7079, 0.52 ) }
    dend_29 { pt3dadd( -57.2149, -13.0549, 30.5296, 0.29 ) }
    dend_29 { pt3dadd( -57.9256, -13.2563, 30.4134, 0.29 ) }
    dend_29 { pt3dadd( -58.734, -13.4854, 30.2812, 0.29 ) }
    dend_29 { pt3dadd( -59.5465, -13.7157, 30.1483, 0.29 ) }
    dend_29 { pt3dadd( -60.5099, -13.9888, 29.9907, 0.29 ) }
    dend_29 { pt3dadd( -61.3571, -14.2198, 29.8383, 0.22 ) }
    dend_29 { pt3dadd( -61.7551, -14.3426, 29.7613, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 66.1239, 22.3063, 19.185, 1.11 ) }
    dend_20 { pt3dadd( 66.6543, 22.7053, 20.099, 1.11 ) }
    dend_20 { pt3dadd( 67.9398, 23.7854, 22.0631, 0.88 ) }
    dend_20 { pt3dadd( 67.9754, 23.8166, 22.1155, 0.88 ) }
    dend_20 { pt3dadd( 69.1656, 24.7546, 23.7623, 0.74 ) }
    dend_20 { pt3dadd( 69.712, 25.0781, 24.6591, 0.74 ) }
    dend_20 { pt3dadd( 69.7388, 25.1014, 24.7595, 0.74 ) }
    dend_20 { pt3dadd( 70.1298, 25.5333, 26.8612, 0.74 ) }
    dend_20 { pt3dadd( 70.1412, 25.5476, 26.9393, 0.74 ) }
    dend_20 { pt3dadd( 70.2976, 25.6791, 27.8721, 0.74 ) }
    dend_20 { pt3dadd( 70.9276, 25.9356, 31.3182, 1.03 ) }
    dend_20 { pt3dadd( 72.3814, 26.2572, 38.9611, 0.88 ) }
    dend_20 { pt3dadd( 72.5675, 26.2895, 39.9023, 0.88 ) }
    dend_20 { pt3dadd( 72.588, 26.2924, 40.0066, 0.88 ) }
    dend_20 { pt3dadd( 73.2038, 26.4606, 42.9518, 0.88 ) }
    dend_20 { pt3dadd( 73.7886, 26.7182, 45.5334, 0.52 ) }
    dend_20 { pt3dadd( 73.8573, 26.7528, 45.7514, 0.52 ) }
    dend_20 { pt3dadd( 74.1157, 26.8039, 46.2183, 0.52 ) }
    dend_20 { pt3dadd( 74.198, 26.85, 46.4175, 0.52 ) }
    dend_20 { pt3dadd( 74.0766, 27.962, 47.1735, 0.52 ) }
    dend_20 { pt3dadd( 74.0305, 28.0975, 47.1964, 0.52 ) }
    dend_20 { pt3dadd( 73.6894, 29.2045, 47.2679, 0.88 ) }
    dend_20 { pt3dadd( 73.2558, 30.7203, 47.4037, 0.44 ) }
    dend_20 { pt3dadd( 73.2345, 30.8008, 47.4121, 0.44 ) }
    dend_20 { pt3dadd( 72.9751, 31.9072, 47.5151, 0.44 ) }
    dend_20 { pt3dadd( 73.0518, 31.9087, 47.644, 0.44 ) }
    dend_20 { pt3dadd( 73.4824, 31.8928, 48.4174, 0.44 ) }
    dend_20 { pt3dadd( 74.1346, 31.8985, 49.5444, 0.44 ) }
    dend_20 { pt3dadd( 74.2175, 31.898, 49.6831, 0.44 ) }
    dend_20 { pt3dadd( 75.2667, 31.9894, 51.4889, 0.44 ) }
    dend_20 { pt3dadd( 77.0844, 32.2222, 54.7568, 0.44 ) }
    dend_20 { pt3dadd( 77.1128, 32.2298, 54.8092, 0.44 ) }
    dend_20 { pt3dadd( 77.6452, 32.4858, 55.84, 0.66 ) }
    dend_20 { pt3dadd( 77.7063, 32.546, 55.9644, 0.66 ) }
    dend_20 { pt3dadd( 78.2511, 33.573, 57.3603, 0.66 ) }
    dend_20 { pt3dadd( 78.3246, 33.7947, 57.575, 0.66 ) }
    dend_20 { pt3dadd( 78.5235, 34.3078, 58.2878, 0.66 ) }
    dend_20 { pt3dadd( 78.7206, 34.7089, 59.0703, 0.66 ) }
    dend_20 { pt3dadd( 78.9814, 35.0735, 60.0183, 0.96 ) }
    dend_20 { pt3dadd( 79.7547, 35.8692, 62.5175, 0.44 ) }
    dend_20 { pt3dadd( 80.0872, 36.0977, 63.4537, 0.44 ) }
    dend_20 { pt3dadd( 81.9824, 37.0574, 68.2808, 0.44 ) }
    dend_20 { pt3dadd( 82.0066, 37.0657, 68.3352, 0.44 ) }
    dend_20 { pt3dadd( 82.5663, 37.1949, 69.3748, 0.44 ) }
    dend_20 { pt3dadd( 82.8048, 37.236, 69.7258, 0.44 ) }
    dend_20 { pt3dadd( 83.4464, 37.3731, 70.3747, 0.44 ) }
    dend_20 { pt3dadd( 83.5637, 37.4223, 70.4443, 0.44 ) }
    dend_20 { pt3dadd( 84.7094, 38.1333, 70.3234, 0.37 ) }
    dend_20 { pt3dadd( 85.6869, 38.8595, 70.1961, 0.37 ) }
    dend_20 { pt3dadd( 85.8849, 39.0335, 70.1594, 0.37 ) }
    dend_20 { pt3dadd( 86.2111, 39.3451, 70.0854, 0.37 ) }
    dend_20 { pt3dadd( 86.3515, 39.4967, 70.0462, 0.37 ) }
    dend_20 { pt3dadd( 86.7769, 39.9734, 69.9507, 0.37 ) }
    dend_20 { pt3dadd( 87.7098, 41.0938, 69.9507, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 94/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 66.1239, 22.3063, 19.185, 0.37 ) }
    dend_19 { pt3dadd( 66.6491, 23.6862, 18.9248, 0.37 ) }
    dend_19 { pt3dadd( 66.6835, 23.7616, 18.9168, 0.37 ) }
    dend_19 { pt3dadd( 67.3319, 25.1353, 18.8397, 0.37 ) }
    dend_19 { pt3dadd( 67.4009, 25.2826, 18.8355, 0.37 ) }
    dend_19 { pt3dadd( 68.0682, 26.7335, 18.8154, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_19 { pt3dadd( 68.1356, 26.8818, 18.8144, 0.37 ) }
    dend_19 { pt3dadd( 68.5917, 27.9136, 18.8689, 0.37 ) }
    dend_19 { pt3dadd( 69.0414, 28.9315, 18.9229, 0.81 ) }
    dend_19 { pt3dadd( 69.491, 29.9671, 18.9734, 0.52 ) }
    dend_19 { pt3dadd( 69.8036, 30.8019, 18.9671, 0.52 ) }
    dend_19 { pt3dadd( 69.828, 30.8817, 18.962, 0.52 ) }
    dend_19 { pt3dadd( 70.0493, 31.6111, 18.883, 0.52 ) }
    dend_19 { pt3dadd( 70.0942, 31.7665, 18.8584, 0.52 ) }
    dend_19 { pt3dadd( 70.3873, 32.7237, 18.6535, 0.37 ) }
    dend_19 { pt3dadd( 70.7736, 33.9258, 18.3474, 1.03 ) }
    dend_19 { pt3dadd( 71.0115, 34.6379, 18.15, 0.52 ) }
    dend_19 { pt3dadd( 71.3983, 35.7794, 17.8357, 0.22 ) }
    dend_19 { pt3dadd( 71.4212, 35.8461, 17.8176, 0.22 ) }
    dend_19 { pt3dadd( 71.6477, 36.5, 17.6532, 0.59 ) }
    dend_19 { pt3dadd( 71.8123, 36.9458, 17.5592, 0.81 ) }
    dend_19 { pt3dadd( 71.8943, 37.1579, 17.5295, 0.81 ) }
    dend_19 { pt3dadd( 72.1482, 37.8734, 17.4345, 0.29 ) }
    dend_19 { pt3dadd( 72.2914, 38.313, 17.3833, 0.29 ) }
    dend_19 { pt3dadd( 72.3543, 38.4706, 17.3535, 0.29 ) }
    dend_19 { pt3dadd( 72.6188, 39.0544, 17.2191, 0.29 ) }
    dend_19 { pt3dadd( 72.8991, 39.5683, 17.0682, 0.88 ) }
    dend_19 { pt3dadd( 73.3343, 40.2607, 16.8348, 0.88 ) }
    dend_19 { pt3dadd( 73.4651, 40.4375, 16.7812, 0.88 ) }
    dend_19 { pt3dadd( 74.3936, 41.6126, 16.4707, 0.37 ) }
    dend_19 { pt3dadd( 74.4397, 41.6667, 16.4599, 0.37 ) }
    dend_19 { pt3dadd( 74.9962, 42.2656, 16.3733, 0.37 ) }
    dend_19 { pt3dadd( 75.2656, 42.5195, 16.3351, 0.37 ) }
    dend_19 { pt3dadd( 76.2046, 43.3442, 16.2121, 0.37 ) }
    dend_19 { pt3dadd( 76.3214, 43.4422, 16.1999, 0.37 ) }
    dend_19 { pt3dadd( 77.2799, 44.208, 16.1366, 0.37 ) }
    dend_19 { pt3dadd( 77.3362, 44.2513, 16.1316, 0.37 ) }
    dend_19 { pt3dadd( 79.0424, 45.5625, 15.9411, 0.37 ) }
    dend_19 { pt3dadd( 79.0976, 45.6066, 15.9314, 0.37 ) }
    dend_19 { pt3dadd( 80.0356, 46.3965, 15.7164, 0.37 ) }
    dend_19 { pt3dadd( 80.2619, 46.5973, 15.6212, 0.37 ) }
    dend_19 { pt3dadd( 80.9924, 47.27, 15.213, 0.37 ) }
    dend_19 { pt3dadd( 81.6249, 47.8698, 14.8014, 1.25 ) }
    dend_19 { pt3dadd( 82.5278, 48.7449, 14.0745, 2.06 ) }
    dend_19 { pt3dadd( 83.1018, 49.3092, 13.5618, 2.36 ) }
    dend_19 { pt3dadd( 84.9066, 51.1507, 11.8487, 1.84 ) }
    dend_19 { pt3dadd( 85.4548, 51.6992, 11.3231, 1.25 ) }
    dend_19 { pt3dadd( 85.4904, 51.7342, 11.2883, 1.25 ) }
    dend_19 { pt3dadd( 86.4329, 52.5944, 10.4091, 0.59 ) }
    dend_19 { pt3dadd( 86.9433, 53.0154, 9.953, 0.59 ) }
    dend_19 { pt3dadd( 87.9101, 53.7719, 9.12989, 0.52 ) }
    dend_19 { pt3dadd( 89.3345, 54.7831, 8.15867, 0.52 ) }
    dend_19 { pt3dadd( 89.3783, 54.8106, 8.12706, 0.52 ) }
    dend_19 { pt3dadd( 89.8295, 55.0585, 7.78815, 0.81 ) }
    dend_19 { pt3dadd( 91.3124, 55.7521, 6.68979, 0.22 ) }
    dend_19 { pt3dadd( 91.4321, 55.8004, 6.60009, 0.22 ) }
    dend_19 { pt3dadd( 92.4676, 56.1814, 5.8336, 0.22 ) }
    dend_19 { pt3dadd( 94.0144, 56.758, 4.77606, 0.22 ) }
    dend_19 { pt3dadd( 95.244, 57.2522, 3.97837, 0.96 ) }
    dend_19 { pt3dadd( 95.924, 57.5522, 3.57786, 1.11 ) }
    dend_19 { pt3dadd( 96.3643, 57.7689, 3.37476, 1.11 ) }
    dend_19 { pt3dadd( 96.7925, 58.0167, 3.18827, 0.22 ) }
    dend_19 { pt3dadd( 97.1572, 58.2961, 3.05728, 0.22 ) }
    dend_19 { pt3dadd( 97.3117, 58.4328, 3.02166, 0.22 ) }
    dend_19 { pt3dadd( 97.7929, 58.9002, 2.93058, 0.22 ) }
    dend_19 { pt3dadd( 98.606, 59.7236, 2.76152, 0.22 ) }
    dend_19 { pt3dadd( 99.8014, 60.952, 2.49605, 0.22 ) }
    dend_19 { pt3dadd( 101.161, 62.3647, 2.17599, 0.22 ) }
    dend_19 { pt3dadd( 101.669, 62.9001, 2.05054, 0.66 ) }
    dend_19 { pt3dadd( 102.007, 63.2638, 1.96363, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 64/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 38.1766, 12.1274, 13.24, 0.59 ) }
    dend_17 { pt3dadd( 38.6488, 11.7631, 13.7834, 0.59 ) }
    dend_17 { pt3dadd( 39.1335, 11.3696, 14.4658, 0.59 ) }
    dend_17 { pt3dadd( 40.0002, 10.65, 15.7937, 0.59 ) }
    dend_17 { pt3dadd( 40.4949, 10.1962, 16.6781, 1.03 ) }
    dend_17 { pt3dadd( 41.8912, 8.66935, 19.5452, 0.88 ) }
    dend_17 { pt3dadd( 41.9157, 8.63613, 19.6026, 0.88 ) }
    dend_17 { pt3dadd( 42.4236, 7.63911, 21.2402, 0.88 ) }
    dend_17 { pt3dadd( 42.4345, 7.60112, 21.2991, 0.88 ) }
    dend_17 { pt3dadd( 42.4889, 6.81486, 22.4018, 0.66 ) }
    dend_17 { pt3dadd( 42.4285, 6.10996, 23.1667, 0.66 ) }
    dend_17 { pt3dadd( 42.2717, 5.20657, 23.6941, 0.81 ) }
    dend_17 { pt3dadd( 42.2683, 5.14393, 23.7305, 0.81 ) }
    dend_17 { pt3dadd( 42.3947, 4.20411, 24.2307, 0.59 ) }
    dend_17 { pt3dadd( 42.4863, 4.0552, 24.3473, 0.59 ) }
    dend_17 { pt3dadd( 43.2564, 3.76332, 24.8934, 0.59 ) }
    dend_17 { pt3dadd( 43.463, 3.73905, 25.0201, 0.59 ) }
    dend_17 { pt3dadd( 45.5271, 3.80008, 26.0876, 0.59 ) }
    dend_17 { pt3dadd( 46.4231, 3.89206, 26.516, 0.96 ) }
    dend_17 { pt3dadd( 47.2788, 4.0377, 26.9343, 0.59 ) }
    dend_17 { pt3dadd( 48.0509, 4.16477, 27.432, 0.59 ) }
    dend_17 { pt3dadd( 48.1675, 4.17756, 27.5256, 0.59 ) }
    dend_17 { pt3dadd( 49.4082, 4.23508, 28.6319, 0.59 ) }
    dend_17 { pt3dadd( 49.5483, 4.22519, 28.7722, 0.59 ) }
    dend_17 { pt3dadd( 50.4869, 4.07967, 29.8368, 1.18 ) }
    dend_17 { pt3dadd( 52.3701, 3.57164, 32.0056, 1.11 ) }
    dend_17 { pt3dadd( 53.927, 3.03104, 33.8176, 1.11 ) }
    dend_17 { pt3dadd( 53.9655, 3.01459, 33.8609, 1.11 ) }
    dend_17 { pt3dadd( 55.5025, 2.23066, 35.5595, 0.74 ) }
    dend_17 { pt3dadd( 55.5427, 2.20947, 35.5993, 0.74 ) }
    dend_17 { pt3dadd( 57.0881, 1.34947, 36.9156, 0.74 ) }
    dend_17 { pt3dadd( 57.1446, 1.31118, 37.0065, 0.74 ) }
    dend_17 { pt3dadd( 57.8623, 0.81272, 38.7108, 1.03 ) }
    dend_17 { pt3dadd( 57.8884, 0.795103, 38.7845, 1.03 ) }
    dend_17 { pt3dadd( 58.4797, 0.440936, 40.6488, 0.74 ) }
    dend_17 { pt3dadd( 58.5032, 0.42938, 40.7245, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_17 { pt3dadd( 61.1306, -0.585726, 49.9505, 1.25 ) }
    dend_17 { pt3dadd( 61.7193, -0.760075, 52.0124, 0.66 ) }
    dend_17 { pt3dadd( 61.7376, -0.76375, 52.0799, 0.66 ) }
    dend_17 { pt3dadd( 62.0052, -0.795054, 53.049, 0.66 ) }
    dend_17 { pt3dadd( 62.2278, -0.800768, 53.88, 0.44 ) }
    dend_17 { pt3dadd( 62.2781, -0.789159, 54.0209, 0.44 ) }
    dend_17 { pt3dadd( 62.771, -0.456683, 54.492, 0.29 ) }
    dend_17 { pt3dadd( 62.835, -0.414482, 54.5559, 0.29 ) }
    dend_17 { pt3dadd( 63.5458, -0.00164754, 55.2539, 0.59 ) }
    dend_17 { pt3dadd( 63.5986, 0.0267807, 55.3075, 0.59 ) }
    dend_17 { pt3dadd( 65.213, 0.810331, 56.7898, 1.18 ) }
    dend_17 { pt3dadd( 67.1703, 1.60945, 58.2465, 0.59 ) }
    dend_17 { pt3dadd( 68.5919, 2.10603, 59.1331, 0.59 ) }
    dend_17 { pt3dadd( 69.1837, 2.27841, 59.4174, 0.44 ) }
    dend_17 { pt3dadd( 69.2466, 2.29593, 59.4433, 0.44 ) }
    dend_17 { pt3dadd( 70.4556, 2.64901, 59.9874, 0.44 ) }
    dend_17 { pt3dadd( 71.7133, 3.01389, 60.5164, 0.44 ) }
    dend_17 { pt3dadd( 71.7709, 3.02996, 60.5531, 0.44 ) }
    dend_17 { pt3dadd( 72.5968, 3.26309, 61.3584, 0.44 ) }
    dend_17 { pt3dadd( 73.771, 3.49736, 62.6738, 0.66 ) }
    dend_17 { pt3dadd( 75.0036, 3.58472, 64.3648, 0.66 ) }
    dend_17 { pt3dadd( 75.0397, 3.58289, 64.4249, 0.66 ) }
    dend_17 { pt3dadd( 75.9389, 3.4421, 66.0007, 0.52 ) }
    dend_17 { pt3dadd( 75.9812, 3.43172, 66.0679, 0.52 ) }
    dend_17 { pt3dadd( 76.4839, 3.24738, 66.7816, 0.52 ) }
    dend_17 { pt3dadd( 77.6941, 2.74937, 68.2363, 0.74 ) }
    dend_17 { pt3dadd( 77.7374, 2.73555, 68.2897, 0.74 ) }
    dend_17 { pt3dadd( 78.3958, 2.6113, 69.1881, 0.44 ) }
    dend_17 { pt3dadd( 79.1578, 2.68738, 70.3901, 0.44 ) }
    dend_17 { pt3dadd( 79.2301, 2.71168, 70.5195, 0.44 ) }
    dend_17 { pt3dadd( 79.8919, 3.33685, 71.9398, 0.44 ) }
    dend_17 { pt3dadd( 80.2393, 3.9562, 72.775, 0.44 ) }
    dend_17 { pt3dadd( 80.2657, 4.02343, 72.8457, 0.44 ) }
    dend_17 { pt3dadd( 80.4514, 4.74156, 73.3893, 0.44 ) }
    dend_17 { pt3dadd( 80.4648, 4.80751, 73.4172, 0.44 ) }
    dend_17 { pt3dadd( 80.843, 6.10442, 73.6887, 0.44 ) }
    dend_17 { pt3dadd( 80.8681, 6.173, 73.691, 0.44 ) }
    dend_17 { pt3dadd( 81.2231, 6.9853, 73.7288, 0.29 ) }
    dend_17 { pt3dadd( 81.5975, 7.82007, 73.8723, 0.29 ) }
    dend_17 { pt3dadd( 81.7091, 8.05737, 73.9391, 0.29 ) }
    dend_17 { pt3dadd( 82.2397, 9.33001, 74.4184, 0.29 ) }
    dend_17 { pt3dadd( 82.2684, 9.41413, 74.4689, 0.29 ) }
    dend_17 { pt3dadd( 82.4864, 10.4606, 75.277, 0.22 ) }
    dend_17 { pt3dadd( 82.4816, 11.4068, 76.1797, 0.22 ) }
    dend_17 { pt3dadd( 82.4723, 11.4544, 76.2322, 0.22 ) }
    dend_17 { pt3dadd( 82.2803, 11.975, 76.8105, 0.22 ) }
    dend_17 { pt3dadd( 81.8403, 12.7214, 77.6566, 0.22 ) }
    dend_17 { pt3dadd( 81.763, 12.8321, 77.7581, 0.22 ) }
    dend_17 { pt3dadd( 81.3705, 13.3164, 78.1089, 0.22 ) }
    dend_17 { pt3dadd( 81.2775, 13.4322, 78.1697, 0.22 ) }
    dend_17 { pt3dadd( 80.815, 14.0371, 78.4473, 0.22 ) }
    dend_17 { pt3dadd( 80.7191, 14.1799, 78.4913, 0.59 ) }
    dend_17 { pt3dadd( 80.1902, 14.9414, 78.5355, 0.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 53/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 38.1766, 12.1274, 13.24, 0.66 ) }
    dend_16 { pt3dadd( 37.839, 12.4599, 13.5456, 0.66 ) }
    dend_16 { pt3dadd( 37.472, 13.1532, 13.6488, 0.66 ) }
    dend_16 { pt3dadd( 37.2381, 14.4595, 12.9257, 0.29 ) }
    dend_16 { pt3dadd( 37.2009, 14.9381, 12.6527, 0.22 ) }
    dend_16 { pt3dadd( 37.2047, 15.2209, 12.4971, 0.22 ) }
    dend_16 { pt3dadd( 37.362, 16.4438, 11.8927, 0.52 ) }
    dend_16 { pt3dadd( 37.5818, 17.3946, 11.411, 0.88 ) }
    dend_16 { pt3dadd( 37.9061, 18.3942, 10.9841, 1.18 ) }
    dend_16 { pt3dadd( 38.2917, 19.3952, 10.6883, 0.66 ) }
    dend_16 { pt3dadd( 38.8374, 20.6652, 10.52, 0.52 ) }
    dend_16 { pt3dadd( 39.4328, 22.0567, 10.6257, 0.52 ) }
    dend_16 { pt3dadd( 39.4593, 22.1217, 10.645, 0.52 ) }
    dend_16 { pt3dadd( 40.026, 23.7744, 11.3559, 0.88 ) }
    dend_16 { pt3dadd( 40.4158, 25.3112, 12.1447, 1.33 ) }
    dend_16 { pt3dadd( 40.4208, 25.3761, 12.1772, 1.33 ) }
    dend_16 { pt3dadd( 40.3449, 26.3111, 12.5627, 0.81 ) }
    dend_16 { pt3dadd( 40.1525, 27.1289, 12.7745, 0.52 ) }
    dend_16 { pt3dadd( 39.7521, 28.4241, 12.9066, 0.52 ) }
    dend_16 { pt3dadd( 39.5127, 29.0562, 12.8807, 0.96 ) }
    dend_16 { pt3dadd( 38.7708, 30.9622, 12.6698, 0.96 ) }
    dend_16 { pt3dadd( 38.3109, 32.2495, 12.5099, 0.44 ) }
    dend_16 { pt3dadd( 38.024, 33.1308, 12.4295, 0.37 ) }
    dend_16 { pt3dadd( 37.6668, 34.3104, 12.3887, 0.37 ) }
    dend_16 { pt3dadd( 37.6477, 34.3809, 12.3933, 0.37 ) }
    dend_16 { pt3dadd( 37.3817, 35.4634, 12.5832, 0.37 ) }
    dend_16 { pt3dadd( 37.2039, 36.3003, 12.9207, 0.88 ) }
    dend_16 { pt3dadd( 36.8973, 37.7705, 13.7484, 0.66 ) }
    dend_16 { pt3dadd( 36.8859, 37.8301, 13.7877, 0.66 ) }
    dend_16 { pt3dadd( 36.7455, 38.5322, 14.3123, 0.52 ) }
    dend_16 { pt3dadd( 36.6595, 39.0353, 14.6999, 0.52 ) }
    dend_16 { pt3dadd( 36.4342, 40.5464, 15.9464, 0.88 ) }
    dend_16 { pt3dadd( 36.4307, 40.5928, 15.9866, 0.88 ) }
    dend_16 { pt3dadd( 36.4743, 41.4188, 16.6375, 1.25 ) }
    dend_16 { pt3dadd( 36.4836, 41.4779, 16.6782, 1.25 ) }
    dend_16 { pt3dadd( 36.734, 42.4312, 17.259, 1.25 ) }
    dend_16 { pt3dadd( 36.7931, 42.5968, 17.347, 1.25 ) }
    dend_16 { pt3dadd( 37.2952, 43.7654, 17.8394, 0.96 ) }
    dend_16 { pt3dadd( 37.6493, 44.5774, 18.1712, 0.52 ) }
    dend_16 { pt3dadd( 38.0167, 45.4774, 18.4987, 0.44 ) }
    dend_16 { pt3dadd( 38.0509, 45.5695, 18.5289, 0.44 ) }
    dend_16 { pt3dadd( 38.214, 46.1082, 18.6659, 0.44 ) }
    dend_16 { pt3dadd( 38.2309, 46.1782, 18.6794, 0.44 ) }
    dend_16 { pt3dadd( 38.4361, 47.7468, 18.8647, 0.44 ) }
    dend_16 { pt3dadd( 38.5076, 49.034, 19.0479, 0.44 ) }
    dend_16 { pt3dadd( 38.5081, 49.1066, 19.059, 0.44 ) }
    dend_16 { pt3dadd( 38.4982, 49.9757, 19.1946, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_16 { pt3dadd( 38.4986, 50.0571, 19.2145, 0.44 ) }
    dend_16 { pt3dadd( 38.562, 51.0336, 19.5657, 0.44 ) }
    dend_16 { pt3dadd( 38.7655, 52.1756, 20.1056, 0.44 ) }
    dend_16 { pt3dadd( 38.9911, 52.8734, 20.4941, 0.88 ) }
    dend_16 { pt3dadd( 39.0154, 52.9327, 20.5277, 0.88 ) }
    dend_16 { pt3dadd( 39.741, 54.5429, 21.3538, 1.25 ) }
    dend_16 { pt3dadd( 40.1778, 55.4915, 21.7906, 0.74 ) }
    dend_16 { pt3dadd( 40.5156, 56.2519, 22.0932, 0.74 ) }
    dend_16 { pt3dadd( 40.9208, 57.3297, 22.4587, 0.59 ) }
    dend_16 { pt3dadd( 41.2172, 58.3009, 22.74, 0.52 ) }
    dend_16 { pt3dadd( 41.5718, 59.9435, 23.1112, 0.37 ) }
    dend_16 { pt3dadd( 41.6946, 61.1187, 23.2917, 1.33 ) }
    dend_16 { pt3dadd( 41.7181, 62.2852, 23.4455, 1.33 ) }
    dend_16 { pt3dadd( 41.619, 63.4986, 23.6055, 0.96 ) }
    dend_16 { pt3dadd( 41.4699, 64.4034, 23.7266, 0.52 ) }
    dend_16 { pt3dadd( 41.2427, 65.4231, 23.8562, 0.52 ) }
    dend_16 { pt3dadd( 40.9217, 66.6613, 24.0015, 0.52 ) }
    dend_16 { pt3dadd( 40.8639, 66.883, 24.023, 0.52 ) }
    dend_16 { pt3dadd( 40.5556, 68.1968, 24.1504, 0.52 ) }
    dend_16 { pt3dadd( 40.5265, 68.3401, 24.1619, 0.52 ) }
    dend_16 { pt3dadd( 40.3585, 69.246, 24.244, 0.37 ) }
    dend_16 { pt3dadd( 40.1708, 70.455, 24.3566, 0.37 ) }
    dend_16 { pt3dadd( 40.0319, 71.3764, 24.3613, 1.03 ) }
    dend_16 { pt3dadd( 40.0083, 71.534, 24.3511, 1.03 ) }
    dend_16 { pt3dadd( 39.9043, 72.3226, 24.2508, 1.03 ) }
    dend_16 { pt3dadd( 39.7584, 73.3274, 24.0748, 1.25 ) }
    dend_16 { pt3dadd( 39.5943, 74.2844, 23.8517, 1.25 ) }
    dend_16 { pt3dadd( 39.2531, 75.9054, 23.4001, 1.25 ) }
    dend_16 { pt3dadd( 39.1194, 76.4787, 23.2211, 0.44 ) }
    dend_16 { pt3dadd( 39.0129, 76.905, 23.1042, 0.44 ) }
    dend_16 { pt3dadd( 38.7767, 77.7769, 22.92, 0.44 ) }
    dend_16 { pt3dadd( 38.7574, 77.8471, 22.9121, 0.44 ) }
    dend_16 { pt3dadd( 38.4601, 78.8739, 22.9162, 0.44 ) }
    dend_16 { pt3dadd( 38.4421, 78.9446, 22.9226, 0.44 ) }
    dend_16 { pt3dadd( 38.2849, 79.7348, 22.9782, 0.44 ) }
    dend_16 { pt3dadd( 38.1291, 80.7584, 23.0271, 0.44 ) }
    dend_16 { pt3dadd( 38.0158, 81.7476, 23.0736, 0.44 ) }
    dend_16 { pt3dadd( 37.917, 83.0077, 23.1278, 1.18 ) }
    dend_16 { pt3dadd( 37.8683, 84.161, 23.1702, 1.18 ) }
    dend_16 { pt3dadd( 37.7767, 86.3898, 23.2304, 1.18 ) }
    dend_16 { pt3dadd( 37.7475, 87.0134, 23.2661, 0.66 ) }
    dend_16 { pt3dadd( 37.7142, 87.6042, 23.33, 0.44 ) }
    dend_16 { pt3dadd( 37.6492, 88.2868, 23.4471, 0.44 ) }
    dend_16 { pt3dadd( 37.6384, 88.3673, 23.4672, 0.44 ) }
    dend_16 { pt3dadd( 37.4499, 89.3237, 23.7886, 0.44 ) }
    dend_16 { pt3dadd( 37.1645, 90.7283, 24.4305, 0.44 ) }
    dend_16 { pt3dadd( 37.1432, 90.9268, 24.5409, 0.44 ) }
    dend_16 { pt3dadd( 37.1225, 91.775, 25.0503, 1.11 ) }
    dend_16 { pt3dadd( 37.1616, 92.4387, 25.4625, 1.55 ) }
    dend_16 { pt3dadd( 37.1798, 92.5771, 25.5449, 1.55 ) }
    dend_16 { pt3dadd( 37.4499, 93.7364, 26.2614, 1.55 ) }
    dend_16 { pt3dadd( 37.7919, 95.0972, 27.046, 0.81 ) }
    dend_16 { pt3dadd( 37.8062, 95.1576, 27.0832, 0.81 ) }
    dend_16 { pt3dadd( 37.8841, 95.5624, 27.3884, 0.66 ) }
    dend_16 { pt3dadd( 37.9278, 96.0198, 27.7688, 0.66 ) }
    dend_16 { pt3dadd( 37.9154, 96.8204, 28.4324, 0.52 ) }
    dend_16 { pt3dadd( 37.8199, 97.4366, 28.9484, 0.52 ) }
    dend_16 { pt3dadd( 37.807, 97.4974, 29.002, 0.52 ) }
    dend_16 { pt3dadd( 37.5801, 98.6622, 30.0558, 0.52 ) }
    dend_16 { pt3dadd( 37.5195, 98.9673, 30.3451, 1.11 ) }
    dend_16 { pt3dadd( 37.4351, 99.4302, 30.7124, 1.11 ) }
    dend_16 { pt3dadd( 37.4171, 99.5426, 30.7839, 1.11 ) }
    dend_16 { pt3dadd( 37.2818, 100.77, 31.4552, 0.52 ) }
    dend_16 { pt3dadd( 37.2265, 101.331, 31.6986, 0.44 ) }
    dend_16 { pt3dadd( 37.2182, 101.411, 31.7226, 0.44 ) }
    dend_16 { pt3dadd( 37.0037, 103.055, 32.1457, 0.44 ) }
    dend_16 { pt3dadd( 36.9918, 103.126, 32.1607, 0.44 ) }
    dend_16 { pt3dadd( 36.7786, 104.216, 32.3429, 1.11 ) }
    dend_16 { pt3dadd( 36.6364, 104.819, 32.438, 1.11 ) }
    dend_16 { pt3dadd( 36.4596, 105.545, 32.5807, 0.74 ) }
    dend_16 { pt3dadd( 36.301, 106.196, 32.7279, 0.37 ) }
    dend_16 { pt3dadd( 36.121, 106.939, 32.9195, 0.37 ) }
    dend_16 { pt3dadd( 36.106, 107.008, 32.9394, 0.37 ) }
    dend_16 { pt3dadd( 35.8594, 108.251, 33.3316, 0.37 ) }
    dend_16 { pt3dadd( 35.7338, 108.881, 33.5483, 0.29 ) }
    dend_16 { pt3dadd( 35.717, 108.957, 33.5779, 0.29 ) }
    dend_16 { pt3dadd( 35.5337, 109.564, 33.8108, 0.29 ) }
    dend_16 { pt3dadd( 35.1401, 110.579, 34.2126, 0.29 ) }
    dend_16 { pt3dadd( 35.0722, 110.73, 34.2729, 0.29 ) }
    dend_16 { pt3dadd( 34.6913, 111.505, 34.5775, 0.29 ) }
    dend_16 { pt3dadd( 34.2784, 112.291, 34.9134, 0.29 ) }
    dend_16 { pt3dadd( 33.7296, 113.342, 35.4103, 0.29 ) }
    dend_16 { pt3dadd( 33.429, 113.965, 35.7106, 0.29 ) }
    dend_16 { pt3dadd( 33.3801, 114.079, 35.7634, 0.29 ) }
    dend_16 { pt3dadd( 33.0996, 114.979, 36.1527, 0.29 ) }
    dend_16 { pt3dadd( 33.077, 115.093, 36.1987, 0.29 ) }
    dend_16 { pt3dadd( 32.9892, 115.992, 36.4889, 1.25 ) }
    dend_16 { pt3dadd( 32.9564, 117.093, 36.7941, 1.69 ) }
    dend_16 { pt3dadd( 32.954, 117.174, 36.816, 1.69 ) }
    dend_16 { pt3dadd( 32.8912, 118.273, 37.1114, 1.69 ) }
    dend_16 { pt3dadd( 32.8751, 118.496, 37.1686, 1.69 ) }
    dend_16 { pt3dadd( 32.7963, 119.459, 37.4036, 1.69 ) }
    dend_16 { pt3dadd( 32.7872, 119.56, 37.4263, 1.69 ) }
    dend_16 { pt3dadd( 32.631, 121.069, 37.7984, 0.52 ) }
    dend_16 { pt3dadd( 32.5575, 121.905, 38.0186, 0.37 ) }
    dend_16 { pt3dadd( 32.5094, 122.749, 38.3854, 0.37 ) }
    dend_16 { pt3dadd( 32.5074, 122.813, 38.4199, 0.37 ) }
    dend_16 { pt3dadd( 32.5104, 123.396, 38.7773, 0.37 ) }
    dend_16 { pt3dadd( 32.5134, 123.457, 38.8159, 0.37 ) }
    dend_16 { pt3dadd( 32.7219, 125.401, 40.0407, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( 33.0345, 127.495, 41.4015, 0.37 ) }
    dend_16 { pt3dadd( 33.0456, 127.556, 41.4395, 0.37 ) }
    dend_16 { pt3dadd( 33.1903, 128.245, 41.8461, 1.18 ) }
    dend_16 { pt3dadd( 33.332, 128.87, 42.1778, 1.92 ) }
    dend_16 { pt3dadd( 33.4936, 129.543, 42.4756, 1.25 ) }
    dend_16 { pt3dadd( 33.5833, 129.903, 42.5672, 0.59 ) }
    dend_16 { pt3dadd( 33.7582, 130.706, 42.6539, 0.59 ) }
    dend_16 { pt3dadd( 33.7754, 130.788, 42.6636, 0.59 ) }
    dend_16 { pt3dadd( 34.0478, 132.242, 42.8589, 0.29 ) }
    dend_16 { pt3dadd( 34.0601, 132.313, 42.869, 0.29 ) }
    dend_16 { pt3dadd( 34.2976, 133.754, 43.0686, 0.29 ) }
    dend_16 { pt3dadd( 34.311, 133.836, 43.0793, 0.29 ) }
    dend_16 { pt3dadd( 34.4616, 134.796, 43.1878, 0.29 ) }
    dend_16 { pt3dadd( 34.5148, 135.133, 43.2172, 0.81 ) }
    dend_16 { pt3dadd( 34.6072, 135.761, 43.2851, 0.44 ) }
    dend_16 { pt3dadd( 34.6446, 136.24, 43.3624, 0.44 ) }
    dend_16 { pt3dadd( 34.6436, 136.537, 43.4271, 0.44 ) }
    dend_16 { pt3dadd( 34.5627, 137.204, 43.5886, 0.44 ) }
    dend_16 { pt3dadd( 34.5231, 137.363, 43.6261, 0.44 ) }
    dend_16 { pt3dadd( 34.229, 138.461, 43.8542, 0.88 ) }
    dend_16 { pt3dadd( 33.9978, 139.33, 44.0537, 0.88 ) }
    dend_16 { pt3dadd( 33.9559, 139.498, 44.0924, 0.88 ) }
    dend_16 { pt3dadd( 33.6877, 140.725, 44.3624, 0.52 ) }
    dend_16 { pt3dadd( 33.447, 142.041, 44.6834, 0.52 ) }
    dend_16 { pt3dadd( 33.2441, 143.297, 44.9941, 0.37 ) }
    dend_16 { pt3dadd( 33.078, 144.411, 45.2614, 1.11 ) }
    dend_16 { pt3dadd( 32.9485, 145.368, 45.5147, 1.47 ) }
    dend_16 { pt3dadd( 32.8717, 145.973, 45.6844, 1.47 ) }
    dend_16 { pt3dadd( 32.7319, 147.33, 46.1471, 0.44 ) }
    dend_16 { pt3dadd( 32.6717, 147.866, 46.371, 0.44 ) }
    dend_16 { pt3dadd( 32.6293, 148.18, 46.5171, 0.37 ) }
    dend_16 { pt3dadd( 32.5937, 148.43, 46.6311, 0.37 ) }
    dend_16 { pt3dadd( 32.5551, 148.849, 46.8259, 0.37 ) }
    dend_16 { pt3dadd( 32.5444, 149.72, 47.243, 0.37 ) }
    dend_16 { pt3dadd( 32.5466, 149.78, 47.2834, 0.37 ) }
    dend_16 { pt3dadd( 32.5853, 150.391, 47.7663, 0.37 ) }
    dend_16 { pt3dadd( 32.5948, 150.524, 47.8793, 0.37 ) }
    dend_16 { pt3dadd( 32.6283, 151.02, 48.2999, 1.18 ) }
    dend_16 { pt3dadd( 32.7183, 152.351, 49.4096, 1.18 ) }
    dend_16 { pt3dadd( 32.8689, 153.856, 50.5897, 0.96 ) }
    dend_16 { pt3dadd( 32.9056, 154.149, 50.8225, 0.37 ) }
    dend_16 { pt3dadd( 32.9185, 154.211, 50.8746, 0.37 ) }
    dend_16 { pt3dadd( 33.1163, 154.771, 51.3392, 0.37 ) }
    dend_16 { pt3dadd( 33.295, 154.972, 51.5065, 0.37 ) }
    dend_16 { pt3dadd( 33.9566, 155.378, 51.7183, 0.37 ) }
    dend_16 { pt3dadd( 34.0161, 155.414, 51.7303, 0.37 ) }
    dend_16 { pt3dadd( 34.9923, 156.091, 51.9479, 0.37 ) }
    dend_16 { pt3dadd( 35.1707, 156.243, 51.9914, 0.37 ) }
    dend_16 { pt3dadd( 36.0084, 157.172, 52.2087, 0.37 ) }
    dend_16 { pt3dadd( 36.6016, 157.994, 52.3573, 0.37 ) }
    dend_16 { pt3dadd( 37.0054, 158.657, 52.4597, 1.25 ) }
    dend_16 { pt3dadd( 37.3698, 159.328, 52.5794, 1.55 ) }
    dend_16 { pt3dadd( 37.9713, 160.572, 52.813, 0.52 ) }
    dend_16 { pt3dadd( 38.5546, 161.816, 53.0478, 0.37 ) }
    dend_16 { pt3dadd( 39.0509, 162.753, 53.3056, 0.37 ) }
    dend_16 { pt3dadd( 39.0829, 162.802, 53.3262, 0.37 ) }
    dend_16 { pt3dadd( 39.7161, 163.564, 53.8611, 0.88 ) }
    dend_16 { pt3dadd( 40.0047, 163.85, 54.1514, 0.88 ) }
    dend_16 { pt3dadd( 40.0503, 163.891, 54.2041, 0.88 ) }
    dend_16 { pt3dadd( 41.4068, 165.052, 55.9025, 0.52 ) }
    dend_16 { pt3dadd( 41.4448, 165.088, 55.9506, 0.52 ) }
    dend_16 { pt3dadd( 42.4005, 166.053, 57.0897, 0.52 ) }
    dend_16 { pt3dadd( 42.4386, 166.096, 57.1311, 0.52 ) }
    dend_16 { pt3dadd( 42.8908, 166.709, 57.6105, 0.81 ) }
    dend_16 { pt3dadd( 42.9706, 166.837, 57.6891, 0.81 ) }
    dend_16 { pt3dadd( 43.3913, 167.715, 58.0235, 0.81 ) }
    dend_16 { pt3dadd( 43.4208, 167.778, 58.0425, 0.81 ) }
    dend_16 { pt3dadd( 44.0393, 169.097, 58.3649, 0.52 ) }
    dend_16 { pt3dadd( 44.2979, 169.548, 58.5195, 0.52 ) }
    dend_16 { pt3dadd( 44.4144, 169.701, 58.5863, 0.52 ) }
    dend_16 { pt3dadd( 44.6842, 169.997, 58.7348, 0.88 ) }
    dend_16 { pt3dadd( 45.18, 170.393, 58.973, 0.88 ) }
    dend_16 { pt3dadd( 46.3727, 171.043, 59.3874, 0.37 ) }
    dend_16 { pt3dadd( 47.545, 171.433, 59.7171, 0.37 ) }
    dend_16 { pt3dadd( 48.5215, 171.665, 59.9697, 0.37 ) }
    dend_16 { pt3dadd( 48.8024, 171.699, 60.034, 0.37 ) }
    dend_16 { pt3dadd( 50.2668, 171.655, 60.3258, 0.29 ) }
    dend_16 { pt3dadd( 52.1555, 171.367, 60.6432, 0.29 ) }
    dend_16 { pt3dadd( 53.2622, 171.052, 60.78, 1.03 ) }
    dend_16 { pt3dadd( 53.3284, 171.029, 60.7869, 1.03 ) }
    dend_16 { pt3dadd( 54.5817, 170.521, 60.9262, 0.29 ) }
    dend_16 { pt3dadd( 56.0501, 169.813, 61.0948, 0.29 ) }
    dend_16 { pt3dadd( 56.1087, 169.774, 61.1018, 0.29 ) }
    dend_16 { pt3dadd( 56.7595, 169.162, 61.1902, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 84/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 88.7745, 107.092, -8.68856, 0.66 ) }
    dend_13 { pt3dadd( 86.835, 116.968, -5.89925, 0.66 ) }
    dend_13 { pt3dadd( 86.5876, 126.57, -1.86123, 0.66 ) }
    dend_13 { pt3dadd( 87.0131, 136.419, 1.57877, 0.66 ) }
    dend_13 { pt3dadd( 88.9561, 146.59, 3.12546, 0.66 ) }
    dend_13 { pt3dadd( 91.4769, 156.525, 5.1548, 0.66 ) }
    dend_13 { pt3dadd( 95.301, 166.019, 7.05955, 0.66 ) }
    dend_13 { pt3dadd( 98.2156, 175.747, 9.44073, 0.66 ) }
    dend_13 { pt3dadd( 99.667, 186.119, 9.98834, 0.66 ) }
    dend_13 { pt3dadd( 100.931, 196.234, 12.3575, 0.66 ) }
    dend_13 { pt3dadd( 102.942, 205.898, 15.709, 0.66 ) }
    dend_13 { pt3dadd( 104.261, 215.396, 19.7635, 0.66 ) }
    dend_13 { pt3dadd( 104.192, 225.594, 22.1439, 0.66 ) }
    dend_13 { pt3dadd( 105.415, 235.311, 25.7297, 0.66 ) }
    dend_13 { pt3dadd( 108.854, 244.148, 29.8949, 0.66 ) }
    dend_13 { pt3dadd( 111.008, 253.172, 34.5306, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( 114.485, 261.503, 39.527, 0.66 ) }
    dend_13 { pt3dadd( 116.745, 270.932, 43.3017, 0.66 ) }
    dend_13 { pt3dadd( 117.802, 280.013, 48.2095, 0.66 ) }
    dend_13 { pt3dadd( 120.385, 288.919, 52.8336, 0.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 4/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 88.7745, 107.092, -8.68856, 0.52 ) }
    dend_12 { pt3dadd( 96.3715, 111.405, -13.7294, 0.66 ) }
    dend_12 { pt3dadd( 103.771, 117.32, -17.4046, 0.66 ) }
    dend_12 { pt3dadd( 109.836, 124.464, -21.5188, 0.66 ) }
    dend_12 { pt3dadd( 116.876, 131.209, -24.5467, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 9/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 90.9202, -46.218, 69.1949, 0.66 ) }
    dend_6 { pt3dadd( 91.173, -46.5769, 69.6836, 0.66 ) }
    dend_6 { pt3dadd( 91.4326, -46.9088, 70.1498, 0.66 ) }
    dend_6 { pt3dadd( 92.4214, -48.079, 71.8279, 0.66 ) }
    dend_6 { pt3dadd( 93.1831, -48.9422, 73.0807, 0.66 ) }
    dend_6 { pt3dadd( 93.2116, -48.9736, 73.124, 0.66 ) }
    dend_6 { pt3dadd( 94.2526, -50.1461, 74.5189, 0.66 ) }
    dend_6 { pt3dadd( 94.3085, -50.2038, 74.581, 0.66 ) }
    dend_6 { pt3dadd( 94.446, -50.348, 74.7057, 1.03 ) }
    dend_6 { pt3dadd( 94.446, -50.348, 74.7057, 1.03 ) }
    dend_6 { pt3dadd( 95.0122, -51.1758, 75.097, 0.88 ) }
    dend_6 { pt3dadd( 96.0862, -52.9465, 75.7918, 0.74 ) }
    dend_6 { pt3dadd( 96.1189, -53.0077, 75.8127, 0.74 ) }
    dend_6 { pt3dadd( 97.0111, -54.7576, 76.4161, 0.59 ) }
    dend_6 { pt3dadd( 97.3492, -55.4949, 76.6715, 0.44 ) }
    dend_6 { pt3dadd( 97.7184, -56.3358, 76.9661, 0.29 ) }
    dend_6 { pt3dadd( 97.991, -57.0242, 77.2133, 0.29 ) }
    dend_6 { pt3dadd( 98.394, -58.2044, 77.6179, 0.29 ) }
    dend_6 { pt3dadd( 98.4153, -58.2701, 77.6408, 0.29 ) }
    dend_6 { pt3dadd( 98.6158, -58.9827, 77.9042, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 90.9202, -46.218, 69.1949, 0.66 ) }
    dend_5 { pt3dadd( 90.3027, -45.8018, 69.5, 0.66 ) }
    dend_5 { pt3dadd( 89.4674, -45.1602, 69.8642, 0.37 ) }
    dend_5 { pt3dadd( 88.6618, -44.32, 70.1512, 0.37 ) }
    dend_5 { pt3dadd( 88.6018, -44.2388, 70.1927, 0.37 ) }
    dend_5 { pt3dadd( 87.97, -43.2234, 70.7931, 0.37 ) }
    dend_5 { pt3dadd( 87.9361, -43.1688, 70.8253, 0.37 ) }
    dend_5 { pt3dadd( 87.7246, -42.718, 71.0938, 0.37 ) }
    dend_5 { pt3dadd( 87.3456, -41.5515, 71.783, 0.22 ) }
    dend_5 { pt3dadd( 86.9257, -39.6735, 72.703, 0.22 ) }
    dend_5 { pt3dadd( 86.9181, -39.6119, 72.7404, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 98.6158, -58.9827, 77.9042, 0.15 ) }
    dend_8 { pt3dadd( 100.065, -61.6861, 77.5517, 0.15 ) }
    dend_8 { pt3dadd( 100.678, -62.8309, 77.4024, 0.15 ) }
    dend_8 { pt3dadd( 101.751, -64.8322, 77.1415, 0.15 ) }
    dend_8 { pt3dadd( 101.968, -65.2357, 77.0889, 0.15 ) }
    dend_8 { pt3dadd( 102.941, -67.0513, 76.8521, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 98.6158, -58.9827, 77.9042, 0.29 ) }
    dend_7 { pt3dadd( 98.0664, -58.8527, 77.5742, 0.29 ) }
    dend_7 { pt3dadd( 97.5988, -58.7421, 77.2933, 0.15 ) }
    dend_7 { pt3dadd( 96.6004, -58.506, 76.6935, 0.15 ) }
    dend_7 { pt3dadd( 95.5468, -58.2567, 76.0605, 0.15 ) }
    dend_7 { pt3dadd( 94.3407, -57.9713, 75.3359, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_21, dend_0, dend_50, dend_41, dend_31, dend_22, dend_9, dend_1, dend_58, dend_51, dend_49, dend_42, dend_35, dend_32, dend_26, dend_23, dend_14, dend_10, dend_2, dend_60, dend_59, dend_55, dend_52, dend_46, dend_43, dend_37, dend_36, dend_34, dend_33, dend_28, dend_27, dend_25, dend_24, dend_18, dend_15, dend_11, dend_4, dend_3, dend_62, dend_61, dend_57, dend_56, dend_54, dend_53, dend_48, dend_47, dend_45, dend_44, dend_39, dend_38, dend_30, dend_29, dend_20, dend_19, dend_17, dend_16, dend_13, dend_12, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_55 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_36 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_27 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_11 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_62 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_57 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_56 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_54 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_47 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_45 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_44 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_30 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_17 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_16 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_13 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_12 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_32 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_26 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_42 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_18 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_58 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_59 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_48 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_53 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_39 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_7 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_25 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_61 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 9
    dend_35 nseg = 3
    dend_23 nseg = 7
    dend_2 nseg = 5
    dend_60 nseg = 5
    dend_55 nseg = 3
    dend_52 nseg = 3
    dend_43 nseg = 5
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 15
    dend_27 nseg = 7
    dend_24 nseg = 9
    dend_11 nseg = 5
    dend_62 nseg = 3
    dend_57 nseg = 3
    dend_56 nseg = 7
    dend_54 nseg = 5
    dend_47 nseg = 7
    dend_45 nseg = 13
    dend_44 nseg = 7
    dend_30 nseg = 5
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 9
    dend_13 nseg = 9
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_NBC_3fc0dff69e_0_0


