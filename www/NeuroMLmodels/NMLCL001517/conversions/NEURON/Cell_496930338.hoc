// Cell: Cell_496930338
/*
{
  "id" : "Cell_496930338",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "444.079, 198.235, 44.3204, 11.325", "449.742, 198.235, 44.3204, 11.325", "455.404, 198.235, 44.3204, 11.325" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "449.742, 198.235, 44.3204, 1.0", "455.583, 212.051, 44.3204, 1.0", "461.424, 225.867, 44.3204, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000441501103767
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "447.129, 194.601, 52.6602, 0.2288", "446.423, 193.747, 52.899, 0.4136", "445.863, 192.751, 52.9822, 0.434", "445.006, 192.0, 53.0382, 0.3614" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000441501103767
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "454.685, 198.322, 40.6398, 0.6864", "455.78, 198.341, 39.9056, 0.4806", "456.88, 198.359, 39.5702, 0.3926", "458.006, 198.37, 39.2364, 0.402", "459.15, 198.36, 38.9838, 0.497", "460.283, 198.255, 38.8066, 0.7546", "461.398, 198.034, 38.6985, 0.8366", "462.542, 198.026, 38.652, 0.8496", "463.686, 198.026, 38.6403, 0.8618", "464.829, 198.026, 38.6406, 0.7142", "465.974, 198.026, 38.6406, 0.8094", "467.115, 198.072, 38.6408, 0.7954", "468.214, 198.342, 38.6411, 0.7804", "469.242, 198.84, 38.6417, 0.6996", "470.305, 199.262, 38.6425, 0.5778", "471.393, 199.577, 38.6434, 0.4442", "472.535, 199.657, 38.6448, 0.4366", "473.673, 199.763, 38.6467, 0.3996", "474.811, 199.859, 38.6495, 0.442", "475.937, 199.976, 38.6532, 0.4394", "477.034, 200.292, 38.6582, 0.3718", "478.165, 200.429, 38.6655, 0.3228", "479.31, 200.429, 38.6761, 0.318", "480.454, 200.429, 38.6907, 0.3494", "481.598, 200.429, 38.7097, 0.4408", "482.742, 200.429, 38.7338, 0.4494", "483.881, 200.463, 38.7778, 0.5596", "485.019, 200.529, 38.8475, 0.5348", "486.163, 200.543, 38.911, 0.4584", "487.307, 200.543, 38.9693, 0.464", "488.449, 200.587, 39.0239, 0.4452", "489.585, 200.708, 39.0919, 0.5518", "490.696, 200.926, 39.1832, 0.5202", "491.793, 201.235, 39.2703, 0.4314", "492.915, 201.442, 39.359, 0.4122", "494.002, 201.788, 39.4503, 0.3586", "495.069, 202.098, 39.5858, 0.3466", "496.185, 202.145, 39.7922, 0.3568", "497.322, 202.145, 39.9938, 0.4482", "498.466, 202.145, 40.1528, 0.4928", "499.609, 202.145, 40.2721, 0.4972", "500.754, 202.145, 40.3558, 0.4262", "501.877, 202.013, 40.4247, 0.4504", "502.969, 201.684, 40.486, 0.4262", "504.083, 201.479, 40.5292, 0.4862", "505.227, 201.458, 40.5608, 0.547", "506.371, 201.458, 40.5821, 0.4472", "507.514, 201.426, 40.5938, 0.379", "508.651, 201.311, 40.5969, 0.3708", "509.778, 201.114, 40.5958, 0.4676", "510.852, 200.751, 40.5941, 0.5606", "511.9, 200.293, 40.5916, 0.4672", "512.908, 199.761, 40.5882, 0.441", "513.931, 199.254, 40.5835, 0.366", "515.039, 199.062, 40.577, 0.354", "516.166, 198.889, 40.5681, 0.4012", "517.297, 198.744, 40.5552, 0.3804", "518.44, 198.713, 40.537, 0.4114", "519.568, 198.564, 40.5118, 0.3582", "520.701, 198.408, 40.4782, 0.3398", "521.843, 198.37, 40.4345, 0.374", "522.984, 198.37, 40.3547, 0.335", "524.125, 198.37, 40.2486, 0.3022", "525.27, 198.37, 40.1324, 0.2788", "526.247, 198.84, 40.0089, 0.2822", "527.176, 199.507, 39.863, 0.2888", "528.203, 199.768, 39.583, 0.301", "529.309, 199.914, 39.2669, 0.3242", "530.426, 200.155, 39.0205, 0.3634", "531.502, 200.543, 38.8402, 0.4542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000441501103767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "446.714, 201.222, 37.6284, 0.2288", "446.028, 201.898, 36.6377, 0.465", "445.368, 202.737, 36.2188, 0.5236", "444.759, 203.558, 35.985, 0.555", "444.324, 204.556, 35.7902, 0.5308", "443.789, 205.451, 35.4024, 0.6576", "443.674, 205.566, 34.6326, 0.7456", "443.676, 206.078, 33.6316, 0.7068", "443.212, 207.119, 32.8238, 0.9294" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000441501103767
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "451.118, 193.544, 43.9625, 0.2288", "451.441, 192.446, 43.9233, 0.4534", "451.769, 191.351, 43.9096, 0.6486", "452.147, 190.283, 43.8698, 0.7624", "452.512, 189.206, 43.8357, 0.8044", "452.733, 188.101, 43.9295, 0.7872", "452.95, 186.995, 44.1333, 0.7602", "452.961, 185.855, 44.382, 0.6856", "453.01, 184.85, 44.8132, 0.666" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000441501103767
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "445.438, 196.835, 45.4037, 4.6892", "444.358, 196.484, 45.8153, 1.9546", "443.324, 196.037, 46.2322, 0.9908", "442.408, 195.406, 46.6578, 1.0066", "441.48, 194.76, 47.0361, 1.0918", "440.5, 194.173, 47.3178, 0.9798", "439.516, 193.591, 47.5051, 0.9384", "438.539, 192.996, 47.6526, 0.97", "437.539, 192.452, 47.7571, 0.9592", "436.514, 191.984, 47.8159, 1.0478", "435.528, 191.443, 47.9578, 0.914", "434.603, 190.835, 48.2642, 0.9676", "433.75, 190.264, 48.7754, 0.977", "433.005, 189.587, 49.4516, 0.9722", "432.353, 188.702, 50.1354, 0.8426", "431.488, 188.034, 50.6215, 0.7306", "430.534, 187.503, 51.0588, 0.5868", "430.074, 187.003, 51.6482, 0.468", "429.437, 186.458, 52.2606, 0.4458", "428.381, 186.072, 52.5949, 0.5866" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000441501103767
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "461.424, 225.867, 44.3204, 1.0", "467.265, 239.683, 44.3204, 1.0", "473.107, 253.499, 44.3204, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "445.006, 192.0, 53.0382, 0.3614", "445.001, 192.051, 54.1741, 0.4576", "444.275, 192.137, 56.4805, 0.3874", "443.362, 192.207, 57.4781, 0.3528", "442.359, 192.209, 58.5936, 0.3694", "441.311, 192.131, 59.7128, 0.4654", "440.21, 192.127, 60.7536, 0.5552", "439.132, 192.359, 61.7882, 0.4636", "438.337, 192.896, 62.827, 0.403", "437.978, 193.902, 63.9338, 0.447", "437.284, 193.829, 65.2498, 0.4546", "436.521, 193.536, 66.7764, 0.6006", "436.354, 192.699, 68.3749, 0.46", "436.441, 191.63, 69.9849, 0.3646", "436.527, 190.974, 71.7489, 0.2998", "436.611, 190.643, 73.7327, 0.3236", "436.694, 190.312, 75.8646, 0.3548", "436.568, 190.653, 78.0394, 0.4746", "436.318, 191.383, 80.2449, 0.3974", "435.956, 192.046, 82.4079, 0.3334", "435.503, 192.614, 84.4628, 0.2882", "434.91, 192.831, 86.4004, 0.305", "434.316, 193.05, 88.1989, 0.305", "433.725, 193.267, 91.7694, 0.4576" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "445.006, 192.0, 53.0382, 0.3614", "444.878, 191.21, 53.0659, 0.304", "444.299, 190.26, 53.0642, 0.282", "443.441, 189.513, 53.0331, 0.2886", "442.602, 188.736, 52.9743, 0.3002", "441.76, 187.965, 52.8811, 0.3232", "441.367, 186.936, 52.7369, 0.3602", "440.905, 185.921, 52.528, 0.4546", "440.084, 185.135, 52.3566, 0.505", "439.404, 184.216, 52.2292, 0.5178", "438.914, 183.184, 52.1424, 0.474", "438.131, 182.355, 52.0923, 0.4928", "437.384, 181.489, 52.0708, 0.7286", "436.772, 180.523, 52.0652, 0.6472", "436.452, 179.427, 52.0593, 0.4976", "436.325, 178.29, 52.0509, 0.4418", "435.784, 177.286, 52.0394, 0.4078", "435.268, 176.264, 52.0234, 0.4648", "434.943, 175.168, 52.0008, 0.4456", "434.253, 174.256, 51.9686, 0.559", "433.592, 173.323, 51.9246, 0.5024", "433.204, 172.247, 51.8678, 0.55", "432.661, 171.243, 51.7776, 0.584", "432.092, 170.256, 51.6477, 0.6812", "431.422, 169.35, 51.4651, 0.6944", "430.872, 168.355, 51.2826, 0.6162", "430.54, 167.26, 51.1448, 0.5122", "430.138, 166.19, 51.0488, 0.577", "429.647, 165.157, 50.9905, 0.5914", "429.148, 164.208, 50.962, 0.4448", "428.078, 163.93, 50.9533, 0.3266", "427.53, 162.982, 50.9505, 0.277", "427.509, 161.838, 50.9468, 0.279", "427.42, 160.706, 50.9415, 0.2828", "427.126, 159.599, 50.934, 0.2898", "426.697, 158.569, 50.9233, 0.3026", "426.118, 157.633, 50.9096, 0.3286", "425.883, 156.519, 50.8928, 0.3642", "425.446, 155.467, 50.8614, 0.4918", "424.844, 154.499, 50.808, 0.429", "424.236, 153.537, 50.7615, 0.3926", "423.723, 152.516, 50.7265, 0.3958", "423.182, 151.51, 50.7018, 0.5162", "422.785, 150.443, 50.687, 0.6404", "422.415, 149.369, 50.6806, 0.666", "421.716, 148.511, 50.68, 0.5616", "420.983, 147.673, 50.68, 0.4192", "420.62, 146.599, 50.68, 0.3648", "420.38, 145.481, 50.68, 0.3912", "419.943, 144.432, 50.68, 0.508", "419.342, 143.461, 50.68, 0.6236", "418.658, 142.544, 50.68, 0.6414", "417.844, 141.746, 50.68, 0.4852", "417.302, 140.762, 50.68, 0.4274", "416.471, 140.02, 50.68, 0.3398", "415.592, 139.29, 50.6797, 0.3108", "414.913, 138.372, 50.6797, 0.2946", "414.224, 137.479, 50.6797, 0.3124", "413.971, 136.366, 50.6797, 0.3406", "413.829, 135.24, 50.6794, 0.4174", "413.381, 134.188, 50.6792, 0.441", "413.022, 133.104, 50.6789, 0.3744", "412.712, 132.043, 50.6786, 0.329", "412.144, 131.131, 50.678, 0.323", "412.069, 129.992, 50.6772, 0.3898", "411.906, 128.877, 50.6758, 0.3652", "411.529, 127.797, 50.6744, 0.3526", "411.174, 126.709, 50.6722, 0.3988", "410.572, 125.792, 50.6688, 0.3754", "409.902, 124.914, 50.6646, 0.4026", "409.506, 123.841, 50.6584, 0.341", "408.956, 122.854, 50.6492, 0.3132", "408.055, 122.217, 50.6369, 0.2988", "407.389, 121.393, 50.6215, 0.3204", "406.734, 120.474, 50.6033, 0.3552", "405.721, 120.041, 50.554, 0.4456", "404.954, 119.257, 50.5022, 0.4876", "404.29, 118.327, 50.4616, 0.4876", "403.79, 117.303, 50.4322, 0.4088", "403.112, 116.391, 50.4126, 0.4172", "402.523, 115.412, 50.4022, 0.369", "401.844, 114.496, 50.4, 0.3594", "401.56, 113.397, 50.4, 0.4124", "401.332, 112.276, 50.4, 0.3954", "400.971, 111.191, 50.4, 0.466", "400.971, 110.047, 50.4, 0.3304", "400.858, 108.909, 50.4, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "531.502, 200.543, 38.8402, 0.4542", "531.512, 200.69, 39.8252, 0.6864", "532.24, 201.487, 40.8178, 0.546", "533.232, 201.889, 41.2406, 0.5666", "534.18, 202.377, 41.7315, 0.4696", "535.107, 202.984, 42.2464, 0.4868", "535.938, 203.753, 42.7008, 0.4776", "536.609, 204.671, 43.097, 0.4322", "536.909, 205.751, 43.4571, 0.4858", "537.232, 206.846, 43.7262, 0.3728", "537.669, 207.893, 43.9648, 0.2796", "537.794, 209.009, 44.52, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "531.502, 200.543, 38.8402, 0.4542", "532.205, 200.947, 38.7212, 0.5346", "533.232, 201.374, 38.6568, 0.4242", "534.367, 201.458, 38.6378, 0.3358", "535.51, 201.458, 38.6344, 0.294", "536.655, 201.455, 38.6347, 0.31", "537.789, 201.333, 38.6406, 0.3426", "538.927, 201.245, 38.6344, 0.3898", "540.044, 201.064, 38.5966, 0.5418", "541.164, 200.843, 38.572, 0.511", "542.073, 200.772, 38.7366, 0.5968", "543.216, 200.772, 38.8721, 0.5214", "544.361, 200.772, 38.9777, 0.6036", "545.502, 200.813, 39.0547, 0.5936", "546.633, 200.962, 39.1014, 0.449", "547.776, 201.001, 39.1037, 0.3344", "548.883, 201.128, 39.0454, 0.2912", "549.685, 201.87, 38.9995, 0.3066", "550.517, 202.485, 38.9648, 0.3284", "551.648, 202.616, 38.9404, 0.4008", "552.749, 202.86, 38.9259, 0.3794", "553.859, 203.05, 38.92, 0.41", "555.0, 203.117, 38.92, 0.3544", "556.036, 203.523, 38.92, 0.339", "557.054, 204.039, 38.92, 0.342", "558.138, 204.388, 38.92, 0.4244", "559.216, 204.768, 38.92, 0.4316", "560.094, 205.467, 38.92, 0.4658", "561.116, 205.946, 38.92, 0.6556", "562.223, 206.228, 38.92, 0.6242", "563.352, 206.41, 38.92, 0.596", "564.481, 206.601, 38.92, 0.3982", "565.297, 207.363, 38.92, 0.2796", "566.393, 207.636, 38.92, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "443.212, 207.119, 32.8238, 0.9294", "443.592, 207.532, 32.2263, 0.8276", "443.931, 208.594, 31.8329, 0.619", "444.521, 209.549, 31.6254, 0.5588", "444.941, 210.6, 31.5582, 0.4616", "445.47, 211.608, 31.547, 0.4416", "446.214, 212.472, 31.5216, 0.5416", "447.079, 213.218, 31.4784, 0.5198", "447.635, 214.205, 31.4163, 0.5698", "447.755, 215.335, 31.3239, 0.68", "447.85, 216.471, 31.1774, 0.5716", "447.906, 217.614, 31.015, 0.5156", "448.211, 218.714, 30.8409, 0.623", "448.884, 219.456, 30.485, 0.713", "449.178, 220.507, 30.0703, 0.7222", "449.611, 221.565, 29.734, 0.5906", "450.13, 222.558, 29.4708, 0.609", "450.977, 223.322, 29.26, 0.7424", "451.622, 224.226, 29.0657, 0.737", "451.88, 225.334, 28.891, 0.5802", "452.2, 226.425, 28.7431, 0.5452", "452.703, 227.452, 28.6003, 0.6112", "453.023, 228.514, 28.4262, 0.5564", "453.023, 229.627, 28.1856, 0.629", "452.995, 230.762, 27.9434, 0.604", "452.91, 231.892, 27.699, 0.6456", "452.828, 233.033, 27.5012, 0.525", "452.825, 234.172, 27.3316, 0.5744", "452.887, 235.312, 27.1792, 0.485", "452.91, 236.449, 27.04, 0.5108", "452.937, 237.583, 26.9012, 0.5452", "453.145, 238.695, 26.8074, 0.4448", "453.367, 239.797, 26.7516, 0.3686", "453.484, 240.928, 26.7327, 0.3804", "453.661, 242.054, 26.746, 0.3466", "453.701, 243.197, 26.7852, 0.3246", "453.59, 244.322, 26.8769, 0.315", "453.482, 245.445, 27.0024, 0.375", "453.513, 246.586, 27.1277, 0.3368", "453.628, 247.721, 27.2471, 0.3056", "453.605, 248.849, 27.3365, 0.2848", "453.284, 249.94, 27.3947, 0.2936", "452.986, 251.037, 27.425, 0.3096", "452.734, 252.149, 27.4537, 0.34", "452.53, 253.268, 27.4719, 0.394", "452.533, 254.404, 27.4477, 0.5058", "452.905, 255.454, 27.4005, 0.6556", "453.048, 256.51, 27.3164, 0.5266", "453.023, 257.649, 27.2327, 0.4306", "453.023, 258.793, 27.1571, 0.4736", "453.06, 259.937, 27.0899, 0.3956", "453.135, 261.079, 27.0278, 0.3298", "453.404, 262.189, 26.9612, 0.2826", "453.579, 263.318, 26.882, 0.2894", "453.596, 264.461, 26.7777, 0.3016", "453.096, 265.472, 26.6138, 0.327", "452.686, 266.517, 26.3693, 0.3612", "452.681, 267.659, 26.0942, 0.4864", "452.661, 268.791, 25.7517, 0.4194", "452.478, 269.878, 25.3039, 0.3746", "452.153, 270.951, 24.8139, 0.3626", "451.993, 272.059, 24.3118, 0.4528", "451.993, 273.107, 23.7499, 0.5322", "452.008, 274.022, 23.0984, 0.4196", "452.122, 275.138, 22.5884, 0.3274", "452.376, 276.251, 22.2799, 0.2782", "452.504, 277.382, 22.1642, 0.2814", "452.655, 278.436, 22.3012, 0.287", "452.917, 279.403, 22.6704, 0.2988", "453.221, 280.487, 23.0403, 0.3144", "453.796, 281.474, 23.3407, 0.3738", "454.479, 282.388, 23.579, 0.3346", "455.104, 283.319, 23.7997, 0.3014", "455.717, 284.261, 23.9725, 0.2772", "456.41, 285.172, 24.0651, 0.2796", "457.265, 285.902, 24.1101, 0.2838", "458.125, 286.643, 24.1104, 0.2916", "458.584, 287.667, 24.0368, 0.3072", "458.914, 288.76, 23.9254, 0.3298", "459.329, 289.821, 23.7667, 0.4036", "459.754, 290.881, 23.613, 0.3842", "460.0, 291.956, 23.3684, 0.4208", "460.002, 293.099, 23.1572, 0.3644", "460.002, 294.237, 22.958, 0.4068", "460.002, 295.381, 22.68, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "443.212, 207.119, 32.8238, 0.9294", "442.134, 207.539, 31.2738, 0.4576", "441.687, 208.225, 29.8315, 0.7554", "441.393, 209.239, 29.2188, 0.8234", "440.44, 209.059, 28.6098, 0.8958", "440.237, 208.083, 27.8827, 0.8336", "439.933, 207.029, 27.1164, 0.7558", "439.717, 206.16, 26.2126, 0.6592", "439.296, 205.771, 25.1525, 0.4772" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "453.01, 184.85, 44.8132, 0.666", "453.445, 184.568, 46.6984, 0.2288", "454.422, 184.248, 45.7694, 0.415", "455.426, 184.239, 45.292, 0.523", "456.519, 184.239, 44.7009, 0.793", "457.628, 184.239, 44.051, 0.9552", "458.755, 184.239, 43.3958, 0.8388", "459.861, 184.131, 42.7311, 0.5888", "460.904, 183.792, 42.0406, 0.5198", "461.948, 183.487, 41.3437, 0.5368", "463.051, 183.388, 40.6459, 0.5508", "464.145, 183.281, 39.9386, 0.6628", "465.211, 183.101, 39.2036, 0.909", "466.195, 182.741, 38.442, 0.9498", "467.148, 182.238, 37.7611, 0.755", "468.221, 182.188, 37.2274, 0.7914", "469.27, 182.189, 36.6694, 0.761", "470.081, 181.776, 35.9985, 0.7206", "470.528, 181.131, 35.2268, 0.5682", "470.889, 180.4, 34.4347, 0.434", "471.807, 180.13, 33.8965, 0.3808", "472.479, 180.114, 33.9402, 0.4754", "473.092, 180.114, 34.4842, 0.399", "473.823, 180.114, 35.3265, 0.336", "474.884, 180.114, 36.0965, 0.2942", "476.0, 179.888, 36.6131, 0.3116", "476.642, 179.117, 36.6691, 0.3392", "477.306, 178.294, 36.335, 0.4146", "478.209, 177.663, 35.7809, 0.4358", "479.036, 176.984, 35.0843, 0.3652", "479.908, 176.324, 34.3731, 0.3108", "480.898, 175.797, 33.7361, 0.2944", "481.865, 175.2, 33.2186, 0.3124", "482.793, 174.532, 32.8266, 0.3396", "483.754, 173.927, 32.4839, 0.4204", "484.736, 173.397, 32.1378, 0.4218", "485.77, 172.915, 31.836, 0.4592", "486.819, 172.458, 31.584, 0.5878", "487.835, 171.933, 31.3555, 0.768", "488.821, 171.356, 31.1324, 0.9274", "489.832, 170.899, 30.833, 0.927", "490.829, 170.554, 30.4212, 0.9886", "491.894, 170.154, 30.0392, 0.8016", "492.963, 169.751, 29.7312, 0.7728", "494.068, 169.454, 29.4848, 0.548", "495.185, 169.214, 29.2846, 0.5074", "496.284, 168.926, 29.0881, 0.435", "497.383, 168.641, 28.8862, 0.5158", "498.499, 168.417, 28.7358, 0.5366", "499.613, 168.209, 28.6121, 0.744", "500.727, 167.993, 28.3912, 0.7674", "501.837, 167.793, 28.0652, 0.7336", "502.973, 167.763, 27.6838, 0.5872", "504.053, 168.018, 27.2255, 0.4926", "504.812, 168.428, 26.5635, 0.3758", "505.314, 167.98, 25.6943, 0.3316", "505.965, 167.524, 24.8187, 0.3282", "507.016, 167.39, 24.2339, 0.399", "507.842, 166.723, 24.0251, 0.3834", "508.359, 165.862, 24.1723, 0.3812", "508.845, 165.474, 24.7353, 0.4762", "509.629, 165.298, 25.4909, 0.4006", "510.359, 164.628, 26.1599, 0.3392", "510.668, 163.811, 26.3739, 0.3002", "511.165, 163.036, 26.1308, 0.3216", "511.829, 162.223, 25.5936, 0.3646", "512.565, 161.534, 24.8368, 0.427", "513.565, 161.176, 24.0543, 0.6284", "514.663, 160.904, 23.4074, 0.5848", "515.768, 160.725, 22.905, 0.4688", "516.888, 160.639, 22.5277, 0.4238", "518.008, 160.829, 22.3151, 0.4322", "518.913, 160.407, 22.6394, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "453.01, 184.85, 44.8132, 0.666", "452.752, 184.031, 45.159, 0.7396", "452.341, 182.968, 45.451, 0.801", "451.956, 182.006, 45.801, 0.8224", "451.371, 181.062, 45.9514, 0.8522", "451.272, 179.93, 46.0152, 0.726" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "428.381, 186.072, 52.5949, 0.5866", "428.118, 186.2, 55.8653, 0.9152", "427.13, 186.265, 57.7055, 0.7766", "426.341, 186.243, 58.5385, 0.5876", "425.41, 186.243, 59.5515, 0.4208", "424.484, 186.243, 60.6987, 0.3662", "423.385, 186.243, 61.7761, 0.3998", "422.242, 186.243, 62.7004, 0.4944", "421.19, 186.243, 63.637, 0.7426", "420.308, 186.243, 64.6898, 0.8498", "419.234, 186.188, 65.5894, 0.7018", "418.423, 186.668, 66.5888, 0.7378", "417.559, 186.815, 67.7446, 0.6714", "416.484, 186.823, 68.8996, 0.5082", "415.389, 186.874, 70.0109, 0.399", "414.31, 186.93, 71.1152, 0.4026", "413.459, 186.93, 72.3131, 0.5526", "412.781, 186.93, 73.6814, 0.5932", "411.988, 186.787, 75.1279, 0.4482", "411.585, 186.059, 76.5481, 0.333", "411.178, 185.576, 77.9993, 0.2888", "410.243, 185.147, 79.2243, 0.3008", "409.339, 184.461, 80.2004, 0.324", "408.449, 183.787, 81.048, 0.3622", "407.737, 183.176, 81.9633, 0.4564", "407.023, 182.616, 82.9284, 0.5168", "406.573, 181.636, 83.7502, 0.499", "405.673, 181.025, 84.4939, 0.6366", "405.209, 180.13, 85.2953, 0.5224", "404.387, 179.732, 86.1834, 0.5008", "403.551, 179.291, 87.1178, 0.4542", "403.366, 178.847, 88.2605, 0.3998", "402.953, 178.163, 89.4477, 0.371", "402.165, 177.39, 90.3972, 0.4266", "401.624, 176.398, 91.0773, 0.4576", "400.678, 175.758, 91.539, 0.4076", "399.719, 175.137, 91.845, 0.379", "398.695, 174.627, 92.059, 0.4722", "397.564, 174.46, 92.2712, 0.3932", "396.426, 174.35, 92.5515, 0.3254", "395.282, 174.346, 92.9264, 0.2746", "395.288, 174.355, 93.4956, 0.2746", "394.379, 174.169, 94.3345, 0.2746", "393.49, 173.969, 95.3806, 0.2746", "393.134, 173.798, 96.714, 0.2746", "392.777, 173.626, 98.205, 0.2746", "392.565, 173.758, 99.484, 0.2746", "391.746, 173.124, 100.45, 0.2748", "390.819, 172.468, 101.103, 0.2748", "389.807, 171.938, 101.513, 0.2752", "388.793, 171.407, 101.748, 0.2756", "387.721, 171.035, 101.949, 0.2766", "386.647, 170.667, 102.177, 0.2784", "385.573, 170.299, 102.442, 0.2818", "384.497, 169.932, 102.737, 0.2876", "383.424, 169.564, 103.045, 0.2998", "382.35, 169.197, 103.351, 0.316", "381.277, 168.828, 103.641, 0.377", "380.203, 168.461, 103.912, 0.3408", "379.129, 168.094, 104.159, 0.3124", "378.086, 167.628, 104.338, 0.2988", "377.052, 167.138, 104.452, 0.3142", "376.019, 166.649, 104.516, 0.3736", "374.984, 166.159, 104.543, 0.334", "373.935, 165.71, 104.549, 0.3002", "372.854, 165.334, 104.546, 0.2752", "371.773, 164.958, 104.544, 0.2756", "370.693, 164.583, 104.546, 0.2766", "369.613, 164.208, 104.549, 0.2782", "368.536, 163.817, 104.553, 0.2816", "367.48, 163.379, 104.559, 0.2872", "366.423, 162.941, 104.566, 0.2992", "365.367, 162.503, 104.574, 0.3148", "364.31, 162.065, 104.583, 0.3748", "363.223, 161.717, 104.593, 0.3364", "362.112, 161.449, 104.605, 0.3048", "361.0, 161.182, 104.62, 0.2834", "359.888, 160.914, 104.637, 0.2908", "358.776, 160.645, 104.66, 0.3058", "357.661, 160.377, 104.689, 0.3272", "356.698, 159.816, 104.727, 0.3988", "355.821, 159.082, 104.779, 0.3754", "354.941, 158.349, 104.846, 0.4026", "354.082, 157.601, 104.937, 0.341", "353.376, 156.707, 105.092, 0.313", "352.671, 155.815, 105.297, 0.2998", "351.965, 154.923, 105.542, 0.316", "351.26, 154.029, 105.816, 0.377", "350.556, 153.137, 106.107, 0.3408", "349.602, 152.559, 106.408, 0.3124", "348.571, 152.082, 106.713, 0.2988", "347.54, 151.604, 107.02, 0.3142", "346.508, 151.127, 107.325, 0.3734", "345.478, 150.649, 107.627, 0.3338", "344.447, 150.171, 107.924, 0.3", "343.391, 149.747, 108.209, 0.2746", "342.315, 149.373, 108.476, 0.2746", "341.237, 149.0, 108.729, 0.2748", "340.16, 148.626, 108.972, 0.2748", "339.083, 148.252, 109.209, 0.2752", "338.006, 147.878, 109.441, 0.2758", "336.928, 147.504, 109.673, 0.2768", "335.852, 147.131, 109.905, 0.2786", "334.773, 146.757, 110.137, 0.282", "333.698, 146.383, 110.37, 0.2882", "332.62, 146.009, 110.604, 0.2996", "331.544, 145.635, 110.838, 0.3232", "330.466, 145.26, 111.077, 0.354", "329.39, 144.888, 111.323, 0.473", "328.271, 144.659, 111.554, 0.3946", "327.144, 144.462, 111.776, 0.3278", "326.038, 144.249, 112.058, 0.2792", "324.94, 144.03, 112.416, 0.283", "323.84, 143.81, 112.831, 0.2904", "322.742, 143.59, 113.284, 0.3034", "321.644, 143.371, 113.756, 0.3302", "320.545, 143.151, 114.229, 0.3674", "319.49, 142.8, 114.661, 0.4974", "318.516, 142.2, 115.005, 0.4418", "317.542, 141.6, 115.293, 0.4052", "316.568, 140.999, 115.553, 0.4734", "315.673, 140.335, 115.898, 0.3954", "314.785, 139.664, 116.328, 0.3294", "313.898, 138.994, 116.83, 0.2818", "313.01, 138.322, 117.387, 0.2882", "312.122, 137.652, 117.972, 0.2994", "311.234, 136.981, 118.559, 0.323", "310.346, 136.311, 119.126, 0.3536", "309.459, 135.639, 119.666, 0.4724", "308.43, 135.158, 120.126, 0.3932", "307.395, 134.684, 120.52, 0.3256", "306.361, 134.21, 120.86, 0.2748", "305.327, 133.735, 121.16, 0.275", "304.293, 133.26, 121.432, 0.2752", "303.257, 132.785, 121.684, 0.2758", "302.223, 132.312, 121.924, 0.2768", "301.189, 131.837, 122.15, 0.2786", "300.154, 131.362, 122.358, 0.2822", "299.104, 130.909, 122.514, 0.2888", "298.053, 130.458, 122.623, 0.3006", "297.001, 130.008, 122.697, 0.3236", "295.949, 129.558, 122.747, 0.3624", "294.898, 129.107, 122.785, 0.4526", "293.824, 128.716, 122.82, 0.5316", "292.734, 128.367, 122.862, 0.4188", "291.645, 128.019, 122.916, 0.3256", "290.555, 127.67, 122.989, 0.275", "289.466, 127.322, 123.082, 0.2752", "288.365, 127.042, 123.225, 0.2758", "287.247, 126.841, 123.438, 0.2768", "286.133, 126.638, 123.711, 0.2788", "285.017, 126.437, 124.02, 0.2824", "283.902, 126.236, 124.344, 0.2882", "282.785, 126.035, 124.664, 0.305", "281.67, 125.833, 124.963, 0.305", "280.555, 125.632, 125.547, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "428.381, 186.072, 52.5949, 0.5866", "427.592, 185.767, 52.3636, 0.6512", "427.092, 185.624, 51.6956, 0.581", "426.196, 185.27, 50.8824, 0.4562", "425.233, 184.668, 50.1892, 0.429", "424.25, 184.085, 49.7154, 0.531", "423.169, 183.71, 49.4948, 0.6672", "422.276, 183.016, 49.4514, 0.718" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "439.296, 205.771, 25.1525, 0.4772", "438.576, 206.167, 24.3492, 0.3818", "437.573, 206.714, 23.7648, 0.4042", "436.533, 207.192, 23.3765, 0.3932", "435.478, 207.62, 23.1389, 0.3996", "434.364, 207.868, 23.0062, 0.5098", "433.293, 208.195, 22.8906, 0.4648", "432.276, 208.697, 22.7426, 0.4484", "431.376, 209.361, 22.6045, 0.5494", "431.174, 210.425, 22.4682, 0.5564", "431.26, 211.562, 22.3097, 0.5294", "431.618, 212.619, 22.0931, 0.4456", "432.243, 213.563, 21.8883, 0.4528", "432.82, 214.549, 21.7124, 0.593", "433.24, 215.594, 21.4973, 0.6936", "433.616, 216.646, 21.2401, 0.5106", "434.483, 217.334, 21.0367, 0.364", "435.219, 218.199, 20.8962, 0.3", "435.641, 219.256, 20.8015, 0.3166", "436.333, 220.157, 20.7451, 0.378", "436.703, 221.235, 20.7227, 0.3426", "436.889, 222.364, 20.72, 0.3158", "436.894, 223.508, 20.72, 0.305", "436.866, 224.651, 20.72, 0.3248", "436.609, 225.766, 20.72, 0.3982", "436.549, 226.908, 20.72, 0.356", "436.207, 227.999, 20.72, 0.4576" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "439.296, 205.771, 25.1525, 0.4772", "439.066, 205.408, 22.6078, 0.4576", "438.264, 204.676, 23.1945, 0.3614", "437.325, 204.444, 23.5121, 0.3038", "436.875, 204.928, 24.0731, 0.2816", "435.84, 204.888, 24.5524, 0.2876", "434.704, 205.014, 24.8333, 0.2996", "433.725, 205.571, 24.8778, 0.3158", "433.364, 205.947, 24.4307, 0.3766", "432.766, 205.107, 23.8777, 0.3398", "431.812, 204.889, 23.3218, 0.311", "431.529, 205.513, 22.7079, 0.295", "430.927, 205.883, 22.4127, 0.312", "429.876, 205.747, 22.2515, 0.3464", "429.066, 205.389, 21.9628, 0.3968", "428.176, 204.873, 21.9161, 0.5542", "427.085, 204.77, 21.9709, 0.5356", "425.951, 204.652, 21.9615, 0.6354", "424.812, 204.69, 21.8565, 0.6252", "423.796, 205.035, 21.6828, 0.6408", "422.939, 205.627, 21.3735, 0.7294", "422.043, 205.443, 20.864, 0.6044", "421.13, 205.116, 20.3843, 0.6328", "420.303, 205.721, 20.0526, 0.5678", "419.626, 205.655, 19.5058, 0.5592", "418.535, 205.636, 19.2085, 0.4576", "417.404, 205.568, 19.0803, 0.6864" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "451.272, 179.93, 46.0152, 0.726", "451.064, 179.545, 48.16, 0.6864", "450.837, 178.474, 48.5422, 0.4632", "450.049, 178.006, 48.7323, 0.3622", "449.484, 177.448, 49.0291, 0.3376", "448.928, 176.449, 49.273, 0.4166", "448.368, 175.452, 49.4698, 0.4156", "447.708, 174.521, 49.6261, 0.443", "447.016, 173.618, 49.751, 0.58", "446.432, 172.647, 49.8638, 0.6462", "445.701, 171.776, 49.9982, 0.5358", "445.06, 170.829, 50.1494, 0.5478", "444.426, 169.893, 50.3597, 0.4336", "443.807, 168.962, 50.6366, 0.4258", "443.161, 168.017, 50.9023, 0.3366", "442.661, 167.015, 51.1879, 0.3052", "442.023, 166.349, 51.5141, 0.2842", "440.948, 166.045, 51.8776, 0.2924", "440.163, 165.273, 52.2945, 0.3076", "439.801, 164.289, 52.8802, 0.3362", "439.334, 163.59, 53.7418, 0.3866", "439.135, 163.238, 54.8895, 0.4922", "438.71, 162.61, 56.1434, 0.6306", "438.181, 161.84, 57.3818, 0.4782", "437.535, 160.975, 58.4268, 0.3514", "436.903, 160.031, 59.145, 0.2758", "436.586, 158.937, 59.5829, 0.2768", "436.009, 157.949, 59.8094, 0.2786", "435.424, 156.966, 59.9046, 0.2822", "434.784, 156.037, 59.9304, 0.2886", "434.01, 155.249, 59.9343, 0.3016", "433.534, 154.258, 59.9402, 0.3194", "432.66, 153.519, 59.948, 0.3834", "431.756, 152.827, 59.9595, 0.3524", "431.22, 151.907, 59.9752, 0.334", "430.686, 150.915, 59.9967, 0.3394", "429.996, 150.004, 60.027, 0.3854", "429.234, 149.151, 60.0712, 0.5258", "428.383, 148.389, 60.1331, 0.5176", "427.738, 147.458, 60.2137, 0.4344", "427.017, 146.573, 60.3134, 0.3816", "426.27, 145.73, 60.4934, 0.4768", "425.459, 145.018, 60.8, 0.4018", "424.701, 144.169, 61.0694, 0.341", "423.98, 143.279, 61.2968, 0.3046", "422.915, 142.89, 61.4944, 0.3252", "421.963, 142.256, 61.6739, 0.3938", "420.987, 141.674, 61.8817, 0.3728", "419.858, 141.497, 62.0816, 0.3664", "418.823, 141.126, 62.3171, 0.4254", "418.436, 140.395, 62.8102, 0.4198", "417.504, 139.764, 63.2864, 0.5102", "416.668, 138.987, 63.6964, 0.4174", "415.768, 138.284, 64.0346, 0.3652", "414.889, 137.594, 64.3068, 0.3738", "414.301, 136.62, 64.5504, 0.3346", "413.618, 135.762, 64.7892, 0.3012", "412.76, 135.064, 65.0465, 0.2768", "412.047, 134.176, 65.2392, 0.2788", "411.411, 133.227, 65.3752, 0.2824", "410.665, 132.364, 65.462, 0.289", "409.802, 131.616, 65.506, 0.3012", "408.818, 131.072, 65.52, 0.3244", "407.702, 130.878, 65.52, 0.364", "406.56, 130.827, 65.52, 0.4554", "405.419, 130.765, 65.52, 0.5368", "404.275, 130.759, 65.52, 0.4284", "403.131, 130.759, 65.52, 0.3434", "401.987, 130.759, 65.52, 0.3076", "400.97, 130.421, 65.52, 0.338", "400.171, 129.605, 65.52, 0.3814", "399.247, 128.955, 65.52, 0.5258", "398.256, 128.387, 65.52, 0.4818", "397.152, 128.183, 65.52, 0.5408", "396.013, 128.086, 65.52, 0.4266", "394.953, 127.688, 65.52, 0.3842", "394.14, 126.903, 65.52, 0.3982", "393.184, 126.29, 65.52, 0.4322", "392.506, 125.382, 65.52, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "451.272, 179.93, 46.0152, 0.726", "451.311, 178.477, 45.8648, 0.6864", "451.579, 177.367, 45.6982, 0.5854", "452.032, 176.336, 45.4485, 0.531", "452.29, 175.223, 45.2463, 0.4726" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "422.276, 183.016, 49.4514, 0.718", "421.82, 183.684, 49.9694, 0.6474", "420.736, 183.726, 50.4655, 0.6308", "419.592, 183.726, 50.8743, 0.5028", "418.453, 183.62, 51.2019, 0.5078", "417.31, 183.612, 51.4626, 0.4848", "416.2, 183.345, 51.6734, 0.5988", "415.107, 183.008, 51.8414, 0.736", "413.99, 182.822, 52.0996, 0.8938", "412.875, 182.811, 52.4776, 0.7392", "411.745, 182.811, 52.9169, 0.564", "410.717, 182.706, 53.5116, 0.6144", "409.577, 182.697, 54.0708, 0.4868", "408.461, 182.697, 54.6557, 0.4088", "407.342, 182.582, 55.2381, 0.4088", "406.223, 182.58, 55.8158, 0.3938", "405.098, 182.518, 56.3763, 0.4376", "404.013, 182.468, 56.971, 0.4016", "403.005, 182.461, 57.6559, 0.4458", "401.866, 182.418, 58.2417, 0.4462", "400.742, 182.268, 58.73, 0.3856", "399.678, 181.867, 59.1685, 0.3432", "399.124, 181.691, 59.6397, 0.3804", "398.756, 181.232, 60.177, 0.3466", "397.881, 180.515, 60.6802, 0.3248", "397.006, 179.798, 61.1716, 0.3154", "396.129, 179.079, 61.647, 0.3756", "395.254, 178.362, 62.0992, 0.338", "394.378, 177.645, 62.5274, 0.3078", "393.503, 176.926, 62.9426, 0.289", "392.628, 176.209, 63.3632, 0.3012", "391.751, 175.492, 63.7916, 0.3248", "390.876, 174.773, 64.23, 0.3644", "390.001, 174.056, 64.6814, 0.4562", "389.125, 173.339, 65.147, 0.5386", "388.046, 173.145, 65.6586, 0.4314", "386.939, 173.023, 66.2102, 0.3502", "385.831, 172.901, 66.7912, 0.3152", "384.725, 172.778, 67.391, 0.3754", "383.617, 172.656, 67.9988, 0.3376", "382.51, 172.533, 68.6053, 0.3068", "381.404, 172.411, 69.1989, 0.287", "380.297, 172.29, 69.7726, 0.2988", "379.19, 172.167, 70.32, 0.3142", "378.083, 172.045, 70.8336, 0.3734", "376.977, 171.923, 71.3073, 0.3338", "375.868, 171.703, 71.6811, 0.3", "374.759, 171.419, 71.9348, 0.2746", "373.651, 171.137, 72.0958, 0.2746", "372.543, 170.854, 72.1907, 0.2748", "371.434, 170.57, 72.2445, 0.2748", "370.327, 170.288, 72.2806, 0.275", "369.217, 170.004, 72.3201, 0.2756", "368.109, 169.722, 72.3722, 0.2764", "367.051, 169.318, 72.4492, 0.278", "366.066, 168.742, 72.5651, 0.2808", "365.079, 168.166, 72.7132, 0.2862", "364.095, 167.589, 72.8871, 0.2958", "363.109, 167.013, 73.0814, 0.3148", "362.124, 166.437, 73.2908, 0.3452", "361.105, 165.936, 73.5174, 0.4254", "360.036, 165.549, 73.7671, 0.457", "358.967, 165.163, 74.0328, 0.3988", "357.898, 164.776, 74.3078, 0.3988", "356.831, 164.388, 74.5864, 0.3338", "355.712, 164.339, 74.8524, 0.3", "354.574, 164.419, 75.1005, 0.2746", "353.436, 164.498, 75.332, 0.2746", "352.298, 164.578, 75.5507, 0.2746", "351.161, 164.657, 75.759, 0.2746", "350.023, 164.736, 75.959, 0.2746", "348.884, 164.816, 76.1513, 0.2746", "347.747, 164.895, 76.3347, 0.2746", "346.609, 164.975, 76.5069, 0.2746", "345.471, 165.054, 76.666, 0.2746", "344.329, 165.049, 76.7861, 0.2746", "343.185, 165.024, 76.8695, 0.2746", "342.04, 165.0, 76.9255, 0.2746", "340.897, 164.976, 76.9636, 0.2746", "339.754, 164.952, 76.9927, 0.2746", "338.609, 164.927, 77.0213, 0.2746", "337.466, 164.903, 77.0588, 0.2746", "336.322, 164.879, 77.1109, 0.2746", "335.269, 164.434, 77.1809, 0.2746", "334.214, 163.99, 77.2747, 0.2746", "333.16, 163.545, 77.3993, 0.2748", "332.07, 163.279, 77.6028, 0.2748", "330.954, 163.14, 77.9066, 0.2752", "329.839, 163.003, 78.2877, 0.2756", "328.723, 162.864, 78.7251, 0.2766", "327.607, 162.727, 79.1977, 0.2784", "326.491, 162.589, 79.6852, 0.2818", "325.375, 162.451, 80.169, 0.288", "324.26, 162.313, 80.6397, 0.2994", "323.143, 162.176, 81.0984, 0.3204", "322.025, 162.022, 81.5346, 0.3612", "320.898, 161.826, 81.9017, 0.4268", "319.771, 161.629, 82.2248, 0.5968", "318.644, 161.432, 82.5233, 0.6784", "317.92, 161.336, 82.9553, 0.5914", "317.918, 161.418, 83.7413, 0.67", "317.579, 161.418, 84.359, 0.5672", "316.435, 161.418, 84.8277, 0.439", "315.29, 161.418, 85.1586, 0.3558", "314.147, 161.418, 85.3639, 0.3674", "313.027, 161.26, 85.458, 0.4986", "311.936, 160.961, 85.4787, 0.4368", "310.792, 160.961, 85.5039, 0.432", "309.657, 160.961, 85.573, 0.3482", "308.513, 160.961, 85.6344, 0.326", "307.368, 160.961, 85.6898, 0.3248", "306.225, 160.961, 85.7399, 0.3574", "305.081, 160.961, 85.7858, 0.4792", "303.938, 160.961, 85.8304, 0.4056", "302.816, 160.961, 85.934, 0.3496", "301.676, 160.961, 86.0266, 0.3142", "300.532, 160.961, 86.093, 0.3736", "299.388, 160.961, 86.1339, 0.3342", "298.243, 160.961, 86.1493, 0.3006", "297.1, 160.961, 86.1384, 0.2756", "295.961, 160.905, 86.0989, 0.2766", "294.821, 160.846, 86.0418, 0.2784", "293.677, 160.846, 85.9687, 0.2816", "292.533, 160.846, 85.8813, 0.2874", "291.424, 160.846, 85.6898, 0.2994", "290.336, 160.846, 85.4134, 0.3154", "289.191, 160.846, 85.1962, 0.3758", "288.048, 160.846, 85.0352, 0.3382", "286.904, 160.846, 84.926, 0.3078", "285.76, 160.846, 84.8644, 0.289", "284.616, 160.846, 84.8448, 0.3024", "283.486, 160.713, 84.8467, 0.321", "282.486, 160.173, 84.8492, 0.386", "281.362, 159.967, 84.8529, 0.3582", "280.22, 159.931, 84.8582, 0.34", "279.297, 159.5, 84.8655, 0.3742", "278.182, 159.315, 84.8756, 0.3354", "277.044, 159.245, 84.8898, 0.3028", "275.911, 159.092, 84.9089, 0.2796", "274.776, 159.016, 84.9374, 0.284", "273.723, 158.817, 84.978, 0.2922", "272.661, 158.558, 85.0318, 0.3068", "271.518, 158.558, 85.0982, 0.3366", "270.379, 158.558, 85.1841, 0.3786", "269.323, 158.516, 85.4255, 0.5206", "268.245, 158.134, 85.6159, 0.4724", "267.109, 158.101, 85.7685, 0.5232", "265.971, 158.101, 85.8906, 0.3932", "264.839, 158.03, 85.9463, 0.3256", "263.715, 157.873, 85.9354, 0.2748", "262.571, 157.872, 85.8508, 0.2752", "261.435, 157.763, 85.7044, 0.2758", "260.302, 157.737, 85.5235, 0.2768", "259.174, 157.562, 85.2513, 0.2786", "258.056, 157.414, 84.8753, 0.282", "257.466, 157.414, 84.1061, 0.288", "256.877, 157.191, 83.0416, 0.3008", "256.023, 157.186, 81.9689, 0.3178", "254.912, 156.982, 81.0645, 0.3802", "253.838, 156.842, 80.1996, 0.3464", "252.743, 156.776, 79.396, 0.3242", "251.657, 156.443, 78.7671, 0.3142", "250.626, 156.266, 78.129, 0.3736", "249.853, 155.641, 77.4578, 0.334", "249.151, 155.584, 76.5951, 0.3002", "248.122, 155.533, 75.7753, 0.275", "246.982, 155.47, 75.1422, 0.2754", "245.849, 155.47, 74.6074, 0.2762", "244.787, 155.47, 74.1056, 0.2778", "243.659, 155.346, 73.7428, 0.2806", "242.674, 154.783, 73.5244, 0.2852", "241.535, 154.783, 73.3992, 0.2966", "240.391, 154.783, 73.3046, 0.305", "239.312, 154.898, 73.1357, 0.3814", "238.181, 154.898, 72.8, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "422.276, 183.016, 49.4514, 0.718", "421.333, 182.166, 47.1615, 0.6864", "420.579, 181.404, 47.773, 0.671", "419.76, 180.666, 48.0374, 0.6438", "418.905, 179.908, 48.2479, 0.6756", "418.101, 179.096, 48.403, 0.7934", "417.321, 178.26, 48.5013, 0.9544", "416.415, 177.612, 48.4991, 0.846", "415.436, 177.055, 48.4162, 0.7886", "414.531, 176.409, 48.419, 0.9006", "413.659, 175.698, 48.5198, 0.9646", "412.648, 175.206, 48.6405, 1.093", "411.564, 174.879, 48.7329, 1.0546", "410.561, 174.38, 48.8911, 0.9536", "409.629, 173.759, 49.1464, 0.91", "408.727, 173.101, 49.4696, 0.8182", "407.818, 172.459, 49.8417, 0.7014", "406.888, 171.833, 50.2309, 0.6842", "405.911, 171.249, 50.5548, 0.5986", "404.926, 170.67, 50.785, 0.7016", "403.982, 170.029, 50.9569, 0.7664", "403.019, 169.416, 51.0675, 0.8116", "402.021, 168.86, 51.1129, 0.8014", "400.962, 168.44, 51.1244, 0.7812", "399.857, 168.149, 51.1319, 0.7508", "398.759, 167.828, 51.1442, 0.661", "397.724, 167.437, 51.2411, 0.6552", "396.669, 167.295, 51.4452, 0.5512", "395.686, 167.278, 51.4296, 0.5822", "394.616, 167.003, 51.3145, 0.698", "393.53, 166.649, 51.196, 0.6294", "392.401, 166.713, 51.0846, 0.5034", "391.337, 167.122, 50.9807, 0.494", "390.206, 167.271, 50.8984, 0.5316", "389.062, 167.262, 50.8564, 0.5636", "387.919, 167.244, 50.8234, 0.5768", "386.785, 167.102, 50.7786, 0.5964", "385.717, 166.7, 50.7091, 0.656", "384.664, 166.266, 50.6139, 0.6544", "383.635, 165.793, 50.486, 0.5094", "382.618, 165.27, 50.3899, 0.4728", "381.674, 164.675, 50.4238, 0.4198", "380.68, 164.116, 50.4574, 0.4792", "379.691, 163.62, 50.4025, 0.5108", "378.751, 163.022, 50.4773, 0.493", "377.771, 162.469, 50.6257, 0.6008", "376.69, 162.098, 50.7419, 0.5758", "375.605, 161.73, 50.8262, 0.706", "374.523, 161.36, 50.8964, 0.776", "373.44, 160.992, 50.951, 0.8234", "372.393, 160.532, 50.9748, 0.853", "371.355, 160.048, 50.9883, 0.7338", "370.403, 159.415, 51.0149, 0.6714", "369.513, 158.697, 51.0493, 0.7002", "368.678, 157.914, 51.0689, 0.7394", "367.747, 157.254, 51.1, 0.652", "366.669, 156.939, 51.1927, 0.8088", "365.572, 156.624, 51.27, 0.696", "364.488, 156.321, 51.2389, 0.6152", "363.392, 156.035, 51.144, 0.529", "362.281, 155.776, 51.0367, 0.5184", "361.177, 155.475, 50.9566, 0.4602", "360.083, 155.148, 50.9309, 0.5392", "358.959, 154.95, 50.9533, 0.4646", "357.815, 154.931, 51.0082, 0.4842", "356.671, 154.907, 51.0849, 0.4416", "355.535, 154.775, 51.1762, 0.516", "354.407, 154.585, 51.2803, 0.5966", "353.293, 154.34, 51.4175, 0.5656", "352.249, 153.94, 51.6449, 0.4698", "351.191, 153.573, 51.931, 0.4776", "350.105, 153.27, 52.239, 0.5072", "349.008, 152.962, 52.5064, 0.4888", "347.922, 152.65, 52.6448, 0.5806", "346.833, 152.308, 52.731, 0.5982", "345.772, 151.943, 52.862, 0.4572", "344.654, 151.739, 52.9981, 0.351", "343.51, 151.721, 53.1051, 0.3168", "342.37, 151.678, 53.1992, 0.3784", "341.254, 151.426, 53.289, 0.343", "340.158, 151.1, 53.37, 0.3168", "339.032, 150.903, 53.4486, 0.3068", "337.891, 150.843, 53.5436, 0.3292", "336.75, 150.792, 53.669, 0.4012", "335.624, 150.783, 53.8762, 0.3862", "334.507, 150.752, 54.1442, 0.3938", "333.41, 150.47, 54.4071, 0.4634", "332.397, 149.944, 54.6241, 0.5516", "331.434, 149.347, 54.8439, 0.457", "330.462, 148.767, 55.0315, 0.391", "329.501, 148.251, 55.043, 0.4224", "328.394, 148.024, 55.0928, 0.4218", "327.282, 147.805, 55.1869, 0.478", "326.143, 147.722, 55.2796, 0.5316", "324.999, 147.713, 55.3479, 0.4186", "323.855, 147.708, 55.4025, 0.3254", "322.711, 147.702, 55.4498, 0.2746", "321.572, 147.599, 55.4716, 0.2746", "320.448, 147.383, 55.4795, 0.2746", "319.326, 147.164, 55.4848, 0.2746", "318.203, 146.946, 55.4921, 0.2748", "317.061, 146.89, 55.5027, 0.275", "315.933, 147.082, 55.5173, 0.2754", "314.805, 147.275, 55.5369, 0.2762", "313.678, 147.469, 55.561, 0.2776", "312.535, 147.475, 55.6069, 0.28", "311.393, 147.431, 55.6707, 0.2846", "310.253, 147.385, 55.7413, 0.2932", "309.111, 147.34, 55.8065, 0.3102", "307.97, 147.295, 55.8508, 0.335", "306.829, 147.25, 55.851, 0.4132", "305.688, 147.204, 55.7917, 0.402", "304.552, 147.065, 55.6472, 0.454", "303.42, 146.904, 55.4184, 0.4258" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "452.29, 175.223, 45.2463, 0.4726", "452.835, 174.112, 44.8837, 0.386", "452.953, 173.401, 44.4265, 0.3502", "453.699, 172.908, 44.2974, 0.3648", "454.484, 172.56, 44.539, 0.4568", "455.454, 172.108, 44.9291, 0.5396", "456.154, 171.317, 45.36, 0.433", "456.79, 170.486, 45.8508, 0.3532", "457.678, 170.006, 46.088, 0.321", "458.688, 169.847, 45.9808, 0.3858", "459.647, 169.248, 45.7652, 0.358", "460.447, 168.432, 45.549, 0.3396", "461.169, 167.544, 45.355, 0.3734", "461.855, 166.63, 45.1956, 0.3338", "462.451, 165.654, 45.0898, 0.3", "463.056, 164.684, 45.0078, 0.2746", "463.701, 163.749, 44.8795, 0.2746", "464.35, 162.816, 44.7112, 0.2748", "465.012, 161.892, 44.5231, 0.2748", "465.752, 161.024, 44.354, 0.2752", "466.521, 160.178, 44.2238, 0.2756", "467.164, 159.233, 44.1272, 0.2766", "467.723, 158.235, 44.0563, 0.2784", "468.264, 157.228, 43.9984, 0.2816", "468.74, 156.189, 43.9373, 0.2874", "469.303, 155.197, 43.8466, 0.2996", "469.975, 154.279, 43.715, 0.3158", "470.646, 153.361, 43.5576, 0.3764", "471.32, 152.443, 43.3947, 0.3396", "472.004, 151.527, 43.26, 0.3104", "472.695, 150.615, 43.1712, 0.2938", "473.385, 149.702, 43.1256, 0.3112", "474.098, 148.809, 43.1178, 0.3384", "474.913, 148.007, 43.1396, 0.4132", "475.756, 147.235, 43.183, 0.433", "476.613, 146.478, 43.2474, 0.3598", "477.523, 145.791, 43.3532, 0.301", "478.447, 145.128, 43.4958, 0.2766", "479.371, 144.464, 43.6601, 0.2782", "480.271, 143.768, 43.8259, 0.2814", "481.058, 142.939, 43.9564, 0.287", "481.812, 142.08, 44.0443, 0.2988", "482.568, 141.221, 44.0941, 0.3142", "483.295, 140.34, 44.1151, 0.3734", "483.878, 139.359, 44.1165, 0.3338", "484.315, 138.302, 44.1067, 0.3", "484.756, 137.247, 44.0905, 0.2746", "485.272, 136.233, 44.0678, 0.2746", "485.993, 135.346, 44.037, 0.2746", "486.691, 134.441, 43.995, 0.2746", "487.265, 133.456, 43.9309, 0.2746", "487.696, 132.399, 43.8374, 0.2746", "488.128, 131.342, 43.7228, 0.2746", "488.559, 130.284, 43.5957, 0.2746", "488.99, 129.226, 43.4638, 0.2746", "489.422, 128.169, 43.3353, 0.2748", "489.891, 127.13, 43.2194, 0.2748", "490.504, 126.166, 43.1332, 0.2752", "491.172, 125.237, 43.0777, 0.2758", "491.798, 124.284, 43.0458, 0.2768", "492.272, 123.243, 43.0312, 0.2786", "492.72, 122.191, 43.0282, 0.282", "493.229, 121.169, 43.0318, 0.2882", "493.853, 120.21, 43.0388, 0.3008", "494.478, 119.252, 43.0483, 0.318", "495.103, 118.293, 43.0618, 0.3808", "495.725, 117.333, 43.0802, 0.3476", "496.346, 116.373, 43.1068, 0.3252", "496.951, 115.402, 43.1441, 0.3222", "497.487, 114.392, 43.1948, 0.3588", "497.978, 113.359, 43.2603, 0.4506", "498.48, 112.342, 43.3628, 0.5056", "499.014, 111.356, 43.5347, 0.4786", "499.534, 110.344, 43.7105, 0.5978", "500.07, 109.358, 43.9239, 0.4546", "500.572, 108.36, 44.126, 0.3548", "500.97, 107.312, 44.1862, 0.282", "501.444, 106.317, 44.1283, 0.2882", "502.145, 105.415, 44.0625, 0.301", "502.882, 104.544, 44.011, 0.3184", "503.62, 103.672, 43.9628, 0.3816", "504.355, 102.801, 43.9127, 0.3488", "505.089, 101.924, 43.8477, 0.3286", "505.698, 100.972, 43.7105, 0.3222", "505.784, 99.939, 43.4227, 0.3886", "505.163, 99.0647, 42.9657, 0.3618", "504.837, 98.1442, 42.3564, 0.3538", "504.868, 97.1136, 41.631, 0.3638", "504.922, 96.0835, 40.8447, 0.4912", "504.637, 95.0618, 40.1727, 0.4278", "504.112, 94.0528, 39.7046, 0.3916", "503.579, 93.0483, 39.3938, 0.3866", "503.2, 92.0364, 39.0617, 0.5352", "502.966, 91.0473, 38.5854, 0.5004", "502.65, 90.0136, 38.1304, 0.57", "502.257, 88.9815, 37.8008, 0.5058", "502.122, 88.2941, 37.2375, 0.4096", "502.023, 87.209, 36.6173, 0.3484", "501.921, 86.1052, 35.9839, 0.3536", "501.819, 85.0016, 35.3472, 0.4722", "501.717, 83.898, 34.7001, 0.3932", "501.615, 82.7944, 34.0659, 0.3254", "501.514, 81.6906, 33.4877, 0.2746", "501.411, 80.587, 32.9518, 0.2746", "501.315, 79.4804, 32.4666, 0.2746", "501.333, 78.3378, 32.1286, 0.2746", "501.357, 77.194, 31.9124, 0.2746", "501.381, 76.0504, 31.7895, 0.2746", "501.404, 74.9066, 31.7338, 0.2746", "501.428, 73.7628, 31.7212, 0.2746", "501.589, 72.6304, 31.7307, 0.2746", "501.798, 71.5057, 31.745, 0.2746", "502.008, 70.3811, 31.7652, 0.2748", "502.217, 69.2566, 31.7929, 0.275", "502.428, 68.1322, 31.8298, 0.2752", "502.621, 67.0047, 31.8847, 0.2758", "502.786, 65.874, 31.9682, 0.2768", "502.95, 64.7431, 32.076, 0.2788", "503.114, 63.6121, 32.2039, 0.2822", "503.278, 62.4812, 32.349, 0.2888", "503.441, 61.3504, 32.5091, 0.301", "503.605, 60.2195, 32.6833, 0.3242", "503.77, 59.0886, 32.872, 0.3636", "503.933, 57.9577, 33.077, 0.4544", "504.556, 57.0132, 33.3332, 0.5352", "505.24, 56.1105, 33.6344, 0.4254", "505.924, 55.2078, 33.9699, 0.338", "506.609, 54.3057, 34.3288, 0.2976", "507.294, 53.4029, 34.7018, 0.3184", "507.978, 52.5008, 35.079, 0.3514", "508.664, 51.5986, 35.4519, 0.4382", "509.348, 50.696, 35.8184, 0.4744", "510.078, 49.8278, 36.1749, 0.462", "510.956, 49.108, 36.512, 0.3664", "511.838, 48.3905, 36.8312, 0.313", "512.719, 47.673, 37.1339, 0.2998", "513.602, 46.9554, 37.42, 0.3162", "514.482, 46.2373, 37.6894, 0.3772", "515.365, 45.5198, 37.9417, 0.3408", "516.247, 44.8022, 38.1772, 0.3126", "516.882, 43.8515, 38.3527, 0.2992", "517.5, 42.8888, 38.479, 0.315", "518.091, 41.9095, 38.5703, 0.375", "518.293, 40.7863, 38.6616, 0.3368", "518.492, 39.6627, 38.7509, 0.3052", "518.692, 38.5388, 38.834, 0.2844", "518.892, 37.4152, 38.906, 0.2926", "519.091, 36.2916, 38.9553, 0.3092", "519.281, 35.1642, 38.9511, 0.3334", "519.406, 34.0412, 38.8212, 0.4096", "519.531, 32.9184, 38.6022, 0.3982", "519.656, 31.7956, 38.3267, 0.4322", "519.781, 30.6727, 38.0246, 0.4576", "519.906, 29.5499, 37.3548, 0.9152" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "452.29, 175.223, 45.2463, 0.4726", "452.078, 173.814, 45.2029, 0.6864", "451.708, 172.815, 44.6404, 0.5854", "451.269, 171.769, 44.4041, 0.6042", "450.689, 170.808, 44.1748, 0.7096", "450.01, 170.029, 44.112, 0.7922", "449.497, 169.122, 43.99, 0.8066", "449.441, 168.161, 43.6562, 0.8202", "449.224, 167.062, 43.3913, 0.6798", "449.085, 165.929, 43.1421, 0.5382", "448.755, 164.863, 42.8386, 0.614", "448.174, 163.885, 42.541, 0.4844", "447.363, 163.376, 42.5214, 0.412", "446.711, 162.577, 42.4917, 0.3774", "446.372, 161.747, 42.2517, 0.516", "445.435, 161.268, 41.8936, 0.4758", "444.762, 160.572, 41.3862, 0.4704", "444.556, 159.652, 40.7263, 0.5836", "444.157, 158.652, 40.154, 0.6514", "443.323, 157.905, 39.7496, 0.553", "442.693, 157.166, 39.2386, 0.5424", "441.844, 156.44, 38.7559, 0.6048", "441.051, 155.654, 38.3037, 0.5508", "440.299, 154.804, 37.9495, 0.5874", "439.717, 153.866, 37.5656, 0.679", "439.264, 152.817, 37.2557, 0.7334", "438.734, 151.805, 37.0395, 0.7068", "438.065, 150.879, 36.8777, 0.5908", "437.381, 149.974, 36.7536, 0.4694", "436.864, 148.989, 36.5501, 0.478", "436.655, 147.879, 36.3132, 0.502", "436.534, 146.763, 36.0478, 0.508", "436.076, 145.725, 35.7666, 0.4772", "435.544, 144.721, 35.4864, 0.3944", "435.085, 143.678, 35.2377, 0.3658", "434.743, 142.587, 35.0535, 0.3934", "434.363, 141.517, 34.8911, 0.5108", "433.857, 140.519, 34.6836, 0.635", "433.315, 139.531, 34.5052, 0.6326", "432.717, 138.583, 34.4411, 0.6142", "432.127, 137.613, 34.3711, 0.648", "431.592, 136.629, 34.2261, 0.6084", "431.161, 135.573, 34.0766, 0.5756", "430.797, 134.49, 33.9486, 0.545", "430.444, 133.401, 33.824, 0.5712", "430.096, 132.312, 33.6946, 0.4448", "429.691, 131.253, 33.5426, 0.3746", "429.177, 130.258, 33.3304, 0.3628", "428.594, 129.287, 33.1047, 0.4532", "427.961, 128.335, 32.914, 0.5328", "427.449, 127.318, 32.7544, 0.4208", "427.083, 126.233, 32.6208, 0.3294", "426.769, 125.143, 32.4836, 0.282", "426.548, 124.043, 32.2963, 0.2882", "426.397, 122.928, 32.0942, 0.3008", "426.397, 121.785, 31.9396, 0.3182", "426.299, 120.654, 31.8296, 0.381", "425.824, 119.647, 31.7598, 0.3476", "425.237, 118.716, 31.7288, 0.3264", "425.074, 117.586, 31.7369, 0.3182", "425.025, 116.447, 31.7582, 0.381", "424.984, 115.322, 31.7472, 0.348", "424.687, 114.266, 31.7265, 0.3262", "424.036, 113.43, 31.8542, 0.3238", "423.477, 112.766, 32.258, 0.3618", "422.945, 111.982, 32.7933, 0.4562", "422.269, 111.104, 33.2052, 0.5148", "421.701, 110.201, 33.3388, 0.5032", "421.034, 109.331, 33.3726, 0.6068", "420.167, 108.656, 33.2564, 0.6488", "419.635, 107.693, 33.077, 0.5404", "419.165, 106.74, 32.8012, 0.5564", "418.717, 105.813, 32.4652, 0.4496", "419.005, 104.832, 32.3932, 0.455", "419.048, 104.419, 32.7564, 0.3928", "418.394, 103.927, 33.3035, 0.399", "417.502, 103.553, 33.4552, 0.5088", "416.544, 103.139, 33.4872, 0.4628", "416.121, 102.154, 33.3466, 0.4448", "415.64, 101.463, 32.795, 0.5428", "415.161, 100.78, 31.9589, 0.5444", "414.462, 100.003, 31.1861, 0.507", "413.627, 99.2406, 30.6009, 0.404", "412.808, 98.4547, 30.1361, 0.377", "412.023, 97.6419, 29.8631, 0.446", "411.324, 96.7548, 29.7198, 0.4528", "410.645, 95.8408, 29.5714, 0.597", "409.782, 95.1492, 29.472, 0.4532", "408.807, 94.8317, 29.2726, 0.3522", "408.957, 94.4826, 28.8033, 0.2768", "409.415, 93.9446, 28.1579, 0.2796", "409.308, 92.8539, 27.7258, 0.2796", "409.001, 92.0549, 27.7736, 0.305", "408.993, 91.6609, 29.4311, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "303.42, 146.904, 55.4184, 0.4258", "303.509, 146.9, 54.9525, 0.5212", "303.726, 146.89, 54.0809, 0.438", "303.094, 146.149, 53.3145, 0.403", "302.477, 145.266, 52.654, 0.4458", "301.926, 144.295, 52.0831, 0.4588", "301.691, 143.198, 51.5452, 0.577", "301.25, 142.189, 50.9964, 0.5688", "300.658, 141.82, 50.2183, 0.5114", "299.848, 141.291, 49.4018, 0.6112", "299.349, 140.352, 48.6186, 0.4806", "298.884, 139.909, 47.663, 0.3976", "298.527, 138.91, 46.872, 0.3866", "298.022, 138.149, 46.1647, 0.3592", "297.9, 137.056, 45.6428, 0.3418", "297.264, 136.133, 45.2794, 0.3778", "296.885, 135.081, 45.031, 0.3418", "296.201, 134.277, 44.868, 0.3148", "295.462, 133.576, 44.7754, 0.3016", "295.381, 132.437, 44.6295, 0.3268", "294.991, 131.398, 44.3901, 0.3608", "294.372, 130.559, 43.9071, 0.4854", "293.497, 130.187, 43.2398, 0.4186", "293.135, 129.17, 42.4295, 0.3672", "292.303, 128.836, 41.419, 0.3776", "292.292, 128.149, 40.1629, 0.3418", "292.292, 127.301, 38.7946, 0.3146", "292.292, 126.644, 37.3542, 0.3018", "292.263, 126.176, 35.9276, 0.3246", "291.98, 125.079, 34.8368, 0.3692", "291.85, 123.951, 34.0309, 0.4414", "291.605, 123.061, 33.3502, 0.6264", "291.142, 122.379, 32.6542, 0.7206", "290.512, 121.452, 32.1278, 0.731", "290.346, 120.523, 31.6534, 0.6308", "290.346, 119.743, 31.0831, 0.569", "290.186, 118.684, 30.7527, 0.5376", "290.004, 117.893, 30.9406, 0.5338", "290.004, 116.868, 31.3911, 0.491", "290.004, 115.797, 31.9558, 0.5848", "290.004, 115.323, 32.8345, 0.6058", "290.004, 114.205, 33.626, 0.4712", "290.118, 113.073, 34.2289, 0.378", "290.017, 112.029, 34.7379, 0.3618", "289.331, 111.23, 35.0692, 0.487", "288.746, 110.414, 35.25, 0.4216", "287.902, 109.938, 35.3046, 0.373", "287.318, 109.066, 35.2699, 0.3882", "287.12, 107.946, 35.2108, 0.3612", "286.721, 106.906, 35.079, 0.3514", "286.03, 106.003, 34.9485, 0.3666", "285.542, 104.988, 34.8513, 0.4604", "285.518, 103.847, 34.7847, 0.5452", "284.531, 103.407, 34.7455, 0.4492", "284.055, 102.573, 34.7248, 0.356", "283.712, 101.587, 34.72, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "303.42, 146.904, 55.4184, 0.4258", "302.903, 146.831, 56.5984, 0.9152", "301.766, 146.726, 56.6916, 0.5744", "300.621, 146.702, 56.7283, 0.4608", "299.478, 146.697, 56.7804, 0.3548", "298.333, 146.692, 56.854, 0.338", "297.19, 146.672, 56.9559, 0.3482", "296.047, 146.631, 57.0912, 0.3954", "294.914, 146.519, 57.2869, 0.5754", "293.831, 146.256, 57.5893, 0.4604", "292.786, 145.913, 57.9984, 0.3654", "291.741, 145.569, 58.4752, 0.3024", "290.695, 145.223, 58.9826, 0.3212", "289.659, 144.796, 59.4373, 0.3862", "288.635, 144.286, 59.7744, 0.3586", "287.602, 143.795, 60.0121, 0.3406", "286.513, 143.533, 60.1902, 0.3756", "285.372, 143.49, 60.3448, 0.3378", "284.233, 143.446, 60.4898, 0.3072", "283.092, 143.404, 60.6371, 0.288", "281.954, 143.36, 60.786, 0.2994", "280.833, 143.189, 60.9143, 0.3216", "279.734, 142.868, 61.0025, 0.3576", "278.641, 142.533, 61.0546, 0.4484", "277.546, 142.198, 61.0798, 0.5006", "276.51, 141.736, 61.0789, 0.4756", "275.428, 141.513, 61.0635, 0.5616", "274.469, 141.036, 61.0467, 0.5364", "273.566, 140.331, 61.0313, 0.4702", "272.454, 140.122, 61.0168, 0.4424", "271.492, 139.521, 61.0042, 0.6164", "270.486, 138.975, 60.9946, 0.5306", "269.523, 138.366, 60.9543, 0.5242", "268.469, 137.924, 60.9196, 0.4562", "267.329, 137.853, 60.8989, 0.6036", "266.198, 137.985, 60.9291, 0.4654", "265.059, 138.081, 60.9602, 0.3746", "263.915, 138.081, 60.9885, 0.3198", "262.771, 138.081, 61.0142, 0.353", "261.627, 138.081, 61.0313, 0.4464", "260.483, 138.081, 61.0397, 0.466", "259.345, 137.966, 61.04, 0.5592", "258.201, 137.966, 61.04, 0.6864" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_19", "dend_14", "dend_7", "dend_0", "dend_24", "dend_23", "dend_21", "dend_20", "dend_18", "dend_15", "dend_13", "dend_8", "dend_6", "dend_1", "dend_17", "dend_16", "dend_12", "dend_9", "dend_5", "dend_2", "dend_11", "dend_10", "dend_4", "dend_3" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26425",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "3.0588791"
  }, {
    "group" : "axon",
    "value" : "3.0588791"
  }, {
    "group" : "dend",
    "value" : "3.0588791"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "115.775894"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.6522167E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.08086678",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.8053903E-7",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.15409474",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.6130313",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0498824",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0056491434",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.4052202E-6",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.5563483E-5",
    "erev" : "-88.4722"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.878041E-4",
    "erev" : "-88.4722"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.7337927E-5",
    "erev" : "-88.4722"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.6384992E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.0266973E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_496930338",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_496930338

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_22, dend_19, dend_14, dend_7, dend_0, dend_24, dend_23, dend_21, dend_20, dend_18, dend_15, dend_13, dend_8, dend_6, dend_1, dend_17, dend_16, dend_12, dend_9, dend_5, dend_2, dend_11, dend_10, dend_4, dend_3]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_26425, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_26425
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_496930338
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000441501103767)
    connect dend_22(0), soma_0(0.5000441501103767)
    connect dend_19(0), soma_0(0.5000441501103767)
    connect dend_14(0), soma_0(0.5000441501103767)
    connect dend_7(0), soma_0(0.5000441501103767)
    connect dend_0(0), soma_0(0.5000441501103767)
    connect axon_1(0), axon_0(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 444.079, 198.235, 44.3204, 11.325 ) }
    soma_0 { pt3dadd( 449.742, 198.235, 44.3204, 11.325 ) }
    soma_0 { pt3dadd( 455.404, 198.235, 44.3204, 11.325 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 449.742, 198.235, 44.3204, 1.0 ) }
    axon_0 { pt3dadd( 455.583, 212.051, 44.3204, 1.0 ) }
    axon_0 { pt3dadd( 461.424, 225.867, 44.3204, 1.0 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 6/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 447.129, 194.601, 52.6602, 0.2288 ) }
    dend_22 { pt3dadd( 446.423, 193.747, 52.899, 0.4136 ) }
    dend_22 { pt3dadd( 445.863, 192.751, 52.9822, 0.434 ) }
    dend_22 { pt3dadd( 445.006, 192.0, 53.0382, 0.3614 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 454.685, 198.322, 40.6398, 0.6864 ) }
    dend_19 { pt3dadd( 455.78, 198.341, 39.9056, 0.4806 ) }
    dend_19 { pt3dadd( 456.88, 198.359, 39.5702, 0.3926 ) }
    dend_19 { pt3dadd( 458.006, 198.37, 39.2364, 0.402 ) }
    dend_19 { pt3dadd( 459.15, 198.36, 38.9838, 0.497 ) }
    dend_19 { pt3dadd( 460.283, 198.255, 38.8066, 0.7546 ) }
    dend_19 { pt3dadd( 461.398, 198.034, 38.6985, 0.8366 ) }
    dend_19 { pt3dadd( 462.542, 198.026, 38.652, 0.8496 ) }
    dend_19 { pt3dadd( 463.686, 198.026, 38.6403, 0.8618 ) }
    dend_19 { pt3dadd( 464.829, 198.026, 38.6406, 0.7142 ) }
    dend_19 { pt3dadd( 465.974, 198.026, 38.6406, 0.8094 ) }
    dend_19 { pt3dadd( 467.115, 198.072, 38.6408, 0.7954 ) }
    dend_19 { pt3dadd( 468.214, 198.342, 38.6411, 0.7804 ) }
    dend_19 { pt3dadd( 469.242, 198.84, 38.6417, 0.6996 ) }
    dend_19 { pt3dadd( 470.305, 199.262, 38.6425, 0.5778 ) }
    dend_19 { pt3dadd( 471.393, 199.577, 38.6434, 0.4442 ) }
    dend_19 { pt3dadd( 472.535, 199.657, 38.6448, 0.4366 ) }
    dend_19 { pt3dadd( 473.673, 199.763, 38.6467, 0.3996 ) }
    dend_19 { pt3dadd( 474.811, 199.859, 38.6495, 0.442 ) }
    dend_19 { pt3dadd( 475.937, 199.976, 38.6532, 0.4394 ) }
    dend_19 { pt3dadd( 477.034, 200.292, 38.6582, 0.3718 ) }
    dend_19 { pt3dadd( 478.165, 200.429, 38.6655, 0.3228 ) }
    dend_19 { pt3dadd( 479.31, 200.429, 38.6761, 0.318 ) }
    dend_19 { pt3dadd( 480.454, 200.429, 38.6907, 0.3494 ) }
    dend_19 { pt3dadd( 481.598, 200.429, 38.7097, 0.4408 ) }
    dend_19 { pt3dadd( 482.742, 200.429, 38.7338, 0.4494 ) }
    dend_19 { pt3dadd( 483.881, 200.463, 38.7778, 0.5596 ) }
    dend_19 { pt3dadd( 485.019, 200.529, 38.8475, 0.5348 ) }
    dend_19 { pt3dadd( 486.163, 200.543, 38.911, 0.4584 ) }
    dend_19 { pt3dadd( 487.307, 200.543, 38.9693, 0.464 ) }
    dend_19 { pt3dadd( 488.449, 200.587, 39.0239, 0.4452 ) }
    dend_19 { pt3dadd( 489.585, 200.708, 39.0919, 0.5518 ) }
    dend_19 { pt3dadd( 490.696, 200.926, 39.1832, 0.5202 ) }
    dend_19 { pt3dadd( 491.793, 201.235, 39.2703, 0.4314 ) }
    dend_19 { pt3dadd( 492.915, 201.442, 39.359, 0.4122 ) }
    dend_19 { pt3dadd( 494.002, 201.788, 39.4503, 0.3586 ) }
    dend_19 { pt3dadd( 495.069, 202.098, 39.5858, 0.3466 ) }
    dend_19 { pt3dadd( 496.185, 202.145, 39.7922, 0.3568 ) }
    dend_19 { pt3dadd( 497.322, 202.145, 39.9938, 0.4482 ) }
    dend_19 { pt3dadd( 498.466, 202.145, 40.1528, 0.4928 ) }
    dend_19 { pt3dadd( 499.609, 202.145, 40.2721, 0.4972 ) }
    dend_19 { pt3dadd( 500.754, 202.145, 40.3558, 0.4262 ) }
    dend_19 { pt3dadd( 501.877, 202.013, 40.4247, 0.4504 ) }
    dend_19 { pt3dadd( 502.969, 201.684, 40.486, 0.4262 ) }
    dend_19 { pt3dadd( 504.083, 201.479, 40.5292, 0.4862 ) }
    dend_19 { pt3dadd( 505.227, 201.458, 40.5608, 0.547 ) }
    dend_19 { pt3dadd( 506.371, 201.458, 40.5821, 0.4472 ) }
    dend_19 { pt3dadd( 507.514, 201.426, 40.5938, 0.379 ) }
    dend_19 { pt3dadd( 508.651, 201.311, 40.5969, 0.3708 ) }
    dend_19 { pt3dadd( 509.778, 201.114, 40.5958, 0.4676 ) }
    dend_19 { pt3dadd( 510.852, 200.751, 40.5941, 0.5606 ) }
    dend_19 { pt3dadd( 511.9, 200.293, 40.5916, 0.4672 ) }
    dend_19 { pt3dadd( 512.908, 199.761, 40.5882, 0.441 ) }
    dend_19 { pt3dadd( 513.931, 199.254, 40.5835, 0.366 ) }
    dend_19 { pt3dadd( 515.039, 199.062, 40.577, 0.354 ) }
    dend_19 { pt3dadd( 516.166, 198.889, 40.5681, 0.4012 ) }
    dend_19 { pt3dadd( 517.297, 198.744, 40.5552, 0.3804 ) }
    dend_19 { pt3dadd( 518.44, 198.713, 40.537, 0.4114 ) }
    dend_19 { pt3dadd( 519.568, 198.564, 40.5118, 0.3582 ) }
    dend_19 { pt3dadd( 520.701, 198.408, 40.4782, 0.3398 ) }
    dend_19 { pt3dadd( 521.843, 198.37, 40.4345, 0.374 ) }
    dend_19 { pt3dadd( 522.984, 198.37, 40.3547, 0.335 ) }
    dend_19 { pt3dadd( 524.125, 198.37, 40.2486, 0.3022 ) }
    dend_19 { pt3dadd( 525.27, 198.37, 40.1324, 0.2788 ) }
    dend_19 { pt3dadd( 526.247, 198.84, 40.0089, 0.2822 ) }
    dend_19 { pt3dadd( 527.176, 199.507, 39.863, 0.2888 ) }
    dend_19 { pt3dadd( 528.203, 199.768, 39.583, 0.301 ) }
    dend_19 { pt3dadd( 529.309, 199.914, 39.2669, 0.3242 ) }
    dend_19 { pt3dadd( 530.426, 200.155, 39.0205, 0.3634 ) }
    dend_19 { pt3dadd( 531.502, 200.543, 38.8402, 0.4542 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 80/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 446.714, 201.222, 37.6284, 0.2288 ) }
    dend_14 { pt3dadd( 446.028, 201.898, 36.6377, 0.465 ) }
    dend_14 { pt3dadd( 445.368, 202.737, 36.2188, 0.5236 ) }
    dend_14 { pt3dadd( 444.759, 203.558, 35.985, 0.555 ) }
    dend_14 { pt3dadd( 444.324, 204.556, 35.7902, 0.5308 ) }
    dend_14 { pt3dadd( 443.789, 205.451, 35.4024, 0.6576 ) }
    dend_14 { pt3dadd( 443.674, 205.566, 34.6326, 0.7456 ) }
    dend_14 { pt3dadd( 443.676, 206.078, 33.6316, 0.7068 ) }
    dend_14 { pt3dadd( 443.212, 207.119, 32.8238, 0.9294 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 451.118, 193.544, 43.9625, 0.2288 ) }
    dend_7 { pt3dadd( 451.441, 192.446, 43.9233, 0.4534 ) }
    dend_7 { pt3dadd( 451.769, 191.351, 43.9096, 0.6486 ) }
    dend_7 { pt3dadd( 452.147, 190.283, 43.8698, 0.7624 ) }
    dend_7 { pt3dadd( 452.512, 189.206, 43.8357, 0.8044 ) }
    dend_7 { pt3dadd( 452.733, 188.101, 43.9295, 0.7872 ) }
    dend_7 { pt3dadd( 452.95, 186.995, 44.1333, 0.7602 ) }
    dend_7 { pt3dadd( 452.961, 185.855, 44.382, 0.6856 ) }
    dend_7 { pt3dadd( 453.01, 184.85, 44.8132, 0.666 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 445.438, 196.835, 45.4037, 4.6892 ) }
    dend_0 { pt3dadd( 444.358, 196.484, 45.8153, 1.9546 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 443.324, 196.037, 46.2322, 0.9908 ) }
    dend_0 { pt3dadd( 442.408, 195.406, 46.6578, 1.0066 ) }
    dend_0 { pt3dadd( 441.48, 194.76, 47.0361, 1.0918 ) }
    dend_0 { pt3dadd( 440.5, 194.173, 47.3178, 0.9798 ) }
    dend_0 { pt3dadd( 439.516, 193.591, 47.5051, 0.9384 ) }
    dend_0 { pt3dadd( 438.539, 192.996, 47.6526, 0.97 ) }
    dend_0 { pt3dadd( 437.539, 192.452, 47.7571, 0.9592 ) }
    dend_0 { pt3dadd( 436.514, 191.984, 47.8159, 1.0478 ) }
    dend_0 { pt3dadd( 435.528, 191.443, 47.9578, 0.914 ) }
    dend_0 { pt3dadd( 434.603, 190.835, 48.2642, 0.9676 ) }
    dend_0 { pt3dadd( 433.75, 190.264, 48.7754, 0.977 ) }
    dend_0 { pt3dadd( 433.005, 189.587, 49.4516, 0.9722 ) }
    dend_0 { pt3dadd( 432.353, 188.702, 50.1354, 0.8426 ) }
    dend_0 { pt3dadd( 431.488, 188.034, 50.6215, 0.7306 ) }
    dend_0 { pt3dadd( 430.534, 187.503, 51.0588, 0.5868 ) }
    dend_0 { pt3dadd( 430.074, 187.003, 51.6482, 0.468 ) }
    dend_0 { pt3dadd( 429.437, 186.458, 52.2606, 0.4458 ) }
    dend_0 { pt3dadd( 428.381, 186.072, 52.5949, 0.5866 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 461.424, 225.867, 44.3204, 1.0 ) }
    axon_1 { pt3dadd( 467.265, 239.683, 44.3204, 1.0 ) }
    axon_1 { pt3dadd( 473.107, 253.499, 44.3204, 1.0 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 445.006, 192.0, 53.0382, 0.3614 ) }
    dend_24 { pt3dadd( 445.001, 192.051, 54.1741, 0.4576 ) }
    dend_24 { pt3dadd( 444.275, 192.137, 56.4805, 0.3874 ) }
    dend_24 { pt3dadd( 443.362, 192.207, 57.4781, 0.3528 ) }
    dend_24 { pt3dadd( 442.359, 192.209, 58.5936, 0.3694 ) }
    dend_24 { pt3dadd( 441.311, 192.131, 59.7128, 0.4654 ) }
    dend_24 { pt3dadd( 440.21, 192.127, 60.7536, 0.5552 ) }
    dend_24 { pt3dadd( 439.132, 192.359, 61.7882, 0.4636 ) }
    dend_24 { pt3dadd( 438.337, 192.896, 62.827, 0.403 ) }
    dend_24 { pt3dadd( 437.978, 193.902, 63.9338, 0.447 ) }
    dend_24 { pt3dadd( 437.284, 193.829, 65.2498, 0.4546 ) }
    dend_24 { pt3dadd( 436.521, 193.536, 66.7764, 0.6006 ) }
    dend_24 { pt3dadd( 436.354, 192.699, 68.3749, 0.46 ) }
    dend_24 { pt3dadd( 436.441, 191.63, 69.9849, 0.3646 ) }
    dend_24 { pt3dadd( 436.527, 190.974, 71.7489, 0.2998 ) }
    dend_24 { pt3dadd( 436.611, 190.643, 73.7327, 0.3236 ) }
    dend_24 { pt3dadd( 436.694, 190.312, 75.8646, 0.3548 ) }
    dend_24 { pt3dadd( 436.568, 190.653, 78.0394, 0.4746 ) }
    dend_24 { pt3dadd( 436.318, 191.383, 80.2449, 0.3974 ) }
    dend_24 { pt3dadd( 435.956, 192.046, 82.4079, 0.3334 ) }
    dend_24 { pt3dadd( 435.503, 192.614, 84.4628, 0.2882 ) }
    dend_24 { pt3dadd( 434.91, 192.831, 86.4004, 0.305 ) }
    dend_24 { pt3dadd( 434.316, 193.05, 88.1989, 0.305 ) }
    dend_24 { pt3dadd( 433.725, 193.267, 91.7694, 0.4576 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 45/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 445.006, 192.0, 53.0382, 0.3614 ) }
    dend_23 { pt3dadd( 444.878, 191.21, 53.0659, 0.304 ) }
    dend_23 { pt3dadd( 444.299, 190.26, 53.0642, 0.282 ) }
    dend_23 { pt3dadd( 443.441, 189.513, 53.0331, 0.2886 ) }
    dend_23 { pt3dadd( 442.602, 188.736, 52.9743, 0.3002 ) }
    dend_23 { pt3dadd( 441.76, 187.965, 52.8811, 0.3232 ) }
    dend_23 { pt3dadd( 441.367, 186.936, 52.7369, 0.3602 ) }
    dend_23 { pt3dadd( 440.905, 185.921, 52.528, 0.4546 ) }
    dend_23 { pt3dadd( 440.084, 185.135, 52.3566, 0.505 ) }
    dend_23 { pt3dadd( 439.404, 184.216, 52.2292, 0.5178 ) }
    dend_23 { pt3dadd( 438.914, 183.184, 52.1424, 0.474 ) }
    dend_23 { pt3dadd( 438.131, 182.355, 52.0923, 0.4928 ) }
    dend_23 { pt3dadd( 437.384, 181.489, 52.0708, 0.7286 ) }
    dend_23 { pt3dadd( 436.772, 180.523, 52.0652, 0.6472 ) }
    dend_23 { pt3dadd( 436.452, 179.427, 52.0593, 0.4976 ) }
    dend_23 { pt3dadd( 436.325, 178.29, 52.0509, 0.4418 ) }
    dend_23 { pt3dadd( 435.784, 177.286, 52.0394, 0.4078 ) }
    dend_23 { pt3dadd( 435.268, 176.264, 52.0234, 0.4648 ) }
    dend_23 { pt3dadd( 434.943, 175.168, 52.0008, 0.4456 ) }
    dend_23 { pt3dadd( 434.253, 174.256, 51.9686, 0.559 ) }
    dend_23 { pt3dadd( 433.592, 173.323, 51.9246, 0.5024 ) }
    dend_23 { pt3dadd( 433.204, 172.247, 51.8678, 0.55 ) }
    dend_23 { pt3dadd( 432.661, 171.243, 51.7776, 0.584 ) }
    dend_23 { pt3dadd( 432.092, 170.256, 51.6477, 0.6812 ) }
    dend_23 { pt3dadd( 431.422, 169.35, 51.4651, 0.6944 ) }
    dend_23 { pt3dadd( 430.872, 168.355, 51.2826, 0.6162 ) }
    dend_23 { pt3dadd( 430.54, 167.26, 51.1448, 0.5122 ) }
    dend_23 { pt3dadd( 430.138, 166.19, 51.0488, 0.577 ) }
    dend_23 { pt3dadd( 429.647, 165.157, 50.9905, 0.5914 ) }
    dend_23 { pt3dadd( 429.148, 164.208, 50.962, 0.4448 ) }
    dend_23 { pt3dadd( 428.078, 163.93, 50.9533, 0.3266 ) }
    dend_23 { pt3dadd( 427.53, 162.982, 50.9505, 0.277 ) }
    dend_23 { pt3dadd( 427.509, 161.838, 50.9468, 0.279 ) }
    dend_23 { pt3dadd( 427.42, 160.706, 50.9415, 0.2828 ) }
    dend_23 { pt3dadd( 427.126, 159.599, 50.934, 0.2898 ) }
    dend_23 { pt3dadd( 426.697, 158.569, 50.9233, 0.3026 ) }
    dend_23 { pt3dadd( 426.118, 157.633, 50.9096, 0.3286 ) }
    dend_23 { pt3dadd( 425.883, 156.519, 50.8928, 0.3642 ) }
    dend_23 { pt3dadd( 425.446, 155.467, 50.8614, 0.4918 ) }
    dend_23 { pt3dadd( 424.844, 154.499, 50.808, 0.429 ) }
    dend_23 { pt3dadd( 424.236, 153.537, 50.7615, 0.3926 ) }
    dend_23 { pt3dadd( 423.723, 152.516, 50.7265, 0.3958 ) }
    dend_23 { pt3dadd( 423.182, 151.51, 50.7018, 0.5162 ) }
    dend_23 { pt3dadd( 422.785, 150.443, 50.687, 0.6404 ) }
    dend_23 { pt3dadd( 422.415, 149.369, 50.6806, 0.666 ) }
    dend_23 { pt3dadd( 421.716, 148.511, 50.68, 0.5616 ) }
    dend_23 { pt3dadd( 420.983, 147.673, 50.68, 0.4192 ) }
    dend_23 { pt3dadd( 420.62, 146.599, 50.68, 0.3648 ) }
    dend_23 { pt3dadd( 420.38, 145.481, 50.68, 0.3912 ) }
    dend_23 { pt3dadd( 419.943, 144.432, 50.68, 0.508 ) }
    dend_23 { pt3dadd( 419.342, 143.461, 50.68, 0.6236 ) }
    dend_23 { pt3dadd( 418.658, 142.544, 50.68, 0.6414 ) }
    dend_23 { pt3dadd( 417.844, 141.746, 50.68, 0.4852 ) }
    dend_23 { pt3dadd( 417.302, 140.762, 50.68, 0.4274 ) }
    dend_23 { pt3dadd( 416.471, 140.02, 50.68, 0.3398 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( 415.592, 139.29, 50.6797, 0.3108 ) }
    dend_23 { pt3dadd( 414.913, 138.372, 50.6797, 0.2946 ) }
    dend_23 { pt3dadd( 414.224, 137.479, 50.6797, 0.3124 ) }
    dend_23 { pt3dadd( 413.971, 136.366, 50.6797, 0.3406 ) }
    dend_23 { pt3dadd( 413.829, 135.24, 50.6794, 0.4174 ) }
    dend_23 { pt3dadd( 413.381, 134.188, 50.6792, 0.441 ) }
    dend_23 { pt3dadd( 413.022, 133.104, 50.6789, 0.3744 ) }
    dend_23 { pt3dadd( 412.712, 132.043, 50.6786, 0.329 ) }
    dend_23 { pt3dadd( 412.144, 131.131, 50.678, 0.323 ) }
    dend_23 { pt3dadd( 412.069, 129.992, 50.6772, 0.3898 ) }
    dend_23 { pt3dadd( 411.906, 128.877, 50.6758, 0.3652 ) }
    dend_23 { pt3dadd( 411.529, 127.797, 50.6744, 0.3526 ) }
    dend_23 { pt3dadd( 411.174, 126.709, 50.6722, 0.3988 ) }
    dend_23 { pt3dadd( 410.572, 125.792, 50.6688, 0.3754 ) }
    dend_23 { pt3dadd( 409.902, 124.914, 50.6646, 0.4026 ) }
    dend_23 { pt3dadd( 409.506, 123.841, 50.6584, 0.341 ) }
    dend_23 { pt3dadd( 408.956, 122.854, 50.6492, 0.3132 ) }
    dend_23 { pt3dadd( 408.055, 122.217, 50.6369, 0.2988 ) }
    dend_23 { pt3dadd( 407.389, 121.393, 50.6215, 0.3204 ) }
    dend_23 { pt3dadd( 406.734, 120.474, 50.6033, 0.3552 ) }
    dend_23 { pt3dadd( 405.721, 120.041, 50.554, 0.4456 ) }
    dend_23 { pt3dadd( 404.954, 119.257, 50.5022, 0.4876 ) }
    dend_23 { pt3dadd( 404.29, 118.327, 50.4616, 0.4876 ) }
    dend_23 { pt3dadd( 403.79, 117.303, 50.4322, 0.4088 ) }
    dend_23 { pt3dadd( 403.112, 116.391, 50.4126, 0.4172 ) }
    dend_23 { pt3dadd( 402.523, 115.412, 50.4022, 0.369 ) }
    dend_23 { pt3dadd( 401.844, 114.496, 50.4, 0.3594 ) }
    dend_23 { pt3dadd( 401.56, 113.397, 50.4, 0.4124 ) }
    dend_23 { pt3dadd( 401.332, 112.276, 50.4, 0.3954 ) }
    dend_23 { pt3dadd( 400.971, 111.191, 50.4, 0.466 ) }
    dend_23 { pt3dadd( 400.971, 110.047, 50.4, 0.3304 ) }
    dend_23 { pt3dadd( 400.858, 108.909, 50.4, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 32/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 531.502, 200.543, 38.8402, 0.4542 ) }
    dend_21 { pt3dadd( 531.512, 200.69, 39.8252, 0.6864 ) }
    dend_21 { pt3dadd( 532.24, 201.487, 40.8178, 0.546 ) }
    dend_21 { pt3dadd( 533.232, 201.889, 41.2406, 0.5666 ) }
    dend_21 { pt3dadd( 534.18, 202.377, 41.7315, 0.4696 ) }
    dend_21 { pt3dadd( 535.107, 202.984, 42.2464, 0.4868 ) }
    dend_21 { pt3dadd( 535.938, 203.753, 42.7008, 0.4776 ) }
    dend_21 { pt3dadd( 536.609, 204.671, 43.097, 0.4322 ) }
    dend_21 { pt3dadd( 536.909, 205.751, 43.4571, 0.4858 ) }
    dend_21 { pt3dadd( 537.232, 206.846, 43.7262, 0.3728 ) }
    dend_21 { pt3dadd( 537.669, 207.893, 43.9648, 0.2796 ) }
    dend_21 { pt3dadd( 537.794, 209.009, 44.52, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 531.502, 200.543, 38.8402, 0.4542 ) }
    dend_20 { pt3dadd( 532.205, 200.947, 38.7212, 0.5346 ) }
    dend_20 { pt3dadd( 533.232, 201.374, 38.6568, 0.4242 ) }
    dend_20 { pt3dadd( 534.367, 201.458, 38.6378, 0.3358 ) }
    dend_20 { pt3dadd( 535.51, 201.458, 38.6344, 0.294 ) }
    dend_20 { pt3dadd( 536.655, 201.455, 38.6347, 0.31 ) }
    dend_20 { pt3dadd( 537.789, 201.333, 38.6406, 0.3426 ) }
    dend_20 { pt3dadd( 538.927, 201.245, 38.6344, 0.3898 ) }
    dend_20 { pt3dadd( 540.044, 201.064, 38.5966, 0.5418 ) }
    dend_20 { pt3dadd( 541.164, 200.843, 38.572, 0.511 ) }
    dend_20 { pt3dadd( 542.073, 200.772, 38.7366, 0.5968 ) }
    dend_20 { pt3dadd( 543.216, 200.772, 38.8721, 0.5214 ) }
    dend_20 { pt3dadd( 544.361, 200.772, 38.9777, 0.6036 ) }
    dend_20 { pt3dadd( 545.502, 200.813, 39.0547, 0.5936 ) }
    dend_20 { pt3dadd( 546.633, 200.962, 39.1014, 0.449 ) }
    dend_20 { pt3dadd( 547.776, 201.001, 39.1037, 0.3344 ) }
    dend_20 { pt3dadd( 548.883, 201.128, 39.0454, 0.2912 ) }
    dend_20 { pt3dadd( 549.685, 201.87, 38.9995, 0.3066 ) }
    dend_20 { pt3dadd( 550.517, 202.485, 38.9648, 0.3284 ) }
    dend_20 { pt3dadd( 551.648, 202.616, 38.9404, 0.4008 ) }
    dend_20 { pt3dadd( 552.749, 202.86, 38.9259, 0.3794 ) }
    dend_20 { pt3dadd( 553.859, 203.05, 38.92, 0.41 ) }
    dend_20 { pt3dadd( 555.0, 203.117, 38.92, 0.3544 ) }
    dend_20 { pt3dadd( 556.036, 203.523, 38.92, 0.339 ) }
    dend_20 { pt3dadd( 557.054, 204.039, 38.92, 0.342 ) }
    dend_20 { pt3dadd( 558.138, 204.388, 38.92, 0.4244 ) }
    dend_20 { pt3dadd( 559.216, 204.768, 38.92, 0.4316 ) }
    dend_20 { pt3dadd( 560.094, 205.467, 38.92, 0.4658 ) }
    dend_20 { pt3dadd( 561.116, 205.946, 38.92, 0.6556 ) }
    dend_20 { pt3dadd( 562.223, 206.228, 38.92, 0.6242 ) }
    dend_20 { pt3dadd( 563.352, 206.41, 38.92, 0.596 ) }
    dend_20 { pt3dadd( 564.481, 206.601, 38.92, 0.3982 ) }
    dend_20 { pt3dadd( 565.297, 207.363, 38.92, 0.2796 ) }
    dend_20 { pt3dadd( 566.393, 207.636, 38.92, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 78/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 443.212, 207.119, 32.8238, 0.9294 ) }
    dend_18 { pt3dadd( 443.592, 207.532, 32.2263, 0.8276 ) }
    dend_18 { pt3dadd( 443.931, 208.594, 31.8329, 0.619 ) }
    dend_18 { pt3dadd( 444.521, 209.549, 31.6254, 0.5588 ) }
    dend_18 { pt3dadd( 444.941, 210.6, 31.5582, 0.4616 ) }
    dend_18 { pt3dadd( 445.47, 211.608, 31.547, 0.4416 ) }
    dend_18 { pt3dadd( 446.214, 212.472, 31.5216, 0.5416 ) }
    dend_18 { pt3dadd( 447.079, 213.218, 31.4784, 0.5198 ) }
    dend_18 { pt3dadd( 447.635, 214.205, 31.4163, 0.5698 ) }
    dend_18 { pt3dadd( 447.755, 215.335, 31.3239, 0.68 ) }
    dend_18 { pt3dadd( 447.85, 216.471, 31.1774, 0.5716 ) }
    dend_18 { pt3dadd( 447.906, 217.614, 31.015, 0.5156 ) }
    dend_18 { pt3dadd( 448.211, 218.714, 30.8409, 0.623 ) }
    dend_18 { pt3dadd( 448.884, 219.456, 30.485, 0.713 ) }
    dend_18 { pt3dadd( 449.178, 220.507, 30.0703, 0.7222 ) }
    dend_18 { pt3dadd( 449.611, 221.565, 29.734, 0.5906 ) }
    dend_18 { pt3dadd( 450.13, 222.558, 29.4708, 0.609 ) }
    dend_18 { pt3dadd( 450.977, 223.322, 29.26, 0.7424 ) }
    dend_18 { pt3dadd( 451.622, 224.226, 29.0657, 0.737 ) }
    dend_18 { pt3dadd( 451.88, 225.334, 28.891, 0.5802 ) }
    dend_18 { pt3dadd( 452.2, 226.425, 28.7431, 0.5452 ) }
    dend_18 { pt3dadd( 452.703, 227.452, 28.6003, 0.6112 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_18 { pt3dadd( 453.023, 228.514, 28.4262, 0.5564 ) }
    dend_18 { pt3dadd( 453.023, 229.627, 28.1856, 0.629 ) }
    dend_18 { pt3dadd( 452.995, 230.762, 27.9434, 0.604 ) }
    dend_18 { pt3dadd( 452.91, 231.892, 27.699, 0.6456 ) }
    dend_18 { pt3dadd( 452.828, 233.033, 27.5012, 0.525 ) }
    dend_18 { pt3dadd( 452.825, 234.172, 27.3316, 0.5744 ) }
    dend_18 { pt3dadd( 452.887, 235.312, 27.1792, 0.485 ) }
    dend_18 { pt3dadd( 452.91, 236.449, 27.04, 0.5108 ) }
    dend_18 { pt3dadd( 452.937, 237.583, 26.9012, 0.5452 ) }
    dend_18 { pt3dadd( 453.145, 238.695, 26.8074, 0.4448 ) }
    dend_18 { pt3dadd( 453.367, 239.797, 26.7516, 0.3686 ) }
    dend_18 { pt3dadd( 453.484, 240.928, 26.7327, 0.3804 ) }
    dend_18 { pt3dadd( 453.661, 242.054, 26.746, 0.3466 ) }
    dend_18 { pt3dadd( 453.701, 243.197, 26.7852, 0.3246 ) }
    dend_18 { pt3dadd( 453.59, 244.322, 26.8769, 0.315 ) }
    dend_18 { pt3dadd( 453.482, 245.445, 27.0024, 0.375 ) }
    dend_18 { pt3dadd( 453.513, 246.586, 27.1277, 0.3368 ) }
    dend_18 { pt3dadd( 453.628, 247.721, 27.2471, 0.3056 ) }
    dend_18 { pt3dadd( 453.605, 248.849, 27.3365, 0.2848 ) }
    dend_18 { pt3dadd( 453.284, 249.94, 27.3947, 0.2936 ) }
    dend_18 { pt3dadd( 452.986, 251.037, 27.425, 0.3096 ) }
    dend_18 { pt3dadd( 452.734, 252.149, 27.4537, 0.34 ) }
    dend_18 { pt3dadd( 452.53, 253.268, 27.4719, 0.394 ) }
    dend_18 { pt3dadd( 452.533, 254.404, 27.4477, 0.5058 ) }
    dend_18 { pt3dadd( 452.905, 255.454, 27.4005, 0.6556 ) }
    dend_18 { pt3dadd( 453.048, 256.51, 27.3164, 0.5266 ) }
    dend_18 { pt3dadd( 453.023, 257.649, 27.2327, 0.4306 ) }
    dend_18 { pt3dadd( 453.023, 258.793, 27.1571, 0.4736 ) }
    dend_18 { pt3dadd( 453.06, 259.937, 27.0899, 0.3956 ) }
    dend_18 { pt3dadd( 453.135, 261.079, 27.0278, 0.3298 ) }
    dend_18 { pt3dadd( 453.404, 262.189, 26.9612, 0.2826 ) }
    dend_18 { pt3dadd( 453.579, 263.318, 26.882, 0.2894 ) }
    dend_18 { pt3dadd( 453.596, 264.461, 26.7777, 0.3016 ) }
    dend_18 { pt3dadd( 453.096, 265.472, 26.6138, 0.327 ) }
    dend_18 { pt3dadd( 452.686, 266.517, 26.3693, 0.3612 ) }
    dend_18 { pt3dadd( 452.681, 267.659, 26.0942, 0.4864 ) }
    dend_18 { pt3dadd( 452.661, 268.791, 25.7517, 0.4194 ) }
    dend_18 { pt3dadd( 452.478, 269.878, 25.3039, 0.3746 ) }
    dend_18 { pt3dadd( 452.153, 270.951, 24.8139, 0.3626 ) }
    dend_18 { pt3dadd( 451.993, 272.059, 24.3118, 0.4528 ) }
    dend_18 { pt3dadd( 451.993, 273.107, 23.7499, 0.5322 ) }
    dend_18 { pt3dadd( 452.008, 274.022, 23.0984, 0.4196 ) }
    dend_18 { pt3dadd( 452.122, 275.138, 22.5884, 0.3274 ) }
    dend_18 { pt3dadd( 452.376, 276.251, 22.2799, 0.2782 ) }
    dend_18 { pt3dadd( 452.504, 277.382, 22.1642, 0.2814 ) }
    dend_18 { pt3dadd( 452.655, 278.436, 22.3012, 0.287 ) }
    dend_18 { pt3dadd( 452.917, 279.403, 22.6704, 0.2988 ) }
    dend_18 { pt3dadd( 453.221, 280.487, 23.0403, 0.3144 ) }
    dend_18 { pt3dadd( 453.796, 281.474, 23.3407, 0.3738 ) }
    dend_18 { pt3dadd( 454.479, 282.388, 23.579, 0.3346 ) }
    dend_18 { pt3dadd( 455.104, 283.319, 23.7997, 0.3014 ) }
    dend_18 { pt3dadd( 455.717, 284.261, 23.9725, 0.2772 ) }
    dend_18 { pt3dadd( 456.41, 285.172, 24.0651, 0.2796 ) }
    dend_18 { pt3dadd( 457.265, 285.902, 24.1101, 0.2838 ) }
    dend_18 { pt3dadd( 458.125, 286.643, 24.1104, 0.2916 ) }
    dend_18 { pt3dadd( 458.584, 287.667, 24.0368, 0.3072 ) }
    dend_18 { pt3dadd( 458.914, 288.76, 23.9254, 0.3298 ) }
    dend_18 { pt3dadd( 459.329, 289.821, 23.7667, 0.4036 ) }
    dend_18 { pt3dadd( 459.754, 290.881, 23.613, 0.3842 ) }
    dend_18 { pt3dadd( 460.0, 291.956, 23.3684, 0.4208 ) }
    dend_18 { pt3dadd( 460.002, 293.099, 23.1572, 0.3644 ) }
    dend_18 { pt3dadd( 460.002, 294.237, 22.958, 0.4068 ) }
    dend_18 { pt3dadd( 460.002, 295.381, 22.68, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 63/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 443.212, 207.119, 32.8238, 0.9294 ) }
    dend_15 { pt3dadd( 442.134, 207.539, 31.2738, 0.4576 ) }
    dend_15 { pt3dadd( 441.687, 208.225, 29.8315, 0.7554 ) }
    dend_15 { pt3dadd( 441.393, 209.239, 29.2188, 0.8234 ) }
    dend_15 { pt3dadd( 440.44, 209.059, 28.6098, 0.8958 ) }
    dend_15 { pt3dadd( 440.237, 208.083, 27.8827, 0.8336 ) }
    dend_15 { pt3dadd( 439.933, 207.029, 27.1164, 0.7558 ) }
    dend_15 { pt3dadd( 439.717, 206.16, 26.2126, 0.6592 ) }
    dend_15 { pt3dadd( 439.296, 205.771, 25.1525, 0.4772 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 72/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 453.01, 184.85, 44.8132, 0.666 ) }
    dend_13 { pt3dadd( 453.445, 184.568, 46.6984, 0.2288 ) }
    dend_13 { pt3dadd( 454.422, 184.248, 45.7694, 0.415 ) }
    dend_13 { pt3dadd( 455.426, 184.239, 45.292, 0.523 ) }
    dend_13 { pt3dadd( 456.519, 184.239, 44.7009, 0.793 ) }
    dend_13 { pt3dadd( 457.628, 184.239, 44.051, 0.9552 ) }
    dend_13 { pt3dadd( 458.755, 184.239, 43.3958, 0.8388 ) }
    dend_13 { pt3dadd( 459.861, 184.131, 42.7311, 0.5888 ) }
    dend_13 { pt3dadd( 460.904, 183.792, 42.0406, 0.5198 ) }
    dend_13 { pt3dadd( 461.948, 183.487, 41.3437, 0.5368 ) }
    dend_13 { pt3dadd( 463.051, 183.388, 40.6459, 0.5508 ) }
    dend_13 { pt3dadd( 464.145, 183.281, 39.9386, 0.6628 ) }
    dend_13 { pt3dadd( 465.211, 183.101, 39.2036, 0.909 ) }
    dend_13 { pt3dadd( 466.195, 182.741, 38.442, 0.9498 ) }
    dend_13 { pt3dadd( 467.148, 182.238, 37.7611, 0.755 ) }
    dend_13 { pt3dadd( 468.221, 182.188, 37.2274, 0.7914 ) }
    dend_13 { pt3dadd( 469.27, 182.189, 36.6694, 0.761 ) }
    dend_13 { pt3dadd( 470.081, 181.776, 35.9985, 0.7206 ) }
    dend_13 { pt3dadd( 470.528, 181.131, 35.2268, 0.5682 ) }
    dend_13 { pt3dadd( 470.889, 180.4, 34.4347, 0.434 ) }
    dend_13 { pt3dadd( 471.807, 180.13, 33.8965, 0.3808 ) }
    dend_13 { pt3dadd( 472.479, 180.114, 33.9402, 0.4754 ) }
    dend_13 { pt3dadd( 473.092, 180.114, 34.4842, 0.399 ) }
    dend_13 { pt3dadd( 473.823, 180.114, 35.3265, 0.336 ) }
    dend_13 { pt3dadd( 474.884, 180.114, 36.0965, 0.2942 ) }
    dend_13 { pt3dadd( 476.0, 179.888, 36.6131, 0.3116 ) }
    dend_13 { pt3dadd( 476.642, 179.117, 36.6691, 0.3392 ) }
    dend_13 { pt3dadd( 477.306, 178.294, 36.335, 0.4146 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_13 { pt3dadd( 478.209, 177.663, 35.7809, 0.4358 ) }
    dend_13 { pt3dadd( 479.036, 176.984, 35.0843, 0.3652 ) }
    dend_13 { pt3dadd( 479.908, 176.324, 34.3731, 0.3108 ) }
    dend_13 { pt3dadd( 480.898, 175.797, 33.7361, 0.2944 ) }
    dend_13 { pt3dadd( 481.865, 175.2, 33.2186, 0.3124 ) }
    dend_13 { pt3dadd( 482.793, 174.532, 32.8266, 0.3396 ) }
    dend_13 { pt3dadd( 483.754, 173.927, 32.4839, 0.4204 ) }
    dend_13 { pt3dadd( 484.736, 173.397, 32.1378, 0.4218 ) }
    dend_13 { pt3dadd( 485.77, 172.915, 31.836, 0.4592 ) }
    dend_13 { pt3dadd( 486.819, 172.458, 31.584, 0.5878 ) }
    dend_13 { pt3dadd( 487.835, 171.933, 31.3555, 0.768 ) }
    dend_13 { pt3dadd( 488.821, 171.356, 31.1324, 0.9274 ) }
    dend_13 { pt3dadd( 489.832, 170.899, 30.833, 0.927 ) }
    dend_13 { pt3dadd( 490.829, 170.554, 30.4212, 0.9886 ) }
    dend_13 { pt3dadd( 491.894, 170.154, 30.0392, 0.8016 ) }
    dend_13 { pt3dadd( 492.963, 169.751, 29.7312, 0.7728 ) }
    dend_13 { pt3dadd( 494.068, 169.454, 29.4848, 0.548 ) }
    dend_13 { pt3dadd( 495.185, 169.214, 29.2846, 0.5074 ) }
    dend_13 { pt3dadd( 496.284, 168.926, 29.0881, 0.435 ) }
    dend_13 { pt3dadd( 497.383, 168.641, 28.8862, 0.5158 ) }
    dend_13 { pt3dadd( 498.499, 168.417, 28.7358, 0.5366 ) }
    dend_13 { pt3dadd( 499.613, 168.209, 28.6121, 0.744 ) }
    dend_13 { pt3dadd( 500.727, 167.993, 28.3912, 0.7674 ) }
    dend_13 { pt3dadd( 501.837, 167.793, 28.0652, 0.7336 ) }
    dend_13 { pt3dadd( 502.973, 167.763, 27.6838, 0.5872 ) }
    dend_13 { pt3dadd( 504.053, 168.018, 27.2255, 0.4926 ) }
    dend_13 { pt3dadd( 504.812, 168.428, 26.5635, 0.3758 ) }
    dend_13 { pt3dadd( 505.314, 167.98, 25.6943, 0.3316 ) }
    dend_13 { pt3dadd( 505.965, 167.524, 24.8187, 0.3282 ) }
    dend_13 { pt3dadd( 507.016, 167.39, 24.2339, 0.399 ) }
    dend_13 { pt3dadd( 507.842, 166.723, 24.0251, 0.3834 ) }
    dend_13 { pt3dadd( 508.359, 165.862, 24.1723, 0.3812 ) }
    dend_13 { pt3dadd( 508.845, 165.474, 24.7353, 0.4762 ) }
    dend_13 { pt3dadd( 509.629, 165.298, 25.4909, 0.4006 ) }
    dend_13 { pt3dadd( 510.359, 164.628, 26.1599, 0.3392 ) }
    dend_13 { pt3dadd( 510.668, 163.811, 26.3739, 0.3002 ) }
    dend_13 { pt3dadd( 511.165, 163.036, 26.1308, 0.3216 ) }
    dend_13 { pt3dadd( 511.829, 162.223, 25.5936, 0.3646 ) }
    dend_13 { pt3dadd( 512.565, 161.534, 24.8368, 0.427 ) }
    dend_13 { pt3dadd( 513.565, 161.176, 24.0543, 0.6284 ) }
    dend_13 { pt3dadd( 514.663, 160.904, 23.4074, 0.5848 ) }
    dend_13 { pt3dadd( 515.768, 160.725, 22.905, 0.4688 ) }
    dend_13 { pt3dadd( 516.888, 160.639, 22.5277, 0.4238 ) }
    dend_13 { pt3dadd( 518.008, 160.829, 22.3151, 0.4322 ) }
    dend_13 { pt3dadd( 518.913, 160.407, 22.6394, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 45/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 453.01, 184.85, 44.8132, 0.666 ) }
    dend_8 { pt3dadd( 452.752, 184.031, 45.159, 0.7396 ) }
    dend_8 { pt3dadd( 452.341, 182.968, 45.451, 0.801 ) }
    dend_8 { pt3dadd( 451.956, 182.006, 45.801, 0.8224 ) }
    dend_8 { pt3dadd( 451.371, 181.062, 45.9514, 0.8522 ) }
    dend_8 { pt3dadd( 451.272, 179.93, 46.0152, 0.726 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 428.381, 186.072, 52.5949, 0.5866 ) }
    dend_6 { pt3dadd( 428.118, 186.2, 55.8653, 0.9152 ) }
    dend_6 { pt3dadd( 427.13, 186.265, 57.7055, 0.7766 ) }
    dend_6 { pt3dadd( 426.341, 186.243, 58.5385, 0.5876 ) }
    dend_6 { pt3dadd( 425.41, 186.243, 59.5515, 0.4208 ) }
    dend_6 { pt3dadd( 424.484, 186.243, 60.6987, 0.3662 ) }
    dend_6 { pt3dadd( 423.385, 186.243, 61.7761, 0.3998 ) }
    dend_6 { pt3dadd( 422.242, 186.243, 62.7004, 0.4944 ) }
    dend_6 { pt3dadd( 421.19, 186.243, 63.637, 0.7426 ) }
    dend_6 { pt3dadd( 420.308, 186.243, 64.6898, 0.8498 ) }
    dend_6 { pt3dadd( 419.234, 186.188, 65.5894, 0.7018 ) }
    dend_6 { pt3dadd( 418.423, 186.668, 66.5888, 0.7378 ) }
    dend_6 { pt3dadd( 417.559, 186.815, 67.7446, 0.6714 ) }
    dend_6 { pt3dadd( 416.484, 186.823, 68.8996, 0.5082 ) }
    dend_6 { pt3dadd( 415.389, 186.874, 70.0109, 0.399 ) }
    dend_6 { pt3dadd( 414.31, 186.93, 71.1152, 0.4026 ) }
    dend_6 { pt3dadd( 413.459, 186.93, 72.3131, 0.5526 ) }
    dend_6 { pt3dadd( 412.781, 186.93, 73.6814, 0.5932 ) }
    dend_6 { pt3dadd( 411.988, 186.787, 75.1279, 0.4482 ) }
    dend_6 { pt3dadd( 411.585, 186.059, 76.5481, 0.333 ) }
    dend_6 { pt3dadd( 411.178, 185.576, 77.9993, 0.2888 ) }
    dend_6 { pt3dadd( 410.243, 185.147, 79.2243, 0.3008 ) }
    dend_6 { pt3dadd( 409.339, 184.461, 80.2004, 0.324 ) }
    dend_6 { pt3dadd( 408.449, 183.787, 81.048, 0.3622 ) }
    dend_6 { pt3dadd( 407.737, 183.176, 81.9633, 0.4564 ) }
    dend_6 { pt3dadd( 407.023, 182.616, 82.9284, 0.5168 ) }
    dend_6 { pt3dadd( 406.573, 181.636, 83.7502, 0.499 ) }
    dend_6 { pt3dadd( 405.673, 181.025, 84.4939, 0.6366 ) }
    dend_6 { pt3dadd( 405.209, 180.13, 85.2953, 0.5224 ) }
    dend_6 { pt3dadd( 404.387, 179.732, 86.1834, 0.5008 ) }
    dend_6 { pt3dadd( 403.551, 179.291, 87.1178, 0.4542 ) }
    dend_6 { pt3dadd( 403.366, 178.847, 88.2605, 0.3998 ) }
    dend_6 { pt3dadd( 402.953, 178.163, 89.4477, 0.371 ) }
    dend_6 { pt3dadd( 402.165, 177.39, 90.3972, 0.4266 ) }
    dend_6 { pt3dadd( 401.624, 176.398, 91.0773, 0.4576 ) }
    dend_6 { pt3dadd( 400.678, 175.758, 91.539, 0.4076 ) }
    dend_6 { pt3dadd( 399.719, 175.137, 91.845, 0.379 ) }
    dend_6 { pt3dadd( 398.695, 174.627, 92.059, 0.4722 ) }
    dend_6 { pt3dadd( 397.564, 174.46, 92.2712, 0.3932 ) }
    dend_6 { pt3dadd( 396.426, 174.35, 92.5515, 0.3254 ) }
    dend_6 { pt3dadd( 395.282, 174.346, 92.9264, 0.2746 ) }
    dend_6 { pt3dadd( 395.288, 174.355, 93.4956, 0.2746 ) }
    dend_6 { pt3dadd( 394.379, 174.169, 94.3345, 0.2746 ) }
    dend_6 { pt3dadd( 393.49, 173.969, 95.3806, 0.2746 ) }
    dend_6 { pt3dadd( 393.134, 173.798, 96.714, 0.2746 ) }
    dend_6 { pt3dadd( 392.777, 173.626, 98.205, 0.2746 ) }
    dend_6 { pt3dadd( 392.565, 173.758, 99.484, 0.2746 ) }
    dend_6 { pt3dadd( 391.746, 173.124, 100.45, 0.2748 ) }
    dend_6 { pt3dadd( 390.819, 172.468, 101.103, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( 389.807, 171.938, 101.513, 0.2752 ) }
    dend_6 { pt3dadd( 388.793, 171.407, 101.748, 0.2756 ) }
    dend_6 { pt3dadd( 387.721, 171.035, 101.949, 0.2766 ) }
    dend_6 { pt3dadd( 386.647, 170.667, 102.177, 0.2784 ) }
    dend_6 { pt3dadd( 385.573, 170.299, 102.442, 0.2818 ) }
    dend_6 { pt3dadd( 384.497, 169.932, 102.737, 0.2876 ) }
    dend_6 { pt3dadd( 383.424, 169.564, 103.045, 0.2998 ) }
    dend_6 { pt3dadd( 382.35, 169.197, 103.351, 0.316 ) }
    dend_6 { pt3dadd( 381.277, 168.828, 103.641, 0.377 ) }
    dend_6 { pt3dadd( 380.203, 168.461, 103.912, 0.3408 ) }
    dend_6 { pt3dadd( 379.129, 168.094, 104.159, 0.3124 ) }
    dend_6 { pt3dadd( 378.086, 167.628, 104.338, 0.2988 ) }
    dend_6 { pt3dadd( 377.052, 167.138, 104.452, 0.3142 ) }
    dend_6 { pt3dadd( 376.019, 166.649, 104.516, 0.3736 ) }
    dend_6 { pt3dadd( 374.984, 166.159, 104.543, 0.334 ) }
    dend_6 { pt3dadd( 373.935, 165.71, 104.549, 0.3002 ) }
    dend_6 { pt3dadd( 372.854, 165.334, 104.546, 0.2752 ) }
    dend_6 { pt3dadd( 371.773, 164.958, 104.544, 0.2756 ) }
    dend_6 { pt3dadd( 370.693, 164.583, 104.546, 0.2766 ) }
    dend_6 { pt3dadd( 369.613, 164.208, 104.549, 0.2782 ) }
    dend_6 { pt3dadd( 368.536, 163.817, 104.553, 0.2816 ) }
    dend_6 { pt3dadd( 367.48, 163.379, 104.559, 0.2872 ) }
    dend_6 { pt3dadd( 366.423, 162.941, 104.566, 0.2992 ) }
    dend_6 { pt3dadd( 365.367, 162.503, 104.574, 0.3148 ) }
    dend_6 { pt3dadd( 364.31, 162.065, 104.583, 0.3748 ) }
    dend_6 { pt3dadd( 363.223, 161.717, 104.593, 0.3364 ) }
    dend_6 { pt3dadd( 362.112, 161.449, 104.605, 0.3048 ) }
    dend_6 { pt3dadd( 361.0, 161.182, 104.62, 0.2834 ) }
    dend_6 { pt3dadd( 359.888, 160.914, 104.637, 0.2908 ) }
    dend_6 { pt3dadd( 358.776, 160.645, 104.66, 0.3058 ) }
    dend_6 { pt3dadd( 357.661, 160.377, 104.689, 0.3272 ) }
    dend_6 { pt3dadd( 356.698, 159.816, 104.727, 0.3988 ) }
    dend_6 { pt3dadd( 355.821, 159.082, 104.779, 0.3754 ) }
    dend_6 { pt3dadd( 354.941, 158.349, 104.846, 0.4026 ) }
    dend_6 { pt3dadd( 354.082, 157.601, 104.937, 0.341 ) }
    dend_6 { pt3dadd( 353.376, 156.707, 105.092, 0.313 ) }
    dend_6 { pt3dadd( 352.671, 155.815, 105.297, 0.2998 ) }
    dend_6 { pt3dadd( 351.965, 154.923, 105.542, 0.316 ) }
    dend_6 { pt3dadd( 351.26, 154.029, 105.816, 0.377 ) }
    dend_6 { pt3dadd( 350.556, 153.137, 106.107, 0.3408 ) }
    dend_6 { pt3dadd( 349.602, 152.559, 106.408, 0.3124 ) }
    dend_6 { pt3dadd( 348.571, 152.082, 106.713, 0.2988 ) }
    dend_6 { pt3dadd( 347.54, 151.604, 107.02, 0.3142 ) }
    dend_6 { pt3dadd( 346.508, 151.127, 107.325, 0.3734 ) }
    dend_6 { pt3dadd( 345.478, 150.649, 107.627, 0.3338 ) }
    dend_6 { pt3dadd( 344.447, 150.171, 107.924, 0.3 ) }
    dend_6 { pt3dadd( 343.391, 149.747, 108.209, 0.2746 ) }
    dend_6 { pt3dadd( 342.315, 149.373, 108.476, 0.2746 ) }
    dend_6 { pt3dadd( 341.237, 149.0, 108.729, 0.2748 ) }
    dend_6 { pt3dadd( 340.16, 148.626, 108.972, 0.2748 ) }
    dend_6 { pt3dadd( 339.083, 148.252, 109.209, 0.2752 ) }
    dend_6 { pt3dadd( 338.006, 147.878, 109.441, 0.2758 ) }
    dend_6 { pt3dadd( 336.928, 147.504, 109.673, 0.2768 ) }
    dend_6 { pt3dadd( 335.852, 147.131, 109.905, 0.2786 ) }
    dend_6 { pt3dadd( 334.773, 146.757, 110.137, 0.282 ) }
    dend_6 { pt3dadd( 333.698, 146.383, 110.37, 0.2882 ) }
    dend_6 { pt3dadd( 332.62, 146.009, 110.604, 0.2996 ) }
    dend_6 { pt3dadd( 331.544, 145.635, 110.838, 0.3232 ) }
    dend_6 { pt3dadd( 330.466, 145.26, 111.077, 0.354 ) }
    dend_6 { pt3dadd( 329.39, 144.888, 111.323, 0.473 ) }
    dend_6 { pt3dadd( 328.271, 144.659, 111.554, 0.3946 ) }
    dend_6 { pt3dadd( 327.144, 144.462, 111.776, 0.3278 ) }
    dend_6 { pt3dadd( 326.038, 144.249, 112.058, 0.2792 ) }
    dend_6 { pt3dadd( 324.94, 144.03, 112.416, 0.283 ) }
    dend_6 { pt3dadd( 323.84, 143.81, 112.831, 0.2904 ) }
    dend_6 { pt3dadd( 322.742, 143.59, 113.284, 0.3034 ) }
    dend_6 { pt3dadd( 321.644, 143.371, 113.756, 0.3302 ) }
    dend_6 { pt3dadd( 320.545, 143.151, 114.229, 0.3674 ) }
    dend_6 { pt3dadd( 319.49, 142.8, 114.661, 0.4974 ) }
    dend_6 { pt3dadd( 318.516, 142.2, 115.005, 0.4418 ) }
    dend_6 { pt3dadd( 317.542, 141.6, 115.293, 0.4052 ) }
    dend_6 { pt3dadd( 316.568, 140.999, 115.553, 0.4734 ) }
    dend_6 { pt3dadd( 315.673, 140.335, 115.898, 0.3954 ) }
    dend_6 { pt3dadd( 314.785, 139.664, 116.328, 0.3294 ) }
    dend_6 { pt3dadd( 313.898, 138.994, 116.83, 0.2818 ) }
    dend_6 { pt3dadd( 313.01, 138.322, 117.387, 0.2882 ) }
    dend_6 { pt3dadd( 312.122, 137.652, 117.972, 0.2994 ) }
    dend_6 { pt3dadd( 311.234, 136.981, 118.559, 0.323 ) }
    dend_6 { pt3dadd( 310.346, 136.311, 119.126, 0.3536 ) }
    dend_6 { pt3dadd( 309.459, 135.639, 119.666, 0.4724 ) }
    dend_6 { pt3dadd( 308.43, 135.158, 120.126, 0.3932 ) }
    dend_6 { pt3dadd( 307.395, 134.684, 120.52, 0.3256 ) }
    dend_6 { pt3dadd( 306.361, 134.21, 120.86, 0.2748 ) }
    dend_6 { pt3dadd( 305.327, 133.735, 121.16, 0.275 ) }
    dend_6 { pt3dadd( 304.293, 133.26, 121.432, 0.2752 ) }
    dend_6 { pt3dadd( 303.257, 132.785, 121.684, 0.2758 ) }
    dend_6 { pt3dadd( 302.223, 132.312, 121.924, 0.2768 ) }
    dend_6 { pt3dadd( 301.189, 131.837, 122.15, 0.2786 ) }
    dend_6 { pt3dadd( 300.154, 131.362, 122.358, 0.2822 ) }
    dend_6 { pt3dadd( 299.104, 130.909, 122.514, 0.2888 ) }
    dend_6 { pt3dadd( 298.053, 130.458, 122.623, 0.3006 ) }
    dend_6 { pt3dadd( 297.001, 130.008, 122.697, 0.3236 ) }
    dend_6 { pt3dadd( 295.949, 129.558, 122.747, 0.3624 ) }
    dend_6 { pt3dadd( 294.898, 129.107, 122.785, 0.4526 ) }
    dend_6 { pt3dadd( 293.824, 128.716, 122.82, 0.5316 ) }
    dend_6 { pt3dadd( 292.734, 128.367, 122.862, 0.4188 ) }
    dend_6 { pt3dadd( 291.645, 128.019, 122.916, 0.3256 ) }
    dend_6 { pt3dadd( 290.555, 127.67, 122.989, 0.275 ) }
    dend_6 { pt3dadd( 289.466, 127.322, 123.082, 0.2752 ) }
    dend_6 { pt3dadd( 288.365, 127.042, 123.225, 0.2758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 287.247, 126.841, 123.438, 0.2768 ) }
    dend_6 { pt3dadd( 286.133, 126.638, 123.711, 0.2788 ) }
    dend_6 { pt3dadd( 285.017, 126.437, 124.02, 0.2824 ) }
    dend_6 { pt3dadd( 283.902, 126.236, 124.344, 0.2882 ) }
    dend_6 { pt3dadd( 282.785, 126.035, 124.664, 0.305 ) }
    dend_6 { pt3dadd( 281.67, 125.833, 124.963, 0.305 ) }
    dend_6 { pt3dadd( 280.555, 125.632, 125.547, 0.4576 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 428.381, 186.072, 52.5949, 0.5866 ) }
    dend_1 { pt3dadd( 427.592, 185.767, 52.3636, 0.6512 ) }
    dend_1 { pt3dadd( 427.092, 185.624, 51.6956, 0.581 ) }
    dend_1 { pt3dadd( 426.196, 185.27, 50.8824, 0.4562 ) }
    dend_1 { pt3dadd( 425.233, 184.668, 50.1892, 0.429 ) }
    dend_1 { pt3dadd( 424.25, 184.085, 49.7154, 0.531 ) }
    dend_1 { pt3dadd( 423.169, 183.71, 49.4948, 0.6672 ) }
    dend_1 { pt3dadd( 422.276, 183.016, 49.4514, 0.718 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 15/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 439.296, 205.771, 25.1525, 0.4772 ) }
    dend_17 { pt3dadd( 438.576, 206.167, 24.3492, 0.3818 ) }
    dend_17 { pt3dadd( 437.573, 206.714, 23.7648, 0.4042 ) }
    dend_17 { pt3dadd( 436.533, 207.192, 23.3765, 0.3932 ) }
    dend_17 { pt3dadd( 435.478, 207.62, 23.1389, 0.3996 ) }
    dend_17 { pt3dadd( 434.364, 207.868, 23.0062, 0.5098 ) }
    dend_17 { pt3dadd( 433.293, 208.195, 22.8906, 0.4648 ) }
    dend_17 { pt3dadd( 432.276, 208.697, 22.7426, 0.4484 ) }
    dend_17 { pt3dadd( 431.376, 209.361, 22.6045, 0.5494 ) }
    dend_17 { pt3dadd( 431.174, 210.425, 22.4682, 0.5564 ) }
    dend_17 { pt3dadd( 431.26, 211.562, 22.3097, 0.5294 ) }
    dend_17 { pt3dadd( 431.618, 212.619, 22.0931, 0.4456 ) }
    dend_17 { pt3dadd( 432.243, 213.563, 21.8883, 0.4528 ) }
    dend_17 { pt3dadd( 432.82, 214.549, 21.7124, 0.593 ) }
    dend_17 { pt3dadd( 433.24, 215.594, 21.4973, 0.6936 ) }
    dend_17 { pt3dadd( 433.616, 216.646, 21.2401, 0.5106 ) }
    dend_17 { pt3dadd( 434.483, 217.334, 21.0367, 0.364 ) }
    dend_17 { pt3dadd( 435.219, 218.199, 20.8962, 0.3 ) }
    dend_17 { pt3dadd( 435.641, 219.256, 20.8015, 0.3166 ) }
    dend_17 { pt3dadd( 436.333, 220.157, 20.7451, 0.378 ) }
    dend_17 { pt3dadd( 436.703, 221.235, 20.7227, 0.3426 ) }
    dend_17 { pt3dadd( 436.889, 222.364, 20.72, 0.3158 ) }
    dend_17 { pt3dadd( 436.894, 223.508, 20.72, 0.305 ) }
    dend_17 { pt3dadd( 436.866, 224.651, 20.72, 0.3248 ) }
    dend_17 { pt3dadd( 436.609, 225.766, 20.72, 0.3982 ) }
    dend_17 { pt3dadd( 436.549, 226.908, 20.72, 0.356 ) }
    dend_17 { pt3dadd( 436.207, 227.999, 20.72, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 42/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 439.296, 205.771, 25.1525, 0.4772 ) }
    dend_16 { pt3dadd( 439.066, 205.408, 22.6078, 0.4576 ) }
    dend_16 { pt3dadd( 438.264, 204.676, 23.1945, 0.3614 ) }
    dend_16 { pt3dadd( 437.325, 204.444, 23.5121, 0.3038 ) }
    dend_16 { pt3dadd( 436.875, 204.928, 24.0731, 0.2816 ) }
    dend_16 { pt3dadd( 435.84, 204.888, 24.5524, 0.2876 ) }
    dend_16 { pt3dadd( 434.704, 205.014, 24.8333, 0.2996 ) }
    dend_16 { pt3dadd( 433.725, 205.571, 24.8778, 0.3158 ) }
    dend_16 { pt3dadd( 433.364, 205.947, 24.4307, 0.3766 ) }
    dend_16 { pt3dadd( 432.766, 205.107, 23.8777, 0.3398 ) }
    dend_16 { pt3dadd( 431.812, 204.889, 23.3218, 0.311 ) }
    dend_16 { pt3dadd( 431.529, 205.513, 22.7079, 0.295 ) }
    dend_16 { pt3dadd( 430.927, 205.883, 22.4127, 0.312 ) }
    dend_16 { pt3dadd( 429.876, 205.747, 22.2515, 0.3464 ) }
    dend_16 { pt3dadd( 429.066, 205.389, 21.9628, 0.3968 ) }
    dend_16 { pt3dadd( 428.176, 204.873, 21.9161, 0.5542 ) }
    dend_16 { pt3dadd( 427.085, 204.77, 21.9709, 0.5356 ) }
    dend_16 { pt3dadd( 425.951, 204.652, 21.9615, 0.6354 ) }
    dend_16 { pt3dadd( 424.812, 204.69, 21.8565, 0.6252 ) }
    dend_16 { pt3dadd( 423.796, 205.035, 21.6828, 0.6408 ) }
    dend_16 { pt3dadd( 422.939, 205.627, 21.3735, 0.7294 ) }
    dend_16 { pt3dadd( 422.043, 205.443, 20.864, 0.6044 ) }
    dend_16 { pt3dadd( 421.13, 205.116, 20.3843, 0.6328 ) }
    dend_16 { pt3dadd( 420.303, 205.721, 20.0526, 0.5678 ) }
    dend_16 { pt3dadd( 419.626, 205.655, 19.5058, 0.5592 ) }
    dend_16 { pt3dadd( 418.535, 205.636, 19.2085, 0.4576 ) }
    dend_16 { pt3dadd( 417.404, 205.568, 19.0803, 0.6864 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 69/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 451.272, 179.93, 46.0152, 0.726 ) }
    dend_12 { pt3dadd( 451.064, 179.545, 48.16, 0.6864 ) }
    dend_12 { pt3dadd( 450.837, 178.474, 48.5422, 0.4632 ) }
    dend_12 { pt3dadd( 450.049, 178.006, 48.7323, 0.3622 ) }
    dend_12 { pt3dadd( 449.484, 177.448, 49.0291, 0.3376 ) }
    dend_12 { pt3dadd( 448.928, 176.449, 49.273, 0.4166 ) }
    dend_12 { pt3dadd( 448.368, 175.452, 49.4698, 0.4156 ) }
    dend_12 { pt3dadd( 447.708, 174.521, 49.6261, 0.443 ) }
    dend_12 { pt3dadd( 447.016, 173.618, 49.751, 0.58 ) }
    dend_12 { pt3dadd( 446.432, 172.647, 49.8638, 0.6462 ) }
    dend_12 { pt3dadd( 445.701, 171.776, 49.9982, 0.5358 ) }
    dend_12 { pt3dadd( 445.06, 170.829, 50.1494, 0.5478 ) }
    dend_12 { pt3dadd( 444.426, 169.893, 50.3597, 0.4336 ) }
    dend_12 { pt3dadd( 443.807, 168.962, 50.6366, 0.4258 ) }
    dend_12 { pt3dadd( 443.161, 168.017, 50.9023, 0.3366 ) }
    dend_12 { pt3dadd( 442.661, 167.015, 51.1879, 0.3052 ) }
    dend_12 { pt3dadd( 442.023, 166.349, 51.5141, 0.2842 ) }
    dend_12 { pt3dadd( 440.948, 166.045, 51.8776, 0.2924 ) }
    dend_12 { pt3dadd( 440.163, 165.273, 52.2945, 0.3076 ) }
    dend_12 { pt3dadd( 439.801, 164.289, 52.8802, 0.3362 ) }
    dend_12 { pt3dadd( 439.334, 163.59, 53.7418, 0.3866 ) }
    dend_12 { pt3dadd( 439.135, 163.238, 54.8895, 0.4922 ) }
    dend_12 { pt3dadd( 438.71, 162.61, 56.1434, 0.6306 ) }
    dend_12 { pt3dadd( 438.181, 161.84, 57.3818, 0.4782 ) }
    dend_12 { pt3dadd( 437.535, 160.975, 58.4268, 0.3514 ) }
    dend_12 { pt3dadd( 436.903, 160.031, 59.145, 0.2758 ) }
    dend_12 { pt3dadd( 436.586, 158.937, 59.5829, 0.2768 ) }
    dend_12 { pt3dadd( 436.009, 157.949, 59.8094, 0.2786 ) }
    dend_12 { pt3dadd( 435.424, 156.966, 59.9046, 0.2822 ) }
    dend_12 { pt3dadd( 434.784, 156.037, 59.9304, 0.2886 ) }
    dend_12 { pt3dadd( 434.01, 155.249, 59.9343, 0.3016 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( 433.534, 154.258, 59.9402, 0.3194 ) }
    dend_12 { pt3dadd( 432.66, 153.519, 59.948, 0.3834 ) }
    dend_12 { pt3dadd( 431.756, 152.827, 59.9595, 0.3524 ) }
    dend_12 { pt3dadd( 431.22, 151.907, 59.9752, 0.334 ) }
    dend_12 { pt3dadd( 430.686, 150.915, 59.9967, 0.3394 ) }
    dend_12 { pt3dadd( 429.996, 150.004, 60.027, 0.3854 ) }
    dend_12 { pt3dadd( 429.234, 149.151, 60.0712, 0.5258 ) }
    dend_12 { pt3dadd( 428.383, 148.389, 60.1331, 0.5176 ) }
    dend_12 { pt3dadd( 427.738, 147.458, 60.2137, 0.4344 ) }
    dend_12 { pt3dadd( 427.017, 146.573, 60.3134, 0.3816 ) }
    dend_12 { pt3dadd( 426.27, 145.73, 60.4934, 0.4768 ) }
    dend_12 { pt3dadd( 425.459, 145.018, 60.8, 0.4018 ) }
    dend_12 { pt3dadd( 424.701, 144.169, 61.0694, 0.341 ) }
    dend_12 { pt3dadd( 423.98, 143.279, 61.2968, 0.3046 ) }
    dend_12 { pt3dadd( 422.915, 142.89, 61.4944, 0.3252 ) }
    dend_12 { pt3dadd( 421.963, 142.256, 61.6739, 0.3938 ) }
    dend_12 { pt3dadd( 420.987, 141.674, 61.8817, 0.3728 ) }
    dend_12 { pt3dadd( 419.858, 141.497, 62.0816, 0.3664 ) }
    dend_12 { pt3dadd( 418.823, 141.126, 62.3171, 0.4254 ) }
    dend_12 { pt3dadd( 418.436, 140.395, 62.8102, 0.4198 ) }
    dend_12 { pt3dadd( 417.504, 139.764, 63.2864, 0.5102 ) }
    dend_12 { pt3dadd( 416.668, 138.987, 63.6964, 0.4174 ) }
    dend_12 { pt3dadd( 415.768, 138.284, 64.0346, 0.3652 ) }
    dend_12 { pt3dadd( 414.889, 137.594, 64.3068, 0.3738 ) }
    dend_12 { pt3dadd( 414.301, 136.62, 64.5504, 0.3346 ) }
    dend_12 { pt3dadd( 413.618, 135.762, 64.7892, 0.3012 ) }
    dend_12 { pt3dadd( 412.76, 135.064, 65.0465, 0.2768 ) }
    dend_12 { pt3dadd( 412.047, 134.176, 65.2392, 0.2788 ) }
    dend_12 { pt3dadd( 411.411, 133.227, 65.3752, 0.2824 ) }
    dend_12 { pt3dadd( 410.665, 132.364, 65.462, 0.289 ) }
    dend_12 { pt3dadd( 409.802, 131.616, 65.506, 0.3012 ) }
    dend_12 { pt3dadd( 408.818, 131.072, 65.52, 0.3244 ) }
    dend_12 { pt3dadd( 407.702, 130.878, 65.52, 0.364 ) }
    dend_12 { pt3dadd( 406.56, 130.827, 65.52, 0.4554 ) }
    dend_12 { pt3dadd( 405.419, 130.765, 65.52, 0.5368 ) }
    dend_12 { pt3dadd( 404.275, 130.759, 65.52, 0.4284 ) }
    dend_12 { pt3dadd( 403.131, 130.759, 65.52, 0.3434 ) }
    dend_12 { pt3dadd( 401.987, 130.759, 65.52, 0.3076 ) }
    dend_12 { pt3dadd( 400.97, 130.421, 65.52, 0.338 ) }
    dend_12 { pt3dadd( 400.171, 129.605, 65.52, 0.3814 ) }
    dend_12 { pt3dadd( 399.247, 128.955, 65.52, 0.5258 ) }
    dend_12 { pt3dadd( 398.256, 128.387, 65.52, 0.4818 ) }
    dend_12 { pt3dadd( 397.152, 128.183, 65.52, 0.5408 ) }
    dend_12 { pt3dadd( 396.013, 128.086, 65.52, 0.4266 ) }
    dend_12 { pt3dadd( 394.953, 127.688, 65.52, 0.3842 ) }
    dend_12 { pt3dadd( 394.14, 126.903, 65.52, 0.3982 ) }
    dend_12 { pt3dadd( 393.184, 126.29, 65.52, 0.4322 ) }
    dend_12 { pt3dadd( 392.506, 125.382, 65.52, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 48/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 451.272, 179.93, 46.0152, 0.726 ) }
    dend_9 { pt3dadd( 451.311, 178.477, 45.8648, 0.6864 ) }
    dend_9 { pt3dadd( 451.579, 177.367, 45.6982, 0.5854 ) }
    dend_9 { pt3dadd( 452.032, 176.336, 45.4485, 0.531 ) }
    dend_9 { pt3dadd( 452.29, 175.223, 45.2463, 0.4726 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 422.276, 183.016, 49.4514, 0.718 ) }
    dend_5 { pt3dadd( 421.82, 183.684, 49.9694, 0.6474 ) }
    dend_5 { pt3dadd( 420.736, 183.726, 50.4655, 0.6308 ) }
    dend_5 { pt3dadd( 419.592, 183.726, 50.8743, 0.5028 ) }
    dend_5 { pt3dadd( 418.453, 183.62, 51.2019, 0.5078 ) }
    dend_5 { pt3dadd( 417.31, 183.612, 51.4626, 0.4848 ) }
    dend_5 { pt3dadd( 416.2, 183.345, 51.6734, 0.5988 ) }
    dend_5 { pt3dadd( 415.107, 183.008, 51.8414, 0.736 ) }
    dend_5 { pt3dadd( 413.99, 182.822, 52.0996, 0.8938 ) }
    dend_5 { pt3dadd( 412.875, 182.811, 52.4776, 0.7392 ) }
    dend_5 { pt3dadd( 411.745, 182.811, 52.9169, 0.564 ) }
    dend_5 { pt3dadd( 410.717, 182.706, 53.5116, 0.6144 ) }
    dend_5 { pt3dadd( 409.577, 182.697, 54.0708, 0.4868 ) }
    dend_5 { pt3dadd( 408.461, 182.697, 54.6557, 0.4088 ) }
    dend_5 { pt3dadd( 407.342, 182.582, 55.2381, 0.4088 ) }
    dend_5 { pt3dadd( 406.223, 182.58, 55.8158, 0.3938 ) }
    dend_5 { pt3dadd( 405.098, 182.518, 56.3763, 0.4376 ) }
    dend_5 { pt3dadd( 404.013, 182.468, 56.971, 0.4016 ) }
    dend_5 { pt3dadd( 403.005, 182.461, 57.6559, 0.4458 ) }
    dend_5 { pt3dadd( 401.866, 182.418, 58.2417, 0.4462 ) }
    dend_5 { pt3dadd( 400.742, 182.268, 58.73, 0.3856 ) }
    dend_5 { pt3dadd( 399.678, 181.867, 59.1685, 0.3432 ) }
    dend_5 { pt3dadd( 399.124, 181.691, 59.6397, 0.3804 ) }
    dend_5 { pt3dadd( 398.756, 181.232, 60.177, 0.3466 ) }
    dend_5 { pt3dadd( 397.881, 180.515, 60.6802, 0.3248 ) }
    dend_5 { pt3dadd( 397.006, 179.798, 61.1716, 0.3154 ) }
    dend_5 { pt3dadd( 396.129, 179.079, 61.647, 0.3756 ) }
    dend_5 { pt3dadd( 395.254, 178.362, 62.0992, 0.338 ) }
    dend_5 { pt3dadd( 394.378, 177.645, 62.5274, 0.3078 ) }
    dend_5 { pt3dadd( 393.503, 176.926, 62.9426, 0.289 ) }
    dend_5 { pt3dadd( 392.628, 176.209, 63.3632, 0.3012 ) }
    dend_5 { pt3dadd( 391.751, 175.492, 63.7916, 0.3248 ) }
    dend_5 { pt3dadd( 390.876, 174.773, 64.23, 0.3644 ) }
    dend_5 { pt3dadd( 390.001, 174.056, 64.6814, 0.4562 ) }
    dend_5 { pt3dadd( 389.125, 173.339, 65.147, 0.5386 ) }
    dend_5 { pt3dadd( 388.046, 173.145, 65.6586, 0.4314 ) }
    dend_5 { pt3dadd( 386.939, 173.023, 66.2102, 0.3502 ) }
    dend_5 { pt3dadd( 385.831, 172.901, 66.7912, 0.3152 ) }
    dend_5 { pt3dadd( 384.725, 172.778, 67.391, 0.3754 ) }
    dend_5 { pt3dadd( 383.617, 172.656, 67.9988, 0.3376 ) }
    dend_5 { pt3dadd( 382.51, 172.533, 68.6053, 0.3068 ) }
    dend_5 { pt3dadd( 381.404, 172.411, 69.1989, 0.287 ) }
    dend_5 { pt3dadd( 380.297, 172.29, 69.7726, 0.2988 ) }
    dend_5 { pt3dadd( 379.19, 172.167, 70.32, 0.3142 ) }
    dend_5 { pt3dadd( 378.083, 172.045, 70.8336, 0.3734 ) }
    dend_5 { pt3dadd( 376.977, 171.923, 71.3073, 0.3338 ) }
    dend_5 { pt3dadd( 375.868, 171.703, 71.6811, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 374.759, 171.419, 71.9348, 0.2746 ) }
    dend_5 { pt3dadd( 373.651, 171.137, 72.0958, 0.2746 ) }
    dend_5 { pt3dadd( 372.543, 170.854, 72.1907, 0.2748 ) }
    dend_5 { pt3dadd( 371.434, 170.57, 72.2445, 0.2748 ) }
    dend_5 { pt3dadd( 370.327, 170.288, 72.2806, 0.275 ) }
    dend_5 { pt3dadd( 369.217, 170.004, 72.3201, 0.2756 ) }
    dend_5 { pt3dadd( 368.109, 169.722, 72.3722, 0.2764 ) }
    dend_5 { pt3dadd( 367.051, 169.318, 72.4492, 0.278 ) }
    dend_5 { pt3dadd( 366.066, 168.742, 72.5651, 0.2808 ) }
    dend_5 { pt3dadd( 365.079, 168.166, 72.7132, 0.2862 ) }
    dend_5 { pt3dadd( 364.095, 167.589, 72.8871, 0.2958 ) }
    dend_5 { pt3dadd( 363.109, 167.013, 73.0814, 0.3148 ) }
    dend_5 { pt3dadd( 362.124, 166.437, 73.2908, 0.3452 ) }
    dend_5 { pt3dadd( 361.105, 165.936, 73.5174, 0.4254 ) }
    dend_5 { pt3dadd( 360.036, 165.549, 73.7671, 0.457 ) }
    dend_5 { pt3dadd( 358.967, 165.163, 74.0328, 0.3988 ) }
    dend_5 { pt3dadd( 357.898, 164.776, 74.3078, 0.3988 ) }
    dend_5 { pt3dadd( 356.831, 164.388, 74.5864, 0.3338 ) }
    dend_5 { pt3dadd( 355.712, 164.339, 74.8524, 0.3 ) }
    dend_5 { pt3dadd( 354.574, 164.419, 75.1005, 0.2746 ) }
    dend_5 { pt3dadd( 353.436, 164.498, 75.332, 0.2746 ) }
    dend_5 { pt3dadd( 352.298, 164.578, 75.5507, 0.2746 ) }
    dend_5 { pt3dadd( 351.161, 164.657, 75.759, 0.2746 ) }
    dend_5 { pt3dadd( 350.023, 164.736, 75.959, 0.2746 ) }
    dend_5 { pt3dadd( 348.884, 164.816, 76.1513, 0.2746 ) }
    dend_5 { pt3dadd( 347.747, 164.895, 76.3347, 0.2746 ) }
    dend_5 { pt3dadd( 346.609, 164.975, 76.5069, 0.2746 ) }
    dend_5 { pt3dadd( 345.471, 165.054, 76.666, 0.2746 ) }
    dend_5 { pt3dadd( 344.329, 165.049, 76.7861, 0.2746 ) }
    dend_5 { pt3dadd( 343.185, 165.024, 76.8695, 0.2746 ) }
    dend_5 { pt3dadd( 342.04, 165.0, 76.9255, 0.2746 ) }
    dend_5 { pt3dadd( 340.897, 164.976, 76.9636, 0.2746 ) }
    dend_5 { pt3dadd( 339.754, 164.952, 76.9927, 0.2746 ) }
    dend_5 { pt3dadd( 338.609, 164.927, 77.0213, 0.2746 ) }
    dend_5 { pt3dadd( 337.466, 164.903, 77.0588, 0.2746 ) }
    dend_5 { pt3dadd( 336.322, 164.879, 77.1109, 0.2746 ) }
    dend_5 { pt3dadd( 335.269, 164.434, 77.1809, 0.2746 ) }
    dend_5 { pt3dadd( 334.214, 163.99, 77.2747, 0.2746 ) }
    dend_5 { pt3dadd( 333.16, 163.545, 77.3993, 0.2748 ) }
    dend_5 { pt3dadd( 332.07, 163.279, 77.6028, 0.2748 ) }
    dend_5 { pt3dadd( 330.954, 163.14, 77.9066, 0.2752 ) }
    dend_5 { pt3dadd( 329.839, 163.003, 78.2877, 0.2756 ) }
    dend_5 { pt3dadd( 328.723, 162.864, 78.7251, 0.2766 ) }
    dend_5 { pt3dadd( 327.607, 162.727, 79.1977, 0.2784 ) }
    dend_5 { pt3dadd( 326.491, 162.589, 79.6852, 0.2818 ) }
    dend_5 { pt3dadd( 325.375, 162.451, 80.169, 0.288 ) }
    dend_5 { pt3dadd( 324.26, 162.313, 80.6397, 0.2994 ) }
    dend_5 { pt3dadd( 323.143, 162.176, 81.0984, 0.3204 ) }
    dend_5 { pt3dadd( 322.025, 162.022, 81.5346, 0.3612 ) }
    dend_5 { pt3dadd( 320.898, 161.826, 81.9017, 0.4268 ) }
    dend_5 { pt3dadd( 319.771, 161.629, 82.2248, 0.5968 ) }
    dend_5 { pt3dadd( 318.644, 161.432, 82.5233, 0.6784 ) }
    dend_5 { pt3dadd( 317.92, 161.336, 82.9553, 0.5914 ) }
    dend_5 { pt3dadd( 317.918, 161.418, 83.7413, 0.67 ) }
    dend_5 { pt3dadd( 317.579, 161.418, 84.359, 0.5672 ) }
    dend_5 { pt3dadd( 316.435, 161.418, 84.8277, 0.439 ) }
    dend_5 { pt3dadd( 315.29, 161.418, 85.1586, 0.3558 ) }
    dend_5 { pt3dadd( 314.147, 161.418, 85.3639, 0.3674 ) }
    dend_5 { pt3dadd( 313.027, 161.26, 85.458, 0.4986 ) }
    dend_5 { pt3dadd( 311.936, 160.961, 85.4787, 0.4368 ) }
    dend_5 { pt3dadd( 310.792, 160.961, 85.5039, 0.432 ) }
    dend_5 { pt3dadd( 309.657, 160.961, 85.573, 0.3482 ) }
    dend_5 { pt3dadd( 308.513, 160.961, 85.6344, 0.326 ) }
    dend_5 { pt3dadd( 307.368, 160.961, 85.6898, 0.3248 ) }
    dend_5 { pt3dadd( 306.225, 160.961, 85.7399, 0.3574 ) }
    dend_5 { pt3dadd( 305.081, 160.961, 85.7858, 0.4792 ) }
    dend_5 { pt3dadd( 303.938, 160.961, 85.8304, 0.4056 ) }
    dend_5 { pt3dadd( 302.816, 160.961, 85.934, 0.3496 ) }
    dend_5 { pt3dadd( 301.676, 160.961, 86.0266, 0.3142 ) }
    dend_5 { pt3dadd( 300.532, 160.961, 86.093, 0.3736 ) }
    dend_5 { pt3dadd( 299.388, 160.961, 86.1339, 0.3342 ) }
    dend_5 { pt3dadd( 298.243, 160.961, 86.1493, 0.3006 ) }
    dend_5 { pt3dadd( 297.1, 160.961, 86.1384, 0.2756 ) }
    dend_5 { pt3dadd( 295.961, 160.905, 86.0989, 0.2766 ) }
    dend_5 { pt3dadd( 294.821, 160.846, 86.0418, 0.2784 ) }
    dend_5 { pt3dadd( 293.677, 160.846, 85.9687, 0.2816 ) }
    dend_5 { pt3dadd( 292.533, 160.846, 85.8813, 0.2874 ) }
    dend_5 { pt3dadd( 291.424, 160.846, 85.6898, 0.2994 ) }
    dend_5 { pt3dadd( 290.336, 160.846, 85.4134, 0.3154 ) }
    dend_5 { pt3dadd( 289.191, 160.846, 85.1962, 0.3758 ) }
    dend_5 { pt3dadd( 288.048, 160.846, 85.0352, 0.3382 ) }
    dend_5 { pt3dadd( 286.904, 160.846, 84.926, 0.3078 ) }
    dend_5 { pt3dadd( 285.76, 160.846, 84.8644, 0.289 ) }
    dend_5 { pt3dadd( 284.616, 160.846, 84.8448, 0.3024 ) }
    dend_5 { pt3dadd( 283.486, 160.713, 84.8467, 0.321 ) }
    dend_5 { pt3dadd( 282.486, 160.173, 84.8492, 0.386 ) }
    dend_5 { pt3dadd( 281.362, 159.967, 84.8529, 0.3582 ) }
    dend_5 { pt3dadd( 280.22, 159.931, 84.8582, 0.34 ) }
    dend_5 { pt3dadd( 279.297, 159.5, 84.8655, 0.3742 ) }
    dend_5 { pt3dadd( 278.182, 159.315, 84.8756, 0.3354 ) }
    dend_5 { pt3dadd( 277.044, 159.245, 84.8898, 0.3028 ) }
    dend_5 { pt3dadd( 275.911, 159.092, 84.9089, 0.2796 ) }
    dend_5 { pt3dadd( 274.776, 159.016, 84.9374, 0.284 ) }
    dend_5 { pt3dadd( 273.723, 158.817, 84.978, 0.2922 ) }
    dend_5 { pt3dadd( 272.661, 158.558, 85.0318, 0.3068 ) }
    dend_5 { pt3dadd( 271.518, 158.558, 85.0982, 0.3366 ) }
    dend_5 { pt3dadd( 270.379, 158.558, 85.1841, 0.3786 ) }
    dend_5 { pt3dadd( 269.323, 158.516, 85.4255, 0.5206 ) }
    dend_5 { pt3dadd( 268.245, 158.134, 85.6159, 0.4724 ) }
    dend_5 { pt3dadd( 267.109, 158.101, 85.7685, 0.5232 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( 265.971, 158.101, 85.8906, 0.3932 ) }
    dend_5 { pt3dadd( 264.839, 158.03, 85.9463, 0.3256 ) }
    dend_5 { pt3dadd( 263.715, 157.873, 85.9354, 0.2748 ) }
    dend_5 { pt3dadd( 262.571, 157.872, 85.8508, 0.2752 ) }
    dend_5 { pt3dadd( 261.435, 157.763, 85.7044, 0.2758 ) }
    dend_5 { pt3dadd( 260.302, 157.737, 85.5235, 0.2768 ) }
    dend_5 { pt3dadd( 259.174, 157.562, 85.2513, 0.2786 ) }
    dend_5 { pt3dadd( 258.056, 157.414, 84.8753, 0.282 ) }
    dend_5 { pt3dadd( 257.466, 157.414, 84.1061, 0.288 ) }
    dend_5 { pt3dadd( 256.877, 157.191, 83.0416, 0.3008 ) }
    dend_5 { pt3dadd( 256.023, 157.186, 81.9689, 0.3178 ) }
    dend_5 { pt3dadd( 254.912, 156.982, 81.0645, 0.3802 ) }
    dend_5 { pt3dadd( 253.838, 156.842, 80.1996, 0.3464 ) }
    dend_5 { pt3dadd( 252.743, 156.776, 79.396, 0.3242 ) }
    dend_5 { pt3dadd( 251.657, 156.443, 78.7671, 0.3142 ) }
    dend_5 { pt3dadd( 250.626, 156.266, 78.129, 0.3736 ) }
    dend_5 { pt3dadd( 249.853, 155.641, 77.4578, 0.334 ) }
    dend_5 { pt3dadd( 249.151, 155.584, 76.5951, 0.3002 ) }
    dend_5 { pt3dadd( 248.122, 155.533, 75.7753, 0.275 ) }
    dend_5 { pt3dadd( 246.982, 155.47, 75.1422, 0.2754 ) }
    dend_5 { pt3dadd( 245.849, 155.47, 74.6074, 0.2762 ) }
    dend_5 { pt3dadd( 244.787, 155.47, 74.1056, 0.2778 ) }
    dend_5 { pt3dadd( 243.659, 155.346, 73.7428, 0.2806 ) }
    dend_5 { pt3dadd( 242.674, 154.783, 73.5244, 0.2852 ) }
    dend_5 { pt3dadd( 241.535, 154.783, 73.3992, 0.2966 ) }
    dend_5 { pt3dadd( 240.391, 154.783, 73.3046, 0.305 ) }
    dend_5 { pt3dadd( 239.312, 154.898, 73.1357, 0.3814 ) }
    dend_5 { pt3dadd( 238.181, 154.898, 72.8, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 28/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 422.276, 183.016, 49.4514, 0.718 ) }
    dend_2 { pt3dadd( 421.333, 182.166, 47.1615, 0.6864 ) }
    dend_2 { pt3dadd( 420.579, 181.404, 47.773, 0.671 ) }
    dend_2 { pt3dadd( 419.76, 180.666, 48.0374, 0.6438 ) }
    dend_2 { pt3dadd( 418.905, 179.908, 48.2479, 0.6756 ) }
    dend_2 { pt3dadd( 418.101, 179.096, 48.403, 0.7934 ) }
    dend_2 { pt3dadd( 417.321, 178.26, 48.5013, 0.9544 ) }
    dend_2 { pt3dadd( 416.415, 177.612, 48.4991, 0.846 ) }
    dend_2 { pt3dadd( 415.436, 177.055, 48.4162, 0.7886 ) }
    dend_2 { pt3dadd( 414.531, 176.409, 48.419, 0.9006 ) }
    dend_2 { pt3dadd( 413.659, 175.698, 48.5198, 0.9646 ) }
    dend_2 { pt3dadd( 412.648, 175.206, 48.6405, 1.093 ) }
    dend_2 { pt3dadd( 411.564, 174.879, 48.7329, 1.0546 ) }
    dend_2 { pt3dadd( 410.561, 174.38, 48.8911, 0.9536 ) }
    dend_2 { pt3dadd( 409.629, 173.759, 49.1464, 0.91 ) }
    dend_2 { pt3dadd( 408.727, 173.101, 49.4696, 0.8182 ) }
    dend_2 { pt3dadd( 407.818, 172.459, 49.8417, 0.7014 ) }
    dend_2 { pt3dadd( 406.888, 171.833, 50.2309, 0.6842 ) }
    dend_2 { pt3dadd( 405.911, 171.249, 50.5548, 0.5986 ) }
    dend_2 { pt3dadd( 404.926, 170.67, 50.785, 0.7016 ) }
    dend_2 { pt3dadd( 403.982, 170.029, 50.9569, 0.7664 ) }
    dend_2 { pt3dadd( 403.019, 169.416, 51.0675, 0.8116 ) }
    dend_2 { pt3dadd( 402.021, 168.86, 51.1129, 0.8014 ) }
    dend_2 { pt3dadd( 400.962, 168.44, 51.1244, 0.7812 ) }
    dend_2 { pt3dadd( 399.857, 168.149, 51.1319, 0.7508 ) }
    dend_2 { pt3dadd( 398.759, 167.828, 51.1442, 0.661 ) }
    dend_2 { pt3dadd( 397.724, 167.437, 51.2411, 0.6552 ) }
    dend_2 { pt3dadd( 396.669, 167.295, 51.4452, 0.5512 ) }
    dend_2 { pt3dadd( 395.686, 167.278, 51.4296, 0.5822 ) }
    dend_2 { pt3dadd( 394.616, 167.003, 51.3145, 0.698 ) }
    dend_2 { pt3dadd( 393.53, 166.649, 51.196, 0.6294 ) }
    dend_2 { pt3dadd( 392.401, 166.713, 51.0846, 0.5034 ) }
    dend_2 { pt3dadd( 391.337, 167.122, 50.9807, 0.494 ) }
    dend_2 { pt3dadd( 390.206, 167.271, 50.8984, 0.5316 ) }
    dend_2 { pt3dadd( 389.062, 167.262, 50.8564, 0.5636 ) }
    dend_2 { pt3dadd( 387.919, 167.244, 50.8234, 0.5768 ) }
    dend_2 { pt3dadd( 386.785, 167.102, 50.7786, 0.5964 ) }
    dend_2 { pt3dadd( 385.717, 166.7, 50.7091, 0.656 ) }
    dend_2 { pt3dadd( 384.664, 166.266, 50.6139, 0.6544 ) }
    dend_2 { pt3dadd( 383.635, 165.793, 50.486, 0.5094 ) }
    dend_2 { pt3dadd( 382.618, 165.27, 50.3899, 0.4728 ) }
    dend_2 { pt3dadd( 381.674, 164.675, 50.4238, 0.4198 ) }
    dend_2 { pt3dadd( 380.68, 164.116, 50.4574, 0.4792 ) }
    dend_2 { pt3dadd( 379.691, 163.62, 50.4025, 0.5108 ) }
    dend_2 { pt3dadd( 378.751, 163.022, 50.4773, 0.493 ) }
    dend_2 { pt3dadd( 377.771, 162.469, 50.6257, 0.6008 ) }
    dend_2 { pt3dadd( 376.69, 162.098, 50.7419, 0.5758 ) }
    dend_2 { pt3dadd( 375.605, 161.73, 50.8262, 0.706 ) }
    dend_2 { pt3dadd( 374.523, 161.36, 50.8964, 0.776 ) }
    dend_2 { pt3dadd( 373.44, 160.992, 50.951, 0.8234 ) }
    dend_2 { pt3dadd( 372.393, 160.532, 50.9748, 0.853 ) }
    dend_2 { pt3dadd( 371.355, 160.048, 50.9883, 0.7338 ) }
    dend_2 { pt3dadd( 370.403, 159.415, 51.0149, 0.6714 ) }
    dend_2 { pt3dadd( 369.513, 158.697, 51.0493, 0.7002 ) }
    dend_2 { pt3dadd( 368.678, 157.914, 51.0689, 0.7394 ) }
    dend_2 { pt3dadd( 367.747, 157.254, 51.1, 0.652 ) }
    dend_2 { pt3dadd( 366.669, 156.939, 51.1927, 0.8088 ) }
    dend_2 { pt3dadd( 365.572, 156.624, 51.27, 0.696 ) }
    dend_2 { pt3dadd( 364.488, 156.321, 51.2389, 0.6152 ) }
    dend_2 { pt3dadd( 363.392, 156.035, 51.144, 0.529 ) }
    dend_2 { pt3dadd( 362.281, 155.776, 51.0367, 0.5184 ) }
    dend_2 { pt3dadd( 361.177, 155.475, 50.9566, 0.4602 ) }
    dend_2 { pt3dadd( 360.083, 155.148, 50.9309, 0.5392 ) }
    dend_2 { pt3dadd( 358.959, 154.95, 50.9533, 0.4646 ) }
    dend_2 { pt3dadd( 357.815, 154.931, 51.0082, 0.4842 ) }
    dend_2 { pt3dadd( 356.671, 154.907, 51.0849, 0.4416 ) }
    dend_2 { pt3dadd( 355.535, 154.775, 51.1762, 0.516 ) }
    dend_2 { pt3dadd( 354.407, 154.585, 51.2803, 0.5966 ) }
    dend_2 { pt3dadd( 353.293, 154.34, 51.4175, 0.5656 ) }
    dend_2 { pt3dadd( 352.249, 153.94, 51.6449, 0.4698 ) }
    dend_2 { pt3dadd( 351.191, 153.573, 51.931, 0.4776 ) }
    dend_2 { pt3dadd( 350.105, 153.27, 52.239, 0.5072 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 349.008, 152.962, 52.5064, 0.4888 ) }
    dend_2 { pt3dadd( 347.922, 152.65, 52.6448, 0.5806 ) }
    dend_2 { pt3dadd( 346.833, 152.308, 52.731, 0.5982 ) }
    dend_2 { pt3dadd( 345.772, 151.943, 52.862, 0.4572 ) }
    dend_2 { pt3dadd( 344.654, 151.739, 52.9981, 0.351 ) }
    dend_2 { pt3dadd( 343.51, 151.721, 53.1051, 0.3168 ) }
    dend_2 { pt3dadd( 342.37, 151.678, 53.1992, 0.3784 ) }
    dend_2 { pt3dadd( 341.254, 151.426, 53.289, 0.343 ) }
    dend_2 { pt3dadd( 340.158, 151.1, 53.37, 0.3168 ) }
    dend_2 { pt3dadd( 339.032, 150.903, 53.4486, 0.3068 ) }
    dend_2 { pt3dadd( 337.891, 150.843, 53.5436, 0.3292 ) }
    dend_2 { pt3dadd( 336.75, 150.792, 53.669, 0.4012 ) }
    dend_2 { pt3dadd( 335.624, 150.783, 53.8762, 0.3862 ) }
    dend_2 { pt3dadd( 334.507, 150.752, 54.1442, 0.3938 ) }
    dend_2 { pt3dadd( 333.41, 150.47, 54.4071, 0.4634 ) }
    dend_2 { pt3dadd( 332.397, 149.944, 54.6241, 0.5516 ) }
    dend_2 { pt3dadd( 331.434, 149.347, 54.8439, 0.457 ) }
    dend_2 { pt3dadd( 330.462, 148.767, 55.0315, 0.391 ) }
    dend_2 { pt3dadd( 329.501, 148.251, 55.043, 0.4224 ) }
    dend_2 { pt3dadd( 328.394, 148.024, 55.0928, 0.4218 ) }
    dend_2 { pt3dadd( 327.282, 147.805, 55.1869, 0.478 ) }
    dend_2 { pt3dadd( 326.143, 147.722, 55.2796, 0.5316 ) }
    dend_2 { pt3dadd( 324.999, 147.713, 55.3479, 0.4186 ) }
    dend_2 { pt3dadd( 323.855, 147.708, 55.4025, 0.3254 ) }
    dend_2 { pt3dadd( 322.711, 147.702, 55.4498, 0.2746 ) }
    dend_2 { pt3dadd( 321.572, 147.599, 55.4716, 0.2746 ) }
    dend_2 { pt3dadd( 320.448, 147.383, 55.4795, 0.2746 ) }
    dend_2 { pt3dadd( 319.326, 147.164, 55.4848, 0.2746 ) }
    dend_2 { pt3dadd( 318.203, 146.946, 55.4921, 0.2748 ) }
    dend_2 { pt3dadd( 317.061, 146.89, 55.5027, 0.275 ) }
    dend_2 { pt3dadd( 315.933, 147.082, 55.5173, 0.2754 ) }
    dend_2 { pt3dadd( 314.805, 147.275, 55.5369, 0.2762 ) }
    dend_2 { pt3dadd( 313.678, 147.469, 55.561, 0.2776 ) }
    dend_2 { pt3dadd( 312.535, 147.475, 55.6069, 0.28 ) }
    dend_2 { pt3dadd( 311.393, 147.431, 55.6707, 0.2846 ) }
    dend_2 { pt3dadd( 310.253, 147.385, 55.7413, 0.2932 ) }
    dend_2 { pt3dadd( 309.111, 147.34, 55.8065, 0.3102 ) }
    dend_2 { pt3dadd( 307.97, 147.295, 55.8508, 0.335 ) }
    dend_2 { pt3dadd( 306.829, 147.25, 55.851, 0.4132 ) }
    dend_2 { pt3dadd( 305.688, 147.204, 55.7917, 0.402 ) }
    dend_2 { pt3dadd( 304.552, 147.065, 55.6472, 0.454 ) }
    dend_2 { pt3dadd( 303.42, 146.904, 55.4184, 0.4258 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 452.29, 175.223, 45.2463, 0.4726 ) }
    dend_11 { pt3dadd( 452.835, 174.112, 44.8837, 0.386 ) }
    dend_11 { pt3dadd( 452.953, 173.401, 44.4265, 0.3502 ) }
    dend_11 { pt3dadd( 453.699, 172.908, 44.2974, 0.3648 ) }
    dend_11 { pt3dadd( 454.484, 172.56, 44.539, 0.4568 ) }
    dend_11 { pt3dadd( 455.454, 172.108, 44.9291, 0.5396 ) }
    dend_11 { pt3dadd( 456.154, 171.317, 45.36, 0.433 ) }
    dend_11 { pt3dadd( 456.79, 170.486, 45.8508, 0.3532 ) }
    dend_11 { pt3dadd( 457.678, 170.006, 46.088, 0.321 ) }
    dend_11 { pt3dadd( 458.688, 169.847, 45.9808, 0.3858 ) }
    dend_11 { pt3dadd( 459.647, 169.248, 45.7652, 0.358 ) }
    dend_11 { pt3dadd( 460.447, 168.432, 45.549, 0.3396 ) }
    dend_11 { pt3dadd( 461.169, 167.544, 45.355, 0.3734 ) }
    dend_11 { pt3dadd( 461.855, 166.63, 45.1956, 0.3338 ) }
    dend_11 { pt3dadd( 462.451, 165.654, 45.0898, 0.3 ) }
    dend_11 { pt3dadd( 463.056, 164.684, 45.0078, 0.2746 ) }
    dend_11 { pt3dadd( 463.701, 163.749, 44.8795, 0.2746 ) }
    dend_11 { pt3dadd( 464.35, 162.816, 44.7112, 0.2748 ) }
    dend_11 { pt3dadd( 465.012, 161.892, 44.5231, 0.2748 ) }
    dend_11 { pt3dadd( 465.752, 161.024, 44.354, 0.2752 ) }
    dend_11 { pt3dadd( 466.521, 160.178, 44.2238, 0.2756 ) }
    dend_11 { pt3dadd( 467.164, 159.233, 44.1272, 0.2766 ) }
    dend_11 { pt3dadd( 467.723, 158.235, 44.0563, 0.2784 ) }
    dend_11 { pt3dadd( 468.264, 157.228, 43.9984, 0.2816 ) }
    dend_11 { pt3dadd( 468.74, 156.189, 43.9373, 0.2874 ) }
    dend_11 { pt3dadd( 469.303, 155.197, 43.8466, 0.2996 ) }
    dend_11 { pt3dadd( 469.975, 154.279, 43.715, 0.3158 ) }
    dend_11 { pt3dadd( 470.646, 153.361, 43.5576, 0.3764 ) }
    dend_11 { pt3dadd( 471.32, 152.443, 43.3947, 0.3396 ) }
    dend_11 { pt3dadd( 472.004, 151.527, 43.26, 0.3104 ) }
    dend_11 { pt3dadd( 472.695, 150.615, 43.1712, 0.2938 ) }
    dend_11 { pt3dadd( 473.385, 149.702, 43.1256, 0.3112 ) }
    dend_11 { pt3dadd( 474.098, 148.809, 43.1178, 0.3384 ) }
    dend_11 { pt3dadd( 474.913, 148.007, 43.1396, 0.4132 ) }
    dend_11 { pt3dadd( 475.756, 147.235, 43.183, 0.433 ) }
    dend_11 { pt3dadd( 476.613, 146.478, 43.2474, 0.3598 ) }
    dend_11 { pt3dadd( 477.523, 145.791, 43.3532, 0.301 ) }
    dend_11 { pt3dadd( 478.447, 145.128, 43.4958, 0.2766 ) }
    dend_11 { pt3dadd( 479.371, 144.464, 43.6601, 0.2782 ) }
    dend_11 { pt3dadd( 480.271, 143.768, 43.8259, 0.2814 ) }
    dend_11 { pt3dadd( 481.058, 142.939, 43.9564, 0.287 ) }
    dend_11 { pt3dadd( 481.812, 142.08, 44.0443, 0.2988 ) }
    dend_11 { pt3dadd( 482.568, 141.221, 44.0941, 0.3142 ) }
    dend_11 { pt3dadd( 483.295, 140.34, 44.1151, 0.3734 ) }
    dend_11 { pt3dadd( 483.878, 139.359, 44.1165, 0.3338 ) }
    dend_11 { pt3dadd( 484.315, 138.302, 44.1067, 0.3 ) }
    dend_11 { pt3dadd( 484.756, 137.247, 44.0905, 0.2746 ) }
    dend_11 { pt3dadd( 485.272, 136.233, 44.0678, 0.2746 ) }
    dend_11 { pt3dadd( 485.993, 135.346, 44.037, 0.2746 ) }
    dend_11 { pt3dadd( 486.691, 134.441, 43.995, 0.2746 ) }
    dend_11 { pt3dadd( 487.265, 133.456, 43.9309, 0.2746 ) }
    dend_11 { pt3dadd( 487.696, 132.399, 43.8374, 0.2746 ) }
    dend_11 { pt3dadd( 488.128, 131.342, 43.7228, 0.2746 ) }
    dend_11 { pt3dadd( 488.559, 130.284, 43.5957, 0.2746 ) }
    dend_11 { pt3dadd( 488.99, 129.226, 43.4638, 0.2746 ) }
    dend_11 { pt3dadd( 489.422, 128.169, 43.3353, 0.2748 ) }
    dend_11 { pt3dadd( 489.891, 127.13, 43.2194, 0.2748 ) }
    dend_11 { pt3dadd( 490.504, 126.166, 43.1332, 0.2752 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_11 { pt3dadd( 491.172, 125.237, 43.0777, 0.2758 ) }
    dend_11 { pt3dadd( 491.798, 124.284, 43.0458, 0.2768 ) }
    dend_11 { pt3dadd( 492.272, 123.243, 43.0312, 0.2786 ) }
    dend_11 { pt3dadd( 492.72, 122.191, 43.0282, 0.282 ) }
    dend_11 { pt3dadd( 493.229, 121.169, 43.0318, 0.2882 ) }
    dend_11 { pt3dadd( 493.853, 120.21, 43.0388, 0.3008 ) }
    dend_11 { pt3dadd( 494.478, 119.252, 43.0483, 0.318 ) }
    dend_11 { pt3dadd( 495.103, 118.293, 43.0618, 0.3808 ) }
    dend_11 { pt3dadd( 495.725, 117.333, 43.0802, 0.3476 ) }
    dend_11 { pt3dadd( 496.346, 116.373, 43.1068, 0.3252 ) }
    dend_11 { pt3dadd( 496.951, 115.402, 43.1441, 0.3222 ) }
    dend_11 { pt3dadd( 497.487, 114.392, 43.1948, 0.3588 ) }
    dend_11 { pt3dadd( 497.978, 113.359, 43.2603, 0.4506 ) }
    dend_11 { pt3dadd( 498.48, 112.342, 43.3628, 0.5056 ) }
    dend_11 { pt3dadd( 499.014, 111.356, 43.5347, 0.4786 ) }
    dend_11 { pt3dadd( 499.534, 110.344, 43.7105, 0.5978 ) }
    dend_11 { pt3dadd( 500.07, 109.358, 43.9239, 0.4546 ) }
    dend_11 { pt3dadd( 500.572, 108.36, 44.126, 0.3548 ) }
    dend_11 { pt3dadd( 500.97, 107.312, 44.1862, 0.282 ) }
    dend_11 { pt3dadd( 501.444, 106.317, 44.1283, 0.2882 ) }
    dend_11 { pt3dadd( 502.145, 105.415, 44.0625, 0.301 ) }
    dend_11 { pt3dadd( 502.882, 104.544, 44.011, 0.3184 ) }
    dend_11 { pt3dadd( 503.62, 103.672, 43.9628, 0.3816 ) }
    dend_11 { pt3dadd( 504.355, 102.801, 43.9127, 0.3488 ) }
    dend_11 { pt3dadd( 505.089, 101.924, 43.8477, 0.3286 ) }
    dend_11 { pt3dadd( 505.698, 100.972, 43.7105, 0.3222 ) }
    dend_11 { pt3dadd( 505.784, 99.939, 43.4227, 0.3886 ) }
    dend_11 { pt3dadd( 505.163, 99.0647, 42.9657, 0.3618 ) }
    dend_11 { pt3dadd( 504.837, 98.1442, 42.3564, 0.3538 ) }
    dend_11 { pt3dadd( 504.868, 97.1136, 41.631, 0.3638 ) }
    dend_11 { pt3dadd( 504.922, 96.0835, 40.8447, 0.4912 ) }
    dend_11 { pt3dadd( 504.637, 95.0618, 40.1727, 0.4278 ) }
    dend_11 { pt3dadd( 504.112, 94.0528, 39.7046, 0.3916 ) }
    dend_11 { pt3dadd( 503.579, 93.0483, 39.3938, 0.3866 ) }
    dend_11 { pt3dadd( 503.2, 92.0364, 39.0617, 0.5352 ) }
    dend_11 { pt3dadd( 502.966, 91.0473, 38.5854, 0.5004 ) }
    dend_11 { pt3dadd( 502.65, 90.0136, 38.1304, 0.57 ) }
    dend_11 { pt3dadd( 502.257, 88.9815, 37.8008, 0.5058 ) }
    dend_11 { pt3dadd( 502.122, 88.2941, 37.2375, 0.4096 ) }
    dend_11 { pt3dadd( 502.023, 87.209, 36.6173, 0.3484 ) }
    dend_11 { pt3dadd( 501.921, 86.1052, 35.9839, 0.3536 ) }
    dend_11 { pt3dadd( 501.819, 85.0016, 35.3472, 0.4722 ) }
    dend_11 { pt3dadd( 501.717, 83.898, 34.7001, 0.3932 ) }
    dend_11 { pt3dadd( 501.615, 82.7944, 34.0659, 0.3254 ) }
    dend_11 { pt3dadd( 501.514, 81.6906, 33.4877, 0.2746 ) }
    dend_11 { pt3dadd( 501.411, 80.587, 32.9518, 0.2746 ) }
    dend_11 { pt3dadd( 501.315, 79.4804, 32.4666, 0.2746 ) }
    dend_11 { pt3dadd( 501.333, 78.3378, 32.1286, 0.2746 ) }
    dend_11 { pt3dadd( 501.357, 77.194, 31.9124, 0.2746 ) }
    dend_11 { pt3dadd( 501.381, 76.0504, 31.7895, 0.2746 ) }
    dend_11 { pt3dadd( 501.404, 74.9066, 31.7338, 0.2746 ) }
    dend_11 { pt3dadd( 501.428, 73.7628, 31.7212, 0.2746 ) }
    dend_11 { pt3dadd( 501.589, 72.6304, 31.7307, 0.2746 ) }
    dend_11 { pt3dadd( 501.798, 71.5057, 31.745, 0.2746 ) }
    dend_11 { pt3dadd( 502.008, 70.3811, 31.7652, 0.2748 ) }
    dend_11 { pt3dadd( 502.217, 69.2566, 31.7929, 0.275 ) }
    dend_11 { pt3dadd( 502.428, 68.1322, 31.8298, 0.2752 ) }
    dend_11 { pt3dadd( 502.621, 67.0047, 31.8847, 0.2758 ) }
    dend_11 { pt3dadd( 502.786, 65.874, 31.9682, 0.2768 ) }
    dend_11 { pt3dadd( 502.95, 64.7431, 32.076, 0.2788 ) }
    dend_11 { pt3dadd( 503.114, 63.6121, 32.2039, 0.2822 ) }
    dend_11 { pt3dadd( 503.278, 62.4812, 32.349, 0.2888 ) }
    dend_11 { pt3dadd( 503.441, 61.3504, 32.5091, 0.301 ) }
    dend_11 { pt3dadd( 503.605, 60.2195, 32.6833, 0.3242 ) }
    dend_11 { pt3dadd( 503.77, 59.0886, 32.872, 0.3636 ) }
    dend_11 { pt3dadd( 503.933, 57.9577, 33.077, 0.4544 ) }
    dend_11 { pt3dadd( 504.556, 57.0132, 33.3332, 0.5352 ) }
    dend_11 { pt3dadd( 505.24, 56.1105, 33.6344, 0.4254 ) }
    dend_11 { pt3dadd( 505.924, 55.2078, 33.9699, 0.338 ) }
    dend_11 { pt3dadd( 506.609, 54.3057, 34.3288, 0.2976 ) }
    dend_11 { pt3dadd( 507.294, 53.4029, 34.7018, 0.3184 ) }
    dend_11 { pt3dadd( 507.978, 52.5008, 35.079, 0.3514 ) }
    dend_11 { pt3dadd( 508.664, 51.5986, 35.4519, 0.4382 ) }
    dend_11 { pt3dadd( 509.348, 50.696, 35.8184, 0.4744 ) }
    dend_11 { pt3dadd( 510.078, 49.8278, 36.1749, 0.462 ) }
    dend_11 { pt3dadd( 510.956, 49.108, 36.512, 0.3664 ) }
    dend_11 { pt3dadd( 511.838, 48.3905, 36.8312, 0.313 ) }
    dend_11 { pt3dadd( 512.719, 47.673, 37.1339, 0.2998 ) }
    dend_11 { pt3dadd( 513.602, 46.9554, 37.42, 0.3162 ) }
    dend_11 { pt3dadd( 514.482, 46.2373, 37.6894, 0.3772 ) }
    dend_11 { pt3dadd( 515.365, 45.5198, 37.9417, 0.3408 ) }
    dend_11 { pt3dadd( 516.247, 44.8022, 38.1772, 0.3126 ) }
    dend_11 { pt3dadd( 516.882, 43.8515, 38.3527, 0.2992 ) }
    dend_11 { pt3dadd( 517.5, 42.8888, 38.479, 0.315 ) }
    dend_11 { pt3dadd( 518.091, 41.9095, 38.5703, 0.375 ) }
    dend_11 { pt3dadd( 518.293, 40.7863, 38.6616, 0.3368 ) }
    dend_11 { pt3dadd( 518.492, 39.6627, 38.7509, 0.3052 ) }
    dend_11 { pt3dadd( 518.692, 38.5388, 38.834, 0.2844 ) }
    dend_11 { pt3dadd( 518.892, 37.4152, 38.906, 0.2926 ) }
    dend_11 { pt3dadd( 519.091, 36.2916, 38.9553, 0.3092 ) }
    dend_11 { pt3dadd( 519.281, 35.1642, 38.9511, 0.3334 ) }
    dend_11 { pt3dadd( 519.406, 34.0412, 38.8212, 0.4096 ) }
    dend_11 { pt3dadd( 519.531, 32.9184, 38.6022, 0.3982 ) }
    dend_11 { pt3dadd( 519.656, 31.7956, 38.3267, 0.4322 ) }
    dend_11 { pt3dadd( 519.781, 30.6727, 38.0246, 0.4576 ) }
    dend_11 { pt3dadd( 519.906, 29.5499, 37.3548, 0.9152 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 452.29, 175.223, 45.2463, 0.4726 ) }
    dend_10 { pt3dadd( 452.078, 173.814, 45.2029, 0.6864 ) }
    dend_10 { pt3dadd( 451.708, 172.815, 44.6404, 0.5854 ) }
    dend_10 { pt3dadd( 451.269, 171.769, 44.4041, 0.6042 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 450.689, 170.808, 44.1748, 0.7096 ) }
    dend_10 { pt3dadd( 450.01, 170.029, 44.112, 0.7922 ) }
    dend_10 { pt3dadd( 449.497, 169.122, 43.99, 0.8066 ) }
    dend_10 { pt3dadd( 449.441, 168.161, 43.6562, 0.8202 ) }
    dend_10 { pt3dadd( 449.224, 167.062, 43.3913, 0.6798 ) }
    dend_10 { pt3dadd( 449.085, 165.929, 43.1421, 0.5382 ) }
    dend_10 { pt3dadd( 448.755, 164.863, 42.8386, 0.614 ) }
    dend_10 { pt3dadd( 448.174, 163.885, 42.541, 0.4844 ) }
    dend_10 { pt3dadd( 447.363, 163.376, 42.5214, 0.412 ) }
    dend_10 { pt3dadd( 446.711, 162.577, 42.4917, 0.3774 ) }
    dend_10 { pt3dadd( 446.372, 161.747, 42.2517, 0.516 ) }
    dend_10 { pt3dadd( 445.435, 161.268, 41.8936, 0.4758 ) }
    dend_10 { pt3dadd( 444.762, 160.572, 41.3862, 0.4704 ) }
    dend_10 { pt3dadd( 444.556, 159.652, 40.7263, 0.5836 ) }
    dend_10 { pt3dadd( 444.157, 158.652, 40.154, 0.6514 ) }
    dend_10 { pt3dadd( 443.323, 157.905, 39.7496, 0.553 ) }
    dend_10 { pt3dadd( 442.693, 157.166, 39.2386, 0.5424 ) }
    dend_10 { pt3dadd( 441.844, 156.44, 38.7559, 0.6048 ) }
    dend_10 { pt3dadd( 441.051, 155.654, 38.3037, 0.5508 ) }
    dend_10 { pt3dadd( 440.299, 154.804, 37.9495, 0.5874 ) }
    dend_10 { pt3dadd( 439.717, 153.866, 37.5656, 0.679 ) }
    dend_10 { pt3dadd( 439.264, 152.817, 37.2557, 0.7334 ) }
    dend_10 { pt3dadd( 438.734, 151.805, 37.0395, 0.7068 ) }
    dend_10 { pt3dadd( 438.065, 150.879, 36.8777, 0.5908 ) }
    dend_10 { pt3dadd( 437.381, 149.974, 36.7536, 0.4694 ) }
    dend_10 { pt3dadd( 436.864, 148.989, 36.5501, 0.478 ) }
    dend_10 { pt3dadd( 436.655, 147.879, 36.3132, 0.502 ) }
    dend_10 { pt3dadd( 436.534, 146.763, 36.0478, 0.508 ) }
    dend_10 { pt3dadd( 436.076, 145.725, 35.7666, 0.4772 ) }
    dend_10 { pt3dadd( 435.544, 144.721, 35.4864, 0.3944 ) }
    dend_10 { pt3dadd( 435.085, 143.678, 35.2377, 0.3658 ) }
    dend_10 { pt3dadd( 434.743, 142.587, 35.0535, 0.3934 ) }
    dend_10 { pt3dadd( 434.363, 141.517, 34.8911, 0.5108 ) }
    dend_10 { pt3dadd( 433.857, 140.519, 34.6836, 0.635 ) }
    dend_10 { pt3dadd( 433.315, 139.531, 34.5052, 0.6326 ) }
    dend_10 { pt3dadd( 432.717, 138.583, 34.4411, 0.6142 ) }
    dend_10 { pt3dadd( 432.127, 137.613, 34.3711, 0.648 ) }
    dend_10 { pt3dadd( 431.592, 136.629, 34.2261, 0.6084 ) }
    dend_10 { pt3dadd( 431.161, 135.573, 34.0766, 0.5756 ) }
    dend_10 { pt3dadd( 430.797, 134.49, 33.9486, 0.545 ) }
    dend_10 { pt3dadd( 430.444, 133.401, 33.824, 0.5712 ) }
    dend_10 { pt3dadd( 430.096, 132.312, 33.6946, 0.4448 ) }
    dend_10 { pt3dadd( 429.691, 131.253, 33.5426, 0.3746 ) }
    dend_10 { pt3dadd( 429.177, 130.258, 33.3304, 0.3628 ) }
    dend_10 { pt3dadd( 428.594, 129.287, 33.1047, 0.4532 ) }
    dend_10 { pt3dadd( 427.961, 128.335, 32.914, 0.5328 ) }
    dend_10 { pt3dadd( 427.449, 127.318, 32.7544, 0.4208 ) }
    dend_10 { pt3dadd( 427.083, 126.233, 32.6208, 0.3294 ) }
    dend_10 { pt3dadd( 426.769, 125.143, 32.4836, 0.282 ) }
    dend_10 { pt3dadd( 426.548, 124.043, 32.2963, 0.2882 ) }
    dend_10 { pt3dadd( 426.397, 122.928, 32.0942, 0.3008 ) }
    dend_10 { pt3dadd( 426.397, 121.785, 31.9396, 0.3182 ) }
    dend_10 { pt3dadd( 426.299, 120.654, 31.8296, 0.381 ) }
    dend_10 { pt3dadd( 425.824, 119.647, 31.7598, 0.3476 ) }
    dend_10 { pt3dadd( 425.237, 118.716, 31.7288, 0.3264 ) }
    dend_10 { pt3dadd( 425.074, 117.586, 31.7369, 0.3182 ) }
    dend_10 { pt3dadd( 425.025, 116.447, 31.7582, 0.381 ) }
    dend_10 { pt3dadd( 424.984, 115.322, 31.7472, 0.348 ) }
    dend_10 { pt3dadd( 424.687, 114.266, 31.7265, 0.3262 ) }
    dend_10 { pt3dadd( 424.036, 113.43, 31.8542, 0.3238 ) }
    dend_10 { pt3dadd( 423.477, 112.766, 32.258, 0.3618 ) }
    dend_10 { pt3dadd( 422.945, 111.982, 32.7933, 0.4562 ) }
    dend_10 { pt3dadd( 422.269, 111.104, 33.2052, 0.5148 ) }
    dend_10 { pt3dadd( 421.701, 110.201, 33.3388, 0.5032 ) }
    dend_10 { pt3dadd( 421.034, 109.331, 33.3726, 0.6068 ) }
    dend_10 { pt3dadd( 420.167, 108.656, 33.2564, 0.6488 ) }
    dend_10 { pt3dadd( 419.635, 107.693, 33.077, 0.5404 ) }
    dend_10 { pt3dadd( 419.165, 106.74, 32.8012, 0.5564 ) }
    dend_10 { pt3dadd( 418.717, 105.813, 32.4652, 0.4496 ) }
    dend_10 { pt3dadd( 419.005, 104.832, 32.3932, 0.455 ) }
    dend_10 { pt3dadd( 419.048, 104.419, 32.7564, 0.3928 ) }
    dend_10 { pt3dadd( 418.394, 103.927, 33.3035, 0.399 ) }
    dend_10 { pt3dadd( 417.502, 103.553, 33.4552, 0.5088 ) }
    dend_10 { pt3dadd( 416.544, 103.139, 33.4872, 0.4628 ) }
    dend_10 { pt3dadd( 416.121, 102.154, 33.3466, 0.4448 ) }
    dend_10 { pt3dadd( 415.64, 101.463, 32.795, 0.5428 ) }
    dend_10 { pt3dadd( 415.161, 100.78, 31.9589, 0.5444 ) }
    dend_10 { pt3dadd( 414.462, 100.003, 31.1861, 0.507 ) }
    dend_10 { pt3dadd( 413.627, 99.2406, 30.6009, 0.404 ) }
    dend_10 { pt3dadd( 412.808, 98.4547, 30.1361, 0.377 ) }
    dend_10 { pt3dadd( 412.023, 97.6419, 29.8631, 0.446 ) }
    dend_10 { pt3dadd( 411.324, 96.7548, 29.7198, 0.4528 ) }
    dend_10 { pt3dadd( 410.645, 95.8408, 29.5714, 0.597 ) }
    dend_10 { pt3dadd( 409.782, 95.1492, 29.472, 0.4532 ) }
    dend_10 { pt3dadd( 408.807, 94.8317, 29.2726, 0.3522 ) }
    dend_10 { pt3dadd( 408.957, 94.4826, 28.8033, 0.2768 ) }
    dend_10 { pt3dadd( 409.415, 93.9446, 28.1579, 0.2796 ) }
    dend_10 { pt3dadd( 409.308, 92.8539, 27.7258, 0.2796 ) }
    dend_10 { pt3dadd( 409.001, 92.0549, 27.7736, 0.305 ) }
    dend_10 { pt3dadd( 408.993, 91.6609, 29.4311, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 90/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 303.42, 146.904, 55.4184, 0.4258 ) }
    dend_4 { pt3dadd( 303.509, 146.9, 54.9525, 0.5212 ) }
    dend_4 { pt3dadd( 303.726, 146.89, 54.0809, 0.438 ) }
    dend_4 { pt3dadd( 303.094, 146.149, 53.3145, 0.403 ) }
    dend_4 { pt3dadd( 302.477, 145.266, 52.654, 0.4458 ) }
    dend_4 { pt3dadd( 301.926, 144.295, 52.0831, 0.4588 ) }
    dend_4 { pt3dadd( 301.691, 143.198, 51.5452, 0.577 ) }
    dend_4 { pt3dadd( 301.25, 142.189, 50.9964, 0.5688 ) }
    dend_4 { pt3dadd( 300.658, 141.82, 50.2183, 0.5114 ) }
    dend_4 { pt3dadd( 299.848, 141.291, 49.4018, 0.6112 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 299.349, 140.352, 48.6186, 0.4806 ) }
    dend_4 { pt3dadd( 298.884, 139.909, 47.663, 0.3976 ) }
    dend_4 { pt3dadd( 298.527, 138.91, 46.872, 0.3866 ) }
    dend_4 { pt3dadd( 298.022, 138.149, 46.1647, 0.3592 ) }
    dend_4 { pt3dadd( 297.9, 137.056, 45.6428, 0.3418 ) }
    dend_4 { pt3dadd( 297.264, 136.133, 45.2794, 0.3778 ) }
    dend_4 { pt3dadd( 296.885, 135.081, 45.031, 0.3418 ) }
    dend_4 { pt3dadd( 296.201, 134.277, 44.868, 0.3148 ) }
    dend_4 { pt3dadd( 295.462, 133.576, 44.7754, 0.3016 ) }
    dend_4 { pt3dadd( 295.381, 132.437, 44.6295, 0.3268 ) }
    dend_4 { pt3dadd( 294.991, 131.398, 44.3901, 0.3608 ) }
    dend_4 { pt3dadd( 294.372, 130.559, 43.9071, 0.4854 ) }
    dend_4 { pt3dadd( 293.497, 130.187, 43.2398, 0.4186 ) }
    dend_4 { pt3dadd( 293.135, 129.17, 42.4295, 0.3672 ) }
    dend_4 { pt3dadd( 292.303, 128.836, 41.419, 0.3776 ) }
    dend_4 { pt3dadd( 292.292, 128.149, 40.1629, 0.3418 ) }
    dend_4 { pt3dadd( 292.292, 127.301, 38.7946, 0.3146 ) }
    dend_4 { pt3dadd( 292.292, 126.644, 37.3542, 0.3018 ) }
    dend_4 { pt3dadd( 292.263, 126.176, 35.9276, 0.3246 ) }
    dend_4 { pt3dadd( 291.98, 125.079, 34.8368, 0.3692 ) }
    dend_4 { pt3dadd( 291.85, 123.951, 34.0309, 0.4414 ) }
    dend_4 { pt3dadd( 291.605, 123.061, 33.3502, 0.6264 ) }
    dend_4 { pt3dadd( 291.142, 122.379, 32.6542, 0.7206 ) }
    dend_4 { pt3dadd( 290.512, 121.452, 32.1278, 0.731 ) }
    dend_4 { pt3dadd( 290.346, 120.523, 31.6534, 0.6308 ) }
    dend_4 { pt3dadd( 290.346, 119.743, 31.0831, 0.569 ) }
    dend_4 { pt3dadd( 290.186, 118.684, 30.7527, 0.5376 ) }
    dend_4 { pt3dadd( 290.004, 117.893, 30.9406, 0.5338 ) }
    dend_4 { pt3dadd( 290.004, 116.868, 31.3911, 0.491 ) }
    dend_4 { pt3dadd( 290.004, 115.797, 31.9558, 0.5848 ) }
    dend_4 { pt3dadd( 290.004, 115.323, 32.8345, 0.6058 ) }
    dend_4 { pt3dadd( 290.004, 114.205, 33.626, 0.4712 ) }
    dend_4 { pt3dadd( 290.118, 113.073, 34.2289, 0.378 ) }
    dend_4 { pt3dadd( 290.017, 112.029, 34.7379, 0.3618 ) }
    dend_4 { pt3dadd( 289.331, 111.23, 35.0692, 0.487 ) }
    dend_4 { pt3dadd( 288.746, 110.414, 35.25, 0.4216 ) }
    dend_4 { pt3dadd( 287.902, 109.938, 35.3046, 0.373 ) }
    dend_4 { pt3dadd( 287.318, 109.066, 35.2699, 0.3882 ) }
    dend_4 { pt3dadd( 287.12, 107.946, 35.2108, 0.3612 ) }
    dend_4 { pt3dadd( 286.721, 106.906, 35.079, 0.3514 ) }
    dend_4 { pt3dadd( 286.03, 106.003, 34.9485, 0.3666 ) }
    dend_4 { pt3dadd( 285.542, 104.988, 34.8513, 0.4604 ) }
    dend_4 { pt3dadd( 285.518, 103.847, 34.7847, 0.5452 ) }
    dend_4 { pt3dadd( 284.531, 103.407, 34.7455, 0.4492 ) }
    dend_4 { pt3dadd( 284.055, 102.573, 34.7248, 0.356 ) }
    dend_4 { pt3dadd( 283.712, 101.587, 34.72, 0.4576 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 303.42, 146.904, 55.4184, 0.4258 ) }
    dend_3 { pt3dadd( 302.903, 146.831, 56.5984, 0.9152 ) }
    dend_3 { pt3dadd( 301.766, 146.726, 56.6916, 0.5744 ) }
    dend_3 { pt3dadd( 300.621, 146.702, 56.7283, 0.4608 ) }
    dend_3 { pt3dadd( 299.478, 146.697, 56.7804, 0.3548 ) }
    dend_3 { pt3dadd( 298.333, 146.692, 56.854, 0.338 ) }
    dend_3 { pt3dadd( 297.19, 146.672, 56.9559, 0.3482 ) }
    dend_3 { pt3dadd( 296.047, 146.631, 57.0912, 0.3954 ) }
    dend_3 { pt3dadd( 294.914, 146.519, 57.2869, 0.5754 ) }
    dend_3 { pt3dadd( 293.831, 146.256, 57.5893, 0.4604 ) }
    dend_3 { pt3dadd( 292.786, 145.913, 57.9984, 0.3654 ) }
    dend_3 { pt3dadd( 291.741, 145.569, 58.4752, 0.3024 ) }
    dend_3 { pt3dadd( 290.695, 145.223, 58.9826, 0.3212 ) }
    dend_3 { pt3dadd( 289.659, 144.796, 59.4373, 0.3862 ) }
    dend_3 { pt3dadd( 288.635, 144.286, 59.7744, 0.3586 ) }
    dend_3 { pt3dadd( 287.602, 143.795, 60.0121, 0.3406 ) }
    dend_3 { pt3dadd( 286.513, 143.533, 60.1902, 0.3756 ) }
    dend_3 { pt3dadd( 285.372, 143.49, 60.3448, 0.3378 ) }
    dend_3 { pt3dadd( 284.233, 143.446, 60.4898, 0.3072 ) }
    dend_3 { pt3dadd( 283.092, 143.404, 60.6371, 0.288 ) }
    dend_3 { pt3dadd( 281.954, 143.36, 60.786, 0.2994 ) }
    dend_3 { pt3dadd( 280.833, 143.189, 60.9143, 0.3216 ) }
    dend_3 { pt3dadd( 279.734, 142.868, 61.0025, 0.3576 ) }
    dend_3 { pt3dadd( 278.641, 142.533, 61.0546, 0.4484 ) }
    dend_3 { pt3dadd( 277.546, 142.198, 61.0798, 0.5006 ) }
    dend_3 { pt3dadd( 276.51, 141.736, 61.0789, 0.4756 ) }
    dend_3 { pt3dadd( 275.428, 141.513, 61.0635, 0.5616 ) }
    dend_3 { pt3dadd( 274.469, 141.036, 61.0467, 0.5364 ) }
    dend_3 { pt3dadd( 273.566, 140.331, 61.0313, 0.4702 ) }
    dend_3 { pt3dadd( 272.454, 140.122, 61.0168, 0.4424 ) }
    dend_3 { pt3dadd( 271.492, 139.521, 61.0042, 0.6164 ) }
    dend_3 { pt3dadd( 270.486, 138.975, 60.9946, 0.5306 ) }
    dend_3 { pt3dadd( 269.523, 138.366, 60.9543, 0.5242 ) }
    dend_3 { pt3dadd( 268.469, 137.924, 60.9196, 0.4562 ) }
    dend_3 { pt3dadd( 267.329, 137.853, 60.8989, 0.6036 ) }
    dend_3 { pt3dadd( 266.198, 137.985, 60.9291, 0.4654 ) }
    dend_3 { pt3dadd( 265.059, 138.081, 60.9602, 0.3746 ) }
    dend_3 { pt3dadd( 263.915, 138.081, 60.9885, 0.3198 ) }
    dend_3 { pt3dadd( 262.771, 138.081, 61.0142, 0.353 ) }
    dend_3 { pt3dadd( 261.627, 138.081, 61.0313, 0.4464 ) }
    dend_3 { pt3dadd( 260.483, 138.081, 61.0397, 0.466 ) }
    dend_3 { pt3dadd( 259.345, 137.966, 61.04, 0.5592 ) }
    dend_3 { pt3dadd( 258.201, 137.966, 61.04, 0.6864 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_22, dend_19, dend_14, dend_7, dend_0, dend_24, dend_23, dend_21, dend_20, dend_18, dend_15, dend_13, dend_8, dend_6, dend_1, dend_17, dend_16, dend_12, dend_9, dend_5, dend_2, dend_11, dend_10, dend_4, dend_3]}
    dend = new SectionList()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_26425, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_26425 = new SectionList()
    soma_0 OneSecGrp_SectionRef_26425.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 3.0588791  // units: uF/cm2
    forsec axon cm = 3.0588791  // units: uF/cm2
    forsec dend cm = 3.0588791  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 115.775894  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 3.6522167E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.08086678  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.8053903E-7  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.15409474  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.6130313  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.0498824  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0056491434  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.4052202E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.5563483E-5  // units: S cm-2
        e_pas_nml2 = -88.4722  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.878041E-4  // units: S cm-2
        e_pas_nml2 = -88.4722  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.7337927E-5  // units: S cm-2
        e_pas_nml2 = -88.4722  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.6384992E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 1.0266973E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_496930338
    forsec soma {
        insert CaDynamics_496930338
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_18 nseg = 5
    dend_13 nseg = 5
    dend_6 nseg = 9
    dend_12 nseg = 5
    dend_5 nseg = 11
    dend_2 nseg = 7
    dend_11 nseg = 9
    dend_10 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_496930338


