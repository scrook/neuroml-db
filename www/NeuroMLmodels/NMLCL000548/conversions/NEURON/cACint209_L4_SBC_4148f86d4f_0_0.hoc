// Cell: cACint209_L4_SBC_4148f86d4f_0_0
/*
{
  "id" : "cACint209_L4_SBC_4148f86d4f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.66444, -9.50961, -3.61439, 3.16586", "-2.42682, -8.48173, -3.22055, 5.7698", "-2.1892, -7.45386, -2.8267, 9.26827", "-1.95158, -6.42598, -2.43286, 12.0444", "-1.71397, -5.3981, -2.03902, 12.8801", "-1.47635, -4.37023, -1.64518, 12.9899", "-1.23873, -3.34235, -1.25134, 13.1046", "-1.00111, -2.31448, -0.857498, 13.2559", "-0.763494, -1.2866, -0.463657, 12.9111", "-0.525876, -0.258723, -0.0698155, 12.2466", "-0.288259, 0.769154, 0.324026, 11.582", "-0.0506407, 1.79703, 0.717867, 10.9174", "0.186977, 2.82491, 1.11171, 10.2477", "0.424595, 3.85278, 1.50555, 9.32644", "0.662213, 4.88066, 1.89939, 8.32197", "0.899831, 5.90854, 2.29323, 7.44979", "1.13745, 6.93641, 2.68707, 6.61921", "1.37507, 7.96429, 3.08091, 5.8161", "1.61268, 8.99217, 3.47476, 4.99734", "1.8503, 10.02, 3.8686, 4.17858", "2.08792, 11.0479, 4.26244, 2.54505" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.99773, 13.0582, 5.28216, 3.32", "3.60313, 16.7847, 6.10333, 3.32", "4.72038, 23.6619, 7.61879, 3.32", "5.69419, 29.6562, 8.93968, 4.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033822506413
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.82773, -8.51936, -3.64784, 1.94", "4.96066, -10.3976, -3.64784, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033822506413
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.48227, -0.108861, -5.18784, 2.22", "-10.9905, -2.17266, -3.75873, 1.94", "-15.0012, -4.53205, -2.12495, 1.94", "-15.9465, -5.08814, -1.73988, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000033822506413
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.08792, 11.0479, 4.26244, 0.55", "5.46643, 25.6625, 4.26244, 0.55", "8.84494, 40.277, 4.26244, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "5.69419, 29.6562, 8.93968, 2.49", "3.12276, 35.4178, 9.11004, 2.49" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.69419, 29.6562, 8.93968, 2.49", "6.437, 31.3894, 8.45056, 2.49", "7.59104, 33.6499, 7.84809, 1.94", "9.22816, 36.2973, 6.73238, 1.94", "11.3271, 39.2973, 5.2735, 1.94", "14.0939, 43.252, 3.35034, 1.94", "16.2193, 46.2899, 1.873, 1.39", "18.1015, 48.9074, 0.423184, 1.39", "21.9373, 53.6857, -2.78084, 1.94", "23.1229, 54.8666, -3.80828, 2.77" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.96066, -10.3976, -3.64784, 0.83", "2.61704, -8.17668, -6.8155, 0.83", "2.02623, -7.40838, -9.58289, 0.83", "2.23717, -7.18485, -12.299, 0.83", "3.29925, -7.19194, -18.0284, 0.83", "3.89318, -7.21684, -21.1282, 1.66", "6.68159, -7.0165, -35.1494, 0.83", "6.99259, -6.76322, -37.2421, 0.55", "7.31694, -6.19557, -40.0957, 0.55", "7.46821, -5.52445, -42.4139, 1.39", "7.86965, -2.50154, -50.8012, 0.55", "7.96923, -2.03163, -51.8828, 1.39", "8.41004, -0.693571, -54.4091, 0.83", "8.69402, 0.513523, -56.8265, 0.83", "8.90375, 1.6912, -58.952, 0.28", "8.97027, 2.15721, -59.7382, 0.28", "9.15231, 3.3696, -61.4705, 1.11", "9.52279, 6.09609, -66.2733, 0.28", "9.62212, 6.89585, -68.2517, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.96066, -10.3976, -3.64784, 0.83", "7.2549, -12.1928, -1.26146, 0.83", "8.04397, -12.8102, -0.440708, 0.83", "8.60182, -13.2467, 0.139553, 0.83", "12.6729, -16.4321, 4.37414, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.9465, -5.08814, -1.73988, 1.39", "-17.9419, -5.49675, -1.54186, 1.39", "-17.2735, -6.54764, -3.51691, 1.39", "-16.3388, -7.58164, -6.2683, 1.11", "-15.3981, -8.15221, -9.72854, 1.11", "-15.1555, -8.15099, -11.1037, 1.11", "-14.5217, -8.1478, -14.6971, 1.11", "-14.0491, -8.12238, -17.0302, 1.39", "-13.6068, -8.09983, -18.8636, 1.11", "-12.8789, -8.01038, -21.4791, 1.11", "-10.5885, -7.05053, -28.5025, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.9465, -5.08814, -1.73988, 0.83", "-17.5785, -3.81265, -1.24406, 0.83", "-19.6472, -2.53769, -1.0385, 1.11", "-21.3007, -1.57735, -1.07819, 0.83", "-22.5224, -0.875261, -1.19234, 1.39", "-25.0357, 0.620473, -1.54391, 0.83", "-28.5887, 2.76065, -2.40523, 1.11", "-32.2256, 4.81226, -3.63199, 0.83", "-33.7853, 5.66888, -4.26364, 1.11", "-34.9398, 6.29035, -4.79597, 1.11", "-37.0119, 7.394, -5.8993, 1.11", "-40.0472, 9.00207, -7.78557, 1.11", "-43.9885, 11.4829, -10.2838, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.84494, 40.277, 4.26244, 0.55", "12.2234, 54.8916, 4.26244, 0.55", "15.602, 69.5062, 4.26244, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "3.12276, 35.4178, 9.11004, 1.66", "1.86037, 38.7837, 9.80125, 1.66", "1.36022, 40.1173, 10.0751, 0.83", "0.124995, 43.4107, 10.7515, 1.11", "-1.05419, 46.5548, 11.3971, 0.83", "-2.52832, 50.4852, 12.2043, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "3.12276, 35.4178, 9.11004, 1.39", "0.101596, 37.7888, 6.81966, 1.39", "-3.34996, 40.4427, 3.59805, 1.39", "-6.14988, 42.5016, 0.824433, 0.83", "-8.42276, 44.0066, -1.47343, 0.83", "-11.5704, 45.7175, -4.655, 0.83", "-17.7745, 48.4706, -10.7068, 0.83", "-18.304, 48.6226, -11.3031, 1.11", "-18.9634, 48.7047, -12.1, 0.83", "-20.6638, 48.6851, -14.0802, 0.83", "-23.0879, 48.3436, -16.6226, 0.83", "-24.8957, 47.9994, -17.6284, 0.83", "-26.0444, 47.7605, -17.7972, 1.11", "-27.7182, 47.7605, -17.9825, 0.83", "-28.8375, 48.0439, -18.2799, 0.83", "-29.5343, 48.3748, -18.5486, 0.83", "-30.9823, 49.2988, -19.4559, 0.83", "-32.5484, 50.2738, -20.6574, 0.83", "-34.2118, 51.1893, -22.0129, 0.83", "-38.3229, 53.0324, -25.0102, 0.55", "-38.8397, 53.2354, -25.3432, 0.55", "-42.3344, 54.7028, -27.7365, 0.83", "-43.5257, 55.2537, -28.5686, 1.11", "-46.7064, 56.6968, -30.6656, 0.55", "-49.5568, 57.7854, -32.5636, 0.55", "-51.0236, 58.2974, -33.3784, 0.55", "-55.0696, 59.7998, -36.073, 1.11", "-56.397, 60.3661, -37.0646, 0.55", "-57.5903, 60.9759, -38.0849, 0.55", "-61.8779, 63.4522, -42.1806, 1.11", "-63.7839, 64.6039, -44.1645, 0.83", "-66.9926, 66.4449, -47.8474, 0.55", "-67.9793, 66.9501, -49.0482, 1.39", "-68.9159, 67.4108, -50.3675, 0.55", "-69.2252, 67.5329, -50.9139, 0.83", "-69.6747, 67.6253, -51.9681, 0.83", "-71.7396, 67.8427, -57.7385, 0.83", "-72.3862, 67.8948, -59.5518, 0.55", "-72.8763, 67.9444, -60.9024, 0.83", "-74.5042, 68.2237, -65.2025, 0.28", "-76.2323, 68.8712, -70.0944, 1.39", "-77.6783, 69.6554, -73.8953, 0.55", "-78.2113, 69.9624, -75.1201, 0.55", "-78.8127, 70.3335, -76.3735, 0.28", "-79.4023, 70.759, -77.5566, 1.39", "-83.1852, 73.5551, -83.6425, 0.28", "-85.0547, 74.833, -86.1321, 0.83", "-86.713, 75.9729, -88.1394, 0.28", "-88.4745, 77.3761, -90.7292, 1.11", "-89.3314, 78.0781, -92.0299, 0.28", "-90.5157, 79.1255, -93.7547, 0.55", "-90.9272, 79.5381, -94.3387, 0.55", "-91.4174, 80.1244, -95.2627, 1.39", "-93.6397, 83.3399, -100.093, 0.55", "-94.3279, 84.4055, -101.758, 0.55", "-94.8146, 85.1759, -103.075, 0.28", "-95.5877, 86.5359, -105.519, 1.11", "-96.7411, 88.444, -109.118, 0.28", "-96.865, 88.6277, -109.47, 0.28", "-97.1539, 89.0487, -110.11, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "23.1229, 54.8666, -3.80828, 1.94", "24.8446, 55.1814, -3.53254, 1.94", "27.4776, 55.6629, -3.11085, 1.94" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "23.1229, 54.8666, -3.80828, 1.11", "22.6879, 57.079, -5.04784, 1.11", "22.208, 59.2342, -6.16071, 0.83", "21.1168, 64.0544, -9.13733, 1.11", "20.5114, 66.7281, -10.7884, 1.11", "19.2873, 72.1351, -14.1274, 1.39", "18.8283, 74.1627, -15.3795, 1.39", "18.3069, 76.034, -16.6312, 1.11", "16.6767, 80.8744, -20.3761, 1.94" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "9.62212, 6.89585, -68.2517, 0.28", "10.298, 7.21918, -70.1919, 0.28", "10.6363, 7.36604, -71.1885, 0.83", "10.8016, 7.41825, -71.6689, 0.83", "12.0819, 7.73816, -75.0696, 0.28", "12.3614, 7.78376, -75.7384, 0.83", "14.4467, 7.96743, -80.4467, 0.28", "15.3495, 7.96634, -82.4726, 1.11", "16.3656, 7.94391, -84.6244, 0.28", "16.8522, 7.92459, -85.5781, 0.83", "18.3708, 7.82521, -88.0665, 0.28", "19.6076, 7.66846, -90.0501, 0.83", "20.3211, 7.56922, -91.1024, 0.28", "20.7345, 7.52332, -91.794, 0.55", "22.0475, 7.45912, -94.053, 0.28", "22.7644, 7.46428, -95.337, 1.11", "25.4625, 7.66578, -100.224, 0.28", "26.5415, 7.81335, -102.117, 1.11", "28.5684, 8.14663, -105.606, 0.28", "29.4789, 8.31632, -107.208, 0.55", "29.7691, 8.38254, -107.703, 0.28", "30.093, 8.48165, -108.278, 0.55", "30.9451, 8.90504, -109.149, 0.28", "31.3346, 9.10276, -109.418, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "9.62212, 6.89585, -68.2517, 0.28", "9.22166, 7.01858, -68.7664, 0.28", "8.5354, 7.23114, -69.5256, 1.39", "7.50051, 7.54719, -70.5407, 0.55", "1.90612, 9.19768, -75.2671, 1.94", "-0.960749, 9.99988, -77.3679, 0.28", "-2.06407, 10.3313, -78.0681, 0.83", "-4.28837, 11.0855, -79.2893, 0.55", "-5.37705, 11.518, -79.7743, 0.83", "-7.39298, 12.4948, -80.3822, 0.28", "-8.85229, 13.3654, -80.5321, 0.83", "-11.0287, 14.9906, -80.8232, 0.28", "-12.4487, 16.2484, -81.1485, 0.55", "-13.3995, 17.288, -81.4612, 0.55", "-14.2004, 18.2842, -81.7855, 0.28", "-15.8221, 20.4154, -82.8188, 1.39", "-17.0545, 21.8698, -83.704, 0.55", "-18.0177, 22.8581, -84.4135, 0.55", "-18.9114, 23.6352, -85.0905, 0.28", "-19.8091, 24.365, -85.7684, 1.39", "-23.2163, 26.8394, -88.1829, 0.28", "-24.7981, 27.8881, -89.2162, 0.28", "-25.936, 28.5641, -89.9702, 0.28", "-28.916, 30.2987, -92.2207, 1.94" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.6729, -16.4321, 4.37414, 0.83", "14.7278, -15.5986, 1.94952, 0.83", "19.2147, -13.9934, -3.34812, 0.28", "20.7855, -13.6635, -5.52968, 0.83", "23.9023, -13.5219, -10.5781, 0.28", "24.2709, -13.5165, -11.1872, 0.28", "24.7824, -13.5333, -12.0283, 0.55", "25.5698, -13.6154, -13.4131, 0.55", "27.8122, -15.0857, -18.2847, 0.28", "28.3914, -16.0681, -20.9235, 0.28", "28.6669, -17.1023, -22.9776, 0.28", "28.8535, -17.5621, -24.0066, 1.11", "29.1358, -17.9966, -25.1587, 1.11", "29.7858, -18.4825, -26.7447, 0.55", "32.5912, -19.5476, -31.8492, 0.28", "33.8305, -19.7995, -34.0996, 0.83", "35.7805, -20.0526, -37.4802, 0.28", "36.7508, -20.0576, -39.0632, 0.83", "39.2979, -19.8089, -42.8325, 1.39", "42.9078, -18.9652, -47.8255, 1.39", "45.3179, -18.1325, -51.0926, 0.55", "46.2231, -17.7561, -52.3564, 0.55", "48.1496, -16.8822, -55.05, 0.28", "49.1023, -16.4164, -56.372, 1.39", "52.929, -14.398, -61.6045, 0.28", "56.3678, -12.6439, -65.9155, 0.28", "57.5669, -12.1265, -67.3241, 1.11", "60.3375, -11.0369, -70.6757, 0.28", "60.5268, -10.9857, -70.9173, 0.83", "62.0582, -10.7444, -72.9016, 0.28", "62.7469, -10.687, -73.8013, 0.83", "64.8043, -10.5736, -76.5434, 0.28", "68.0025, -10.4292, -80.9499, 1.94", "74.6391, -10.3311, -90.2513, 1.39", "77.68, -10.3386, -94.5746, 0.28", "79.8832, -10.3707, -97.729, 0.83", "82.5594, -10.4421, -101.505, 0.83", "85.3552, -10.5573, -105.212, 0.28", "87.3115, -10.7398, -107.511, 0.28", "87.5305, -10.767, -107.73, 0.55", "90.5542, -11.2122, -110.497, 0.55", "93.1897, -11.6224, -112.63, 0.28", "96.097, -12.0757, -114.749, 1.11", "103.882, -13.392, -119.956, 0.28", "105.218, -13.6052, -120.811, 0.83", "107.91, -14.047, -122.561, 0.83", "108.974, -14.2389, -123.266, 0.28", "109.322, -14.294, -123.53, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.6729, -16.4321, 4.37414, 0.28", "13.4306, -14.7617, 4.39402, 0.28", "13.4695, -14.5615, 4.54931, 0.55", "13.6151, -13.8464, 5.35512, 0.28", "13.7186, -13.4022, 6.14814, 0.55", "13.9825, -12.4535, 8.07508, 0.28", "14.16, -11.7071, 9.72647, 0.83", "14.5009, -9.70772, 14.7009, 0.55", "14.5621, -9.36802, 15.6807, 0.55", "14.7212, -8.44816, 18.9328, 0.28", "14.7476, -8.33258, 19.4871, 0.83", "14.8459, -7.93599, 21.9818, 0.28", "14.8945, -7.84477, 22.6771, 0.83", "15.1175, -7.41123, 25.2599, 0.28", "15.1987, -7.09802, 27.0265, 0.28", "15.26, -6.7899, 28.7602, 0.55", "15.2745, -3.04512, 37.067, 0.55", "14.0238, 0.547352, 45.3359, 0.55", "12.1185, 3.02784, 53.8317, 0.55", "11.2635, 6.52272, 62.1886, 0.55", "11.1343, 9.98784, 70.6004, 0.55", "9.42774, 14.6163, 78.309, 0.55", "9.52815, 20.7201, 85.2486, 0.55", "9.11945, 26.2557, 92.5945, 0.55", "10.6334, 30.8681, 100.359, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.5885, -7.05053, -28.5025, 1.11", "-12.2111, -5.81988, -30.8984, 1.11", "-14.1753, -4.09768, -33.8533, 0.83", "-15.536, -3.07276, -35.5761, 0.83", "-18.1645, -1.3776, -38.3116, 0.83", "-19.1961, -0.722021, -39.2648, 0.83", "-21.5977, 0.798695, -41.3134, 0.83", "-22.5632, 1.40012, -42.0031, 0.28", "-24.8514, 2.96199, -43.3259, 1.39", "-26.5721, 4.09136, -44.1995, 0.55", "-27.638, 4.71284, -44.7048, 0.28", "-30.2678, 6.15767, -46.2449, 1.66", "-32.3062, 7.21363, -47.581, 0.55", "-33.9479, 8.0921, -48.7844, 0.55", "-36.2778, 9.36989, -50.6843, 0.28", "-39.5999, 11.2146, -53.5161, 1.94", "-42.773, 13.0147, -56.504, 0.28", "-43.4338, 13.4247, -57.154, 0.28", "-44.2241, 13.9489, -57.9697, 0.55", "-45.0154, 14.5058, -58.7638, 0.83", "-46.7771, 15.7904, -60.2296, 0.55", "-50.5388, 18.705, -62.905, 1.94", "-52.0587, 19.9913, -63.8288, 0.55", "-52.5853, 20.4706, -64.1637, 0.55", "-53.4533, 21.2909, -64.7586, 0.28", "-54.6333, 22.3756, -65.5623, 2.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.5885, -7.05053, -28.5025, 0.55", "-11.0886, -7.52474, -33.7194, 0.55", "-11.3525, -7.70322, -35.5652, 0.28", "-11.8211, -7.98637, -38.3172, 0.83", "-12.3344, -8.17098, -40.7902, 0.83", "-14.8793, -8.65336, -50.4874, 1.39", "-15.1574, -8.68389, -51.3536, 1.39", "-16.0916, -8.61753, -53.1713, 0.28", "-16.2618, -8.58803, -53.4287, 1.39", "-17.5493, -8.2659, -54.8272, 0.28", "-18.9645, -7.97677, -55.8743, 1.11", "-21.9408, -7.4356, -56.9127, 1.66", "-24.2043, -7.02913, -57.9551, 0.28", "-25.9346, -6.71646, -58.8699, 2.22", "-28.6205, -6.226, -60.6777, 1.39", "-30.2605, -5.90386, -62.0779, 0.28", "-30.4145, -5.86511, -62.2294, 1.11", "-32.6515, -5.1869, -64.6007, 0.28", "-32.9279, -5.08192, -64.9284, 0.28", "-34.3382, -4.50864, -66.768, 1.39", "-35.4042, -4.07425, -68.1177, 0.28", "-36.3399, -3.69507, -69.2704, 0.83", "-37.2084, -3.37564, -70.2461, 0.55", "-41.2947, -2.22988, -74.3663, 2.22", "-43.3274, -1.83237, -76.2492, 0.55", "-44.1027, -1.75901, -76.8588, 0.28", "-45.2471, -1.71903, -77.6665, 0.83", "-46.4345, -1.72077, -78.4262, 0.28", "-47.9602, -1.84691, -79.3345, 0.28", "-48.9559, -2.02694, -79.7743, 0.28", "-50.5575, -2.39728, -80.564, 1.94", "-53.2217, -2.99876, -82.3428, 0.55", "-53.9794, -3.18804, -82.9484, 0.55", "-56.2448, -3.77701, -85.1119, 0.55", "-56.7875, -3.89402, -85.6844, 1.66", "-57.384, -4.00915, -86.3528, 1.66", "-59.1492, -4.19553, -88.3205, 0.55", "-60.3003, -4.19718, -89.418, 0.55", "-61.8829, -4.03539, -90.8304, 0.28", "-62.5126, -3.91151, -91.3094, 0.28", "-63.6415, -3.62949, -92.1189, 0.28", "-64.9204, -3.24901, -93.0912, 1.66", "-65.5484, -3.05741, -93.5521, 1.66", "-68.4291, -2.25696, -95.6743, 0.28", "-69.0795, -2.15107, -96.2206, 1.66", "-70.3928, -2.09088, -97.4691, 1.66", "-72.6478, -2.13486, -99.9608, 0.28", "-73.4852, -2.13083, -100.94, 0.28", "-74.2205, -2.12619, -101.88, 0.83", "-76.4389, -2.14343, -104.69, 0.28", "-76.8424, -2.15391, -105.212, 0.55", "-77.9361, -2.10057, -106.679, 0.28", "-79.1851, -1.86573, -108.351, 1.11", "-81.1934, -1.15905, -111.057, 0.28", "-82.0056, -0.742711, -112.119, 0.28", "-83.6176, 0.192087, -114.007, 1.39", "-85.3626, 1.1684, -116.054, 0.28", "-86.064, 1.44928, -116.958, 0.83", "-86.7325, 1.66516, -117.916, 0.83", "-88.0749, 2.1077, -119.826, 0.28", "-88.603, 2.24075, -120.589, 0.28", "-89.9287, 2.35738, -122.501, 2.22", "-92.8042, 2.3684, -127.061, 0.28", "-93.5585, 2.37156, -128.275, 0.83", "-94.2312, 2.39637, -129.377, 0.55", "-94.5434, 2.43413, -129.911, 0.55", "-96.0373, 2.74682, -132.463, 1.66", "-99.0635, 3.54815, -137.626, 0.28", "-99.8625, 3.8156, -138.938, 0.83", "-100.465, 3.99536, -139.969, 0.83", "-101.756, 4.44583, -142.325, 0.28", "-102.417, 4.72799, -143.551, 0.83", "-104.166, 5.55182, -146.738, 0.55", "-104.396, 5.6502, -147.161, 0.55", "-105.625, 6.16842, -149.66, 1.39", "-107.568, 6.98547, -153.808, 0.28", "-107.774, 7.08394, -154.243, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-43.9885, 11.4829, -10.2838, 0.83", "-44.9991, 12.2778, -8.47481, 0.83", "-45.9681, 13.0643, -6.84885, 0.83", "-50.1898, 16.4454, -0.425623, 0.83", "-51.3201, 17.2929, 1.13385, 0.83", "-54.1391, 19.3262, 4.60543, 0.83", "-55.4074, 20.2407, 6.03283, 0.55", "-56.8277, 21.2046, 7.33491, 0.55", "-58.1515, 22.0221, 8.16506, 0.55", "-59.3308, 22.6761, 8.79953, 0.55", "-61.7017, 24.0604, 10.0157, 0.83", "-64.7857, 26.0189, 11.5452, 0.55", "-67.5054, 27.6868, 13.0632, 0.55", "-69.5783, 28.8562, 14.3017, 0.55", "-75.2059, 32.1877, 18.1237, 0.55", "-81.6952, 38.5004, 27.0967, 0.55", "-86.1057, 44.2575, 37.549, 0.55", "-88.6818, 50.7563, 48.216, 0.55", "-88.8387, 59.7531, 57.448, 0.55", "-88.3465, 68.2107, 67.1205, 0.55", "-88.8612, 78.0378, 75.5354, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-43.9885, 11.4829, -10.2838, 0.83", "-43.091, 16.4834, -12.9322, 0.83", "-42.7753, 18.5253, -14.1377, 0.83", "-42.5422, 20.0741, -15.3451, 0.83", "-42.3504, 21.6541, -16.706, 0.83", "-42.0009, 25.5104, -20.141, 0.83", "-41.9575, 26.1959, -20.7595, 1.11", "-42.0249, 27.9949, -22.8034, 1.11", "-42.4251, 30.6906, -25.9084, 0.28", "-42.5701, 31.3594, -26.6308, 0.83", "-42.7519, 32.0969, -27.3384, 0.28", "-42.859, 32.5467, -27.6266, 0.83", "-43.2351, 33.8549, -28.415, 0.55", "-44.3351, 37.1469, -29.9086, 0.83", "-45.2165, 39.6403, -30.7203, 0.83", "-46.0507, 42.001, -31.3399, 0.83", "-47.6358, 46.5766, -32.542, 0.83", "-48.7541, 49.9702, -33.2827, 0.28", "-50.2742, 54.5648, -34.7299, 1.66", "-51.2469, 57.2916, -35.7822, 1.94", "-51.9547, 59.1275, -36.6531, 0.83", "-52.9891, 61.8048, -38.2857, 0.55", "-54.0723, 64.4678, -40.3866, 1.39", "-56.5309, 70.1596, -45.0338, 1.39", "-56.8677, 70.8612, -45.6371, 0.55", "-57.5944, 72.3386, -46.7197, 0.55", "-58.174, 73.4551, -47.4152, 1.66", "-59.219, 75.3152, -48.3089, 1.66", "-60.0134, 76.6674, -48.8046, 0.55", "-61.0278, 78.5369, -48.8955, 0.55", "-62.388, 81.1893, -49.0067, 0.55", "-63.4547, 83.2843, -49.0532, 1.39" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-2.52832, 50.4852, 12.2043, 0.83", "-3.25347, 51.8285, 12.1413, 0.83", "-4.19591, 53.3494, 12.1464, 1.11", "-4.83947, 54.3074, 12.1566, 1.11", "-5.9307, 55.7083, 12.0421, 0.83", "-6.67065, 56.5664, 11.914, 1.11", "-7.79755, 57.8048, 11.6786, 0.83", "-8.60636, 58.6329, 11.5096, 1.11", "-9.63523, 59.6406, 11.2919, 0.83", "-11.143, 61.1195, 10.8671, 0.83", "-12.1778, 62.0997, 10.4852, 1.11", "-12.6935, 62.6177, 10.2779, 0.55", "-13.2138, 63.2443, 10.018, 1.11", "-13.7064, 63.9135, 9.78115, 0.83", "-14.1207, 64.4813, 9.60186, 0.83", "-15.1403, 65.9838, 9.21599, 0.83", "-16.1451, 67.5064, 8.8299, 0.83", "-17.0699, 68.857, 8.48222, 0.83", "-17.7735, 69.83, 8.22466, 0.83", "-18.5872, 70.972, 7.93187, 0.83", "-19.2306, 71.8904, 7.66634, 0.83", "-19.4865, 72.242, 7.54985, 1.11", "-20.6964, 73.822, 6.9661, 1.11", "-21.1964, 74.5232, 6.71084, 0.83", "-21.6035, 75.1764, 6.46342, 0.28", "-22.241, 76.2312, 6.04972, 1.11", "-22.7955, 77.0031, 5.70576, 1.39", "-23.2655, 77.5908, 5.42958, 0.55", "-23.6102, 78.0217, 5.23209, 0.55", "-23.9787, 78.4705, 4.98099, 0.83", "-24.2447, 78.8202, 4.71922, 0.83", "-24.8148, 79.6968, 4.10277, 0.83", "-25.2109, 80.3037, 3.70653, 0.83", "-25.6562, 80.8996, 3.3449, 1.39", "-26.6648, 82.1626, 2.70025, 0.55", "-27.8216, 83.5483, 2.1202, 1.11", "-28.8884, 84.6753, 1.72444, 0.83", "-30.3589, 86.0429, 1.47792, 0.83", "-31.2471, 86.7445, 1.45165, 0.83", "-32.2416, 87.4368, 1.52202, 1.11", "-33.047, 87.9797, 1.65298, 1.11", "-34.2533, 88.7794, 1.87477, 0.83", "-35.4386, 89.5969, 1.95965, 0.83", "-35.9394, 89.9784, 1.94316, 1.11", "-36.19, 90.1704, 1.93114, 1.11", "-36.8913, 90.7311, 1.86701, 0.28", "-37.4871, 91.3303, 1.76103, 0.83", "-38.3446, 92.2641, 1.55265, 0.83", "-38.9006, 92.8648, 1.36226, 0.83", "-39.5867, 93.596, 1.12303, 0.83", "-40.666, 94.7353, 0.731652, 0.83", "-41.731, 95.8454, 0.316885, 0.83", "-45.1305, 99.5714, -0.54654, 0.83", "-48.9132, 102.953, -1.00547, 0.83", "-52.2603, 106.803, -0.508746, 0.83", "-55.9872, 110.09, 0.593108, 0.83", "-58.9599, 113.824, 2.44613, 0.83", "-61.0385, 117.678, 5.1235, 0.83" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-2.52832, 50.4852, 12.2043, 0.28", "-2.62618, 51.9781, 13.5428, 0.28", "-2.67071, 52.6576, 14.1519, 0.83", "-2.76317, 54.0682, 15.4166, 0.83", "-2.98934, 57.5188, 18.5103, 0.83", "-3.1343, 59.7303, 20.4931, 0.55", "-2.81723, 66.1729, 25.2803, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "27.4776, 55.6629, -3.11085, 0.83", "29.1731, 59.363, -2.20942, 0.83", "29.8925, 60.6052, -1.59069, 1.11", "30.7188, 61.9474, -0.875112, 1.11", "32.0417, 64.0991, 0.496224, 0.83", "32.9434, 65.2674, 1.43834, 0.83", "35.3775, 68.4212, 3.9813, 0.83", "36.9465, 70.336, 5.95537, 0.83", "37.9728, 71.3387, 7.27111, 0.83", "39.2407, 72.2563, 8.8485, 0.83", "41.47, 73.3592, 11.5384, 1.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.4776, 55.6629, -3.11085, 1.39", "33.0276, 60.4442, -7.76986, 1.39", "35.3633, 62.9735, -9.92944, 1.39", "37.4751, 65.2603, -11.882, 1.11", "38.7845, 66.6783, -13.0928, 1.11", "41.0364, 69.1168, -15.1748, 1.11", "43.7747, 72.0821, -17.7068, 1.11", "45.4225, 74.049, -18.8075, 1.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "16.6767, 80.8744, -20.3761, 0.83", "14.4874, 84.2403, -16.1159, 0.83", "13.7959, 85.3033, -14.7704, 0.28", "13.0885, 86.3909, -13.3939, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.6767, 80.8744, -20.3761, 0.83", "18.27, 84.2429, -16.8762, 0.83", "18.9695, 85.7217, -15.3398, 0.83", "20.6402, 89.2537, -11.6699, 0.83", "23.0879, 94.4286, -6.29314, 0.83", "23.9935, 96.3432, -4.30383, 1.11", "24.9574, 98.381, -2.18654, 2.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-28.916, 30.2987, -92.2207, 0.28", "-30.4472, 33.1251, -92.6532, 0.28", "-30.8504, 33.7392, -92.6629, 0.55", "-31.8246, 35.064, -92.6118, 0.28", "-32.204, 35.58, -92.592, 0.55", "-34.2977, 38.4271, -92.4822, 0.28", "-36.1572, 40.9558, -92.3848, 0.55", "-38.5064, 43.8865, -92.1582, 0.28", "-39.9886, 45.6599, -91.9633, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-28.916, 30.2987, -92.2207, 0.28", "-30.7865, 31.8445, -93.4207, 0.28", "-33.3684, 34.2427, -95.7743, 0.28", "-35.0455, 35.9357, -97.031, 0.55", "-38.4693, 40.0634, -98.8377, 0.28", "-40.7561, 43.1808, -99.6598, 1.39", "-44.9278, 49.2793, -100.678, 0.55", "-48.3382, 54.5048, -101.092, 0.28", "-54.4739, 64.9164, -101.026, 1.94", "-57.945, 71.0231, -100.84, 1.11", "-59.681, 73.9363, -100.723, 0.55", "-61.3491, 76.4826, -100.712, 0.55", "-63.8512, 79.6582, -101.225, 0.55", "-65.2695, 80.9373, -102.239, 0.55", "-69.757, 84.0557, -106.205, 0.55", "-73.0013, 85.8317, -109.381, 0.83", "-75.254, 86.9665, -111.717, 0.28", "-79.5471, 89.0959, -116.159, 0.55", "-85.0398, 91.9999, -121.903, 1.39", "-89.1394, 93.9757, -125.833, 0.55", "-93.004, 95.8657, -129.339, 1.39", "-96.5208, 97.8062, -132.489, 0.28", "-99.2612, 99.5165, -134.999, 0.55", "-100.896, 100.709, -136.38, 0.28", "-105.256, 104.759, -139.643, 0.55", "-109.035, 108.914, -142.621, 0.28", "-110.812, 110.997, -143.888, 1.39", "-112.606, 113.102, -145.072, 0.28", "-115.61, 116.659, -147.281, 0.28", "-116.889, 118.313, -148.259, 0.83", "-119.049, 121.606, -150.236, 0.28", "-120.114, 123.074, -151.345, 0.28", "-121.77, 125.113, -153.231, 0.83", "-124.383, 127.978, -156.455, 0.55", "-125.848, 129.376, -158.244, 0.55", "-128.91, 132.167, -162.036, 0.55", "-132.177, 134.898, -165.794, 1.11", "-133.965, 136.194, -167.978, 1.11", "-136.83, 137.872, -171.386, 0.28", "-138.877, 138.673, -173.676, 0.28", "-142.832, 139.731, -177.976, 0.28", "-144.168, 139.941, -179.598, 0.55", "-147.99, 140.139, -184.89, 0.28", "-149.315, 140.123, -186.826, 0.83", "-153.76, 139.857, -193.331, 0.28", "-154.477, 139.778, -194.428, 0.55", "-158.676, 139.19, -200.806, 0.28", "-160.813, 138.987, -204.096, 0.83", "-162.811, 139.076, -206.938, 0.28", "-163.455, 139.159, -207.929, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-54.6333, 22.3756, -65.5623, 0.28", "-55.6893, 22.4202, -66.7088, 0.28", "-56.7384, 22.1896, -68.2782, 0.55", "-57.7211, 21.9424, -69.9333, 0.28", "-58.6419, 21.6653, -71.4857, 0.28", "-58.9442, 21.5901, -71.9557, 0.28", "-59.8901, 21.3759, -73.307, 0.83", "-61.6507, 20.9623, -75.9895, 0.28", "-62.4225, 20.7987, -77.1171, 1.39", "-63.16, 20.6557, -78.1806, 0.55", "-63.8605, 20.5145, -79.1611, 0.28", "-64.3045, 20.4106, -79.7877, 0.28", "-66.4361, 19.8171, -82.8447, 1.94", "-68.4241, 19.221, -85.8328, 0.28", "-68.7106, 19.1182, -86.2895, 0.55", "-69.4614, 18.8276, -87.5466, 0.28", "-70.4813, 18.4039, -89.3458, 1.66", "-72.222, 17.8188, -92.4332, 0.55", "-72.9238, 17.6335, -93.6981, 1.11", "-73.4881, 17.5436, -94.7393, 0.55", "-73.7802, 17.5288, -95.2646, 0.55", "-75.2009, 17.609, -97.6737, 0.28", "-76.4925, 17.7779, -99.6046, 0.83", "-78.4044, 18.1866, -102.204, 0.28", "-78.829, 18.286, -102.733, 0.55", "-79.9066, 18.5717, -104.085, 0.28", "-80.3331, 18.6854, -104.609, 0.83", "-82.2979, 19.2181, -106.768, 0.28", "-83.0813, 19.4035, -107.529, 1.66", "-85.7564, 20.1654, -109.644, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-54.6333, 22.3756, -65.5623, 0.28", "-56.43, 23.5475, -67.055, 0.28", "-56.8467, 23.8195, -67.4168, 0.55", "-57.8189, 24.4083, -68.1856, 0.28", "-60.5985, 26.0597, -70.153, 1.11", "-63.8175, 27.9284, -72.5108, 0.28", "-66.8397, 29.7845, -74.744, 1.39", "-68.5757, 30.793, -76.0215, 0.28", "-70.6274, 31.9265, -77.5555, 0.55", "-72.3824, 32.8609, -78.8549, 1.11", "-75.652, 34.543, -81.197, 0.28", "-77.2361, 35.4059, -82.3235, 0.28", "-78.8527, 36.2521, -83.4226, 1.11", "-82.6609, 38.2414, -85.97, 0.28", "-83.1882, 38.5278, -86.3257, 1.94", "-85.9581, 40.0767, -87.9956, 0.28", "-87.0175, 40.7008, -88.4371, 0.83", "-88.285, 41.5028, -88.8659, 0.28", "-88.9669, 42.0394, -89.0441, 0.28", "-89.9013, 42.8322, -89.2477, 0.55", "-91.4511, 44.1131, -89.7918, 0.28", "-92.1377, 44.588, -90.8489, 0.55", "-92.6332, 44.8673, -91.7809, 0.55", "-94.2707, 45.6508, -94.9635, 0.55", "-96.0554, 46.3638, -98.2067, 0.28", "-96.68, 46.5932, -99.2994, 1.11", "-102.346, 48.4108, -108.718, 0.28", "-103.348, 48.677, -110.224, 0.55", "-104.1, 48.8168, -111.198, 0.83", "-107.32, 49.251, -114.748, 0.28", "-108.421, 49.2083, -115.764, 0.28", "-110.818, 48.9024, -116.546, 0.83", "-114.592, 48.3584, -116.509, 0.55", "-116.158, 48.159, -116.842, 0.55", "-120.066, 47.8399, -118.353, 0.83", "-123.93, 47.6668, -120.204, 0.55", "-128.18, 47.7374, -122.525, 0.55", "-130.724, 47.9697, -124.028, 0.55", "-132.829, 48.4047, -125.465, 0.55", "-135.0, 49.0092, -127.011, 0.28", "-136.704, 49.5299, -128.165, 0.83", "-139.311, 50.3915, -130.347, 0.28", "-140.164, 50.6347, -131.218, 0.83", "-142.257, 51.0388, -133.509, 0.28", "-143.614, 51.021, -135.045, 0.55", "-144.749, 50.9223, -136.431, 0.83", "-147.09, 50.4836, -139.418, 0.55", "-148.423, 50.0004, -140.982, 0.55", "-149.307, 49.584, -142.026, 0.55", "-151.163, 48.2798, -143.922, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-88.8612, 78.0378, 75.5354, 0.55", "-91.9169, 82.8635, 81.3431, 0.55", "-93.6253, 86.8447, 88.1873, 0.55", "-95.883, 91.1835, 94.6658, 0.55", "-96.6143, 95.7814, 101.322, 0.55", "-98.7859, 100.821, 107.35, 0.55", "-101.534, 105.203, 113.611, 0.55", "-103.823, 108.812, 120.478, 0.55", "-104.401, 111.52, 128.047, 0.55", "-103.407, 112.811, 135.92, 0.55", "-104.075, 115.305, 143.55, 0.55", "-105.548, 117.188, 151.232, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-88.8612, 78.0378, 75.5354, 0.55", "-93.911, 83.9618, 84.7959, 0.55", "-99.0188, 90.4596, 93.6658, 0.55", "-106.295, 95.3862, 101.883, 0.55", "-111.034, 101.423, 111.246, 0.55", "-114.934, 107.476, 120.99, 0.55", "-118.898, 113.451, 130.751, 0.55", "-123.904, 121.354, 138.576, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-63.4547, 83.2843, -49.0532, 0.55", "-67.0169, 86.8458, -47.5367, 0.55", "-68.8128, 88.597, -46.9347, 0.28", "-70.6024, 90.369, -46.4763, 0.28", "-71.6502, 91.447, -46.2429, 1.94", "-72.8455, 92.6453, -46.0508, 1.94", "-74.3156, 94.0943, -45.8908, 0.55", "-75.5075, 95.2787, -45.8929, 0.55", "-76.8592, 96.5866, -46.0067, 0.83", "-79.0282, 98.7185, -46.3062, 0.28", "-81.2668, 100.923, -46.631, 0.55", "-82.9408, 102.594, -46.8836, 1.11", "-84.486, 104.169, -47.0926, 0.55", "-86.1309, 105.922, -47.307, 0.83", "-86.6472, 106.481, -47.351, 0.83", "-88.4226, 108.678, -47.4381, 0.28", "-88.9993, 109.495, -47.3951, 0.28", "-90.0726, 111.076, -47.2439, 1.39", "-90.4705, 111.636, -47.1975, 1.39", "-92.1421, 114.012, -47.0437, 0.28", "-93.4694, 115.757, -46.9823, 0.28", "-95.0679, 117.781, -46.964, 0.55", "-96.9759, 120.13, -46.9992, 0.55", "-99.6492, 123.396, -47.1863, 0.55", "-100.354, 124.224, -47.2615, 0.83", "-101.656, 125.652, -47.5051, 0.28", "-102.141, 126.124, -47.6015, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-63.4547, 83.2843, -49.0532, 0.28", "-68.8538, 85.7052, -46.7746, 0.28", "-71.6785, 86.6015, -45.8757, 0.83", "-76.3532, 87.7446, -44.7033, 0.28", "-76.7766, 87.8081, -44.6704, 1.11", "-81.1263, 88.1769, -44.721, 0.28", "-84.0697, 88.4265, -44.7552, 1.11", "-87.7228, 88.4047, -45.2698, 0.28", "-89.3552, 88.3379, -45.5183, 1.11", "-94.4203, 87.7063, -46.9843, 0.28", "-95.6563, 87.5304, -47.3749, 1.39" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-2.81723, 66.1729, 25.2803, 0.55", "0.798415, 72.6366, 30.4174, 0.55", "3.3033, 79.3132, 35.946, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-2.81723, 66.1729, 25.2803, 0.55", "-6.62974, 72.6554, 31.5235, 0.55", "-10.0981, 78.2114, 38.7079, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "41.47, 73.3592, 11.5384, 0.83", "45.0652, 75.1672, 12.5274, 0.83", "45.9462, 75.6103, 12.7697, 0.83", "47.6109, 76.4475, 13.2277, 1.39" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "41.47, 73.3592, 11.5384, 0.83", "46.622, 72.9075, 10.0632, 0.83", "50.5205, 72.1357, 8.85541, 0.83", "53.7682, 71.3185, 7.57426, 0.55", "54.8779, 70.9745, 7.12507, 0.55", "57.6153, 69.9959, 6.02405, 0.55", "59.1039, 69.4577, 5.34078, 0.55", "63.2931, 67.8732, 3.55127, 1.39", "67.5012, 65.9435, 1.62029, 0.83", "69.5468, 64.8664, 0.675723, 0.83", "73.1735, 63.11, -0.958452, 1.39", "78.6981, 60.7318, -3.26773, 1.11", "82.0072, 59.3757, -4.51697, 0.83", "84.4906, 58.425, -5.26317, 0.83", "86.8191, 57.5548, -5.75668, 0.83", "91.8618, 55.8801, -6.51527, 1.11", "93.9371, 55.1916, -6.64257, 0.83", "97.259, 54.0166, -6.77473, 0.83", "100.361, 52.9457, -7.00742, 1.11", "103.033, 52.1415, -6.99781, 0.83", "105.4, 51.5361, -6.80202, 0.28", "108.23, 50.8525, -6.32517, 1.66", "113.98, 50.0313, -5.48344, 0.55", "116.062, 50.0263, -5.34392, 0.55", "121.029, 50.8157, -5.54251, 1.39", "124.549, 51.705, -5.9989, 0.55", "129.358, 53.3098, -7.01136, 0.55", "133.748, 55.3444, -8.1391, 0.55", "138.255, 58.0092, -9.2801, 1.66", "141.516, 60.1274, -10.1789, 0.55", "145.344, 62.7315, -11.6984, 0.55", "146.723, 63.7195, -12.2862, 0.55", "149.178, 65.5884, -13.2751, 1.39", "152.388, 67.5995, -14.2477, 0.28", "154.875, 69.0428, -14.9117, 1.39", "161.564, 72.8994, -16.8363, 0.55", "162.715, 73.5493, -17.2579, 0.55", "164.625, 74.4209, -17.9633, 1.66", "169.467, 76.1694, -19.8077, 0.55", "172.319, 77.1448, -20.8208, 0.55", "173.575, 77.5526, -21.2121, 0.55", "177.278, 78.7212, -21.8574, 1.39", "179.92, 79.6055, -22.3353, 0.55", "181.539, 80.1429, -22.6047, 0.55", "185.189, 81.4142, -22.8238, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "45.4225, 74.049, -18.8075, 1.11", "45.2658, 75.5166, -19.9648, 1.11", "45.1078, 77.3293, -21.4584, 1.11", "44.9349, 80.6925, -24.4783, 0.83", "44.9499, 82.4679, -26.1506, 0.83", "45.0361, 83.5685, -27.264, 1.11", "45.4046, 86.5811, -30.5624, 1.66", "45.9049, 88.8387, -33.283, 0.83", "46.3722, 90.2909, -35.1331, 0.83", "46.9311, 91.4099, -36.6453, 0.83", "47.6318, 92.5627, -38.3981, 0.83", "49.2155, 94.7083, -42.4473, 0.55", "50.5372, 95.4669, -44.8688, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "45.4225, 74.049, -18.8075, 0.83", "45.5342, 76.3256, -21.9775, 0.83", "45.639, 78.4011, -24.794, 0.83", "45.8839, 83.2529, -31.3257, 0.83", "46.0074, 84.9571, -33.5977, 1.11", "46.4492, 88.1612, -38.0386, 0.55", "46.5381, 88.5216, -38.5924, 0.55", "46.7719, 89.0247, -39.4781, 1.11", "47.6531, 90.5327, -42.3551, 0.55", "47.8533, 90.8378, -43.1163, 0.55", "48.3341, 91.619, -45.8399, 1.39", "49.0231, 92.9444, -51.2031, 0.55", "49.1312, 93.2578, -52.6557, 2.22", "49.2204, 93.8752, -57.3354, 0.55", "49.0118, 94.4711, -66.0323, 0.83", "48.8939, 94.5095, -68.5899, 0.83", "48.7928, 94.5004, -69.9407, 0.83", "48.2407, 94.2433, -75.7319, 1.39", "47.2582, 93.4171, -86.2147, 0.55", "47.0048, 93.1135, -88.711, 1.11", "46.5694, 92.5701, -93.1427, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "13.0885, 86.3909, -13.3939, 0.55", "10.9132, 89.8858, -13.1008, 0.55", "9.79532, 91.6797, -12.8339, 0.28", "8.78077, 93.2436, -12.718, 0.28", "7.93827, 94.4956, -12.6796, 0.28", "6.52148, 96.6384, -12.7014, 0.55", "4.84619, 99.075, -12.7774, 0.28", "3.55055, 100.965, -12.9805, 0.83", "1.92946, 103.368, -13.3825, 0.55", "0.63791, 105.234, -13.8359, 0.28", "-0.779907, 107.291, -14.5501, 0.55", "-1.77786, 108.768, -15.1406, 0.28", "-2.53566, 109.915, -15.6413, 0.83", "-4.17422, 112.478, -16.7146, 0.28", "-4.59971, 113.149, -16.9268, 0.83", "-5.86451, 115.132, -17.5262, 0.28", "-7.01022, 116.837, -17.9659, 0.55", "-8.57461, 119.218, -18.4453, 0.55", "-9.17118, 120.133, -18.6039, 0.28", "-10.1008, 121.62, -18.7843, 1.11", "-10.5857, 122.413, -18.9108, 1.11", "-11.5546, 124.071, -19.3687, 0.28", "-12.3126, 125.398, -20.0057, 0.55", "-13.2928, 126.928, -20.8749, 0.28", "-13.8767, 127.64, -21.3309, 0.55", "-14.7206, 128.427, -21.8758, 0.55", "-16.855, 130.058, -23.023, 2.22", "-18.8387, 131.393, -24.0225, 0.55", "-21.1585, 132.719, -25.06, 0.55", "-22.8326, 133.545, -25.6816, 0.55", "-24.9189, 134.489, -26.3786, 0.55", "-28.5613, 136.128, -27.3274, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "13.0885, 86.3909, -13.3939, 0.55", "9.58862, 88.3559, -20.2282, 0.55", "8.23498, 89.1845, -23.0687, 0.55", "6.58163, 90.2673, -26.6809, 1.66", "2.6469, 93.0662, -35.6523, 0.55", "1.16412, 94.197, -39.1572, 0.28", "0.413184, 94.8362, -41.0765, 1.94", "-1.1481, 96.7982, -45.8886, 0.28", "-1.28065, 97.0042, -46.3596, 0.83", "-1.79581, 98.0933, -48.4336, 0.28", "-1.8767, 98.4104, -48.9182, 0.83", "-2.43722, 100.346, -52.1121, 0.28", "-2.80431, 101.64, -54.3359, 0.28", "-3.15814, 103.125, -57.0413, 0.83", "-3.95795, 106.974, -64.6191, 0.28", "-4.16772, 108.178, -67.1222, 2.49", "-4.77813, 113.019, -77.4672, 0.28", "-4.84352, 113.872, -79.3635, 1.94", "-4.84304, 115.815, -84.0065, 0.28", "-4.81656, 116.025, -84.523, 0.83", "-4.17021, 117.332, -87.786, 0.28", "-3.70376, 117.961, -89.3668, 0.55", "-2.50924, 119.043, -92.0483, 0.28", "-1.21829, 120.201, -95.0035, 1.66", "-0.785968, 120.579, -95.9548, 1.66", "1.38691, 122.29, -100.538, 0.28", "1.89818, 122.582, -101.495, 1.11", "3.50204, 123.302, -104.4, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "24.9574, 98.381, -2.18654, 0.55", "24.6107, 100.04, -2.37133, 0.55", "24.2871, 101.996, -2.31755, 0.83", "24.1639, 102.799, -2.24517, 0.28", "23.8128, 105.019, -1.96892, 1.11", "23.661, 106.143, -1.81651, 0.28", "23.5478, 107.442, -1.63434, 1.11", "23.5305, 109.873, -1.24796, 0.28", "23.5326, 110.977, -1.04274, 0.83", "23.5573, 112.706, -0.747782, 0.55", "23.4879, 114.508, -0.537271, 0.55", "23.365, 116.568, -0.434937, 0.55", "23.2584, 118.197, -0.448569, 0.28", "23.0828, 120.93, -0.613082, 0.55", "22.8411, 124.516, -0.895242, 0.55", "22.6048, 127.908, -1.21473, 0.55", "22.4383, 129.447, -1.37899, 0.55", "22.2409, 131.056, -1.60146, 1.11", "22.0881, 132.893, -1.79875, 0.28", "22.1044, 133.896, -1.87566, 0.83", "22.2503, 135.264, -1.85475, 0.83", "22.6066, 136.933, -1.75198, 0.83", "23.0753, 139.248, -1.58569, 0.83", "23.7504, 142.412, -1.22005, 0.55", "24.1506, 144.295, -0.983322, 0.55", "24.6297, 146.399, -0.718552, 1.11", "25.031, 148.491, -0.439544, 0.55", "25.2844, 150.31, -0.199342, 0.55", "25.4388, 152.533, 0.15392, 0.28", "25.5021, 153.773, 0.308955, 0.83", "25.6985, 156.231, 0.664456, 0.83", "25.9774, 158.416, 1.00687, 0.83", "26.3795, 161.068, 1.45827, 0.55", "26.7963, 163.386, 1.85145, 0.28", "27.136, 165.595, 2.21809, 1.11", "27.3402, 167.062, 2.50353, 0.55", "27.4704, 168.155, 2.72356, 0.28", "27.7652, 170.746, 3.06437, 0.83", "27.9919, 172.787, 3.17582, 0.83", "28.1738, 175.336, 2.99455, 0.83", "28.2038, 176.622, 2.73197, 0.28", "28.2171, 178.153, 2.34382, 1.39", "28.2868, 181.473, 1.22458, 0.55", "28.348, 183.45, 0.284974, 0.55", "28.4078, 185.872, -1.22009, 0.28", "28.5274, 187.973, -2.85251, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "24.9574, 98.381, -2.18654, 0.28", "27.1183, 102.04, -1.87442, 0.28", "28.8252, 104.665, -1.59211, 0.83", "30.8972, 107.797, -1.22563, 0.55", "31.6786, 109.011, -1.08251, 0.55", "33.432, 112.016, -0.732512, 0.28", "34.3079, 113.513, -0.563223, 0.28", "35.063, 114.821, -0.291093, 0.83", "35.8773, 116.331, -0.0357672, 0.28", "36.6068, 117.921, -0.00295317, 0.83", "37.3869, 119.58, -0.0620572, 0.28", "38.0229, 121.246, -0.362777, 0.28", "38.454, 122.707, -0.682732, 0.83", "38.7864, 123.912, -0.976512, 0.83", "39.7367, 126.817, -1.69008, 0.28", "40.2861, 128.345, -2.05143, 1.11", "41.6914, 132.288, -3.09757, 0.28", "42.1542, 133.729, -3.49738, 0.55", "42.7092, 135.388, -3.9682, 0.28", "43.4743, 137.322, -4.50531, 0.83", "43.9553, 138.348, -4.82459, 0.83", "45.354, 140.607, -5.33197, 0.28", "45.5974, 140.934, -5.39699, 0.83", "46.5525, 142.333, -5.71184, 0.28", "47.2441, 143.299, -5.93216, 0.55", "48.7268, 145.218, -6.27065, 0.28", "51.9173, 149.235, -6.96452, 1.11", "54.8166, 152.73, -7.50713, 0.55", "57.3695, 155.756, -7.9437, 0.55", "59.037, 157.737, -8.20021, 0.55", "60.8309, 159.825, -8.44381, 2.22", "63.1431, 162.459, -8.6241, 0.55", "64.0677, 163.528, -8.71203, 0.55", "65.6394, 165.217, -8.61273, 0.55", "67.197, 166.871, -8.4474, 0.55", "68.5451, 168.391, -8.24082, 0.28", "69.7051, 169.756, -8.17277, 0.55", "71.0807, 171.256, -7.91339, 0.28", "71.5071, 171.724, -7.83383, 0.28", "72.5107, 172.863, -7.7632, 0.83", "73.2892, 173.773, -7.63246, 0.28", "75.7574, 176.746, -7.27631, 1.11", "78.5514, 179.937, -7.07092, 0.28", "79.0932, 180.513, -7.0143, 0.55", "81.27, 182.936, -6.65935, 0.28", "83.6888, 185.701, -5.93044, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-95.6563, 87.5304, -47.3749, 0.28", "-96.7572, 87.845, -47.6638, 0.28", "-97.6477, 88.0995, -47.8974, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-95.6563, 87.5304, -47.3749, 0.28", "-95.3545, 85.7175, -47.1098, 0.28", "-95.2207, 84.9137, -46.9923, 0.55", "-94.8403, 82.6288, -46.6583, 0.28" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "3.3033, 79.3132, 35.946, 0.55", "5.9511, 86.5876, 42.8939, 0.55", "10.0848, 93.7734, 49.2016, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "3.3033, 79.3132, 35.946, 0.55", "6.26406, 86.6082, 42.7676, 0.55", "9.22509, 93.084, 50.299, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.0981, 78.2114, 38.7079, 0.55", "-13.4361, 85.0223, 46.856, 0.55", "-15.3794, 90.4829, 56.2715, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-10.0981, 78.2114, 38.7079, 0.55", "-12.7853, 83.175, 44.5965, 0.55", "-15.056, 87.3887, 51.1513, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "47.6109, 76.4475, 13.2277, 0.83", "50.5892, 77.687, 13.7632, 0.83", "52.4086, 78.525, 14.1787, 0.55", "54.8357, 79.5835, 14.7802, 0.83", "58.2747, 81.0141, 16.0641, 0.83", "60.2577, 81.8032, 16.9423, 0.55", "63.2349, 83.0023, 18.3747, 0.83", "65.2859, 83.8536, 19.4681, 0.83", "66.5419, 84.4128, 20.2852, 0.83", "70.2588, 86.0701, 23.2183, 0.83", "71.57, 86.7229, 24.3616, 0.55", "72.2325, 87.0913, 24.9567, 0.83", "73.0526, 87.5406, 25.6421, 0.55", "76.1625, 89.5666, 27.5885, 0.83", "79.0804, 91.6284, 29.0386, 0.83", "80.6575, 92.7851, 29.6435, 0.83", "82.4327, 94.1387, 30.2721, 0.83", "84.1681, 95.5582, 30.7155, 0.83", "89.76, 100.6, 31.6547, 0.83", "90.7279, 101.569, 31.716, 1.39", "92.9561, 103.915, 31.7021, 0.55", "94.9796, 106.0, 31.7795, 0.83", "98.1858, 109.359, 32.018, 0.83", "99.8046, 111.248, 32.201, 0.83", "100.697, 112.219, 32.4361, 0.28", "101.588, 112.828, 32.875, 0.28", "104.594, 113.399, 35.5147, 0.83", "105.721, 113.42, 36.7091, 0.28", "106.799, 113.334, 37.918, 0.83", "110.076, 112.803, 41.7847, 0.83", "111.508, 112.568, 43.4372, 0.55", "114.318, 112.111, 46.6574, 0.55", "115.435, 111.894, 47.8879, 0.55", "116.538, 111.653, 49.1585, 0.55", "118.41, 111.358, 51.4879, 0.55", "119.986, 111.435, 53.5065, 0.28", "128.152, 116.063, 60.2018, 0.28", "136.555, 120.638, 66.6322, 0.28", "144.071, 126.484, 73.2201, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "47.6109, 76.4475, 13.2277, 0.83", "47.3224, 77.8466, 14.6687, 0.83", "46.8717, 80.0326, 16.9202, 0.83", "46.4721, 81.9704, 18.916, 0.83", "45.7215, 85.6104, 22.665, 0.83", "45.3744, 87.2941, 24.3991, 0.83", "44.8394, 89.8886, 27.0713, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "185.189, 81.4142, -22.8238, 1.39", "188.67, 82.781, -22.6815, 1.39", "190.508, 83.597, -22.6021, 1.39", "192.904, 84.6837, -22.4783, 0.55", "198.378, 86.9746, -22.3256, 1.11", "204.169, 89.2915, -22.0091, 0.55", "207.586, 90.6001, -21.7693, 0.55", "209.519, 91.2593, -21.6348, 0.28", "211.049, 91.781, -21.5319, 0.28", "213.441, 92.6491, -21.1877, 0.83", "217.108, 93.9369, -20.4912, 0.28", "217.709, 94.1352, -20.4532, 0.55", "220.679, 95.1438, -20.0012, 0.28", "221.118, 95.2754, -19.9293, 0.83", "224.527, 96.6344, -19.2682, 0.28", "227.136, 98.1559, -18.4843, 1.94" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "185.189, 81.4142, -22.8238, 0.83", "187.359, 81.2738, -22.19, 0.83", "190.243, 80.8433, -21.3359, 0.28", "192.794, 80.2515, -20.5701, 0.83", "194.327, 79.6495, -20.1053, 0.55", "195.577, 78.938, -19.6637, 0.83", "196.413, 78.1795, -19.2712, 0.55", "196.934, 77.1316, -18.8736, 0.55", "197.126, 76.4104, -18.5504, 0.55", "197.462, 74.54, -17.8201, 0.83", "197.614, 72.9114, -17.1566, 0.55", "197.711, 70.0965, -15.9303, 0.28", "197.712, 68.6087, -15.2358, 0.28", "197.756, 66.0221, -13.8639, 1.39" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "50.5372, 95.4669, -44.8688, 0.55", "51.1269, 95.2912, -51.0167, 0.55", "51.2672, 95.2495, -52.4786, 1.66", "51.9148, 95.0566, -59.2295, 0.55", "52.2967, 94.9429, -63.2108, 1.39" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "50.5372, 95.4669, -44.8688, 0.55", "50.5811, 97.4099, -52.121, 0.55", "50.6262, 97.6632, -53.022, 2.22", "50.9872, 98.9092, -57.1055, 0.55", "51.187, 99.3702, -58.6616, 0.55", "51.3999, 99.6877, -59.7541, 1.66", "52.2939, 100.555, -62.9242, 0.28", "52.4099, 100.604, -63.1116, 0.55", "53.4158, 100.934, -64.4609, 0.28", "54.7986, 101.183, -65.4325, 1.94", "59.64, 101.093, -66.9169, 0.28", "61.5452, 100.714, -66.7695, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "10.0848, 93.7734, 49.2016, 0.55", "15.9279, 101.228, 51.0045, 0.55", "22.044, 108.659, 51.5666, 0.55", "27.4093, 116.575, 53.035, 0.55", "31.2972, 125.006, 55.8778, 0.55", "34.7618, 133.605, 58.8064, 0.55" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "10.0848, 93.7734, 49.2016, 0.55", "10.68, 102.347, 59.8921, 0.55" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "9.22509, 93.084, 50.299, 0.55", "12.2506, 100.168, 57.6923, 0.55", "15.5194, 105.202, 66.3857, 0.55", "18.9498, 111.415, 74.2966, 0.55", "22.6659, 117.321, 82.2942, 0.55", "25.6511, 123.689, 90.2681, 0.55", "29.3409, 129.472, 98.3577, 0.55", "34.332, 135.81, 105.313, 0.55", "38.6351, 140.974, 113.482, 0.55", "44.0157, 146.054, 121.05, 0.55", "49.4357, 151.368, 128.445, 0.55", "54.6322, 154.727, 136.937, 0.55", "61.6201, 157.734, 144.182, 0.55", "67.7803, 158.86, 152.546, 0.55", "73.9065, 160.685, 160.83, 0.55", "80.0988, 161.542, 169.196, 0.55", "85.7454, 162.542, 177.926, 0.55", "89.9234, 163.517, 187.444, 0.55" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "9.22509, 93.084, 50.299, 0.55", "12.6257, 101.204, 58.9671, 0.55", "14.9795, 109.946, 67.422, 0.55", "17.3987, 120.506, 73.699, 0.55" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-15.3794, 90.4829, 56.2715, 0.55", "-17.8035, 96.9906, 65.6429, 0.55" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-15.3794, 90.4829, 56.2715, 0.55", "-17.8493, 95.4725, 63.3695, 0.55", "-21.1111, 98.9783, 70.9423, 0.55", "-24.3732, 101.516, 78.8583, 0.55", "-27.1819, 104.294, 86.8728, 0.55", "-29.2456, 106.632, 95.2324, 0.55", "-29.3444, 107.351, 104.102, 0.55", "-30.1984, 107.75, 112.951, 0.55", "-29.6278, 109.177, 121.721, 0.55", "-28.4059, 110.169, 130.481, 0.55", "-25.722, 112.799, 138.572, 0.55", "-23.0591, 114.513, 146.895, 0.55", "-19.3216, 116.216, 154.795, 0.55", "-16.8231, 117.008, 163.3, 0.55", "-14.5813, 119.068, 171.674, 0.55", "-13.5423, 121.538, 180.182, 0.55", "-12.2058, 123.772, 188.707, 0.55", "-11.9149, 124.902, 197.532, 0.55", "-12.9729, 125.395, 206.354, 0.55", "-12.5637, 126.396, 215.189, 0.55", "-12.1323, 126.78, 224.069, 0.55", "-11.2344, 126.146, 232.907, 0.55", "-11.6306, 124.148, 241.599, 0.55", "-13.0239, 121.001, 249.871, 0.55" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-15.056, 87.3887, 51.1513, 0.55", "-17.591, 93.2338, 59.3285, 0.55", "-19.8383, 98.1609, 68.1137, 0.55", "-24.1397, 103.694, 75.7516, 0.55", "-27.5273, 109.84, 83.4146, 0.55", "-31.6489, 115.649, 90.9644, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-15.056, 87.3887, 51.1513, 0.55", "-16.2556, 91.811, 57.4602, 0.55", "-16.6143, 95.5392, 64.2534, 0.55", "-17.0355, 100.396, 70.3563, 0.55", "-16.7643, 106.129, 75.7178, 0.55", "-16.688, 112.778, 80.0217, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "144.071, 126.484, 73.2201, 0.28", "148.965, 128.882, 75.9993, 0.28", "153.87, 130.788, 79.0912, 0.28", "158.111, 133.394, 82.6646, 0.28", "161.842, 137.046, 85.9587, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "144.071, 126.484, 73.2201, 0.28", "150.879, 130.389, 78.1095, 0.28", "156.424, 135.02, 83.9272, 0.28", "163.416, 139.552, 87.9941, 0.28", "170.243, 145.068, 91.1212, 0.28", "176.719, 151.565, 93.06, 0.28", "182.84, 158.056, 95.9373, 0.28", "188.948, 164.021, 99.7338, 0.28", "195.797, 170.036, 101.8, 0.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "44.8394, 89.8886, 27.0713, 0.83", "44.6064, 95.3534, 26.7348, 0.83", "44.6966, 99.5828, 26.7217, 0.83", "44.8512, 101.662, 26.6625, 0.83", "45.1015, 104.628, 26.3894, 0.83", "45.4392, 107.676, 25.9201, 0.83", "46.0945, 112.94, 24.796, 0.83", "46.7632, 117.639, 23.3174, 0.83", "47.116, 120.647, 22.0316, 0.83", "47.5644, 124.035, 20.2885, 0.83", "48.0069, 127.483, 18.2348, 0.83", "48.4153, 131.316, 15.7749, 0.83", "48.7727, 134.971, 13.308, 0.83", "48.9465, 140.093, 9.83904, 0.83", "48.9496, 142.922, 8.09206, 0.28", "48.9212, 145.492, 6.64717, 0.83", "48.6898, 149.914, 4.33446, 0.83", "48.5908, 151.21, 3.74227, 0.55", "48.4327, 153.13, 3.04675, 0.55", "48.2835, 153.957, 2.78547, 0.55", "48.0856, 154.788, 2.53914, 0.83", "47.6508, 156.929, 1.94121, 1.39", "47.0448, 159.722, 1.10353, 0.83", "46.7239, 161.337, 0.632633, 0.83", "46.4028, 163.427, 0.0655968, 0.55", "46.2851, 164.271, -0.157992, 0.55", "46.0967, 166.176, -0.627732, 0.83", "45.9929, 167.933, -1.02951, 0.83", "45.9493, 169.705, -1.34521, 0.28", "45.9349, 171.394, -1.59448, 0.28", "45.9227, 172.824, -1.78499, 0.83", "45.8667, 175.948, -2.18495, 0.28", "45.7623, 177.567, -2.40268, 0.83", "45.4869, 180.182, -2.93604, 0.28", "45.3408, 181.041, -3.12569, 0.83", "44.7931, 183.171, -3.66386, 0.28", "44.4341, 184.224, -3.96773, 0.55", "43.5055, 186.333, -4.68264, 1.66", "42.0051, 189.398, -5.83624, 0.55", "40.513, 192.256, -7.02498, 0.28", "39.9538, 193.302, -7.38445, 0.28", "39.4209, 194.322, -7.65732, 0.83", "38.5325, 196.082, -8.01414, 0.28", "38.0703, 197.162, -8.13887, 0.83", "37.5593, 198.459, -8.21373, 0.28", "36.7013, 200.568, -8.49565, 1.11", "36.3221, 201.491, -8.51352, 1.11", "36.0255, 202.274, -8.47256, 1.11", "35.1865, 204.464, -7.65022, 0.55", "34.7807, 205.618, -6.96548, 0.55", "34.4674, 206.511, -6.36764, 0.55", "33.4324, 209.514, -4.14058, 0.55", "33.0399, 210.621, -3.19566, 1.11", "31.2631, 215.519, 1.62569, 0.83", "30.5643, 217.534, 3.99086, 0.83", "30.2042, 227.654, 3.72642, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "44.8394, 89.8886, 27.0713, 0.83", "44.5147, 92.4164, 32.1455, 0.83", "44.4145, 93.1965, 33.7113, 0.83", "44.3623, 93.6029, 34.5272, 0.83", "44.2251, 94.6704, 36.6701, 0.28", "44.133, 95.3879, 38.1104, 0.83", "42.3362, 99.0124, 47.7563, 0.83", "40.4102, 103.324, 57.1165, 0.83", "40.176, 108.873, 66.0638, 0.83", "40.9087, 112.955, 75.6762, 0.83", "40.5708, 115.294, 85.83, 0.83", "40.0356, 116.107, 96.1913, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "227.136, 98.1559, -18.4843, 0.55", "229.616, 98.9231, -18.2048, 0.55", "230.964, 99.416, -18.0327, 0.28", "231.767, 99.7288, -17.9211, 0.55", "233.262, 100.272, -17.7079, 0.28", "235.926, 101.189, -17.3564, 0.55", "237.032, 101.616, -17.3017, 0.55", "238.975, 102.454, -17.2837, 0.28", "241.256, 103.451, -17.2967, 0.55", "242.85, 104.188, -17.3149, 0.28", "244.407, 104.96, -17.2864, 0.83", "247.804, 106.78, -17.1738, 0.28", "249.511, 107.811, -17.0855, 0.83", "251.257, 108.909, -16.9583, 0.28", "252.661, 109.851, -16.7944, 0.55", "254.027, 110.806, -16.5998, 0.28", "255.197, 111.668, -16.4986, 0.55", "256.918, 112.789, -16.4742, 0.28", "257.655, 113.302, -16.6854, 0.83", "258.824, 114.02, -17.2254, 0.28", "260.122, 114.565, -18.0045, 0.83", "262.953, 115.653, -19.947, 0.28", "264.393, 116.039, -20.8089, 0.28", "265.941, 116.302, -21.7237, 0.83", "267.247, 116.42, -22.3726, 0.28", "270.419, 116.535, -23.8512, 1.11", "274.074, 116.423, -25.3592, 0.28", "277.522, 116.064, -26.7813, 0.83", "279.509, 115.776, -27.7436, 1.11", "283.345, 115.007, -29.9034, 0.55", "286.49, 114.429, -31.9462, 0.28", "287.301, 114.287, -32.5415, 0.55", "289.367, 113.86, -34.3487, 0.28", "290.0, 113.783, -34.9609, 0.83", "292.734, 113.531, -37.3102, 0.83", "294.286, 113.43, -38.5592, 0.83", "295.419, 113.331, -39.1358, 0.83", "298.182, 113.18, -40.0438, 0.28", "300.277, 113.195, -40.0202, 0.83", "302.617, 113.356, -39.452, 0.28", "304.888, 113.658, -38.4692, 1.39", "307.634, 114.275, -37.0328, 0.28", "309.156, 114.771, -36.1192, 0.55", "314.283, 116.945, -32.5027, 0.28", "315.141, 117.389, -31.8224, 0.28", "316.01, 117.947, -31.0447, 1.39", "317.824, 119.346, -29.0412, 0.28", "318.555, 120.076, -28.0997, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "227.136, 98.1559, -18.4843, 0.28", "227.373, 100.166, -19.3003, 0.28", "227.446, 100.371, -19.4943, 0.83", "227.952, 102.021, -21.1703, 0.28", "228.076, 102.557, -21.7036, 0.83", "228.393, 104.574, -23.4283, 0.28", "228.454, 104.963, -23.7608, 0.83", "228.854, 107.012, -25.7273, 0.28", "229.031, 107.847, -26.653, 0.83", "229.25, 108.749, -27.8701, 0.28", "229.443, 109.856, -29.2943, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "52.2967, 94.9429, -63.2108, 0.28", "56.5176, 97.6102, -71.5375, 0.28", "58.079, 98.7245, -75.3097, 1.39", "58.9456, 99.343, -77.4035, 0.28", "60.9201, 100.752, -82.1737, 2.22", "61.8574, 101.421, -84.4382, 0.28", "63.0311, 102.258, -87.2738, 0.55", "65.28, 105.079, -93.5868, 1.39" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "52.2967, 94.9429, -63.2108, 0.28", "56.5935, 95.7719, -71.9401, 0.28", "57.0886, 95.8321, -72.8279, 0.28", "58.7335, 96.0675, -75.5923, 0.28", "60.1411, 96.2809, -77.7529, 2.77", "62.7764, 96.675, -81.2835, 0.28", "63.7063, 96.7957, -82.4079, 0.55", "66.0215, 97.0922, -84.2143, 0.55", "67.6049, 97.3312, -85.2161, 0.28", "69.1272, 97.5361, -85.8104, 2.22", "71.6517, 97.8235, -86.2721, 0.55", "72.6126, 97.919, -86.2934, 0.28", "73.3195, 98.0216, -86.3708, 0.28", "74.7456, 98.3419, -86.7974, 0.55", "75.3757, 98.5039, -87.1073, 0.28", "77.0428, 99.1165, -88.2039, 0.28", "77.2206, 99.1911, -88.3355, 0.28", "80.1997, 100.392, -90.6685, 1.66", "82.9455, 101.402, -92.8768, 0.28", "83.1232, 101.459, -93.0163, 0.83", "83.8982, 101.708, -93.611, 0.28", "85.5715, 102.23, -94.6845, 1.39", "87.7744, 102.693, -95.7336, 0.55", "88.5787, 102.734, -95.8857, 0.83", "90.4004, 102.602, -96.0412, 0.28", "91.934, 102.378, -96.3313, 0.83", "95.046, 101.709, -97.1185, 0.28", "96.3183, 101.409, -97.5947, 0.28", "98.4815, 100.753, -98.553, 0.55", "100.408, 100.105, -99.523, 2.49", "103.988, 98.8099, -101.466, 0.55", "104.751, 98.516, -101.932, 1.39", "107.491, 97.5102, -103.781, 0.55", "108.883, 97.0525, -104.704, 0.28", "110.566, 96.5158, -105.828, 0.55", "111.889, 96.1616, -106.688, 1.66", "114.305, 95.5447, -108.205, 0.55", "115.258, 95.3693, -108.8, 0.28", "115.685, 95.3169, -109.075, 0.28", "117.016, 95.2293, -110.035, 0.83", "119.609, 95.0365, -112.385, 0.28", "120.745, 94.9151, -113.508, 1.11", "122.042, 94.7187, -114.792, 0.28", "124.165, 94.3203, -116.903, 0.55", "126.238, 93.861, -118.848, 2.22", "129.81, 92.9737, -121.935, 0.55", "130.796, 92.7319, -122.728, 0.55", "131.87, 92.4626, -123.553, 0.55", "132.797, 92.2222, -124.173, 0.28", "134.842, 91.7735, -125.095, 0.83", "135.893, 91.5744, -125.482, 0.55", "136.78, 91.4694, -125.764, 0.28", "137.438, 91.4289, -126.055, 0.55", "138.394, 91.4073, -126.67, 0.28", "139.398, 91.3678, -127.464, 1.11", "142.824, 91.1934, -130.518, 0.55", "143.554, 91.1391, -131.227, 0.55", "143.778, 91.1118, -131.457, 0.83", "145.443, 90.8843, -133.288, 0.28", "146.102, 90.7849, -134.053, 0.28", "146.73, 90.7709, -134.761, 1.39" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "89.9234, 163.517, 187.444, 0.55", "100.744, 166.689, 192.237, 0.55", "110.752, 169.905, 198.516, 0.55" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "89.9234, 163.517, 187.444, 0.55", "92.2566, 166.789, 194.525, 0.55", "93.5416, 169.568, 202.041, 0.55" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "17.3987, 120.506, 73.699, 0.55", "22.4784, 126.905, 77.7272, 0.55", "26.2264, 133.709, 82.5026, 0.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "17.3987, 120.506, 73.699, 0.55", "17.2819, 129.678, 82.809, 0.55", "14.997, 137.322, 92.8347, 0.55", "13.0267, 142.811, 104.145, 0.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "195.797, 170.036, 101.8, 0.28", "200.378, 174.11, 104.459, 0.28" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "195.797, 170.036, 101.8, 0.28", "204.062, 176.287, 105.838, 0.28" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "146.73, 90.7709, -134.761, 0.28", "150.998, 89.9942, -134.485, 0.28", "153.114, 89.6371, -134.477, 0.55", "155.779, 89.2823, -134.542, 0.28", "156.829, 89.1832, -134.582, 0.28", "159.992, 89.0745, -134.736, 1.11", "162.263, 89.1042, -134.88, 0.55", "163.561, 89.2702, -135.115, 0.55", "165.289, 89.6268, -135.396, 0.28", "166.417, 89.957, -135.567, 0.83", "168.698, 90.7398, -135.618, 0.28", "169.89, 91.1821, -135.578, 0.55", "172.911, 92.4351, -135.422, 0.28", "176.755, 94.0763, -135.189, 1.11", "181.87, 96.2394, -134.776, 0.28", "186.229, 98.0243, -134.28, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "146.73, 90.7709, -134.761, 0.28", "147.995, 91.4393, -134.854, 0.28", "148.564, 91.7402, -134.896, 0.55", "149.933, 92.4634, -134.997, 0.28", "150.322, 92.6694, -135.025, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "26.2264, 133.709, 82.5026, 0.55", "30.9761, 141.529, 85.2299, 0.55", "34.9051, 149.91, 87.6976, 0.55", "38.7118, 158.143, 90.738, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "26.2264, 133.709, 82.5026, 0.55", "32.4915, 142.791, 89.8542, 0.55", "40.132, 152.277, 95.2211, 0.55", "45.5781, 162.995, 101.062, 0.55", "50.788, 173.113, 107.976, 0.55", "56.4908, 183.438, 114.209, 0.55", "64.4064, 192.66, 119.6, 0.55", "71.9506, 202.061, 125.226, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "38.7118, 158.143, 90.738, 0.55", "43.6395, 165.118, 94.4852, 0.55", "48.993, 172.297, 97.1741, 0.55", "53.1712, 180.236, 99.9438, 0.55", "56.4971, 188.862, 101.809, 0.55", "60.6251, 197.297, 102.672, 0.55", "64.62, 205.705, 104.151, 0.55", "70.4236, 212.948, 105.385, 0.55", "75.9035, 219.936, 108.271, 0.55" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "38.7118, 158.143, 90.738, 0.55", "42.2811, 166.245, 92.7332, 0.55", "46.2213, 173.864, 95.6014, 0.55", "49.5025, 181.57, 98.9931, 0.55" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "71.9506, 202.061, 125.226, 0.55", "77.7748, 211.078, 130.291, 0.55", "85.3424, 219.6, 133.564, 0.55", "92.5207, 227.674, 138.357, 0.55", "99.0818, 235.899, 143.745, 0.55", "105.167, 244.162, 149.606, 0.55", "111.33, 252.329, 155.507, 0.55", "118.06, 261.005, 159.983, 0.55", "123.723, 270.898, 163.518, 0.55" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "71.9506, 202.061, 125.226, 0.55", "75.6399, 207.407, 128.969, 0.55", "80.1066, 211.424, 133.327, 0.55", "85.2474, 214.415, 137.686, 0.55" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "75.9035, 219.936, 108.271, 0.55", "77.9372, 231.21, 108.815, 0.55" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "75.9035, 219.936, 108.271, 0.55", "81.5022, 228.153, 111.009, 0.55" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_15", "dend_0", "dend_58", "dend_25", "dend_19", "dend_16", "dend_10", "dend_1", "dend_60", "dend_59", "dend_33", "dend_26", "dend_23", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_2", "dend_88", "dend_61", "dend_43", "dend_34", "dend_30", "dend_27", "dend_22", "dend_21", "dend_14", "dend_13", "dend_9", "dend_8", "dend_6", "dend_3", "dend_69", "dend_62", "dend_49", "dend_44", "dend_36", "dend_35", "dend_32", "dend_31", "dend_29", "dend_28", "dend_5", "dend_4", "dend_85", "dend_70", "dend_66", "dend_63", "dend_53", "dend_50", "dend_46", "dend_45", "dend_38", "dend_37", "dend_87", "dend_86", "dend_82", "dend_71", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_42", "dend_39", "dend_84", "dend_83", "dend_73", "dend_72", "dend_56", "dend_55", "dend_41", "dend_40", "dend_77", "dend_74", "dend_79", "dend_78", "dend_76", "dend_75", "dend_81", "dend_80" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_15", "dend_0", "dend_58", "dend_25", "dend_19", "dend_16", "dend_10", "dend_1", "dend_60", "dend_59", "dend_33", "dend_26", "dend_23", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_2", "dend_88", "dend_61", "dend_43", "dend_34", "dend_30", "dend_27", "dend_22", "dend_21", "dend_14", "dend_13", "dend_9", "dend_8", "dend_6", "dend_3", "dend_69", "dend_62", "dend_49", "dend_44", "dend_36", "dend_35", "dend_32", "dend_31", "dend_29", "dend_28", "dend_5", "dend_4", "dend_85", "dend_70", "dend_66", "dend_63", "dend_53", "dend_50", "dend_46", "dend_45", "dend_38", "dend_37", "dend_87", "dend_86", "dend_82", "dend_71", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_42", "dend_39", "dend_84", "dend_83", "dend_73", "dend_72", "dend_56", "dend_55", "dend_41", "dend_40", "dend_77", "dend_74", "dend_79", "dend_78", "dend_76", "dend_75", "dend_81", "dend_80" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_15", "dend_0", "axon_0", "dend_58", "dend_25", "dend_19", "dend_16", "dend_10", "dend_1", "axon_1", "dend_60", "dend_59", "dend_33", "dend_26", "dend_23", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_7", "dend_2", "dend_88", "dend_61", "dend_43", "dend_34", "dend_30", "dend_27", "dend_22", "dend_21", "dend_14", "dend_13", "dend_9", "dend_8", "dend_6", "dend_3", "dend_69", "dend_62", "dend_49", "dend_44", "dend_36", "dend_35", "dend_32", "dend_31", "dend_29", "dend_28", "dend_5", "dend_4", "dend_85", "dend_70", "dend_66", "dend_63", "dend_53", "dend_50", "dend_46", "dend_45", "dend_38", "dend_37", "dend_87", "dend_86", "dend_82", "dend_71", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_52", "dend_51", "dend_48", "dend_47", "dend_42", "dend_39", "dend_84", "dend_83", "dend_73", "dend_72", "dend_56", "dend_55", "dend_41", "dend_40", "dend_77", "dend_74", "dend_79", "dend_78", "dend_76", "dend_75", "dend_81", "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_24", "dend_15", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_58", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_62", "dend_62", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_85", "dend_85", "dend_70", "dend_70", "dend_66", "dend_66", "dend_63", "dend_63", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_71", "dend_71", "dend_71", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_84", "dend_84", "dend_83", "dend_83", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_56", "dend_55", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_81", "dend_80" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_SBC_4148f86d4f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_58, id: dend_58, parent: dend_24
create dend_58
public dend_58
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_88, id: dend_88, parent: dend_60
create dend_88
public dend_88
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_61
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_49, id: dend_49, parent: dend_43
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_85, id: dend_85, parent: dend_69
create dend_85
public dend_85
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_70
create dend_82
public dend_82
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_15, dend_0, dend_58, dend_25, dend_19, dend_16, dend_10, dend_1, dend_60, dend_59, dend_33, dend_26, dend_23, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_2, dend_88, dend_61, dend_43, dend_34, dend_30, dend_27, dend_22, dend_21, dend_14, dend_13, dend_9, dend_8, dend_6, dend_3, dend_69, dend_62, dend_49, dend_44, dend_36, dend_35, dend_32, dend_31, dend_29, dend_28, dend_5, dend_4, dend_85, dend_70, dend_66, dend_63, dend_53, dend_50, dend_46, dend_45, dend_38, dend_37, dend_87, dend_86, dend_82, dend_71, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_52, dend_51, dend_48, dend_47, dend_42, dend_39, dend_84, dend_83, dend_73, dend_72, dend_56, dend_55, dend_41, dend_40, dend_77, dend_74, dend_79, dend_78, dend_76, dend_75, dend_81, dend_80]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_15, dend_0, dend_58, dend_25, dend_19, dend_16, dend_10, dend_1, dend_60, dend_59, dend_33, dend_26, dend_23, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_2, dend_88, dend_61, dend_43, dend_34, dend_30, dend_27, dend_22, dend_21, dend_14, dend_13, dend_9, dend_8, dend_6, dend_3, dend_69, dend_62, dend_49, dend_44, dend_36, dend_35, dend_32, dend_31, dend_29, dend_28, dend_5, dend_4, dend_85, dend_70, dend_66, dend_63, dend_53, dend_50, dend_46, dend_45, dend_38, dend_37, dend_87, dend_86, dend_82, dend_71, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_52, dend_51, dend_48, dend_47, dend_42, dend_39, dend_84, dend_83, dend_73, dend_72, dend_56, dend_55, dend_41, dend_40, dend_77, dend_74, dend_79, dend_78, dend_76, dend_75, dend_81, dend_80]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_24, dend_15, dend_0, axon_0, dend_58, dend_25, dend_19, dend_16, dend_10, dend_1, axon_1, dend_60, dend_59, dend_33, dend_26, dend_23, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_2, dend_88, dend_61, dend_43, dend_34, dend_30, dend_27, dend_22, dend_21, dend_14, dend_13, dend_9, dend_8, dend_6, dend_3, dend_69, dend_62, dend_49, dend_44, dend_36, dend_35, dend_32, dend_31, dend_29, dend_28, dend_5, dend_4, dend_85, dend_70, dend_66, dend_63, dend_53, dend_50, dend_46, dend_45, dend_38, dend_37, dend_87, dend_86, dend_82, dend_71, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_52, dend_51, dend_48, dend_47, dend_42, dend_39, dend_84, dend_83, dend_73, dend_72, dend_56, dend_55, dend_41, dend_40, dend_77, dend_74, dend_79, dend_78, dend_76, dend_75, dend_81, dend_80]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_82
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_15, dend_0, dend_0, dend_0, axon_0, axon_0, dend_58, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_62, dend_62, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_4, dend_4, dend_4, dend_85, dend_85, dend_70, dend_70, dend_66, dend_66, dend_63, dend_63, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_84, dend_84, dend_83, dend_83, dend_73, dend_73, dend_72, dend_72, dend_72, dend_56, dend_55, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_81, dend_80]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.45000033822506413)
    connect dend_15(0), soma_0(0.45000033822506413)
    connect dend_0(0), soma_0(0.45000033822506413)
    connect axon_0(0), soma_0(1.0)
    connect dend_58(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_88(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_49(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_85(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.66444, -9.50961, -3.61439, 3.16586 ) }
    soma_0 { pt3dadd( -2.42682, -8.48173, -3.22055, 5.7698 ) }
    soma_0 { pt3dadd( -2.1892, -7.45386, -2.8267, 9.26827 ) }
    soma_0 { pt3dadd( -1.95158, -6.42598, -2.43286, 12.0444 ) }
    soma_0 { pt3dadd( -1.71397, -5.3981, -2.03902, 12.8801 ) }
    soma_0 { pt3dadd( -1.47635, -4.37023, -1.64518, 12.9899 ) }
    soma_0 { pt3dadd( -1.23873, -3.34235, -1.25134, 13.1046 ) }
    soma_0 { pt3dadd( -1.00111, -2.31448, -0.857498, 13.2559 ) }
    soma_0 { pt3dadd( -0.763494, -1.2866, -0.463657, 12.9111 ) }
    soma_0 { pt3dadd( -0.525876, -0.258723, -0.0698155, 12.2466 ) }
    soma_0 { pt3dadd( -0.288259, 0.769154, 0.324026, 11.582 ) }
    soma_0 { pt3dadd( -0.0506407, 1.79703, 0.717867, 10.9174 ) }
    soma_0 { pt3dadd( 0.186977, 2.82491, 1.11171, 10.2477 ) }
    soma_0 { pt3dadd( 0.424595, 3.85278, 1.50555, 9.32644 ) }
    soma_0 { pt3dadd( 0.662213, 4.88066, 1.89939, 8.32197 ) }
    soma_0 { pt3dadd( 0.899831, 5.90854, 2.29323, 7.44979 ) }
    soma_0 { pt3dadd( 1.13745, 6.93641, 2.68707, 6.61921 ) }
    soma_0 { pt3dadd( 1.37507, 7.96429, 3.08091, 5.8161 ) }
    soma_0 { pt3dadd( 1.61268, 8.99217, 3.47476, 4.99734 ) }
    soma_0 { pt3dadd( 1.8503, 10.02, 3.8686, 4.17858 ) }
    soma_0 { pt3dadd( 2.08792, 11.0479, 4.26244, 2.54505 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.99773, 13.0582, 5.28216, 3.32 ) }
    dend_24 { pt3dadd( 3.60313, 16.7847, 6.10333, 3.32 ) }
    dend_24 { pt3dadd( 4.72038, 23.6619, 7.61879, 3.32 ) }
    dend_24 { pt3dadd( 5.69419, 29.6562, 8.93968, 4.43 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.82773, -8.51936, -3.64784, 1.94 ) }
    dend_15 { pt3dadd( 4.96066, -10.3976, -3.64784, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.48227, -0.108861, -5.18784, 2.22 ) }
    dend_0 { pt3dadd( -10.9905, -2.17266, -3.75873, 1.94 ) }
    dend_0 { pt3dadd( -15.0012, -4.53205, -2.12495, 1.94 ) }
    dend_0 { pt3dadd( -15.9465, -5.08814, -1.73988, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.08792, 11.0479, 4.26244, 0.55 ) }
    axon_0 { pt3dadd( 5.46643, 25.6625, 4.26244, 0.55 ) }
    axon_0 { pt3dadd( 8.84494, 40.277, 4.26244, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_24 (entry count 34/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 5.69419, 29.6562, 8.93968, 2.49 ) }
    dend_58 { pt3dadd( 3.12276, 35.4178, 9.11004, 2.49 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.69419, 29.6562, 8.93968, 2.49 ) }
    dend_25 { pt3dadd( 6.437, 31.3894, 8.45056, 2.49 ) }
    dend_25 { pt3dadd( 7.59104, 33.6499, 7.84809, 1.94 ) }
    dend_25 { pt3dadd( 9.22816, 36.2973, 6.73238, 1.94 ) }
    dend_25 { pt3dadd( 11.3271, 39.2973, 5.2735, 1.94 ) }
    dend_25 { pt3dadd( 14.0939, 43.252, 3.35034, 1.94 ) }
    dend_25 { pt3dadd( 16.2193, 46.2899, 1.873, 1.39 ) }
    dend_25 { pt3dadd( 18.1015, 48.9074, 0.423184, 1.39 ) }
    dend_25 { pt3dadd( 21.9373, 53.6857, -2.78084, 1.94 ) }
    dend_25 { pt3dadd( 23.1229, 54.8666, -3.80828, 2.77 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 46/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.96066, -10.3976, -3.64784, 0.83 ) }
    dend_19 { pt3dadd( 2.61704, -8.17668, -6.8155, 0.83 ) }
    dend_19 { pt3dadd( 2.02623, -7.40838, -9.58289, 0.83 ) }
    dend_19 { pt3dadd( 2.23717, -7.18485, -12.299, 0.83 ) }
    dend_19 { pt3dadd( 3.29925, -7.19194, -18.0284, 0.83 ) }
    dend_19 { pt3dadd( 3.89318, -7.21684, -21.1282, 1.66 ) }
    dend_19 { pt3dadd( 6.68159, -7.0165, -35.1494, 0.83 ) }
    dend_19 { pt3dadd( 6.99259, -6.76322, -37.2421, 0.55 ) }
    dend_19 { pt3dadd( 7.31694, -6.19557, -40.0957, 0.55 ) }
    dend_19 { pt3dadd( 7.46821, -5.52445, -42.4139, 1.39 ) }
    dend_19 { pt3dadd( 7.86965, -2.50154, -50.8012, 0.55 ) }
    dend_19 { pt3dadd( 7.96923, -2.03163, -51.8828, 1.39 ) }
    dend_19 { pt3dadd( 8.41004, -0.693571, -54.4091, 0.83 ) }
    dend_19 { pt3dadd( 8.69402, 0.513523, -56.8265, 0.83 ) }
    dend_19 { pt3dadd( 8.90375, 1.6912, -58.952, 0.28 ) }
    dend_19 { pt3dadd( 8.97027, 2.15721, -59.7382, 0.28 ) }
    dend_19 { pt3dadd( 9.15231, 3.3696, -61.4705, 1.11 ) }
    dend_19 { pt3dadd( 9.52279, 6.09609, -66.2733, 0.28 ) }
    dend_19 { pt3dadd( 9.62212, 6.89585, -68.2517, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 65/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.96066, -10.3976, -3.64784, 0.83 ) }
    dend_16 { pt3dadd( 7.2549, -12.1928, -1.26146, 0.83 ) }
    dend_16 { pt3dadd( 8.04397, -12.8102, -0.440708, 0.83 ) }
    dend_16 { pt3dadd( 8.60182, -13.2467, 0.139553, 0.83 ) }
    dend_16 { pt3dadd( 12.6729, -16.4321, 4.37414, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.9465, -5.08814, -1.73988, 1.39 ) }
    dend_10 { pt3dadd( -17.9419, -5.49675, -1.54186, 1.39 ) }
    dend_10 { pt3dadd( -17.2735, -6.54764, -3.51691, 1.39 ) }
    dend_10 { pt3dadd( -16.3388, -7.58164, -6.2683, 1.11 ) }
    dend_10 { pt3dadd( -15.3981, -8.15221, -9.72854, 1.11 ) }
    dend_10 { pt3dadd( -15.1555, -8.15099, -11.1037, 1.11 ) }
    dend_10 { pt3dadd( -14.5217, -8.1478, -14.6971, 1.11 ) }
    dend_10 { pt3dadd( -14.0491, -8.12238, -17.0302, 1.39 ) }
    dend_10 { pt3dadd( -13.6068, -8.09983, -18.8636, 1.11 ) }
    dend_10 { pt3dadd( -12.8789, -8.01038, -21.4791, 1.11 ) }
    dend_10 { pt3dadd( -10.5885, -7.05053, -28.5025, 2.49 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 81/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.9465, -5.08814, -1.73988, 0.83 ) }
    dend_1 { pt3dadd( -17.5785, -3.81265, -1.24406, 0.83 ) }
    dend_1 { pt3dadd( -19.6472, -2.53769, -1.0385, 1.11 ) }
    dend_1 { pt3dadd( -21.3007, -1.57735, -1.07819, 0.83 ) }
    dend_1 { pt3dadd( -22.5224, -0.875261, -1.19234, 1.39 ) }
    dend_1 { pt3dadd( -25.0357, 0.620473, -1.54391, 0.83 ) }
    dend_1 { pt3dadd( -28.5887, 2.76065, -2.40523, 1.11 ) }
    dend_1 { pt3dadd( -32.2256, 4.81226, -3.63199, 0.83 ) }
    dend_1 { pt3dadd( -33.7853, 5.66888, -4.26364, 1.11 ) }
    dend_1 { pt3dadd( -34.9398, 6.29035, -4.79597, 1.11 ) }
    dend_1 { pt3dadd( -37.0119, 7.394, -5.8993, 1.11 ) }
    dend_1 { pt3dadd( -40.0472, 9.00207, -7.78557, 1.11 ) }
    dend_1 { pt3dadd( -43.9885, 11.4829, -10.2838, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.84494, 40.277, 4.26244, 0.55 ) }
    axon_1 { pt3dadd( 12.2234, 54.8916, 4.26244, 0.55 ) }
    axon_1 { pt3dadd( 15.602, 69.5062, 4.26244, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 3.12276, 35.4178, 9.11004, 1.66 ) }
    dend_60 { pt3dadd( 1.86037, 38.7837, 9.80125, 1.66 ) }
    dend_60 { pt3dadd( 1.36022, 40.1173, 10.0751, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_60 { pt3dadd( 0.124995, 43.4107, 10.7515, 1.11 ) }
    dend_60 { pt3dadd( -1.05419, 46.5548, 11.3971, 0.83 ) }
    dend_60 { pt3dadd( -2.52832, 50.4852, 12.2043, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 3/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 3.12276, 35.4178, 9.11004, 1.39 ) }
    dend_59 { pt3dadd( 0.101596, 37.7888, 6.81966, 1.39 ) }
    dend_59 { pt3dadd( -3.34996, 40.4427, 3.59805, 1.39 ) }
    dend_59 { pt3dadd( -6.14988, 42.5016, 0.824433, 0.83 ) }
    dend_59 { pt3dadd( -8.42276, 44.0066, -1.47343, 0.83 ) }
    dend_59 { pt3dadd( -11.5704, 45.7175, -4.655, 0.83 ) }
    dend_59 { pt3dadd( -17.7745, 48.4706, -10.7068, 0.83 ) }
    dend_59 { pt3dadd( -18.304, 48.6226, -11.3031, 1.11 ) }
    dend_59 { pt3dadd( -18.9634, 48.7047, -12.1, 0.83 ) }
    dend_59 { pt3dadd( -20.6638, 48.6851, -14.0802, 0.83 ) }
    dend_59 { pt3dadd( -23.0879, 48.3436, -16.6226, 0.83 ) }
    dend_59 { pt3dadd( -24.8957, 47.9994, -17.6284, 0.83 ) }
    dend_59 { pt3dadd( -26.0444, 47.7605, -17.7972, 1.11 ) }
    dend_59 { pt3dadd( -27.7182, 47.7605, -17.9825, 0.83 ) }
    dend_59 { pt3dadd( -28.8375, 48.0439, -18.2799, 0.83 ) }
    dend_59 { pt3dadd( -29.5343, 48.3748, -18.5486, 0.83 ) }
    dend_59 { pt3dadd( -30.9823, 49.2988, -19.4559, 0.83 ) }
    dend_59 { pt3dadd( -32.5484, 50.2738, -20.6574, 0.83 ) }
    dend_59 { pt3dadd( -34.2118, 51.1893, -22.0129, 0.83 ) }
    dend_59 { pt3dadd( -38.3229, 53.0324, -25.0102, 0.55 ) }
    dend_59 { pt3dadd( -38.8397, 53.2354, -25.3432, 0.55 ) }
    dend_59 { pt3dadd( -42.3344, 54.7028, -27.7365, 0.83 ) }
    dend_59 { pt3dadd( -43.5257, 55.2537, -28.5686, 1.11 ) }
    dend_59 { pt3dadd( -46.7064, 56.6968, -30.6656, 0.55 ) }
    dend_59 { pt3dadd( -49.5568, 57.7854, -32.5636, 0.55 ) }
    dend_59 { pt3dadd( -51.0236, 58.2974, -33.3784, 0.55 ) }
    dend_59 { pt3dadd( -55.0696, 59.7998, -36.073, 1.11 ) }
    dend_59 { pt3dadd( -56.397, 60.3661, -37.0646, 0.55 ) }
    dend_59 { pt3dadd( -57.5903, 60.9759, -38.0849, 0.55 ) }
    dend_59 { pt3dadd( -61.8779, 63.4522, -42.1806, 1.11 ) }
    dend_59 { pt3dadd( -63.7839, 64.6039, -44.1645, 0.83 ) }
    dend_59 { pt3dadd( -66.9926, 66.4449, -47.8474, 0.55 ) }
    dend_59 { pt3dadd( -67.9793, 66.9501, -49.0482, 1.39 ) }
    dend_59 { pt3dadd( -68.9159, 67.4108, -50.3675, 0.55 ) }
    dend_59 { pt3dadd( -69.2252, 67.5329, -50.9139, 0.83 ) }
    dend_59 { pt3dadd( -69.6747, 67.6253, -51.9681, 0.83 ) }
    dend_59 { pt3dadd( -71.7396, 67.8427, -57.7385, 0.83 ) }
    dend_59 { pt3dadd( -72.3862, 67.8948, -59.5518, 0.55 ) }
    dend_59 { pt3dadd( -72.8763, 67.9444, -60.9024, 0.83 ) }
    dend_59 { pt3dadd( -74.5042, 68.2237, -65.2025, 0.28 ) }
    dend_59 { pt3dadd( -76.2323, 68.8712, -70.0944, 1.39 ) }
    dend_59 { pt3dadd( -77.6783, 69.6554, -73.8953, 0.55 ) }
    dend_59 { pt3dadd( -78.2113, 69.9624, -75.1201, 0.55 ) }
    dend_59 { pt3dadd( -78.8127, 70.3335, -76.3735, 0.28 ) }
    dend_59 { pt3dadd( -79.4023, 70.759, -77.5566, 1.39 ) }
    dend_59 { pt3dadd( -83.1852, 73.5551, -83.6425, 0.28 ) }
    dend_59 { pt3dadd( -85.0547, 74.833, -86.1321, 0.83 ) }
    dend_59 { pt3dadd( -86.713, 75.9729, -88.1394, 0.28 ) }
    dend_59 { pt3dadd( -88.4745, 77.3761, -90.7292, 1.11 ) }
    dend_59 { pt3dadd( -89.3314, 78.0781, -92.0299, 0.28 ) }
    dend_59 { pt3dadd( -90.5157, 79.1255, -93.7547, 0.55 ) }
    dend_59 { pt3dadd( -90.9272, 79.5381, -94.3387, 0.55 ) }
    dend_59 { pt3dadd( -91.4174, 80.1244, -95.2627, 1.39 ) }
    dend_59 { pt3dadd( -93.6397, 83.3399, -100.093, 0.55 ) }
    dend_59 { pt3dadd( -94.3279, 84.4055, -101.758, 0.55 ) }
    dend_59 { pt3dadd( -94.8146, 85.1759, -103.075, 0.28 ) }
    dend_59 { pt3dadd( -95.5877, 86.5359, -105.519, 1.11 ) }
    dend_59 { pt3dadd( -96.7411, 88.444, -109.118, 0.28 ) }
    dend_59 { pt3dadd( -96.865, 88.6277, -109.47, 0.28 ) }
    dend_59 { pt3dadd( -97.1539, 89.0487, -110.11, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 23.1229, 54.8666, -3.80828, 1.94 ) }
    dend_33 { pt3dadd( 24.8446, 55.1814, -3.53254, 1.94 ) }
    dend_33 { pt3dadd( 27.4776, 55.6629, -3.11085, 1.94 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 66/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 23.1229, 54.8666, -3.80828, 1.11 ) }
    dend_26 { pt3dadd( 22.6879, 57.079, -5.04784, 1.11 ) }
    dend_26 { pt3dadd( 22.208, 59.2342, -6.16071, 0.83 ) }
    dend_26 { pt3dadd( 21.1168, 64.0544, -9.13733, 1.11 ) }
    dend_26 { pt3dadd( 20.5114, 66.7281, -10.7884, 1.11 ) }
    dend_26 { pt3dadd( 19.2873, 72.1351, -14.1274, 1.39 ) }
    dend_26 { pt3dadd( 18.8283, 74.1627, -15.3795, 1.39 ) }
    dend_26 { pt3dadd( 18.3069, 76.034, -16.6312, 1.11 ) }
    dend_26 { pt3dadd( 16.6767, 80.8744, -20.3761, 1.94 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 75/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 9.62212, 6.89585, -68.2517, 0.28 ) }
    dend_23 { pt3dadd( 10.298, 7.21918, -70.1919, 0.28 ) }
    dend_23 { pt3dadd( 10.6363, 7.36604, -71.1885, 0.83 ) }
    dend_23 { pt3dadd( 10.8016, 7.41825, -71.6689, 0.83 ) }
    dend_23 { pt3dadd( 12.0819, 7.73816, -75.0696, 0.28 ) }
    dend_23 { pt3dadd( 12.3614, 7.78376, -75.7384, 0.83 ) }
    dend_23 { pt3dadd( 14.4467, 7.96743, -80.4467, 0.28 ) }
    dend_23 { pt3dadd( 15.3495, 7.96634, -82.4726, 1.11 ) }
    dend_23 { pt3dadd( 16.3656, 7.94391, -84.6244, 0.28 ) }
    dend_23 { pt3dadd( 16.8522, 7.92459, -85.5781, 0.83 ) }
    dend_23 { pt3dadd( 18.3708, 7.82521, -88.0665, 0.28 ) }
    dend_23 { pt3dadd( 19.6076, 7.66846, -90.0501, 0.83 ) }
    dend_23 { pt3dadd( 20.3211, 7.56922, -91.1024, 0.28 ) }
    dend_23 { pt3dadd( 20.7345, 7.52332, -91.794, 0.55 ) }
    dend_23 { pt3dadd( 22.0475, 7.45912, -94.053, 0.28 ) }
    dend_23 { pt3dadd( 22.7644, 7.46428, -95.337, 1.11 ) }
    dend_23 { pt3dadd( 25.4625, 7.66578, -100.224, 0.28 ) }
    dend_23 { pt3dadd( 26.5415, 7.81335, -102.117, 1.11 ) }
    dend_23 { pt3dadd( 28.5684, 8.14663, -105.606, 0.28 ) }
    dend_23 { pt3dadd( 29.4789, 8.31632, -107.208, 0.55 ) }
    dend_23 { pt3dadd( 29.7691, 8.38254, -107.703, 0.28 ) }
    dend_23 { pt3dadd( 30.093, 8.48165, -108.278, 0.55 ) }
    dend_23 { pt3dadd( 30.9451, 8.90504, -109.149, 0.28 ) }
    dend_23 { pt3dadd( 31.3346, 9.10276, -109.418, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 9.62212, 6.89585, -68.2517, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 9.22166, 7.01858, -68.7664, 0.28 ) }
    dend_20 { pt3dadd( 8.5354, 7.23114, -69.5256, 1.39 ) }
    dend_20 { pt3dadd( 7.50051, 7.54719, -70.5407, 0.55 ) }
    dend_20 { pt3dadd( 1.90612, 9.19768, -75.2671, 1.94 ) }
    dend_20 { pt3dadd( -0.960749, 9.99988, -77.3679, 0.28 ) }
    dend_20 { pt3dadd( -2.06407, 10.3313, -78.0681, 0.83 ) }
    dend_20 { pt3dadd( -4.28837, 11.0855, -79.2893, 0.55 ) }
    dend_20 { pt3dadd( -5.37705, 11.518, -79.7743, 0.83 ) }
    dend_20 { pt3dadd( -7.39298, 12.4948, -80.3822, 0.28 ) }
    dend_20 { pt3dadd( -8.85229, 13.3654, -80.5321, 0.83 ) }
    dend_20 { pt3dadd( -11.0287, 14.9906, -80.8232, 0.28 ) }
    dend_20 { pt3dadd( -12.4487, 16.2484, -81.1485, 0.55 ) }
    dend_20 { pt3dadd( -13.3995, 17.288, -81.4612, 0.55 ) }
    dend_20 { pt3dadd( -14.2004, 18.2842, -81.7855, 0.28 ) }
    dend_20 { pt3dadd( -15.8221, 20.4154, -82.8188, 1.39 ) }
    dend_20 { pt3dadd( -17.0545, 21.8698, -83.704, 0.55 ) }
    dend_20 { pt3dadd( -18.0177, 22.8581, -84.4135, 0.55 ) }
    dend_20 { pt3dadd( -18.9114, 23.6352, -85.0905, 0.28 ) }
    dend_20 { pt3dadd( -19.8091, 24.365, -85.7684, 1.39 ) }
    dend_20 { pt3dadd( -23.2163, 26.8394, -88.1829, 0.28 ) }
    dend_20 { pt3dadd( -24.7981, 27.8881, -89.2162, 0.28 ) }
    dend_20 { pt3dadd( -25.936, 28.5641, -89.9702, 0.28 ) }
    dend_20 { pt3dadd( -28.916, 30.2987, -92.2207, 1.94 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.6729, -16.4321, 4.37414, 0.83 ) }
    dend_18 { pt3dadd( 14.7278, -15.5986, 1.94952, 0.83 ) }
    dend_18 { pt3dadd( 19.2147, -13.9934, -3.34812, 0.28 ) }
    dend_18 { pt3dadd( 20.7855, -13.6635, -5.52968, 0.83 ) }
    dend_18 { pt3dadd( 23.9023, -13.5219, -10.5781, 0.28 ) }
    dend_18 { pt3dadd( 24.2709, -13.5165, -11.1872, 0.28 ) }
    dend_18 { pt3dadd( 24.7824, -13.5333, -12.0283, 0.55 ) }
    dend_18 { pt3dadd( 25.5698, -13.6154, -13.4131, 0.55 ) }
    dend_18 { pt3dadd( 27.8122, -15.0857, -18.2847, 0.28 ) }
    dend_18 { pt3dadd( 28.3914, -16.0681, -20.9235, 0.28 ) }
    dend_18 { pt3dadd( 28.6669, -17.1023, -22.9776, 0.28 ) }
    dend_18 { pt3dadd( 28.8535, -17.5621, -24.0066, 1.11 ) }
    dend_18 { pt3dadd( 29.1358, -17.9966, -25.1587, 1.11 ) }
    dend_18 { pt3dadd( 29.7858, -18.4825, -26.7447, 0.55 ) }
    dend_18 { pt3dadd( 32.5912, -19.5476, -31.8492, 0.28 ) }
    dend_18 { pt3dadd( 33.8305, -19.7995, -34.0996, 0.83 ) }
    dend_18 { pt3dadd( 35.7805, -20.0526, -37.4802, 0.28 ) }
    dend_18 { pt3dadd( 36.7508, -20.0576, -39.0632, 0.83 ) }
    dend_18 { pt3dadd( 39.2979, -19.8089, -42.8325, 1.39 ) }
    dend_18 { pt3dadd( 42.9078, -18.9652, -47.8255, 1.39 ) }
    dend_18 { pt3dadd( 45.3179, -18.1325, -51.0926, 0.55 ) }
    dend_18 { pt3dadd( 46.2231, -17.7561, -52.3564, 0.55 ) }
    dend_18 { pt3dadd( 48.1496, -16.8822, -55.05, 0.28 ) }
    dend_18 { pt3dadd( 49.1023, -16.4164, -56.372, 1.39 ) }
    dend_18 { pt3dadd( 52.929, -14.398, -61.6045, 0.28 ) }
    dend_18 { pt3dadd( 56.3678, -12.6439, -65.9155, 0.28 ) }
    dend_18 { pt3dadd( 57.5669, -12.1265, -67.3241, 1.11 ) }
    dend_18 { pt3dadd( 60.3375, -11.0369, -70.6757, 0.28 ) }
    dend_18 { pt3dadd( 60.5268, -10.9857, -70.9173, 0.83 ) }
    dend_18 { pt3dadd( 62.0582, -10.7444, -72.9016, 0.28 ) }
    dend_18 { pt3dadd( 62.7469, -10.687, -73.8013, 0.83 ) }
    dend_18 { pt3dadd( 64.8043, -10.5736, -76.5434, 0.28 ) }
    dend_18 { pt3dadd( 68.0025, -10.4292, -80.9499, 1.94 ) }
    dend_18 { pt3dadd( 74.6391, -10.3311, -90.2513, 1.39 ) }
    dend_18 { pt3dadd( 77.68, -10.3386, -94.5746, 0.28 ) }
    dend_18 { pt3dadd( 79.8832, -10.3707, -97.729, 0.83 ) }
    dend_18 { pt3dadd( 82.5594, -10.4421, -101.505, 0.83 ) }
    dend_18 { pt3dadd( 85.3552, -10.5573, -105.212, 0.28 ) }
    dend_18 { pt3dadd( 87.3115, -10.7398, -107.511, 0.28 ) }
    dend_18 { pt3dadd( 87.5305, -10.767, -107.73, 0.55 ) }
    dend_18 { pt3dadd( 90.5542, -11.2122, -110.497, 0.55 ) }
    dend_18 { pt3dadd( 93.1897, -11.6224, -112.63, 0.28 ) }
    dend_18 { pt3dadd( 96.097, -12.0757, -114.749, 1.11 ) }
    dend_18 { pt3dadd( 103.882, -13.392, -119.956, 0.28 ) }
    dend_18 { pt3dadd( 105.218, -13.6052, -120.811, 0.83 ) }
    dend_18 { pt3dadd( 107.91, -14.047, -122.561, 0.83 ) }
    dend_18 { pt3dadd( 108.974, -14.2389, -123.266, 0.28 ) }
    dend_18 { pt3dadd( 109.322, -14.294, -123.53, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.6729, -16.4321, 4.37414, 0.28 ) }
    dend_17 { pt3dadd( 13.4306, -14.7617, 4.39402, 0.28 ) }
    dend_17 { pt3dadd( 13.4695, -14.5615, 4.54931, 0.55 ) }
    dend_17 { pt3dadd( 13.6151, -13.8464, 5.35512, 0.28 ) }
    dend_17 { pt3dadd( 13.7186, -13.4022, 6.14814, 0.55 ) }
    dend_17 { pt3dadd( 13.9825, -12.4535, 8.07508, 0.28 ) }
    dend_17 { pt3dadd( 14.16, -11.7071, 9.72647, 0.83 ) }
    dend_17 { pt3dadd( 14.5009, -9.70772, 14.7009, 0.55 ) }
    dend_17 { pt3dadd( 14.5621, -9.36802, 15.6807, 0.55 ) }
    dend_17 { pt3dadd( 14.7212, -8.44816, 18.9328, 0.28 ) }
    dend_17 { pt3dadd( 14.7476, -8.33258, 19.4871, 0.83 ) }
    dend_17 { pt3dadd( 14.8459, -7.93599, 21.9818, 0.28 ) }
    dend_17 { pt3dadd( 14.8945, -7.84477, 22.6771, 0.83 ) }
    dend_17 { pt3dadd( 15.1175, -7.41123, 25.2599, 0.28 ) }
    dend_17 { pt3dadd( 15.1987, -7.09802, 27.0265, 0.28 ) }
    dend_17 { pt3dadd( 15.26, -6.7899, 28.7602, 0.55 ) }
    dend_17 { pt3dadd( 15.2745, -3.04512, 37.067, 0.55 ) }
    dend_17 { pt3dadd( 14.0238, 0.547352, 45.3359, 0.55 ) }
    dend_17 { pt3dadd( 12.1185, 3.02784, 53.8317, 0.55 ) }
    dend_17 { pt3dadd( 11.2635, 6.52272, 62.1886, 0.55 ) }
    dend_17 { pt3dadd( 11.1343, 9.98784, 70.6004, 0.55 ) }
    dend_17 { pt3dadd( 9.42774, 14.6163, 78.309, 0.55 ) }
    dend_17 { pt3dadd( 9.52815, 20.7201, 85.2486, 0.55 ) }
    dend_17 { pt3dadd( 9.11945, 26.2557, 92.5945, 0.55 ) }
    dend_17 { pt3dadd( 10.6334, 30.8681, 100.359, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.5885, -7.05053, -28.5025, 1.11 ) }
    dend_12 { pt3dadd( -12.2111, -5.81988, -30.8984, 1.11 ) }
    dend_12 { pt3dadd( -14.1753, -4.09768, -33.8533, 0.83 ) }
    dend_12 { pt3dadd( -15.536, -3.07276, -35.5761, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( -18.1645, -1.3776, -38.3116, 0.83 ) }
    dend_12 { pt3dadd( -19.1961, -0.722021, -39.2648, 0.83 ) }
    dend_12 { pt3dadd( -21.5977, 0.798695, -41.3134, 0.83 ) }
    dend_12 { pt3dadd( -22.5632, 1.40012, -42.0031, 0.28 ) }
    dend_12 { pt3dadd( -24.8514, 2.96199, -43.3259, 1.39 ) }
    dend_12 { pt3dadd( -26.5721, 4.09136, -44.1995, 0.55 ) }
    dend_12 { pt3dadd( -27.638, 4.71284, -44.7048, 0.28 ) }
    dend_12 { pt3dadd( -30.2678, 6.15767, -46.2449, 1.66 ) }
    dend_12 { pt3dadd( -32.3062, 7.21363, -47.581, 0.55 ) }
    dend_12 { pt3dadd( -33.9479, 8.0921, -48.7844, 0.55 ) }
    dend_12 { pt3dadd( -36.2778, 9.36989, -50.6843, 0.28 ) }
    dend_12 { pt3dadd( -39.5999, 11.2146, -53.5161, 1.94 ) }
    dend_12 { pt3dadd( -42.773, 13.0147, -56.504, 0.28 ) }
    dend_12 { pt3dadd( -43.4338, 13.4247, -57.154, 0.28 ) }
    dend_12 { pt3dadd( -44.2241, 13.9489, -57.9697, 0.55 ) }
    dend_12 { pt3dadd( -45.0154, 14.5058, -58.7638, 0.83 ) }
    dend_12 { pt3dadd( -46.7771, 15.7904, -60.2296, 0.55 ) }
    dend_12 { pt3dadd( -50.5388, 18.705, -62.905, 1.94 ) }
    dend_12 { pt3dadd( -52.0587, 19.9913, -63.8288, 0.55 ) }
    dend_12 { pt3dadd( -52.5853, 20.4706, -64.1637, 0.55 ) }
    dend_12 { pt3dadd( -53.4533, 21.2909, -64.7586, 0.28 ) }
    dend_12 { pt3dadd( -54.6333, 22.3756, -65.5623, 2.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 22/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.5885, -7.05053, -28.5025, 0.55 ) }
    dend_11 { pt3dadd( -11.0886, -7.52474, -33.7194, 0.55 ) }
    dend_11 { pt3dadd( -11.3525, -7.70322, -35.5652, 0.28 ) }
    dend_11 { pt3dadd( -11.8211, -7.98637, -38.3172, 0.83 ) }
    dend_11 { pt3dadd( -12.3344, -8.17098, -40.7902, 0.83 ) }
    dend_11 { pt3dadd( -14.8793, -8.65336, -50.4874, 1.39 ) }
    dend_11 { pt3dadd( -15.1574, -8.68389, -51.3536, 1.39 ) }
    dend_11 { pt3dadd( -16.0916, -8.61753, -53.1713, 0.28 ) }
    dend_11 { pt3dadd( -16.2618, -8.58803, -53.4287, 1.39 ) }
    dend_11 { pt3dadd( -17.5493, -8.2659, -54.8272, 0.28 ) }
    dend_11 { pt3dadd( -18.9645, -7.97677, -55.8743, 1.11 ) }
    dend_11 { pt3dadd( -21.9408, -7.4356, -56.9127, 1.66 ) }
    dend_11 { pt3dadd( -24.2043, -7.02913, -57.9551, 0.28 ) }
    dend_11 { pt3dadd( -25.9346, -6.71646, -58.8699, 2.22 ) }
    dend_11 { pt3dadd( -28.6205, -6.226, -60.6777, 1.39 ) }
    dend_11 { pt3dadd( -30.2605, -5.90386, -62.0779, 0.28 ) }
    dend_11 { pt3dadd( -30.4145, -5.86511, -62.2294, 1.11 ) }
    dend_11 { pt3dadd( -32.6515, -5.1869, -64.6007, 0.28 ) }
    dend_11 { pt3dadd( -32.9279, -5.08192, -64.9284, 0.28 ) }
    dend_11 { pt3dadd( -34.3382, -4.50864, -66.768, 1.39 ) }
    dend_11 { pt3dadd( -35.4042, -4.07425, -68.1177, 0.28 ) }
    dend_11 { pt3dadd( -36.3399, -3.69507, -69.2704, 0.83 ) }
    dend_11 { pt3dadd( -37.2084, -3.37564, -70.2461, 0.55 ) }
    dend_11 { pt3dadd( -41.2947, -2.22988, -74.3663, 2.22 ) }
    dend_11 { pt3dadd( -43.3274, -1.83237, -76.2492, 0.55 ) }
    dend_11 { pt3dadd( -44.1027, -1.75901, -76.8588, 0.28 ) }
    dend_11 { pt3dadd( -45.2471, -1.71903, -77.6665, 0.83 ) }
    dend_11 { pt3dadd( -46.4345, -1.72077, -78.4262, 0.28 ) }
    dend_11 { pt3dadd( -47.9602, -1.84691, -79.3345, 0.28 ) }
    dend_11 { pt3dadd( -48.9559, -2.02694, -79.7743, 0.28 ) }
    dend_11 { pt3dadd( -50.5575, -2.39728, -80.564, 1.94 ) }
    dend_11 { pt3dadd( -53.2217, -2.99876, -82.3428, 0.55 ) }
    dend_11 { pt3dadd( -53.9794, -3.18804, -82.9484, 0.55 ) }
    dend_11 { pt3dadd( -56.2448, -3.77701, -85.1119, 0.55 ) }
    dend_11 { pt3dadd( -56.7875, -3.89402, -85.6844, 1.66 ) }
    dend_11 { pt3dadd( -57.384, -4.00915, -86.3528, 1.66 ) }
    dend_11 { pt3dadd( -59.1492, -4.19553, -88.3205, 0.55 ) }
    dend_11 { pt3dadd( -60.3003, -4.19718, -89.418, 0.55 ) }
    dend_11 { pt3dadd( -61.8829, -4.03539, -90.8304, 0.28 ) }
    dend_11 { pt3dadd( -62.5126, -3.91151, -91.3094, 0.28 ) }
    dend_11 { pt3dadd( -63.6415, -3.62949, -92.1189, 0.28 ) }
    dend_11 { pt3dadd( -64.9204, -3.24901, -93.0912, 1.66 ) }
    dend_11 { pt3dadd( -65.5484, -3.05741, -93.5521, 1.66 ) }
    dend_11 { pt3dadd( -68.4291, -2.25696, -95.6743, 0.28 ) }
    dend_11 { pt3dadd( -69.0795, -2.15107, -96.2206, 1.66 ) }
    dend_11 { pt3dadd( -70.3928, -2.09088, -97.4691, 1.66 ) }
    dend_11 { pt3dadd( -72.6478, -2.13486, -99.9608, 0.28 ) }
    dend_11 { pt3dadd( -73.4852, -2.13083, -100.94, 0.28 ) }
    dend_11 { pt3dadd( -74.2205, -2.12619, -101.88, 0.83 ) }
    dend_11 { pt3dadd( -76.4389, -2.14343, -104.69, 0.28 ) }
    dend_11 { pt3dadd( -76.8424, -2.15391, -105.212, 0.55 ) }
    dend_11 { pt3dadd( -77.9361, -2.10057, -106.679, 0.28 ) }
    dend_11 { pt3dadd( -79.1851, -1.86573, -108.351, 1.11 ) }
    dend_11 { pt3dadd( -81.1934, -1.15905, -111.057, 0.28 ) }
    dend_11 { pt3dadd( -82.0056, -0.742711, -112.119, 0.28 ) }
    dend_11 { pt3dadd( -83.6176, 0.192087, -114.007, 1.39 ) }
    dend_11 { pt3dadd( -85.3626, 1.1684, -116.054, 0.28 ) }
    dend_11 { pt3dadd( -86.064, 1.44928, -116.958, 0.83 ) }
    dend_11 { pt3dadd( -86.7325, 1.66516, -117.916, 0.83 ) }
    dend_11 { pt3dadd( -88.0749, 2.1077, -119.826, 0.28 ) }
    dend_11 { pt3dadd( -88.603, 2.24075, -120.589, 0.28 ) }
    dend_11 { pt3dadd( -89.9287, 2.35738, -122.501, 2.22 ) }
    dend_11 { pt3dadd( -92.8042, 2.3684, -127.061, 0.28 ) }
    dend_11 { pt3dadd( -93.5585, 2.37156, -128.275, 0.83 ) }
    dend_11 { pt3dadd( -94.2312, 2.39637, -129.377, 0.55 ) }
    dend_11 { pt3dadd( -94.5434, 2.43413, -129.911, 0.55 ) }
    dend_11 { pt3dadd( -96.0373, 2.74682, -132.463, 1.66 ) }
    dend_11 { pt3dadd( -99.0635, 3.54815, -137.626, 0.28 ) }
    dend_11 { pt3dadd( -99.8625, 3.8156, -138.938, 0.83 ) }
    dend_11 { pt3dadd( -100.465, 3.99536, -139.969, 0.83 ) }
    dend_11 { pt3dadd( -101.756, 4.44583, -142.325, 0.28 ) }
    dend_11 { pt3dadd( -102.417, 4.72799, -143.551, 0.83 ) }
    dend_11 { pt3dadd( -104.166, 5.55182, -146.738, 0.55 ) }
    dend_11 { pt3dadd( -104.396, 5.6502, -147.161, 0.55 ) }
    dend_11 { pt3dadd( -105.625, 6.16842, -149.66, 1.39 ) }
    dend_11 { pt3dadd( -107.568, 6.98547, -153.808, 0.28 ) }
    dend_11 { pt3dadd( -107.774, 7.08394, -154.243, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -43.9885, 11.4829, -10.2838, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_7 { pt3dadd( -44.9991, 12.2778, -8.47481, 0.83 ) }
    dend_7 { pt3dadd( -45.9681, 13.0643, -6.84885, 0.83 ) }
    dend_7 { pt3dadd( -50.1898, 16.4454, -0.425623, 0.83 ) }
    dend_7 { pt3dadd( -51.3201, 17.2929, 1.13385, 0.83 ) }
    dend_7 { pt3dadd( -54.1391, 19.3262, 4.60543, 0.83 ) }
    dend_7 { pt3dadd( -55.4074, 20.2407, 6.03283, 0.55 ) }
    dend_7 { pt3dadd( -56.8277, 21.2046, 7.33491, 0.55 ) }
    dend_7 { pt3dadd( -58.1515, 22.0221, 8.16506, 0.55 ) }
    dend_7 { pt3dadd( -59.3308, 22.6761, 8.79953, 0.55 ) }
    dend_7 { pt3dadd( -61.7017, 24.0604, 10.0157, 0.83 ) }
    dend_7 { pt3dadd( -64.7857, 26.0189, 11.5452, 0.55 ) }
    dend_7 { pt3dadd( -67.5054, 27.6868, 13.0632, 0.55 ) }
    dend_7 { pt3dadd( -69.5783, 28.8562, 14.3017, 0.55 ) }
    dend_7 { pt3dadd( -75.2059, 32.1877, 18.1237, 0.55 ) }
    dend_7 { pt3dadd( -81.6952, 38.5004, 27.0967, 0.55 ) }
    dend_7 { pt3dadd( -86.1057, 44.2575, 37.549, 0.55 ) }
    dend_7 { pt3dadd( -88.6818, 50.7563, 48.216, 0.55 ) }
    dend_7 { pt3dadd( -88.8387, 59.7531, 57.448, 0.55 ) }
    dend_7 { pt3dadd( -88.3465, 68.2107, 67.1205, 0.55 ) }
    dend_7 { pt3dadd( -88.8612, 78.0378, 75.5354, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 20/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -43.9885, 11.4829, -10.2838, 0.83 ) }
    dend_2 { pt3dadd( -43.091, 16.4834, -12.9322, 0.83 ) }
    dend_2 { pt3dadd( -42.7753, 18.5253, -14.1377, 0.83 ) }
    dend_2 { pt3dadd( -42.5422, 20.0741, -15.3451, 0.83 ) }
    dend_2 { pt3dadd( -42.3504, 21.6541, -16.706, 0.83 ) }
    dend_2 { pt3dadd( -42.0009, 25.5104, -20.141, 0.83 ) }
    dend_2 { pt3dadd( -41.9575, 26.1959, -20.7595, 1.11 ) }
    dend_2 { pt3dadd( -42.0249, 27.9949, -22.8034, 1.11 ) }
    dend_2 { pt3dadd( -42.4251, 30.6906, -25.9084, 0.28 ) }
    dend_2 { pt3dadd( -42.5701, 31.3594, -26.6308, 0.83 ) }
    dend_2 { pt3dadd( -42.7519, 32.0969, -27.3384, 0.28 ) }
    dend_2 { pt3dadd( -42.859, 32.5467, -27.6266, 0.83 ) }
    dend_2 { pt3dadd( -43.2351, 33.8549, -28.415, 0.55 ) }
    dend_2 { pt3dadd( -44.3351, 37.1469, -29.9086, 0.83 ) }
    dend_2 { pt3dadd( -45.2165, 39.6403, -30.7203, 0.83 ) }
    dend_2 { pt3dadd( -46.0507, 42.001, -31.3399, 0.83 ) }
    dend_2 { pt3dadd( -47.6358, 46.5766, -32.542, 0.83 ) }
    dend_2 { pt3dadd( -48.7541, 49.9702, -33.2827, 0.28 ) }
    dend_2 { pt3dadd( -50.2742, 54.5648, -34.7299, 1.66 ) }
    dend_2 { pt3dadd( -51.2469, 57.2916, -35.7822, 1.94 ) }
    dend_2 { pt3dadd( -51.9547, 59.1275, -36.6531, 0.83 ) }
    dend_2 { pt3dadd( -52.9891, 61.8048, -38.2857, 0.55 ) }
    dend_2 { pt3dadd( -54.0723, 64.4678, -40.3866, 1.39 ) }
    dend_2 { pt3dadd( -56.5309, 70.1596, -45.0338, 1.39 ) }
    dend_2 { pt3dadd( -56.8677, 70.8612, -45.6371, 0.55 ) }
    dend_2 { pt3dadd( -57.5944, 72.3386, -46.7197, 0.55 ) }
    dend_2 { pt3dadd( -58.174, 73.4551, -47.4152, 1.66 ) }
    dend_2 { pt3dadd( -59.219, 75.3152, -48.3089, 1.66 ) }
    dend_2 { pt3dadd( -60.0134, 76.6674, -48.8046, 0.55 ) }
    dend_2 { pt3dadd( -61.0278, 78.5369, -48.8955, 0.55 ) }
    dend_2 { pt3dadd( -62.388, 81.1893, -49.0067, 0.55 ) }
    dend_2 { pt3dadd( -63.4547, 83.2843, -49.0532, 1.39 ) }
    // Section: dend_88, id: dend_88, parent: dend_60 (entry count 52/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -2.52832, 50.4852, 12.2043, 0.83 ) }
    dend_88 { pt3dadd( -3.25347, 51.8285, 12.1413, 0.83 ) }
    dend_88 { pt3dadd( -4.19591, 53.3494, 12.1464, 1.11 ) }
    dend_88 { pt3dadd( -4.83947, 54.3074, 12.1566, 1.11 ) }
    dend_88 { pt3dadd( -5.9307, 55.7083, 12.0421, 0.83 ) }
    dend_88 { pt3dadd( -6.67065, 56.5664, 11.914, 1.11 ) }
    dend_88 { pt3dadd( -7.79755, 57.8048, 11.6786, 0.83 ) }
    dend_88 { pt3dadd( -8.60636, 58.6329, 11.5096, 1.11 ) }
    dend_88 { pt3dadd( -9.63523, 59.6406, 11.2919, 0.83 ) }
    dend_88 { pt3dadd( -11.143, 61.1195, 10.8671, 0.83 ) }
    dend_88 { pt3dadd( -12.1778, 62.0997, 10.4852, 1.11 ) }
    dend_88 { pt3dadd( -12.6935, 62.6177, 10.2779, 0.55 ) }
    dend_88 { pt3dadd( -13.2138, 63.2443, 10.018, 1.11 ) }
    dend_88 { pt3dadd( -13.7064, 63.9135, 9.78115, 0.83 ) }
    dend_88 { pt3dadd( -14.1207, 64.4813, 9.60186, 0.83 ) }
    dend_88 { pt3dadd( -15.1403, 65.9838, 9.21599, 0.83 ) }
    dend_88 { pt3dadd( -16.1451, 67.5064, 8.8299, 0.83 ) }
    dend_88 { pt3dadd( -17.0699, 68.857, 8.48222, 0.83 ) }
    dend_88 { pt3dadd( -17.7735, 69.83, 8.22466, 0.83 ) }
    dend_88 { pt3dadd( -18.5872, 70.972, 7.93187, 0.83 ) }
    dend_88 { pt3dadd( -19.2306, 71.8904, 7.66634, 0.83 ) }
    dend_88 { pt3dadd( -19.4865, 72.242, 7.54985, 1.11 ) }
    dend_88 { pt3dadd( -20.6964, 73.822, 6.9661, 1.11 ) }
    dend_88 { pt3dadd( -21.1964, 74.5232, 6.71084, 0.83 ) }
    dend_88 { pt3dadd( -21.6035, 75.1764, 6.46342, 0.28 ) }
    dend_88 { pt3dadd( -22.241, 76.2312, 6.04972, 1.11 ) }
    dend_88 { pt3dadd( -22.7955, 77.0031, 5.70576, 1.39 ) }
    dend_88 { pt3dadd( -23.2655, 77.5908, 5.42958, 0.55 ) }
    dend_88 { pt3dadd( -23.6102, 78.0217, 5.23209, 0.55 ) }
    dend_88 { pt3dadd( -23.9787, 78.4705, 4.98099, 0.83 ) }
    dend_88 { pt3dadd( -24.2447, 78.8202, 4.71922, 0.83 ) }
    dend_88 { pt3dadd( -24.8148, 79.6968, 4.10277, 0.83 ) }
    dend_88 { pt3dadd( -25.2109, 80.3037, 3.70653, 0.83 ) }
    dend_88 { pt3dadd( -25.6562, 80.8996, 3.3449, 1.39 ) }
    dend_88 { pt3dadd( -26.6648, 82.1626, 2.70025, 0.55 ) }
    dend_88 { pt3dadd( -27.8216, 83.5483, 2.1202, 1.11 ) }
    dend_88 { pt3dadd( -28.8884, 84.6753, 1.72444, 0.83 ) }
    dend_88 { pt3dadd( -30.3589, 86.0429, 1.47792, 0.83 ) }
    dend_88 { pt3dadd( -31.2471, 86.7445, 1.45165, 0.83 ) }
    dend_88 { pt3dadd( -32.2416, 87.4368, 1.52202, 1.11 ) }
    dend_88 { pt3dadd( -33.047, 87.9797, 1.65298, 1.11 ) }
    dend_88 { pt3dadd( -34.2533, 88.7794, 1.87477, 0.83 ) }
    dend_88 { pt3dadd( -35.4386, 89.5969, 1.95965, 0.83 ) }
    dend_88 { pt3dadd( -35.9394, 89.9784, 1.94316, 1.11 ) }
    dend_88 { pt3dadd( -36.19, 90.1704, 1.93114, 1.11 ) }
    dend_88 { pt3dadd( -36.8913, 90.7311, 1.86701, 0.28 ) }
    dend_88 { pt3dadd( -37.4871, 91.3303, 1.76103, 0.83 ) }
    dend_88 { pt3dadd( -38.3446, 92.2641, 1.55265, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_88 { pt3dadd( -38.9006, 92.8648, 1.36226, 0.83 ) }
    dend_88 { pt3dadd( -39.5867, 93.596, 1.12303, 0.83 ) }
    dend_88 { pt3dadd( -40.666, 94.7353, 0.731652, 0.83 ) }
    dend_88 { pt3dadd( -41.731, 95.8454, 0.316885, 0.83 ) }
    dend_88 { pt3dadd( -45.1305, 99.5714, -0.54654, 0.83 ) }
    dend_88 { pt3dadd( -48.9132, 102.953, -1.00547, 0.83 ) }
    dend_88 { pt3dadd( -52.2603, 106.803, -0.508746, 0.83 ) }
    dend_88 { pt3dadd( -55.9872, 110.09, 0.593108, 0.83 ) }
    dend_88 { pt3dadd( -58.9599, 113.824, 2.44613, 0.83 ) }
    dend_88 { pt3dadd( -61.0385, 117.678, 5.1235, 0.83 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 10/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -2.52832, 50.4852, 12.2043, 0.28 ) }
    dend_61 { pt3dadd( -2.62618, 51.9781, 13.5428, 0.28 ) }
    dend_61 { pt3dadd( -2.67071, 52.6576, 14.1519, 0.83 ) }
    dend_61 { pt3dadd( -2.76317, 54.0682, 15.4166, 0.83 ) }
    dend_61 { pt3dadd( -2.98934, 57.5188, 18.5103, 0.83 ) }
    dend_61 { pt3dadd( -3.1343, 59.7303, 20.4931, 0.55 ) }
    dend_61 { pt3dadd( -2.81723, 66.1729, 25.2803, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 27.4776, 55.6629, -3.11085, 0.83 ) }
    dend_43 { pt3dadd( 29.1731, 59.363, -2.20942, 0.83 ) }
    dend_43 { pt3dadd( 29.8925, 60.6052, -1.59069, 1.11 ) }
    dend_43 { pt3dadd( 30.7188, 61.9474, -0.875112, 1.11 ) }
    dend_43 { pt3dadd( 32.0417, 64.0991, 0.496224, 0.83 ) }
    dend_43 { pt3dadd( 32.9434, 65.2674, 1.43834, 0.83 ) }
    dend_43 { pt3dadd( 35.3775, 68.4212, 3.9813, 0.83 ) }
    dend_43 { pt3dadd( 36.9465, 70.336, 5.95537, 0.83 ) }
    dend_43 { pt3dadd( 37.9728, 71.3387, 7.27111, 0.83 ) }
    dend_43 { pt3dadd( 39.2407, 72.2563, 8.8485, 0.83 ) }
    dend_43 { pt3dadd( 41.47, 73.3592, 11.5384, 1.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.4776, 55.6629, -3.11085, 1.39 ) }
    dend_34 { pt3dadd( 33.0276, 60.4442, -7.76986, 1.39 ) }
    dend_34 { pt3dadd( 35.3633, 62.9735, -9.92944, 1.39 ) }
    dend_34 { pt3dadd( 37.4751, 65.2603, -11.882, 1.11 ) }
    dend_34 { pt3dadd( 38.7845, 66.6783, -13.0928, 1.11 ) }
    dend_34 { pt3dadd( 41.0364, 69.1168, -15.1748, 1.11 ) }
    dend_34 { pt3dadd( 43.7747, 72.0821, -17.7068, 1.11 ) }
    dend_34 { pt3dadd( 45.4225, 74.049, -18.8075, 1.66 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 36/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 16.6767, 80.8744, -20.3761, 0.83 ) }
    dend_30 { pt3dadd( 14.4874, 84.2403, -16.1159, 0.83 ) }
    dend_30 { pt3dadd( 13.7959, 85.3033, -14.7704, 0.28 ) }
    dend_30 { pt3dadd( 13.0885, 86.3909, -13.3939, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.6767, 80.8744, -20.3761, 0.83 ) }
    dend_27 { pt3dadd( 18.27, 84.2429, -16.8762, 0.83 ) }
    dend_27 { pt3dadd( 18.9695, 85.7217, -15.3398, 0.83 ) }
    dend_27 { pt3dadd( 20.6402, 89.2537, -11.6699, 0.83 ) }
    dend_27 { pt3dadd( 23.0879, 94.4286, -6.29314, 0.83 ) }
    dend_27 { pt3dadd( 23.9935, 96.3432, -4.30383, 1.11 ) }
    dend_27 { pt3dadd( 24.9574, 98.381, -2.18654, 2.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 47/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -28.916, 30.2987, -92.2207, 0.28 ) }
    dend_22 { pt3dadd( -30.4472, 33.1251, -92.6532, 0.28 ) }
    dend_22 { pt3dadd( -30.8504, 33.7392, -92.6629, 0.55 ) }
    dend_22 { pt3dadd( -31.8246, 35.064, -92.6118, 0.28 ) }
    dend_22 { pt3dadd( -32.204, 35.58, -92.592, 0.55 ) }
    dend_22 { pt3dadd( -34.2977, 38.4271, -92.4822, 0.28 ) }
    dend_22 { pt3dadd( -36.1572, 40.9558, -92.3848, 0.55 ) }
    dend_22 { pt3dadd( -38.5064, 43.8865, -92.1582, 0.28 ) }
    dend_22 { pt3dadd( -39.9886, 45.6599, -91.9633, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -28.916, 30.2987, -92.2207, 0.28 ) }
    dend_21 { pt3dadd( -30.7865, 31.8445, -93.4207, 0.28 ) }
    dend_21 { pt3dadd( -33.3684, 34.2427, -95.7743, 0.28 ) }
    dend_21 { pt3dadd( -35.0455, 35.9357, -97.031, 0.55 ) }
    dend_21 { pt3dadd( -38.4693, 40.0634, -98.8377, 0.28 ) }
    dend_21 { pt3dadd( -40.7561, 43.1808, -99.6598, 1.39 ) }
    dend_21 { pt3dadd( -44.9278, 49.2793, -100.678, 0.55 ) }
    dend_21 { pt3dadd( -48.3382, 54.5048, -101.092, 0.28 ) }
    dend_21 { pt3dadd( -54.4739, 64.9164, -101.026, 1.94 ) }
    dend_21 { pt3dadd( -57.945, 71.0231, -100.84, 1.11 ) }
    dend_21 { pt3dadd( -59.681, 73.9363, -100.723, 0.55 ) }
    dend_21 { pt3dadd( -61.3491, 76.4826, -100.712, 0.55 ) }
    dend_21 { pt3dadd( -63.8512, 79.6582, -101.225, 0.55 ) }
    dend_21 { pt3dadd( -65.2695, 80.9373, -102.239, 0.55 ) }
    dend_21 { pt3dadd( -69.757, 84.0557, -106.205, 0.55 ) }
    dend_21 { pt3dadd( -73.0013, 85.8317, -109.381, 0.83 ) }
    dend_21 { pt3dadd( -75.254, 86.9665, -111.717, 0.28 ) }
    dend_21 { pt3dadd( -79.5471, 89.0959, -116.159, 0.55 ) }
    dend_21 { pt3dadd( -85.0398, 91.9999, -121.903, 1.39 ) }
    dend_21 { pt3dadd( -89.1394, 93.9757, -125.833, 0.55 ) }
    dend_21 { pt3dadd( -93.004, 95.8657, -129.339, 1.39 ) }
    dend_21 { pt3dadd( -96.5208, 97.8062, -132.489, 0.28 ) }
    dend_21 { pt3dadd( -99.2612, 99.5165, -134.999, 0.55 ) }
    dend_21 { pt3dadd( -100.896, 100.709, -136.38, 0.28 ) }
    dend_21 { pt3dadd( -105.256, 104.759, -139.643, 0.55 ) }
    dend_21 { pt3dadd( -109.035, 108.914, -142.621, 0.28 ) }
    dend_21 { pt3dadd( -110.812, 110.997, -143.888, 1.39 ) }
    dend_21 { pt3dadd( -112.606, 113.102, -145.072, 0.28 ) }
    dend_21 { pt3dadd( -115.61, 116.659, -147.281, 0.28 ) }
    dend_21 { pt3dadd( -116.889, 118.313, -148.259, 0.83 ) }
    dend_21 { pt3dadd( -119.049, 121.606, -150.236, 0.28 ) }
    dend_21 { pt3dadd( -120.114, 123.074, -151.345, 0.28 ) }
    dend_21 { pt3dadd( -121.77, 125.113, -153.231, 0.83 ) }
    dend_21 { pt3dadd( -124.383, 127.978, -156.455, 0.55 ) }
    dend_21 { pt3dadd( -125.848, 129.376, -158.244, 0.55 ) }
    dend_21 { pt3dadd( -128.91, 132.167, -162.036, 0.55 ) }
    dend_21 { pt3dadd( -132.177, 134.898, -165.794, 1.11 ) }
    dend_21 { pt3dadd( -133.965, 136.194, -167.978, 1.11 ) }
    dend_21 { pt3dadd( -136.83, 137.872, -171.386, 0.28 ) }
    dend_21 { pt3dadd( -138.877, 138.673, -173.676, 0.28 ) }
    dend_21 { pt3dadd( -142.832, 139.731, -177.976, 0.28 ) }
    dend_21 { pt3dadd( -144.168, 139.941, -179.598, 0.55 ) }
    dend_21 { pt3dadd( -147.99, 140.139, -184.89, 0.28 ) }
    dend_21 { pt3dadd( -149.315, 140.123, -186.826, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -153.76, 139.857, -193.331, 0.28 ) }
    dend_21 { pt3dadd( -154.477, 139.778, -194.428, 0.55 ) }
    dend_21 { pt3dadd( -158.676, 139.19, -200.806, 0.28 ) }
    dend_21 { pt3dadd( -160.813, 138.987, -204.096, 0.83 ) }
    dend_21 { pt3dadd( -162.811, 139.076, -206.938, 0.28 ) }
    dend_21 { pt3dadd( -163.455, 139.159, -207.929, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -54.6333, 22.3756, -65.5623, 0.28 ) }
    dend_14 { pt3dadd( -55.6893, 22.4202, -66.7088, 0.28 ) }
    dend_14 { pt3dadd( -56.7384, 22.1896, -68.2782, 0.55 ) }
    dend_14 { pt3dadd( -57.7211, 21.9424, -69.9333, 0.28 ) }
    dend_14 { pt3dadd( -58.6419, 21.6653, -71.4857, 0.28 ) }
    dend_14 { pt3dadd( -58.9442, 21.5901, -71.9557, 0.28 ) }
    dend_14 { pt3dadd( -59.8901, 21.3759, -73.307, 0.83 ) }
    dend_14 { pt3dadd( -61.6507, 20.9623, -75.9895, 0.28 ) }
    dend_14 { pt3dadd( -62.4225, 20.7987, -77.1171, 1.39 ) }
    dend_14 { pt3dadd( -63.16, 20.6557, -78.1806, 0.55 ) }
    dend_14 { pt3dadd( -63.8605, 20.5145, -79.1611, 0.28 ) }
    dend_14 { pt3dadd( -64.3045, 20.4106, -79.7877, 0.28 ) }
    dend_14 { pt3dadd( -66.4361, 19.8171, -82.8447, 1.94 ) }
    dend_14 { pt3dadd( -68.4241, 19.221, -85.8328, 0.28 ) }
    dend_14 { pt3dadd( -68.7106, 19.1182, -86.2895, 0.55 ) }
    dend_14 { pt3dadd( -69.4614, 18.8276, -87.5466, 0.28 ) }
    dend_14 { pt3dadd( -70.4813, 18.4039, -89.3458, 1.66 ) }
    dend_14 { pt3dadd( -72.222, 17.8188, -92.4332, 0.55 ) }
    dend_14 { pt3dadd( -72.9238, 17.6335, -93.6981, 1.11 ) }
    dend_14 { pt3dadd( -73.4881, 17.5436, -94.7393, 0.55 ) }
    dend_14 { pt3dadd( -73.7802, 17.5288, -95.2646, 0.55 ) }
    dend_14 { pt3dadd( -75.2009, 17.609, -97.6737, 0.28 ) }
    dend_14 { pt3dadd( -76.4925, 17.7779, -99.6046, 0.83 ) }
    dend_14 { pt3dadd( -78.4044, 18.1866, -102.204, 0.28 ) }
    dend_14 { pt3dadd( -78.829, 18.286, -102.733, 0.55 ) }
    dend_14 { pt3dadd( -79.9066, 18.5717, -104.085, 0.28 ) }
    dend_14 { pt3dadd( -80.3331, 18.6854, -104.609, 0.83 ) }
    dend_14 { pt3dadd( -82.2979, 19.2181, -106.768, 0.28 ) }
    dend_14 { pt3dadd( -83.0813, 19.4035, -107.529, 1.66 ) }
    dend_14 { pt3dadd( -85.7564, 20.1654, -109.644, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 36/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -54.6333, 22.3756, -65.5623, 0.28 ) }
    dend_13 { pt3dadd( -56.43, 23.5475, -67.055, 0.28 ) }
    dend_13 { pt3dadd( -56.8467, 23.8195, -67.4168, 0.55 ) }
    dend_13 { pt3dadd( -57.8189, 24.4083, -68.1856, 0.28 ) }
    dend_13 { pt3dadd( -60.5985, 26.0597, -70.153, 1.11 ) }
    dend_13 { pt3dadd( -63.8175, 27.9284, -72.5108, 0.28 ) }
    dend_13 { pt3dadd( -66.8397, 29.7845, -74.744, 1.39 ) }
    dend_13 { pt3dadd( -68.5757, 30.793, -76.0215, 0.28 ) }
    dend_13 { pt3dadd( -70.6274, 31.9265, -77.5555, 0.55 ) }
    dend_13 { pt3dadd( -72.3824, 32.8609, -78.8549, 1.11 ) }
    dend_13 { pt3dadd( -75.652, 34.543, -81.197, 0.28 ) }
    dend_13 { pt3dadd( -77.2361, 35.4059, -82.3235, 0.28 ) }
    dend_13 { pt3dadd( -78.8527, 36.2521, -83.4226, 1.11 ) }
    dend_13 { pt3dadd( -82.6609, 38.2414, -85.97, 0.28 ) }
    dend_13 { pt3dadd( -83.1882, 38.5278, -86.3257, 1.94 ) }
    dend_13 { pt3dadd( -85.9581, 40.0767, -87.9956, 0.28 ) }
    dend_13 { pt3dadd( -87.0175, 40.7008, -88.4371, 0.83 ) }
    dend_13 { pt3dadd( -88.285, 41.5028, -88.8659, 0.28 ) }
    dend_13 { pt3dadd( -88.9669, 42.0394, -89.0441, 0.28 ) }
    dend_13 { pt3dadd( -89.9013, 42.8322, -89.2477, 0.55 ) }
    dend_13 { pt3dadd( -91.4511, 44.1131, -89.7918, 0.28 ) }
    dend_13 { pt3dadd( -92.1377, 44.588, -90.8489, 0.55 ) }
    dend_13 { pt3dadd( -92.6332, 44.8673, -91.7809, 0.55 ) }
    dend_13 { pt3dadd( -94.2707, 45.6508, -94.9635, 0.55 ) }
    dend_13 { pt3dadd( -96.0554, 46.3638, -98.2067, 0.28 ) }
    dend_13 { pt3dadd( -96.68, 46.5932, -99.2994, 1.11 ) }
    dend_13 { pt3dadd( -102.346, 48.4108, -108.718, 0.28 ) }
    dend_13 { pt3dadd( -103.348, 48.677, -110.224, 0.55 ) }
    dend_13 { pt3dadd( -104.1, 48.8168, -111.198, 0.83 ) }
    dend_13 { pt3dadd( -107.32, 49.251, -114.748, 0.28 ) }
    dend_13 { pt3dadd( -108.421, 49.2083, -115.764, 0.28 ) }
    dend_13 { pt3dadd( -110.818, 48.9024, -116.546, 0.83 ) }
    dend_13 { pt3dadd( -114.592, 48.3584, -116.509, 0.55 ) }
    dend_13 { pt3dadd( -116.158, 48.159, -116.842, 0.55 ) }
    dend_13 { pt3dadd( -120.066, 47.8399, -118.353, 0.83 ) }
    dend_13 { pt3dadd( -123.93, 47.6668, -120.204, 0.55 ) }
    dend_13 { pt3dadd( -128.18, 47.7374, -122.525, 0.55 ) }
    dend_13 { pt3dadd( -130.724, 47.9697, -124.028, 0.55 ) }
    dend_13 { pt3dadd( -132.829, 48.4047, -125.465, 0.55 ) }
    dend_13 { pt3dadd( -135.0, 49.0092, -127.011, 0.28 ) }
    dend_13 { pt3dadd( -136.704, 49.5299, -128.165, 0.83 ) }
    dend_13 { pt3dadd( -139.311, 50.3915, -130.347, 0.28 ) }
    dend_13 { pt3dadd( -140.164, 50.6347, -131.218, 0.83 ) }
    dend_13 { pt3dadd( -142.257, 51.0388, -133.509, 0.28 ) }
    dend_13 { pt3dadd( -143.614, 51.021, -135.045, 0.55 ) }
    dend_13 { pt3dadd( -144.749, 50.9223, -136.431, 0.83 ) }
    dend_13 { pt3dadd( -147.09, 50.4836, -139.418, 0.55 ) }
    dend_13 { pt3dadd( -148.423, 50.0004, -140.982, 0.55 ) }
    dend_13 { pt3dadd( -149.307, 49.584, -142.026, 0.55 ) }
    dend_13 { pt3dadd( -151.163, 48.2798, -143.922, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 86/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -88.8612, 78.0378, 75.5354, 0.55 ) }
    dend_9 { pt3dadd( -91.9169, 82.8635, 81.3431, 0.55 ) }
    dend_9 { pt3dadd( -93.6253, 86.8447, 88.1873, 0.55 ) }
    dend_9 { pt3dadd( -95.883, 91.1835, 94.6658, 0.55 ) }
    dend_9 { pt3dadd( -96.6143, 95.7814, 101.322, 0.55 ) }
    dend_9 { pt3dadd( -98.7859, 100.821, 107.35, 0.55 ) }
    dend_9 { pt3dadd( -101.534, 105.203, 113.611, 0.55 ) }
    dend_9 { pt3dadd( -103.823, 108.812, 120.478, 0.55 ) }
    dend_9 { pt3dadd( -104.401, 111.52, 128.047, 0.55 ) }
    dend_9 { pt3dadd( -103.407, 112.811, 135.92, 0.55 ) }
    dend_9 { pt3dadd( -104.075, 115.305, 143.55, 0.55 ) }
    dend_9 { pt3dadd( -105.548, 117.188, 151.232, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 98/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -88.8612, 78.0378, 75.5354, 0.55 ) }
    dend_8 { pt3dadd( -93.911, 83.9618, 84.7959, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_8 { pt3dadd( -99.0188, 90.4596, 93.6658, 0.55 ) }
    dend_8 { pt3dadd( -106.295, 95.3862, 101.883, 0.55 ) }
    dend_8 { pt3dadd( -111.034, 101.423, 111.246, 0.55 ) }
    dend_8 { pt3dadd( -114.934, 107.476, 120.99, 0.55 ) }
    dend_8 { pt3dadd( -118.898, 113.451, 130.751, 0.55 ) }
    dend_8 { pt3dadd( -123.904, 121.354, 138.576, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 6/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -63.4547, 83.2843, -49.0532, 0.55 ) }
    dend_6 { pt3dadd( -67.0169, 86.8458, -47.5367, 0.55 ) }
    dend_6 { pt3dadd( -68.8128, 88.597, -46.9347, 0.28 ) }
    dend_6 { pt3dadd( -70.6024, 90.369, -46.4763, 0.28 ) }
    dend_6 { pt3dadd( -71.6502, 91.447, -46.2429, 1.94 ) }
    dend_6 { pt3dadd( -72.8455, 92.6453, -46.0508, 1.94 ) }
    dend_6 { pt3dadd( -74.3156, 94.0943, -45.8908, 0.55 ) }
    dend_6 { pt3dadd( -75.5075, 95.2787, -45.8929, 0.55 ) }
    dend_6 { pt3dadd( -76.8592, 96.5866, -46.0067, 0.83 ) }
    dend_6 { pt3dadd( -79.0282, 98.7185, -46.3062, 0.28 ) }
    dend_6 { pt3dadd( -81.2668, 100.923, -46.631, 0.55 ) }
    dend_6 { pt3dadd( -82.9408, 102.594, -46.8836, 1.11 ) }
    dend_6 { pt3dadd( -84.486, 104.169, -47.0926, 0.55 ) }
    dend_6 { pt3dadd( -86.1309, 105.922, -47.307, 0.83 ) }
    dend_6 { pt3dadd( -86.6472, 106.481, -47.351, 0.83 ) }
    dend_6 { pt3dadd( -88.4226, 108.678, -47.4381, 0.28 ) }
    dend_6 { pt3dadd( -88.9993, 109.495, -47.3951, 0.28 ) }
    dend_6 { pt3dadd( -90.0726, 111.076, -47.2439, 1.39 ) }
    dend_6 { pt3dadd( -90.4705, 111.636, -47.1975, 1.39 ) }
    dend_6 { pt3dadd( -92.1421, 114.012, -47.0437, 0.28 ) }
    dend_6 { pt3dadd( -93.4694, 115.757, -46.9823, 0.28 ) }
    dend_6 { pt3dadd( -95.0679, 117.781, -46.964, 0.55 ) }
    dend_6 { pt3dadd( -96.9759, 120.13, -46.9992, 0.55 ) }
    dend_6 { pt3dadd( -99.6492, 123.396, -47.1863, 0.55 ) }
    dend_6 { pt3dadd( -100.354, 124.224, -47.2615, 0.83 ) }
    dend_6 { pt3dadd( -101.656, 125.652, -47.5051, 0.28 ) }
    dend_6 { pt3dadd( -102.141, 126.124, -47.6015, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -63.4547, 83.2843, -49.0532, 0.28 ) }
    dend_3 { pt3dadd( -68.8538, 85.7052, -46.7746, 0.28 ) }
    dend_3 { pt3dadd( -71.6785, 86.6015, -45.8757, 0.83 ) }
    dend_3 { pt3dadd( -76.3532, 87.7446, -44.7033, 0.28 ) }
    dend_3 { pt3dadd( -76.7766, 87.8081, -44.6704, 1.11 ) }
    dend_3 { pt3dadd( -81.1263, 88.1769, -44.721, 0.28 ) }
    dend_3 { pt3dadd( -84.0697, 88.4265, -44.7552, 1.11 ) }
    dend_3 { pt3dadd( -87.7228, 88.4047, -45.2698, 0.28 ) }
    dend_3 { pt3dadd( -89.3552, 88.3379, -45.5183, 1.11 ) }
    dend_3 { pt3dadd( -94.4203, 87.7063, -46.9843, 0.28 ) }
    dend_3 { pt3dadd( -95.6563, 87.5304, -47.3749, 1.39 ) }
    // Section: dend_69, id: dend_69, parent: dend_61 (entry count 44/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -2.81723, 66.1729, 25.2803, 0.55 ) }
    dend_69 { pt3dadd( 0.798415, 72.6366, 30.4174, 0.55 ) }
    dend_69 { pt3dadd( 3.3033, 79.3132, 35.946, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -2.81723, 66.1729, 25.2803, 0.55 ) }
    dend_62 { pt3dadd( -6.62974, 72.6554, 31.5235, 0.55 ) }
    dend_62 { pt3dadd( -10.0981, 78.2114, 38.7079, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_43 (entry count 50/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 41.47, 73.3592, 11.5384, 0.83 ) }
    dend_49 { pt3dadd( 45.0652, 75.1672, 12.5274, 0.83 ) }
    dend_49 { pt3dadd( 45.9462, 75.6103, 12.7697, 0.83 ) }
    dend_49 { pt3dadd( 47.6109, 76.4475, 13.2277, 1.39 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 41.47, 73.3592, 11.5384, 0.83 ) }
    dend_44 { pt3dadd( 46.622, 72.9075, 10.0632, 0.83 ) }
    dend_44 { pt3dadd( 50.5205, 72.1357, 8.85541, 0.83 ) }
    dend_44 { pt3dadd( 53.7682, 71.3185, 7.57426, 0.55 ) }
    dend_44 { pt3dadd( 54.8779, 70.9745, 7.12507, 0.55 ) }
    dend_44 { pt3dadd( 57.6153, 69.9959, 6.02405, 0.55 ) }
    dend_44 { pt3dadd( 59.1039, 69.4577, 5.34078, 0.55 ) }
    dend_44 { pt3dadd( 63.2931, 67.8732, 3.55127, 1.39 ) }
    dend_44 { pt3dadd( 67.5012, 65.9435, 1.62029, 0.83 ) }
    dend_44 { pt3dadd( 69.5468, 64.8664, 0.675723, 0.83 ) }
    dend_44 { pt3dadd( 73.1735, 63.11, -0.958452, 1.39 ) }
    dend_44 { pt3dadd( 78.6981, 60.7318, -3.26773, 1.11 ) }
    dend_44 { pt3dadd( 82.0072, 59.3757, -4.51697, 0.83 ) }
    dend_44 { pt3dadd( 84.4906, 58.425, -5.26317, 0.83 ) }
    dend_44 { pt3dadd( 86.8191, 57.5548, -5.75668, 0.83 ) }
    dend_44 { pt3dadd( 91.8618, 55.8801, -6.51527, 1.11 ) }
    dend_44 { pt3dadd( 93.9371, 55.1916, -6.64257, 0.83 ) }
    dend_44 { pt3dadd( 97.259, 54.0166, -6.77473, 0.83 ) }
    dend_44 { pt3dadd( 100.361, 52.9457, -7.00742, 1.11 ) }
    dend_44 { pt3dadd( 103.033, 52.1415, -6.99781, 0.83 ) }
    dend_44 { pt3dadd( 105.4, 51.5361, -6.80202, 0.28 ) }
    dend_44 { pt3dadd( 108.23, 50.8525, -6.32517, 1.66 ) }
    dend_44 { pt3dadd( 113.98, 50.0313, -5.48344, 0.55 ) }
    dend_44 { pt3dadd( 116.062, 50.0263, -5.34392, 0.55 ) }
    dend_44 { pt3dadd( 121.029, 50.8157, -5.54251, 1.39 ) }
    dend_44 { pt3dadd( 124.549, 51.705, -5.9989, 0.55 ) }
    dend_44 { pt3dadd( 129.358, 53.3098, -7.01136, 0.55 ) }
    dend_44 { pt3dadd( 133.748, 55.3444, -8.1391, 0.55 ) }
    dend_44 { pt3dadd( 138.255, 58.0092, -9.2801, 1.66 ) }
    dend_44 { pt3dadd( 141.516, 60.1274, -10.1789, 0.55 ) }
    dend_44 { pt3dadd( 145.344, 62.7315, -11.6984, 0.55 ) }
    dend_44 { pt3dadd( 146.723, 63.7195, -12.2862, 0.55 ) }
    dend_44 { pt3dadd( 149.178, 65.5884, -13.2751, 1.39 ) }
    dend_44 { pt3dadd( 152.388, 67.5995, -14.2477, 0.28 ) }
    dend_44 { pt3dadd( 154.875, 69.0428, -14.9117, 1.39 ) }
    dend_44 { pt3dadd( 161.564, 72.8994, -16.8363, 0.55 ) }
    dend_44 { pt3dadd( 162.715, 73.5493, -17.2579, 0.55 ) }
    dend_44 { pt3dadd( 164.625, 74.4209, -17.9633, 1.66 ) }
    dend_44 { pt3dadd( 169.467, 76.1694, -19.8077, 0.55 ) }
    dend_44 { pt3dadd( 172.319, 77.1448, -20.8208, 0.55 ) }
    dend_44 { pt3dadd( 173.575, 77.5526, -21.2121, 0.55 ) }
    dend_44 { pt3dadd( 177.278, 78.7212, -21.8574, 1.39 ) }
    dend_44 { pt3dadd( 179.92, 79.6055, -22.3353, 0.55 ) }
    dend_44 { pt3dadd( 181.539, 80.1429, -22.6047, 0.55 ) }
    dend_44 { pt3dadd( 185.189, 81.4142, -22.8238, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 99/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 45.4225, 74.049, -18.8075, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( 45.2658, 75.5166, -19.9648, 1.11 ) }
    dend_36 { pt3dadd( 45.1078, 77.3293, -21.4584, 1.11 ) }
    dend_36 { pt3dadd( 44.9349, 80.6925, -24.4783, 0.83 ) }
    dend_36 { pt3dadd( 44.9499, 82.4679, -26.1506, 0.83 ) }
    dend_36 { pt3dadd( 45.0361, 83.5685, -27.264, 1.11 ) }
    dend_36 { pt3dadd( 45.4046, 86.5811, -30.5624, 1.66 ) }
    dend_36 { pt3dadd( 45.9049, 88.8387, -33.283, 0.83 ) }
    dend_36 { pt3dadd( 46.3722, 90.2909, -35.1331, 0.83 ) }
    dend_36 { pt3dadd( 46.9311, 91.4099, -36.6453, 0.83 ) }
    dend_36 { pt3dadd( 47.6318, 92.5627, -38.3981, 0.83 ) }
    dend_36 { pt3dadd( 49.2155, 94.7083, -42.4473, 0.55 ) }
    dend_36 { pt3dadd( 50.5372, 95.4669, -44.8688, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 12/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 45.4225, 74.049, -18.8075, 0.83 ) }
    dend_35 { pt3dadd( 45.5342, 76.3256, -21.9775, 0.83 ) }
    dend_35 { pt3dadd( 45.639, 78.4011, -24.794, 0.83 ) }
    dend_35 { pt3dadd( 45.8839, 83.2529, -31.3257, 0.83 ) }
    dend_35 { pt3dadd( 46.0074, 84.9571, -33.5977, 1.11 ) }
    dend_35 { pt3dadd( 46.4492, 88.1612, -38.0386, 0.55 ) }
    dend_35 { pt3dadd( 46.5381, 88.5216, -38.5924, 0.55 ) }
    dend_35 { pt3dadd( 46.7719, 89.0247, -39.4781, 1.11 ) }
    dend_35 { pt3dadd( 47.6531, 90.5327, -42.3551, 0.55 ) }
    dend_35 { pt3dadd( 47.8533, 90.8378, -43.1163, 0.55 ) }
    dend_35 { pt3dadd( 48.3341, 91.619, -45.8399, 1.39 ) }
    dend_35 { pt3dadd( 49.0231, 92.9444, -51.2031, 0.55 ) }
    dend_35 { pt3dadd( 49.1312, 93.2578, -52.6557, 2.22 ) }
    dend_35 { pt3dadd( 49.2204, 93.8752, -57.3354, 0.55 ) }
    dend_35 { pt3dadd( 49.0118, 94.4711, -66.0323, 0.83 ) }
    dend_35 { pt3dadd( 48.8939, 94.5095, -68.5899, 0.83 ) }
    dend_35 { pt3dadd( 48.7928, 94.5004, -69.9407, 0.83 ) }
    dend_35 { pt3dadd( 48.2407, 94.2433, -75.7319, 1.39 ) }
    dend_35 { pt3dadd( 47.2582, 93.4171, -86.2147, 0.55 ) }
    dend_35 { pt3dadd( 47.0048, 93.1135, -88.711, 1.11 ) }
    dend_35 { pt3dadd( 46.5694, 92.5701, -93.1427, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 33/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 13.0885, 86.3909, -13.3939, 0.55 ) }
    dend_32 { pt3dadd( 10.9132, 89.8858, -13.1008, 0.55 ) }
    dend_32 { pt3dadd( 9.79532, 91.6797, -12.8339, 0.28 ) }
    dend_32 { pt3dadd( 8.78077, 93.2436, -12.718, 0.28 ) }
    dend_32 { pt3dadd( 7.93827, 94.4956, -12.6796, 0.28 ) }
    dend_32 { pt3dadd( 6.52148, 96.6384, -12.7014, 0.55 ) }
    dend_32 { pt3dadd( 4.84619, 99.075, -12.7774, 0.28 ) }
    dend_32 { pt3dadd( 3.55055, 100.965, -12.9805, 0.83 ) }
    dend_32 { pt3dadd( 1.92946, 103.368, -13.3825, 0.55 ) }
    dend_32 { pt3dadd( 0.63791, 105.234, -13.8359, 0.28 ) }
    dend_32 { pt3dadd( -0.779907, 107.291, -14.5501, 0.55 ) }
    dend_32 { pt3dadd( -1.77786, 108.768, -15.1406, 0.28 ) }
    dend_32 { pt3dadd( -2.53566, 109.915, -15.6413, 0.83 ) }
    dend_32 { pt3dadd( -4.17422, 112.478, -16.7146, 0.28 ) }
    dend_32 { pt3dadd( -4.59971, 113.149, -16.9268, 0.83 ) }
    dend_32 { pt3dadd( -5.86451, 115.132, -17.5262, 0.28 ) }
    dend_32 { pt3dadd( -7.01022, 116.837, -17.9659, 0.55 ) }
    dend_32 { pt3dadd( -8.57461, 119.218, -18.4453, 0.55 ) }
    dend_32 { pt3dadd( -9.17118, 120.133, -18.6039, 0.28 ) }
    dend_32 { pt3dadd( -10.1008, 121.62, -18.7843, 1.11 ) }
    dend_32 { pt3dadd( -10.5857, 122.413, -18.9108, 1.11 ) }
    dend_32 { pt3dadd( -11.5546, 124.071, -19.3687, 0.28 ) }
    dend_32 { pt3dadd( -12.3126, 125.398, -20.0057, 0.55 ) }
    dend_32 { pt3dadd( -13.2928, 126.928, -20.8749, 0.28 ) }
    dend_32 { pt3dadd( -13.8767, 127.64, -21.3309, 0.55 ) }
    dend_32 { pt3dadd( -14.7206, 128.427, -21.8758, 0.55 ) }
    dend_32 { pt3dadd( -16.855, 130.058, -23.023, 2.22 ) }
    dend_32 { pt3dadd( -18.8387, 131.393, -24.0225, 0.55 ) }
    dend_32 { pt3dadd( -21.1585, 132.719, -25.06, 0.55 ) }
    dend_32 { pt3dadd( -22.8326, 133.545, -25.6816, 0.55 ) }
    dend_32 { pt3dadd( -24.9189, 134.489, -26.3786, 0.55 ) }
    dend_32 { pt3dadd( -28.5613, 136.128, -27.3274, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 65/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 13.0885, 86.3909, -13.3939, 0.55 ) }
    dend_31 { pt3dadd( 9.58862, 88.3559, -20.2282, 0.55 ) }
    dend_31 { pt3dadd( 8.23498, 89.1845, -23.0687, 0.55 ) }
    dend_31 { pt3dadd( 6.58163, 90.2673, -26.6809, 1.66 ) }
    dend_31 { pt3dadd( 2.6469, 93.0662, -35.6523, 0.55 ) }
    dend_31 { pt3dadd( 1.16412, 94.197, -39.1572, 0.28 ) }
    dend_31 { pt3dadd( 0.413184, 94.8362, -41.0765, 1.94 ) }
    dend_31 { pt3dadd( -1.1481, 96.7982, -45.8886, 0.28 ) }
    dend_31 { pt3dadd( -1.28065, 97.0042, -46.3596, 0.83 ) }
    dend_31 { pt3dadd( -1.79581, 98.0933, -48.4336, 0.28 ) }
    dend_31 { pt3dadd( -1.8767, 98.4104, -48.9182, 0.83 ) }
    dend_31 { pt3dadd( -2.43722, 100.346, -52.1121, 0.28 ) }
    dend_31 { pt3dadd( -2.80431, 101.64, -54.3359, 0.28 ) }
    dend_31 { pt3dadd( -3.15814, 103.125, -57.0413, 0.83 ) }
    dend_31 { pt3dadd( -3.95795, 106.974, -64.6191, 0.28 ) }
    dend_31 { pt3dadd( -4.16772, 108.178, -67.1222, 2.49 ) }
    dend_31 { pt3dadd( -4.77813, 113.019, -77.4672, 0.28 ) }
    dend_31 { pt3dadd( -4.84352, 113.872, -79.3635, 1.94 ) }
    dend_31 { pt3dadd( -4.84304, 115.815, -84.0065, 0.28 ) }
    dend_31 { pt3dadd( -4.81656, 116.025, -84.523, 0.83 ) }
    dend_31 { pt3dadd( -4.17021, 117.332, -87.786, 0.28 ) }
    dend_31 { pt3dadd( -3.70376, 117.961, -89.3668, 0.55 ) }
    dend_31 { pt3dadd( -2.50924, 119.043, -92.0483, 0.28 ) }
    dend_31 { pt3dadd( -1.21829, 120.201, -95.0035, 1.66 ) }
    dend_31 { pt3dadd( -0.785968, 120.579, -95.9548, 1.66 ) }
    dend_31 { pt3dadd( 1.38691, 122.29, -100.538, 0.28 ) }
    dend_31 { pt3dadd( 1.89818, 122.582, -101.495, 1.11 ) }
    dend_31 { pt3dadd( 3.50204, 123.302, -104.4, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 24.9574, 98.381, -2.18654, 0.55 ) }
    dend_29 { pt3dadd( 24.6107, 100.04, -2.37133, 0.55 ) }
    dend_29 { pt3dadd( 24.2871, 101.996, -2.31755, 0.83 ) }
    dend_29 { pt3dadd( 24.1639, 102.799, -2.24517, 0.28 ) }
    dend_29 { pt3dadd( 23.8128, 105.019, -1.96892, 1.11 ) }
    dend_29 { pt3dadd( 23.661, 106.143, -1.81651, 0.28 ) }
    dend_29 { pt3dadd( 23.5478, 107.442, -1.63434, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( 23.5305, 109.873, -1.24796, 0.28 ) }
    dend_29 { pt3dadd( 23.5326, 110.977, -1.04274, 0.83 ) }
    dend_29 { pt3dadd( 23.5573, 112.706, -0.747782, 0.55 ) }
    dend_29 { pt3dadd( 23.4879, 114.508, -0.537271, 0.55 ) }
    dend_29 { pt3dadd( 23.365, 116.568, -0.434937, 0.55 ) }
    dend_29 { pt3dadd( 23.2584, 118.197, -0.448569, 0.28 ) }
    dend_29 { pt3dadd( 23.0828, 120.93, -0.613082, 0.55 ) }
    dend_29 { pt3dadd( 22.8411, 124.516, -0.895242, 0.55 ) }
    dend_29 { pt3dadd( 22.6048, 127.908, -1.21473, 0.55 ) }
    dend_29 { pt3dadd( 22.4383, 129.447, -1.37899, 0.55 ) }
    dend_29 { pt3dadd( 22.2409, 131.056, -1.60146, 1.11 ) }
    dend_29 { pt3dadd( 22.0881, 132.893, -1.79875, 0.28 ) }
    dend_29 { pt3dadd( 22.1044, 133.896, -1.87566, 0.83 ) }
    dend_29 { pt3dadd( 22.2503, 135.264, -1.85475, 0.83 ) }
    dend_29 { pt3dadd( 22.6066, 136.933, -1.75198, 0.83 ) }
    dend_29 { pt3dadd( 23.0753, 139.248, -1.58569, 0.83 ) }
    dend_29 { pt3dadd( 23.7504, 142.412, -1.22005, 0.55 ) }
    dend_29 { pt3dadd( 24.1506, 144.295, -0.983322, 0.55 ) }
    dend_29 { pt3dadd( 24.6297, 146.399, -0.718552, 1.11 ) }
    dend_29 { pt3dadd( 25.031, 148.491, -0.439544, 0.55 ) }
    dend_29 { pt3dadd( 25.2844, 150.31, -0.199342, 0.55 ) }
    dend_29 { pt3dadd( 25.4388, 152.533, 0.15392, 0.28 ) }
    dend_29 { pt3dadd( 25.5021, 153.773, 0.308955, 0.83 ) }
    dend_29 { pt3dadd( 25.6985, 156.231, 0.664456, 0.83 ) }
    dend_29 { pt3dadd( 25.9774, 158.416, 1.00687, 0.83 ) }
    dend_29 { pt3dadd( 26.3795, 161.068, 1.45827, 0.55 ) }
    dend_29 { pt3dadd( 26.7963, 163.386, 1.85145, 0.28 ) }
    dend_29 { pt3dadd( 27.136, 165.595, 2.21809, 1.11 ) }
    dend_29 { pt3dadd( 27.3402, 167.062, 2.50353, 0.55 ) }
    dend_29 { pt3dadd( 27.4704, 168.155, 2.72356, 0.28 ) }
    dend_29 { pt3dadd( 27.7652, 170.746, 3.06437, 0.83 ) }
    dend_29 { pt3dadd( 27.9919, 172.787, 3.17582, 0.83 ) }
    dend_29 { pt3dadd( 28.1738, 175.336, 2.99455, 0.83 ) }
    dend_29 { pt3dadd( 28.2038, 176.622, 2.73197, 0.28 ) }
    dend_29 { pt3dadd( 28.2171, 178.153, 2.34382, 1.39 ) }
    dend_29 { pt3dadd( 28.2868, 181.473, 1.22458, 0.55 ) }
    dend_29 { pt3dadd( 28.348, 183.45, 0.284974, 0.55 ) }
    dend_29 { pt3dadd( 28.4078, 185.872, -1.22009, 0.28 ) }
    dend_29 { pt3dadd( 28.5274, 187.973, -2.85251, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 39/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 24.9574, 98.381, -2.18654, 0.28 ) }
    dend_28 { pt3dadd( 27.1183, 102.04, -1.87442, 0.28 ) }
    dend_28 { pt3dadd( 28.8252, 104.665, -1.59211, 0.83 ) }
    dend_28 { pt3dadd( 30.8972, 107.797, -1.22563, 0.55 ) }
    dend_28 { pt3dadd( 31.6786, 109.011, -1.08251, 0.55 ) }
    dend_28 { pt3dadd( 33.432, 112.016, -0.732512, 0.28 ) }
    dend_28 { pt3dadd( 34.3079, 113.513, -0.563223, 0.28 ) }
    dend_28 { pt3dadd( 35.063, 114.821, -0.291093, 0.83 ) }
    dend_28 { pt3dadd( 35.8773, 116.331, -0.0357672, 0.28 ) }
    dend_28 { pt3dadd( 36.6068, 117.921, -0.00295317, 0.83 ) }
    dend_28 { pt3dadd( 37.3869, 119.58, -0.0620572, 0.28 ) }
    dend_28 { pt3dadd( 38.0229, 121.246, -0.362777, 0.28 ) }
    dend_28 { pt3dadd( 38.454, 122.707, -0.682732, 0.83 ) }
    dend_28 { pt3dadd( 38.7864, 123.912, -0.976512, 0.83 ) }
    dend_28 { pt3dadd( 39.7367, 126.817, -1.69008, 0.28 ) }
    dend_28 { pt3dadd( 40.2861, 128.345, -2.05143, 1.11 ) }
    dend_28 { pt3dadd( 41.6914, 132.288, -3.09757, 0.28 ) }
    dend_28 { pt3dadd( 42.1542, 133.729, -3.49738, 0.55 ) }
    dend_28 { pt3dadd( 42.7092, 135.388, -3.9682, 0.28 ) }
    dend_28 { pt3dadd( 43.4743, 137.322, -4.50531, 0.83 ) }
    dend_28 { pt3dadd( 43.9553, 138.348, -4.82459, 0.83 ) }
    dend_28 { pt3dadd( 45.354, 140.607, -5.33197, 0.28 ) }
    dend_28 { pt3dadd( 45.5974, 140.934, -5.39699, 0.83 ) }
    dend_28 { pt3dadd( 46.5525, 142.333, -5.71184, 0.28 ) }
    dend_28 { pt3dadd( 47.2441, 143.299, -5.93216, 0.55 ) }
    dend_28 { pt3dadd( 48.7268, 145.218, -6.27065, 0.28 ) }
    dend_28 { pt3dadd( 51.9173, 149.235, -6.96452, 1.11 ) }
    dend_28 { pt3dadd( 54.8166, 152.73, -7.50713, 0.55 ) }
    dend_28 { pt3dadd( 57.3695, 155.756, -7.9437, 0.55 ) }
    dend_28 { pt3dadd( 59.037, 157.737, -8.20021, 0.55 ) }
    dend_28 { pt3dadd( 60.8309, 159.825, -8.44381, 2.22 ) }
    dend_28 { pt3dadd( 63.1431, 162.459, -8.6241, 0.55 ) }
    dend_28 { pt3dadd( 64.0677, 163.528, -8.71203, 0.55 ) }
    dend_28 { pt3dadd( 65.6394, 165.217, -8.61273, 0.55 ) }
    dend_28 { pt3dadd( 67.197, 166.871, -8.4474, 0.55 ) }
    dend_28 { pt3dadd( 68.5451, 168.391, -8.24082, 0.28 ) }
    dend_28 { pt3dadd( 69.7051, 169.756, -8.17277, 0.55 ) }
    dend_28 { pt3dadd( 71.0807, 171.256, -7.91339, 0.28 ) }
    dend_28 { pt3dadd( 71.5071, 171.724, -7.83383, 0.28 ) }
    dend_28 { pt3dadd( 72.5107, 172.863, -7.7632, 0.83 ) }
    dend_28 { pt3dadd( 73.2892, 173.773, -7.63246, 0.28 ) }
    dend_28 { pt3dadd( 75.7574, 176.746, -7.27631, 1.11 ) }
    dend_28 { pt3dadd( 78.5514, 179.937, -7.07092, 0.28 ) }
    dend_28 { pt3dadd( 79.0932, 180.513, -7.0143, 0.55 ) }
    dend_28 { pt3dadd( 81.27, 182.936, -6.65935, 0.28 ) }
    dend_28 { pt3dadd( 83.6888, 185.701, -5.93044, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 85/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -95.6563, 87.5304, -47.3749, 0.28 ) }
    dend_5 { pt3dadd( -96.7572, 87.845, -47.6638, 0.28 ) }
    dend_5 { pt3dadd( -97.6477, 88.0995, -47.8974, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 88/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -95.6563, 87.5304, -47.3749, 0.28 ) }
    dend_4 { pt3dadd( -95.3545, 85.7175, -47.1098, 0.28 ) }
    dend_4 { pt3dadd( -95.2207, 84.9137, -46.9923, 0.55 ) }
    dend_4 { pt3dadd( -94.8403, 82.6288, -46.6583, 0.28 ) }
    // Section: dend_85, id: dend_85, parent: dend_69 (entry count 92/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 3.3033, 79.3132, 35.946, 0.55 ) }
    dend_85 { pt3dadd( 5.9511, 86.5876, 42.8939, 0.55 ) }
    dend_85 { pt3dadd( 10.0848, 93.7734, 49.2016, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 95/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 3.3033, 79.3132, 35.946, 0.55 ) }
    dend_70 { pt3dadd( 6.26406, 86.6082, 42.7676, 0.55 ) }
    dend_70 { pt3dadd( 9.22509, 93.084, 50.299, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.0981, 78.2114, 38.7079, 0.55 ) }
    dend_66 { pt3dadd( -13.4361, 85.0223, 46.856, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( -15.3794, 90.4829, 56.2715, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 1/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -10.0981, 78.2114, 38.7079, 0.55 ) }
    dend_63 { pt3dadd( -12.7853, 83.175, 44.5965, 0.55 ) }
    dend_63 { pt3dadd( -15.056, 87.3887, 51.1513, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 4/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 47.6109, 76.4475, 13.2277, 0.83 ) }
    dend_53 { pt3dadd( 50.5892, 77.687, 13.7632, 0.83 ) }
    dend_53 { pt3dadd( 52.4086, 78.525, 14.1787, 0.55 ) }
    dend_53 { pt3dadd( 54.8357, 79.5835, 14.7802, 0.83 ) }
    dend_53 { pt3dadd( 58.2747, 81.0141, 16.0641, 0.83 ) }
    dend_53 { pt3dadd( 60.2577, 81.8032, 16.9423, 0.55 ) }
    dend_53 { pt3dadd( 63.2349, 83.0023, 18.3747, 0.83 ) }
    dend_53 { pt3dadd( 65.2859, 83.8536, 19.4681, 0.83 ) }
    dend_53 { pt3dadd( 66.5419, 84.4128, 20.2852, 0.83 ) }
    dend_53 { pt3dadd( 70.2588, 86.0701, 23.2183, 0.83 ) }
    dend_53 { pt3dadd( 71.57, 86.7229, 24.3616, 0.55 ) }
    dend_53 { pt3dadd( 72.2325, 87.0913, 24.9567, 0.83 ) }
    dend_53 { pt3dadd( 73.0526, 87.5406, 25.6421, 0.55 ) }
    dend_53 { pt3dadd( 76.1625, 89.5666, 27.5885, 0.83 ) }
    dend_53 { pt3dadd( 79.0804, 91.6284, 29.0386, 0.83 ) }
    dend_53 { pt3dadd( 80.6575, 92.7851, 29.6435, 0.83 ) }
    dend_53 { pt3dadd( 82.4327, 94.1387, 30.2721, 0.83 ) }
    dend_53 { pt3dadd( 84.1681, 95.5582, 30.7155, 0.83 ) }
    dend_53 { pt3dadd( 89.76, 100.6, 31.6547, 0.83 ) }
    dend_53 { pt3dadd( 90.7279, 101.569, 31.716, 1.39 ) }
    dend_53 { pt3dadd( 92.9561, 103.915, 31.7021, 0.55 ) }
    dend_53 { pt3dadd( 94.9796, 106.0, 31.7795, 0.83 ) }
    dend_53 { pt3dadd( 98.1858, 109.359, 32.018, 0.83 ) }
    dend_53 { pt3dadd( 99.8046, 111.248, 32.201, 0.83 ) }
    dend_53 { pt3dadd( 100.697, 112.219, 32.4361, 0.28 ) }
    dend_53 { pt3dadd( 101.588, 112.828, 32.875, 0.28 ) }
    dend_53 { pt3dadd( 104.594, 113.399, 35.5147, 0.83 ) }
    dend_53 { pt3dadd( 105.721, 113.42, 36.7091, 0.28 ) }
    dend_53 { pt3dadd( 106.799, 113.334, 37.918, 0.83 ) }
    dend_53 { pt3dadd( 110.076, 112.803, 41.7847, 0.83 ) }
    dend_53 { pt3dadd( 111.508, 112.568, 43.4372, 0.55 ) }
    dend_53 { pt3dadd( 114.318, 112.111, 46.6574, 0.55 ) }
    dend_53 { pt3dadd( 115.435, 111.894, 47.8879, 0.55 ) }
    dend_53 { pt3dadd( 116.538, 111.653, 49.1585, 0.55 ) }
    dend_53 { pt3dadd( 118.41, 111.358, 51.4879, 0.55 ) }
    dend_53 { pt3dadd( 119.986, 111.435, 53.5065, 0.28 ) }
    dend_53 { pt3dadd( 128.152, 116.063, 60.2018, 0.28 ) }
    dend_53 { pt3dadd( 136.555, 120.638, 66.6322, 0.28 ) }
    dend_53 { pt3dadd( 144.071, 126.484, 73.2201, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 43/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 47.6109, 76.4475, 13.2277, 0.83 ) }
    dend_50 { pt3dadd( 47.3224, 77.8466, 14.6687, 0.83 ) }
    dend_50 { pt3dadd( 46.8717, 80.0326, 16.9202, 0.83 ) }
    dend_50 { pt3dadd( 46.4721, 81.9704, 18.916, 0.83 ) }
    dend_50 { pt3dadd( 45.7215, 85.6104, 22.665, 0.83 ) }
    dend_50 { pt3dadd( 45.3744, 87.2941, 24.3991, 0.83 ) }
    dend_50 { pt3dadd( 44.8394, 89.8886, 27.0713, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 50/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 185.189, 81.4142, -22.8238, 1.39 ) }
    dend_46 { pt3dadd( 188.67, 82.781, -22.6815, 1.39 ) }
    dend_46 { pt3dadd( 190.508, 83.597, -22.6021, 1.39 ) }
    dend_46 { pt3dadd( 192.904, 84.6837, -22.4783, 0.55 ) }
    dend_46 { pt3dadd( 198.378, 86.9746, -22.3256, 1.11 ) }
    dend_46 { pt3dadd( 204.169, 89.2915, -22.0091, 0.55 ) }
    dend_46 { pt3dadd( 207.586, 90.6001, -21.7693, 0.55 ) }
    dend_46 { pt3dadd( 209.519, 91.2593, -21.6348, 0.28 ) }
    dend_46 { pt3dadd( 211.049, 91.781, -21.5319, 0.28 ) }
    dend_46 { pt3dadd( 213.441, 92.6491, -21.1877, 0.83 ) }
    dend_46 { pt3dadd( 217.108, 93.9369, -20.4912, 0.28 ) }
    dend_46 { pt3dadd( 217.709, 94.1352, -20.4532, 0.55 ) }
    dend_46 { pt3dadd( 220.679, 95.1438, -20.0012, 0.28 ) }
    dend_46 { pt3dadd( 221.118, 95.2754, -19.9293, 0.83 ) }
    dend_46 { pt3dadd( 224.527, 96.6344, -19.2682, 0.28 ) }
    dend_46 { pt3dadd( 227.136, 98.1559, -18.4843, 1.94 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 185.189, 81.4142, -22.8238, 0.83 ) }
    dend_45 { pt3dadd( 187.359, 81.2738, -22.19, 0.83 ) }
    dend_45 { pt3dadd( 190.243, 80.8433, -21.3359, 0.28 ) }
    dend_45 { pt3dadd( 192.794, 80.2515, -20.5701, 0.83 ) }
    dend_45 { pt3dadd( 194.327, 79.6495, -20.1053, 0.55 ) }
    dend_45 { pt3dadd( 195.577, 78.938, -19.6637, 0.83 ) }
    dend_45 { pt3dadd( 196.413, 78.1795, -19.2712, 0.55 ) }
    dend_45 { pt3dadd( 196.934, 77.1316, -18.8736, 0.55 ) }
    dend_45 { pt3dadd( 197.126, 76.4104, -18.5504, 0.55 ) }
    dend_45 { pt3dadd( 197.462, 74.54, -17.8201, 0.83 ) }
    dend_45 { pt3dadd( 197.614, 72.9114, -17.1566, 0.55 ) }
    dend_45 { pt3dadd( 197.711, 70.0965, -15.9303, 0.28 ) }
    dend_45 { pt3dadd( 197.712, 68.6087, -15.2358, 0.28 ) }
    dend_45 { pt3dadd( 197.756, 66.0221, -13.8639, 1.39 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 80/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 50.5372, 95.4669, -44.8688, 0.55 ) }
    dend_38 { pt3dadd( 51.1269, 95.2912, -51.0167, 0.55 ) }
    dend_38 { pt3dadd( 51.2672, 95.2495, -52.4786, 1.66 ) }
    dend_38 { pt3dadd( 51.9148, 95.0566, -59.2295, 0.55 ) }
    dend_38 { pt3dadd( 52.2967, 94.9429, -63.2108, 1.39 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 85/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 50.5372, 95.4669, -44.8688, 0.55 ) }
    dend_37 { pt3dadd( 50.5811, 97.4099, -52.121, 0.55 ) }
    dend_37 { pt3dadd( 50.6262, 97.6632, -53.022, 2.22 ) }
    dend_37 { pt3dadd( 50.9872, 98.9092, -57.1055, 0.55 ) }
    dend_37 { pt3dadd( 51.187, 99.3702, -58.6616, 0.55 ) }
    dend_37 { pt3dadd( 51.3999, 99.6877, -59.7541, 1.66 ) }
    dend_37 { pt3dadd( 52.2939, 100.555, -62.9242, 0.28 ) }
    dend_37 { pt3dadd( 52.4099, 100.604, -63.1116, 0.55 ) }
    dend_37 { pt3dadd( 53.4158, 100.934, -64.4609, 0.28 ) }
    dend_37 { pt3dadd( 54.7986, 101.183, -65.4325, 1.94 ) }
    dend_37 { pt3dadd( 59.64, 101.093, -66.9169, 0.28 ) }
    dend_37 { pt3dadd( 61.5452, 100.714, -66.7695, 0.83 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 97/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 10.0848, 93.7734, 49.2016, 0.55 ) }
    dend_87 { pt3dadd( 15.9279, 101.228, 51.0045, 0.55 ) }
    dend_87 { pt3dadd( 22.044, 108.659, 51.5666, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_87 { pt3dadd( 27.4093, 116.575, 53.035, 0.55 ) }
    dend_87 { pt3dadd( 31.2972, 125.006, 55.8778, 0.55 ) }
    dend_87 { pt3dadd( 34.7618, 133.605, 58.8064, 0.55 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 3/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 10.0848, 93.7734, 49.2016, 0.55 ) }
    dend_86 { pt3dadd( 10.68, 102.347, 59.8921, 0.55 ) }
    // Section: dend_82, id: dend_82, parent: dend_70 (entry count 5/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 9.22509, 93.084, 50.299, 0.55 ) }
    dend_82 { pt3dadd( 12.2506, 100.168, 57.6923, 0.55 ) }
    dend_82 { pt3dadd( 15.5194, 105.202, 66.3857, 0.55 ) }
    dend_82 { pt3dadd( 18.9498, 111.415, 74.2966, 0.55 ) }
    dend_82 { pt3dadd( 22.6659, 117.321, 82.2942, 0.55 ) }
    dend_82 { pt3dadd( 25.6511, 123.689, 90.2681, 0.55 ) }
    dend_82 { pt3dadd( 29.3409, 129.472, 98.3577, 0.55 ) }
    dend_82 { pt3dadd( 34.332, 135.81, 105.313, 0.55 ) }
    dend_82 { pt3dadd( 38.6351, 140.974, 113.482, 0.55 ) }
    dend_82 { pt3dadd( 44.0157, 146.054, 121.05, 0.55 ) }
    dend_82 { pt3dadd( 49.4357, 151.368, 128.445, 0.55 ) }
    dend_82 { pt3dadd( 54.6322, 154.727, 136.937, 0.55 ) }
    dend_82 { pt3dadd( 61.6201, 157.734, 144.182, 0.55 ) }
    dend_82 { pt3dadd( 67.7803, 158.86, 152.546, 0.55 ) }
    dend_82 { pt3dadd( 73.9065, 160.685, 160.83, 0.55 ) }
    dend_82 { pt3dadd( 80.0988, 161.542, 169.196, 0.55 ) }
    dend_82 { pt3dadd( 85.7454, 162.542, 177.926, 0.55 ) }
    dend_82 { pt3dadd( 89.9234, 163.517, 187.444, 0.55 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 23/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 9.22509, 93.084, 50.299, 0.55 ) }
    dend_71 { pt3dadd( 12.6257, 101.204, 58.9671, 0.55 ) }
    dend_71 { pt3dadd( 14.9795, 109.946, 67.422, 0.55 ) }
    dend_71 { pt3dadd( 17.3987, 120.506, 73.699, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 27/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -15.3794, 90.4829, 56.2715, 0.55 ) }
    dend_68 { pt3dadd( -17.8035, 96.9906, 65.6429, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 29/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -15.3794, 90.4829, 56.2715, 0.55 ) }
    dend_67 { pt3dadd( -17.8493, 95.4725, 63.3695, 0.55 ) }
    dend_67 { pt3dadd( -21.1111, 98.9783, 70.9423, 0.55 ) }
    dend_67 { pt3dadd( -24.3732, 101.516, 78.8583, 0.55 ) }
    dend_67 { pt3dadd( -27.1819, 104.294, 86.8728, 0.55 ) }
    dend_67 { pt3dadd( -29.2456, 106.632, 95.2324, 0.55 ) }
    dend_67 { pt3dadd( -29.3444, 107.351, 104.102, 0.55 ) }
    dend_67 { pt3dadd( -30.1984, 107.75, 112.951, 0.55 ) }
    dend_67 { pt3dadd( -29.6278, 109.177, 121.721, 0.55 ) }
    dend_67 { pt3dadd( -28.4059, 110.169, 130.481, 0.55 ) }
    dend_67 { pt3dadd( -25.722, 112.799, 138.572, 0.55 ) }
    dend_67 { pt3dadd( -23.0591, 114.513, 146.895, 0.55 ) }
    dend_67 { pt3dadd( -19.3216, 116.216, 154.795, 0.55 ) }
    dend_67 { pt3dadd( -16.8231, 117.008, 163.3, 0.55 ) }
    dend_67 { pt3dadd( -14.5813, 119.068, 171.674, 0.55 ) }
    dend_67 { pt3dadd( -13.5423, 121.538, 180.182, 0.55 ) }
    dend_67 { pt3dadd( -12.2058, 123.772, 188.707, 0.55 ) }
    dend_67 { pt3dadd( -11.9149, 124.902, 197.532, 0.55 ) }
    dend_67 { pt3dadd( -12.9729, 125.395, 206.354, 0.55 ) }
    dend_67 { pt3dadd( -12.5637, 126.396, 215.189, 0.55 ) }
    dend_67 { pt3dadd( -12.1323, 126.78, 224.069, 0.55 ) }
    dend_67 { pt3dadd( -11.2344, 126.146, 232.907, 0.55 ) }
    dend_67 { pt3dadd( -11.6306, 124.148, 241.599, 0.55 ) }
    dend_67 { pt3dadd( -13.0239, 121.001, 249.871, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 53/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -15.056, 87.3887, 51.1513, 0.55 ) }
    dend_65 { pt3dadd( -17.591, 93.2338, 59.3285, 0.55 ) }
    dend_65 { pt3dadd( -19.8383, 98.1609, 68.1137, 0.55 ) }
    dend_65 { pt3dadd( -24.1397, 103.694, 75.7516, 0.55 ) }
    dend_65 { pt3dadd( -27.5273, 109.84, 83.4146, 0.55 ) }
    dend_65 { pt3dadd( -31.6489, 115.649, 90.9644, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 59/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -15.056, 87.3887, 51.1513, 0.55 ) }
    dend_64 { pt3dadd( -16.2556, 91.811, 57.4602, 0.55 ) }
    dend_64 { pt3dadd( -16.6143, 95.5392, 64.2534, 0.55 ) }
    dend_64 { pt3dadd( -17.0355, 100.396, 70.3563, 0.55 ) }
    dend_64 { pt3dadd( -16.7643, 106.129, 75.7178, 0.55 ) }
    dend_64 { pt3dadd( -16.688, 112.778, 80.0217, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 65/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 144.071, 126.484, 73.2201, 0.28 ) }
    dend_57 { pt3dadd( 148.965, 128.882, 75.9993, 0.28 ) }
    dend_57 { pt3dadd( 153.87, 130.788, 79.0912, 0.28 ) }
    dend_57 { pt3dadd( 158.111, 133.394, 82.6646, 0.28 ) }
    dend_57 { pt3dadd( 161.842, 137.046, 85.9587, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 144.071, 126.484, 73.2201, 0.28 ) }
    dend_54 { pt3dadd( 150.879, 130.389, 78.1095, 0.28 ) }
    dend_54 { pt3dadd( 156.424, 135.02, 83.9272, 0.28 ) }
    dend_54 { pt3dadd( 163.416, 139.552, 87.9941, 0.28 ) }
    dend_54 { pt3dadd( 170.243, 145.068, 91.1212, 0.28 ) }
    dend_54 { pt3dadd( 176.719, 151.565, 93.06, 0.28 ) }
    dend_54 { pt3dadd( 182.84, 158.056, 95.9373, 0.28 ) }
    dend_54 { pt3dadd( 188.948, 164.021, 99.7338, 0.28 ) }
    dend_54 { pt3dadd( 195.797, 170.036, 101.8, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 79/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 44.8394, 89.8886, 27.0713, 0.83 ) }
    dend_52 { pt3dadd( 44.6064, 95.3534, 26.7348, 0.83 ) }
    dend_52 { pt3dadd( 44.6966, 99.5828, 26.7217, 0.83 ) }
    dend_52 { pt3dadd( 44.8512, 101.662, 26.6625, 0.83 ) }
    dend_52 { pt3dadd( 45.1015, 104.628, 26.3894, 0.83 ) }
    dend_52 { pt3dadd( 45.4392, 107.676, 25.9201, 0.83 ) }
    dend_52 { pt3dadd( 46.0945, 112.94, 24.796, 0.83 ) }
    dend_52 { pt3dadd( 46.7632, 117.639, 23.3174, 0.83 ) }
    dend_52 { pt3dadd( 47.116, 120.647, 22.0316, 0.83 ) }
    dend_52 { pt3dadd( 47.5644, 124.035, 20.2885, 0.83 ) }
    dend_52 { pt3dadd( 48.0069, 127.483, 18.2348, 0.83 ) }
    dend_52 { pt3dadd( 48.4153, 131.316, 15.7749, 0.83 ) }
    dend_52 { pt3dadd( 48.7727, 134.971, 13.308, 0.83 ) }
    dend_52 { pt3dadd( 48.9465, 140.093, 9.83904, 0.83 ) }
    dend_52 { pt3dadd( 48.9496, 142.922, 8.09206, 0.28 ) }
    dend_52 { pt3dadd( 48.9212, 145.492, 6.64717, 0.83 ) }
    dend_52 { pt3dadd( 48.6898, 149.914, 4.33446, 0.83 ) }
    dend_52 { pt3dadd( 48.5908, 151.21, 3.74227, 0.55 ) }
    dend_52 { pt3dadd( 48.4327, 153.13, 3.04675, 0.55 ) }
    dend_52 { pt3dadd( 48.2835, 153.957, 2.78547, 0.55 ) }
    dend_52 { pt3dadd( 48.0856, 154.788, 2.53914, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_52 { pt3dadd( 47.6508, 156.929, 1.94121, 1.39 ) }
    dend_52 { pt3dadd( 47.0448, 159.722, 1.10353, 0.83 ) }
    dend_52 { pt3dadd( 46.7239, 161.337, 0.632633, 0.83 ) }
    dend_52 { pt3dadd( 46.4028, 163.427, 0.0655968, 0.55 ) }
    dend_52 { pt3dadd( 46.2851, 164.271, -0.157992, 0.55 ) }
    dend_52 { pt3dadd( 46.0967, 166.176, -0.627732, 0.83 ) }
    dend_52 { pt3dadd( 45.9929, 167.933, -1.02951, 0.83 ) }
    dend_52 { pt3dadd( 45.9493, 169.705, -1.34521, 0.28 ) }
    dend_52 { pt3dadd( 45.9349, 171.394, -1.59448, 0.28 ) }
    dend_52 { pt3dadd( 45.9227, 172.824, -1.78499, 0.83 ) }
    dend_52 { pt3dadd( 45.8667, 175.948, -2.18495, 0.28 ) }
    dend_52 { pt3dadd( 45.7623, 177.567, -2.40268, 0.83 ) }
    dend_52 { pt3dadd( 45.4869, 180.182, -2.93604, 0.28 ) }
    dend_52 { pt3dadd( 45.3408, 181.041, -3.12569, 0.83 ) }
    dend_52 { pt3dadd( 44.7931, 183.171, -3.66386, 0.28 ) }
    dend_52 { pt3dadd( 44.4341, 184.224, -3.96773, 0.55 ) }
    dend_52 { pt3dadd( 43.5055, 186.333, -4.68264, 1.66 ) }
    dend_52 { pt3dadd( 42.0051, 189.398, -5.83624, 0.55 ) }
    dend_52 { pt3dadd( 40.513, 192.256, -7.02498, 0.28 ) }
    dend_52 { pt3dadd( 39.9538, 193.302, -7.38445, 0.28 ) }
    dend_52 { pt3dadd( 39.4209, 194.322, -7.65732, 0.83 ) }
    dend_52 { pt3dadd( 38.5325, 196.082, -8.01414, 0.28 ) }
    dend_52 { pt3dadd( 38.0703, 197.162, -8.13887, 0.83 ) }
    dend_52 { pt3dadd( 37.5593, 198.459, -8.21373, 0.28 ) }
    dend_52 { pt3dadd( 36.7013, 200.568, -8.49565, 1.11 ) }
    dend_52 { pt3dadd( 36.3221, 201.491, -8.51352, 1.11 ) }
    dend_52 { pt3dadd( 36.0255, 202.274, -8.47256, 1.11 ) }
    dend_52 { pt3dadd( 35.1865, 204.464, -7.65022, 0.55 ) }
    dend_52 { pt3dadd( 34.7807, 205.618, -6.96548, 0.55 ) }
    dend_52 { pt3dadd( 34.4674, 206.511, -6.36764, 0.55 ) }
    dend_52 { pt3dadd( 33.4324, 209.514, -4.14058, 0.55 ) }
    dend_52 { pt3dadd( 33.0399, 210.621, -3.19566, 1.11 ) }
    dend_52 { pt3dadd( 31.2631, 215.519, 1.62569, 0.83 ) }
    dend_52 { pt3dadd( 30.5643, 217.534, 3.99086, 0.83 ) }
    dend_52 { pt3dadd( 30.2042, 227.654, 3.72642, 0.83 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 35/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 44.8394, 89.8886, 27.0713, 0.83 ) }
    dend_51 { pt3dadd( 44.5147, 92.4164, 32.1455, 0.83 ) }
    dend_51 { pt3dadd( 44.4145, 93.1965, 33.7113, 0.83 ) }
    dend_51 { pt3dadd( 44.3623, 93.6029, 34.5272, 0.83 ) }
    dend_51 { pt3dadd( 44.2251, 94.6704, 36.6701, 0.28 ) }
    dend_51 { pt3dadd( 44.133, 95.3879, 38.1104, 0.83 ) }
    dend_51 { pt3dadd( 42.3362, 99.0124, 47.7563, 0.83 ) }
    dend_51 { pt3dadd( 40.4102, 103.324, 57.1165, 0.83 ) }
    dend_51 { pt3dadd( 40.176, 108.873, 66.0638, 0.83 ) }
    dend_51 { pt3dadd( 40.9087, 112.955, 75.6762, 0.83 ) }
    dend_51 { pt3dadd( 40.5708, 115.294, 85.83, 0.83 ) }
    dend_51 { pt3dadd( 40.0356, 116.107, 96.1913, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 47/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 227.136, 98.1559, -18.4843, 0.55 ) }
    dend_48 { pt3dadd( 229.616, 98.9231, -18.2048, 0.55 ) }
    dend_48 { pt3dadd( 230.964, 99.416, -18.0327, 0.28 ) }
    dend_48 { pt3dadd( 231.767, 99.7288, -17.9211, 0.55 ) }
    dend_48 { pt3dadd( 233.262, 100.272, -17.7079, 0.28 ) }
    dend_48 { pt3dadd( 235.926, 101.189, -17.3564, 0.55 ) }
    dend_48 { pt3dadd( 237.032, 101.616, -17.3017, 0.55 ) }
    dend_48 { pt3dadd( 238.975, 102.454, -17.2837, 0.28 ) }
    dend_48 { pt3dadd( 241.256, 103.451, -17.2967, 0.55 ) }
    dend_48 { pt3dadd( 242.85, 104.188, -17.3149, 0.28 ) }
    dend_48 { pt3dadd( 244.407, 104.96, -17.2864, 0.83 ) }
    dend_48 { pt3dadd( 247.804, 106.78, -17.1738, 0.28 ) }
    dend_48 { pt3dadd( 249.511, 107.811, -17.0855, 0.83 ) }
    dend_48 { pt3dadd( 251.257, 108.909, -16.9583, 0.28 ) }
    dend_48 { pt3dadd( 252.661, 109.851, -16.7944, 0.55 ) }
    dend_48 { pt3dadd( 254.027, 110.806, -16.5998, 0.28 ) }
    dend_48 { pt3dadd( 255.197, 111.668, -16.4986, 0.55 ) }
    dend_48 { pt3dadd( 256.918, 112.789, -16.4742, 0.28 ) }
    dend_48 { pt3dadd( 257.655, 113.302, -16.6854, 0.83 ) }
    dend_48 { pt3dadd( 258.824, 114.02, -17.2254, 0.28 ) }
    dend_48 { pt3dadd( 260.122, 114.565, -18.0045, 0.83 ) }
    dend_48 { pt3dadd( 262.953, 115.653, -19.947, 0.28 ) }
    dend_48 { pt3dadd( 264.393, 116.039, -20.8089, 0.28 ) }
    dend_48 { pt3dadd( 265.941, 116.302, -21.7237, 0.83 ) }
    dend_48 { pt3dadd( 267.247, 116.42, -22.3726, 0.28 ) }
    dend_48 { pt3dadd( 270.419, 116.535, -23.8512, 1.11 ) }
    dend_48 { pt3dadd( 274.074, 116.423, -25.3592, 0.28 ) }
    dend_48 { pt3dadd( 277.522, 116.064, -26.7813, 0.83 ) }
    dend_48 { pt3dadd( 279.509, 115.776, -27.7436, 1.11 ) }
    dend_48 { pt3dadd( 283.345, 115.007, -29.9034, 0.55 ) }
    dend_48 { pt3dadd( 286.49, 114.429, -31.9462, 0.28 ) }
    dend_48 { pt3dadd( 287.301, 114.287, -32.5415, 0.55 ) }
    dend_48 { pt3dadd( 289.367, 113.86, -34.3487, 0.28 ) }
    dend_48 { pt3dadd( 290.0, 113.783, -34.9609, 0.83 ) }
    dend_48 { pt3dadd( 292.734, 113.531, -37.3102, 0.83 ) }
    dend_48 { pt3dadd( 294.286, 113.43, -38.5592, 0.83 ) }
    dend_48 { pt3dadd( 295.419, 113.331, -39.1358, 0.83 ) }
    dend_48 { pt3dadd( 298.182, 113.18, -40.0438, 0.28 ) }
    dend_48 { pt3dadd( 300.277, 113.195, -40.0202, 0.83 ) }
    dend_48 { pt3dadd( 302.617, 113.356, -39.452, 0.28 ) }
    dend_48 { pt3dadd( 304.888, 113.658, -38.4692, 1.39 ) }
    dend_48 { pt3dadd( 307.634, 114.275, -37.0328, 0.28 ) }
    dend_48 { pt3dadd( 309.156, 114.771, -36.1192, 0.55 ) }
    dend_48 { pt3dadd( 314.283, 116.945, -32.5027, 0.28 ) }
    dend_48 { pt3dadd( 315.141, 117.389, -31.8224, 0.28 ) }
    dend_48 { pt3dadd( 316.01, 117.947, -31.0447, 1.39 ) }
    dend_48 { pt3dadd( 317.824, 119.346, -29.0412, 0.28 ) }
    dend_48 { pt3dadd( 318.555, 120.076, -28.0997, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 95/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 227.136, 98.1559, -18.4843, 0.28 ) }
    dend_47 { pt3dadd( 227.373, 100.166, -19.3003, 0.28 ) }
    dend_47 { pt3dadd( 227.446, 100.371, -19.4943, 0.83 ) }
    dend_47 { pt3dadd( 227.952, 102.021, -21.1703, 0.28 ) }
    dend_47 { pt3dadd( 228.076, 102.557, -21.7036, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_47 { pt3dadd( 228.393, 104.574, -23.4283, 0.28 ) }
    dend_47 { pt3dadd( 228.454, 104.963, -23.7608, 0.83 ) }
    dend_47 { pt3dadd( 228.854, 107.012, -25.7273, 0.28 ) }
    dend_47 { pt3dadd( 229.031, 107.847, -26.653, 0.83 ) }
    dend_47 { pt3dadd( 229.25, 108.749, -27.8701, 0.28 ) }
    dend_47 { pt3dadd( 229.443, 109.856, -29.2943, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 52.2967, 94.9429, -63.2108, 0.28 ) }
    dend_42 { pt3dadd( 56.5176, 97.6102, -71.5375, 0.28 ) }
    dend_42 { pt3dadd( 58.079, 98.7245, -75.3097, 1.39 ) }
    dend_42 { pt3dadd( 58.9456, 99.343, -77.4035, 0.28 ) }
    dend_42 { pt3dadd( 60.9201, 100.752, -82.1737, 2.22 ) }
    dend_42 { pt3dadd( 61.8574, 101.421, -84.4382, 0.28 ) }
    dend_42 { pt3dadd( 63.0311, 102.258, -87.2738, 0.55 ) }
    dend_42 { pt3dadd( 65.28, 105.079, -93.5868, 1.39 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 14/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 52.2967, 94.9429, -63.2108, 0.28 ) }
    dend_39 { pt3dadd( 56.5935, 95.7719, -71.9401, 0.28 ) }
    dend_39 { pt3dadd( 57.0886, 95.8321, -72.8279, 0.28 ) }
    dend_39 { pt3dadd( 58.7335, 96.0675, -75.5923, 0.28 ) }
    dend_39 { pt3dadd( 60.1411, 96.2809, -77.7529, 2.77 ) }
    dend_39 { pt3dadd( 62.7764, 96.675, -81.2835, 0.28 ) }
    dend_39 { pt3dadd( 63.7063, 96.7957, -82.4079, 0.55 ) }
    dend_39 { pt3dadd( 66.0215, 97.0922, -84.2143, 0.55 ) }
    dend_39 { pt3dadd( 67.6049, 97.3312, -85.2161, 0.28 ) }
    dend_39 { pt3dadd( 69.1272, 97.5361, -85.8104, 2.22 ) }
    dend_39 { pt3dadd( 71.6517, 97.8235, -86.2721, 0.55 ) }
    dend_39 { pt3dadd( 72.6126, 97.919, -86.2934, 0.28 ) }
    dend_39 { pt3dadd( 73.3195, 98.0216, -86.3708, 0.28 ) }
    dend_39 { pt3dadd( 74.7456, 98.3419, -86.7974, 0.55 ) }
    dend_39 { pt3dadd( 75.3757, 98.5039, -87.1073, 0.28 ) }
    dend_39 { pt3dadd( 77.0428, 99.1165, -88.2039, 0.28 ) }
    dend_39 { pt3dadd( 77.2206, 99.1911, -88.3355, 0.28 ) }
    dend_39 { pt3dadd( 80.1997, 100.392, -90.6685, 1.66 ) }
    dend_39 { pt3dadd( 82.9455, 101.402, -92.8768, 0.28 ) }
    dend_39 { pt3dadd( 83.1232, 101.459, -93.0163, 0.83 ) }
    dend_39 { pt3dadd( 83.8982, 101.708, -93.611, 0.28 ) }
    dend_39 { pt3dadd( 85.5715, 102.23, -94.6845, 1.39 ) }
    dend_39 { pt3dadd( 87.7744, 102.693, -95.7336, 0.55 ) }
    dend_39 { pt3dadd( 88.5787, 102.734, -95.8857, 0.83 ) }
    dend_39 { pt3dadd( 90.4004, 102.602, -96.0412, 0.28 ) }
    dend_39 { pt3dadd( 91.934, 102.378, -96.3313, 0.83 ) }
    dend_39 { pt3dadd( 95.046, 101.709, -97.1185, 0.28 ) }
    dend_39 { pt3dadd( 96.3183, 101.409, -97.5947, 0.28 ) }
    dend_39 { pt3dadd( 98.4815, 100.753, -98.553, 0.55 ) }
    dend_39 { pt3dadd( 100.408, 100.105, -99.523, 2.49 ) }
    dend_39 { pt3dadd( 103.988, 98.8099, -101.466, 0.55 ) }
    dend_39 { pt3dadd( 104.751, 98.516, -101.932, 1.39 ) }
    dend_39 { pt3dadd( 107.491, 97.5102, -103.781, 0.55 ) }
    dend_39 { pt3dadd( 108.883, 97.0525, -104.704, 0.28 ) }
    dend_39 { pt3dadd( 110.566, 96.5158, -105.828, 0.55 ) }
    dend_39 { pt3dadd( 111.889, 96.1616, -106.688, 1.66 ) }
    dend_39 { pt3dadd( 114.305, 95.5447, -108.205, 0.55 ) }
    dend_39 { pt3dadd( 115.258, 95.3693, -108.8, 0.28 ) }
    dend_39 { pt3dadd( 115.685, 95.3169, -109.075, 0.28 ) }
    dend_39 { pt3dadd( 117.016, 95.2293, -110.035, 0.83 ) }
    dend_39 { pt3dadd( 119.609, 95.0365, -112.385, 0.28 ) }
    dend_39 { pt3dadd( 120.745, 94.9151, -113.508, 1.11 ) }
    dend_39 { pt3dadd( 122.042, 94.7187, -114.792, 0.28 ) }
    dend_39 { pt3dadd( 124.165, 94.3203, -116.903, 0.55 ) }
    dend_39 { pt3dadd( 126.238, 93.861, -118.848, 2.22 ) }
    dend_39 { pt3dadd( 129.81, 92.9737, -121.935, 0.55 ) }
    dend_39 { pt3dadd( 130.796, 92.7319, -122.728, 0.55 ) }
    dend_39 { pt3dadd( 131.87, 92.4626, -123.553, 0.55 ) }
    dend_39 { pt3dadd( 132.797, 92.2222, -124.173, 0.28 ) }
    dend_39 { pt3dadd( 134.842, 91.7735, -125.095, 0.83 ) }
    dend_39 { pt3dadd( 135.893, 91.5744, -125.482, 0.55 ) }
    dend_39 { pt3dadd( 136.78, 91.4694, -125.764, 0.28 ) }
    dend_39 { pt3dadd( 137.438, 91.4289, -126.055, 0.55 ) }
    dend_39 { pt3dadd( 138.394, 91.4073, -126.67, 0.28 ) }
    dend_39 { pt3dadd( 139.398, 91.3678, -127.464, 1.11 ) }
    dend_39 { pt3dadd( 142.824, 91.1934, -130.518, 0.55 ) }
    dend_39 { pt3dadd( 143.554, 91.1391, -131.227, 0.55 ) }
    dend_39 { pt3dadd( 143.778, 91.1118, -131.457, 0.83 ) }
    dend_39 { pt3dadd( 145.443, 90.8843, -133.288, 0.28 ) }
    dend_39 { pt3dadd( 146.102, 90.7849, -134.053, 0.28 ) }
    dend_39 { pt3dadd( 146.73, 90.7709, -134.761, 1.39 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 75/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 89.9234, 163.517, 187.444, 0.55 ) }
    dend_84 { pt3dadd( 100.744, 166.689, 192.237, 0.55 ) }
    dend_84 { pt3dadd( 110.752, 169.905, 198.516, 0.55 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 78/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 89.9234, 163.517, 187.444, 0.55 ) }
    dend_83 { pt3dadd( 92.2566, 166.789, 194.525, 0.55 ) }
    dend_83 { pt3dadd( 93.5416, 169.568, 202.041, 0.55 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 17.3987, 120.506, 73.699, 0.55 ) }
    dend_73 { pt3dadd( 22.4784, 126.905, 77.7272, 0.55 ) }
    dend_73 { pt3dadd( 26.2264, 133.709, 82.5026, 0.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 84/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 17.3987, 120.506, 73.699, 0.55 ) }
    dend_72 { pt3dadd( 17.2819, 129.678, 82.809, 0.55 ) }
    dend_72 { pt3dadd( 14.997, 137.322, 92.8347, 0.55 ) }
    dend_72 { pt3dadd( 13.0267, 142.811, 104.145, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 195.797, 170.036, 101.8, 0.28 ) }
    dend_56 { pt3dadd( 200.378, 174.11, 104.459, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 90/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 195.797, 170.036, 101.8, 0.28 ) }
    dend_55 { pt3dadd( 204.062, 176.287, 105.838, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 146.73, 90.7709, -134.761, 0.28 ) }
    dend_41 { pt3dadd( 150.998, 89.9942, -134.485, 0.28 ) }
    dend_41 { pt3dadd( 153.114, 89.6371, -134.477, 0.55 ) }
    dend_41 { pt3dadd( 155.779, 89.2823, -134.542, 0.28 ) }
    dend_41 { pt3dadd( 156.829, 89.1832, -134.582, 0.28 ) }
    dend_41 { pt3dadd( 159.992, 89.0745, -134.736, 1.11 ) }
    dend_41 { pt3dadd( 162.263, 89.1042, -134.88, 0.55 ) }
    dend_41 { pt3dadd( 163.561, 89.2702, -135.115, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_41 { pt3dadd( 165.289, 89.6268, -135.396, 0.28 ) }
    dend_41 { pt3dadd( 166.417, 89.957, -135.567, 0.83 ) }
    dend_41 { pt3dadd( 168.698, 90.7398, -135.618, 0.28 ) }
    dend_41 { pt3dadd( 169.89, 91.1821, -135.578, 0.55 ) }
    dend_41 { pt3dadd( 172.911, 92.4351, -135.422, 0.28 ) }
    dend_41 { pt3dadd( 176.755, 94.0763, -135.189, 1.11 ) }
    dend_41 { pt3dadd( 181.87, 96.2394, -134.776, 0.28 ) }
    dend_41 { pt3dadd( 186.229, 98.0243, -134.28, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 146.73, 90.7709, -134.761, 0.28 ) }
    dend_40 { pt3dadd( 147.995, 91.4393, -134.854, 0.28 ) }
    dend_40 { pt3dadd( 148.564, 91.7402, -134.896, 0.55 ) }
    dend_40 { pt3dadd( 149.933, 92.4634, -134.997, 0.28 ) }
    dend_40 { pt3dadd( 150.322, 92.6694, -135.025, 0.55 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 13/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 26.2264, 133.709, 82.5026, 0.55 ) }
    dend_77 { pt3dadd( 30.9761, 141.529, 85.2299, 0.55 ) }
    dend_77 { pt3dadd( 34.9051, 149.91, 87.6976, 0.55 ) }
    dend_77 { pt3dadd( 38.7118, 158.143, 90.738, 0.55 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 17/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 26.2264, 133.709, 82.5026, 0.55 ) }
    dend_74 { pt3dadd( 32.4915, 142.791, 89.8542, 0.55 ) }
    dend_74 { pt3dadd( 40.132, 152.277, 95.2211, 0.55 ) }
    dend_74 { pt3dadd( 45.5781, 162.995, 101.062, 0.55 ) }
    dend_74 { pt3dadd( 50.788, 173.113, 107.976, 0.55 ) }
    dend_74 { pt3dadd( 56.4908, 183.438, 114.209, 0.55 ) }
    dend_74 { pt3dadd( 64.4064, 192.66, 119.6, 0.55 ) }
    dend_74 { pt3dadd( 71.9506, 202.061, 125.226, 0.55 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 25/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 38.7118, 158.143, 90.738, 0.55 ) }
    dend_79 { pt3dadd( 43.6395, 165.118, 94.4852, 0.55 ) }
    dend_79 { pt3dadd( 48.993, 172.297, 97.1741, 0.55 ) }
    dend_79 { pt3dadd( 53.1712, 180.236, 99.9438, 0.55 ) }
    dend_79 { pt3dadd( 56.4971, 188.862, 101.809, 0.55 ) }
    dend_79 { pt3dadd( 60.6251, 197.297, 102.672, 0.55 ) }
    dend_79 { pt3dadd( 64.62, 205.705, 104.151, 0.55 ) }
    dend_79 { pt3dadd( 70.4236, 212.948, 105.385, 0.55 ) }
    dend_79 { pt3dadd( 75.9035, 219.936, 108.271, 0.55 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 34/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 38.7118, 158.143, 90.738, 0.55 ) }
    dend_78 { pt3dadd( 42.2811, 166.245, 92.7332, 0.55 ) }
    dend_78 { pt3dadd( 46.2213, 173.864, 95.6014, 0.55 ) }
    dend_78 { pt3dadd( 49.5025, 181.57, 98.9931, 0.55 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 71.9506, 202.061, 125.226, 0.55 ) }
    dend_76 { pt3dadd( 77.7748, 211.078, 130.291, 0.55 ) }
    dend_76 { pt3dadd( 85.3424, 219.6, 133.564, 0.55 ) }
    dend_76 { pt3dadd( 92.5207, 227.674, 138.357, 0.55 ) }
    dend_76 { pt3dadd( 99.0818, 235.899, 143.745, 0.55 ) }
    dend_76 { pt3dadd( 105.167, 244.162, 149.606, 0.55 ) }
    dend_76 { pt3dadd( 111.33, 252.329, 155.507, 0.55 ) }
    dend_76 { pt3dadd( 118.06, 261.005, 159.983, 0.55 ) }
    dend_76 { pt3dadd( 123.723, 270.898, 163.518, 0.55 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 47/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 71.9506, 202.061, 125.226, 0.55 ) }
    dend_75 { pt3dadd( 75.6399, 207.407, 128.969, 0.55 ) }
    dend_75 { pt3dadd( 80.1066, 211.424, 133.327, 0.55 ) }
    dend_75 { pt3dadd( 85.2474, 214.415, 137.686, 0.55 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 51/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 75.9035, 219.936, 108.271, 0.55 ) }
    dend_81 { pt3dadd( 77.9372, 231.21, 108.815, 0.55 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 75.9035, 219.936, 108.271, 0.55 ) }
    dend_80 { pt3dadd( 81.5022, 228.153, 111.009, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_15, dend_0, dend_58, dend_25, dend_19, dend_16, dend_10, dend_1, dend_60, dend_59, dend_33, dend_26, dend_23, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_2, dend_88, dend_61, dend_43, dend_34, dend_30, dend_27, dend_22, dend_21, dend_14, dend_13, dend_9, dend_8, dend_6, dend_3, dend_69, dend_62, dend_49, dend_44, dend_36, dend_35, dend_32, dend_31, dend_29, dend_28, dend_5, dend_4, dend_85, dend_70, dend_66, dend_63, dend_53, dend_50, dend_46, dend_45, dend_38, dend_37, dend_87, dend_86, dend_82, dend_71, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_52, dend_51, dend_48, dend_47, dend_42, dend_39, dend_84, dend_83, dend_73, dend_72, dend_56, dend_55, dend_41, dend_40, dend_77, dend_74, dend_79, dend_78, dend_76, dend_75, dend_81, dend_80]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_15, dend_0, dend_58, dend_25, dend_19, dend_16, dend_10, dend_1, dend_60, dend_59, dend_33, dend_26, dend_23, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_2, dend_88, dend_61, dend_43, dend_34, dend_30, dend_27, dend_22, dend_21, dend_14, dend_13, dend_9, dend_8, dend_6, dend_3, dend_69, dend_62, dend_49, dend_44, dend_36, dend_35, dend_32, dend_31, dend_29, dend_28, dend_5, dend_4, dend_85, dend_70, dend_66, dend_63, dend_53, dend_50, dend_46, dend_45, dend_38, dend_37, dend_87, dend_86, dend_82, dend_71, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_52, dend_51, dend_48, dend_47, dend_42, dend_39, dend_84, dend_83, dend_73, dend_72, dend_56, dend_55, dend_41, dend_40, dend_77, dend_74, dend_79, dend_78, dend_76, dend_75, dend_81, dend_80]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_24, dend_15, dend_0, axon_0, dend_58, dend_25, dend_19, dend_16, dend_10, dend_1, axon_1, dend_60, dend_59, dend_33, dend_26, dend_23, dend_20, dend_18, dend_17, dend_12, dend_11, dend_7, dend_2, dend_88, dend_61, dend_43, dend_34, dend_30, dend_27, dend_22, dend_21, dend_14, dend_13, dend_9, dend_8, dend_6, dend_3, dend_69, dend_62, dend_49, dend_44, dend_36, dend_35, dend_32, dend_31, dend_29, dend_28, dend_5, dend_4, dend_85, dend_70, dend_66, dend_63, dend_53, dend_50, dend_46, dend_45, dend_38, dend_37, dend_87, dend_86, dend_82, dend_71, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_52, dend_51, dend_48, dend_47, dend_42, dend_39, dend_84, dend_83, dend_73, dend_72, dend_56, dend_55, dend_41, dend_40, dend_77, dend_74, dend_79, dend_78, dend_76, dend_75, dend_81, dend_80]}
    ModelViewParmSubset_5 = new SectionList()
    dend_24 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_19 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_59 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_88 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_44 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_32 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_31 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_29 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_53 OneSecGrp_SectionRef_55.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_46 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_87 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_82 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_67 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_65 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_52 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_51 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_48 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_39 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_74 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_79 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_76 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_58 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_60 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_61 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_69 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_62 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_49 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_63 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_70 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_85 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_66 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_50 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_86 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_68 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_36 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_64 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_71 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_38 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_73 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_5 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_42 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_72 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_77 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_78 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_57 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_40 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_80 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_81 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_75 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_83 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_84 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_56 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_47 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_55 OneSecGrp_SectionRef_82.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_15, dend_0, dend_0, dend_0, axon_0, axon_0, dend_58, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_62, dend_62, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_4, dend_4, dend_4, dend_85, dend_85, dend_70, dend_70, dend_66, dend_66, dend_63, dend_63, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_84, dend_84, dend_83, dend_83, dend_73, dend_73, dend_72, dend_72, dend_72, dend_56, dend_55, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_81, dend_80]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_58 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_85 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_81 all.append()
    dend_80 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 3
    dend_59 nseg = 9
    dend_23 nseg = 3
    dend_20 nseg = 3
    dend_18 nseg = 9
    dend_17 nseg = 5
    dend_12 nseg = 3
    dend_11 nseg = 9
    dend_7 nseg = 7
    dend_2 nseg = 5
    dend_88 nseg = 5
    dend_21 nseg = 11
    dend_14 nseg = 3
    dend_13 nseg = 7
    dend_9 nseg = 5
    dend_8 nseg = 5
    dend_6 nseg = 3
    dend_44 nseg = 9
    dend_35 nseg = 5
    dend_32 nseg = 3
    dend_31 nseg = 5
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_53 nseg = 7
    dend_46 nseg = 3
    dend_87 nseg = 3
    dend_82 nseg = 9
    dend_67 nseg = 11
    dend_65 nseg = 3
    dend_54 nseg = 3
    dend_52 nseg = 7
    dend_51 nseg = 3
    dend_48 nseg = 5
    dend_39 nseg = 7
    dend_41 nseg = 3
    dend_74 nseg = 5
    dend_79 nseg = 3
    dend_76 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_SBC_4148f86d4f_0_0


