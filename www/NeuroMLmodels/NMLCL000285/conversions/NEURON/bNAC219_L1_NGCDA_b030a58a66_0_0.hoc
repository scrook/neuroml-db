// Cell: bNAC219_L1_NGCDA_b030a58a66_0_0
/*
{
  "id" : "bNAC219_L1_NGCDA_b030a58a66_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.48569, -6.90544, 0.0, 3.00414", "-2.31617, -6.1725, 0.0, 5.1666", "-2.14664, -5.43956, 0.0, 7.66052", "-1.97711, -4.70663, 0.0, 9.30052", "-1.80758, -3.97369, 0.0, 10.5298", "-1.63805, -3.24075, 0.0, 11.6445", "-1.46852, -2.50781, 0.0, 12.1344", "-1.29899, -1.77488, 0.0, 12.5209", "-1.12946, -1.04194, 0.0, 12.8728", "-0.959926, -0.309003, 0.0, 13.2248", "-0.790396, 0.423934, 0.0, 13.2522", "-0.620866, 1.15687, 0.0, 13.1027", "-0.451336, 1.88981, 0.0, 12.9579", "-0.281807, 2.62275, 0.0, 12.8305", "-0.112277, 3.35568, 0.0, 12.5604", "0.0572532, 4.08862, 0.0, 12.1963", "0.226783, 4.82156, 0.0, 11.554", "0.396313, 5.55449, 0.0, 10.4434", "0.565843, 6.28743, 0.0, 9.14943", "0.735373, 7.02037, 0.0, 6.97128", "0.904903, 7.75331, 0.0, 3.71762" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.94808, 0.484357, 6.09, 1.15", "-5.10974, 0.515554, 7.15336, 1.15", "-6.65317, 0.588465, 8.6138, 1.15", "-7.73599, 0.70613, 9.73977, 1.15", "-8.45846, 0.849006, 10.6161, 1.15", "-9.36546, 1.02838, 11.7162, 0.92", "-10.1209, 1.17778, 12.6325, 0.92", "-10.6242, 1.31634, 13.356, 0.92", "-11.2506, 1.51827, 14.3012, 0.92", "-11.841, 1.85931, 15.4476, 1.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999989780389625
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.43808, -5.98514, -9.43, 2.29", "-1.43808, -5.98514, -9.43, 2.29", "-1.73166, -6.45342, -10.7863, 2.29", "-2.00672, -6.89218, -12.0571, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999989780389625
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.35192, 3.96136, -9.58, 1.15", "5.35192, 3.96136, -9.58, 1.15", "6.28294, 4.96954, -10.2762, 1.15", "7.02408, 5.74003, -10.9364, 1.15", "7.58045, 6.30209, -11.5377, 1.38", "8.17825, 6.88183, -12.2998, 1.38", "8.75576, 7.45465, -13.1844, 1.15", "9.42672, 8.10866, -14.259, 1.15", "10.2349, 8.8705, -15.661, 1.15", "10.9952, 9.56131, -17.1148, 1.15", "11.7528, 10.2671, -18.8018, 0.92", "12.6093, 11.1039, -21.042, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999989780389625
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.86192, 5.86136, -1.91, 4.59", "2.86192, 5.86136, -1.91, 4.59", "3.24791, 7.03275, -2.57954, 4.36", "3.77417, 8.62978, -3.49237, 3.21", "4.11673, 9.66938, -4.08657, 2.52", "4.54585, 10.9716, -4.83092, 1.61", "4.86732, 11.9472, -5.38853, 1.61", "5.35211, 13.3813, -6.20326, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999989780389625
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.99808, 6.49786, 1.25, 3.21", "-3.99808, 6.49786, 1.25, 3.21", "-4.19898, 7.18723, 1.37775, 2.06", "-4.67454, 8.81912, 1.68014, 1.61", "-4.97434, 9.84781, 1.87077, 1.61", "-5.41065, 11.345, 2.14821, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999989780389625
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.904903, 7.75331, 0.0, 0.98723", "4.28518, 22.3675, 0.0, 0.98723", "7.66546, 36.9816, 0.0, 0.98723" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-11.841, 1.85931, 15.4476, 0.92", "-11.4798, 1.53342, 15.7263, 0.92", "-11.0632, 1.0803, 16.03, 0.69", "-10.6539, 0.51741, 16.3321, 0.69", "-10.3262, 0.0668431, 16.5739, 0.92", "-9.88839, -0.53513, 16.897, 0.69", "-9.50908, -1.0567, 17.177, 0.69", "-9.07854, -1.72105, 17.5293, 0.69", "-8.74913, -2.24632, 17.7533, 1.15" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-11.841, 1.85931, 15.4476, 0.92", "-11.2, 1.60135, 17.864, 0.92", "-10.3744, 1.26909, 20.9764, 0.69", "-9.48084, 0.909496, 24.3448, 0.69", "-8.68669, 0.589896, 27.3385, 0.69", "-8.22999, 0.406103, 29.0602, 0.69" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.00672, -6.89218, -12.0571, 1.38", "-1.02058, -7.54811, -12.6144, 1.38", "0.0434894, -8.25589, -13.2158, 1.38", "0.97033, -8.87238, -13.7397, 1.38", "1.90503, -9.49411, -14.268, 1.38", "2.99361, -10.2182, -14.8832, 1.38" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.00672, -6.89218, -12.0571, 0.92", "-2.97548, -6.05191, -13.7421, 0.92", "-4.02774, -4.24873, -16.2339, 0.69", "-4.4163, -3.58288, -17.1541, 0.69", "-5.09318, -2.42296, -18.757, 0.92", "-5.71891, -1.3507, -20.2387, 1.15", "-6.50897, 0.00315738, -22.1097, 1.15", "-6.84725, 1.38847, -23.8043, 0.92" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.6093, 11.1039, -21.042, 0.92", "12.8037, 10.3755, -22.1271, 0.92", "13.1126, 9.51392, -23.3274, 0.92", "13.4269, 8.72051, -24.4197, 0.92", "13.6959, 8.01028, -25.3824, 0.92", "13.9013, 7.46644, -26.1794, 0.92", "14.1235, 6.91295, -27.123, 0.92", "14.2971, 6.50868, -27.9702, 0.92", "14.5784, 6.19455, -29.0911, 0.92", "14.7202, 6.16113, -29.5339, 0.92", "15.1524, 6.22581, -30.6251, 0.92", "15.6365, 6.41103, -31.825, 0.92", "16.1816, 6.74876, -33.2439, 0.92", "16.5395, 7.01897, -34.2208, 0.92", "17.1284, 7.44896, -35.4697, 0.92", "18.1425, 8.04307, -37.2298, 0.92" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.6093, 11.1039, -21.042, 0.69", "12.2313, 10.4905, -21.4584, 0.69", "11.3813, 9.20635, -22.1866, 0.46", "10.4578, 8.09092, -22.9141, 0.46", "9.70913, 7.35461, -23.5386, 0.46", "8.92924, 6.69657, -24.2655, 0.46", "7.92517, 5.89946, -25.3413, 0.46", "6.87152, 5.17919, -26.6326, 0.46", "5.34015, 4.22528, -28.8093, 0.46", "4.35454, 3.61201, -30.521, 0.46", "3.39511, 3.01264, -32.658, 0.46", "2.75027, 2.57077, -34.7516, 0.46", "2.39051, 2.20094, -37.0079, 0.46", "2.30996, 1.93595, -38.9525, 0.46", "2.45403, 1.74265, -40.5044, 0.46", "2.70911, 1.56481, -41.9826, 0.46", "3.17133, 1.27976, -44.3249, 0.46", "3.64038, 0.935286, -46.7047, 0.46", "3.97409, 0.64993, -48.4999, 0.46", "4.37862, 0.25364, -51.1508, 0.46", "4.6256, -0.0143761, -53.3045, 0.46", "4.92407, -0.250782, -56.302, 0.46", "5.19213, -0.305767, -59.4306, 0.46", "5.3291, -0.175542, -61.2677, 0.46", "5.51849, 0.13685, -63.8648, 0.46", "5.81212, 0.780856, -67.3003, 0.46", "6.04111, 1.35963, -69.4314, 0.46", "6.19859, 1.80107, -70.5545, 0.46", "6.38388, 2.54496, -71.9506, 0.46" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.35211, 13.3813, -6.20326, 1.83", "5.46401, 14.512, -7.47628, 1.83", "5.53809, 15.2605, -8.31902, 1.61", "5.69745, 16.8709, -10.1321, 1.61" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.35211, 13.3813, -6.20326, 0.92", "6.18314, 14.8992, -6.02654, 0.92", "6.81341, 16.7825, -6.24743, 0.92", "7.01777, 17.9603, -6.4943, 0.69", "7.13859, 19.3835, -6.71594, 0.69", "7.22387, 21.2811, -6.97098, 0.69", "7.32935, 23.4058, -7.19479, 0.69", "7.32735, 24.9412, -7.41459, 0.69", "7.23568, 26.6952, -7.73709, 0.92", "7.08422, 28.5266, -8.05215, 1.15", "6.97549, 29.6441, -8.18053, 0.69", "6.8272, 30.753, -8.16043, 0.46", "6.68335, 32.6571, -7.86103, 0.46" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.41065, 11.345, 2.14821, 1.83", "-5.5284, 11.4889, 1.94674, 1.83", "-6.5023, 12.3823, 0.667848, 1.83", "-7.41599, 13.0865, -0.442597, 1.61", "-8.1369, 13.5915, -1.25101, 1.15", "-8.95121, 14.1618, -2.16415, 1.15", "-9.73097, 14.708, -3.03855, 1.15", "-10.6875, 15.3015, -4.02654, 1.15", "-11.5292, 15.7223, -4.75273, 1.38", "-12.8547, 16.2933, -5.74233, 1.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-5.41065, 11.345, 2.14821, 0.92", "-5.24969, 12.8765, 2.6292, 0.92", "-5.24891, 13.9269, 2.90303, 0.92", "-5.26826, 15.3201, 3.24061, 0.92", "-5.24949, 16.3285, 3.48279, 0.92", "-5.16596, 17.1463, 3.66479, 0.92", "-4.79981, 19.1092, 4.01967, 0.92", "-4.57928, 19.7609, 4.09882, 0.92", "-4.32718, 20.3955, 4.10129, 0.92", "-4.01249, 21.1877, 3.99024, 0.92", "-3.53114, 22.5509, 3.60553, 0.92", "-3.24138, 23.401, 3.19182, 0.92", "-3.06922, 23.8987, 2.89415, 0.92", "-2.91491, 24.7892, 2.3131, 0.92", "-2.89352, 25.7036, 1.69519, 0.69", "-2.9128, 26.7711, 0.978902, 0.69", "-2.92481, 27.7853, 0.253153, 0.69", "-2.82279, 28.68, -0.535784, 0.69", "-2.63678, 29.5203, -1.356, 0.69", "-2.40356, 30.0086, -1.8879, 0.69", "-1.90068, 30.6552, -2.64025, 0.46", "-0.981352, 31.3756, -3.64427, 0.46", "-0.0139523, 31.6732, -4.64691, 0.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.66546, 36.9816, 0.0, 0.480289", "11.0457, 51.5958, 0.0, 0.480289", "14.426, 66.21, 0.0, 0.480289" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-8.74913, -2.24632, 17.7533, 0.69", "-8.17265, -3.00502, 18.0693, 0.69", "-7.31061, -3.95268, 18.3799, 0.69", "-6.71224, -4.61048, 18.5955, 0.69", "-6.0671, -5.3197, 18.8279, 0.69", "-5.50363, -5.93914, 19.0309, 0.69", "-4.78953, -6.72418, 19.2882, 0.69", "-3.84804, -7.69566, 19.5534, 0.69" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-8.74913, -2.24632, 17.7533, 0.69", "-8.90812, -4.12204, 18.522, 0.69", "-8.93629, -5.24554, 18.9681, 0.69", "-8.86355, -6.46783, 19.4144, 0.69", "-8.71603, -7.94647, 19.9368, 0.69", "-8.61956, -9.2659, 20.409, 0.69", "-8.57728, -10.408, 20.7981, 0.69", "-8.53168, -11.5063, 21.1546, 0.69", "-8.55553, -12.7317, 21.5676, 0.69", "-8.6903, -14.2399, 22.1085, 0.69", "-8.88439, -15.6172, 22.6589, 0.69", "-9.17675, -16.9548, 23.2799, 0.69", "-9.59149, -18.1775, 23.981, 0.69", "-10.2977, -19.8265, 25.1117, 0.69", "-10.7602, -20.7472, 25.8093, 0.69", "-11.2971, -21.7194, 26.6347, 0.69", "-11.7351, -22.4852, 27.3805, 0.46", "-12.3605, -23.4356, 28.5148, 0.46", "-13.0963, -24.3667, 29.8394, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.99361, -10.2182, -14.8832, 0.92", "3.49806, -11.6753, -14.7661, 0.92", "3.93952, -13.0508, -14.5876, 0.92", "4.2232, -14.1053, -14.4256, 0.92", "4.4925, -15.1552, -14.2617, 0.92", "4.77634, -16.4378, -14.043, 0.92", "4.84996, -16.9497, -13.9526, 0.92", "4.87976, -17.9328, -13.7681, 0.92", "4.80174, -19.8548, -13.4049, 0.92", "4.65088, -21.3702, -13.1279, 0.92", "4.4722, -22.8201, -12.9527, 0.92", "4.2064, -24.5326, -12.7845, 1.15", "3.81328, -26.7251, -12.5967, 0.92", "3.64532, -27.5767, -12.5498, 0.92", "3.37394, -28.6739, -12.5096, 1.15", "2.86739, -30.4182, -12.5012, 0.92" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.99361, -10.2182, -14.8832, 0.69", "4.93826, -11.2945, -15.1542, 0.69", "6.83461, -12.3958, -15.6077, 0.69", "8.55912, -13.4973, -16.1804, 0.46", "10.3458, -14.7615, -16.9364, 0.46", "12.0475, -16.1027, -17.752, 0.46", "13.8305, -17.6518, -18.7685, 0.46", "14.8499, -18.7349, -19.6947, 0.46", "15.5112, -19.6309, -20.5981, 0.46", "16.0198, -20.4975, -21.5262, 0.46", "16.383, -21.3601, -22.3816, 0.46", "16.7838, -22.558, -23.5286, 0.46", "17.2512, -24.3576, -25.1656, 0.46", "17.5141, -25.5238, -26.2938, 0.46", "17.8288, -26.7647, -27.499, 0.46", "18.0893, -27.7419, -28.4649, 0.46" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.84725, 1.38847, -23.8043, 0.69", "-7.13377, 1.69316, -26.4501, 0.69", "-7.32103, 1.95103, -28.107, 0.69", "-7.48692, 2.1533, -29.2114, 0.69", "-7.74467, 2.35646, -30.4801, 0.69", "-7.98508, 2.49259, -31.4663, 0.69", "-8.23896, 2.60834, -32.4213, 0.69", "-8.84379, 2.74196, -34.0303, 0.69", "-9.29128, 2.80528, -35.0224, 0.69", "-10.0564, 2.83278, -36.5111, 0.69", "-10.8096, 2.76204, -37.7619, 0.69", "-11.486, 2.64394, -38.7627, 0.69", "-12.5001, 2.39426, -40.1116, 0.46", "-13.9577, 1.97123, -41.7303, 0.46", "-15.1594, 1.62125, -42.8846, 0.46", "-16.2437, 1.33593, -43.7957, 0.46", "-17.7414, 1.00392, -44.9852, 0.46", "-19.338, 0.653411, -46.1929, 0.46", "-21.6997, 0.154559, -47.9377, 0.23", "-22.7169, -0.0155756, -48.5973, 0.46", "-24.3067, -0.197787, -49.5939, 0.46", "-26.1646, -0.307316, -50.7621, 0.46" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.84725, 1.38847, -23.8043, 0.69", "-7.24994, 2.89446, -24.111, 0.69", "-7.68199, 4.04948, -24.4496, 0.69", "-8.07202, 5.08581, -24.7894, 0.69", "-8.65875, 6.64483, -25.3006, 0.69", "-9.43192, 8.69922, -25.9743, 0.69", "-9.83604, 9.77301, -26.3265, 0.46", "-10.6831, 11.75, -27.0947, 0.46", "-11.0161, 12.4505, -27.3984, 0.46" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "18.1425, 8.04307, -37.2298, 0.69", "18.4666, 9.32221, -37.5277, 0.69", "18.6749, 10.1444, -37.7192, 0.69", "18.9776, 11.3388, -37.9974, 0.69" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.1425, 8.04307, -37.2298, 0.69", "17.2797, 7.35919, -37.964, 0.69", "16.055, 6.24688, -38.676, 0.69", "15.3238, 5.4871, -39.1284, 0.69", "14.6609, 4.71807, -39.5679, 0.69", "13.7439, 3.57912, -40.2675, 0.46", "12.4669, 1.84903, -41.5758, 0.46", "12.1269, 1.29714, -41.9712, 0.23", "11.6862, 0.278931, -42.7098, 0.23", "11.5544, -0.105109, -43.0038, 0.23", "11.2793, -1.25293, -44.0803, 0.23", "11.0821, -2.56941, -45.6564, 0.23", "11.0133, -3.24765, -46.6361, 0.23", "10.9182, -3.88963, -47.5771, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.69745, 16.8709, -10.1321, 0.92", "6.46437, 17.6741, -10.1553, 0.92", "7.43011, 18.5992, -10.0391, 0.92", "8.17478, 19.3343, -9.86455, 0.92", "8.72376, 19.8812, -9.71476, 0.92", "9.58606, 20.7758, -9.46802, 1.15", "10.4348, 21.6622, -9.21637, 0.92", "10.9695, 22.1578, -9.03026, 1.15", "11.8237, 22.8759, -8.73919, 0.92", "12.4483, 23.3909, -8.61295, 0.92", "13.0819, 23.9796, -8.58338, 0.92", "13.3768, 24.2814, -8.64478, 0.92", "14.2862, 25.1931, -9.06271, 0.92", "14.9663, 25.8284, -9.55747, 0.92", "15.8304, 26.5169, -10.5187, 0.92", "16.3219, 26.8614, -11.1595, 1.15", "16.9984, 27.2929, -12.0969, 0.92", "17.5116, 27.6681, -12.8789, 1.15", "18.1076, 28.2093, -13.8936, 1.15", "19.0417, 29.1411, -15.4892, 0.69", "19.5347, 29.6298, -16.3082, 0.46", "19.7889, 29.8751, -16.7374, 0.46", "19.2587, 31.0193, -16.1253, 0.46", "18.5986, 32.1159, -15.4527, 0.23", "17.937, 33.1568, -14.7618, 0.23", "17.6461, 33.5528, -14.451, 0.23", "16.8396, 34.4299, -13.6674, 0.23", "16.3573, 34.8646, -13.2067, 0.23", "15.558, 35.4105, -12.3808, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.69745, 16.8709, -10.1321, 1.15", "6.13785, 18.0524, -11.1072, 1.15", "6.6639, 19.4447, -11.9821, 1.15", "7.26771, 21.014, -12.6685, 1.15", "7.94325, 22.7471, -13.3515, 0.92", "8.25103, 23.5042, -13.6899, 1.15", "8.84623, 24.9476, -14.524, 1.15", "9.22693, 25.8087, -15.2252, 1.15", "9.62313, 26.8708, -16.303, 1.15", "10.02, 28.0865, -17.7541, 1.15", "10.28, 28.976, -19.1444, 1.15", "10.5477, 30.0251, -21.3404, 1.15", "10.7253, 30.8914, -23.7583, 1.15", "10.7563, 31.1724, -24.8755, 1.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.8547, 16.2933, -5.74233, 0.92", "-13.4591, 17.1487, -4.88254, 0.92", "-14.366, 18.0092, -3.84454, 0.92", "-15.2928, 18.5597, -2.92369, 0.92", "-16.2467, 18.8642, -2.09963, 0.92", "-17.2332, 18.9206, -1.2889, 0.92", "-18.2058, 18.7675, -0.460968, 0.92", "-19.066, 18.3295, 0.155429, 1.15", "-19.6911, 17.8945, 0.546301, 1.15", "-20.2045, 17.5026, 0.836291, 0.92", "-21.1706, 16.7304, 1.36661, 0.92", "-21.9966, 16.1107, 1.81632, 0.92", "-22.7013, 15.6564, 2.17843, 0.92", "-23.977, 14.9707, 2.73755, 1.15", "-24.9466, 14.5292, 3.09419, 1.15", "-25.9678, 14.1558, 3.39567, 0.92", "-27.4427, 13.7577, 3.71759, 0.92", "-28.9941, 13.4984, 3.97446, 0.92", "-30.0619, 13.444, 4.11346, 0.92", "-30.9802, 13.5292, 4.1412, 1.15", "-31.986, 13.8146, 4.01438, 1.15", "-32.3383, 14.0225, 3.88282, 1.15", "-33.0929, 14.7045, 3.36838, 0.92", "-33.7249, 15.4891, 2.77223, 0.69", "-34.1844, 16.1598, 2.26622, 0.69", "-34.667, 16.9471, 1.64334, 0.69", "-35.1092, 17.6948, 1.01845, 0.46", "-35.4339, 18.2596, 0.497278, 0.46", "-35.8539, 18.9852, -0.296897, 0.46" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.8547, 16.2933, -5.74233, 0.92", "-13.1594, 17.2575, -6.80806, 0.92", "-13.3923, 18.1636, -7.79509, 0.92", "-13.6222, 18.8404, -8.57613, 0.92", "-13.9048, 19.5312, -9.4201, 0.92", "-14.2209, 20.1239, -10.2559, 0.92", "-14.4894, 20.5339, -10.9274, 0.92", "-15.122, 21.3779, -12.4375, 0.92", "-15.5344, 21.7538, -13.1612, 0.92", "-15.7864, 21.9042, -13.5008, 1.15", "-16.6785, 22.3361, -14.5226, 1.15", "-17.4439, 22.699, -15.34, 1.15", "-18.2977, 23.132, -16.2667, 1.15", "-19.3893, 23.8658, -17.4746, 0.92", "-20.0987, 24.5162, -18.3121, 0.92", "-20.6952, 25.1333, -18.9726, 0.92", "-21.3735, 25.8459, -19.6141, 0.69", "-22.0017, 26.4614, -20.1426, 0.69", "-22.8587, 27.2122, -20.8423, 0.69", "-23.693, 27.9116, -21.5621, 0.69", "-24.8106, 28.8928, -22.3638, 0.69", "-25.8477, 29.8112, -22.9603, 0.92", "-26.9839, 30.8434, -23.4284, 1.15", "-28.086, 31.8818, -23.7083, 1.15", "-29.1544, 32.9619, -23.7307, 0.92", "-30.7228, 35.0344, -23.1302, 0.69", "-31.2473, 36.0601, -22.4033, 0.69", "-31.4561, 36.7411, -21.572, 0.69", "-31.5479, 37.1965, -20.8475, 0.69", "-31.6208, 37.8403, -19.548, 0.69", "-31.6544, 38.1149, -18.7775, 0.69", "-31.8034, 38.3449, -17.519, 0.69", "-31.9326, 38.3823, -16.3554, 0.69" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "2.86739, -30.4182, -12.5012, 0.69", "3.14333, -31.9861, -9.12493, 0.69", "3.30632, -33.1559, -6.98631, 0.69", "3.4491, -34.1838, -5.47255, 0.69", "3.61844, -35.2345, -4.19374, 0.69", "3.79624, -36.1252, -3.14134, 0.69", "3.87462, -36.5268, -2.6569, 0.69", "4.03323, -37.1859, -1.96237, 0.69", "4.38418, -38.3574, -0.819342, 0.46", "5.01346, -39.8215, 0.568749, 0.69", "6.11367, -41.6518, 2.35127, 0.69", "6.88734, -42.715, 3.35843, 0.69", "7.42614, -43.4082, 4.0208, 0.69", "8.25231, -44.374, 5.0037, 0.69", "9.39649, -45.66, 6.38343, 0.46", "10.0348, -46.3993, 7.27879, 0.46", "10.8476, -47.3518, 8.34274, 0.46", "11.7004, -48.3727, 9.50875, 0.46", "12.5209, -49.5196, 10.9936, 0.46", "13.2421, -50.756, 12.9966, 0.46", "13.829, -52.1195, 15.7628, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.86739, -30.4182, -12.5012, 0.69", "2.72101, -30.9294, -13.175, 0.69", "2.57382, -31.5261, -13.8507, 0.69", "2.49156, -32.1014, -14.4422, 0.69", "2.47112, -32.5245, -14.8627, 0.69", "2.48909, -32.9173, -15.227, 0.69", "2.53188, -33.5873, -15.7898, 0.69", "2.61036, -34.1891, -16.2081, 0.69", "2.71268, -34.7311, -16.4882, 0.69", "2.78651, -35.0817, -16.6503, 0.69", "2.93967, -35.5734, -16.8671, 0.69", "3.20569, -36.2867, -17.2299, 0.69", "3.34407, -36.6523, -17.4361, 0.69", "3.56155, -37.4147, -17.8793, 0.69", "3.66726, -38.0589, -18.2719, 0.69", "3.73006, -38.8517, -18.7652, 0.92", "3.75327, -39.6436, -19.2713, 0.92", "3.74998, -39.9513, -19.4653, 0.69", "3.67276, -40.6199, -19.8588, 0.69", "3.4633, -41.3564, -20.2227, 0.69", "3.32225, -41.6852, -20.3608, 0.69", "3.1668, -41.9646, -20.4769, 0.69", "2.87127, -42.429, -20.6282, 0.69", "2.69916, -42.6782, -20.7262, 0.69", "2.26064, -43.3298, -21.0622, 1.15", "1.83535, -44.0113, -21.4298, 0.92", "1.46174, -44.6489, -21.725, 0.92", "1.02914, -45.3838, -22.0042, 0.92", "0.369824, -46.541, -22.3201, 0.92", "-0.167059, -47.5216, -22.4872, 0.69", "-0.684133, -48.4532, -22.5428, 0.69", "-1.3932, -49.7546, -22.4814, 0.23", "-1.79693, -50.4781, -22.3957, 0.46", "-2.33991, -51.4474, -22.2037, 0.23", "-2.82593, -52.2817, -21.9703, 0.46", "-3.51876, -53.4021, -21.6022, 0.23", "-4.16591, -54.4045, -21.2811, 0.23", "-4.75549, -55.3505, -20.9715, 0.23", "-5.26378, -56.1998, -20.6852, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "18.0893, -27.7419, -28.4649, 0.23", "16.0878, -28.5097, -28.7538, 0.23", "14.4817, -29.1259, -28.9855, 0.23", "13.311, -29.575, -29.1545, 0.23", "11.5382, -30.2551, -29.4103, 0.23", "9.53965, -31.0219, -29.6988, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "18.0893, -27.7419, -28.4649, 0.46", "19.0979, -28.1768, -29.2368, 0.46", "19.9355, -28.538, -29.8779, 0.46", "20.4302, -28.7513, -30.2565, 0.46", "21.52, -29.2213, -31.0906, 0.69", "22.7758, -29.7628, -32.0517, 0.46" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "18.9776, 11.3388, -37.9974, 0.46", "19.9979, 11.5642, -37.6952, 0.46", "21.399, 11.979, -37.355, 0.46", "22.8924, 12.5779, -37.0697, 0.46", "23.9781, 13.1152, -36.9765, 0.46", "25.5669, 13.9308, -36.9223, 0.46", "27.7971, 15.0483, -36.9146, 0.69", "28.749, 15.5435, -36.9885, 0.46", "30.5015, 16.4958, -37.3248, 0.69", "32.3872, 17.4555, -37.9493, 0.46", "33.1824, 17.7759, -38.2664, 0.46", "33.8397, 17.9123, -38.5599, 0.46", "34.8453, 17.962, -39.0663, 0.46", "36.344, 17.9234, -39.8301, 0.69", "37.5153, 17.8443, -40.4578, 0.69", "39.2455, 17.7674, -41.4724, 0.46", "40.8182, 17.7829, -42.5467, 0.46", "42.1468, 17.8306, -43.5283, 0.46", "42.9985, 17.8974, -44.1676, 0.46", "44.0546, 17.9818, -45.0232, 0.46", "45.2775, 18.1327, -46.0519, 0.46", "45.9461, 18.2877, -46.7064, 0.46", "46.6099, 18.5416, -47.3433, 0.46", "47.5733, 18.8862, -48.1707, 0.46", "48.4548, 19.2195, -48.8358, 0.46", "49.3133, 19.5357, -49.4163, 0.46", "50.566, 19.9663, -50.1999, 0.46", "51.476, 20.2945, -50.7855, 0.46", "52.4379, 20.6714, -51.4656, 0.46", "53.6459, 21.0753, -52.3541, 0.46", "54.7154, 21.4582, -53.1521, 0.46", "55.7382, 21.8526, -53.9772, 0.46", "56.5501, 22.1786, -54.6515, 0.46", "57.7018, 22.6833, -55.6558, 0.46", "58.7389, 23.1911, -56.5717, 0.46", "60.0552, 23.7905, -57.5941, 0.46", "61.1815, 24.3159, -58.3409, 0.46", "62.1193, 24.7707, -58.9354, 0.46", "63.3762, 25.3783, -59.69, 0.46", "64.0469, 25.6863, -60.0517, 0.46", "66.3787, 26.7851, -61.3798, 0.46", "67.4666, 27.2751, -62.1531, 0.46", "68.5519, 27.845, -63.2256, 0.46", "69.1777, 28.2303, -64.0529, 0.46", "69.5164, 28.4649, -64.6018, 0.46", "70.2429, 28.9386, -65.8791, 0.46", "71.4281, 29.6606, -68.0364, 0.46", "72.2718, 29.9988, -69.3778, 0.46", "72.7466, 30.1188, -69.9933, 0.46", "73.4344, 30.2464, -70.802, 0.46", "74.0317, 30.3284, -71.4843, 0.46", "74.6613, 30.3433, -72.1619, 0.46", "75.5009, 30.2019, -73.1164, 0.46", "76.9085, 29.6776, -74.7003, 0.46", "78.043, 28.9697, -76.0825, 0.46", "78.8567, 28.2257, -77.0829, 0.69", "79.6454, 27.2746, -78.0385, 0.69", "80.4579, 26.061, -79.0167, 0.69", "81.5298, 24.3278, -80.182, 0.46", "82.2047, 23.2366, -80.7779, 0.46", "83.0896, 22.0392, -81.3375, 0.46", "83.819, 21.1277, -81.7124, 0.46", "84.6463, 20.2332, -82.0788, 0.23", "85.9599, 19.1912, -82.6846, 0.23", "87.1171, 18.5755, -83.394, 0.23", "88.4708, 18.1495, -84.1886, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "18.9776, 11.3388, -37.9974, 0.46", "19.477, 12.5432, -38.9687, 0.46", "19.9185, 13.54, -39.7752, 0.46", "20.8195, 15.3473, -41.2866, 0.46", "22.0481, 17.6085, -43.2234, 0.46", "22.9982, 19.3901, -44.8734, 0.46", "23.8413, 21.1331, -46.515, 0.46", "24.4361, 22.4456, -47.9544, 0.46", "24.7688, 23.2438, -48.9122, 0.46", "25.2575, 24.5597, -50.5683, 0.23", "25.7298, 25.8905, -52.287, 0.23", "26.0162, 27.1159, -53.8196, 0.23", "26.4478, 29.7947, -57.2723, 0.23", "26.523, 30.7767, -58.6674, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.7563, 31.1724, -24.8755, 1.15", "10.2717, 31.4538, -26.6676, 1.15", "10.1417, 31.6127, -27.5041, 0.92", "10.0378, 31.9172, -28.986, 0.92", "10.0118, 32.1671, -30.1483, 1.15", "10.033, 32.5152, -31.697, 0.92", "10.0872, 32.8945, -33.2325, 1.15", "10.1944, 33.3229, -34.7501, 1.15", "10.3103, 33.6303, -35.6499, 1.15", "10.5325, 34.2047, -37.0624, 1.15", "10.7283, 34.7054, -38.185, 1.15", "10.8393, 35.0691, -38.9153, 1.15", "11.0009, 35.7345, -40.1488, 0.92", "11.1568, 36.4177, -41.3732, 0.92", "11.3215, 36.9732, -42.3095, 0.92", "11.5276, 37.5046, -43.1335, 0.92", "11.6846, 37.8693, -43.6873, 0.92", "11.9798, 38.4958, -44.7327, 0.92", "12.1605, 38.835, -45.389, 0.92", "12.3937, 39.3085, -46.6754, 0.92", "12.4397, 39.4276, -47.1233, 0.92", "12.3997, 39.6022, -48.104, 0.92", "12.1629, 39.7771, -49.1685, 0.92", "11.9087, 39.9091, -49.9234, 0.92", "11.6175, 40.0886, -50.829, 0.92", "11.4691, 40.1972, -51.3629, 0.92", "11.3827, 40.3828, -52.0471, 0.92", "11.4956, 40.8805, -53.2561, 0.92", "11.7172, 41.3373, -54.0282, 0.92", "12.0221, 41.9934, -55.0377, 0.92", "12.1679, 42.302, -55.5175, 0.92", "12.2661, 42.6457, -56.0167, 0.92", "12.2586, 42.9275, -56.4136, 0.92", "12.141, 43.1853, -56.8193, 0.69", "11.4539, 43.9045, -58.1645, 0.69", "11.0619, 44.1476, -58.7608, 0.69", "10.1641, 44.4552, -59.9803, 0.69", "9.56131, 44.4972, -60.7092, 0.69", "9.13074, 44.4265, -61.2005, 0.69", "8.4067, 44.1838, -62.0124, 0.69", "7.7598, 43.8553, -62.609, 0.69", "7.19149, 43.4816, -62.9955, 0.69", "6.41182, 42.891, -63.367, 0.69", "5.90403, 42.4903, -63.5506, 0.69", "5.28852, 41.9928, -63.7363, 0.69", "4.20456, 41.0796, -64.0114, 0.69", "3.14515, 40.1329, -64.3303, 0.69", "2.29377, 39.3676, -64.6194, 0.69", "1.62436, 38.749, -64.8881, 0.69", "0.948061, 38.1218, -65.1858, 0.69", "0.203256, 37.4627, -65.593, 0.69", "-0.536554, 36.8645, -66.1446, 0.69", "-1.32433, 36.3326, -66.8013, 0.69", "-1.94231, 35.9732, -67.3463, 0.69", "-2.51243, 35.6984, -67.8663, 0.69", "-3.57432, 35.26, -68.8757, 0.69", "-4.41251, 34.9294, -69.7878, 0.69", "-4.85398, 34.7302, -70.2891, 0.69", "-5.67597, 34.2646, -71.3126, 0.69", "-6.21589, 33.8976, -72.0708, 0.69", "-6.48306, 33.6621, -72.5413, 0.92", "-6.93211, 33.1726, -73.4523, 0.92", "-7.58373, 32.4218, -74.8512, 0.92", "-8.13121, 31.7699, -76.0847, 0.69", "-8.62071, 31.211, -77.184, 0.69", "-9.33644, 30.4926, -78.7335, 0.69", "-9.79234, 30.1037, -79.6611, 0.69", "-10.2925, 29.8301, -80.4826, 0.69", "-10.886, 29.6885, -81.2749, 0.69", "-11.3272, 29.6962, -81.6794, 0.69", "-11.9083, 29.7524, -82.0848, 0.69", "-12.7667, 29.8293, -82.5882, 0.69", "-14.0671, 29.8792, -83.3197, 0.46", "-14.8532, 29.8424, -83.7627, 0.46", "-16.1058, 29.7105, -84.508, 0.46", "-16.7455, 29.6144, -84.9391, 0.46", "-17.25, 29.5339, -85.3042, 0.46", "-18.1185, 29.3966, -86.0188, 0.46", "-19.241, 29.122, -87.0845, 0.46", "-19.8299, 28.8962, -87.7407, 0.46", "-20.3314, 28.6524, -88.4116, 0.46", "-20.8039, 28.4408, -89.0932, 0.46", "-21.5237, 28.163, -89.9897, 0.46", "-22.1674, 27.8808, -90.7508, 0.46", "-22.9608, 27.4833, -91.5479, 0.46", "-23.6688, 27.088, -92.0716, 0.46", "-24.5433, 26.5502, -92.5113, 0.46", "-26.4138, 25.4826, -93.1759, 0.46", "-27.3525, 24.9877, -93.4566, 0.46", "-27.8596, 24.7252, -93.6228, 0.46", "-28.7172, 24.3138, -93.9355, 0.46", "-29.9651, 23.6647, -94.5256, 0.46", "-30.7326, 23.2649, -95.0331, 0.46", "-31.9135, 22.7242, -96.055, 0.46", "-32.6312, 22.4793, -96.7189, 0.46", "-33.5678, 22.2369, -97.6719, 0.46", "-34.5787, 22.0582, -98.8359, 0.46", "-35.0724, 22.0201, -99.528, 0.46", "-35.6123, 22.0291, -100.416, 0.46", "-36.3155, 22.1819, -101.749, 0.46", "-36.7118, 22.3477, -102.754, 0.46", "-36.8933, 22.508, -103.549, 0.46", "-37.2326, 22.9766, -105.489, 0.46", "-37.4498, 23.3972, -107.186, 0.46", "-37.4998, 23.6376, -108.124, 0.46", "-37.4417, 24.0191, -109.57, 0.46", "-37.2574, 24.4695, -111.293, 0.46" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "10.7563, 31.1724, -24.8755, 1.38", "11.0284, 31.5138, -26.2676, 1.38", "11.5854, 32.2127, -29.1172, 1.38", "11.9613, 32.6844, -31.0405, 1.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.9613, 32.6844, -31.0405, 0.46", "13.0929, 33.9553, -32.0249, 0.46", "14.2577, 35.2907, -33.107, 0.46", "14.4393, 35.5351, -33.3027, 0.46", "15.1352, 36.5929, -34.1198, 0.46", "15.6849, 37.4616, -34.7734, 0.46", "16.2692, 38.3918, -35.529, 0.46", "16.7108, 39.1548, -36.1869, 0.46", "17.3652, 40.1857, -37.2056, 0.46", "17.6314, 40.5107, -37.5745, 0.69", "18.4362, 41.3225, -38.4738, 0.69", "19.482, 42.2016, -39.4201, 0.69", "20.3917, 42.836, -40.014, 0.46", "21.7582, 43.5818, -40.5512, 0.46", "23.1932, 44.271, -40.771, 0.46", "25.0985, 45.124, -40.8785, 0.46", "25.9214, 45.4827, -40.774, 0.69", "26.726, 45.8447, -40.5102, 0.69", "27.843, 46.3795, -39.9248, 0.23", "28.8578, 46.9931, -39.1284, 0.23" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "11.9613, 32.6844, -31.0405, 0.69", "12.8648, 32.5339, -31.1304, 0.69", "14.2657, 32.3323, -31.3251, 0.69", "15.1867, 32.2259, -31.4757, 0.69", "16.3891, 32.1237, -31.6812, 0.69", "16.8732, 32.1003, -31.8013, 1.15", "17.2266, 32.1004, -31.9294, 0.92", "18.2331, 32.2612, -32.5633, 0.92", "18.5257, 32.3569, -32.8069, 0.92", "18.7687, 32.451, -33.0612, 0.92", "19.6217, 32.8433, -34.0313, 0.92", "20.3928, 33.2513, -34.9866, 0.69", "20.7699, 33.5267, -35.4969, 0.69", "21.2807, 34.0722, -36.2692, 0.69", "21.661, 34.5343, -36.8341, 0.69", "22.0037, 34.9474, -37.3165, 0.69", "22.4327, 35.3948, -37.8542, 0.69", "23.0009, 35.8754, -38.4651, 0.69", "23.6787, 36.34, -39.1196, 0.69", "24.5164, 36.7721, -39.875, 0.92", "25.3805, 37.0434, -40.5592, 0.69", "26.2864, 37.1774, -41.1939, 0.69", "27.3453, 37.2114, -41.7946, 0.92", "28.4785, 37.1092, -42.3174, 0.69", "30.0075, 36.849, -42.9115, 0.92", "31.1679, 36.5612, -43.3143, 0.92", "31.7119, 36.3959, -43.4771, 0.92", "32.815, 35.9997, -43.7616, 0.69", "34.4072, 35.3474, -44.0999, 0.69", "35.5763, 34.8448, -44.3229, 0.69", "36.8556, 34.2945, -44.5028, 0.69", "38.1638, 33.7505, -44.6533, 0.92", "39.1634, 33.3566, -44.7621, 0.69", "40.3209, 32.8904, -44.884, 0.92", "41.668, 32.3684, -44.9705, 0.46", "42.3665, 32.1049, -44.9973, 0.46", "43.1597, 31.8487, -45.0498, 0.46", "43.7339, 31.6941, -45.1593, 0.46", "44.5859, 31.5255, -45.4206, 0.46", "45.4454, 31.4018, -45.7929, 0.46", "45.9426, 31.354, -46.0293, 0.46", "46.5728, 31.3365, -46.4228, 0.69", "47.532, 31.3954, -47.1533, 0.69", "48.0264, 31.4617, -47.5551, 0.46", "48.7066, 31.6047, -48.1196, 0.46", "49.5668, 31.776, -48.853, 0.46", "50.6183, 31.9142, -49.6623, 0.46", "51.2404, 31.969, -50.0985, 0.46", "51.6526, 32.0011, -50.3716, 0.69", "52.4686, 32.0877, -50.8856, 0.46", "53.1448, 32.1837, -51.302, 0.46", "53.9399, 32.3409, -51.7762, 0.46", "54.9276, 32.549, -52.2823, 0.46", "55.5918, 32.675, -52.582, 0.46", "56.3995, 32.8531, -52.9629, 0.46" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "56.3995, 32.8531, -52.9629, 0.46", "58.9295, 33.1963, -53.4955, 0.46", "60.9262, 33.481, -54.0097, 0.46", "62.442, 33.6453, -54.4617, 0.46", "63.6184, 33.702, -54.8708, 0.46", "65.5089, 33.7211, -55.5336, 0.46", "67.5408, 33.6505, -56.2591, 0.46", "68.5076, 33.5003, -56.6401, 0.46", "70.5919, 33.0536, -57.3731, 0.46", "72.5182, 32.6709, -57.8652, 0.46", "73.7249, 32.4198, -58.1431, 0.23", "74.7849, 32.2064, -58.2928, 0.23", "77.0376, 31.6767, -58.3958, 0.23", "79.2162, 31.0899, -58.3748, 0.23", "81.2568, 30.691, -57.9855, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "56.3995, 32.8531, -52.9629, 0.46", "59.3898, 33.2236, -55.3814, 0.46", "61.9135, 33.6503, -57.4066, 0.46", "63.6801, 33.9075, -58.657, 0.46", "65.5987, 34.1466, -59.8771, 0.46", "67.689, 34.3589, -61.1774, 0.46", "69.3206, 34.5293, -62.2573, 0.46", "71.4, 34.754, -63.5844, 0.46", "74.1668, 35.0484, -65.3663, 0.46", "76.8377, 35.3358, -67.1266, 0.46", "79.3844, 35.5955, -68.8704, 0.46", "81.1904, 35.8563, -70.2029, 0.46", "84.6125, 36.3597, -72.8102, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_23", "dend_16", "dend_5", "dend_0", "dend_36", "dend_35", "dend_27", "dend_24", "dend_18", "dend_17", "dend_7", "dend_6", "dend_2", "dend_1", "dend_38", "dend_37", "dend_31", "dend_28", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_8", "dend_4", "dend_3", "dend_33", "dend_32", "dend_30", "dend_29", "dend_22", "dend_21", "dend_14", "dend_9", "dend_13", "dend_10", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_23", "dend_16", "dend_5", "dend_0", "dend_36", "dend_35", "dend_27", "dend_24", "dend_18", "dend_17", "dend_7", "dend_6", "dend_2", "dend_1", "dend_38", "dend_37", "dend_31", "dend_28", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_8", "dend_4", "dend_3", "dend_33", "dend_32", "dend_30", "dend_29", "dend_22", "dend_21", "dend_14", "dend_9", "dend_13", "dend_10", "dend_12", "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_NGCDA_b030a58a66_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_23, dend_16, dend_5, dend_0, dend_36, dend_35, dend_27, dend_24, dend_18, dend_17, dend_7, dend_6, dend_2, dend_1, dend_38, dend_37, dend_31, dend_28, dend_26, dend_25, dend_20, dend_19, dend_15, dend_8, dend_4, dend_3, dend_33, dend_32, dend_30, dend_29, dend_22, dend_21, dend_14, dend_9, dend_13, dend_10, dend_12, dend_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_23, dend_16, dend_5, dend_0, dend_36, dend_35, dend_27, dend_24, dend_18, dend_17, dend_7, dend_6, dend_2, dend_1, dend_38, dend_37, dend_31, dend_28, dend_26, dend_25, dend_20, dend_19, dend_15, dend_8, dend_4, dend_3, dend_33, dend_32, dend_30, dend_29, dend_22, dend_21, dend_14, dend_9, dend_13, dend_10, dend_12, dend_11]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.49999989780389625)
    connect dend_23(0), soma_0(0.49999989780389625)
    connect dend_16(0), soma_0(0.49999989780389625)
    connect dend_5(0), soma_0(0.49999989780389625)
    connect dend_0(0), soma_0(0.49999989780389625)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.48569, -6.90544, 0.0, 3.00414 ) }
    soma_0 { pt3dadd( -2.31617, -6.1725, 0.0, 5.1666 ) }
    soma_0 { pt3dadd( -2.14664, -5.43956, 0.0, 7.66052 ) }
    soma_0 { pt3dadd( -1.97711, -4.70663, 0.0, 9.30052 ) }
    soma_0 { pt3dadd( -1.80758, -3.97369, 0.0, 10.5298 ) }
    soma_0 { pt3dadd( -1.63805, -3.24075, 0.0, 11.6445 ) }
    soma_0 { pt3dadd( -1.46852, -2.50781, 0.0, 12.1344 ) }
    soma_0 { pt3dadd( -1.29899, -1.77488, 0.0, 12.5209 ) }
    soma_0 { pt3dadd( -1.12946, -1.04194, 0.0, 12.8728 ) }
    soma_0 { pt3dadd( -0.959926, -0.309003, 0.0, 13.2248 ) }
    soma_0 { pt3dadd( -0.790396, 0.423934, 0.0, 13.2522 ) }
    soma_0 { pt3dadd( -0.620866, 1.15687, 0.0, 13.1027 ) }
    soma_0 { pt3dadd( -0.451336, 1.88981, 0.0, 12.9579 ) }
    soma_0 { pt3dadd( -0.281807, 2.62275, 0.0, 12.8305 ) }
    soma_0 { pt3dadd( -0.112277, 3.35568, 0.0, 12.5604 ) }
    soma_0 { pt3dadd( 0.0572532, 4.08862, 0.0, 12.1963 ) }
    soma_0 { pt3dadd( 0.226783, 4.82156, 0.0, 11.554 ) }
    soma_0 { pt3dadd( 0.396313, 5.55449, 0.0, 10.4434 ) }
    soma_0 { pt3dadd( 0.565843, 6.28743, 0.0, 9.14943 ) }
    soma_0 { pt3dadd( 0.735373, 7.02037, 0.0, 6.97128 ) }
    soma_0 { pt3dadd( 0.904903, 7.75331, 0.0, 3.71762 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.94808, 0.484357, 6.09, 1.15 ) }
    dend_34 { pt3dadd( -5.10974, 0.515554, 7.15336, 1.15 ) }
    dend_34 { pt3dadd( -6.65317, 0.588465, 8.6138, 1.15 ) }
    dend_34 { pt3dadd( -7.73599, 0.70613, 9.73977, 1.15 ) }
    dend_34 { pt3dadd( -8.45846, 0.849006, 10.6161, 1.15 ) }
    dend_34 { pt3dadd( -9.36546, 1.02838, 11.7162, 0.92 ) }
    dend_34 { pt3dadd( -10.1209, 1.17778, 12.6325, 0.92 ) }
    dend_34 { pt3dadd( -10.6242, 1.31634, 13.356, 0.92 ) }
    dend_34 { pt3dadd( -11.2506, 1.51827, 14.3012, 0.92 ) }
    dend_34 { pt3dadd( -11.841, 1.85931, 15.4476, 1.15 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.43808, -5.98514, -9.43, 2.29 ) }
    dend_23 { pt3dadd( -1.43808, -5.98514, -9.43, 2.29 ) }
    dend_23 { pt3dadd( -1.73166, -6.45342, -10.7863, 2.29 ) }
    dend_23 { pt3dadd( -2.00672, -6.89218, -12.0571, 2.29 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 35/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.35192, 3.96136, -9.58, 1.15 ) }
    dend_16 { pt3dadd( 5.35192, 3.96136, -9.58, 1.15 ) }
    dend_16 { pt3dadd( 6.28294, 4.96954, -10.2762, 1.15 ) }
    dend_16 { pt3dadd( 7.02408, 5.74003, -10.9364, 1.15 ) }
    dend_16 { pt3dadd( 7.58045, 6.30209, -11.5377, 1.38 ) }
    dend_16 { pt3dadd( 8.17825, 6.88183, -12.2998, 1.38 ) }
    dend_16 { pt3dadd( 8.75576, 7.45465, -13.1844, 1.15 ) }
    dend_16 { pt3dadd( 9.42672, 8.10866, -14.259, 1.15 ) }
    dend_16 { pt3dadd( 10.2349, 8.8705, -15.661, 1.15 ) }
    dend_16 { pt3dadd( 10.9952, 9.56131, -17.1148, 1.15 ) }
    dend_16 { pt3dadd( 11.7528, 10.2671, -18.8018, 0.92 ) }
    dend_16 { pt3dadd( 12.6093, 11.1039, -21.042, 0.92 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 47/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.86192, 5.86136, -1.91, 4.59 ) }
    dend_5 { pt3dadd( 2.86192, 5.86136, -1.91, 4.59 ) }
    dend_5 { pt3dadd( 3.24791, 7.03275, -2.57954, 4.36 ) }
    dend_5 { pt3dadd( 3.77417, 8.62978, -3.49237, 3.21 ) }
    dend_5 { pt3dadd( 4.11673, 9.66938, -4.08657, 2.52 ) }
    dend_5 { pt3dadd( 4.54585, 10.9716, -4.83092, 1.61 ) }
    dend_5 { pt3dadd( 4.86732, 11.9472, -5.38853, 1.61 ) }
    dend_5 { pt3dadd( 5.35211, 13.3813, -6.20326, 1.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.99808, 6.49786, 1.25, 3.21 ) }
    dend_0 { pt3dadd( -3.99808, 6.49786, 1.25, 3.21 ) }
    dend_0 { pt3dadd( -4.19898, 7.18723, 1.37775, 2.06 ) }
    dend_0 { pt3dadd( -4.67454, 8.81912, 1.68014, 1.61 ) }
    dend_0 { pt3dadd( -4.97434, 9.84781, 1.87077, 1.61 ) }
    dend_0 { pt3dadd( -5.41065, 11.345, 2.14821, 1.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.904903, 7.75331, 0.0, 0.98723 ) }
    axon_0 { pt3dadd( 4.28518, 22.3675, 0.0, 0.98723 ) }
    axon_0 { pt3dadd( 7.66546, 36.9816, 0.0, 0.98723 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 64/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -11.841, 1.85931, 15.4476, 0.92 ) }
    dend_36 { pt3dadd( -11.4798, 1.53342, 15.7263, 0.92 ) }
    dend_36 { pt3dadd( -11.0632, 1.0803, 16.03, 0.69 ) }
    dend_36 { pt3dadd( -10.6539, 0.51741, 16.3321, 0.69 ) }
    dend_36 { pt3dadd( -10.3262, 0.0668431, 16.5739, 0.92 ) }
    dend_36 { pt3dadd( -9.88839, -0.53513, 16.897, 0.69 ) }
    dend_36 { pt3dadd( -9.50908, -1.0567, 17.177, 0.69 ) }
    dend_36 { pt3dadd( -9.07854, -1.72105, 17.5293, 0.69 ) }
    dend_36 { pt3dadd( -8.74913, -2.24632, 17.7533, 1.15 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 73/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -11.841, 1.85931, 15.4476, 0.92 ) }
    dend_35 { pt3dadd( -11.2, 1.60135, 17.864, 0.92 ) }
    dend_35 { pt3dadd( -10.3744, 1.26909, 20.9764, 0.69 ) }
    dend_35 { pt3dadd( -9.48084, 0.909496, 24.3448, 0.69 ) }
    dend_35 { pt3dadd( -8.68669, 0.589896, 27.3385, 0.69 ) }
    dend_35 { pt3dadd( -8.22999, 0.406103, 29.0602, 0.69 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 79/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.00672, -6.89218, -12.0571, 1.38 ) }
    dend_27 { pt3dadd( -1.02058, -7.54811, -12.6144, 1.38 ) }
    dend_27 { pt3dadd( 0.0434894, -8.25589, -13.2158, 1.38 ) }
    dend_27 { pt3dadd( 0.97033, -8.87238, -13.7397, 1.38 ) }
    dend_27 { pt3dadd( 1.90503, -9.49411, -14.268, 1.38 ) }
    dend_27 { pt3dadd( 2.99361, -10.2182, -14.8832, 1.38 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 85/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.00672, -6.89218, -12.0571, 0.92 ) }
    dend_24 { pt3dadd( -2.97548, -6.05191, -13.7421, 0.92 ) }
    dend_24 { pt3dadd( -4.02774, -4.24873, -16.2339, 0.69 ) }
    dend_24 { pt3dadd( -4.4163, -3.58288, -17.1541, 0.69 ) }
    dend_24 { pt3dadd( -5.09318, -2.42296, -18.757, 0.92 ) }
    dend_24 { pt3dadd( -5.71891, -1.3507, -20.2387, 1.15 ) }
    dend_24 { pt3dadd( -6.50897, 0.00315738, -22.1097, 1.15 ) }
    dend_24 { pt3dadd( -6.84725, 1.38847, -23.8043, 0.92 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.6093, 11.1039, -21.042, 0.92 ) }
    dend_18 { pt3dadd( 12.8037, 10.3755, -22.1271, 0.92 ) }
    dend_18 { pt3dadd( 13.1126, 9.51392, -23.3274, 0.92 ) }
    dend_18 { pt3dadd( 13.4269, 8.72051, -24.4197, 0.92 ) }
    dend_18 { pt3dadd( 13.6959, 8.01028, -25.3824, 0.92 ) }
    dend_18 { pt3dadd( 13.9013, 7.46644, -26.1794, 0.92 ) }
    dend_18 { pt3dadd( 14.1235, 6.91295, -27.123, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 14.2971, 6.50868, -27.9702, 0.92 ) }
    dend_18 { pt3dadd( 14.5784, 6.19455, -29.0911, 0.92 ) }
    dend_18 { pt3dadd( 14.7202, 6.16113, -29.5339, 0.92 ) }
    dend_18 { pt3dadd( 15.1524, 6.22581, -30.6251, 0.92 ) }
    dend_18 { pt3dadd( 15.6365, 6.41103, -31.825, 0.92 ) }
    dend_18 { pt3dadd( 16.1816, 6.74876, -33.2439, 0.92 ) }
    dend_18 { pt3dadd( 16.5395, 7.01897, -34.2208, 0.92 ) }
    dend_18 { pt3dadd( 17.1284, 7.44896, -35.4697, 0.92 ) }
    dend_18 { pt3dadd( 18.1425, 8.04307, -37.2298, 0.92 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 9/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.6093, 11.1039, -21.042, 0.69 ) }
    dend_17 { pt3dadd( 12.2313, 10.4905, -21.4584, 0.69 ) }
    dend_17 { pt3dadd( 11.3813, 9.20635, -22.1866, 0.46 ) }
    dend_17 { pt3dadd( 10.4578, 8.09092, -22.9141, 0.46 ) }
    dend_17 { pt3dadd( 9.70913, 7.35461, -23.5386, 0.46 ) }
    dend_17 { pt3dadd( 8.92924, 6.69657, -24.2655, 0.46 ) }
    dend_17 { pt3dadd( 7.92517, 5.89946, -25.3413, 0.46 ) }
    dend_17 { pt3dadd( 6.87152, 5.17919, -26.6326, 0.46 ) }
    dend_17 { pt3dadd( 5.34015, 4.22528, -28.8093, 0.46 ) }
    dend_17 { pt3dadd( 4.35454, 3.61201, -30.521, 0.46 ) }
    dend_17 { pt3dadd( 3.39511, 3.01264, -32.658, 0.46 ) }
    dend_17 { pt3dadd( 2.75027, 2.57077, -34.7516, 0.46 ) }
    dend_17 { pt3dadd( 2.39051, 2.20094, -37.0079, 0.46 ) }
    dend_17 { pt3dadd( 2.30996, 1.93595, -38.9525, 0.46 ) }
    dend_17 { pt3dadd( 2.45403, 1.74265, -40.5044, 0.46 ) }
    dend_17 { pt3dadd( 2.70911, 1.56481, -41.9826, 0.46 ) }
    dend_17 { pt3dadd( 3.17133, 1.27976, -44.3249, 0.46 ) }
    dend_17 { pt3dadd( 3.64038, 0.935286, -46.7047, 0.46 ) }
    dend_17 { pt3dadd( 3.97409, 0.64993, -48.4999, 0.46 ) }
    dend_17 { pt3dadd( 4.37862, 0.25364, -51.1508, 0.46 ) }
    dend_17 { pt3dadd( 4.6256, -0.0143761, -53.3045, 0.46 ) }
    dend_17 { pt3dadd( 4.92407, -0.250782, -56.302, 0.46 ) }
    dend_17 { pt3dadd( 5.19213, -0.305767, -59.4306, 0.46 ) }
    dend_17 { pt3dadd( 5.3291, -0.175542, -61.2677, 0.46 ) }
    dend_17 { pt3dadd( 5.51849, 0.13685, -63.8648, 0.46 ) }
    dend_17 { pt3dadd( 5.81212, 0.780856, -67.3003, 0.46 ) }
    dend_17 { pt3dadd( 6.04111, 1.35963, -69.4314, 0.46 ) }
    dend_17 { pt3dadd( 6.19859, 1.80107, -70.5545, 0.46 ) }
    dend_17 { pt3dadd( 6.38388, 2.54496, -71.9506, 0.46 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 38/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.35211, 13.3813, -6.20326, 1.83 ) }
    dend_7 { pt3dadd( 5.46401, 14.512, -7.47628, 1.83 ) }
    dend_7 { pt3dadd( 5.53809, 15.2605, -8.31902, 1.61 ) }
    dend_7 { pt3dadd( 5.69745, 16.8709, -10.1321, 1.61 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.35211, 13.3813, -6.20326, 0.92 ) }
    dend_6 { pt3dadd( 6.18314, 14.8992, -6.02654, 0.92 ) }
    dend_6 { pt3dadd( 6.81341, 16.7825, -6.24743, 0.92 ) }
    dend_6 { pt3dadd( 7.01777, 17.9603, -6.4943, 0.69 ) }
    dend_6 { pt3dadd( 7.13859, 19.3835, -6.71594, 0.69 ) }
    dend_6 { pt3dadd( 7.22387, 21.2811, -6.97098, 0.69 ) }
    dend_6 { pt3dadd( 7.32935, 23.4058, -7.19479, 0.69 ) }
    dend_6 { pt3dadd( 7.32735, 24.9412, -7.41459, 0.69 ) }
    dend_6 { pt3dadd( 7.23568, 26.6952, -7.73709, 0.92 ) }
    dend_6 { pt3dadd( 7.08422, 28.5266, -8.05215, 1.15 ) }
    dend_6 { pt3dadd( 6.97549, 29.6441, -8.18053, 0.69 ) }
    dend_6 { pt3dadd( 6.8272, 30.753, -8.16043, 0.46 ) }
    dend_6 { pt3dadd( 6.68335, 32.6571, -7.86103, 0.46 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.41065, 11.345, 2.14821, 1.83 ) }
    dend_2 { pt3dadd( -5.5284, 11.4889, 1.94674, 1.83 ) }
    dend_2 { pt3dadd( -6.5023, 12.3823, 0.667848, 1.83 ) }
    dend_2 { pt3dadd( -7.41599, 13.0865, -0.442597, 1.61 ) }
    dend_2 { pt3dadd( -8.1369, 13.5915, -1.25101, 1.15 ) }
    dend_2 { pt3dadd( -8.95121, 14.1618, -2.16415, 1.15 ) }
    dend_2 { pt3dadd( -9.73097, 14.708, -3.03855, 1.15 ) }
    dend_2 { pt3dadd( -10.6875, 15.3015, -4.02654, 1.15 ) }
    dend_2 { pt3dadd( -11.5292, 15.7223, -4.75273, 1.38 ) }
    dend_2 { pt3dadd( -12.8547, 16.2933, -5.74233, 1.15 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -5.41065, 11.345, 2.14821, 0.92 ) }
    dend_1 { pt3dadd( -5.24969, 12.8765, 2.6292, 0.92 ) }
    dend_1 { pt3dadd( -5.24891, 13.9269, 2.90303, 0.92 ) }
    dend_1 { pt3dadd( -5.26826, 15.3201, 3.24061, 0.92 ) }
    dend_1 { pt3dadd( -5.24949, 16.3285, 3.48279, 0.92 ) }
    dend_1 { pt3dadd( -5.16596, 17.1463, 3.66479, 0.92 ) }
    dend_1 { pt3dadd( -4.79981, 19.1092, 4.01967, 0.92 ) }
    dend_1 { pt3dadd( -4.57928, 19.7609, 4.09882, 0.92 ) }
    dend_1 { pt3dadd( -4.32718, 20.3955, 4.10129, 0.92 ) }
    dend_1 { pt3dadd( -4.01249, 21.1877, 3.99024, 0.92 ) }
    dend_1 { pt3dadd( -3.53114, 22.5509, 3.60553, 0.92 ) }
    dend_1 { pt3dadd( -3.24138, 23.401, 3.19182, 0.92 ) }
    dend_1 { pt3dadd( -3.06922, 23.8987, 2.89415, 0.92 ) }
    dend_1 { pt3dadd( -2.91491, 24.7892, 2.3131, 0.92 ) }
    dend_1 { pt3dadd( -2.89352, 25.7036, 1.69519, 0.69 ) }
    dend_1 { pt3dadd( -2.9128, 26.7711, 0.978902, 0.69 ) }
    dend_1 { pt3dadd( -2.92481, 27.7853, 0.253153, 0.69 ) }
    dend_1 { pt3dadd( -2.82279, 28.68, -0.535784, 0.69 ) }
    dend_1 { pt3dadd( -2.63678, 29.5203, -1.356, 0.69 ) }
    dend_1 { pt3dadd( -2.40356, 30.0086, -1.8879, 0.69 ) }
    dend_1 { pt3dadd( -1.90068, 30.6552, -2.64025, 0.46 ) }
    dend_1 { pt3dadd( -0.981352, 31.3756, -3.64427, 0.46 ) }
    dend_1 { pt3dadd( -0.0139523, 31.6732, -4.64691, 0.46 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 88/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.66546, 36.9816, 0.0, 0.480289 ) }
    axon_1 { pt3dadd( 11.0457, 51.5958, 0.0, 0.480289 ) }
    axon_1 { pt3dadd( 14.426, 66.21, 0.0, 0.480289 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 91/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -8.74913, -2.24632, 17.7533, 0.69 ) }
    dend_38 { pt3dadd( -8.17265, -3.00502, 18.0693, 0.69 ) }
    dend_38 { pt3dadd( -7.31061, -3.95268, 18.3799, 0.69 ) }
    dend_38 { pt3dadd( -6.71224, -4.61048, 18.5955, 0.69 ) }
    dend_38 { pt3dadd( -6.0671, -5.3197, 18.8279, 0.69 ) }
    dend_38 { pt3dadd( -5.50363, -5.93914, 19.0309, 0.69 ) }
    dend_38 { pt3dadd( -4.78953, -6.72418, 19.2882, 0.69 ) }
    dend_38 { pt3dadd( -3.84804, -7.69566, 19.5534, 0.69 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 99/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -8.74913, -2.24632, 17.7533, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( -8.90812, -4.12204, 18.522, 0.69 ) }
    dend_37 { pt3dadd( -8.93629, -5.24554, 18.9681, 0.69 ) }
    dend_37 { pt3dadd( -8.86355, -6.46783, 19.4144, 0.69 ) }
    dend_37 { pt3dadd( -8.71603, -7.94647, 19.9368, 0.69 ) }
    dend_37 { pt3dadd( -8.61956, -9.2659, 20.409, 0.69 ) }
    dend_37 { pt3dadd( -8.57728, -10.408, 20.7981, 0.69 ) }
    dend_37 { pt3dadd( -8.53168, -11.5063, 21.1546, 0.69 ) }
    dend_37 { pt3dadd( -8.55553, -12.7317, 21.5676, 0.69 ) }
    dend_37 { pt3dadd( -8.6903, -14.2399, 22.1085, 0.69 ) }
    dend_37 { pt3dadd( -8.88439, -15.6172, 22.6589, 0.69 ) }
    dend_37 { pt3dadd( -9.17675, -16.9548, 23.2799, 0.69 ) }
    dend_37 { pt3dadd( -9.59149, -18.1775, 23.981, 0.69 ) }
    dend_37 { pt3dadd( -10.2977, -19.8265, 25.1117, 0.69 ) }
    dend_37 { pt3dadd( -10.7602, -20.7472, 25.8093, 0.69 ) }
    dend_37 { pt3dadd( -11.2971, -21.7194, 26.6347, 0.69 ) }
    dend_37 { pt3dadd( -11.7351, -22.4852, 27.3805, 0.46 ) }
    dend_37 { pt3dadd( -12.3605, -23.4356, 28.5148, 0.46 ) }
    dend_37 { pt3dadd( -13.0963, -24.3667, 29.8394, 0.46 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 18/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.99361, -10.2182, -14.8832, 0.92 ) }
    dend_31 { pt3dadd( 3.49806, -11.6753, -14.7661, 0.92 ) }
    dend_31 { pt3dadd( 3.93952, -13.0508, -14.5876, 0.92 ) }
    dend_31 { pt3dadd( 4.2232, -14.1053, -14.4256, 0.92 ) }
    dend_31 { pt3dadd( 4.4925, -15.1552, -14.2617, 0.92 ) }
    dend_31 { pt3dadd( 4.77634, -16.4378, -14.043, 0.92 ) }
    dend_31 { pt3dadd( 4.84996, -16.9497, -13.9526, 0.92 ) }
    dend_31 { pt3dadd( 4.87976, -17.9328, -13.7681, 0.92 ) }
    dend_31 { pt3dadd( 4.80174, -19.8548, -13.4049, 0.92 ) }
    dend_31 { pt3dadd( 4.65088, -21.3702, -13.1279, 0.92 ) }
    dend_31 { pt3dadd( 4.4722, -22.8201, -12.9527, 0.92 ) }
    dend_31 { pt3dadd( 4.2064, -24.5326, -12.7845, 1.15 ) }
    dend_31 { pt3dadd( 3.81328, -26.7251, -12.5967, 0.92 ) }
    dend_31 { pt3dadd( 3.64532, -27.5767, -12.5498, 0.92 ) }
    dend_31 { pt3dadd( 3.37394, -28.6739, -12.5096, 1.15 ) }
    dend_31 { pt3dadd( 2.86739, -30.4182, -12.5012, 0.92 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.99361, -10.2182, -14.8832, 0.69 ) }
    dend_28 { pt3dadd( 4.93826, -11.2945, -15.1542, 0.69 ) }
    dend_28 { pt3dadd( 6.83461, -12.3958, -15.6077, 0.69 ) }
    dend_28 { pt3dadd( 8.55912, -13.4973, -16.1804, 0.46 ) }
    dend_28 { pt3dadd( 10.3458, -14.7615, -16.9364, 0.46 ) }
    dend_28 { pt3dadd( 12.0475, -16.1027, -17.752, 0.46 ) }
    dend_28 { pt3dadd( 13.8305, -17.6518, -18.7685, 0.46 ) }
    dend_28 { pt3dadd( 14.8499, -18.7349, -19.6947, 0.46 ) }
    dend_28 { pt3dadd( 15.5112, -19.6309, -20.5981, 0.46 ) }
    dend_28 { pt3dadd( 16.0198, -20.4975, -21.5262, 0.46 ) }
    dend_28 { pt3dadd( 16.383, -21.3601, -22.3816, 0.46 ) }
    dend_28 { pt3dadd( 16.7838, -22.558, -23.5286, 0.46 ) }
    dend_28 { pt3dadd( 17.2512, -24.3576, -25.1656, 0.46 ) }
    dend_28 { pt3dadd( 17.5141, -25.5238, -26.2938, 0.46 ) }
    dend_28 { pt3dadd( 17.8288, -26.7647, -27.499, 0.46 ) }
    dend_28 { pt3dadd( 18.0893, -27.7419, -28.4649, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 50/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.84725, 1.38847, -23.8043, 0.69 ) }
    dend_26 { pt3dadd( -7.13377, 1.69316, -26.4501, 0.69 ) }
    dend_26 { pt3dadd( -7.32103, 1.95103, -28.107, 0.69 ) }
    dend_26 { pt3dadd( -7.48692, 2.1533, -29.2114, 0.69 ) }
    dend_26 { pt3dadd( -7.74467, 2.35646, -30.4801, 0.69 ) }
    dend_26 { pt3dadd( -7.98508, 2.49259, -31.4663, 0.69 ) }
    dend_26 { pt3dadd( -8.23896, 2.60834, -32.4213, 0.69 ) }
    dend_26 { pt3dadd( -8.84379, 2.74196, -34.0303, 0.69 ) }
    dend_26 { pt3dadd( -9.29128, 2.80528, -35.0224, 0.69 ) }
    dend_26 { pt3dadd( -10.0564, 2.83278, -36.5111, 0.69 ) }
    dend_26 { pt3dadd( -10.8096, 2.76204, -37.7619, 0.69 ) }
    dend_26 { pt3dadd( -11.486, 2.64394, -38.7627, 0.69 ) }
    dend_26 { pt3dadd( -12.5001, 2.39426, -40.1116, 0.46 ) }
    dend_26 { pt3dadd( -13.9577, 1.97123, -41.7303, 0.46 ) }
    dend_26 { pt3dadd( -15.1594, 1.62125, -42.8846, 0.46 ) }
    dend_26 { pt3dadd( -16.2437, 1.33593, -43.7957, 0.46 ) }
    dend_26 { pt3dadd( -17.7414, 1.00392, -44.9852, 0.46 ) }
    dend_26 { pt3dadd( -19.338, 0.653411, -46.1929, 0.46 ) }
    dend_26 { pt3dadd( -21.6997, 0.154559, -47.9377, 0.23 ) }
    dend_26 { pt3dadd( -22.7169, -0.0155756, -48.5973, 0.46 ) }
    dend_26 { pt3dadd( -24.3067, -0.197787, -49.5939, 0.46 ) }
    dend_26 { pt3dadd( -26.1646, -0.307316, -50.7621, 0.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 72/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.84725, 1.38847, -23.8043, 0.69 ) }
    dend_25 { pt3dadd( -7.24994, 2.89446, -24.111, 0.69 ) }
    dend_25 { pt3dadd( -7.68199, 4.04948, -24.4496, 0.69 ) }
    dend_25 { pt3dadd( -8.07202, 5.08581, -24.7894, 0.69 ) }
    dend_25 { pt3dadd( -8.65875, 6.64483, -25.3006, 0.69 ) }
    dend_25 { pt3dadd( -9.43192, 8.69922, -25.9743, 0.69 ) }
    dend_25 { pt3dadd( -9.83604, 9.77301, -26.3265, 0.46 ) }
    dend_25 { pt3dadd( -10.6831, 11.75, -27.0947, 0.46 ) }
    dend_25 { pt3dadd( -11.0161, 12.4505, -27.3984, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 81/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 18.1425, 8.04307, -37.2298, 0.69 ) }
    dend_20 { pt3dadd( 18.4666, 9.32221, -37.5277, 0.69 ) }
    dend_20 { pt3dadd( 18.6749, 10.1444, -37.7192, 0.69 ) }
    dend_20 { pt3dadd( 18.9776, 11.3388, -37.9974, 0.69 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.1425, 8.04307, -37.2298, 0.69 ) }
    dend_19 { pt3dadd( 17.2797, 7.35919, -37.964, 0.69 ) }
    dend_19 { pt3dadd( 16.055, 6.24688, -38.676, 0.69 ) }
    dend_19 { pt3dadd( 15.3238, 5.4871, -39.1284, 0.69 ) }
    dend_19 { pt3dadd( 14.6609, 4.71807, -39.5679, 0.69 ) }
    dend_19 { pt3dadd( 13.7439, 3.57912, -40.2675, 0.46 ) }
    dend_19 { pt3dadd( 12.4669, 1.84903, -41.5758, 0.46 ) }
    dend_19 { pt3dadd( 12.1269, 1.29714, -41.9712, 0.23 ) }
    dend_19 { pt3dadd( 11.6862, 0.278931, -42.7098, 0.23 ) }
    dend_19 { pt3dadd( 11.5544, -0.105109, -43.0038, 0.23 ) }
    dend_19 { pt3dadd( 11.2793, -1.25293, -44.0803, 0.23 ) }
    dend_19 { pt3dadd( 11.0821, -2.56941, -45.6564, 0.23 ) }
    dend_19 { pt3dadd( 11.0133, -3.24765, -46.6361, 0.23 ) }
    dend_19 { pt3dadd( 10.9182, -3.88963, -47.5771, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.69745, 16.8709, -10.1321, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 6.46437, 17.6741, -10.1553, 0.92 ) }
    dend_15 { pt3dadd( 7.43011, 18.5992, -10.0391, 0.92 ) }
    dend_15 { pt3dadd( 8.17478, 19.3343, -9.86455, 0.92 ) }
    dend_15 { pt3dadd( 8.72376, 19.8812, -9.71476, 0.92 ) }
    dend_15 { pt3dadd( 9.58606, 20.7758, -9.46802, 1.15 ) }
    dend_15 { pt3dadd( 10.4348, 21.6622, -9.21637, 0.92 ) }
    dend_15 { pt3dadd( 10.9695, 22.1578, -9.03026, 1.15 ) }
    dend_15 { pt3dadd( 11.8237, 22.8759, -8.73919, 0.92 ) }
    dend_15 { pt3dadd( 12.4483, 23.3909, -8.61295, 0.92 ) }
    dend_15 { pt3dadd( 13.0819, 23.9796, -8.58338, 0.92 ) }
    dend_15 { pt3dadd( 13.3768, 24.2814, -8.64478, 0.92 ) }
    dend_15 { pt3dadd( 14.2862, 25.1931, -9.06271, 0.92 ) }
    dend_15 { pt3dadd( 14.9663, 25.8284, -9.55747, 0.92 ) }
    dend_15 { pt3dadd( 15.8304, 26.5169, -10.5187, 0.92 ) }
    dend_15 { pt3dadd( 16.3219, 26.8614, -11.1595, 1.15 ) }
    dend_15 { pt3dadd( 16.9984, 27.2929, -12.0969, 0.92 ) }
    dend_15 { pt3dadd( 17.5116, 27.6681, -12.8789, 1.15 ) }
    dend_15 { pt3dadd( 18.1076, 28.2093, -13.8936, 1.15 ) }
    dend_15 { pt3dadd( 19.0417, 29.1411, -15.4892, 0.69 ) }
    dend_15 { pt3dadd( 19.5347, 29.6298, -16.3082, 0.46 ) }
    dend_15 { pt3dadd( 19.7889, 29.8751, -16.7374, 0.46 ) }
    dend_15 { pt3dadd( 19.2587, 31.0193, -16.1253, 0.46 ) }
    dend_15 { pt3dadd( 18.5986, 32.1159, -15.4527, 0.23 ) }
    dend_15 { pt3dadd( 17.937, 33.1568, -14.7618, 0.23 ) }
    dend_15 { pt3dadd( 17.6461, 33.5528, -14.451, 0.23 ) }
    dend_15 { pt3dadd( 16.8396, 34.4299, -13.6674, 0.23 ) }
    dend_15 { pt3dadd( 16.3573, 34.8646, -13.2067, 0.23 ) }
    dend_15 { pt3dadd( 15.558, 35.4105, -12.3808, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.69745, 16.8709, -10.1321, 1.15 ) }
    dend_8 { pt3dadd( 6.13785, 18.0524, -11.1072, 1.15 ) }
    dend_8 { pt3dadd( 6.6639, 19.4447, -11.9821, 1.15 ) }
    dend_8 { pt3dadd( 7.26771, 21.014, -12.6685, 1.15 ) }
    dend_8 { pt3dadd( 7.94325, 22.7471, -13.3515, 0.92 ) }
    dend_8 { pt3dadd( 8.25103, 23.5042, -13.6899, 1.15 ) }
    dend_8 { pt3dadd( 8.84623, 24.9476, -14.524, 1.15 ) }
    dend_8 { pt3dadd( 9.22693, 25.8087, -15.2252, 1.15 ) }
    dend_8 { pt3dadd( 9.62313, 26.8708, -16.303, 1.15 ) }
    dend_8 { pt3dadd( 10.02, 28.0865, -17.7541, 1.15 ) }
    dend_8 { pt3dadd( 10.28, 28.976, -19.1444, 1.15 ) }
    dend_8 { pt3dadd( 10.5477, 30.0251, -21.3404, 1.15 ) }
    dend_8 { pt3dadd( 10.7253, 30.8914, -23.7583, 1.15 ) }
    dend_8 { pt3dadd( 10.7563, 31.1724, -24.8755, 1.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.8547, 16.2933, -5.74233, 0.92 ) }
    dend_4 { pt3dadd( -13.4591, 17.1487, -4.88254, 0.92 ) }
    dend_4 { pt3dadd( -14.366, 18.0092, -3.84454, 0.92 ) }
    dend_4 { pt3dadd( -15.2928, 18.5597, -2.92369, 0.92 ) }
    dend_4 { pt3dadd( -16.2467, 18.8642, -2.09963, 0.92 ) }
    dend_4 { pt3dadd( -17.2332, 18.9206, -1.2889, 0.92 ) }
    dend_4 { pt3dadd( -18.2058, 18.7675, -0.460968, 0.92 ) }
    dend_4 { pt3dadd( -19.066, 18.3295, 0.155429, 1.15 ) }
    dend_4 { pt3dadd( -19.6911, 17.8945, 0.546301, 1.15 ) }
    dend_4 { pt3dadd( -20.2045, 17.5026, 0.836291, 0.92 ) }
    dend_4 { pt3dadd( -21.1706, 16.7304, 1.36661, 0.92 ) }
    dend_4 { pt3dadd( -21.9966, 16.1107, 1.81632, 0.92 ) }
    dend_4 { pt3dadd( -22.7013, 15.6564, 2.17843, 0.92 ) }
    dend_4 { pt3dadd( -23.977, 14.9707, 2.73755, 1.15 ) }
    dend_4 { pt3dadd( -24.9466, 14.5292, 3.09419, 1.15 ) }
    dend_4 { pt3dadd( -25.9678, 14.1558, 3.39567, 0.92 ) }
    dend_4 { pt3dadd( -27.4427, 13.7577, 3.71759, 0.92 ) }
    dend_4 { pt3dadd( -28.9941, 13.4984, 3.97446, 0.92 ) }
    dend_4 { pt3dadd( -30.0619, 13.444, 4.11346, 0.92 ) }
    dend_4 { pt3dadd( -30.9802, 13.5292, 4.1412, 1.15 ) }
    dend_4 { pt3dadd( -31.986, 13.8146, 4.01438, 1.15 ) }
    dend_4 { pt3dadd( -32.3383, 14.0225, 3.88282, 1.15 ) }
    dend_4 { pt3dadd( -33.0929, 14.7045, 3.36838, 0.92 ) }
    dend_4 { pt3dadd( -33.7249, 15.4891, 2.77223, 0.69 ) }
    dend_4 { pt3dadd( -34.1844, 16.1598, 2.26622, 0.69 ) }
    dend_4 { pt3dadd( -34.667, 16.9471, 1.64334, 0.69 ) }
    dend_4 { pt3dadd( -35.1092, 17.6948, 1.01845, 0.46 ) }
    dend_4 { pt3dadd( -35.4339, 18.2596, 0.497278, 0.46 ) }
    dend_4 { pt3dadd( -35.8539, 18.9852, -0.296897, 0.46 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 71/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.8547, 16.2933, -5.74233, 0.92 ) }
    dend_3 { pt3dadd( -13.1594, 17.2575, -6.80806, 0.92 ) }
    dend_3 { pt3dadd( -13.3923, 18.1636, -7.79509, 0.92 ) }
    dend_3 { pt3dadd( -13.6222, 18.8404, -8.57613, 0.92 ) }
    dend_3 { pt3dadd( -13.9048, 19.5312, -9.4201, 0.92 ) }
    dend_3 { pt3dadd( -14.2209, 20.1239, -10.2559, 0.92 ) }
    dend_3 { pt3dadd( -14.4894, 20.5339, -10.9274, 0.92 ) }
    dend_3 { pt3dadd( -15.122, 21.3779, -12.4375, 0.92 ) }
    dend_3 { pt3dadd( -15.5344, 21.7538, -13.1612, 0.92 ) }
    dend_3 { pt3dadd( -15.7864, 21.9042, -13.5008, 1.15 ) }
    dend_3 { pt3dadd( -16.6785, 22.3361, -14.5226, 1.15 ) }
    dend_3 { pt3dadd( -17.4439, 22.699, -15.34, 1.15 ) }
    dend_3 { pt3dadd( -18.2977, 23.132, -16.2667, 1.15 ) }
    dend_3 { pt3dadd( -19.3893, 23.8658, -17.4746, 0.92 ) }
    dend_3 { pt3dadd( -20.0987, 24.5162, -18.3121, 0.92 ) }
    dend_3 { pt3dadd( -20.6952, 25.1333, -18.9726, 0.92 ) }
    dend_3 { pt3dadd( -21.3735, 25.8459, -19.6141, 0.69 ) }
    dend_3 { pt3dadd( -22.0017, 26.4614, -20.1426, 0.69 ) }
    dend_3 { pt3dadd( -22.8587, 27.2122, -20.8423, 0.69 ) }
    dend_3 { pt3dadd( -23.693, 27.9116, -21.5621, 0.69 ) }
    dend_3 { pt3dadd( -24.8106, 28.8928, -22.3638, 0.69 ) }
    dend_3 { pt3dadd( -25.8477, 29.8112, -22.9603, 0.92 ) }
    dend_3 { pt3dadd( -26.9839, 30.8434, -23.4284, 1.15 ) }
    dend_3 { pt3dadd( -28.086, 31.8818, -23.7083, 1.15 ) }
    dend_3 { pt3dadd( -29.1544, 32.9619, -23.7307, 0.92 ) }
    dend_3 { pt3dadd( -30.7228, 35.0344, -23.1302, 0.69 ) }
    dend_3 { pt3dadd( -31.2473, 36.0601, -22.4033, 0.69 ) }
    dend_3 { pt3dadd( -31.4561, 36.7411, -21.572, 0.69 ) }
    dend_3 { pt3dadd( -31.5479, 37.1965, -20.8475, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_3 { pt3dadd( -31.6208, 37.8403, -19.548, 0.69 ) }
    dend_3 { pt3dadd( -31.6544, 38.1149, -18.7775, 0.69 ) }
    dend_3 { pt3dadd( -31.8034, 38.3449, -17.519, 0.69 ) }
    dend_3 { pt3dadd( -31.9326, 38.3823, -16.3554, 0.69 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 4/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 2.86739, -30.4182, -12.5012, 0.69 ) }
    dend_33 { pt3dadd( 3.14333, -31.9861, -9.12493, 0.69 ) }
    dend_33 { pt3dadd( 3.30632, -33.1559, -6.98631, 0.69 ) }
    dend_33 { pt3dadd( 3.4491, -34.1838, -5.47255, 0.69 ) }
    dend_33 { pt3dadd( 3.61844, -35.2345, -4.19374, 0.69 ) }
    dend_33 { pt3dadd( 3.79624, -36.1252, -3.14134, 0.69 ) }
    dend_33 { pt3dadd( 3.87462, -36.5268, -2.6569, 0.69 ) }
    dend_33 { pt3dadd( 4.03323, -37.1859, -1.96237, 0.69 ) }
    dend_33 { pt3dadd( 4.38418, -38.3574, -0.819342, 0.46 ) }
    dend_33 { pt3dadd( 5.01346, -39.8215, 0.568749, 0.69 ) }
    dend_33 { pt3dadd( 6.11367, -41.6518, 2.35127, 0.69 ) }
    dend_33 { pt3dadd( 6.88734, -42.715, 3.35843, 0.69 ) }
    dend_33 { pt3dadd( 7.42614, -43.4082, 4.0208, 0.69 ) }
    dend_33 { pt3dadd( 8.25231, -44.374, 5.0037, 0.69 ) }
    dend_33 { pt3dadd( 9.39649, -45.66, 6.38343, 0.46 ) }
    dend_33 { pt3dadd( 10.0348, -46.3993, 7.27879, 0.46 ) }
    dend_33 { pt3dadd( 10.8476, -47.3518, 8.34274, 0.46 ) }
    dend_33 { pt3dadd( 11.7004, -48.3727, 9.50875, 0.46 ) }
    dend_33 { pt3dadd( 12.5209, -49.5196, 10.9936, 0.46 ) }
    dend_33 { pt3dadd( 13.2421, -50.756, 12.9966, 0.46 ) }
    dend_33 { pt3dadd( 13.829, -52.1195, 15.7628, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.86739, -30.4182, -12.5012, 0.69 ) }
    dend_32 { pt3dadd( 2.72101, -30.9294, -13.175, 0.69 ) }
    dend_32 { pt3dadd( 2.57382, -31.5261, -13.8507, 0.69 ) }
    dend_32 { pt3dadd( 2.49156, -32.1014, -14.4422, 0.69 ) }
    dend_32 { pt3dadd( 2.47112, -32.5245, -14.8627, 0.69 ) }
    dend_32 { pt3dadd( 2.48909, -32.9173, -15.227, 0.69 ) }
    dend_32 { pt3dadd( 2.53188, -33.5873, -15.7898, 0.69 ) }
    dend_32 { pt3dadd( 2.61036, -34.1891, -16.2081, 0.69 ) }
    dend_32 { pt3dadd( 2.71268, -34.7311, -16.4882, 0.69 ) }
    dend_32 { pt3dadd( 2.78651, -35.0817, -16.6503, 0.69 ) }
    dend_32 { pt3dadd( 2.93967, -35.5734, -16.8671, 0.69 ) }
    dend_32 { pt3dadd( 3.20569, -36.2867, -17.2299, 0.69 ) }
    dend_32 { pt3dadd( 3.34407, -36.6523, -17.4361, 0.69 ) }
    dend_32 { pt3dadd( 3.56155, -37.4147, -17.8793, 0.69 ) }
    dend_32 { pt3dadd( 3.66726, -38.0589, -18.2719, 0.69 ) }
    dend_32 { pt3dadd( 3.73006, -38.8517, -18.7652, 0.92 ) }
    dend_32 { pt3dadd( 3.75327, -39.6436, -19.2713, 0.92 ) }
    dend_32 { pt3dadd( 3.74998, -39.9513, -19.4653, 0.69 ) }
    dend_32 { pt3dadd( 3.67276, -40.6199, -19.8588, 0.69 ) }
    dend_32 { pt3dadd( 3.4633, -41.3564, -20.2227, 0.69 ) }
    dend_32 { pt3dadd( 3.32225, -41.6852, -20.3608, 0.69 ) }
    dend_32 { pt3dadd( 3.1668, -41.9646, -20.4769, 0.69 ) }
    dend_32 { pt3dadd( 2.87127, -42.429, -20.6282, 0.69 ) }
    dend_32 { pt3dadd( 2.69916, -42.6782, -20.7262, 0.69 ) }
    dend_32 { pt3dadd( 2.26064, -43.3298, -21.0622, 1.15 ) }
    dend_32 { pt3dadd( 1.83535, -44.0113, -21.4298, 0.92 ) }
    dend_32 { pt3dadd( 1.46174, -44.6489, -21.725, 0.92 ) }
    dend_32 { pt3dadd( 1.02914, -45.3838, -22.0042, 0.92 ) }
    dend_32 { pt3dadd( 0.369824, -46.541, -22.3201, 0.92 ) }
    dend_32 { pt3dadd( -0.167059, -47.5216, -22.4872, 0.69 ) }
    dend_32 { pt3dadd( -0.684133, -48.4532, -22.5428, 0.69 ) }
    dend_32 { pt3dadd( -1.3932, -49.7546, -22.4814, 0.23 ) }
    dend_32 { pt3dadd( -1.79693, -50.4781, -22.3957, 0.46 ) }
    dend_32 { pt3dadd( -2.33991, -51.4474, -22.2037, 0.23 ) }
    dend_32 { pt3dadd( -2.82593, -52.2817, -21.9703, 0.46 ) }
    dend_32 { pt3dadd( -3.51876, -53.4021, -21.6022, 0.23 ) }
    dend_32 { pt3dadd( -4.16591, -54.4045, -21.2811, 0.23 ) }
    dend_32 { pt3dadd( -4.75549, -55.3505, -20.9715, 0.23 ) }
    dend_32 { pt3dadd( -5.26378, -56.1998, -20.6852, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 18.0893, -27.7419, -28.4649, 0.23 ) }
    dend_30 { pt3dadd( 16.0878, -28.5097, -28.7538, 0.23 ) }
    dend_30 { pt3dadd( 14.4817, -29.1259, -28.9855, 0.23 ) }
    dend_30 { pt3dadd( 13.311, -29.575, -29.1545, 0.23 ) }
    dend_30 { pt3dadd( 11.5382, -30.2551, -29.4103, 0.23 ) }
    dend_30 { pt3dadd( 9.53965, -31.0219, -29.6988, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 70/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 18.0893, -27.7419, -28.4649, 0.46 ) }
    dend_29 { pt3dadd( 19.0979, -28.1768, -29.2368, 0.46 ) }
    dend_29 { pt3dadd( 19.9355, -28.538, -29.8779, 0.46 ) }
    dend_29 { pt3dadd( 20.4302, -28.7513, -30.2565, 0.46 ) }
    dend_29 { pt3dadd( 21.52, -29.2213, -31.0906, 0.69 ) }
    dend_29 { pt3dadd( 22.7758, -29.7628, -32.0517, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 76/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 18.9776, 11.3388, -37.9974, 0.46 ) }
    dend_22 { pt3dadd( 19.9979, 11.5642, -37.6952, 0.46 ) }
    dend_22 { pt3dadd( 21.399, 11.979, -37.355, 0.46 ) }
    dend_22 { pt3dadd( 22.8924, 12.5779, -37.0697, 0.46 ) }
    dend_22 { pt3dadd( 23.9781, 13.1152, -36.9765, 0.46 ) }
    dend_22 { pt3dadd( 25.5669, 13.9308, -36.9223, 0.46 ) }
    dend_22 { pt3dadd( 27.7971, 15.0483, -36.9146, 0.69 ) }
    dend_22 { pt3dadd( 28.749, 15.5435, -36.9885, 0.46 ) }
    dend_22 { pt3dadd( 30.5015, 16.4958, -37.3248, 0.69 ) }
    dend_22 { pt3dadd( 32.3872, 17.4555, -37.9493, 0.46 ) }
    dend_22 { pt3dadd( 33.1824, 17.7759, -38.2664, 0.46 ) }
    dend_22 { pt3dadd( 33.8397, 17.9123, -38.5599, 0.46 ) }
    dend_22 { pt3dadd( 34.8453, 17.962, -39.0663, 0.46 ) }
    dend_22 { pt3dadd( 36.344, 17.9234, -39.8301, 0.69 ) }
    dend_22 { pt3dadd( 37.5153, 17.8443, -40.4578, 0.69 ) }
    dend_22 { pt3dadd( 39.2455, 17.7674, -41.4724, 0.46 ) }
    dend_22 { pt3dadd( 40.8182, 17.7829, -42.5467, 0.46 ) }
    dend_22 { pt3dadd( 42.1468, 17.8306, -43.5283, 0.46 ) }
    dend_22 { pt3dadd( 42.9985, 17.8974, -44.1676, 0.46 ) }
    dend_22 { pt3dadd( 44.0546, 17.9818, -45.0232, 0.46 ) }
    dend_22 { pt3dadd( 45.2775, 18.1327, -46.0519, 0.46 ) }
    dend_22 { pt3dadd( 45.9461, 18.2877, -46.7064, 0.46 ) }
    dend_22 { pt3dadd( 46.6099, 18.5416, -47.3433, 0.46 ) }
    dend_22 { pt3dadd( 47.5733, 18.8862, -48.1707, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 48.4548, 19.2195, -48.8358, 0.46 ) }
    dend_22 { pt3dadd( 49.3133, 19.5357, -49.4163, 0.46 ) }
    dend_22 { pt3dadd( 50.566, 19.9663, -50.1999, 0.46 ) }
    dend_22 { pt3dadd( 51.476, 20.2945, -50.7855, 0.46 ) }
    dend_22 { pt3dadd( 52.4379, 20.6714, -51.4656, 0.46 ) }
    dend_22 { pt3dadd( 53.6459, 21.0753, -52.3541, 0.46 ) }
    dend_22 { pt3dadd( 54.7154, 21.4582, -53.1521, 0.46 ) }
    dend_22 { pt3dadd( 55.7382, 21.8526, -53.9772, 0.46 ) }
    dend_22 { pt3dadd( 56.5501, 22.1786, -54.6515, 0.46 ) }
    dend_22 { pt3dadd( 57.7018, 22.6833, -55.6558, 0.46 ) }
    dend_22 { pt3dadd( 58.7389, 23.1911, -56.5717, 0.46 ) }
    dend_22 { pt3dadd( 60.0552, 23.7905, -57.5941, 0.46 ) }
    dend_22 { pt3dadd( 61.1815, 24.3159, -58.3409, 0.46 ) }
    dend_22 { pt3dadd( 62.1193, 24.7707, -58.9354, 0.46 ) }
    dend_22 { pt3dadd( 63.3762, 25.3783, -59.69, 0.46 ) }
    dend_22 { pt3dadd( 64.0469, 25.6863, -60.0517, 0.46 ) }
    dend_22 { pt3dadd( 66.3787, 26.7851, -61.3798, 0.46 ) }
    dend_22 { pt3dadd( 67.4666, 27.2751, -62.1531, 0.46 ) }
    dend_22 { pt3dadd( 68.5519, 27.845, -63.2256, 0.46 ) }
    dend_22 { pt3dadd( 69.1777, 28.2303, -64.0529, 0.46 ) }
    dend_22 { pt3dadd( 69.5164, 28.4649, -64.6018, 0.46 ) }
    dend_22 { pt3dadd( 70.2429, 28.9386, -65.8791, 0.46 ) }
    dend_22 { pt3dadd( 71.4281, 29.6606, -68.0364, 0.46 ) }
    dend_22 { pt3dadd( 72.2718, 29.9988, -69.3778, 0.46 ) }
    dend_22 { pt3dadd( 72.7466, 30.1188, -69.9933, 0.46 ) }
    dend_22 { pt3dadd( 73.4344, 30.2464, -70.802, 0.46 ) }
    dend_22 { pt3dadd( 74.0317, 30.3284, -71.4843, 0.46 ) }
    dend_22 { pt3dadd( 74.6613, 30.3433, -72.1619, 0.46 ) }
    dend_22 { pt3dadd( 75.5009, 30.2019, -73.1164, 0.46 ) }
    dend_22 { pt3dadd( 76.9085, 29.6776, -74.7003, 0.46 ) }
    dend_22 { pt3dadd( 78.043, 28.9697, -76.0825, 0.46 ) }
    dend_22 { pt3dadd( 78.8567, 28.2257, -77.0829, 0.69 ) }
    dend_22 { pt3dadd( 79.6454, 27.2746, -78.0385, 0.69 ) }
    dend_22 { pt3dadd( 80.4579, 26.061, -79.0167, 0.69 ) }
    dend_22 { pt3dadd( 81.5298, 24.3278, -80.182, 0.46 ) }
    dend_22 { pt3dadd( 82.2047, 23.2366, -80.7779, 0.46 ) }
    dend_22 { pt3dadd( 83.0896, 22.0392, -81.3375, 0.46 ) }
    dend_22 { pt3dadd( 83.819, 21.1277, -81.7124, 0.46 ) }
    dend_22 { pt3dadd( 84.6463, 20.2332, -82.0788, 0.23 ) }
    dend_22 { pt3dadd( 85.9599, 19.1912, -82.6846, 0.23 ) }
    dend_22 { pt3dadd( 87.1171, 18.5755, -83.394, 0.23 ) }
    dend_22 { pt3dadd( 88.4708, 18.1495, -84.1886, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 18.9776, 11.3388, -37.9974, 0.46 ) }
    dend_21 { pt3dadd( 19.477, 12.5432, -38.9687, 0.46 ) }
    dend_21 { pt3dadd( 19.9185, 13.54, -39.7752, 0.46 ) }
    dend_21 { pt3dadd( 20.8195, 15.3473, -41.2866, 0.46 ) }
    dend_21 { pt3dadd( 22.0481, 17.6085, -43.2234, 0.46 ) }
    dend_21 { pt3dadd( 22.9982, 19.3901, -44.8734, 0.46 ) }
    dend_21 { pt3dadd( 23.8413, 21.1331, -46.515, 0.46 ) }
    dend_21 { pt3dadd( 24.4361, 22.4456, -47.9544, 0.46 ) }
    dend_21 { pt3dadd( 24.7688, 23.2438, -48.9122, 0.46 ) }
    dend_21 { pt3dadd( 25.2575, 24.5597, -50.5683, 0.23 ) }
    dend_21 { pt3dadd( 25.7298, 25.8905, -52.287, 0.23 ) }
    dend_21 { pt3dadd( 26.0162, 27.1159, -53.8196, 0.23 ) }
    dend_21 { pt3dadd( 26.4478, 29.7947, -57.2723, 0.23 ) }
    dend_21 { pt3dadd( 26.523, 30.7767, -58.6674, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 56/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.7563, 31.1724, -24.8755, 1.15 ) }
    dend_14 { pt3dadd( 10.2717, 31.4538, -26.6676, 1.15 ) }
    dend_14 { pt3dadd( 10.1417, 31.6127, -27.5041, 0.92 ) }
    dend_14 { pt3dadd( 10.0378, 31.9172, -28.986, 0.92 ) }
    dend_14 { pt3dadd( 10.0118, 32.1671, -30.1483, 1.15 ) }
    dend_14 { pt3dadd( 10.033, 32.5152, -31.697, 0.92 ) }
    dend_14 { pt3dadd( 10.0872, 32.8945, -33.2325, 1.15 ) }
    dend_14 { pt3dadd( 10.1944, 33.3229, -34.7501, 1.15 ) }
    dend_14 { pt3dadd( 10.3103, 33.6303, -35.6499, 1.15 ) }
    dend_14 { pt3dadd( 10.5325, 34.2047, -37.0624, 1.15 ) }
    dend_14 { pt3dadd( 10.7283, 34.7054, -38.185, 1.15 ) }
    dend_14 { pt3dadd( 10.8393, 35.0691, -38.9153, 1.15 ) }
    dend_14 { pt3dadd( 11.0009, 35.7345, -40.1488, 0.92 ) }
    dend_14 { pt3dadd( 11.1568, 36.4177, -41.3732, 0.92 ) }
    dend_14 { pt3dadd( 11.3215, 36.9732, -42.3095, 0.92 ) }
    dend_14 { pt3dadd( 11.5276, 37.5046, -43.1335, 0.92 ) }
    dend_14 { pt3dadd( 11.6846, 37.8693, -43.6873, 0.92 ) }
    dend_14 { pt3dadd( 11.9798, 38.4958, -44.7327, 0.92 ) }
    dend_14 { pt3dadd( 12.1605, 38.835, -45.389, 0.92 ) }
    dend_14 { pt3dadd( 12.3937, 39.3085, -46.6754, 0.92 ) }
    dend_14 { pt3dadd( 12.4397, 39.4276, -47.1233, 0.92 ) }
    dend_14 { pt3dadd( 12.3997, 39.6022, -48.104, 0.92 ) }
    dend_14 { pt3dadd( 12.1629, 39.7771, -49.1685, 0.92 ) }
    dend_14 { pt3dadd( 11.9087, 39.9091, -49.9234, 0.92 ) }
    dend_14 { pt3dadd( 11.6175, 40.0886, -50.829, 0.92 ) }
    dend_14 { pt3dadd( 11.4691, 40.1972, -51.3629, 0.92 ) }
    dend_14 { pt3dadd( 11.3827, 40.3828, -52.0471, 0.92 ) }
    dend_14 { pt3dadd( 11.4956, 40.8805, -53.2561, 0.92 ) }
    dend_14 { pt3dadd( 11.7172, 41.3373, -54.0282, 0.92 ) }
    dend_14 { pt3dadd( 12.0221, 41.9934, -55.0377, 0.92 ) }
    dend_14 { pt3dadd( 12.1679, 42.302, -55.5175, 0.92 ) }
    dend_14 { pt3dadd( 12.2661, 42.6457, -56.0167, 0.92 ) }
    dend_14 { pt3dadd( 12.2586, 42.9275, -56.4136, 0.92 ) }
    dend_14 { pt3dadd( 12.141, 43.1853, -56.8193, 0.69 ) }
    dend_14 { pt3dadd( 11.4539, 43.9045, -58.1645, 0.69 ) }
    dend_14 { pt3dadd( 11.0619, 44.1476, -58.7608, 0.69 ) }
    dend_14 { pt3dadd( 10.1641, 44.4552, -59.9803, 0.69 ) }
    dend_14 { pt3dadd( 9.56131, 44.4972, -60.7092, 0.69 ) }
    dend_14 { pt3dadd( 9.13074, 44.4265, -61.2005, 0.69 ) }
    dend_14 { pt3dadd( 8.4067, 44.1838, -62.0124, 0.69 ) }
    dend_14 { pt3dadd( 7.7598, 43.8553, -62.609, 0.69 ) }
    dend_14 { pt3dadd( 7.19149, 43.4816, -62.9955, 0.69 ) }
    dend_14 { pt3dadd( 6.41182, 42.891, -63.367, 0.69 ) }
    dend_14 { pt3dadd( 5.90403, 42.4903, -63.5506, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_14 { pt3dadd( 5.28852, 41.9928, -63.7363, 0.69 ) }
    dend_14 { pt3dadd( 4.20456, 41.0796, -64.0114, 0.69 ) }
    dend_14 { pt3dadd( 3.14515, 40.1329, -64.3303, 0.69 ) }
    dend_14 { pt3dadd( 2.29377, 39.3676, -64.6194, 0.69 ) }
    dend_14 { pt3dadd( 1.62436, 38.749, -64.8881, 0.69 ) }
    dend_14 { pt3dadd( 0.948061, 38.1218, -65.1858, 0.69 ) }
    dend_14 { pt3dadd( 0.203256, 37.4627, -65.593, 0.69 ) }
    dend_14 { pt3dadd( -0.536554, 36.8645, -66.1446, 0.69 ) }
    dend_14 { pt3dadd( -1.32433, 36.3326, -66.8013, 0.69 ) }
    dend_14 { pt3dadd( -1.94231, 35.9732, -67.3463, 0.69 ) }
    dend_14 { pt3dadd( -2.51243, 35.6984, -67.8663, 0.69 ) }
    dend_14 { pt3dadd( -3.57432, 35.26, -68.8757, 0.69 ) }
    dend_14 { pt3dadd( -4.41251, 34.9294, -69.7878, 0.69 ) }
    dend_14 { pt3dadd( -4.85398, 34.7302, -70.2891, 0.69 ) }
    dend_14 { pt3dadd( -5.67597, 34.2646, -71.3126, 0.69 ) }
    dend_14 { pt3dadd( -6.21589, 33.8976, -72.0708, 0.69 ) }
    dend_14 { pt3dadd( -6.48306, 33.6621, -72.5413, 0.92 ) }
    dend_14 { pt3dadd( -6.93211, 33.1726, -73.4523, 0.92 ) }
    dend_14 { pt3dadd( -7.58373, 32.4218, -74.8512, 0.92 ) }
    dend_14 { pt3dadd( -8.13121, 31.7699, -76.0847, 0.69 ) }
    dend_14 { pt3dadd( -8.62071, 31.211, -77.184, 0.69 ) }
    dend_14 { pt3dadd( -9.33644, 30.4926, -78.7335, 0.69 ) }
    dend_14 { pt3dadd( -9.79234, 30.1037, -79.6611, 0.69 ) }
    dend_14 { pt3dadd( -10.2925, 29.8301, -80.4826, 0.69 ) }
    dend_14 { pt3dadd( -10.886, 29.6885, -81.2749, 0.69 ) }
    dend_14 { pt3dadd( -11.3272, 29.6962, -81.6794, 0.69 ) }
    dend_14 { pt3dadd( -11.9083, 29.7524, -82.0848, 0.69 ) }
    dend_14 { pt3dadd( -12.7667, 29.8293, -82.5882, 0.69 ) }
    dend_14 { pt3dadd( -14.0671, 29.8792, -83.3197, 0.46 ) }
    dend_14 { pt3dadd( -14.8532, 29.8424, -83.7627, 0.46 ) }
    dend_14 { pt3dadd( -16.1058, 29.7105, -84.508, 0.46 ) }
    dend_14 { pt3dadd( -16.7455, 29.6144, -84.9391, 0.46 ) }
    dend_14 { pt3dadd( -17.25, 29.5339, -85.3042, 0.46 ) }
    dend_14 { pt3dadd( -18.1185, 29.3966, -86.0188, 0.46 ) }
    dend_14 { pt3dadd( -19.241, 29.122, -87.0845, 0.46 ) }
    dend_14 { pt3dadd( -19.8299, 28.8962, -87.7407, 0.46 ) }
    dend_14 { pt3dadd( -20.3314, 28.6524, -88.4116, 0.46 ) }
    dend_14 { pt3dadd( -20.8039, 28.4408, -89.0932, 0.46 ) }
    dend_14 { pt3dadd( -21.5237, 28.163, -89.9897, 0.46 ) }
    dend_14 { pt3dadd( -22.1674, 27.8808, -90.7508, 0.46 ) }
    dend_14 { pt3dadd( -22.9608, 27.4833, -91.5479, 0.46 ) }
    dend_14 { pt3dadd( -23.6688, 27.088, -92.0716, 0.46 ) }
    dend_14 { pt3dadd( -24.5433, 26.5502, -92.5113, 0.46 ) }
    dend_14 { pt3dadd( -26.4138, 25.4826, -93.1759, 0.46 ) }
    dend_14 { pt3dadd( -27.3525, 24.9877, -93.4566, 0.46 ) }
    dend_14 { pt3dadd( -27.8596, 24.7252, -93.6228, 0.46 ) }
    dend_14 { pt3dadd( -28.7172, 24.3138, -93.9355, 0.46 ) }
    dend_14 { pt3dadd( -29.9651, 23.6647, -94.5256, 0.46 ) }
    dend_14 { pt3dadd( -30.7326, 23.2649, -95.0331, 0.46 ) }
    dend_14 { pt3dadd( -31.9135, 22.7242, -96.055, 0.46 ) }
    dend_14 { pt3dadd( -32.6312, 22.4793, -96.7189, 0.46 ) }
    dend_14 { pt3dadd( -33.5678, 22.2369, -97.6719, 0.46 ) }
    dend_14 { pt3dadd( -34.5787, 22.0582, -98.8359, 0.46 ) }
    dend_14 { pt3dadd( -35.0724, 22.0201, -99.528, 0.46 ) }
    dend_14 { pt3dadd( -35.6123, 22.0291, -100.416, 0.46 ) }
    dend_14 { pt3dadd( -36.3155, 22.1819, -101.749, 0.46 ) }
    dend_14 { pt3dadd( -36.7118, 22.3477, -102.754, 0.46 ) }
    dend_14 { pt3dadd( -36.8933, 22.508, -103.549, 0.46 ) }
    dend_14 { pt3dadd( -37.2326, 22.9766, -105.489, 0.46 ) }
    dend_14 { pt3dadd( -37.4498, 23.3972, -107.186, 0.46 ) }
    dend_14 { pt3dadd( -37.4998, 23.6376, -108.124, 0.46 ) }
    dend_14 { pt3dadd( -37.4417, 24.0191, -109.57, 0.46 ) }
    dend_14 { pt3dadd( -37.2574, 24.4695, -111.293, 0.46 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 63/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 10.7563, 31.1724, -24.8755, 1.38 ) }
    dend_9 { pt3dadd( 11.0284, 31.5138, -26.2676, 1.38 ) }
    dend_9 { pt3dadd( 11.5854, 32.2127, -29.1172, 1.38 ) }
    dend_9 { pt3dadd( 11.9613, 32.6844, -31.0405, 1.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.9613, 32.6844, -31.0405, 0.46 ) }
    dend_13 { pt3dadd( 13.0929, 33.9553, -32.0249, 0.46 ) }
    dend_13 { pt3dadd( 14.2577, 35.2907, -33.107, 0.46 ) }
    dend_13 { pt3dadd( 14.4393, 35.5351, -33.3027, 0.46 ) }
    dend_13 { pt3dadd( 15.1352, 36.5929, -34.1198, 0.46 ) }
    dend_13 { pt3dadd( 15.6849, 37.4616, -34.7734, 0.46 ) }
    dend_13 { pt3dadd( 16.2692, 38.3918, -35.529, 0.46 ) }
    dend_13 { pt3dadd( 16.7108, 39.1548, -36.1869, 0.46 ) }
    dend_13 { pt3dadd( 17.3652, 40.1857, -37.2056, 0.46 ) }
    dend_13 { pt3dadd( 17.6314, 40.5107, -37.5745, 0.69 ) }
    dend_13 { pt3dadd( 18.4362, 41.3225, -38.4738, 0.69 ) }
    dend_13 { pt3dadd( 19.482, 42.2016, -39.4201, 0.69 ) }
    dend_13 { pt3dadd( 20.3917, 42.836, -40.014, 0.46 ) }
    dend_13 { pt3dadd( 21.7582, 43.5818, -40.5512, 0.46 ) }
    dend_13 { pt3dadd( 23.1932, 44.271, -40.771, 0.46 ) }
    dend_13 { pt3dadd( 25.0985, 45.124, -40.8785, 0.46 ) }
    dend_13 { pt3dadd( 25.9214, 45.4827, -40.774, 0.69 ) }
    dend_13 { pt3dadd( 26.726, 45.8447, -40.5102, 0.69 ) }
    dend_13 { pt3dadd( 27.843, 46.3795, -39.9248, 0.23 ) }
    dend_13 { pt3dadd( 28.8578, 46.9931, -39.1284, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 87/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 11.9613, 32.6844, -31.0405, 0.69 ) }
    dend_10 { pt3dadd( 12.8648, 32.5339, -31.1304, 0.69 ) }
    dend_10 { pt3dadd( 14.2657, 32.3323, -31.3251, 0.69 ) }
    dend_10 { pt3dadd( 15.1867, 32.2259, -31.4757, 0.69 ) }
    dend_10 { pt3dadd( 16.3891, 32.1237, -31.6812, 0.69 ) }
    dend_10 { pt3dadd( 16.8732, 32.1003, -31.8013, 1.15 ) }
    dend_10 { pt3dadd( 17.2266, 32.1004, -31.9294, 0.92 ) }
    dend_10 { pt3dadd( 18.2331, 32.2612, -32.5633, 0.92 ) }
    dend_10 { pt3dadd( 18.5257, 32.3569, -32.8069, 0.92 ) }
    dend_10 { pt3dadd( 18.7687, 32.451, -33.0612, 0.92 ) }
    dend_10 { pt3dadd( 19.6217, 32.8433, -34.0313, 0.92 ) }
    dend_10 { pt3dadd( 20.3928, 33.2513, -34.9866, 0.69 ) }
    dend_10 { pt3dadd( 20.7699, 33.5267, -35.4969, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_10 { pt3dadd( 21.2807, 34.0722, -36.2692, 0.69 ) }
    dend_10 { pt3dadd( 21.661, 34.5343, -36.8341, 0.69 ) }
    dend_10 { pt3dadd( 22.0037, 34.9474, -37.3165, 0.69 ) }
    dend_10 { pt3dadd( 22.4327, 35.3948, -37.8542, 0.69 ) }
    dend_10 { pt3dadd( 23.0009, 35.8754, -38.4651, 0.69 ) }
    dend_10 { pt3dadd( 23.6787, 36.34, -39.1196, 0.69 ) }
    dend_10 { pt3dadd( 24.5164, 36.7721, -39.875, 0.92 ) }
    dend_10 { pt3dadd( 25.3805, 37.0434, -40.5592, 0.69 ) }
    dend_10 { pt3dadd( 26.2864, 37.1774, -41.1939, 0.69 ) }
    dend_10 { pt3dadd( 27.3453, 37.2114, -41.7946, 0.92 ) }
    dend_10 { pt3dadd( 28.4785, 37.1092, -42.3174, 0.69 ) }
    dend_10 { pt3dadd( 30.0075, 36.849, -42.9115, 0.92 ) }
    dend_10 { pt3dadd( 31.1679, 36.5612, -43.3143, 0.92 ) }
    dend_10 { pt3dadd( 31.7119, 36.3959, -43.4771, 0.92 ) }
    dend_10 { pt3dadd( 32.815, 35.9997, -43.7616, 0.69 ) }
    dend_10 { pt3dadd( 34.4072, 35.3474, -44.0999, 0.69 ) }
    dend_10 { pt3dadd( 35.5763, 34.8448, -44.3229, 0.69 ) }
    dend_10 { pt3dadd( 36.8556, 34.2945, -44.5028, 0.69 ) }
    dend_10 { pt3dadd( 38.1638, 33.7505, -44.6533, 0.92 ) }
    dend_10 { pt3dadd( 39.1634, 33.3566, -44.7621, 0.69 ) }
    dend_10 { pt3dadd( 40.3209, 32.8904, -44.884, 0.92 ) }
    dend_10 { pt3dadd( 41.668, 32.3684, -44.9705, 0.46 ) }
    dend_10 { pt3dadd( 42.3665, 32.1049, -44.9973, 0.46 ) }
    dend_10 { pt3dadd( 43.1597, 31.8487, -45.0498, 0.46 ) }
    dend_10 { pt3dadd( 43.7339, 31.6941, -45.1593, 0.46 ) }
    dend_10 { pt3dadd( 44.5859, 31.5255, -45.4206, 0.46 ) }
    dend_10 { pt3dadd( 45.4454, 31.4018, -45.7929, 0.46 ) }
    dend_10 { pt3dadd( 45.9426, 31.354, -46.0293, 0.46 ) }
    dend_10 { pt3dadd( 46.5728, 31.3365, -46.4228, 0.69 ) }
    dend_10 { pt3dadd( 47.532, 31.3954, -47.1533, 0.69 ) }
    dend_10 { pt3dadd( 48.0264, 31.4617, -47.5551, 0.46 ) }
    dend_10 { pt3dadd( 48.7066, 31.6047, -48.1196, 0.46 ) }
    dend_10 { pt3dadd( 49.5668, 31.776, -48.853, 0.46 ) }
    dend_10 { pt3dadd( 50.6183, 31.9142, -49.6623, 0.46 ) }
    dend_10 { pt3dadd( 51.2404, 31.969, -50.0985, 0.46 ) }
    dend_10 { pt3dadd( 51.6526, 32.0011, -50.3716, 0.69 ) }
    dend_10 { pt3dadd( 52.4686, 32.0877, -50.8856, 0.46 ) }
    dend_10 { pt3dadd( 53.1448, 32.1837, -51.302, 0.46 ) }
    dend_10 { pt3dadd( 53.9399, 32.3409, -51.7762, 0.46 ) }
    dend_10 { pt3dadd( 54.9276, 32.549, -52.2823, 0.46 ) }
    dend_10 { pt3dadd( 55.5918, 32.675, -52.582, 0.46 ) }
    dend_10 { pt3dadd( 56.3995, 32.8531, -52.9629, 0.46 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 56.3995, 32.8531, -52.9629, 0.46 ) }
    dend_12 { pt3dadd( 58.9295, 33.1963, -53.4955, 0.46 ) }
    dend_12 { pt3dadd( 60.9262, 33.481, -54.0097, 0.46 ) }
    dend_12 { pt3dadd( 62.442, 33.6453, -54.4617, 0.46 ) }
    dend_12 { pt3dadd( 63.6184, 33.702, -54.8708, 0.46 ) }
    dend_12 { pt3dadd( 65.5089, 33.7211, -55.5336, 0.46 ) }
    dend_12 { pt3dadd( 67.5408, 33.6505, -56.2591, 0.46 ) }
    dend_12 { pt3dadd( 68.5076, 33.5003, -56.6401, 0.46 ) }
    dend_12 { pt3dadd( 70.5919, 33.0536, -57.3731, 0.46 ) }
    dend_12 { pt3dadd( 72.5182, 32.6709, -57.8652, 0.46 ) }
    dend_12 { pt3dadd( 73.7249, 32.4198, -58.1431, 0.23 ) }
    dend_12 { pt3dadd( 74.7849, 32.2064, -58.2928, 0.23 ) }
    dend_12 { pt3dadd( 77.0376, 31.6767, -58.3958, 0.23 ) }
    dend_12 { pt3dadd( 79.2162, 31.0899, -58.3748, 0.23 ) }
    dend_12 { pt3dadd( 81.2568, 30.691, -57.9855, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 56.3995, 32.8531, -52.9629, 0.46 ) }
    dend_11 { pt3dadd( 59.3898, 33.2236, -55.3814, 0.46 ) }
    dend_11 { pt3dadd( 61.9135, 33.6503, -57.4066, 0.46 ) }
    dend_11 { pt3dadd( 63.6801, 33.9075, -58.657, 0.46 ) }
    dend_11 { pt3dadd( 65.5987, 34.1466, -59.8771, 0.46 ) }
    dend_11 { pt3dadd( 67.689, 34.3589, -61.1774, 0.46 ) }
    dend_11 { pt3dadd( 69.3206, 34.5293, -62.2573, 0.46 ) }
    dend_11 { pt3dadd( 71.4, 34.754, -63.5844, 0.46 ) }
    dend_11 { pt3dadd( 74.1668, 35.0484, -65.3663, 0.46 ) }
    dend_11 { pt3dadd( 76.8377, 35.3358, -67.1266, 0.46 ) }
    dend_11 { pt3dadd( 79.3844, 35.5955, -68.8704, 0.46 ) }
    dend_11 { pt3dadd( 81.1904, 35.8563, -70.2029, 0.46 ) }
    dend_11 { pt3dadd( 84.6125, 36.3597, -72.8102, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_23, dend_16, dend_5, dend_0, dend_36, dend_35, dend_27, dend_24, dend_18, dend_17, dend_7, dend_6, dend_2, dend_1, dend_38, dend_37, dend_31, dend_28, dend_26, dend_25, dend_20, dend_19, dend_15, dend_8, dend_4, dend_3, dend_33, dend_32, dend_30, dend_29, dend_22, dend_21, dend_14, dend_9, dend_13, dend_10, dend_12, dend_11]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_23, dend_16, dend_5, dend_0, dend_36, dend_35, dend_27, dend_24, dend_18, dend_17, dend_7, dend_6, dend_2, dend_1, dend_38, dend_37, dend_31, dend_28, dend_26, dend_25, dend_20, dend_19, dend_15, dend_8, dend_4, dend_3, dend_33, dend_32, dend_30, dend_29, dend_22, dend_21, dend_14, dend_9, dend_13, dend_10, dend_12, dend_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_17 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_3 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_10 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_7 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_16 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_38 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_35 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_25 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_8 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_20 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_29 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_30 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_19 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_3 nseg = 3
    dend_22 nseg = 5
    dend_14 nseg = 5
    dend_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_NGCDA_b030a58a66_0_0


