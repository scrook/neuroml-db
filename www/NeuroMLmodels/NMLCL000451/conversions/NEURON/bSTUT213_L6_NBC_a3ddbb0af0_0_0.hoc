// Cell: bSTUT213_L6_NBC_a3ddbb0af0_0_0
/*
{
  "id" : "bSTUT213_L6_NBC_a3ddbb0af0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.94345, -11.2623, 0.984599, 4.09477", "-6.27697, -10.213, 0.889449, 7.03886", "-5.61048, -9.16359, 0.794299, 9.0513", "-4.94399, -8.11421, 0.699149, 10.7049", "-4.2775, -7.06483, 0.603999, 12.1545", "-3.61101, -6.01545, 0.508849, 13.4148", "-2.94452, -4.96607, 0.413699, 14.3077", "-2.27803, -3.91669, 0.318549, 14.7157", "-1.61155, -2.86731, 0.223399, 14.8034", "-0.945058, -1.81793, 0.128249, 14.7825", "-0.278569, -0.768556, 0.0330986, 14.484", "0.387919, 0.280823, -0.0620515, 14.2451", "1.05441, 1.3302, -0.157201, 13.4939", "1.7209, 2.37958, -0.252352, 12.4612", "2.38738, 3.42896, -0.347502, 11.3514", "3.05387, 4.47834, -0.442652, 10.0759", "3.72036, 5.52772, -0.537802, 8.68542", "4.38685, 6.5771, -0.632952, 7.03735", "5.05334, 7.62648, -0.728102, 5.61823", "5.71983, 8.67585, -0.823252, 4.41136", "6.38632, 9.72523, -0.918402, 2.8094" ]
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.13964, -5.50144, -15.1942, 1.03", "-2.13964, -5.50144, -15.1942, 1.03", "-1.78411, -5.99849, -15.1942, 1.03", "-1.4565, -6.5983, -15.2165, 0.88", "-1.20686, -7.23625, -15.255, 0.96", "-0.984613, -8.057, -15.3158, 0.52", "-0.917683, -8.46763, -15.3495, 0.44", "-0.946683, -9.14601, -15.4157, 0.37", "-1.17734, -9.74839, -15.4869, 0.96", "-1.43847, -10.0977, -15.5321, 1.18", "-1.63027, -10.2797, -15.5705, 1.18", "-1.88953, -10.4954, -15.6458, 0.88", "-2.20691, -10.7753, -15.7773, 0.66", "-2.51771, -11.1022, -15.9765, 0.52", "-2.78321, -11.4953, -16.2953, 0.37", "-2.9825, -11.9771, -16.7979, 0.37", "-3.09624, -12.4169, -17.343, 1.11", "-3.14749, -12.6932, -17.7238, 1.33", "-3.18237, -12.9147, -18.0458, 1.4", "-3.26717, -13.3815, -18.7691, 0.66", "-3.37848, -13.6877, -19.2896, 0.52", "-3.60268, -13.9944, -19.8064, 0.59", "-3.7937, -14.1677, -20.0775, 0.66", "-4.06219, -14.3879, -20.3976, 0.66", "-4.28785, -14.5767, -20.6413, 0.37", "-4.68234, -14.9942, -21.1214, 0.29", "-4.81542, -15.206, -21.3854, 0.29", "-5.01362, -15.7164, -22.0509, 1.4", "-5.09343, -16.0205, -22.4329, 1.84", "-5.13609, -16.2721, -22.7445, 1.84", "-5.2135, -16.9981, -23.6469, 0.81", "-5.25877, -17.6808, -24.5055, 0.37", "-5.2803, -18.0194, -24.9717, 0.37", "-5.30841, -18.4269, -25.5642, 1.55", "-5.33585, -18.8141, -26.185, 2.06", "-5.36585, -19.1349, -26.7324, 2.21", "-5.43758, -19.8909, -28.0585, 0.66", "-5.50819, -20.6781, -29.4671, 0.66", "-5.53397, -21.0373, -30.1517, 0.88", "-5.58009, -21.8742, -31.8904, 1.77", "-5.60904, -22.3159, -32.8403, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.29965, -7.64844, 0.925891, 1.25", "-8.29965, -7.64844, 0.925891, 1.25", "-8.74853, -8.341, 1.09789, 1.25", "-9.56668, -9.69519, 1.44029, 1.11", "-10.2155, -10.7692, 1.71183, 1.55", "-10.7093, -11.5865, 1.91847, 1.92", "-11.2985, -12.5619, 2.16508, 2.14", "-11.7791, -13.3881, 2.38167, 2.14", "-12.1664, -14.1221, 2.59058, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.83964, -10.831, -0.944109, 1.62", "-5.01424, -11.2581, -0.874736, 1.62", "-5.28991, -11.9354, -0.754919, 1.47", "-5.52189, -12.5152, -0.649823, 1.18", "-5.77837, -13.1632, -0.533664, 1.18", "-6.00997, -13.7597, -0.434673, 1.77", "-6.1327, -14.089, -0.386411, 2.14", "-6.29641, -14.5465, -0.31243, 2.65", "-6.4293, -14.9118, -0.252459, 2.73", "-6.62807, -15.4204, -0.176039, 2.5", "-6.93647, -16.1397, -0.0829551, 1.92", "-7.3175, -16.9673, 0.0140203, 1.47", "-7.782, -17.8875, 0.114459, 1.18", "-8.09332, -18.4462, 0.174245, 1.03", "-8.59789, -19.2496, 0.255261, 1.47", "-8.86879, -19.6302, 0.288493, 1.99", "-9.07589, -19.9024, 0.307207, 2.43", "-9.3056, -20.2134, 0.322149, 2.65", "-9.55702, -20.618, 0.330006, 2.36", "-9.88284, -21.345, 0.322116, 1.77", "-10.1938, -22.4558, 0.29106, 1.33", "-10.3209, -23.2503, 0.260479, 1.33", "-10.3772, -24.0625, 0.227711, 1.55", "-10.3576, -25.0236, 0.197935, 1.25", "-10.2483, -26.0402, 0.189809, 1.11", "-10.0694, -26.9346, 0.202821, 1.55", "-9.93604, -27.4065, 0.21306, 2.06", "-9.84164, -27.6998, 0.222922, 2.43", "-9.70489, -28.1056, 0.245982, 2.8", "-9.55103, -28.5762, 0.310032, 2.95", "-9.45066, -28.9456, 0.428368, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.93036, 9.68906, -0.514109, 3.54", "5.93036, 9.68906, -0.514109, 3.54", "6.42407, 10.7467, -0.439883, 3.54", "6.97853, 11.9345, -0.356524, 3.54", "7.33376, 12.6955, -0.303117, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999920512097007
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.38632, 9.72523, -0.918402, 0.715642", "14.4283, 22.3872, -0.918402, 0.715642", "22.4703, 35.0492, -0.918402, 0.715642" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.60904, -22.3159, -32.8403, 0.88", "-5.0888, -23.0534, -33.157, 0.88", "-4.60966, -23.7313, -33.4065, 0.52", "-4.24882, -24.2306, -33.567, 0.29", "-3.78847, -24.8532, -33.7819, 0.22", "-3.32131, -25.4893, -34.0037, 1.33", "-2.91667, -26.029, -34.2125, 1.47", "-2.49588, -26.5903, -34.4367, 0.15", "-2.19059, -27.0047, -34.5887, 0.15", "-1.50351, -27.9286, -34.9495, 0.81", "-1.38072, -28.0905, -35.0168, 0.96", "-0.272649, -29.5293, -35.6402, 0.22", "-0.130658, -29.7107, -35.7296, 0.74", "0.124516, -30.0425, -35.9122, 0.74", "1.00471, -31.1776, -36.6024, 0.22", "1.24236, -31.4865, -36.7993, 0.88", "1.37486, -31.6585, -36.918, 1.11", "2.38938, -32.9659, -37.9117, 0.22", "3.0185, -33.7542, -38.5482, 1.62", "3.41675, -34.2508, -38.9626, 2.06", "4.11253, -35.1584, -39.7273, 0.81", "4.62972, -35.8675, -40.3332, 1.33", "5.40951, -37.0163, -41.3057, 0.22", "5.90628, -37.8131, -41.9486, 1.33", "6.11786, -38.1692, -42.2489, 1.62", "6.88101, -39.5609, -43.4426, 0.59", "7.38625, -40.5605, -44.3453, 0.22", "7.64001, -41.1368, -44.9135, 0.74", "7.73893, -41.4094, -45.1933, 0.96", "8.11878, -42.6334, -46.5114, 0.29", "8.27191, -43.1701, -47.1611, 1.18", "8.35494, -43.4991, -47.6041, 1.4", "8.6381, -44.8017, -49.4371, 0.22", "8.71276, -45.1813, -50.0108, 1.03", "8.7474, -45.4124, -50.3796, 1.18", "8.8871, -46.9433, -52.9657, 0.44", "8.9309, -47.5578, -54.0966, 0.22", "8.94114, -47.7704, -54.5018, 1.18", "8.96835, -48.3596, -55.6582, 1.18", "8.99469, -48.7853, -56.5342, 1.62", "9.05922, -49.4878, -57.9752, 1.84", "9.10006, -49.7823, -58.5619, 1.99", "9.34424, -50.9215, -60.7744, 0.22", "9.54573, -51.6671, -62.1965, 1.47", "9.73381, -52.2969, -63.3343, 1.69", "9.87012, -52.6993, -64.054, 1.4", "10.1819, -53.5301, -65.5036, 0.81", "10.6603, -54.6835, -67.4788, 1.03", "11.2706, -56.026, -69.8106, 0.22", "11.4623, -56.4264, -70.4823, 1.47", "11.9669, -57.4667, -72.1033, 1.62", "12.3316, -58.2079, -73.1986, 0.29", "12.7909, -59.0769, -74.3855, 1.18", "13.23, -59.8382, -75.3089, 1.47", "13.8403, -60.8165, -76.3668, 0.15", "14.2499, -61.4651, -77.0304, 0.15", "14.6477, -62.1122, -77.601, 1.18", "15.274, -63.2192, -78.484, 0.22", "15.5094, -63.6668, -78.8291, 0.22", "15.9543, -64.5217, -79.5197, 0.88", "16.1921, -64.9957, -79.932, 0.88", "16.5015, -65.591, -80.4856, 1.11", "16.8409, -66.2093, -81.0706, 1.33", "17.9705, -68.1493, -82.9697, 0.22", "18.543, -69.085, -83.934, 1.03", "18.6309, -69.2209, -84.0796, 1.25", "19.62, -70.7002, -85.6761, 0.22", "20.1157, -71.412, -86.4614, 1.33", "20.4154, -71.836, -86.9224, 1.4", "21.3451, -73.2177, -88.4159, 0.22", "21.798, -73.9088, -89.187, 0.74", "22.5339, -75.051, -90.5257, 0.22", "23.2281, -76.1788, -91.8696, 1.4", "23.4629, -76.5774, -92.3483, 1.47", "24.3037, -78.0133, -94.0807, 0.15", "24.9571, -79.0933, -95.4092, 1.25", "25.2155, -79.5137, -95.9494, 1.25" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-5.60904, -22.3159, -32.8403, 1.92", "-6.14153, -22.5471, -33.9198, 1.92", "-6.6131, -22.7688, -34.899, 1.77", "-7.20333, -23.0609, -36.0981, 2.21", "-7.64293, -23.3146, -37.0293, 0.22", "-7.78822, -23.4096, -37.3591, 0.22", "-8.08326, -23.6197, -38.0553, 0.22", "-8.41387, -23.8999, -38.9201, 1.47", "-8.5062, -23.9916, -39.1893, 1.77", "-8.87815, -24.4075, -40.3763, 0.52", "-9.14511, -24.7329, -41.318, 1.25", "-9.24054, -24.8581, -41.6766, 1.4", "-9.5063, -25.2852, -42.8063, 0.29", "-9.72341, -25.6829, -43.7895, 1.62", "-9.79944, -25.8478, -44.1967, 1.84", "-9.95724, -26.239, -45.1141, 0.52", "-10.1113, -26.6813, -46.0963, 1.69", "-10.2017, -26.9682, -46.693, 2.06", "-10.2625, -27.1843, -47.1004, 2.21", "-10.5914, -28.3695, -49.2517, 0.44", "-10.6671, -28.6951, -49.8313, 0.81", "-10.6906, -28.8188, -50.0359, 0.81", "-10.7431, -29.0764, -50.4408, 0.59", "-10.7766, -29.2315, -50.6683, 0.88", "-10.8755, -29.7398, -51.3388, 0.37", "-11.1252, -30.9644, -52.7861, 1.4", "-11.1898, -31.2713, -53.1468, 1.92", "-11.3656, -32.1354, -54.2746, 0.22", "-11.4278, -32.4387, -54.6994, 0.22", "-11.4774, -32.6443, -54.9998, 0.22", "-11.6183, -33.1011, -55.68, 1.84", "-11.6514, -33.195, -55.8419, 2.06", "-12.0501, -34.2929, -57.9872, 0.22", "-12.1171, -34.457, -58.3499, 0.22", "-12.1749, -34.5728, -58.638, 0.96", "-12.2444, -34.6903, -58.9534, 1.18", "-12.7615, -35.465, -61.1577, 0.44", "-12.8581, -35.5932, -61.5181, 1.18", "-12.9916, -35.7449, -61.9412, 1.18", "-13.2958, -36.0942, -62.9439, 1.33", "-13.445, -36.2694, -63.4275, 1.47", "-13.8952, -36.7931, -64.7606, 0.29", "-14.1411, -37.067, -65.3879, 1.4", "-14.2691, -37.2308, -65.7619, 1.62", "-14.7501, -37.9995, -67.4886, 0.22", "-14.8396, -38.1627, -67.8418, 0.81", "-14.9446, -38.3638, -68.2686, 0.29", "-15.0912, -38.6472, -68.8454, 1.11", "-15.5611, -39.5628, -70.7081, 0.59", "-16.0693, -40.4481, -72.4768, 0.22", "-16.2295, -40.6956, -72.9683, 0.22", "-16.449, -40.9997, -73.6019, 1.69", "-16.5759, -41.1572, -73.9632, 2.14", "-17.1682, -41.7954, -75.4862, 0.22", "-17.4408, -42.0376, -76.0743, 1.92", "-17.5996, -42.1634, -76.3991, 2.21", "-17.803, -42.3207, -76.8319, 2.21", "-18.7817, -43.0766, -78.9255, 0.22", "-18.8744, -43.1497, -79.1242, 0.44", "-19.1145, -43.3522, -79.6213, 0.29", "-19.4222, -43.6369, -80.2682, 1.03", "-19.517, -43.7286, -80.4633, 0.81", "-19.7631, -43.9687, -80.8973, 0.29", "-20.0663, -44.2528, -81.3381, 1.11", "-20.175, -44.3635, -81.5357, 1.33", "-20.3041, -44.5048, -81.7954, 1.33", "-21.1387, -45.4427, -83.5173, 0.22", "-21.4351, -45.7856, -84.1721, 1.99", "-21.5633, -45.9298, -84.456, 2.43", "-22.5387, -47.0202, -86.6443, 0.22", "-22.6653, -47.165, -86.9606, 0.59", "-22.7557, -47.2749, -87.193, 0.59", "-23.0946, -47.6962, -88.0695, 0.22", "-23.2334, -47.8761, -88.4435, 1.25", "-23.4184, -48.1388, -88.9637, 1.62", "-24.108, -49.1545, -90.8099, 0.22", "-24.3688, -49.5634, -91.5428, 0.22", "-24.4786, -49.751, -91.8551, 0.96", "-24.5461, -49.8819, -92.0515, 1.33", "-24.9794, -50.8773, -93.4615, 0.22", "-25.0464, -51.0703, -93.7298, 0.74", "-25.1021, -51.2741, -93.9966, 0.74", "-25.1611, -51.5493, -94.3648, 0.22", "-25.2696, -52.1407, -95.1323, 1.84", "-25.3245, -52.4754, -95.5609, 2.14", "-25.5223, -53.7889, -97.1891, 0.22", "-25.5544, -54.0167, -97.4716, 0.22", "-25.6209, -54.4795, -98.0405, 1.55", "-25.6658, -54.7626, -98.3854, 1.84", "-25.8156, -55.5916, -99.4135, 0.22", "-25.8754, -55.884, -99.784, 0.52", "-25.9597, -56.2765, -100.371, 0.22", "-26.065, -56.7353, -101.19, 1.03", "-26.0878, -56.8242, -101.365, 1.18", "-26.3138, -57.6478, -103.092, 1.25", "-26.3856, -57.8843, -103.621, 1.62", "-26.717, -58.8768, -105.883, 0.22", "-26.8197, -59.1686, -106.588, 0.22", "-26.9124, -59.4058, -107.159, 1.47", "-27.0423, -59.7189, -107.908, 1.62", "-27.2505, -60.2131, -109.092, 0.22", "-27.3077, -60.3745, -109.495, 0.96", "-27.6019, -61.2959, -111.755, 0.22", "-27.6589, -61.5072, -112.299, 1.18", "-27.7443, -61.8164, -113.133, 1.4", "-27.9339, -62.4033, -114.746, 1.03", "-28.2445, -63.2354, -117.089, 0.22", "-28.3279, -63.4319, -117.659, 1.47", "-28.4703, -63.7203, -118.535, 1.55", "-28.6384, -64.0207, -119.495, 0.22", "-28.8102, -64.2692, -120.289, 0.22", "-28.9113, -64.3794, -120.653, 1.11", "-29.0813, -64.5373, -121.271, 1.33", "-29.6645, -65.0366, -123.561, 0.22", "-29.744, -65.1016, -123.884, 1.18", "-29.8378, -65.1789, -124.313, 1.18", "-30.0501, -65.3587, -125.351, 0.66", "-30.6443, -65.8522, -128.282, 0.22", "-30.7749, -65.9478, -128.88, 0.22", "-30.9837, -66.0761, -129.756, 1.18", "-31.1564, -66.1785, -130.544, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.1664, -14.1221, 2.59058, 0.59", "-14.1071, -14.7169, 2.86663, 0.59", "-14.9434, -14.8871, 2.954, 0.66", "-15.6015, -14.9539, 3.02644, 0.81", "-15.9962, -14.9584, 3.078, 0.81", "-16.7739, -14.9479, 3.20407, 0.81", "-17.786, -14.9443, 3.44924, 0.96", "-18.365, -14.8959, 3.6269, 0.66", "-19.0834, -14.8167, 3.89408, 0.37", "-19.7803, -14.7222, 4.20235, 0.37", "-20.6478, -14.6037, 4.66476, 1.18", "-21.6536, -14.4963, 5.36999, 1.69", "-21.9467, -14.5106, 5.64877, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.1664, -14.1221, 2.59058, 1.25", "-12.6602, -15.026, 2.21436, 1.25", "-13.2264, -15.9574, 1.86036, 0.74", "-13.6299, -16.5668, 1.65345, 0.96", "-14.1593, -17.3009, 1.43834, 1.18", "-14.5764, -17.8609, 1.32688, 1.47", "-15.0015, -18.4352, 1.24806, 1.47", "-15.3573, -18.8913, 1.22886, 1.55", "-15.7742, -19.4298, 1.26501, 1.55", "-16.1988, -20.0136, 1.3302, 1.33", "-16.8485, -20.9723, 1.47224, 1.11", "-17.2313, -21.5787, 1.53221, 0.96", "-17.5483, -22.1164, 1.51282, 0.81", "-17.9722, -22.8089, 1.1884, 0.66", "-18.2783, -23.2773, 0.75819, 0.52", "-18.489, -23.5703, 0.395687, 0.52", "-18.8768, -24.0483, -0.288987, 1.11", "-19.523, -24.7704, -1.38295, 1.55", "-20.897, -26.2039, -3.59459, 1.33", "-21.4327, -26.7248, -4.39708, 0.88", "-21.9395, -27.1919, -5.05874, 1.18", "-22.4702, -27.6793, -5.61332, 1.84", "-22.8267, -28.0137, -5.84859, 2.21", "-23.2099, -28.3916, -5.95278, 2.36", "-23.5556, -28.7462, -5.94885, 2.5", "-24.0031, -29.1962, -5.92672, 2.28", "-24.6113, -29.8222, -5.90159, 1.92", "-25.3414, -30.5758, -5.9127, 1.18", "-25.8428, -31.0841, -5.95413, 0.96", "-26.359, -31.5874, -6.04365, 0.66", "-27.0388, -32.2216, -6.24557, 0.44", "-27.9017, -32.9904, -6.63098, 1.77", "-28.4373, -33.4535, -6.93629, 2.28", "-28.822, -33.7822, -7.20521, 2.28", "-29.3019, -34.2057, -7.59026, 2.43", "-29.8733, -34.7453, -8.08285, 1.92", "-30.6067, -35.5021, -8.74112, 0.81", "-31.1379, -36.1021, -9.20628, 0.96", "-31.6845, -36.7743, -9.63079, 1.18", "-32.0133, -37.1976, -9.83937, 0.96", "-32.5024, -37.8286, -10.0351, 0.44", "-32.8742, -38.2775, -10.0997, 0.96", "-33.0836, -38.5229, -10.1115, 1.11", "-33.6586, -39.1567, -10.0897, 0.52", "-34.1437, -39.6488, -10.0143, 0.44", "-34.9964, -40.4017, -9.84378, 1.03", "-35.5422, -40.8175, -9.70735, 1.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.45066, -28.9456, 0.428368, 0.81", "-12.851, -29.2718, -1.75207, 0.81", "-14.4281, -29.3593, -2.6473, 1.18", "-15.3832, -29.4301, -3.16333, 1.25", "-16.959, -29.5622, -4.04186, 0.66", "-17.4918, -29.6186, -4.35307, 0.52", "-18.5001, -29.7576, -4.96595, 0.66", "-19.0673, -29.8621, -5.29714, 0.88", "-19.9018, -30.181, -5.98829, 1.11", "-20.8108, -30.5713, -7.01745, 1.25", "-21.1604, -30.7127, -7.44471, 1.25", "-21.495, -30.843, -7.8629, 0.96", "-22.0392, -31.0581, -8.56317, 0.59", "-23.0925, -31.4113, -9.87644, 1.18", "-25.0415, -32.0135, -12.2252, 1.25", "-26.4425, -32.4824, -13.8768, 1.25", "-27.1034, -32.726, -14.6554, 1.69", "-27.5167, -32.9035, -15.1355, 1.77", "-29.4757, -34.0007, -17.341, 0.81", "-30.2066, -34.5294, -18.1442, 1.11", "-30.7112, -35.0192, -18.7341, 0.96", "-31.2787, -35.649, -19.3593, 0.52", "-32.0572, -36.5511, -20.0908, 0.52", "-33.3498, -38.139, -21.1076, 2.21", "-33.9206, -38.9123, -21.439, 2.5", "-34.157, -39.205, -21.5443, 2.5", "-34.9359, -40.0894, -21.8081, 0.66", "-35.6263, -40.7881, -21.9732, 1.25", "-35.9967, -41.1432, -22.028, 1.47", "-36.4081, -41.5212, -22.0392, 1.47", "-37.1315, -42.2032, -22.0044, 1.33", "-37.5678, -42.5913, -21.9675, 0.74", "-38.2363, -43.1634, -21.8941, 0.29", "-38.5775, -43.4479, -21.8664, 0.22", "-39.0345, -43.8447, -21.8454, 0.22", "-39.5821, -44.3895, -21.844, 0.96", "-39.8939, -44.7665, -21.8576, 1.18", "-40.1528, -45.1273, -21.9145, 0.96", "-40.8391, -46.1746, -22.2134, 0.22", "-41.0813, -46.5419, -22.3563, 0.22", "-41.5009, -47.1149, -22.6391, 0.88", "-41.761, -47.4496, -22.829, 1.11", "-42.46, -48.3237, -23.3298, 0.22", "-43.3078, -49.2002, -23.8908, 1.77", "-43.7281, -49.5238, -24.1606, 2.28", "-44.5306, -49.9826, -24.6806, 2.28", "-46.0001, -50.6152, -25.6009, 0.15", "-46.6659, -50.8498, -26.0286, 0.74", "-48.4258, -51.3827, -27.2091, 0.44", "-50.5859, -52.0219, -28.7523, 1.69", "-52.0959, -52.4531, -29.8861, 2.28", "-52.8928, -52.6805, -30.5045, 2.58", "-54.7847, -53.2253, -31.9787, 0.52", "-55.9787, -53.6172, -32.9231, 0.29", "-57.7594, -54.3537, -34.3394, 2.21", "-59.0974, -55.0164, -35.3808, 2.58", "-61.2562, -56.2168, -36.976, 0.29", "-61.8677, -56.5911, -37.3995, 0.22", "-62.2727, -56.8544, -37.6401, 0.22", "-62.9082, -57.2898, -37.9593, 1.33", "-63.3775, -57.6393, -38.1421, 1.55", "-65.3461, -59.2254, -38.7674, 0.22", "-65.8486, -59.6366, -38.9013, 0.96", "-66.1794, -59.8805, -38.9929, 1.25", "-66.5736, -60.1261, -39.111, 1.25", "-67.986, -60.9056, -39.5401, 0.22", "-68.922, -61.3901, -39.8072, 0.88", "-69.2592, -61.5549, -39.903, 1.11", "-69.9604, -61.8978, -40.1199, 1.11", "-72.1983, -63.077, -40.8256, 0.22", "-72.97, -63.5174, -41.0648, 1.77", "-73.4424, -63.8066, -41.209, 2.28", "-74.0483, -64.2167, -41.386, 2.14", "-75.7124, -65.422, -41.8752, 0.22", "-76.4811, -66.0475, -42.0999, 1.03", "-76.8587, -66.3773, -42.2218, 1.33", "-78.1535, -67.4367, -42.6781, 0.22", "-78.6353, -67.8081, -42.8532, 0.96", "-79.1655, -68.1805, -43.0473, 1.25", "-79.4869, -68.3888, -43.1673, 1.33", "-81.5867, -69.6782, -43.9797, 0.15", "-82.4827, -70.2223, -44.3538, 1.18", "-83.0968, -70.6019, -44.6222, 1.55", "-84.6497, -71.6157, -45.3248, 0.22", "-85.0468, -71.8983, -45.504, 0.96", "-85.5701, -72.2921, -45.7388, 0.96", "-86.6174, -73.1726, -46.22, 0.22", "-86.9336, -73.4797, -46.3793, 0.66", "-87.7831, -74.3364, -46.8415, 0.22", "-88.2824, -74.871, -47.1232, 1.4", "-88.7488, -75.3671, -47.3966, 1.84", "-89.0307, -75.6572, -47.5578, 1.62", "-90.39, -77.0136, -48.2801, 0.15", "-91.3727, -77.9637, -48.8012, 1.03", "-91.7342, -78.2779, -48.9958, 1.55", "-92.1618, -78.6378, -49.2265, 1.55", "-93.5742, -79.8115, -49.9853, 0.22", "-93.969, -80.1263, -50.206, 0.88", "-94.4472, -80.4849, -50.4591, 0.88", "-96.1674, -81.8425, -51.3136, 0.22", "-96.7879, -82.354, -51.6022, 1.18", "-97.2001, -82.7104, -51.7749, 1.33", "-98.5908, -83.9407, -52.338, 0.22", "-99.2075, -84.4989, -52.5739, 0.22", "-99.9837, -85.1907, -52.8277, 0.22", "-100.665, -85.8364, -53.0174, 0.22", "-101.596, -86.708, -53.2757, 1.55", "-102.311, -87.3832, -53.4885, 1.92", "-102.695, -87.7697, -53.6181, 1.77", "-104.219, -89.3475, -54.2662, 0.22", "-104.793, -89.9326, -54.535, 0.96", "-105.121, -90.2728, -54.7028, 1.11", "-106.232, -91.4468, -55.3276, 0.22", "-106.923, -92.202, -55.7316, 0.22", "-107.538, -92.8721, -56.1201, 1.03", "-107.903, -93.2768, -56.3658, 1.33", "-108.322, -93.7151, -56.6473, 1.33", "-109.767, -95.179, -57.5744, 0.15", "-110.378, -95.8026, -57.9484, 0.15", "-111.239, -96.6777, -58.4401, 1.55", "-111.611, -97.0804, -58.6418, 1.84", "-111.986, -97.508, -58.8317, 1.77", "-112.816, -98.4903, -59.1841, 0.22", "-113.295, -99.0874, -59.3283, 0.22", "-113.765, -99.6673, -59.428, 0.96", "-114.052, -100.033, -59.4574, 1.11", "-114.884, -101.07, -59.4782, 0.22", "-115.288, -101.507, -59.4693, 0.22", "-115.776, -101.953, -59.4323, 0.22", "-116.161, -102.251, -59.3898, 0.96", "-116.415, -102.425, -59.3501, 1.25", "-116.941, -102.744, -59.2446, 1.25", "-118.296, -103.452, -58.9919, 0.15", "-119.094, -103.838, -58.8966, 0.15", "-119.419, -103.988, -58.8911, 0.44", "-119.785, -104.151, -58.9194, 0.44", "-120.527, -104.471, -59.0103, 0.15", "-121.762, -105.016, -59.2545, 1.33", "-122.351, -105.267, -59.4265, 1.4", "-123.837, -105.875, -60.0891, 0.22", "-124.631, -106.198, -60.528, 0.44", "-125.095, -106.4, -60.8225, 0.22", "-126.04, -106.813, -61.5034, 1.33", "-126.973, -107.232, -62.2476, 1.62", "-128.926, -108.142, -63.9123, 0.22", "-129.57, -108.463, -64.5009, 0.22", "-130.167, -108.778, -65.0763, 0.96", "-131.19, -109.376, -66.1487, 1.18", "-132.561, -110.258, -67.6746, 0.22", "-132.876, -110.508, -68.0565, 0.22", "-133.055, -110.68, -68.2886, 0.66", "-133.891, -111.594, -69.4274, 0.22", "-134.542, -112.403, -70.3712, 2.06", "-134.708, -112.626, -70.6133, 2.28", "-135.65, -113.981, -72.0288, 0.22", "-135.913, -114.355, -72.4293, 0.22", "-136.501, -115.14, -73.2992, 1.33", "-136.72, -115.413, -73.6127, 1.62", "-138.085, -116.99, -75.4147, 0.37", "-138.565, -117.522, -76.002, 0.22", "-139.07, -118.048, -76.5646, 0.22", "-139.968, -118.952, -77.5027, 1.03", "-140.643, -119.581, -78.1176, 1.4", "-141.831, -120.597, -79.0369, 0.22", "-142.719, -121.331, -79.6084, 1.25", "-143.333, -121.814, -79.9518, 1.55", "-143.561, -121.992, -80.0533, 1.55", "-145.336, -123.406, -80.6456, 0.29", "-145.891, -123.836, -80.7804, 0.52", "-146.139, -124.011, -80.8196, 0.52", "-146.785, -124.475, -80.8708, 0.22", "-147.619, -125.124, -80.8627, 0.22", "-148.213, -125.605, -80.8112, 1.25", "-148.64, -125.97, -80.7268, 1.4", "-149.184, -126.421, -80.6074, 1.11", "-150.048, -127.058, -80.432, 0.15", "-150.789, -127.533, -80.3493, 0.15", "-151.636, -128.03, -80.3356, 0.88", "-152.07, -128.261, -80.3386, 1.11", "-152.423, -128.441, -80.3324, 1.11", "-153.725, -129.095, -80.2715, 0.22", "-155.042, -129.744, -80.2062, 0.22", "-155.611, -129.986, -80.2439, 0.22", "-156.824, -130.491, -80.3947, 0.22", "-157.821, -130.915, -80.5636, 1.25", "-158.461, -131.212, -80.6952, 1.55", "-159.307, -131.626, -80.9046, 1.55", "-162.377, -133.143, -81.6995, 0.22", "-162.811, -133.341, -81.8349, 0.66", "-163.223, -133.49, -81.9907, 0.66", "-164.069, -133.743, -82.3216, 0.22", "-164.88, -133.955, -82.6112, 0.22", "-165.425, -134.096, -82.7596, 0.66", "-166.161, -134.325, -82.8696, 0.74", "-168.08, -134.981, -83.0978, 0.22", "-168.739, -135.233, -83.1563, 0.44", "-169.15, -135.414, -83.1805, 0.44", "-169.999, -135.838, -83.3175, 0.22", "-170.761, -136.213, -83.5227, 1.33", "-171.243, -136.438, -83.6872, 1.69", "-171.461, -136.522, -83.7664, 1.92", "-172.229, -136.749, -84.0866, 1.69", "-174.778, -137.413, -85.2688, 0.59", "-176.182, -137.732, -85.9989, 0.96", "-177.321, -137.992, -86.6331, 0.44", "-178.298, -138.232, -87.2001, 0.29", "-179.311, -138.5, -87.813, 0.29", "-179.861, -138.665, -88.1662, 0.29", "-181.315, -139.18, -89.0766, 0.88", "-182.007, -139.416, -89.4911, 1.55", "-182.249, -139.49, -89.6219, 2.06", "-184.477, -140.09, -90.7221, 1.69", "-184.636, -140.109, -90.7899, 1.84", "-186.705, -140.218, -91.609, 0.37", "-188.317, -140.255, -92.2139, 0.22", "-189.609, -140.259, -92.7228, 1.84", "-190.685, -140.265, -93.1521, 2.06", "-194.827, -140.241, -94.8952, 0.22", "-195.578, -140.233, -95.2193, 0.22", "-196.592, -140.225, -95.6851, 1.55", "-198.264, -140.254, -96.4775, 1.69", "-198.804, -140.27, -96.7694, 1.69", "-202.797, -140.492, -99.0801, 0.52", "-203.403, -140.55, -99.4481, 1.92", "-204.204, -140.624, -99.9355, 1.92", "-208.312, -140.996, -102.37, 1.92", "-213.075, -141.486, -105.067, 0.66", "-213.689, -141.556, -105.419, 0.66", "-214.598, -141.693, -105.953, 0.29", "-215.292, -141.809, -106.377, 0.29", "-215.893, -141.922, -106.744, 1.11", "-216.398, -142.058, -107.057, 1.62", "-219.809, -142.909, -108.985, 0.22", "-220.121, -142.971, -109.155, 0.22", "-220.849, -143.106, -109.54, 1.47", "-221.886, -143.28, -110.085, 1.77", "-222.528, -143.361, -110.424, 1.77", "-226.798, -143.837, -112.58, 0.22", "-227.798, -143.937, -113.063, 1.33", "-228.708, -144.009, -113.551, 1.62", "-230.06, -144.116, -114.328, 1.62", "-233.656, -144.362, -116.515, 0.22", "-234.253, -144.39, -116.907, 1.18", "-235.707, -144.457, -117.89, 1.33", "-238.767, -144.632, -119.972, 0.15", "-239.495, -144.689, -120.459, 1.25", "-241.623, -144.914, -121.812, 1.62", "-245.777, -145.389, -124.258, 0.22", "-247.281, -145.553, -125.083, 0.22", "-248.18, -145.665, -125.53, 0.44", "-249.205, -145.81, -126.019, 0.88", "-249.696, -145.885, -126.269, 1.47", "-251.007, -146.142, -127.048, 1.62", "-254.114, -146.824, -129.126, 0.22", "-254.413, -146.887, -129.348, 1.03", "-256.233, -147.267, -130.742, 1.11", "-257.181, -147.479, -131.478, 0.96", "-260.391, -148.266, -134.026, 0.22", "-260.765, -148.359, -134.309, 0.81", "-261.472, -148.542, -134.802, 0.81", "-262.715, -148.875, -135.597, 0.22", "-263.993, -149.237, -136.342, 1.47", "-265.404, -149.667, -137.098, 1.62", "-268.932, -150.889, -138.798, 0.15", "-269.769, -151.182, -139.192, 0.15", "-270.59, -151.5, -139.581, 0.96", "-271.026, -151.678, -139.789, 0.96", "-271.668, -151.978, -140.09, 0.22", "-272.168, -152.271, -140.31, 1.11", "-272.948, -152.948, -140.676, 1.11", "-274.712, -154.21, -141.562, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-9.45066, -28.9456, 0.428368, 2.8", "-9.31723, -29.3023, 0.464563, 2.8", "-8.89038, -30.4434, 0.580357, 1.84", "-8.46424, -31.5826, 0.69596, 1.03", "-8.26051, -32.1272, 0.751227, 1.03", "-7.99821, -32.8284, 0.822384, 1.18", "-7.7657, -33.45, 0.885459, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.33376, 12.6955, -0.303117, 0.81", "8.14319, 12.8989, 0.144869, 0.81", "8.60242, 13.0351, 0.465759, 0.37", "9.3228, 13.272, 1.00128, 0.88", "9.93914, 13.4996, 1.46569, 1.25", "10.7681, 13.841, 2.08653, 1.25", "11.1564, 14.0195, 2.36779, 1.11", "12.2416, 14.6334, 3.18351, 1.11", "12.561, 14.8379, 3.40272, 1.11", "12.9513, 15.1033, 3.61509, 0.96", "13.7995, 15.6816, 3.92886, 0.66", "14.4601, 16.1044, 4.07693, 0.74", "15.1581, 16.4992, 4.15977, 0.88", "15.9322, 16.8637, 4.16394, 0.96", "16.6901, 17.1408, 4.09765, 0.74", "17.5248, 17.3544, 3.95146, 1.62", "18.2851, 17.4696, 3.75272, 1.84", "18.9077, 17.5055, 3.55408, 1.69", "19.6201, 17.5102, 3.28606, 1.62", "20.7374, 17.5011, 2.86182, 0.88", "21.3403, 17.5327, 2.64572, 0.74", "22.0889, 17.6219, 2.41137, 0.74", "22.8673, 17.7819, 2.21034, 0.96", "23.5375, 17.9775, 2.09928, 0.81", "24.4183, 18.3075, 2.05041, 0.74", "25.5821, 18.7971, 2.2064, 1.25", "26.0834, 19.0199, 2.35533, 1.47", "26.5864, 19.2422, 2.63792, 1.77", "26.967, 19.4152, 2.93326, 1.77", "27.464, 19.6276, 3.43102, 1.11", "28.4927, 19.9812, 4.57912, 1.03", "29.1175, 20.1479, 5.3121, 1.18", "30.3877, 20.4318, 6.80572, 1.4", "30.7536, 20.4946, 7.22886, 1.55", "31.9947, 20.6088, 8.57624, 1.4", "32.7934, 20.619, 9.34263, 1.84", "33.1983, 20.5936, 9.65116, 2.43", "33.6557, 20.5408, 9.91079, 2.43", "34.2316, 20.4522, 10.1298, 2.21", "35.7504, 20.1959, 10.5715, 0.96", "36.5418, 20.0896, 10.7364, 0.66", "37.1179, 20.0506, 10.8485, 0.66", "37.7529, 20.0335, 10.9739, 0.66", "38.3838, 20.0514, 11.086, 0.66", "39.2457, 20.1412, 11.2307, 0.66", "40.1636, 20.3322, 11.3612, 1.03", "40.9473, 20.5734, 11.4793, 0.59", "41.7881, 20.889, 11.596, 0.59", "42.3642, 21.1444, 11.6697, 0.96", "43.1004, 21.5222, 11.7551, 0.66", "43.781, 21.9344, 11.8096, 0.66", "44.682, 22.5494, 11.8533, 1.33", "44.8481, 22.6765, 11.8586, 1.55", "45.1487, 22.9341, 11.8563, 1.69", "45.5105, 23.2632, 11.8495, 1.4", "45.9604, 23.6922, 11.8199, 1.11", "46.2657, 23.9863, 11.8069, 1.11", "54.2692, 27.0825, 16.17, 1.11", "62.3919, 29.7483, 20.6341, 1.11", "70.5998, 33.0735, 24.3922, 1.11", "78.1762, 36.6923, 29.0485, 1.11", "86.3096, 39.1592, 33.6216, 1.11", "94.4951, 41.61, 38.1115, 1.11", "102.619, 45.3653, 41.5875, 1.11", "110.921, 48.9483, 44.8453, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.33376, 12.6955, -0.303117, 2.95", "7.37837, 14.4033, -0.313495, 2.95", "7.42021, 16.0048, -0.323226, 2.95", "7.45356, 17.2813, -0.330983, 2.95", "7.47371, 18.0529, -0.335671, 2.95" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "22.4703, 35.0492, -0.918402, 0.37", "30.5123, 47.7112, -0.918402, 0.37", "38.5543, 60.3732, -0.918402, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-21.9467, -14.5106, 5.64877, 0.59", "-21.9181, -15.8674, 6.04555, 0.59", "-21.9171, -16.7982, 6.44708, 0.52", "-21.9334, -17.4784, 6.7844, 0.88", "-21.9654, -18.2189, 7.17667, 1.03", "-21.9895, -18.7771, 7.47234, 1.03", "-22.0242, -19.5783, 7.89679, 0.52", "-22.1138, -20.6757, 8.58795, 1.11", "-22.1567, -21.0624, 8.88148, 1.4", "-22.2128, -21.4867, 9.24896, 1.4", "-21.7778, -31.4292, 15.0949, 1.4", "-21.8285, -40.5819, 22.2426, 1.4", "-21.9573, -49.2232, 30.0634, 1.4" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.9467, -14.5106, 5.64877, 0.29", "-23.415, -14.2842, 5.2904, 0.29", "-24.6699, -14.0906, 4.98413, 0.59", "-25.1134, -14.0222, 4.87589, 0.81", "-25.7049, -13.931, 4.73154, 0.81", "-26.6279, -13.7887, 4.50626, 0.29", "-27.1843, -13.7029, 4.37046, 0.59", "-37.8598, -9.67169, 2.98498, 0.59", "-47.5871, -3.70067, 3.35449, 0.59", "-57.0783, 2.50932, 2.3296, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.7657, -33.45, 0.885459, 0.59", "-7.28969, -34.2632, 1.76288, 0.59", "-6.86375, -35.0289, 2.55584, 0.44", "-6.68354, -35.3138, 2.86534, 0.44", "-6.29099, -35.875, 3.51474, 0.81", "-5.99067, -36.2642, 3.97728, 1.25", "-5.76521, -36.5281, 4.31075, 1.47", "-5.53254, -36.7705, 4.65233, 1.47", "-4.58809, -37.7225, 6.00562, 0.74", "-3.58853, -38.6186, 7.38091, 0.37", "-3.30526, -38.8372, 7.74356, 0.37", "-2.89954, -39.1128, 8.24632, 0.81", "-2.50984, -39.3558, 8.7242, 0.96", "2.28728, -42.8097, 14.7208, 0.96", "6.69105, -47.6817, 19.887, 0.96", "12.4188, -50.9491, 25.1294, 0.96", "17.9617, -54.3404, 30.4847, 0.96", "24.2845, -57.8903, 34.7473, 0.96", "31.4217, -59.7737, 38.8664, 0.96", "38.1608, -61.0215, 43.8266, 0.96", "45.1223, -63.2565, 48.0576, 0.96", "52.6344, -65.8952, 50.8411, 0.96", "59.723, -68.0043, 54.9272, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.7657, -33.45, 0.885459, 1.11", "-8.1862, -34.3325, 0.861152, 1.11", "-8.57759, -35.3976, 0.960348, 1.11", "-8.95615, -36.7421, 1.1854, 1.11", "-9.12024, -37.55, 1.36705, 0.96", "-9.20766, -38.1413, 1.5285, 0.96", "-9.34522, -39.6843, 2.02578, 1.11", "-9.33076, -40.4852, 2.34617, 1.25", "-9.2463, -41.2138, 2.68497, 1.25", "-9.08225, -42.0775, 3.12339, 1.03", "-8.91458, -42.8967, 3.52281, 1.03", "-8.74622, -43.9641, 3.97965, 1.18", "-8.7113, -44.5032, 4.1496, 1.77", "-8.73383, -45.0192, 4.27819, 2.28", "-8.8161, -45.5604, 4.37939, 2.14", "-9.03079, -46.4147, 4.48315, 1.62", "-9.3039, -47.295, 4.54631, 1.03", "-9.65079, -48.2763, 4.58855, 0.74", "-10.0136, -49.2762, 4.64669, 0.96", "-10.4336, -50.4509, 4.7346, 1.25", "-10.8476, -51.6604, 4.87842, 1.62", "-11.0535, -52.3143, 4.9789, 1.55", "-11.2094, -52.8438, 5.0779, 1.69", "-11.5733, -54.0726, 5.35996, 1.18", "-11.8289, -54.9433, 5.60461, 1.03", "-12.0751, -55.7437, 5.87211, 1.33", "-12.2695, -56.3446, 6.09244, 1.62", "-12.4368, -56.8286, 6.26844, 1.62", "-12.6629, -57.5022, 6.49572, 1.77", "-12.8157, -58.0021, 6.63409, 1.77", "-13.0142, -58.7947, 6.83027, 1.55", "-13.1654, -59.5315, 7.00667, 1.25", "-13.3124, -60.4581, 7.17893, 0.81", "-13.4503, -61.6784, 7.31393, 0.81", "-13.5198, -62.6195, 7.39545, 1.03", "-13.5655, -63.7565, 7.50017, 1.03", "-13.5592, -64.43, 7.56782, 1.18", "-13.4911, -65.809, 7.71768, 0.29", "-13.4373, -66.5652, 7.79893, 0.37", "-13.3707, -67.8172, 7.92874, 0.37", "-13.3256, -68.6947, 8.03224, 0.29", "-13.2963, -69.3109, 8.1022, 0.29", "-13.2645, -69.9145, 8.20254, 0.29", "-13.2422, -70.4707, 8.39024, 0.29", "-13.2349, -71.1636, 8.64094, 0.22", "-12.9483, -80.1722, 10.9517, 0.22", "-13.3724, -88.9067, 14.2362, 0.22", "-13.4345, -97.5468, 17.8201, 0.22", "-12.9353, -105.257, 23.2689, 0.22", "-11.6776, -113.258, 28.09, 0.22", "-11.0837, -121.136, 33.2548, 0.22", "-11.4224, -129.84, 36.6395, 0.22", "-12.2889, -137.989, 41.2607, 0.22", "-13.8914, -145.768, 46.3663, 0.22", "-13.4539, -153.73, 51.4004, 0.22", "-11.7367, -161.285, 56.8441, 0.22", "-10.1124, -167.671, 63.7723, 0.22", "-6.93063, -174.666, 69.3813, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.47371, 18.0529, -0.335671, 0.66", "6.96555, 18.6567, -0.415938, 0.66", "6.67032, 19.0828, -0.461147, 0.29", "6.54808, 19.2832, -0.477926, 0.44", "6.20195, 19.9251, -0.521579, 0.44", "5.83651, 20.6576, -0.563649, 0.81", "5.69132, 20.9635, -0.578831, 0.96", "5.51838, 21.378, -0.592464, 0.81", "5.3981, 21.6456, -0.5973, 1.03", "5.18182, 22.0425, -0.60702, 1.18", "4.87921, 22.4536, -0.621695, 0.66", "4.36118, 22.9117, -0.648475, 0.22", "3.97596, 23.1386, -0.669291, 0.22", "3.55832, 23.2934, -0.692322, 0.22", "3.02011, 23.4342, -0.722446, 0.66", "2.6663, 23.5029, -0.741137, 0.81", "2.38217, 23.552, -0.758101, 0.66", "1.97329, 23.6288, -0.787889, 0.52", "1.3368, 23.794, -0.840976, 0.44", "0.767929, 23.9764, -0.90793, 0.52", "0.351277, 24.1319, -0.98186, 0.88", "-0.0385221, 24.3001, -1.08535, 1.11", "-0.345042, 24.4483, -1.18835, 1.11", "-0.662481, 24.6188, -1.33136, 0.96", "-1.13356, 24.8928, -1.59749, 0.37", "-1.64521, 25.215, -1.94046, 0.29", "-2.05941, 25.4992, -2.24252, 0.88", "-2.26173, 25.6531, -2.39129, 1.03", "-2.63376, 25.9688, -2.6823, 1.03", "-2.73809, 26.0693, -2.76837, 1.03", "-3.18106, 26.564, -3.13088, 0.29", "-3.37552, 26.8208, -3.30908, 0.29", "-3.68128, 27.2613, -3.61674, 0.96", "-3.89144, 27.565, -3.8388, 1.11", "-4.01342, 27.7382, -3.96311, 1.11", "-4.19486, 27.9843, -4.14688, 0.66", "-4.61551, 28.5377, -4.56205, 0.29", "-4.87258, 28.8537, -4.81127, 0.29", "-5.17401, 29.1987, -5.07008, 0.66", "-5.37042, 29.4051, -5.22092, 0.88", "-5.55238, 29.5842, -5.35068, 1.03", "-5.84012, 29.8569, -5.54256, 0.74", "-6.2157, 30.1976, -5.75725, 0.44", "-6.67125, 30.6085, -6.00897, 0.22", "-7.10353, 30.9982, -6.24802, 0.44", "-7.32797, 31.198, -6.36618, 0.59", "-7.50722, 31.3636, -6.43069, 0.59", "-7.87984, 31.7298, -6.48085, 0.29", "-8.27561, 32.1551, -6.43593, 0.59", "-8.51065, 32.4265, -6.35893, 0.59", "-8.6832, 32.6181, -6.27096, 0.59", "-9.47619, 33.4239, -5.80684, 1.69", "-9.86564, 33.7983, -5.54901, 2.14", "-10.1072, 34.0244, -5.37809, 2.36", "-10.2956, 34.1934, -5.24111, 2.36", "-11.1384, 34.9036, -4.65147, 0.29", "-11.6231, 35.2806, -4.33759, 0.22", "-12.2819, 35.7503, -3.954, 0.74", "-12.562, 35.9435, -3.7977, 0.96", "-12.726, 36.0587, -3.70324, 0.96", "-13.2939, 36.4838, -3.38049, 0.22", "-13.8255, 36.9313, -3.08073, 0.81", "-13.9182, 37.0149, -3.03211, 1.18", "-14.2529, 37.3119, -2.87, 1.18", "-14.3847, 37.4299, -2.80698, 1.18", "-14.7871, 37.8041, -2.63091, 0.15", "-14.9607, 37.9856, -2.56641, 0.37", "-15.1156, 38.1827, -2.52337, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.47371, 18.0529, -0.335671, 2.8", "8.96424, 20.3334, 0.180858, 2.8", "9.89686, 21.7603, 0.504048, 2.8", "10.6931, 22.9785, 0.77997, 2.95", "11.5565, 24.2995, 1.07916, 3.68", "12.1508, 25.2089, 1.28513, 3.9", "12.7147, 26.0716, 1.48053, 4.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-21.9573, -49.2232, 30.0634, 0.66", "-22.3336, -57.8709, 37.4664, 0.66", "-21.0441, -65.8897, 45.4943, 0.66", "-22.5033, -73.2644, 54.186, 0.66", "-25.437, -80.0533, 63.0516, 0.66", "-29.0576, -86.5441, 71.9194, 0.66", "-31.4066, -93.8812, 80.463, 0.66", "-35.3676, -99.6693, 89.7189, 0.66", "-38.3143, -106.101, 98.8695, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-21.9573, -49.2232, 30.0634, 0.59", "-21.8808, -58.2244, 36.2164, 0.66", "-22.164, -67.4599, 41.9611, 0.66", "-23.433, -77.1457, 46.6381, 0.66", "-25.7685, -86.7355, 51.106, 0.66", "-26.4037, -97.2228, 53.3461, 0.66", "-25.581, -107.055, 57.7963, 0.66", "-25.2258, -116.891, 62.296, 0.66", "-26.187, -126.97, 66.0246, 0.66", "-26.1075, -136.893, 70.3185, 0.66", "-25.1279, -146.384, 75.5046, 0.66", "-24.2417, -156.525, 79.0822, 0.66", "-22.2438, -165.786, 84.4434, 0.66", "-19.5254, -175.804, 87.4546, 0.66", "-18.9222, -186.425, 88.8593, 0.66", "-16.8315, -196.71, 91.305, 0.66", "-16.0681, -207.231, 93.3475, 0.66" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-57.0783, 2.50932, 2.3296, 0.59", "-66.8193, 7.06615, 0.900728, 0.59", "-76.1671, 11.882, -1.65252, 0.59", "-86.343, 15.7555, -1.93382, 0.59", "-96.5148, 19.438, -3.1808, 0.59", "-105.538, 25.3489, -3.51014, 0.59", "-114.696, 30.9481, -4.6797, 0.59", "-122.239, 38.5257, -4.47408, 0.59", "-128.886, 46.8026, -4.97478, 0.59", "-133.609, 56.2002, -5.56057, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-57.0783, 2.50932, 2.3296, 0.59", "-66.7455, 7.56049, 3.19758, 0.59", "-76.479, 12.5029, 2.56045, 0.59", "-86.5887, 16.3804, 0.762218, 0.59", "-96.5307, 19.9243, -2.27233, 0.59", "-105.452, 24.787, -6.253, 0.59", "-114.689, 28.7747, -10.5862, 0.59", "-123.079, 33.2468, -15.9619, 0.59", "-132.008, 35.6115, -21.9553, 0.59", "-141.081, 37.4959, -27.9312, 0.59", "-150.759, 38.7521, -33.1037, 0.59", "-160.361, 38.1272, -38.5791, 0.59", "-169.458, 37.9798, -44.8788, 0.59", "-178.895, 38.5545, -50.6135, 0.59", "-189.036, 38.2676, -55.0429, 0.59", "-199.15, 37.009, -59.3682, 0.59", "-209.613, 37.4977, -62.931, 0.59", "-220.291, 37.3117, -65.8489, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.7147, 26.0716, 1.48053, 2.36", "13.0854, 26.7378, 3.03713, 2.36", "13.2266, 27.1691, 4.26242, 1.99", "13.2604, 27.3936, 4.95159, 1.84", "13.2372, 28.0868, 7.15369, 1.55", "13.0737, 28.8082, 9.53498, 2.06", "12.7557, 29.5714, 12.0404, 2.43", "12.3082, 30.0404, 13.8451, 2.58", "12.1148, 30.164, 14.4216, 2.36", "11.7955, 30.3061, 15.2108, 2.21", "11.2105, 30.5028, 16.4058, 2.06", "10.7204, 30.6565, 17.3231, 1.25", "9.47699, 31.1395, 19.738, 1.55", "8.74556, 31.5461, 21.324, 1.18", "8.40717, 31.8155, 22.2522, 1.47", "8.16527, 32.1157, 23.1488, 2.14", "8.03308, 32.4543, 23.981, 1.84", "8.03389, 32.9101, 24.8675, 1.47", "8.25781, 33.5749, 25.6793, 0.88", "8.67851, 34.3796, 26.3786, 0.52", "8.94474, 34.7954, 26.6625, 0.22", "9.29271, 35.2513, 26.9373, 0.22", "9.60706, 35.6186, 27.1267, 0.59", "9.8093, 35.8253, 27.2247, 0.66", "10.1783, 36.1958, 27.3906, 0.22", "10.5282, 36.6739, 27.4995, 0.44", "8.73248, 39.0842, 36.3526, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.7147, 26.0716, 1.48053, 0.96", "12.138, 29.4043, -2.01807, 0.96", "12.0047, 30.3267, -3.02978, 1.33", "11.9462, 30.8067, -3.55417, 1.55", "11.8948, 31.2274, -4.01371, 1.77", "11.8162, 31.8712, -4.71708, 1.92", "11.7003, 32.8212, -5.75492, 0.96", "11.6204, 34.3166, -7.09591, 1.11", "11.6061, 34.5983, -7.37343, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.73248, 39.0842, 36.3526, 0.44", "9.21192, 41.0022, 42.6461, 0.44", "10.2634, 44.1494, 48.2973, 0.44", "12.1949, 48.2638, 52.9684, 0.44", "15.567, 52.235, 56.9402, 0.44", "18.3191, 56.0827, 61.4652, 0.44", "20.5568, 59.0113, 66.9152, 0.44", "23.3787, 62.3444, 71.8246, 0.44", "26.2992, 65.6469, 76.7005, 0.44", "28.3753, 69.5522, 81.5067, 0.44", "30.6593, 73.3836, 86.2883, 0.44", "31.8509, 78.1671, 90.4654, 0.44", "34.4291, 82.6341, 94.4384, 0.44", "37.961, 86.9282, 97.8795, 0.44", "40.7842, 91.4657, 101.6, 0.44", "42.7872, 96.1592, 105.602, 0.44", "44.6266, 100.859, 109.668, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.73248, 39.0842, 36.3526, 0.44", "8.06617, 42.1923, 45.2526, 0.44", "6.41654, 45.4299, 53.9678, 0.44", "5.36641, 48.3403, 62.9038, 0.44", "3.17906, 50.1239, 71.9602, 0.44", "-0.473395, 51.2897, 80.6479, 0.44", "-2.39965, 52.8929, 89.8015, 0.44", "-3.23663, 54.7526, 99.0668, 0.44", "-3.6034, 57.2813, 108.186, 0.44", "-5.33069, 58.1685, 117.489, 0.44", "-8.32495, 58.3961, 126.51, 0.44", "-9.98484, 59.161, 135.837, 0.44", "-10.8733, 60.1171, 145.249, 0.44", "-11.4352, 61.3253, 154.655, 0.44", "-12.4205, 63.7249, 163.766, 0.44", "-13.9548, 66.6252, 172.634, 0.44", "-16.4582, 71.1523, 180.456, 0.44", "-20.0338, 75.592, 187.903, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "11.6061, 34.5983, -7.37343, 0.66", "12.777, 34.1561, -8.09682, 0.66", "14.5312, 33.5548, -8.97531, 0.88", "15.9565, 33.1617, -9.61038, 1.11", "17.0868, 32.9214, -10.0732, 1.25", "17.6307, 32.836, -10.2864, 1.47", "18.5103, 32.7482, -10.6246, 1.18", "19.2043, 32.7702, -10.8311, 0.66", "20.3945, 33.1834, -11.1176, 0.52", "20.8649, 33.4808, -11.2365, 0.66", "21.2518, 33.7583, -11.3487, 0.66", "21.748, 34.1097, -11.5249, 0.37", "22.5318, 34.6006, -11.7854, 0.37", "23.1934, 34.8768, -11.9476, 1.18", "23.8895, 35.0235, -12.0063, 1.77", "24.8575, 35.1137, -12.0165, 1.92", "25.4246, 35.1296, -11.9858, 1.69", "26.3779, 35.1282, -11.8787, 0.66", "27.4389, 35.1437, -11.7441, 0.52", "28.23, 35.1882, -11.6774, 0.37", "28.8939, 35.2686, -11.6521, 0.37", "29.7687, 35.4354, -11.6722, 0.29", "30.3621, 35.5831, -11.739, 0.29", "31.6051, 35.9928, -11.9876, 0.59", "32.3494, 36.2915, -12.2395, 1.55", "32.7185, 36.4415, -12.3998, 1.77", "33.428, 36.7015, -12.7234, 1.92", "33.8252, 36.8215, -12.9004, 2.06", "34.1138, 36.879, -13.0196, 2.06", "36.3869, 37.1161, -13.9383, 0.29", "36.9096, 37.147, -14.149, 0.29", "37.7541, 37.1754, -14.4856, 0.29", "38.3275, 37.1861, -14.7028, 0.29", "40.0028, 37.2028, -15.3408, 1.18", "41.3565, 37.2322, -15.8765, 1.47", "41.8539, 37.2721, -16.1146, 1.69", "42.2289, 37.3217, -16.3198, 1.92", "42.4833, 37.354, -16.468, 2.14", "42.8631, 37.39, -16.68, 2.14", "43.6534, 37.4187, -17.0819, 2.14", "45.9056, 37.3732, -18.1109, 1.03", "47.1493, 37.3033, -18.6732, 0.29", "48.3985, 37.1973, -19.2407, 0.52", "49.0491, 37.1302, -19.52, 0.81", "49.666, 37.0547, -19.7774, 0.81", "50.3276, 36.9646, -20.0362, 0.52", "51.1806, 36.8628, -20.3518, 0.74", "52.013, 36.8224, -20.6869, 0.81", "52.849, 36.8526, -21.0511, 1.69", "54.0662, 36.9812, -21.5649, 2.06", "54.6675, 37.07, -21.7906, 2.43", "56.1132, 37.3024, -22.2476, 1.11", "57.0576, 37.4577, -22.4645, 0.96", "57.9412, 37.6255, -22.6005, 1.03", "59.1927, 37.9021, -22.7414, 0.29", "59.941, 38.0944, -22.7807, 0.37", "60.5847, 38.2861, -22.7958, 0.37", "61.1877, 38.5023, -22.8041, 0.22", "61.6672, 38.6858, -22.8351, 0.22", "62.4501, 38.9917, -22.9352, 0.22", "62.942, 39.1957, -23.0554, 0.22", "63.3813, 39.3861, -23.1974, 0.22", "64.4836, 39.8723, -23.573, 1.62", "65.328, 40.2346, -23.8403, 2.5", "65.7158, 40.394, -23.9458, 2.73", "66.4774, 40.6946, -24.1175, 2.14", "68.5459, 41.4857, -24.555, 0.22", "69.0503, 41.6705, -24.6607, 0.22", "69.6546, 41.8889, -24.7942, 0.44", "69.928, 41.991, -24.8576, 0.44", "70.7614, 42.3271, -25.0684, 0.29", "71.3718, 42.5754, -25.2328, 0.74", "71.9096, 42.7811, -25.3874, 0.74", "73.0854, 43.2042, -25.7316, 0.22", "73.8245, 43.4626, -25.9487, 0.22", "75.1829, 43.9114, -26.3575, 1.84", "75.8208, 44.1129, -26.5395, 2.14", "77.4032, 44.564, -26.9989, 0.29", "77.9407, 44.6796, -27.1633, 0.44", "78.4261, 44.7542, -27.3231, 0.44", "79.5619, 44.8687, -27.7429, 0.29", "80.6745, 44.9257, -28.1971, 1.84", "81.815, 44.9684, -28.7465, 2.14", "83.7482, 45.0136, -29.8196, 0.29", "84.9105, 45.0598, -30.4876, 0.81", "85.8215, 45.1053, -31.0005, 0.81", "86.5188, 45.1503, -31.3798, 0.52", "88.3392, 45.3119, -32.3579, 0.52", "89.0267, 45.4082, -32.7015, 0.81", "90.8073, 45.7678, -33.5068, 2.14", "91.3627, 45.8955, -33.7235, 2.65", "91.7005, 45.983, -33.8336, 2.65", "94.0146, 46.6391, -34.4228, 0.29", "94.675, 46.852, -34.5508, 0.22", "95.408, 47.1224, -34.6906, 0.96", "95.9162, 47.3341, -34.797, 1.18", "96.5751, 47.6311, -34.9401, 0.96", "97.3865, 48.0313, -35.09, 0.22", "98.0732, 48.4235, -35.1546, 0.22", "98.5477, 48.6942, -35.1872, 0.22", "99.5489, 49.1963, -35.2316, 1.4", "100.145, 49.485, -35.2512, 1.84", "100.281, 49.5512, -35.2559, 2.06", "100.78, 49.7818, -35.2693, 1.99", "101.544, 50.1088, -35.276, 0.88", "102.743, 50.6313, -35.2717, 0.22", "103.25, 50.8705, -35.2524, 0.29", "103.762, 51.1188, -35.2007, 0.29", "104.25, 51.3423, -35.1344, 0.29", "104.539, 51.4644, -35.0864, 0.66", "104.933, 51.6176, -35.0, 0.66", "105.269, 51.7343, -34.9144, 0.66", "105.878, 51.9062, -34.759, 0.22", "106.426, 52.0412, -34.6189, 0.22", "107.26, 52.2453, -34.4129, 1.33", "108.076, 52.4418, -34.2289, 2.14", "108.49, 52.5462, -34.1485, 2.28", "108.995, 52.6832, -34.0625, 1.99" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "11.6061, 34.5983, -7.37343, 0.59", "10.5437, 35.3252, -8.17898, 0.59", "10.2575, 35.4977, -8.44298, 0.96", "9.98159, 35.6406, -8.69116, 0.96", "9.69877, 35.7593, -8.98888, 0.81", "9.11395, 35.986, -9.72007, 0.59", "8.89465, 36.0873, -10.0243, 0.81", "8.65761, 36.2156, -10.4179, 0.81", "8.51671, 36.3177, -10.6822, 0.74", "8.14541, 36.7097, -11.4783, 0.74", "7.92781, 37.0863, -12.0313, 0.74", "7.78488, 37.5874, -12.5241, 0.52", "7.75784, 37.9478, -12.7795, 0.66", "7.79831, 38.5264, -13.0258, 0.96", "7.87181, 38.9363, -13.1205, 0.88", "7.97049, 39.3146, -13.1319, 0.44", "8.09634, 39.7044, -13.092, 0.29", "8.26777, 40.1487, -12.9898, 0.29", "8.46766, 40.6443, -12.8438, 0.88", "8.5812, 40.9347, -12.7478, 1.11", "8.6859, 41.2357, -12.6446, 1.18", "8.76839, 41.5323, -12.5506, 0.88", "8.91576, 42.2576, -12.3705, 0.37", "8.97275, 42.6856, -12.3015, 0.29", "9.01729, 43.2631, -12.285, 0.29", "9.01713, 43.6525, -12.3073, 0.29", "8.98183, 44.3198, -12.4713, 1.25", "8.95015, 44.7497, -12.6477, 1.77", "8.93884, 44.95, -12.7611, 1.92", "8.93229, 45.3464, -13.008, 1.92", "8.94665, 45.7304, -13.2583, 1.11", "9.04665, 46.6362, -13.8697, 0.44", "9.10999, 47.0476, -14.1373, 0.66", "9.17867, 47.485, -14.3769, 0.88", "9.2349, 47.837, -14.5436, 1.11", "9.27981, 48.122, -14.6592, 1.11", "9.34631, 48.5476, -14.8301, 0.66", "9.42345, 49.1677, -15.0432, 0.37", "9.51722, 49.9423, -15.3028, 0.88", "9.57078, 50.3162, -15.4403, 1.47", "9.64058, 50.668, -15.5761, 1.77", "9.75694, 51.0966, -15.7618, 1.92", "9.86099, 51.3715, -15.9061, 2.14", "10.0611, 51.7439, -16.1696, 2.14", "10.3184, 52.1307, -16.6427, 1.62", "10.4842, 52.375, -17.0483, 1.11", "10.6678, 52.6776, -17.6272, 0.66", "10.7992, 52.9638, -18.2435, 0.81", "10.8703, 53.2182, -18.8604, 0.66", "10.9234, 53.8972, -20.6831, 0.81", "10.8872, 54.1323, -21.2982, 0.74", "10.8242, 54.3151, -21.7604, 1.11", "10.6419, 54.672, -22.5881, 1.62", "10.4433, 54.9861, -23.2457, 1.69", "10.1883, 55.3451, -23.8907, 1.55", "9.92158, 55.7624, -24.4688, 0.37", "9.84007, 55.9437, -24.6772, 0.52", "9.76255, 56.2222, -24.9388, 0.66", "9.71696, 56.4862, -25.1346, 0.66", "9.67756, 56.8384, -25.3687, 0.22", "9.63819, 57.3505, -25.745, 0.22", "9.58796, 58.1111, -26.3969, 1.99", "9.55217, 58.5183, -26.7677, 2.43", "9.51332, 58.8622, -27.092, 2.73", "9.4694, 59.1447, -27.3759, 2.95", "9.18264, 60.3868, -28.6909, 0.52", "9.04515, 60.7769, -29.1334, 0.59", "8.94082, 61.0197, -29.4248, 1.11", "8.87134, 61.1778, -29.6131, 1.25", "8.75351, 61.4618, -29.9169, 1.25", "8.58888, 61.8684, -30.3208, 0.22", "8.44004, 62.2265, -30.6637, 0.22", "8.31082, 62.5668, -31.0073, 0.37", "8.19626, 62.882, -31.3736, 0.37", "8.01407, 63.4227, -32.0075, 1.69", "7.87735, 63.8312, -32.4748, 2.28", "7.79017, 64.0752, -32.7565, 2.65", "7.67192, 64.405, -33.1156, 2.65", "7.49148, 64.9158, -33.6513, 2.5", "7.21956, 65.7691, -34.4914, 0.29", "7.1395, 66.1, -34.7997, 0.29", "7.09394, 66.4282, -35.087, 0.29", "7.06648, 66.82, -35.4187, 0.74", "7.05623, 67.1999, -35.7335, 0.96", "7.05887, 67.643, -36.1144, 0.96", "7.05338, 67.9815, -36.472, 0.29", "7.00725, 68.4637, -37.0273, 0.22", "6.97603, 68.6, -37.1937, 0.22", "6.90673, 68.7782, -37.435, 0.22", "6.7856, 69.0236, -37.773, 0.22", "6.43665, 69.6501, -38.6993, 2.28", "6.29411, 69.9141, -39.1312, 2.43", "6.19341, 70.1164, -39.4773, 2.65", "5.82057, 71.0116, -41.0467, 0.59", "5.72683, 71.2772, -41.5218, 0.52", "5.57626, 71.7679, -42.3982, 0.59", "5.43601, 72.2925, -43.3021, 0.37", "5.3873, 72.5082, -43.6453, 0.52", "5.346, 72.7476, -43.9906, 0.66", "5.31326, 72.9655, -44.2638, 0.66", "5.27252, 73.2532, -44.5757, 0.44", "5.17233, 73.9363, -45.2175, 2.14", "5.08447, 74.4704, -45.6886, 2.5", "5.01379, 74.8983, -46.0665, 1.92", "4.85334, 75.8717, -46.9172, 0.22", "4.78723, 76.2858, -47.2655, 0.22", "4.64169, 77.2535, -48.0427, 1.69", "4.61305, 77.4403, -48.1783, 2.06", "4.55484, 77.8363, -48.4276, 2.14", "4.52326, 78.0523, -48.5469, 1.62", "4.40717, 78.9565, -49.0071, 0.37", "4.34553, 79.4449, -49.2561, 0.37", "4.25465, 80.1915, -49.6272, 0.37", "4.1842, 80.7247, -49.9034, 0.37", "4.03354, 81.8527, -50.5058, 1.69", "3.9865, 82.1914, -50.6923, 1.92", "3.95851, 82.3961, -50.8069, 1.92", "3.86573, 83.0918, -51.2053, 0.22", "3.80811, 83.6175, -51.5089, 0.22", "3.77696, 84.0712, -51.7478, 0.37", "3.76769, 84.4139, -51.9213, 0.37", "3.76684, 84.8134, -52.1114, 1.33", "3.77846, 85.106, -52.2475, 1.84", "3.8007, 85.4269, -52.3873, 1.84", "3.86629, 86.2321, -52.7155, 0.29", "3.89401, 86.7324, -52.909, 0.44", "3.90196, 86.9666, -52.9956, 0.59", "3.90439, 87.3419, -53.1224, 0.59", "3.8889, 88.0427, -53.3679, 0.22", "3.86488, 88.5443, -53.5588, 1.33", "3.84305, 88.7726, -53.6555, 1.77", "3.81516, 89.0027, -53.7516, 1.92", "3.78274, 89.2315, -53.8529, 1.4", "3.59961, 90.3074, -54.4463, 0.22", "3.51721, 90.7533, -54.7257, 0.22", "3.39873, 91.4153, -55.1694, 1.11", "3.34745, 91.7388, -55.3921, 1.55", "3.30047, 92.0747, -55.6229, 1.4", "3.1396, 93.3278, -56.4851, 0.29", "3.09798, 93.659, -56.6989, 0.37", "3.06444, 93.9544, -56.8908, 0.44", "3.0319, 94.31, -57.1202, 0.44", "3.00474, 94.6454, -57.3247, 0.22", "2.99257, 94.9527, -57.4959, 0.22", "2.99215, 95.632, -57.8371, 1.33", "2.99424, 96.0003, -58.0805, 1.55", "2.99349, 96.2038, -58.2424, 1.55", "2.98136, 97.0831, -59.0798, 0.22", "2.96696, 97.6062, -59.6921, 0.22", "2.95621, 97.8823, -60.0538, 0.66", "2.90406, 98.771, -61.3946, 0.44", "2.88448, 99.2175, -62.1916, 1.4", "2.86303, 99.5927, -62.9094, 1.77", "2.81152, 100.233, -64.2612, 1.33", "2.78221, 100.492, -64.8383, 1.62", "2.69985, 101.192, -66.4446, 0.74", "2.58827, 102.417, -69.2214, 2.58" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "108.995, 52.6832, -34.0625, 0.44", "110.414, 52.8964, -33.8144, 0.44", "111.293, 53.0436, -33.6935, 0.37", "112.382, 53.2349, -33.5602, 0.29", "113.066, 53.3386, -33.4991, 0.59", "114.434, 53.4694, -33.4406, 0.29", "115.377, 53.5587, -33.4145, 0.96", "116.073, 53.6539, -33.429, 1.25", "116.65, 53.7457, -33.4491, 1.33", "118.064, 53.9811, -33.5, 0.22", "119.824, 54.2776, -33.5927, 0.22", "120.747, 54.4369, -33.6425, 0.37", "122.02, 54.6726, -33.7045, 0.22", "123.036, 54.9024, -33.733, 1.18", "123.726, 55.0896, -33.7423, 1.4", "124.318, 55.2899, -33.7257, 1.4", "125.121, 55.6045, -33.6645, 0.44", "126.099, 55.9695, -33.5512, 0.22", "126.656, 56.1694, -33.4783, 0.52", "127.098, 56.3244, -33.4292, 0.52", "128.497, 56.8472, -33.2764, 0.22", "129.362, 57.1691, -33.1771, 0.81", "130.247, 57.4567, -33.0991, 1.25", "131.304, 57.759, -33.0056, 1.25", "132.939, 58.171, -32.8323, 0.22", "133.716, 58.3503, -32.7502, 0.59", "134.329, 58.477, -32.6835, 0.74", "136.357, 58.7909, -32.4371, 0.22", "137.38, 58.9114, -32.2947, 0.22", "138.858, 59.0517, -32.0221, 1.25", "139.653, 59.1077, -31.862, 1.62", "139.942, 59.1274, -31.8096, 1.62", "142.562, 59.3219, -31.3345, 0.22", "143.292, 59.3719, -31.195, 0.22", "144.496, 59.4289, -30.9848, 1.03", "145.302, 59.4424, -30.8482, 1.25", "147.14, 59.4419, -30.5238, 0.22", "147.903, 59.4289, -30.4076, 0.22", "148.495, 59.4105, -30.3389, 0.66", "150.016, 59.3059, -30.2155, 0.22", "151.051, 59.1928, -30.1853, 0.22", "151.909, 59.075, -30.182, 0.74", "152.708, 58.9697, -30.2018, 0.96", "154.117, 58.8274, -30.2662, 0.22", "155.756, 58.7209, -30.3401, 1.33", "156.627, 58.6938, -30.3687, 1.77", "157.09, 58.6972, -30.3773, 1.77", "159.758, 58.7785, -30.3606, 0.22", "160.318, 58.8057, -30.3415, 0.22", "160.978, 58.8517, -30.3141, 0.74", "161.556, 58.9073, -30.284, 0.74", "163.052, 59.0609, -30.1943, 0.22", "163.808, 59.1417, -30.1603, 1.03", "164.37, 59.2099, -30.1479, 1.33", "165.013, 59.3127, -30.1322, 1.47", "166.958, 59.688, -30.0571, 0.15", "167.511, 59.8177, -30.019, 0.29", "168.022, 59.9746, -29.9493, 0.29", "169.102, 60.4029, -29.665, 0.15", "169.914, 60.8218, -29.3443, 0.66", "170.209, 61.0087, -29.1893, 0.74", "170.413, 61.1707, -29.0478, 0.74", "171.393, 61.9564, -28.2973, 0.15", "172.399, 62.7636, -27.4931, 0.15", "173.098, 63.3175, -26.9235, 1.03", "173.437, 63.5765, -26.6591, 1.18", "173.69, 63.7557, -26.4722, 1.18", "175.113, 64.6872, -25.4728, 0.15", "175.679, 65.028, -25.113, 0.81", "176.078, 65.2551, -24.8949, 1.11", "176.434, 65.4536, -24.7113, 1.11", "179.041, 66.8867, -23.4967, 0.22", "179.885, 67.3616, -23.1007, 0.88", "180.396, 67.6656, -22.8574, 0.74", "181.671, 68.4553, -22.1915, 0.22", "182.15, 68.7628, -21.92, 0.59", "182.682, 69.1323, -21.5937, 0.74", "183.953, 70.151, -20.7231, 0.22", "184.519, 70.6127, -20.3002, 1.47", "185.079, 71.066, -19.8381, 1.77", "185.453, 71.3517, -19.5152, 1.77", "186.934, 72.4872, -18.178, 0.22", "187.589, 72.9912, -17.5781, 0.66", "188.041, 73.3248, -17.1937, 0.88", "188.949, 74.0057, -16.3669, 0.22", "189.387, 74.3461, -15.9603, 0.44", "190.252, 75.0646, -15.096, 0.22", "190.372, 75.1728, -14.9615, 0.81", "190.602, 75.4077, -14.7103, 0.81", "191.705, 76.7208, -13.6034, 0.22", "192.256, 77.3951, -13.1124, 1.03", "192.447, 77.6238, -12.9582, 1.33", "192.758, 77.972, -12.7344, 1.33", "194.473, 79.6274, -11.7368, 0.22", "195.377, 80.3531, -11.3185, 0.22", "196.427, 81.0243, -10.9333, 1.03", "196.906, 81.2679, -10.7786, 1.33", "197.327, 81.4326, -10.6495, 1.33", "199.24, 81.986, -10.0638, 0.22", "200.56, 82.2361, -9.65417, 0.22", "201.795, 82.4269, -9.23346, 0.74", "202.482, 82.5392, -8.95895, 0.88", "203.909, 82.8008, -8.26774, 0.22", "204.562, 82.9354, -7.88031, 0.22", "204.861, 83.0104, -7.64536, 0.66", "205.111, 83.0624, -7.44272, 0.66", "206.169, 83.2389, -6.61285, 0.22", "206.849, 83.3328, -6.10395, 0.88", "207.026, 83.3517, -5.98123, 1.18", "207.238, 83.3681, -5.84411, 1.18", "209.166, 83.4825, -4.59977, 0.22", "210.015, 83.5267, -4.05557, 0.44", "210.351, 83.5461, -3.84144, 0.29", "210.968, 83.5987, -3.54691, 0.29", "212.068, 83.7512, -3.15474, 0.96", "212.645, 83.8483, -3.02015, 1.18", "213.13, 83.9437, -2.94502, 1.18", "213.561, 84.0284, -2.88388, 0.88", "216.612, 84.6254, -2.57361, 0.22", "217.198, 84.7415, -2.54173, 0.81", "217.75, 84.851, -2.52893, 0.81", "219.444, 85.1267, -2.43838, 0.22", "220.208, 85.2382, -2.38714, 0.22", "221.477, 85.4062, -2.27179, 1.03", "222.21, 85.5029, -2.17924, 1.11", "224.257, 85.7644, -2.00487, 0.22", "225.573, 85.9575, -1.94329, 0.22", "226.949, 86.1591, -1.96014, 0.96", "227.689, 86.2622, -1.98535, 1.18", "230.096, 86.6081, -2.12171, 0.22", "231.251, 86.7872, -2.22624, 0.22", "232.352, 86.9758, -2.37162, 1.11", "233.161, 87.1226, -2.53019, 1.33", "233.381, 87.1554, -2.58178, 1.47", "234.463, 87.3015, -2.89113, 1.18", "236.131, 87.5109, -3.48285, 0.15", "236.869, 87.5911, -3.76168, 0.59", "238.026, 87.6908, -4.20865, 0.81", "239.608, 87.8289, -4.81387, 0.22", "240.598, 87.9304, -5.21722, 1.03", "241.414, 88.0282, -5.58067, 1.25", "243.463, 88.3867, -6.71203, 0.22", "244.346, 88.5885, -7.23545, 0.37", "245.151, 88.8136, -7.74228, 0.15", "246.237, 89.1582, -8.47599, 0.59", "246.921, 89.352, -8.9938, 0.59", "248.954, 89.8307, -10.5944, 0.22", "249.612, 89.969, -11.1037, 0.22", "251.294, 90.2595, -12.3373, 1.25", "251.711, 90.3107, -12.6174, 1.92", "255.941, 90.6485, -15.3883, 0.52", "257.729, 90.7409, -16.5698, 0.29", "258.668, 90.782, -17.2032, 0.96", "259.668, 90.8459, -17.9024, 1.18", "261.362, 91.0227, -19.0838, 0.81", "264.211, 91.4477, -21.1215, 1.69", "265.494, 91.75, -22.0667, 1.92", "268.202, 92.5975, -24.197, 0.22", "268.875, 92.8676, -24.7694, 0.22", "269.692, 93.2935, -25.5103, 1.33", "270.823, 94.0544, -26.6199, 1.33", "272.364, 95.337, -28.2932, 0.22", "272.949, 95.8987, -29.0493, 0.22", "273.698, 96.6305, -30.2448, 0.22", "274.468, 97.2797, -31.5891, 1.4", "274.804, 97.5201, -32.2112, 1.62", "276.38, 98.4001, -35.1033, 0.22", "277.197, 98.7883, -36.5918, 0.96", "278.725, 99.4105, -39.2576, 1.55", "280.123, 99.906, -41.5433, 2.21", "281.169, 100.24, -43.1602, 2.43", "284.07, 101.111, -47.3039, 0.81", "284.785, 101.32, -48.241, 0.29", "285.917, 101.662, -49.6128, 0.74", "288.162, 102.403, -52.0605, 0.81", "288.749, 102.6, -52.6262, 0.96", "290.646, 103.198, -54.2254, 0.22", "291.295, 103.381, -54.6928, 0.52", "291.774, 103.505, -55.0112, 0.59", "293.015, 103.819, -55.7516, 0.22", "294.667, 104.195, -56.6866, 1.47", "295.528, 104.402, -57.2146, 1.69", "297.57, 104.92, -58.6335, 0.37", "298.241, 105.103, -59.1645, 0.88", "298.922, 105.302, -59.7771, 1.11", "301.103, 105.952, -62.0631, 0.22", "301.811, 106.148, -62.8324, 0.37", "303.411, 106.605, -64.6371, 0.22", "304.877, 106.996, -66.382, 1.47", "305.865, 107.245, -67.5933, 1.69", "307.553, 107.701, -69.7042, 1.77", "308.523, 107.944, -70.9326, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "108.995, 52.6832, -34.0625, 0.29", "110.168, 53.6873, -34.0703, 0.29", "110.742, 54.1722, -34.0502, 0.29", "111.404, 54.729, -34.0194, 0.81", "111.838, 55.0874, -33.9878, 0.96", "112.621, 55.7169, -33.9122, 0.22", "113.133, 56.1189, -33.8525, 0.44", "113.388, 56.302, -33.8139, 0.44", "113.934, 56.6593, -33.6914, 0.22", "114.489, 56.9649, -33.5367, 1.03", "114.751, 57.0962, -33.4418, 1.33", "114.97, 57.1928, -33.3482, 1.55", "115.462, 57.3921, -33.0861, 1.25", "116.215, 57.6818, -32.609, 0.15", "116.641, 57.8488, -32.2841, 0.74", "117.17, 58.0812, -31.8115, 1.11", "117.48, 58.2217, -31.561, 1.18", "117.886, 58.407, -31.2771, 0.88", "118.617, 58.7558, -30.8086, 0.15", "119.061, 58.9621, -30.5805, 0.37", "119.413, 59.1158, -30.4461, 0.52", "120.79, 59.6493, -30.1147, 0.22", "121.456, 59.8919, -29.9991, 1.25", "121.901, 60.0409, -29.9436, 1.77", "122.275, 60.1544, -29.9111, 1.77", "122.607, 60.2527, -29.8858, 1.55", "123.809, 60.6185, -29.7728, 0.22", "124.24, 60.7648, -29.7064, 0.37", "124.663, 60.9213, -29.6582, 0.37", "125.457, 61.2365, -29.5836, 0.15", "126.015, 61.5057, -29.5348, 0.96", "126.236, 61.6323, -29.5212, 1.11", "126.422, 61.759, -29.516, 1.11", "127.533, 62.6039, -29.4889, 0.22", "128.02, 62.9993, -29.4822, 0.22", "128.622, 63.5151, -29.4716, 0.22", "129.022, 63.8606, -29.4748, 0.22", "129.606, 64.394, -29.4864, 1.18", "129.852, 64.6283, -29.4902, 1.84", "130.12, 64.9035, -29.501, 1.84", "130.28, 65.0678, -29.5115, 1.84", "131.317, 66.0793, -29.6075, 0.22", "131.84, 66.6168, -29.675, 0.81", "132.036, 66.8372, -29.7094, 1.11", "132.34, 67.2081, -29.7669, 1.11", "132.492, 67.4067, -29.7958, 0.74", "132.947, 68.0102, -29.8718, 0.29", "133.211, 68.3737, -29.9033, 0.44", "133.467, 68.699, -29.9234, 0.44", "133.765, 69.0608, -29.9273, 0.22", "133.998, 69.3403, -29.9117, 0.22", "134.574, 70.0268, -29.8529, 1.18", "134.765, 70.2524, -29.8247, 1.4", "134.975, 70.4975, -29.8005, 1.4", "135.283, 70.8505, -29.7699, 0.88", "135.519, 71.1442, -29.7293, 0.37", "135.922, 71.6953, -29.6277, 0.22", "136.174, 72.0809, -29.5341, 0.29", "136.409, 72.4606, -29.4299, 0.29", "136.881, 73.2467, -29.1962, 0.22", "137.283, 73.9283, -28.9903, 0.22", "137.626, 74.5394, -28.8136, 1.33", "137.843, 74.939, -28.7008, 1.55", "138.513, 76.2205, -28.3622, 0.22", "138.79, 76.7371, -28.2566, 0.22", "139.169, 77.4518, -28.1553, 0.22", "139.643, 78.3199, -28.086, 1.55", "139.791, 78.5816, -28.0743, 1.84", "139.95, 78.8585, -28.0721, 1.84", "140.665, 80.0674, -28.1041, 0.22", "140.941, 80.5063, -28.1335, 0.44", "141.25, 80.9401, -28.1646, 0.59", "141.891, 81.7792, -28.2218, 0.29", "142.165, 82.1406, -28.2446, 1.18", "142.43, 82.4999, -28.2554, 1.4", "142.662, 82.818, -28.2492, 1.4", "143.397, 83.8121, -28.1905, 0.22", "143.658, 84.1632, -28.1418, 0.22", "143.862, 84.4445, -28.0752, 0.44", "144.112, 84.8298, -27.9612, 0.22", "144.22, 85.029, -27.8966, 0.22", "144.475, 85.5609, -27.7184, 1.11", "144.632, 85.9177, -27.6052, 1.33", "144.656, 85.9663, -27.5894, 1.55", "145.16, 86.7822, -27.3318, 0.22", "145.343, 87.073, -27.2306, 0.22", "145.535, 87.3808, -27.1057, 0.44", "145.679, 87.6225, -26.9915, 0.44", "146.035, 88.2496, -26.6917, 0.22", "146.323, 88.7645, -26.4417, 0.22", "146.709, 89.4656, -26.0974, 1.18", "146.88, 89.8071, -25.9515, 1.33", "147.049, 90.2256, -25.7666, 1.11", "147.287, 90.968, -25.4455, 0.22", "147.343, 91.1869, -25.3548, 0.44", "147.437, 91.5636, -25.1926, 0.44", "147.595, 92.0571, -24.9713, 0.22", "147.993, 92.9848, -24.493, 0.22", "148.203, 93.3552, -24.2716, 1.11", "148.408, 93.6738, -24.0637, 1.55", "148.659, 94.0378, -23.8377, 1.62", "148.884, 94.3365, -23.6508, 1.25", "149.524, 95.113, -23.16, 0.22", "149.999, 95.6494, -22.8553, 0.22", "150.299, 95.9904, -22.6646, 0.22", "150.762, 96.5387, -22.3797, 0.44", "151.034, 96.8818, -22.2228, 0.44", "151.357, 97.3043, -22.0401, 0.22", "151.626, 97.6579, -21.8857, 0.22", "151.93, 98.0277, -21.7137, 0.59", "152.096, 98.2037, -21.6312, 0.59", "152.468, 98.5813, -21.4729, 0.22", "152.935, 99.0552, -21.3031, 0.74", "153.147, 99.2613, -21.2307, 0.88", "153.502, 99.5774, -21.1144, 0.52", "154.12, 100.081, -20.923, 0.22", "154.68, 100.522, -20.795, 0.22", "155.317, 101.025, -20.6923, 1.11", "155.658, 101.297, -20.6651, 1.47", "156.013, 101.59, -20.6655, 1.55", "157.017, 102.448, -20.7751, 0.22", "157.849, 103.186, -20.9373, 0.96", "158.095, 103.408, -20.9994, 1.4", "158.496, 103.784, -21.1304, 1.25", "158.798, 104.081, -21.2389, 0.88", "159.516, 104.832, -21.5037, 0.22", "159.883, 105.238, -21.654, 0.37", "160.241, 105.651, -21.7869, 0.22", "160.801, 106.277, -21.9903, 0.52", "161.098, 106.621, -22.0981, 0.66", "161.648, 107.271, -22.3237, 0.22", "162.028, 107.743, -22.504, 0.66", "162.133, 107.883, -22.563, 0.66", "162.751, 108.787, -22.9666, 0.22", "162.998, 109.216, -23.1403, 0.59", "163.486, 110.247, -23.5288, 0.22", "163.625, 110.617, -23.6515, 0.22", "163.825, 111.249, -23.8386, 1.47", "163.897, 111.55, -23.925, 1.69", "164.076, 112.824, -24.2618, 0.22", "164.163, 113.666, -24.486, 0.22", "164.196, 114.285, -24.6461, 0.74", "164.211, 114.628, -24.7364, 0.88", "164.252, 115.718, -25.0338, 0.22", "164.286, 116.611, -25.296, 1.25", "164.307, 116.993, -25.422, 1.25", "164.338, 117.377, -25.5518, 0.74", "164.406, 118.076, -25.7865, 0.22", "164.5, 118.887, -26.0342, 1.4", "164.541, 119.189, -26.1197, 1.62", "164.68, 120.188, -26.3889, 0.22", "164.766, 120.805, -26.5334, 0.59", "164.793, 121.039, -26.5693, 0.59", "164.875, 122.048, -26.6592, 0.15", "164.905, 122.63, -26.6697, 0.15", "164.916, 123.158, -26.6517, 0.15", "164.917, 123.839, -26.614, 0.15", "164.923, 125.213, -26.5317, 1.18", "164.926, 125.453, -26.5329, 1.47", "164.934, 125.814, -26.5699, 1.11", "164.96, 126.679, -26.7462, 0.22", "164.985, 127.307, -26.9383, 0.96", "165.01, 127.713, -27.1143, 0.96", "165.216, 128.745, -27.7329, 0.22", "165.425, 129.497, -28.2056, 0.22", "165.638, 130.135, -28.6164, 1.18", "165.723, 130.361, -28.7634, 1.4", "165.896, 130.796, -29.0256, 1.55", "166.655, 132.573, -30.0362, 0.22", "167.081, 133.48, -30.5145, 0.22", "167.396, 134.095, -30.8281, 0.81", "167.474, 134.238, -30.8997, 1.03", "167.951, 135.118, -31.3377, 0.22", "168.157, 135.51, -31.52, 0.66", "168.319, 135.843, -31.6719, 0.66", "168.618, 136.42, -31.9667, 0.15", "168.951, 137.103, -32.2942, 1.25", "169.104, 137.463, -32.4507, 1.4", "169.414, 138.277, -32.7757, 0.15", "169.583, 138.779, -32.9515, 0.37", "169.657, 139.018, -33.0232, 0.37", "170.042, 140.32, -33.3797, 0.22", "170.249, 141.029, -33.5538, 1.03", "170.338, 141.342, -33.6226, 1.18", "170.385, 141.515, -33.6589, 1.18", "170.695, 142.696, -33.8813, 0.22", "170.831, 143.181, -33.9742, 0.52", "170.899, 143.408, -34.0149, 0.52", "171.188, 144.361, -34.1583, 0.22", "171.354, 144.92, -34.2241, 0.22", "171.549, 145.552, -34.2769, 1.11", "171.703, 146.047, -34.3031, 1.11", "172.111, 147.296, -34.3404, 0.22", "172.374, 148.033, -34.3541, 0.22", "172.626, 148.673, -34.3534, 1.03", "172.804, 149.1, -34.3545, 1.47", "172.943, 149.433, -34.3577, 1.11", "173.285, 150.341, -34.341, 0.15", "173.409, 150.668, -34.3354, 0.37", "173.695, 151.414, -34.3257, 0.22", "173.837, 151.808, -34.3134, 0.37", "173.917, 152.027, -34.3094, 0.37", "174.324, 153.06, -34.2885, 0.22", "174.579, 153.683, -34.2753, 0.81", "174.739, 154.055, -34.2651, 1.03", "175.175, 155.008, -34.2353, 0.15", "175.437, 155.548, -34.2157, 0.29", "175.684, 156.043, -34.2115, 0.22", "175.914, 156.499, -34.2266, 0.88", "176.031, 156.767, -34.2336, 1.11", "176.134, 157.045, -34.2456, 1.11", "176.437, 158.079, -34.3188, 0.22", "176.557, 158.651, -34.3619, 1.03", "176.602, 158.941, -34.3895, 1.25", "176.733, 159.923, -34.4936, 0.22", "176.818, 160.744, -34.587, 0.88", "176.886, 161.548, -34.6787, 0.29", "176.928, 162.198, -34.7545, 0.96", "176.946, 162.505, -34.7907, 0.96", "176.97, 163.074, -34.8604, 0.22", "176.978, 163.539, -34.9221, 0.37", "176.986, 164.194, -35.0159, 0.22", "176.99, 164.768, -35.1032, 0.52", "177.016, 165.917, -35.2773, 0.22", "177.03, 166.437, -35.367, 0.81", "177.049, 167.065, -35.4864, 0.22", "177.07, 167.536, -35.5801, 0.88", "177.104, 167.932, -35.6602, 1.03", "177.288, 169.423, -35.9579, 0.22", "177.373, 169.935, -36.0543, 0.22", "177.484, 170.503, -36.1524, 0.81", "177.535, 170.74, -36.1901, 1.03", "177.822, 171.939, -36.3857, 0.22", "177.885, 172.216, -36.4279, 0.29", "178.045, 172.984, -36.5355, 0.15", "178.124, 173.398, -36.5836, 0.29", "178.224, 173.972, -36.6537, 0.88", "178.295, 174.458, -36.726, 0.88", "178.384, 175.406, -36.8089, 0.22", "178.409, 175.815, -36.8292, 0.22", "178.422, 176.301, -36.8542, 0.88", "178.422, 176.625, -36.8573, 1.11", "178.42, 177.0, -36.8428, 1.11", "178.444, 178.24, -36.6926, 0.22", "178.502, 178.969, -36.5709, 0.22", "178.559, 179.499, -36.4439, 0.22", "178.658, 180.189, -36.2323, 0.81", "178.71, 180.468, -36.1334, 1.03", "178.735, 181.191, -35.3987, 0.22", "178.705, 181.442, -35.0133, 0.22", "178.65, 181.813, -34.2804, 1.11", "178.632, 181.954, -33.9631, 1.25", "178.618, 182.091, -33.6261, 1.25", "178.477, 183.968, -28.7477, 0.66", "178.463, 184.22, -28.0634, 0.88", "178.431, 184.606, -26.928, 0.29", "178.41, 184.807, -26.2916, 0.22", "178.396, 184.952, -25.8234, 0.44", "178.399, 185.083, -25.406, 0.22", "178.748, 185.396, -25.0197, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.58827, 102.417, -69.2214, 1.77", "3.0869, 102.598, -73.557, 1.77", "3.59167, 103.06, -77.6251, 1.47", "3.86212, 103.45, -79.9182, 1.18", "4.10796, 103.957, -82.3293, 1.11", "4.31155, 104.52, -84.7029, 0.88", "4.37039, 104.763, -85.6561, 0.66", "4.41535, 105.36, -87.4809, 0.96", "4.36829, 106.151, -89.4769, 1.11", "4.24108, 106.828, -91.2163, 1.33", "4.14036, 107.153, -92.1568, 1.62", "3.79126, 107.916, -94.5917, 1.47", "3.01571, 109.22, -99.1332, 0.96", "2.57601, 109.844, -101.341, 0.96", "1.94594, 110.689, -104.236, 1.55", "1.34638, 111.496, -106.984, 1.33", "0.882092, 112.148, -109.195, 1.62", "0.278794, 113.026, -112.085, 1.11", "0.0686269, 113.33, -113.058, 0.59", "-0.623047, 114.351, -116.261, 0.88", "-1.14282, 115.17, -118.661, 1.25", "-1.58861, 115.906, -120.689, 1.4", "-2.11767, 116.811, -123.1, 0.52", "-2.61994, 117.704, -125.323, 0.59", "-2.92252, 118.215, -126.64, 0.37", "-3.10707, 118.492, -127.329, 0.59", "-3.50831, 119.048, -128.677, 0.44", "-4.09269, 119.842, -130.548, 0.37", "-4.75439, 120.782, -132.689, 1.47", "-5.63438, 122.071, -135.507, 1.84", "-6.5452, 123.417, -138.323, 0.52", "-7.14702, 124.307, -140.062, 0.52", "-7.50453, 124.825, -140.988, 1.18", "-7.86015, 125.288, -141.748, 1.18", "-9.1734, 126.87, -144.058, 0.22", "-9.48607, 127.244, -144.51, 0.37", "-10.0782, 127.918, -145.293, 0.96", "-10.8496, 128.752, -146.278, 1.25", "-12.4421, 130.371, -148.295, 0.22", "-12.8184, 130.73, -148.812, 0.37", "-13.1484, 131.042, -149.302, 0.37", "-14.3046, 132.185, -151.32, 1.11", "-14.5922, 132.483, -151.883, 1.55", "-14.8204, 132.739, -152.367, 1.69", "-16.4279, 134.643, -156.207, 0.29", "-16.7405, 135.043, -157.111, 0.29", "-17.3608, 135.991, -159.335, 1.03", "-17.5388, 136.341, -160.19, 0.81", "-17.6633, 136.743, -161.203, 1.11", "-17.779, 137.585, -163.324, 1.33", "-17.7443, 139.189, -167.397, 0.59", "-17.7098, 139.754, -168.855, 1.18", "-17.6488, 140.445, -170.659, 1.33", "-17.4735, 141.905, -174.428, 0.52", "-17.3855, 142.465, -175.807, 0.81", "-17.2855, 143.136, -177.362, 0.81", "-17.1469, 144.137, -179.525, 0.37", "-17.101, 144.636, -180.626, 0.37", "-17.0762, 145.04, -181.509, 0.22", "-17.0311, 145.916, -183.391, 1.18", "-16.9257, 147.435, -186.574, 1.33", "-16.8278, 148.38, -188.497, 0.44", "-16.6017, 149.543, -190.933, 0.74", "-16.2567, 150.805, -193.614, 0.52", "-16.0285, 151.408, -194.983, 0.66", "-15.8054, 151.817, -195.974, 1.47", "-15.3771, 152.395, -197.418, 1.55", "-14.1248, 153.756, -201.16, 0.96", "-13.4905, 154.285, -202.656, 0.37", "-12.2561, 155.176, -205.362, 0.29", "-11.6223, 155.633, -206.808, 0.81", "-11.2437, 155.938, -207.763, 1.25", "-10.6252, 156.562, -209.523, 1.25", "-10.2207, 157.017, -210.948, 0.59", "-9.58047, 157.612, -213.585, 0.44", "-9.04208, 157.931, -215.988, 0.74", "-8.46635, 158.09, -218.662, 1.03", "-8.11505, 158.036, -220.122, 1.25", "-6.77245, 157.357, -225.014, 0.74", "-5.88128, 156.611, -227.923, 0.22", "-5.1033, 155.783, -229.864, 0.96", "-4.90307, 155.541, -230.267, 0.96", "-4.03924, 154.397, -231.711, 0.29", "-3.54866, 153.742, -232.335, 0.52", "-2.88439, 152.918, -232.894, 0.22", "-2.08293, 152.042, -233.433, 0.22", "-1.54301, 151.502, -233.729, 0.96", "-1.11087, 151.099, -233.925, 0.96", "0.996731, 149.277, -234.625, 0.22", "1.7859, 148.644, -234.796, 0.44", "2.43301, 148.164, -234.853, 0.44", "3.87136, 147.136, -234.796, 0.15", "5.03556, 146.307, -234.744, 0.15", "5.9181, 145.685, -234.746, 0.22", "6.57713, 145.227, -234.808, 0.81", "7.67982, 144.446, -234.892, 1.11", "8.13864, 144.102, -234.966, 1.11", "10.2391, 142.372, -236.26, 0.15", "10.9251, 141.746, -237.215, 0.37", "11.2205, 141.455, -237.784, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.58827, 102.417, -69.2214, 0.29", "1.48322, 103.759, -69.2447, 0.29", "0.749431, 104.631, -69.2979, 0.22", "0.469212, 104.957, -69.3312, 0.74", "0.197126, 105.276, -69.3854, 0.74", "-0.299481, 105.85, -69.5098, 0.22", "-0.819543, 106.44, -69.6672, 0.37", "-1.22371, 106.88, -69.8285, 0.22", "-1.67863, 107.358, -70.0342, 0.52", "-2.10792, 107.784, -70.2607, 0.52", "-2.6312, 108.278, -70.5917, 0.22", "-2.95343, 108.549, -70.833, 0.22", "-3.49604, 108.959, -71.2445, 1.47", "-3.79566, 109.173, -71.4574, 1.92", "-4.3, 109.516, -71.7952, 2.06", "-4.78725, 109.843, -72.0969, 1.69", "-5.88766, 110.598, -72.7638, 0.44", "-6.63552, 111.122, -73.1825, 0.22", "-7.18889, 111.523, -73.4867, 0.52", "-7.5345, 111.781, -73.6745, 0.66", "-8.35274, 112.435, -74.2027, 0.22", "-8.71951, 112.754, -74.4683, 0.22", "-9.24537, 113.266, -74.8939, 1.47", "-9.57587, 113.616, -75.2079, 1.77", "-9.96334, 114.061, -75.6123, 1.99", "-11.3232, 115.749, -77.2189, 0.22", "-11.8444, 116.456, -77.9025, 0.22", "-12.1734, 116.923, -78.362, 0.96", "-12.5169, 117.431, -78.8592, 1.03", "-12.9297, 118.054, -79.4379, 0.22", "-13.3739, 118.751, -80.0366, 0.22", "-13.6031, 119.12, -80.3415, 0.81", "-13.8279, 119.476, -80.6655, 0.96", "-14.3137, 120.186, -81.3887, 0.22", "-14.6091, 120.58, -81.8142, 0.22", "-15.0772, 121.179, -82.5078, 1.11", "-15.2928, 121.449, -82.8273, 1.4", "-15.5233, 121.728, -83.1756, 1.4", "-16.3142, 122.641, -84.368, 0.22", "-16.6744, 123.027, -84.8819, 0.22", "-17.2194, 123.564, -85.6053, 0.96", "-17.5451, 123.861, -86.0293, 1.18", "-18.2922, 124.472, -86.9891, 0.22", "-18.6105, 124.712, -87.3894, 0.22", "-19.1713, 125.105, -88.08, 1.55", "-19.4662, 125.309, -88.4389, 1.99", "-20.0643, 125.735, -89.1741, 1.99", "-21.3376, 126.722, -90.8188, 0.22", "-21.5759, 126.93, -91.1558, 0.44", "-21.6882, 127.053, -91.3322, 0.44", "-22.0246, 127.527, -91.926, 0.22", "-22.5024, 128.394, -92.7889, 1.25", "-22.7315, 128.917, -93.2003, 1.62", "-22.8589, 129.299, -93.4546, 1.62", "-23.2145, 130.368, -94.1315, 0.22", "-23.4005, 130.931, -94.4823, 0.22", "-23.5871, 131.529, -94.8441, 0.29", "-23.8069, 132.201, -95.2102, 0.66", "-23.9471, 132.609, -95.4223, 0.66", "-24.25, 133.405, -95.8362, 0.22", "-24.7289, 134.493, -96.4385, 1.55", "-24.9848, 135.045, -96.7597, 1.77", "-25.2042, 135.55, -97.0633, 1.92" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-25.2042, 135.55, -97.0633, 0.22", "-25.4102, 137.012, -98.2214, 0.22", "-25.4921, 137.31, -98.4485, 0.44", "-25.5466, 137.459, -98.565, 0.44", "-25.7473, 137.931, -98.9454, 0.22", "-25.9096, 138.269, -99.2217, 0.59", "-26.0654, 138.575, -99.4775, 0.59", "-26.454, 139.158, -100.004, 0.22", "-26.6274, 139.406, -100.251, 0.22", "-26.9874, 139.891, -100.748, 1.11", "-27.1355, 140.078, -100.948, 1.33", "-27.2659, 140.259, -101.155, 1.33", "-27.8147, 141.123, -102.14, 0.22", "-28.0597, 141.597, -102.658, 0.22", "-28.2693, 142.109, -103.206, 1.33", "-28.3448, 142.403, -103.545, 1.69", "-28.4468, 143.4, -104.82, 0.22", "-28.4453, 143.756, -105.298, 0.22", "-28.3726, 144.18, -105.919, 1.11", "-28.2353, 144.55, -106.513, 1.4", "-27.7866, 145.328, -107.876, 1.11", "-27.3418, 145.913, -109.024, 1.03", "-27.2006, 146.076, -109.37, 1.55", "-26.8063, 146.505, -110.33, 1.69", "-26.2693, 147.08, -111.667, 0.74", "-25.6569, 147.763, -113.231, 1.4", "-24.9029, 148.716, -115.247, 1.18", "-24.608, 149.118, -116.072, 1.55", "-24.3904, 149.456, -116.746, 1.69", "-23.9463, 150.364, -118.403, 1.18", "-23.7936, 150.788, -119.124, 0.59", "-23.543, 151.777, -120.609, 1.33", "-23.4467, 152.269, -121.25, 1.77", "-23.3064, 153.008, -122.134, 0.52", "-23.2099, 153.524, -122.703, 1.25", "-23.1002, 154.236, -123.435, 1.11", "-22.9798, 155.215, -124.433, 0.22", "-22.9062, 155.906, -125.154, 0.22", "-22.8586, 156.621, -125.905, 1.55", "-22.8532, 157.139, -126.465, 1.69", "-22.9028, 158.233, -127.71, 0.15", "-22.9573, 158.671, -128.226, 0.81", "-23.0605, 159.101, -128.753, 1.03", "-23.3182, 159.839, -129.653, 0.22", "-23.5239, 160.296, -130.199, 1.03", "-23.7408, 160.662, -130.602, 1.47", "-24.0382, 161.084, -131.032, 1.47", "-24.6301, 161.854, -131.8, 0.22", "-24.8892, 162.17, -132.109, 0.74", "-25.0764, 162.391, -132.325, 0.88", "-25.91, 163.367, -133.257, 0.22", "-26.3701, 163.904, -133.755, 1.11", "-26.623, 164.203, -134.029, 1.4", "-27.1548, 164.869, -134.664, 0.22", "-27.3234, 165.1, -134.875, 0.52", "-27.5846, 165.516, -135.235, 0.22", "-27.772, 165.9, -135.542, 0.52", "-27.8451, 166.068, -135.661, 0.52", "-28.0593, 166.578, -135.988, 0.22", "-28.296, 167.173, -136.36, 1.33", "-28.4334, 167.596, -136.663, 1.55", "-28.6523, 168.424, -137.267, 0.22", "-28.8001, 169.083, -137.774, 0.22", "-28.8451, 169.726, -138.373, 1.47", "-28.8389, 170.139, -138.766, 1.69", "-28.7614, 171.557, -140.062, 0.22", "-28.6915, 172.295, -140.724, 1.99", "-28.6276, 172.783, -141.166, 2.36", "-28.2111, 175.411, -143.589, 0.22", "-28.062, 176.463, -144.544, 0.44", "-27.9739, 177.324, -145.296, 0.22", "-27.9362, 178.84, -146.54, 1.84", "-27.957, 179.248, -146.863, 2.28", "-28.0159, 179.648, -147.152, 2.28", "-28.4219, 181.174, -148.212, 0.22", "-28.5526, 181.587, -148.522, 0.74", "-29.0291, 182.929, -149.57, 0.22", "-29.2549, 183.502, -149.969, 0.74", "-29.3782, 183.821, -150.181, 0.81", "-29.9719, 185.404, -151.218, 0.15", "-30.1589, 185.961, -151.606, 1.11", "-30.3429, 186.542, -152.032, 1.11", "-30.7495, 187.922, -153.104, 0.22", "-30.8692, 188.316, -153.414, 0.66", "-30.9715, 188.619, -153.646, 0.81", "-31.3549, 189.529, -154.326, 0.22", "-31.5514, 189.915, -154.67, 1.11", "-31.7072, 190.153, -154.94, 1.33", "-32.0701, 190.556, -155.611, 0.22", "-32.2409, 190.719, -155.931, 0.66", "-32.3922, 190.837, -156.208, 0.88", "-33.0592, 191.256, -157.377, 0.22", "-33.4749, 191.5, -158.144, 0.22", "-33.6791, 191.613, -158.52, 0.96", "-33.9426, 191.754, -159.009, 1.11", "-34.2925, 191.954, -159.63, 0.22", "-34.5407, 192.104, -160.012, 0.59", "-34.6413, 192.166, -160.128, 0.59", "-34.9256, 192.35, -160.395, 0.22", "-35.222, 192.561, -160.665, 0.44", "-35.3682, 192.669, -160.796, 0.52", "-35.9699, 193.161, -161.362, 0.15", "-36.1627, 193.326, -161.549, 0.44", "-36.7548, 193.846, -162.16, 0.22", "-37.0639, 194.134, -162.514, 0.44", "-37.2108, 194.277, -162.69, 0.44", "-37.4524, 194.525, -162.979, 0.22", "-37.6877, 194.773, -163.254, 0.59", "-37.9983, 195.098, -163.611, 0.59", "-38.4037, 195.522, -164.075, 0.22", "-38.754, 195.917, -164.504, 0.22", "-39.1259, 196.368, -164.993, 0.81", "-39.2158, 196.487, -165.124, 0.81", "-39.4129, 196.781, -165.454, 0.22", "-39.6152, 197.105, -165.81, 0.44", "-40.082, 197.912, -166.687, 0.22", "-40.1957, 198.119, -166.916, 0.96", "-40.4106, 198.513, -167.364, 1.11", "-41.0344, 199.623, -168.629, 0.22", "-41.3222, 200.128, -169.191, 0.22", "-41.4279, 200.312, -169.389, 0.74", "-41.5708, 200.553, -169.64, 0.96", "-41.7347, 200.828, -169.922, 1.18", "-41.8471, 201.028, -170.13, 1.18", "-42.2321, 201.777, -170.89, 0.15", "-42.3869, 202.096, -171.234, 0.52", "-42.4432, 202.223, -171.369, 0.81", "-42.5173, 202.408, -171.553, 0.81", "-42.8246, 203.237, -172.344, 0.22", "-42.9937, 203.714, -172.774, 0.96", "-43.1119, 204.058, -173.057, 1.47", "-43.4311, 205.048, -173.799, 0.22", "-43.6189, 205.685, -174.243, 0.22", "-43.8031, 206.364, -174.699, 1.03", "-43.8713, 206.631, -174.87, 1.03", "-43.9827, 207.169, -175.218, 0.22", "-44.0459, 207.591, -175.493, 0.44", "-44.0917, 208.015, -175.777, 0.37", "-44.1411, 208.646, -176.21, 0.74", "-44.156, 208.882, -176.374, 0.96", "-44.2363, 210.431, -177.498, 0.22", "-44.2688, 211.233, -178.105, 0.74", "-44.2778, 211.453, -178.269, 1.11", "-44.287, 211.68, -178.434, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-25.2042, 135.55, -97.0633, 0.22", "-26.4372, 136.551, -97.4094, 0.22", "-26.7825, 136.841, -97.5044, 0.22", "-27.0179, 137.074, -97.5649, 0.66", "-27.2534, 137.332, -97.6229, 0.88", "-27.4487, 137.565, -97.6532, 0.88", "-28.338, 138.668, -97.7451, 0.15", "-28.4376, 138.803, -97.749, 0.29", "-29.3619, 140.011, -97.7385, 0.22", "-29.6602, 140.388, -97.7268, 0.37", "-30.3881, 141.273, -97.7009, 0.22", "-31.0096, 141.992, -97.6654, 1.33", "-31.1381, 142.131, -97.6541, 1.62", "-32.1735, 143.139, -97.5569, 0.22", "-32.934, 143.778, -97.4689, 0.22", "-34.2943, 144.786, -97.2947, 0.22", "-34.8754, 145.174, -97.214, 0.96", "-35.3549, 145.464, -97.1292, 1.18", "-36.4383, 146.029, -96.881, 0.22", "-37.1843, 146.338, -96.6731, 0.22", "-37.9743, 146.615, -96.4264, 1.11", "-38.2052, 146.686, -96.3492, 1.4", "-38.6137, 146.833, -96.2228, 1.4", "-39.8721, 147.396, -95.8654, 0.22", "-40.4934, 147.755, -95.6934, 0.22", "-41.0382, 148.146, -95.5642, 0.44", "-41.2292, 148.308, -95.5246, 0.44", "-42.0883, 149.115, -95.372, 0.22", "-42.5474, 149.604, -95.3014, 0.66", "-42.9285, 150.064, -95.2538, 0.66", "-43.4135, 150.677, -95.1729, 0.22", "-43.6894, 151.012, -95.115, 0.44", "-43.9434, 151.306, -95.0562, 0.44", "-44.4383, 151.86, -94.9262, 0.22", "-44.6308, 152.073, -94.8717, 0.37", "-45.3235, 152.846, -94.6771, 0.22", "-45.6471, 153.221, -94.5684, 0.52", "-45.8077, 153.411, -94.506, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_22", "dend_17", "dend_0", "dend_33", "dend_32", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_1", "dend_28", "dend_25", "dend_20", "dend_19", "dend_15", "dend_2", "dend_30", "dend_29", "dend_27", "dend_26", "dend_12", "dend_3", "dend_14", "dend_13", "dend_9", "dend_4", "dend_11", "dend_10", "dend_8", "dend_5", "dend_7", "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_NBC_a3ddbb0af0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_31(0), soma_0(0.49999920512097007)
    connect dend_22(0), soma_0(0.49999920512097007)
    connect dend_17(0), soma_0(0.49999920512097007)
    connect dend_0(0), soma_0(0.49999920512097007)
    connect axon_0(0), soma_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.94345, -11.2623, 0.984599, 4.09477 ) }
    soma_0 { pt3dadd( -6.27697, -10.213, 0.889449, 7.03886 ) }
    soma_0 { pt3dadd( -5.61048, -9.16359, 0.794299, 9.0513 ) }
    soma_0 { pt3dadd( -4.94399, -8.11421, 0.699149, 10.7049 ) }
    soma_0 { pt3dadd( -4.2775, -7.06483, 0.603999, 12.1545 ) }
    soma_0 { pt3dadd( -3.61101, -6.01545, 0.508849, 13.4148 ) }
    soma_0 { pt3dadd( -2.94452, -4.96607, 0.413699, 14.3077 ) }
    soma_0 { pt3dadd( -2.27803, -3.91669, 0.318549, 14.7157 ) }
    soma_0 { pt3dadd( -1.61155, -2.86731, 0.223399, 14.8034 ) }
    soma_0 { pt3dadd( -0.945058, -1.81793, 0.128249, 14.7825 ) }
    soma_0 { pt3dadd( -0.278569, -0.768556, 0.0330986, 14.484 ) }
    soma_0 { pt3dadd( 0.387919, 0.280823, -0.0620515, 14.2451 ) }
    soma_0 { pt3dadd( 1.05441, 1.3302, -0.157201, 13.4939 ) }
    soma_0 { pt3dadd( 1.7209, 2.37958, -0.252352, 12.4612 ) }
    soma_0 { pt3dadd( 2.38738, 3.42896, -0.347502, 11.3514 ) }
    soma_0 { pt3dadd( 3.05387, 4.47834, -0.442652, 10.0759 ) }
    soma_0 { pt3dadd( 3.72036, 5.52772, -0.537802, 8.68542 ) }
    soma_0 { pt3dadd( 4.38685, 6.5771, -0.632952, 7.03735 ) }
    soma_0 { pt3dadd( 5.05334, 7.62648, -0.728102, 5.61823 ) }
    soma_0 { pt3dadd( 5.71983, 8.67585, -0.823252, 4.41136 ) }
    soma_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 2.8094 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.13964, -5.50144, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -2.13964, -5.50144, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.78411, -5.99849, -15.1942, 1.03 ) }
    dend_31 { pt3dadd( -1.4565, -6.5983, -15.2165, 0.88 ) }
    dend_31 { pt3dadd( -1.20686, -7.23625, -15.255, 0.96 ) }
    dend_31 { pt3dadd( -0.984613, -8.057, -15.3158, 0.52 ) }
    dend_31 { pt3dadd( -0.917683, -8.46763, -15.3495, 0.44 ) }
    dend_31 { pt3dadd( -0.946683, -9.14601, -15.4157, 0.37 ) }
    dend_31 { pt3dadd( -1.17734, -9.74839, -15.4869, 0.96 ) }
    dend_31 { pt3dadd( -1.43847, -10.0977, -15.5321, 1.18 ) }
    dend_31 { pt3dadd( -1.63027, -10.2797, -15.5705, 1.18 ) }
    dend_31 { pt3dadd( -1.88953, -10.4954, -15.6458, 0.88 ) }
    dend_31 { pt3dadd( -2.20691, -10.7753, -15.7773, 0.66 ) }
    dend_31 { pt3dadd( -2.51771, -11.1022, -15.9765, 0.52 ) }
    dend_31 { pt3dadd( -2.78321, -11.4953, -16.2953, 0.37 ) }
    dend_31 { pt3dadd( -2.9825, -11.9771, -16.7979, 0.37 ) }
    dend_31 { pt3dadd( -3.09624, -12.4169, -17.343, 1.11 ) }
    dend_31 { pt3dadd( -3.14749, -12.6932, -17.7238, 1.33 ) }
    dend_31 { pt3dadd( -3.18237, -12.9147, -18.0458, 1.4 ) }
    dend_31 { pt3dadd( -3.26717, -13.3815, -18.7691, 0.66 ) }
    dend_31 { pt3dadd( -3.37848, -13.6877, -19.2896, 0.52 ) }
    dend_31 { pt3dadd( -3.60268, -13.9944, -19.8064, 0.59 ) }
    dend_31 { pt3dadd( -3.7937, -14.1677, -20.0775, 0.66 ) }
    dend_31 { pt3dadd( -4.06219, -14.3879, -20.3976, 0.66 ) }
    dend_31 { pt3dadd( -4.28785, -14.5767, -20.6413, 0.37 ) }
    dend_31 { pt3dadd( -4.68234, -14.9942, -21.1214, 0.29 ) }
    dend_31 { pt3dadd( -4.81542, -15.206, -21.3854, 0.29 ) }
    dend_31 { pt3dadd( -5.01362, -15.7164, -22.0509, 1.4 ) }
    dend_31 { pt3dadd( -5.09343, -16.0205, -22.4329, 1.84 ) }
    dend_31 { pt3dadd( -5.13609, -16.2721, -22.7445, 1.84 ) }
    dend_31 { pt3dadd( -5.2135, -16.9981, -23.6469, 0.81 ) }
    dend_31 { pt3dadd( -5.25877, -17.6808, -24.5055, 0.37 ) }
    dend_31 { pt3dadd( -5.2803, -18.0194, -24.9717, 0.37 ) }
    dend_31 { pt3dadd( -5.30841, -18.4269, -25.5642, 1.55 ) }
    dend_31 { pt3dadd( -5.33585, -18.8141, -26.185, 2.06 ) }
    dend_31 { pt3dadd( -5.36585, -19.1349, -26.7324, 2.21 ) }
    dend_31 { pt3dadd( -5.43758, -19.8909, -28.0585, 0.66 ) }
    dend_31 { pt3dadd( -5.50819, -20.6781, -29.4671, 0.66 ) }
    dend_31 { pt3dadd( -5.53397, -21.0373, -30.1517, 0.88 ) }
    dend_31 { pt3dadd( -5.58009, -21.8742, -31.8904, 1.77 ) }
    dend_31 { pt3dadd( -5.60904, -22.3159, -32.8403, 3.09 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.29965, -7.64844, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.29965, -7.64844, 0.925891, 1.25 ) }
    dend_22 { pt3dadd( -8.74853, -8.341, 1.09789, 1.25 ) }
    dend_22 { pt3dadd( -9.56668, -9.69519, 1.44029, 1.11 ) }
    dend_22 { pt3dadd( -10.2155, -10.7692, 1.71183, 1.55 ) }
    dend_22 { pt3dadd( -10.7093, -11.5865, 1.91847, 1.92 ) }
    dend_22 { pt3dadd( -11.2985, -12.5619, 2.16508, 2.14 ) }
    dend_22 { pt3dadd( -11.7791, -13.3881, 2.38167, 2.14 ) }
    dend_22 { pt3dadd( -12.1664, -14.1221, 2.59058, 2.14 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.83964, -10.831, -0.944109, 1.62 ) }
    dend_17 { pt3dadd( -5.01424, -11.2581, -0.874736, 1.62 ) }
    dend_17 { pt3dadd( -5.28991, -11.9354, -0.754919, 1.47 ) }
    dend_17 { pt3dadd( -5.52189, -12.5152, -0.649823, 1.18 ) }
    dend_17 { pt3dadd( -5.77837, -13.1632, -0.533664, 1.18 ) }
    dend_17 { pt3dadd( -6.00997, -13.7597, -0.434673, 1.77 ) }
    dend_17 { pt3dadd( -6.1327, -14.089, -0.386411, 2.14 ) }
    dend_17 { pt3dadd( -6.29641, -14.5465, -0.31243, 2.65 ) }
    dend_17 { pt3dadd( -6.4293, -14.9118, -0.252459, 2.73 ) }
    dend_17 { pt3dadd( -6.62807, -15.4204, -0.176039, 2.5 ) }
    dend_17 { pt3dadd( -6.93647, -16.1397, -0.0829551, 1.92 ) }
    dend_17 { pt3dadd( -7.3175, -16.9673, 0.0140203, 1.47 ) }
    dend_17 { pt3dadd( -7.782, -17.8875, 0.114459, 1.18 ) }
    dend_17 { pt3dadd( -8.09332, -18.4462, 0.174245, 1.03 ) }
    dend_17 { pt3dadd( -8.59789, -19.2496, 0.255261, 1.47 ) }
    dend_17 { pt3dadd( -8.86879, -19.6302, 0.288493, 1.99 ) }
    dend_17 { pt3dadd( -9.07589, -19.9024, 0.307207, 2.43 ) }
    dend_17 { pt3dadd( -9.3056, -20.2134, 0.322149, 2.65 ) }
    dend_17 { pt3dadd( -9.55702, -20.618, 0.330006, 2.36 ) }
    dend_17 { pt3dadd( -9.88284, -21.345, 0.322116, 1.77 ) }
    dend_17 { pt3dadd( -10.1938, -22.4558, 0.29106, 1.33 ) }
    dend_17 { pt3dadd( -10.3209, -23.2503, 0.260479, 1.33 ) }
    dend_17 { pt3dadd( -10.3772, -24.0625, 0.227711, 1.55 ) }
    dend_17 { pt3dadd( -10.3576, -25.0236, 0.197935, 1.25 ) }
    dend_17 { pt3dadd( -10.2483, -26.0402, 0.189809, 1.11 ) }
    dend_17 { pt3dadd( -10.0694, -26.9346, 0.202821, 1.55 ) }
    dend_17 { pt3dadd( -9.93604, -27.4065, 0.21306, 2.06 ) }
    dend_17 { pt3dadd( -9.84164, -27.6998, 0.222922, 2.43 ) }
    dend_17 { pt3dadd( -9.70489, -28.1056, 0.245982, 2.8 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -9.55103, -28.5762, 0.310032, 2.95 ) }
    dend_17 { pt3dadd( -9.45066, -28.9456, 0.428368, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 2/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.93036, 9.68906, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 5.93036, 9.68906, -0.514109, 3.54 ) }
    dend_0 { pt3dadd( 6.42407, 10.7467, -0.439883, 3.54 ) }
    dend_0 { pt3dadd( 6.97853, 11.9345, -0.356524, 3.54 ) }
    dend_0 { pt3dadd( 7.33376, 12.6955, -0.303117, 2.95 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 7/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.38632, 9.72523, -0.918402, 0.715642 ) }
    axon_0 { pt3dadd( 14.4283, 22.3872, -0.918402, 0.715642 ) }
    axon_0 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.715642 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.60904, -22.3159, -32.8403, 0.88 ) }
    dend_33 { pt3dadd( -5.0888, -23.0534, -33.157, 0.88 ) }
    dend_33 { pt3dadd( -4.60966, -23.7313, -33.4065, 0.52 ) }
    dend_33 { pt3dadd( -4.24882, -24.2306, -33.567, 0.29 ) }
    dend_33 { pt3dadd( -3.78847, -24.8532, -33.7819, 0.22 ) }
    dend_33 { pt3dadd( -3.32131, -25.4893, -34.0037, 1.33 ) }
    dend_33 { pt3dadd( -2.91667, -26.029, -34.2125, 1.47 ) }
    dend_33 { pt3dadd( -2.49588, -26.5903, -34.4367, 0.15 ) }
    dend_33 { pt3dadd( -2.19059, -27.0047, -34.5887, 0.15 ) }
    dend_33 { pt3dadd( -1.50351, -27.9286, -34.9495, 0.81 ) }
    dend_33 { pt3dadd( -1.38072, -28.0905, -35.0168, 0.96 ) }
    dend_33 { pt3dadd( -0.272649, -29.5293, -35.6402, 0.22 ) }
    dend_33 { pt3dadd( -0.130658, -29.7107, -35.7296, 0.74 ) }
    dend_33 { pt3dadd( 0.124516, -30.0425, -35.9122, 0.74 ) }
    dend_33 { pt3dadd( 1.00471, -31.1776, -36.6024, 0.22 ) }
    dend_33 { pt3dadd( 1.24236, -31.4865, -36.7993, 0.88 ) }
    dend_33 { pt3dadd( 1.37486, -31.6585, -36.918, 1.11 ) }
    dend_33 { pt3dadd( 2.38938, -32.9659, -37.9117, 0.22 ) }
    dend_33 { pt3dadd( 3.0185, -33.7542, -38.5482, 1.62 ) }
    dend_33 { pt3dadd( 3.41675, -34.2508, -38.9626, 2.06 ) }
    dend_33 { pt3dadd( 4.11253, -35.1584, -39.7273, 0.81 ) }
    dend_33 { pt3dadd( 4.62972, -35.8675, -40.3332, 1.33 ) }
    dend_33 { pt3dadd( 5.40951, -37.0163, -41.3057, 0.22 ) }
    dend_33 { pt3dadd( 5.90628, -37.8131, -41.9486, 1.33 ) }
    dend_33 { pt3dadd( 6.11786, -38.1692, -42.2489, 1.62 ) }
    dend_33 { pt3dadd( 6.88101, -39.5609, -43.4426, 0.59 ) }
    dend_33 { pt3dadd( 7.38625, -40.5605, -44.3453, 0.22 ) }
    dend_33 { pt3dadd( 7.64001, -41.1368, -44.9135, 0.74 ) }
    dend_33 { pt3dadd( 7.73893, -41.4094, -45.1933, 0.96 ) }
    dend_33 { pt3dadd( 8.11878, -42.6334, -46.5114, 0.29 ) }
    dend_33 { pt3dadd( 8.27191, -43.1701, -47.1611, 1.18 ) }
    dend_33 { pt3dadd( 8.35494, -43.4991, -47.6041, 1.4 ) }
    dend_33 { pt3dadd( 8.6381, -44.8017, -49.4371, 0.22 ) }
    dend_33 { pt3dadd( 8.71276, -45.1813, -50.0108, 1.03 ) }
    dend_33 { pt3dadd( 8.7474, -45.4124, -50.3796, 1.18 ) }
    dend_33 { pt3dadd( 8.8871, -46.9433, -52.9657, 0.44 ) }
    dend_33 { pt3dadd( 8.9309, -47.5578, -54.0966, 0.22 ) }
    dend_33 { pt3dadd( 8.94114, -47.7704, -54.5018, 1.18 ) }
    dend_33 { pt3dadd( 8.96835, -48.3596, -55.6582, 1.18 ) }
    dend_33 { pt3dadd( 8.99469, -48.7853, -56.5342, 1.62 ) }
    dend_33 { pt3dadd( 9.05922, -49.4878, -57.9752, 1.84 ) }
    dend_33 { pt3dadd( 9.10006, -49.7823, -58.5619, 1.99 ) }
    dend_33 { pt3dadd( 9.34424, -50.9215, -60.7744, 0.22 ) }
    dend_33 { pt3dadd( 9.54573, -51.6671, -62.1965, 1.47 ) }
    dend_33 { pt3dadd( 9.73381, -52.2969, -63.3343, 1.69 ) }
    dend_33 { pt3dadd( 9.87012, -52.6993, -64.054, 1.4 ) }
    dend_33 { pt3dadd( 10.1819, -53.5301, -65.5036, 0.81 ) }
    dend_33 { pt3dadd( 10.6603, -54.6835, -67.4788, 1.03 ) }
    dend_33 { pt3dadd( 11.2706, -56.026, -69.8106, 0.22 ) }
    dend_33 { pt3dadd( 11.4623, -56.4264, -70.4823, 1.47 ) }
    dend_33 { pt3dadd( 11.9669, -57.4667, -72.1033, 1.62 ) }
    dend_33 { pt3dadd( 12.3316, -58.2079, -73.1986, 0.29 ) }
    dend_33 { pt3dadd( 12.7909, -59.0769, -74.3855, 1.18 ) }
    dend_33 { pt3dadd( 13.23, -59.8382, -75.3089, 1.47 ) }
    dend_33 { pt3dadd( 13.8403, -60.8165, -76.3668, 0.15 ) }
    dend_33 { pt3dadd( 14.2499, -61.4651, -77.0304, 0.15 ) }
    dend_33 { pt3dadd( 14.6477, -62.1122, -77.601, 1.18 ) }
    dend_33 { pt3dadd( 15.274, -63.2192, -78.484, 0.22 ) }
    dend_33 { pt3dadd( 15.5094, -63.6668, -78.8291, 0.22 ) }
    dend_33 { pt3dadd( 15.9543, -64.5217, -79.5197, 0.88 ) }
    dend_33 { pt3dadd( 16.1921, -64.9957, -79.932, 0.88 ) }
    dend_33 { pt3dadd( 16.5015, -65.591, -80.4856, 1.11 ) }
    dend_33 { pt3dadd( 16.8409, -66.2093, -81.0706, 1.33 ) }
    dend_33 { pt3dadd( 17.9705, -68.1493, -82.9697, 0.22 ) }
    dend_33 { pt3dadd( 18.543, -69.085, -83.934, 1.03 ) }
    dend_33 { pt3dadd( 18.6309, -69.2209, -84.0796, 1.25 ) }
    dend_33 { pt3dadd( 19.62, -70.7002, -85.6761, 0.22 ) }
    dend_33 { pt3dadd( 20.1157, -71.412, -86.4614, 1.33 ) }
    dend_33 { pt3dadd( 20.4154, -71.836, -86.9224, 1.4 ) }
    dend_33 { pt3dadd( 21.3451, -73.2177, -88.4159, 0.22 ) }
    dend_33 { pt3dadd( 21.798, -73.9088, -89.187, 0.74 ) }
    dend_33 { pt3dadd( 22.5339, -75.051, -90.5257, 0.22 ) }
    dend_33 { pt3dadd( 23.2281, -76.1788, -91.8696, 1.4 ) }
    dend_33 { pt3dadd( 23.4629, -76.5774, -92.3483, 1.47 ) }
    dend_33 { pt3dadd( 24.3037, -78.0133, -94.0807, 0.15 ) }
    dend_33 { pt3dadd( 24.9571, -79.0933, -95.4092, 1.25 ) }
    dend_33 { pt3dadd( 25.2155, -79.5137, -95.9494, 1.25 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -5.60904, -22.3159, -32.8403, 1.92 ) }
    dend_32 { pt3dadd( -6.14153, -22.5471, -33.9198, 1.92 ) }
    dend_32 { pt3dadd( -6.6131, -22.7688, -34.899, 1.77 ) }
    dend_32 { pt3dadd( -7.20333, -23.0609, -36.0981, 2.21 ) }
    dend_32 { pt3dadd( -7.64293, -23.3146, -37.0293, 0.22 ) }
    dend_32 { pt3dadd( -7.78822, -23.4096, -37.3591, 0.22 ) }
    dend_32 { pt3dadd( -8.08326, -23.6197, -38.0553, 0.22 ) }
    dend_32 { pt3dadd( -8.41387, -23.8999, -38.9201, 1.47 ) }
    dend_32 { pt3dadd( -8.5062, -23.9916, -39.1893, 1.77 ) }
    dend_32 { pt3dadd( -8.87815, -24.4075, -40.3763, 0.52 ) }
    dend_32 { pt3dadd( -9.14511, -24.7329, -41.318, 1.25 ) }
    dend_32 { pt3dadd( -9.24054, -24.8581, -41.6766, 1.4 ) }
    dend_32 { pt3dadd( -9.5063, -25.2852, -42.8063, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -9.72341, -25.6829, -43.7895, 1.62 ) }
    dend_32 { pt3dadd( -9.79944, -25.8478, -44.1967, 1.84 ) }
    dend_32 { pt3dadd( -9.95724, -26.239, -45.1141, 0.52 ) }
    dend_32 { pt3dadd( -10.1113, -26.6813, -46.0963, 1.69 ) }
    dend_32 { pt3dadd( -10.2017, -26.9682, -46.693, 2.06 ) }
    dend_32 { pt3dadd( -10.2625, -27.1843, -47.1004, 2.21 ) }
    dend_32 { pt3dadd( -10.5914, -28.3695, -49.2517, 0.44 ) }
    dend_32 { pt3dadd( -10.6671, -28.6951, -49.8313, 0.81 ) }
    dend_32 { pt3dadd( -10.6906, -28.8188, -50.0359, 0.81 ) }
    dend_32 { pt3dadd( -10.7431, -29.0764, -50.4408, 0.59 ) }
    dend_32 { pt3dadd( -10.7766, -29.2315, -50.6683, 0.88 ) }
    dend_32 { pt3dadd( -10.8755, -29.7398, -51.3388, 0.37 ) }
    dend_32 { pt3dadd( -11.1252, -30.9644, -52.7861, 1.4 ) }
    dend_32 { pt3dadd( -11.1898, -31.2713, -53.1468, 1.92 ) }
    dend_32 { pt3dadd( -11.3656, -32.1354, -54.2746, 0.22 ) }
    dend_32 { pt3dadd( -11.4278, -32.4387, -54.6994, 0.22 ) }
    dend_32 { pt3dadd( -11.4774, -32.6443, -54.9998, 0.22 ) }
    dend_32 { pt3dadd( -11.6183, -33.1011, -55.68, 1.84 ) }
    dend_32 { pt3dadd( -11.6514, -33.195, -55.8419, 2.06 ) }
    dend_32 { pt3dadd( -12.0501, -34.2929, -57.9872, 0.22 ) }
    dend_32 { pt3dadd( -12.1171, -34.457, -58.3499, 0.22 ) }
    dend_32 { pt3dadd( -12.1749, -34.5728, -58.638, 0.96 ) }
    dend_32 { pt3dadd( -12.2444, -34.6903, -58.9534, 1.18 ) }
    dend_32 { pt3dadd( -12.7615, -35.465, -61.1577, 0.44 ) }
    dend_32 { pt3dadd( -12.8581, -35.5932, -61.5181, 1.18 ) }
    dend_32 { pt3dadd( -12.9916, -35.7449, -61.9412, 1.18 ) }
    dend_32 { pt3dadd( -13.2958, -36.0942, -62.9439, 1.33 ) }
    dend_32 { pt3dadd( -13.445, -36.2694, -63.4275, 1.47 ) }
    dend_32 { pt3dadd( -13.8952, -36.7931, -64.7606, 0.29 ) }
    dend_32 { pt3dadd( -14.1411, -37.067, -65.3879, 1.4 ) }
    dend_32 { pt3dadd( -14.2691, -37.2308, -65.7619, 1.62 ) }
    dend_32 { pt3dadd( -14.7501, -37.9995, -67.4886, 0.22 ) }
    dend_32 { pt3dadd( -14.8396, -38.1627, -67.8418, 0.81 ) }
    dend_32 { pt3dadd( -14.9446, -38.3638, -68.2686, 0.29 ) }
    dend_32 { pt3dadd( -15.0912, -38.6472, -68.8454, 1.11 ) }
    dend_32 { pt3dadd( -15.5611, -39.5628, -70.7081, 0.59 ) }
    dend_32 { pt3dadd( -16.0693, -40.4481, -72.4768, 0.22 ) }
    dend_32 { pt3dadd( -16.2295, -40.6956, -72.9683, 0.22 ) }
    dend_32 { pt3dadd( -16.449, -40.9997, -73.6019, 1.69 ) }
    dend_32 { pt3dadd( -16.5759, -41.1572, -73.9632, 2.14 ) }
    dend_32 { pt3dadd( -17.1682, -41.7954, -75.4862, 0.22 ) }
    dend_32 { pt3dadd( -17.4408, -42.0376, -76.0743, 1.92 ) }
    dend_32 { pt3dadd( -17.5996, -42.1634, -76.3991, 2.21 ) }
    dend_32 { pt3dadd( -17.803, -42.3207, -76.8319, 2.21 ) }
    dend_32 { pt3dadd( -18.7817, -43.0766, -78.9255, 0.22 ) }
    dend_32 { pt3dadd( -18.8744, -43.1497, -79.1242, 0.44 ) }
    dend_32 { pt3dadd( -19.1145, -43.3522, -79.6213, 0.29 ) }
    dend_32 { pt3dadd( -19.4222, -43.6369, -80.2682, 1.03 ) }
    dend_32 { pt3dadd( -19.517, -43.7286, -80.4633, 0.81 ) }
    dend_32 { pt3dadd( -19.7631, -43.9687, -80.8973, 0.29 ) }
    dend_32 { pt3dadd( -20.0663, -44.2528, -81.3381, 1.11 ) }
    dend_32 { pt3dadd( -20.175, -44.3635, -81.5357, 1.33 ) }
    dend_32 { pt3dadd( -20.3041, -44.5048, -81.7954, 1.33 ) }
    dend_32 { pt3dadd( -21.1387, -45.4427, -83.5173, 0.22 ) }
    dend_32 { pt3dadd( -21.4351, -45.7856, -84.1721, 1.99 ) }
    dend_32 { pt3dadd( -21.5633, -45.9298, -84.456, 2.43 ) }
    dend_32 { pt3dadd( -22.5387, -47.0202, -86.6443, 0.22 ) }
    dend_32 { pt3dadd( -22.6653, -47.165, -86.9606, 0.59 ) }
    dend_32 { pt3dadd( -22.7557, -47.2749, -87.193, 0.59 ) }
    dend_32 { pt3dadd( -23.0946, -47.6962, -88.0695, 0.22 ) }
    dend_32 { pt3dadd( -23.2334, -47.8761, -88.4435, 1.25 ) }
    dend_32 { pt3dadd( -23.4184, -48.1388, -88.9637, 1.62 ) }
    dend_32 { pt3dadd( -24.108, -49.1545, -90.8099, 0.22 ) }
    dend_32 { pt3dadd( -24.3688, -49.5634, -91.5428, 0.22 ) }
    dend_32 { pt3dadd( -24.4786, -49.751, -91.8551, 0.96 ) }
    dend_32 { pt3dadd( -24.5461, -49.8819, -92.0515, 1.33 ) }
    dend_32 { pt3dadd( -24.9794, -50.8773, -93.4615, 0.22 ) }
    dend_32 { pt3dadd( -25.0464, -51.0703, -93.7298, 0.74 ) }
    dend_32 { pt3dadd( -25.1021, -51.2741, -93.9966, 0.74 ) }
    dend_32 { pt3dadd( -25.1611, -51.5493, -94.3648, 0.22 ) }
    dend_32 { pt3dadd( -25.2696, -52.1407, -95.1323, 1.84 ) }
    dend_32 { pt3dadd( -25.3245, -52.4754, -95.5609, 2.14 ) }
    dend_32 { pt3dadd( -25.5223, -53.7889, -97.1891, 0.22 ) }
    dend_32 { pt3dadd( -25.5544, -54.0167, -97.4716, 0.22 ) }
    dend_32 { pt3dadd( -25.6209, -54.4795, -98.0405, 1.55 ) }
    dend_32 { pt3dadd( -25.6658, -54.7626, -98.3854, 1.84 ) }
    dend_32 { pt3dadd( -25.8156, -55.5916, -99.4135, 0.22 ) }
    dend_32 { pt3dadd( -25.8754, -55.884, -99.784, 0.52 ) }
    dend_32 { pt3dadd( -25.9597, -56.2765, -100.371, 0.22 ) }
    dend_32 { pt3dadd( -26.065, -56.7353, -101.19, 1.03 ) }
    dend_32 { pt3dadd( -26.0878, -56.8242, -101.365, 1.18 ) }
    dend_32 { pt3dadd( -26.3138, -57.6478, -103.092, 1.25 ) }
    dend_32 { pt3dadd( -26.3856, -57.8843, -103.621, 1.62 ) }
    dend_32 { pt3dadd( -26.717, -58.8768, -105.883, 0.22 ) }
    dend_32 { pt3dadd( -26.8197, -59.1686, -106.588, 0.22 ) }
    dend_32 { pt3dadd( -26.9124, -59.4058, -107.159, 1.47 ) }
    dend_32 { pt3dadd( -27.0423, -59.7189, -107.908, 1.62 ) }
    dend_32 { pt3dadd( -27.2505, -60.2131, -109.092, 0.22 ) }
    dend_32 { pt3dadd( -27.3077, -60.3745, -109.495, 0.96 ) }
    dend_32 { pt3dadd( -27.6019, -61.2959, -111.755, 0.22 ) }
    dend_32 { pt3dadd( -27.6589, -61.5072, -112.299, 1.18 ) }
    dend_32 { pt3dadd( -27.7443, -61.8164, -113.133, 1.4 ) }
    dend_32 { pt3dadd( -27.9339, -62.4033, -114.746, 1.03 ) }
    dend_32 { pt3dadd( -28.2445, -63.2354, -117.089, 0.22 ) }
    dend_32 { pt3dadd( -28.3279, -63.4319, -117.659, 1.47 ) }
    dend_32 { pt3dadd( -28.4703, -63.7203, -118.535, 1.55 ) }
    dend_32 { pt3dadd( -28.6384, -64.0207, -119.495, 0.22 ) }
    dend_32 { pt3dadd( -28.8102, -64.2692, -120.289, 0.22 ) }
    dend_32 { pt3dadd( -28.9113, -64.3794, -120.653, 1.11 ) }
    dend_32 { pt3dadd( -29.0813, -64.5373, -121.271, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( -29.6645, -65.0366, -123.561, 0.22 ) }
    dend_32 { pt3dadd( -29.744, -65.1016, -123.884, 1.18 ) }
    dend_32 { pt3dadd( -29.8378, -65.1789, -124.313, 1.18 ) }
    dend_32 { pt3dadd( -30.0501, -65.3587, -125.351, 0.66 ) }
    dend_32 { pt3dadd( -30.6443, -65.8522, -128.282, 0.22 ) }
    dend_32 { pt3dadd( -30.7749, -65.9478, -128.88, 0.22 ) }
    dend_32 { pt3dadd( -30.9837, -66.0761, -129.756, 1.18 ) }
    dend_32 { pt3dadd( -31.1564, -66.1785, -130.544, 1.47 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.1664, -14.1221, 2.59058, 0.59 ) }
    dend_24 { pt3dadd( -14.1071, -14.7169, 2.86663, 0.59 ) }
    dend_24 { pt3dadd( -14.9434, -14.8871, 2.954, 0.66 ) }
    dend_24 { pt3dadd( -15.6015, -14.9539, 3.02644, 0.81 ) }
    dend_24 { pt3dadd( -15.9962, -14.9584, 3.078, 0.81 ) }
    dend_24 { pt3dadd( -16.7739, -14.9479, 3.20407, 0.81 ) }
    dend_24 { pt3dadd( -17.786, -14.9443, 3.44924, 0.96 ) }
    dend_24 { pt3dadd( -18.365, -14.8959, 3.6269, 0.66 ) }
    dend_24 { pt3dadd( -19.0834, -14.8167, 3.89408, 0.37 ) }
    dend_24 { pt3dadd( -19.7803, -14.7222, 4.20235, 0.37 ) }
    dend_24 { pt3dadd( -20.6478, -14.6037, 4.66476, 1.18 ) }
    dend_24 { pt3dadd( -21.6536, -14.4963, 5.36999, 1.69 ) }
    dend_24 { pt3dadd( -21.9467, -14.5106, 5.64877, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.1664, -14.1221, 2.59058, 1.25 ) }
    dend_23 { pt3dadd( -12.6602, -15.026, 2.21436, 1.25 ) }
    dend_23 { pt3dadd( -13.2264, -15.9574, 1.86036, 0.74 ) }
    dend_23 { pt3dadd( -13.6299, -16.5668, 1.65345, 0.96 ) }
    dend_23 { pt3dadd( -14.1593, -17.3009, 1.43834, 1.18 ) }
    dend_23 { pt3dadd( -14.5764, -17.8609, 1.32688, 1.47 ) }
    dend_23 { pt3dadd( -15.0015, -18.4352, 1.24806, 1.47 ) }
    dend_23 { pt3dadd( -15.3573, -18.8913, 1.22886, 1.55 ) }
    dend_23 { pt3dadd( -15.7742, -19.4298, 1.26501, 1.55 ) }
    dend_23 { pt3dadd( -16.1988, -20.0136, 1.3302, 1.33 ) }
    dend_23 { pt3dadd( -16.8485, -20.9723, 1.47224, 1.11 ) }
    dend_23 { pt3dadd( -17.2313, -21.5787, 1.53221, 0.96 ) }
    dend_23 { pt3dadd( -17.5483, -22.1164, 1.51282, 0.81 ) }
    dend_23 { pt3dadd( -17.9722, -22.8089, 1.1884, 0.66 ) }
    dend_23 { pt3dadd( -18.2783, -23.2773, 0.75819, 0.52 ) }
    dend_23 { pt3dadd( -18.489, -23.5703, 0.395687, 0.52 ) }
    dend_23 { pt3dadd( -18.8768, -24.0483, -0.288987, 1.11 ) }
    dend_23 { pt3dadd( -19.523, -24.7704, -1.38295, 1.55 ) }
    dend_23 { pt3dadd( -20.897, -26.2039, -3.59459, 1.33 ) }
    dend_23 { pt3dadd( -21.4327, -26.7248, -4.39708, 0.88 ) }
    dend_23 { pt3dadd( -21.9395, -27.1919, -5.05874, 1.18 ) }
    dend_23 { pt3dadd( -22.4702, -27.6793, -5.61332, 1.84 ) }
    dend_23 { pt3dadd( -22.8267, -28.0137, -5.84859, 2.21 ) }
    dend_23 { pt3dadd( -23.2099, -28.3916, -5.95278, 2.36 ) }
    dend_23 { pt3dadd( -23.5556, -28.7462, -5.94885, 2.5 ) }
    dend_23 { pt3dadd( -24.0031, -29.1962, -5.92672, 2.28 ) }
    dend_23 { pt3dadd( -24.6113, -29.8222, -5.90159, 1.92 ) }
    dend_23 { pt3dadd( -25.3414, -30.5758, -5.9127, 1.18 ) }
    dend_23 { pt3dadd( -25.8428, -31.0841, -5.95413, 0.96 ) }
    dend_23 { pt3dadd( -26.359, -31.5874, -6.04365, 0.66 ) }
    dend_23 { pt3dadd( -27.0388, -32.2216, -6.24557, 0.44 ) }
    dend_23 { pt3dadd( -27.9017, -32.9904, -6.63098, 1.77 ) }
    dend_23 { pt3dadd( -28.4373, -33.4535, -6.93629, 2.28 ) }
    dend_23 { pt3dadd( -28.822, -33.7822, -7.20521, 2.28 ) }
    dend_23 { pt3dadd( -29.3019, -34.2057, -7.59026, 2.43 ) }
    dend_23 { pt3dadd( -29.8733, -34.7453, -8.08285, 1.92 ) }
    dend_23 { pt3dadd( -30.6067, -35.5021, -8.74112, 0.81 ) }
    dend_23 { pt3dadd( -31.1379, -36.1021, -9.20628, 0.96 ) }
    dend_23 { pt3dadd( -31.6845, -36.7743, -9.63079, 1.18 ) }
    dend_23 { pt3dadd( -32.0133, -37.1976, -9.83937, 0.96 ) }
    dend_23 { pt3dadd( -32.5024, -37.8286, -10.0351, 0.44 ) }
    dend_23 { pt3dadd( -32.8742, -38.2775, -10.0997, 0.96 ) }
    dend_23 { pt3dadd( -33.0836, -38.5229, -10.1115, 1.11 ) }
    dend_23 { pt3dadd( -33.6586, -39.1567, -10.0897, 0.52 ) }
    dend_23 { pt3dadd( -34.1437, -39.6488, -10.0143, 0.44 ) }
    dend_23 { pt3dadd( -34.9964, -40.4017, -9.84378, 1.03 ) }
    dend_23 { pt3dadd( -35.5422, -40.8175, -9.70735, 1.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 68/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.45066, -28.9456, 0.428368, 0.81 ) }
    dend_21 { pt3dadd( -12.851, -29.2718, -1.75207, 0.81 ) }
    dend_21 { pt3dadd( -14.4281, -29.3593, -2.6473, 1.18 ) }
    dend_21 { pt3dadd( -15.3832, -29.4301, -3.16333, 1.25 ) }
    dend_21 { pt3dadd( -16.959, -29.5622, -4.04186, 0.66 ) }
    dend_21 { pt3dadd( -17.4918, -29.6186, -4.35307, 0.52 ) }
    dend_21 { pt3dadd( -18.5001, -29.7576, -4.96595, 0.66 ) }
    dend_21 { pt3dadd( -19.0673, -29.8621, -5.29714, 0.88 ) }
    dend_21 { pt3dadd( -19.9018, -30.181, -5.98829, 1.11 ) }
    dend_21 { pt3dadd( -20.8108, -30.5713, -7.01745, 1.25 ) }
    dend_21 { pt3dadd( -21.1604, -30.7127, -7.44471, 1.25 ) }
    dend_21 { pt3dadd( -21.495, -30.843, -7.8629, 0.96 ) }
    dend_21 { pt3dadd( -22.0392, -31.0581, -8.56317, 0.59 ) }
    dend_21 { pt3dadd( -23.0925, -31.4113, -9.87644, 1.18 ) }
    dend_21 { pt3dadd( -25.0415, -32.0135, -12.2252, 1.25 ) }
    dend_21 { pt3dadd( -26.4425, -32.4824, -13.8768, 1.25 ) }
    dend_21 { pt3dadd( -27.1034, -32.726, -14.6554, 1.69 ) }
    dend_21 { pt3dadd( -27.5167, -32.9035, -15.1355, 1.77 ) }
    dend_21 { pt3dadd( -29.4757, -34.0007, -17.341, 0.81 ) }
    dend_21 { pt3dadd( -30.2066, -34.5294, -18.1442, 1.11 ) }
    dend_21 { pt3dadd( -30.7112, -35.0192, -18.7341, 0.96 ) }
    dend_21 { pt3dadd( -31.2787, -35.649, -19.3593, 0.52 ) }
    dend_21 { pt3dadd( -32.0572, -36.5511, -20.0908, 0.52 ) }
    dend_21 { pt3dadd( -33.3498, -38.139, -21.1076, 2.21 ) }
    dend_21 { pt3dadd( -33.9206, -38.9123, -21.439, 2.5 ) }
    dend_21 { pt3dadd( -34.157, -39.205, -21.5443, 2.5 ) }
    dend_21 { pt3dadd( -34.9359, -40.0894, -21.8081, 0.66 ) }
    dend_21 { pt3dadd( -35.6263, -40.7881, -21.9732, 1.25 ) }
    dend_21 { pt3dadd( -35.9967, -41.1432, -22.028, 1.47 ) }
    dend_21 { pt3dadd( -36.4081, -41.5212, -22.0392, 1.47 ) }
    dend_21 { pt3dadd( -37.1315, -42.2032, -22.0044, 1.33 ) }
    dend_21 { pt3dadd( -37.5678, -42.5913, -21.9675, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -38.2363, -43.1634, -21.8941, 0.29 ) }
    dend_21 { pt3dadd( -38.5775, -43.4479, -21.8664, 0.22 ) }
    dend_21 { pt3dadd( -39.0345, -43.8447, -21.8454, 0.22 ) }
    dend_21 { pt3dadd( -39.5821, -44.3895, -21.844, 0.96 ) }
    dend_21 { pt3dadd( -39.8939, -44.7665, -21.8576, 1.18 ) }
    dend_21 { pt3dadd( -40.1528, -45.1273, -21.9145, 0.96 ) }
    dend_21 { pt3dadd( -40.8391, -46.1746, -22.2134, 0.22 ) }
    dend_21 { pt3dadd( -41.0813, -46.5419, -22.3563, 0.22 ) }
    dend_21 { pt3dadd( -41.5009, -47.1149, -22.6391, 0.88 ) }
    dend_21 { pt3dadd( -41.761, -47.4496, -22.829, 1.11 ) }
    dend_21 { pt3dadd( -42.46, -48.3237, -23.3298, 0.22 ) }
    dend_21 { pt3dadd( -43.3078, -49.2002, -23.8908, 1.77 ) }
    dend_21 { pt3dadd( -43.7281, -49.5238, -24.1606, 2.28 ) }
    dend_21 { pt3dadd( -44.5306, -49.9826, -24.6806, 2.28 ) }
    dend_21 { pt3dadd( -46.0001, -50.6152, -25.6009, 0.15 ) }
    dend_21 { pt3dadd( -46.6659, -50.8498, -26.0286, 0.74 ) }
    dend_21 { pt3dadd( -48.4258, -51.3827, -27.2091, 0.44 ) }
    dend_21 { pt3dadd( -50.5859, -52.0219, -28.7523, 1.69 ) }
    dend_21 { pt3dadd( -52.0959, -52.4531, -29.8861, 2.28 ) }
    dend_21 { pt3dadd( -52.8928, -52.6805, -30.5045, 2.58 ) }
    dend_21 { pt3dadd( -54.7847, -53.2253, -31.9787, 0.52 ) }
    dend_21 { pt3dadd( -55.9787, -53.6172, -32.9231, 0.29 ) }
    dend_21 { pt3dadd( -57.7594, -54.3537, -34.3394, 2.21 ) }
    dend_21 { pt3dadd( -59.0974, -55.0164, -35.3808, 2.58 ) }
    dend_21 { pt3dadd( -61.2562, -56.2168, -36.976, 0.29 ) }
    dend_21 { pt3dadd( -61.8677, -56.5911, -37.3995, 0.22 ) }
    dend_21 { pt3dadd( -62.2727, -56.8544, -37.6401, 0.22 ) }
    dend_21 { pt3dadd( -62.9082, -57.2898, -37.9593, 1.33 ) }
    dend_21 { pt3dadd( -63.3775, -57.6393, -38.1421, 1.55 ) }
    dend_21 { pt3dadd( -65.3461, -59.2254, -38.7674, 0.22 ) }
    dend_21 { pt3dadd( -65.8486, -59.6366, -38.9013, 0.96 ) }
    dend_21 { pt3dadd( -66.1794, -59.8805, -38.9929, 1.25 ) }
    dend_21 { pt3dadd( -66.5736, -60.1261, -39.111, 1.25 ) }
    dend_21 { pt3dadd( -67.986, -60.9056, -39.5401, 0.22 ) }
    dend_21 { pt3dadd( -68.922, -61.3901, -39.8072, 0.88 ) }
    dend_21 { pt3dadd( -69.2592, -61.5549, -39.903, 1.11 ) }
    dend_21 { pt3dadd( -69.9604, -61.8978, -40.1199, 1.11 ) }
    dend_21 { pt3dadd( -72.1983, -63.077, -40.8256, 0.22 ) }
    dend_21 { pt3dadd( -72.97, -63.5174, -41.0648, 1.77 ) }
    dend_21 { pt3dadd( -73.4424, -63.8066, -41.209, 2.28 ) }
    dend_21 { pt3dadd( -74.0483, -64.2167, -41.386, 2.14 ) }
    dend_21 { pt3dadd( -75.7124, -65.422, -41.8752, 0.22 ) }
    dend_21 { pt3dadd( -76.4811, -66.0475, -42.0999, 1.03 ) }
    dend_21 { pt3dadd( -76.8587, -66.3773, -42.2218, 1.33 ) }
    dend_21 { pt3dadd( -78.1535, -67.4367, -42.6781, 0.22 ) }
    dend_21 { pt3dadd( -78.6353, -67.8081, -42.8532, 0.96 ) }
    dend_21 { pt3dadd( -79.1655, -68.1805, -43.0473, 1.25 ) }
    dend_21 { pt3dadd( -79.4869, -68.3888, -43.1673, 1.33 ) }
    dend_21 { pt3dadd( -81.5867, -69.6782, -43.9797, 0.15 ) }
    dend_21 { pt3dadd( -82.4827, -70.2223, -44.3538, 1.18 ) }
    dend_21 { pt3dadd( -83.0968, -70.6019, -44.6222, 1.55 ) }
    dend_21 { pt3dadd( -84.6497, -71.6157, -45.3248, 0.22 ) }
    dend_21 { pt3dadd( -85.0468, -71.8983, -45.504, 0.96 ) }
    dend_21 { pt3dadd( -85.5701, -72.2921, -45.7388, 0.96 ) }
    dend_21 { pt3dadd( -86.6174, -73.1726, -46.22, 0.22 ) }
    dend_21 { pt3dadd( -86.9336, -73.4797, -46.3793, 0.66 ) }
    dend_21 { pt3dadd( -87.7831, -74.3364, -46.8415, 0.22 ) }
    dend_21 { pt3dadd( -88.2824, -74.871, -47.1232, 1.4 ) }
    dend_21 { pt3dadd( -88.7488, -75.3671, -47.3966, 1.84 ) }
    dend_21 { pt3dadd( -89.0307, -75.6572, -47.5578, 1.62 ) }
    dend_21 { pt3dadd( -90.39, -77.0136, -48.2801, 0.15 ) }
    dend_21 { pt3dadd( -91.3727, -77.9637, -48.8012, 1.03 ) }
    dend_21 { pt3dadd( -91.7342, -78.2779, -48.9958, 1.55 ) }
    dend_21 { pt3dadd( -92.1618, -78.6378, -49.2265, 1.55 ) }
    dend_21 { pt3dadd( -93.5742, -79.8115, -49.9853, 0.22 ) }
    dend_21 { pt3dadd( -93.969, -80.1263, -50.206, 0.88 ) }
    dend_21 { pt3dadd( -94.4472, -80.4849, -50.4591, 0.88 ) }
    dend_21 { pt3dadd( -96.1674, -81.8425, -51.3136, 0.22 ) }
    dend_21 { pt3dadd( -96.7879, -82.354, -51.6022, 1.18 ) }
    dend_21 { pt3dadd( -97.2001, -82.7104, -51.7749, 1.33 ) }
    dend_21 { pt3dadd( -98.5908, -83.9407, -52.338, 0.22 ) }
    dend_21 { pt3dadd( -99.2075, -84.4989, -52.5739, 0.22 ) }
    dend_21 { pt3dadd( -99.9837, -85.1907, -52.8277, 0.22 ) }
    dend_21 { pt3dadd( -100.665, -85.8364, -53.0174, 0.22 ) }
    dend_21 { pt3dadd( -101.596, -86.708, -53.2757, 1.55 ) }
    dend_21 { pt3dadd( -102.311, -87.3832, -53.4885, 1.92 ) }
    dend_21 { pt3dadd( -102.695, -87.7697, -53.6181, 1.77 ) }
    dend_21 { pt3dadd( -104.219, -89.3475, -54.2662, 0.22 ) }
    dend_21 { pt3dadd( -104.793, -89.9326, -54.535, 0.96 ) }
    dend_21 { pt3dadd( -105.121, -90.2728, -54.7028, 1.11 ) }
    dend_21 { pt3dadd( -106.232, -91.4468, -55.3276, 0.22 ) }
    dend_21 { pt3dadd( -106.923, -92.202, -55.7316, 0.22 ) }
    dend_21 { pt3dadd( -107.538, -92.8721, -56.1201, 1.03 ) }
    dend_21 { pt3dadd( -107.903, -93.2768, -56.3658, 1.33 ) }
    dend_21 { pt3dadd( -108.322, -93.7151, -56.6473, 1.33 ) }
    dend_21 { pt3dadd( -109.767, -95.179, -57.5744, 0.15 ) }
    dend_21 { pt3dadd( -110.378, -95.8026, -57.9484, 0.15 ) }
    dend_21 { pt3dadd( -111.239, -96.6777, -58.4401, 1.55 ) }
    dend_21 { pt3dadd( -111.611, -97.0804, -58.6418, 1.84 ) }
    dend_21 { pt3dadd( -111.986, -97.508, -58.8317, 1.77 ) }
    dend_21 { pt3dadd( -112.816, -98.4903, -59.1841, 0.22 ) }
    dend_21 { pt3dadd( -113.295, -99.0874, -59.3283, 0.22 ) }
    dend_21 { pt3dadd( -113.765, -99.6673, -59.428, 0.96 ) }
    dend_21 { pt3dadd( -114.052, -100.033, -59.4574, 1.11 ) }
    dend_21 { pt3dadd( -114.884, -101.07, -59.4782, 0.22 ) }
    dend_21 { pt3dadd( -115.288, -101.507, -59.4693, 0.22 ) }
    dend_21 { pt3dadd( -115.776, -101.953, -59.4323, 0.22 ) }
    dend_21 { pt3dadd( -116.161, -102.251, -59.3898, 0.96 ) }
    dend_21 { pt3dadd( -116.415, -102.425, -59.3501, 1.25 ) }
    dend_21 { pt3dadd( -116.941, -102.744, -59.2446, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_21 { pt3dadd( -118.296, -103.452, -58.9919, 0.15 ) }
    dend_21 { pt3dadd( -119.094, -103.838, -58.8966, 0.15 ) }
    dend_21 { pt3dadd( -119.419, -103.988, -58.8911, 0.44 ) }
    dend_21 { pt3dadd( -119.785, -104.151, -58.9194, 0.44 ) }
    dend_21 { pt3dadd( -120.527, -104.471, -59.0103, 0.15 ) }
    dend_21 { pt3dadd( -121.762, -105.016, -59.2545, 1.33 ) }
    dend_21 { pt3dadd( -122.351, -105.267, -59.4265, 1.4 ) }
    dend_21 { pt3dadd( -123.837, -105.875, -60.0891, 0.22 ) }
    dend_21 { pt3dadd( -124.631, -106.198, -60.528, 0.44 ) }
    dend_21 { pt3dadd( -125.095, -106.4, -60.8225, 0.22 ) }
    dend_21 { pt3dadd( -126.04, -106.813, -61.5034, 1.33 ) }
    dend_21 { pt3dadd( -126.973, -107.232, -62.2476, 1.62 ) }
    dend_21 { pt3dadd( -128.926, -108.142, -63.9123, 0.22 ) }
    dend_21 { pt3dadd( -129.57, -108.463, -64.5009, 0.22 ) }
    dend_21 { pt3dadd( -130.167, -108.778, -65.0763, 0.96 ) }
    dend_21 { pt3dadd( -131.19, -109.376, -66.1487, 1.18 ) }
    dend_21 { pt3dadd( -132.561, -110.258, -67.6746, 0.22 ) }
    dend_21 { pt3dadd( -132.876, -110.508, -68.0565, 0.22 ) }
    dend_21 { pt3dadd( -133.055, -110.68, -68.2886, 0.66 ) }
    dend_21 { pt3dadd( -133.891, -111.594, -69.4274, 0.22 ) }
    dend_21 { pt3dadd( -134.542, -112.403, -70.3712, 2.06 ) }
    dend_21 { pt3dadd( -134.708, -112.626, -70.6133, 2.28 ) }
    dend_21 { pt3dadd( -135.65, -113.981, -72.0288, 0.22 ) }
    dend_21 { pt3dadd( -135.913, -114.355, -72.4293, 0.22 ) }
    dend_21 { pt3dadd( -136.501, -115.14, -73.2992, 1.33 ) }
    dend_21 { pt3dadd( -136.72, -115.413, -73.6127, 1.62 ) }
    dend_21 { pt3dadd( -138.085, -116.99, -75.4147, 0.37 ) }
    dend_21 { pt3dadd( -138.565, -117.522, -76.002, 0.22 ) }
    dend_21 { pt3dadd( -139.07, -118.048, -76.5646, 0.22 ) }
    dend_21 { pt3dadd( -139.968, -118.952, -77.5027, 1.03 ) }
    dend_21 { pt3dadd( -140.643, -119.581, -78.1176, 1.4 ) }
    dend_21 { pt3dadd( -141.831, -120.597, -79.0369, 0.22 ) }
    dend_21 { pt3dadd( -142.719, -121.331, -79.6084, 1.25 ) }
    dend_21 { pt3dadd( -143.333, -121.814, -79.9518, 1.55 ) }
    dend_21 { pt3dadd( -143.561, -121.992, -80.0533, 1.55 ) }
    dend_21 { pt3dadd( -145.336, -123.406, -80.6456, 0.29 ) }
    dend_21 { pt3dadd( -145.891, -123.836, -80.7804, 0.52 ) }
    dend_21 { pt3dadd( -146.139, -124.011, -80.8196, 0.52 ) }
    dend_21 { pt3dadd( -146.785, -124.475, -80.8708, 0.22 ) }
    dend_21 { pt3dadd( -147.619, -125.124, -80.8627, 0.22 ) }
    dend_21 { pt3dadd( -148.213, -125.605, -80.8112, 1.25 ) }
    dend_21 { pt3dadd( -148.64, -125.97, -80.7268, 1.4 ) }
    dend_21 { pt3dadd( -149.184, -126.421, -80.6074, 1.11 ) }
    dend_21 { pt3dadd( -150.048, -127.058, -80.432, 0.15 ) }
    dend_21 { pt3dadd( -150.789, -127.533, -80.3493, 0.15 ) }
    dend_21 { pt3dadd( -151.636, -128.03, -80.3356, 0.88 ) }
    dend_21 { pt3dadd( -152.07, -128.261, -80.3386, 1.11 ) }
    dend_21 { pt3dadd( -152.423, -128.441, -80.3324, 1.11 ) }
    dend_21 { pt3dadd( -153.725, -129.095, -80.2715, 0.22 ) }
    dend_21 { pt3dadd( -155.042, -129.744, -80.2062, 0.22 ) }
    dend_21 { pt3dadd( -155.611, -129.986, -80.2439, 0.22 ) }
    dend_21 { pt3dadd( -156.824, -130.491, -80.3947, 0.22 ) }
    dend_21 { pt3dadd( -157.821, -130.915, -80.5636, 1.25 ) }
    dend_21 { pt3dadd( -158.461, -131.212, -80.6952, 1.55 ) }
    dend_21 { pt3dadd( -159.307, -131.626, -80.9046, 1.55 ) }
    dend_21 { pt3dadd( -162.377, -133.143, -81.6995, 0.22 ) }
    dend_21 { pt3dadd( -162.811, -133.341, -81.8349, 0.66 ) }
    dend_21 { pt3dadd( -163.223, -133.49, -81.9907, 0.66 ) }
    dend_21 { pt3dadd( -164.069, -133.743, -82.3216, 0.22 ) }
    dend_21 { pt3dadd( -164.88, -133.955, -82.6112, 0.22 ) }
    dend_21 { pt3dadd( -165.425, -134.096, -82.7596, 0.66 ) }
    dend_21 { pt3dadd( -166.161, -134.325, -82.8696, 0.74 ) }
    dend_21 { pt3dadd( -168.08, -134.981, -83.0978, 0.22 ) }
    dend_21 { pt3dadd( -168.739, -135.233, -83.1563, 0.44 ) }
    dend_21 { pt3dadd( -169.15, -135.414, -83.1805, 0.44 ) }
    dend_21 { pt3dadd( -169.999, -135.838, -83.3175, 0.22 ) }
    dend_21 { pt3dadd( -170.761, -136.213, -83.5227, 1.33 ) }
    dend_21 { pt3dadd( -171.243, -136.438, -83.6872, 1.69 ) }
    dend_21 { pt3dadd( -171.461, -136.522, -83.7664, 1.92 ) }
    dend_21 { pt3dadd( -172.229, -136.749, -84.0866, 1.69 ) }
    dend_21 { pt3dadd( -174.778, -137.413, -85.2688, 0.59 ) }
    dend_21 { pt3dadd( -176.182, -137.732, -85.9989, 0.96 ) }
    dend_21 { pt3dadd( -177.321, -137.992, -86.6331, 0.44 ) }
    dend_21 { pt3dadd( -178.298, -138.232, -87.2001, 0.29 ) }
    dend_21 { pt3dadd( -179.311, -138.5, -87.813, 0.29 ) }
    dend_21 { pt3dadd( -179.861, -138.665, -88.1662, 0.29 ) }
    dend_21 { pt3dadd( -181.315, -139.18, -89.0766, 0.88 ) }
    dend_21 { pt3dadd( -182.007, -139.416, -89.4911, 1.55 ) }
    dend_21 { pt3dadd( -182.249, -139.49, -89.6219, 2.06 ) }
    dend_21 { pt3dadd( -184.477, -140.09, -90.7221, 1.69 ) }
    dend_21 { pt3dadd( -184.636, -140.109, -90.7899, 1.84 ) }
    dend_21 { pt3dadd( -186.705, -140.218, -91.609, 0.37 ) }
    dend_21 { pt3dadd( -188.317, -140.255, -92.2139, 0.22 ) }
    dend_21 { pt3dadd( -189.609, -140.259, -92.7228, 1.84 ) }
    dend_21 { pt3dadd( -190.685, -140.265, -93.1521, 2.06 ) }
    dend_21 { pt3dadd( -194.827, -140.241, -94.8952, 0.22 ) }
    dend_21 { pt3dadd( -195.578, -140.233, -95.2193, 0.22 ) }
    dend_21 { pt3dadd( -196.592, -140.225, -95.6851, 1.55 ) }
    dend_21 { pt3dadd( -198.264, -140.254, -96.4775, 1.69 ) }
    dend_21 { pt3dadd( -198.804, -140.27, -96.7694, 1.69 ) }
    dend_21 { pt3dadd( -202.797, -140.492, -99.0801, 0.52 ) }
    dend_21 { pt3dadd( -203.403, -140.55, -99.4481, 1.92 ) }
    dend_21 { pt3dadd( -204.204, -140.624, -99.9355, 1.92 ) }
    dend_21 { pt3dadd( -208.312, -140.996, -102.37, 1.92 ) }
    dend_21 { pt3dadd( -213.075, -141.486, -105.067, 0.66 ) }
    dend_21 { pt3dadd( -213.689, -141.556, -105.419, 0.66 ) }
    dend_21 { pt3dadd( -214.598, -141.693, -105.953, 0.29 ) }
    dend_21 { pt3dadd( -215.292, -141.809, -106.377, 0.29 ) }
    dend_21 { pt3dadd( -215.893, -141.922, -106.744, 1.11 ) }
    dend_21 { pt3dadd( -216.398, -142.058, -107.057, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -219.809, -142.909, -108.985, 0.22 ) }
    dend_21 { pt3dadd( -220.121, -142.971, -109.155, 0.22 ) }
    dend_21 { pt3dadd( -220.849, -143.106, -109.54, 1.47 ) }
    dend_21 { pt3dadd( -221.886, -143.28, -110.085, 1.77 ) }
    dend_21 { pt3dadd( -222.528, -143.361, -110.424, 1.77 ) }
    dend_21 { pt3dadd( -226.798, -143.837, -112.58, 0.22 ) }
    dend_21 { pt3dadd( -227.798, -143.937, -113.063, 1.33 ) }
    dend_21 { pt3dadd( -228.708, -144.009, -113.551, 1.62 ) }
    dend_21 { pt3dadd( -230.06, -144.116, -114.328, 1.62 ) }
    dend_21 { pt3dadd( -233.656, -144.362, -116.515, 0.22 ) }
    dend_21 { pt3dadd( -234.253, -144.39, -116.907, 1.18 ) }
    dend_21 { pt3dadd( -235.707, -144.457, -117.89, 1.33 ) }
    dend_21 { pt3dadd( -238.767, -144.632, -119.972, 0.15 ) }
    dend_21 { pt3dadd( -239.495, -144.689, -120.459, 1.25 ) }
    dend_21 { pt3dadd( -241.623, -144.914, -121.812, 1.62 ) }
    dend_21 { pt3dadd( -245.777, -145.389, -124.258, 0.22 ) }
    dend_21 { pt3dadd( -247.281, -145.553, -125.083, 0.22 ) }
    dend_21 { pt3dadd( -248.18, -145.665, -125.53, 0.44 ) }
    dend_21 { pt3dadd( -249.205, -145.81, -126.019, 0.88 ) }
    dend_21 { pt3dadd( -249.696, -145.885, -126.269, 1.47 ) }
    dend_21 { pt3dadd( -251.007, -146.142, -127.048, 1.62 ) }
    dend_21 { pt3dadd( -254.114, -146.824, -129.126, 0.22 ) }
    dend_21 { pt3dadd( -254.413, -146.887, -129.348, 1.03 ) }
    dend_21 { pt3dadd( -256.233, -147.267, -130.742, 1.11 ) }
    dend_21 { pt3dadd( -257.181, -147.479, -131.478, 0.96 ) }
    dend_21 { pt3dadd( -260.391, -148.266, -134.026, 0.22 ) }
    dend_21 { pt3dadd( -260.765, -148.359, -134.309, 0.81 ) }
    dend_21 { pt3dadd( -261.472, -148.542, -134.802, 0.81 ) }
    dend_21 { pt3dadd( -262.715, -148.875, -135.597, 0.22 ) }
    dend_21 { pt3dadd( -263.993, -149.237, -136.342, 1.47 ) }
    dend_21 { pt3dadd( -265.404, -149.667, -137.098, 1.62 ) }
    dend_21 { pt3dadd( -268.932, -150.889, -138.798, 0.15 ) }
    dend_21 { pt3dadd( -269.769, -151.182, -139.192, 0.15 ) }
    dend_21 { pt3dadd( -270.59, -151.5, -139.581, 0.96 ) }
    dend_21 { pt3dadd( -271.026, -151.678, -139.789, 0.96 ) }
    dend_21 { pt3dadd( -271.668, -151.978, -140.09, 0.22 ) }
    dend_21 { pt3dadd( -272.168, -152.271, -140.31, 1.11 ) }
    dend_21 { pt3dadd( -272.948, -152.948, -140.676, 1.11 ) }
    dend_21 { pt3dadd( -274.712, -154.21, -141.562, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 39/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -9.45066, -28.9456, 0.428368, 2.8 ) }
    dend_18 { pt3dadd( -9.31723, -29.3023, 0.464563, 2.8 ) }
    dend_18 { pt3dadd( -8.89038, -30.4434, 0.580357, 1.84 ) }
    dend_18 { pt3dadd( -8.46424, -31.5826, 0.69596, 1.03 ) }
    dend_18 { pt3dadd( -8.26051, -32.1272, 0.751227, 1.03 ) }
    dend_18 { pt3dadd( -7.99821, -32.8284, 0.822384, 1.18 ) }
    dend_18 { pt3dadd( -7.7657, -33.45, 0.885459, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 46/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.33376, 12.6955, -0.303117, 0.81 ) }
    dend_16 { pt3dadd( 8.14319, 12.8989, 0.144869, 0.81 ) }
    dend_16 { pt3dadd( 8.60242, 13.0351, 0.465759, 0.37 ) }
    dend_16 { pt3dadd( 9.3228, 13.272, 1.00128, 0.88 ) }
    dend_16 { pt3dadd( 9.93914, 13.4996, 1.46569, 1.25 ) }
    dend_16 { pt3dadd( 10.7681, 13.841, 2.08653, 1.25 ) }
    dend_16 { pt3dadd( 11.1564, 14.0195, 2.36779, 1.11 ) }
    dend_16 { pt3dadd( 12.2416, 14.6334, 3.18351, 1.11 ) }
    dend_16 { pt3dadd( 12.561, 14.8379, 3.40272, 1.11 ) }
    dend_16 { pt3dadd( 12.9513, 15.1033, 3.61509, 0.96 ) }
    dend_16 { pt3dadd( 13.7995, 15.6816, 3.92886, 0.66 ) }
    dend_16 { pt3dadd( 14.4601, 16.1044, 4.07693, 0.74 ) }
    dend_16 { pt3dadd( 15.1581, 16.4992, 4.15977, 0.88 ) }
    dend_16 { pt3dadd( 15.9322, 16.8637, 4.16394, 0.96 ) }
    dend_16 { pt3dadd( 16.6901, 17.1408, 4.09765, 0.74 ) }
    dend_16 { pt3dadd( 17.5248, 17.3544, 3.95146, 1.62 ) }
    dend_16 { pt3dadd( 18.2851, 17.4696, 3.75272, 1.84 ) }
    dend_16 { pt3dadd( 18.9077, 17.5055, 3.55408, 1.69 ) }
    dend_16 { pt3dadd( 19.6201, 17.5102, 3.28606, 1.62 ) }
    dend_16 { pt3dadd( 20.7374, 17.5011, 2.86182, 0.88 ) }
    dend_16 { pt3dadd( 21.3403, 17.5327, 2.64572, 0.74 ) }
    dend_16 { pt3dadd( 22.0889, 17.6219, 2.41137, 0.74 ) }
    dend_16 { pt3dadd( 22.8673, 17.7819, 2.21034, 0.96 ) }
    dend_16 { pt3dadd( 23.5375, 17.9775, 2.09928, 0.81 ) }
    dend_16 { pt3dadd( 24.4183, 18.3075, 2.05041, 0.74 ) }
    dend_16 { pt3dadd( 25.5821, 18.7971, 2.2064, 1.25 ) }
    dend_16 { pt3dadd( 26.0834, 19.0199, 2.35533, 1.47 ) }
    dend_16 { pt3dadd( 26.5864, 19.2422, 2.63792, 1.77 ) }
    dend_16 { pt3dadd( 26.967, 19.4152, 2.93326, 1.77 ) }
    dend_16 { pt3dadd( 27.464, 19.6276, 3.43102, 1.11 ) }
    dend_16 { pt3dadd( 28.4927, 19.9812, 4.57912, 1.03 ) }
    dend_16 { pt3dadd( 29.1175, 20.1479, 5.3121, 1.18 ) }
    dend_16 { pt3dadd( 30.3877, 20.4318, 6.80572, 1.4 ) }
    dend_16 { pt3dadd( 30.7536, 20.4946, 7.22886, 1.55 ) }
    dend_16 { pt3dadd( 31.9947, 20.6088, 8.57624, 1.4 ) }
    dend_16 { pt3dadd( 32.7934, 20.619, 9.34263, 1.84 ) }
    dend_16 { pt3dadd( 33.1983, 20.5936, 9.65116, 2.43 ) }
    dend_16 { pt3dadd( 33.6557, 20.5408, 9.91079, 2.43 ) }
    dend_16 { pt3dadd( 34.2316, 20.4522, 10.1298, 2.21 ) }
    dend_16 { pt3dadd( 35.7504, 20.1959, 10.5715, 0.96 ) }
    dend_16 { pt3dadd( 36.5418, 20.0896, 10.7364, 0.66 ) }
    dend_16 { pt3dadd( 37.1179, 20.0506, 10.8485, 0.66 ) }
    dend_16 { pt3dadd( 37.7529, 20.0335, 10.9739, 0.66 ) }
    dend_16 { pt3dadd( 38.3838, 20.0514, 11.086, 0.66 ) }
    dend_16 { pt3dadd( 39.2457, 20.1412, 11.2307, 0.66 ) }
    dend_16 { pt3dadd( 40.1636, 20.3322, 11.3612, 1.03 ) }
    dend_16 { pt3dadd( 40.9473, 20.5734, 11.4793, 0.59 ) }
    dend_16 { pt3dadd( 41.7881, 20.889, 11.596, 0.59 ) }
    dend_16 { pt3dadd( 42.3642, 21.1444, 11.6697, 0.96 ) }
    dend_16 { pt3dadd( 43.1004, 21.5222, 11.7551, 0.66 ) }
    dend_16 { pt3dadd( 43.781, 21.9344, 11.8096, 0.66 ) }
    dend_16 { pt3dadd( 44.682, 22.5494, 11.8533, 1.33 ) }
    dend_16 { pt3dadd( 44.8481, 22.6765, 11.8586, 1.55 ) }
    dend_16 { pt3dadd( 45.1487, 22.9341, 11.8563, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 45.5105, 23.2632, 11.8495, 1.4 ) }
    dend_16 { pt3dadd( 45.9604, 23.6922, 11.8199, 1.11 ) }
    dend_16 { pt3dadd( 46.2657, 23.9863, 11.8069, 1.11 ) }
    dend_16 { pt3dadd( 54.2692, 27.0825, 16.17, 1.11 ) }
    dend_16 { pt3dadd( 62.3919, 29.7483, 20.6341, 1.11 ) }
    dend_16 { pt3dadd( 70.5998, 33.0735, 24.3922, 1.11 ) }
    dend_16 { pt3dadd( 78.1762, 36.6923, 29.0485, 1.11 ) }
    dend_16 { pt3dadd( 86.3096, 39.1592, 33.6216, 1.11 ) }
    dend_16 { pt3dadd( 94.4951, 41.61, 38.1115, 1.11 ) }
    dend_16 { pt3dadd( 102.619, 45.3653, 41.5875, 1.11 ) }
    dend_16 { pt3dadd( 110.921, 48.9483, 44.8453, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.33376, 12.6955, -0.303117, 2.95 ) }
    dend_1 { pt3dadd( 7.37837, 14.4033, -0.313495, 2.95 ) }
    dend_1 { pt3dadd( 7.42021, 16.0048, -0.323226, 2.95 ) }
    dend_1 { pt3dadd( 7.45356, 17.2813, -0.330983, 2.95 ) }
    dend_1 { pt3dadd( 7.47371, 18.0529, -0.335671, 2.95 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 22.4703, 35.0492, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 30.5123, 47.7112, -0.918402, 0.37 ) }
    axon_1 { pt3dadd( 38.5543, 60.3732, -0.918402, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -21.9467, -14.5106, 5.64877, 0.59 ) }
    dend_28 { pt3dadd( -21.9181, -15.8674, 6.04555, 0.59 ) }
    dend_28 { pt3dadd( -21.9171, -16.7982, 6.44708, 0.52 ) }
    dend_28 { pt3dadd( -21.9334, -17.4784, 6.7844, 0.88 ) }
    dend_28 { pt3dadd( -21.9654, -18.2189, 7.17667, 1.03 ) }
    dend_28 { pt3dadd( -21.9895, -18.7771, 7.47234, 1.03 ) }
    dend_28 { pt3dadd( -22.0242, -19.5783, 7.89679, 0.52 ) }
    dend_28 { pt3dadd( -22.1138, -20.6757, 8.58795, 1.11 ) }
    dend_28 { pt3dadd( -22.1567, -21.0624, 8.88148, 1.4 ) }
    dend_28 { pt3dadd( -22.2128, -21.4867, 9.24896, 1.4 ) }
    dend_28 { pt3dadd( -21.7778, -31.4292, 15.0949, 1.4 ) }
    dend_28 { pt3dadd( -21.8285, -40.5819, 22.2426, 1.4 ) }
    dend_28 { pt3dadd( -21.9573, -49.2232, 30.0634, 1.4 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 32/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.9467, -14.5106, 5.64877, 0.29 ) }
    dend_25 { pt3dadd( -23.415, -14.2842, 5.2904, 0.29 ) }
    dend_25 { pt3dadd( -24.6699, -14.0906, 4.98413, 0.59 ) }
    dend_25 { pt3dadd( -25.1134, -14.0222, 4.87589, 0.81 ) }
    dend_25 { pt3dadd( -25.7049, -13.931, 4.73154, 0.81 ) }
    dend_25 { pt3dadd( -26.6279, -13.7887, 4.50626, 0.29 ) }
    dend_25 { pt3dadd( -27.1843, -13.7029, 4.37046, 0.59 ) }
    dend_25 { pt3dadd( -37.8598, -9.67169, 2.98498, 0.59 ) }
    dend_25 { pt3dadd( -47.5871, -3.70067, 3.35449, 0.59 ) }
    dend_25 { pt3dadd( -57.0783, 2.50932, 2.3296, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 42/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.7657, -33.45, 0.885459, 0.59 ) }
    dend_20 { pt3dadd( -7.28969, -34.2632, 1.76288, 0.59 ) }
    dend_20 { pt3dadd( -6.86375, -35.0289, 2.55584, 0.44 ) }
    dend_20 { pt3dadd( -6.68354, -35.3138, 2.86534, 0.44 ) }
    dend_20 { pt3dadd( -6.29099, -35.875, 3.51474, 0.81 ) }
    dend_20 { pt3dadd( -5.99067, -36.2642, 3.97728, 1.25 ) }
    dend_20 { pt3dadd( -5.76521, -36.5281, 4.31075, 1.47 ) }
    dend_20 { pt3dadd( -5.53254, -36.7705, 4.65233, 1.47 ) }
    dend_20 { pt3dadd( -4.58809, -37.7225, 6.00562, 0.74 ) }
    dend_20 { pt3dadd( -3.58853, -38.6186, 7.38091, 0.37 ) }
    dend_20 { pt3dadd( -3.30526, -38.8372, 7.74356, 0.37 ) }
    dend_20 { pt3dadd( -2.89954, -39.1128, 8.24632, 0.81 ) }
    dend_20 { pt3dadd( -2.50984, -39.3558, 8.7242, 0.96 ) }
    dend_20 { pt3dadd( 2.28728, -42.8097, 14.7208, 0.96 ) }
    dend_20 { pt3dadd( 6.69105, -47.6817, 19.887, 0.96 ) }
    dend_20 { pt3dadd( 12.4188, -50.9491, 25.1294, 0.96 ) }
    dend_20 { pt3dadd( 17.9617, -54.3404, 30.4847, 0.96 ) }
    dend_20 { pt3dadd( 24.2845, -57.8903, 34.7473, 0.96 ) }
    dend_20 { pt3dadd( 31.4217, -59.7737, 38.8664, 0.96 ) }
    dend_20 { pt3dadd( 38.1608, -61.0215, 43.8266, 0.96 ) }
    dend_20 { pt3dadd( 45.1223, -63.2565, 48.0576, 0.96 ) }
    dend_20 { pt3dadd( 52.6344, -65.8952, 50.8411, 0.96 ) }
    dend_20 { pt3dadd( 59.723, -68.0043, 54.9272, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.7657, -33.45, 0.885459, 1.11 ) }
    dend_19 { pt3dadd( -8.1862, -34.3325, 0.861152, 1.11 ) }
    dend_19 { pt3dadd( -8.57759, -35.3976, 0.960348, 1.11 ) }
    dend_19 { pt3dadd( -8.95615, -36.7421, 1.1854, 1.11 ) }
    dend_19 { pt3dadd( -9.12024, -37.55, 1.36705, 0.96 ) }
    dend_19 { pt3dadd( -9.20766, -38.1413, 1.5285, 0.96 ) }
    dend_19 { pt3dadd( -9.34522, -39.6843, 2.02578, 1.11 ) }
    dend_19 { pt3dadd( -9.33076, -40.4852, 2.34617, 1.25 ) }
    dend_19 { pt3dadd( -9.2463, -41.2138, 2.68497, 1.25 ) }
    dend_19 { pt3dadd( -9.08225, -42.0775, 3.12339, 1.03 ) }
    dend_19 { pt3dadd( -8.91458, -42.8967, 3.52281, 1.03 ) }
    dend_19 { pt3dadd( -8.74622, -43.9641, 3.97965, 1.18 ) }
    dend_19 { pt3dadd( -8.7113, -44.5032, 4.1496, 1.77 ) }
    dend_19 { pt3dadd( -8.73383, -45.0192, 4.27819, 2.28 ) }
    dend_19 { pt3dadd( -8.8161, -45.5604, 4.37939, 2.14 ) }
    dend_19 { pt3dadd( -9.03079, -46.4147, 4.48315, 1.62 ) }
    dend_19 { pt3dadd( -9.3039, -47.295, 4.54631, 1.03 ) }
    dend_19 { pt3dadd( -9.65079, -48.2763, 4.58855, 0.74 ) }
    dend_19 { pt3dadd( -10.0136, -49.2762, 4.64669, 0.96 ) }
    dend_19 { pt3dadd( -10.4336, -50.4509, 4.7346, 1.25 ) }
    dend_19 { pt3dadd( -10.8476, -51.6604, 4.87842, 1.62 ) }
    dend_19 { pt3dadd( -11.0535, -52.3143, 4.9789, 1.55 ) }
    dend_19 { pt3dadd( -11.2094, -52.8438, 5.0779, 1.69 ) }
    dend_19 { pt3dadd( -11.5733, -54.0726, 5.35996, 1.18 ) }
    dend_19 { pt3dadd( -11.8289, -54.9433, 5.60461, 1.03 ) }
    dend_19 { pt3dadd( -12.0751, -55.7437, 5.87211, 1.33 ) }
    dend_19 { pt3dadd( -12.2695, -56.3446, 6.09244, 1.62 ) }
    dend_19 { pt3dadd( -12.4368, -56.8286, 6.26844, 1.62 ) }
    dend_19 { pt3dadd( -12.6629, -57.5022, 6.49572, 1.77 ) }
    dend_19 { pt3dadd( -12.8157, -58.0021, 6.63409, 1.77 ) }
    dend_19 { pt3dadd( -13.0142, -58.7947, 6.83027, 1.55 ) }
    dend_19 { pt3dadd( -13.1654, -59.5315, 7.00667, 1.25 ) }
    dend_19 { pt3dadd( -13.3124, -60.4581, 7.17893, 0.81 ) }
    dend_19 { pt3dadd( -13.4503, -61.6784, 7.31393, 0.81 ) }
    dend_19 { pt3dadd( -13.5198, -62.6195, 7.39545, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_19 { pt3dadd( -13.5655, -63.7565, 7.50017, 1.03 ) }
    dend_19 { pt3dadd( -13.5592, -64.43, 7.56782, 1.18 ) }
    dend_19 { pt3dadd( -13.4911, -65.809, 7.71768, 0.29 ) }
    dend_19 { pt3dadd( -13.4373, -66.5652, 7.79893, 0.37 ) }
    dend_19 { pt3dadd( -13.3707, -67.8172, 7.92874, 0.37 ) }
    dend_19 { pt3dadd( -13.3256, -68.6947, 8.03224, 0.29 ) }
    dend_19 { pt3dadd( -13.2963, -69.3109, 8.1022, 0.29 ) }
    dend_19 { pt3dadd( -13.2645, -69.9145, 8.20254, 0.29 ) }
    dend_19 { pt3dadd( -13.2422, -70.4707, 8.39024, 0.29 ) }
    dend_19 { pt3dadd( -13.2349, -71.1636, 8.64094, 0.22 ) }
    dend_19 { pt3dadd( -12.9483, -80.1722, 10.9517, 0.22 ) }
    dend_19 { pt3dadd( -13.3724, -88.9067, 14.2362, 0.22 ) }
    dend_19 { pt3dadd( -13.4345, -97.5468, 17.8201, 0.22 ) }
    dend_19 { pt3dadd( -12.9353, -105.257, 23.2689, 0.22 ) }
    dend_19 { pt3dadd( -11.6776, -113.258, 28.09, 0.22 ) }
    dend_19 { pt3dadd( -11.0837, -121.136, 33.2548, 0.22 ) }
    dend_19 { pt3dadd( -11.4224, -129.84, 36.6395, 0.22 ) }
    dend_19 { pt3dadd( -12.2889, -137.989, 41.2607, 0.22 ) }
    dend_19 { pt3dadd( -13.8914, -145.768, 46.3663, 0.22 ) }
    dend_19 { pt3dadd( -13.4539, -153.73, 51.4004, 0.22 ) }
    dend_19 { pt3dadd( -11.7367, -161.285, 56.8441, 0.22 ) }
    dend_19 { pt3dadd( -10.1124, -167.671, 63.7723, 0.22 ) }
    dend_19 { pt3dadd( -6.93063, -174.666, 69.3813, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.47371, 18.0529, -0.335671, 0.66 ) }
    dend_15 { pt3dadd( 6.96555, 18.6567, -0.415938, 0.66 ) }
    dend_15 { pt3dadd( 6.67032, 19.0828, -0.461147, 0.29 ) }
    dend_15 { pt3dadd( 6.54808, 19.2832, -0.477926, 0.44 ) }
    dend_15 { pt3dadd( 6.20195, 19.9251, -0.521579, 0.44 ) }
    dend_15 { pt3dadd( 5.83651, 20.6576, -0.563649, 0.81 ) }
    dend_15 { pt3dadd( 5.69132, 20.9635, -0.578831, 0.96 ) }
    dend_15 { pt3dadd( 5.51838, 21.378, -0.592464, 0.81 ) }
    dend_15 { pt3dadd( 5.3981, 21.6456, -0.5973, 1.03 ) }
    dend_15 { pt3dadd( 5.18182, 22.0425, -0.60702, 1.18 ) }
    dend_15 { pt3dadd( 4.87921, 22.4536, -0.621695, 0.66 ) }
    dend_15 { pt3dadd( 4.36118, 22.9117, -0.648475, 0.22 ) }
    dend_15 { pt3dadd( 3.97596, 23.1386, -0.669291, 0.22 ) }
    dend_15 { pt3dadd( 3.55832, 23.2934, -0.692322, 0.22 ) }
    dend_15 { pt3dadd( 3.02011, 23.4342, -0.722446, 0.66 ) }
    dend_15 { pt3dadd( 2.6663, 23.5029, -0.741137, 0.81 ) }
    dend_15 { pt3dadd( 2.38217, 23.552, -0.758101, 0.66 ) }
    dend_15 { pt3dadd( 1.97329, 23.6288, -0.787889, 0.52 ) }
    dend_15 { pt3dadd( 1.3368, 23.794, -0.840976, 0.44 ) }
    dend_15 { pt3dadd( 0.767929, 23.9764, -0.90793, 0.52 ) }
    dend_15 { pt3dadd( 0.351277, 24.1319, -0.98186, 0.88 ) }
    dend_15 { pt3dadd( -0.0385221, 24.3001, -1.08535, 1.11 ) }
    dend_15 { pt3dadd( -0.345042, 24.4483, -1.18835, 1.11 ) }
    dend_15 { pt3dadd( -0.662481, 24.6188, -1.33136, 0.96 ) }
    dend_15 { pt3dadd( -1.13356, 24.8928, -1.59749, 0.37 ) }
    dend_15 { pt3dadd( -1.64521, 25.215, -1.94046, 0.29 ) }
    dend_15 { pt3dadd( -2.05941, 25.4992, -2.24252, 0.88 ) }
    dend_15 { pt3dadd( -2.26173, 25.6531, -2.39129, 1.03 ) }
    dend_15 { pt3dadd( -2.63376, 25.9688, -2.6823, 1.03 ) }
    dend_15 { pt3dadd( -2.73809, 26.0693, -2.76837, 1.03 ) }
    dend_15 { pt3dadd( -3.18106, 26.564, -3.13088, 0.29 ) }
    dend_15 { pt3dadd( -3.37552, 26.8208, -3.30908, 0.29 ) }
    dend_15 { pt3dadd( -3.68128, 27.2613, -3.61674, 0.96 ) }
    dend_15 { pt3dadd( -3.89144, 27.565, -3.8388, 1.11 ) }
    dend_15 { pt3dadd( -4.01342, 27.7382, -3.96311, 1.11 ) }
    dend_15 { pt3dadd( -4.19486, 27.9843, -4.14688, 0.66 ) }
    dend_15 { pt3dadd( -4.61551, 28.5377, -4.56205, 0.29 ) }
    dend_15 { pt3dadd( -4.87258, 28.8537, -4.81127, 0.29 ) }
    dend_15 { pt3dadd( -5.17401, 29.1987, -5.07008, 0.66 ) }
    dend_15 { pt3dadd( -5.37042, 29.4051, -5.22092, 0.88 ) }
    dend_15 { pt3dadd( -5.55238, 29.5842, -5.35068, 1.03 ) }
    dend_15 { pt3dadd( -5.84012, 29.8569, -5.54256, 0.74 ) }
    dend_15 { pt3dadd( -6.2157, 30.1976, -5.75725, 0.44 ) }
    dend_15 { pt3dadd( -6.67125, 30.6085, -6.00897, 0.22 ) }
    dend_15 { pt3dadd( -7.10353, 30.9982, -6.24802, 0.44 ) }
    dend_15 { pt3dadd( -7.32797, 31.198, -6.36618, 0.59 ) }
    dend_15 { pt3dadd( -7.50722, 31.3636, -6.43069, 0.59 ) }
    dend_15 { pt3dadd( -7.87984, 31.7298, -6.48085, 0.29 ) }
    dend_15 { pt3dadd( -8.27561, 32.1551, -6.43593, 0.59 ) }
    dend_15 { pt3dadd( -8.51065, 32.4265, -6.35893, 0.59 ) }
    dend_15 { pt3dadd( -8.6832, 32.6181, -6.27096, 0.59 ) }
    dend_15 { pt3dadd( -9.47619, 33.4239, -5.80684, 1.69 ) }
    dend_15 { pt3dadd( -9.86564, 33.7983, -5.54901, 2.14 ) }
    dend_15 { pt3dadd( -10.1072, 34.0244, -5.37809, 2.36 ) }
    dend_15 { pt3dadd( -10.2956, 34.1934, -5.24111, 2.36 ) }
    dend_15 { pt3dadd( -11.1384, 34.9036, -4.65147, 0.29 ) }
    dend_15 { pt3dadd( -11.6231, 35.2806, -4.33759, 0.22 ) }
    dend_15 { pt3dadd( -12.2819, 35.7503, -3.954, 0.74 ) }
    dend_15 { pt3dadd( -12.562, 35.9435, -3.7977, 0.96 ) }
    dend_15 { pt3dadd( -12.726, 36.0587, -3.70324, 0.96 ) }
    dend_15 { pt3dadd( -13.2939, 36.4838, -3.38049, 0.22 ) }
    dend_15 { pt3dadd( -13.8255, 36.9313, -3.08073, 0.81 ) }
    dend_15 { pt3dadd( -13.9182, 37.0149, -3.03211, 1.18 ) }
    dend_15 { pt3dadd( -14.2529, 37.3119, -2.87, 1.18 ) }
    dend_15 { pt3dadd( -14.3847, 37.4299, -2.80698, 1.18 ) }
    dend_15 { pt3dadd( -14.7871, 37.8041, -2.63091, 0.15 ) }
    dend_15 { pt3dadd( -14.9607, 37.9856, -2.56641, 0.37 ) }
    dend_15 { pt3dadd( -15.1156, 38.1827, -2.52337, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.47371, 18.0529, -0.335671, 2.8 ) }
    dend_2 { pt3dadd( 8.96424, 20.3334, 0.180858, 2.8 ) }
    dend_2 { pt3dadd( 9.89686, 21.7603, 0.504048, 2.8 ) }
    dend_2 { pt3dadd( 10.6931, 22.9785, 0.77997, 2.95 ) }
    dend_2 { pt3dadd( 11.5565, 24.2995, 1.07916, 3.68 ) }
    dend_2 { pt3dadd( 12.1508, 25.2089, 1.28513, 3.9 ) }
    dend_2 { pt3dadd( 12.7147, 26.0716, 1.48053, 4.57 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -21.9573, -49.2232, 30.0634, 0.66 ) }
    dend_30 { pt3dadd( -22.3336, -57.8709, 37.4664, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( -21.0441, -65.8897, 45.4943, 0.66 ) }
    dend_30 { pt3dadd( -22.5033, -73.2644, 54.186, 0.66 ) }
    dend_30 { pt3dadd( -25.437, -80.0533, 63.0516, 0.66 ) }
    dend_30 { pt3dadd( -29.0576, -86.5441, 71.9194, 0.66 ) }
    dend_30 { pt3dadd( -31.4066, -93.8812, 80.463, 0.66 ) }
    dend_30 { pt3dadd( -35.3676, -99.6693, 89.7189, 0.66 ) }
    dend_30 { pt3dadd( -38.3143, -106.101, 98.8695, 0.66 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 7/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -21.9573, -49.2232, 30.0634, 0.59 ) }
    dend_29 { pt3dadd( -21.8808, -58.2244, 36.2164, 0.66 ) }
    dend_29 { pt3dadd( -22.164, -67.4599, 41.9611, 0.66 ) }
    dend_29 { pt3dadd( -23.433, -77.1457, 46.6381, 0.66 ) }
    dend_29 { pt3dadd( -25.7685, -86.7355, 51.106, 0.66 ) }
    dend_29 { pt3dadd( -26.4037, -97.2228, 53.3461, 0.66 ) }
    dend_29 { pt3dadd( -25.581, -107.055, 57.7963, 0.66 ) }
    dend_29 { pt3dadd( -25.2258, -116.891, 62.296, 0.66 ) }
    dend_29 { pt3dadd( -26.187, -126.97, 66.0246, 0.66 ) }
    dend_29 { pt3dadd( -26.1075, -136.893, 70.3185, 0.66 ) }
    dend_29 { pt3dadd( -25.1279, -146.384, 75.5046, 0.66 ) }
    dend_29 { pt3dadd( -24.2417, -156.525, 79.0822, 0.66 ) }
    dend_29 { pt3dadd( -22.2438, -165.786, 84.4434, 0.66 ) }
    dend_29 { pt3dadd( -19.5254, -175.804, 87.4546, 0.66 ) }
    dend_29 { pt3dadd( -18.9222, -186.425, 88.8593, 0.66 ) }
    dend_29 { pt3dadd( -16.8315, -196.71, 91.305, 0.66 ) }
    dend_29 { pt3dadd( -16.0681, -207.231, 93.3475, 0.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -57.0783, 2.50932, 2.3296, 0.59 ) }
    dend_27 { pt3dadd( -66.8193, 7.06615, 0.900728, 0.59 ) }
    dend_27 { pt3dadd( -76.1671, 11.882, -1.65252, 0.59 ) }
    dend_27 { pt3dadd( -86.343, 15.7555, -1.93382, 0.59 ) }
    dend_27 { pt3dadd( -96.5148, 19.438, -3.1808, 0.59 ) }
    dend_27 { pt3dadd( -105.538, 25.3489, -3.51014, 0.59 ) }
    dend_27 { pt3dadd( -114.696, 30.9481, -4.6797, 0.59 ) }
    dend_27 { pt3dadd( -122.239, 38.5257, -4.47408, 0.59 ) }
    dend_27 { pt3dadd( -128.886, 46.8026, -4.97478, 0.59 ) }
    dend_27 { pt3dadd( -133.609, 56.2002, -5.56057, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 34/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -57.0783, 2.50932, 2.3296, 0.59 ) }
    dend_26 { pt3dadd( -66.7455, 7.56049, 3.19758, 0.59 ) }
    dend_26 { pt3dadd( -76.479, 12.5029, 2.56045, 0.59 ) }
    dend_26 { pt3dadd( -86.5887, 16.3804, 0.762218, 0.59 ) }
    dend_26 { pt3dadd( -96.5307, 19.9243, -2.27233, 0.59 ) }
    dend_26 { pt3dadd( -105.452, 24.787, -6.253, 0.59 ) }
    dend_26 { pt3dadd( -114.689, 28.7747, -10.5862, 0.59 ) }
    dend_26 { pt3dadd( -123.079, 33.2468, -15.9619, 0.59 ) }
    dend_26 { pt3dadd( -132.008, 35.6115, -21.9553, 0.59 ) }
    dend_26 { pt3dadd( -141.081, 37.4959, -27.9312, 0.59 ) }
    dend_26 { pt3dadd( -150.759, 38.7521, -33.1037, 0.59 ) }
    dend_26 { pt3dadd( -160.361, 38.1272, -38.5791, 0.59 ) }
    dend_26 { pt3dadd( -169.458, 37.9798, -44.8788, 0.59 ) }
    dend_26 { pt3dadd( -178.895, 38.5545, -50.6135, 0.59 ) }
    dend_26 { pt3dadd( -189.036, 38.2676, -55.0429, 0.59 ) }
    dend_26 { pt3dadd( -199.15, 37.009, -59.3682, 0.59 ) }
    dend_26 { pt3dadd( -209.613, 37.4977, -62.931, 0.59 ) }
    dend_26 { pt3dadd( -220.291, 37.3117, -65.8489, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.7147, 26.0716, 1.48053, 2.36 ) }
    dend_12 { pt3dadd( 13.0854, 26.7378, 3.03713, 2.36 ) }
    dend_12 { pt3dadd( 13.2266, 27.1691, 4.26242, 1.99 ) }
    dend_12 { pt3dadd( 13.2604, 27.3936, 4.95159, 1.84 ) }
    dend_12 { pt3dadd( 13.2372, 28.0868, 7.15369, 1.55 ) }
    dend_12 { pt3dadd( 13.0737, 28.8082, 9.53498, 2.06 ) }
    dend_12 { pt3dadd( 12.7557, 29.5714, 12.0404, 2.43 ) }
    dend_12 { pt3dadd( 12.3082, 30.0404, 13.8451, 2.58 ) }
    dend_12 { pt3dadd( 12.1148, 30.164, 14.4216, 2.36 ) }
    dend_12 { pt3dadd( 11.7955, 30.3061, 15.2108, 2.21 ) }
    dend_12 { pt3dadd( 11.2105, 30.5028, 16.4058, 2.06 ) }
    dend_12 { pt3dadd( 10.7204, 30.6565, 17.3231, 1.25 ) }
    dend_12 { pt3dadd( 9.47699, 31.1395, 19.738, 1.55 ) }
    dend_12 { pt3dadd( 8.74556, 31.5461, 21.324, 1.18 ) }
    dend_12 { pt3dadd( 8.40717, 31.8155, 22.2522, 1.47 ) }
    dend_12 { pt3dadd( 8.16527, 32.1157, 23.1488, 2.14 ) }
    dend_12 { pt3dadd( 8.03308, 32.4543, 23.981, 1.84 ) }
    dend_12 { pt3dadd( 8.03389, 32.9101, 24.8675, 1.47 ) }
    dend_12 { pt3dadd( 8.25781, 33.5749, 25.6793, 0.88 ) }
    dend_12 { pt3dadd( 8.67851, 34.3796, 26.3786, 0.52 ) }
    dend_12 { pt3dadd( 8.94474, 34.7954, 26.6625, 0.22 ) }
    dend_12 { pt3dadd( 9.29271, 35.2513, 26.9373, 0.22 ) }
    dend_12 { pt3dadd( 9.60706, 35.6186, 27.1267, 0.59 ) }
    dend_12 { pt3dadd( 9.8093, 35.8253, 27.2247, 0.66 ) }
    dend_12 { pt3dadd( 10.1783, 36.1958, 27.3906, 0.22 ) }
    dend_12 { pt3dadd( 10.5282, 36.6739, 27.4995, 0.44 ) }
    dend_12 { pt3dadd( 8.73248, 39.0842, 36.3526, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.7147, 26.0716, 1.48053, 0.96 ) }
    dend_3 { pt3dadd( 12.138, 29.4043, -2.01807, 0.96 ) }
    dend_3 { pt3dadd( 12.0047, 30.3267, -3.02978, 1.33 ) }
    dend_3 { pt3dadd( 11.9462, 30.8067, -3.55417, 1.55 ) }
    dend_3 { pt3dadd( 11.8948, 31.2274, -4.01371, 1.77 ) }
    dend_3 { pt3dadd( 11.8162, 31.8712, -4.71708, 1.92 ) }
    dend_3 { pt3dadd( 11.7003, 32.8212, -5.75492, 0.96 ) }
    dend_3 { pt3dadd( 11.6204, 34.3166, -7.09591, 1.11 ) }
    dend_3 { pt3dadd( 11.6061, 34.5983, -7.37343, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 88/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.73248, 39.0842, 36.3526, 0.44 ) }
    dend_14 { pt3dadd( 9.21192, 41.0022, 42.6461, 0.44 ) }
    dend_14 { pt3dadd( 10.2634, 44.1494, 48.2973, 0.44 ) }
    dend_14 { pt3dadd( 12.1949, 48.2638, 52.9684, 0.44 ) }
    dend_14 { pt3dadd( 15.567, 52.235, 56.9402, 0.44 ) }
    dend_14 { pt3dadd( 18.3191, 56.0827, 61.4652, 0.44 ) }
    dend_14 { pt3dadd( 20.5568, 59.0113, 66.9152, 0.44 ) }
    dend_14 { pt3dadd( 23.3787, 62.3444, 71.8246, 0.44 ) }
    dend_14 { pt3dadd( 26.2992, 65.6469, 76.7005, 0.44 ) }
    dend_14 { pt3dadd( 28.3753, 69.5522, 81.5067, 0.44 ) }
    dend_14 { pt3dadd( 30.6593, 73.3836, 86.2883, 0.44 ) }
    dend_14 { pt3dadd( 31.8509, 78.1671, 90.4654, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 34.4291, 82.6341, 94.4384, 0.44 ) }
    dend_14 { pt3dadd( 37.961, 86.9282, 97.8795, 0.44 ) }
    dend_14 { pt3dadd( 40.7842, 91.4657, 101.6, 0.44 ) }
    dend_14 { pt3dadd( 42.7872, 96.1592, 105.602, 0.44 ) }
    dend_14 { pt3dadd( 44.6266, 100.859, 109.668, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.73248, 39.0842, 36.3526, 0.44 ) }
    dend_13 { pt3dadd( 8.06617, 42.1923, 45.2526, 0.44 ) }
    dend_13 { pt3dadd( 6.41654, 45.4299, 53.9678, 0.44 ) }
    dend_13 { pt3dadd( 5.36641, 48.3403, 62.9038, 0.44 ) }
    dend_13 { pt3dadd( 3.17906, 50.1239, 71.9602, 0.44 ) }
    dend_13 { pt3dadd( -0.473395, 51.2897, 80.6479, 0.44 ) }
    dend_13 { pt3dadd( -2.39965, 52.8929, 89.8015, 0.44 ) }
    dend_13 { pt3dadd( -3.23663, 54.7526, 99.0668, 0.44 ) }
    dend_13 { pt3dadd( -3.6034, 57.2813, 108.186, 0.44 ) }
    dend_13 { pt3dadd( -5.33069, 58.1685, 117.489, 0.44 ) }
    dend_13 { pt3dadd( -8.32495, 58.3961, 126.51, 0.44 ) }
    dend_13 { pt3dadd( -9.98484, 59.161, 135.837, 0.44 ) }
    dend_13 { pt3dadd( -10.8733, 60.1171, 145.249, 0.44 ) }
    dend_13 { pt3dadd( -11.4352, 61.3253, 154.655, 0.44 ) }
    dend_13 { pt3dadd( -12.4205, 63.7249, 163.766, 0.44 ) }
    dend_13 { pt3dadd( -13.9548, 66.6252, 172.634, 0.44 ) }
    dend_13 { pt3dadd( -16.4582, 71.1523, 180.456, 0.44 ) }
    dend_13 { pt3dadd( -20.0338, 75.592, 187.903, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 11.6061, 34.5983, -7.37343, 0.66 ) }
    dend_9 { pt3dadd( 12.777, 34.1561, -8.09682, 0.66 ) }
    dend_9 { pt3dadd( 14.5312, 33.5548, -8.97531, 0.88 ) }
    dend_9 { pt3dadd( 15.9565, 33.1617, -9.61038, 1.11 ) }
    dend_9 { pt3dadd( 17.0868, 32.9214, -10.0732, 1.25 ) }
    dend_9 { pt3dadd( 17.6307, 32.836, -10.2864, 1.47 ) }
    dend_9 { pt3dadd( 18.5103, 32.7482, -10.6246, 1.18 ) }
    dend_9 { pt3dadd( 19.2043, 32.7702, -10.8311, 0.66 ) }
    dend_9 { pt3dadd( 20.3945, 33.1834, -11.1176, 0.52 ) }
    dend_9 { pt3dadd( 20.8649, 33.4808, -11.2365, 0.66 ) }
    dend_9 { pt3dadd( 21.2518, 33.7583, -11.3487, 0.66 ) }
    dend_9 { pt3dadd( 21.748, 34.1097, -11.5249, 0.37 ) }
    dend_9 { pt3dadd( 22.5318, 34.6006, -11.7854, 0.37 ) }
    dend_9 { pt3dadd( 23.1934, 34.8768, -11.9476, 1.18 ) }
    dend_9 { pt3dadd( 23.8895, 35.0235, -12.0063, 1.77 ) }
    dend_9 { pt3dadd( 24.8575, 35.1137, -12.0165, 1.92 ) }
    dend_9 { pt3dadd( 25.4246, 35.1296, -11.9858, 1.69 ) }
    dend_9 { pt3dadd( 26.3779, 35.1282, -11.8787, 0.66 ) }
    dend_9 { pt3dadd( 27.4389, 35.1437, -11.7441, 0.52 ) }
    dend_9 { pt3dadd( 28.23, 35.1882, -11.6774, 0.37 ) }
    dend_9 { pt3dadd( 28.8939, 35.2686, -11.6521, 0.37 ) }
    dend_9 { pt3dadd( 29.7687, 35.4354, -11.6722, 0.29 ) }
    dend_9 { pt3dadd( 30.3621, 35.5831, -11.739, 0.29 ) }
    dend_9 { pt3dadd( 31.6051, 35.9928, -11.9876, 0.59 ) }
    dend_9 { pt3dadd( 32.3494, 36.2915, -12.2395, 1.55 ) }
    dend_9 { pt3dadd( 32.7185, 36.4415, -12.3998, 1.77 ) }
    dend_9 { pt3dadd( 33.428, 36.7015, -12.7234, 1.92 ) }
    dend_9 { pt3dadd( 33.8252, 36.8215, -12.9004, 2.06 ) }
    dend_9 { pt3dadd( 34.1138, 36.879, -13.0196, 2.06 ) }
    dend_9 { pt3dadd( 36.3869, 37.1161, -13.9383, 0.29 ) }
    dend_9 { pt3dadd( 36.9096, 37.147, -14.149, 0.29 ) }
    dend_9 { pt3dadd( 37.7541, 37.1754, -14.4856, 0.29 ) }
    dend_9 { pt3dadd( 38.3275, 37.1861, -14.7028, 0.29 ) }
    dend_9 { pt3dadd( 40.0028, 37.2028, -15.3408, 1.18 ) }
    dend_9 { pt3dadd( 41.3565, 37.2322, -15.8765, 1.47 ) }
    dend_9 { pt3dadd( 41.8539, 37.2721, -16.1146, 1.69 ) }
    dend_9 { pt3dadd( 42.2289, 37.3217, -16.3198, 1.92 ) }
    dend_9 { pt3dadd( 42.4833, 37.354, -16.468, 2.14 ) }
    dend_9 { pt3dadd( 42.8631, 37.39, -16.68, 2.14 ) }
    dend_9 { pt3dadd( 43.6534, 37.4187, -17.0819, 2.14 ) }
    dend_9 { pt3dadd( 45.9056, 37.3732, -18.1109, 1.03 ) }
    dend_9 { pt3dadd( 47.1493, 37.3033, -18.6732, 0.29 ) }
    dend_9 { pt3dadd( 48.3985, 37.1973, -19.2407, 0.52 ) }
    dend_9 { pt3dadd( 49.0491, 37.1302, -19.52, 0.81 ) }
    dend_9 { pt3dadd( 49.666, 37.0547, -19.7774, 0.81 ) }
    dend_9 { pt3dadd( 50.3276, 36.9646, -20.0362, 0.52 ) }
    dend_9 { pt3dadd( 51.1806, 36.8628, -20.3518, 0.74 ) }
    dend_9 { pt3dadd( 52.013, 36.8224, -20.6869, 0.81 ) }
    dend_9 { pt3dadd( 52.849, 36.8526, -21.0511, 1.69 ) }
    dend_9 { pt3dadd( 54.0662, 36.9812, -21.5649, 2.06 ) }
    dend_9 { pt3dadd( 54.6675, 37.07, -21.7906, 2.43 ) }
    dend_9 { pt3dadd( 56.1132, 37.3024, -22.2476, 1.11 ) }
    dend_9 { pt3dadd( 57.0576, 37.4577, -22.4645, 0.96 ) }
    dend_9 { pt3dadd( 57.9412, 37.6255, -22.6005, 1.03 ) }
    dend_9 { pt3dadd( 59.1927, 37.9021, -22.7414, 0.29 ) }
    dend_9 { pt3dadd( 59.941, 38.0944, -22.7807, 0.37 ) }
    dend_9 { pt3dadd( 60.5847, 38.2861, -22.7958, 0.37 ) }
    dend_9 { pt3dadd( 61.1877, 38.5023, -22.8041, 0.22 ) }
    dend_9 { pt3dadd( 61.6672, 38.6858, -22.8351, 0.22 ) }
    dend_9 { pt3dadd( 62.4501, 38.9917, -22.9352, 0.22 ) }
    dend_9 { pt3dadd( 62.942, 39.1957, -23.0554, 0.22 ) }
    dend_9 { pt3dadd( 63.3813, 39.3861, -23.1974, 0.22 ) }
    dend_9 { pt3dadd( 64.4836, 39.8723, -23.573, 1.62 ) }
    dend_9 { pt3dadd( 65.328, 40.2346, -23.8403, 2.5 ) }
    dend_9 { pt3dadd( 65.7158, 40.394, -23.9458, 2.73 ) }
    dend_9 { pt3dadd( 66.4774, 40.6946, -24.1175, 2.14 ) }
    dend_9 { pt3dadd( 68.5459, 41.4857, -24.555, 0.22 ) }
    dend_9 { pt3dadd( 69.0503, 41.6705, -24.6607, 0.22 ) }
    dend_9 { pt3dadd( 69.6546, 41.8889, -24.7942, 0.44 ) }
    dend_9 { pt3dadd( 69.928, 41.991, -24.8576, 0.44 ) }
    dend_9 { pt3dadd( 70.7614, 42.3271, -25.0684, 0.29 ) }
    dend_9 { pt3dadd( 71.3718, 42.5754, -25.2328, 0.74 ) }
    dend_9 { pt3dadd( 71.9096, 42.7811, -25.3874, 0.74 ) }
    dend_9 { pt3dadd( 73.0854, 43.2042, -25.7316, 0.22 ) }
    dend_9 { pt3dadd( 73.8245, 43.4626, -25.9487, 0.22 ) }
    dend_9 { pt3dadd( 75.1829, 43.9114, -26.3575, 1.84 ) }
    dend_9 { pt3dadd( 75.8208, 44.1129, -26.5395, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 77.4032, 44.564, -26.9989, 0.29 ) }
    dend_9 { pt3dadd( 77.9407, 44.6796, -27.1633, 0.44 ) }
    dend_9 { pt3dadd( 78.4261, 44.7542, -27.3231, 0.44 ) }
    dend_9 { pt3dadd( 79.5619, 44.8687, -27.7429, 0.29 ) }
    dend_9 { pt3dadd( 80.6745, 44.9257, -28.1971, 1.84 ) }
    dend_9 { pt3dadd( 81.815, 44.9684, -28.7465, 2.14 ) }
    dend_9 { pt3dadd( 83.7482, 45.0136, -29.8196, 0.29 ) }
    dend_9 { pt3dadd( 84.9105, 45.0598, -30.4876, 0.81 ) }
    dend_9 { pt3dadd( 85.8215, 45.1053, -31.0005, 0.81 ) }
    dend_9 { pt3dadd( 86.5188, 45.1503, -31.3798, 0.52 ) }
    dend_9 { pt3dadd( 88.3392, 45.3119, -32.3579, 0.52 ) }
    dend_9 { pt3dadd( 89.0267, 45.4082, -32.7015, 0.81 ) }
    dend_9 { pt3dadd( 90.8073, 45.7678, -33.5068, 2.14 ) }
    dend_9 { pt3dadd( 91.3627, 45.8955, -33.7235, 2.65 ) }
    dend_9 { pt3dadd( 91.7005, 45.983, -33.8336, 2.65 ) }
    dend_9 { pt3dadd( 94.0146, 46.6391, -34.4228, 0.29 ) }
    dend_9 { pt3dadd( 94.675, 46.852, -34.5508, 0.22 ) }
    dend_9 { pt3dadd( 95.408, 47.1224, -34.6906, 0.96 ) }
    dend_9 { pt3dadd( 95.9162, 47.3341, -34.797, 1.18 ) }
    dend_9 { pt3dadd( 96.5751, 47.6311, -34.9401, 0.96 ) }
    dend_9 { pt3dadd( 97.3865, 48.0313, -35.09, 0.22 ) }
    dend_9 { pt3dadd( 98.0732, 48.4235, -35.1546, 0.22 ) }
    dend_9 { pt3dadd( 98.5477, 48.6942, -35.1872, 0.22 ) }
    dend_9 { pt3dadd( 99.5489, 49.1963, -35.2316, 1.4 ) }
    dend_9 { pt3dadd( 100.145, 49.485, -35.2512, 1.84 ) }
    dend_9 { pt3dadd( 100.281, 49.5512, -35.2559, 2.06 ) }
    dend_9 { pt3dadd( 100.78, 49.7818, -35.2693, 1.99 ) }
    dend_9 { pt3dadd( 101.544, 50.1088, -35.276, 0.88 ) }
    dend_9 { pt3dadd( 102.743, 50.6313, -35.2717, 0.22 ) }
    dend_9 { pt3dadd( 103.25, 50.8705, -35.2524, 0.29 ) }
    dend_9 { pt3dadd( 103.762, 51.1188, -35.2007, 0.29 ) }
    dend_9 { pt3dadd( 104.25, 51.3423, -35.1344, 0.29 ) }
    dend_9 { pt3dadd( 104.539, 51.4644, -35.0864, 0.66 ) }
    dend_9 { pt3dadd( 104.933, 51.6176, -35.0, 0.66 ) }
    dend_9 { pt3dadd( 105.269, 51.7343, -34.9144, 0.66 ) }
    dend_9 { pt3dadd( 105.878, 51.9062, -34.759, 0.22 ) }
    dend_9 { pt3dadd( 106.426, 52.0412, -34.6189, 0.22 ) }
    dend_9 { pt3dadd( 107.26, 52.2453, -34.4129, 1.33 ) }
    dend_9 { pt3dadd( 108.076, 52.4418, -34.2289, 2.14 ) }
    dend_9 { pt3dadd( 108.49, 52.5462, -34.1485, 2.28 ) }
    dend_9 { pt3dadd( 108.995, 52.6832, -34.0625, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 11.6061, 34.5983, -7.37343, 0.59 ) }
    dend_4 { pt3dadd( 10.5437, 35.3252, -8.17898, 0.59 ) }
    dend_4 { pt3dadd( 10.2575, 35.4977, -8.44298, 0.96 ) }
    dend_4 { pt3dadd( 9.98159, 35.6406, -8.69116, 0.96 ) }
    dend_4 { pt3dadd( 9.69877, 35.7593, -8.98888, 0.81 ) }
    dend_4 { pt3dadd( 9.11395, 35.986, -9.72007, 0.59 ) }
    dend_4 { pt3dadd( 8.89465, 36.0873, -10.0243, 0.81 ) }
    dend_4 { pt3dadd( 8.65761, 36.2156, -10.4179, 0.81 ) }
    dend_4 { pt3dadd( 8.51671, 36.3177, -10.6822, 0.74 ) }
    dend_4 { pt3dadd( 8.14541, 36.7097, -11.4783, 0.74 ) }
    dend_4 { pt3dadd( 7.92781, 37.0863, -12.0313, 0.74 ) }
    dend_4 { pt3dadd( 7.78488, 37.5874, -12.5241, 0.52 ) }
    dend_4 { pt3dadd( 7.75784, 37.9478, -12.7795, 0.66 ) }
    dend_4 { pt3dadd( 7.79831, 38.5264, -13.0258, 0.96 ) }
    dend_4 { pt3dadd( 7.87181, 38.9363, -13.1205, 0.88 ) }
    dend_4 { pt3dadd( 7.97049, 39.3146, -13.1319, 0.44 ) }
    dend_4 { pt3dadd( 8.09634, 39.7044, -13.092, 0.29 ) }
    dend_4 { pt3dadd( 8.26777, 40.1487, -12.9898, 0.29 ) }
    dend_4 { pt3dadd( 8.46766, 40.6443, -12.8438, 0.88 ) }
    dend_4 { pt3dadd( 8.5812, 40.9347, -12.7478, 1.11 ) }
    dend_4 { pt3dadd( 8.6859, 41.2357, -12.6446, 1.18 ) }
    dend_4 { pt3dadd( 8.76839, 41.5323, -12.5506, 0.88 ) }
    dend_4 { pt3dadd( 8.91576, 42.2576, -12.3705, 0.37 ) }
    dend_4 { pt3dadd( 8.97275, 42.6856, -12.3015, 0.29 ) }
    dend_4 { pt3dadd( 9.01729, 43.2631, -12.285, 0.29 ) }
    dend_4 { pt3dadd( 9.01713, 43.6525, -12.3073, 0.29 ) }
    dend_4 { pt3dadd( 8.98183, 44.3198, -12.4713, 1.25 ) }
    dend_4 { pt3dadd( 8.95015, 44.7497, -12.6477, 1.77 ) }
    dend_4 { pt3dadd( 8.93884, 44.95, -12.7611, 1.92 ) }
    dend_4 { pt3dadd( 8.93229, 45.3464, -13.008, 1.92 ) }
    dend_4 { pt3dadd( 8.94665, 45.7304, -13.2583, 1.11 ) }
    dend_4 { pt3dadd( 9.04665, 46.6362, -13.8697, 0.44 ) }
    dend_4 { pt3dadd( 9.10999, 47.0476, -14.1373, 0.66 ) }
    dend_4 { pt3dadd( 9.17867, 47.485, -14.3769, 0.88 ) }
    dend_4 { pt3dadd( 9.2349, 47.837, -14.5436, 1.11 ) }
    dend_4 { pt3dadd( 9.27981, 48.122, -14.6592, 1.11 ) }
    dend_4 { pt3dadd( 9.34631, 48.5476, -14.8301, 0.66 ) }
    dend_4 { pt3dadd( 9.42345, 49.1677, -15.0432, 0.37 ) }
    dend_4 { pt3dadd( 9.51722, 49.9423, -15.3028, 0.88 ) }
    dend_4 { pt3dadd( 9.57078, 50.3162, -15.4403, 1.47 ) }
    dend_4 { pt3dadd( 9.64058, 50.668, -15.5761, 1.77 ) }
    dend_4 { pt3dadd( 9.75694, 51.0966, -15.7618, 1.92 ) }
    dend_4 { pt3dadd( 9.86099, 51.3715, -15.9061, 2.14 ) }
    dend_4 { pt3dadd( 10.0611, 51.7439, -16.1696, 2.14 ) }
    dend_4 { pt3dadd( 10.3184, 52.1307, -16.6427, 1.62 ) }
    dend_4 { pt3dadd( 10.4842, 52.375, -17.0483, 1.11 ) }
    dend_4 { pt3dadd( 10.6678, 52.6776, -17.6272, 0.66 ) }
    dend_4 { pt3dadd( 10.7992, 52.9638, -18.2435, 0.81 ) }
    dend_4 { pt3dadd( 10.8703, 53.2182, -18.8604, 0.66 ) }
    dend_4 { pt3dadd( 10.9234, 53.8972, -20.6831, 0.81 ) }
    dend_4 { pt3dadd( 10.8872, 54.1323, -21.2982, 0.74 ) }
    dend_4 { pt3dadd( 10.8242, 54.3151, -21.7604, 1.11 ) }
    dend_4 { pt3dadd( 10.6419, 54.672, -22.5881, 1.62 ) }
    dend_4 { pt3dadd( 10.4433, 54.9861, -23.2457, 1.69 ) }
    dend_4 { pt3dadd( 10.1883, 55.3451, -23.8907, 1.55 ) }
    dend_4 { pt3dadd( 9.92158, 55.7624, -24.4688, 0.37 ) }
    dend_4 { pt3dadd( 9.84007, 55.9437, -24.6772, 0.52 ) }
    dend_4 { pt3dadd( 9.76255, 56.2222, -24.9388, 0.66 ) }
    dend_4 { pt3dadd( 9.71696, 56.4862, -25.1346, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( 9.67756, 56.8384, -25.3687, 0.22 ) }
    dend_4 { pt3dadd( 9.63819, 57.3505, -25.745, 0.22 ) }
    dend_4 { pt3dadd( 9.58796, 58.1111, -26.3969, 1.99 ) }
    dend_4 { pt3dadd( 9.55217, 58.5183, -26.7677, 2.43 ) }
    dend_4 { pt3dadd( 9.51332, 58.8622, -27.092, 2.73 ) }
    dend_4 { pt3dadd( 9.4694, 59.1447, -27.3759, 2.95 ) }
    dend_4 { pt3dadd( 9.18264, 60.3868, -28.6909, 0.52 ) }
    dend_4 { pt3dadd( 9.04515, 60.7769, -29.1334, 0.59 ) }
    dend_4 { pt3dadd( 8.94082, 61.0197, -29.4248, 1.11 ) }
    dend_4 { pt3dadd( 8.87134, 61.1778, -29.6131, 1.25 ) }
    dend_4 { pt3dadd( 8.75351, 61.4618, -29.9169, 1.25 ) }
    dend_4 { pt3dadd( 8.58888, 61.8684, -30.3208, 0.22 ) }
    dend_4 { pt3dadd( 8.44004, 62.2265, -30.6637, 0.22 ) }
    dend_4 { pt3dadd( 8.31082, 62.5668, -31.0073, 0.37 ) }
    dend_4 { pt3dadd( 8.19626, 62.882, -31.3736, 0.37 ) }
    dend_4 { pt3dadd( 8.01407, 63.4227, -32.0075, 1.69 ) }
    dend_4 { pt3dadd( 7.87735, 63.8312, -32.4748, 2.28 ) }
    dend_4 { pt3dadd( 7.79017, 64.0752, -32.7565, 2.65 ) }
    dend_4 { pt3dadd( 7.67192, 64.405, -33.1156, 2.65 ) }
    dend_4 { pt3dadd( 7.49148, 64.9158, -33.6513, 2.5 ) }
    dend_4 { pt3dadd( 7.21956, 65.7691, -34.4914, 0.29 ) }
    dend_4 { pt3dadd( 7.1395, 66.1, -34.7997, 0.29 ) }
    dend_4 { pt3dadd( 7.09394, 66.4282, -35.087, 0.29 ) }
    dend_4 { pt3dadd( 7.06648, 66.82, -35.4187, 0.74 ) }
    dend_4 { pt3dadd( 7.05623, 67.1999, -35.7335, 0.96 ) }
    dend_4 { pt3dadd( 7.05887, 67.643, -36.1144, 0.96 ) }
    dend_4 { pt3dadd( 7.05338, 67.9815, -36.472, 0.29 ) }
    dend_4 { pt3dadd( 7.00725, 68.4637, -37.0273, 0.22 ) }
    dend_4 { pt3dadd( 6.97603, 68.6, -37.1937, 0.22 ) }
    dend_4 { pt3dadd( 6.90673, 68.7782, -37.435, 0.22 ) }
    dend_4 { pt3dadd( 6.7856, 69.0236, -37.773, 0.22 ) }
    dend_4 { pt3dadd( 6.43665, 69.6501, -38.6993, 2.28 ) }
    dend_4 { pt3dadd( 6.29411, 69.9141, -39.1312, 2.43 ) }
    dend_4 { pt3dadd( 6.19341, 70.1164, -39.4773, 2.65 ) }
    dend_4 { pt3dadd( 5.82057, 71.0116, -41.0467, 0.59 ) }
    dend_4 { pt3dadd( 5.72683, 71.2772, -41.5218, 0.52 ) }
    dend_4 { pt3dadd( 5.57626, 71.7679, -42.3982, 0.59 ) }
    dend_4 { pt3dadd( 5.43601, 72.2925, -43.3021, 0.37 ) }
    dend_4 { pt3dadd( 5.3873, 72.5082, -43.6453, 0.52 ) }
    dend_4 { pt3dadd( 5.346, 72.7476, -43.9906, 0.66 ) }
    dend_4 { pt3dadd( 5.31326, 72.9655, -44.2638, 0.66 ) }
    dend_4 { pt3dadd( 5.27252, 73.2532, -44.5757, 0.44 ) }
    dend_4 { pt3dadd( 5.17233, 73.9363, -45.2175, 2.14 ) }
    dend_4 { pt3dadd( 5.08447, 74.4704, -45.6886, 2.5 ) }
    dend_4 { pt3dadd( 5.01379, 74.8983, -46.0665, 1.92 ) }
    dend_4 { pt3dadd( 4.85334, 75.8717, -46.9172, 0.22 ) }
    dend_4 { pt3dadd( 4.78723, 76.2858, -47.2655, 0.22 ) }
    dend_4 { pt3dadd( 4.64169, 77.2535, -48.0427, 1.69 ) }
    dend_4 { pt3dadd( 4.61305, 77.4403, -48.1783, 2.06 ) }
    dend_4 { pt3dadd( 4.55484, 77.8363, -48.4276, 2.14 ) }
    dend_4 { pt3dadd( 4.52326, 78.0523, -48.5469, 1.62 ) }
    dend_4 { pt3dadd( 4.40717, 78.9565, -49.0071, 0.37 ) }
    dend_4 { pt3dadd( 4.34553, 79.4449, -49.2561, 0.37 ) }
    dend_4 { pt3dadd( 4.25465, 80.1915, -49.6272, 0.37 ) }
    dend_4 { pt3dadd( 4.1842, 80.7247, -49.9034, 0.37 ) }
    dend_4 { pt3dadd( 4.03354, 81.8527, -50.5058, 1.69 ) }
    dend_4 { pt3dadd( 3.9865, 82.1914, -50.6923, 1.92 ) }
    dend_4 { pt3dadd( 3.95851, 82.3961, -50.8069, 1.92 ) }
    dend_4 { pt3dadd( 3.86573, 83.0918, -51.2053, 0.22 ) }
    dend_4 { pt3dadd( 3.80811, 83.6175, -51.5089, 0.22 ) }
    dend_4 { pt3dadd( 3.77696, 84.0712, -51.7478, 0.37 ) }
    dend_4 { pt3dadd( 3.76769, 84.4139, -51.9213, 0.37 ) }
    dend_4 { pt3dadd( 3.76684, 84.8134, -52.1114, 1.33 ) }
    dend_4 { pt3dadd( 3.77846, 85.106, -52.2475, 1.84 ) }
    dend_4 { pt3dadd( 3.8007, 85.4269, -52.3873, 1.84 ) }
    dend_4 { pt3dadd( 3.86629, 86.2321, -52.7155, 0.29 ) }
    dend_4 { pt3dadd( 3.89401, 86.7324, -52.909, 0.44 ) }
    dend_4 { pt3dadd( 3.90196, 86.9666, -52.9956, 0.59 ) }
    dend_4 { pt3dadd( 3.90439, 87.3419, -53.1224, 0.59 ) }
    dend_4 { pt3dadd( 3.8889, 88.0427, -53.3679, 0.22 ) }
    dend_4 { pt3dadd( 3.86488, 88.5443, -53.5588, 1.33 ) }
    dend_4 { pt3dadd( 3.84305, 88.7726, -53.6555, 1.77 ) }
    dend_4 { pt3dadd( 3.81516, 89.0027, -53.7516, 1.92 ) }
    dend_4 { pt3dadd( 3.78274, 89.2315, -53.8529, 1.4 ) }
    dend_4 { pt3dadd( 3.59961, 90.3074, -54.4463, 0.22 ) }
    dend_4 { pt3dadd( 3.51721, 90.7533, -54.7257, 0.22 ) }
    dend_4 { pt3dadd( 3.39873, 91.4153, -55.1694, 1.11 ) }
    dend_4 { pt3dadd( 3.34745, 91.7388, -55.3921, 1.55 ) }
    dend_4 { pt3dadd( 3.30047, 92.0747, -55.6229, 1.4 ) }
    dend_4 { pt3dadd( 3.1396, 93.3278, -56.4851, 0.29 ) }
    dend_4 { pt3dadd( 3.09798, 93.659, -56.6989, 0.37 ) }
    dend_4 { pt3dadd( 3.06444, 93.9544, -56.8908, 0.44 ) }
    dend_4 { pt3dadd( 3.0319, 94.31, -57.1202, 0.44 ) }
    dend_4 { pt3dadd( 3.00474, 94.6454, -57.3247, 0.22 ) }
    dend_4 { pt3dadd( 2.99257, 94.9527, -57.4959, 0.22 ) }
    dend_4 { pt3dadd( 2.99215, 95.632, -57.8371, 1.33 ) }
    dend_4 { pt3dadd( 2.99424, 96.0003, -58.0805, 1.55 ) }
    dend_4 { pt3dadd( 2.99349, 96.2038, -58.2424, 1.55 ) }
    dend_4 { pt3dadd( 2.98136, 97.0831, -59.0798, 0.22 ) }
    dend_4 { pt3dadd( 2.96696, 97.6062, -59.6921, 0.22 ) }
    dend_4 { pt3dadd( 2.95621, 97.8823, -60.0538, 0.66 ) }
    dend_4 { pt3dadd( 2.90406, 98.771, -61.3946, 0.44 ) }
    dend_4 { pt3dadd( 2.88448, 99.2175, -62.1916, 1.4 ) }
    dend_4 { pt3dadd( 2.86303, 99.5927, -62.9094, 1.77 ) }
    dend_4 { pt3dadd( 2.81152, 100.233, -64.2612, 1.33 ) }
    dend_4 { pt3dadd( 2.78221, 100.492, -64.8383, 1.62 ) }
    dend_4 { pt3dadd( 2.69985, 101.192, -66.4446, 0.74 ) }
    dend_4 { pt3dadd( 2.58827, 102.417, -69.2214, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 108.995, 52.6832, -34.0625, 0.44 ) }
    dend_11 { pt3dadd( 110.414, 52.8964, -33.8144, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( 111.293, 53.0436, -33.6935, 0.37 ) }
    dend_11 { pt3dadd( 112.382, 53.2349, -33.5602, 0.29 ) }
    dend_11 { pt3dadd( 113.066, 53.3386, -33.4991, 0.59 ) }
    dend_11 { pt3dadd( 114.434, 53.4694, -33.4406, 0.29 ) }
    dend_11 { pt3dadd( 115.377, 53.5587, -33.4145, 0.96 ) }
    dend_11 { pt3dadd( 116.073, 53.6539, -33.429, 1.25 ) }
    dend_11 { pt3dadd( 116.65, 53.7457, -33.4491, 1.33 ) }
    dend_11 { pt3dadd( 118.064, 53.9811, -33.5, 0.22 ) }
    dend_11 { pt3dadd( 119.824, 54.2776, -33.5927, 0.22 ) }
    dend_11 { pt3dadd( 120.747, 54.4369, -33.6425, 0.37 ) }
    dend_11 { pt3dadd( 122.02, 54.6726, -33.7045, 0.22 ) }
    dend_11 { pt3dadd( 123.036, 54.9024, -33.733, 1.18 ) }
    dend_11 { pt3dadd( 123.726, 55.0896, -33.7423, 1.4 ) }
    dend_11 { pt3dadd( 124.318, 55.2899, -33.7257, 1.4 ) }
    dend_11 { pt3dadd( 125.121, 55.6045, -33.6645, 0.44 ) }
    dend_11 { pt3dadd( 126.099, 55.9695, -33.5512, 0.22 ) }
    dend_11 { pt3dadd( 126.656, 56.1694, -33.4783, 0.52 ) }
    dend_11 { pt3dadd( 127.098, 56.3244, -33.4292, 0.52 ) }
    dend_11 { pt3dadd( 128.497, 56.8472, -33.2764, 0.22 ) }
    dend_11 { pt3dadd( 129.362, 57.1691, -33.1771, 0.81 ) }
    dend_11 { pt3dadd( 130.247, 57.4567, -33.0991, 1.25 ) }
    dend_11 { pt3dadd( 131.304, 57.759, -33.0056, 1.25 ) }
    dend_11 { pt3dadd( 132.939, 58.171, -32.8323, 0.22 ) }
    dend_11 { pt3dadd( 133.716, 58.3503, -32.7502, 0.59 ) }
    dend_11 { pt3dadd( 134.329, 58.477, -32.6835, 0.74 ) }
    dend_11 { pt3dadd( 136.357, 58.7909, -32.4371, 0.22 ) }
    dend_11 { pt3dadd( 137.38, 58.9114, -32.2947, 0.22 ) }
    dend_11 { pt3dadd( 138.858, 59.0517, -32.0221, 1.25 ) }
    dend_11 { pt3dadd( 139.653, 59.1077, -31.862, 1.62 ) }
    dend_11 { pt3dadd( 139.942, 59.1274, -31.8096, 1.62 ) }
    dend_11 { pt3dadd( 142.562, 59.3219, -31.3345, 0.22 ) }
    dend_11 { pt3dadd( 143.292, 59.3719, -31.195, 0.22 ) }
    dend_11 { pt3dadd( 144.496, 59.4289, -30.9848, 1.03 ) }
    dend_11 { pt3dadd( 145.302, 59.4424, -30.8482, 1.25 ) }
    dend_11 { pt3dadd( 147.14, 59.4419, -30.5238, 0.22 ) }
    dend_11 { pt3dadd( 147.903, 59.4289, -30.4076, 0.22 ) }
    dend_11 { pt3dadd( 148.495, 59.4105, -30.3389, 0.66 ) }
    dend_11 { pt3dadd( 150.016, 59.3059, -30.2155, 0.22 ) }
    dend_11 { pt3dadd( 151.051, 59.1928, -30.1853, 0.22 ) }
    dend_11 { pt3dadd( 151.909, 59.075, -30.182, 0.74 ) }
    dend_11 { pt3dadd( 152.708, 58.9697, -30.2018, 0.96 ) }
    dend_11 { pt3dadd( 154.117, 58.8274, -30.2662, 0.22 ) }
    dend_11 { pt3dadd( 155.756, 58.7209, -30.3401, 1.33 ) }
    dend_11 { pt3dadd( 156.627, 58.6938, -30.3687, 1.77 ) }
    dend_11 { pt3dadd( 157.09, 58.6972, -30.3773, 1.77 ) }
    dend_11 { pt3dadd( 159.758, 58.7785, -30.3606, 0.22 ) }
    dend_11 { pt3dadd( 160.318, 58.8057, -30.3415, 0.22 ) }
    dend_11 { pt3dadd( 160.978, 58.8517, -30.3141, 0.74 ) }
    dend_11 { pt3dadd( 161.556, 58.9073, -30.284, 0.74 ) }
    dend_11 { pt3dadd( 163.052, 59.0609, -30.1943, 0.22 ) }
    dend_11 { pt3dadd( 163.808, 59.1417, -30.1603, 1.03 ) }
    dend_11 { pt3dadd( 164.37, 59.2099, -30.1479, 1.33 ) }
    dend_11 { pt3dadd( 165.013, 59.3127, -30.1322, 1.47 ) }
    dend_11 { pt3dadd( 166.958, 59.688, -30.0571, 0.15 ) }
    dend_11 { pt3dadd( 167.511, 59.8177, -30.019, 0.29 ) }
    dend_11 { pt3dadd( 168.022, 59.9746, -29.9493, 0.29 ) }
    dend_11 { pt3dadd( 169.102, 60.4029, -29.665, 0.15 ) }
    dend_11 { pt3dadd( 169.914, 60.8218, -29.3443, 0.66 ) }
    dend_11 { pt3dadd( 170.209, 61.0087, -29.1893, 0.74 ) }
    dend_11 { pt3dadd( 170.413, 61.1707, -29.0478, 0.74 ) }
    dend_11 { pt3dadd( 171.393, 61.9564, -28.2973, 0.15 ) }
    dend_11 { pt3dadd( 172.399, 62.7636, -27.4931, 0.15 ) }
    dend_11 { pt3dadd( 173.098, 63.3175, -26.9235, 1.03 ) }
    dend_11 { pt3dadd( 173.437, 63.5765, -26.6591, 1.18 ) }
    dend_11 { pt3dadd( 173.69, 63.7557, -26.4722, 1.18 ) }
    dend_11 { pt3dadd( 175.113, 64.6872, -25.4728, 0.15 ) }
    dend_11 { pt3dadd( 175.679, 65.028, -25.113, 0.81 ) }
    dend_11 { pt3dadd( 176.078, 65.2551, -24.8949, 1.11 ) }
    dend_11 { pt3dadd( 176.434, 65.4536, -24.7113, 1.11 ) }
    dend_11 { pt3dadd( 179.041, 66.8867, -23.4967, 0.22 ) }
    dend_11 { pt3dadd( 179.885, 67.3616, -23.1007, 0.88 ) }
    dend_11 { pt3dadd( 180.396, 67.6656, -22.8574, 0.74 ) }
    dend_11 { pt3dadd( 181.671, 68.4553, -22.1915, 0.22 ) }
    dend_11 { pt3dadd( 182.15, 68.7628, -21.92, 0.59 ) }
    dend_11 { pt3dadd( 182.682, 69.1323, -21.5937, 0.74 ) }
    dend_11 { pt3dadd( 183.953, 70.151, -20.7231, 0.22 ) }
    dend_11 { pt3dadd( 184.519, 70.6127, -20.3002, 1.47 ) }
    dend_11 { pt3dadd( 185.079, 71.066, -19.8381, 1.77 ) }
    dend_11 { pt3dadd( 185.453, 71.3517, -19.5152, 1.77 ) }
    dend_11 { pt3dadd( 186.934, 72.4872, -18.178, 0.22 ) }
    dend_11 { pt3dadd( 187.589, 72.9912, -17.5781, 0.66 ) }
    dend_11 { pt3dadd( 188.041, 73.3248, -17.1937, 0.88 ) }
    dend_11 { pt3dadd( 188.949, 74.0057, -16.3669, 0.22 ) }
    dend_11 { pt3dadd( 189.387, 74.3461, -15.9603, 0.44 ) }
    dend_11 { pt3dadd( 190.252, 75.0646, -15.096, 0.22 ) }
    dend_11 { pt3dadd( 190.372, 75.1728, -14.9615, 0.81 ) }
    dend_11 { pt3dadd( 190.602, 75.4077, -14.7103, 0.81 ) }
    dend_11 { pt3dadd( 191.705, 76.7208, -13.6034, 0.22 ) }
    dend_11 { pt3dadd( 192.256, 77.3951, -13.1124, 1.03 ) }
    dend_11 { pt3dadd( 192.447, 77.6238, -12.9582, 1.33 ) }
    dend_11 { pt3dadd( 192.758, 77.972, -12.7344, 1.33 ) }
    dend_11 { pt3dadd( 194.473, 79.6274, -11.7368, 0.22 ) }
    dend_11 { pt3dadd( 195.377, 80.3531, -11.3185, 0.22 ) }
    dend_11 { pt3dadd( 196.427, 81.0243, -10.9333, 1.03 ) }
    dend_11 { pt3dadd( 196.906, 81.2679, -10.7786, 1.33 ) }
    dend_11 { pt3dadd( 197.327, 81.4326, -10.6495, 1.33 ) }
    dend_11 { pt3dadd( 199.24, 81.986, -10.0638, 0.22 ) }
    dend_11 { pt3dadd( 200.56, 82.2361, -9.65417, 0.22 ) }
    dend_11 { pt3dadd( 201.795, 82.4269, -9.23346, 0.74 ) }
    dend_11 { pt3dadd( 202.482, 82.5392, -8.95895, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 203.909, 82.8008, -8.26774, 0.22 ) }
    dend_11 { pt3dadd( 204.562, 82.9354, -7.88031, 0.22 ) }
    dend_11 { pt3dadd( 204.861, 83.0104, -7.64536, 0.66 ) }
    dend_11 { pt3dadd( 205.111, 83.0624, -7.44272, 0.66 ) }
    dend_11 { pt3dadd( 206.169, 83.2389, -6.61285, 0.22 ) }
    dend_11 { pt3dadd( 206.849, 83.3328, -6.10395, 0.88 ) }
    dend_11 { pt3dadd( 207.026, 83.3517, -5.98123, 1.18 ) }
    dend_11 { pt3dadd( 207.238, 83.3681, -5.84411, 1.18 ) }
    dend_11 { pt3dadd( 209.166, 83.4825, -4.59977, 0.22 ) }
    dend_11 { pt3dadd( 210.015, 83.5267, -4.05557, 0.44 ) }
    dend_11 { pt3dadd( 210.351, 83.5461, -3.84144, 0.29 ) }
    dend_11 { pt3dadd( 210.968, 83.5987, -3.54691, 0.29 ) }
    dend_11 { pt3dadd( 212.068, 83.7512, -3.15474, 0.96 ) }
    dend_11 { pt3dadd( 212.645, 83.8483, -3.02015, 1.18 ) }
    dend_11 { pt3dadd( 213.13, 83.9437, -2.94502, 1.18 ) }
    dend_11 { pt3dadd( 213.561, 84.0284, -2.88388, 0.88 ) }
    dend_11 { pt3dadd( 216.612, 84.6254, -2.57361, 0.22 ) }
    dend_11 { pt3dadd( 217.198, 84.7415, -2.54173, 0.81 ) }
    dend_11 { pt3dadd( 217.75, 84.851, -2.52893, 0.81 ) }
    dend_11 { pt3dadd( 219.444, 85.1267, -2.43838, 0.22 ) }
    dend_11 { pt3dadd( 220.208, 85.2382, -2.38714, 0.22 ) }
    dend_11 { pt3dadd( 221.477, 85.4062, -2.27179, 1.03 ) }
    dend_11 { pt3dadd( 222.21, 85.5029, -2.17924, 1.11 ) }
    dend_11 { pt3dadd( 224.257, 85.7644, -2.00487, 0.22 ) }
    dend_11 { pt3dadd( 225.573, 85.9575, -1.94329, 0.22 ) }
    dend_11 { pt3dadd( 226.949, 86.1591, -1.96014, 0.96 ) }
    dend_11 { pt3dadd( 227.689, 86.2622, -1.98535, 1.18 ) }
    dend_11 { pt3dadd( 230.096, 86.6081, -2.12171, 0.22 ) }
    dend_11 { pt3dadd( 231.251, 86.7872, -2.22624, 0.22 ) }
    dend_11 { pt3dadd( 232.352, 86.9758, -2.37162, 1.11 ) }
    dend_11 { pt3dadd( 233.161, 87.1226, -2.53019, 1.33 ) }
    dend_11 { pt3dadd( 233.381, 87.1554, -2.58178, 1.47 ) }
    dend_11 { pt3dadd( 234.463, 87.3015, -2.89113, 1.18 ) }
    dend_11 { pt3dadd( 236.131, 87.5109, -3.48285, 0.15 ) }
    dend_11 { pt3dadd( 236.869, 87.5911, -3.76168, 0.59 ) }
    dend_11 { pt3dadd( 238.026, 87.6908, -4.20865, 0.81 ) }
    dend_11 { pt3dadd( 239.608, 87.8289, -4.81387, 0.22 ) }
    dend_11 { pt3dadd( 240.598, 87.9304, -5.21722, 1.03 ) }
    dend_11 { pt3dadd( 241.414, 88.0282, -5.58067, 1.25 ) }
    dend_11 { pt3dadd( 243.463, 88.3867, -6.71203, 0.22 ) }
    dend_11 { pt3dadd( 244.346, 88.5885, -7.23545, 0.37 ) }
    dend_11 { pt3dadd( 245.151, 88.8136, -7.74228, 0.15 ) }
    dend_11 { pt3dadd( 246.237, 89.1582, -8.47599, 0.59 ) }
    dend_11 { pt3dadd( 246.921, 89.352, -8.9938, 0.59 ) }
    dend_11 { pt3dadd( 248.954, 89.8307, -10.5944, 0.22 ) }
    dend_11 { pt3dadd( 249.612, 89.969, -11.1037, 0.22 ) }
    dend_11 { pt3dadd( 251.294, 90.2595, -12.3373, 1.25 ) }
    dend_11 { pt3dadd( 251.711, 90.3107, -12.6174, 1.92 ) }
    dend_11 { pt3dadd( 255.941, 90.6485, -15.3883, 0.52 ) }
    dend_11 { pt3dadd( 257.729, 90.7409, -16.5698, 0.29 ) }
    dend_11 { pt3dadd( 258.668, 90.782, -17.2032, 0.96 ) }
    dend_11 { pt3dadd( 259.668, 90.8459, -17.9024, 1.18 ) }
    dend_11 { pt3dadd( 261.362, 91.0227, -19.0838, 0.81 ) }
    dend_11 { pt3dadd( 264.211, 91.4477, -21.1215, 1.69 ) }
    dend_11 { pt3dadd( 265.494, 91.75, -22.0667, 1.92 ) }
    dend_11 { pt3dadd( 268.202, 92.5975, -24.197, 0.22 ) }
    dend_11 { pt3dadd( 268.875, 92.8676, -24.7694, 0.22 ) }
    dend_11 { pt3dadd( 269.692, 93.2935, -25.5103, 1.33 ) }
    dend_11 { pt3dadd( 270.823, 94.0544, -26.6199, 1.33 ) }
    dend_11 { pt3dadd( 272.364, 95.337, -28.2932, 0.22 ) }
    dend_11 { pt3dadd( 272.949, 95.8987, -29.0493, 0.22 ) }
    dend_11 { pt3dadd( 273.698, 96.6305, -30.2448, 0.22 ) }
    dend_11 { pt3dadd( 274.468, 97.2797, -31.5891, 1.4 ) }
    dend_11 { pt3dadd( 274.804, 97.5201, -32.2112, 1.62 ) }
    dend_11 { pt3dadd( 276.38, 98.4001, -35.1033, 0.22 ) }
    dend_11 { pt3dadd( 277.197, 98.7883, -36.5918, 0.96 ) }
    dend_11 { pt3dadd( 278.725, 99.4105, -39.2576, 1.55 ) }
    dend_11 { pt3dadd( 280.123, 99.906, -41.5433, 2.21 ) }
    dend_11 { pt3dadd( 281.169, 100.24, -43.1602, 2.43 ) }
    dend_11 { pt3dadd( 284.07, 101.111, -47.3039, 0.81 ) }
    dend_11 { pt3dadd( 284.785, 101.32, -48.241, 0.29 ) }
    dend_11 { pt3dadd( 285.917, 101.662, -49.6128, 0.74 ) }
    dend_11 { pt3dadd( 288.162, 102.403, -52.0605, 0.81 ) }
    dend_11 { pt3dadd( 288.749, 102.6, -52.6262, 0.96 ) }
    dend_11 { pt3dadd( 290.646, 103.198, -54.2254, 0.22 ) }
    dend_11 { pt3dadd( 291.295, 103.381, -54.6928, 0.52 ) }
    dend_11 { pt3dadd( 291.774, 103.505, -55.0112, 0.59 ) }
    dend_11 { pt3dadd( 293.015, 103.819, -55.7516, 0.22 ) }
    dend_11 { pt3dadd( 294.667, 104.195, -56.6866, 1.47 ) }
    dend_11 { pt3dadd( 295.528, 104.402, -57.2146, 1.69 ) }
    dend_11 { pt3dadd( 297.57, 104.92, -58.6335, 0.37 ) }
    dend_11 { pt3dadd( 298.241, 105.103, -59.1645, 0.88 ) }
    dend_11 { pt3dadd( 298.922, 105.302, -59.7771, 1.11 ) }
    dend_11 { pt3dadd( 301.103, 105.952, -62.0631, 0.22 ) }
    dend_11 { pt3dadd( 301.811, 106.148, -62.8324, 0.37 ) }
    dend_11 { pt3dadd( 303.411, 106.605, -64.6371, 0.22 ) }
    dend_11 { pt3dadd( 304.877, 106.996, -66.382, 1.47 ) }
    dend_11 { pt3dadd( 305.865, 107.245, -67.5933, 1.69 ) }
    dend_11 { pt3dadd( 307.553, 107.701, -69.7042, 1.77 ) }
    dend_11 { pt3dadd( 308.523, 107.944, -70.9326, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 108.995, 52.6832, -34.0625, 0.29 ) }
    dend_10 { pt3dadd( 110.168, 53.6873, -34.0703, 0.29 ) }
    dend_10 { pt3dadd( 110.742, 54.1722, -34.0502, 0.29 ) }
    dend_10 { pt3dadd( 111.404, 54.729, -34.0194, 0.81 ) }
    dend_10 { pt3dadd( 111.838, 55.0874, -33.9878, 0.96 ) }
    dend_10 { pt3dadd( 112.621, 55.7169, -33.9122, 0.22 ) }
    dend_10 { pt3dadd( 113.133, 56.1189, -33.8525, 0.44 ) }
    dend_10 { pt3dadd( 113.388, 56.302, -33.8139, 0.44 ) }
    dend_10 { pt3dadd( 113.934, 56.6593, -33.6914, 0.22 ) }
    dend_10 { pt3dadd( 114.489, 56.9649, -33.5367, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_10 { pt3dadd( 114.751, 57.0962, -33.4418, 1.33 ) }
    dend_10 { pt3dadd( 114.97, 57.1928, -33.3482, 1.55 ) }
    dend_10 { pt3dadd( 115.462, 57.3921, -33.0861, 1.25 ) }
    dend_10 { pt3dadd( 116.215, 57.6818, -32.609, 0.15 ) }
    dend_10 { pt3dadd( 116.641, 57.8488, -32.2841, 0.74 ) }
    dend_10 { pt3dadd( 117.17, 58.0812, -31.8115, 1.11 ) }
    dend_10 { pt3dadd( 117.48, 58.2217, -31.561, 1.18 ) }
    dend_10 { pt3dadd( 117.886, 58.407, -31.2771, 0.88 ) }
    dend_10 { pt3dadd( 118.617, 58.7558, -30.8086, 0.15 ) }
    dend_10 { pt3dadd( 119.061, 58.9621, -30.5805, 0.37 ) }
    dend_10 { pt3dadd( 119.413, 59.1158, -30.4461, 0.52 ) }
    dend_10 { pt3dadd( 120.79, 59.6493, -30.1147, 0.22 ) }
    dend_10 { pt3dadd( 121.456, 59.8919, -29.9991, 1.25 ) }
    dend_10 { pt3dadd( 121.901, 60.0409, -29.9436, 1.77 ) }
    dend_10 { pt3dadd( 122.275, 60.1544, -29.9111, 1.77 ) }
    dend_10 { pt3dadd( 122.607, 60.2527, -29.8858, 1.55 ) }
    dend_10 { pt3dadd( 123.809, 60.6185, -29.7728, 0.22 ) }
    dend_10 { pt3dadd( 124.24, 60.7648, -29.7064, 0.37 ) }
    dend_10 { pt3dadd( 124.663, 60.9213, -29.6582, 0.37 ) }
    dend_10 { pt3dadd( 125.457, 61.2365, -29.5836, 0.15 ) }
    dend_10 { pt3dadd( 126.015, 61.5057, -29.5348, 0.96 ) }
    dend_10 { pt3dadd( 126.236, 61.6323, -29.5212, 1.11 ) }
    dend_10 { pt3dadd( 126.422, 61.759, -29.516, 1.11 ) }
    dend_10 { pt3dadd( 127.533, 62.6039, -29.4889, 0.22 ) }
    dend_10 { pt3dadd( 128.02, 62.9993, -29.4822, 0.22 ) }
    dend_10 { pt3dadd( 128.622, 63.5151, -29.4716, 0.22 ) }
    dend_10 { pt3dadd( 129.022, 63.8606, -29.4748, 0.22 ) }
    dend_10 { pt3dadd( 129.606, 64.394, -29.4864, 1.18 ) }
    dend_10 { pt3dadd( 129.852, 64.6283, -29.4902, 1.84 ) }
    dend_10 { pt3dadd( 130.12, 64.9035, -29.501, 1.84 ) }
    dend_10 { pt3dadd( 130.28, 65.0678, -29.5115, 1.84 ) }
    dend_10 { pt3dadd( 131.317, 66.0793, -29.6075, 0.22 ) }
    dend_10 { pt3dadd( 131.84, 66.6168, -29.675, 0.81 ) }
    dend_10 { pt3dadd( 132.036, 66.8372, -29.7094, 1.11 ) }
    dend_10 { pt3dadd( 132.34, 67.2081, -29.7669, 1.11 ) }
    dend_10 { pt3dadd( 132.492, 67.4067, -29.7958, 0.74 ) }
    dend_10 { pt3dadd( 132.947, 68.0102, -29.8718, 0.29 ) }
    dend_10 { pt3dadd( 133.211, 68.3737, -29.9033, 0.44 ) }
    dend_10 { pt3dadd( 133.467, 68.699, -29.9234, 0.44 ) }
    dend_10 { pt3dadd( 133.765, 69.0608, -29.9273, 0.22 ) }
    dend_10 { pt3dadd( 133.998, 69.3403, -29.9117, 0.22 ) }
    dend_10 { pt3dadd( 134.574, 70.0268, -29.8529, 1.18 ) }
    dend_10 { pt3dadd( 134.765, 70.2524, -29.8247, 1.4 ) }
    dend_10 { pt3dadd( 134.975, 70.4975, -29.8005, 1.4 ) }
    dend_10 { pt3dadd( 135.283, 70.8505, -29.7699, 0.88 ) }
    dend_10 { pt3dadd( 135.519, 71.1442, -29.7293, 0.37 ) }
    dend_10 { pt3dadd( 135.922, 71.6953, -29.6277, 0.22 ) }
    dend_10 { pt3dadd( 136.174, 72.0809, -29.5341, 0.29 ) }
    dend_10 { pt3dadd( 136.409, 72.4606, -29.4299, 0.29 ) }
    dend_10 { pt3dadd( 136.881, 73.2467, -29.1962, 0.22 ) }
    dend_10 { pt3dadd( 137.283, 73.9283, -28.9903, 0.22 ) }
    dend_10 { pt3dadd( 137.626, 74.5394, -28.8136, 1.33 ) }
    dend_10 { pt3dadd( 137.843, 74.939, -28.7008, 1.55 ) }
    dend_10 { pt3dadd( 138.513, 76.2205, -28.3622, 0.22 ) }
    dend_10 { pt3dadd( 138.79, 76.7371, -28.2566, 0.22 ) }
    dend_10 { pt3dadd( 139.169, 77.4518, -28.1553, 0.22 ) }
    dend_10 { pt3dadd( 139.643, 78.3199, -28.086, 1.55 ) }
    dend_10 { pt3dadd( 139.791, 78.5816, -28.0743, 1.84 ) }
    dend_10 { pt3dadd( 139.95, 78.8585, -28.0721, 1.84 ) }
    dend_10 { pt3dadd( 140.665, 80.0674, -28.1041, 0.22 ) }
    dend_10 { pt3dadd( 140.941, 80.5063, -28.1335, 0.44 ) }
    dend_10 { pt3dadd( 141.25, 80.9401, -28.1646, 0.59 ) }
    dend_10 { pt3dadd( 141.891, 81.7792, -28.2218, 0.29 ) }
    dend_10 { pt3dadd( 142.165, 82.1406, -28.2446, 1.18 ) }
    dend_10 { pt3dadd( 142.43, 82.4999, -28.2554, 1.4 ) }
    dend_10 { pt3dadd( 142.662, 82.818, -28.2492, 1.4 ) }
    dend_10 { pt3dadd( 143.397, 83.8121, -28.1905, 0.22 ) }
    dend_10 { pt3dadd( 143.658, 84.1632, -28.1418, 0.22 ) }
    dend_10 { pt3dadd( 143.862, 84.4445, -28.0752, 0.44 ) }
    dend_10 { pt3dadd( 144.112, 84.8298, -27.9612, 0.22 ) }
    dend_10 { pt3dadd( 144.22, 85.029, -27.8966, 0.22 ) }
    dend_10 { pt3dadd( 144.475, 85.5609, -27.7184, 1.11 ) }
    dend_10 { pt3dadd( 144.632, 85.9177, -27.6052, 1.33 ) }
    dend_10 { pt3dadd( 144.656, 85.9663, -27.5894, 1.55 ) }
    dend_10 { pt3dadd( 145.16, 86.7822, -27.3318, 0.22 ) }
    dend_10 { pt3dadd( 145.343, 87.073, -27.2306, 0.22 ) }
    dend_10 { pt3dadd( 145.535, 87.3808, -27.1057, 0.44 ) }
    dend_10 { pt3dadd( 145.679, 87.6225, -26.9915, 0.44 ) }
    dend_10 { pt3dadd( 146.035, 88.2496, -26.6917, 0.22 ) }
    dend_10 { pt3dadd( 146.323, 88.7645, -26.4417, 0.22 ) }
    dend_10 { pt3dadd( 146.709, 89.4656, -26.0974, 1.18 ) }
    dend_10 { pt3dadd( 146.88, 89.8071, -25.9515, 1.33 ) }
    dend_10 { pt3dadd( 147.049, 90.2256, -25.7666, 1.11 ) }
    dend_10 { pt3dadd( 147.287, 90.968, -25.4455, 0.22 ) }
    dend_10 { pt3dadd( 147.343, 91.1869, -25.3548, 0.44 ) }
    dend_10 { pt3dadd( 147.437, 91.5636, -25.1926, 0.44 ) }
    dend_10 { pt3dadd( 147.595, 92.0571, -24.9713, 0.22 ) }
    dend_10 { pt3dadd( 147.993, 92.9848, -24.493, 0.22 ) }
    dend_10 { pt3dadd( 148.203, 93.3552, -24.2716, 1.11 ) }
    dend_10 { pt3dadd( 148.408, 93.6738, -24.0637, 1.55 ) }
    dend_10 { pt3dadd( 148.659, 94.0378, -23.8377, 1.62 ) }
    dend_10 { pt3dadd( 148.884, 94.3365, -23.6508, 1.25 ) }
    dend_10 { pt3dadd( 149.524, 95.113, -23.16, 0.22 ) }
    dend_10 { pt3dadd( 149.999, 95.6494, -22.8553, 0.22 ) }
    dend_10 { pt3dadd( 150.299, 95.9904, -22.6646, 0.22 ) }
    dend_10 { pt3dadd( 150.762, 96.5387, -22.3797, 0.44 ) }
    dend_10 { pt3dadd( 151.034, 96.8818, -22.2228, 0.44 ) }
    dend_10 { pt3dadd( 151.357, 97.3043, -22.0401, 0.22 ) }
    dend_10 { pt3dadd( 151.626, 97.6579, -21.8857, 0.22 ) }
    dend_10 { pt3dadd( 151.93, 98.0277, -21.7137, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_10 { pt3dadd( 152.096, 98.2037, -21.6312, 0.59 ) }
    dend_10 { pt3dadd( 152.468, 98.5813, -21.4729, 0.22 ) }
    dend_10 { pt3dadd( 152.935, 99.0552, -21.3031, 0.74 ) }
    dend_10 { pt3dadd( 153.147, 99.2613, -21.2307, 0.88 ) }
    dend_10 { pt3dadd( 153.502, 99.5774, -21.1144, 0.52 ) }
    dend_10 { pt3dadd( 154.12, 100.081, -20.923, 0.22 ) }
    dend_10 { pt3dadd( 154.68, 100.522, -20.795, 0.22 ) }
    dend_10 { pt3dadd( 155.317, 101.025, -20.6923, 1.11 ) }
    dend_10 { pt3dadd( 155.658, 101.297, -20.6651, 1.47 ) }
    dend_10 { pt3dadd( 156.013, 101.59, -20.6655, 1.55 ) }
    dend_10 { pt3dadd( 157.017, 102.448, -20.7751, 0.22 ) }
    dend_10 { pt3dadd( 157.849, 103.186, -20.9373, 0.96 ) }
    dend_10 { pt3dadd( 158.095, 103.408, -20.9994, 1.4 ) }
    dend_10 { pt3dadd( 158.496, 103.784, -21.1304, 1.25 ) }
    dend_10 { pt3dadd( 158.798, 104.081, -21.2389, 0.88 ) }
    dend_10 { pt3dadd( 159.516, 104.832, -21.5037, 0.22 ) }
    dend_10 { pt3dadd( 159.883, 105.238, -21.654, 0.37 ) }
    dend_10 { pt3dadd( 160.241, 105.651, -21.7869, 0.22 ) }
    dend_10 { pt3dadd( 160.801, 106.277, -21.9903, 0.52 ) }
    dend_10 { pt3dadd( 161.098, 106.621, -22.0981, 0.66 ) }
    dend_10 { pt3dadd( 161.648, 107.271, -22.3237, 0.22 ) }
    dend_10 { pt3dadd( 162.028, 107.743, -22.504, 0.66 ) }
    dend_10 { pt3dadd( 162.133, 107.883, -22.563, 0.66 ) }
    dend_10 { pt3dadd( 162.751, 108.787, -22.9666, 0.22 ) }
    dend_10 { pt3dadd( 162.998, 109.216, -23.1403, 0.59 ) }
    dend_10 { pt3dadd( 163.486, 110.247, -23.5288, 0.22 ) }
    dend_10 { pt3dadd( 163.625, 110.617, -23.6515, 0.22 ) }
    dend_10 { pt3dadd( 163.825, 111.249, -23.8386, 1.47 ) }
    dend_10 { pt3dadd( 163.897, 111.55, -23.925, 1.69 ) }
    dend_10 { pt3dadd( 164.076, 112.824, -24.2618, 0.22 ) }
    dend_10 { pt3dadd( 164.163, 113.666, -24.486, 0.22 ) }
    dend_10 { pt3dadd( 164.196, 114.285, -24.6461, 0.74 ) }
    dend_10 { pt3dadd( 164.211, 114.628, -24.7364, 0.88 ) }
    dend_10 { pt3dadd( 164.252, 115.718, -25.0338, 0.22 ) }
    dend_10 { pt3dadd( 164.286, 116.611, -25.296, 1.25 ) }
    dend_10 { pt3dadd( 164.307, 116.993, -25.422, 1.25 ) }
    dend_10 { pt3dadd( 164.338, 117.377, -25.5518, 0.74 ) }
    dend_10 { pt3dadd( 164.406, 118.076, -25.7865, 0.22 ) }
    dend_10 { pt3dadd( 164.5, 118.887, -26.0342, 1.4 ) }
    dend_10 { pt3dadd( 164.541, 119.189, -26.1197, 1.62 ) }
    dend_10 { pt3dadd( 164.68, 120.188, -26.3889, 0.22 ) }
    dend_10 { pt3dadd( 164.766, 120.805, -26.5334, 0.59 ) }
    dend_10 { pt3dadd( 164.793, 121.039, -26.5693, 0.59 ) }
    dend_10 { pt3dadd( 164.875, 122.048, -26.6592, 0.15 ) }
    dend_10 { pt3dadd( 164.905, 122.63, -26.6697, 0.15 ) }
    dend_10 { pt3dadd( 164.916, 123.158, -26.6517, 0.15 ) }
    dend_10 { pt3dadd( 164.917, 123.839, -26.614, 0.15 ) }
    dend_10 { pt3dadd( 164.923, 125.213, -26.5317, 1.18 ) }
    dend_10 { pt3dadd( 164.926, 125.453, -26.5329, 1.47 ) }
    dend_10 { pt3dadd( 164.934, 125.814, -26.5699, 1.11 ) }
    dend_10 { pt3dadd( 164.96, 126.679, -26.7462, 0.22 ) }
    dend_10 { pt3dadd( 164.985, 127.307, -26.9383, 0.96 ) }
    dend_10 { pt3dadd( 165.01, 127.713, -27.1143, 0.96 ) }
    dend_10 { pt3dadd( 165.216, 128.745, -27.7329, 0.22 ) }
    dend_10 { pt3dadd( 165.425, 129.497, -28.2056, 0.22 ) }
    dend_10 { pt3dadd( 165.638, 130.135, -28.6164, 1.18 ) }
    dend_10 { pt3dadd( 165.723, 130.361, -28.7634, 1.4 ) }
    dend_10 { pt3dadd( 165.896, 130.796, -29.0256, 1.55 ) }
    dend_10 { pt3dadd( 166.655, 132.573, -30.0362, 0.22 ) }
    dend_10 { pt3dadd( 167.081, 133.48, -30.5145, 0.22 ) }
    dend_10 { pt3dadd( 167.396, 134.095, -30.8281, 0.81 ) }
    dend_10 { pt3dadd( 167.474, 134.238, -30.8997, 1.03 ) }
    dend_10 { pt3dadd( 167.951, 135.118, -31.3377, 0.22 ) }
    dend_10 { pt3dadd( 168.157, 135.51, -31.52, 0.66 ) }
    dend_10 { pt3dadd( 168.319, 135.843, -31.6719, 0.66 ) }
    dend_10 { pt3dadd( 168.618, 136.42, -31.9667, 0.15 ) }
    dend_10 { pt3dadd( 168.951, 137.103, -32.2942, 1.25 ) }
    dend_10 { pt3dadd( 169.104, 137.463, -32.4507, 1.4 ) }
    dend_10 { pt3dadd( 169.414, 138.277, -32.7757, 0.15 ) }
    dend_10 { pt3dadd( 169.583, 138.779, -32.9515, 0.37 ) }
    dend_10 { pt3dadd( 169.657, 139.018, -33.0232, 0.37 ) }
    dend_10 { pt3dadd( 170.042, 140.32, -33.3797, 0.22 ) }
    dend_10 { pt3dadd( 170.249, 141.029, -33.5538, 1.03 ) }
    dend_10 { pt3dadd( 170.338, 141.342, -33.6226, 1.18 ) }
    dend_10 { pt3dadd( 170.385, 141.515, -33.6589, 1.18 ) }
    dend_10 { pt3dadd( 170.695, 142.696, -33.8813, 0.22 ) }
    dend_10 { pt3dadd( 170.831, 143.181, -33.9742, 0.52 ) }
    dend_10 { pt3dadd( 170.899, 143.408, -34.0149, 0.52 ) }
    dend_10 { pt3dadd( 171.188, 144.361, -34.1583, 0.22 ) }
    dend_10 { pt3dadd( 171.354, 144.92, -34.2241, 0.22 ) }
    dend_10 { pt3dadd( 171.549, 145.552, -34.2769, 1.11 ) }
    dend_10 { pt3dadd( 171.703, 146.047, -34.3031, 1.11 ) }
    dend_10 { pt3dadd( 172.111, 147.296, -34.3404, 0.22 ) }
    dend_10 { pt3dadd( 172.374, 148.033, -34.3541, 0.22 ) }
    dend_10 { pt3dadd( 172.626, 148.673, -34.3534, 1.03 ) }
    dend_10 { pt3dadd( 172.804, 149.1, -34.3545, 1.47 ) }
    dend_10 { pt3dadd( 172.943, 149.433, -34.3577, 1.11 ) }
    dend_10 { pt3dadd( 173.285, 150.341, -34.341, 0.15 ) }
    dend_10 { pt3dadd( 173.409, 150.668, -34.3354, 0.37 ) }
    dend_10 { pt3dadd( 173.695, 151.414, -34.3257, 0.22 ) }
    dend_10 { pt3dadd( 173.837, 151.808, -34.3134, 0.37 ) }
    dend_10 { pt3dadd( 173.917, 152.027, -34.3094, 0.37 ) }
    dend_10 { pt3dadd( 174.324, 153.06, -34.2885, 0.22 ) }
    dend_10 { pt3dadd( 174.579, 153.683, -34.2753, 0.81 ) }
    dend_10 { pt3dadd( 174.739, 154.055, -34.2651, 1.03 ) }
    dend_10 { pt3dadd( 175.175, 155.008, -34.2353, 0.15 ) }
    dend_10 { pt3dadd( 175.437, 155.548, -34.2157, 0.29 ) }
    dend_10 { pt3dadd( 175.684, 156.043, -34.2115, 0.22 ) }
    dend_10 { pt3dadd( 175.914, 156.499, -34.2266, 0.88 ) }
    dend_10 { pt3dadd( 176.031, 156.767, -34.2336, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 176.134, 157.045, -34.2456, 1.11 ) }
    dend_10 { pt3dadd( 176.437, 158.079, -34.3188, 0.22 ) }
    dend_10 { pt3dadd( 176.557, 158.651, -34.3619, 1.03 ) }
    dend_10 { pt3dadd( 176.602, 158.941, -34.3895, 1.25 ) }
    dend_10 { pt3dadd( 176.733, 159.923, -34.4936, 0.22 ) }
    dend_10 { pt3dadd( 176.818, 160.744, -34.587, 0.88 ) }
    dend_10 { pt3dadd( 176.886, 161.548, -34.6787, 0.29 ) }
    dend_10 { pt3dadd( 176.928, 162.198, -34.7545, 0.96 ) }
    dend_10 { pt3dadd( 176.946, 162.505, -34.7907, 0.96 ) }
    dend_10 { pt3dadd( 176.97, 163.074, -34.8604, 0.22 ) }
    dend_10 { pt3dadd( 176.978, 163.539, -34.9221, 0.37 ) }
    dend_10 { pt3dadd( 176.986, 164.194, -35.0159, 0.22 ) }
    dend_10 { pt3dadd( 176.99, 164.768, -35.1032, 0.52 ) }
    dend_10 { pt3dadd( 177.016, 165.917, -35.2773, 0.22 ) }
    dend_10 { pt3dadd( 177.03, 166.437, -35.367, 0.81 ) }
    dend_10 { pt3dadd( 177.049, 167.065, -35.4864, 0.22 ) }
    dend_10 { pt3dadd( 177.07, 167.536, -35.5801, 0.88 ) }
    dend_10 { pt3dadd( 177.104, 167.932, -35.6602, 1.03 ) }
    dend_10 { pt3dadd( 177.288, 169.423, -35.9579, 0.22 ) }
    dend_10 { pt3dadd( 177.373, 169.935, -36.0543, 0.22 ) }
    dend_10 { pt3dadd( 177.484, 170.503, -36.1524, 0.81 ) }
    dend_10 { pt3dadd( 177.535, 170.74, -36.1901, 1.03 ) }
    dend_10 { pt3dadd( 177.822, 171.939, -36.3857, 0.22 ) }
    dend_10 { pt3dadd( 177.885, 172.216, -36.4279, 0.29 ) }
    dend_10 { pt3dadd( 178.045, 172.984, -36.5355, 0.15 ) }
    dend_10 { pt3dadd( 178.124, 173.398, -36.5836, 0.29 ) }
    dend_10 { pt3dadd( 178.224, 173.972, -36.6537, 0.88 ) }
    dend_10 { pt3dadd( 178.295, 174.458, -36.726, 0.88 ) }
    dend_10 { pt3dadd( 178.384, 175.406, -36.8089, 0.22 ) }
    dend_10 { pt3dadd( 178.409, 175.815, -36.8292, 0.22 ) }
    dend_10 { pt3dadd( 178.422, 176.301, -36.8542, 0.88 ) }
    dend_10 { pt3dadd( 178.422, 176.625, -36.8573, 1.11 ) }
    dend_10 { pt3dadd( 178.42, 177.0, -36.8428, 1.11 ) }
    dend_10 { pt3dadd( 178.444, 178.24, -36.6926, 0.22 ) }
    dend_10 { pt3dadd( 178.502, 178.969, -36.5709, 0.22 ) }
    dend_10 { pt3dadd( 178.559, 179.499, -36.4439, 0.22 ) }
    dend_10 { pt3dadd( 178.658, 180.189, -36.2323, 0.81 ) }
    dend_10 { pt3dadd( 178.71, 180.468, -36.1334, 1.03 ) }
    dend_10 { pt3dadd( 178.735, 181.191, -35.3987, 0.22 ) }
    dend_10 { pt3dadd( 178.705, 181.442, -35.0133, 0.22 ) }
    dend_10 { pt3dadd( 178.65, 181.813, -34.2804, 1.11 ) }
    dend_10 { pt3dadd( 178.632, 181.954, -33.9631, 1.25 ) }
    dend_10 { pt3dadd( 178.618, 182.091, -33.6261, 1.25 ) }
    dend_10 { pt3dadd( 178.477, 183.968, -28.7477, 0.66 ) }
    dend_10 { pt3dadd( 178.463, 184.22, -28.0634, 0.88 ) }
    dend_10 { pt3dadd( 178.431, 184.606, -26.928, 0.29 ) }
    dend_10 { pt3dadd( 178.41, 184.807, -26.2916, 0.22 ) }
    dend_10 { pt3dadd( 178.396, 184.952, -25.8234, 0.44 ) }
    dend_10 { pt3dadd( 178.399, 185.083, -25.406, 0.22 ) }
    dend_10 { pt3dadd( 178.748, 185.396, -25.0197, 0.59 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.58827, 102.417, -69.2214, 1.77 ) }
    dend_8 { pt3dadd( 3.0869, 102.598, -73.557, 1.77 ) }
    dend_8 { pt3dadd( 3.59167, 103.06, -77.6251, 1.47 ) }
    dend_8 { pt3dadd( 3.86212, 103.45, -79.9182, 1.18 ) }
    dend_8 { pt3dadd( 4.10796, 103.957, -82.3293, 1.11 ) }
    dend_8 { pt3dadd( 4.31155, 104.52, -84.7029, 0.88 ) }
    dend_8 { pt3dadd( 4.37039, 104.763, -85.6561, 0.66 ) }
    dend_8 { pt3dadd( 4.41535, 105.36, -87.4809, 0.96 ) }
    dend_8 { pt3dadd( 4.36829, 106.151, -89.4769, 1.11 ) }
    dend_8 { pt3dadd( 4.24108, 106.828, -91.2163, 1.33 ) }
    dend_8 { pt3dadd( 4.14036, 107.153, -92.1568, 1.62 ) }
    dend_8 { pt3dadd( 3.79126, 107.916, -94.5917, 1.47 ) }
    dend_8 { pt3dadd( 3.01571, 109.22, -99.1332, 0.96 ) }
    dend_8 { pt3dadd( 2.57601, 109.844, -101.341, 0.96 ) }
    dend_8 { pt3dadd( 1.94594, 110.689, -104.236, 1.55 ) }
    dend_8 { pt3dadd( 1.34638, 111.496, -106.984, 1.33 ) }
    dend_8 { pt3dadd( 0.882092, 112.148, -109.195, 1.62 ) }
    dend_8 { pt3dadd( 0.278794, 113.026, -112.085, 1.11 ) }
    dend_8 { pt3dadd( 0.0686269, 113.33, -113.058, 0.59 ) }
    dend_8 { pt3dadd( -0.623047, 114.351, -116.261, 0.88 ) }
    dend_8 { pt3dadd( -1.14282, 115.17, -118.661, 1.25 ) }
    dend_8 { pt3dadd( -1.58861, 115.906, -120.689, 1.4 ) }
    dend_8 { pt3dadd( -2.11767, 116.811, -123.1, 0.52 ) }
    dend_8 { pt3dadd( -2.61994, 117.704, -125.323, 0.59 ) }
    dend_8 { pt3dadd( -2.92252, 118.215, -126.64, 0.37 ) }
    dend_8 { pt3dadd( -3.10707, 118.492, -127.329, 0.59 ) }
    dend_8 { pt3dadd( -3.50831, 119.048, -128.677, 0.44 ) }
    dend_8 { pt3dadd( -4.09269, 119.842, -130.548, 0.37 ) }
    dend_8 { pt3dadd( -4.75439, 120.782, -132.689, 1.47 ) }
    dend_8 { pt3dadd( -5.63438, 122.071, -135.507, 1.84 ) }
    dend_8 { pt3dadd( -6.5452, 123.417, -138.323, 0.52 ) }
    dend_8 { pt3dadd( -7.14702, 124.307, -140.062, 0.52 ) }
    dend_8 { pt3dadd( -7.50453, 124.825, -140.988, 1.18 ) }
    dend_8 { pt3dadd( -7.86015, 125.288, -141.748, 1.18 ) }
    dend_8 { pt3dadd( -9.1734, 126.87, -144.058, 0.22 ) }
    dend_8 { pt3dadd( -9.48607, 127.244, -144.51, 0.37 ) }
    dend_8 { pt3dadd( -10.0782, 127.918, -145.293, 0.96 ) }
    dend_8 { pt3dadd( -10.8496, 128.752, -146.278, 1.25 ) }
    dend_8 { pt3dadd( -12.4421, 130.371, -148.295, 0.22 ) }
    dend_8 { pt3dadd( -12.8184, 130.73, -148.812, 0.37 ) }
    dend_8 { pt3dadd( -13.1484, 131.042, -149.302, 0.37 ) }
    dend_8 { pt3dadd( -14.3046, 132.185, -151.32, 1.11 ) }
    dend_8 { pt3dadd( -14.5922, 132.483, -151.883, 1.55 ) }
    dend_8 { pt3dadd( -14.8204, 132.739, -152.367, 1.69 ) }
    dend_8 { pt3dadd( -16.4279, 134.643, -156.207, 0.29 ) }
    dend_8 { pt3dadd( -16.7405, 135.043, -157.111, 0.29 ) }
    dend_8 { pt3dadd( -17.3608, 135.991, -159.335, 1.03 ) }
    dend_8 { pt3dadd( -17.5388, 136.341, -160.19, 0.81 ) }
    dend_8 { pt3dadd( -17.6633, 136.743, -161.203, 1.11 ) }
    dend_8 { pt3dadd( -17.779, 137.585, -163.324, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( -17.7443, 139.189, -167.397, 0.59 ) }
    dend_8 { pt3dadd( -17.7098, 139.754, -168.855, 1.18 ) }
    dend_8 { pt3dadd( -17.6488, 140.445, -170.659, 1.33 ) }
    dend_8 { pt3dadd( -17.4735, 141.905, -174.428, 0.52 ) }
    dend_8 { pt3dadd( -17.3855, 142.465, -175.807, 0.81 ) }
    dend_8 { pt3dadd( -17.2855, 143.136, -177.362, 0.81 ) }
    dend_8 { pt3dadd( -17.1469, 144.137, -179.525, 0.37 ) }
    dend_8 { pt3dadd( -17.101, 144.636, -180.626, 0.37 ) }
    dend_8 { pt3dadd( -17.0762, 145.04, -181.509, 0.22 ) }
    dend_8 { pt3dadd( -17.0311, 145.916, -183.391, 1.18 ) }
    dend_8 { pt3dadd( -16.9257, 147.435, -186.574, 1.33 ) }
    dend_8 { pt3dadd( -16.8278, 148.38, -188.497, 0.44 ) }
    dend_8 { pt3dadd( -16.6017, 149.543, -190.933, 0.74 ) }
    dend_8 { pt3dadd( -16.2567, 150.805, -193.614, 0.52 ) }
    dend_8 { pt3dadd( -16.0285, 151.408, -194.983, 0.66 ) }
    dend_8 { pt3dadd( -15.8054, 151.817, -195.974, 1.47 ) }
    dend_8 { pt3dadd( -15.3771, 152.395, -197.418, 1.55 ) }
    dend_8 { pt3dadd( -14.1248, 153.756, -201.16, 0.96 ) }
    dend_8 { pt3dadd( -13.4905, 154.285, -202.656, 0.37 ) }
    dend_8 { pt3dadd( -12.2561, 155.176, -205.362, 0.29 ) }
    dend_8 { pt3dadd( -11.6223, 155.633, -206.808, 0.81 ) }
    dend_8 { pt3dadd( -11.2437, 155.938, -207.763, 1.25 ) }
    dend_8 { pt3dadd( -10.6252, 156.562, -209.523, 1.25 ) }
    dend_8 { pt3dadd( -10.2207, 157.017, -210.948, 0.59 ) }
    dend_8 { pt3dadd( -9.58047, 157.612, -213.585, 0.44 ) }
    dend_8 { pt3dadd( -9.04208, 157.931, -215.988, 0.74 ) }
    dend_8 { pt3dadd( -8.46635, 158.09, -218.662, 1.03 ) }
    dend_8 { pt3dadd( -8.11505, 158.036, -220.122, 1.25 ) }
    dend_8 { pt3dadd( -6.77245, 157.357, -225.014, 0.74 ) }
    dend_8 { pt3dadd( -5.88128, 156.611, -227.923, 0.22 ) }
    dend_8 { pt3dadd( -5.1033, 155.783, -229.864, 0.96 ) }
    dend_8 { pt3dadd( -4.90307, 155.541, -230.267, 0.96 ) }
    dend_8 { pt3dadd( -4.03924, 154.397, -231.711, 0.29 ) }
    dend_8 { pt3dadd( -3.54866, 153.742, -232.335, 0.52 ) }
    dend_8 { pt3dadd( -2.88439, 152.918, -232.894, 0.22 ) }
    dend_8 { pt3dadd( -2.08293, 152.042, -233.433, 0.22 ) }
    dend_8 { pt3dadd( -1.54301, 151.502, -233.729, 0.96 ) }
    dend_8 { pt3dadd( -1.11087, 151.099, -233.925, 0.96 ) }
    dend_8 { pt3dadd( 0.996731, 149.277, -234.625, 0.22 ) }
    dend_8 { pt3dadd( 1.7859, 148.644, -234.796, 0.44 ) }
    dend_8 { pt3dadd( 2.43301, 148.164, -234.853, 0.44 ) }
    dend_8 { pt3dadd( 3.87136, 147.136, -234.796, 0.15 ) }
    dend_8 { pt3dadd( 5.03556, 146.307, -234.744, 0.15 ) }
    dend_8 { pt3dadd( 5.9181, 145.685, -234.746, 0.22 ) }
    dend_8 { pt3dadd( 6.57713, 145.227, -234.808, 0.81 ) }
    dend_8 { pt3dadd( 7.67982, 144.446, -234.892, 1.11 ) }
    dend_8 { pt3dadd( 8.13864, 144.102, -234.966, 1.11 ) }
    dend_8 { pt3dadd( 10.2391, 142.372, -236.26, 0.15 ) }
    dend_8 { pt3dadd( 10.9251, 141.746, -237.215, 0.37 ) }
    dend_8 { pt3dadd( 11.2205, 141.455, -237.784, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.58827, 102.417, -69.2214, 0.29 ) }
    dend_5 { pt3dadd( 1.48322, 103.759, -69.2447, 0.29 ) }
    dend_5 { pt3dadd( 0.749431, 104.631, -69.2979, 0.22 ) }
    dend_5 { pt3dadd( 0.469212, 104.957, -69.3312, 0.74 ) }
    dend_5 { pt3dadd( 0.197126, 105.276, -69.3854, 0.74 ) }
    dend_5 { pt3dadd( -0.299481, 105.85, -69.5098, 0.22 ) }
    dend_5 { pt3dadd( -0.819543, 106.44, -69.6672, 0.37 ) }
    dend_5 { pt3dadd( -1.22371, 106.88, -69.8285, 0.22 ) }
    dend_5 { pt3dadd( -1.67863, 107.358, -70.0342, 0.52 ) }
    dend_5 { pt3dadd( -2.10792, 107.784, -70.2607, 0.52 ) }
    dend_5 { pt3dadd( -2.6312, 108.278, -70.5917, 0.22 ) }
    dend_5 { pt3dadd( -2.95343, 108.549, -70.833, 0.22 ) }
    dend_5 { pt3dadd( -3.49604, 108.959, -71.2445, 1.47 ) }
    dend_5 { pt3dadd( -3.79566, 109.173, -71.4574, 1.92 ) }
    dend_5 { pt3dadd( -4.3, 109.516, -71.7952, 2.06 ) }
    dend_5 { pt3dadd( -4.78725, 109.843, -72.0969, 1.69 ) }
    dend_5 { pt3dadd( -5.88766, 110.598, -72.7638, 0.44 ) }
    dend_5 { pt3dadd( -6.63552, 111.122, -73.1825, 0.22 ) }
    dend_5 { pt3dadd( -7.18889, 111.523, -73.4867, 0.52 ) }
    dend_5 { pt3dadd( -7.5345, 111.781, -73.6745, 0.66 ) }
    dend_5 { pt3dadd( -8.35274, 112.435, -74.2027, 0.22 ) }
    dend_5 { pt3dadd( -8.71951, 112.754, -74.4683, 0.22 ) }
    dend_5 { pt3dadd( -9.24537, 113.266, -74.8939, 1.47 ) }
    dend_5 { pt3dadd( -9.57587, 113.616, -75.2079, 1.77 ) }
    dend_5 { pt3dadd( -9.96334, 114.061, -75.6123, 1.99 ) }
    dend_5 { pt3dadd( -11.3232, 115.749, -77.2189, 0.22 ) }
    dend_5 { pt3dadd( -11.8444, 116.456, -77.9025, 0.22 ) }
    dend_5 { pt3dadd( -12.1734, 116.923, -78.362, 0.96 ) }
    dend_5 { pt3dadd( -12.5169, 117.431, -78.8592, 1.03 ) }
    dend_5 { pt3dadd( -12.9297, 118.054, -79.4379, 0.22 ) }
    dend_5 { pt3dadd( -13.3739, 118.751, -80.0366, 0.22 ) }
    dend_5 { pt3dadd( -13.6031, 119.12, -80.3415, 0.81 ) }
    dend_5 { pt3dadd( -13.8279, 119.476, -80.6655, 0.96 ) }
    dend_5 { pt3dadd( -14.3137, 120.186, -81.3887, 0.22 ) }
    dend_5 { pt3dadd( -14.6091, 120.58, -81.8142, 0.22 ) }
    dend_5 { pt3dadd( -15.0772, 121.179, -82.5078, 1.11 ) }
    dend_5 { pt3dadd( -15.2928, 121.449, -82.8273, 1.4 ) }
    dend_5 { pt3dadd( -15.5233, 121.728, -83.1756, 1.4 ) }
    dend_5 { pt3dadd( -16.3142, 122.641, -84.368, 0.22 ) }
    dend_5 { pt3dadd( -16.6744, 123.027, -84.8819, 0.22 ) }
    dend_5 { pt3dadd( -17.2194, 123.564, -85.6053, 0.96 ) }
    dend_5 { pt3dadd( -17.5451, 123.861, -86.0293, 1.18 ) }
    dend_5 { pt3dadd( -18.2922, 124.472, -86.9891, 0.22 ) }
    dend_5 { pt3dadd( -18.6105, 124.712, -87.3894, 0.22 ) }
    dend_5 { pt3dadd( -19.1713, 125.105, -88.08, 1.55 ) }
    dend_5 { pt3dadd( -19.4662, 125.309, -88.4389, 1.99 ) }
    dend_5 { pt3dadd( -20.0643, 125.735, -89.1741, 1.99 ) }
    dend_5 { pt3dadd( -21.3376, 126.722, -90.8188, 0.22 ) }
    dend_5 { pt3dadd( -21.5759, 126.93, -91.1558, 0.44 ) }
    dend_5 { pt3dadd( -21.6882, 127.053, -91.3322, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( -22.0246, 127.527, -91.926, 0.22 ) }
    dend_5 { pt3dadd( -22.5024, 128.394, -92.7889, 1.25 ) }
    dend_5 { pt3dadd( -22.7315, 128.917, -93.2003, 1.62 ) }
    dend_5 { pt3dadd( -22.8589, 129.299, -93.4546, 1.62 ) }
    dend_5 { pt3dadd( -23.2145, 130.368, -94.1315, 0.22 ) }
    dend_5 { pt3dadd( -23.4005, 130.931, -94.4823, 0.22 ) }
    dend_5 { pt3dadd( -23.5871, 131.529, -94.8441, 0.29 ) }
    dend_5 { pt3dadd( -23.8069, 132.201, -95.2102, 0.66 ) }
    dend_5 { pt3dadd( -23.9471, 132.609, -95.4223, 0.66 ) }
    dend_5 { pt3dadd( -24.25, 133.405, -95.8362, 0.22 ) }
    dend_5 { pt3dadd( -24.7289, 134.493, -96.4385, 1.55 ) }
    dend_5 { pt3dadd( -24.9848, 135.045, -96.7597, 1.77 ) }
    dend_5 { pt3dadd( -25.2042, 135.55, -97.0633, 1.92 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 13/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -25.2042, 135.55, -97.0633, 0.22 ) }
    dend_7 { pt3dadd( -25.4102, 137.012, -98.2214, 0.22 ) }
    dend_7 { pt3dadd( -25.4921, 137.31, -98.4485, 0.44 ) }
    dend_7 { pt3dadd( -25.5466, 137.459, -98.565, 0.44 ) }
    dend_7 { pt3dadd( -25.7473, 137.931, -98.9454, 0.22 ) }
    dend_7 { pt3dadd( -25.9096, 138.269, -99.2217, 0.59 ) }
    dend_7 { pt3dadd( -26.0654, 138.575, -99.4775, 0.59 ) }
    dend_7 { pt3dadd( -26.454, 139.158, -100.004, 0.22 ) }
    dend_7 { pt3dadd( -26.6274, 139.406, -100.251, 0.22 ) }
    dend_7 { pt3dadd( -26.9874, 139.891, -100.748, 1.11 ) }
    dend_7 { pt3dadd( -27.1355, 140.078, -100.948, 1.33 ) }
    dend_7 { pt3dadd( -27.2659, 140.259, -101.155, 1.33 ) }
    dend_7 { pt3dadd( -27.8147, 141.123, -102.14, 0.22 ) }
    dend_7 { pt3dadd( -28.0597, 141.597, -102.658, 0.22 ) }
    dend_7 { pt3dadd( -28.2693, 142.109, -103.206, 1.33 ) }
    dend_7 { pt3dadd( -28.3448, 142.403, -103.545, 1.69 ) }
    dend_7 { pt3dadd( -28.4468, 143.4, -104.82, 0.22 ) }
    dend_7 { pt3dadd( -28.4453, 143.756, -105.298, 0.22 ) }
    dend_7 { pt3dadd( -28.3726, 144.18, -105.919, 1.11 ) }
    dend_7 { pt3dadd( -28.2353, 144.55, -106.513, 1.4 ) }
    dend_7 { pt3dadd( -27.7866, 145.328, -107.876, 1.11 ) }
    dend_7 { pt3dadd( -27.3418, 145.913, -109.024, 1.03 ) }
    dend_7 { pt3dadd( -27.2006, 146.076, -109.37, 1.55 ) }
    dend_7 { pt3dadd( -26.8063, 146.505, -110.33, 1.69 ) }
    dend_7 { pt3dadd( -26.2693, 147.08, -111.667, 0.74 ) }
    dend_7 { pt3dadd( -25.6569, 147.763, -113.231, 1.4 ) }
    dend_7 { pt3dadd( -24.9029, 148.716, -115.247, 1.18 ) }
    dend_7 { pt3dadd( -24.608, 149.118, -116.072, 1.55 ) }
    dend_7 { pt3dadd( -24.3904, 149.456, -116.746, 1.69 ) }
    dend_7 { pt3dadd( -23.9463, 150.364, -118.403, 1.18 ) }
    dend_7 { pt3dadd( -23.7936, 150.788, -119.124, 0.59 ) }
    dend_7 { pt3dadd( -23.543, 151.777, -120.609, 1.33 ) }
    dend_7 { pt3dadd( -23.4467, 152.269, -121.25, 1.77 ) }
    dend_7 { pt3dadd( -23.3064, 153.008, -122.134, 0.52 ) }
    dend_7 { pt3dadd( -23.2099, 153.524, -122.703, 1.25 ) }
    dend_7 { pt3dadd( -23.1002, 154.236, -123.435, 1.11 ) }
    dend_7 { pt3dadd( -22.9798, 155.215, -124.433, 0.22 ) }
    dend_7 { pt3dadd( -22.9062, 155.906, -125.154, 0.22 ) }
    dend_7 { pt3dadd( -22.8586, 156.621, -125.905, 1.55 ) }
    dend_7 { pt3dadd( -22.8532, 157.139, -126.465, 1.69 ) }
    dend_7 { pt3dadd( -22.9028, 158.233, -127.71, 0.15 ) }
    dend_7 { pt3dadd( -22.9573, 158.671, -128.226, 0.81 ) }
    dend_7 { pt3dadd( -23.0605, 159.101, -128.753, 1.03 ) }
    dend_7 { pt3dadd( -23.3182, 159.839, -129.653, 0.22 ) }
    dend_7 { pt3dadd( -23.5239, 160.296, -130.199, 1.03 ) }
    dend_7 { pt3dadd( -23.7408, 160.662, -130.602, 1.47 ) }
    dend_7 { pt3dadd( -24.0382, 161.084, -131.032, 1.47 ) }
    dend_7 { pt3dadd( -24.6301, 161.854, -131.8, 0.22 ) }
    dend_7 { pt3dadd( -24.8892, 162.17, -132.109, 0.74 ) }
    dend_7 { pt3dadd( -25.0764, 162.391, -132.325, 0.88 ) }
    dend_7 { pt3dadd( -25.91, 163.367, -133.257, 0.22 ) }
    dend_7 { pt3dadd( -26.3701, 163.904, -133.755, 1.11 ) }
    dend_7 { pt3dadd( -26.623, 164.203, -134.029, 1.4 ) }
    dend_7 { pt3dadd( -27.1548, 164.869, -134.664, 0.22 ) }
    dend_7 { pt3dadd( -27.3234, 165.1, -134.875, 0.52 ) }
    dend_7 { pt3dadd( -27.5846, 165.516, -135.235, 0.22 ) }
    dend_7 { pt3dadd( -27.772, 165.9, -135.542, 0.52 ) }
    dend_7 { pt3dadd( -27.8451, 166.068, -135.661, 0.52 ) }
    dend_7 { pt3dadd( -28.0593, 166.578, -135.988, 0.22 ) }
    dend_7 { pt3dadd( -28.296, 167.173, -136.36, 1.33 ) }
    dend_7 { pt3dadd( -28.4334, 167.596, -136.663, 1.55 ) }
    dend_7 { pt3dadd( -28.6523, 168.424, -137.267, 0.22 ) }
    dend_7 { pt3dadd( -28.8001, 169.083, -137.774, 0.22 ) }
    dend_7 { pt3dadd( -28.8451, 169.726, -138.373, 1.47 ) }
    dend_7 { pt3dadd( -28.8389, 170.139, -138.766, 1.69 ) }
    dend_7 { pt3dadd( -28.7614, 171.557, -140.062, 0.22 ) }
    dend_7 { pt3dadd( -28.6915, 172.295, -140.724, 1.99 ) }
    dend_7 { pt3dadd( -28.6276, 172.783, -141.166, 2.36 ) }
    dend_7 { pt3dadd( -28.2111, 175.411, -143.589, 0.22 ) }
    dend_7 { pt3dadd( -28.062, 176.463, -144.544, 0.44 ) }
    dend_7 { pt3dadd( -27.9739, 177.324, -145.296, 0.22 ) }
    dend_7 { pt3dadd( -27.9362, 178.84, -146.54, 1.84 ) }
    dend_7 { pt3dadd( -27.957, 179.248, -146.863, 2.28 ) }
    dend_7 { pt3dadd( -28.0159, 179.648, -147.152, 2.28 ) }
    dend_7 { pt3dadd( -28.4219, 181.174, -148.212, 0.22 ) }
    dend_7 { pt3dadd( -28.5526, 181.587, -148.522, 0.74 ) }
    dend_7 { pt3dadd( -29.0291, 182.929, -149.57, 0.22 ) }
    dend_7 { pt3dadd( -29.2549, 183.502, -149.969, 0.74 ) }
    dend_7 { pt3dadd( -29.3782, 183.821, -150.181, 0.81 ) }
    dend_7 { pt3dadd( -29.9719, 185.404, -151.218, 0.15 ) }
    dend_7 { pt3dadd( -30.1589, 185.961, -151.606, 1.11 ) }
    dend_7 { pt3dadd( -30.3429, 186.542, -152.032, 1.11 ) }
    dend_7 { pt3dadd( -30.7495, 187.922, -153.104, 0.22 ) }
    dend_7 { pt3dadd( -30.8692, 188.316, -153.414, 0.66 ) }
    dend_7 { pt3dadd( -30.9715, 188.619, -153.646, 0.81 ) }
    dend_7 { pt3dadd( -31.3549, 189.529, -154.326, 0.22 ) }
    dend_7 { pt3dadd( -31.5514, 189.915, -154.67, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -31.7072, 190.153, -154.94, 1.33 ) }
    dend_7 { pt3dadd( -32.0701, 190.556, -155.611, 0.22 ) }
    dend_7 { pt3dadd( -32.2409, 190.719, -155.931, 0.66 ) }
    dend_7 { pt3dadd( -32.3922, 190.837, -156.208, 0.88 ) }
    dend_7 { pt3dadd( -33.0592, 191.256, -157.377, 0.22 ) }
    dend_7 { pt3dadd( -33.4749, 191.5, -158.144, 0.22 ) }
    dend_7 { pt3dadd( -33.6791, 191.613, -158.52, 0.96 ) }
    dend_7 { pt3dadd( -33.9426, 191.754, -159.009, 1.11 ) }
    dend_7 { pt3dadd( -34.2925, 191.954, -159.63, 0.22 ) }
    dend_7 { pt3dadd( -34.5407, 192.104, -160.012, 0.59 ) }
    dend_7 { pt3dadd( -34.6413, 192.166, -160.128, 0.59 ) }
    dend_7 { pt3dadd( -34.9256, 192.35, -160.395, 0.22 ) }
    dend_7 { pt3dadd( -35.222, 192.561, -160.665, 0.44 ) }
    dend_7 { pt3dadd( -35.3682, 192.669, -160.796, 0.52 ) }
    dend_7 { pt3dadd( -35.9699, 193.161, -161.362, 0.15 ) }
    dend_7 { pt3dadd( -36.1627, 193.326, -161.549, 0.44 ) }
    dend_7 { pt3dadd( -36.7548, 193.846, -162.16, 0.22 ) }
    dend_7 { pt3dadd( -37.0639, 194.134, -162.514, 0.44 ) }
    dend_7 { pt3dadd( -37.2108, 194.277, -162.69, 0.44 ) }
    dend_7 { pt3dadd( -37.4524, 194.525, -162.979, 0.22 ) }
    dend_7 { pt3dadd( -37.6877, 194.773, -163.254, 0.59 ) }
    dend_7 { pt3dadd( -37.9983, 195.098, -163.611, 0.59 ) }
    dend_7 { pt3dadd( -38.4037, 195.522, -164.075, 0.22 ) }
    dend_7 { pt3dadd( -38.754, 195.917, -164.504, 0.22 ) }
    dend_7 { pt3dadd( -39.1259, 196.368, -164.993, 0.81 ) }
    dend_7 { pt3dadd( -39.2158, 196.487, -165.124, 0.81 ) }
    dend_7 { pt3dadd( -39.4129, 196.781, -165.454, 0.22 ) }
    dend_7 { pt3dadd( -39.6152, 197.105, -165.81, 0.44 ) }
    dend_7 { pt3dadd( -40.082, 197.912, -166.687, 0.22 ) }
    dend_7 { pt3dadd( -40.1957, 198.119, -166.916, 0.96 ) }
    dend_7 { pt3dadd( -40.4106, 198.513, -167.364, 1.11 ) }
    dend_7 { pt3dadd( -41.0344, 199.623, -168.629, 0.22 ) }
    dend_7 { pt3dadd( -41.3222, 200.128, -169.191, 0.22 ) }
    dend_7 { pt3dadd( -41.4279, 200.312, -169.389, 0.74 ) }
    dend_7 { pt3dadd( -41.5708, 200.553, -169.64, 0.96 ) }
    dend_7 { pt3dadd( -41.7347, 200.828, -169.922, 1.18 ) }
    dend_7 { pt3dadd( -41.8471, 201.028, -170.13, 1.18 ) }
    dend_7 { pt3dadd( -42.2321, 201.777, -170.89, 0.15 ) }
    dend_7 { pt3dadd( -42.3869, 202.096, -171.234, 0.52 ) }
    dend_7 { pt3dadd( -42.4432, 202.223, -171.369, 0.81 ) }
    dend_7 { pt3dadd( -42.5173, 202.408, -171.553, 0.81 ) }
    dend_7 { pt3dadd( -42.8246, 203.237, -172.344, 0.22 ) }
    dend_7 { pt3dadd( -42.9937, 203.714, -172.774, 0.96 ) }
    dend_7 { pt3dadd( -43.1119, 204.058, -173.057, 1.47 ) }
    dend_7 { pt3dadd( -43.4311, 205.048, -173.799, 0.22 ) }
    dend_7 { pt3dadd( -43.6189, 205.685, -174.243, 0.22 ) }
    dend_7 { pt3dadd( -43.8031, 206.364, -174.699, 1.03 ) }
    dend_7 { pt3dadd( -43.8713, 206.631, -174.87, 1.03 ) }
    dend_7 { pt3dadd( -43.9827, 207.169, -175.218, 0.22 ) }
    dend_7 { pt3dadd( -44.0459, 207.591, -175.493, 0.44 ) }
    dend_7 { pt3dadd( -44.0917, 208.015, -175.777, 0.37 ) }
    dend_7 { pt3dadd( -44.1411, 208.646, -176.21, 0.74 ) }
    dend_7 { pt3dadd( -44.156, 208.882, -176.374, 0.96 ) }
    dend_7 { pt3dadd( -44.2363, 210.431, -177.498, 0.22 ) }
    dend_7 { pt3dadd( -44.2688, 211.233, -178.105, 0.74 ) }
    dend_7 { pt3dadd( -44.2778, 211.453, -178.269, 1.11 ) }
    dend_7 { pt3dadd( -44.287, 211.68, -178.434, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -25.2042, 135.55, -97.0633, 0.22 ) }
    dend_6 { pt3dadd( -26.4372, 136.551, -97.4094, 0.22 ) }
    dend_6 { pt3dadd( -26.7825, 136.841, -97.5044, 0.22 ) }
    dend_6 { pt3dadd( -27.0179, 137.074, -97.5649, 0.66 ) }
    dend_6 { pt3dadd( -27.2534, 137.332, -97.6229, 0.88 ) }
    dend_6 { pt3dadd( -27.4487, 137.565, -97.6532, 0.88 ) }
    dend_6 { pt3dadd( -28.338, 138.668, -97.7451, 0.15 ) }
    dend_6 { pt3dadd( -28.4376, 138.803, -97.749, 0.29 ) }
    dend_6 { pt3dadd( -29.3619, 140.011, -97.7385, 0.22 ) }
    dend_6 { pt3dadd( -29.6602, 140.388, -97.7268, 0.37 ) }
    dend_6 { pt3dadd( -30.3881, 141.273, -97.7009, 0.22 ) }
    dend_6 { pt3dadd( -31.0096, 141.992, -97.6654, 1.33 ) }
    dend_6 { pt3dadd( -31.1381, 142.131, -97.6541, 1.62 ) }
    dend_6 { pt3dadd( -32.1735, 143.139, -97.5569, 0.22 ) }
    dend_6 { pt3dadd( -32.934, 143.778, -97.4689, 0.22 ) }
    dend_6 { pt3dadd( -34.2943, 144.786, -97.2947, 0.22 ) }
    dend_6 { pt3dadd( -34.8754, 145.174, -97.214, 0.96 ) }
    dend_6 { pt3dadd( -35.3549, 145.464, -97.1292, 1.18 ) }
    dend_6 { pt3dadd( -36.4383, 146.029, -96.881, 0.22 ) }
    dend_6 { pt3dadd( -37.1843, 146.338, -96.6731, 0.22 ) }
    dend_6 { pt3dadd( -37.9743, 146.615, -96.4264, 1.11 ) }
    dend_6 { pt3dadd( -38.2052, 146.686, -96.3492, 1.4 ) }
    dend_6 { pt3dadd( -38.6137, 146.833, -96.2228, 1.4 ) }
    dend_6 { pt3dadd( -39.8721, 147.396, -95.8654, 0.22 ) }
    dend_6 { pt3dadd( -40.4934, 147.755, -95.6934, 0.22 ) }
    dend_6 { pt3dadd( -41.0382, 148.146, -95.5642, 0.44 ) }
    dend_6 { pt3dadd( -41.2292, 148.308, -95.5246, 0.44 ) }
    dend_6 { pt3dadd( -42.0883, 149.115, -95.372, 0.22 ) }
    dend_6 { pt3dadd( -42.5474, 149.604, -95.3014, 0.66 ) }
    dend_6 { pt3dadd( -42.9285, 150.064, -95.2538, 0.66 ) }
    dend_6 { pt3dadd( -43.4135, 150.677, -95.1729, 0.22 ) }
    dend_6 { pt3dadd( -43.6894, 151.012, -95.115, 0.44 ) }
    dend_6 { pt3dadd( -43.9434, 151.306, -95.0562, 0.44 ) }
    dend_6 { pt3dadd( -44.4383, 151.86, -94.9262, 0.22 ) }
    dend_6 { pt3dadd( -44.6308, 152.073, -94.8717, 0.37 ) }
    dend_6 { pt3dadd( -45.3235, 152.846, -94.6771, 0.22 ) }
    dend_6 { pt3dadd( -45.6471, 153.221, -94.5684, 0.52 ) }
    dend_6 { pt3dadd( -45.8077, 153.411, -94.506, 0.74 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_2 = new SectionList()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_31, dend_22, dend_17, dend_0, dend_33, dend_32, dend_24, dend_23, dend_21, dend_18, dend_16, dend_1, dend_28, dend_25, dend_20, dend_19, dend_15, dend_2, dend_30, dend_29, dend_27, dend_26, dend_12, dend_3, dend_14, dend_13, dend_9, dend_4, dend_11, dend_10, dend_8, dend_5, dend_7, dend_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_33 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_21 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_22 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_31 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_3 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_23 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 5
    dend_32 nseg = 5
    dend_21 nseg = 17
    dend_16 nseg = 7
    dend_28 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 9
    dend_30 nseg = 5
    dend_29 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 9
    dend_12 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 9
    dend_9 nseg = 5
    dend_4 nseg = 5
    dend_11 nseg = 13
    dend_10 nseg = 9
    dend_8 nseg = 11
    dend_5 nseg = 3
    dend_7 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_NBC_a3ddbb0af0_0_0


